using System;
using System.Collections.Generic;
using System.Linq;
using System.Reflection;
using System.Threading;
using Microsoft.ProgramSynthesis.Conditionals.Build;
using Microsoft.ProgramSynthesis.Conditionals.Learning;
using Microsoft.ProgramSynthesis.Conditionals.Learning.Clustering;
using Microsoft.ProgramSynthesis.Conditionals.Semantics;
using Microsoft.ProgramSynthesis.DslLibrary;
using Microsoft.ProgramSynthesis.Features;
using Microsoft.ProgramSynthesis.Learning;
using Microsoft.ProgramSynthesis.Rules;
using Microsoft.ProgramSynthesis.Utils;

namespace Microsoft.ProgramSynthesis.Conditionals
{
	// Token: 0x02000A15 RID: 2581
	public static class Language
	{
		// Token: 0x17000ADA RID: 2778
		// (get) Token: 0x06003E24 RID: 15908 RVA: 0x000C17C6 File Offset: 0x000BF9C6
		public static Grammar Grammar
		{
			get
			{
				return Language._grammar.Value;
			}
		}

		// Token: 0x17000ADB RID: 2779
		// (get) Token: 0x06003E25 RID: 15909 RVA: 0x000C17D2 File Offset: 0x000BF9D2
		public static GrammarBuilders Build
		{
			get
			{
				return GrammarBuilders.Instance(Language.Grammar);
			}
		}

		// Token: 0x06003E26 RID: 15910 RVA: 0x000C17E0 File Offset: 0x000BF9E0
		private static Grammar Initialize()
		{
			Grammar uninitializedObject = CSharpUtils.GetUninitializedObject<Grammar>();
			Dictionary<Symbol, List<GrammarRule>> dictionary = new Dictionary<Symbol, List<GrammarRule>>();
			Symbol uninitializedObject2 = CSharpUtils.GetUninitializedObject<Symbol>();
			ResolvedType uninitializedObject3 = CSharpUtils.GetUninitializedObject<ResolvedType>();
			Type typeFromHandle = typeof(LearningCacheSubstring);
			List<GrammarRule> list = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			TerminalRule uninitializedObject4 = CSharpUtils.GetUninitializedObject<TerminalRule>();
			Optional<int>[] array = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 0);
			List<Symbol> list2 = Enumerable.Repeat<Symbol>(null, 0).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary2 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			Symbol uninitializedObject5 = CSharpUtils.GetUninitializedObject<Symbol>();
			ResolvedType uninitializedObject6 = CSharpUtils.GetUninitializedObject<ResolvedType>();
			Type typeFromHandle2 = typeof(RegularExpression);
			List<GrammarRule> list3 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			TerminalRule uninitializedObject7 = CSharpUtils.GetUninitializedObject<TerminalRule>();
			Optional<int>[] array2 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 0);
			List<Symbol> list4 = Enumerable.Repeat<Symbol>(null, 0).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary3 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			Symbol uninitializedObject8 = CSharpUtils.GetUninitializedObject<Symbol>();
			ResolvedType uninitializedObject9 = CSharpUtils.GetUninitializedObject<ResolvedType>();
			Type typeFromHandle3 = typeof(int);
			List<GrammarRule> list5 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			TerminalRule uninitializedObject10 = CSharpUtils.GetUninitializedObject<TerminalRule>();
			Optional<int>[] array3 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 0);
			List<Symbol> list6 = Enumerable.Repeat<Symbol>(null, 0).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary4 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			Symbol uninitializedObject11 = CSharpUtils.GetUninitializedObject<Symbol>();
			ResolvedType uninitializedObject12 = CSharpUtils.GetUninitializedObject<ResolvedType>();
			Type typeFromHandle4 = typeof(string);
			List<GrammarRule> list7 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			TerminalRule uninitializedObject13 = CSharpUtils.GetUninitializedObject<TerminalRule>();
			Optional<int>[] array4 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 0);
			List<Symbol> list8 = Enumerable.Repeat<Symbol>(null, 0).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary5 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			Symbol uninitializedObject14 = CSharpUtils.GetUninitializedObject<Symbol>();
			ResolvedType uninitializedObject15 = CSharpUtils.GetUninitializedObject<ResolvedType>();
			Type typeFromHandle5 = typeof(bool);
			List<GrammarRule> list9 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			ConversionRule uninitializedObject16 = CSharpUtils.GetUninitializedObject<ConversionRule>();
			ExternalSymbolUsage uninitializedObject17 = CSharpUtils.GetUninitializedObject<ExternalSymbolUsage>();
			Dictionary<Symbol, Symbol> dictionary6 = new Dictionary<Symbol, Symbol>();
			MethodReference methodReference = null;
			Optional<int>[] array5 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 1);
			Optional<int> optional = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list10 = Enumerable.Repeat<Symbol>(null, 1).ToList<Symbol>();
			Symbol uninitializedObject18 = CSharpUtils.GetUninitializedObject<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary7 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			List<GrammarRule> list11 = Enumerable.Repeat<GrammarRule>(null, 2).ToList<GrammarRule>();
			ConversionRule uninitializedObject19 = CSharpUtils.GetUninitializedObject<ConversionRule>();
			ExternalSymbolUsage uninitializedObject20 = CSharpUtils.GetUninitializedObject<ExternalSymbolUsage>();
			Dictionary<Symbol, Symbol> dictionary8 = new Dictionary<Symbol, Symbol>();
			MethodReference methodReference2 = null;
			Optional<int>[] array6 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 1);
			Optional<int> optional2 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list12 = Enumerable.Repeat<Symbol>(null, 1).ToList<Symbol>();
			Symbol uninitializedObject21 = CSharpUtils.GetUninitializedObject<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary9 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			BlackBoxRule uninitializedObject22 = CSharpUtils.GetUninitializedObject<BlackBoxRule>();
			MethodReference methodReference3 = MethodReference.WithoutReference<OperatorRule.OperatorSemantics>((object[] arg0) => Semantics.Disjunction((bool)arg0[0], (bool)arg0[1]));
			Optional<int>[] array7 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 2);
			Optional<int> optional3 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional4 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list13 = Enumerable.Repeat<Symbol>(null, 2).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary10 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			List<GrammarRule> list14 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			ConversionRule uninitializedObject23 = CSharpUtils.GetUninitializedObject<ConversionRule>();
			ExternalSymbolUsage uninitializedObject24 = CSharpUtils.GetUninitializedObject<ExternalSymbolUsage>();
			Dictionary<Symbol, Symbol> dictionary11 = new Dictionary<Symbol, Symbol>();
			MethodReference methodReference4 = null;
			Optional<int>[] array8 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 1);
			Optional<int> optional5 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list15 = Enumerable.Repeat<Symbol>(null, 1).ToList<Symbol>();
			Symbol uninitializedObject25 = CSharpUtils.GetUninitializedObject<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary12 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			List<GrammarRule> list16 = Enumerable.Repeat<GrammarRule>(null, 2).ToList<GrammarRule>();
			ConversionRule uninitializedObject26 = CSharpUtils.GetUninitializedObject<ConversionRule>();
			ExternalSymbolUsage uninitializedObject27 = CSharpUtils.GetUninitializedObject<ExternalSymbolUsage>();
			Dictionary<Symbol, Symbol> dictionary13 = new Dictionary<Symbol, Symbol>();
			MethodReference methodReference5 = null;
			Optional<int>[] array9 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 1);
			Optional<int> optional6 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list17 = Enumerable.Repeat<Symbol>(null, 1).ToList<Symbol>();
			Symbol uninitializedObject28 = CSharpUtils.GetUninitializedObject<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary14 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			BlackBoxRule uninitializedObject29 = CSharpUtils.GetUninitializedObject<BlackBoxRule>();
			MethodReference methodReference6 = MethodReference.WithoutReference<OperatorRule.OperatorSemantics>((object[] arg0) => Semantics.Conjunction((bool)arg0[0], (bool)arg0[1]));
			Optional<int>[] array10 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 2);
			Optional<int> optional7 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional8 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list18 = Enumerable.Repeat<Symbol>(null, 2).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary15 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			List<GrammarRule> list19 = Enumerable.Repeat<GrammarRule>(null, 2).ToList<GrammarRule>();
			ConversionRule uninitializedObject30 = CSharpUtils.GetUninitializedObject<ConversionRule>();
			ExternalSymbolUsage uninitializedObject31 = CSharpUtils.GetUninitializedObject<ExternalSymbolUsage>();
			Dictionary<Symbol, Symbol> dictionary16 = new Dictionary<Symbol, Symbol>();
			MethodReference methodReference7 = null;
			Optional<int>[] array11 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 1);
			Optional<int> optional9 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list20 = Enumerable.Repeat<Symbol>(null, 1).ToList<Symbol>();
			Symbol uninitializedObject32 = CSharpUtils.GetUninitializedObject<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary17 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			BlackBoxRule uninitializedObject33 = CSharpUtils.GetUninitializedObject<BlackBoxRule>();
			MethodReference methodReference8 = MethodReference.WithoutReference<OperatorRule.OperatorSemantics>((object[] arg0) => Semantics.Not((bool)arg0[0]));
			Optional<int>[] array12 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 1);
			Optional<int> optional10 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list21 = Enumerable.Repeat<Symbol>(null, 1).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary18 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			List<GrammarRule> list22 = Enumerable.Repeat<GrammarRule>(null, 15).ToList<GrammarRule>();
			BlackBoxRule uninitializedObject34 = CSharpUtils.GetUninitializedObject<BlackBoxRule>();
			MethodReference methodReference9 = MethodReference.WithoutReference<OperatorRule.OperatorSemantics>((object[] arg0) => Semantics.IsNullOrWhiteSpace((LearningCacheSubstring)arg0[0]));
			Optional<int>[] array13 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 1);
			Optional<int> optional11 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list23 = Enumerable.Repeat<Symbol>(null, 1).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary19 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			BlackBoxRule uninitializedObject35 = CSharpUtils.GetUninitializedObject<BlackBoxRule>();
			MethodReference methodReference10 = MethodReference.WithoutReference<OperatorRule.OperatorSemantics>((object[] arg0) => Semantics.IsNull((LearningCacheSubstring)arg0[0]));
			Optional<int>[] array14 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 1);
			Optional<int> optional12 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list24 = Enumerable.Repeat<Symbol>(null, 1).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary20 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			BlackBoxRule uninitializedObject36 = CSharpUtils.GetUninitializedObject<BlackBoxRule>();
			MethodReference methodReference11 = MethodReference.WithoutReference<OperatorRule.OperatorSemantics>((object[] arg0) => Semantics.IsWhiteSpace((LearningCacheSubstring)arg0[0]));
			Optional<int>[] array15 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 1);
			Optional<int> optional13 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list25 = Enumerable.Repeat<Symbol>(null, 1).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary21 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			BlackBoxRule uninitializedObject37 = CSharpUtils.GetUninitializedObject<BlackBoxRule>();
			MethodReference methodReference12 = MethodReference.WithoutReference<OperatorRule.OperatorSemantics>((object[] arg0) => Semantics.True());
			Optional<int>[] array16 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 0);
			List<Symbol> list26 = Enumerable.Repeat<Symbol>(null, 0).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary22 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			BlackBoxRule uninitializedObject38 = CSharpUtils.GetUninitializedObject<BlackBoxRule>();
			MethodReference methodReference13 = MethodReference.WithoutReference<OperatorRule.OperatorSemantics>((object[] arg0) => Semantics.StartsWithString((LearningCacheSubstring)arg0[0], (string)arg0[1]));
			Optional<int>[] array17 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 2);
			Optional<int> optional14 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional15 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list27 = Enumerable.Repeat<Symbol>(null, 2).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary23 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			BlackBoxRule uninitializedObject39 = CSharpUtils.GetUninitializedObject<BlackBoxRule>();
			MethodReference methodReference14 = MethodReference.WithoutReference<OperatorRule.OperatorSemantics>((object[] arg0) => Semantics.StartsWithDigit((LearningCacheSubstring)arg0[0]));
			Optional<int>[] array18 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 1);
			Optional<int> optional16 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list28 = Enumerable.Repeat<Symbol>(null, 1).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary24 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			BlackBoxRule uninitializedObject40 = CSharpUtils.GetUninitializedObject<BlackBoxRule>();
			MethodReference methodReference15 = MethodReference.WithoutReference<OperatorRule.OperatorSemantics>((object[] arg0) => Semantics.StartsWithLetter((LearningCacheSubstring)arg0[0]));
			Optional<int>[] array19 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 1);
			Optional<int> optional17 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list29 = Enumerable.Repeat<Symbol>(null, 1).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary25 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			BlackBoxRule uninitializedObject41 = CSharpUtils.GetUninitializedObject<BlackBoxRule>();
			MethodReference methodReference16 = MethodReference.WithoutReference<OperatorRule.OperatorSemantics>((object[] arg0) => Semantics.EndsWithString((LearningCacheSubstring)arg0[0], (string)arg0[1]));
			Optional<int>[] array20 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 2);
			Optional<int> optional18 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional19 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list30 = Enumerable.Repeat<Symbol>(null, 2).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary26 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			BlackBoxRule uninitializedObject42 = CSharpUtils.GetUninitializedObject<BlackBoxRule>();
			MethodReference methodReference17 = MethodReference.WithoutReference<OperatorRule.OperatorSemantics>((object[] arg0) => Semantics.EndsWithDigit((LearningCacheSubstring)arg0[0]));
			Optional<int>[] array21 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 1);
			Optional<int> optional20 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list31 = Enumerable.Repeat<Symbol>(null, 1).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary27 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			BlackBoxRule uninitializedObject43 = CSharpUtils.GetUninitializedObject<BlackBoxRule>();
			MethodReference methodReference18 = MethodReference.WithoutReference<OperatorRule.OperatorSemantics>((object[] arg0) => Semantics.EndsWithLetter((LearningCacheSubstring)arg0[0]));
			Optional<int>[] array22 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 1);
			Optional<int> optional21 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list32 = Enumerable.Repeat<Symbol>(null, 1).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary28 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			BlackBoxRule uninitializedObject44 = CSharpUtils.GetUninitializedObject<BlackBoxRule>();
			MethodReference methodReference19 = MethodReference.WithoutReference<OperatorRule.OperatorSemantics>((object[] arg0) => Semantics.ContainsString((LearningCacheSubstring)arg0[0], (string)arg0[1], (int)arg0[2]));
			Optional<int>[] array23 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 3);
			Optional<int> optional22 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional23 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional24 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list33 = Enumerable.Repeat<Symbol>(null, 3).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary29 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			BlackBoxRule uninitializedObject45 = CSharpUtils.GetUninitializedObject<BlackBoxRule>();
			MethodReference methodReference20 = MethodReference.WithoutReference<OperatorRule.OperatorSemantics>((object[] arg0) => Semantics.Matches((LearningCacheSubstring)arg0[0], (RegularExpression)arg0[1]));
			Optional<int>[] array24 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 2);
			Optional<int> optional25 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional26 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list34 = Enumerable.Repeat<Symbol>(null, 2).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary30 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			BlackBoxRule uninitializedObject46 = CSharpUtils.GetUninitializedObject<BlackBoxRule>();
			MethodReference methodReference21 = MethodReference.WithoutReference<OperatorRule.OperatorSemantics>((object[] arg0) => Semantics.StartsWith((LearningCacheSubstring)arg0[0], (RegularExpression)arg0[1]));
			Optional<int>[] array25 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 2);
			Optional<int> optional27 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional28 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list35 = Enumerable.Repeat<Symbol>(null, 2).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary31 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			BlackBoxRule uninitializedObject47 = CSharpUtils.GetUninitializedObject<BlackBoxRule>();
			MethodReference methodReference22 = MethodReference.WithoutReference<OperatorRule.OperatorSemantics>((object[] arg0) => Semantics.EndsWith((LearningCacheSubstring)arg0[0], (RegularExpression)arg0[1]));
			Optional<int>[] array26 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 2);
			Optional<int> optional29 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional30 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list36 = Enumerable.Repeat<Symbol>(null, 2).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary32 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			BlackBoxRule uninitializedObject48 = CSharpUtils.GetUninitializedObject<BlackBoxRule>();
			MethodReference methodReference23 = MethodReference.WithoutReference<OperatorRule.OperatorSemantics>((object[] arg0) => Semantics.Contains((LearningCacheSubstring)arg0[0], (RegularExpression)arg0[1], (int)arg0[2]));
			Optional<int>[] array27 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 3);
			Optional<int> optional31 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional32 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional33 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list37 = Enumerable.Repeat<Symbol>(null, 3).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary33 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			Dictionary<Symbol, List<GrammarRule>> dictionary34 = new Dictionary<Symbol, List<GrammarRule>>();
			List<GrammarRule> list38 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list39 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list40 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list41 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list42 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list43 = Enumerable.Repeat<GrammarRule>(null, 2).ToList<GrammarRule>();
			List<GrammarRule> list44 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list45 = Enumerable.Repeat<GrammarRule>(null, 2).ToList<GrammarRule>();
			List<GrammarRule> list46 = Enumerable.Repeat<GrammarRule>(null, 2).ToList<GrammarRule>();
			List<GrammarRule> list47 = Enumerable.Repeat<GrammarRule>(null, 15).ToList<GrammarRule>();
			Dictionary<Symbol, List<GrammarRule>> dictionary35 = new Dictionary<Symbol, List<GrammarRule>>();
			List<GrammarRule> list48 = Enumerable.Repeat<GrammarRule>(null, 2).ToList<GrammarRule>();
			List<GrammarRule> list49 = Enumerable.Repeat<GrammarRule>(null, 2).ToList<GrammarRule>();
			List<GrammarRule> list50 = Enumerable.Repeat<GrammarRule>(null, 2).ToList<GrammarRule>();
			List<GrammarRule> list51 = Enumerable.Repeat<GrammarRule>(null, 2).ToList<GrammarRule>();
			List<GrammarRule> list52 = Enumerable.Repeat<GrammarRule>(null, 2).ToList<GrammarRule>();
			List<GrammarRule> list53 = Enumerable.Repeat<GrammarRule>(null, 14).ToList<GrammarRule>();
			List<GrammarRule> list54 = Enumerable.Repeat<GrammarRule>(null, 3).ToList<GrammarRule>();
			List<GrammarRule> list55 = Enumerable.Repeat<GrammarRule>(null, 2).ToList<GrammarRule>();
			List<GrammarRule> list56 = Enumerable.Repeat<GrammarRule>(null, 4).ToList<GrammarRule>();
			Dictionary<string, GrammarRule> dictionary36 = new Dictionary<string, GrammarRule>();
			List<GrammarRule> list57 = Enumerable.Repeat<GrammarRule>(null, 27).ToList<GrammarRule>();
			List<FeatureInfo> list58 = Enumerable.Repeat<FeatureInfo>(null, 2).ToList<FeatureInfo>();
			FeatureInfo uninitializedObject49 = CSharpUtils.GetUninitializedObject<FeatureInfo>();
			Type typeFromHandle6 = typeof(double);
			List<Type> list59 = Enumerable.Repeat<Type>(null, 1).ToList<Type>();
			Type typeFromHandle7 = typeof(RankingScore);
			FeatureInfo uninitializedObject50 = CSharpUtils.GetUninitializedObject<FeatureInfo>();
			Type typeFromHandle8 = typeof(PredicateFeature);
			List<Type> list60 = Enumerable.Repeat<Type>(null, 1).ToList<Type>();
			Type typeFromHandle9 = typeof(RankingFeatureCollector);
			Dictionary<string, Grammar> dictionary37 = new Dictionary<string, Grammar>();
			List<GrammarType> list61 = Enumerable.Repeat<GrammarType>(null, 1).ToList<GrammarType>();
			ResolvedType uninitializedObject51 = CSharpUtils.GetUninitializedObject<ResolvedType>();
			Type typeFromHandle10 = typeof(Semantics);
			List<GrammarType> list62 = Enumerable.Repeat<GrammarType>(null, 1).ToList<GrammarType>();
			ResolvedType uninitializedObject52 = CSharpUtils.GetUninitializedObject<ResolvedType>();
			Type typeFromHandle11 = typeof(Witnesses);
			Dictionary<string, Symbol> dictionary38 = new Dictionary<string, Symbol>();
			object obj = optional33;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj, false);
			optional33 = (Optional<int>)obj;
			object obj2 = optional32;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj2, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj2, false);
			optional32 = (Optional<int>)obj2;
			object obj3 = optional31;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj3, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj3, false);
			optional31 = (Optional<int>)obj3;
			object obj4 = optional30;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj4, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj4, false);
			optional30 = (Optional<int>)obj4;
			object obj5 = optional29;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj5, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj5, false);
			optional29 = (Optional<int>)obj5;
			object obj6 = optional28;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj6, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj6, false);
			optional28 = (Optional<int>)obj6;
			object obj7 = optional27;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj7, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj7, false);
			optional27 = (Optional<int>)obj7;
			object obj8 = optional26;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj8, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj8, false);
			optional26 = (Optional<int>)obj8;
			object obj9 = optional25;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj9, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj9, false);
			optional25 = (Optional<int>)obj9;
			object obj10 = optional24;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj10, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj10, false);
			optional24 = (Optional<int>)obj10;
			object obj11 = optional23;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj11, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj11, false);
			optional23 = (Optional<int>)obj11;
			object obj12 = optional22;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj12, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj12, false);
			optional22 = (Optional<int>)obj12;
			object obj13 = optional21;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj13, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj13, false);
			optional21 = (Optional<int>)obj13;
			object obj14 = optional20;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj14, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj14, false);
			optional20 = (Optional<int>)obj14;
			object obj15 = optional19;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj15, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj15, false);
			optional19 = (Optional<int>)obj15;
			object obj16 = optional18;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj16, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj16, false);
			optional18 = (Optional<int>)obj16;
			object obj17 = optional17;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj17, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj17, false);
			optional17 = (Optional<int>)obj17;
			object obj18 = optional16;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj18, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj18, false);
			optional16 = (Optional<int>)obj18;
			object obj19 = optional15;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj19, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj19, false);
			optional15 = (Optional<int>)obj19;
			object obj20 = optional14;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj20, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj20, false);
			optional14 = (Optional<int>)obj20;
			object obj21 = optional13;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj21, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj21, false);
			optional13 = (Optional<int>)obj21;
			object obj22 = optional12;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj22, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj22, false);
			optional12 = (Optional<int>)obj22;
			object obj23 = optional11;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj23, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj23, false);
			optional11 = (Optional<int>)obj23;
			object obj24 = optional10;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj24, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj24, false);
			optional10 = (Optional<int>)obj24;
			object obj25 = optional9;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj25, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj25, false);
			optional9 = (Optional<int>)obj25;
			object obj26 = optional8;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj26, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj26, false);
			optional8 = (Optional<int>)obj26;
			object obj27 = optional7;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj27, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj27, false);
			optional7 = (Optional<int>)obj27;
			object obj28 = optional6;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj28, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj28, false);
			optional6 = (Optional<int>)obj28;
			object obj29 = optional5;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj29, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj29, false);
			optional5 = (Optional<int>)obj29;
			object obj30 = optional4;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj30, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj30, false);
			optional4 = (Optional<int>)obj30;
			object obj31 = optional3;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj31, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj31, false);
			optional3 = (Optional<int>)obj31;
			object obj32 = optional2;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj32, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj32, false);
			optional2 = (Optional<int>)obj32;
			object obj33 = optional;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj33, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj33, false);
			optional = (Optional<int>)obj33;
			typeof(Grammar).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject, "Conditionals");
			typeof(Grammar).GetField("_rulesByHead", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject, dictionary);
			typeof(Grammar).GetField("_nonDeprecatedRulesByHead", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject, dictionary34);
			typeof(Grammar).GetField("_rulesByBody", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject, dictionary35);
			typeof(Grammar).GetField("_rulesByName", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject, dictionary36);
			typeof(Grammar).GetField("_rules", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject, list57);
			typeof(Grammar).GetField("_features", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject, list58);
			typeof(Grammar).GetField("_grammarReferences", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject, dictionary37);
			typeof(Grammar).GetField("_semanticsLocations", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject, list61);
			typeof(Grammar).GetField("_learnerLocations", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject, list62);
			typeof(Grammar).GetField("_symbols", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject, dictionary38);
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject2, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject2, uninitializedObject3);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject2, "s");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject2, false);
			typeof(ResolvedType).GetField("_typeField", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject3, typeFromHandle);
			list[0] = uninitializedObject4;
			typeof(TerminalRule).GetProperty("IsInput", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject4, true);
			typeof(TerminalRule).GetProperty("GeneratorReference", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject4, null);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject4, uninitializedObject2);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject4, "s");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject4, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject4, array);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject4, list2);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject4, dictionary2);
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject5, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject5, uninitializedObject6);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject5, "r");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject5, false);
			typeof(ResolvedType).GetField("_typeField", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject6, typeFromHandle2);
			list3[0] = uninitializedObject7;
			typeof(TerminalRule).GetProperty("IsInput", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject7, false);
			typeof(TerminalRule).GetProperty("GeneratorReference", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject7, null);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject7, uninitializedObject5);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject7, "r");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject7, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject7, array2);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject7, list4);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject7, dictionary3);
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject8, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject8, uninitializedObject9);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject8, "k");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject8, false);
			typeof(ResolvedType).GetField("_typeField", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject9, typeFromHandle3);
			list5[0] = uninitializedObject10;
			typeof(TerminalRule).GetProperty("IsInput", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject10, false);
			typeof(TerminalRule).GetProperty("GeneratorReference", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject10, null);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject10, uninitializedObject8);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject10, "k");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject10, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject10, array3);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject10, list6);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject10, dictionary4);
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject11, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject11, uninitializedObject12);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject11, "str");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject11, false);
			typeof(ResolvedType).GetField("_typeField", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject12, typeFromHandle4);
			list7[0] = uninitializedObject13;
			typeof(TerminalRule).GetProperty("IsInput", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject13, false);
			typeof(TerminalRule).GetProperty("GeneratorReference", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject13, null);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject13, uninitializedObject11);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject13, "str");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject13, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject13, array4);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject13, list8);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject13, dictionary5);
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject14, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject14, uninitializedObject15);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject14, "output");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject14, true);
			typeof(ResolvedType).GetField("_typeField", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject15, typeFromHandle5);
			list9[0] = uninitializedObject16;
			typeof(ConversionRule).GetProperty("ExternSymbolUsage", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject16, uninitializedObject17);
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject16, "~convert_output_disjunct");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject16, false);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject16, methodReference);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject16, uninitializedObject14);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject16, "Start");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject16, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject16, array5);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject16, list10);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject16, dictionary7);
			typeof(ExternalSymbolUsage).GetProperty("Substitutions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject17, dictionary6);
			array5[0] = optional;
			list10[0] = uninitializedObject18;
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject18, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject18, uninitializedObject15);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject18, "disjunct");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject18, false);
			list11[0] = uninitializedObject19;
			list11[1] = uninitializedObject22;
			typeof(ConversionRule).GetProperty("ExternSymbolUsage", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject19, uninitializedObject20);
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject19, "~convert_disjunct_conjunct");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject19, false);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject19, methodReference2);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject19, uninitializedObject18);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject19, "ConvertDisjunctConjunct");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject19, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject19, array6);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject19, list12);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject19, dictionary9);
			typeof(ExternalSymbolUsage).GetProperty("Substitutions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject20, dictionary8);
			array6[0] = optional2;
			list12[0] = uninitializedObject21;
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject21, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject21, uninitializedObject15);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject21, "conjunct");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject21, false);
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject22, "Disjunction");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject22, false);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject22, methodReference3);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject22, uninitializedObject18);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject22, "Disjunction");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject22, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject22, array7);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject22, list13);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject22, dictionary10);
			array7[0] = optional3;
			array7[1] = optional4;
			list13[0] = uninitializedObject21;
			list13[1] = uninitializedObject18;
			list14[0] = uninitializedObject23;
			typeof(ConversionRule).GetProperty("ExternSymbolUsage", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject23, uninitializedObject24);
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject23, "~convert_conjunct_baseConjunct");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject23, false);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject23, methodReference4);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject23, uninitializedObject21);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject23, "Conjunct");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject23, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject23, array8);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject23, list15);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject23, dictionary12);
			typeof(ExternalSymbolUsage).GetProperty("Substitutions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject24, dictionary11);
			array8[0] = optional5;
			list15[0] = uninitializedObject25;
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject25, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject25, uninitializedObject15);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject25, "baseConjunct");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject25, false);
			list16[0] = uninitializedObject26;
			list16[1] = uninitializedObject29;
			typeof(ConversionRule).GetProperty("ExternSymbolUsage", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject26, uninitializedObject27);
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject26, "~convert_baseConjunct_pred");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject26, false);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject26, methodReference5);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject26, uninitializedObject25);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject26, "~convert_baseConjunct_pred");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject26, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject26, array9);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject26, list17);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject26, dictionary14);
			typeof(ExternalSymbolUsage).GetProperty("Substitutions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject27, dictionary13);
			array9[0] = optional6;
			list17[0] = uninitializedObject28;
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject28, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject28, uninitializedObject15);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject28, "pred");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject28, false);
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject29, "Conjunction");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject29, false);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject29, methodReference6);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject29, uninitializedObject25);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject29, "Conjunction");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject29, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject29, array10);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject29, list18);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject29, dictionary15);
			array10[0] = optional7;
			array10[1] = optional8;
			list18[0] = uninitializedObject28;
			list18[1] = uninitializedObject25;
			list19[0] = uninitializedObject30;
			list19[1] = uninitializedObject33;
			typeof(ConversionRule).GetProperty("ExternSymbolUsage", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject30, uninitializedObject31);
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject30, "~convert_pred_match");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject30, false);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject30, methodReference7);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject30, uninitializedObject28);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject30, "~convert_pred_match");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject30, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject30, array11);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject30, list20);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject30, dictionary17);
			typeof(ExternalSymbolUsage).GetProperty("Substitutions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject31, dictionary16);
			array11[0] = optional9;
			list20[0] = uninitializedObject32;
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject32, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject32, uninitializedObject15);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject32, "match");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject32, false);
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject33, "Not");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject33, false);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject33, methodReference8);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject33, uninitializedObject28);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject33, "Not");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject33, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject33, array12);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject33, list21);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject33, dictionary18);
			array12[0] = optional10;
			list21[0] = uninitializedObject32;
			list22[0] = uninitializedObject34;
			list22[1] = uninitializedObject35;
			list22[2] = uninitializedObject36;
			list22[3] = uninitializedObject37;
			list22[4] = uninitializedObject38;
			list22[5] = uninitializedObject39;
			list22[6] = uninitializedObject40;
			list22[7] = uninitializedObject41;
			list22[8] = uninitializedObject42;
			list22[9] = uninitializedObject43;
			list22[10] = uninitializedObject44;
			list22[11] = uninitializedObject45;
			list22[12] = uninitializedObject46;
			list22[13] = uninitializedObject47;
			list22[14] = uninitializedObject48;
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject34, "IsNullOrWhiteSpace");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject34, true);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject34, methodReference9);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject34, uninitializedObject32);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject34, "IsNullOrWhiteSpace");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject34, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject34, array13);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject34, list23);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject34, dictionary19);
			array13[0] = optional11;
			list23[0] = uninitializedObject2;
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject35, "IsNull");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject35, true);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject35, methodReference10);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject35, uninitializedObject32);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject35, "IsNull");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject35, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject35, array14);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject35, list24);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject35, dictionary20);
			array14[0] = optional12;
			list24[0] = uninitializedObject2;
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject36, "IsWhiteSpace");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject36, true);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject36, methodReference11);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject36, uninitializedObject32);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject36, "IsWhiteSpace");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject36, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject36, array15);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject36, list25);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject36, dictionary21);
			array15[0] = optional13;
			list25[0] = uninitializedObject2;
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject37, "True");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject37, false);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject37, methodReference12);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject37, uninitializedObject32);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject37, "True");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject37, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject37, array16);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject37, list26);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject37, dictionary22);
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject38, "StartsWithString");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject38, true);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject38, methodReference13);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject38, uninitializedObject32);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject38, "StartsWithString");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject38, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject38, array17);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject38, list27);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject38, dictionary23);
			array17[0] = optional14;
			array17[1] = optional15;
			list27[0] = uninitializedObject2;
			list27[1] = uninitializedObject11;
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject39, "StartsWithDigit");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject39, true);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject39, methodReference14);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject39, uninitializedObject32);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject39, "StartsWithDigit");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject39, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject39, array18);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject39, list28);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject39, dictionary24);
			array18[0] = optional16;
			list28[0] = uninitializedObject2;
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject40, "StartsWithLetter");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject40, true);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject40, methodReference15);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject40, uninitializedObject32);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject40, "StartsWithLetter");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject40, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject40, array19);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject40, list29);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject40, dictionary25);
			array19[0] = optional17;
			list29[0] = uninitializedObject2;
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject41, "EndsWithString");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject41, true);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject41, methodReference16);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject41, uninitializedObject32);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject41, "EndsWithString");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject41, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject41, array20);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject41, list30);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject41, dictionary26);
			array20[0] = optional18;
			array20[1] = optional19;
			list30[0] = uninitializedObject2;
			list30[1] = uninitializedObject11;
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject42, "EndsWithDigit");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject42, true);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject42, methodReference17);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject42, uninitializedObject32);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject42, "EndsWithDigit");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject42, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject42, array21);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject42, list31);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject42, dictionary27);
			array21[0] = optional20;
			list31[0] = uninitializedObject2;
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject43, "EndsWithLetter");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject43, true);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject43, methodReference18);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject43, uninitializedObject32);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject43, "EndsWithLetter");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject43, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject43, array22);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject43, list32);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject43, dictionary28);
			array22[0] = optional21;
			list32[0] = uninitializedObject2;
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject44, "ContainsString");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject44, true);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject44, methodReference19);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject44, uninitializedObject32);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject44, "ContainsString");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject44, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject44, array23);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject44, list33);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject44, dictionary29);
			array23[0] = optional22;
			array23[1] = optional23;
			array23[2] = optional24;
			list33[0] = uninitializedObject2;
			list33[1] = uninitializedObject11;
			list33[2] = uninitializedObject8;
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject45, "Matches");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject45, true);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject45, methodReference20);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject45, uninitializedObject32);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject45, "Matches");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject45, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject45, array24);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject45, list34);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject45, dictionary30);
			array24[0] = optional25;
			array24[1] = optional26;
			list34[0] = uninitializedObject2;
			list34[1] = uninitializedObject5;
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject46, "StartsWith");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject46, true);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject46, methodReference21);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject46, uninitializedObject32);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject46, "StartsWith");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject46, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject46, array25);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject46, list35);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject46, dictionary31);
			array25[0] = optional27;
			array25[1] = optional28;
			list35[0] = uninitializedObject2;
			list35[1] = uninitializedObject5;
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject47, "EndsWith");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject47, true);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject47, methodReference22);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject47, uninitializedObject32);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject47, "EndsWith");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject47, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject47, array26);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject47, list36);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject47, dictionary32);
			array26[0] = optional29;
			array26[1] = optional30;
			list36[0] = uninitializedObject2;
			list36[1] = uninitializedObject5;
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject48, "Contains");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject48, true);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject48, methodReference23);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject48, uninitializedObject32);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject48, "Contains");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject48, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject48, array27);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject48, list37);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject48, dictionary33);
			array27[0] = optional31;
			array27[1] = optional32;
			array27[2] = optional33;
			list37[0] = uninitializedObject2;
			list37[1] = uninitializedObject5;
			list37[2] = uninitializedObject8;
			list38[0] = uninitializedObject4;
			list39[0] = uninitializedObject7;
			list40[0] = uninitializedObject10;
			list41[0] = uninitializedObject13;
			list42[0] = uninitializedObject16;
			list43[0] = uninitializedObject19;
			list43[1] = uninitializedObject22;
			list44[0] = uninitializedObject23;
			list45[0] = uninitializedObject26;
			list45[1] = uninitializedObject29;
			list46[0] = uninitializedObject30;
			list46[1] = uninitializedObject33;
			list47[0] = uninitializedObject34;
			list47[1] = uninitializedObject35;
			list47[2] = uninitializedObject36;
			list47[3] = uninitializedObject37;
			list47[4] = uninitializedObject38;
			list47[5] = uninitializedObject39;
			list47[6] = uninitializedObject40;
			list47[7] = uninitializedObject41;
			list47[8] = uninitializedObject42;
			list47[9] = uninitializedObject43;
			list47[10] = uninitializedObject44;
			list47[11] = uninitializedObject45;
			list47[12] = uninitializedObject46;
			list47[13] = uninitializedObject47;
			list47[14] = uninitializedObject48;
			list48[0] = uninitializedObject16;
			list48[1] = uninitializedObject22;
			list49[0] = uninitializedObject19;
			list49[1] = uninitializedObject22;
			list50[0] = uninitializedObject23;
			list50[1] = uninitializedObject29;
			list51[0] = uninitializedObject26;
			list51[1] = uninitializedObject29;
			list52[0] = uninitializedObject30;
			list52[1] = uninitializedObject33;
			list53[0] = uninitializedObject34;
			list53[1] = uninitializedObject35;
			list53[2] = uninitializedObject36;
			list53[3] = uninitializedObject38;
			list53[4] = uninitializedObject39;
			list53[5] = uninitializedObject40;
			list53[6] = uninitializedObject41;
			list53[7] = uninitializedObject42;
			list53[8] = uninitializedObject43;
			list53[9] = uninitializedObject44;
			list53[10] = uninitializedObject45;
			list53[11] = uninitializedObject46;
			list53[12] = uninitializedObject47;
			list53[13] = uninitializedObject48;
			list54[0] = uninitializedObject38;
			list54[1] = uninitializedObject41;
			list54[2] = uninitializedObject44;
			list55[0] = uninitializedObject44;
			list55[1] = uninitializedObject48;
			list56[0] = uninitializedObject45;
			list56[1] = uninitializedObject46;
			list56[2] = uninitializedObject47;
			list56[3] = uninitializedObject48;
			list57[0] = uninitializedObject4;
			list57[1] = uninitializedObject7;
			list57[2] = uninitializedObject10;
			list57[3] = uninitializedObject13;
			list57[4] = uninitializedObject16;
			list57[5] = uninitializedObject19;
			list57[6] = uninitializedObject22;
			list57[7] = uninitializedObject23;
			list57[8] = uninitializedObject26;
			list57[9] = uninitializedObject29;
			list57[10] = uninitializedObject30;
			list57[11] = uninitializedObject33;
			list57[12] = uninitializedObject34;
			list57[13] = uninitializedObject35;
			list57[14] = uninitializedObject36;
			list57[15] = uninitializedObject37;
			list57[16] = uninitializedObject38;
			list57[17] = uninitializedObject39;
			list57[18] = uninitializedObject40;
			list57[19] = uninitializedObject41;
			list57[20] = uninitializedObject42;
			list57[21] = uninitializedObject43;
			list57[22] = uninitializedObject44;
			list57[23] = uninitializedObject45;
			list57[24] = uninitializedObject46;
			list57[25] = uninitializedObject47;
			list57[26] = uninitializedObject48;
			list58[0] = uninitializedObject49;
			list58[1] = uninitializedObject50;
			typeof(FeatureInfo).GetProperty("PropertyType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject49, typeFromHandle6);
			typeof(FeatureInfo).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject49, "Score");
			typeof(FeatureInfo).GetProperty("Holders", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject49, list59);
			typeof(FeatureInfo).GetProperty("IsComplete", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject49, false);
			list59[0] = typeFromHandle7;
			typeof(FeatureInfo).GetProperty("PropertyType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject50, typeFromHandle8);
			typeof(FeatureInfo).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject50, "FeatureScore");
			typeof(FeatureInfo).GetProperty("Holders", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject50, list60);
			typeof(FeatureInfo).GetProperty("IsComplete", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject50, false);
			list60[0] = typeFromHandle9;
			list61[0] = uninitializedObject51;
			typeof(ResolvedType).GetField("_typeField", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject51, typeFromHandle10);
			list62[0] = uninitializedObject52;
			typeof(ResolvedType).GetField("_typeField", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject52, typeFromHandle11);
			dictionary38["s"] = uninitializedObject2;
			dictionary38["r"] = uninitializedObject5;
			dictionary38["k"] = uninitializedObject8;
			dictionary38["str"] = uninitializedObject11;
			dictionary38["output"] = uninitializedObject14;
			dictionary38["disjunct"] = uninitializedObject18;
			dictionary38["conjunct"] = uninitializedObject21;
			dictionary38["baseConjunct"] = uninitializedObject25;
			dictionary38["pred"] = uninitializedObject28;
			dictionary38["match"] = uninitializedObject32;
			dictionary36["s"] = uninitializedObject4;
			dictionary36["r"] = uninitializedObject7;
			dictionary36["k"] = uninitializedObject10;
			dictionary36["str"] = uninitializedObject13;
			dictionary36["Start"] = uninitializedObject16;
			dictionary36["ConvertDisjunctConjunct"] = uninitializedObject19;
			dictionary36["Disjunction"] = uninitializedObject22;
			dictionary36["Conjunct"] = uninitializedObject23;
			dictionary36["~convert_baseConjunct_pred"] = uninitializedObject26;
			dictionary36["Conjunction"] = uninitializedObject29;
			dictionary36["~convert_pred_match"] = uninitializedObject30;
			dictionary36["Not"] = uninitializedObject33;
			dictionary36["IsNullOrWhiteSpace"] = uninitializedObject34;
			dictionary36["IsNull"] = uninitializedObject35;
			dictionary36["IsWhiteSpace"] = uninitializedObject36;
			dictionary36["True"] = uninitializedObject37;
			dictionary36["StartsWithString"] = uninitializedObject38;
			dictionary36["StartsWithDigit"] = uninitializedObject39;
			dictionary36["StartsWithLetter"] = uninitializedObject40;
			dictionary36["EndsWithString"] = uninitializedObject41;
			dictionary36["EndsWithDigit"] = uninitializedObject42;
			dictionary36["EndsWithLetter"] = uninitializedObject43;
			dictionary36["ContainsString"] = uninitializedObject44;
			dictionary36["Matches"] = uninitializedObject45;
			dictionary36["StartsWith"] = uninitializedObject46;
			dictionary36["EndsWith"] = uninitializedObject47;
			dictionary36["Contains"] = uninitializedObject48;
			dictionary35[uninitializedObject18] = list48;
			dictionary35[uninitializedObject21] = list49;
			dictionary35[uninitializedObject25] = list50;
			dictionary35[uninitializedObject28] = list51;
			dictionary35[uninitializedObject32] = list52;
			dictionary35[uninitializedObject2] = list53;
			dictionary35[uninitializedObject11] = list54;
			dictionary35[uninitializedObject8] = list55;
			dictionary35[uninitializedObject5] = list56;
			dictionary34[uninitializedObject2] = list38;
			dictionary34[uninitializedObject5] = list39;
			dictionary34[uninitializedObject8] = list40;
			dictionary34[uninitializedObject11] = list41;
			dictionary34[uninitializedObject14] = list42;
			dictionary34[uninitializedObject18] = list43;
			dictionary34[uninitializedObject21] = list44;
			dictionary34[uninitializedObject25] = list45;
			dictionary34[uninitializedObject28] = list46;
			dictionary34[uninitializedObject32] = list47;
			dictionary[uninitializedObject2] = list;
			dictionary[uninitializedObject5] = list3;
			dictionary[uninitializedObject8] = list5;
			dictionary[uninitializedObject11] = list7;
			dictionary[uninitializedObject14] = list9;
			dictionary[uninitializedObject18] = list11;
			dictionary[uninitializedObject21] = list14;
			dictionary[uninitializedObject25] = list16;
			dictionary[uninitializedObject28] = list19;
			dictionary[uninitializedObject32] = list22;
			return uninitializedObject;
		}

		// Token: 0x04001CE4 RID: 7396
		private static readonly Lazy<Grammar> _grammar = new Lazy<Grammar>(new Func<Grammar>(Language.Initialize), LazyThreadSafetyMode.ExecutionAndPublication);

		// Token: 0x04001CE5 RID: 7397
		private static readonly Assembly MPSAssembly = typeof(GrammarRule).GetTypeInfo().Assembly;

		// Token: 0x04001CE6 RID: 7398
		private const BindingFlags Flags = BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic;
	}
}
