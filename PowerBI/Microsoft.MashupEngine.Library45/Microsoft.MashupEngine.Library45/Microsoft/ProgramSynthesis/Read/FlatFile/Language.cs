using System;
using System.Collections.Generic;
using System.Linq;
using System.Reflection;
using System.Threading;
using Microsoft.ProgramSynthesis.DslLibrary;
using Microsoft.ProgramSynthesis.Extraction.Text;
using Microsoft.ProgramSynthesis.Features;
using Microsoft.ProgramSynthesis.Learning;
using Microsoft.ProgramSynthesis.Read.FlatFile.Build;
using Microsoft.ProgramSynthesis.Read.FlatFile.Learning;
using Microsoft.ProgramSynthesis.Read.FlatFile.Semantics;
using Microsoft.ProgramSynthesis.Rules;
using Microsoft.ProgramSynthesis.Utils;
using Microsoft.ProgramSynthesis.Wrangling.Schema.TableOutput;

namespace Microsoft.ProgramSynthesis.Read.FlatFile
{
	// Token: 0x0200125A RID: 4698
	public static class Language
	{
		// Token: 0x17001839 RID: 6201
		// (get) Token: 0x06008D43 RID: 36163 RVA: 0x001DAF08 File Offset: 0x001D9108
		public static Grammar Grammar
		{
			get
			{
				return Language._grammar.Value;
			}
		}

		// Token: 0x1700183A RID: 6202
		// (get) Token: 0x06008D44 RID: 36164 RVA: 0x001DAF14 File Offset: 0x001D9114
		public static GrammarBuilders Build
		{
			get
			{
				return GrammarBuilders.Instance(Language.Grammar);
			}
		}

		// Token: 0x06008D45 RID: 36165 RVA: 0x001DAF20 File Offset: 0x001D9120
		private static Grammar Initialize()
		{
			Grammar uninitializedObject = CSharpUtils.GetUninitializedObject<Grammar>();
			Dictionary<Symbol, List<GrammarRule>> dictionary = new Dictionary<Symbol, List<GrammarRule>>();
			Symbol uninitializedObject2 = CSharpUtils.GetUninitializedObject<Symbol>();
			ResolvedType uninitializedObject3 = CSharpUtils.GetUninitializedObject<ResolvedType>();
			Type typeFromHandle = typeof(string);
			List<GrammarRule> list = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			TerminalRule uninitializedObject4 = CSharpUtils.GetUninitializedObject<TerminalRule>();
			Optional<int>[] array = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 0);
			List<Symbol> list2 = Enumerable.Repeat<Symbol>(null, 0).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary2 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			Symbol uninitializedObject5 = CSharpUtils.GetUninitializedObject<Symbol>();
			ResolvedType uninitializedObject6 = CSharpUtils.GetUninitializedObject<ResolvedType>();
			Type typeFromHandle2 = typeof(IReadOnlyList<string>);
			List<GrammarRule> list3 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			TerminalRule uninitializedObject7 = CSharpUtils.GetUninitializedObject<TerminalRule>();
			Optional<int>[] array2 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 0);
			List<Symbol> list4 = Enumerable.Repeat<Symbol>(null, 0).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary3 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			Symbol uninitializedObject8 = CSharpUtils.GetUninitializedObject<Symbol>();
			ResolvedType uninitializedObject9 = CSharpUtils.GetUninitializedObject<ResolvedType>();
			Type typeFromHandle3 = typeof(int);
			List<GrammarRule> list5 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			TerminalRule uninitializedObject10 = CSharpUtils.GetUninitializedObject<TerminalRule>();
			Optional<int>[] array3 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 0);
			List<Symbol> list6 = Enumerable.Repeat<Symbol>(null, 0).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary4 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			Symbol uninitializedObject11 = CSharpUtils.GetUninitializedObject<Symbol>();
			List<GrammarRule> list7 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			TerminalRule uninitializedObject12 = CSharpUtils.GetUninitializedObject<TerminalRule>();
			Optional<int>[] array4 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 0);
			List<Symbol> list8 = Enumerable.Repeat<Symbol>(null, 0).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary5 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			Symbol uninitializedObject13 = CSharpUtils.GetUninitializedObject<Symbol>();
			List<GrammarRule> list9 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			TerminalRule uninitializedObject14 = CSharpUtils.GetUninitializedObject<TerminalRule>();
			Optional<int>[] array5 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 0);
			List<Symbol> list10 = Enumerable.Repeat<Symbol>(null, 0).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary6 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			Symbol uninitializedObject15 = CSharpUtils.GetUninitializedObject<Symbol>();
			ResolvedType uninitializedObject16 = CSharpUtils.GetUninitializedObject<ResolvedType>();
			Type typeFromHandle4 = typeof(IReadOnlyList<Record<int, int?>>);
			List<GrammarRule> list11 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			TerminalRule uninitializedObject17 = CSharpUtils.GetUninitializedObject<TerminalRule>();
			Optional<int>[] array6 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 0);
			List<Symbol> list12 = Enumerable.Repeat<Symbol>(null, 0).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary7 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			Symbol uninitializedObject18 = CSharpUtils.GetUninitializedObject<Symbol>();
			ResolvedType uninitializedObject19 = CSharpUtils.GetUninitializedObject<ResolvedType>();
			Type typeFromHandle5 = typeof(bool);
			List<GrammarRule> list13 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			TerminalRule uninitializedObject20 = CSharpUtils.GetUninitializedObject<TerminalRule>();
			Optional<int>[] array7 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 0);
			List<Symbol> list14 = Enumerable.Repeat<Symbol>(null, 0).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary8 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			Symbol uninitializedObject21 = CSharpUtils.GetUninitializedObject<Symbol>();
			ResolvedType uninitializedObject22 = CSharpUtils.GetUninitializedObject<ResolvedType>();
			Type typeFromHandle6 = typeof(Optional<string>);
			List<GrammarRule> list15 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			TerminalRule uninitializedObject23 = CSharpUtils.GetUninitializedObject<TerminalRule>();
			Optional<int>[] array8 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 0);
			List<Symbol> list16 = Enumerable.Repeat<Symbol>(null, 0).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary9 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			Symbol uninitializedObject24 = CSharpUtils.GetUninitializedObject<Symbol>();
			ResolvedType uninitializedObject25 = CSharpUtils.GetUninitializedObject<ResolvedType>();
			Type typeFromHandle7 = typeof(Optional<char>);
			List<GrammarRule> list17 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			TerminalRule uninitializedObject26 = CSharpUtils.GetUninitializedObject<TerminalRule>();
			Optional<int>[] array9 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 0);
			List<Symbol> list18 = Enumerable.Repeat<Symbol>(null, 0).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary10 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			Symbol uninitializedObject27 = CSharpUtils.GetUninitializedObject<Symbol>();
			List<GrammarRule> list19 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			TerminalRule uninitializedObject28 = CSharpUtils.GetUninitializedObject<TerminalRule>();
			Optional<int>[] array10 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 0);
			List<Symbol> list20 = Enumerable.Repeat<Symbol>(null, 0).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary11 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			Symbol uninitializedObject29 = CSharpUtils.GetUninitializedObject<Symbol>();
			List<GrammarRule> list21 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			TerminalRule uninitializedObject30 = CSharpUtils.GetUninitializedObject<TerminalRule>();
			Optional<int>[] array11 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 0);
			List<Symbol> list22 = Enumerable.Repeat<Symbol>(null, 0).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary12 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			Symbol uninitializedObject31 = CSharpUtils.GetUninitializedObject<Symbol>();
			ResolvedType uninitializedObject32 = CSharpUtils.GetUninitializedObject<ResolvedType>();
			Type typeFromHandle8 = typeof(ITable<string>);
			List<GrammarRule> list23 = Enumerable.Repeat<GrammarRule>(null, 3).ToList<GrammarRule>();
			BlackBoxRule uninitializedObject33 = CSharpUtils.GetUninitializedObject<BlackBoxRule>();
			MethodReference methodReference = MethodReference.WithoutReference<OperatorRule.OperatorSemantics>((object[] arg0) => Semantics.Csv((string)arg0[0], (IReadOnlyList<string>)arg0[1], (int)arg0[2], (int)arg0[3], (string)arg0[4], (bool)arg0[5], (Optional<string>)arg0[6], (Optional<char>)arg0[7], (Optional<char>)arg0[8], (bool)arg0[9]));
			Optional<int>[] array12 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 10);
			Optional<int> optional = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional2 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional3 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional4 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional5 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional6 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional7 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional8 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional9 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional10 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list24 = Enumerable.Repeat<Symbol>(null, 10).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary13 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			BlackBoxRule uninitializedObject34 = CSharpUtils.GetUninitializedObject<BlackBoxRule>();
			MethodReference methodReference2 = MethodReference.WithoutReference<OperatorRule.OperatorSemantics>((object[] arg0) => Semantics.Fw((string)arg0[0], (IReadOnlyList<string>)arg0[1], (int)arg0[2], (int)arg0[3], (IReadOnlyList<Record<int, int?>>)arg0[4], (bool)arg0[5], (Optional<string>)arg0[6]));
			Optional<int>[] array13 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 7);
			Optional<int> optional11 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional12 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional13 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional14 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional15 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional16 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional17 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list25 = Enumerable.Repeat<Symbol>(null, 7).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary14 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			BlackBoxRule uninitializedObject35 = CSharpUtils.GetUninitializedObject<BlackBoxRule>();
			MethodReference methodReference3 = MethodReference.WithoutReference<OperatorRule.OperatorSemantics>((object[] arg0) => Semantics.StringRegionToStringTable((ITable<StringRegion>)arg0[0]));
			Optional<int>[] array14 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 1);
			Optional<int> optional18 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list26 = Enumerable.Repeat<Symbol>(null, 1).ToList<Symbol>();
			Symbol uninitializedObject36 = CSharpUtils.GetUninitializedObject<Symbol>();
			ResolvedType uninitializedObject37 = CSharpUtils.GetUninitializedObject<ResolvedType>();
			Type typeFromHandle9 = typeof(ITable<StringRegion>);
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary15 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			Symbol uninitializedObject38 = CSharpUtils.GetUninitializedObject<Symbol>();
			ResolvedType uninitializedObject39 = CSharpUtils.GetUninitializedObject<ResolvedType>();
			Type typeFromHandle10 = typeof(StringRegion);
			List<GrammarRule> list27 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			BlackBoxRule uninitializedObject40 = CSharpUtils.GetUninitializedObject<BlackBoxRule>();
			MethodReference methodReference4 = MethodReference.WithoutReference<OperatorRule.OperatorSemantics>((object[] arg0) => Semantics.CreateStringRegion((string)arg0[0]));
			Optional<int>[] array15 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 1);
			Optional<int> optional19 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list28 = Enumerable.Repeat<Symbol>(null, 1).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary16 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			Symbol uninitializedObject41 = CSharpUtils.GetUninitializedObject<Symbol>();
			List<GrammarRule> list29 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			ConversionRule uninitializedObject42 = CSharpUtils.GetUninitializedObject<ConversionRule>();
			ExternalSymbolUsage uninitializedObject43 = CSharpUtils.GetUninitializedObject<ExternalSymbolUsage>();
			Dictionary<Symbol, Symbol> dictionary17 = new Dictionary<Symbol, Symbol>();
			Symbol symbol = Language.Grammar.Symbol("v");
			Symbol uninitializedObject44 = CSharpUtils.GetUninitializedObject<Symbol>();
			MethodReference methodReference5 = null;
			Optional<int>[] array16 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 1);
			Optional<int> optional20 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list30 = Enumerable.Repeat<Symbol>(null, 1).ToList<Symbol>();
			Symbol symbol2 = Language.Grammar.Symbol("output");
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary18 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			List<GrammarRule> list31 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			LetRule uninitializedObject45 = CSharpUtils.GetUninitializedObject<LetRule>();
			Optional<int>[] array17 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 2);
			Optional<int> optional21 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional22 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list32 = Enumerable.Repeat<Symbol>(null, 2).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary19 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			List<GrammarRule> list33 = Enumerable.Repeat<GrammarRule>(null, 0).ToList<GrammarRule>();
			Dictionary<Symbol, List<GrammarRule>> dictionary20 = new Dictionary<Symbol, List<GrammarRule>>();
			List<GrammarRule> list34 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list35 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list36 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list37 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list38 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list39 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list40 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list41 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list42 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list43 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list44 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list45 = Enumerable.Repeat<GrammarRule>(null, 3).ToList<GrammarRule>();
			List<GrammarRule> list46 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list47 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list48 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			Dictionary<Symbol, List<GrammarRule>> dictionary21 = new Dictionary<Symbol, List<GrammarRule>>();
			List<GrammarRule> list49 = Enumerable.Repeat<GrammarRule>(null, 3).ToList<GrammarRule>();
			List<GrammarRule> list50 = Enumerable.Repeat<GrammarRule>(null, 2).ToList<GrammarRule>();
			List<GrammarRule> list51 = Enumerable.Repeat<GrammarRule>(null, 2).ToList<GrammarRule>();
			List<GrammarRule> list52 = Enumerable.Repeat<GrammarRule>(null, 2).ToList<GrammarRule>();
			List<GrammarRule> list53 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list54 = Enumerable.Repeat<GrammarRule>(null, 2).ToList<GrammarRule>();
			List<GrammarRule> list55 = Enumerable.Repeat<GrammarRule>(null, 2).ToList<GrammarRule>();
			List<GrammarRule> list56 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list57 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list58 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list59 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list60 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list61 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list62 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list63 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			Dictionary<string, GrammarRule> dictionary22 = new Dictionary<string, GrammarRule>();
			List<GrammarRule> list64 = Enumerable.Repeat<GrammarRule>(null, 17).ToList<GrammarRule>();
			List<FeatureInfo> list65 = Enumerable.Repeat<FeatureInfo>(null, 1).ToList<FeatureInfo>();
			FeatureInfo uninitializedObject46 = CSharpUtils.GetUninitializedObject<FeatureInfo>();
			Type typeFromHandle11 = typeof(double);
			List<Type> list66 = Enumerable.Repeat<Type>(null, 1).ToList<Type>();
			Type typeFromHandle12 = typeof(RankingScore);
			Dictionary<string, Grammar> dictionary23 = new Dictionary<string, Grammar>();
			Grammar grammar = Language.Grammar;
			List<GrammarType> list67 = Enumerable.Repeat<GrammarType>(null, 1).ToList<GrammarType>();
			ResolvedType uninitializedObject47 = CSharpUtils.GetUninitializedObject<ResolvedType>();
			Type typeFromHandle13 = typeof(Semantics);
			List<GrammarType> list68 = Enumerable.Repeat<GrammarType>(null, 0).ToList<GrammarType>();
			Dictionary<string, Symbol> dictionary24 = new Dictionary<string, Symbol>();
			object obj = optional22;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj, false);
			optional22 = (Optional<int>)obj;
			object obj2 = optional21;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj2, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj2, false);
			optional21 = (Optional<int>)obj2;
			object obj3 = optional20;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj3, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj3, false);
			optional20 = (Optional<int>)obj3;
			object obj4 = optional19;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj4, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj4, false);
			optional19 = (Optional<int>)obj4;
			object obj5 = optional18;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj5, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj5, false);
			optional18 = (Optional<int>)obj5;
			object obj6 = optional17;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj6, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj6, false);
			optional17 = (Optional<int>)obj6;
			object obj7 = optional16;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj7, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj7, false);
			optional16 = (Optional<int>)obj7;
			object obj8 = optional15;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj8, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj8, false);
			optional15 = (Optional<int>)obj8;
			object obj9 = optional14;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj9, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj9, false);
			optional14 = (Optional<int>)obj9;
			object obj10 = optional13;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj10, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj10, false);
			optional13 = (Optional<int>)obj10;
			object obj11 = optional12;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj11, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj11, false);
			optional12 = (Optional<int>)obj11;
			object obj12 = optional11;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj12, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj12, false);
			optional11 = (Optional<int>)obj12;
			object obj13 = optional10;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj13, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj13, false);
			optional10 = (Optional<int>)obj13;
			object obj14 = optional9;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj14, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj14, false);
			optional9 = (Optional<int>)obj14;
			object obj15 = optional8;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj15, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj15, false);
			optional8 = (Optional<int>)obj15;
			object obj16 = optional7;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj16, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj16, false);
			optional7 = (Optional<int>)obj16;
			object obj17 = optional6;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj17, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj17, false);
			optional6 = (Optional<int>)obj17;
			object obj18 = optional5;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj18, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj18, false);
			optional5 = (Optional<int>)obj18;
			object obj19 = optional4;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj19, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj19, false);
			optional4 = (Optional<int>)obj19;
			object obj20 = optional3;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj20, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj20, false);
			optional3 = (Optional<int>)obj20;
			object obj21 = optional2;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj21, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj21, false);
			optional2 = (Optional<int>)obj21;
			object obj22 = optional;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj22, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj22, false);
			optional = (Optional<int>)obj22;
			typeof(Grammar).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject, "Read.FlatFile");
			typeof(Grammar).GetField("_rulesByHead", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject, dictionary);
			typeof(Grammar).GetField("_nonDeprecatedRulesByHead", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject, dictionary20);
			typeof(Grammar).GetField("_rulesByBody", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject, dictionary21);
			typeof(Grammar).GetField("_rulesByName", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject, dictionary22);
			typeof(Grammar).GetField("_rules", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject, list64);
			typeof(Grammar).GetField("_features", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject, list65);
			typeof(Grammar).GetField("_grammarReferences", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject, dictionary23);
			typeof(Grammar).GetField("_semanticsLocations", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject, list67);
			typeof(Grammar).GetField("_learnerLocations", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject, list68);
			typeof(Grammar).GetField("_symbols", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject, dictionary24);
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject2, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject2, uninitializedObject3);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject2, "file");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject2, false);
			typeof(ResolvedType).GetField("_typeField", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject3, typeFromHandle);
			list[0] = uninitializedObject4;
			typeof(TerminalRule).GetProperty("IsInput", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject4, true);
			typeof(TerminalRule).GetProperty("GeneratorReference", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject4, null);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject4, uninitializedObject2);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject4, "file");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject4, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject4, array);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject4, list2);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject4, dictionary2);
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject5, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject5, uninitializedObject6);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject5, "columnNames");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject5, false);
			typeof(ResolvedType).GetField("_typeField", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject6, typeFromHandle2);
			list3[0] = uninitializedObject7;
			typeof(TerminalRule).GetProperty("IsInput", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject7, false);
			typeof(TerminalRule).GetProperty("GeneratorReference", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject7, null);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject7, uninitializedObject5);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject7, "columnNames");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject7, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject7, array2);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject7, list4);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject7, dictionary3);
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject8, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject8, uninitializedObject9);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject8, "skip");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject8, false);
			typeof(ResolvedType).GetField("_typeField", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject9, typeFromHandle3);
			list5[0] = uninitializedObject10;
			typeof(TerminalRule).GetProperty("IsInput", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject10, false);
			typeof(TerminalRule).GetProperty("GeneratorReference", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject10, null);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject10, uninitializedObject8);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject10, "skip");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject10, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject10, array3);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject10, list6);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject10, dictionary4);
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject11, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject11, uninitializedObject9);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject11, "skipFooter");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject11, false);
			list7[0] = uninitializedObject12;
			typeof(TerminalRule).GetProperty("IsInput", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject12, false);
			typeof(TerminalRule).GetProperty("GeneratorReference", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject12, null);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject12, uninitializedObject11);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject12, "skipFooter");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject12, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject12, array4);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject12, list8);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject12, dictionary5);
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject13, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject13, uninitializedObject3);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject13, "delimiter");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject13, false);
			list9[0] = uninitializedObject14;
			typeof(TerminalRule).GetProperty("IsInput", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject14, false);
			typeof(TerminalRule).GetProperty("GeneratorReference", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject14, null);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject14, uninitializedObject13);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject14, "delimiter");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject14, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject14, array5);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject14, list10);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject14, dictionary6);
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject15, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject15, uninitializedObject16);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject15, "fieldPositions");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject15, false);
			typeof(ResolvedType).GetField("_typeField", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject16, typeFromHandle4);
			list11[0] = uninitializedObject17;
			typeof(TerminalRule).GetProperty("IsInput", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject17, false);
			typeof(TerminalRule).GetProperty("GeneratorReference", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject17, null);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject17, uninitializedObject15);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject17, "fieldPositions");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject17, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject17, array6);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject17, list12);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject17, dictionary7);
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject18, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject18, uninitializedObject19);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject18, "filterEmptyLines");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject18, false);
			typeof(ResolvedType).GetField("_typeField", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject19, typeFromHandle5);
			list13[0] = uninitializedObject20;
			typeof(TerminalRule).GetProperty("IsInput", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject20, false);
			typeof(TerminalRule).GetProperty("GeneratorReference", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject20, null);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject20, uninitializedObject18);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject20, "filterEmptyLines");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject20, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject20, array7);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject20, list14);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject20, dictionary8);
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject21, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject21, uninitializedObject22);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject21, "commentStr");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject21, false);
			typeof(ResolvedType).GetField("_typeField", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject22, typeFromHandle6);
			list15[0] = uninitializedObject23;
			typeof(TerminalRule).GetProperty("IsInput", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject23, false);
			typeof(TerminalRule).GetProperty("GeneratorReference", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject23, null);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject23, uninitializedObject21);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject23, "commentStr");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject23, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject23, array8);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject23, list16);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject23, dictionary9);
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject24, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject24, uninitializedObject25);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject24, "quoteChar");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject24, false);
			typeof(ResolvedType).GetField("_typeField", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject25, typeFromHandle7);
			list17[0] = uninitializedObject26;
			typeof(TerminalRule).GetProperty("IsInput", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject26, false);
			typeof(TerminalRule).GetProperty("GeneratorReference", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject26, null);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject26, uninitializedObject24);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject26, "quoteChar");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject26, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject26, array9);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject26, list18);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject26, dictionary10);
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject27, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject27, uninitializedObject25);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject27, "escapeChar");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject27, false);
			list19[0] = uninitializedObject28;
			typeof(TerminalRule).GetProperty("IsInput", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject28, false);
			typeof(TerminalRule).GetProperty("GeneratorReference", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject28, null);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject28, uninitializedObject27);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject28, "escapeChar");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject28, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject28, array10);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject28, list20);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject28, dictionary11);
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject29, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject29, uninitializedObject19);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject29, "doubleQuote");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject29, false);
			list21[0] = uninitializedObject30;
			typeof(TerminalRule).GetProperty("IsInput", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject30, false);
			typeof(TerminalRule).GetProperty("GeneratorReference", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject30, null);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject30, uninitializedObject29);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject30, "doubleQuote");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject30, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject30, array11);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject30, list22);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject30, dictionary12);
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject31, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject31, uninitializedObject32);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject31, "readFlatFile");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject31, true);
			typeof(ResolvedType).GetField("_typeField", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject32, typeFromHandle8);
			list23[0] = uninitializedObject33;
			list23[1] = uninitializedObject34;
			list23[2] = uninitializedObject35;
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject33, "Csv");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject33, false);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject33, methodReference);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject33, uninitializedObject31);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject33, "Csv");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject33, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject33, array12);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject33, list24);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject33, dictionary13);
			array12[0] = optional;
			array12[1] = optional2;
			array12[2] = optional3;
			array12[3] = optional4;
			array12[4] = optional5;
			array12[5] = optional6;
			array12[6] = optional7;
			array12[7] = optional8;
			array12[8] = optional9;
			array12[9] = optional10;
			list24[0] = uninitializedObject2;
			list24[1] = uninitializedObject5;
			list24[2] = uninitializedObject8;
			list24[3] = uninitializedObject11;
			list24[4] = uninitializedObject13;
			list24[5] = uninitializedObject18;
			list24[6] = uninitializedObject21;
			list24[7] = uninitializedObject24;
			list24[8] = uninitializedObject27;
			list24[9] = uninitializedObject29;
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject34, "Fw");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject34, false);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject34, methodReference2);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject34, uninitializedObject31);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject34, "Fw");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject34, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject34, array13);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject34, list25);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject34, dictionary14);
			array13[0] = optional11;
			array13[1] = optional12;
			array13[2] = optional13;
			array13[3] = optional14;
			array13[4] = optional15;
			array13[5] = optional16;
			array13[6] = optional17;
			list25[0] = uninitializedObject2;
			list25[1] = uninitializedObject5;
			list25[2] = uninitializedObject8;
			list25[3] = uninitializedObject11;
			list25[4] = uninitializedObject15;
			list25[5] = uninitializedObject18;
			list25[6] = uninitializedObject21;
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject35, "StringRegionToStringTable");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject35, false);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject35, methodReference3);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject35, uninitializedObject31);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject35, "StringRegionToStringTable");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject35, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject35, array14);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject35, list26);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject35, dictionary15);
			array14[0] = optional18;
			list26[0] = uninitializedObject36;
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject36, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject36, uninitializedObject37);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject36, "eText");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject36, false);
			typeof(ResolvedType).GetField("_typeField", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject37, typeFromHandle9);
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject38, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject38, uninitializedObject39);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject38, "_LetB0");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject38, false);
			typeof(ResolvedType).GetField("_typeField", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject39, typeFromHandle10);
			list27[0] = uninitializedObject40;
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject40, "CreateStringRegion");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject40, false);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject40, methodReference4);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject40, uninitializedObject38);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject40, "CreateStringRegion");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject40, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject40, array15);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject40, list28);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject40, dictionary16);
			array15[0] = optional19;
			list28[0] = uninitializedObject2;
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject41, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject41, uninitializedObject37);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject41, "_LetB1");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject41, false);
			list29[0] = uninitializedObject42;
			typeof(ConversionRule).GetProperty("ExternSymbolUsage", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject42, uninitializedObject43);
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject42, "~convert_eText_output");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject42, false);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject42, methodReference5);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject42, uninitializedObject41);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject42, "ETextOutput");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject42, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject42, array16);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject42, list30);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject42, dictionary18);
			typeof(ExternalSymbolUsage).GetProperty("Substitutions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject43, dictionary17);
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject44, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject44, uninitializedObject39);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject44, "fileRegion");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject44, false);
			array16[0] = optional20;
			list30[0] = symbol2;
			list31[0] = uninitializedObject45;
			typeof(LetRule).GetProperty("Variable", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject45, uninitializedObject44);
			typeof(LetRule).GetProperty("Value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject45, uninitializedObject38);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject45, uninitializedObject36);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject45, "LetEText");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject45, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject45, array17);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject45, list32);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject45, dictionary19);
			array17[0] = optional21;
			array17[1] = optional22;
			list32[0] = uninitializedObject38;
			list32[1] = uninitializedObject41;
			list34[0] = uninitializedObject4;
			list35[0] = uninitializedObject7;
			list36[0] = uninitializedObject10;
			list37[0] = uninitializedObject12;
			list38[0] = uninitializedObject14;
			list39[0] = uninitializedObject17;
			list40[0] = uninitializedObject20;
			list41[0] = uninitializedObject23;
			list42[0] = uninitializedObject26;
			list43[0] = uninitializedObject28;
			list44[0] = uninitializedObject30;
			list45[0] = uninitializedObject33;
			list45[1] = uninitializedObject34;
			list45[2] = uninitializedObject35;
			list46[0] = uninitializedObject40;
			list47[0] = uninitializedObject42;
			list48[0] = uninitializedObject45;
			list49[0] = uninitializedObject33;
			list49[1] = uninitializedObject34;
			list49[2] = uninitializedObject40;
			list50[0] = uninitializedObject33;
			list50[1] = uninitializedObject34;
			list51[0] = uninitializedObject33;
			list51[1] = uninitializedObject34;
			list52[0] = uninitializedObject33;
			list52[1] = uninitializedObject34;
			list53[0] = uninitializedObject33;
			list54[0] = uninitializedObject33;
			list54[1] = uninitializedObject34;
			list55[0] = uninitializedObject33;
			list55[1] = uninitializedObject34;
			list56[0] = uninitializedObject33;
			list57[0] = uninitializedObject33;
			list58[0] = uninitializedObject33;
			list59[0] = uninitializedObject34;
			list60[0] = uninitializedObject35;
			list61[0] = uninitializedObject42;
			list62[0] = uninitializedObject45;
			list63[0] = uninitializedObject45;
			list64[0] = uninitializedObject4;
			list64[1] = uninitializedObject7;
			list64[2] = uninitializedObject10;
			list64[3] = uninitializedObject12;
			list64[4] = uninitializedObject14;
			list64[5] = uninitializedObject17;
			list64[6] = uninitializedObject20;
			list64[7] = uninitializedObject23;
			list64[8] = uninitializedObject26;
			list64[9] = uninitializedObject28;
			list64[10] = uninitializedObject30;
			list64[11] = uninitializedObject33;
			list64[12] = uninitializedObject34;
			list64[13] = uninitializedObject35;
			list64[14] = uninitializedObject40;
			list64[15] = uninitializedObject42;
			list64[16] = uninitializedObject45;
			list65[0] = uninitializedObject46;
			typeof(FeatureInfo).GetProperty("PropertyType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject46, typeFromHandle11);
			typeof(FeatureInfo).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject46, "Score");
			typeof(FeatureInfo).GetProperty("Holders", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject46, list66);
			typeof(FeatureInfo).GetProperty("IsComplete", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject46, true);
			list66[0] = typeFromHandle12;
			list67[0] = uninitializedObject47;
			typeof(ResolvedType).GetField("_typeField", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject47, typeFromHandle13);
			dictionary23["EText"] = grammar;
			dictionary24["file"] = uninitializedObject2;
			dictionary24["columnNames"] = uninitializedObject5;
			dictionary24["skip"] = uninitializedObject8;
			dictionary24["skipFooter"] = uninitializedObject11;
			dictionary24["delimiter"] = uninitializedObject13;
			dictionary24["fieldPositions"] = uninitializedObject15;
			dictionary24["filterEmptyLines"] = uninitializedObject18;
			dictionary24["commentStr"] = uninitializedObject21;
			dictionary24["quoteChar"] = uninitializedObject24;
			dictionary24["escapeChar"] = uninitializedObject27;
			dictionary24["doubleQuote"] = uninitializedObject29;
			dictionary24["readFlatFile"] = uninitializedObject31;
			dictionary24["eText"] = uninitializedObject36;
			dictionary24["fileRegion"] = uninitializedObject44;
			dictionary24["_LetB0"] = uninitializedObject38;
			dictionary24["_LetB1"] = uninitializedObject41;
			dictionary22["file"] = uninitializedObject4;
			dictionary22["columnNames"] = uninitializedObject7;
			dictionary22["skip"] = uninitializedObject10;
			dictionary22["skipFooter"] = uninitializedObject12;
			dictionary22["delimiter"] = uninitializedObject14;
			dictionary22["fieldPositions"] = uninitializedObject17;
			dictionary22["filterEmptyLines"] = uninitializedObject20;
			dictionary22["commentStr"] = uninitializedObject23;
			dictionary22["quoteChar"] = uninitializedObject26;
			dictionary22["escapeChar"] = uninitializedObject28;
			dictionary22["doubleQuote"] = uninitializedObject30;
			dictionary22["Csv"] = uninitializedObject33;
			dictionary22["Fw"] = uninitializedObject34;
			dictionary22["StringRegionToStringTable"] = uninitializedObject35;
			dictionary22["CreateStringRegion"] = uninitializedObject40;
			dictionary22["ETextOutput"] = uninitializedObject42;
			dictionary22["LetEText"] = uninitializedObject45;
			dictionary17[symbol] = uninitializedObject44;
			dictionary21[uninitializedObject2] = list49;
			dictionary21[uninitializedObject5] = list50;
			dictionary21[uninitializedObject8] = list51;
			dictionary21[uninitializedObject11] = list52;
			dictionary21[uninitializedObject13] = list53;
			dictionary21[uninitializedObject18] = list54;
			dictionary21[uninitializedObject21] = list55;
			dictionary21[uninitializedObject24] = list56;
			dictionary21[uninitializedObject27] = list57;
			dictionary21[uninitializedObject29] = list58;
			dictionary21[uninitializedObject15] = list59;
			dictionary21[uninitializedObject36] = list60;
			dictionary21[symbol2] = list61;
			dictionary21[uninitializedObject38] = list62;
			dictionary21[uninitializedObject41] = list63;
			dictionary20[uninitializedObject2] = list34;
			dictionary20[uninitializedObject5] = list35;
			dictionary20[uninitializedObject8] = list36;
			dictionary20[uninitializedObject11] = list37;
			dictionary20[uninitializedObject13] = list38;
			dictionary20[uninitializedObject15] = list39;
			dictionary20[uninitializedObject18] = list40;
			dictionary20[uninitializedObject21] = list41;
			dictionary20[uninitializedObject24] = list42;
			dictionary20[uninitializedObject27] = list43;
			dictionary20[uninitializedObject29] = list44;
			dictionary20[uninitializedObject31] = list45;
			dictionary20[uninitializedObject38] = list46;
			dictionary20[uninitializedObject41] = list47;
			dictionary20[uninitializedObject36] = list48;
			dictionary[uninitializedObject2] = list;
			dictionary[uninitializedObject5] = list3;
			dictionary[uninitializedObject8] = list5;
			dictionary[uninitializedObject11] = list7;
			dictionary[uninitializedObject13] = list9;
			dictionary[uninitializedObject15] = list11;
			dictionary[uninitializedObject18] = list13;
			dictionary[uninitializedObject21] = list15;
			dictionary[uninitializedObject24] = list17;
			dictionary[uninitializedObject27] = list19;
			dictionary[uninitializedObject29] = list21;
			dictionary[uninitializedObject31] = list23;
			dictionary[uninitializedObject38] = list27;
			dictionary[uninitializedObject41] = list29;
			dictionary[uninitializedObject36] = list31;
			dictionary[uninitializedObject44] = list33;
			return uninitializedObject;
		}

		// Token: 0x040039DB RID: 14811
		private static readonly Lazy<Grammar> _grammar = new Lazy<Grammar>(new Func<Grammar>(Language.Initialize), LazyThreadSafetyMode.ExecutionAndPublication);

		// Token: 0x040039DC RID: 14812
		private static readonly Assembly MPSAssembly = typeof(GrammarRule).GetTypeInfo().Assembly;

		// Token: 0x040039DD RID: 14813
		private const BindingFlags Flags = BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic;
	}
}
