using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Reflection;
using System.Threading;
using Microsoft.ProgramSynthesis.Extraction.Json.Build;
using Microsoft.ProgramSynthesis.Extraction.Json.Learning;
using Microsoft.ProgramSynthesis.Extraction.Json.Semantics;
using Microsoft.ProgramSynthesis.Features;
using Microsoft.ProgramSynthesis.Learning;
using Microsoft.ProgramSynthesis.Rules;
using Microsoft.ProgramSynthesis.Rules.Concepts;
using Microsoft.ProgramSynthesis.Utils;
using Microsoft.ProgramSynthesis.Wrangling.Json;
using Microsoft.ProgramSynthesis.Wrangling.Schema.TreeOutput;

namespace Microsoft.ProgramSynthesis.Extraction.Json
{
	// Token: 0x02000B39 RID: 2873
	public static class Language
	{
		// Token: 0x17000CDE RID: 3294
		// (get) Token: 0x060047A6 RID: 18342 RVA: 0x000E0E05 File Offset: 0x000DF005
		public static Grammar Grammar
		{
			get
			{
				return Language._grammar.Value;
			}
		}

		// Token: 0x17000CDF RID: 3295
		// (get) Token: 0x060047A7 RID: 18343 RVA: 0x000E0E11 File Offset: 0x000DF011
		public static GrammarBuilders Build
		{
			get
			{
				return GrammarBuilders.Instance(Language.Grammar);
			}
		}

		// Token: 0x060047A8 RID: 18344 RVA: 0x000E0E20 File Offset: 0x000DF020
		private static Grammar Initialize()
		{
			Grammar uninitializedObject = CSharpUtils.GetUninitializedObject<Grammar>();
			Dictionary<Symbol, List<GrammarRule>> dictionary = new Dictionary<Symbol, List<GrammarRule>>();
			Symbol uninitializedObject2 = CSharpUtils.GetUninitializedObject<Symbol>();
			ResolvedType uninitializedObject3 = CSharpUtils.GetUninitializedObject<ResolvedType>();
			Type typeFromHandle = typeof(JsonRegion);
			List<GrammarRule> list = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			TerminalRule uninitializedObject4 = CSharpUtils.GetUninitializedObject<TerminalRule>();
			Optional<int>[] array = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 0);
			List<Symbol> list2 = Enumerable.Repeat<Symbol>(null, 0).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary2 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			Symbol uninitializedObject5 = CSharpUtils.GetUninitializedObject<Symbol>();
			ResolvedType uninitializedObject6 = CSharpUtils.GetUninitializedObject<ResolvedType>();
			Type typeFromHandle2 = typeof(JPath);
			List<GrammarRule> list3 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			TerminalRule uninitializedObject7 = CSharpUtils.GetUninitializedObject<TerminalRule>();
			Optional<int>[] array2 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 0);
			List<Symbol> list4 = Enumerable.Repeat<Symbol>(null, 0).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary3 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			Symbol uninitializedObject8 = CSharpUtils.GetUninitializedObject<Symbol>();
			ResolvedType uninitializedObject9 = CSharpUtils.GetUninitializedObject<ResolvedType>();
			Type typeFromHandle3 = typeof(string);
			List<GrammarRule> list5 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			TerminalRule uninitializedObject10 = CSharpUtils.GetUninitializedObject<TerminalRule>();
			Optional<int>[] array3 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 0);
			List<Symbol> list6 = Enumerable.Repeat<Symbol>(null, 0).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary4 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			Symbol uninitializedObject11 = CSharpUtils.GetUninitializedObject<Symbol>();
			ResolvedType uninitializedObject12 = CSharpUtils.GetUninitializedObject<ResolvedType>();
			Type typeFromHandle4 = typeof(ITreeOutput<JsonRegion>);
			List<GrammarRule> list7 = Enumerable.Repeat<GrammarRule>(null, 2).ToList<GrammarRule>();
			ConversionRule uninitializedObject13 = CSharpUtils.GetUninitializedObject<ConversionRule>();
			ExternalSymbolUsage uninitializedObject14 = CSharpUtils.GetUninitializedObject<ExternalSymbolUsage>();
			Dictionary<Symbol, Symbol> dictionary5 = new Dictionary<Symbol, Symbol>();
			MethodReference methodReference = null;
			Optional<int>[] array4 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 1);
			Optional<int> optional = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list8 = Enumerable.Repeat<Symbol>(null, 1).ToList<Symbol>();
			Symbol uninitializedObject15 = CSharpUtils.GetUninitializedObject<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary6 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			ConversionRule uninitializedObject16 = CSharpUtils.GetUninitializedObject<ConversionRule>();
			ExternalSymbolUsage uninitializedObject17 = CSharpUtils.GetUninitializedObject<ExternalSymbolUsage>();
			Dictionary<Symbol, Symbol> dictionary7 = new Dictionary<Symbol, Symbol>();
			MethodReference methodReference2 = null;
			Optional<int>[] array5 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 1);
			Optional<int> optional2 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list9 = Enumerable.Repeat<Symbol>(null, 1).ToList<Symbol>();
			Symbol uninitializedObject18 = CSharpUtils.GetUninitializedObject<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary8 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			List<GrammarRule> list10 = Enumerable.Repeat<GrammarRule>(null, 2).ToList<GrammarRule>();
			BlackBoxRule uninitializedObject19 = CSharpUtils.GetUninitializedObject<BlackBoxRule>();
			MethodReference methodReference3 = MethodReference.WithoutReference<OperatorRule.OperatorSemantics>((object[] arg0) => Semantics.Struct((JsonRegion)arg0[0], (arg0[1] == null) ? null : ((arg0[1] as IEnumerable<ITreeOutput<JsonRegion>>) ?? (arg0[1] as IEnumerable).Cast<ITreeOutput<JsonRegion>>())));
			Optional<int>[] array6 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 2);
			Optional<int> optional3 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional4 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list11 = Enumerable.Repeat<Symbol>(null, 2).ToList<Symbol>();
			Symbol uninitializedObject20 = CSharpUtils.GetUninitializedObject<Symbol>();
			ResolvedType uninitializedObject21 = CSharpUtils.GetUninitializedObject<ResolvedType>();
			Type typeFromHandle5 = typeof(IEnumerable<ITreeOutput<JsonRegion>>);
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary9 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			BlackBoxRule uninitializedObject22 = CSharpUtils.GetUninitializedObject<BlackBoxRule>();
			MethodReference methodReference4 = MethodReference.WithoutReference<OperatorRule.OperatorSemantics>((object[] arg0) => Semantics.Field((JsonRegion)arg0[0], (string)arg0[1], (JsonRegion)arg0[2]));
			Optional<int>[] array7 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 3);
			Optional<int> optional5 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional6 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional7 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list12 = Enumerable.Repeat<Symbol>(null, 3).ToList<Symbol>();
			Symbol uninitializedObject23 = CSharpUtils.GetUninitializedObject<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary10 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			List<GrammarRule> list13 = Enumerable.Repeat<GrammarRule>(null, 3).ToList<GrammarRule>();
			BlackBoxRule uninitializedObject24 = CSharpUtils.GetUninitializedObject<BlackBoxRule>();
			MethodReference methodReference5 = MethodReference.WithoutReference<OperatorRule.OperatorSemantics>((object[] arg0) => Semantics.Concat((ITreeOutput<JsonRegion>)arg0[0], (arg0[1] == null) ? null : ((arg0[1] as IEnumerable<ITreeOutput<JsonRegion>>) ?? (arg0[1] as IEnumerable).Cast<ITreeOutput<JsonRegion>>())));
			Optional<int>[] array8 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 2);
			Optional<int> optional8 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional9 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list14 = Enumerable.Repeat<Symbol>(null, 2).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary11 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			BlackBoxRule uninitializedObject25 = CSharpUtils.GetUninitializedObject<BlackBoxRule>();
			MethodReference methodReference6 = MethodReference.WithoutReference<OperatorRule.OperatorSemantics>((object[] arg0) => Semantics.ToList((ITreeOutput<JsonRegion>)arg0[0]));
			Optional<int>[] array9 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 1);
			Optional<int> optional10 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list15 = Enumerable.Repeat<Symbol>(null, 1).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary12 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			BlackBoxRule uninitializedObject26 = CSharpUtils.GetUninitializedObject<BlackBoxRule>();
			MethodReference methodReference7 = MethodReference.WithoutReference<OperatorRule.OperatorSemantics>((object[] arg0) => Semantics.Empty());
			Optional<int>[] array10 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 0);
			List<Symbol> list16 = Enumerable.Repeat<Symbol>(null, 0).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary13 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			List<GrammarRule> list17 = Enumerable.Repeat<GrammarRule>(null, 2).ToList<GrammarRule>();
			BlackBoxRule uninitializedObject27 = CSharpUtils.GetUninitializedObject<BlackBoxRule>();
			MethodReference methodReference8 = MethodReference.WithoutReference<OperatorRule.OperatorSemantics>((object[] arg0) => Semantics.Sequence((string)arg0[0], (arg0[1] == null) ? null : ((arg0[1] as IEnumerable<JsonRegion>) ?? (arg0[1] as IEnumerable).Cast<JsonRegion>())));
			Optional<int>[] array11 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 2);
			Optional<int> optional11 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional12 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list18 = Enumerable.Repeat<Symbol>(null, 2).ToList<Symbol>();
			Symbol uninitializedObject28 = CSharpUtils.GetUninitializedObject<Symbol>();
			ResolvedType uninitializedObject29 = CSharpUtils.GetUninitializedObject<ResolvedType>();
			Type typeFromHandle6 = typeof(IEnumerable<JsonRegion>);
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary14 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			BlackBoxRule uninitializedObject30 = CSharpUtils.GetUninitializedObject<BlackBoxRule>();
			MethodReference methodReference9 = MethodReference.WithoutReference<OperatorRule.OperatorSemantics>((object[] arg0) => Semantics.DummySequence((arg0[0] == null) ? null : ((arg0[0] as IEnumerable<ITreeOutput<JsonRegion>>) ?? (arg0[0] as IEnumerable).Cast<ITreeOutput<JsonRegion>>())));
			Optional<int>[] array12 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 1);
			Optional<int> optional13 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list19 = Enumerable.Repeat<Symbol>(null, 1).ToList<Symbol>();
			Symbol uninitializedObject31 = CSharpUtils.GetUninitializedObject<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary15 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			Symbol uninitializedObject32 = CSharpUtils.GetUninitializedObject<Symbol>();
			ResolvedType uninitializedObject33 = CSharpUtils.GetUninitializedObject<ResolvedType>();
			Type typeFromHandle7 = typeof(Func<JsonRegion, ITreeOutput<JsonRegion>>);
			List<GrammarRule> list20 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			LambdaRule uninitializedObject34 = CSharpUtils.GetUninitializedObject<LambdaRule>();
			Symbol uninitializedObject35 = CSharpUtils.GetUninitializedObject<Symbol>();
			Optional<int>[] array13 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 1);
			Optional<int> optional14 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list21 = Enumerable.Repeat<Symbol>(null, 1).ToList<Symbol>();
			Symbol uninitializedObject36 = CSharpUtils.GetUninitializedObject<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary16 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			List<GrammarRule> list22 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			BlackBoxRule uninitializedObject37 = CSharpUtils.GetUninitializedObject<BlackBoxRule>();
			MethodReference methodReference10 = MethodReference.WithoutReference<OperatorRule.OperatorSemantics>((object[] arg0) => Semantics.SelectSequence((JsonRegion)arg0[0], (JPath)arg0[1]));
			Optional<int>[] array14 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 2);
			Optional<int> optional15 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional16 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list23 = Enumerable.Repeat<Symbol>(null, 2).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary17 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			List<GrammarRule> list24 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			Map uninitializedObject38 = CSharpUtils.GetUninitializedObject<Map>();
			List<ConceptParameterUsage> list25 = Enumerable.Repeat<ConceptParameterUsage>(default(ConceptParameterUsage), 2).ToList<ConceptParameterUsage>();
			ConceptParameterUsage conceptParameterUsage = CSharpUtils.GetUninitializedObject<ConceptParameterUsage>();
			Optional<int> optional17 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			ParameterUsage parameterUsage = ParameterUsage.PassOn;
			ConceptParameterUsage conceptParameterUsage2 = CSharpUtils.GetUninitializedObject<ConceptParameterUsage>();
			Optional<int> optional18 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			ParameterUsage parameterUsage2 = ParameterUsage.FillIn;
			MethodReference methodReference11 = null;
			Optional<int>[] array15 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 2);
			Optional<int> optional19 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional20 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list26 = Enumerable.Repeat<Symbol>(null, 2).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary18 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			List<GrammarRule> list27 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			LetRule uninitializedObject39 = CSharpUtils.GetUninitializedObject<LetRule>();
			Optional<int>[] array16 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 2);
			Optional<int> optional21 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional22 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list28 = Enumerable.Repeat<Symbol>(null, 2).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary19 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			List<GrammarRule> list29 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			BlackBoxRule uninitializedObject40 = CSharpUtils.GetUninitializedObject<BlackBoxRule>();
			MethodReference methodReference12 = MethodReference.WithoutReference<OperatorRule.OperatorSemantics>((object[] arg0) => Semantics.SelectRegion((JsonRegion)arg0[0], (JPath)arg0[1]));
			Optional<int>[] array17 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 2);
			Optional<int> optional23 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional24 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list30 = Enumerable.Repeat<Symbol>(null, 2).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary20 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			List<GrammarRule> list31 = Enumerable.Repeat<GrammarRule>(null, 0).ToList<GrammarRule>();
			Dictionary<Symbol, List<GrammarRule>> dictionary21 = new Dictionary<Symbol, List<GrammarRule>>();
			List<GrammarRule> list32 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list33 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list34 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list35 = Enumerable.Repeat<GrammarRule>(null, 2).ToList<GrammarRule>();
			List<GrammarRule> list36 = Enumerable.Repeat<GrammarRule>(null, 2).ToList<GrammarRule>();
			List<GrammarRule> list37 = Enumerable.Repeat<GrammarRule>(null, 3).ToList<GrammarRule>();
			List<GrammarRule> list38 = Enumerable.Repeat<GrammarRule>(null, 2).ToList<GrammarRule>();
			List<GrammarRule> list39 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list40 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list41 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list42 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list43 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			Dictionary<Symbol, List<GrammarRule>> dictionary22 = new Dictionary<Symbol, List<GrammarRule>>();
			List<GrammarRule> list44 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list45 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list46 = Enumerable.Repeat<GrammarRule>(null, 4).ToList<GrammarRule>();
			List<GrammarRule> list47 = Enumerable.Repeat<GrammarRule>(null, 2).ToList<GrammarRule>();
			List<GrammarRule> list48 = Enumerable.Repeat<GrammarRule>(null, 2).ToList<GrammarRule>();
			List<GrammarRule> list49 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list50 = Enumerable.Repeat<GrammarRule>(null, 3).ToList<GrammarRule>();
			List<GrammarRule> list51 = Enumerable.Repeat<GrammarRule>(null, 2).ToList<GrammarRule>();
			List<GrammarRule> list52 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list53 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list54 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list55 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list56 = Enumerable.Repeat<GrammarRule>(null, 2).ToList<GrammarRule>();
			Dictionary<string, GrammarRule> dictionary23 = new Dictionary<string, GrammarRule>();
			List<GrammarRule> list57 = Enumerable.Repeat<GrammarRule>(null, 17).ToList<GrammarRule>();
			List<FeatureInfo> list58 = Enumerable.Repeat<FeatureInfo>(null, 1).ToList<FeatureInfo>();
			FeatureInfo uninitializedObject41 = CSharpUtils.GetUninitializedObject<FeatureInfo>();
			Type typeFromHandle8 = typeof(double);
			List<Type> list59 = Enumerable.Repeat<Type>(null, 1).ToList<Type>();
			Type typeFromHandle9 = typeof(RankingScore);
			Dictionary<string, Grammar> dictionary24 = new Dictionary<string, Grammar>();
			List<GrammarType> list60 = Enumerable.Repeat<GrammarType>(null, 1).ToList<GrammarType>();
			ResolvedType uninitializedObject42 = CSharpUtils.GetUninitializedObject<ResolvedType>();
			Type typeFromHandle10 = typeof(Semantics);
			List<GrammarType> list61 = Enumerable.Repeat<GrammarType>(null, 1).ToList<GrammarType>();
			ResolvedType uninitializedObject43 = CSharpUtils.GetUninitializedObject<ResolvedType>();
			Type typeFromHandle11 = typeof(Witnesses);
			Dictionary<string, Symbol> dictionary25 = new Dictionary<string, Symbol>();
			object obj = optional24;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj, false);
			optional24 = (Optional<int>)obj;
			object obj2 = optional23;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj2, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj2, false);
			optional23 = (Optional<int>)obj2;
			object obj3 = optional22;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj3, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj3, false);
			optional22 = (Optional<int>)obj3;
			object obj4 = optional21;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj4, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj4, false);
			optional21 = (Optional<int>)obj4;
			object obj5 = optional20;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj5, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj5, false);
			optional20 = (Optional<int>)obj5;
			object obj6 = optional19;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj6, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj6, false);
			optional19 = (Optional<int>)obj6;
			object obj7 = optional18;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj7, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj7, false);
			optional18 = (Optional<int>)obj7;
			object obj8 = conceptParameterUsage2;
			typeof(ConceptParameterUsage).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj8, optional18);
			typeof(ConceptParameterUsage).GetProperty("DSLParameter", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj8, uninitializedObject28);
			typeof(ConceptParameterUsage).GetProperty("ConceptIndex", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj8, 1);
			typeof(ConceptParameterUsage).GetProperty("Usage", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj8, parameterUsage2);
			conceptParameterUsage2 = (ConceptParameterUsage)obj8;
			object obj9 = optional17;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj9, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj9, false);
			optional17 = (Optional<int>)obj9;
			object obj10 = conceptParameterUsage;
			typeof(ConceptParameterUsage).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj10, optional17);
			typeof(ConceptParameterUsage).GetProperty("DSLParameter", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj10, uninitializedObject36);
			typeof(ConceptParameterUsage).GetProperty("ConceptIndex", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj10, 0);
			typeof(ConceptParameterUsage).GetProperty("Usage", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj10, parameterUsage);
			conceptParameterUsage = (ConceptParameterUsage)obj10;
			object obj11 = optional16;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj11, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj11, false);
			optional16 = (Optional<int>)obj11;
			object obj12 = optional15;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj12, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj12, false);
			optional15 = (Optional<int>)obj12;
			object obj13 = optional14;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj13, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj13, false);
			optional14 = (Optional<int>)obj13;
			object obj14 = optional13;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj14, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj14, false);
			optional13 = (Optional<int>)obj14;
			object obj15 = optional12;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj15, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj15, false);
			optional12 = (Optional<int>)obj15;
			object obj16 = optional11;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj16, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj16, false);
			optional11 = (Optional<int>)obj16;
			object obj17 = optional10;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj17, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj17, false);
			optional10 = (Optional<int>)obj17;
			object obj18 = optional9;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj18, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj18, false);
			optional9 = (Optional<int>)obj18;
			object obj19 = optional8;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj19, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj19, false);
			optional8 = (Optional<int>)obj19;
			object obj20 = optional7;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj20, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj20, false);
			optional7 = (Optional<int>)obj20;
			object obj21 = optional6;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj21, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj21, false);
			optional6 = (Optional<int>)obj21;
			object obj22 = optional5;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj22, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj22, false);
			optional5 = (Optional<int>)obj22;
			object obj23 = optional4;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj23, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj23, false);
			optional4 = (Optional<int>)obj23;
			object obj24 = optional3;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj24, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj24, false);
			optional3 = (Optional<int>)obj24;
			object obj25 = optional2;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj25, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj25, false);
			optional2 = (Optional<int>)obj25;
			object obj26 = optional;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj26, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj26, false);
			optional = (Optional<int>)obj26;
			typeof(Grammar).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject, "Extraction.Json");
			typeof(Grammar).GetField("_rulesByHead", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject, dictionary);
			typeof(Grammar).GetField("_nonDeprecatedRulesByHead", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject, dictionary21);
			typeof(Grammar).GetField("_rulesByBody", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject, dictionary22);
			typeof(Grammar).GetField("_rulesByName", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject, dictionary23);
			typeof(Grammar).GetField("_rules", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject, list57);
			typeof(Grammar).GetField("_features", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject, list58);
			typeof(Grammar).GetField("_grammarReferences", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject, dictionary24);
			typeof(Grammar).GetField("_semanticsLocations", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject, list60);
			typeof(Grammar).GetField("_learnerLocations", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject, list61);
			typeof(Grammar).GetField("_symbols", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject, dictionary25);
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject2, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject2, uninitializedObject3);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject2, "v");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject2, false);
			typeof(ResolvedType).GetField("_typeField", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject3, typeFromHandle);
			list[0] = uninitializedObject4;
			typeof(TerminalRule).GetProperty("IsInput", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject4, true);
			typeof(TerminalRule).GetProperty("GeneratorReference", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject4, null);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject4, uninitializedObject2);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject4, "v");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject4, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject4, array);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject4, list2);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject4, dictionary2);
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject5, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject5, uninitializedObject6);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject5, "path");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject5, false);
			typeof(ResolvedType).GetField("_typeField", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject6, typeFromHandle2);
			list3[0] = uninitializedObject7;
			typeof(TerminalRule).GetProperty("IsInput", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject7, false);
			typeof(TerminalRule).GetProperty("GeneratorReference", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject7, null);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject7, uninitializedObject5);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject7, "path");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject7, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject7, array2);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject7, list4);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject7, dictionary3);
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject8, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject8, uninitializedObject9);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject8, "id");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject8, false);
			typeof(ResolvedType).GetField("_typeField", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject9, typeFromHandle3);
			list5[0] = uninitializedObject10;
			typeof(TerminalRule).GetProperty("IsInput", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject10, false);
			typeof(TerminalRule).GetProperty("GeneratorReference", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject10, null);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject10, uninitializedObject8);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject10, "id");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject10, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject10, array3);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject10, list6);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject10, dictionary4);
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject11, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject11, uninitializedObject12);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject11, "output");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject11, true);
			typeof(ResolvedType).GetField("_typeField", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject12, typeFromHandle4);
			list7[0] = uninitializedObject13;
			list7[1] = uninitializedObject16;
			typeof(ConversionRule).GetProperty("ExternSymbolUsage", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject13, uninitializedObject14);
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject13, "~convert_output_struct");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject13, false);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject13, methodReference);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject13, uninitializedObject11);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject13, "~convert_output_struct");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject13, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject13, array4);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject13, list8);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject13, dictionary6);
			typeof(ExternalSymbolUsage).GetProperty("Substitutions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject14, dictionary5);
			array4[0] = optional;
			list8[0] = uninitializedObject15;
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject15, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject15, uninitializedObject12);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject15, "struct");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject15, false);
			typeof(ConversionRule).GetProperty("ExternSymbolUsage", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject16, uninitializedObject17);
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject16, "~convert_output_sequence");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject16, false);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject16, methodReference2);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject16, uninitializedObject11);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject16, "~convert_output_sequence");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject16, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject16, array5);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject16, list9);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject16, dictionary8);
			typeof(ExternalSymbolUsage).GetProperty("Substitutions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject17, dictionary7);
			array5[0] = optional2;
			list9[0] = uninitializedObject18;
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject18, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject18, uninitializedObject12);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject18, "sequence");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject18, false);
			list10[0] = uninitializedObject19;
			list10[1] = uninitializedObject22;
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject19, "Struct");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject19, false);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject19, methodReference3);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject19, uninitializedObject15);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject19, "Struct");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject19, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject19, array6);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject19, list11);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject19, dictionary9);
			array6[0] = optional3;
			array6[1] = optional4;
			list11[0] = uninitializedObject2;
			list11[1] = uninitializedObject20;
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject20, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject20, uninitializedObject21);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject20, "structBodyRec");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject20, false);
			typeof(ResolvedType).GetField("_typeField", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject21, typeFromHandle5);
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject22, "Field");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject22, true);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject22, methodReference4);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject22, uninitializedObject15);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject22, "Field");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject22, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject22, array7);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject22, list12);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject22, dictionary10);
			array7[0] = optional5;
			array7[1] = optional6;
			array7[2] = optional7;
			list12[0] = uninitializedObject2;
			list12[1] = uninitializedObject8;
			list12[2] = uninitializedObject23;
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject23, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject23, uninitializedObject3);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject23, "selectRegion");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject23, false);
			list13[0] = uninitializedObject24;
			list13[1] = uninitializedObject25;
			list13[2] = uninitializedObject26;
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject24, "Concat");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject24, false);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject24, methodReference5);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject24, uninitializedObject20);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject24, "Concat");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject24, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject24, array8);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject24, list14);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject24, dictionary11);
			array8[0] = optional8;
			array8[1] = optional9;
			list14[0] = uninitializedObject11;
			list14[1] = uninitializedObject20;
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject25, "ToList");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject25, false);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject25, methodReference6);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject25, uninitializedObject20);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject25, "ToList");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject25, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject25, array9);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject25, list15);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject25, dictionary12);
			array9[0] = optional10;
			list15[0] = uninitializedObject11;
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject26, "Empty");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject26, false);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject26, methodReference7);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject26, uninitializedObject20);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject26, "Empty");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject26, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject26, array10);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject26, list16);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject26, dictionary13);
			list17[0] = uninitializedObject27;
			list17[1] = uninitializedObject30;
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject27, "Sequence");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject27, false);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject27, methodReference8);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject27, uninitializedObject18);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject27, "Sequence");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject27, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject27, array11);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject27, list18);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject27, dictionary14);
			array11[0] = optional11;
			array11[1] = optional12;
			list18[0] = uninitializedObject8;
			list18[1] = uninitializedObject28;
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject28, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject28, uninitializedObject29);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject28, "selectSequence");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject28, false);
			typeof(ResolvedType).GetField("_typeField", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject29, typeFromHandle6);
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject30, "DummySequence");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject30, false);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject30, methodReference9);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject30, uninitializedObject18);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject30, "DummySequence");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject30, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject30, array12);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject30, list19);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject30, dictionary15);
			array12[0] = optional13;
			list19[0] = uninitializedObject31;
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject31, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject31, uninitializedObject21);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject31, "sequenceBody");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject31, false);
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject32, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject32, uninitializedObject33);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject32, "_LFun0");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject32, false);
			typeof(ResolvedType).GetField("_typeField", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject33, typeFromHandle7);
			list20[0] = uninitializedObject34;
			typeof(LambdaRule).GetProperty("Variable", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject34, uninitializedObject35);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject34, uninitializedObject32);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject34, null);
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject34, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject34, array13);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject34, list21);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject34, dictionary16);
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject35, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject35, uninitializedObject3);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject35, "x");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject35, false);
			array13[0] = optional14;
			list21[0] = uninitializedObject36;
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject36, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject36, uninitializedObject12);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject36, "wrapStruct");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject36, false);
			list22[0] = uninitializedObject37;
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject37, "SelectSequence");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject37, false);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject37, methodReference10);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject37, uninitializedObject28);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject37, "SelectSequence");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject37, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject37, array14);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject37, list23);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject37, dictionary17);
			array14[0] = optional15;
			array14[1] = optional16;
			list23[0] = uninitializedObject2;
			list23[1] = uninitializedObject5;
			list24[0] = uninitializedObject38;
			typeof(ConceptRule).GetField("DslBodyMapping", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject38, list25);
			typeof(ConceptRule).GetField("_dslBody", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject38, null);
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject38, "Map");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject38, false);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject38, methodReference11);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject38, uninitializedObject31);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject38, "SequenceBody");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject38, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject38, array15);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject38, list26);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject38, dictionary18);
			list25[0] = conceptParameterUsage;
			list25[1] = conceptParameterUsage2;
			array15[0] = optional19;
			array15[1] = optional20;
			list26[0] = uninitializedObject32;
			list26[1] = uninitializedObject28;
			list27[0] = uninitializedObject39;
			typeof(LetRule).GetProperty("Variable", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject39, uninitializedObject2);
			typeof(LetRule).GetProperty("Value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject39, uninitializedObject35);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject39, uninitializedObject36);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject39, "WrapStructLet");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject39, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject39, array16);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject39, list28);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject39, dictionary19);
			array16[0] = optional21;
			array16[1] = optional22;
			list28[0] = uninitializedObject35;
			list28[1] = uninitializedObject11;
			list29[0] = uninitializedObject40;
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject40, "SelectRegion");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject40, false);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject40, methodReference12);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject40, uninitializedObject23);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject40, "SelectRegion");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject40, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject40, array17);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject40, list30);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject40, dictionary20);
			array17[0] = optional23;
			array17[1] = optional24;
			list30[0] = uninitializedObject2;
			list30[1] = uninitializedObject5;
			list32[0] = uninitializedObject4;
			list33[0] = uninitializedObject7;
			list34[0] = uninitializedObject10;
			list35[0] = uninitializedObject13;
			list35[1] = uninitializedObject16;
			list36[0] = uninitializedObject19;
			list36[1] = uninitializedObject22;
			list37[0] = uninitializedObject24;
			list37[1] = uninitializedObject25;
			list37[2] = uninitializedObject26;
			list38[0] = uninitializedObject27;
			list38[1] = uninitializedObject30;
			list39[0] = uninitializedObject34;
			list40[0] = uninitializedObject38;
			list41[0] = uninitializedObject39;
			list42[0] = uninitializedObject37;
			list43[0] = uninitializedObject40;
			list44[0] = uninitializedObject13;
			list45[0] = uninitializedObject16;
			list46[0] = uninitializedObject19;
			list46[1] = uninitializedObject22;
			list46[2] = uninitializedObject37;
			list46[3] = uninitializedObject40;
			list47[0] = uninitializedObject19;
			list47[1] = uninitializedObject24;
			list48[0] = uninitializedObject22;
			list48[1] = uninitializedObject27;
			list49[0] = uninitializedObject22;
			list50[0] = uninitializedObject24;
			list50[1] = uninitializedObject25;
			list50[2] = uninitializedObject39;
			list51[0] = uninitializedObject27;
			list51[1] = uninitializedObject38;
			list52[0] = uninitializedObject30;
			list53[0] = uninitializedObject34;
			list54[0] = uninitializedObject38;
			list55[0] = uninitializedObject39;
			list56[0] = uninitializedObject37;
			list56[1] = uninitializedObject40;
			list57[0] = uninitializedObject4;
			list57[1] = uninitializedObject7;
			list57[2] = uninitializedObject10;
			list57[3] = uninitializedObject13;
			list57[4] = uninitializedObject16;
			list57[5] = uninitializedObject19;
			list57[6] = uninitializedObject22;
			list57[7] = uninitializedObject24;
			list57[8] = uninitializedObject25;
			list57[9] = uninitializedObject26;
			list57[10] = uninitializedObject27;
			list57[11] = uninitializedObject30;
			list57[12] = uninitializedObject34;
			list57[13] = uninitializedObject38;
			list57[14] = uninitializedObject39;
			list57[15] = uninitializedObject37;
			list57[16] = uninitializedObject40;
			list58[0] = uninitializedObject41;
			typeof(FeatureInfo).GetProperty("PropertyType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject41, typeFromHandle8);
			typeof(FeatureInfo).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject41, "Score");
			typeof(FeatureInfo).GetProperty("Holders", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject41, list59);
			typeof(FeatureInfo).GetProperty("IsComplete", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject41, true);
			list59[0] = typeFromHandle9;
			list60[0] = uninitializedObject42;
			typeof(ResolvedType).GetField("_typeField", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject42, typeFromHandle10);
			list61[0] = uninitializedObject43;
			typeof(ResolvedType).GetField("_typeField", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject43, typeFromHandle11);
			dictionary25["v"] = uninitializedObject2;
			dictionary25["path"] = uninitializedObject5;
			dictionary25["id"] = uninitializedObject8;
			dictionary25["output"] = uninitializedObject11;
			dictionary25["struct"] = uninitializedObject15;
			dictionary25["structBodyRec"] = uninitializedObject20;
			dictionary25["sequence"] = uninitializedObject18;
			dictionary25["sequenceBody"] = uninitializedObject31;
			dictionary25["x"] = uninitializedObject35;
			dictionary25["wrapStruct"] = uninitializedObject36;
			dictionary25["selectSequence"] = uninitializedObject28;
			dictionary25["selectRegion"] = uninitializedObject23;
			dictionary25["_LFun0"] = uninitializedObject32;
			dictionary23["v"] = uninitializedObject4;
			dictionary23["path"] = uninitializedObject7;
			dictionary23["id"] = uninitializedObject10;
			dictionary23["~convert_output_struct"] = uninitializedObject13;
			dictionary23["~convert_output_sequence"] = uninitializedObject16;
			dictionary23["Struct"] = uninitializedObject19;
			dictionary23["Field"] = uninitializedObject22;
			dictionary23["Concat"] = uninitializedObject24;
			dictionary23["ToList"] = uninitializedObject25;
			dictionary23["Empty"] = uninitializedObject26;
			dictionary23["Sequence"] = uninitializedObject27;
			dictionary23["DummySequence"] = uninitializedObject30;
			dictionary23["SequenceBody"] = uninitializedObject38;
			dictionary23["WrapStructLet"] = uninitializedObject39;
			dictionary23["SelectSequence"] = uninitializedObject37;
			dictionary23["SelectRegion"] = uninitializedObject40;
			dictionary22[uninitializedObject15] = list44;
			dictionary22[uninitializedObject18] = list45;
			dictionary22[uninitializedObject2] = list46;
			dictionary22[uninitializedObject20] = list47;
			dictionary22[uninitializedObject8] = list48;
			dictionary22[uninitializedObject23] = list49;
			dictionary22[uninitializedObject11] = list50;
			dictionary22[uninitializedObject28] = list51;
			dictionary22[uninitializedObject31] = list52;
			dictionary22[uninitializedObject36] = list53;
			dictionary22[uninitializedObject32] = list54;
			dictionary22[uninitializedObject35] = list55;
			dictionary22[uninitializedObject5] = list56;
			dictionary21[uninitializedObject2] = list32;
			dictionary21[uninitializedObject5] = list33;
			dictionary21[uninitializedObject8] = list34;
			dictionary21[uninitializedObject11] = list35;
			dictionary21[uninitializedObject15] = list36;
			dictionary21[uninitializedObject20] = list37;
			dictionary21[uninitializedObject18] = list38;
			dictionary21[uninitializedObject32] = list39;
			dictionary21[uninitializedObject31] = list40;
			dictionary21[uninitializedObject36] = list41;
			dictionary21[uninitializedObject28] = list42;
			dictionary21[uninitializedObject23] = list43;
			dictionary[uninitializedObject2] = list;
			dictionary[uninitializedObject5] = list3;
			dictionary[uninitializedObject8] = list5;
			dictionary[uninitializedObject11] = list7;
			dictionary[uninitializedObject15] = list10;
			dictionary[uninitializedObject20] = list13;
			dictionary[uninitializedObject18] = list17;
			dictionary[uninitializedObject32] = list20;
			dictionary[uninitializedObject28] = list22;
			dictionary[uninitializedObject31] = list24;
			dictionary[uninitializedObject36] = list27;
			dictionary[uninitializedObject23] = list29;
			dictionary[uninitializedObject35] = list31;
			return uninitializedObject;
		}

		// Token: 0x040020CE RID: 8398
		private static readonly Lazy<Grammar> _grammar = new Lazy<Grammar>(new Func<Grammar>(Language.Initialize), LazyThreadSafetyMode.ExecutionAndPublication);

		// Token: 0x040020CF RID: 8399
		private static readonly Assembly MPSAssembly = typeof(GrammarRule).GetTypeInfo().Assembly;

		// Token: 0x040020D0 RID: 8400
		private const BindingFlags Flags = BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic;
	}
}
