using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Reflection;
using System.Text.RegularExpressions;
using System.Threading;
using Microsoft.ProgramSynthesis.DslLibrary;
using Microsoft.ProgramSynthesis.Extraction.Text.Build;
using Microsoft.ProgramSynthesis.Extraction.Text.Learning;
using Microsoft.ProgramSynthesis.Extraction.Text.Semantics;
using Microsoft.ProgramSynthesis.Features;
using Microsoft.ProgramSynthesis.Learning;
using Microsoft.ProgramSynthesis.Rules;
using Microsoft.ProgramSynthesis.Rules.Concepts;
using Microsoft.ProgramSynthesis.Utils;
using Microsoft.ProgramSynthesis.Wrangling.Schema.TableOutput;

namespace Microsoft.ProgramSynthesis.Extraction.Text
{
	// Token: 0x02000EFF RID: 3839
	public static class Language
	{
		// Token: 0x1700129E RID: 4766
		// (get) Token: 0x0600685C RID: 26716 RVA: 0x00153FCC File Offset: 0x001521CC
		public static Grammar Grammar
		{
			get
			{
				return Language._grammar.Value;
			}
		}

		// Token: 0x1700129F RID: 4767
		// (get) Token: 0x0600685D RID: 26717 RVA: 0x00153FD8 File Offset: 0x001521D8
		public static GrammarBuilders Build
		{
			get
			{
				return GrammarBuilders.Instance(Language.Grammar);
			}
		}

		// Token: 0x0600685E RID: 26718 RVA: 0x00153FE4 File Offset: 0x001521E4
		private static Grammar Initialize()
		{
			Grammar uninitializedObject = CSharpUtils.GetUninitializedObject<Grammar>();
			Dictionary<Symbol, List<GrammarRule>> dictionary = new Dictionary<Symbol, List<GrammarRule>>();
			Symbol uninitializedObject2 = CSharpUtils.GetUninitializedObject<Symbol>();
			ResolvedType uninitializedObject3 = CSharpUtils.GetUninitializedObject<ResolvedType>();
			Type typeFromHandle = typeof(StringRegion);
			List<GrammarRule> list = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			TerminalRule uninitializedObject4 = CSharpUtils.GetUninitializedObject<TerminalRule>();
			Optional<int>[] array = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 0);
			List<Symbol> list2 = Enumerable.Repeat<Symbol>(null, 0).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary2 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			Symbol uninitializedObject5 = CSharpUtils.GetUninitializedObject<Symbol>();
			ResolvedType uninitializedObject6 = CSharpUtils.GetUninitializedObject<ResolvedType>();
			Type typeFromHandle2 = typeof(int);
			List<GrammarRule> list3 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			TerminalRule uninitializedObject7 = CSharpUtils.GetUninitializedObject<TerminalRule>();
			Optional<int>[] array2 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 0);
			List<Symbol> list4 = Enumerable.Repeat<Symbol>(null, 0).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary3 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			Symbol uninitializedObject8 = CSharpUtils.GetUninitializedObject<Symbol>();
			ResolvedType uninitializedObject9 = CSharpUtils.GetUninitializedObject<ResolvedType>();
			Type typeFromHandle3 = typeof(string);
			List<GrammarRule> list5 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			TerminalRule uninitializedObject10 = CSharpUtils.GetUninitializedObject<TerminalRule>();
			Optional<int>[] array3 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 0);
			List<Symbol> list6 = Enumerable.Repeat<Symbol>(null, 0).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary4 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			Symbol uninitializedObject11 = CSharpUtils.GetUninitializedObject<Symbol>();
			ResolvedType uninitializedObject12 = CSharpUtils.GetUninitializedObject<ResolvedType>();
			Type typeFromHandle4 = typeof(Optional<string>);
			List<GrammarRule> list7 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			TerminalRule uninitializedObject13 = CSharpUtils.GetUninitializedObject<TerminalRule>();
			Optional<int>[] array4 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 0);
			List<Symbol> list8 = Enumerable.Repeat<Symbol>(null, 0).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary5 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			Symbol uninitializedObject14 = CSharpUtils.GetUninitializedObject<Symbol>();
			ResolvedType uninitializedObject15 = CSharpUtils.GetUninitializedObject<ResolvedType>();
			Type typeFromHandle5 = typeof(Regex);
			List<GrammarRule> list9 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			TerminalRule uninitializedObject16 = CSharpUtils.GetUninitializedObject<TerminalRule>();
			Optional<int>[] array5 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 0);
			List<Symbol> list10 = Enumerable.Repeat<Symbol>(null, 0).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary6 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			Symbol uninitializedObject17 = CSharpUtils.GetUninitializedObject<Symbol>();
			ResolvedType uninitializedObject18 = CSharpUtils.GetUninitializedObject<ResolvedType>();
			Type typeFromHandle6 = typeof(IReadOnlyList<string>);
			List<GrammarRule> list11 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			TerminalRule uninitializedObject19 = CSharpUtils.GetUninitializedObject<TerminalRule>();
			Optional<int>[] array6 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 0);
			List<Symbol> list12 = Enumerable.Repeat<Symbol>(null, 0).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary7 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			Symbol uninitializedObject20 = CSharpUtils.GetUninitializedObject<Symbol>();
			ResolvedType uninitializedObject21 = CSharpUtils.GetUninitializedObject<ResolvedType>();
			Type typeFromHandle7 = typeof(ITable<StringRegion>);
			List<GrammarRule> list13 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			BlackBoxRule uninitializedObject22 = CSharpUtils.GetUninitializedObject<BlackBoxRule>();
			MethodReference methodReference = MethodReference.WithoutReference<OperatorRule.OperatorSemantics>((object[] arg0) => Semantics.Table((IReadOnlyList<string>)arg0[0], (arg0[1] == null) ? null : ((arg0[1] as IEnumerable<IReadOnlyList<StringRegion>>) ?? (arg0[1] as IEnumerable).Cast<IReadOnlyList<StringRegion>>())));
			Optional<int>[] array7 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 2);
			Optional<int> optional = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional2 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list14 = Enumerable.Repeat<Symbol>(null, 2).ToList<Symbol>();
			Symbol uninitializedObject23 = CSharpUtils.GetUninitializedObject<Symbol>();
			ResolvedType uninitializedObject24 = CSharpUtils.GetUninitializedObject<ResolvedType>();
			Type typeFromHandle8 = typeof(IEnumerable<IReadOnlyList<StringRegion>>);
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary8 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			Symbol uninitializedObject25 = CSharpUtils.GetUninitializedObject<Symbol>();
			ResolvedType uninitializedObject26 = CSharpUtils.GetUninitializedObject<ResolvedType>();
			Type typeFromHandle9 = typeof(Func<StringRegion, IReadOnlyList<StringRegion>>);
			List<GrammarRule> list15 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			LambdaRule uninitializedObject27 = CSharpUtils.GetUninitializedObject<LambdaRule>();
			Symbol uninitializedObject28 = CSharpUtils.GetUninitializedObject<Symbol>();
			Optional<int>[] array8 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 1);
			Optional<int> optional3 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list16 = Enumerable.Repeat<Symbol>(null, 1).ToList<Symbol>();
			Symbol uninitializedObject29 = CSharpUtils.GetUninitializedObject<Symbol>();
			ResolvedType uninitializedObject30 = CSharpUtils.GetUninitializedObject<ResolvedType>();
			Type typeFromHandle10 = typeof(IReadOnlyList<StringRegion>);
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary9 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			Symbol uninitializedObject31 = CSharpUtils.GetUninitializedObject<Symbol>();
			List<GrammarRule> list17 = Enumerable.Repeat<GrammarRule>(null, 4).ToList<GrammarRule>();
			ConversionRule uninitializedObject32 = CSharpUtils.GetUninitializedObject<ConversionRule>();
			ExternalSymbolUsage uninitializedObject33 = CSharpUtils.GetUninitializedObject<ExternalSymbolUsage>();
			Dictionary<Symbol, Symbol> dictionary10 = new Dictionary<Symbol, Symbol>();
			MethodReference methodReference2 = null;
			Optional<int>[] array9 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 1);
			Optional<int> optional4 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list18 = Enumerable.Repeat<Symbol>(null, 1).ToList<Symbol>();
			Symbol uninitializedObject34 = CSharpUtils.GetUninitializedObject<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary11 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			BlackBoxRule uninitializedObject35 = CSharpUtils.GetUninitializedObject<BlackBoxRule>();
			MethodReference methodReference3 = MethodReference.WithoutReference<OperatorRule.OperatorSemantics>((object[] arg0) => Semantics.Select((Regex)arg0[0], (IReadOnlyList<StringRegion>)arg0[1]));
			Optional<int>[] array10 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 2);
			Optional<int> optional5 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional6 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list19 = Enumerable.Repeat<Symbol>(null, 2).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary12 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			BlackBoxRule uninitializedObject36 = CSharpUtils.GetUninitializedObject<BlackBoxRule>();
			MethodReference methodReference4 = MethodReference.WithoutReference<OperatorRule.OperatorSemantics>((object[] arg0) => Semantics.Group((Regex)arg0[0], (IReadOnlyList<StringRegion>)arg0[1]));
			Optional<int>[] array11 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 2);
			Optional<int> optional7 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional8 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list20 = Enumerable.Repeat<Symbol>(null, 2).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary13 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			BlackBoxRule uninitializedObject37 = CSharpUtils.GetUninitializedObject<BlackBoxRule>();
			MethodReference methodReference5 = MethodReference.WithoutReference<OperatorRule.OperatorSemantics>((object[] arg0) => Semantics.MergeEvery((int)arg0[0], (IReadOnlyList<StringRegion>)arg0[1]));
			Optional<int>[] array12 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 2);
			Optional<int> optional9 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional10 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list21 = Enumerable.Repeat<Symbol>(null, 2).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary14 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			List<GrammarRule> list22 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			Map uninitializedObject38 = CSharpUtils.GetUninitializedObject<Map>();
			List<ConceptParameterUsage> list23 = Enumerable.Repeat<ConceptParameterUsage>(default(ConceptParameterUsage), 2).ToList<ConceptParameterUsage>();
			ConceptParameterUsage conceptParameterUsage = CSharpUtils.GetUninitializedObject<ConceptParameterUsage>();
			Optional<int> optional11 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			ParameterUsage parameterUsage = ParameterUsage.PassOn;
			ConceptParameterUsage conceptParameterUsage2 = CSharpUtils.GetUninitializedObject<ConceptParameterUsage>();
			Optional<int> optional12 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			ParameterUsage parameterUsage2 = ParameterUsage.FillIn;
			MethodReference methodReference6 = null;
			Optional<int>[] array13 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 2);
			Optional<int> optional13 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional14 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list24 = Enumerable.Repeat<Symbol>(null, 2).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary15 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			Symbol uninitializedObject39 = CSharpUtils.GetUninitializedObject<Symbol>();
			List<GrammarRule> list25 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			BlackBoxRule uninitializedObject40 = CSharpUtils.GetUninitializedObject<BlackBoxRule>();
			MethodReference methodReference7 = MethodReference.WithoutReference<OperatorRule.OperatorSemantics>((object[] arg0) => Semantics.Second((Record<StringRegion, StringRegion>)arg0[0]));
			Optional<int>[] array14 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 1);
			Optional<int> optional15 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list26 = Enumerable.Repeat<Symbol>(null, 1).ToList<Symbol>();
			Symbol uninitializedObject41 = CSharpUtils.GetUninitializedObject<Symbol>();
			ResolvedType uninitializedObject42 = CSharpUtils.GetUninitializedObject<ResolvedType>();
			Type typeFromHandle11 = typeof(Record<StringRegion, StringRegion>);
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary16 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			Symbol uninitializedObject43 = CSharpUtils.GetUninitializedObject<Symbol>();
			List<GrammarRule> list27 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			BlackBoxRule uninitializedObject44 = CSharpUtils.GetUninitializedObject<BlackBoxRule>();
			MethodReference methodReference8 = MethodReference.WithoutReference<OperatorRule.OperatorSemantics>((object[] arg0) => Semantics.Prepend((StringRegion)arg0[0], (IReadOnlyList<StringRegion>)arg0[1]));
			Optional<int>[] array15 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 2);
			Optional<int> optional16 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional17 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list28 = Enumerable.Repeat<Symbol>(null, 2).ToList<Symbol>();
			Symbol uninitializedObject45 = CSharpUtils.GetUninitializedObject<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary17 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			Symbol uninitializedObject46 = CSharpUtils.GetUninitializedObject<Symbol>();
			List<GrammarRule> list29 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			LetRule uninitializedObject47 = CSharpUtils.GetUninitializedObject<LetRule>();
			Optional<int>[] array16 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 2);
			Optional<int> optional18 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional19 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list30 = Enumerable.Repeat<Symbol>(null, 2).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary18 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			List<GrammarRule> list31 = Enumerable.Repeat<GrammarRule>(null, 2).ToList<GrammarRule>();
			BlackBoxRule uninitializedObject48 = CSharpUtils.GetUninitializedObject<BlackBoxRule>();
			MethodReference methodReference9 = MethodReference.WithoutReference<OperatorRule.OperatorSemantics>((object[] arg0) => Semantics.List((StringRegion)arg0[0]));
			Optional<int>[] array17 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 1);
			Optional<int> optional20 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list32 = Enumerable.Repeat<Symbol>(null, 1).ToList<Symbol>();
			Symbol uninitializedObject49 = CSharpUtils.GetUninitializedObject<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary19 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			LetRule uninitializedObject50 = CSharpUtils.GetUninitializedObject<LetRule>();
			Symbol uninitializedObject51 = CSharpUtils.GetUninitializedObject<Symbol>();
			Optional<int>[] array18 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 2);
			Optional<int> optional21 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional22 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list33 = Enumerable.Repeat<Symbol>(null, 2).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary20 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			Symbol uninitializedObject52 = CSharpUtils.GetUninitializedObject<Symbol>();
			List<GrammarRule> list34 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			BlackBoxRule uninitializedObject53 = CSharpUtils.GetUninitializedObject<BlackBoxRule>();
			MethodReference methodReference10 = MethodReference.WithoutReference<OperatorRule.OperatorSemantics>((object[] arg0) => Semantics.First((Record<StringRegion, StringRegion>)arg0[0]));
			Optional<int>[] array19 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 1);
			Optional<int> optional23 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list35 = Enumerable.Repeat<Symbol>(null, 1).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary21 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			List<GrammarRule> list36 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			LetRule uninitializedObject54 = CSharpUtils.GetUninitializedObject<LetRule>();
			Optional<int>[] array20 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 2);
			Optional<int> optional24 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional25 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list37 = Enumerable.Repeat<Symbol>(null, 2).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary22 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			List<GrammarRule> list38 = Enumerable.Repeat<GrammarRule>(null, 2).ToList<GrammarRule>();
			ConversionRule uninitializedObject55 = CSharpUtils.GetUninitializedObject<ConversionRule>();
			ExternalSymbolUsage uninitializedObject56 = CSharpUtils.GetUninitializedObject<ExternalSymbolUsage>();
			Dictionary<Symbol, Symbol> dictionary23 = new Dictionary<Symbol, Symbol>();
			MethodReference methodReference11 = null;
			Optional<int>[] array21 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 1);
			Optional<int> optional26 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list39 = Enumerable.Repeat<Symbol>(null, 1).ToList<Symbol>();
			Symbol uninitializedObject57 = CSharpUtils.GetUninitializedObject<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary24 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			BlackBoxRule uninitializedObject58 = CSharpUtils.GetUninitializedObject<BlackBoxRule>();
			MethodReference methodReference12 = MethodReference.WithoutReference<OperatorRule.OperatorSemantics>((object[] arg0) => Semantics.Trim((StringRegion)arg0[0]));
			Optional<int>[] array22 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 1);
			Optional<int> optional27 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list40 = Enumerable.Repeat<Symbol>(null, 1).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary25 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			List<GrammarRule> list41 = Enumerable.Repeat<GrammarRule>(null, 4).ToList<GrammarRule>();
			ConversionRule uninitializedObject59 = CSharpUtils.GetUninitializedObject<ConversionRule>();
			ExternalSymbolUsage uninitializedObject60 = CSharpUtils.GetUninitializedObject<ExternalSymbolUsage>();
			Dictionary<Symbol, Symbol> dictionary26 = new Dictionary<Symbol, Symbol>();
			MethodReference methodReference13 = null;
			Optional<int>[] array23 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 1);
			Optional<int> optional28 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list42 = Enumerable.Repeat<Symbol>(null, 1).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary27 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			BlackBoxRule uninitializedObject61 = CSharpUtils.GetUninitializedObject<BlackBoxRule>();
			MethodReference methodReference14 = MethodReference.WithoutReference<OperatorRule.OperatorSemantics>((object[] arg0) => Semantics.BetweenDelimiters((StringRegion)arg0[0], (Optional<string>)arg0[1], (Optional<string>)arg0[2]));
			Optional<int>[] array24 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 3);
			Optional<int> optional29 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional30 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional31 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list43 = Enumerable.Repeat<Symbol>(null, 3).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary28 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			BlackBoxRule uninitializedObject62 = CSharpUtils.GetUninitializedObject<BlackBoxRule>();
			MethodReference methodReference15 = MethodReference.WithoutReference<OperatorRule.OperatorSemantics>((object[] arg0) => Semantics.Substring((StringRegion)arg0[0], (int)arg0[1], (int)arg0[2]));
			Optional<int>[] array25 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 3);
			Optional<int> optional32 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional33 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional34 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list44 = Enumerable.Repeat<Symbol>(null, 3).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary29 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			BlackBoxRule uninitializedObject63 = CSharpUtils.GetUninitializedObject<BlackBoxRule>();
			MethodReference methodReference16 = MethodReference.WithoutReference<OperatorRule.OperatorSemantics>((object[] arg0) => Semantics.Slice((StringRegion)arg0[0], (int)arg0[1], (int)arg0[2]));
			Optional<int>[] array26 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 3);
			Optional<int> optional35 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional36 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional37 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list45 = Enumerable.Repeat<Symbol>(null, 3).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary30 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			List<GrammarRule> list46 = Enumerable.Repeat<GrammarRule>(null, 2).ToList<GrammarRule>();
			BlackBoxRule uninitializedObject64 = CSharpUtils.GetUninitializedObject<BlackBoxRule>();
			MethodReference methodReference17 = MethodReference.WithoutReference<OperatorRule.OperatorSemantics>((object[] arg0) => Semantics.SplitPosition((StringRegion)arg0[0], (int)arg0[1]));
			Optional<int>[] array27 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 2);
			Optional<int> optional38 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional39 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list47 = Enumerable.Repeat<Symbol>(null, 2).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary31 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			BlackBoxRule uninitializedObject65 = CSharpUtils.GetUninitializedObject<BlackBoxRule>();
			MethodReference methodReference18 = MethodReference.WithoutReference<OperatorRule.OperatorSemantics>((object[] arg0) => Semantics.SplitDelimiter((StringRegion)arg0[0], (string)arg0[1], (int)arg0[2]));
			Optional<int>[] array28 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 3);
			Optional<int> optional40 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional41 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional42 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list48 = Enumerable.Repeat<Symbol>(null, 3).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary32 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			List<GrammarRule> list49 = Enumerable.Repeat<GrammarRule>(null, 2).ToList<GrammarRule>();
			ConversionRule uninitializedObject66 = CSharpUtils.GetUninitializedObject<ConversionRule>();
			ExternalSymbolUsage uninitializedObject67 = CSharpUtils.GetUninitializedObject<ExternalSymbolUsage>();
			Dictionary<Symbol, Symbol> dictionary33 = new Dictionary<Symbol, Symbol>();
			MethodReference methodReference19 = null;
			Optional<int>[] array29 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 1);
			Optional<int> optional43 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list50 = Enumerable.Repeat<Symbol>(null, 1).ToList<Symbol>();
			Symbol uninitializedObject68 = CSharpUtils.GetUninitializedObject<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary34 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			BlackBoxRule uninitializedObject69 = CSharpUtils.GetUninitializedObject<BlackBoxRule>();
			MethodReference methodReference20 = MethodReference.WithoutReference<OperatorRule.OperatorSemantics>((object[] arg0) => Semantics.Skip((int)arg0[0], (IReadOnlyList<StringRegion>)arg0[1]));
			Optional<int>[] array30 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 2);
			Optional<int> optional44 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional45 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list51 = Enumerable.Repeat<Symbol>(null, 2).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary35 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			List<GrammarRule> list52 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			BlackBoxRule uninitializedObject70 = CSharpUtils.GetUninitializedObject<BlackBoxRule>();
			MethodReference methodReference21 = MethodReference.WithoutReference<OperatorRule.OperatorSemantics>((object[] arg0) => Semantics.SplitLines((StringRegion)arg0[0]));
			Optional<int>[] array31 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 1);
			Optional<int> optional46 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list53 = Enumerable.Repeat<Symbol>(null, 1).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary36 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			List<GrammarRule> list54 = Enumerable.Repeat<GrammarRule>(null, 0).ToList<GrammarRule>();
			List<GrammarRule> list55 = Enumerable.Repeat<GrammarRule>(null, 0).ToList<GrammarRule>();
			Dictionary<Symbol, List<GrammarRule>> dictionary37 = new Dictionary<Symbol, List<GrammarRule>>();
			List<GrammarRule> list56 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list57 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list58 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list59 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list60 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list61 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list62 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list63 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list64 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list65 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list66 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list67 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list68 = Enumerable.Repeat<GrammarRule>(null, 2).ToList<GrammarRule>();
			List<GrammarRule> list69 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list70 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list71 = Enumerable.Repeat<GrammarRule>(null, 2).ToList<GrammarRule>();
			List<GrammarRule> list72 = Enumerable.Repeat<GrammarRule>(null, 4).ToList<GrammarRule>();
			List<GrammarRule> list73 = Enumerable.Repeat<GrammarRule>(null, 2).ToList<GrammarRule>();
			List<GrammarRule> list74 = Enumerable.Repeat<GrammarRule>(null, 4).ToList<GrammarRule>();
			List<GrammarRule> list75 = Enumerable.Repeat<GrammarRule>(null, 2).ToList<GrammarRule>();
			List<GrammarRule> list76 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			Dictionary<Symbol, List<GrammarRule>> dictionary38 = new Dictionary<Symbol, List<GrammarRule>>();
			List<GrammarRule> list77 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list78 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list79 = Enumerable.Repeat<GrammarRule>(null, 2).ToList<GrammarRule>();
			List<GrammarRule> list80 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list81 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list82 = Enumerable.Repeat<GrammarRule>(null, 2).ToList<GrammarRule>();
			List<GrammarRule> list83 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list84 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list85 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list86 = Enumerable.Repeat<GrammarRule>(null, 2).ToList<GrammarRule>();
			List<GrammarRule> list87 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list88 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list89 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list90 = Enumerable.Repeat<GrammarRule>(null, 2).ToList<GrammarRule>();
			List<GrammarRule> list91 = Enumerable.Repeat<GrammarRule>(null, 6).ToList<GrammarRule>();
			List<GrammarRule> list92 = Enumerable.Repeat<GrammarRule>(null, 2).ToList<GrammarRule>();
			List<GrammarRule> list93 = Enumerable.Repeat<GrammarRule>(null, 8).ToList<GrammarRule>();
			List<GrammarRule> list94 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list95 = Enumerable.Repeat<GrammarRule>(null, 4).ToList<GrammarRule>();
			List<GrammarRule> list96 = Enumerable.Repeat<GrammarRule>(null, 2).ToList<GrammarRule>();
			List<GrammarRule> list97 = Enumerable.Repeat<GrammarRule>(null, 2).ToList<GrammarRule>();
			List<GrammarRule> list98 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			Dictionary<string, GrammarRule> dictionary39 = new Dictionary<string, GrammarRule>();
			List<GrammarRule> list99 = Enumerable.Repeat<GrammarRule>(null, 31).ToList<GrammarRule>();
			List<FeatureInfo> list100 = Enumerable.Repeat<FeatureInfo>(null, 1).ToList<FeatureInfo>();
			FeatureInfo uninitializedObject71 = CSharpUtils.GetUninitializedObject<FeatureInfo>();
			Type typeFromHandle12 = typeof(double);
			List<Type> list101 = Enumerable.Repeat<Type>(null, 1).ToList<Type>();
			Type typeFromHandle13 = typeof(RankingScore);
			Dictionary<string, Grammar> dictionary40 = new Dictionary<string, Grammar>();
			List<GrammarType> list102 = Enumerable.Repeat<GrammarType>(null, 1).ToList<GrammarType>();
			ResolvedType uninitializedObject72 = CSharpUtils.GetUninitializedObject<ResolvedType>();
			Type typeFromHandle14 = typeof(Semantics);
			List<GrammarType> list103 = Enumerable.Repeat<GrammarType>(null, 1).ToList<GrammarType>();
			ResolvedType uninitializedObject73 = CSharpUtils.GetUninitializedObject<ResolvedType>();
			Type typeFromHandle15 = typeof(Witnesses);
			Dictionary<string, Symbol> dictionary41 = new Dictionary<string, Symbol>();
			object obj = optional46;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj, false);
			optional46 = (Optional<int>)obj;
			object obj2 = optional45;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj2, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj2, false);
			optional45 = (Optional<int>)obj2;
			object obj3 = optional44;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj3, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj3, false);
			optional44 = (Optional<int>)obj3;
			object obj4 = optional43;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj4, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj4, false);
			optional43 = (Optional<int>)obj4;
			object obj5 = optional42;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj5, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj5, false);
			optional42 = (Optional<int>)obj5;
			object obj6 = optional41;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj6, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj6, false);
			optional41 = (Optional<int>)obj6;
			object obj7 = optional40;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj7, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj7, false);
			optional40 = (Optional<int>)obj7;
			object obj8 = optional39;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj8, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj8, false);
			optional39 = (Optional<int>)obj8;
			object obj9 = optional38;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj9, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj9, false);
			optional38 = (Optional<int>)obj9;
			object obj10 = optional37;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj10, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj10, false);
			optional37 = (Optional<int>)obj10;
			object obj11 = optional36;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj11, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj11, false);
			optional36 = (Optional<int>)obj11;
			object obj12 = optional35;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj12, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj12, false);
			optional35 = (Optional<int>)obj12;
			object obj13 = optional34;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj13, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj13, false);
			optional34 = (Optional<int>)obj13;
			object obj14 = optional33;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj14, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj14, false);
			optional33 = (Optional<int>)obj14;
			object obj15 = optional32;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj15, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj15, false);
			optional32 = (Optional<int>)obj15;
			object obj16 = optional31;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj16, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj16, false);
			optional31 = (Optional<int>)obj16;
			object obj17 = optional30;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj17, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj17, false);
			optional30 = (Optional<int>)obj17;
			object obj18 = optional29;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj18, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj18, false);
			optional29 = (Optional<int>)obj18;
			object obj19 = optional28;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj19, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj19, false);
			optional28 = (Optional<int>)obj19;
			object obj20 = optional27;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj20, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj20, false);
			optional27 = (Optional<int>)obj20;
			object obj21 = optional26;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj21, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj21, false);
			optional26 = (Optional<int>)obj21;
			object obj22 = optional25;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj22, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj22, false);
			optional25 = (Optional<int>)obj22;
			object obj23 = optional24;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj23, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj23, false);
			optional24 = (Optional<int>)obj23;
			object obj24 = optional23;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj24, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj24, false);
			optional23 = (Optional<int>)obj24;
			object obj25 = optional22;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj25, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj25, false);
			optional22 = (Optional<int>)obj25;
			object obj26 = optional21;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj26, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj26, false);
			optional21 = (Optional<int>)obj26;
			object obj27 = optional20;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj27, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj27, false);
			optional20 = (Optional<int>)obj27;
			object obj28 = optional19;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj28, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj28, false);
			optional19 = (Optional<int>)obj28;
			object obj29 = optional18;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj29, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj29, false);
			optional18 = (Optional<int>)obj29;
			object obj30 = optional17;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj30, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj30, false);
			optional17 = (Optional<int>)obj30;
			object obj31 = optional16;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj31, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj31, false);
			optional16 = (Optional<int>)obj31;
			object obj32 = optional15;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj32, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj32, false);
			optional15 = (Optional<int>)obj32;
			object obj33 = optional14;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj33, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj33, false);
			optional14 = (Optional<int>)obj33;
			object obj34 = optional13;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj34, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj34, false);
			optional13 = (Optional<int>)obj34;
			object obj35 = optional12;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj35, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj35, false);
			optional12 = (Optional<int>)obj35;
			object obj36 = conceptParameterUsage2;
			typeof(ConceptParameterUsage).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj36, optional12);
			typeof(ConceptParameterUsage).GetProperty("DSLParameter", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj36, uninitializedObject31);
			typeof(ConceptParameterUsage).GetProperty("ConceptIndex", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj36, 1);
			typeof(ConceptParameterUsage).GetProperty("Usage", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj36, parameterUsage2);
			conceptParameterUsage2 = (ConceptParameterUsage)obj36;
			object obj37 = optional11;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj37, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj37, false);
			optional11 = (Optional<int>)obj37;
			object obj38 = conceptParameterUsage;
			typeof(ConceptParameterUsage).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj38, optional11);
			typeof(ConceptParameterUsage).GetProperty("DSLParameter", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj38, uninitializedObject29);
			typeof(ConceptParameterUsage).GetProperty("ConceptIndex", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj38, 0);
			typeof(ConceptParameterUsage).GetProperty("Usage", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj38, parameterUsage);
			conceptParameterUsage = (ConceptParameterUsage)obj38;
			object obj39 = optional10;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj39, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj39, false);
			optional10 = (Optional<int>)obj39;
			object obj40 = optional9;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj40, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj40, false);
			optional9 = (Optional<int>)obj40;
			object obj41 = optional8;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj41, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj41, false);
			optional8 = (Optional<int>)obj41;
			object obj42 = optional7;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj42, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj42, false);
			optional7 = (Optional<int>)obj42;
			object obj43 = optional6;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj43, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj43, false);
			optional6 = (Optional<int>)obj43;
			object obj44 = optional5;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj44, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj44, false);
			optional5 = (Optional<int>)obj44;
			object obj45 = optional4;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj45, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj45, false);
			optional4 = (Optional<int>)obj45;
			object obj46 = optional3;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj46, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj46, false);
			optional3 = (Optional<int>)obj46;
			object obj47 = optional2;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj47, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj47, false);
			optional2 = (Optional<int>)obj47;
			object obj48 = optional;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj48, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj48, false);
			optional = (Optional<int>)obj48;
			typeof(Grammar).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject, "Extraction.Text");
			typeof(Grammar).GetField("_rulesByHead", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject, dictionary);
			typeof(Grammar).GetField("_nonDeprecatedRulesByHead", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject, dictionary37);
			typeof(Grammar).GetField("_rulesByBody", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject, dictionary38);
			typeof(Grammar).GetField("_rulesByName", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject, dictionary39);
			typeof(Grammar).GetField("_rules", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject, list99);
			typeof(Grammar).GetField("_features", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject, list100);
			typeof(Grammar).GetField("_grammarReferences", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject, dictionary40);
			typeof(Grammar).GetField("_semanticsLocations", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject, list102);
			typeof(Grammar).GetField("_learnerLocations", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject, list103);
			typeof(Grammar).GetField("_symbols", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject, dictionary41);
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject2, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject2, uninitializedObject3);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject2, "v");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject2, false);
			typeof(ResolvedType).GetField("_typeField", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject3, typeFromHandle);
			list[0] = uninitializedObject4;
			typeof(TerminalRule).GetProperty("IsInput", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject4, true);
			typeof(TerminalRule).GetProperty("GeneratorReference", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject4, null);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject4, uninitializedObject2);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject4, "v");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject4, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject4, array);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject4, list2);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject4, dictionary2);
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject5, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject5, uninitializedObject6);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject5, "k");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject5, false);
			typeof(ResolvedType).GetField("_typeField", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject6, typeFromHandle2);
			list3[0] = uninitializedObject7;
			typeof(TerminalRule).GetProperty("IsInput", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject7, false);
			typeof(TerminalRule).GetProperty("GeneratorReference", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject7, null);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject7, uninitializedObject5);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject7, "k");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject7, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject7, array2);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject7, list4);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject7, dictionary3);
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject8, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject8, uninitializedObject9);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject8, "str");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject8, false);
			typeof(ResolvedType).GetField("_typeField", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject9, typeFromHandle3);
			list5[0] = uninitializedObject10;
			typeof(TerminalRule).GetProperty("IsInput", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject10, false);
			typeof(TerminalRule).GetProperty("GeneratorReference", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject10, null);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject10, uninitializedObject8);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject10, "str");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject10, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject10, array3);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject10, list6);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject10, dictionary4);
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject11, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject11, uninitializedObject12);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject11, "del");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject11, false);
			typeof(ResolvedType).GetField("_typeField", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject12, typeFromHandle4);
			list7[0] = uninitializedObject13;
			typeof(TerminalRule).GetProperty("IsInput", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject13, false);
			typeof(TerminalRule).GetProperty("GeneratorReference", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject13, null);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject13, uninitializedObject11);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject13, "del");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject13, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject13, array4);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject13, list8);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject13, dictionary5);
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject14, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject14, uninitializedObject15);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject14, "re");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject14, false);
			typeof(ResolvedType).GetField("_typeField", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject15, typeFromHandle5);
			list9[0] = uninitializedObject16;
			typeof(TerminalRule).GetProperty("IsInput", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject16, false);
			typeof(TerminalRule).GetProperty("GeneratorReference", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject16, null);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject16, uninitializedObject14);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject16, "re");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject16, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject16, array5);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject16, list10);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject16, dictionary6);
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject17, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject17, uninitializedObject18);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject17, "columnNames");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject17, false);
			typeof(ResolvedType).GetField("_typeField", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject18, typeFromHandle6);
			list11[0] = uninitializedObject19;
			typeof(TerminalRule).GetProperty("IsInput", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject19, false);
			typeof(TerminalRule).GetProperty("GeneratorReference", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject19, null);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject19, uninitializedObject17);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject19, "columnNames");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject19, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject19, array6);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject19, list12);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject19, dictionary7);
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject20, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject20, uninitializedObject21);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject20, "output");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject20, true);
			typeof(ResolvedType).GetField("_typeField", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject21, typeFromHandle7);
			list13[0] = uninitializedObject22;
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject22, "Table");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject22, false);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject22, methodReference);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject22, uninitializedObject20);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject22, "Table");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject22, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject22, array7);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject22, list14);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject22, dictionary8);
			array7[0] = optional;
			array7[1] = optional2;
			list14[0] = uninitializedObject17;
			list14[1] = uninitializedObject23;
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject23, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject23, uninitializedObject24);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject23, "table");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject23, false);
			typeof(ResolvedType).GetField("_typeField", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject24, typeFromHandle8);
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject25, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject25, uninitializedObject26);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject25, "_LFun0");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject25, false);
			typeof(ResolvedType).GetField("_typeField", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject26, typeFromHandle9);
			list15[0] = uninitializedObject27;
			typeof(LambdaRule).GetProperty("Variable", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject27, uninitializedObject28);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject27, uninitializedObject25);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject27, null);
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject27, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject27, array8);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject27, list16);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject27, dictionary9);
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject28, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject28, uninitializedObject3);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject28, "row");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject28, false);
			array8[0] = optional3;
			list16[0] = uninitializedObject29;
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject29, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject29, uninitializedObject30);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject29, "colSplit");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject29, false);
			typeof(ResolvedType).GetField("_typeField", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject30, typeFromHandle10);
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject31, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject31, uninitializedObject30);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject31, "records");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject31, false);
			list17[0] = uninitializedObject32;
			list17[1] = uninitializedObject35;
			list17[2] = uninitializedObject36;
			list17[3] = uninitializedObject37;
			typeof(ConversionRule).GetProperty("ExternSymbolUsage", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject32, uninitializedObject33);
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject32, "~convert_records_skip");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject32, false);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject32, methodReference2);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject32, uninitializedObject31);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject32, "~convert_records_skip");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject32, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject32, array9);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject32, list18);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject32, dictionary11);
			typeof(ExternalSymbolUsage).GetProperty("Substitutions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject33, dictionary10);
			array9[0] = optional4;
			list18[0] = uninitializedObject34;
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject34, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject34, uninitializedObject30);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject34, "skip");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject34, false);
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject35, "Select");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject35, false);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject35, methodReference3);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject35, uninitializedObject31);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject35, "Select");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject35, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject35, array10);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject35, list19);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject35, dictionary12);
			array10[0] = optional5;
			array10[1] = optional6;
			list19[0] = uninitializedObject14;
			list19[1] = uninitializedObject34;
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject36, "Group");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject36, false);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject36, methodReference4);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject36, uninitializedObject31);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject36, "Group");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject36, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject36, array11);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject36, list20);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject36, dictionary13);
			array11[0] = optional7;
			array11[1] = optional8;
			list20[0] = uninitializedObject14;
			list20[1] = uninitializedObject34;
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject37, "MergeEvery");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject37, false);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject37, methodReference5);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject37, uninitializedObject31);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject37, "MergeEvery");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject37, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject37, array12);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject37, list21);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject37, dictionary14);
			array12[0] = optional9;
			array12[1] = optional10;
			list21[0] = uninitializedObject5;
			list21[1] = uninitializedObject34;
			list22[0] = uninitializedObject38;
			typeof(ConceptRule).GetField("DslBodyMapping", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject38, list23);
			typeof(ConceptRule).GetField("_dslBody", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject38, null);
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject38, "Map");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject38, false);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject38, methodReference6);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject38, uninitializedObject23);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject38, "RowMap");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject38, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject38, array13);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject38, list24);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject38, dictionary15);
			list23[0] = conceptParameterUsage;
			list23[1] = conceptParameterUsage2;
			array13[0] = optional13;
			array13[1] = optional14;
			list24[0] = uninitializedObject25;
			list24[1] = uninitializedObject31;
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject39, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject39, uninitializedObject3);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject39, "_LetB0");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject39, false);
			list25[0] = uninitializedObject40;
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject40, "Second");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject40, false);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject40, methodReference7);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject40, uninitializedObject39);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject40, "Second");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject40, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject40, array14);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject40, list26);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject40, dictionary16);
			array14[0] = optional15;
			list26[0] = uninitializedObject41;
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject41, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject41, uninitializedObject42);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject41, "tup");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject41, false);
			typeof(ResolvedType).GetField("_typeField", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject42, typeFromHandle11);
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject43, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject43, uninitializedObject30);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject43, "_LetB1");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject43, false);
			list27[0] = uninitializedObject44;
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject44, "Prepend");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject44, true);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject44, methodReference8);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject44, uninitializedObject43);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject44, "Prepend");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject44, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject44, array15);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject44, list28);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject44, dictionary17);
			array15[0] = optional16;
			array15[1] = optional17;
			list28[0] = uninitializedObject45;
			list28[1] = uninitializedObject29;
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject45, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject45, uninitializedObject3);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject45, "extractTup");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject45, false);
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject46, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject46, uninitializedObject30);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject46, "_LetB2");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject46, false);
			list29[0] = uninitializedObject47;
			typeof(LetRule).GetProperty("Variable", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject47, uninitializedObject28);
			typeof(LetRule).GetProperty("Value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject47, uninitializedObject39);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject47, uninitializedObject46);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject47, "LetPrepend");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject47, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject47, array16);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject47, list30);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject47, dictionary18);
			array16[0] = optional18;
			array16[1] = optional19;
			list30[0] = uninitializedObject39;
			list30[1] = uninitializedObject43;
			list31[0] = uninitializedObject48;
			list31[1] = uninitializedObject50;
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject48, "List");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject48, true);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject48, methodReference9);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject48, uninitializedObject29);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject48, "List");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject48, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject48, array17);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject48, list32);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject48, dictionary19);
			array17[0] = optional20;
			list32[0] = uninitializedObject49;
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject49, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject49, uninitializedObject3);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject49, "trimExtract");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject49, false);
			typeof(LetRule).GetProperty("Variable", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject50, uninitializedObject41);
			typeof(LetRule).GetProperty("Value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject50, uninitializedObject51);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject50, uninitializedObject29);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject50, "LetSplit");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject50, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject50, array18);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject50, list33);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject50, dictionary20);
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject51, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject51, uninitializedObject42);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject51, "split");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject51, false);
			array18[0] = optional21;
			array18[1] = optional22;
			list33[0] = uninitializedObject51;
			list33[1] = uninitializedObject46;
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject52, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject52, uninitializedObject3);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject52, "_LetB3");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject52, false);
			list34[0] = uninitializedObject53;
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject53, "First");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject53, false);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject53, methodReference10);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject53, uninitializedObject52);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject53, "First");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject53, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject53, array19);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject53, list35);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject53, dictionary21);
			array19[0] = optional23;
			list35[0] = uninitializedObject41;
			list36[0] = uninitializedObject54;
			typeof(LetRule).GetProperty("Variable", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject54, uninitializedObject28);
			typeof(LetRule).GetProperty("Value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject54, uninitializedObject52);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject54, uninitializedObject45);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject54, "LetExtractTup");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject54, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject54, array20);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject54, list37);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject54, dictionary22);
			array20[0] = optional24;
			array20[1] = optional25;
			list37[0] = uninitializedObject52;
			list37[1] = uninitializedObject49;
			list38[0] = uninitializedObject55;
			list38[1] = uninitializedObject58;
			typeof(ConversionRule).GetProperty("ExternSymbolUsage", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject55, uninitializedObject56);
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject55, "~convert_trimExtract_extract");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject55, false);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject55, methodReference11);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject55, uninitializedObject49);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject55, "~convert_trimExtract_extract");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject55, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject55, array21);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject55, list39);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject55, dictionary24);
			typeof(ExternalSymbolUsage).GetProperty("Substitutions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject56, dictionary23);
			array21[0] = optional26;
			list39[0] = uninitializedObject57;
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject57, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject57, uninitializedObject3);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject57, "extract");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject57, false);
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject58, "Trim");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject58, false);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject58, methodReference12);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject58, uninitializedObject49);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject58, "Trim");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject58, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject58, array22);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject58, list40);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject58, dictionary25);
			array22[0] = optional27;
			list40[0] = uninitializedObject57;
			list41[0] = uninitializedObject59;
			list41[1] = uninitializedObject61;
			list41[2] = uninitializedObject62;
			list41[3] = uninitializedObject63;
			typeof(ConversionRule).GetProperty("ExternSymbolUsage", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject59, uninitializedObject60);
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject59, "~convert_extract_row");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject59, false);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject59, methodReference13);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject59, uninitializedObject57);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject59, "~convert_extract_row");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject59, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject59, array23);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject59, list42);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject59, dictionary27);
			typeof(ExternalSymbolUsage).GetProperty("Substitutions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject60, dictionary26);
			array23[0] = optional28;
			list42[0] = uninitializedObject28;
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject61, "BetweenDelimiters");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject61, false);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject61, methodReference14);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject61, uninitializedObject57);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject61, "BetweenDelimiters");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject61, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject61, array24);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject61, list43);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject61, dictionary28);
			array24[0] = optional29;
			array24[1] = optional30;
			array24[2] = optional31;
			list43[0] = uninitializedObject28;
			list43[1] = uninitializedObject11;
			list43[2] = uninitializedObject11;
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject62, "Substring");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject62, false);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject62, methodReference15);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject62, uninitializedObject57);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject62, "Substring");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject62, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject62, array25);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject62, list44);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject62, dictionary29);
			array25[0] = optional32;
			array25[1] = optional33;
			array25[2] = optional34;
			list44[0] = uninitializedObject28;
			list44[1] = uninitializedObject5;
			list44[2] = uninitializedObject5;
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject63, "Slice");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject63, false);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject63, methodReference16);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject63, uninitializedObject57);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject63, "Slice");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject63, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject63, array26);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject63, list45);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject63, dictionary30);
			array26[0] = optional35;
			array26[1] = optional36;
			array26[2] = optional37;
			list45[0] = uninitializedObject28;
			list45[1] = uninitializedObject5;
			list45[2] = uninitializedObject5;
			list46[0] = uninitializedObject64;
			list46[1] = uninitializedObject65;
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject64, "SplitPosition");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject64, false);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject64, methodReference17);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject64, uninitializedObject51);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject64, "SplitPosition");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject64, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject64, array27);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject64, list47);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject64, dictionary31);
			array27[0] = optional38;
			array27[1] = optional39;
			list47[0] = uninitializedObject28;
			list47[1] = uninitializedObject5;
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject65, "SplitDelimiter");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject65, false);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject65, methodReference18);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject65, uninitializedObject51);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject65, "SplitDelimiter");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject65, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject65, array28);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject65, list48);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject65, dictionary32);
			array28[0] = optional40;
			array28[1] = optional41;
			array28[2] = optional42;
			list48[0] = uninitializedObject28;
			list48[1] = uninitializedObject8;
			list48[2] = uninitializedObject5;
			list49[0] = uninitializedObject66;
			list49[1] = uninitializedObject69;
			typeof(ConversionRule).GetProperty("ExternSymbolUsage", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject66, uninitializedObject67);
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject66, "~convert_skip_lines");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject66, false);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject66, methodReference19);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject66, uninitializedObject34);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject66, "~convert_skip_lines");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject66, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject66, array29);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject66, list50);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject66, dictionary34);
			typeof(ExternalSymbolUsage).GetProperty("Substitutions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject67, dictionary33);
			array29[0] = optional43;
			list50[0] = uninitializedObject68;
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject68, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject68, uninitializedObject30);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject68, "lines");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject68, false);
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject69, "Skip");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject69, false);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject69, methodReference20);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject69, uninitializedObject34);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject69, "Skip");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject69, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject69, array30);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject69, list51);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject69, dictionary35);
			array30[0] = optional44;
			array30[1] = optional45;
			list51[0] = uninitializedObject5;
			list51[1] = uninitializedObject68;
			list52[0] = uninitializedObject70;
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject70, "SplitLines");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject70, false);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject70, methodReference21);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject70, uninitializedObject68);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject70, "SplitLines");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject70, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject70, array31);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject70, list53);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject70, dictionary36);
			array31[0] = optional46;
			list53[0] = uninitializedObject2;
			list56[0] = uninitializedObject4;
			list57[0] = uninitializedObject7;
			list58[0] = uninitializedObject10;
			list59[0] = uninitializedObject13;
			list60[0] = uninitializedObject16;
			list61[0] = uninitializedObject19;
			list62[0] = uninitializedObject22;
			list63[0] = uninitializedObject27;
			list64[0] = uninitializedObject38;
			list65[0] = uninitializedObject40;
			list66[0] = uninitializedObject44;
			list67[0] = uninitializedObject47;
			list68[0] = uninitializedObject48;
			list68[1] = uninitializedObject50;
			list69[0] = uninitializedObject53;
			list70[0] = uninitializedObject54;
			list71[0] = uninitializedObject55;
			list71[1] = uninitializedObject58;
			list72[0] = uninitializedObject59;
			list72[1] = uninitializedObject61;
			list72[2] = uninitializedObject62;
			list72[3] = uninitializedObject63;
			list73[0] = uninitializedObject64;
			list73[1] = uninitializedObject65;
			list74[0] = uninitializedObject32;
			list74[1] = uninitializedObject35;
			list74[2] = uninitializedObject36;
			list74[3] = uninitializedObject37;
			list75[0] = uninitializedObject66;
			list75[1] = uninitializedObject69;
			list76[0] = uninitializedObject70;
			list77[0] = uninitializedObject22;
			list78[0] = uninitializedObject22;
			list79[0] = uninitializedObject27;
			list79[1] = uninitializedObject44;
			list80[0] = uninitializedObject38;
			list81[0] = uninitializedObject38;
			list82[0] = uninitializedObject40;
			list82[1] = uninitializedObject53;
			list83[0] = uninitializedObject44;
			list84[0] = uninitializedObject47;
			list85[0] = uninitializedObject47;
			list86[0] = uninitializedObject48;
			list86[1] = uninitializedObject54;
			list87[0] = uninitializedObject50;
			list88[0] = uninitializedObject50;
			list89[0] = uninitializedObject54;
			list90[0] = uninitializedObject55;
			list90[1] = uninitializedObject58;
			list91[0] = uninitializedObject59;
			list91[1] = uninitializedObject61;
			list91[2] = uninitializedObject62;
			list91[3] = uninitializedObject63;
			list91[4] = uninitializedObject64;
			list91[5] = uninitializedObject65;
			list92[0] = uninitializedObject61;
			list92[1] = uninitializedObject61;
			list93[0] = uninitializedObject62;
			list93[1] = uninitializedObject62;
			list93[2] = uninitializedObject63;
			list93[3] = uninitializedObject63;
			list93[4] = uninitializedObject64;
			list93[5] = uninitializedObject65;
			list93[6] = uninitializedObject37;
			list93[7] = uninitializedObject69;
			list94[0] = uninitializedObject65;
			list95[0] = uninitializedObject32;
			list95[1] = uninitializedObject35;
			list95[2] = uninitializedObject36;
			list95[3] = uninitializedObject37;
			list96[0] = uninitializedObject35;
			list96[1] = uninitializedObject36;
			list97[0] = uninitializedObject66;
			list97[1] = uninitializedObject69;
			list98[0] = uninitializedObject70;
			list99[0] = uninitializedObject4;
			list99[1] = uninitializedObject7;
			list99[2] = uninitializedObject10;
			list99[3] = uninitializedObject13;
			list99[4] = uninitializedObject16;
			list99[5] = uninitializedObject19;
			list99[6] = uninitializedObject22;
			list99[7] = uninitializedObject27;
			list99[8] = uninitializedObject38;
			list99[9] = uninitializedObject40;
			list99[10] = uninitializedObject44;
			list99[11] = uninitializedObject47;
			list99[12] = uninitializedObject48;
			list99[13] = uninitializedObject50;
			list99[14] = uninitializedObject53;
			list99[15] = uninitializedObject54;
			list99[16] = uninitializedObject55;
			list99[17] = uninitializedObject58;
			list99[18] = uninitializedObject59;
			list99[19] = uninitializedObject61;
			list99[20] = uninitializedObject62;
			list99[21] = uninitializedObject63;
			list99[22] = uninitializedObject64;
			list99[23] = uninitializedObject65;
			list99[24] = uninitializedObject32;
			list99[25] = uninitializedObject35;
			list99[26] = uninitializedObject36;
			list99[27] = uninitializedObject37;
			list99[28] = uninitializedObject66;
			list99[29] = uninitializedObject69;
			list99[30] = uninitializedObject70;
			list100[0] = uninitializedObject71;
			typeof(FeatureInfo).GetProperty("PropertyType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject71, typeFromHandle12);
			typeof(FeatureInfo).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject71, "Score");
			typeof(FeatureInfo).GetProperty("Holders", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject71, list101);
			typeof(FeatureInfo).GetProperty("IsComplete", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject71, true);
			list101[0] = typeFromHandle13;
			list102[0] = uninitializedObject72;
			typeof(ResolvedType).GetField("_typeField", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject72, typeFromHandle14);
			list103[0] = uninitializedObject73;
			typeof(ResolvedType).GetField("_typeField", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject73, typeFromHandle15);
			dictionary41["v"] = uninitializedObject2;
			dictionary41["k"] = uninitializedObject5;
			dictionary41["str"] = uninitializedObject8;
			dictionary41["del"] = uninitializedObject11;
			dictionary41["re"] = uninitializedObject14;
			dictionary41["columnNames"] = uninitializedObject17;
			dictionary41["output"] = uninitializedObject20;
			dictionary41["table"] = uninitializedObject23;
			dictionary41["row"] = uninitializedObject28;
			dictionary41["colSplit"] = uninitializedObject29;
			dictionary41["tup"] = uninitializedObject41;
			dictionary41["extractTup"] = uninitializedObject45;
			dictionary41["trimExtract"] = uninitializedObject49;
			dictionary41["extract"] = uninitializedObject57;
			dictionary41["split"] = uninitializedObject51;
			dictionary41["records"] = uninitializedObject31;
			dictionary41["skip"] = uninitializedObject34;
			dictionary41["lines"] = uninitializedObject68;
			dictionary41["_LFun0"] = uninitializedObject25;
			dictionary41["_LetB0"] = uninitializedObject39;
			dictionary41["_LetB1"] = uninitializedObject43;
			dictionary41["_LetB2"] = uninitializedObject46;
			dictionary41["_LetB3"] = uninitializedObject52;
			dictionary39["v"] = uninitializedObject4;
			dictionary39["k"] = uninitializedObject7;
			dictionary39["str"] = uninitializedObject10;
			dictionary39["del"] = uninitializedObject13;
			dictionary39["re"] = uninitializedObject16;
			dictionary39["columnNames"] = uninitializedObject19;
			dictionary39["Table"] = uninitializedObject22;
			dictionary39["RowMap"] = uninitializedObject38;
			dictionary39["Second"] = uninitializedObject40;
			dictionary39["Prepend"] = uninitializedObject44;
			dictionary39["LetPrepend"] = uninitializedObject47;
			dictionary39["List"] = uninitializedObject48;
			dictionary39["LetSplit"] = uninitializedObject50;
			dictionary39["First"] = uninitializedObject53;
			dictionary39["LetExtractTup"] = uninitializedObject54;
			dictionary39["~convert_trimExtract_extract"] = uninitializedObject55;
			dictionary39["Trim"] = uninitializedObject58;
			dictionary39["~convert_extract_row"] = uninitializedObject59;
			dictionary39["BetweenDelimiters"] = uninitializedObject61;
			dictionary39["Substring"] = uninitializedObject62;
			dictionary39["Slice"] = uninitializedObject63;
			dictionary39["SplitPosition"] = uninitializedObject64;
			dictionary39["SplitDelimiter"] = uninitializedObject65;
			dictionary39["~convert_records_skip"] = uninitializedObject32;
			dictionary39["Select"] = uninitializedObject35;
			dictionary39["Group"] = uninitializedObject36;
			dictionary39["MergeEvery"] = uninitializedObject37;
			dictionary39["~convert_skip_lines"] = uninitializedObject66;
			dictionary39["Skip"] = uninitializedObject69;
			dictionary39["SplitLines"] = uninitializedObject70;
			dictionary38[uninitializedObject17] = list77;
			dictionary38[uninitializedObject23] = list78;
			dictionary38[uninitializedObject29] = list79;
			dictionary38[uninitializedObject25] = list80;
			dictionary38[uninitializedObject31] = list81;
			dictionary38[uninitializedObject41] = list82;
			dictionary38[uninitializedObject45] = list83;
			dictionary38[uninitializedObject39] = list84;
			dictionary38[uninitializedObject43] = list85;
			dictionary38[uninitializedObject49] = list86;
			dictionary38[uninitializedObject51] = list87;
			dictionary38[uninitializedObject46] = list88;
			dictionary38[uninitializedObject52] = list89;
			dictionary38[uninitializedObject57] = list90;
			dictionary38[uninitializedObject28] = list91;
			dictionary38[uninitializedObject11] = list92;
			dictionary38[uninitializedObject5] = list93;
			dictionary38[uninitializedObject8] = list94;
			dictionary38[uninitializedObject34] = list95;
			dictionary38[uninitializedObject14] = list96;
			dictionary38[uninitializedObject68] = list97;
			dictionary38[uninitializedObject2] = list98;
			dictionary37[uninitializedObject2] = list56;
			dictionary37[uninitializedObject5] = list57;
			dictionary37[uninitializedObject8] = list58;
			dictionary37[uninitializedObject11] = list59;
			dictionary37[uninitializedObject14] = list60;
			dictionary37[uninitializedObject17] = list61;
			dictionary37[uninitializedObject20] = list62;
			dictionary37[uninitializedObject25] = list63;
			dictionary37[uninitializedObject23] = list64;
			dictionary37[uninitializedObject39] = list65;
			dictionary37[uninitializedObject43] = list66;
			dictionary37[uninitializedObject46] = list67;
			dictionary37[uninitializedObject29] = list68;
			dictionary37[uninitializedObject52] = list69;
			dictionary37[uninitializedObject45] = list70;
			dictionary37[uninitializedObject49] = list71;
			dictionary37[uninitializedObject57] = list72;
			dictionary37[uninitializedObject51] = list73;
			dictionary37[uninitializedObject31] = list74;
			dictionary37[uninitializedObject34] = list75;
			dictionary37[uninitializedObject68] = list76;
			dictionary[uninitializedObject2] = list;
			dictionary[uninitializedObject5] = list3;
			dictionary[uninitializedObject8] = list5;
			dictionary[uninitializedObject11] = list7;
			dictionary[uninitializedObject14] = list9;
			dictionary[uninitializedObject17] = list11;
			dictionary[uninitializedObject20] = list13;
			dictionary[uninitializedObject25] = list15;
			dictionary[uninitializedObject31] = list17;
			dictionary[uninitializedObject23] = list22;
			dictionary[uninitializedObject39] = list25;
			dictionary[uninitializedObject43] = list27;
			dictionary[uninitializedObject46] = list29;
			dictionary[uninitializedObject29] = list31;
			dictionary[uninitializedObject52] = list34;
			dictionary[uninitializedObject45] = list36;
			dictionary[uninitializedObject49] = list38;
			dictionary[uninitializedObject57] = list41;
			dictionary[uninitializedObject51] = list46;
			dictionary[uninitializedObject34] = list49;
			dictionary[uninitializedObject68] = list52;
			dictionary[uninitializedObject28] = list54;
			dictionary[uninitializedObject41] = list55;
			return uninitializedObject;
		}

		// Token: 0x04002E3D RID: 11837
		private static readonly Lazy<Grammar> _grammar = new Lazy<Grammar>(new Func<Grammar>(Language.Initialize), LazyThreadSafetyMode.ExecutionAndPublication);

		// Token: 0x04002E3E RID: 11838
		private static readonly Assembly MPSAssembly = typeof(GrammarRule).GetTypeInfo().Assembly;

		// Token: 0x04002E3F RID: 11839
		private const BindingFlags Flags = BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic;
	}
}
