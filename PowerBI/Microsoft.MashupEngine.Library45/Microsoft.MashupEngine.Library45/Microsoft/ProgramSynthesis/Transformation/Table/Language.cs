using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Reflection;
using System.Threading;
using Microsoft.ProgramSynthesis.Detection.RichDataTypes;
using Microsoft.ProgramSynthesis.DslLibrary;
using Microsoft.ProgramSynthesis.Extraction.Json;
using Microsoft.ProgramSynthesis.Features;
using Microsoft.ProgramSynthesis.Learning;
using Microsoft.ProgramSynthesis.Rules;
using Microsoft.ProgramSynthesis.Rules.Concepts;
using Microsoft.ProgramSynthesis.Split.Text;
using Microsoft.ProgramSynthesis.Split.Text.Semantics;
using Microsoft.ProgramSynthesis.Transformation.Formula;
using Microsoft.ProgramSynthesis.Transformation.Table.Build;
using Microsoft.ProgramSynthesis.Transformation.Table.Semantics;
using Microsoft.ProgramSynthesis.Transformation.Table.Semantics.Learning;
using Microsoft.ProgramSynthesis.Utils;
using Microsoft.ProgramSynthesis.Wrangling.Schema.TableOutput;

namespace Microsoft.ProgramSynthesis.Transformation.Table
{
	// Token: 0x02001A88 RID: 6792
	public static class Language
	{
		// Token: 0x1700254B RID: 9547
		// (get) Token: 0x0600DF6D RID: 57197 RVA: 0x002F65E3 File Offset: 0x002F47E3
		public static Grammar Grammar
		{
			get
			{
				return Microsoft.ProgramSynthesis.Transformation.Table.Language._grammar.Value;
			}
		}

		// Token: 0x1700254C RID: 9548
		// (get) Token: 0x0600DF6E RID: 57198 RVA: 0x002F65EF File Offset: 0x002F47EF
		public static GrammarBuilders Build
		{
			get
			{
				return GrammarBuilders.Instance(Microsoft.ProgramSynthesis.Transformation.Table.Language.Grammar);
			}
		}

		// Token: 0x0600DF6F RID: 57199 RVA: 0x002F65FC File Offset: 0x002F47FC
		private static Grammar Initialize()
		{
			Grammar uninitializedObject = CSharpUtils.GetUninitializedObject<Grammar>();
			Dictionary<Symbol, List<GrammarRule>> dictionary = new Dictionary<Symbol, List<GrammarRule>>();
			Symbol uninitializedObject2 = CSharpUtils.GetUninitializedObject<Symbol>();
			ResolvedType uninitializedObject3 = CSharpUtils.GetUninitializedObject<ResolvedType>();
			Type typeFromHandle = typeof(ITable<object>);
			List<GrammarRule> list = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			ConversionRule uninitializedObject4 = CSharpUtils.GetUninitializedObject<ConversionRule>();
			ExternalSymbolUsage uninitializedObject5 = CSharpUtils.GetUninitializedObject<ExternalSymbolUsage>();
			Dictionary<Symbol, Symbol> dictionary2 = new Dictionary<Symbol, Symbol>();
			MethodReference methodReference = null;
			Optional<int>[] array = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 1);
			Optional<int> optional = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list2 = Enumerable.Repeat<Symbol>(null, 1).ToList<Symbol>();
			Symbol uninitializedObject6 = CSharpUtils.GetUninitializedObject<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary3 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			List<GrammarRule> list3 = Enumerable.Repeat<GrammarRule>(null, 10).ToList<GrammarRule>();
			ConversionRule uninitializedObject7 = CSharpUtils.GetUninitializedObject<ConversionRule>();
			ExternalSymbolUsage uninitializedObject8 = CSharpUtils.GetUninitializedObject<ExternalSymbolUsage>();
			Dictionary<Symbol, Symbol> dictionary4 = new Dictionary<Symbol, Symbol>();
			MethodReference methodReference2 = null;
			Optional<int>[] array2 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 1);
			Optional<int> optional2 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list4 = Enumerable.Repeat<Symbol>(null, 1).ToList<Symbol>();
			Symbol uninitializedObject9 = CSharpUtils.GetUninitializedObject<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary5 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			BlackBoxRule uninitializedObject10 = CSharpUtils.GetUninitializedObject<BlackBoxRule>();
			MethodReference methodReference3 = MethodReference.WithoutReference<OperatorRule.OperatorSemantics>((object[] arg0) => Microsoft.ProgramSynthesis.Transformation.Table.Semantics.Semantics.LabelEncode((ITable<object>)arg0[0], (string)arg0[1]));
			Optional<int>[] array3 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 2);
			Optional<int> optional3 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional4 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list5 = Enumerable.Repeat<Symbol>(null, 2).ToList<Symbol>();
			Symbol uninitializedObject11 = CSharpUtils.GetUninitializedObject<Symbol>();
			ResolvedType uninitializedObject12 = CSharpUtils.GetUninitializedObject<ResolvedType>();
			Type typeFromHandle2 = typeof(string);
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary6 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			BlackBoxRule uninitializedObject13 = CSharpUtils.GetUninitializedObject<BlackBoxRule>();
			MethodReference methodReference4 = MethodReference.WithoutReference<OperatorRule.OperatorSemantics>((object[] arg0) => Microsoft.ProgramSynthesis.Transformation.Table.Semantics.Semantics.OneHotEncode((ITable<object>)arg0[0], (string)arg0[1]));
			Optional<int>[] array4 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 2);
			Optional<int> optional5 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional6 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list6 = Enumerable.Repeat<Symbol>(null, 2).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary7 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			BlackBoxRule uninitializedObject14 = CSharpUtils.GetUninitializedObject<BlackBoxRule>();
			MethodReference methodReference5 = MethodReference.WithoutReference<OperatorRule.OperatorSemantics>((object[] arg0) => Microsoft.ProgramSynthesis.Transformation.Table.Semantics.Semantics.MultiLabelBinarizer((ITable<object>)arg0[0], (string)arg0[1], (string)arg0[2]));
			Optional<int>[] array5 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 3);
			Optional<int> optional7 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional8 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional9 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list7 = Enumerable.Repeat<Symbol>(null, 3).ToList<Symbol>();
			Symbol uninitializedObject15 = CSharpUtils.GetUninitializedObject<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary8 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			BlackBoxRule uninitializedObject16 = CSharpUtils.GetUninitializedObject<BlackBoxRule>();
			MethodReference methodReference6 = MethodReference.WithoutReference<OperatorRule.OperatorSemantics>((object[] arg0) => Microsoft.ProgramSynthesis.Transformation.Table.Semantics.Semantics.CastColumn((ITable<object>)arg0[0], (string)arg0[1], (IRichDataType)arg0[2], (bool)arg0[3]));
			Optional<int>[] array6 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 4);
			Optional<int> optional10 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional11 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional12 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional13 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list8 = Enumerable.Repeat<Symbol>(null, 4).ToList<Symbol>();
			Symbol uninitializedObject17 = CSharpUtils.GetUninitializedObject<Symbol>();
			ResolvedType uninitializedObject18 = CSharpUtils.GetUninitializedObject<ResolvedType>();
			Type typeFromHandle3 = typeof(IRichDataType);
			Symbol uninitializedObject19 = CSharpUtils.GetUninitializedObject<Symbol>();
			ResolvedType uninitializedObject20 = CSharpUtils.GetUninitializedObject<ResolvedType>();
			Type typeFromHandle4 = typeof(bool);
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary9 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			BlackBoxRule uninitializedObject21 = CSharpUtils.GetUninitializedObject<BlackBoxRule>();
			MethodReference methodReference7 = MethodReference.WithoutReference<OperatorRule.OperatorSemantics>((object[] arg0) => Microsoft.ProgramSynthesis.Transformation.Table.Semantics.Semantics.FillMissingValues((ITable<object>)arg0[0], (string)arg0[1], arg0[2], (arg0[3] == null) ? null : ((arg0[3] as IEnumerable<object>) ?? (arg0[3] as IEnumerable).Cast<object>()), (FillMethod)arg0[4]));
			Optional<int>[] array7 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 5);
			Optional<int> optional14 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional15 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional16 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional17 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional18 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list9 = Enumerable.Repeat<Symbol>(null, 5).ToList<Symbol>();
			Symbol uninitializedObject22 = CSharpUtils.GetUninitializedObject<Symbol>();
			ResolvedType uninitializedObject23 = CSharpUtils.GetUninitializedObject<ResolvedType>();
			Type typeFromHandle5 = typeof(object);
			Symbol uninitializedObject24 = CSharpUtils.GetUninitializedObject<Symbol>();
			ResolvedType uninitializedObject25 = CSharpUtils.GetUninitializedObject<ResolvedType>();
			Type typeFromHandle6 = typeof(IEnumerable<object>);
			Symbol uninitializedObject26 = CSharpUtils.GetUninitializedObject<Symbol>();
			ResolvedType uninitializedObject27 = CSharpUtils.GetUninitializedObject<ResolvedType>();
			Type typeFromHandle7 = typeof(FillMethod);
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary10 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			BlackBoxRule uninitializedObject28 = CSharpUtils.GetUninitializedObject<BlackBoxRule>();
			MethodReference methodReference8 = MethodReference.WithoutReference<OperatorRule.OperatorSemantics>((object[] arg0) => Microsoft.ProgramSynthesis.Transformation.Table.Semantics.Semantics.DropColumn((ITable<object>)arg0[0], (string)arg0[1], (DropCondition)arg0[2]));
			Optional<int>[] array8 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 3);
			Optional<int> optional19 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional20 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional21 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list10 = Enumerable.Repeat<Symbol>(null, 3).ToList<Symbol>();
			Symbol uninitializedObject29 = CSharpUtils.GetUninitializedObject<Symbol>();
			ResolvedType uninitializedObject30 = CSharpUtils.GetUninitializedObject<ResolvedType>();
			Type typeFromHandle8 = typeof(DropCondition);
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary11 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			BlackBoxRule uninitializedObject31 = CSharpUtils.GetUninitializedObject<BlackBoxRule>();
			MethodReference methodReference9 = MethodReference.WithoutReference<OperatorRule.OperatorSemantics>((object[] arg0) => Microsoft.ProgramSynthesis.Transformation.Table.Semantics.Semantics.DropRows((ITable<object>)arg0[0], (DropCondition)arg0[1]));
			Optional<int>[] array9 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 2);
			Optional<int> optional22 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional23 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list11 = Enumerable.Repeat<Symbol>(null, 2).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary12 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			BlackBoxRule uninitializedObject32 = CSharpUtils.GetUninitializedObject<BlackBoxRule>();
			MethodReference methodReference10 = MethodReference.WithoutReference<OperatorRule.OperatorSemantics>((object[] arg0) => Microsoft.ProgramSynthesis.Transformation.Table.Semantics.Semantics.AddSplitColumns((ITable<object>)arg0[0], (string)arg0[1], (arg0[2] == null) ? null : ((arg0[2] as IEnumerable<IEnumerable<object>>) ?? (arg0[2] as IEnumerable).Cast<IEnumerable<object>>())));
			Optional<int>[] array10 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 3);
			Optional<int> optional24 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional25 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional26 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list12 = Enumerable.Repeat<Symbol>(null, 3).ToList<Symbol>();
			Symbol uninitializedObject33 = CSharpUtils.GetUninitializedObject<Symbol>();
			ResolvedType uninitializedObject34 = CSharpUtils.GetUninitializedObject<ResolvedType>();
			Type typeFromHandle9 = typeof(IEnumerable<IEnumerable<object>>);
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary13 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			BlackBoxRule uninitializedObject35 = CSharpUtils.GetUninitializedObject<BlackBoxRule>();
			MethodReference methodReference11 = MethodReference.WithoutReference<OperatorRule.OperatorSemantics>((object[] arg0) => Microsoft.ProgramSynthesis.Transformation.Table.Semantics.Semantics.AddColumnsFromJson((ITable<object>)arg0[0], (string)arg0[1], (Microsoft.ProgramSynthesis.Extraction.Json.Program)arg0[2]));
			Optional<int>[] array11 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 3);
			Optional<int> optional27 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional28 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional29 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list13 = Enumerable.Repeat<Symbol>(null, 3).ToList<Symbol>();
			Symbol uninitializedObject36 = CSharpUtils.GetUninitializedObject<Symbol>();
			ResolvedType uninitializedObject37 = CSharpUtils.GetUninitializedObject<ResolvedType>();
			Type typeFromHandle10 = typeof(Microsoft.ProgramSynthesis.Extraction.Json.Program);
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary14 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			Symbol uninitializedObject38 = CSharpUtils.GetUninitializedObject<Symbol>();
			ResolvedType uninitializedObject39 = CSharpUtils.GetUninitializedObject<ResolvedType>();
			Type typeFromHandle11 = typeof(Func<StringRegion, SplitCell[]>);
			List<GrammarRule> list14 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			LambdaRule uninitializedObject40 = CSharpUtils.GetUninitializedObject<LambdaRule>();
			Symbol uninitializedObject41 = CSharpUtils.GetUninitializedObject<Symbol>();
			ResolvedType uninitializedObject42 = CSharpUtils.GetUninitializedObject<ResolvedType>();
			Type typeFromHandle12 = typeof(StringRegion);
			Optional<int>[] array12 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 1);
			Optional<int> optional30 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list15 = Enumerable.Repeat<Symbol>(null, 1).ToList<Symbol>();
			Symbol uninitializedObject43 = CSharpUtils.GetUninitializedObject<Symbol>();
			ResolvedType uninitializedObject44 = CSharpUtils.GetUninitializedObject<ResolvedType>();
			Type typeFromHandle13 = typeof(SplitCell[]);
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary15 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			Symbol uninitializedObject45 = CSharpUtils.GetUninitializedObject<Symbol>();
			ResolvedType uninitializedObject46 = CSharpUtils.GetUninitializedObject<ResolvedType>();
			Type typeFromHandle14 = typeof(IEnumerable<StringRegion>);
			List<GrammarRule> list16 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			BlackBoxRule uninitializedObject47 = CSharpUtils.GetUninitializedObject<BlackBoxRule>();
			MethodReference methodReference12 = MethodReference.WithoutReference<OperatorRule.OperatorSemantics>((object[] arg0) => Microsoft.ProgramSynthesis.Transformation.Table.Semantics.Semantics.SelectColumnToSplit((ITable<object>)arg0[0], (string)arg0[1]));
			Optional<int>[] array13 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 2);
			Optional<int> optional31 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional32 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list17 = Enumerable.Repeat<Symbol>(null, 2).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary16 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			List<GrammarRule> list18 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			Map uninitializedObject48 = CSharpUtils.GetUninitializedObject<Map>();
			List<ConceptParameterUsage> list19 = Enumerable.Repeat<ConceptParameterUsage>(default(ConceptParameterUsage), 2).ToList<ConceptParameterUsage>();
			ConceptParameterUsage conceptParameterUsage = CSharpUtils.GetUninitializedObject<ConceptParameterUsage>();
			Optional<int> optional33 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			ParameterUsage parameterUsage = ParameterUsage.PassOn;
			ConceptParameterUsage conceptParameterUsage2 = CSharpUtils.GetUninitializedObject<ConceptParameterUsage>();
			Optional<int> optional34 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			ParameterUsage parameterUsage2 = ParameterUsage.FillIn;
			MethodReference methodReference13 = null;
			Optional<int>[] array14 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 2);
			Optional<int> optional35 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			Optional<int> optional36 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list20 = Enumerable.Repeat<Symbol>(null, 2).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary17 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			List<GrammarRule> list21 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			ConversionRule uninitializedObject49 = CSharpUtils.GetUninitializedObject<ConversionRule>();
			ExternalSymbolUsage uninitializedObject50 = CSharpUtils.GetUninitializedObject<ExternalSymbolUsage>();
			Dictionary<Symbol, Symbol> dictionary18 = new Dictionary<Symbol, Symbol>();
			Symbol symbol = Microsoft.ProgramSynthesis.Split.Text.Language.Grammar.Symbol("v");
			MethodReference methodReference14 = null;
			Optional<int>[] array15 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 1);
			Optional<int> optional37 = CSharpUtils.GetUninitializedObject<Optional<int>>();
			List<Symbol> list22 = Enumerable.Repeat<Symbol>(null, 1).ToList<Symbol>();
			Symbol symbol2 = Microsoft.ProgramSynthesis.Split.Text.Language.Grammar.Symbol("regionSplit");
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary19 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			List<GrammarRule> list23 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			TerminalRule uninitializedObject51 = CSharpUtils.GetUninitializedObject<TerminalRule>();
			Optional<int>[] array16 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 0);
			List<Symbol> list24 = Enumerable.Repeat<Symbol>(null, 0).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary20 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			List<GrammarRule> list25 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			TerminalRule uninitializedObject52 = CSharpUtils.GetUninitializedObject<TerminalRule>();
			Optional<int>[] array17 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 0);
			List<Symbol> list26 = Enumerable.Repeat<Symbol>(null, 0).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary21 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			List<GrammarRule> list27 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			TerminalRule uninitializedObject53 = CSharpUtils.GetUninitializedObject<TerminalRule>();
			Optional<int>[] array18 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 0);
			List<Symbol> list28 = Enumerable.Repeat<Symbol>(null, 0).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary22 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			List<GrammarRule> list29 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			TerminalRule uninitializedObject54 = CSharpUtils.GetUninitializedObject<TerminalRule>();
			Optional<int>[] array19 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 0);
			List<Symbol> list30 = Enumerable.Repeat<Symbol>(null, 0).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary23 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			List<GrammarRule> list31 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			TerminalRule uninitializedObject55 = CSharpUtils.GetUninitializedObject<TerminalRule>();
			Optional<int>[] array20 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 0);
			List<Symbol> list32 = Enumerable.Repeat<Symbol>(null, 0).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary24 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			List<GrammarRule> list33 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			TerminalRule uninitializedObject56 = CSharpUtils.GetUninitializedObject<TerminalRule>();
			Optional<int>[] array21 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 0);
			List<Symbol> list34 = Enumerable.Repeat<Symbol>(null, 0).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary25 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			List<GrammarRule> list35 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			TerminalRule uninitializedObject57 = CSharpUtils.GetUninitializedObject<TerminalRule>();
			Optional<int>[] array22 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 0);
			List<Symbol> list36 = Enumerable.Repeat<Symbol>(null, 0).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary26 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			List<GrammarRule> list37 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			TerminalRule uninitializedObject58 = CSharpUtils.GetUninitializedObject<TerminalRule>();
			Optional<int>[] array23 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 0);
			List<Symbol> list38 = Enumerable.Repeat<Symbol>(null, 0).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary27 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			List<GrammarRule> list39 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			TerminalRule uninitializedObject59 = CSharpUtils.GetUninitializedObject<TerminalRule>();
			Optional<int>[] array24 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 0);
			List<Symbol> list40 = Enumerable.Repeat<Symbol>(null, 0).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary28 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			List<GrammarRule> list41 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			TerminalRule uninitializedObject60 = CSharpUtils.GetUninitializedObject<TerminalRule>();
			Optional<int>[] array25 = (Optional<int>[])Array.CreateInstance(typeof(Optional<int>), 0);
			List<Symbol> list42 = Enumerable.Repeat<Symbol>(null, 0).ToList<Symbol>();
			Dictionary<int, MultiValueDictionary<Type, WitnessFunction>> dictionary29 = new Dictionary<int, MultiValueDictionary<Type, WitnessFunction>>();
			List<GrammarRule> list43 = Enumerable.Repeat<GrammarRule>(null, 0).ToList<GrammarRule>();
			Dictionary<Symbol, List<GrammarRule>> dictionary30 = new Dictionary<Symbol, List<GrammarRule>>();
			List<GrammarRule> list44 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list45 = Enumerable.Repeat<GrammarRule>(null, 10).ToList<GrammarRule>();
			List<GrammarRule> list46 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list47 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list48 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list49 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list50 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list51 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list52 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list53 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list54 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list55 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list56 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list57 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list58 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list59 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			Dictionary<Symbol, List<GrammarRule>> dictionary31 = new Dictionary<Symbol, List<GrammarRule>>();
			List<GrammarRule> list60 = Enumerable.Repeat<GrammarRule>(null, 10).ToList<GrammarRule>();
			List<GrammarRule> list61 = Enumerable.Repeat<GrammarRule>(null, 2).ToList<GrammarRule>();
			List<GrammarRule> list62 = Enumerable.Repeat<GrammarRule>(null, 9).ToList<GrammarRule>();
			List<GrammarRule> list63 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list64 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list65 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list66 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list67 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list68 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list69 = Enumerable.Repeat<GrammarRule>(null, 2).ToList<GrammarRule>();
			List<GrammarRule> list70 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list71 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list72 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list73 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list74 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			List<GrammarRule> list75 = Enumerable.Repeat<GrammarRule>(null, 1).ToList<GrammarRule>();
			Dictionary<string, GrammarRule> dictionary32 = new Dictionary<string, GrammarRule>();
			List<GrammarRule> list76 = Enumerable.Repeat<GrammarRule>(null, 25).ToList<GrammarRule>();
			List<FeatureInfo> list77 = Enumerable.Repeat<FeatureInfo>(null, 1).ToList<FeatureInfo>();
			FeatureInfo uninitializedObject61 = CSharpUtils.GetUninitializedObject<FeatureInfo>();
			Type typeFromHandle15 = typeof(double);
			List<Type> list78 = Enumerable.Repeat<Type>(null, 1).ToList<Type>();
			Type typeFromHandle16 = typeof(RankingScore);
			Dictionary<string, Grammar> dictionary33 = new Dictionary<string, Grammar>();
			Grammar grammar = Microsoft.ProgramSynthesis.Transformation.Formula.Language.Grammar;
			Grammar grammar2 = Microsoft.ProgramSynthesis.Split.Text.Language.Grammar;
			List<GrammarType> list79 = Enumerable.Repeat<GrammarType>(null, 1).ToList<GrammarType>();
			ResolvedType uninitializedObject62 = CSharpUtils.GetUninitializedObject<ResolvedType>();
			Type typeFromHandle17 = typeof(Microsoft.ProgramSynthesis.Transformation.Table.Semantics.Semantics);
			List<GrammarType> list80 = Enumerable.Repeat<GrammarType>(null, 0).ToList<GrammarType>();
			Dictionary<string, Symbol> dictionary34 = new Dictionary<string, Symbol>();
			object obj = optional37;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj, false);
			optional37 = (Optional<int>)obj;
			object obj2 = optional36;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj2, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj2, false);
			optional36 = (Optional<int>)obj2;
			object obj3 = optional35;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj3, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj3, false);
			optional35 = (Optional<int>)obj3;
			object obj4 = optional34;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj4, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj4, false);
			optional34 = (Optional<int>)obj4;
			object obj5 = conceptParameterUsage2;
			typeof(ConceptParameterUsage).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj5, optional34);
			typeof(ConceptParameterUsage).GetProperty("DSLParameter", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj5, uninitializedObject45);
			typeof(ConceptParameterUsage).GetProperty("ConceptIndex", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj5, 1);
			typeof(ConceptParameterUsage).GetProperty("Usage", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj5, parameterUsage2);
			conceptParameterUsage2 = (ConceptParameterUsage)obj5;
			object obj6 = optional33;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj6, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj6, false);
			optional33 = (Optional<int>)obj6;
			object obj7 = conceptParameterUsage;
			typeof(ConceptParameterUsage).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj7, optional33);
			typeof(ConceptParameterUsage).GetProperty("DSLParameter", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj7, uninitializedObject43);
			typeof(ConceptParameterUsage).GetProperty("ConceptIndex", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj7, 0);
			typeof(ConceptParameterUsage).GetProperty("Usage", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj7, parameterUsage);
			conceptParameterUsage = (ConceptParameterUsage)obj7;
			object obj8 = optional32;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj8, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj8, false);
			optional32 = (Optional<int>)obj8;
			object obj9 = optional31;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj9, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj9, false);
			optional31 = (Optional<int>)obj9;
			object obj10 = optional30;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj10, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj10, false);
			optional30 = (Optional<int>)obj10;
			object obj11 = optional29;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj11, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj11, false);
			optional29 = (Optional<int>)obj11;
			object obj12 = optional28;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj12, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj12, false);
			optional28 = (Optional<int>)obj12;
			object obj13 = optional27;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj13, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj13, false);
			optional27 = (Optional<int>)obj13;
			object obj14 = optional26;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj14, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj14, false);
			optional26 = (Optional<int>)obj14;
			object obj15 = optional25;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj15, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj15, false);
			optional25 = (Optional<int>)obj15;
			object obj16 = optional24;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj16, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj16, false);
			optional24 = (Optional<int>)obj16;
			object obj17 = optional23;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj17, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj17, false);
			optional23 = (Optional<int>)obj17;
			object obj18 = optional22;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj18, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj18, false);
			optional22 = (Optional<int>)obj18;
			object obj19 = optional21;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj19, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj19, false);
			optional21 = (Optional<int>)obj19;
			object obj20 = optional20;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj20, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj20, false);
			optional20 = (Optional<int>)obj20;
			object obj21 = optional19;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj21, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj21, false);
			optional19 = (Optional<int>)obj21;
			object obj22 = optional18;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj22, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj22, false);
			optional18 = (Optional<int>)obj22;
			object obj23 = optional17;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj23, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj23, false);
			optional17 = (Optional<int>)obj23;
			object obj24 = optional16;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj24, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj24, false);
			optional16 = (Optional<int>)obj24;
			object obj25 = optional15;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj25, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj25, false);
			optional15 = (Optional<int>)obj25;
			object obj26 = optional14;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj26, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj26, false);
			optional14 = (Optional<int>)obj26;
			object obj27 = optional13;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj27, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj27, false);
			optional13 = (Optional<int>)obj27;
			object obj28 = optional12;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj28, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj28, false);
			optional12 = (Optional<int>)obj28;
			object obj29 = optional11;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj29, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj29, false);
			optional11 = (Optional<int>)obj29;
			object obj30 = optional10;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj30, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj30, false);
			optional10 = (Optional<int>)obj30;
			object obj31 = optional9;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj31, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj31, false);
			optional9 = (Optional<int>)obj31;
			object obj32 = optional8;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj32, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj32, false);
			optional8 = (Optional<int>)obj32;
			object obj33 = optional7;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj33, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj33, false);
			optional7 = (Optional<int>)obj33;
			object obj34 = optional6;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj34, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj34, false);
			optional6 = (Optional<int>)obj34;
			object obj35 = optional5;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj35, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj35, false);
			optional5 = (Optional<int>)obj35;
			object obj36 = optional4;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj36, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj36, false);
			optional4 = (Optional<int>)obj36;
			object obj37 = optional3;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj37, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj37, false);
			optional3 = (Optional<int>)obj37;
			object obj38 = optional2;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj38, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj38, false);
			optional2 = (Optional<int>)obj38;
			object obj39 = optional;
			typeof(Optional<int>).GetField("_value", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj39, 0);
			typeof(Optional<int>).GetField("_hasValue", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(obj39, false);
			optional = (Optional<int>)obj39;
			typeof(Grammar).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject, "Transformation.Table");
			typeof(Grammar).GetField("_rulesByHead", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject, dictionary);
			typeof(Grammar).GetField("_nonDeprecatedRulesByHead", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject, dictionary30);
			typeof(Grammar).GetField("_rulesByBody", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject, dictionary31);
			typeof(Grammar).GetField("_rulesByName", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject, dictionary32);
			typeof(Grammar).GetField("_rules", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject, list76);
			typeof(Grammar).GetField("_features", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject, list77);
			typeof(Grammar).GetField("_grammarReferences", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject, dictionary33);
			typeof(Grammar).GetField("_semanticsLocations", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject, list79);
			typeof(Grammar).GetField("_learnerLocations", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject, list80);
			typeof(Grammar).GetField("_symbols", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject, dictionary34);
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject2, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject2, uninitializedObject3);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject2, "out");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject2, true);
			typeof(ResolvedType).GetField("_typeField", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject3, typeFromHandle);
			list[0] = uninitializedObject4;
			typeof(ConversionRule).GetProperty("ExternSymbolUsage", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject4, uninitializedObject5);
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject4, "~convert_out_table");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject4, false);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject4, methodReference);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject4, uninitializedObject2);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject4, "TTableProgram");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject4, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject4, array);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject4, list2);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject4, dictionary3);
			typeof(ExternalSymbolUsage).GetProperty("Substitutions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject5, dictionary2);
			array[0] = optional;
			list2[0] = uninitializedObject6;
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject6, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject6, uninitializedObject3);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject6, "table");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject6, false);
			list3[0] = uninitializedObject7;
			list3[1] = uninitializedObject10;
			list3[2] = uninitializedObject13;
			list3[3] = uninitializedObject14;
			list3[4] = uninitializedObject16;
			list3[5] = uninitializedObject21;
			list3[6] = uninitializedObject28;
			list3[7] = uninitializedObject31;
			list3[8] = uninitializedObject32;
			list3[9] = uninitializedObject35;
			typeof(ConversionRule).GetProperty("ExternSymbolUsage", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject7, uninitializedObject8);
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject7, "~convert_table_inputTable");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject7, false);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject7, methodReference2);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject7, uninitializedObject6);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject7, "~convert_table_inputTable");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject7, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject7, array2);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject7, list4);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject7, dictionary5);
			typeof(ExternalSymbolUsage).GetProperty("Substitutions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject8, dictionary4);
			array2[0] = optional2;
			list4[0] = uninitializedObject9;
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject9, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject9, uninitializedObject3);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject9, "inputTable");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject9, false);
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject10, "LabelEncode");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject10, false);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject10, methodReference3);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject10, uninitializedObject6);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject10, "LabelEncode");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject10, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject10, array3);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject10, list5);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject10, dictionary6);
			array3[0] = optional3;
			array3[1] = optional4;
			list5[0] = uninitializedObject6;
			list5[1] = uninitializedObject11;
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject11, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject11, uninitializedObject12);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject11, "sourceColumnName");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject11, false);
			typeof(ResolvedType).GetField("_typeField", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject12, typeFromHandle2);
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject13, "OneHotEncode");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject13, false);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject13, methodReference4);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject13, uninitializedObject6);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject13, "OneHotEncode");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject13, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject13, array4);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject13, list6);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject13, dictionary7);
			array4[0] = optional5;
			array4[1] = optional6;
			list6[0] = uninitializedObject6;
			list6[1] = uninitializedObject11;
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject14, "MultiLabelBinarizer");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject14, false);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject14, methodReference5);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject14, uninitializedObject6);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject14, "MultiLabelBinarizer");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject14, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject14, array5);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject14, list7);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject14, dictionary8);
			array5[0] = optional7;
			array5[1] = optional8;
			array5[2] = optional9;
			list7[0] = uninitializedObject6;
			list7[1] = uninitializedObject11;
			list7[2] = uninitializedObject15;
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject15, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject15, uninitializedObject12);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject15, "delimiter");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject15, false);
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject16, "CastColumn");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject16, false);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject16, methodReference6);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject16, uninitializedObject6);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject16, "CastColumn");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject16, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject16, array6);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject16, list8);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject16, dictionary9);
			array6[0] = optional10;
			array6[1] = optional11;
			array6[2] = optional12;
			array6[3] = optional13;
			list8[0] = uninitializedObject6;
			list8[1] = uninitializedObject11;
			list8[2] = uninitializedObject17;
			list8[3] = uninitializedObject19;
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject17, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject17, uninitializedObject18);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject17, "richDataType");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject17, false);
			typeof(ResolvedType).GetField("_typeField", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject18, typeFromHandle3);
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject19, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject19, uninitializedObject20);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject19, "isMixedColumn");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject19, false);
			typeof(ResolvedType).GetField("_typeField", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject20, typeFromHandle4);
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject21, "FillMissingValues");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject21, false);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject21, methodReference7);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject21, uninitializedObject6);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject21, "FillMissingValues");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject21, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject21, array7);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject21, list9);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject21, dictionary10);
			array7[0] = optional14;
			array7[1] = optional15;
			array7[2] = optional16;
			array7[3] = optional17;
			array7[4] = optional18;
			list9[0] = uninitializedObject6;
			list9[1] = uninitializedObject11;
			list9[2] = uninitializedObject22;
			list9[3] = uninitializedObject24;
			list9[4] = uninitializedObject26;
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject22, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject22, uninitializedObject23);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject22, "fillValue");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject22, false);
			typeof(ResolvedType).GetField("_typeField", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject23, typeFromHandle5);
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject24, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject24, uninitializedObject25);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject24, "missingValueMarkers");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject24, false);
			typeof(ResolvedType).GetField("_typeField", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject25, typeFromHandle6);
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject26, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject26, uninitializedObject27);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject26, "fillMethod");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject26, false);
			typeof(ResolvedType).GetField("_typeField", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject27, typeFromHandle7);
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject28, "DropColumn");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject28, false);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject28, methodReference8);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject28, uninitializedObject6);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject28, "DropColumn");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject28, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject28, array8);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject28, list10);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject28, dictionary11);
			array8[0] = optional19;
			array8[1] = optional20;
			array8[2] = optional21;
			list10[0] = uninitializedObject6;
			list10[1] = uninitializedObject11;
			list10[2] = uninitializedObject29;
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject29, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject29, uninitializedObject30);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject29, "dropCondition");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject29, false);
			typeof(ResolvedType).GetField("_typeField", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject30, typeFromHandle8);
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject31, "DropRows");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject31, false);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject31, methodReference9);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject31, uninitializedObject6);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject31, "DropRows");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject31, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject31, array9);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject31, list11);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject31, dictionary12);
			array9[0] = optional22;
			array9[1] = optional23;
			list11[0] = uninitializedObject6;
			list11[1] = uninitializedObject29;
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject32, "AddSplitColumns");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject32, false);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject32, methodReference10);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject32, uninitializedObject6);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject32, "AddSplitColumns");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject32, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject32, array10);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject32, list12);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject32, dictionary13);
			array10[0] = optional24;
			array10[1] = optional25;
			array10[2] = optional26;
			list12[0] = uninitializedObject6;
			list12[1] = uninitializedObject11;
			list12[2] = uninitializedObject33;
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject33, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject33, uninitializedObject34);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject33, "newColumns");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject33, false);
			typeof(ResolvedType).GetField("_typeField", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject34, typeFromHandle9);
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject35, "AddColumnsFromJson");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject35, false);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject35, methodReference11);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject35, uninitializedObject6);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject35, "AddColumnsFromJson");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject35, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject35, array11);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject35, list13);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject35, dictionary14);
			array11[0] = optional27;
			array11[1] = optional28;
			array11[2] = optional29;
			list13[0] = uninitializedObject6;
			list13[1] = uninitializedObject11;
			list13[2] = uninitializedObject36;
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject36, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject36, uninitializedObject37);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject36, "ejsonProgram");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject36, false);
			typeof(ResolvedType).GetField("_typeField", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject37, typeFromHandle10);
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject38, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject38, uninitializedObject39);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject38, "_LFun0");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject38, false);
			typeof(ResolvedType).GetField("_typeField", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject39, typeFromHandle11);
			list14[0] = uninitializedObject40;
			typeof(LambdaRule).GetProperty("Variable", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject40, uninitializedObject41);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject40, uninitializedObject38);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject40, null);
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject40, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject40, array12);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject40, list15);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject40, dictionary15);
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject41, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject41, uninitializedObject42);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject41, "v");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject41, false);
			typeof(ResolvedType).GetField("_typeField", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject42, typeFromHandle12);
			array12[0] = optional30;
			list15[0] = uninitializedObject43;
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject43, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject43, uninitializedObject44);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject43, "splitCell");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject43, false);
			typeof(ResolvedType).GetField("_typeField", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject44, typeFromHandle13);
			typeof(Symbol).GetProperty("Grammar", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject45, uninitializedObject);
			typeof(Symbol).GetProperty("GrammarType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject45, uninitializedObject46);
			typeof(Symbol).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject45, "columnToSplit");
			typeof(Symbol).GetProperty("IsStart", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject45, false);
			typeof(ResolvedType).GetField("_typeField", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject46, typeFromHandle14);
			list16[0] = uninitializedObject47;
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject47, "SelectColumnToSplit");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject47, false);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject47, methodReference12);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject47, uninitializedObject45);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject47, "SelectColumnToSplit");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject47, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject47, array13);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject47, list17);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject47, dictionary16);
			array13[0] = optional31;
			array13[1] = optional32;
			list17[0] = uninitializedObject9;
			list17[1] = uninitializedObject11;
			list18[0] = uninitializedObject48;
			typeof(ConceptRule).GetField("DslBodyMapping", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject48, list19);
			typeof(ConceptRule).GetField("_dslBody", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject48, null);
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject48, "Map");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject48, false);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject48, methodReference13);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject48, uninitializedObject33);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject48, "SplitColumn");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject48, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject48, array14);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject48, list20);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject48, dictionary17);
			list19[0] = conceptParameterUsage;
			list19[1] = conceptParameterUsage2;
			array14[0] = optional35;
			array14[1] = optional36;
			list20[0] = uninitializedObject38;
			list20[1] = uninitializedObject45;
			list21[0] = uninitializedObject49;
			typeof(ConversionRule).GetProperty("ExternSymbolUsage", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject49, uninitializedObject50);
			typeof(OperatorRule).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject49, "~convert_splitCell_regionSplit");
			typeof(OperatorRule).GetField("Lazy", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject49, false);
			typeof(OperatorRule).GetField("_semantics", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject49, methodReference14);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject49, uninitializedObject43);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject49, "Split");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject49, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject49, array15);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject49, list22);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject49, dictionary19);
			typeof(ExternalSymbolUsage).GetProperty("Substitutions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject50, dictionary18);
			array15[0] = optional37;
			list22[0] = symbol2;
			list23[0] = uninitializedObject51;
			typeof(TerminalRule).GetProperty("IsInput", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject51, true);
			typeof(TerminalRule).GetProperty("GeneratorReference", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject51, null);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject51, uninitializedObject9);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject51, "inputTable");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject51, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject51, array16);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject51, list24);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject51, dictionary20);
			list25[0] = uninitializedObject52;
			typeof(TerminalRule).GetProperty("IsInput", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject52, false);
			typeof(TerminalRule).GetProperty("GeneratorReference", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject52, null);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject52, uninitializedObject11);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject52, "sourceColumnName");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject52, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject52, array17);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject52, list26);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject52, dictionary21);
			list27[0] = uninitializedObject53;
			typeof(TerminalRule).GetProperty("IsInput", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject53, false);
			typeof(TerminalRule).GetProperty("GeneratorReference", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject53, null);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject53, uninitializedObject17);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject53, "richDataType");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject53, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject53, array18);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject53, list28);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject53, dictionary22);
			list29[0] = uninitializedObject54;
			typeof(TerminalRule).GetProperty("IsInput", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject54, false);
			typeof(TerminalRule).GetProperty("GeneratorReference", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject54, null);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject54, uninitializedObject26);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject54, "fillMethod");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject54, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject54, array19);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject54, list30);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject54, dictionary23);
			list31[0] = uninitializedObject55;
			typeof(TerminalRule).GetProperty("IsInput", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject55, false);
			typeof(TerminalRule).GetProperty("GeneratorReference", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject55, null);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject55, uninitializedObject29);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject55, "dropCondition");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject55, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject55, array20);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject55, list32);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject55, dictionary24);
			list33[0] = uninitializedObject56;
			typeof(TerminalRule).GetProperty("IsInput", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject56, false);
			typeof(TerminalRule).GetProperty("GeneratorReference", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject56, null);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject56, uninitializedObject22);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject56, "fillValue");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject56, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject56, array21);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject56, list34);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject56, dictionary25);
			list35[0] = uninitializedObject57;
			typeof(TerminalRule).GetProperty("IsInput", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject57, false);
			typeof(TerminalRule).GetProperty("GeneratorReference", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject57, null);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject57, uninitializedObject24);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject57, "missingValueMarkers");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject57, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject57, array22);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject57, list36);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject57, dictionary26);
			list37[0] = uninitializedObject58;
			typeof(TerminalRule).GetProperty("IsInput", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject58, false);
			typeof(TerminalRule).GetProperty("GeneratorReference", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject58, null);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject58, uninitializedObject19);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject58, "isMixedColumn");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject58, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject58, array23);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject58, list38);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject58, dictionary27);
			list39[0] = uninitializedObject59;
			typeof(TerminalRule).GetProperty("IsInput", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject59, false);
			typeof(TerminalRule).GetProperty("GeneratorReference", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject59, null);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject59, uninitializedObject15);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject59, "delimiter");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject59, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject59, array24);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject59, list40);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject59, dictionary28);
			list41[0] = uninitializedObject60;
			typeof(TerminalRule).GetProperty("IsInput", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject60, false);
			typeof(TerminalRule).GetProperty("GeneratorReference", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject60, null);
			typeof(GrammarRule).GetProperty("Head", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject60, uninitializedObject36);
			typeof(GrammarRule).GetProperty("Id", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject60, "ejsonProgram");
			typeof(GrammarRule).GetProperty("Deprecated", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject60, false);
			typeof(GrammarRule).GetProperty("RecursionLimit", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject60, array25);
			typeof(GrammarRule).GetField("_body", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject60, list42);
			typeof(GrammarRule).GetField("_stdWitnessFunctions", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject60, dictionary29);
			list44[0] = uninitializedObject4;
			list45[0] = uninitializedObject7;
			list45[1] = uninitializedObject10;
			list45[2] = uninitializedObject13;
			list45[3] = uninitializedObject14;
			list45[4] = uninitializedObject16;
			list45[5] = uninitializedObject21;
			list45[6] = uninitializedObject28;
			list45[7] = uninitializedObject31;
			list45[8] = uninitializedObject32;
			list45[9] = uninitializedObject35;
			list46[0] = uninitializedObject40;
			list47[0] = uninitializedObject48;
			list48[0] = uninitializedObject47;
			list49[0] = uninitializedObject49;
			list50[0] = uninitializedObject51;
			list51[0] = uninitializedObject52;
			list52[0] = uninitializedObject53;
			list53[0] = uninitializedObject54;
			list54[0] = uninitializedObject55;
			list55[0] = uninitializedObject56;
			list56[0] = uninitializedObject57;
			list57[0] = uninitializedObject58;
			list58[0] = uninitializedObject59;
			list59[0] = uninitializedObject60;
			list60[0] = uninitializedObject4;
			list60[1] = uninitializedObject10;
			list60[2] = uninitializedObject13;
			list60[3] = uninitializedObject14;
			list60[4] = uninitializedObject16;
			list60[5] = uninitializedObject21;
			list60[6] = uninitializedObject28;
			list60[7] = uninitializedObject31;
			list60[8] = uninitializedObject32;
			list60[9] = uninitializedObject35;
			list61[0] = uninitializedObject7;
			list61[1] = uninitializedObject47;
			list62[0] = uninitializedObject10;
			list62[1] = uninitializedObject13;
			list62[2] = uninitializedObject14;
			list62[3] = uninitializedObject16;
			list62[4] = uninitializedObject21;
			list62[5] = uninitializedObject28;
			list62[6] = uninitializedObject32;
			list62[7] = uninitializedObject35;
			list62[8] = uninitializedObject47;
			list63[0] = uninitializedObject14;
			list64[0] = uninitializedObject16;
			list65[0] = uninitializedObject16;
			list66[0] = uninitializedObject21;
			list67[0] = uninitializedObject21;
			list68[0] = uninitializedObject21;
			list69[0] = uninitializedObject28;
			list69[1] = uninitializedObject31;
			list70[0] = uninitializedObject32;
			list71[0] = uninitializedObject35;
			list72[0] = uninitializedObject40;
			list73[0] = uninitializedObject48;
			list74[0] = uninitializedObject48;
			list75[0] = uninitializedObject49;
			list76[0] = uninitializedObject4;
			list76[1] = uninitializedObject7;
			list76[2] = uninitializedObject10;
			list76[3] = uninitializedObject13;
			list76[4] = uninitializedObject14;
			list76[5] = uninitializedObject16;
			list76[6] = uninitializedObject21;
			list76[7] = uninitializedObject28;
			list76[8] = uninitializedObject31;
			list76[9] = uninitializedObject32;
			list76[10] = uninitializedObject35;
			list76[11] = uninitializedObject40;
			list76[12] = uninitializedObject48;
			list76[13] = uninitializedObject47;
			list76[14] = uninitializedObject49;
			list76[15] = uninitializedObject51;
			list76[16] = uninitializedObject52;
			list76[17] = uninitializedObject53;
			list76[18] = uninitializedObject54;
			list76[19] = uninitializedObject55;
			list76[20] = uninitializedObject56;
			list76[21] = uninitializedObject57;
			list76[22] = uninitializedObject58;
			list76[23] = uninitializedObject59;
			list76[24] = uninitializedObject60;
			list77[0] = uninitializedObject61;
			typeof(FeatureInfo).GetProperty("PropertyType", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject61, typeFromHandle15);
			typeof(FeatureInfo).GetProperty("Name", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject61, "Score");
			typeof(FeatureInfo).GetProperty("Holders", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject61, list78);
			typeof(FeatureInfo).GetProperty("IsComplete", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject61, false);
			list78[0] = typeFromHandle16;
			list79[0] = uninitializedObject62;
			typeof(ResolvedType).GetField("_typeField", BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).SetValue(uninitializedObject62, typeFromHandle17);
			dictionary33["TFormula"] = grammar;
			dictionary33["SplitText"] = grammar2;
			dictionary34["out"] = uninitializedObject2;
			dictionary34["table"] = uninitializedObject6;
			dictionary34["newColumns"] = uninitializedObject33;
			dictionary34["v"] = uninitializedObject41;
			dictionary34["columnToSplit"] = uninitializedObject45;
			dictionary34["splitCell"] = uninitializedObject43;
			dictionary34["inputTable"] = uninitializedObject9;
			dictionary34["sourceColumnName"] = uninitializedObject11;
			dictionary34["richDataType"] = uninitializedObject17;
			dictionary34["fillMethod"] = uninitializedObject26;
			dictionary34["dropCondition"] = uninitializedObject29;
			dictionary34["fillValue"] = uninitializedObject22;
			dictionary34["missingValueMarkers"] = uninitializedObject24;
			dictionary34["isMixedColumn"] = uninitializedObject19;
			dictionary34["delimiter"] = uninitializedObject15;
			dictionary34["ejsonProgram"] = uninitializedObject36;
			dictionary34["_LFun0"] = uninitializedObject38;
			dictionary32["TTableProgram"] = uninitializedObject4;
			dictionary32["~convert_table_inputTable"] = uninitializedObject7;
			dictionary32["LabelEncode"] = uninitializedObject10;
			dictionary32["OneHotEncode"] = uninitializedObject13;
			dictionary32["MultiLabelBinarizer"] = uninitializedObject14;
			dictionary32["CastColumn"] = uninitializedObject16;
			dictionary32["FillMissingValues"] = uninitializedObject21;
			dictionary32["DropColumn"] = uninitializedObject28;
			dictionary32["DropRows"] = uninitializedObject31;
			dictionary32["AddSplitColumns"] = uninitializedObject32;
			dictionary32["AddColumnsFromJson"] = uninitializedObject35;
			dictionary32["SplitColumn"] = uninitializedObject48;
			dictionary32["SelectColumnToSplit"] = uninitializedObject47;
			dictionary32["Split"] = uninitializedObject49;
			dictionary32["inputTable"] = uninitializedObject51;
			dictionary32["sourceColumnName"] = uninitializedObject52;
			dictionary32["richDataType"] = uninitializedObject53;
			dictionary32["fillMethod"] = uninitializedObject54;
			dictionary32["dropCondition"] = uninitializedObject55;
			dictionary32["fillValue"] = uninitializedObject56;
			dictionary32["missingValueMarkers"] = uninitializedObject57;
			dictionary32["isMixedColumn"] = uninitializedObject58;
			dictionary32["delimiter"] = uninitializedObject59;
			dictionary32["ejsonProgram"] = uninitializedObject60;
			dictionary18[symbol] = uninitializedObject41;
			dictionary31[uninitializedObject6] = list60;
			dictionary31[uninitializedObject9] = list61;
			dictionary31[uninitializedObject11] = list62;
			dictionary31[uninitializedObject15] = list63;
			dictionary31[uninitializedObject17] = list64;
			dictionary31[uninitializedObject19] = list65;
			dictionary31[uninitializedObject22] = list66;
			dictionary31[uninitializedObject24] = list67;
			dictionary31[uninitializedObject26] = list68;
			dictionary31[uninitializedObject29] = list69;
			dictionary31[uninitializedObject33] = list70;
			dictionary31[uninitializedObject36] = list71;
			dictionary31[uninitializedObject43] = list72;
			dictionary31[uninitializedObject38] = list73;
			dictionary31[uninitializedObject45] = list74;
			dictionary31[symbol2] = list75;
			dictionary30[uninitializedObject2] = list44;
			dictionary30[uninitializedObject6] = list45;
			dictionary30[uninitializedObject38] = list46;
			dictionary30[uninitializedObject33] = list47;
			dictionary30[uninitializedObject45] = list48;
			dictionary30[uninitializedObject43] = list49;
			dictionary30[uninitializedObject9] = list50;
			dictionary30[uninitializedObject11] = list51;
			dictionary30[uninitializedObject17] = list52;
			dictionary30[uninitializedObject26] = list53;
			dictionary30[uninitializedObject29] = list54;
			dictionary30[uninitializedObject22] = list55;
			dictionary30[uninitializedObject24] = list56;
			dictionary30[uninitializedObject19] = list57;
			dictionary30[uninitializedObject15] = list58;
			dictionary30[uninitializedObject36] = list59;
			dictionary[uninitializedObject2] = list;
			dictionary[uninitializedObject6] = list3;
			dictionary[uninitializedObject38] = list14;
			dictionary[uninitializedObject45] = list16;
			dictionary[uninitializedObject33] = list18;
			dictionary[uninitializedObject43] = list21;
			dictionary[uninitializedObject9] = list23;
			dictionary[uninitializedObject11] = list25;
			dictionary[uninitializedObject17] = list27;
			dictionary[uninitializedObject26] = list29;
			dictionary[uninitializedObject29] = list31;
			dictionary[uninitializedObject22] = list33;
			dictionary[uninitializedObject24] = list35;
			dictionary[uninitializedObject19] = list37;
			dictionary[uninitializedObject15] = list39;
			dictionary[uninitializedObject36] = list41;
			dictionary[uninitializedObject41] = list43;
			return uninitializedObject;
		}

		// Token: 0x040054C5 RID: 21701
		private static readonly Lazy<Grammar> _grammar = new Lazy<Grammar>(new Func<Grammar>(Microsoft.ProgramSynthesis.Transformation.Table.Language.Initialize), LazyThreadSafetyMode.ExecutionAndPublication);

		// Token: 0x040054C6 RID: 21702
		private static readonly Assembly MPSAssembly = typeof(GrammarRule).GetTypeInfo().Assembly;

		// Token: 0x040054C7 RID: 21703
		private const BindingFlags Flags = BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic;
	}
}
