using System;
using Microsoft.Data.Edm;
using Microsoft.Data.OData.Evaluation;
using Microsoft.Data.OData.Json;

namespace Microsoft.Data.OData.JsonLight
{
	// Token: 0x020001AC RID: 428
	internal sealed class ODataJsonLightWriter : ODataWriterCore
	{
		// Token: 0x06000C88 RID: 3208 RVA: 0x0002BEAC File Offset: 0x0002A0AC
		internal ODataJsonLightWriter(ODataJsonLightOutputContext jsonLightOutputContext, IEdmEntitySet entitySet, IEdmEntityType entityType, bool writingFeed)
			: base(jsonLightOutputContext, entitySet, entityType, writingFeed)
		{
			this.jsonLightOutputContext = jsonLightOutputContext;
			this.jsonLightEntryAndFeedSerializer = new ODataJsonLightEntryAndFeedSerializer(this.jsonLightOutputContext);
		}

		// Token: 0x170002DD RID: 733
		// (get) Token: 0x06000C89 RID: 3209 RVA: 0x0002BED4 File Offset: 0x0002A0D4
		private ODataJsonLightWriter.JsonLightEntryScope CurrentEntryScope
		{
			get
			{
				return base.CurrentScope as ODataJsonLightWriter.JsonLightEntryScope;
			}
		}

		// Token: 0x170002DE RID: 734
		// (get) Token: 0x06000C8A RID: 3210 RVA: 0x0002BEF0 File Offset: 0x0002A0F0
		private ODataJsonLightWriter.JsonLightFeedScope CurrentFeedScope
		{
			get
			{
				return base.CurrentScope as ODataJsonLightWriter.JsonLightFeedScope;
			}
		}

		// Token: 0x06000C8B RID: 3211 RVA: 0x0002BF0A File Offset: 0x0002A10A
		protected override void VerifyNotDisposed()
		{
			this.jsonLightOutputContext.VerifyNotDisposed();
		}

		// Token: 0x06000C8C RID: 3212 RVA: 0x0002BF17 File Offset: 0x0002A117
		protected override void FlushSynchronously()
		{
			this.jsonLightOutputContext.Flush();
		}

		// Token: 0x06000C8D RID: 3213 RVA: 0x0002BF24 File Offset: 0x0002A124
		protected override void StartPayload()
		{
			this.jsonLightEntryAndFeedSerializer.WritePayloadStart();
		}

		// Token: 0x06000C8E RID: 3214 RVA: 0x0002BF31 File Offset: 0x0002A131
		protected override void EndPayload()
		{
			this.jsonLightEntryAndFeedSerializer.WritePayloadEnd();
		}

		// Token: 0x06000C8F RID: 3215 RVA: 0x0002BF40 File Offset: 0x0002A140
		protected override void PrepareEntryForWriteStart(ODataEntry entry, ODataFeedAndEntryTypeContext typeContext, SelectedPropertiesNode selectedProperties)
		{
			if (this.jsonLightOutputContext.MessageWriterSettings.AutoComputePayloadMetadataInJson)
			{
				ODataWriterCore.EntryScope entryScope = (ODataWriterCore.EntryScope)base.CurrentScope;
				ODataEntityMetadataBuilder odataEntityMetadataBuilder = this.jsonLightOutputContext.MetadataLevel.CreateEntityMetadataBuilder(entry, typeContext, entryScope.SerializationInfo, entryScope.EntityType, selectedProperties, this.jsonLightOutputContext.WritingResponse, this.jsonLightOutputContext.MessageWriterSettings.AutoGeneratedUrlsShouldPutKeyValueInDedicatedSegment);
				this.jsonLightOutputContext.MetadataLevel.InjectMetadataBuilder(entry, odataEntityMetadataBuilder);
			}
		}

		// Token: 0x06000C90 RID: 3216 RVA: 0x0002BFB8 File Offset: 0x0002A1B8
		protected override void ValidateEntryMediaResource(ODataEntry entry, IEdmEntityType entityType)
		{
			if (this.jsonLightOutputContext.MessageWriterSettings.AutoComputePayloadMetadataInJson && this.jsonLightOutputContext.MetadataLevel is JsonNoMetadataLevel)
			{
				return;
			}
			base.ValidateEntryMediaResource(entry, entityType);
		}

		// Token: 0x06000C91 RID: 3217 RVA: 0x0002BFE8 File Offset: 0x0002A1E8
		protected override void StartEntry(ODataEntry entry)
		{
			ODataNavigationLink parentNavigationLink = base.ParentNavigationLink;
			if (parentNavigationLink != null)
			{
				this.jsonLightOutputContext.JsonWriter.WriteName(parentNavigationLink.Name);
			}
			if (entry == null)
			{
				this.jsonLightOutputContext.JsonWriter.WriteValue(null);
				return;
			}
			this.jsonLightOutputContext.JsonWriter.StartObjectScope();
			ODataJsonLightWriter.JsonLightEntryScope currentEntryScope = this.CurrentEntryScope;
			if (base.IsTopLevel)
			{
				this.jsonLightEntryAndFeedSerializer.TryWriteEntryMetadataUri(currentEntryScope.GetOrCreateTypeContext(this.jsonLightOutputContext.Model, this.jsonLightOutputContext.WritingResponse));
			}
			this.jsonLightEntryAndFeedSerializer.WriteAnnotationGroup(entry);
			this.jsonLightEntryAndFeedSerializer.WriteEntryStartMetadataProperties(currentEntryScope);
			this.jsonLightEntryAndFeedSerializer.WriteEntryMetadataProperties(currentEntryScope);
			this.jsonLightEntryAndFeedSerializer.InstanceAnnotationWriter.WriteInstanceAnnotations(entry.InstanceAnnotations, currentEntryScope.InstanceAnnotationWriteTracker);
		}

		// Token: 0x06000C92 RID: 3218 RVA: 0x0002C0B0 File Offset: 0x0002A2B0
		protected override void EndEntry(ODataEntry entry)
		{
			if (entry == null)
			{
				return;
			}
			ODataJsonLightWriter.JsonLightEntryScope currentEntryScope = this.CurrentEntryScope;
			ProjectedPropertiesAnnotation projectedPropertiesAnnotation = ODataWriterCore.GetProjectedPropertiesAnnotation(currentEntryScope);
			this.jsonLightEntryAndFeedSerializer.WriteEntryMetadataProperties(currentEntryScope);
			this.jsonLightEntryAndFeedSerializer.InstanceAnnotationWriter.WriteInstanceAnnotations(entry.InstanceAnnotations, currentEntryScope.InstanceAnnotationWriteTracker);
			this.jsonLightEntryAndFeedSerializer.WriteEntryEndMetadataProperties(currentEntryScope, currentEntryScope.DuplicatePropertyNamesChecker);
			this.jsonLightEntryAndFeedSerializer.WriteProperties(base.EntryEntityType, entry.Properties, false, base.DuplicatePropertyNamesChecker, projectedPropertiesAnnotation);
			this.jsonLightOutputContext.JsonWriter.EndObjectScope();
		}

		// Token: 0x06000C93 RID: 3219 RVA: 0x0002C138 File Offset: 0x0002A338
		protected override void StartFeed(ODataFeed feed)
		{
			IJsonWriter jsonWriter = this.jsonLightOutputContext.JsonWriter;
			if (base.ParentNavigationLink == null)
			{
				jsonWriter.StartObjectScope();
				this.jsonLightEntryAndFeedSerializer.TryWriteFeedMetadataUri(this.CurrentFeedScope.GetOrCreateTypeContext(this.jsonLightOutputContext.Model, this.jsonLightOutputContext.WritingResponse));
				if (this.jsonLightOutputContext.WritingResponse)
				{
					this.WriteFeedCount(feed, null);
					this.WriteFeedNextLink(feed, null);
					this.WriteFeedDeltaLink(feed);
				}
				this.jsonLightEntryAndFeedSerializer.InstanceAnnotationWriter.WriteInstanceAnnotations(feed.InstanceAnnotations, this.CurrentFeedScope.InstanceAnnotationWriteTracker);
				jsonWriter.WriteValuePropertyName();
				jsonWriter.StartArrayScope();
				return;
			}
			string name = base.ParentNavigationLink.Name;
			base.ValidateNoDeltaLinkForExpandedFeed(feed);
			this.ValidateNoCustomInstanceAnnotationsForExpandedFeed(feed);
			if (this.jsonLightOutputContext.WritingResponse)
			{
				this.WriteFeedCount(feed, name);
				this.WriteFeedNextLink(feed, name);
				jsonWriter.WriteName(name);
				jsonWriter.StartArrayScope();
				return;
			}
			ODataJsonLightWriter.JsonLightNavigationLinkScope jsonLightNavigationLinkScope = (ODataJsonLightWriter.JsonLightNavigationLinkScope)base.ParentNavigationLinkScope;
			if (!jsonLightNavigationLinkScope.FeedWritten)
			{
				if (jsonLightNavigationLinkScope.EntityReferenceLinkWritten)
				{
					jsonWriter.EndArrayScope();
				}
				jsonWriter.WriteName(name);
				jsonWriter.StartArrayScope();
				jsonLightNavigationLinkScope.FeedWritten = true;
			}
		}

		// Token: 0x06000C94 RID: 3220 RVA: 0x0002C25C File Offset: 0x0002A45C
		protected override void EndFeed(ODataFeed feed)
		{
			bool flag = base.ParentNavigationLink == null;
			if (flag)
			{
				this.jsonLightOutputContext.JsonWriter.EndArrayScope();
				this.jsonLightEntryAndFeedSerializer.InstanceAnnotationWriter.WriteInstanceAnnotations(feed.InstanceAnnotations, this.CurrentFeedScope.InstanceAnnotationWriteTracker);
				if (this.jsonLightOutputContext.WritingResponse)
				{
					this.WriteFeedCount(feed, null);
					this.WriteFeedNextLink(feed, null);
					this.WriteFeedDeltaLink(feed);
				}
				this.jsonLightOutputContext.JsonWriter.EndObjectScope();
				return;
			}
			string name = base.ParentNavigationLink.Name;
			base.ValidateNoDeltaLinkForExpandedFeed(feed);
			this.ValidateNoCustomInstanceAnnotationsForExpandedFeed(feed);
			if (this.jsonLightOutputContext.WritingResponse)
			{
				this.jsonLightOutputContext.JsonWriter.EndArrayScope();
				this.WriteFeedCount(feed, name);
				this.WriteFeedNextLink(feed, name);
			}
		}

		// Token: 0x06000C95 RID: 3221 RVA: 0x0002C323 File Offset: 0x0002A523
		protected override void WriteDeferredNavigationLink(ODataNavigationLink navigationLink)
		{
			this.jsonLightEntryAndFeedSerializer.WriteNavigationLinkMetadata(navigationLink, base.DuplicatePropertyNamesChecker);
		}

		// Token: 0x06000C96 RID: 3222 RVA: 0x0002C337 File Offset: 0x0002A537
		protected override void StartNavigationLinkWithContent(ODataNavigationLink navigationLink)
		{
			if (this.jsonLightOutputContext.WritingResponse)
			{
				this.jsonLightEntryAndFeedSerializer.WriteNavigationLinkMetadata(navigationLink, base.DuplicatePropertyNamesChecker);
				return;
			}
			WriterValidationUtils.ValidateNavigationLinkHasCardinality(navigationLink);
		}

		// Token: 0x06000C97 RID: 3223 RVA: 0x0002C360 File Offset: 0x0002A560
		protected override void EndNavigationLinkWithContent(ODataNavigationLink navigationLink)
		{
			if (!this.jsonLightOutputContext.WritingResponse)
			{
				ODataJsonLightWriter.JsonLightNavigationLinkScope jsonLightNavigationLinkScope = (ODataJsonLightWriter.JsonLightNavigationLinkScope)base.CurrentScope;
				if (jsonLightNavigationLinkScope.EntityReferenceLinkWritten && !jsonLightNavigationLinkScope.FeedWritten && navigationLink.IsCollection.Value)
				{
					this.jsonLightOutputContext.JsonWriter.EndArrayScope();
				}
				if (jsonLightNavigationLinkScope.FeedWritten)
				{
					this.jsonLightOutputContext.JsonWriter.EndArrayScope();
				}
			}
		}

		// Token: 0x06000C98 RID: 3224 RVA: 0x0002C3D0 File Offset: 0x0002A5D0
		protected override void WriteEntityReferenceInNavigationLinkContent(ODataNavigationLink parentNavigationLink, ODataEntityReferenceLink entityReferenceLink)
		{
			ODataJsonLightWriter.JsonLightNavigationLinkScope jsonLightNavigationLinkScope = (ODataJsonLightWriter.JsonLightNavigationLinkScope)base.CurrentScope;
			if (jsonLightNavigationLinkScope.FeedWritten)
			{
				throw new ODataException(Strings.ODataJsonLightWriter_EntityReferenceLinkAfterFeedInRequest);
			}
			if (!jsonLightNavigationLinkScope.EntityReferenceLinkWritten)
			{
				this.jsonLightOutputContext.JsonWriter.WritePropertyAnnotationName(parentNavigationLink.Name, "odata.bind");
				if (parentNavigationLink.IsCollection.Value)
				{
					this.jsonLightOutputContext.JsonWriter.StartArrayScope();
				}
				jsonLightNavigationLinkScope.EntityReferenceLinkWritten = true;
			}
			this.jsonLightOutputContext.JsonWriter.WriteValue(this.jsonLightEntryAndFeedSerializer.UriToString(entityReferenceLink.Url));
		}

		// Token: 0x06000C99 RID: 3225 RVA: 0x0002C467 File Offset: 0x0002A667
		protected override ODataWriterCore.FeedScope CreateFeedScope(ODataFeed feed, IEdmEntitySet entitySet, IEdmEntityType entityType, bool skipWriting, SelectedPropertiesNode selectedProperties)
		{
			return new ODataJsonLightWriter.JsonLightFeedScope(feed, entitySet, entityType, skipWriting, selectedProperties);
		}

		// Token: 0x06000C9A RID: 3226 RVA: 0x0002C475 File Offset: 0x0002A675
		protected override ODataWriterCore.EntryScope CreateEntryScope(ODataEntry entry, IEdmEntitySet entitySet, IEdmEntityType entityType, bool skipWriting, SelectedPropertiesNode selectedProperties)
		{
			return new ODataJsonLightWriter.JsonLightEntryScope(entry, base.GetEntrySerializationInfo(entry), entitySet, entityType, skipWriting, this.jsonLightOutputContext.WritingResponse, this.jsonLightOutputContext.MessageWriterSettings.WriterBehavior, selectedProperties);
		}

		// Token: 0x06000C9B RID: 3227 RVA: 0x0002C4A5 File Offset: 0x0002A6A5
		protected override ODataWriterCore.NavigationLinkScope CreateNavigationLinkScope(ODataWriterCore.WriterState writerState, ODataNavigationLink navLink, IEdmEntitySet entitySet, IEdmEntityType entityType, bool skipWriting, SelectedPropertiesNode selectedProperties)
		{
			return new ODataJsonLightWriter.JsonLightNavigationLinkScope(writerState, navLink, entitySet, entityType, skipWriting, selectedProperties);
		}

		// Token: 0x06000C9C RID: 3228 RVA: 0x0002C4B8 File Offset: 0x0002A6B8
		private void WriteFeedCount(ODataFeed feed, string propertyName)
		{
			long? count = feed.Count;
			if (count != null && !this.CurrentFeedScope.CountWritten)
			{
				if (propertyName == null)
				{
					this.jsonLightOutputContext.JsonWriter.WriteName("odata.count");
				}
				else
				{
					this.jsonLightOutputContext.JsonWriter.WritePropertyAnnotationName(propertyName, "odata.count");
				}
				this.jsonLightOutputContext.JsonWriter.WriteValue(count.Value);
				this.CurrentFeedScope.CountWritten = true;
			}
		}

		// Token: 0x06000C9D RID: 3229 RVA: 0x0002C538 File Offset: 0x0002A738
		private void WriteFeedNextLink(ODataFeed feed, string propertyName)
		{
			Uri nextPageLink = feed.NextPageLink;
			if (nextPageLink != null && !this.CurrentFeedScope.NextPageLinkWritten)
			{
				if (propertyName == null)
				{
					this.jsonLightOutputContext.JsonWriter.WriteName("odata.nextLink");
				}
				else
				{
					this.jsonLightOutputContext.JsonWriter.WritePropertyAnnotationName(propertyName, "odata.nextLink");
				}
				this.jsonLightOutputContext.JsonWriter.WriteValue(this.jsonLightEntryAndFeedSerializer.UriToString(nextPageLink));
				this.CurrentFeedScope.NextPageLinkWritten = true;
			}
		}

		// Token: 0x06000C9E RID: 3230 RVA: 0x0002C5BC File Offset: 0x0002A7BC
		private void WriteFeedDeltaLink(ODataFeed feed)
		{
			Uri deltaLink = feed.DeltaLink;
			if (deltaLink != null && !this.CurrentFeedScope.DeltaLinkWritten)
			{
				this.jsonLightOutputContext.JsonWriter.WriteName("odata.deltaLink");
				this.jsonLightOutputContext.JsonWriter.WriteValue(this.jsonLightEntryAndFeedSerializer.UriToString(deltaLink));
				this.CurrentFeedScope.DeltaLinkWritten = true;
			}
		}

		// Token: 0x06000C9F RID: 3231 RVA: 0x0002C623 File Offset: 0x0002A823
		private void ValidateNoCustomInstanceAnnotationsForExpandedFeed(ODataFeed feed)
		{
			if (feed.InstanceAnnotations.Count > 0)
			{
				throw new ODataException(Strings.ODataJsonLightWriter_InstanceAnnotationNotSupportedOnExpandedFeed);
			}
		}

		// Token: 0x0400046E RID: 1134
		private readonly ODataJsonLightOutputContext jsonLightOutputContext;

		// Token: 0x0400046F RID: 1135
		private readonly ODataJsonLightEntryAndFeedSerializer jsonLightEntryAndFeedSerializer;

		// Token: 0x020001AD RID: 429
		private sealed class JsonLightFeedScope : ODataWriterCore.FeedScope
		{
			// Token: 0x06000CA0 RID: 3232 RVA: 0x0002C63E File Offset: 0x0002A83E
			internal JsonLightFeedScope(ODataFeed feed, IEdmEntitySet entitySet, IEdmEntityType entityType, bool skipWriting, SelectedPropertiesNode selectedProperties)
				: base(feed, entitySet, entityType, skipWriting, selectedProperties)
			{
			}

			// Token: 0x170002DF RID: 735
			// (get) Token: 0x06000CA1 RID: 3233 RVA: 0x0002C64D File Offset: 0x0002A84D
			// (set) Token: 0x06000CA2 RID: 3234 RVA: 0x0002C655 File Offset: 0x0002A855
			internal bool CountWritten
			{
				get
				{
					return this.countWritten;
				}
				set
				{
					this.countWritten = value;
				}
			}

			// Token: 0x170002E0 RID: 736
			// (get) Token: 0x06000CA3 RID: 3235 RVA: 0x0002C65E File Offset: 0x0002A85E
			// (set) Token: 0x06000CA4 RID: 3236 RVA: 0x0002C666 File Offset: 0x0002A866
			internal bool NextPageLinkWritten
			{
				get
				{
					return this.nextLinkWritten;
				}
				set
				{
					this.nextLinkWritten = value;
				}
			}

			// Token: 0x170002E1 RID: 737
			// (get) Token: 0x06000CA5 RID: 3237 RVA: 0x0002C66F File Offset: 0x0002A86F
			// (set) Token: 0x06000CA6 RID: 3238 RVA: 0x0002C677 File Offset: 0x0002A877
			internal bool DeltaLinkWritten
			{
				get
				{
					return this.deltaLinkWritten;
				}
				set
				{
					this.deltaLinkWritten = value;
				}
			}

			// Token: 0x04000470 RID: 1136
			private bool countWritten;

			// Token: 0x04000471 RID: 1137
			private bool nextLinkWritten;

			// Token: 0x04000472 RID: 1138
			private bool deltaLinkWritten;
		}

		// Token: 0x020001AE RID: 430
		private sealed class JsonLightEntryScope : ODataWriterCore.EntryScope, IODataJsonLightWriterEntryState
		{
			// Token: 0x06000CA7 RID: 3239 RVA: 0x0002C680 File Offset: 0x0002A880
			internal JsonLightEntryScope(ODataEntry entry, ODataFeedAndEntrySerializationInfo serializationInfo, IEdmEntitySet entitySet, IEdmEntityType entityType, bool skipWriting, bool writingResponse, ODataWriterBehavior writerBehavior, SelectedPropertiesNode selectedProperties)
				: base(entry, serializationInfo, entitySet, entityType, skipWriting, writingResponse, writerBehavior, selectedProperties)
			{
			}

			// Token: 0x170002E2 RID: 738
			// (get) Token: 0x06000CA8 RID: 3240 RVA: 0x0002C6A0 File Offset: 0x0002A8A0
			public ODataEntry Entry
			{
				get
				{
					return (ODataEntry)base.Item;
				}
			}

			// Token: 0x170002E3 RID: 739
			// (get) Token: 0x06000CA9 RID: 3241 RVA: 0x0002C6AD File Offset: 0x0002A8AD
			// (set) Token: 0x06000CAA RID: 3242 RVA: 0x0002C6B6 File Offset: 0x0002A8B6
			public bool EditLinkWritten
			{
				get
				{
					return this.IsMetadataPropertyWritten(ODataJsonLightWriter.JsonLightEntryScope.JsonLightEntryMetadataProperty.EditLink);
				}
				set
				{
					this.SetWrittenMetadataProperty(ODataJsonLightWriter.JsonLightEntryScope.JsonLightEntryMetadataProperty.EditLink);
				}
			}

			// Token: 0x170002E4 RID: 740
			// (get) Token: 0x06000CAB RID: 3243 RVA: 0x0002C6BF File Offset: 0x0002A8BF
			// (set) Token: 0x06000CAC RID: 3244 RVA: 0x0002C6C8 File Offset: 0x0002A8C8
			public bool ReadLinkWritten
			{
				get
				{
					return this.IsMetadataPropertyWritten(ODataJsonLightWriter.JsonLightEntryScope.JsonLightEntryMetadataProperty.ReadLink);
				}
				set
				{
					this.SetWrittenMetadataProperty(ODataJsonLightWriter.JsonLightEntryScope.JsonLightEntryMetadataProperty.ReadLink);
				}
			}

			// Token: 0x170002E5 RID: 741
			// (get) Token: 0x06000CAD RID: 3245 RVA: 0x0002C6D1 File Offset: 0x0002A8D1
			// (set) Token: 0x06000CAE RID: 3246 RVA: 0x0002C6DA File Offset: 0x0002A8DA
			public bool MediaEditLinkWritten
			{
				get
				{
					return this.IsMetadataPropertyWritten(ODataJsonLightWriter.JsonLightEntryScope.JsonLightEntryMetadataProperty.MediaEditLink);
				}
				set
				{
					this.SetWrittenMetadataProperty(ODataJsonLightWriter.JsonLightEntryScope.JsonLightEntryMetadataProperty.MediaEditLink);
				}
			}

			// Token: 0x170002E6 RID: 742
			// (get) Token: 0x06000CAF RID: 3247 RVA: 0x0002C6E3 File Offset: 0x0002A8E3
			// (set) Token: 0x06000CB0 RID: 3248 RVA: 0x0002C6EC File Offset: 0x0002A8EC
			public bool MediaReadLinkWritten
			{
				get
				{
					return this.IsMetadataPropertyWritten(ODataJsonLightWriter.JsonLightEntryScope.JsonLightEntryMetadataProperty.MediaReadLink);
				}
				set
				{
					this.SetWrittenMetadataProperty(ODataJsonLightWriter.JsonLightEntryScope.JsonLightEntryMetadataProperty.MediaReadLink);
				}
			}

			// Token: 0x170002E7 RID: 743
			// (get) Token: 0x06000CB1 RID: 3249 RVA: 0x0002C6F5 File Offset: 0x0002A8F5
			// (set) Token: 0x06000CB2 RID: 3250 RVA: 0x0002C6FF File Offset: 0x0002A8FF
			public bool MediaContentTypeWritten
			{
				get
				{
					return this.IsMetadataPropertyWritten(ODataJsonLightWriter.JsonLightEntryScope.JsonLightEntryMetadataProperty.MediaContentType);
				}
				set
				{
					this.SetWrittenMetadataProperty(ODataJsonLightWriter.JsonLightEntryScope.JsonLightEntryMetadataProperty.MediaContentType);
				}
			}

			// Token: 0x170002E8 RID: 744
			// (get) Token: 0x06000CB3 RID: 3251 RVA: 0x0002C709 File Offset: 0x0002A909
			// (set) Token: 0x06000CB4 RID: 3252 RVA: 0x0002C713 File Offset: 0x0002A913
			public bool MediaETagWritten
			{
				get
				{
					return this.IsMetadataPropertyWritten(ODataJsonLightWriter.JsonLightEntryScope.JsonLightEntryMetadataProperty.MediaETag);
				}
				set
				{
					this.SetWrittenMetadataProperty(ODataJsonLightWriter.JsonLightEntryScope.JsonLightEntryMetadataProperty.MediaETag);
				}
			}

			// Token: 0x06000CB5 RID: 3253 RVA: 0x0002C71D File Offset: 0x0002A91D
			private void SetWrittenMetadataProperty(ODataJsonLightWriter.JsonLightEntryScope.JsonLightEntryMetadataProperty jsonLightMetadataProperty)
			{
				this.alreadyWrittenMetadataProperties |= (int)jsonLightMetadataProperty;
			}

			// Token: 0x06000CB6 RID: 3254 RVA: 0x0002C72D File Offset: 0x0002A92D
			private bool IsMetadataPropertyWritten(ODataJsonLightWriter.JsonLightEntryScope.JsonLightEntryMetadataProperty jsonLightMetadataProperty)
			{
				return (this.alreadyWrittenMetadataProperties & (int)jsonLightMetadataProperty) == (int)jsonLightMetadataProperty;
			}

			// Token: 0x04000473 RID: 1139
			private int alreadyWrittenMetadataProperties;

			// Token: 0x020001AF RID: 431
			[Flags]
			private enum JsonLightEntryMetadataProperty
			{
				// Token: 0x04000475 RID: 1141
				EditLink = 1,
				// Token: 0x04000476 RID: 1142
				ReadLink = 2,
				// Token: 0x04000477 RID: 1143
				MediaEditLink = 4,
				// Token: 0x04000478 RID: 1144
				MediaReadLink = 8,
				// Token: 0x04000479 RID: 1145
				MediaContentType = 16,
				// Token: 0x0400047A RID: 1146
				MediaETag = 32
			}
		}

		// Token: 0x020001B0 RID: 432
		private sealed class JsonLightNavigationLinkScope : ODataWriterCore.NavigationLinkScope
		{
			// Token: 0x06000CB7 RID: 3255 RVA: 0x0002C73A File Offset: 0x0002A93A
			internal JsonLightNavigationLinkScope(ODataWriterCore.WriterState writerState, ODataNavigationLink navLink, IEdmEntitySet entitySet, IEdmEntityType entityType, bool skipWriting, SelectedPropertiesNode selectedProperties)
				: base(writerState, navLink, entitySet, entityType, skipWriting, selectedProperties)
			{
			}

			// Token: 0x170002E9 RID: 745
			// (get) Token: 0x06000CB8 RID: 3256 RVA: 0x0002C74B File Offset: 0x0002A94B
			// (set) Token: 0x06000CB9 RID: 3257 RVA: 0x0002C753 File Offset: 0x0002A953
			internal bool EntityReferenceLinkWritten
			{
				get
				{
					return this.entityReferenceLinkWritten;
				}
				set
				{
					this.entityReferenceLinkWritten = value;
				}
			}

			// Token: 0x170002EA RID: 746
			// (get) Token: 0x06000CBA RID: 3258 RVA: 0x0002C75C File Offset: 0x0002A95C
			// (set) Token: 0x06000CBB RID: 3259 RVA: 0x0002C764 File Offset: 0x0002A964
			internal bool FeedWritten
			{
				get
				{
					return this.feedWritten;
				}
				set
				{
					this.feedWritten = value;
				}
			}

			// Token: 0x06000CBC RID: 3260 RVA: 0x0002C770 File Offset: 0x0002A970
			internal override ODataWriterCore.NavigationLinkScope Clone(ODataWriterCore.WriterState newWriterState)
			{
				return new ODataJsonLightWriter.JsonLightNavigationLinkScope(newWriterState, (ODataNavigationLink)base.Item, base.EntitySet, base.EntityType, base.SkipWriting, base.SelectedProperties)
				{
					EntityReferenceLinkWritten = this.entityReferenceLinkWritten,
					FeedWritten = this.feedWritten
				};
			}

			// Token: 0x0400047B RID: 1147
			private bool entityReferenceLinkWritten;

			// Token: 0x0400047C RID: 1148
			private bool feedWritten;
		}
	}
}
