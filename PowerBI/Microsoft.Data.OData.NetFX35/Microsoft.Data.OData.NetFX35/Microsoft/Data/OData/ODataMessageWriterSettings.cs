using System;
using System.Xml;

namespace Microsoft.Data.OData
{
	// Token: 0x02000294 RID: 660
	public sealed class ODataMessageWriterSettings : ODataMessageWriterSettingsBase
	{
		// Token: 0x060014FB RID: 5371 RVA: 0x0004CC5F File Offset: 0x0004AE5F
		public ODataMessageWriterSettings()
		{
			this.writerBehavior = ODataWriterBehavior.DefaultBehavior;
		}

		// Token: 0x060014FC RID: 5372 RVA: 0x0004CC74 File Offset: 0x0004AE74
		public ODataMessageWriterSettings(ODataMessageWriterSettings other)
			: base(other)
		{
			ExceptionUtils.CheckArgumentNotNull<ODataMessageWriterSettings>(other, "other");
			this.acceptCharSets = other.acceptCharSets;
			this.acceptMediaTypes = other.acceptMediaTypes;
			this.BaseUri = other.BaseUri;
			this.DisableMessageStreamDisposal = other.DisableMessageStreamDisposal;
			this.format = other.format;
			this.useFormat = other.useFormat;
			this.Version = other.Version;
			this.metadataDocumentUri = other.metadataDocumentUri;
			this.atomFormatStartEntryXmlCustomizationCallback = other.atomFormatStartEntryXmlCustomizationCallback;
			this.atomFormatEndEntryXmlCustomizationCallback = other.atomFormatEndEntryXmlCustomizationCallback;
			this.JsonPCallback = other.JsonPCallback;
			this.shouldIncludeAnnotation = other.shouldIncludeAnnotation;
			this.AutoComputePayloadMetadataInJson = other.AutoComputePayloadMetadataInJson;
			this.AutoGeneratedUrlsShouldPutKeyValueInDedicatedSegment = other.AutoGeneratedUrlsShouldPutKeyValueInDedicatedSegment;
			this.alwaysUseDefaultXmlNamespaceForRootElement = other.alwaysUseDefaultXmlNamespaceForRootElement;
			this.UndeclaredPropertyBehaviorKinds = other.UndeclaredPropertyBehaviorKinds;
			this.writerBehavior = other.writerBehavior;
		}

		// Token: 0x17000474 RID: 1140
		// (get) Token: 0x060014FD RID: 5373 RVA: 0x0004CD5F File Offset: 0x0004AF5F
		// (set) Token: 0x060014FE RID: 5374 RVA: 0x0004CD67 File Offset: 0x0004AF67
		public ODataVersion? Version { get; set; }

		// Token: 0x17000475 RID: 1141
		// (get) Token: 0x060014FF RID: 5375 RVA: 0x0004CD70 File Offset: 0x0004AF70
		// (set) Token: 0x06001500 RID: 5376 RVA: 0x0004CD78 File Offset: 0x0004AF78
		public Uri BaseUri { get; set; }

		// Token: 0x17000476 RID: 1142
		// (get) Token: 0x06001501 RID: 5377 RVA: 0x0004CD81 File Offset: 0x0004AF81
		// (set) Token: 0x06001502 RID: 5378 RVA: 0x0004CD89 File Offset: 0x0004AF89
		public ODataUndeclaredPropertyBehaviorKinds UndeclaredPropertyBehaviorKinds { get; set; }

		// Token: 0x17000477 RID: 1143
		// (get) Token: 0x06001503 RID: 5379 RVA: 0x0004CD92 File Offset: 0x0004AF92
		// (set) Token: 0x06001504 RID: 5380 RVA: 0x0004CD9A File Offset: 0x0004AF9A
		public bool DisableMessageStreamDisposal { get; set; }

		// Token: 0x17000478 RID: 1144
		// (get) Token: 0x06001505 RID: 5381 RVA: 0x0004CDA3 File Offset: 0x0004AFA3
		// (set) Token: 0x06001506 RID: 5382 RVA: 0x0004CDAB File Offset: 0x0004AFAB
		public string JsonPCallback { get; set; }

		// Token: 0x17000479 RID: 1145
		// (get) Token: 0x06001507 RID: 5383 RVA: 0x0004CDB4 File Offset: 0x0004AFB4
		// (set) Token: 0x06001508 RID: 5384 RVA: 0x0004CDBC File Offset: 0x0004AFBC
		public bool AutoComputePayloadMetadataInJson { get; set; }

		// Token: 0x1700047A RID: 1146
		// (get) Token: 0x06001509 RID: 5385 RVA: 0x0004CDC5 File Offset: 0x0004AFC5
		// (set) Token: 0x0600150A RID: 5386 RVA: 0x0004CDCD File Offset: 0x0004AFCD
		public bool? AutoGeneratedUrlsShouldPutKeyValueInDedicatedSegment { get; set; }

		// Token: 0x1700047B RID: 1147
		// (get) Token: 0x0600150B RID: 5387 RVA: 0x0004CDD6 File Offset: 0x0004AFD6
		internal bool AlwaysUseDefaultXmlNamespaceForRootElement
		{
			get
			{
				return this.alwaysUseDefaultXmlNamespaceForRootElement;
			}
		}

		// Token: 0x1700047C RID: 1148
		// (get) Token: 0x0600150C RID: 5388 RVA: 0x0004CDDE File Offset: 0x0004AFDE
		internal string AcceptableMediaTypes
		{
			get
			{
				return this.acceptMediaTypes;
			}
		}

		// Token: 0x1700047D RID: 1149
		// (get) Token: 0x0600150D RID: 5389 RVA: 0x0004CDE6 File Offset: 0x0004AFE6
		internal string AcceptableCharsets
		{
			get
			{
				return this.acceptCharSets;
			}
		}

		// Token: 0x1700047E RID: 1150
		// (get) Token: 0x0600150E RID: 5390 RVA: 0x0004CDEE File Offset: 0x0004AFEE
		internal ODataWriterBehavior WriterBehavior
		{
			get
			{
				return this.writerBehavior;
			}
		}

		// Token: 0x1700047F RID: 1151
		// (get) Token: 0x0600150F RID: 5391 RVA: 0x0004CDF6 File Offset: 0x0004AFF6
		internal ODataFormat Format
		{
			get
			{
				return this.format;
			}
		}

		// Token: 0x17000480 RID: 1152
		// (get) Token: 0x06001510 RID: 5392 RVA: 0x0004CDFE File Offset: 0x0004AFFE
		internal bool? UseFormat
		{
			get
			{
				return this.useFormat;
			}
		}

		// Token: 0x17000481 RID: 1153
		// (get) Token: 0x06001511 RID: 5393 RVA: 0x0004CE06 File Offset: 0x0004B006
		internal Func<ODataEntry, XmlWriter, XmlWriter> AtomStartEntryXmlCustomizationCallback
		{
			get
			{
				return this.atomFormatStartEntryXmlCustomizationCallback;
			}
		}

		// Token: 0x17000482 RID: 1154
		// (get) Token: 0x06001512 RID: 5394 RVA: 0x0004CE0E File Offset: 0x0004B00E
		internal Action<ODataEntry, XmlWriter, XmlWriter> AtomEndEntryXmlCustomizationCallback
		{
			get
			{
				return this.atomFormatEndEntryXmlCustomizationCallback;
			}
		}

		// Token: 0x17000483 RID: 1155
		// (get) Token: 0x06001513 RID: 5395 RVA: 0x0004CE16 File Offset: 0x0004B016
		internal ODataMetadataDocumentUri MetadataDocumentUri
		{
			get
			{
				return this.metadataDocumentUri;
			}
		}

		// Token: 0x17000484 RID: 1156
		// (get) Token: 0x06001514 RID: 5396 RVA: 0x0004CE1E File Offset: 0x0004B01E
		// (set) Token: 0x06001515 RID: 5397 RVA: 0x0004CE26 File Offset: 0x0004B026
		internal Func<string, bool> ShouldIncludeAnnotation
		{
			get
			{
				return this.shouldIncludeAnnotation;
			}
			set
			{
				this.shouldIncludeAnnotation = value;
			}
		}

		// Token: 0x06001516 RID: 5398 RVA: 0x0004CE2F File Offset: 0x0004B02F
		public void SetContentType(string acceptableMediaTypes, string acceptableCharSets)
		{
			this.acceptMediaTypes = acceptableMediaTypes;
			this.acceptCharSets = acceptableCharSets;
			this.format = null;
			this.useFormat = new bool?(false);
		}

		// Token: 0x06001517 RID: 5399 RVA: 0x0004CE52 File Offset: 0x0004B052
		public void SetContentType(ODataFormat payloadFormat)
		{
			this.acceptCharSets = null;
			this.acceptMediaTypes = null;
			this.format = payloadFormat;
			this.useFormat = new bool?(true);
		}

		// Token: 0x06001518 RID: 5400 RVA: 0x0004CE75 File Offset: 0x0004B075
		public void SetAtomEntryXmlCustomization(Func<ODataEntry, XmlWriter, XmlWriter> atomStartEntryXmlCustomizationCallback, Action<ODataEntry, XmlWriter, XmlWriter> atomEndEntryXmlCustomizationCallback)
		{
			if ((atomStartEntryXmlCustomizationCallback == null && atomEndEntryXmlCustomizationCallback != null) || (atomStartEntryXmlCustomizationCallback != null && atomEndEntryXmlCustomizationCallback == null))
			{
				throw new ODataException(Strings.ODataMessageWriterSettings_MessageWriterSettingsXmlCustomizationCallbacksMustBeSpecifiedBoth);
			}
			this.atomFormatStartEntryXmlCustomizationCallback = atomStartEntryXmlCustomizationCallback;
			this.atomFormatEndEntryXmlCustomizationCallback = atomEndEntryXmlCustomizationCallback;
		}

		// Token: 0x06001519 RID: 5401 RVA: 0x0004CE9C File Offset: 0x0004B09C
		public void EnableDefaultBehavior()
		{
			this.SetAtomEntryXmlCustomization(null, null);
			this.writerBehavior = ODataWriterBehavior.DefaultBehavior;
		}

		// Token: 0x0600151A RID: 5402 RVA: 0x0004CEB1 File Offset: 0x0004B0B1
		public void EnableWcfDataServicesServerBehavior(bool usesV1Provider)
		{
			this.SetAtomEntryXmlCustomization(null, null);
			this.writerBehavior = ODataWriterBehavior.CreateWcfDataServicesServerBehavior(usesV1Provider);
		}

		// Token: 0x0600151B RID: 5403 RVA: 0x0004CEC7 File Offset: 0x0004B0C7
		public void EnableWcfDataServicesServerBehavior(bool usesV1Provider, bool alwaysUseDefaultXmlNamespaceForRootElement)
		{
			this.EnableWcfDataServicesServerBehavior(usesV1Provider);
			this.alwaysUseDefaultXmlNamespaceForRootElement = alwaysUseDefaultXmlNamespaceForRootElement;
		}

		// Token: 0x0600151C RID: 5404 RVA: 0x0004CED7 File Offset: 0x0004B0D7
		public void EnableWcfDataServicesClientBehavior(Func<ODataEntry, XmlWriter, XmlWriter> startEntryXmlCustomizationCallback, Action<ODataEntry, XmlWriter, XmlWriter> endEntryXmlCustomizationCallback, string odataNamespace, string typeScheme)
		{
			ExceptionUtils.CheckArgumentNotNull<string>(odataNamespace, "odataNamespace");
			ExceptionUtils.CheckArgumentNotNull<string>(typeScheme, "typeScheme");
			this.SetAtomEntryXmlCustomization(startEntryXmlCustomizationCallback, endEntryXmlCustomizationCallback);
			this.writerBehavior = ODataWriterBehavior.CreateWcfDataServicesClientBehavior(odataNamespace, typeScheme);
		}

		// Token: 0x0600151D RID: 5405 RVA: 0x0004CF06 File Offset: 0x0004B106
		public void SetMetadataDocumentUri(Uri value)
		{
			this.metadataDocumentUri = ((value == null) ? null : new ODataMetadataDocumentUri(value));
		}

		// Token: 0x0600151E RID: 5406 RVA: 0x0004CF20 File Offset: 0x0004B120
		public void SetMetadataDocumentUri(Uri value, string selectClause)
		{
			this.metadataDocumentUri = new ODataMetadataDocumentUri(value)
			{
				SelectClause = selectClause
			};
		}

		// Token: 0x0600151F RID: 5407 RVA: 0x0004CF42 File Offset: 0x0004B142
		public bool ContainUndeclaredPropertyBehavior(ODataUndeclaredPropertyBehaviorKinds undeclaredPropertyBehaviorKinds)
		{
			if (undeclaredPropertyBehaviorKinds == ODataUndeclaredPropertyBehaviorKinds.None)
			{
				return this.UndeclaredPropertyBehaviorKinds == ODataUndeclaredPropertyBehaviorKinds.None;
			}
			return this.UndeclaredPropertyBehaviorKinds.HasFlag(undeclaredPropertyBehaviorKinds);
		}

		// Token: 0x06001520 RID: 5408 RVA: 0x0004CF5D File Offset: 0x0004B15D
		internal bool HasJsonPaddingFunction()
		{
			return !string.IsNullOrEmpty(this.JsonPCallback);
		}

		// Token: 0x06001521 RID: 5409 RVA: 0x0004CF70 File Offset: 0x0004B170
		internal bool ShouldSkipAnnotation(string annotationName)
		{
			return this.Version.Value < ODataVersion.V3 || (this.ShouldIncludeAnnotation != null && !this.ShouldIncludeAnnotation.Invoke(annotationName));
		}

		// Token: 0x040008C1 RID: 2241
		private string acceptCharSets;

		// Token: 0x040008C2 RID: 2242
		private string acceptMediaTypes;

		// Token: 0x040008C3 RID: 2243
		private ODataFormat format;

		// Token: 0x040008C4 RID: 2244
		private bool? useFormat;

		// Token: 0x040008C5 RID: 2245
		private Func<ODataEntry, XmlWriter, XmlWriter> atomFormatStartEntryXmlCustomizationCallback;

		// Token: 0x040008C6 RID: 2246
		private Action<ODataEntry, XmlWriter, XmlWriter> atomFormatEndEntryXmlCustomizationCallback;

		// Token: 0x040008C7 RID: 2247
		private ODataWriterBehavior writerBehavior;

		// Token: 0x040008C8 RID: 2248
		private ODataMetadataDocumentUri metadataDocumentUri;

		// Token: 0x040008C9 RID: 2249
		private Func<string, bool> shouldIncludeAnnotation;

		// Token: 0x040008CA RID: 2250
		private bool alwaysUseDefaultXmlNamespaceForRootElement;
	}
}
