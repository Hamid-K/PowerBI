"use strict";

(self.webpackChunkdesktop = self.webpackChunkdesktop || []).push([ [ "quick-measures-lazy" ], {
    48563: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            w: function() {
                return daxParserFunctionDataFromEngine;
            }
        });
        var _powerbi_DaxParser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(17819);
        function daxParserFunctionDataFromEngine(daxFunctions) {
            return daxFunctions.map(function(f) {
                return {
                    name: (daxFunction = f).Name,
                    description: daxFunction.Description,
                    category: daxParserFunctionCategory(daxFunction.Category),
                    pushableToDQ: (value = daxFunction.PushableToDirectQuery, result = 0, 1 === value ? result = 1 : 2 === value ? result = 2 : 3 === value && (result = 3), 
                    result),
                    parameters: (parameters = daxFunction.Parameters, parameters ? parameters.map(function(p) {
                        return new _powerbi_DaxParser__WEBPACK_IMPORTED_MODULE_0__.Hw((parameter = p).Name, parameter.Optional, parameter.Repeatable, parameter.RepeatGroup, parameter.Skippable);
                        var parameter;
                    }) : []),
                    visualCalculationsInfo: daxFunction.VisualCalculationsInfo
                };
                var parameters, value, result, daxFunction;
            });
        }
        function daxParserFunctionCategory(category) {
            switch (category) {
              case 0:
                return 0;

              case 1:
                return 1;

              case 2:
                return 2;

              case 3:
                return 3;

              case 4:
                return 4;

              case 5:
                return 5;

              case 6:
                return 6;

              case 7:
                return 7;

              case 8:
                return 8;

              case 9:
                return 9;
            }
        }
    },
    12846: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            p: function() {
                return IntellisenseModelServiceProvider;
            }
        });
        var tslib_es6 = __webpack_require__(81337), injection_tokens = __webpack_require__(15903), data_model_utils = __webpack_require__(95867), dataModelSchemas = __webpack_require__(5207);
        function getEligibleTables(model) {
            return model.tables.filter(function(t) {
                return t.schemaName !== dataModelSchemas._.DataWarehouseSchema;
            });
        }
        function getEligibleRelationships(model) {
            return model.relationships.filter(function(r) {
                return r.fromTable.schemaName !== dataModelSchemas._.DataWarehouseSchema && r.toTable.schemaName !== dataModelSchemas._.DataWarehouseSchema;
            });
        }
        function daxColumnVariationTable(column) {
            if (column.variations && column.variations.length > 0) return column.variations[0].relationship.toTable.name;
        }
        function daxRelationshipCardinality(cardinality) {
            switch (cardinality) {
              case "Many":
              case "None":
                return "many";

              case "One":
                return "one";
            }
        }
        var token = __webpack_require__(68082), daxTypes = __webpack_require__(63708), core = __webpack_require__(50423), IntellisenseModelServiceProvider = {
            provide: injection_tokens.Pm,
            useClass: function() {
                function IntellisenseModelService(dataModelService) {
                    this.dataModelService = dataModelService;
                }
                return IntellisenseModelService.prototype.init = function(calculationObjectInfo) {
                    this.calculationObjectInfo = (0, tslib_es6.__assign)({}, calculationObjectInfo);
                }, IntellisenseModelService.prototype.reset = function() {
                    this.calculationObjectInfo = void 0;
                }, IntellisenseModelService.prototype.getDaxModeConfigInputs = function(unfilteredWireDataSourceInfo) {
                    var model, serializableModel = {
                        tables: getEligibleTables(model = this.dataModelService.getDataModel()).map(function(t) {
                            return {
                                name: (table = t).name,
                                isUserTable: (0, data_model_utils.$i)(table),
                                description: table.description,
                                columns: table.columns ? table.columns.map(function(c) {
                                    return {
                                        name: (column = c).name,
                                        isUserColumn: (0, data_model_utils.rh)(column),
                                        description: column.description,
                                        variationTable: daxColumnVariationTable(column)
                                    };
                                    var column;
                                }) : [],
                                measures: table.measures ? table.measures.map(function(m) {
                                    return {
                                        name: (measure = m).name,
                                        description: measure.description,
                                        expression: measure.expression,
                                        isExternal: !!measure.sourceLineageTag
                                    };
                                    var measure;
                                }) : [],
                                calendars: table.calendars ? table.calendars.map(function(c) {
                                    return {
                                        name: c.name
                                    };
                                }) : []
                            };
                            var table;
                        }),
                        relationships: model.relationships ? getEligibleRelationships(model).map(function(r) {
                            return {
                                active: (relationship = r).isActive,
                                from: {
                                    table: relationship.fromTable.name,
                                    column: relationship.fromColumn ? relationship.fromColumn.name : void 0,
                                    cardinality: daxRelationshipCardinality(relationship.fromCardinality)
                                },
                                to: {
                                    table: relationship.toTable.name,
                                    column: relationship.toColumn ? relationship.toColumn.name : void 0,
                                    cardinality: daxRelationshipCardinality(relationship.toCardinality)
                                }
                            };
                            var relationship;
                        }) : []
                    }, isRestrictedMode = this.isFunctionRestrictedMode(), daxCalculation = this.getDaxCalculation(), wireDataSourceInfo = this.filterWireDataSourceInfo(unfilteredWireDataSourceInfo);
                    return Promise.resolve({
                        serializableModel,
                        wireDataSourceInfo,
                        daxCalculation,
                        isRestrictedMode
                    });
                }, IntellisenseModelService.prototype.getCalculationObject = function() {
                    return this.calculationObjectInfo && this.findCalculationObject({
                        entityName: this.calculationObjectInfo.entityName,
                        propertyName: this.calculationObjectInfo.propertyName,
                        schemaName: this.calculationObjectInfo.schemaName,
                        calculationEditMode: this.calculationObjectInfo.calculationEditMode
                    });
                }, IntellisenseModelService.prototype.findCalculationObject = function(object) {
                    var _a, schemaName = object.schemaName, entityName = object.entityName, propertyName = object.propertyName, calculationEditMode = object.calculationEditMode;
                    if (entityName) {
                        var calculationObject = (0, data_model_utils.Lc)(this.dataModelService.getDataModel(), schemaName, entityName, propertyName);
                        if (!calculationObject) return;
                        var expression = calculationObject.expression, expressionErrorMessage = calculationObject.expressionErrorMessage;
                        if (2 === calculationEditMode) {
                            var dfs = calculationObject.formatStringDefinition;
                            expression = null !== (_a = null == dfs ? void 0 : dfs.expression) && void 0 !== _a ? _a : "", 
                            expressionErrorMessage = null == dfs ? void 0 : dfs.errorMessage;
                        }
                        var daxCalculationObject = {
                            name: calculationObject.name,
                            expression,
                            schemaName: calculationObject.schemaName,
                            calculationType: this.getCalculationType(calculationObject),
                            calculationSyntaxType: IntellisenseModelService.getCalculationSyntaxType(calculationEditMode),
                            expressionErrorMessage
                        };
                        return _.isEmpty(calculationObject.annotations) || (daxCalculationObject = (0, tslib_es6.__assign)((0, 
                        tslib_es6.__assign)({}, daxCalculationObject), {
                            expressionOverride: (0, data_model_utils.MZ)(calculationObject),
                            formulaOverride: (0, data_model_utils.CE)(calculationObject),
                            isNew: (0, data_model_utils.e_)(calculationObject)
                        })), daxCalculationObject;
                    }
                }, IntellisenseModelService.prototype.getDaxCalculation = function() {
                    var _a, calculationObjectInfo = this.calculationObjectInfo;
                    if (calculationObjectInfo) {
                        var schemaName = (_a = this.calculationObjectInfo).schemaName, entityName = _a.entityName, propertyName = _a.propertyName, calculationObject = (0, 
                        data_model_utils.Lc)(this.dataModelService.getDataModel(), schemaName, entityName, propertyName);
                        if (calculationObject) {
                            var calculationType = this.getCalculationType(calculationObject), calculationSyntaxType = IntellisenseModelService.getCalculationSyntaxType(calculationObjectInfo.calculationEditMode);
                            return {
                                tableName: calculationObjectInfo.entityName,
                                calculationName: calculationObjectInfo.propertyName,
                                type: calculationType,
                                syntaxType: calculationSyntaxType
                            };
                        }
                    }
                }, IntellisenseModelService.prototype.isFunctionRestrictedMode = function() {
                    if (!this.calculationObjectInfo) return !1;
                    var tableName = this.calculationObjectInfo.entityName, table = (0, data_model_utils.AG)(this.dataModelService.getDataModel(), tableName);
                    return !!table && table.capabilities.requirePushableToDirectQueryDax;
                }, IntellisenseModelService.prototype.getCalculationType = function(calculationObject) {
                    if (calculationObject) switch (calculationObject.objectType) {
                      case "Column":
                        return daxTypes.eN.Column;

                      case "Table":
                        return daxTypes.eN.Table;

                      case "Measure":
                        return daxTypes.eN.Measure;

                      case "CalculationItem":
                        return daxTypes.eN.CalculationItem;

                      default:
                        return;
                    }
                }, IntellisenseModelService.prototype.filterWireDataSourceInfo = function(wireDataSourceInfo) {
                    return {
                        functionDataFromEngine: wireDataSourceInfo.functionDataFromEngine.filter(function(f) {
                            return !f.visualCalculationsInfo || 0 === f.visualCalculationsInfo;
                        }),
                        reservedWords: wireDataSourceInfo.reservedWords
                    };
                }, IntellisenseModelService.getCalculationSyntaxType = function(calculationEditMode) {
                    return 2 === calculationEditMode ? daxTypes.Up.Expression : daxTypes.Up.Formula;
                }, IntellisenseModelService.\u0275fac = function(t) {
                    return new (t || IntellisenseModelService)(core["\u0275\u0275inject"](token.n));
                }, IntellisenseModelService.\u0275prov = core["\u0275\u0275defineInjectable"]({
                    token: IntellisenseModelService,
                    factory: IntellisenseModelService.\u0275fac
                }), IntellisenseModelService;
            }()
        };
    },
    15903: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            $d: function() {
                return FormulaBarZoomServiceInjectionToken;
            },
            Pm: function() {
                return IntellisenseModelServiceInjectionToken;
            },
            n9: function() {
                return BehaviorServiceInjectionToken;
            }
        });
        var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(50423), IntellisenseModelServiceInjectionToken = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.InjectionToken("IntellisenseModelService"), BehaviorServiceInjectionToken = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.InjectionToken("FormulaBarBehaviorService"), FormulaBarZoomServiceInjectionToken = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.InjectionToken("FormulaBarZoomService");
    },
    72080: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            e: function() {
                return IntellisenseService;
            }
        });
        var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(81337), _injection_tokens__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(15903), _powerbi_DaxParser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(17819), _powerbi_DaxParser_utilities__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(63513), _powerbi_DaxParser_dax_capabilities_converter_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(48563), _powerbi_InjectionTokens_dax_capabilities_service_interface__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(74249), _powerbi_legacy_JsCommon_Utility_JsonExtensions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(26112), _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(62458), _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_Utility__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(59694), _powerbi_MonacoContributions__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(63708), _powerbi_MonacoContributions__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(49088), _angular_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(50423), _powerbi_Localization__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(65181), _intellisense_host_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(34103), whitespaceBeforeFormula = [ " ", "\t" ], IntellisenseService = function() {
            function IntellisenseService(localizationService, intellisenseHostService, intellisenseModelService, daxCapabilitiesService) {
                this.localizationService = localizationService, this.intellisenseHostService = intellisenseHostService, 
                this.intellisenseModelService = intellisenseModelService, this.daxCapabilitiesService = daxCapabilitiesService;
            }
            return IntellisenseService.prototype.onClientViewLoaded = function(interop) {
                this.intellisenseHostService.onClientViewLoaded(interop);
            }, IntellisenseService.prototype.onContentChanged = function(formulaBarContent, cursorPosition, selectionStart, skipParse, textChangedOutsideOfCursor) {
                this.intellisenseHostService.onContentChanged(formulaBarContent, cursorPosition, selectionStart, skipParse, textChangedOutsideOfCursor);
            }, IntellisenseService.prototype.setUICulture = function() {
                return (0, tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, function() {
                    var cultureInfoJson, cultureInfo;
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.intellisenseHostService.getCultureInfo() ];

                          case 1:
                            return cultureInfoJson = _a.sent(), cultureInfo = (0, _powerbi_legacy_JsCommon_Utility_JsonExtensions__WEBPACK_IMPORTED_MODULE_4__.K)(cultureInfoJson), 
                            (0, _powerbi_DaxParser__WEBPACK_IMPORTED_MODULE_0__.g5)({
                                listSeparator: cultureInfo.listSeparator,
                                numberDecimalSeparator: cultureInfo.decimalSeparator
                            }), [ 2 ];
                        }
                    });
                });
            }, IntellisenseService.prototype.onEditorFocus = function() {
                this.intellisenseHostService.onEditorFocus();
            }, IntellisenseService.prototype.endIntellisenseSession = function() {
                this.intellisenseModelService.reset(), this.intellisenseHostService.endIntellisenseSession();
            }, IntellisenseService.prototype.startIntellisenseSession = function(entityName, propertyName, schemaName, calculationEditMode) {
                this.intellisenseModelService.init({
                    entityName,
                    propertyName,
                    schemaName,
                    calculationEditMode
                }), this.intellisenseHostService.startIntellisenseSession(entityName, propertyName, schemaName, calculationEditMode);
            }, IntellisenseService.prototype.getCalculationInfo = function(calculationObjectInfo) {
                return (0, tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, function() {
                    var calculation;
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, function(_a) {
                        return (calculation = this.intellisenseModelService.findCalculationObject(calculationObjectInfo)) && null != calculation.expression ? [ 2, Promise.resolve({
                            isNew: calculation.isNew,
                            alertMessage: calculation.expressionErrorMessage ? calculation.expressionErrorMessage : void 0,
                            formulaText: this.getCalculationExpression(calculation)
                        }) ] : (_powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_5__.fF.assertFail((0, 
                        _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_Utility__WEBPACK_IMPORTED_MODULE_6__.W)("Cannot find editable Calculation: schema:{0} entity:{1} property:{2}", null == calculationObjectInfo ? void 0 : calculationObjectInfo.schemaName, null == calculationObjectInfo ? void 0 : calculationObjectInfo.entityName, null == calculationObjectInfo ? void 0 : calculationObjectInfo.propertyName)), 
                        [ 2, Promise.resolve(void 0) ]);
                    });
                });
            }, IntellisenseService.prototype.getCalculationExpression = function(calculation) {
                if (calculation.formulaOverride) return calculation.formulaOverride.formula;
                var expression = _powerbi_DaxParser__WEBPACK_IMPORTED_MODULE_0__.w_.convertToUI(calculation.expression);
                return calculation.calculationSyntaxType === _powerbi_MonacoContributions__WEBPACK_IMPORTED_MODULE_7__.Up.Expression ? expression : (0, 
                _powerbi_DaxParser__WEBPACK_IMPORTED_MODULE_0__.Mk)(calculation.name, expression);
            }, IntellisenseService.prototype.updateFormulaContextAsync = function() {
                return (0, tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, function() {
                    var wireDataSourceInfo;
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.getDataSourceInfo() ];

                          case 1:
                            return wireDataSourceInfo = _a.sent(), [ 4, this.updateDaxContext(wireDataSourceInfo) ];

                          case 2:
                            return _a.sent(), [ 2 ];
                        }
                    });
                });
            }, IntellisenseService.prototype.updateDaxContext = function(unfilteredWireDataSourceInfo) {
                return (0, tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, function() {
                    var _a;
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return [ 4, this.intellisenseModelService.getDaxModeConfigInputs(unfilteredWireDataSourceInfo) ];

                          case 1:
                            return _a = _b.sent(), _powerbi_MonacoContributions__WEBPACK_IMPORTED_MODULE_8__._.configureModel(_a.serializableModel, _a.wireDataSourceInfo, _a.daxCalculation, _a.isRestrictedMode, _a.axes), 
                            [ 2 ];
                        }
                    });
                });
            }, IntellisenseService.prototype.getDataSourceInfo = function() {
                return (0, tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, function() {
                    var reservedASWords, functionData, _a;
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return [ 4, Promise.all([ this.daxCapabilitiesService.getReservedWords(), this.daxCapabilitiesService.getCapabilities() ]) ];

                          case 1:
                            return _a = _b.sent(), reservedASWords = _a[0], functionData = (0, _powerbi_DaxParser_dax_capabilities_converter_utils__WEBPACK_IMPORTED_MODULE_2__.w)(_a[1].Functions), 
                            [ 2, {
                                reservedWords: reservedASWords,
                                functionDataFromEngine: functionData
                            } ];
                        }
                    });
                });
            }, IntellisenseService.prototype.analyzeFinalFormulaCommitInfo = function(formula, isExplicitSubmit, doFinalProcessing) {
                var expressionOverride, errorMessage, calculation = this.intellisenseModelService.getCalculationObject(), finalFormulaInfo = {
                    name: void 0,
                    expression: void 0,
                    invalidFormula: void 0,
                    anonymizedExpression: void 0,
                    parseResult: void 0
                }, toCommit = function(formula, result, doFinalProcessing, calculation) {
                    if (!calculation) return result.name = void 0, result.expression = void 0, result.invalidFormula = void 0, 
                    result.anonymizedExpression = void 0, !1;
                    var oldInvalidFormula;
                    !function(formula, result, doFinalProcessing, calculation) {
                        var breakUpSuccess = !1, finalFormulaOut = {
                            name: void 0,
                            expression: void 0
                        };
                        if ((breakUpSuccess = calculation.calculationSyntaxType === _powerbi_MonacoContributions__WEBPACK_IMPORTED_MODULE_7__.Up.Expression) ? finalFormulaOut.expression = _powerbi_DaxParser_utilities__WEBPACK_IMPORTED_MODULE_1__.uI.trimStart(formula, whitespaceBeforeFormula) : breakUpSuccess = (0, 
                        _powerbi_DaxParser__WEBPACK_IMPORTED_MODULE_0__.Mn)(formula, finalFormulaOut, calculation.calculationType === _powerbi_MonacoContributions__WEBPACK_IMPORTED_MODULE_7__.eN.VisualCalculation), 
                        !breakUpSuccess) return result.name = calculation.name || "", result.name && !formula ? result.expression = "" : (result.invalidFormula = formula, 
                        result.expression = calculation.expression || ""), null;
                        if (result.name = finalFormulaOut.name, result.expression = finalFormulaOut.expression, 
                        finalFormulaOut.expression) if (doFinalProcessing) {
                            (context = _powerbi_MonacoContributions__WEBPACK_IMPORTED_MODULE_8__._.getContext()) || _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_5__.fF.assertFail("Context should be defined");
                            var parser = new _powerbi_DaxParser__WEBPACK_IMPORTED_MODULE_0__.w_, finalParseResult = new _powerbi_DaxParser__WEBPACK_IMPORTED_MODULE_0__.ss, finalParseResultOut = {
                                finalResult: finalParseResult
                            };
                            parser.finalParse(finalFormulaOut.expression, context, finalParseResultOut, _powerbi_DaxParser__WEBPACK_IMPORTED_MODULE_0__.MX.AddMissingParens | _powerbi_DaxParser__WEBPACK_IMPORTED_MODULE_0__.MX.Anonymize | _powerbi_DaxParser__WEBPACK_IMPORTED_MODULE_0__.MX.ConvertToEngine), 
                            result.expression = finalParseResultOut.finalResult.updatedExpression, result.anonymizedExpression = finalParseResultOut.finalResult.anonymizedExpression, 
                            result.parseResult = finalParseResult;
                        } else {
                            parser = new _powerbi_DaxParser__WEBPACK_IMPORTED_MODULE_0__.w_;
                            var context = _powerbi_MonacoContributions__WEBPACK_IMPORTED_MODULE_8__._.getContext(), parseResultRef = {
                                result: new _powerbi_DaxParser__WEBPACK_IMPORTED_MODULE_0__.bp
                            };
                            parser.parse(finalFormulaOut.expression, 0, void 0, void 0, context, parseResultRef, void 0), 
                            result.expression = _powerbi_DaxParser__WEBPACK_IMPORTED_MODULE_0__.w_.convertToEngine(finalFormulaOut.expression), 
                            result.parseResult = parseResultRef.result;
                        }
                    }(formula, result, doFinalProcessing, calculation);
                    var formulaOverride = calculation.formulaOverride;
                    return formulaOverride && (oldInvalidFormula = formulaOverride.formula), calculation.name !== result.name || calculation.expression !== result.expression || oldInvalidFormula !== result.invalidFormula;
                }(formula, finalFormulaInfo, doFinalProcessing, calculation);
                !toCommit && isExplicitSubmit && calculation && (toCommit = !!calculation.expressionErrorMessage && !!calculation.expressionOverride && !calculation.formulaOverride);
                var parseErrorMessages = new Map;
                if (toCommit && finalFormulaInfo.invalidFormula) switch (expressionOverride = {
                    expression: null,
                    formula: finalFormulaInfo.invalidFormula
                }, calculation.calculationType) {
                  case _powerbi_MonacoContributions__WEBPACK_IMPORTED_MODULE_7__.eN.Column:
                    errorMessage = this.localizationService.get("ReportModelInvalidColumnNameMessage");
                    break;

                  case _powerbi_MonacoContributions__WEBPACK_IMPORTED_MODULE_7__.eN.Table:
                    errorMessage = this.localizationService.get("ReportModelInvalidCalculatedTableNameMessage");
                    break;

                  case _powerbi_MonacoContributions__WEBPACK_IMPORTED_MODULE_7__.eN.Measure:
                    errorMessage = this.localizationService.get("ReportModelInvalidMeasureNameMessage");
                    break;

                  case _powerbi_MonacoContributions__WEBPACK_IMPORTED_MODULE_7__.eN.CalculationItem:
                    errorMessage = this.localizationService.get("ReportModelInvalidCalcItemNameMessage");
                    break;

                  case _powerbi_MonacoContributions__WEBPACK_IMPORTED_MODULE_7__.eN.VisualCalculation:
                    break;

                  default:
                    _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_5__.fF.assertFail("Unknown type " + calculation.calculationType);
                }
                return finalFormulaInfo.parseResult instanceof _powerbi_DaxParser__WEBPACK_IMPORTED_MODULE_0__.bp && finalFormulaInfo.parseResult.errors.length && finalFormulaInfo.parseResult.errors.forEach(function(error) {
                    return parseErrorMessages.set(error.errorCode, error.message);
                }), {
                    doCommit: toCommit,
                    newName: finalFormulaInfo.name,
                    newExpression: finalFormulaInfo.expression,
                    newInvalidFormula: finalFormulaInfo.invalidFormula,
                    anonymizedExpression: finalFormulaInfo.anonymizedExpression,
                    expressionOverride,
                    errorMessage,
                    parseErrorMessages
                };
            }, IntellisenseService.\u0275fac = function(t) {
                return new (t || IntellisenseService)(_angular_core__WEBPACK_IMPORTED_MODULE_9__["\u0275\u0275inject"](_powerbi_Localization__WEBPACK_IMPORTED_MODULE_10__.o), _angular_core__WEBPACK_IMPORTED_MODULE_9__["\u0275\u0275inject"](_intellisense_host_service__WEBPACK_IMPORTED_MODULE_11__.TH), _angular_core__WEBPACK_IMPORTED_MODULE_9__["\u0275\u0275inject"](_injection_tokens__WEBPACK_IMPORTED_MODULE_12__.Pm), _angular_core__WEBPACK_IMPORTED_MODULE_9__["\u0275\u0275inject"](_powerbi_InjectionTokens_dax_capabilities_service_interface__WEBPACK_IMPORTED_MODULE_13__.r));
            }, IntellisenseService.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_9__["\u0275\u0275defineInjectable"]({
                token: IntellisenseService,
                factory: IntellisenseService.\u0275fac,
                providedIn: "root"
            }), IntellisenseService;
        }();
    },
    70940: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            s: function() {
                return getPlugin;
            }
        });
        var _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(47508), _powerbi_legacy_PowerBIVisuals_VisualsCommon_Lazy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(45034), typeToPluginMap = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Lazy__WEBPACK_IMPORTED_MODULE_0__.o(function() {
            var result = {};
            return result[3] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.card, 
            result[13] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.lineClusteredColumnComboChart, 
            result[29] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.multiRowCard, 
            result[7] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.clusteredBarChart, 
            result[10] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.clusteredColumnChart, 
            result[20] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.donutChart, 
            result[16] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.funnel, 
            result[30] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.gauge, 
            result[22] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.heatMap, 
            result[9] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.hundredPercentStackedBarChart, 
            result[12] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.hundredPercentStackedColumnChart, 
            result[4] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.lineChart, 
            result[1] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.map, 
            result[19] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.filledMap, 
            result[2] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.pivotTable, 
            result[5] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.pieChart, 
            result[6] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.scatterChart, 
            result[8] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.barChart, 
            result[11] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.columnChart, 
            result[0] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.tableEx, 
            result[17] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.treemap, 
            result[23] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.waterfallChart, 
            result[26] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.stackedAreaChart, 
            result[27] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.hundredPercentStackedAreaChart, 
            result[32] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.areaChart, 
            result[33] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.ribbonChart, 
            result[34] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.kpi, 
            result[35] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.decompositionTreeVisual, 
            result;
        });
        function getPlugin(type) {
            return typeToPluginMap.getValue()[type];
        }
        new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Lazy__WEBPACK_IMPORTED_MODULE_0__.o(function() {
            var result = {};
            return result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.card.name] = 3, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.lineClusteredColumnComboChart.name] = 13, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.multiRowCard.name] = 29, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.clusteredBarChart.name] = 7, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.clusteredColumnChart.name] = 10, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.donutChart.name] = 20, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.funnel.name] = 16, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.gauge.name] = 30, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.heatMap.name] = 22, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.hundredPercentStackedBarChart.name] = 9, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.hundredPercentStackedColumnChart.name] = 12, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.lineChart.name] = 4, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.map.name] = 1, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.filledMap.name] = 19, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.matrix.name] = 2, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.pivotTable.name] = 2, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.pieChart.name] = 5, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.scatterChart.name] = 6, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.barChart.name] = 8, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.columnChart.name] = 11, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.table.name] = 0, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.tableEx.name] = 0, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.treemap.name] = 17, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.waterfallChart.name] = 23, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.stackedAreaChart.name] = 26, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.hundredPercentStackedAreaChart.name] = 27, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.areaChart.name] = 32, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.ribbonChart.name] = 33, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.kpi.name] = 34, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.decompositionTreeVisual.name] = 35, 
            result;
        });
    },
    1931: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            T: function() {
                return QnaModule;
            }
        });
        var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(77476), _powerbi_Data__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(52910), _powerbi_ErrorService__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(13052), _powerbi_Explore__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(31109), _powerbi_ExploreUI__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(87121), _powerbi_FeatureSwitch__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(76521), _powerbi_GeocoderIndexedDB__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(40516), _powerbi_Geocoding__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(84497), _powerbi_Localization__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(79061), _powerbi_Telemetry__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(21617), _powerbi_UILibrary_UILibrary_module__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(94785), _powerbi_VisualHostCore__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(3176), _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(50423), QnaModule = function() {
            function QnaModule() {}
            return QnaModule.\u0275fac = function(t) {
                return new (t || QnaModule);
            }, QnaModule.\u0275mod = _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275defineNgModule"]({
                type: QnaModule
            }), QnaModule.\u0275inj = _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275defineInjector"]({
                imports: [ _angular_common__WEBPACK_IMPORTED_MODULE_2__.CommonModule, _powerbi_Data__WEBPACK_IMPORTED_MODULE_3__.O, _powerbi_ErrorService__WEBPACK_IMPORTED_MODULE_4__.T, _powerbi_Explore__WEBPACK_IMPORTED_MODULE_5__.F, _powerbi_ExploreUI__WEBPACK_IMPORTED_MODULE_6__.J, _powerbi_FeatureSwitch__WEBPACK_IMPORTED_MODULE_7__.A3, _powerbi_GeocoderIndexedDB__WEBPACK_IMPORTED_MODULE_8__.h, _powerbi_Geocoding__WEBPACK_IMPORTED_MODULE_9__.L, _powerbi_Localization__WEBPACK_IMPORTED_MODULE_10__.v, _powerbi_Telemetry__WEBPACK_IMPORTED_MODULE_0__.e3, _powerbi_UILibrary_UILibrary_module__WEBPACK_IMPORTED_MODULE_11__.g, _powerbi_VisualHostCore__WEBPACK_IMPORTED_MODULE_12__.c ]
            }), QnaModule;
        }();
    },
    37320: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            y: function() {
                return InterpretListenerFactory;
            }
        });
        var tslib__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(81337), rxjs__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(35510), _powerbi_legacy_Explore_contracts_dataSource__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(74804), _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(62458), _powerbi_Typings_Modern_Shared_Explore_typings__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(58291), _powerbi_legacy_Explore_constants__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(57871), _powerbi_legacy_Explore_util_filterUtils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(42614), _powerbi_legacy_Explore_util_visualContainerUtils__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(3579), _powerbi_legacy_PowerBIVisuals_VisualsData_semanticQuery_sqFrom__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(38953), _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(3468), _utils_wireClientContractsConversion_util__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(35988), _utils_visual_util__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(74857), _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(50423), _powerbi_Data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(26898), _powerbi_Explore__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(83008), _powerbi_Explore__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(81986), _powerbi_Explore__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(21436), _powerbi_LazyLoad__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(28894), _powerbi_VisualHostCore__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(84916), _powerbi_VisualHostCore__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(29866), InterpretListenerFactory = function() {
            function InterpretListenerFactory(conceptualSchemaProxy, dataSources, explorationSerializer, lazyScoped, podExplorationResolver, resourcePackage, visualPlugin) {
                this.conceptualSchemaProxy = conceptualSchemaProxy, this.dataSources = dataSources, 
                this.explorationSerializer = explorationSerializer, this.lazyScoped = lazyScoped, 
                this.podExplorationResolver = podExplorationResolver, this.resourcePackage = resourcePackage, 
                this.visualPlugin = visualPlugin;
            }
            return InterpretListenerFactory.prototype.createInterpretListener = function(setupParams, timeout) {
                return void 0 === timeout && (timeout = 500), new InterpretListener(this.conceptualSchemaProxy, this.dataSources, this.explorationSerializer, this.lazyScoped, this.podExplorationResolver, this.resourcePackage, this.visualPlugin, setupParams, timeout);
            }, InterpretListenerFactory.\u0275fac = function(t) {
                return new (t || InterpretListenerFactory)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275inject"](_powerbi_Data__WEBPACK_IMPORTED_MODULE_1__.i), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275inject"](_powerbi_Explore__WEBPACK_IMPORTED_MODULE_2__.D), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275inject"](_powerbi_Explore__WEBPACK_IMPORTED_MODULE_3__.L), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275inject"](_powerbi_LazyLoad__WEBPACK_IMPORTED_MODULE_4__.H), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275inject"](_powerbi_Explore__WEBPACK_IMPORTED_MODULE_5__.Bl), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275inject"](_powerbi_VisualHostCore__WEBPACK_IMPORTED_MODULE_6__.o), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275inject"](_powerbi_VisualHostCore__WEBPACK_IMPORTED_MODULE_7__.D));
            }, InterpretListenerFactory.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275defineInjectable"]({
                token: InterpretListenerFactory,
                factory: InterpretListenerFactory.\u0275fac
            }), InterpretListenerFactory;
        }(), InterpretListener = function() {
            function InterpretListener(conceptualSchemaProxy, dataSources, explorationSerializer, lazyScoped, podExplorationResolver, resourcePackage, visualPlugin, setupParams, timeout) {
                this.conceptualSchemaProxy = conceptualSchemaProxy, this.dataSources = dataSources, 
                this.explorationSerializer = explorationSerializer, this.lazyScoped = lazyScoped, 
                this.podExplorationResolver = podExplorationResolver, this.resourcePackage = resourcePackage, 
                this.visualPlugin = visualPlugin, this.setupParams = setupParams, this.timeout = timeout, 
                _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_8__.fF.assertValue(setupParams, "setupParams"), 
                this.updateManager = new ObservableUpdateManager(this.timeout), this.setupParams = setupParams;
            }
            return InterpretListener.prototype.getObservable = function() {
                return this.updateManager.getObservable();
            }, InterpretListener.prototype.onInterpretIssued = function() {
                this.cancelErrorThrottler(), this.updateManager.pushUpdate({
                    resultType: 0
                });
            }, InterpretListener.prototype.onInterpretRetry = function(warning) {
                this.updateManager.pushUpdate({
                    resultType: 1,
                    retryWarning: warning
                });
            }, InterpretListener.prototype.onInterpretResultCleared = function() {
                this.cancelErrorThrottler(), this.updateManager.pushUpdate({
                    resultType: 4,
                    utterance: ""
                });
            }, InterpretListener.prototype.onInterpretResult = function(request, response) {
                var _a;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__awaiter)(this, void 0, void 0, function() {
                    var firstResult;
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__generator)(this, function(_b) {
                        var warnings;
                        return response.error || !this.setupParams.forTrainingTermBinding && _.isEmpty(response.results) || this.setupParams.forTrainingTermBinding && _.every(response.results, function(r) {
                            return !r.command;
                        }) && (warnings = response.warnings) && !_.find(warnings, function(warning) {
                            return 2 === warning || 8 === warning || 11 === warning || 12 === warning || 9 === warning || 10 === warning || 24 === warning;
                        }) ? (firstResult = _.first(response.results), this.onInterpretErrorV2(response.utterance, request, response.error, null == firstResult ? void 0 : firstResult.spans, null === (_a = null == firstResult ? void 0 : firstResult.correctionInfo) || void 0 === _a ? void 0 : _a.correctedUtterance), 
                        [ 2 ]) : [ 2, this.onInterpretSuccessV2(response, request) ];
                    });
                });
            }, InterpretListener.prototype.onInterpretSuccessV2 = function(interpretResponse, request) {
                var _a, _b;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__awaiter)(this, void 0, void 0, function() {
                    var firstResult, semanticQuery;
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__generator)(this, function(_c) {
                        switch (_c.label) {
                          case 0:
                            return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_8__.fF.assertValue(interpretResponse, "interpretResponse"), 
                            this.cancelErrorThrottler(), (null === (_a = null == request ? void 0 : request.intent) || void 0 === _a ? void 0 : _a.defineCalculation) ? [ 4, this.handleCalculationResult(interpretResponse, request) ] : [ 3, 2 ];

                          case 1:
                            return _c.sent(), [ 3, 6 ];

                          case 2:
                            return firstResult = _.first(interpretResponse.results), (semanticQuery = null === (_b = null == firstResult ? void 0 : firstResult.command) || void 0 === _b ? void 0 : _b.query) && _.find(semanticQuery.from().sources(), function(fromSource) {
                                return (0, _powerbi_legacy_PowerBIVisuals_VisualsData_semanticQuery_sqFrom__WEBPACK_IMPORTED_MODULE_10__.Yg)(fromSource);
                            }) ? [ 4, this.handlePodPageResult(interpretResponse, request) ] : [ 3, 4 ];

                          case 3:
                            return _c.sent(), [ 3, 6 ];

                          case 4:
                            return [ 4, this.handleVisualResult(interpretResponse, request) ];

                          case 5:
                            _c.sent(), _c.label = 6;

                          case 6:
                            return [ 2 ];
                        }
                    });
                });
            }, InterpretListener.prototype.onInterpretErrorV2 = function(utterance, request, error, spans, correctedUtterance) {
                var _this = this;
                _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_8__.fF.assertValue(utterance, "utterance"), 
                this.cancelErrorThrottler();
                var termBindingsTrainingInfo = this.setupParams.forTrainingTermBinding ? {
                    spans,
                    correctedUtterance
                } : void 0;
                this.errorThrottler = setTimeout(function() {
                    _this.updateManager.pushThrottledUpdate({
                        request,
                        resultType: 3,
                        interpretError: error,
                        utterance,
                        termBindingsTrainingInfo,
                        doNotShowResult: !0
                    }), _this.errorThrottler = void 0;
                }, this.timeout);
            }, InterpretListener.prototype.cancelErrorThrottler = function() {
                this.errorThrottler && clearTimeout(this.errorThrottler), this.errorThrottler = void 0;
            }, InterpretListener.prototype.handlePodPageResult = function(interpretResponse, request) {
                return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__awaiter)(this, void 0, void 0, function() {
                    var interpretResult, utterance, termBindingsTrainingInfo, command, semanticQuery, podFromSource, reportId, exploration, _a, _b, pod, sectionName_1, section_1, queryMetadata, queryDefinition, parameterFilters, resourcePackages, model, modelId, hideLowConfidenceResult;
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__generator)(this, function(_d) {
                        switch (_d.label) {
                          case 0:
                            if (interpretResult = _.first(null == interpretResponse ? void 0 : interpretResponse.results), 
                            _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_8__.fF.assertValue(interpretResult, "query interpretResult must be defined for handling pod result"), 
                            utterance = interpretResponse.utterance, termBindingsTrainingInfo = getTermsBindingTrainingInfo(interpretResult), 
                            this.setupParams.forTrainingTermBinding) return this.updateManager.pushThrottledUpdate({
                                request,
                                resultType: 2,
                                utterance,
                                termBindingsTrainingInfo,
                                doNotShowResult: !1
                            }), [ 2 ];
                            if (!this.setupParams.canShowPods) return this.updateManager.pushThrottledUpdate({
                                request,
                                resultType: 5,
                                utterance
                            }), [ 2 ];
                            _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_8__.fF.assertValue(semanticQuery = null == (command = null == interpretResult ? void 0 : interpretResult.command) ? void 0 : command.query, "interpretResult command must have a defined query for handling pod result"), 
                            podFromSource = _.find(semanticQuery.from().sources(), function(fromSource) {
                                return (0, _powerbi_legacy_PowerBIVisuals_VisualsData_semanticQuery_sqFrom__WEBPACK_IMPORTED_MODULE_10__.Yg)(fromSource);
                            }), _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_8__.fF.assertValue(podFromSource, "expect there is a pod entity"), 
                            reportId = this.podExplorationResolver.getReportId(podFromSource.schema), _d.label = 1;

                          case 1:
                            return _d.trys.push([ 1, 3, , 4 ]), _b = (_a = this.explorationSerializer).deepCopyExploration, 
                            [ 4, this.podExplorationResolver.getExploration(reportId) ];

                          case 2:
                            return exploration = _b.apply(_a, [ _d.sent() ]), pod = _.find(exploration.pods, function(p) {
                                return p.name === podFromSource.pod;
                            }), sectionName_1 = pod && pod.boundSection, section_1 = _.find(exploration.sections, function(s) {
                                return sectionName_1 === s.name;
                            }), pod && sectionName_1 && section_1 ? (_powerbi_legacy_Explore_util_filterUtils__WEBPACK_IMPORTED_MODULE_11__.l.mergeExplorationSectionFilters(exploration, section_1), 
                            queryMetadata = (0, _utils_visual_util__WEBPACK_IMPORTED_MODULE_12__.Nj)(null == command ? void 0 : command.queryMetadata), 
                            queryDefinition = _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_13__.ib.serializeQuery(semanticQuery), 
                            _.isEmpty(queryDefinition.Where) || (parameterFilters = _powerbi_legacy_Explore_util_filterUtils__WEBPACK_IMPORTED_MODULE_11__.l.extractParameterFilters(queryDefinition, queryMetadata), 
                            _powerbi_legacy_Explore_util_filterUtils__WEBPACK_IMPORTED_MODULE_11__.l.applySectionParameterFilters(section_1, pod, void 0, parameterFilters)), 
                            resourcePackages = _.filter(exploration.resourcePackages, function(rp) {
                                return _.some(section_1.visualContainers, function(vc) {
                                    return (0, _powerbi_legacy_Explore_util_visualContainerUtils__WEBPACK_IMPORTED_MODULE_14__.s)(vc) === rp.name;
                                });
                            }), _.isEmpty(resourcePackages) || (this.resourcePackage.registerPackages(resourcePackages), 
                            this.visualPlugin.ensurePlugins(resourcePackages)), section_1.size.displayOption = 1, 
                            exploration.activeSectionIndex = _.findIndex(exploration.sections, function(s) {
                                return s.name === section_1.name;
                            }), model = this.getModelFromResult(interpretResult), this.ensureDataSources(model, exploration), 
                            modelId = model.id, hideLowConfidenceResult = this.getNotShowLowConfidenceResult(interpretResult), 
                            this.updateManager.pushThrottledUpdate({
                                request,
                                resultType: 2,
                                modelId,
                                utterance,
                                exploration,
                                restatement: interpretResult.restatement,
                                doNotShowResult: hideLowConfidenceResult,
                                usedAgents: null == interpretResult ? void 0 : interpretResult.usedAgents
                            }), [ 3, 4 ]) : (this.updateManager.pushThrottledUpdate({
                                request,
                                resultType: 6,
                                utterance
                            }), [ 2 ]);

                          case 3:
                            return _d.sent(), this.updateManager.pushThrottledUpdate({
                                request,
                                resultType: 6,
                                utterance
                            }), [ 3, 4 ];

                          case 4:
                            return [ 2 ];
                        }
                    });
                });
            }, InterpretListener.prototype.handleVisualResult = function(interpretResponse, request) {
                return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__awaiter)(this, void 0, void 0, function() {
                    var utterance, interpretResult, returnTermBindingsTrainingInfo, queryUnSupportedLevelWarningsInfo, queryUnSupportedLevelWarningMessageKeys, hasUnsupportedWarnings, visualContainer, command, model, visualRecommendation, notShowLowConfidenceResult;
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            if (_powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_8__.fF.assertValue(interpretResponse, "interpretResponse"), 
                            utterance = interpretResponse.utterance, interpretResult = _.first(null == interpretResponse ? void 0 : interpretResponse.results), 
                            !this.setupParams.canShowVisuals) return this.updateManager.pushThrottledUpdate(this.setupParams.forTrainingTermBinding ? {
                                request,
                                resultType: 2,
                                utterance,
                                termBindingsTrainingInfo: getTermsBindingTrainingInfo(interpretResult),
                                doNotShowResult: !1
                            } : {
                                request,
                                resultType: 5,
                                utterance
                            }), [ 2 ];
                            returnTermBindingsTrainingInfo = this.setupParams.forTrainingTermBinding ? getTermsBindingTrainingInfo(interpretResult) : void 0, 
                            _b.label = 1;

                          case 1:
                            return _b.trys.push([ 1, 4, , 5 ]), queryUnSupportedLevelWarningsInfo = (0, _utils_wireClientContractsConversion_util__WEBPACK_IMPORTED_MODULE_15__.vr)(null == interpretResponse ? void 0 : interpretResponse.warnings), 
                            queryUnSupportedLevelWarningMessageKeys = _.uniq(_.map(queryUnSupportedLevelWarningsInfo, function(info) {
                                return info.messageKey;
                            })), hasUnsupportedWarnings = !_.isEmpty(queryUnSupportedLevelWarningsInfo), visualContainer = void 0, 
                            (command = interpretResult && interpretResult.command) && command.query ? _.isEmpty(queryUnSupportedLevelWarningsInfo) ? (model = this.getModelFromResult(interpretResult), 
                            this.ensureDataSources(model, void 0), [ 4, this.lazyScoped.get("visualRecommendationService") ]) : (this.updateManager.pushThrottledUpdate({
                                request,
                                resultType: 2,
                                utterance,
                                termBindingsTrainingInfo: returnTermBindingsTrainingInfo,
                                doNotShowResult: !0,
                                doNotShowResultCustomMessageKeys: queryUnSupportedLevelWarningMessageKeys
                            }), [ 2 ]) : (this.updateManager.pushThrottledUpdate({
                                request,
                                resultType: this.setupParams.forTrainingTermBinding ? 2 : 3,
                                utterance,
                                termBindingsTrainingInfo: returnTermBindingsTrainingInfo,
                                doNotShowResult: !this.setupParams.forTrainingTermBinding || hasUnsupportedWarnings,
                                doNotShowResultCustomMessageKeys: hasUnsupportedWarnings ? queryUnSupportedLevelWarningMessageKeys : void 0
                            }), [ 2 ]);

                          case 2:
                            return visualRecommendation = _b.sent(), [ 4, (0, _utils_visual_util__WEBPACK_IMPORTED_MODULE_12__.y_)(interpretResult, this.conceptualSchemaProxy, this.dataSources, visualRecommendation) ];

                          case 3:
                            return (visualContainer = _b.sent()) ? (notShowLowConfidenceResult = this.getNotShowLowConfidenceResult(interpretResult), 
                            this.updateManager.pushThrottledUpdate({
                                request,
                                resultType: 2,
                                modelId: model.id,
                                utterance,
                                restatement: interpretResult && interpretResult.restatement,
                                termBindingsTrainingInfo: returnTermBindingsTrainingInfo,
                                visualContainer,
                                doNotShowResult: notShowLowConfidenceResult,
                                usedAgents: null == interpretResult ? void 0 : interpretResult.usedAgents
                            })) : this.updateManager.pushThrottledUpdate({
                                request,
                                resultType: 6,
                                utterance,
                                termBindingsTrainingInfo: returnTermBindingsTrainingInfo
                            }), [ 3, 5 ];

                          case 4:
                            return _b.sent(), this.updateManager.pushThrottledUpdate({
                                request,
                                resultType: 6,
                                utterance,
                                termBindingsTrainingInfo: returnTermBindingsTrainingInfo
                            }), [ 3, 5 ];

                          case 5:
                            return [ 2 ];
                        }
                    });
                });
            }, InterpretListener.prototype.handleCalculationResult = function(interpretResponse, request) {
                var _a;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__awaiter)(this, void 0, void 0, function() {
                    var utterance, calculations, _i, result_1, r;
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__generator)(this, function(_b) {
                        for (utterance = interpretResponse.utterance, this.setupParams.canShowCalculations || this.updateManager.pushThrottledUpdate({
                            request,
                            resultType: 5,
                            utterance
                        }), calculations = [], _i = 0, result_1 = interpretResponse.results; _i < result_1.length; _i++) (null === (_a = (r = result_1[_i]).command) || void 0 === _a ? void 0 : _a.defineCalculation) && !this.getNotShowLowConfidenceResult(r) && calculations.push((0, 
                        tslib__WEBPACK_IMPORTED_MODULE_9__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_9__.__assign)({}, r.command.defineCalculation), {
                            restatement: r.restatement
                        }));
                        return _.isEmpty(calculations) ? this.updateManager.pushThrottledUpdate({
                            request,
                            resultType: 3,
                            utterance
                        }) : this.updateManager.pushThrottledUpdate({
                            request,
                            resultType: 2,
                            utterance,
                            restatement: void 0,
                            doNotShowResult: !1,
                            calculations
                        }), [ 2 ];
                    });
                });
            }, InterpretListener.prototype.getNotShowLowConfidenceResult = function(interpretResult) {
                if (!(null == interpretResult ? void 0 : interpretResult.command)) return !0;
                var correctionState = interpretResult.correctionInfo && interpretResult.correctionInfo.state;
                return 0 === correctionState || 1 === correctionState && this.setupParams.canShowDidYouMean;
            }, InterpretListener.prototype.getModelFromResult = function(interpretResult) {
                var model = 1 === _.size(this.setupParams.models) ? this.setupParams.models[0] : _.find(this.setupParams.models, function(m) {
                    return m.dbName === interpretResult.databaseName && m.vsName === interpretResult.virtualServerName;
                });
                return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_8__.fF.assertValue(model, "There are multiple models for interpret, one of them should match the model that the interpret result is from"), 
                model;
            }, InterpretListener.prototype.ensureDataSources = function(model, exploration) {
                if (model && this.setupParams.resetDataSources) {
                    var dsrDataSource = (0, _powerbi_legacy_Explore_contracts_dataSource__WEBPACK_IMPORTED_MODULE_16__.CD)(model), modelDataSourcesArray = (0, 
                    _powerbi_legacy_Explore_contracts_dataSource__WEBPACK_IMPORTED_MODULE_16__.yd)([ dsrDataSource ]);
                    if (!_.isEmpty(null == exploration ? void 0 : exploration.modelExtensions)) {
                        var schemaName = _powerbi_legacy_Explore_constants__WEBPACK_IMPORTED_MODULE_17__.eM, dataSourceName = dsrDataSource.name;
                        modelDataSourcesArray.push({
                            type: _powerbi_Typings_Modern_Shared_Explore_typings__WEBPACK_IMPORTED_MODULE_18__.K,
                            id: void 0,
                            name: schemaName,
                            extends: dataSourceName,
                            exploration: {
                                schemaName,
                                extends: dataSourceName,
                                getModelExtensions: function() {
                                    return exploration.modelExtensions;
                                },
                                getDataSourceVariables: function() {
                                    return exploration.dataSourceVariables;
                                }
                            }
                        });
                    }
                    this.dataSources.set(modelDataSourcesArray);
                }
            }, InterpretListener;
        }();
        function getTermsBindingTrainingInfo(interpretResult) {
            if (interpretResult) {
                var command = interpretResult.command;
                return {
                    spans: interpretResult.spans,
                    correctedUtterance: interpretResult.correctionInfo && interpretResult.correctionInfo.correctedUtterance,
                    linguisticSchemaJson: command && command.linguisticSchemaJson,
                    linguisticSchemaItems: command && command.linguisticSchemaItems,
                    inferredTermMetadata: command && command.inferredTermMetadata
                };
            }
        }
        var ObservableUpdateManager = function() {
            function ObservableUpdateManager(timeout) {
                this.timeout = timeout, this.interpretResult$ = new rxjs__WEBPACK_IMPORTED_MODULE_19__.X(void 0);
            }
            return ObservableUpdateManager.prototype.getObservable = function() {
                return this.interpretResult$.asObservable();
            }, ObservableUpdateManager.prototype.pushUpdate = function(update) {
                this.throttler && clearTimeout(this.throttler), this.throttler = void 0, this.throttledUpdate = void 0, 
                this.interpretResult$.next(update), this.throttler = this.startThrottler();
            }, ObservableUpdateManager.prototype.pushThrottledUpdate = function(update) {
                this.throttler ? this.throttledUpdate = update : (this.interpretResult$.next(update), 
                this.throttler = this.startThrottler());
            }, ObservableUpdateManager.prototype.startThrottler = function() {
                var _this = this;
                return setTimeout(function() {
                    _this.throttledUpdate ? (_this.interpretResult$.next(_this.throttledUpdate), _this.throttledUpdate = void 0, 
                    _this.throttler = _this.startThrottler()) : _this.throttler = void 0;
                }, this.timeout);
            }, ObservableUpdateManager;
        }();
    },
    91592: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            H: function() {
                return getIsQnaAllowedInfo;
            }
        });
        var _powerbi_legacy_JsCommon_Utility_BrowserUtility__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(16808);
        function getIsQnaAllowedInfo(explorationCapabilities, modelSchema, qnaSupportabilityService) {
            return (0, _powerbi_legacy_JsCommon_Utility_BrowserUtility__WEBPACK_IMPORTED_MODULE_0__.rO)() ? {
                isAllowed: !1,
                disallowedReason: "featureDisabledInIE"
            } : qnaSupportabilityService.appShouldHideQnaFeature() ? {
                isAllowed: !1,
                disallowedReason: "featureDisabledInApp"
            } : _.some(null == modelSchema ? void 0 : modelSchema.schemas, function(schema) {
                return !schema.isExtensionSchema && !_.isEmpty(schema.entities);
            }) ? qnaSupportabilityService.modelSupportsQna(modelSchema, explorationCapabilities) ? qnaSupportabilityService.modelHasQnaEnabled(modelSchema, explorationCapabilities) ? {
                isAllowed: !0
            } : {
                isAllowed: !1,
                disallowedReason: "qnaNotEnabled"
            } : {
                isAllowed: !1,
                disallowedReason: "qnaNotSupported"
            } : {
                isAllowed: !1,
                disallowedReason: "noModel"
            };
        }
    },
    74857: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            D4: function() {
                return getBaseThemeCollection;
            },
            ET: function() {
                return getQnaNotAllowedInIEError;
            },
            Kt: function() {
                return getVisualTitle;
            },
            Nj: function() {
                return qnaQueryMetadataToQueryMetadata;
            },
            Su: function() {
                return getThemeCollection;
            },
            Vq: function() {
                return getInterpretResultVisualSortHelper;
            },
            aZ: function() {
                return showVisualErrorDetails;
            },
            fI: function() {
                return customSortInterpretResultVisual;
            },
            y_: function() {
                return getInterpretResultVisual;
            }
        });
        var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(81337), _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(62458), _powerbi_legacy_Explore_util_themeUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(38701), _powerbi_legacy_Explore_util_visualContainerUtils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(60661), _powerbi_legacy_ExploreUI_utils_errorDetailsUtility__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(18503), _powerbi_legacy_PowerBIVisuals_VisualsCommon_tracing_traceType__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(50547), _powerbi_ExploreUI__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(2240);
        function getQnaNotAllowedInIEError(localizationService) {
            return {
                code: "qnaNotAllowedInIE",
                fixableError: 0,
                hideSeeDetails: !0,
                details: {
                    message: localizationService.get("Qna_NotSupportedInIE"),
                    displayableErrorInfo: void 0
                },
                source: "User"
            };
        }
        function qnaQueryMetadataToQueryMetadata(qnaQueryMetadata) {
            if (qnaQueryMetadata) return {
                Filters: _.map(qnaQueryMetadata.filters, function(f) {
                    return {
                        Restatement: f.Restatement,
                        type: void 0
                    };
                }),
                Select: _.map(qnaQueryMetadata.selects, function(s) {
                    return {
                        Restatement: s.restatement
                    };
                })
            };
        }
        function showVisualErrorDetails(error, errorService, localizationService) {
            _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(error, "Expect this to be called only when the given error is defined.");
            var errorDetails = error.details;
            if (errorDetails) {
                var hasAddtionalErrorInfo = (0, _powerbi_legacy_ExploreUI_utils_errorDetailsUtility__WEBPACK_IMPORTED_MODULE_1__.jx)(errorDetails), title = localizationService.get("ServiceError_CannotLoadVisual"), message = errorDetails.message, additionalErrors = [];
                if (hasAddtionalErrorInfo && (title = errorDetails.displayableErrorInfo[0].errorInfoKey, 
                message = errorDetails.displayableErrorInfo[0].errorInfoValue, errorDetails.displayableErrorInfo.length > 1)) for (var i = 1; i < errorDetails.displayableErrorInfo.length; i++) additionalErrors.push(errorDetails.displayableErrorInfo[i]);
                _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assert(function() {
                    return null != error.source;
                }, "Expect error.source is not null."), errorService.error(message, error.code, {
                    debugErrorInfo: errorDetails.debugErrorInfo,
                    displayableErrorInfo: additionalErrors,
                    title,
                    source: error.source,
                    level: _powerbi_legacy_PowerBIVisuals_VisualsCommon_tracing_traceType__WEBPACK_IMPORTED_MODULE_2__.U.Error
                });
            }
        }
        function getThemeCollection(explorationNavigation, featureSwitchService) {
            var currentExploration = explorationNavigation.getCurrentExploration(), themeCollection = null == currentExploration ? void 0 : currentExploration.themeCollection;
            return _.isEmpty(themeCollection) ? getBaseThemeCollection(featureSwitchService) : themeCollection;
        }
        function getBaseThemeCollection(featureSwitchService) {
            return {
                baseTheme: (0, _powerbi_legacy_Explore_util_themeUtils__WEBPACK_IMPORTED_MODULE_3__.DC)(featureSwitchService)
            };
        }
        function getInterpretResultVisual(interpretResult, conceptualSchemaProxy, dataSourcesService, visualRecommendationService) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(this, void 0, void 0, function() {
                var command, query, selects, queryMetadata, exprMetadata, filterMetadata, schema, result;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function(_a) {
                    switch (_a.label) {
                      case 0:
                        return (query = null == (command = null == interpretResult ? void 0 : interpretResult.command) ? void 0 : command.query) ? (selects = query.select(), 
                        queryMetadata = command.queryMetadata, exprMetadata = _.map(null == queryMetadata ? void 0 : queryMetadata.selects, function(selectMetadata, index) {
                            return {
                                expression: selects[index].expr,
                                type: selectMetadata.type,
                                isGroup: selectMetadata.isGroup,
                                defaultLabel: selectMetadata.defaultLabel,
                                isExplicitSortBy: selectMetadata.isExplicitSortBy
                            };
                        }), filterMetadata = null == queryMetadata ? void 0 : queryMetadata.filters, [ 4, conceptualSchemaProxy.get(dataSourcesService.get()) ]) : [ 2 ];

                      case 1:
                        return schema = _a.sent(), (result = visualRecommendationService.recommendVisuals(query, schema, {
                            numberOfResults: 1,
                            visualType: _.first(command.suggestedVisualTypes),
                            filterMetadata,
                            exprMetadata,
                            addDefaultFormatting: !0,
                            allowTooltipMeasures: !0
                        })) ? (_powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assert(function() {
                            return 1 === _.size(result.visualContainers);
                        }, "Expected 1 result"), [ 2, result.visualContainers[0] ]) : [ 2 ];
                    }
                });
            });
        }
        function getVisualTitle(visualContainer, conceptualSchemaProxy, dataSourcesService, displayNameService, visualPlugin, forceGenerateTitle, displayIndividualValuesLimit) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(this, void 0, void 0, function() {
                var schema, singleVisualConfig, displayNameOptions;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function(_a) {
                    switch (_a.label) {
                      case 0:
                        return [ 4, conceptualSchemaProxy.get(dataSourcesService.get()) ];

                      case 1:
                        return schema = _a.sent(), singleVisualConfig = (0, _powerbi_legacy_Explore_util_visualContainerUtils__WEBPACK_IMPORTED_MODULE_5__.PQ)(visualContainer), 
                        displayNameOptions = {
                            multiAndLastValueConnectorSpecialResourceKey: "AndConjunction_MultiItemsAndOne",
                            displayIndividualValuesLimitSetting: null != displayIndividualValuesLimit ? {
                                limit: displayIndividualValuesLimit,
                                limitedValueShownResourceKey: "AndOthers_SingleItem",
                                multiLimitedValuesShownResourceKey: "AndOthers_MultipleItem"
                            } : void 0
                        }, [ 2, displayNameService.getVisualTitle(singleVisualConfig, schema, visualPlugin.capabilities(singleVisualConfig.visualType), void 0, displayNameOptions, forceGenerateTitle) ];
                    }
                });
            });
        }
        function getInterpretResultVisualSortHelper(visualContainer, conceptualSchemaProxy, dataSourcesService, sortService, undoRedoService, visualAuthoringOpService, visualPlugin) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(this, void 0, void 0, function() {
                var sortableFieldsResult, sortSetting;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function(_a) {
                    switch (_a.label) {
                      case 0:
                        return [ 4, getSortableFields(visualContainer, conceptualSchemaProxy, dataSourcesService, sortService) ];

                      case 1:
                        return sortableFieldsResult = _a.sent(), sortSetting = {
                            defaultSortBehavior: getDefaultSortBehavior(visualContainer, visualPlugin),
                            sortableFields: null == sortableFieldsResult ? void 0 : sortableFieldsResult.sortableFields,
                            sortGroups: null == sortableFieldsResult ? void 0 : sortableFieldsResult.sortGroups
                        }, [ 2, new _powerbi_ExploreUI__WEBPACK_IMPORTED_MODULE_6__.B(sortSetting, visualContainer, sortService, undoRedoService, visualAuthoringOpService) ];
                    }
                });
            });
        }
        function customSortInterpretResultVisual(visualContainer, sortHelper, sortDescriptors) {
            if (!_.isEmpty(sortDescriptors)) {
                var selectExprs = (0, _powerbi_legacy_Explore_util_visualContainerUtils__WEBPACK_IMPORTED_MODULE_5__.oJ)(visualContainer);
                _.isEmpty(selectExprs) || sortHelper.applySortByFields(sortDescriptors);
            }
        }
        function getDefaultSortBehavior(visualContainer, visualPlugin) {
            var _a, visualCapabilities = (0, _powerbi_legacy_Explore_util_visualContainerUtils__WEBPACK_IMPORTED_MODULE_5__.cj)(visualContainer, visualPlugin);
            return !!visualCapabilities && !!(null === (_a = visualCapabilities.sorting) || void 0 === _a ? void 0 : _a.default);
        }
        function getSortableFields(visualContainer, conceptualSchemaProxy, dataSourcesService, sortService) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(this, void 0, void 0, function() {
                var dataSourcesArray, singleVisualConfig, query, schema;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function(_b) {
                    switch (_b.label) {
                      case 0:
                        if (!(dataSourcesArray = dataSourcesService.get())) return [ 2 ];
                        _b.label = 1;

                      case 1:
                        return _b.trys.push([ 1, 3, , 4 ]), singleVisualConfig = (0, _powerbi_legacy_Explore_util_visualContainerUtils__WEBPACK_IMPORTED_MODULE_5__.PQ)(visualContainer), 
                        query = (0, _powerbi_legacy_Explore_util_visualContainerUtils__WEBPACK_IMPORTED_MODULE_5__.Xf)(visualContainer), 
                        [ 4, conceptualSchemaProxy.get(dataSourcesArray) ];

                      case 2:
                        return schema = _b.sent(), [ 2, sortService.getSortableFields({
                            query,
                            schema,
                            visualType: singleVisualConfig.visualType,
                            columnProperties: singleVisualConfig.columnProperties,
                            compiledMappings: []
                        }) ];

                      case 3:
                        return _b.sent(), [ 3, 4 ];

                      case 4:
                        return [ 2 ];
                    }
                });
            });
        }
    },
    35988: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            AU: function() {
                return getUserErrorMessage;
            },
            B4: function() {
                return wireV3ResponseToClientSuggestedQuestionsResponse;
            },
            C2: function() {
                return clientToWireModelScopes;
            },
            Cb: function() {
                return wireV3ResponseToClientProbeResponse;
            },
            Fm: function() {
                return getRetriableClientWarningDesktop;
            },
            NG: function() {
                return clientToWireInterpretRequestDesktop;
            },
            R1: function() {
                return wireV3ResponseToClientInterpretResponse;
            },
            Tm: function() {
                return getUserWarningMessageKeys;
            },
            hj: function() {
                return hostServiceErrorCodeToQnaErrorCode;
            },
            qV: function() {
                return getRetriableClientWarningDesktopToWeb;
            },
            tc: function() {
                return clientToWireInterpretRequestDesktopToWeb;
            },
            vr: function() {
                return getQueryUnSupportedLevelWarningsInfo;
            }
        });
        var _a, _b, _c, _d, _e, _f, _powerbi_Insights__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(70940), _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(3468), _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(62458), _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_StandaloneUtility3__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(43286), _powerbi_legacy_PowerBIVisuals_VisualsData_types_valueType__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(80777), interpretDiagnosticCodeToInterpretWarningMappings = ((_a = {}).GeneratedLinguisticSchema = 0, 
        _a.DataIndexBuildingCancelled = 16, _a.DataIndexMissingStatistics = 17, _a.DataIndexNotReady = 8, 
        _a.DataIndexSizeLimitReached = 15, _a.DataIndexUpdateFailure = 10, _a.DomainModelNotReady = 2, 
        _a.DomainModelPartialLoad = 3, _a.DomainModelUpdateFailure = 9, _a.EmptyLinguisticSchema = 1, 
        _a.InterpretationSemanticError = 4, _a.InterpretationSemanticWarning = 5, _a.InterpretCancelled = 18, 
        _a.InvalidTextualEntity = 6, _a.LinguisticSchemaTruncated = 14, _a.MissingOrInvalidPodParameters = 13, 
        _a.QueryAggregateNotSupported = 19, _a.QueryMedianNotSupported = 20, _a.QueryPercentileNotSupported = 21, 
        _a.QueryScopedEvalNotSupported = 22, _a.QuerySubqueryRegroupingNotSupported = 23, 
        _a.StaleDataIndex = 12, _a.StaleDomainModel = 11, _a.RequiresNewerVersion = 7, _a.DataIndexVersionIsOld = 24, 
        _a.QueryGroupByTableNotSupported = 25, _a.QueryNotSupported = 26, _a.NextBestInterpretation = 27, 
        _a), interpretDiagnosticCodeToQnaErrorCodeMappings = ((_b = {}).ActivationFailure = "ActivationFailure", 
        _b.CloudRlsModelAccessDenied = "CloudRlsModelAccessDenied", _b.DataIndexBuildFailure = "DataIndexBuildFailure", 
        _b.DomainModelLoadFailure = "DomainModelLoadFailure", _b.ExternalModelAccessDenied = "ExternalModelAccessDenied", 
        _b.GenericRequestFailure = "GenericRequestFailure", _b.LinguisticSchemaLoadFailure = "LinguisticSchemaLoadFailure", 
        _b.ModelNotFound = "ModelNotFound", _b.ModelQnaNotEnabled = "ModelQnaNotEnabled", 
        _b.ModelQnaNotSupported = "ModelQnaNotSupported", _b.RequiresNewerVersion = "RequiresNewerVersion", 
        _b.SchemaLanguageNotSupported = "SchemaLanguageNotSupported", _b.MissingRuntimeModule = "MissingRuntimeModule", 
        _b.VerifyRuntimeFailure = "VerifyRuntimeFailure", _b.DataIndexMissingAllStatistics = "DataIndexMissingAllStatistics", 
        _b), hostSpecificInterpretWarningToUserMessageKeyMappings_Desktop = ((_c = {})[16] = "Qna_Warning_DataIndexIncomplete_Desktop", 
        _c[15] = "Qna_Warning_DataIndexIncomplete_Desktop", _c[14] = "Qna_Warning_LinguisticSchemaTruncated_Desktop", 
        _c), hostSpecificInterpretWarningToUserMessageKeyMappings_Service = ((_d = {})[16] = "Qna_Warning_DataIndexIncomplete_Service", 
        _d[15] = "Qna_Warning_DataIndexIncomplete_Service", _d[14] = "Qna_Warning_LinguisticSchemaTruncated_Service", 
        _d), retriableClientWarnings_Desktop = [ 2, 8, 11, 12, 24 ], retriableClientWarnings_Service = [ 2, 8 ], interpretWarningToUserMessageKeyMappings = ((_e = {})[1] = "Qna_NotAllowedForReport_WithoutModel", 
        _e[2] = "Qna_Explore_WarningBuildingLanguageModel", _e[7] = "Qna_Warning_RequiresNewerVersion", 
        _e[8] = "Qna_Explore_WarningIndexing", _e[9] = "Qna_Warning_ModelUpdateFailure", 
        _e[10] = "Qna_Warning_DataIndexUpdateFailure", _e[11] = "Qna_Warning_StaleModel", 
        _e[12] = "Qna_Warning_StaleIndex", _e[17] = "Qna_Warning_DataIndexMissingStatistics", 
        _e[19] = "Qna_Warning_UnsupportedFunction", _e[20] = "Qna_Warning_UnsupportedFunction", 
        _e[21] = "Qna_Warning_UnsupportedFunction", _e[22] = "Qna_Warning_UnsupportedFunction", 
        _e[23] = "Qna_Warning_UnsupportedFunction", _e[25] = "Qna_Warning_QueryGroupByTableNotSupported", 
        _e[26] = "Qna_Warning_QueryNotSupported", _e[27] = "Qna_Warning_NextBestInterpretation", 
        _e), qnaErrorCodeToUserMessageKeyMappings = ((_f = {}).FeatureNotAvailable = "Qna_Error_GenericRequestFailure", 
        _f.NetworkConnectionIssue = "Qna_Error_NetworkIssue", _f.RequiresNewerVersion = "Qna_Error_RequiresNewerVersion", 
        _f.ModelNotFound = "Qna_Error_ModelNotFound", _f.ModelQnaNotEnabled = "Qna_Error_ModelQnaNotEnabled", 
        _f.ModelQnaNotSupported = "Qna_Error_ModelQnaNotSupported", _f.MissingRuntimeModule = "Qna_Explore_MissingBinaries", 
        _f.VerifyRuntimeFailure = "Qna_Explore_MissingBinaries", _f.SchemaLanguageNotSupported = "Qna_NotAllowedForReport_QnaNotSupported", 
        _f.SessionIsInactive = "Qna_Error_GenericRequestFailure", _f.GenericRequestFailure = "Qna_Error_GenericRequestFailure", 
        _f.DataIndexBuildFailure = "Qna_Explore_WarningFailedIndexing", _f.CloudRlsModelAccessDenied = "Tile_RLS_NoAccess", 
        _f.ExternalModelAccessDenied = "Qna_Explore_ModelAccessDenied_WithoutSpecifyOwner", 
        _f.DataIndexMissingAllStatistics = "Qna_Error_DataIndexMissingAllStatistics", _f), queryUnSupportedLevelWarnings = [ 19, 20, 22, 21, 23, 25, 26 ];
        function wireV3ResponseToClientSuggestedQuestionsResponse(wireV3Response) {
            _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(wireV3Response, "Expect the given wireV3Response to be defined");
            var clientError = getClientErrorFromWireV3Response(wireV3Response);
            if (clientError) return {
                error: clientError
            };
            var wireResult = _.first(wireV3Response.Results), interpretation = _.first(null == wireResult ? void 0 : wireResult.Interpretations);
            return {
                result: {
                    utterances: _.map(null == interpretation ? void 0 : interpretation.SuggestedUtterances, function(utterance) {
                        return {
                            text: utterance.Text,
                            source: utterance.Source
                        };
                    }),
                    warnings: wireV3InterpretDiagnosticMessageToClientWarnings(null == wireResult ? void 0 : wireResult.DiagnosticMessages)
                }
            };
        }
        function wireV3ResponseToClientInterpretResponse(utterance, desiredInterpretationsCount, requestId, wireV3Response) {
            _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(wireV3Response, "Expect the given wireV3Response to be defined");
            var clientResult, warnings, clientError = getClientErrorFromWireV3Response(wireV3Response);
            if (!clientError) {
                var firstWireResult_1 = _.first(wireV3Response.Results);
                warnings = wireV3InterpretDiagnosticMessageToClientWarnings(null == firstWireResult_1 ? void 0 : firstWireResult_1.DiagnosticMessages);
                var interpretations = _.take(null == firstWireResult_1 ? void 0 : firstWireResult_1.Interpretations, null != desiredInterpretationsCount ? desiredInterpretationsCount : 1);
                _.isEmpty(interpretations) || (clientResult = _.map(interpretations, function(interpretation) {
                    var _a, _b, _c;
                    return {
                        restatement: interpretation.Restatement,
                        databaseName: null === (_a = firstWireResult_1.Context) || void 0 === _a ? void 0 : _a.DatabaseName,
                        virtualServerName: null === (_b = firstWireResult_1.Context) || void 0 === _b ? void 0 : _b.VirtualServerName,
                        command: wireToClientCommand(interpretation.Command),
                        correctionInfo: generateUtteranceCorrectionInfo(interpretation),
                        spans: wireToClientSpanCollection(utterance, interpretation.Spans),
                        language: firstWireResult_1.Language,
                        modelLanguage: firstWireResult_1.ModelLanguage,
                        modelOwner: null === (_c = firstWireResult_1.Context) || void 0 === _c ? void 0 : _c.ModelOwner,
                        usedAgents: _.map(interpretation.UsedAgents, function(a) {
                            return a;
                        }),
                        score: interpretation.Score,
                        relevantSchemaElements: convertWireSchemaElementsToClientSchemaElements(firstWireResult_1.RelevantSchemaElements)
                    };
                }));
            }
            return {
                utterance,
                requestId,
                error: clientError,
                results: clientResult,
                warnings
            };
        }
        function convertWireSchemaElementsToClientSchemaElements(wireSchemaElements) {
            if (null != wireSchemaElements && (null != wireSchemaElements.Entities || null != wireSchemaElements.Relationships)) {
                var converter = function(wire) {
                    return {
                        description: wire.Description,
                        score: wire.Score
                    };
                };
                return {
                    entities: _.map(wireSchemaElements.Entities, converter),
                    relationships: _.map(wireSchemaElements.Relationships, converter)
                };
            }
        }
        function wireV3ResponseToClientProbeResponse(wireV3Response) {
            _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(wireV3Response, "Expect the given wireV3Response to be defined");
            var clientError = getClientErrorFromWireV3Response(wireV3Response);
            if (clientError) return {
                error: clientError
            };
            var firstWireResult = _.first(wireV3Response.Results);
            return {
                results: _.map(null == firstWireResult ? void 0 : firstWireResult.Interpretations, function(_interpretation) {
                    return {
                        language: firstWireResult.Language
                    };
                })
            };
        }
        function getWireV3ResponseClientWarnings(wireV3Response) {
            _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(wireV3Response, "Expect the given wireV3Response to be defined");
            var firstWireResult = _.first(wireV3Response.Results);
            return wireV3InterpretDiagnosticMessageToClientWarnings(null == firstWireResult ? void 0 : firstWireResult.DiagnosticMessages);
        }
        function getRetriableClientWarningDesktop(wireResponse) {
            _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(wireResponse, "Expect the given wireResponse to be defined");
            var warnings = getWireV3ResponseClientWarnings(wireResponse);
            return _.find(retriableClientWarnings_Desktop, function(retryClientWarning) {
                return _.includes(warnings, retryClientWarning);
            });
        }
        function getRetriableClientWarningDesktopToWeb(wireResponse) {
            return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(wireResponse, "Expect the given wireResponse to be defined"), 
            function(wireResponse) {
                _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(wireResponse, "Expect the given wireResponse to be defined");
                var warnings = getWireV3ResponseClientWarnings(wireResponse);
                return _.find(retriableClientWarnings_Service, function(retryClientWarning) {
                    return _.includes(warnings, retryClientWarning);
                });
            }(wireResponse);
        }
        function wireToClientSpanCollection(utterance, wireSpans) {
            if (_powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(utterance, "utterance"), 
            _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertAnyValue(wireSpans, "wireSpans"), 
            wireSpans) {
                _.isEmpty(utterance) && _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assert(function() {
                    return _.every(wireSpans, function(wireSpan) {
                        return 0 === wireSpan.Length;
                    });
                }, "utterance is empty, every span should have zero length");
                var baseSpans = [], overlapSpans = [];
                return _.forEach(wireSpans, function(wireSpan) {
                    5 !== wireSpan.Resolution || wireSpan.Binding ? baseSpans.push(new SpanInternal(utterance, wireSpan, !1)) : overlapSpans.push(new SpanInternal(utterance, wireSpan, !0));
                }), _.isEmpty(overlapSpans) || _.forEach(overlapSpans, function(overlapSpan) {
                    _.forEach(baseSpans, function(baseSpan) {
                        if (function(span, overlapSpan) {
                            return overlapSpan.startIndex <= span.startIndex && overlapSpan.endExcludingIndex > span.startIndex || overlapSpan.startIndex < span.endExcludingIndex && overlapSpan.endExcludingIndex > span.endExcludingIndex || span.startIndex <= overlapSpan.startIndex && span.endExcludingIndex >= overlapSpan.endExcludingIndex || overlapSpan.startIndex <= span.startIndex && overlapSpan.endExcludingIndex >= span.endExcludingIndex;
                        }(baseSpan, overlapSpan)) baseSpan.overlapSpans.push(overlapSpan); else if (overlapSpan.endExcludingIndex < baseSpan.startIndex) return;
                    });
                }), baseSpans;
            }
        }
        function hostServiceErrorCodeToQnaErrorCode(errorCode) {
            return "BadGateway" === errorCode || "ConnectFailure" === errorCode || "ConnectionClosed" === errorCode || "GatewayTimeout" === errorCode || "KeepAliveFailure" === errorCode || "NameResolutionFailure" === errorCode || "NetworkUnavailable" === errorCode || "ProxyAuthenticationRequired" === errorCode || "ProxyNameResolutionFailure" === errorCode || "RequestTimeout" === errorCode || "ServiceUnvailable" === errorCode || "Timeout" === errorCode || "AccessDenied" === errorCode ? "NetworkConnectionIssue" : "FeatureNotAvailableError" === errorCode ? "FeatureNotAvailable" : "GenericRequestFailure";
        }
        function clientToWireInterpretRequestDesktop(request) {
            var clientContract, wireRequest = clientToWireInterpretRequestCommon(request);
            return request && (wireRequest.Context = {
                ReportMetadata: (clientContract = request.reportMetadata, clientContract ? {
                    LinguisticSchema: clientContract.linguisticSchema,
                    Pods: _.map(clientContract.pods, function(p) {
                        return {
                            Name: p.name,
                            CortanaEnabled: p.cortanaEnabled,
                            Parameters: _.map(p.parameters, function(param) {
                                return {
                                    Name: param.name,
                                    TargetColumn: param.targetColumn,
                                    TargetEntity: param.targetEntity
                                };
                            })
                        };
                    })
                } : void 0)
            }), wireRequest;
        }
        function clientToWireInterpretRequestDesktopToWeb(request, virtualServerName, databaseName) {
            var feedback, wireRequest = clientToWireInterpretRequestCommon(request);
            return wireRequest.Context = {
                ModelScopes: [ {
                    VirtualServerName: virtualServerName,
                    DatabaseName: databaseName
                } ],
                Tags: null == request ? void 0 : request.tags,
                ImpersonatedUserPrincipalName: null == request ? void 0 : request.impersonatedUserPrincipalName,
                ImpersonatedRoles: null == request ? void 0 : request.impersonatedRoles,
                Feedback: (feedback = null == request ? void 0 : request.feedback, feedback ? {
                    Sentiment: feedback.sentiment,
                    Reason: feedback.reason,
                    Comment: feedback.comment
                } : void 0)
            }, wireRequest.Options || (wireRequest.Options = {}), wireRequest;
        }
        function clientToWireInterpretRequestCommon(request) {
            return request ? {
                Version: "3.3.0",
                Utterance: request.utterance,
                Spans: _.map(request.spans, function(span) {
                    var wireSpan = {
                        StartIndex: span.startIndex,
                        Length: span.endExcludingIndex - span.startIndex
                    };
                    return span.inferredTerm && (wireSpan.Binding = {
                        InferredTerm: clientToWireInferredTermBinding(span.inferredTerm)
                    }), wireSpan;
                }),
                Options: clientToWireInterpretRequestOptions(request),
                LinguisticSchemaJson: request.linguisticSchemaJson,
                InferredTermBinding: clientToWireInferredTermBinding(request.inferredTermBinding),
                Intent: clientToWireIntent(request.intent),
                IsCommitted: request.isCommitted,
                DesiredInterpretationsCount: request.desiredInterpretationsCount,
                GroupId: request.groupId,
                GroupSequenceNumber: request.groupSequenceNumber
            } : {
                Version: "3.3.0",
                Utterance: ""
            };
        }
        function clientToWireIntent(intentContainer) {
            if (null == intentContainer ? void 0 : intentContainer.defineCalculation) return {
                DefineCalculation: {
                    Language: intentContainer.defineCalculation.language,
                    Options: intentContainer.defineCalculation.options
                }
            };
        }
        function clientToWireInterpretRequestOptions(request) {
            return null == (null == request ? void 0 : request.options) ? {} : {
                QueryMetadata: (0, _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_StandaloneUtility3__WEBPACK_IMPORTED_MODULE_1__.yE)(request.options, 2),
                VisualConfiguration: (0, _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_StandaloneUtility3__WEBPACK_IMPORTED_MODULE_1__.yE)(request.options, 4),
                SupportPodQueries: (0, _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_StandaloneUtility3__WEBPACK_IMPORTED_MODULE_1__.yE)(request.options, 8),
                IncludeRelevantSchemaElements: (0, _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_StandaloneUtility3__WEBPACK_IMPORTED_MODULE_1__.yE)(request.options, 32),
                Spans: (0, _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_StandaloneUtility3__WEBPACK_IMPORTED_MODULE_1__.yE)(request.options, 64),
                Diagnostics: (0, _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_StandaloneUtility3__WEBPACK_IMPORTED_MODULE_1__.yE)(request.options, 128),
                FrameTree: !1,
                AllowFollowUpQuestion: !1,
                AllowInsightQueries: (0, _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_StandaloneUtility3__WEBPACK_IMPORTED_MODULE_1__.yE)(request.options, 512),
                InferUnknownModelTerms: (0, _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_StandaloneUtility3__WEBPACK_IMPORTED_MODULE_1__.yE)(request.options, 4096),
                AllowPlaceholderSuggestions: !1,
                SuggestFollowUp: !1,
                SuggestedUtterances: (0, _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_StandaloneUtility3__WEBPACK_IMPORTED_MODULE_1__.yE)(request.options, 2048),
                SkipCompletion: request.skipCompletion,
                SingleAnswerBias: (0, _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_StandaloneUtility3__WEBPACK_IMPORTED_MODULE_1__.yE)(request.options, 8192),
                SuggestedDefineCalculationUtterances: (0, _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_StandaloneUtility3__WEBPACK_IMPORTED_MODULE_1__.yE)(request.options, 16384),
                UseLlmParser: (0, _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_StandaloneUtility3__WEBPACK_IMPORTED_MODULE_1__.yE)(request.options, 65536)
            };
        }
        function clientToWireModelScopes(scopes) {
            return _.map(scopes, function(scope) {
                var _a, _b;
                return {
                    VirtualServerName: null === (_a = scope.model) || void 0 === _a ? void 0 : _a.vsName,
                    DatabaseName: null === (_b = scope.model) || void 0 === _b ? void 0 : _b.dbName,
                    ReportIds: scope.reportIds
                };
            });
        }
        function getQueryUnSupportedLevelWarningsInfo(warnings) {
            if (_.indexOf(warnings, 27) >= 0) return [];
            var specialWarnings = _.intersection(warnings, queryUnSupportedLevelWarnings);
            return _.map(specialWarnings, function(specialWarning) {
                return {
                    warning: specialWarning,
                    messageKey: interpretWarningToUserMessageKeyMappings[specialWarning]
                };
            });
        }
        function getUserWarningMessageKeys(warnings, qnaProxyPath) {
            if (!_.isEmpty(warnings)) {
                _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assert(function() {
                    return !_.isEmpty(qnaProxyPath);
                }, "Must provide a valid qnaProxyPath");
                for (var userMessages = [], hostSpecificWarningToUserMessageMappings = "@powerbi/Qna/qnadesktop.module#QnaDesktopModule" === qnaProxyPath ? hostSpecificInterpretWarningToUserMessageKeyMappings_Desktop : hostSpecificInterpretWarningToUserMessageKeyMappings_Service, _i = 0, warnings_1 = warnings; _i < warnings_1.length; _i++) {
                    var warning = warnings_1[_i];
                    if (hostSpecificWarningToUserMessageMappings) {
                        var hostSpecificUserMessage = hostSpecificWarningToUserMessageMappings[warning];
                        if (hostSpecificUserMessage) {
                            userMessages.push(hostSpecificUserMessage);
                            continue;
                        }
                    }
                    var hostIndependantUserMessage = interpretWarningToUserMessageKeyMappings[warning];
                    hostIndependantUserMessage && userMessages.push(hostIndependantUserMessage);
                }
                return _.uniq(userMessages);
            }
        }
        function getUserErrorMessage(errorCode, localizationService) {
            return localizationService.get(qnaErrorCodeToUserMessageKeyMappings[errorCode] || "Qna_Error_GenericRequestFailure");
        }
        function getClientErrorFromWireV3Response(wireV3Response) {
            var errorLevelDiagnosticCode, errorLevelDiagnosticMessage;
            if (_powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(wireV3Response, "Expect the given wireV3Response to be defined"), 
            "3.3.0" !== wireV3Response.Version) errorLevelDiagnosticCode = "RequiresNewerVersion"; else {
                var firstWireResult = _.first(wireV3Response.Results);
                if (!firstWireResult) return;
                errorLevelDiagnosticCode = null == (errorLevelDiagnosticMessage = _.find(firstWireResult.DiagnosticMessages, function(msg) {
                    return 1 === msg.Severity;
                })) ? void 0 : errorLevelDiagnosticMessage.Code;
            }
            if (null != errorLevelDiagnosticCode) {
                var qnaErrorCode = function(diagnosticCode) {
                    var qnaErrorCode = interpretDiagnosticCodeToQnaErrorCodeMappings[diagnosticCode];
                    return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assert(function() {
                        return null != qnaErrorCode;
                    }, "InterpretDiagnosticCodeToQnaErrorCodeMappings should contain key " + diagnosticCode), 
                    qnaErrorCode || (qnaErrorCode = "NoClientHandling"), qnaErrorCode;
                }(errorLevelDiagnosticCode), qnaError = {
                    errorCode: qnaErrorCode,
                    source: "GenericRequestFailure" === qnaErrorCode ? "PowerBI" : "User",
                    message: null == errorLevelDiagnosticMessage ? void 0 : errorLevelDiagnosticMessage.Message,
                    stackTrace: null == errorLevelDiagnosticMessage ? void 0 : errorLevelDiagnosticMessage.StackTrace
                };
                return "NoClientHandling" === qnaError.errorCode && (qnaError.message = _.isEmpty(qnaError.message) ? errorLevelDiagnosticCode + "." : errorLevelDiagnosticCode + ". " + qnaError.message), 
                qnaError;
            }
        }
        function wireV3InterpretDiagnosticMessageToClientWarnings(diagnosticMessages) {
            if (!_.isEmpty(diagnosticMessages)) {
                for (var warningsResult = [], _loop_1 = function(warning) {
                    _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assert(function() {
                        return null != interpretDiagnosticCodeToInterpretWarningMappings[warning.Code];
                    }, 'unknown mapping to convert InterpretDiagnosticMessage "' + warning.Code + '" to client interpret warning code'), 
                    interpretDiagnosticCodeToInterpretWarningMappings[warning.Code] && warningsResult.push(interpretDiagnosticCodeToInterpretWarningMappings[warning.Code]);
                }, _i = 0, warnings_2 = diagnosticMessages.filter(function(m) {
                    return 2 === m.Severity;
                }); _i < warnings_2.length; _i++) _loop_1(warnings_2[_i]);
                return warningsResult;
            }
        }
        var SpanInternal = function() {
            return function(utterance, wireSpan, isOverlappingSpan) {
                var spanText, spanStartIndex;
                this.utterance = utterance, this.wireSpan = wireSpan, this.isOverlappingSpan = isOverlappingSpan, 
                this.startIndex = wireSpan.StartIndex, this.endExcludingIndex = wireSpan.StartIndex + wireSpan.Length, 
                this.text = utterance.substr(wireSpan.StartIndex, wireSpan.Length), this.correctedStartIndex = wireSpan.CorrectedStartIndex, 
                this.correctedEndExcludingIndex = null != wireSpan.CorrectedStartIndex ? wireSpan.CorrectedStartIndex + wireSpan.CorrectedLength : void 0, 
                this.resolution = wireSpan.Resolution, this.isOverlapping = isOverlappingSpan, this.tokens = (spanText = this.text, 
                spanStartIndex = this.startIndex, _.map(wireSpan.Tokens, function(wireToken) {
                    var tokenStartIndexInSpan = wireToken.StartIndex - spanStartIndex;
                    return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assert(function() {
                        return _.inRange(tokenStartIndexInSpan, 0, _.size(spanText));
                    }, "Expect each token.StartIndex is a valid index with the given spanText and spanStartIndex"), 
                    _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assert(function() {
                        return !_.isEmpty(_.trim(spanText.substr(tokenStartIndexInSpan, wireToken.Length)));
                    }, "Expect no WireToken being pure space"), {
                        startIndex: wireToken.StartIndex,
                        endExcludingIndex: wireToken.StartIndex + wireToken.Length,
                        text: spanText.substr(tokenStartIndexInSpan, wireToken.Length)
                    };
                }));
                var bindingWithCorrected = wireToClientBindingInfo(this.text, wireSpan.Binding);
                this.binding = bindingWithCorrected && bindingWithCorrected.bindingInfo, this.isCorrected = !(!this.binding || !bindingWithCorrected.isCorrected);
                var alternateBindings = wireToClientBindingInfoCollection(this.text, wireSpan.AlternateBindings), phraseCompletions = wireToClientBindingInfoCollection(this.text, wireSpan.PhraseCompletions), phraseExtensions = wireToClientBindingInfoCollection(this.text, wireSpan.PhraseExtensions), suggestedReplacements = wireToClientBindingInfoCollection(this.text, wireSpan.SuggestedReplacements);
                _.isEmpty(alternateBindings) && _.isEmpty(phraseCompletions) && _.isEmpty(phraseExtensions) && _.isEmpty(suggestedReplacements) || (this.replacementBindings = {
                    alternates: alternateBindings,
                    phraseCompletions,
                    phraseExtensions,
                    suggestedReplacements
                }), this.inferredTermBindings = _.map(wireSpan.InferredTermBindings, function(wireContractInferredBinding) {
                    return {
                        inferredBindingType: (wireContract = wireContractInferredBinding.InferredTerm).Type,
                        definitionPrompt: wireContract.DefinitionPrompt,
                        definitionText: wireContract.DefinitionText,
                        prefixText: wireContract.PrefixText,
                        suffixText: wireContract.SuffixText,
                        hintText: wireContract.HintText,
                        alternateDefinitionTexts: wireContract.AlternateDefinitionTexts,
                        linguisticSchemaItems: wireContract.LinguisticSchemaItems,
                        definedTerm: wireContract.DefinedTerm,
                        targetRole: wireContract.TargetRole,
                        metadata: wireContract.Metadata
                    };
                    var wireContract;
                }), this.inferredTermBindingsUnsupported = wireSpan.InferredTermBindingsUnsupported, 
                this.hasBinding = null != this.binding || null != this.replacementBindings || !_.isEmpty(this.inferredTermBindings), 
                this.isWhiteSpace = !_.isEmpty(this.text) && _.isEmpty(_.trim(this.text)), this.isUsed = !this.isOverlapping && (null == this.resolution || 0 === this.resolution || 4 === this.resolution), 
                this.isUnknown = 3 === this.resolution, this.isInferred = 4 === this.resolution, 
                this.overlapSpans = [];
                var definedWithOptions = !this.isOverlapping && !_.isEmpty(this.text) && !isCoreTermAndShouldNotIndicateOptions(this) && !isPhrasingBindingAndShouldNotIndicateOptions(this) && !isSpanUndefinedWithOptions(this) && this.hasBinding && this.isUsed, undefinedWithOptions = isSpanUndefinedWithOptions(this);
                _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assert(function() {
                    return !(definedWithOptions && undefinedWithOptions);
                }, "A span can not be definedWithOptions and undefinedWithOptions at the same time."), 
                this.state = definedWithOptions ? "accepted" : undefinedWithOptions && this.isUsed ? "warning" : undefinedWithOptions ? "error" : "none";
            };
        }();
        function wireToClientCommand(wireCommand) {
            if (wireCommand) {
                var commandSemanticQuery = wireCommand.Query ? _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.deserializeQuery(wireCommand.Query) : void 0;
                return {
                    query: commandSemanticQuery,
                    queryMetadata: wireToClientQueryMetaData(commandSemanticQuery, wireCommand.QueryMetadata),
                    data: wireCommand.Data,
                    binding: wireCommand.Binding,
                    visualConfigurations: _.map(wireCommand.VisualConfigurations, function(visualConfig) {
                        var visualConfigSemanticQuery = visualConfig.Query ? _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.deserializeQuery(visualConfig.Query) : void 0;
                        return {
                            visualizationType: visualConfig.VisualizationType,
                            dataShapeBinding: visualConfig.DataShapeBinding,
                            visualElements: visualConfig.VisualElements,
                            query: visualConfigSemanticQuery,
                            queryMetadata: wireToClientQueryMetaData(commandSemanticQuery, visualConfig.QueryMetadata)
                        };
                    }),
                    suggestedVisualTypes: _.map(wireCommand.SuggestedVisualizations, function(suggestedVisual) {
                        return (0, _powerbi_Insights__WEBPACK_IMPORTED_MODULE_3__.s)(suggestedVisual.VisualizationType).name;
                    }),
                    linguisticSchemaJson: wireCommand.LinguisticSchemaJson,
                    linguisticSchemaItems: wireCommand.LinguisticSchemaItems,
                    inferredTermMetadata: wireCommand.InferredTermMetadata,
                    defineCalculation: wireToClientDefineCalculation(wireCommand.DefineCalculation)
                };
            }
        }
        function wireToClientDefineCalculation(wireDefineCalculation) {
            if (wireDefineCalculation) return {
                expression: wireDefineCalculation.Expression,
                homeTable: wireDefineCalculation.HomeTable,
                format: wireDefineCalculation.Format
            };
        }
        function wireToClientQueryMetaData(query, wireQnaQueryMetadata) {
            if (query && wireQnaQueryMetadata) {
                var wireFilters = _.filter(wireQnaQueryMetadata.Filters, function(f) {
                    return !!f;
                }), wireSelects = _.filter(wireQnaQueryMetadata.Select, function(s) {
                    return !!s;
                });
                return {
                    filters: _.map(wireFilters, function(f) {
                        return {
                            Restatement: f.Restatement,
                            type: void 0
                        };
                    }),
                    selects: _.map(wireSelects, function(s) {
                        return {
                            restatement: s.Restatement,
                            valueType: convertSemanticTypeToValueType(s.DefaultLabel ? s.DefaultLabel.SemanticType : s.SemanticType),
                            isGroup: s.IsGroup,
                            defaultLabel: s.DefaultLabel ? createStandaloneDefaultLabel(s.DefaultLabel.Expression, query) : void 0,
                            isExplicitSortBy: s.IsExplicitSortBy
                        };
                    })
                };
            }
        }
        function isCoreTermAndShouldNotIndicateOptions(span) {
            var _a, _b;
            return 7 === (null === (_a = span.binding) || void 0 === _a ? void 0 : _a.type) && !span.isCorrected && _.isEmpty(null === (_b = span.replacementBindings) || void 0 === _b ? void 0 : _b.suggestedReplacements) && _.isEmpty(span.inferredTermBindings);
        }
        function isPhrasingBindingAndShouldNotIndicateOptions(span) {
            var _a, _b;
            return 8 === (null === (_a = span.binding) || void 0 === _a ? void 0 : _a.type) && !span.isCorrected && 2 === span.resolution && _.isEmpty(null === (_b = span.replacementBindings) || void 0 === _b ? void 0 : _b.suggestedReplacements) && _.isEmpty(span.inferredTermBindings);
        }
        function isSpanUndefinedWithOptions(span) {
            return !(span.isOverlapping || _.isEmpty(span.text) || isCoreTermAndShouldNotIndicateOptions(span) || isPhrasingBindingAndShouldNotIndicateOptions(span) || !span.isCorrected && 3 !== span.resolution && (!span.hasBinding || span.isUsed));
        }
        function wireToClientBindingInfo(spanText, wireBindingContainer) {
            if (wireBindingContainer && !wireBindingContainer.InferredTerm) {
                var wireBinding, bindingType;
                if (wireBindingContainer.Table) wireBinding = wireBindingContainer.Table, bindingType = 0; else if (wireBindingContainer.Pod) wireBinding = wireBindingContainer.Pod, 
                bindingType = 1; else if (wireBindingContainer.Property) wireBinding = wireBindingContainer.Property, 
                bindingType = 2; else if (wireBindingContainer.Value) wireBinding = wireBindingContainer.Value, 
                bindingType = 3; else if (wireBindingContainer.Range) wireBinding = wireBindingContainer.Range, 
                bindingType = 4; else if (wireBindingContainer.VisType) wireBinding = wireBindingContainer.VisType, 
                bindingType = 5; else if (wireBindingContainer.Composite) wireBinding = wireBindingContainer.Composite, 
                bindingType = 6; else if (wireBindingContainer.Core) wireBinding = wireBindingContainer.Core, 
                bindingType = 7; else if (wireBindingContainer.Phrasing) wireBinding = wireBindingContainer.Phrasing, 
                bindingType = 8; else if (wireBindingContainer.TextualEntity) wireBinding = wireBindingContainer.TextualEntity, 
                bindingType = 9; else {
                    if (!wireBindingContainer.AnyEntity) {
                        var unhandledBindingAny_1 = wireBindingContainer;
                        return void _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assert(function() {
                            return !!unhandledBindingAny_1.Literal;
                        }, "Has binding type that is unhandled by client right now. Known unhandled types are: [Literal] and this is not a known type. Check to either update the known unhandled type list, or handle it on the client side.");
                    }
                    wireBinding = wireBindingContainer.AnyEntity, bindingType = 10;
                }
                return {
                    bindingInfo: {
                        type: bindingType,
                        text: wireBinding.Text,
                        textSegmentsWithMatchInfo: generateTextSegmentsWithMatchInfo(spanText, wireBinding.Text, wireBinding.MatchedSegments),
                        matchType: wireBinding.MatchType,
                        score: wireBinding.Score
                    },
                    isCorrected: wireBinding.Corrected
                };
            }
        }
        function generateTextSegmentsWithMatchInfo(spanText, bindingText, matchedSegments) {
            if (_.isEmpty(spanText) || _.isEmpty(matchedSegments)) return [ {
                text: bindingText,
                isMatched: !1
            } ];
            for (var resultSegments = [], currentIndex = 0, _i = 0, matchedSegments_1 = matchedSegments; _i < matchedSegments_1.length; _i++) {
                var segment = matchedSegments_1[_i];
                currentIndex < segment.StartIndex && resultSegments.push({
                    text: bindingText.substring(currentIndex, segment.StartIndex),
                    isMatched: !1
                }), resultSegments.push({
                    text: bindingText.substr(segment.StartIndex, segment.Length),
                    isMatched: !0
                }), currentIndex = segment.StartIndex + segment.Length;
            }
            return currentIndex < _.size(bindingText) && resultSegments.push({
                text: bindingText.substring(currentIndex),
                isMatched: !1
            }), resultSegments;
        }
        function wireToClientBindingInfoCollection(spanText, wireContractBindingContainers) {
            if (wireContractBindingContainers) {
                for (var convertedCollection = [], _i = 0, wireContractBindingContainers_1 = wireContractBindingContainers; _i < wireContractBindingContainers_1.length; _i++) {
                    var bindingInfoWithCorrected = wireToClientBindingInfo(spanText, wireContractBindingContainers_1[_i]);
                    bindingInfoWithCorrected && convertedCollection.push(bindingInfoWithCorrected.bindingInfo);
                }
                return convertedCollection;
            }
        }
        function clientToWireInferredTermBinding(clientContract) {
            return null == clientContract ? void 0 : {
                Type: clientContract.inferredBindingType,
                DefinitionPrompt: clientContract.definitionPrompt,
                DefinitionText: clientContract.definitionText,
                PrefixText: clientContract.prefixText,
                SuffixText: clientContract.suffixText,
                HintText: clientContract.hintText,
                AlternateDefinitionTexts: clientContract.alternateDefinitionTexts,
                LinguisticSchemaItems: clientContract.linguisticSchemaItems,
                DefinedTerm: clientContract.definedTerm,
                TargetRole: clientContract.targetRole,
                Metadata: clientContract.metadata
            };
        }
        function generateUtteranceCorrectionInfo(result) {
            _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(result, "result");
            var wireCorrectedTextSegments, correctedUtterance = result.CorrectedUtterance;
            if (!_.isEmpty(correctedUtterance)) {
                var replacement = result.ReplacementUtterance, state = 2;
                return !!result.Command || (result.ConfidenceLevel <= 5 ? state = 0 : result.ConfidenceLevel <= 20 && (state = 1)), 
                _.isEmpty(result.CorrectedUtteranceTextSegments) ? {
                    correctedUtterance,
                    replacementUtterance: replacement || correctedUtterance,
                    state
                } : {
                    correctedUtterance,
                    correctedTextSegments: (wireCorrectedTextSegments = result.CorrectedUtteranceTextSegments, 
                    _.map(wireCorrectedTextSegments, function(textSegment) {
                        return {
                            startIndex: textSegment.StartIndex,
                            endExcludingIndex: textSegment.StartIndex + textSegment.Length
                        };
                    })),
                    state
                };
            }
        }
        function convertSemanticTypeToValueType(semanticType) {
            switch (semanticType) {
              case 0:
              case 1:
              case 2:
              case 3:
                return;

              case 4:
                return _powerbi_legacy_PowerBIVisuals_VisualsData_types_valueType__WEBPACK_IMPORTED_MODULE_4__.Ge.fromExtendedType(7078913);

              case 5:
                return _powerbi_legacy_PowerBIVisuals_VisualsData_types_valueType__WEBPACK_IMPORTED_MODULE_4__.Ge.fromDescriptor({
                    dateTime: !0
                });

              case 6:
                return _powerbi_legacy_PowerBIVisuals_VisualsData_types_valueType__WEBPACK_IMPORTED_MODULE_4__.Ge.fromDescriptor({
                    numeric: !0
                });
            }
        }
        function createStandaloneDefaultLabel(expression, query) {
            var queryDef = _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.serializeQuery(query);
            queryDef.Select.push(expression);
            var deserializeQuery = _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.deserializeQuery(queryDef);
            return _.last(deserializeQuery.select()).expr;
        }
    },
    64648: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            _: function() {
                return DaxTemplateParameterKind;
            }
        });
        var DaxTemplateParameterKind = function(DaxTemplateParameterKind) {
            return DaxTemplateParameterKind[DaxTemplateParameterKind.Number = 0] = "Number", 
            DaxTemplateParameterKind[DaxTemplateParameterKind.Enum = 1] = "Enum", DaxTemplateParameterKind[DaxTemplateParameterKind.Boolean = 2] = "Boolean", 
            DaxTemplateParameterKind[DaxTemplateParameterKind.Field = 3] = "Field", DaxTemplateParameterKind[DaxTemplateParameterKind.Instance = 4] = "Instance", 
            DaxTemplateParameterKind;
        }({});
    },
    92630: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            Xy: function() {
                return DaxTemplateStoreService;
            }
        });
        var tslib_es6 = __webpack_require__(81337), quick_measures_ui_template_contracts = __webpack_require__(64648), dax_template_dialog_utils = __webpack_require__(96739), schemaChangeRewriter = __webpack_require__(3011), DaxTemplateParameterRewriter = function() {
            function DaxTemplateParameterRewriter() {}
            return DaxTemplateParameterRewriter.rewrite = function(parameters, changes, schema, aggrUtils) {
                if (parameters) {
                    var exprRewriters = (0, schemaChangeRewriter.vH)(changes), rewrittenParameters = {}, rewriter = new DaxTemplateParameterRewriter;
                    for (var key in parameters) {
                        var input = parameters[key].input;
                        rewrittenParameters[key] = parameters[key], input && (dax_template_dialog_utils.M.isColumnOrMeasure(input) ? rewrittenParameters[key].input = rewriter.rewriteField(input, exprRewriters, schema, aggrUtils) : dax_template_dialog_utils.M.isInstance(input) && (rewrittenParameters[key].input = rewriter.rewriteInstance(input, exprRewriters, schema, aggrUtils)));
                    }
                    return rewrittenParameters;
                }
            }, DaxTemplateParameterRewriter.prototype.rewriteField = function(input, rewriters, schema, aggrUtils) {
                for (var rewrittenExpr = input.value, _i = 0, rewriters_1 = rewriters; _i < rewriters_1.length; _i++) rewrittenExpr = null == rewrittenExpr ? void 0 : rewrittenExpr.accept(rewriters_1[_i]);
                return _.isEmpty(null == rewrittenExpr ? void 0 : rewrittenExpr.validate(schema, aggrUtils)) || (rewrittenExpr = void 0), 
                (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, input), {
                    value: rewrittenExpr
                });
            }, DaxTemplateParameterRewriter.prototype.rewriteInstance = function(input, rewriters, schema, aggrUtils) {
                for (var _a, _b, rewrittenExpr = null === (_a = input.value) || void 0 === _a ? void 0 : _a.field, rewrittenFilter = null === (_b = input.value) || void 0 === _b ? void 0 : _b.filter, _i = 0, rewriters_2 = rewriters; _i < rewriters_2.length; _i++) {
                    var rewriter = rewriters_2[_i];
                    rewrittenExpr = null == rewrittenExpr ? void 0 : rewrittenExpr.accept(rewriter), 
                    rewrittenFilter = null == rewrittenFilter ? void 0 : rewrittenFilter.rewrite(rewriter);
                }
                return _.isEmpty(null == rewrittenExpr ? void 0 : rewrittenExpr.validate(schema, aggrUtils)) || (rewrittenExpr = void 0, 
                rewrittenFilter = void 0), (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, input), {
                    value: rewrittenExpr ? {
                        field: rewrittenExpr,
                        filter: rewrittenFilter
                    } : void 0
                });
            }, DaxTemplateParameterRewriter;
        }(), semanticQuerySerializer = __webpack_require__(3468), events = __webpack_require__(8590), debug = __webpack_require__(62458), displayNameGetter = __webpack_require__(21571), semanticQuery = __webpack_require__(95462), sqExpr = __webpack_require__(94419), BehaviorSubject = __webpack_require__(35510), Subject = __webpack_require__(30794), from = __webpack_require__(82762), startWith = __webpack_require__(22318), distinctUntilChanged = __webpack_require__(77526), switchMap = __webpack_require__(81905), filter = __webpack_require__(59973), map = __webpack_require__(14172), mapTo = __webpack_require__(73805), shareReplay = __webpack_require__(57243), takeUntil = __webpack_require__(83317), sqExprStaticMembers = __webpack_require__(74082), core = __webpack_require__(50423), sq_aggregation_operations_service = __webpack_require__(28199), conceptual_schema_proxy_service = __webpack_require__(26898), data_sources_service = __webpack_require__(83008), event_bridge_service = __webpack_require__(11494), dax_capabilities_service = __webpack_require__(80435), dax_template_service = __webpack_require__(57151), dax_template_telemetry_service = __webpack_require__(96899), localization_service = __webpack_require__(65181), DaxTemplateStoreService = function() {
            function DaxTemplateStoreService(aggrOps, conceptualSchemaProxy, dataSourcesService, daxCapabilitiesService, daxTemplateService, daxTemplateTelemetry, eventBridge, localizationService) {
                var _this = this;
                this.aggrOps = aggrOps, this.conceptualSchemaProxy = conceptualSchemaProxy, this.dataSourcesService = dataSourcesService, 
                this.daxCapabilitiesService = daxCapabilitiesService, this.daxTemplateService = daxTemplateService, 
                this.daxTemplateTelemetry = daxTemplateTelemetry, this.eventBridge = eventBridge, 
                this.localizationService = localizationService, this.templatesModelStore$ = new BehaviorSubject.X({
                    selectedTemplate: void 0,
                    flattenedTemplatesAndCategory: []
                }), this.parametersStore$ = new BehaviorSubject.X(void 0), this.validation$ = this.parameters$.pipe((0, 
                startWith.O)(null)).pipe((0, distinctUntilChanged.x)(), (0, switchMap.w)(function(parameters) {
                    return _this.validateParameters(parameters, _this.templatesModelStore$.value.selectedTemplate);
                })), this.selectedTemplate$ = this.templatesModel$.pipe((0, filter.h)(function(templatesModel) {
                    return !!templatesModel.selectedTemplate;
                }), (0, map.U)(function(templatesModel) {
                    return templatesModel.selectedTemplate;
                }), (0, distinctUntilChanged.x)()), this.isTemplateSelected$ = this.selectedTemplate$.pipe((0, 
                mapTo.h)(!0), (0, startWith.O)(!1), (0, distinctUntilChanged.x)(), (0, shareReplay.d)(1)), 
                this.subscriptionManager = this.eventBridge.createChannelSubscriptionManager().subscribe(events.CCe, function(_e, args) {
                    return _this.onModelChanged(args.result);
                });
            }
            return Object.defineProperty(DaxTemplateStoreService.prototype, "templatesModel$", {
                get: function() {
                    return this.templatesModelStore$.asObservable();
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(DaxTemplateStoreService.prototype, "parameters$", {
                get: function() {
                    return this.parametersStore$.asObservable();
                },
                enumerable: !1,
                configurable: !0
            }), DaxTemplateStoreService.prototype.ngOnDestroy = function() {
                this.subscriptionManager.unsubscribeAll();
            }, DaxTemplateStoreService.prototype.initialize = function(_a) {
                var selects = _a.selects, schemaName = _a.schemaName, openDaxTemplateEvent = _a.openDaxTemplateEvent, targetEntity = _a.targetEntity;
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var schema, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return this.destroy$ = new Subject.xQ, this.schemaName = schemaName, this.targetEntity = targetEntity, 
                            this.sourceExpressions = _.map(selects, function(s) {
                                return semanticQuerySerializer.ib.deserializeExpr(s);
                            }), [ 4, this.conceptualSchemaProxy.get(this.dataSourcesService.get()) ];

                          case 1:
                            return schema = _b.sent(), [ 4, this.initializeTemplates(schema) ];

                          case 2:
                            return _b.sent(), openDaxTemplateEvent && (this.openDaxTemplateEvent = openDaxTemplateEvent, 
                            this.daxTemplateTelemetry.startTemplateSelectedEvent(openDaxTemplateEvent, "Select a measure")), 
                            this.selectedTemplate$.pipe((0, takeUntil.R)(this.destroy$), (0, switchMap.w)(function(template) {
                                return (0, from.D)(_this.conceptualSchemaProxy.get(_this.dataSourcesService.get())).pipe((0, 
                                map.U)(function(schema) {
                                    return {
                                        template,
                                        schema
                                    };
                                }));
                            })).subscribe(function(selectedTemplateWithSchema) {
                                var templateParameters = _this.getParameters(selectedTemplateWithSchema.template, _this.parametersStore$.value, selectedTemplateWithSchema.schema);
                                _this.parametersStore$.next(templateParameters);
                            }), [ 2 ];
                        }
                    });
                });
            }, DaxTemplateStoreService.prototype.updateSelectedTemplate = function(selectedTemplate) {
                this.templatesModelStore$.next((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, this.templatesModelStore$.value), {
                    selectedTemplate
                })), this.daxTemplateTelemetry.resolveTemplateSelectedEvent(), this.daxTemplateTelemetry.startTemplateSelectedEvent(this.openDaxTemplateEvent, selectedTemplate.capabilities.name);
            }, DaxTemplateStoreService.prototype.updateParameters = function(parameterInput, parameterKey) {
                if (debug.fF.assertValue(parameterInput, "parameterInput"), debug.fF.assertValue(parameterKey, "parameterKey"), 
                parameterInput && parameterKey && _.has(this.parametersStore$.value, parameterKey)) {
                    var updatedParameters = _.clone(this.parametersStore$.value), updatedParameter = updatedParameters[parameterKey];
                    dax_template_dialog_utils.M.isInstance(parameterInput) && !parameterInput.value.field && (parameterInput.value.filter = void 0, 
                    updatedParameter.hasBeenSet = !0), updatedParameter.input = parameterInput, updatedParameter.hasBeenSet = updatedParameter.hasBeenSet || function(parameterInput) {
                        var _a;
                        return dax_template_dialog_utils.M.isInstance(parameterInput) ? !!(null === (_a = parameterInput.value) || void 0 === _a ? void 0 : _a.filter) : !!parameterInput.value;
                    }(updatedParameter.input), this.parametersStore$.next(updatedParameters);
                }
            }, DaxTemplateStoreService.prototype.getNewMeasureResult = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var schema, selectedTemplate, inputValues, newMeasureMetadata, result;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.conceptualSchemaProxy.get(this.dataSourcesService.get()) ];

                          case 1:
                            return schema = _a.sent(), selectedTemplate = this.templatesModelStore$.value.selectedTemplate, 
                            inputValues = convertParameterToInputValue(this.parametersStore$.value, schema, this.daxTemplateService.utils), 
                            [ 4, this.getNewMeasureMetadata(inputValues, selectedTemplate, schema) ];

                          case 2:
                            return (newMeasureMetadata = _a.sent()) && (result = {
                                template: null == selectedTemplate ? void 0 : selectedTemplate.capabilities,
                                parameters: _.mapValues(inputValues, function(param) {
                                    return {
                                        expression: semanticQuerySerializer.ib.serializeExpr(param.expression)
                                    };
                                }),
                                newMeasureMetadata
                            }), [ 2, result ];
                        }
                    });
                });
            }, DaxTemplateStoreService.prototype.destroy = function() {
                this.destroy$.next(), this.destroy$.complete();
            }, DaxTemplateStoreService.prototype.updateTemplates = function(templates) {
                var result = this.flattenAndOrderTemplatesByCategory(templates);
                this.templatesModelStore$.next({
                    selectedTemplate: void 0,
                    flattenedTemplatesAndCategory: result
                });
            }, DaxTemplateStoreService.prototype.initializeTemplates = function(schema) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var daxCapabilities, templates;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.daxCapabilitiesService.getCapabilities() ];

                          case 1:
                            return daxCapabilities = _a.sent(), templates = this.daxTemplateService.getTemplates(schema, daxCapabilities, this.schemaName, 1), 
                            this.updateTemplates(templates), [ 2 ];
                        }
                    });
                });
            }, DaxTemplateStoreService.prototype.flattenAndOrderTemplatesByCategory = function(templates) {
                var _this = this, groupedTemplatesDictionary = _.groupBy(templates, function(template) {
                    return (0, displayNameGetter.G)(template.capabilities.category, _this.localizationService);
                }), result = [];
                for (var category in groupedTemplatesDictionary) {
                    result.push({
                        kind: "category",
                        value: category
                    });
                    for (var _i = 0, _a = groupedTemplatesDictionary[category]; _i < _a.length; _i++) result.push({
                        kind: "daxTemplate",
                        value: _a[_i]
                    });
                }
                return result;
            }, DaxTemplateStoreService.prototype.validateParameters = function(parameters, selectedTemplate) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var schema, daxTemplateServiceUtils, inputValues, daxCapabilities, allParametersSet, validationResult;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return selectedTemplate && parameters ? [ 4, this.conceptualSchemaProxy.get(this.dataSourcesService.get()) ] : [ 2, {
                                result: {
                                    errors: {},
                                    warnings: {}
                                },
                                allParametersSet: !1
                            } ];

                          case 1:
                            return schema = _a.sent(), inputValues = convertParameterToInputValue(parameters, schema, daxTemplateServiceUtils = this.daxTemplateService.utils), 
                            [ 4, this.daxCapabilitiesService.getCapabilities() ];

                          case 2:
                            return daxCapabilities = _a.sent(), allParametersSet = !0, validationResult = daxTemplateServiceUtils.validateIfNeeded(selectedTemplate, schema, daxCapabilities, {
                                schemaName: this.schemaName,
                                inputValues
                            }), _.forEach(selectedTemplate.capabilities.input, function(daxTemplateInput) {
                                var parameterKey = daxTemplateInput.name, parameter = parameters[parameterKey], inputValue = inputValues[parameterKey];
                                (null == parameter ? void 0 : parameter.hasBeenSet) ? (!daxTemplateServiceUtils.isValidValueForInput(inputValue, daxTemplateInput, schema) || daxTemplateInput.instance && inputValue.expression && daxTemplateServiceUtils.isDefaultValueFilter(inputValue.expression)) && (validationResult.errors[parameterKey] = "DaxTemplateDialog_ParameterRequired") : allParametersSet = !1;
                            }), [ 2, {
                                result: validationResult,
                                allParametersSet
                            } ];
                        }
                    });
                });
            }, DaxTemplateStoreService.prototype.getParameters = function(selectedTemplate, previousParameters, schema) {
                var daxTemplateUtils = this.daxTemplateService.utils, previousInputValues = convertParameterToInputValue(previousParameters, schema, daxTemplateUtils), expressions = _.map(previousInputValues, function(value) {
                    return value.expression;
                });
                return expressions.push.apply(expressions, this.sourceExpressions || []), function(template, values, localizationService, daxTemplateUtils) {
                    for (var parameterViewModel = {}, _loop_1 = function(input) {
                        var value = values ? values[input.name] : void 0, expression = void 0;
                        value && (expression = value.expression);
                        var viewModel = {
                            name: input.name,
                            displayName: (0, displayNameGetter.G)(input.displayName, localizationService),
                            description: (0, displayNameGetter.G)(input.description, localizationService),
                            hasBeenSet: !!expression,
                            input: void 0
                        };
                        if (input.column) viewModel.input = {
                            kind: quick_measures_ui_template_contracts._.Field,
                            value: expression,
                            validationInfo: {
                                field: {
                                    kind: 0,
                                    type: input.column.type
                                }
                            }
                        }; else if (input.measure) viewModel.input = {
                            kind: quick_measures_ui_template_contracts._.Field,
                            value: expression,
                            validationInfo: {
                                field: {
                                    kind: 1,
                                    type: input.measure.type
                                }
                            }
                        }; else if (input.instance) {
                            var fieldExpr = void 0, filterExpr = void 0;
                            expression && (0, sqExprStaticMembers.Hi)(expression) && !_.isEmpty(expression.args) && (fieldExpr = expression.args[0], 
                            daxTemplateUtils.isDefaultValueFilter(expression) || (filterExpr = expression)), 
                            viewModel.input = {
                                kind: quick_measures_ui_template_contracts._.Instance,
                                value: {
                                    field: fieldExpr,
                                    filter: filterExpr && semanticQuery.yl.fromSQExpr(filterExpr)
                                },
                                validationInfo: {
                                    field: {
                                        kind: 0,
                                        type: input.instance.column.type
                                    }
                                }
                            }, viewModel.hasBeenSet = !!filterExpr;
                        } else if (input.constant) if (input.constant.type.numeric) viewModel.input = {
                            kind: quick_measures_ui_template_contracts._.Number,
                            value: expression && (0, sqExprStaticMembers.VC)(expression) && expression.value,
                            type: input.constant.type,
                            validationInfo: {
                                decimal: !0,
                                integer: !0
                            }
                        }; else if (input.constant.type.enumeration) {
                            var options = input.constant.type.enumeration.members(), value_1 = expression && (0, 
                            sqExprStaticMembers.VC)(expression) && expression.value;
                            viewModel.input = {
                                kind: quick_measures_ui_template_contracts._.Enum,
                                value: null != value_1 ? _.find(options, function(o) {
                                    return o.value === value_1;
                                }) : void 0,
                                type: input.constant.type,
                                selectionOptions: options
                            };
                        } else input.constant.type.bool && (viewModel.input = {
                            kind: quick_measures_ui_template_contracts._.Boolean,
                            value: expression && (0, sqExprStaticMembers.VC)(expression) && expression.value
                        });
                        parameterViewModel[input.name] = viewModel;
                    }, _i = 0, _a = template.capabilities.input; _i < _a.length; _i++) _loop_1(_a[_i]);
                    return parameterViewModel;
                }(selectedTemplate, daxTemplateUtils.generateValuesFromExpressions(selectedTemplate.capabilities.input, expressions, schema), this.localizationService, daxTemplateUtils);
            }, DaxTemplateStoreService.prototype.getNewMeasureMetadata = function(inputValues, selectedTemplate, schema) {
                var _a;
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var capabilities, daxCapabilities, measureName, newMeasureMetadata, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return (capabilities = null == selectedTemplate ? void 0 : selectedTemplate.capabilities) ? [ 4, this.daxCapabilitiesService.getCapabilities() ] : [ 2 ];

                          case 1:
                            return daxCapabilities = _b.sent(), measureName = null == selectedTemplate ? void 0 : selectedTemplate.getMeasureName(schema, daxCapabilities, {
                                schemaName: this.schemaName,
                                inputValues
                            }), (newMeasureMetadata = {
                                measureName
                            }).formatType = null === (_a = capabilities.output) || void 0 === _a ? void 0 : _a.format, 
                            _.forEach(capabilities.input, function(input) {
                                var _a, _b, _c, _d, _f;
                                if (newMeasureMetadata.formatSource && newMeasureMetadata.entity) return !1;
                                if (input.measure || input.column) {
                                    var inputExpression = null === (_a = inputValues[input.name]) || void 0 === _a ? void 0 : _a.expression;
                                    debug.fF.assertValue(inputExpression, "input expression should be defined");
                                    var useForEntitySource = (null === (_b = input.measure) || void 0 === _b ? void 0 : _b.shouldUseForEntitySource) || (null === (_c = input.column) || void 0 === _c ? void 0 : _c.shouldUseForEntitySource), useForFormatting = null === (_d = input.measure) || void 0 === _d ? void 0 : _d.shouldUseForFormatting;
                                    if (useForEntitySource) {
                                        var expr = (null === (_f = _this.targetEntity) || void 0 === _f ? void 0 : _f.SourceRef) && semanticQuerySerializer.ib.deserializeExpr(_this.targetEntity), targetEntityExpr = void 0;
                                        expr && (0, sqExprStaticMembers.Lk)(expr) && (targetEntityExpr = expr), (targetEntityExpr = null != targetEntityExpr ? targetEntityExpr : inputExpression.getTargetEntity()) && (newMeasureMetadata.entity = targetEntityExpr.entity, 
                                        newMeasureMetadata.schema = _this.schemaName);
                                    }
                                    useForFormatting && null == newMeasureMetadata.formatType && (newMeasureMetadata.formatSource = semanticQuerySerializer.ib.serializeExpr(inputExpression));
                                }
                            }), [ 2, newMeasureMetadata ];
                        }
                    });
                });
            }, DaxTemplateStoreService.prototype.onModelChanged = function(schemaChanges) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var schema, newParameters;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.conceptualSchemaProxy.get(this.dataSourcesService.get()) ];

                          case 1:
                            return schema = _a.sent(), newParameters = DaxTemplateParameterRewriter.rewrite(this.parametersStore$.value, schemaChanges.changes, schema, this.aggrOps), 
                            this.parametersStore$.next(newParameters), [ 2 ];
                        }
                    });
                });
            }, DaxTemplateStoreService.\u0275fac = function(t) {
                return new (t || DaxTemplateStoreService)(core["\u0275\u0275inject"](sq_aggregation_operations_service.C), core["\u0275\u0275inject"](conceptual_schema_proxy_service.i), core["\u0275\u0275inject"](data_sources_service.D), core["\u0275\u0275inject"](dax_capabilities_service.r3), core["\u0275\u0275inject"](dax_template_service.c), core["\u0275\u0275inject"](dax_template_telemetry_service.W), core["\u0275\u0275inject"](event_bridge_service.J), core["\u0275\u0275inject"](localization_service.o));
            }, DaxTemplateStoreService.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: DaxTemplateStoreService,
                factory: DaxTemplateStoreService.\u0275fac
            }), DaxTemplateStoreService;
        }();
        function convertParameterToInputValue(parameters, schema, daxTemplateUtils) {
            var _a, _b, _c, sqExprParameters = {};
            if (null == parameters) return sqExprParameters;
            for (var key in parameters) {
                var expression = void 0, parameterInput = null === (_a = parameters[key]) || void 0 === _a ? void 0 : _a.input;
                if (parameterInput) {
                    if (dax_template_dialog_utils.M.isColumnOrMeasure(parameterInput)) expression = parameterInput.value; else if (dax_template_dialog_utils.M.isNumber(parameterInput)) expression = (0, 
                    sqExpr.kQ)(parameterInput.value, parameterInput.type); else if (dax_template_dialog_utils.M.isEnum(parameterInput)) expression = (0, 
                    sqExpr.kQ)(parameterInput.value.value, parameterInput.type); else if (dax_template_dialog_utils.M.isBoolean(parameterInput)) expression = (0, 
                    sqExpr.O7)(parameterInput.value); else if (dax_template_dialog_utils.M.isInstance(parameterInput) && (null === (_b = parameterInput.value) || void 0 === _b ? void 0 : _b.filter) && (null === (_c = parameterInput.value) || void 0 === _c ? void 0 : _c.field)) {
                        var _d = parameterInput.value, field = _d.field, filter_1 = _d.filter, targetColumnRef = field.getTargetColumnRef(schema);
                        _.isEmpty(filter_1.where()) || (expression = daxTemplateUtils.replacerRewrite(filter_1.where()[0].condition, targetColumnRef, field));
                    }
                    expression && (sqExprParameters[key] = {
                        expression
                    });
                }
            }
            return sqExprParameters;
        }
    },
    96739: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            M: function() {
                return DaxTemplateDialogUtils;
            }
        });
        var _components_quick_measures_template_quick_measures_ui_template_contracts__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(64648), _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(62458), DaxTemplateDialogUtils = function() {
            function DaxTemplateDialogUtils() {}
            return DaxTemplateDialogUtils.isNumber = function(input) {
                return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(input, "daxTemplateParameter input"), 
                input.kind === _components_quick_measures_template_quick_measures_ui_template_contracts__WEBPACK_IMPORTED_MODULE_1__._.Number;
            }, DaxTemplateDialogUtils.isEnum = function(input) {
                return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(input, "daxTemplateParameter input"), 
                input.kind === _components_quick_measures_template_quick_measures_ui_template_contracts__WEBPACK_IMPORTED_MODULE_1__._.Enum;
            }, DaxTemplateDialogUtils.isBoolean = function(input) {
                return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(input, "daxTemplateParameter input"), 
                input.kind === _components_quick_measures_template_quick_measures_ui_template_contracts__WEBPACK_IMPORTED_MODULE_1__._.Boolean;
            }, DaxTemplateDialogUtils.isColumnOrMeasure = function(input) {
                return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(input, "daxTemplateParameter input"), 
                input.kind === _components_quick_measures_template_quick_measures_ui_template_contracts__WEBPACK_IMPORTED_MODULE_1__._.Field;
            }, DaxTemplateDialogUtils.isInstance = function(input) {
                return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(input, "daxTemplateParameter input"), 
                input.kind === _components_quick_measures_template_quick_measures_ui_template_contracts__WEBPACK_IMPORTED_MODULE_1__._.Instance;
            }, DaxTemplateDialogUtils;
        }();
    },
    51779: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, {
            QuickMeasuresLazyModule: function() {
                return QuickMeasuresLazyModule;
            }
        });
        var culture_format_info_service = __webpack_require__(52364), format_string_converter_service = __webpack_require__(40645), core = __webpack_require__(50423), CultureFormatInfoModule = function() {
            function CultureFormatInfoModule() {}
            return CultureFormatInfoModule.\u0275fac = function(t) {
                return new (t || CultureFormatInfoModule);
            }, CultureFormatInfoModule.\u0275mod = core["\u0275\u0275defineNgModule"]({
                type: CultureFormatInfoModule
            }), CultureFormatInfoModule.\u0275inj = core["\u0275\u0275defineInjector"]({
                providers: [ culture_format_info_service.t, format_string_converter_service.z ]
            }), CultureFormatInfoModule;
        }(), tslib_es6 = __webpack_require__(81337), ngrx_component_store = __webpack_require__(95281), constants = __webpack_require__(2142), debug = __webpack_require__(62458), valueFormatter = __webpack_require__(72489), sqExpr = __webpack_require__(94419), forkJoin = __webpack_require__(9936), from = __webpack_require__(82762), of = __webpack_require__(11547), filter = __webpack_require__(59973), tap = __webpack_require__(17653), map = __webpack_require__(14172), distinctUntilChanged = __webpack_require__(77526), takeUntil = __webpack_require__(83317), catchError = __webpack_require__(59822), take = __webpack_require__(48787), ad_hoc_query_runner_service = __webpack_require__(98513), data_sources_service = __webpack_require__(83008), conceptual_schema_proxy_service = __webpack_require__(26898), interpret_listener_service = __webpack_require__(37320), lazy_scoped_provider = __webpack_require__(28894), lazy_provider = __webpack_require__(57786), localization_service = __webpack_require__(65181), intellisense_service = __webpack_require__(72080), Common = __webpack_require__(35911), semanticQuerySerializer = __webpack_require__(3468), sqExprStaticMembers = __webpack_require__(74082), urn_builder = __webpack_require__(12985), isMeasure = __webpack_require__(58295), dax_template_service = __webpack_require__(57151), dax_capabilities_service = __webpack_require__(80435), visual_authoring_service = __webpack_require__(66890), panes_visibility_service = __webpack_require__(21024), Telemetry = __webpack_require__(21617), Utility = __webpack_require__(38078), performance = __webpack_require__(29804), src = __webpack_require__(62345), telemetryHelpers = __webpack_require__(41114), QuickMeasuresPaneOpenPane = telemetryHelpers.cx["PBI.QuickMeasuresPane.OpenPane"] = (0, 
        telemetryHelpers.b1)("PBI.QuickMeasuresPane.OpenPane"), QuickMeasuresPanePivotSelected = telemetryHelpers.cx["PBI.QuickMeasuresPane.PivotSelected"] = (0, 
        telemetryHelpers.b1)("PBI.QuickMeasuresPane.PivotSelected"), QuickMeasuresPaneUtteranceSubmitted = telemetryHelpers.cx["PBI.QuickMeasuresPane.UtteranceSubmitted"] = (0, 
        telemetryHelpers.b1)("PBI.QuickMeasuresPane.UtteranceSubmitted"), QuickMeasuresPaneDaxSaved = telemetryHelpers.cx["PBI.QuickMeasuresPane.DaxSaved"] = (0, 
        telemetryHelpers.b1)("PBI.QuickMeasuresPane.DaxSaved"), QuickMeasureTelemetryService = function() {
            function QuickMeasureTelemetryService(certifiedEventsService, telemetryService) {
                this.certifiedEventsService = certifiedEventsService, this.telemetryService = telemetryService, 
                this.featureName = "QuickMeasuresPane", this.utteranceSubmissionEventMap = new Map;
            }
            return QuickMeasureTelemetryService.prototype.logOpenPaneEvent = function(entryPoint) {
                return debug.fF.assertValue(entryPoint, "entryPoint"), this.logCertifiedEvent("PBI.QuickMeasuresPane.OpenPane", {
                    entryPoint
                }, "Succeeded"), this.telemetryService.logEvent(QuickMeasuresPaneOpenPane, {
                    entryPoint
                });
            }, QuickMeasureTelemetryService.prototype.logPivotSelectedEvent = function(parentEvent, pivot) {
                return debug.fF.assertValue(parentEvent, "parentEvent"), debug.fF.assertValue(pivot, "pivot"), 
                this.logCertifiedEvent("PBI.QuickMeasuresPane.PivotSelected", {
                    pivot
                }, "Succeeded"), this.telemetryService.logChildEvent(parentEvent, QuickMeasuresPanePivotSelected, {
                    pivot
                });
            }, QuickMeasureTelemetryService.prototype.startUtteranceSubmittedEvent = function(parentEvent) {
                debug.fF.assertValue(parentEvent, "parentEvent");
                var submissionEvent = this.telemetryService.startChildEvent(parentEvent, QuickMeasuresPaneUtteranceSubmitted), featureEvent = this.certifiedEventsService.startTimedStandardizedFeatureEvent(this.featureName, "PBI.QuickMeasuresPane.UtteranceSubmitted", this.telemetryService.root.id), copilotEventStartTime = (0, 
                performance.z)();
                return this.utteranceSubmissionEventMap.set(submissionEvent.event.id, {
                    featureEvent,
                    copilotEventStartTime
                }), submissionEvent;
            }, QuickMeasureTelemetryService.prototype.resolveUtteranceSubmittedEvent = function(utteranceSubmittedEvent, eventArgs) {
                debug.fF.assertValue(utteranceSubmittedEvent, "utteranceSubmittedEvent"), debug.fF.assertValue(eventArgs, "eventArgs");
                var info = utteranceSubmittedEvent.event.info;
                info.cancelled = eventArgs.cancelled, info.numberOfResults = eventArgs.numberOfResults, 
                info.numberOfResultsShown = eventArgs.numberOfResultsShown, info.usesInitialSuggestion = eventArgs.usesInitialSuggestion, 
                utteranceSubmittedEvent.resolve();
                var utteranceSubmittionEvents = this.utteranceSubmissionEventMap.get(utteranceSubmittedEvent.event.id), copilotEventStartTime = null == utteranceSubmittionEvents ? void 0 : utteranceSubmittionEvents.copilotEventStartTime, featureEvent = null == utteranceSubmittionEvents ? void 0 : utteranceSubmittionEvents.featureEvent;
                if (debug.fF.assertValue(featureEvent, "utteranceSubmissionCertifiedEvent"), debug.fF.assertValue(copilotEventStartTime, "copilotUtteranceSubmissionCertifiedEventStartTime"), 
                featureEvent && copilotEventStartTime) {
                    var activityStatus = "Succeeded";
                    eventArgs.cancelled ? activityStatus = "Cancelled" : 0 === eventArgs.numberOfResultsShown && (activityStatus = "Failed"), 
                    featureEvent.setAttribute("cancelled", eventArgs.cancelled), featureEvent.setAttribute("numberOfResults", eventArgs.numberOfResults), 
                    featureEvent.setAttribute("numberOfResultsShown", eventArgs.numberOfResultsShown), 
                    featureEvent.setAttribute("usesInitialSuggestion", eventArgs.usesInitialSuggestion), 
                    this.certifiedEventsService.logTimedStandardizedFeatureEvent({
                        correlationId: Utility.b$.generateGuid(),
                        originatingService: src.F1,
                        activityName: "NlToDax",
                        resultCode: "",
                        featureName: (0, src.mN)("Usage", "NlToDax"),
                        activityStatus,
                        operationStartTime: copilotEventStartTime,
                        operationEndTime: (0, performance.z)(),
                        activityAttributes: {
                            IsSignedIn: !0,
                            Location: "Desktop",
                            ContentMode: "Edit",
                            Persona: "BI Developer"
                        }
                    }), featureEvent.complete(activityStatus), this.utteranceSubmissionEventMap.delete(utteranceSubmittedEvent.event.id);
                }
            }, QuickMeasureTelemetryService.prototype.logDaxSavedEvent = function(parentEvent, typeOfMeasure) {
                return debug.fF.assertValue(parentEvent, "parentEvent"), debug.fF.assertValue(typeOfMeasure, "typeOfMeasure"), 
                this.logCertifiedEvent("PBI.QuickMeasuresPane.DaxSaved", {
                    typeOfMeasure
                }, "Succeeded"), this.telemetryService.logChildEvent(parentEvent, QuickMeasuresPaneDaxSaved, {
                    typeOfMeasure
                });
            }, QuickMeasureTelemetryService.prototype.logCertifiedEvent = function(activityName, activityAttributes, activityStatus) {
                this.certifiedEventsService.logStandardizedFeatureEvent({
                    correlationId: this.telemetryService.root.id,
                    activityName,
                    activityAttributes,
                    resultCode: "",
                    featureName: this.featureName,
                    activityStatus
                }, {
                    normalizeHierarchicalSeparators: !0
                });
            }, QuickMeasureTelemetryService.\u0275fac = function(t) {
                return new (t || QuickMeasureTelemetryService)(core["\u0275\u0275inject"](Telemetry.ly), core["\u0275\u0275inject"](Telemetry.y0));
            }, QuickMeasureTelemetryService.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: QuickMeasureTelemetryService,
                factory: QuickMeasureTelemetryService.\u0275fac
            }), QuickMeasureTelemetryService;
        }(), QuickMeasureError = function(_super) {
            function QuickMeasureError(message) {
                return _super.call(this, message) || this;
            }
            return (0, tslib_es6.__extends)(QuickMeasureError, _super), QuickMeasureError;
        }(Common.sH), QuickMeasurePreserverService = function() {
            function QuickMeasurePreserverService(daxTemplateService, daxCapabilitiesService, conceptualSchemaProxy, dataSources, quickMeasureTelemetryService, visualAuthoringService, lazyScoped, panesVisibilityService) {
                this.daxTemplateService = daxTemplateService, this.daxCapabilitiesService = daxCapabilitiesService, 
                this.conceptualSchemaProxy = conceptualSchemaProxy, this.dataSources = dataSources, 
                this.quickMeasureTelemetryService = quickMeasureTelemetryService, this.visualAuthoringService = visualAuthoringService, 
                this.lazyScoped = lazyScoped, this.panesVisibilityService = panesVisibilityService;
            }
            return QuickMeasurePreserverService.prototype.saveNewMeasure = function(newMeasureArgs, parentEvent) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var schema, vcContext, newMeasureCreated, dataSourcesArray_1, newExpression_1, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return debug.fF.assertValue(newMeasureArgs, "newMeasureArgs"), [ 4, this.conceptualSchemaProxy.get(this.dataSources.get()) ];

                          case 1:
                            return schema = _a.sent(), vcContext = newMeasureArgs.visualContainerContext, "DaxTemplate" !== newMeasureArgs.originType ? [ 3, 3 ] : (this.quickMeasureTelemetryService.logDaxSavedEvent(parentEvent, newMeasureArgs.result.template.name), 
                            [ 4, this.createNewDaxTemplateMeasure(newMeasureArgs, schema) ]);

                          case 2:
                            return newMeasureCreated = _a.sent(), [ 3, 6 ];

                          case 3:
                            return "NlToDax" === newMeasureArgs.originType ? (this.quickMeasureTelemetryService.logDaxSavedEvent(parentEvent, newMeasureArgs.originType), 
                            [ 4, this.createNewNlToDaxMeasure(newMeasureArgs, schema) ]) : [ 3, 5 ];

                          case 4:
                            return newMeasureCreated = _a.sent(), [ 3, 6 ];

                          case 5:
                            debug.fF.assertFail("unknown quick measure args"), _a.label = 6;

                          case 6:
                            return newMeasureCreated && this.expandDataPaneAfterNewMeasureCreated(), vcContext && (dataSourcesArray_1 = this.dataSources.get(), 
                            newExpression_1 = (0, sqExpr.mv)((0, sqExpr.nw)(newMeasureCreated.schema, newMeasureCreated.entity), newMeasureCreated.name), 
                            this.visualAuthoringService.addFieldToVisual(newExpression_1, dataSourcesArray_1, vcContext.visualContainer).catch(function() {
                                return newMeasureArgs.originalExpression && !(0, isMeasure.k)(newMeasureArgs.originalExpression) ? Promise.reject("Original expression is not a measure") : _this.visualAuthoringService.replaceField(newExpression_1, vcContext.role, vcContext.index, vcContext.visualContainer, dataSourcesArray_1);
                            })), [ 2 ];
                        }
                    });
                });
            }, QuickMeasurePreserverService.prototype.createNewNlToDaxMeasure = function(newMeasure, schema) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var metadata, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return metadata = {
                                entity: newMeasure.targetEntityName,
                                measureName: newMeasure.measureName,
                                schema: getFirstEditableSchemaName(schema),
                                formatString: newMeasure.formatString
                            }, [ 4, this.lazyScoped.get("quickCalcModern") ];

                          case 1:
                            return [ 4, _a.sent().createNewQuickMeasure(metadata.entity, metadata.schema, metadata.measureName, newMeasure.measureExpression, "NLtoDAX", function(finalMeasureName) {
                                return _this.getFormattingSchemaChange(metadata, finalMeasureName, schema);
                            }) ];

                          case 2:
                            return [ 2, _a.sent() ];
                        }
                    });
                });
            }, QuickMeasurePreserverService.prototype.createNewDaxTemplateMeasure = function(newMeasure, schema) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var schemaName, result, daxCapabilities, templates, template, metadata, parameterValues, daxResult, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return schemaName = newMeasure.schemaName, (result = newMeasure.result) ? [ 4, this.daxCapabilitiesService.getCapabilities() ] : [ 2 ];

                          case 1:
                            return daxCapabilities = _a.sent(), templates = this.daxTemplateService.getTemplates(schema, daxCapabilities, schemaName, 1), 
                            (template = _.find(templates, function(template) {
                                return template.capabilities.name === result.template.name;
                            })) ? (metadata = result.newMeasureMetadata, parameterValues = _.mapValues(result.parameters, function(parameter) {
                                return {
                                    expression: semanticQuerySerializer.ib.deserializeExpr(parameter.expression)
                                };
                            }), daxResult = template.apply(schema, daxCapabilities, {
                                schemaName: metadata.schema,
                                inputValues: parameterValues
                            }), [ 4, this.lazyScoped.get("quickCalcModern") ]) : [ 2, Promise.reject(new QuickMeasureError("Dax template undefined")) ];

                          case 2:
                            return [ 4, _a.sent().createNewQuickMeasure(metadata.entity, metadata.schema, metadata.measureName, daxResult.dax, template.capabilities.name, function(finalMeasureName) {
                                return _this.getFormattingSchemaChange(metadata, finalMeasureName, schema);
                            }) ];

                          case 3:
                            return [ 2, _a.sent() ];
                        }
                    });
                });
            }, QuickMeasurePreserverService.prototype.getFormattingSchemaChange = function(newMeasureMetadata, newMeasureName, schema) {
                if (null != newMeasureMetadata.formatString) return {
                    setCustomFormatStringInfo: {
                        formatString: newMeasureMetadata.formatString,
                        modelObject: urn_builder.X6.getMeasureUrn(newMeasureMetadata.entity, newMeasureName, newMeasureMetadata.schema)
                    }
                };
                if (null != newMeasureMetadata.formatType) {
                    var formatKind = this.convertFormatToFormatKind(newMeasureMetadata.formatType);
                    if (formatKind) return {
                        setFormatting: {
                            format: formatKind,
                            modelObject: urn_builder.X6.getMeasureUrn(newMeasureMetadata.entity, newMeasureName, newMeasureMetadata.schema)
                        }
                    };
                } else if (newMeasureMetadata.formatSource) {
                    var formatSource = this.getActualFormattingSource(newMeasureMetadata.formatSource, schema);
                    if (formatSource) return {
                        copyFormatting: {
                            sourceSchema: formatSource.schema,
                            sourceEntity: formatSource.entity,
                            sourceProperty: formatSource.property,
                            schema: newMeasureMetadata.schema,
                            targetEntity: newMeasureMetadata.entity,
                            targetProperty: newMeasureName,
                            objectType: "Measure"
                        }
                    };
                }
            }, QuickMeasurePreserverService.prototype.getActualFormattingSource = function(expressionContainer, schema) {
                var expression = semanticQuerySerializer.ib.deserializeExpr(expressionContainer);
                if ((0, sqExprStaticMembers.kb)(expression)) return (targetEntityRef = expression.source.getTargetEntity()) && {
                    schema: targetEntityRef.schema,
                    entity: targetEntityRef.entity,
                    property: expression.ref
                };
                if ((0, sqExprStaticMembers.iV)(expression)) {
                    var aggregatedColumn = expression.arg.getTargetColumnRef(schema);
                    if (!aggregatedColumn) return;
                    var aggregateMetadata = expression.getMetadata(schema), columnMetadata = aggregatedColumn.getMetadata(schema), targetEntityRef = aggregatedColumn.source.getTargetEntity();
                    return aggregateMetadata && columnMetadata && targetEntityRef && aggregateMetadata.type.isCompatibleFrom(columnMetadata.type) && {
                        schema: targetEntityRef.schema,
                        entity: targetEntityRef.entity,
                        property: aggregatedColumn.ref
                    };
                }
            }, QuickMeasurePreserverService.prototype.convertFormatToFormatKind = function(format) {
                if (0 === format) return "Percentage";
            }, QuickMeasurePreserverService.prototype.expandDataPaneAfterNewMeasureCreated = function() {
                this.panesVisibilityService.isPaneExpanded("data") || this.panesVisibilityService.setPaneExpansion("data", !0, !0);
            }, QuickMeasurePreserverService.\u0275fac = function(t) {
                return new (t || QuickMeasurePreserverService)(core["\u0275\u0275inject"](dax_template_service.c), core["\u0275\u0275inject"](dax_capabilities_service.r3), core["\u0275\u0275inject"](conceptual_schema_proxy_service.i), core["\u0275\u0275inject"](data_sources_service.D), core["\u0275\u0275inject"](QuickMeasureTelemetryService), core["\u0275\u0275inject"](visual_authoring_service.$8), core["\u0275\u0275inject"](lazy_scoped_provider.H), core["\u0275\u0275inject"](panes_visibility_service.r));
            }, QuickMeasurePreserverService.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: QuickMeasurePreserverService,
                factory: QuickMeasurePreserverService.\u0275fac
            }), QuickMeasurePreserverService;
        }();
        function getFirstEditableSchemaName(schema) {
            for (var _i = 0, _a = schema.schemas; _i < _a.length; _i++) {
                var item = _a[_i];
                if (item.capabilities.canEdit) return item.name;
            }
        }
        var feature_switch_service = __webpack_require__(9380), NlToDaxContentType = function(NlToDaxContentType) {
            return NlToDaxContentType[NlToDaxContentType.Initial = 0] = "Initial", NlToDaxContentType[NlToDaxContentType.Loading = 1] = "Loading", 
            NlToDaxContentType[NlToDaxContentType.Success = 2] = "Success", NlToDaxContentType[NlToDaxContentType.Error = 3] = "Error", 
            NlToDaxContentType;
        }({}), initialContent = {
            type: NlToDaxContentType.Initial
        }, initialState = {
            inputBox: void 0,
            content: initialContent,
            utterance: void 0,
            committedUtterance: void 0,
            loading: !0,
            validCalculations: void 0,
            activationRequired: void 0,
            isGenerateDaxDisabled: !0,
            isLoginButtonDisabled: !1
        }, NlToDaxStoreService = function(_super) {
            function NlToDaxStoreService(adhocQueryRunner, conceptualSchemaProxy, dataSources, formatStringConverter, interpretListenerFactory, lazyScoped, localizationService, intellisenseService, quickMeasurePreserver, lazyProvider, featureSwitchService, quickMeasureTelemetryService) {
                var _this = _super.call(this, initialState) || this;
                return _this.adhocQueryRunner = adhocQueryRunner, _this.conceptualSchemaProxy = conceptualSchemaProxy, 
                _this.dataSources = dataSources, _this.formatStringConverter = formatStringConverter, 
                _this.interpretListenerFactory = interpretListenerFactory, _this.lazyScoped = lazyScoped, 
                _this.localizationService = localizationService, _this.intellisenseService = intellisenseService, 
                _this.quickMeasurePreserver = quickMeasurePreserver, _this.lazyProvider = lazyProvider, 
                _this.featureSwitchService = featureSwitchService, _this.quickMeasureTelemetryService = quickMeasureTelemetryService, 
                _this.viewModel$ = _this.state$, _this.getDAXResults = _this.effect(function(getDAX$) {
                    return getDAX$.pipe((0, filter.h)(function() {
                        return !_.isEmpty(_this.utterance);
                    }), (0, tap.b)(function(inputBoxLazy) {
                        if (_this.utteranceSubmittedEvent) {
                            var usesSuggestedUtterance = _.includes(_this.inputBox.initialSuggestions, _this.utterance);
                            _this.resolveSubmittedUtteranceEvent(!0, 0, 0, usesSuggestedUtterance);
                        }
                        _this.utteranceSubmittedEvent = _this.quickMeasureTelemetryService.startUtteranceSubmittedEvent(_this.parentEvent), 
                        _this.updateCommittedUtterance(_this.utterance), _this.interpret(_this.utterance, inputBoxLazy);
                    }));
                }), _this.reInterpretCommittedUtterance = _this.effect(function(getDAX$) {
                    return getDAX$.pipe((0, filter.h)(function() {
                        return !_.isEmpty(_this.committedUtterance);
                    }), (0, tap.b)(function(inputBoxLazy) {
                        return _this.interpret(_this.committedUtterance, inputBoxLazy);
                    }));
                }), _this.monitorEmptyUtterance = _this.effect(function(inputBoxUtterance$) {
                    return inputBoxUtterance$.pipe((0, filter.h)(function(utterance) {
                        return void 0 !== utterance;
                    }), (0, map.U)(function(utterance) {
                        return _.isEmpty(utterance);
                    }), (0, distinctUntilChanged.x)(), (0, tap.b)(function(isUtteranceEmpty) {
                        isUtteranceEmpty && (_this.utteranceSubmittedEvent && _this.resolveSubmittedUtteranceEvent(!0, 0, 0, !1), 
                        _this.updateCommittedUtterance(""), _this.setInitialContent()), _this.setIsGenerateDaxDisabled(isUtteranceEmpty);
                    }));
                }), _this.setActivationRequired = _this.updater(function(state, activationRequired) {
                    return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, state), {
                        activationRequired
                    });
                }), _this.updateUtterance = _this.updater(function(state, utterance) {
                    return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, state), {
                        utterance
                    });
                }), _this.updateCommittedUtterance = _this.updater(function(state, utterance) {
                    return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, state), {
                        committedUtterance: utterance
                    });
                }), _this.updateLoadingShell = _this.updater(function(state, isLoading) {
                    return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, state), {
                        loading: isLoading
                    });
                }), _this.updateInputBoxVM = _this.updater(function(state, inputBoxVM) {
                    return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, state), {
                        inputBox: inputBoxVM
                    });
                }), _this.setIsGenerateDaxDisabled = _this.updater(function(state, isGenerateDaxDisabled) {
                    return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, state), {
                        isGenerateDaxDisabled
                    });
                }), _this.setIsLoginButtonDisabled = _this.updater(function(state, isLoginButtonDisabled) {
                    return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, state), {
                        isLoginButtonDisabled
                    });
                }), _this.setLoadingContent = _this.updater(function(state) {
                    return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, state), {
                        content: {
                            type: NlToDaxContentType.Loading
                        }
                    });
                }), _this.setInitialContent = _this.updater(function(state) {
                    return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, state), {
                        content: {
                            type: NlToDaxContentType.Initial
                        }
                    });
                }), _this.setErrorContent = _this.updater(function(state) {
                    return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, state), {
                        content: {
                            type: NlToDaxContentType.Error
                        }
                    });
                }), _this.setSuccessContent = _this.updater(function(state, content) {
                    return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, state), {
                        content
                    });
                }), _this.setValidCalculations = _this.updater(function(state, validCalculations) {
                    return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, state), {
                        validCalculations
                    });
                }), _this;
            }
            return (0, tslib_es6.__extends)(NlToDaxStoreService, _super), Object.defineProperty(NlToDaxStoreService.prototype, "inputBox", {
                get: function() {
                    return this.get().inputBox;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(NlToDaxStoreService.prototype, "content", {
                get: function() {
                    return this.get().content;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(NlToDaxStoreService.prototype, "utterance", {
                get: function() {
                    return this.get().utterance;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(NlToDaxStoreService.prototype, "result", {
                get: function() {
                    return this.get().validCalculations;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(NlToDaxStoreService.prototype, "committedUtterance", {
                get: function() {
                    return this.get().committedUtterance;
                },
                enumerable: !1,
                configurable: !0
            }), NlToDaxStoreService.prototype.initializeState = function(mode, parentEvent) {
                var _a;
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var isNlToDaxDisabled, inputBoxVm, featureSwitches, isLoading;
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return this.parentEvent = parentEvent, isNlToDaxDisabled = 1 === mode, debug.fF.assert(function() {
                                return !isNlToDaxDisabled;
                            }, "nlToDax should be disabled"), isNlToDaxDisabled ? [ 2 ] : [ 4, this.updateFormulaContext() ];

                          case 1:
                            return _b.sent(), void 0 !== (inputBoxVm = this.inputBox) ? [ 3, 3 ] : [ 4, this.initializeInputBox() ];

                          case 2:
                            inputBoxVm = _b.sent(), _b.label = 3;

                          case 3:
                            return [ 4, this.featureSwitchService.getFeatureSwitches() ];

                          case 4:
                            return featureSwitches = _b.sent(), isLoading = featureSwitches.quickMeasureInitialSuggestions, 
                            featureSwitches.quickMeasureInitialSuggestions ? _.isEmpty(inputBoxVm.initialSuggestions) ? [ 4, this.updateInitialUtteranceSuggestions(inputBoxVm) ] : [ 3, 6 ] : [ 3, 7 ];

                          case 5:
                            _b.sent(), _b.label = 6;

                          case 6:
                            isLoading = !1, _b.label = 7;

                          case 7:
                            return this.setState({
                                inputBox: inputBoxVm,
                                content: this.content.type === NlToDaxContentType.Loading ? initialContent : this.content,
                                utterance: this.utterance,
                                committedUtterance: this.committedUtterance,
                                loading: isLoading,
                                validCalculations: null !== (_a = this.result) && void 0 !== _a ? _a : [],
                                activationRequired: 2 === mode,
                                isGenerateDaxDisabled: _.isEmpty(this.utterance),
                                isLoginButtonDisabled: !1
                            }), [ 2 ];
                        }
                    });
                });
            }, NlToDaxStoreService.prototype.setupUtteranceListener = function(inputBoxUtterance$) {
                this.updateUtterance(inputBoxUtterance$), this.monitorEmptyUtterance(inputBoxUtterance$);
            }, NlToDaxStoreService.prototype.updateInitialUtteranceSuggestions = function(inputBoxVm) {
                return void 0 === inputBoxVm && (inputBoxVm = this.inputBox), (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var _this = this;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.getInitialSuggestions(inputBoxVm.qnaSupportedScopes) ];

                          case 1:
                            return _a.sent().pipe((0, takeUntil.R)(this.destroy$)).subscribe(function(response) {
                                null != (null == response ? void 0 : response.result) && (inputBoxVm.initialSuggestions = _.map(response.result.utterances, function(u) {
                                    return u.text;
                                })), _this.updateInputBoxVM(inputBoxVm), _this.updateLoadingShell(!1);
                            }), [ 2 ];
                        }
                    });
                });
            }, NlToDaxStoreService.prototype.getInitialSuggestions = function(supportedScopes) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.lazyProvider.get("@powerbi/Qna/qnadesktop.module#QnaDesktopModule", "InterpretServiceModern") ];

                          case 1:
                            return [ 2, _a.sent().getSuggestedDefineCalculationQuestions(supportedScopes) ];
                        }
                    });
                });
            }, NlToDaxStoreService.prototype.saveNewMeasure = function(formattedExpression, suggestedDaxIndex) {
                var _a, _b;
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var newNlToDaxMeasure, quickMeasuresService, suggestedDax, targetEntityName, conceptualSchema, schema, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_c) {
                        switch (_c.label) {
                          case 0:
                            return [ 4, this.lazyScoped.get("quickMeasures") ];

                          case 1:
                            return quickMeasuresService = _c.sent(), debug.fF.assertValue(quickMeasuresService, "quickMeasuresService"), 
                            _.isEmpty(this.result) ? [ 3, 4 ] : (debug.fF.assert(function() {
                                return null != suggestedDaxIndex && suggestedDaxIndex >= 0 && suggestedDaxIndex < _this.result.length;
                            }, "suggestedDaxIndex must be defined and within bounds"), (suggestedDax = (0, tslib_es6.__assign)({}, this.result[suggestedDaxIndex])).expression = formattedExpression, 
                            (targetEntityName = null !== (_a = suggestedDax.homeTable) && void 0 !== _a ? _a : quickMeasuresService.inputArgs.nlToDax.targetEntityName) ? [ 3, 3 ] : [ 4, this.conceptualSchemaProxy.get(this.dataSources.get()) ]);

                          case 2:
                            conceptualSchema = _c.sent(), schema = _.find(conceptualSchema.schemas, function(s) {
                                return !s.isExtensionSchema;
                            }), targetEntityName = null === (_b = _.find(schema.entities, function(e) {
                                return 0 === e.visibility && !e.errorMessage && !e.isDateTable;
                            })) || void 0 === _b ? void 0 : _b.name, _c.label = 3;

                          case 3:
                            newNlToDaxMeasure = {
                                measureName: "Measure",
                                measureExpression: suggestedDax.expression,
                                originType: "NlToDax",
                                originalExpression: quickMeasuresService.inputArgs.originalExpr,
                                targetEntityName,
                                visualContainerContext: quickMeasuresService.inputArgs.visualContainerContext,
                                formatString: suggestedDax.format
                            }, _c.label = 4;

                          case 4:
                            return newNlToDaxMeasure ? [ 4, this.quickMeasurePreserver.saveNewMeasure(newNlToDaxMeasure, this.parentEvent) ] : [ 2 ];

                          case 5:
                            return _c.sent(), [ 2 ];
                        }
                    });
                });
            }, NlToDaxStoreService.prototype.updateFormulaContext = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.intellisenseService.updateFormulaContextAsync() ];

                          case 1:
                            return _a.sent(), [ 2 ];
                        }
                    });
                });
            }, NlToDaxStoreService.prototype.interpret = function(utterance, inputBoxLazy) {
                this.setLoadingContent(), inputBoxLazy.inputBox.interpretUtterance({
                    utterance,
                    suppressSuggestions: !0,
                    incomingTags: [ "Committed" ],
                    isCommitInCommitQuestionOnDemandMode: !0
                });
            }, NlToDaxStoreService.prototype.tryEnableNlToDax = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var nlToDaxSupportability;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.lazyScoped.get("nlToDaxSupportability") ];

                          case 1:
                            return nlToDaxSupportability = _a.sent(), debug.fF.assertValue(nlToDaxSupportability, "nlToDaxSupportability"), 
                            this.setIsLoginButtonDisabled(!0), [ 4, nlToDaxSupportability.tryEnableNlToDax() ];

                          case 2:
                            return _a.sent(), this.setIsLoginButtonDisabled(!1), [ 2 ];
                        }
                    });
                });
            }, NlToDaxStoreService.prototype.initializeInputBox = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var dataSource, models, interpretListener;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        return dataSource = _.find(this.dataSources.get(), function(d) {
                            return d.type === constants.nKy;
                        }), interpretListener = this.interpretListenerFactory.createInterpretListener({
                            canShowDidYouMean: !1,
                            canShowPods: !1,
                            canShowVisuals: !1,
                            forTrainingTermBinding: !1,
                            models: models = [ {
                                vsName: dataSource.dsr.vsName,
                                dbName: dataSource.dsr.dbName,
                                qnaSupported: !0,
                                id: dataSource.id
                            } ]
                        }), this.setupInterpretObservables(interpretListener), [ 2, {
                            entryPoint: "NlToDax",
                            initialSuggestions: [],
                            configs: {
                                autoFocusOnInit: !0,
                                showCorrectedUtterance: !1,
                                showQuestionIcon: !1,
                                customPlaceholderText: this.localizationService.get("NlToDax_Input_Placeholder"),
                                showLoadingIcon: !1,
                                calculation: {
                                    language: "DAX",
                                    isCommitted: !1
                                },
                                considerDroppedSpans: !1,
                                considerErrorSpans: !1,
                                considerWarningSpans: !1,
                                commitOnDemandForcedMode: "AlwaysOn",
                                commitOnDemandConfigs: {
                                    hideCommitActionUI: !0,
                                    noCommitOnDropdownSelection: !0,
                                    noCommitOnInitialUtterance: !0
                                }
                            },
                            presentationArgs: {
                                withBorder: !0,
                                height: 96,
                                allowContentHorizontalScroll: !0,
                                useShellTheme: !0
                            },
                            interpretListener,
                            qnaSupportedScopes: _.map(models, function(m) {
                                return {
                                    model: m
                                };
                            })
                        } ];
                    });
                });
            }, NlToDaxStoreService.prototype.setupInterpretObservables = function(interpretListener) {
                var _this = this;
                interpretListener.getObservable().pipe((0, takeUntil.R)(this.destroy$), (0, filter.h)(function(interpretResult) {
                    return !!interpretResult && 1 !== interpretResult.resultType;
                })).subscribe(function(interpretResult) {
                    return (0, tslib_es6.__awaiter)(_this, void 0, void 0, function() {
                        var request;
                        return (0, tslib_es6.__generator)(this, function(_a) {
                            switch (_a.label) {
                              case 0:
                                return (request = interpretResult.request) && request.isCommitted && this.utterance === this.committedUtterance ? 3 !== interpretResult.resultType ? [ 3, 1 ] : (this.processErrorResult(request.utterance), 
                                [ 3, 3 ]) : [ 2 ];

                              case 1:
                                return 2 !== interpretResult.resultType ? [ 3, 3 ] : [ 4, this.processSuccessResult(interpretResult) ];

                              case 2:
                                _a.sent(), _a.label = 3;

                              case 3:
                                return [ 2 ];
                            }
                        });
                    });
                });
            }, NlToDaxStoreService.prototype.processErrorResult = function(requestUtterance) {
                this.setErrorContent();
                var usesSuggestedUtterance = _.includes(this.inputBox.initialSuggestions, requestUtterance);
                this.resolveSubmittedUtteranceEvent(!1, 0, 0, usesSuggestedUtterance);
            }, NlToDaxStoreService.prototype.processSuccessResult = function(interpretResult) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var calculations, promises, _i, calculations_1, calculation, nativeMeasure, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        for (promises = [], _i = 0, calculations_1 = calculations = interpretResult.calculations; _i < calculations_1.length; _i++) nativeMeasure = (0, 
                        sqExpr.PB)("dax", (calculation = calculations_1[_i]).expression, 3, void 0, void 0, calculation.format), 
                        promises.push(this.adhocQueryRunner.getValues([ nativeMeasure ], {
                            executionOptions: {
                                allowResultFromClientCache: !0
                            }
                        }));
                        return (0, forkJoin.D)(_.map(promises, function(p) {
                            return (0, from.D)(p).pipe((0, catchError.K)(function(_error) {
                                return (0, of.of)(void 0);
                            }));
                        })).pipe((0, take.q)(1)).subscribe(function(queryExecutionResults) {
                            for (var _a, _b, successResult = {
                                type: NlToDaxContentType.Success,
                                cards: []
                            }, validCalculations = [], i = 0; i < calculations.length; i++) if (null === (_a = queryExecutionResults[i]) || void 0 === _a ? void 0 : _a.result) {
                                var calcValue = queryExecutionResults[i].result[0][0], vbaFormatString = _this.convertDotNetFormatStringToVBA(calculations[i].format, calcValue);
                                validCalculations.push((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, calculations[i]), {
                                    format: vbaFormatString
                                }));
                                var formattedValue = (0, valueFormatter.WU)(calcValue, calculations[i].format);
                                if (successResult.cards.push({
                                    daxDisplay: {
                                        daxExpression: calculations[i].expression,
                                        formattedValue
                                    },
                                    restatement: calculations[i].restatement,
                                    isExpanded: 0 === i
                                }), 3 === successResult.cards.length) break;
                            }
                            _this.setValidCalculations(validCalculations), _.some(successResult.cards, function(c) {
                                var _a;
                                return _.isEmpty(null === (_a = c.restatement) || void 0 === _a ? void 0 : _a.trim());
                            }) && _.forEach(successResult.cards, function(c, i) {
                                return c.restatement = _this.localizationService.format("NlToDax_SuggestionCount", i + 1);
                            });
                            var resultsToShowCount = _.size(successResult.cards);
                            0 === resultsToShowCount ? _this.setErrorContent() : _this.setSuccessContent(successResult);
                            var usesSuggestedUtterance = _.includes(_this.inputBox.initialSuggestions, null === (_b = interpretResult.request) || void 0 === _b ? void 0 : _b.utterance);
                            _this.resolveSubmittedUtteranceEvent(!1, calculations.length, resultsToShowCount, usesSuggestedUtterance);
                        }), [ 2 ];
                    });
                });
            }, NlToDaxStoreService.prototype.resolveSubmittedUtteranceEvent = function(cancelled, numberOfResults, numberOfResultsShown, usesInitialSuggestion) {
                this.utteranceSubmittedEvent && (this.quickMeasureTelemetryService.resolveUtteranceSubmittedEvent(this.utteranceSubmittedEvent, {
                    cancelled,
                    numberOfResults,
                    numberOfResultsShown,
                    usesInitialSuggestion
                }), this.utteranceSubmittedEvent = void 0);
            }, NlToDaxStoreService.prototype.convertDotNetFormatStringToVBA = function(dotnetFormatString, value) {
                if (dotnetFormatString) {
                    var calcFormat = "Custom";
                    return value instanceof Date ? calcFormat = "DateTimeGeneralPattern" : "number" == typeof value ? calcFormat = "General" : "boolean" == typeof value ? calcFormat = "Boolean" : "string" == typeof value && (calcFormat = "Text"), 
                    this.formatStringConverter.DotNetToVBAWithFormat(calcFormat, dotnetFormatString);
                }
            }, NlToDaxStoreService.\u0275fac = function(t) {
                return new (t || NlToDaxStoreService)(core["\u0275\u0275inject"](ad_hoc_query_runner_service.w), core["\u0275\u0275inject"](conceptual_schema_proxy_service.i), core["\u0275\u0275inject"](data_sources_service.D), core["\u0275\u0275inject"](format_string_converter_service.z), core["\u0275\u0275inject"](interpret_listener_service.y), core["\u0275\u0275inject"](lazy_scoped_provider.H), core["\u0275\u0275inject"](localization_service.o), core["\u0275\u0275inject"](intellisense_service.e), core["\u0275\u0275inject"](QuickMeasurePreserverService), core["\u0275\u0275inject"](lazy_provider.E), core["\u0275\u0275inject"](feature_switch_service.vZ), core["\u0275\u0275inject"](QuickMeasureTelemetryService));
            }, NlToDaxStoreService.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: NlToDaxStoreService,
                factory: NlToDaxStoreService.\u0275fac
            }), NlToDaxStoreService;
        }(ngrx_component_store.m1), events = __webpack_require__(8590), rx_component = __webpack_require__(73221), event_bridge_service = __webpack_require__(11494), common = __webpack_require__(77476), localize_directive = __webpack_require__(59968), accessible_click_directive = __webpack_require__(44581), pbi_icon_component = __webpack_require__(86663), pbi_spinner_component = __webpack_require__(24326), qna_input_v2_lazy_component = __webpack_require__(73360), tri_svg_icon_component = __webpack_require__(74913), monaco_editor_host_component = __webpack_require__(1685), BehaviorSubject = __webpack_require__(35510), Subject = __webpack_require__(30794), combineLatest = __webpack_require__(59017), on_resize_directive = __webpack_require__(698), on_focus_enter_directive = __webpack_require__(86425), localize_pipe = __webpack_require__(85102), _c0 = [ "learnMoreLink" ];
        function SuggestedDaxCardComponent_section_6_ng_container_1_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275element"](1, "pbi-spinner"), 
            core["\u0275\u0275elementContainerEnd"]());
        }
        function SuggestedDaxCardComponent_section_6_div_9_button_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r9 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "button", 17), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r9);
                    var ctx_r8 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r8.onToggleDaxExpansion());
                }), core["\u0275\u0275element"](1, "span", 18)(2, "i", 19), core["\u0275\u0275elementEnd"]();
            }
        }
        function SuggestedDaxCardComponent_section_6_div_9_ng_template_2_Template(rf, ctx) {
            if (1 & rf) {
                var _r11 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "button", 17), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r11);
                    var ctx_r10 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r10.onToggleDaxExpansion());
                }), core["\u0275\u0275element"](1, "span", 20)(2, "i", 21), core["\u0275\u0275elementEnd"]();
            }
        }
        function SuggestedDaxCardComponent_section_6_div_9_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div"), core["\u0275\u0275template"](1, SuggestedDaxCardComponent_section_6_div_9_button_1_Template, 3, 0, "button", 15), 
            core["\u0275\u0275template"](2, SuggestedDaxCardComponent_section_6_div_9_ng_template_2_Template, 3, 0, "ng-template", null, 16, core["\u0275\u0275templateRefExtractor"]), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var _r6 = core["\u0275\u0275reference"](3), monacoVm_r1 = core["\u0275\u0275nextContext"]().ngIf;
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", monacoVm_r1.isExpanded)("ngIfElse", _r6);
            }
        }
        var _c1 = function(a0) {
            return {
                display: a0
            };
        };
        function SuggestedDaxCardComponent_section_6_Template(rf, ctx) {
            if (1 & rf) {
                var _r14 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "section", 7), core["\u0275\u0275listener"]("on-resize", function($event) {
                    core["\u0275\u0275restoreView"](_r14);
                    var ctx_r13 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r13.onPaneResize($event));
                }), core["\u0275\u0275template"](1, SuggestedDaxCardComponent_section_6_ng_container_1_Template, 2, 0, "ng-container", 8), 
                core["\u0275\u0275elementStart"](2, "div", 4)(3, "div", 9), core["\u0275\u0275element"](4, "h3", 10), 
                core["\u0275\u0275elementStart"](5, "a", 11, 12), core["\u0275\u0275element"](7, "i", 13), 
                core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementStart"](8, "monaco-editor-host", 14), 
                core["\u0275\u0275listener"]("initialized", function() {
                    core["\u0275\u0275restoreView"](_r14);
                    var ctx_r15 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r15.onMonacoInitialized.next());
                })("on-focus-enter", function($event) {
                    core["\u0275\u0275restoreView"](_r14);
                    var ctx_r16 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r16.onFocusEnterMonacoEditor($event));
                })("onContentChanged", function($event) {
                    core["\u0275\u0275restoreView"](_r14);
                    var ctx_r17 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r17.onContentChanged($event));
                })("onContentHeightChanged", function($event) {
                    core["\u0275\u0275restoreView"](_r14);
                    var ctx_r18 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r18.onContentHeightChanged($event));
                }), core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](9, SuggestedDaxCardComponent_section_6_div_9_Template, 4, 2, "div", 8), 
                core["\u0275\u0275pipe"](10, "async"), core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var monacoVm_r1 = ctx.ngIf, ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", monacoVm_r1.isLoading), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngStyle", core["\u0275\u0275pureFunction1"](9, _c1, monacoVm_r1.isLoading ? "none" : "inherit")), 
                core["\u0275\u0275advance"](6), core["\u0275\u0275property"]("selection", ctx_r0.selection)("formulaText", ctx_r0.formulaText)("customCreationOptions", ctx_r0.monacoCreationOptions)("defaultMonacoProviderConfig", ctx_r0.monacoProviderConfig), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](10, 7, ctx_r0.displayHeightToggle$));
            }
        }
        var _c2 = function(a0) {
            return {
                "margin-top": a0
            };
        }, SuggestedDaxCardComponent = function(_super) {
            function SuggestedDaxCardComponent() {
                var _this = _super.call(this) || this;
                return _this.onAdd = new core.EventEmitter, _this.monacoVm$ = new BehaviorSubject.X({
                    isExpanded: !1,
                    isLoading: !0,
                    height: 117,
                    width: 284,
                    contentHeight: void 0
                }), _this.displayHeightToggle$ = _this.monacoVm$.pipe((0, map.U)(function(vm) {
                    return vm.contentHeight > 117;
                }), (0, distinctUntilChanged.x)()), _this.monacoCreationOptions = {
                    overviewRulerLanes: 0,
                    selectionHighlight: !1,
                    occurrencesHighlight: !1,
                    matchBrackets: "never",
                    lineDecorationsWidth: 0,
                    lineNumbersMinChars: 0,
                    lineNumbers: "off",
                    glyphMargin: !1,
                    mouseWheelZoom: !1,
                    scrollbar: {
                        verticalScrollbarSize: 0,
                        handleMouseWheel: !1
                    },
                    guides: {
                        highlightActiveBracketPair: !1,
                        highlightActiveIndentation: !1,
                        indentation: !1
                    },
                    renderLineHighlight: "none",
                    selectOnLineNumbers: !1
                }, _this.selection = {
                    startPosition: 0,
                    length: 0
                }, _this.monacoProviderConfig = {
                    formatting: {
                        enabled: !0
                    }
                }, _this.onMonacoInitialized = new Subject.xQ, _this.monacoDimensions$ = _this.monacoVm$.pipe((0, 
                map.U)(function(vm) {
                    return {
                        width: vm.width,
                        height: vm.height
                    };
                }), (0, distinctUntilChanged.x)(function(prev, next) {
                    return prev.height === next.height && prev.width === next.width;
                })), _this;
            }
            return (0, tslib_es6.__extends)(SuggestedDaxCardComponent, _super), SuggestedDaxCardComponent.prototype.ngOnInit = function() {
                var _this = this;
                this.formulaText = "Measure = " + this.suggestedDax.daxExpression, this.lifecycleSubscriptions.add((0, 
                combineLatest.aj)([ this.onMonacoInitialized, this.monacoDimensions$ ]).subscribe(function(_a) {
                    var dimensions = _a[1];
                    _this.monacoEditorHost.layout(dimensions.width, dimensions.height);
                }));
            }, SuggestedDaxCardComponent.prototype.onFocusEnterMonacoEditor = function(focusEvent) {
                var _this = this;
                "program" === focusEvent.origin && setTimeout(function() {
                    return _this.learnMoreElement.nativeElement.focus();
                }, 1);
            }, SuggestedDaxCardComponent.prototype.onToggleDaxExpansion = function() {
                var shouldExpand = !this.monacoVm$.value.isExpanded, daxContentHeight = this.monacoVm$.value.contentHeight;
                debug.fF.assertValue(daxContentHeight, "daxContentHeight");
                var updatedHeight = shouldExpand ? daxContentHeight : 117;
                this.monacoVm$.next((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, this.monacoVm$.value), {
                    isExpanded: shouldExpand,
                    height: updatedHeight
                }));
            }, SuggestedDaxCardComponent.prototype.onPaneResize = function(viewport) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var daxContentWidth;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return daxContentWidth = Math.max(viewport.width - 24 - 24, 0), this.monacoVm$.next((0, 
                            tslib_es6.__assign)((0, tslib_es6.__assign)({}, this.monacoVm$.value), {
                                width: daxContentWidth
                            })), [ 4, this.monacoEditorHost.format() ];

                          case 1:
                            return _a.sent(), [ 2 ];
                        }
                    });
                });
            }, SuggestedDaxCardComponent.prototype.onContentChanged = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.monacoEditorHost.format() ];

                          case 1:
                            return _a.sent(), this.monacoVm$.next((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, this.monacoVm$.value), {
                                isLoading: !1
                            })), [ 2 ];
                        }
                    });
                });
            }, SuggestedDaxCardComponent.prototype.onContentHeightChanged = function(contentHeight) {
                var height;
                height = this.monacoVm$.value.isExpanded ? contentHeight : contentHeight > 117 ? 117 : contentHeight, 
                this.monacoVm$.next((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, this.monacoVm$.value), {
                    contentHeight,
                    height
                }));
            }, SuggestedDaxCardComponent.prototype.onAddClick = function() {
                var _a, formula = null === (_a = this.monacoEditorHost.textEditor.getModel()) || void 0 === _a ? void 0 : _a.getValue();
                debug.fF.assertValue(formula, "formula");
                var expression = formula ? formula.substring(_.size("Measure = ")) : this.suggestedDax.daxExpression;
                this.onAdd.emit(expression);
            }, SuggestedDaxCardComponent.prototype.ngOnDestroy = function() {
                return _super.prototype.ngOnDestroy.call(this);
            }, SuggestedDaxCardComponent.\u0275fac = function(t) {
                return new (t || SuggestedDaxCardComponent);
            }, SuggestedDaxCardComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: SuggestedDaxCardComponent,
                selectors: [ [ "suggested-dax-card" ] ],
                viewQuery: function(rf, ctx) {
                    if (1 & rf && (core["\u0275\u0275viewQuery"](monaco_editor_host_component.C, 5), 
                    core["\u0275\u0275viewQuery"](_c0, 5)), 2 & rf) {
                        var _t = void 0;
                        core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx.monacoEditorHost = _t.first), 
                        core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx.learnMoreElement = _t.first);
                    }
                },
                inputs: {
                    suggestedDax: "suggestedDax"
                },
                outputs: {
                    onAdd: "onAdd"
                },
                features: [ core["\u0275\u0275InheritDefinitionFeature"] ],
                decls: 13,
                vars: 17,
                consts: [ [ 1, "preview-container" ], [ "localize", "NlToDax_PreviewValue", 1, "subtitle" ], [ 1, "preview-value", "pbi-font-32-reg", 3, "title" ], [ "class", "dax-container", 3, "on-resize", 4, "ngIf" ], [ 3, "ngStyle" ], [ 1, "footer" ], [ "type", "button", "localize", "ItemAction_Add", 1, "pbi-fluent-button", "primary", 3, "click" ], [ 1, "dax-container", 3, "on-resize" ], [ 4, "ngIf" ], [ 1, "subtitle-container" ], [ "localize", "NlToDax_DaxSubtitle", 1, "subtitle" ], [ "target", "_blank", "rel", "noreferrer noopener", "href", "https://go.microsoft.com/fwlink/?linkid=2174931", 1, "pbi-internal-link" ], [ "learnMoreLink", "" ], [ 1, "glyphicon", "pbi-glyph-help", "glyph-small" ], [ "tabindex", "1", "mode", "dax", "theme", "dax", 3, "selection", "formulaText", "customCreationOptions", "defaultMonacoProviderConfig", "initialized", "on-focus-enter", "onContentChanged", "onContentHeightChanged" ], [ "class", "pbi-icon-button pbi-with-text height-toggle-button", 3, "click", 4, "ngIf", "ngIfElse" ], [ "showMoreButton", "" ], [ 1, "pbi-icon-button", "pbi-with-text", "height-toggle-button", 3, "click" ], [ "localize", "ShowLess", 1, "text" ], [ 1, "glyphicon", "pbi-glyph-chevronupsmall", "glyph-mini" ], [ "localize", "ShowMore", 1, "text" ], [ 1, "glyphicon", "pbi-glyph-chevrondownsmall", "glyph-mini" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementStart"](0, "section", 0), core["\u0275\u0275element"](1, "h3", 1), 
                    core["\u0275\u0275pipe"](2, "localize"), core["\u0275\u0275elementStart"](3, "h2", 2), 
                    core["\u0275\u0275text"](4), core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275element"](5, "hr"), 
                    core["\u0275\u0275template"](6, SuggestedDaxCardComponent_section_6_Template, 11, 11, "section", 3), 
                    core["\u0275\u0275pipe"](7, "async"), core["\u0275\u0275element"](8, "hr", 4), core["\u0275\u0275pipe"](9, "async"), 
                    core["\u0275\u0275elementStart"](10, "section", 5)(11, "button", 6), core["\u0275\u0275listener"]("click", function() {
                        return ctx.onAddClick();
                    }), core["\u0275\u0275pipe"](12, "localize"), core["\u0275\u0275elementEnd"]()()), 
                    2 & rf && (core["\u0275\u0275advance"](1), core["\u0275\u0275attribute"]("aria-label", core["\u0275\u0275pipeBind1"](2, 7, "NlToDax_PreviewValue")), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("title", ctx.suggestedDax.formattedValue), 
                    core["\u0275\u0275attribute"]("aria-label", ctx.suggestedDax.formattedValue), core["\u0275\u0275advance"](1), 
                    core["\u0275\u0275textInterpolate"](ctx.suggestedDax.formattedValue), core["\u0275\u0275advance"](2), 
                    core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](7, 9, ctx.monacoVm$)), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngStyle", core["\u0275\u0275pureFunction1"](15, _c2, core["\u0275\u0275pipeBind1"](9, 11, ctx.displayHeightToggle$) ? "0px" : "12px")), 
                    core["\u0275\u0275advance"](3), core["\u0275\u0275attribute"]("aria-label", core["\u0275\u0275pipeBind1"](12, 13, "ItemAction_Add")));
                },
                dependencies: [ common.NgIf, common.NgStyle, on_resize_directive.O, localize_directive.X, monaco_editor_host_component.C, on_focus_enter_directive.v, pbi_spinner_component.k, common.AsyncPipe, localize_pipe.F ],
                styles: [ '[_nghost-%COMP%]{padding:12px;display:flex;flex-direction:column;background-color:var(--colorNeutralBackground1);color:var(--colorNeutralForeground1);box-shadow:0 0 2px var(--colorNeutralShadowAmbient),0 4px 8px var(--colorNeutralShadowKey)}[_nghost-%COMP%]   .preview-container[_ngcontent-%COMP%]{width:100%}[_nghost-%COMP%]   .preview-container[_ngcontent-%COMP%]   .preview-value[_ngcontent-%COMP%]{text-align:center;width:100%;line-height:42px;margin-top:16px;margin-bottom:20px;text-overflow:ellipsis;white-space:nowrap;overflow:hidden}[_nghost-%COMP%]   .dax-container[_ngcontent-%COMP%]{width:100%}[_nghost-%COMP%]   .dax-container[_ngcontent-%COMP%]   .subtitle-container[_ngcontent-%COMP%]{display:flex;flex-direction:row;align-items:flex-end;padding:12px 0}[_nghost-%COMP%]   .dax-container[_ngcontent-%COMP%]   .subtitle-container[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{display:flex}[_nghost-%COMP%]   .dax-container[_ngcontent-%COMP%]   .subtitle-container[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover{text-decoration:none}[_nghost-%COMP%]   .dax-container[_ngcontent-%COMP%]   .height-toggle-button[_ngcontent-%COMP%]{background-color:var(--colorNeutralBackground1);color:var(--colorBrandForeground1)}[_nghost-%COMP%]   .dax-container[_ngcontent-%COMP%]   .height-toggle-button[_ngcontent-%COMP%]   span.text[_ngcontent-%COMP%]{font-size:var(--sm-font-size, 12px)}[_nghost-%COMP%]   hr[_ngcontent-%COMP%]{background-color:var(--colorNeutralStroke3);height:1px;width:100%;border:none;margin:0}[_nghost-%COMP%]   .footer[_ngcontent-%COMP%]{margin-top:8px;display:flex;flex-direction:row;justify-content:flex-end}[_nghost-%COMP%]   h3.subtitle[_ngcontent-%COMP%]{text-align:start;font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-semi-bold, 600)}[_nghost-%COMP%]   .pbi-fluent-button[_ngcontent-%COMP%]{padding:6px 16px}html:not([dir="rtl"])   [_nghost-%COMP%]   .glyphicon[_ngcontent-%COMP%]{margin-left:4px}html[dir="rtl"]   [_nghost-%COMP%]   .glyphicon[_ngcontent-%COMP%]{margin-right:4px}[_nghost-%COMP%]     monaco-editor-host .monacor-editor{background-color:var(--colorNeutralBackground1)}[_nghost-%COMP%]     monaco-editor-host .scrollbar.vertical{display:none}[_nghost-%COMP%]     monaco-editor-host .lines-content .view-lines{cursor:default}[_nghost-%COMP%]     monaco-editor-host .lines-content .view-lines .view-line{pointer-events:none}[_nghost-%COMP%]     monaco-editor-host .decorationsOverviewRuler{display:none}[_nghost-%COMP%]     monaco-editor-host .cursors-layer .cursor{display:none!important}' ]
            }), SuggestedDaxCardComponent;
        }(rx_component.w), nl_to_dax_component_c0 = [ "qnaInputV2LazyComponent" ];
        function NlToDaxComponent_section_0_ng_container_1_ng_container_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r9 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "div", 4), 
                core["\u0275\u0275element"](2, "pbi-icon", 5)(3, "p", 6), core["\u0275\u0275elementStart"](4, "button", 7), 
                core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r9);
                    var ctx_r8 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r8.onEnableNlToDax());
                }), core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementContainerEnd"]();
            }
            if (2 & rf) {
                var vm_r1 = core["\u0275\u0275nextContext"](2).ngIf;
                core["\u0275\u0275advance"](4), core["\u0275\u0275property"]("disabled", vm_r1.isLoginButtonDisabled);
            }
        }
        function NlToDaxComponent_section_0_ng_container_1_ng_template_2_qna_input_v2_lazy_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r15 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "qna-input-v2-lazy", 15, 16), core["\u0275\u0275listener"]("inputBoxInitialized", function() {
                    core["\u0275\u0275restoreView"](_r15);
                    var ctx_r14 = core["\u0275\u0275nextContext"](4);
                    return core["\u0275\u0275resetView"](ctx_r14.onInputBoxInitialized());
                })("enterKeyPressed", function() {
                    core["\u0275\u0275restoreView"](_r15);
                    var ctx_r16 = core["\u0275\u0275nextContext"](4);
                    return core["\u0275\u0275resetView"](ctx_r16.getDAXResults());
                }), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var vm_r1 = core["\u0275\u0275nextContext"](3).ngIf;
                core["\u0275\u0275property"]("entryPoint", vm_r1.inputBox.entryPoint)("configs", vm_r1.inputBox.configs)("initialUtterance", vm_r1.utterance)("interpretListener", vm_r1.inputBox.interpretListener)("presentationArgs", vm_r1.inputBox.presentationArgs)("qnaSupportedScopes", vm_r1.inputBox.qnaSupportedScopes)("utteranceSuggestions", vm_r1.inputBox.initialSuggestions);
            }
        }
        function NlToDaxComponent_section_0_ng_container_1_ng_template_2_ng_container_6_ng_container_1_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "div", 19), 
            core["\u0275\u0275element"](2, "tri-svg-icon", 20)(3, "span", 21), core["\u0275\u0275elementEnd"](), 
            core["\u0275\u0275elementContainerEnd"]());
        }
        function NlToDaxComponent_section_0_ng_container_1_ng_template_2_ng_container_6_ng_container_2_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "div", 22), 
            core["\u0275\u0275element"](2, "pbi-spinner", 23)(3, "span", 24), core["\u0275\u0275elementEnd"](), 
            core["\u0275\u0275elementContainerEnd"]());
        }
        function NlToDaxComponent_section_0_ng_container_1_ng_template_2_ng_container_6_ng_container_3_div_2_suggested_dax_card_5_Template(rf, ctx) {
            if (1 & rf) {
                var _r28 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "suggested-dax-card", 31), core["\u0275\u0275listener"]("onAdd", function($event) {
                    core["\u0275\u0275restoreView"](_r28);
                    var i_r24 = core["\u0275\u0275nextContext"]().index, ctx_r26 = core["\u0275\u0275nextContext"](6);
                    return core["\u0275\u0275resetView"](ctx_r26.onAddDax($event, i_r24));
                }), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var card_r23 = core["\u0275\u0275nextContext"]().$implicit;
                core["\u0275\u0275property"]("suggestedDax", card_r23.daxDisplay);
            }
        }
        var nl_to_dax_component_c1 = function(a0) {
            return {
                expanded: a0
            };
        }, nl_to_dax_component_c2 = function(a0, a1) {
            return {
                "pbi-glyph-chevronupsmall": a0,
                "pbi-glyph-chevrondownsmall": a1
            };
        };
        function NlToDaxComponent_section_0_ng_container_1_ng_template_2_ng_container_6_ng_container_3_div_2_Template(rf, ctx) {
            if (1 & rf) {
                var _r31 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div", 27)(1, "div", 28), core["\u0275\u0275listener"]("accessible-click", function() {
                    var card_r23 = core["\u0275\u0275restoreView"](_r31).$implicit, ctx_r30 = core["\u0275\u0275nextContext"](6);
                    return core["\u0275\u0275resetView"](ctx_r30.toggleCardExpansion(card_r23));
                }), core["\u0275\u0275elementStart"](2, "span"), core["\u0275\u0275text"](3), core["\u0275\u0275elementEnd"](), 
                core["\u0275\u0275element"](4, "i", 29), core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](5, NlToDaxComponent_section_0_ng_container_1_ng_template_2_ng_container_6_ng_container_3_div_2_suggested_dax_card_5_Template, 1, 1, "suggested-dax-card", 30), 
                core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var card_r23 = ctx.$implicit;
                core["\u0275\u0275property"]("ngClass", core["\u0275\u0275pureFunction1"](5, nl_to_dax_component_c1, card_r23.isExpanded)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275attribute"]("aria-expanded", card_r23.isExpanded), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](card_r23.restatement), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngClass", core["\u0275\u0275pureFunction2"](7, nl_to_dax_component_c2, card_r23.isExpanded, !card_r23.isExpanded)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", card_r23.isExpanded);
            }
        }
        function NlToDaxComponent_section_0_ng_container_1_ng_template_2_ng_container_6_ng_container_3_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "div", 25), 
            core["\u0275\u0275template"](2, NlToDaxComponent_section_0_ng_container_1_ng_template_2_ng_container_6_ng_container_3_div_2_Template, 6, 10, "div", 26), 
            core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var vm_r1 = core["\u0275\u0275nextContext"](4).ngIf;
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngForOf", vm_r1.content.cards);
            }
        }
        function NlToDaxComponent_section_0_ng_container_1_ng_template_2_ng_container_6_ng_container_4_Template(rf, ctx) {
            if (1 & rf) {
                var _r34 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "div", 32), 
                core["\u0275\u0275element"](2, "pbi-icon", 33), core["\u0275\u0275elementStart"](3, "div", 34), 
                core["\u0275\u0275element"](4, "span", 35)(5, "a", 36), core["\u0275\u0275elementEnd"](), 
                core["\u0275\u0275elementStart"](6, "button", 37), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r34);
                    var ctx_r33 = core["\u0275\u0275nextContext"](5);
                    return core["\u0275\u0275resetView"](ctx_r33.onSelectACalculation());
                }), core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementContainerEnd"]();
            }
        }
        function NlToDaxComponent_section_0_ng_container_1_ng_template_2_ng_container_6_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0, 17), core["\u0275\u0275template"](1, NlToDaxComponent_section_0_ng_container_1_ng_template_2_ng_container_6_ng_container_1_Template, 4, 0, "ng-container", 18), 
            core["\u0275\u0275template"](2, NlToDaxComponent_section_0_ng_container_1_ng_template_2_ng_container_6_ng_container_2_Template, 4, 0, "ng-container", 18), 
            core["\u0275\u0275template"](3, NlToDaxComponent_section_0_ng_container_1_ng_template_2_ng_container_6_ng_container_3_Template, 3, 1, "ng-container", 18), 
            core["\u0275\u0275template"](4, NlToDaxComponent_section_0_ng_container_1_ng_template_2_ng_container_6_ng_container_4_Template, 7, 0, "ng-container", 18), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var vm_r1 = core["\u0275\u0275nextContext"](3).ngIf, ctx_r12 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("ngSwitch", vm_r1.content.type), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275property"]("ngSwitchCase", ctx_r12.NlToDaxContentType.Initial), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", ctx_r12.NlToDaxContentType.Loading), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", ctx_r12.NlToDaxContentType.Success), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", ctx_r12.NlToDaxContentType.Error);
            }
        }
        function NlToDaxComponent_section_0_ng_container_1_ng_template_2_Template(rf, ctx) {
            if (1 & rf) {
                var _r37 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "section", 8), core["\u0275\u0275template"](1, NlToDaxComponent_section_0_ng_container_1_ng_template_2_qna_input_v2_lazy_1_Template, 2, 7, "qna-input-v2-lazy", 9), 
                core["\u0275\u0275elementStart"](2, "div", 10)(3, "button", 11), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r37);
                    var ctx_r36 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r36.getDAXResults());
                }), core["\u0275\u0275elementEnd"]()()(), core["\u0275\u0275elementStart"](4, "section", 12), 
                core["\u0275\u0275element"](5, "p", 13), core["\u0275\u0275template"](6, NlToDaxComponent_section_0_ng_container_1_ng_template_2_ng_container_6_Template, 5, 5, "ng-container", 14), 
                core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var vm_r1 = core["\u0275\u0275nextContext"](2).ngIf;
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !!vm_r1.inputBox), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("disabled", vm_r1.isGenerateDaxDisabled), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngIf", !!vm_r1.content);
            }
        }
        function NlToDaxComponent_section_0_ng_container_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, NlToDaxComponent_section_0_ng_container_1_ng_container_1_Template, 5, 1, "ng-container", 1), 
            core["\u0275\u0275template"](2, NlToDaxComponent_section_0_ng_container_1_ng_template_2_Template, 7, 3, "ng-template", null, 3, core["\u0275\u0275templateRefExtractor"]), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var _r6 = core["\u0275\u0275reference"](3), vm_r1 = core["\u0275\u0275nextContext"]().ngIf;
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", vm_r1.activationRequired)("ngIfElse", _r6);
            }
        }
        function NlToDaxComponent_section_0_ng_template_2_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "pbi-spinner");
        }
        function NlToDaxComponent_section_0_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "section"), core["\u0275\u0275template"](1, NlToDaxComponent_section_0_ng_container_1_Template, 4, 2, "ng-container", 1), 
            core["\u0275\u0275template"](2, NlToDaxComponent_section_0_ng_template_2_Template, 1, 0, "ng-template", null, 2, core["\u0275\u0275templateRefExtractor"]), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var vm_r1 = ctx.ngIf, _r3 = core["\u0275\u0275reference"](3);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !!vm_r1 && !vm_r1.loading)("ngIfElse", _r3);
            }
        }
        var NlToDaxComponent = function(_super) {
            function NlToDaxComponent(eventBridge, nlToDaxStoreService, featureSwitchService) {
                var _this = _super.call(this) || this;
                return _this.eventBridge = eventBridge, _this.nlToDaxStoreService = nlToDaxStoreService, 
                _this.featureSwitchService = featureSwitchService, _this.onSwitchToCalculation = new core.EventEmitter, 
                _this.viewModel$ = _this.nlToDaxStoreService.viewModel$, _this.NlToDaxContentType = NlToDaxContentType, 
                _this.subscriptionManager = _this.eventBridge.createChannelSubscriptionManager().subscribe(events.CCe, function(_e, args) {
                    var _a, _b, _c, _d, modelChanges = args.result.changes, newMeasureCreationChange = null === (_a = _.find(modelChanges, function(change) {
                        return change.newMeasureCreated;
                    })) || void 0 === _a ? void 0 : _a.newMeasureCreated, jsonMetadataChange = null === (_b = _.find(modelChanges, function(change) {
                        return change.setJsonExtendedMetadata;
                    })) || void 0 === _b ? void 0 : _b.setJsonExtendedMetadata, blankColumnCreationChange = null === (_c = _.find(modelChanges, function(change) {
                        return change.newCalculatedColumnCreated;
                    })) || void 0 === _c ? void 0 : _c.newCalculatedColumnCreated, formatStringChange = null === (_d = _.find(modelChanges, function(change) {
                        return change.setFormatString;
                    })) || void 0 === _d ? void 0 : _d.setFormatString, ignoreRefresh = !1, isFormattingChangeFromNewQuickMeasure = null != formatStringChange && formatStringChange.modelObject === _this.newMeasureModelObject;
                    null != newMeasureCreationChange && null != jsonMetadataChange ? (ignoreRefresh = !0, 
                    _this.newMeasureModelObject = jsonMetadataChange.modelObject) : isFormattingChangeFromNewQuickMeasure ? (ignoreRefresh = !0, 
                    _this.newMeasureModelObject = void 0) : null != _this.newMeasureModelObject ? _this.newMeasureModelObject = void 0 : null != blankColumnCreationChange && (ignoreRefresh = !0), 
                    ignoreRefresh || _this.onModelChanged();
                }), _this;
            }
            return (0, tslib_es6.__extends)(NlToDaxComponent, _super), NlToDaxComponent.prototype.ngOnInit = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var isActivationRequired$, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.nlToDaxStoreService.initializeState(this.mode, this.parentEvent) ];

                          case 1:
                            return _a.sent(), this.changes$("mode").pipe((0, takeUntil.R)(this.onDestroy$)).subscribe(function(mode) {
                                1 === mode && _this.onSwitchToCalculation.emit();
                            }), isActivationRequired$ = this.changes$("mode").pipe((0, map.U)(function(mode) {
                                return 2 === mode;
                            }), (0, distinctUntilChanged.x)()), this.nlToDaxStoreService.setActivationRequired(isActivationRequired$), 
                            [ 2 ];
                        }
                    });
                });
            }, NlToDaxComponent.prototype.ngOnDestroy = function() {
                this.subscriptionManager.unsubscribeAll(), _super.prototype.ngOnDestroy.call(this);
            }, NlToDaxComponent.prototype.onInputBoxInitialized = function() {
                this.nlToDaxStoreService.setupUtteranceListener(this.qnaInputV2LazyComponent.inputBox.distinctDisplayedUtterance$);
            }, NlToDaxComponent.prototype.getDAXResults = function() {
                this.nlToDaxStoreService.getDAXResults(this.qnaInputV2LazyComponent);
            }, NlToDaxComponent.prototype.onAddDax = function(formattedFormula, index) {
                this.nlToDaxStoreService.saveNewMeasure(formattedFormula, index);
            }, NlToDaxComponent.prototype.onEnableNlToDax = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.nlToDaxStoreService.tryEnableNlToDax() ];

                          case 1:
                            return _a.sent(), [ 2 ];
                        }
                    });
                });
            }, NlToDaxComponent.prototype.onSelectACalculation = function() {
                this.onSwitchToCalculation.emit();
            }, NlToDaxComponent.prototype.toggleCardExpansion = function(card) {
                card.isExpanded = !card.isExpanded;
            }, NlToDaxComponent.prototype.onModelChanged = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.featureSwitchService.getFeatureSwitches() ];

                          case 1:
                            return _a.sent().quickMeasureInitialSuggestions && this.nlToDaxStoreService.updateInitialUtteranceSuggestions(), 
                            this.nlToDaxStoreService.reInterpretCommittedUtterance(this.qnaInputV2LazyComponent), 
                            [ 4, this.nlToDaxStoreService.updateFormulaContext() ];

                          case 2:
                            return _a.sent(), [ 2 ];
                        }
                    });
                });
            }, NlToDaxComponent.\u0275fac = function(t) {
                return new (t || NlToDaxComponent)(core["\u0275\u0275directiveInject"](event_bridge_service.J), core["\u0275\u0275directiveInject"](NlToDaxStoreService), core["\u0275\u0275directiveInject"](feature_switch_service.vZ));
            }, NlToDaxComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: NlToDaxComponent,
                selectors: [ [ "nl-to-dax" ] ],
                viewQuery: function(rf, ctx) {
                    var _t;
                    1 & rf && core["\u0275\u0275viewQuery"](nl_to_dax_component_c0, 5), 2 & rf && core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx.qnaInputV2LazyComponent = _t.first);
                },
                inputs: {
                    parentEvent: "parentEvent",
                    mode: "mode"
                },
                outputs: {
                    onSwitchToCalculation: "onSwitchToCalculation"
                },
                features: [ core["\u0275\u0275InheritDefinitionFeature"] ],
                decls: 2,
                vars: 3,
                consts: [ [ 4, "ngIf" ], [ 4, "ngIf", "ngIfElse" ], [ "loadingTemplate", "" ], [ "readyTemplate", "" ], [ 1, "activation-container" ], [ "name", "signin", "size", "large" ], [ "localize", "NlToDax_Disabled" ], [ "localize", "NlToDax_Enable_Action", 1, "pbi-fluent-button", "primary", 3, "disabled", "click" ], [ 1, "input-container" ], [ "aria-required", "true", "drag-resize-disabled", "true", "tabindex", "-1", 3, "entryPoint", "configs", "initialUtterance", "interpretListener", "presentationArgs", "qnaSupportedScopes", "utteranceSuggestions", "inputBoxInitialized", "enterKeyPressed", 4, "ngIf" ], [ 1, "input-button-container" ], [ "type", "button", "localize", "Generate", 1, "pbi-fluent-button", "primary", 3, "disabled", "click" ], [ 1, "content-container" ], [ "localize", "NlToDax_SuggestedMeasures", 1, "fluentTheme-lg-semiBold" ], [ 3, "ngSwitch", 4, "ngIf" ], [ "aria-required", "true", "drag-resize-disabled", "true", "tabindex", "-1", 3, "entryPoint", "configs", "initialUtterance", "interpretListener", "presentationArgs", "qnaSupportedScopes", "utteranceSuggestions", "inputBoxInitialized", "enterKeyPressed" ], [ "qnaInputV2LazyComponent", "" ], [ 3, "ngSwitch" ], [ 4, "ngSwitchCase" ], [ 1, "initial-content" ], [ "name", "sparkles_32_filled", "sprite", "copilot-icons", 1, "initial-icon" ], [ "localize", "NlToDax_Initial" ], [ 1, "loading-content" ], [ 1, "pbi-spinner-large" ], [ "localize", "NlToDax_Loading" ], [ 1, "success-content" ], [ "class", "daxCard", 3, "ngClass", 4, "ngFor", "ngForOf" ], [ 1, "daxCard", 3, "ngClass" ], [ "role", "button", "tabindex", "0", 1, "cardRestatement", 3, "accessible-click" ], [ 1, "glyphicon", "glyph-mini", 3, "ngClass" ], [ 3, "suggestedDax", "onAdd", 4, "ngIf" ], [ 3, "suggestedDax", "onAdd" ], [ 1, "error-content" ], [ "name", "search", "size", "large" ], [ 1, "error-message" ], [ "localize", "NlToDax_Error" ], [ "target", "_blank", "rel", "noreferrer noopener", "href", "https://go.microsoft.com/fwlink/?linkid=2174611", "localize", "Generic_LearnMore", 1, "pbi-external-link" ], [ "localize", "DaxTemplateDialog_SelectMeasurePrompt", 1, "pbi-fluent-button", "primary", 3, "click" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275template"](0, NlToDaxComponent_section_0_Template, 4, 2, "section", 0), 
                    core["\u0275\u0275pipe"](1, "async")), 2 & rf && core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](1, 1, ctx.viewModel$));
                },
                dependencies: [ common.NgClass, common.NgForOf, common.NgIf, common.NgSwitch, common.NgSwitchCase, localize_directive.X, accessible_click_directive.t, pbi_icon_component._, pbi_spinner_component.k, qna_input_v2_lazy_component.j, tri_svg_icon_component.M, SuggestedDaxCardComponent, common.AsyncPipe ],
                styles: [ '[_nghost-%COMP%]   .input-container[_ngcontent-%COMP%]{margin-top:12px;margin-bottom:24px;display:flex;flex-direction:column}[_nghost-%COMP%]   .input-container[_ngcontent-%COMP%]   .input-button-container[_ngcontent-%COMP%]{margin-top:12px;display:flex;flex-direction:row;justify-content:flex-end}[_nghost-%COMP%]   .content-container[_ngcontent-%COMP%]{color:var(--colorNeutralForeground1)}[_nghost-%COMP%]   .content-container[_ngcontent-%COMP%]   .initial-content[_ngcontent-%COMP%], [_nghost-%COMP%]   .content-container[_ngcontent-%COMP%]   .loading-content[_ngcontent-%COMP%], [_nghost-%COMP%]   .content-container[_ngcontent-%COMP%]   .error-content[_ngcontent-%COMP%]{display:flex;flex-direction:column;justify-content:center;align-items:center;margin:44px 12px 12px}[_nghost-%COMP%]   .content-container[_ngcontent-%COMP%]   .initial-content[_ngcontent-%COMP%]   span[_ngcontent-%COMP%], [_nghost-%COMP%]   .content-container[_ngcontent-%COMP%]   .loading-content[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{text-align:center;margin-top:22px}[_nghost-%COMP%]   .content-container[_ngcontent-%COMP%]   .initial-content[_ngcontent-%COMP%]   .initial-icon[_ngcontent-%COMP%]{width:32px;height:32px}[_nghost-%COMP%]   .content-container[_ngcontent-%COMP%]   .loading-content[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin-top:12px}[_nghost-%COMP%]   .content-container[_ngcontent-%COMP%]   .error-content[_ngcontent-%COMP%]   .error-message[_ngcontent-%COMP%]{text-align:center;margin:22px 0}[_nghost-%COMP%]   .content-container[_ngcontent-%COMP%]   .error-content[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{text-decoration:none;font-size:var(--sm-font-size, 12px)}html:not([dir="rtl"])   [_nghost-%COMP%]   .content-container[_ngcontent-%COMP%]   .error-content[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{margin-left:4px}html[dir="rtl"]   [_nghost-%COMP%]   .content-container[_ngcontent-%COMP%]   .error-content[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{margin-right:4px}[_nghost-%COMP%]   .content-container[_ngcontent-%COMP%]   .success-content[_ngcontent-%COMP%]{display:flex;flex-direction:column}[_nghost-%COMP%]   .content-container[_ngcontent-%COMP%]   .success-content[_ngcontent-%COMP%]   .daxCard[_ngcontent-%COMP%]{margin-bottom:12px;padding-bottom:12px;border-bottom:1px solid var(--colorNeutralStroke1)}[_nghost-%COMP%]   .content-container[_ngcontent-%COMP%]   .success-content[_ngcontent-%COMP%]   .daxCard[_ngcontent-%COMP%]   .cardRestatement[_ngcontent-%COMP%]{display:flex;font-size:var(--sm-font-size, 12px);justify-content:space-between;color:var(--colorBrandForeground1);line-height:16px;cursor:pointer;font-weight:var(--font-weight-semi-bold, 600)}html:not([dir="rtl"])   [_nghost-%COMP%]   .content-container[_ngcontent-%COMP%]   .success-content[_ngcontent-%COMP%]   .daxCard[_ngcontent-%COMP%]   .cardRestatement[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{margin-right:12px}html[dir="rtl"]   [_nghost-%COMP%]   .content-container[_ngcontent-%COMP%]   .success-content[_ngcontent-%COMP%]   .daxCard[_ngcontent-%COMP%]   .cardRestatement[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{margin-left:12px}[_nghost-%COMP%]   .content-container[_ngcontent-%COMP%]   .success-content[_ngcontent-%COMP%]   .daxCard.expanded[_ngcontent-%COMP%]   .cardRestatement[_ngcontent-%COMP%]{margin-bottom:12px}[_nghost-%COMP%]   .activation-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;margin:80px 0}[_nghost-%COMP%]   .pbi-fluent-button[_ngcontent-%COMP%]{padding:6px 16px}[_nghost-%COMP%]   .pbi-fluent-button[disabled][_ngcontent-%COMP%]{cursor:not-allowed}' ]
            }), NlToDaxComponent;
        }(rx_component.w), dax_template_store_service = __webpack_require__(92630), intellisense_host_service = __webpack_require__(34103), intellisense_model_service = __webpack_require__(12846), dax_template_telemetry_service = __webpack_require__(96899), QuickMeasuresPivotType = function(QuickMeasuresPivotType) {
            return QuickMeasuresPivotType[QuickMeasuresPivotType.DaxTemplate = 0] = "DaxTemplate", 
            QuickMeasuresPivotType[QuickMeasuresPivotType.NlToDax = 1] = "NlToDax", QuickMeasuresPivotType;
        }({}), QuickMeasuresPaneStoreService = function(_super) {
            function QuickMeasuresPaneStoreService(daxTemplateTelemetry, quickMeasurePreserver, lazyScoped) {
                var _this = _super.call(this, {
                    loading: !0,
                    pivots: void 0,
                    selectedPivot: void 0,
                    nlToDaxMode: void 0
                }) || this;
                return _this.daxTemplateTelemetry = daxTemplateTelemetry, _this.quickMeasurePreserver = quickMeasurePreserver, 
                _this.lazyScoped = lazyScoped, _this.viewModel$ = _this.state$, _this.updateSelectedPivot = _this.updater(function(state, selectedPivot) {
                    return _.find(state.pivots, function(p) {
                        return p.type === selectedPivot;
                    }).type === QuickMeasuresPivotType.NlToDax && 1 === state.nlToDaxMode ? (debug.fF.assertFail("nlToDax pivot is disabled"), 
                    (0, tslib_es6.__assign)({}, state)) : (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, state), {
                        selectedPivot
                    });
                }), _this.updateNlToDaxMode = _this.updater(function(state, nlToDaxPivotMode) {
                    return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, state), {
                        nlToDaxMode: nlToDaxPivotMode
                    });
                }), _this;
            }
            return (0, tslib_es6.__extends)(QuickMeasuresPaneStoreService, _super), QuickMeasuresPaneStoreService.prototype.initializeState = function(parentEvent) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return this.parentEvent = parentEvent, [ 4, this.setNlToDaxModeObservable() ];

                          case 1:
                            return _a.sent(), this.setState({
                                pivots: [ {
                                    name: "Calculations",
                                    type: QuickMeasuresPivotType.DaxTemplate
                                }, {
                                    name: "NlToDax_Copilot_Suggestions",
                                    type: QuickMeasuresPivotType.NlToDax
                                } ],
                                selectedPivot: QuickMeasuresPivotType.DaxTemplate,
                                loading: !1,
                                nlToDaxMode: 0
                            }), [ 2 ];
                        }
                    });
                });
            }, QuickMeasuresPaneStoreService.prototype.saveDaxTemplateMeasure = function(newMeasureResult, selectExpr, schemaName, visualContainerContext) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return debug.fF.assertValue(newMeasureResult, "new daxTemplate measure result"), 
                            newMeasureResult ? (this.daxTemplateTelemetry.resolveTemplateSelectedEvent(!0), 
                            [ 4, this.quickMeasurePreserver.saveNewMeasure({
                                originType: "DaxTemplate",
                                result: newMeasureResult,
                                originalExpression: selectExpr,
                                schemaName,
                                visualContainerContext
                            }, this.parentEvent) ]) : [ 2 ];

                          case 1:
                            return _a.sent(), [ 2 ];
                        }
                    });
                });
            }, QuickMeasuresPaneStoreService.prototype.setNlToDaxModeObservable = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var allowedInfo$, nlToDaxPivotMode$;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.lazyScoped.get("nlToDaxSupportability") ];

                          case 1:
                            return [ 4, _a.sent().isNlToDaxSupported() ];

                          case 2:
                            return allowedInfo$ = _a.sent(), nlToDaxPivotMode$ = allowedInfo$.pipe((0, map.U)(function(allowedInfo) {
                                if (!allowedInfo) return 1;
                                if (!allowedInfo.isAllowed) {
                                    var disallowedReason = allowedInfo.disallowedReason;
                                    return debug.fF.assertValue(disallowedReason, "nlToDaxSupportability error code missing"), 
                                    "userSignedOut" === disallowedReason || "qnaNotEnabled" === disallowedReason ? 2 : 1;
                                }
                                return 0;
                            })), this.updateNlToDaxMode(nlToDaxPivotMode$), [ 2 ];
                        }
                    });
                });
            }, QuickMeasuresPaneStoreService.\u0275fac = function(t) {
                return new (t || QuickMeasuresPaneStoreService)(core["\u0275\u0275inject"](dax_template_telemetry_service.W), core["\u0275\u0275inject"](QuickMeasurePreserverService), core["\u0275\u0275inject"](lazy_scoped_provider.H));
            }, QuickMeasuresPaneStoreService.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: QuickMeasuresPaneStoreService,
                factory: QuickMeasuresPaneStoreService.\u0275fac
            }), QuickMeasuresPaneStoreService;
        }(ngrx_component_store.m1), localize_attr_directive = __webpack_require__(22844), pbi_pane_component = __webpack_require__(21023), pbi_pane_section_component = __webpack_require__(24548), pbi_pivot_component_c0 = [ "*" ], PbiPivotComponent = function() {
            function PbiPivotComponent() {}
            return PbiPivotComponent.\u0275fac = function(t) {
                return new (t || PbiPivotComponent);
            }, PbiPivotComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: PbiPivotComponent,
                selectors: [ [ "pbi-pivot" ] ],
                ngContentSelectors: pbi_pivot_component_c0,
                decls: 2,
                vars: 0,
                consts: [ [ "role", "tablist", 1, "pbi-pivot", "themeableElement" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275projectionDef"](), core["\u0275\u0275elementStart"](0, "div", 0), 
                    core["\u0275\u0275projection"](1), core["\u0275\u0275elementEnd"]());
                },
                styles: [ '[_nghost-%COMP%]{display:flex}[_nghost-%COMP%]   .pbi-pivot[_ngcontent-%COMP%]{display:flex;width:100%}[_nghost-%COMP%]     pbi-pivot-item button{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-regular, 400)}[_nghost-%COMP%]     .pbi-pivot-item-selected button{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-semi-bold, 600)}[_nghost-%COMP%]     .pbi-pivot-item-selected button .inner-button:after{bottom:-12px}.pbi-pivot-small[_nghost-%COMP%]     pbi-pivot-item button{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-regular, 400)}.pbi-pivot-small[_nghost-%COMP%]     .pbi-pivot-item-selected button{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-semi-bold, 600)}.pbi-pivot-small[_nghost-%COMP%]     .pbi-pivot-item-selected button .inner-button:after{bottom:-12px}.pbi-pivot-large[_nghost-%COMP%]     pbi-pivot-item button{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--lg-font-size, 16px);font-weight:var(--font-weight-regular, 400)}.pbi-pivot-large[_nghost-%COMP%]     .pbi-pivot-item-selected button{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--lg-font-size, 16px);font-weight:var(--font-weight-semi-bold, 600)}.pbi-pivot-large[_nghost-%COMP%]     .pbi-pivot-item-selected button .inner-button:after{bottom:-11px}' ]
            }), PbiPivotComponent;
        }(), PbiPivotItemComponent = function() {
            function PbiPivotItemComponent() {
                this.disabled = !1, this.select = new core.EventEmitter;
            }
            return PbiPivotItemComponent.prototype.onPivotClick = function() {
                this.disabled || this.select.emit();
            }, PbiPivotItemComponent.\u0275fac = function(t) {
                return new (t || PbiPivotItemComponent);
            }, PbiPivotItemComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: PbiPivotItemComponent,
                selectors: [ [ "pbi-pivot-item" ] ],
                hostVars: 2,
                hostBindings: function(rf, ctx) {
                    2 & rf && core["\u0275\u0275classProp"]("pbi-pivot-item-selected", ctx.selected);
                },
                inputs: {
                    selected: "selected",
                    disabled: "disabled"
                },
                outputs: {
                    select: "select"
                },
                ngContentSelectors: pbi_pivot_component_c0,
                decls: 3,
                vars: 4,
                consts: [ [ "role", "tab", "data-testid", "pivot-item-list-btn", 1, "pbi-focus-outline-inset", 3, "click" ], [ 1, "inner-button" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275projectionDef"](), core["\u0275\u0275elementStart"](0, "button", 0), 
                    core["\u0275\u0275listener"]("click", function() {
                        return ctx.onPivotClick();
                    }), core["\u0275\u0275elementStart"](1, "div", 1), core["\u0275\u0275projection"](2), 
                    core["\u0275\u0275elementEnd"]()()), 2 & rf && (core["\u0275\u0275classProp"]("disabled", ctx.disabled), 
                    core["\u0275\u0275attribute"]("aria-disabled", ctx.disabled)("aria-selected", ctx.selected));
                },
                styles: [ '[_nghost-%COMP%]{--colorFieldDisabled: var(--gray-90);--colorBackgroundDisabled: var(--gray-20);--colorBackgroundHover: auto;--colorBackgroundSelected: var(--fluent-theme-primary-color);--colorForeground: auto;display:inline-flex}[data-legacy-theming=false]   [_nghost-%COMP%]{--colorFieldDisabled: var(--colorNeutralBackgroundDisabled);--colorBackgroundDisabled: auto;--colorBackgroundHover: var(--colorNeutralSubtleBackgroundHover);--colorBackgroundSelected: var(--colorNeutralForeground3BrandSelected);--colorForeground: var(--colorNeutralForeground1)}button[_ngcontent-%COMP%]{display:flex;align-items:center;position:relative;border:none;height:44px;padding:11px 8px;color:var(--colorForeground)}button[_ngcontent-%COMP%]:not(:hover){background:none}button[_ngcontent-%COMP%]:hover{background-color:var(--colorBackgroundHover)}button[_ngcontent-%COMP%]:hover   .inner-button[_ngcontent-%COMP%]{position:initial}button[_ngcontent-%COMP%]:hover   .inner-button[_ngcontent-%COMP%]:after{bottom:0;left:0;right:0}button[_ngcontent-%COMP%]:focus   .inner-button[_ngcontent-%COMP%]{position:initial}button[_ngcontent-%COMP%]:focus   .inner-button[_ngcontent-%COMP%]:after{bottom:0;left:0;right:0}button.disabled[_ngcontent-%COMP%]{forced-color-adjust:none;color:var(--colorFieldDisabled, #A19F9D);background-color:var(--colorBackgroundDisabled, #F3F2F1)}button[_ngcontent-%COMP%]   .inner-button[_ngcontent-%COMP%]{display:flex;align-items:center;margin:0 10px;position:relative}.pbi-pivot-item-selected[_nghost-%COMP%]   .inner-button[_ngcontent-%COMP%]:after{content:"";position:absolute;display:block;left:0;right:0;height:4px;background:var(--colorBackgroundSelected, #F2C811)}@media (forced-colors: active){.pbi-pivot-item-selected[_nghost-%COMP%]   .inner-button[_ngcontent-%COMP%]:after{background-color:var(--globalColorhcHighlight)!important}}' ]
            }), PbiPivotItemComponent;
        }(), pbi_tooltip_directive = __webpack_require__(36858), quick_measures_template_lazy_component = __webpack_require__(39161);
        function QuickMeasuresPaneComponent_ng_container_0_pbi_pane_1_div_2_ng_container_3_pbi_pivot_item_2_tri_svg_icon_3_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "tri-svg-icon", 18);
        }
        var quick_measures_pane_component_c0 = function() {
            return {
                "aria-label": "NlToDax_NotSupported"
            };
        };
        function QuickMeasuresPaneComponent_ng_container_0_pbi_pane_1_div_2_ng_container_3_pbi_pivot_item_2_i_7_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "i", 19), 2 & rf && core["\u0275\u0275property"]("localizeAttr", core["\u0275\u0275pureFunction0"](1, quick_measures_pane_component_c0));
        }
        function QuickMeasuresPaneComponent_ng_container_0_pbi_pane_1_div_2_ng_container_3_pbi_pivot_item_2_Template(rf, ctx) {
            if (1 & rf) {
                var _r15 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "pbi-pivot-item", 14), core["\u0275\u0275listener"]("select", function() {
                    var pivot_r11 = core["\u0275\u0275restoreView"](_r15).$implicit, ctx_r14 = core["\u0275\u0275nextContext"](5);
                    return core["\u0275\u0275resetView"](ctx_r14.onPivotSelected(pivot_r11.type));
                }), core["\u0275\u0275elementStart"](1, "div", 15), core["\u0275\u0275pipe"](2, "localize"), 
                core["\u0275\u0275template"](3, QuickMeasuresPaneComponent_ng_container_0_pbi_pane_1_div_2_ng_container_3_pbi_pivot_item_2_tri_svg_icon_3_Template, 1, 0, "tri-svg-icon", 16), 
                core["\u0275\u0275elementStart"](4, "span"), core["\u0275\u0275text"](5), core["\u0275\u0275pipe"](6, "localize"), 
                core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](7, QuickMeasuresPaneComponent_ng_container_0_pbi_pane_1_div_2_ng_container_3_pbi_pivot_item_2_i_7_Template, 1, 2, "i", 17), 
                core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var pivot_r11 = ctx.$implicit, vm_r3 = core["\u0275\u0275nextContext"](3).ngIf, ctx_r8 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275property"]("selected", vm_r3.selectedPivot === pivot_r11.type)("disabled", ctx_r8.isNlToDaxPivotDisabled(pivot_r11.type, vm_r3.nlToDaxMode)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("pbiTooltip", core["\u0275\u0275pipeBind1"](2, 7, "NlToDax_NotSupported"))("pbiTooltipDisabled", !ctx_r8.isNlToDaxPivotDisabled(pivot_r11.type, vm_r3.nlToDaxMode)), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", pivot_r11.type === ctx_r8.QuickMeasuresPivotType.NlToDax), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](6, 9, pivot_r11.name)), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", ctx_r8.isNlToDaxPivotDisabled(pivot_r11.type, vm_r3.nlToDaxMode));
            }
        }
        function QuickMeasuresPaneComponent_ng_container_0_pbi_pane_1_div_2_ng_container_3_section_5_Template(rf, ctx) {
            if (1 & rf) {
                var _r18 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "section", 20), core["\u0275\u0275element"](1, "quick-measures-template-lazy", 21), 
                core["\u0275\u0275elementStart"](2, "section", 22)(3, "button", 23), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r18);
                    var ctx_r17 = core["\u0275\u0275nextContext"](5);
                    return core["\u0275\u0275resetView"](ctx_r17.onDaxTemplateCommit());
                }), core["\u0275\u0275pipe"](4, "async"), core["\u0275\u0275elementEnd"]()()();
            }
            if (2 & rf) {
                var ctx_r9 = core["\u0275\u0275nextContext"](5);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("showFieldList", !1), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("disabled", core["\u0275\u0275pipeBind1"](4, 2, ctx_r9.disableCommit$));
            }
        }
        function QuickMeasuresPaneComponent_ng_container_0_pbi_pane_1_div_2_ng_container_3_ng_container_6_Template(rf, ctx) {
            if (1 & rf) {
                var _r20 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "nl-to-dax", 24), 
                core["\u0275\u0275listener"]("onSwitchToCalculation", function() {
                    core["\u0275\u0275restoreView"](_r20);
                    var ctx_r19 = core["\u0275\u0275nextContext"](5);
                    return core["\u0275\u0275resetView"](ctx_r19.onPivotSelected(ctx_r19.QuickMeasuresPivotType.DaxTemplate));
                }), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementContainerEnd"]();
            }
            if (2 & rf) {
                var vm_r3 = core["\u0275\u0275nextContext"](3).ngIf, ctx_r10 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("mode", vm_r3.nlToDaxMode)("parentEvent", ctx_r10.openPaneEvent);
            }
        }
        function QuickMeasuresPaneComponent_ng_container_0_pbi_pane_1_div_2_ng_container_3_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "pbi-pivot", 8), 
            core["\u0275\u0275template"](2, QuickMeasuresPaneComponent_ng_container_0_pbi_pane_1_div_2_ng_container_3_pbi_pivot_item_2_Template, 8, 11, "pbi-pivot-item", 9), 
            core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](3, "div", 10), 
            core["\u0275\u0275elementContainerStart"](4, 11), core["\u0275\u0275template"](5, QuickMeasuresPaneComponent_ng_container_0_pbi_pane_1_div_2_ng_container_3_section_5_Template, 5, 4, "section", 12), 
            core["\u0275\u0275template"](6, QuickMeasuresPaneComponent_ng_container_0_pbi_pane_1_div_2_ng_container_3_ng_container_6_Template, 2, 2, "ng-container", 13), 
            core["\u0275\u0275elementContainerEnd"](), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementContainerEnd"]()), 
            2 & rf) {
                var vm_r3 = core["\u0275\u0275nextContext"](2).ngIf, ctx_r5 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngForOf", vm_r3.pivots), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngSwitch", vm_r3.selectedPivot), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", ctx_r5.QuickMeasuresPivotType.DaxTemplate), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", ctx_r5.QuickMeasuresPivotType.NlToDax);
            }
        }
        function QuickMeasuresPaneComponent_ng_container_0_pbi_pane_1_div_2_ng_template_4_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "pbi-spinner");
        }
        function QuickMeasuresPaneComponent_ng_container_0_pbi_pane_1_div_2_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 4)(1, "section"), core["\u0275\u0275element"](2, "p", 5), 
            core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](3, QuickMeasuresPaneComponent_ng_container_0_pbi_pane_1_div_2_ng_container_3_Template, 7, 4, "ng-container", 6), 
            core["\u0275\u0275template"](4, QuickMeasuresPaneComponent_ng_container_0_pbi_pane_1_div_2_ng_template_4_Template, 1, 0, "ng-template", null, 7, core["\u0275\u0275templateRefExtractor"]), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var _r6 = core["\u0275\u0275reference"](5), vm_r3 = core["\u0275\u0275nextContext"]().ngIf, paneViewModel_r1 = core["\u0275\u0275nextContext"]().ngIf;
                core["\u0275\u0275property"]("hidden", !paneViewModel_r1.isPaneExpanded), core["\u0275\u0275advance"](3), 
                core["\u0275\u0275property"]("ngIf", !vm_r3.loading)("ngIfElse", _r6);
            }
        }
        function QuickMeasuresPaneComponent_ng_container_0_pbi_pane_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r26 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "pbi-pane", 2), core["\u0275\u0275listener"]("onToggle", function() {
                    core["\u0275\u0275restoreView"](_r26);
                    var ctx_r25 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r25.onPaneToggled());
                })("onCollapse", function() {
                    core["\u0275\u0275restoreView"](_r26);
                    var ctx_r27 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r27.onPaneCollapsed());
                }), core["\u0275\u0275elementStart"](1, "pbi-pane-section"), core["\u0275\u0275template"](2, QuickMeasuresPaneComponent_ng_container_0_pbi_pane_1_div_2_Template, 6, 3, "div", 3), 
                core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var paneViewModel_r1 = core["\u0275\u0275nextContext"]().ngIf, ctx_r2 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("expanded", paneViewModel_r1.isPaneExpanded)("title", paneViewModel_r1.title)("allowToggle", !ctx_r2.isPaneSwitcherSupported)("optionsSetting", paneViewModel_r1.optionsSetting)("showCollapse", ctx_r2.isPaneSwitcherSupported), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", paneViewModel_r1.isPaneVisible);
            }
        }
        function QuickMeasuresPaneComponent_ng_container_0_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, QuickMeasuresPaneComponent_ng_container_0_pbi_pane_1_Template, 3, 6, "pbi-pane", 1), 
            core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275elementContainerEnd"]()), 
            2 & rf) {
                var ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](2, 1, ctx_r0.viewModel$));
            }
        }
        var QuickMeasuresPaneComponent = function() {
            function QuickMeasuresPaneComponent(daxTemplateStore, lazyScoped, panesVisibilityService, quickMeasuresPaneStore, quickMeasureTelemetry) {
                this.daxTemplateStore = daxTemplateStore, this.lazyScoped = lazyScoped, this.panesVisibilityService = panesVisibilityService, 
                this.quickMeasuresPaneStore = quickMeasuresPaneStore, this.quickMeasureTelemetry = quickMeasureTelemetry, 
                this.viewModel$ = this.quickMeasuresPaneStore.viewModel$, this.QuickMeasuresPivotType = QuickMeasuresPivotType, 
                this.disableCommit$ = this.daxTemplateStore.validation$.pipe((0, map.U)(function(_a) {
                    var allParametersSet = _a.allParametersSet;
                    return !_.isEmpty(_a.result.errors) || !allParametersSet;
                })), this.paneViewModel$ = this.panesVisibilityService.getPanes$().pipe((0, map.U)(function(panes) {
                    return panes.quickMeasures;
                }));
            }
            return QuickMeasuresPaneComponent.prototype.ngOnInit = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var quickMeasuresService;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.lazyScoped.get("quickMeasures") ];

                          case 1:
                            return quickMeasuresService = _a.sent(), debug.fF.assertValue(quickMeasuresService, "quickMeasuresService"), 
                            this.quickMeasureInputs = quickMeasuresService.inputArgs, debug.fF.assertValue(this.quickMeasureInputs.daxTemplate, "quickMeasuresService daxTemplateArgs"), 
                            debug.fF.assertValue(this.quickMeasureInputs.nlToDax, "quickMeasuresService nlToDaxArgs"), 
                            this.openPaneEvent = this.quickMeasureTelemetry.logOpenPaneEvent(this.quickMeasureInputs.entryPoint), 
                            [ 4, this.quickMeasuresPaneStore.initializeState(this.openPaneEvent) ];

                          case 2:
                            return _a.sent(), [ 4, this.daxTemplateStore.initialize(this.quickMeasureInputs.daxTemplate) ];

                          case 3:
                            return _a.sent(), [ 2 ];
                        }
                    });
                });
            }, Object.defineProperty(QuickMeasuresPaneComponent.prototype, "isPaneSwitcherSupported", {
                get: function() {
                    return this.panesVisibilityService.isPaneSwitcherSupported();
                },
                enumerable: !1,
                configurable: !0
            }), QuickMeasuresPaneComponent.prototype.onDaxTemplateCommit = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var newMeasureResult, _a;
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return [ 4, this.daxTemplateStore.getNewMeasureResult() ];

                          case 1:
                            return newMeasureResult = _b.sent(), [ 4, this.quickMeasuresPaneStore.saveDaxTemplateMeasure(newMeasureResult, (_a = this.quickMeasureInputs).originalExpr, _a.daxTemplate.schemaName, _a.visualContainerContext) ];

                          case 2:
                            return _b.sent(), [ 2 ];
                        }
                    });
                });
            }, QuickMeasuresPaneComponent.prototype.onPivotSelected = function(pivotType) {
                this.quickMeasureTelemetry.logPivotSelectedEvent(this.openPaneEvent, pivotType === QuickMeasuresPivotType.DaxTemplate ? "DaxTemplate" : "NlToDax"), 
                this.quickMeasuresPaneStore.updateSelectedPivot(pivotType);
            }, QuickMeasuresPaneComponent.prototype.onPaneToggled = function() {
                this.panesVisibilityService.togglePaneExpansion("quickMeasures");
            }, QuickMeasuresPaneComponent.prototype.onPaneCollapsed = function() {
                this.panesVisibilityService.setPaneExpansion("quickMeasures", !1);
            }, QuickMeasuresPaneComponent.prototype.isNlToDaxPivotDisabled = function(pivotType, nlToDaxMode) {
                return pivotType === QuickMeasuresPivotType.NlToDax && 1 === nlToDaxMode;
            }, QuickMeasuresPaneComponent.prototype.ngOnDestroy = function() {
                this.daxTemplateStore.destroy();
            }, QuickMeasuresPaneComponent.\u0275fac = function(t) {
                return new (t || QuickMeasuresPaneComponent)(core["\u0275\u0275directiveInject"](dax_template_store_service.Xy), core["\u0275\u0275directiveInject"](lazy_scoped_provider.H), core["\u0275\u0275directiveInject"](panes_visibility_service.r), core["\u0275\u0275directiveInject"](QuickMeasuresPaneStoreService), core["\u0275\u0275directiveInject"](QuickMeasureTelemetryService));
            }, QuickMeasuresPaneComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: QuickMeasuresPaneComponent,
                selectors: [ [ "quick-measures-pane" ] ],
                features: [ core["\u0275\u0275ProvidersFeature"]([ dax_template_store_service.Xy, intellisense_host_service.TH, intellisense_service.e, intellisense_model_service.p, interpret_listener_service.y, NlToDaxStoreService, QuickMeasurePreserverService, QuickMeasuresPaneStoreService ]) ],
                decls: 2,
                vars: 3,
                consts: [ [ 4, "ngIf" ], [ 3, "expanded", "title", "allowToggle", "optionsSetting", "showCollapse", "onToggle", "onCollapse", 4, "ngIf" ], [ 3, "expanded", "title", "allowToggle", "optionsSetting", "showCollapse", "onToggle", "onCollapse" ], [ "class", "pane-contents", 3, "hidden", 4, "ngIf" ], [ 1, "pane-contents", 3, "hidden" ], [ "localize", "QuickMeasuresPane_Description" ], [ 4, "ngIf", "ngIfElse" ], [ "loadingTemplate", "" ], [ 1, "pbi-pivot-small" ], [ 3, "selected", "disabled", "select", 4, "ngFor", "ngForOf" ], [ 1, "pivot-contents" ], [ 3, "ngSwitch" ], [ "class", "dax-template-container", 4, "ngSwitchCase" ], [ 4, "ngSwitchCase" ], [ 3, "selected", "disabled", "select" ], [ "pbiTooltipPosition", "below", 1, "pivot-tab", 3, "pbiTooltip", "pbiTooltipDisabled" ], [ "class", "pivot-icon", "name", "sparkles_28_filled", "sprite", "copilot-icons", 4, "ngIf" ], [ "tabindex", "0", "aria-disabled", "true", "class", "glyphicon pbi-glyph-info glyph-small", 3, "localizeAttr", 4, "ngIf" ], [ "name", "sparkles_28_filled", "sprite", "copilot-icons", 1, "pivot-icon" ], [ "tabindex", "0", "aria-disabled", "true", 1, "glyphicon", "pbi-glyph-info", "glyph-small", 3, "localizeAttr" ], [ 1, "dax-template-container" ], [ 3, "showFieldList" ], [ 1, "dax-template-footer" ], [ "type", "button", "localize", "ItemAction_Add", 1, "pbi-fluent-button", "primary", 3, "disabled", "click" ], [ 3, "mode", "parentEvent", "onSwitchToCalculation" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275template"](0, QuickMeasuresPaneComponent_ng_container_0_Template, 3, 3, "ng-container", 0), 
                    core["\u0275\u0275pipe"](1, "async")), 2 & rf && core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](1, 1, ctx.paneViewModel$));
                },
                dependencies: [ common.NgForOf, common.NgIf, common.NgSwitch, common.NgSwitchCase, localize_directive.X, localize_attr_directive.b, pbi_pane_component.VO, pbi_pane_section_component.i, PbiPivotComponent, PbiPivotItemComponent, pbi_spinner_component.k, pbi_tooltip_directive.V, tri_svg_icon_component.M, quick_measures_template_lazy_component.w, NlToDaxComponent, common.AsyncPipe, localize_pipe.F ],
                styles: [ '[_nghost-%COMP%]   .pane-contents[_ngcontent-%COMP%]{display:flex;flex-direction:column;height:100%;width:100%;flex:1 0 0}[_nghost-%COMP%]   .pane-contents[_ngcontent-%COMP%]   .pivot-tab[_ngcontent-%COMP%]{display:flex;align-items:center}[_nghost-%COMP%]   .pane-contents[_ngcontent-%COMP%]   .pivot-tab[_ngcontent-%COMP%]   .glyphicon[_ngcontent-%COMP%]{color:var(--gray-180, #252423);align-self:flex-end}html:not([dir="rtl"])   [_nghost-%COMP%]   .pane-contents[_ngcontent-%COMP%]   .pivot-tab[_ngcontent-%COMP%]   .glyphicon[_ngcontent-%COMP%]{margin-left:4px}html[dir="rtl"]   [_nghost-%COMP%]   .pane-contents[_ngcontent-%COMP%]   .pivot-tab[_ngcontent-%COMP%]   .glyphicon[_ngcontent-%COMP%]{margin-right:4px}[_nghost-%COMP%]   .pane-contents[_ngcontent-%COMP%]   .pivot-tab[_ngcontent-%COMP%]   .pivot-icon[_ngcontent-%COMP%]{width:20px;height:20px}html:not([dir="rtl"])   [_nghost-%COMP%]   .pane-contents[_ngcontent-%COMP%]   .pivot-tab[_ngcontent-%COMP%]   .pivot-icon[_ngcontent-%COMP%]{margin-right:8px}html[dir="rtl"]   [_nghost-%COMP%]   .pane-contents[_ngcontent-%COMP%]   .pivot-tab[_ngcontent-%COMP%]   .pivot-icon[_ngcontent-%COMP%]{margin-left:8px}[_nghost-%COMP%]   .pivot-contents[_ngcontent-%COMP%]{height:100%;padding:12px 4px 0}[_nghost-%COMP%]   .pivot-contents[_ngcontent-%COMP%]   .dax-template-container[_ngcontent-%COMP%]{height:100%;display:grid;grid-template-rows:1fr auto;grid-template-areas:"form" "footer"}[_nghost-%COMP%]   .pivot-contents[_ngcontent-%COMP%]   quick-measures-template-lazy[_ngcontent-%COMP%]{grid-area:form}[_nghost-%COMP%]   .pivot-contents[_ngcontent-%COMP%]   .dax-template-footer[_ngcontent-%COMP%]{height:52px;grid-area:footer;display:flex;flex-direction:row;align-items:center;justify-content:flex-end}[_nghost-%COMP%]   .pivot-contents[_ngcontent-%COMP%]   .pbi-fluent-button[_ngcontent-%COMP%]{padding:6px 16px}[_nghost-%COMP%]     quick-measures-template mat-select{background-color:var(--fluent-theme-white-color, #FFF)}[_nghost-%COMP%]     quick-measures-template .label label{font-size:var(--md-font-size, 14px)!important}[_nghost-%COMP%]     quick-measures-template .slicer-dropdown-menu{background-color:var(--fluent-theme-white-color, #FFF)}[_nghost-%COMP%]     pbi-pane-section{height:100%}' ]
            }), QuickMeasuresPaneComponent;
        }(), account_service = __webpack_require__(5944), exploration_capabilities_service = __webpack_require__(48145), qnaProxyPath = __webpack_require__(12123), qna_supportability_util = __webpack_require__(91592), startWith = __webpack_require__(22318), switchMap = __webpack_require__(81905), NlToDaxSupportabilityProvider = {
            provide: "nlToDaxSupportability",
            useFactory: function(accountService, conceptualSchemaProxy, dataSources, explorationCapabilities, lazyProvider, qnaProxyPath) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        return [ 2, new NlToDaxSupportabilityService(accountService, conceptualSchemaProxy, dataSources, explorationCapabilities, lazyProvider, qnaProxyPath) ];
                    });
                });
            },
            deps: [ account_service.B, conceptual_schema_proxy_service.i, data_sources_service.D, exploration_capabilities_service.U, lazy_provider.E, qnaProxyPath.n ]
        }, NlToDaxSupportabilityService = function() {
            function NlToDaxSupportabilityService(accountService, conceptualSchemaProxy, dataSources, explorationCapabilities, lazyProvider, qnaProxyPath) {
                this.accountService = accountService, this.conceptualSchemaProxy = conceptualSchemaProxy, 
                this.dataSources = dataSources, this.explorationCapabilities = explorationCapabilities, 
                this.lazyProvider = lazyProvider, this.qnaProxyPath = qnaProxyPath;
            }
            return NlToDaxSupportabilityService.prototype.isNlToDaxSupported = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var qnaSupportability, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.lazyProvider.get(this.qnaProxyPath || "@powerbi/Qna/qnaweb.module#QnaWebModule", "qnaSupportabilityService") ];

                          case 1:
                            return qnaSupportability = _a.sent(), debug.fF.assertValue(qnaSupportability, "qnaSupportability"), 
                            qnaSupportability ? [ 2, (0, from.D)(null == qnaSupportability ? void 0 : qnaSupportability.qnaSettingsChanged$).pipe((0, 
                            startWith.O)(!0), (0, switchMap.w)(function() {
                                return _this.getNlToDaxAllowedInfo(qnaSupportability);
                            })) ] : [ 2, (0, of.of)(void 0) ];
                        }
                    });
                });
            }, NlToDaxSupportabilityService.prototype.tryEnableNlToDax = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var signedIn, qnaSupportability, capabilities, schema, isQnaAllowedInfo;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.accountService.isSignedInAsync() ];

                          case 1:
                            return (signedIn = _a.sent()) ? [ 3, 3 ] : [ 4, this.accountService.trySignInAsync("SignInForNLToDax") ];

                          case 2:
                            signedIn = _a.sent(), _a.label = 3;

                          case 3:
                            return signedIn ? [ 4, this.lazyProvider.get(this.qnaProxyPath || "@powerbi/Qna/qnaweb.module#QnaWebModule", "qnaSupportabilityService") ] : [ 3, 7 ];

                          case 4:
                            return qnaSupportability = _a.sent(), debug.fF.assertValue(qnaSupportability, "qnaSupportability"), 
                            qnaSupportability ? (capabilities = this.explorationCapabilities.getCapabilities(), 
                            [ 4, this.conceptualSchemaProxy.get(this.dataSources.get()) ]) : [ 2 ];

                          case 5:
                            return schema = _a.sent(), (isQnaAllowedInfo = (0, qna_supportability_util.H)(capabilities, schema, qnaSupportability)).isAllowed || "qnaNotEnabled" !== isQnaAllowedInfo.disallowedReason || !qnaSupportability.canAnyUserEnableQna() ? [ 3, 7 ] : [ 4, qnaSupportability.enableQna() ];

                          case 6:
                            _a.sent(), _a.label = 7;

                          case 7:
                            return [ 2 ];
                        }
                    });
                });
            }, NlToDaxSupportabilityService.prototype.getNlToDaxAllowedInfo = function(qnaSupportability) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var capabilities, schema, isQnaAllowedInfo;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return capabilities = this.explorationCapabilities.getCapabilities(), [ 4, this.conceptualSchemaProxy.get(this.dataSources.get()) ];

                          case 1:
                            return schema = _a.sent(), (isQnaAllowedInfo = (0, qna_supportability_util.H)(capabilities, schema, qnaSupportability)).isAllowed ? [ 4, this.accountService.isSignedInAsync() ] : (debug.fF.assertValue(isQnaAllowedInfo.disallowedReason, "qna disallowedReason not defined"), 
                            [ 2, {
                                isAllowed: !1,
                                disallowedReason: isQnaAllowedInfo.disallowedReason
                            } ]);

                          case 2:
                            return _a.sent() ? qnaSupportability.modelSupportsNlToDax() ? "Enabled" !== qnaSupportability.getNlToDaxStatus() ? [ 2, {
                                isAllowed: !1,
                                disallowedReason: "dataGeoLocked"
                            } ] : [ 2, {
                                isAllowed: !0
                            } ] : [ 2, {
                                isAllowed: !1,
                                disallowedReason: "notSupported"
                            } ] : [ 2, {
                                isAllowed: !1,
                                disallowedReason: "userSignedOut"
                            } ];
                        }
                    });
                });
            }, NlToDaxSupportabilityService.\u0275fac = function(t) {
                core["\u0275\u0275invalidFactory"]();
            }, NlToDaxSupportabilityService.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: NlToDaxSupportabilityService,
                factory: NlToDaxSupportabilityService.\u0275fac
            }), NlToDaxSupportabilityService;
        }(), QuickMeasuresLazyProvider = {
            provide: "quickMeasures",
            useFactory: function(featureSwitchService, lazyScoped, panesVisibilityService) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        return [ 2, new QuickMeasuresService(featureSwitchService, lazyScoped, panesVisibilityService) ];
                    });
                });
            },
            deps: [ feature_switch_service.vZ, lazy_scoped_provider.H, panes_visibility_service.r ]
        }, QuickMeasuresService = function() {
            function QuickMeasuresService(featureSwitchService, lazyScoped, panesVisibilityService) {
                this.featureSwitchService = featureSwitchService, this.lazyScoped = lazyScoped, 
                this.panesVisibilityService = panesVisibilityService, this._inputArgs = {
                    nlToDax: void 0,
                    daxTemplate: void 0,
                    entryPoint: void 0,
                    originalExpr: void 0,
                    visualContainerContext: void 0
                };
            }
            return Object.defineProperty(QuickMeasuresService.prototype, "inputArgs", {
                get: function() {
                    return this._inputArgs;
                },
                enumerable: !1,
                configurable: !0
            }), QuickMeasuresService.prototype.launchQuickMeasures = function(selectExpr, entryPoint, targetEntityName, visualContainerContext) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var quickCalcService, daxTemplateArgs, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.lazyScoped.get("quickCalcModern") ];

                          case 1:
                            return [ 4, (quickCalcService = _a.sent()).buildDaxTemplateArgs(selectExpr, entryPoint, visualContainerContext) ];

                          case 2:
                            return daxTemplateArgs = _a.sent(), this._inputArgs.daxTemplate = daxTemplateArgs, 
                            this._inputArgs.originalExpr = selectExpr, this._inputArgs.visualContainerContext = visualContainerContext, 
                            this._inputArgs.nlToDax = {
                                targetEntityName
                            }, this._inputArgs.entryPoint = entryPoint, this.featureSwitchService.featureSwitches$.pipe((0, 
                            take.q)(1)).subscribe(function(featureSwitches) {
                                return (0, tslib_es6.__awaiter)(_this, void 0, void 0, function() {
                                    return (0, tslib_es6.__generator)(this, function(_a) {
                                        return featureSwitches.NlToDax ? [ 2, this.launchQuickMeasuresPane(entryPoint) ] : [ 2, quickCalcService.launchDaxTemplateDialog(selectExpr, this.inputArgs.daxTemplate, visualContainerContext) ];
                                    });
                                });
                            }), [ 2 ];
                        }
                    });
                });
            }, QuickMeasuresService.prototype.launchQuickMeasuresPane = function(entryPoint) {
                this.panesVisibilityService.isPaneVisible("quickMeasures") && "Ribbon" !== entryPoint || this.panesVisibilityService.togglePaneVisibility("quickMeasures");
            }, QuickMeasuresService.\u0275fac = function(t) {
                return new (t || QuickMeasuresService)(core["\u0275\u0275inject"](feature_switch_service.vZ), core["\u0275\u0275inject"](lazy_scoped_provider.H), core["\u0275\u0275inject"](panes_visibility_service.r));
            }, QuickMeasuresService.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: QuickMeasuresService,
                factory: QuickMeasuresService.\u0275fac
            }), QuickMeasuresService;
        }(), a11y_module = __webpack_require__(20914), Data_module = __webpack_require__(52910), Explore_module = __webpack_require__(31109), ExploreUI_module = __webpack_require__(87121), feature_switch_module = __webpack_require__(76521), lazy_load_module = __webpack_require__(82156), localization_module = __webpack_require__(79061), MonacoEditorUI_module = __webpack_require__(68101), Qna_module = __webpack_require__(1931), QnaUI_module = __webpack_require__(11429), UILibrary_module = __webpack_require__(94785), pbi_icon_module = __webpack_require__(93367), pbi_pane_module = __webpack_require__(13254), PbiPivotModule = function() {
            function PbiPivotModule() {}
            return PbiPivotModule.\u0275fac = function(t) {
                return new (t || PbiPivotModule);
            }, PbiPivotModule.\u0275mod = core["\u0275\u0275defineNgModule"]({
                type: PbiPivotModule
            }), PbiPivotModule.\u0275inj = core["\u0275\u0275defineInjector"]({
                imports: [ common.CommonModule ]
            }), PbiPivotModule;
        }(), pbi_spinner_module = __webpack_require__(16748), pbi_tooltip_module = __webpack_require__(16095), tri_svg_icon = __webpack_require__(17177), quick_measures_ui_eager_module = __webpack_require__(89200), lazyManifests = [ {
            type: QuickMeasuresPaneComponent,
            componentId: "QuickMeasuresPaneComponentId"
        } ], QuickMeasuresLazyModule = function() {
            function QuickMeasuresLazyModule() {}
            return QuickMeasuresLazyModule.\u0275fac = function(t) {
                return new (t || QuickMeasuresLazyModule);
            }, QuickMeasuresLazyModule.\u0275mod = core["\u0275\u0275defineNgModule"]({
                type: QuickMeasuresLazyModule
            }), QuickMeasuresLazyModule.\u0275inj = core["\u0275\u0275defineInjector"]({
                providers: [ QuickMeasuresLazyProvider, NlToDaxSupportabilityProvider, QuickMeasureTelemetryService ],
                imports: [ common.CommonModule, CultureFormatInfoModule, Data_module.O, Explore_module.F, ExploreUI_module.J, feature_switch_module.A3, lazy_load_module.N.withManifests(lazyManifests), localization_module.v, MonacoEditorUI_module.B, a11y_module._, pbi_icon_module.U, pbi_pane_module.x, PbiPivotModule, pbi_spinner_module.H, pbi_tooltip_module.Z, Qna_module.T, QnaUI_module.m, Telemetry.e3, tri_svg_icon.T6, UILibrary_module.g, quick_measures_ui_eager_module.W ]
            }), QuickMeasuresLazyModule;
        }();
    }
} ]);