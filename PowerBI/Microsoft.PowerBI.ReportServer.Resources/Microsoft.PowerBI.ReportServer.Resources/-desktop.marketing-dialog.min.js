"use strict";

(self.webpackChunkdesktop = self.webpackChunkdesktop || []).push([ [ "marketing-dialog" ], {
    74604: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, {
            MarketingDialogModule: function() {
                return MarketingDialogModule;
            }
        });
        var marketing_dialog_identifier = __webpack_require__(74758), JsonExtensions = __webpack_require__(26112), DOMConstants = __webpack_require__(65195), template_dialog_payload_service = __webpack_require__(67489), core = __webpack_require__(50423), dialog = __webpack_require__(32293), template_dialog_component = __webpack_require__(96777), platform_browser = __webpack_require__(18942), SafePipe = function() {
            function SafePipe(sanitizer) {
                this.sanitizer = sanitizer;
            }
            return SafePipe.prototype.transform = function(url) {
                return this.sanitizer.bypassSecurityTrustResourceUrl(url);
            }, SafePipe.\u0275fac = function(t) {
                return new (t || SafePipe)(core["\u0275\u0275directiveInject"](platform_browser.H7, 16));
            }, SafePipe.\u0275pipe = core["\u0275\u0275definePipe"]({
                name: "sanitize",
                type: SafePipe,
                pure: !0
            }), SafePipe;
        }(), _c0 = [ "marketing_iframe" ], DefaultDialogResult = {
            data: JSON.stringify({
                Maybelater: !0
            })
        }, MarketingDialogComponent = function() {
            function MarketingDialogComponent(templateDialogPayload, dialogRef) {
                this.templateDialogPayload = templateDialogPayload, this.dialogRef = dialogRef, 
                this.dialogResult = _.cloneDeep(DefaultDialogResult), this.messageHandler = this.handleMessage.bind(this), 
                window.addEventListener(DOMConstants.V, this.messageHandler);
            }
            return MarketingDialogComponent.prototype.ngOnInit = function() {
                var _this = this;
                this.config = this.templateDialogPayload.input, this.templateDialogPayload.onOkButtonClick = function() {
                    return _this.returnResult();
                }, this.templateDialogPayload.onCancelButtonClick = function() {
                    return _this.returnResult();
                };
            }, MarketingDialogComponent.prototype.ngAfterViewInit = function() {
                this.iframe.nativeElement.src = this.config.iframeSrc;
            }, MarketingDialogComponent.prototype.handleMessage = function(event) {
                if (event.data) {
                    var data = (0, JsonExtensions.K)(event.data);
                    data && null == data.FormEvent && (this.dialogResult.data = event.data, data.Donotshow || data.Maybelater || data.Subscribed ? this.templateDialogPayload.toggleCancelButton(!1) : data.IsEscKeyPressed && this.dialogRef.close(DefaultDialogResult));
                }
            }, MarketingDialogComponent.prototype.returnResult = function() {
                return Promise.resolve(this.dialogResult);
            }, MarketingDialogComponent.\u0275fac = function(t) {
                return new (t || MarketingDialogComponent)(core["\u0275\u0275directiveInject"](template_dialog_payload_service.x), core["\u0275\u0275directiveInject"](dialog.so));
            }, MarketingDialogComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: MarketingDialogComponent,
                selectors: [ [ "marketing-dialog" ] ],
                viewQuery: function(rf, ctx) {
                    var _t;
                    1 & rf && core["\u0275\u0275viewQuery"](_c0, 5), 2 & rf && core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx.iframe = _t.first);
                },
                features: [ core["\u0275\u0275ProvidersFeature"]([ template_dialog_payload_service.x ]) ],
                decls: 5,
                vars: 3,
                consts: [ [ 1, "iframe-content", "pbi-dialog-maxSize" ], [ "role", "presentation", "id", "marketing_iframe", "frameBorder", "0", "sandbox", "allow-forms allow-scripts", 3, "src" ], [ "marketing_iframe", "" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementStart"](0, "template-dialog")(1, "div", 0), 
                    core["\u0275\u0275element"](2, "iframe", 1, 2), core["\u0275\u0275pipe"](4, "sanitize"), 
                    core["\u0275\u0275elementEnd"]()()), 2 & rf && (core["\u0275\u0275advance"](2), 
                    core["\u0275\u0275property"]("src", core["\u0275\u0275pipeBind1"](4, 1, ctx.config.iframeSrc), core["\u0275\u0275sanitizeResourceUrl"]));
                },
                dependencies: [ template_dialog_component.J, SafePipe ],
                styles: [ "mat-dialog-container.mat-mdc-dialog-container{box-sizing:content-box}[_nghost-%COMP%]     template-dialog{padding:0}[_nghost-%COMP%]     template-dialog dialog-header{height:8px}[_nghost-%COMP%]     template-dialog mat-dialog-content.mat-mdc-dialog-content.pbi-dialog-body{line-height:0px}[_nghost-%COMP%]     template-dialog mat-dialog-actions.mat-mdc-dialog-actions.pbi-dialog-footer{padding-top:0!important}[_nghost-%COMP%]     template-dialog .pbi-dialog-footer-content{padding-left:15px;font-size:var(--sm-font-size, 12px)}.iframe-content[_ngcontent-%COMP%]{width:600px;height:720px;overflow:scroll}.iframe-content[_ngcontent-%COMP%]   iframe[_ngcontent-%COMP%]{width:100%;height:100%}" ],
                changeDetection: 0
            }), MarketingDialogComponent;
        }(), common = __webpack_require__(77476), dialogs_module = __webpack_require__(76966), MarketingDialogModule = function() {
            function MarketingDialogModule() {}
            return MarketingDialogModule.\u0275fac = function(t) {
                return new (t || MarketingDialogModule);
            }, MarketingDialogModule.\u0275mod = core["\u0275\u0275defineNgModule"]({
                type: MarketingDialogModule
            }), MarketingDialogModule.\u0275inj = core["\u0275\u0275defineInjector"]({
                imports: [ common.CommonModule, dialogs_module.c.withManifest([ {
                    componentIdentifier: marketing_dialog_identifier.G,
                    componentType: MarketingDialogComponent
                } ]) ]
            }), MarketingDialogModule;
        }();
    }
} ]);