"use strict";

(self.webpackChunkdesktop = self.webpackChunkdesktop || []).push([ [ "mobile-explore" ], {
    93623: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, {
            MobileExploreModule: function() {
                return MobileExploreModule;
            }
        });
        var _a, tslib_es6 = __webpack_require__(81337), events = __webpack_require__(84376), mobile_state_utils = __webpack_require__(71901), Telemetry = __webpack_require__(21617), core = __webpack_require__(50423), event_bridge_service = __webpack_require__(11494), exploration_navigation_service = __webpack_require__(39503), feature_switch_service = __webpack_require__(9380), MobileReportConsumptionInjectionToken = new core.InjectionToken("MobileReportConsumptionInjectionToken"), services_events = __webpack_require__(8590), browserUtils = __webpack_require__(59107), debug = __webpack_require__(62458), dataViewObjectDefinition1 = __webpack_require__(5265), mobile_vc_objects_proxy_utils = __webpack_require__(17774), get = Reflect.get, relatedProperties = ((_a = {}).sections = !0, 
        _a.visualContainers = !0, _a.config = !0, _a.singleVisual = !0, _a), isNumber = function(prop) {
            return !isNaN(prop);
        };
        function notifyError(error, showWarning) {
            showWarning && debug.fF.assertFail("MobileObjectsProxy - ".concat(error));
        }
        var ExplorationHandler = function() {
            function ExplorationHandler(path, parentProp, state, services, cache) {
                this.path = path, this.parentProp = parentProp, this.state = state, this.services = services, 
                this.cache = cache;
            }
            return ExplorationHandler.prototype.get = function(target, prop) {
                var _a, _b, _c, _d;
                if ("isJsProxy" === prop) return !0;
                if ("vcObjects" !== prop && "objects" !== prop && !target.hasOwnProperty(prop)) return target[prop];
                var isRelatedProperty = relatedProperties[prop] || relatedProperties[this.parentProp] && isNumber(prop), path = this.path;
                if (isRelatedProperty && this.path.endsWith(prop) || (path = this.path + "." + prop), 
                !this.state.enabled) return notifyError("ExplorationHandler: access ".concat(prop, " on ").concat(path), this.state.showWarnings), 
                target[prop];
                if (this.cache.has(path)) return this.cache.get(path);
                if ("singleVisual" === this.parentProp) {
                    if ("vcObjects" === prop) {
                        var masterVcObjects = null !== (_a = target[prop]) && void 0 !== _a ? _a : {};
                        (singleVisualConfig = target).mobileVcObjects = null !== (_b = singleVisualConfig.mobileVcObjects) && void 0 !== _b ? _b : {};
                        var targetVcObjects = (0, dataViewObjectDefinition1.d9)(singleVisualConfig.mobileVcObjects);
                        (0, dataViewObjectDefinition1.l7)(targetVcObjects, masterVcObjects, !1);
                        var visualType = null == singleVisualConfig ? void 0 : singleVisualConfig.visualType, proxy = new Proxy(targetVcObjects, new DataViewObjectDefinitionsHandler(path, masterVcObjects, singleVisualConfig.mobileVcObjects, this.state, this.services, new Map, visualType));
                        return this.cache.set(path, proxy), proxy;
                    }
                    if ("objects" === prop || "mobileTransformsObjects" === prop) {
                        var singleVisualConfig, masterObjects = null !== (_c = target[prop]) && void 0 !== _c ? _c : {};
                        (singleVisualConfig = target).mobileObjects = null !== (_d = singleVisualConfig.mobileObjects) && void 0 !== _d ? _d : {};
                        var targetObjects = (0, dataViewObjectDefinition1.d9)(singleVisualConfig.mobileObjects);
                        return (0, dataViewObjectDefinition1.l7)(targetObjects, masterObjects, !1), visualType = null == singleVisualConfig ? void 0 : singleVisualConfig.visualType, 
                        proxy = new Proxy(targetObjects, new DataViewObjectDefinitionsHandler(path, masterObjects, singleVisualConfig.mobileObjects, this.state, this.services, new Map, visualType)), 
                        this.cache.set(path, proxy), proxy;
                    }
                }
                return isRelatedProperty ? (proxy = new Proxy(target[prop], new ExplorationHandler(path, prop, this.state, this.services, new Map)), 
                this.cache.set(path, proxy), proxy) : target[prop];
            }, ExplorationHandler.prototype.set = function(target, prop, value) {
                return !(!this.state.enabled || "vcObjects" !== prop && "objects" !== prop) || (this.state.enabled || notifyError("ExplorationHandler: setting ".concat(prop, " for ").concat(this.path), this.state.showWarnings), 
                target[prop] = value, (relatedProperties[prop] || relatedProperties[this.parentProp] && isNumber(prop)) && this.cache.clear(), 
                !0);
            }, ExplorationHandler;
        }(), DataViewObjectDefinitionsHandler = function() {
            function DataViewObjectDefinitionsHandler(path, masterObjects, mobileObjects, state, services, cache, visualType) {
                this.path = path, this.masterObjects = masterObjects, this.mobileObjects = mobileObjects, 
                this.state = state, this.services = services, this.cache = cache, this.visualType = visualType;
            }
            return DataViewObjectDefinitionsHandler.prototype.ownKeys = function(target) {
                return this.state.enabled ? Object.keys(target) : this.masterObjects ? Object.keys(this.masterObjects) : [];
            }, DataViewObjectDefinitionsHandler.prototype.has = function(target, key) {
                return this.state.enabled ? key in target : key in this.masterObjects;
            }, DataViewObjectDefinitionsHandler.prototype.get = function(target, prop) {
                if (!target.hasOwnProperty(prop)) return target[prop];
                var path = this.path + "." + prop;
                return this.state.enabled ? (this.cache.has(path) || this.cache.set(path, new Proxy(target[prop], new DataViewObjectDefinitionArrayHandler(path, prop, this.masterObjects, this.mobileObjects, this.state, this.services, new Map, this.visualType))), 
                this.cache.get(path)) : (notifyError("DataViewObjectDefinitionsHandler: access ".concat(prop, " on ").concat(path), this.state.showWarnings), 
                this.masterObjects && this.masterObjects[prop]);
            }, DataViewObjectDefinitionsHandler.prototype.set = function(target, prop, value) {
                return this.state.enabled ? (_.isArray(value) || notifyError("unknown value type ".concat(value), this.state.showWarnings), 
                this.mobileObjects[prop] = (0, dataViewObjectDefinition1.dn)(value), target[prop] = value, 
                this.cache.clear(), !0) : (notifyError("DataViewObjectDefinitionsHandler: setting ".concat(prop, " for ").concat(this.path), this.state.showWarnings), 
                this.masterObjects[prop] = value, target[prop] = value, !0);
            }, DataViewObjectDefinitionsHandler.prototype.deleteProperty = function(target, prop) {
                var _a;
                return this.state.enabled ? (this.mobileObjects[prop] && delete this.mobileObjects[prop], 
                delete target[prop], (null === (_a = this.masterObjects) || void 0 === _a ? void 0 : _a[prop]) && (target[prop] = (0, 
                dataViewObjectDefinition1.dn)(this.masterObjects[prop])), this.cache.clear(), !0) : (notifyError("DataViewObjectDefinitionsHandler: deleteProperty ".concat(prop, " for ").concat(this.path), this.state.showWarnings), 
                !0);
            }, DataViewObjectDefinitionsHandler;
        }(), DataViewObjectDefinitionArrayHandler = function() {
            function DataViewObjectDefinitionArrayHandler(path, cardName, masterObjects, mobileObjects, state, services, cache, visualType) {
                this.path = path, this.cardName = cardName, this.masterObjects = masterObjects, 
                this.mobileObjects = mobileObjects, this.state = state, this.services = services, 
                this.cache = cache, this.visualType = visualType;
            }
            return DataViewObjectDefinitionArrayHandler.prototype.get = function(target, prop) {
                if (!_.isArray(target)) return notifyError("unknown target type ".concat(typeof target), this.state.showWarnings), 
                target[prop];
                if (!this.state.enabled) {
                    notifyError("DataViewObjectDefinitionArrayHandler: access ".concat(prop.toString(), " on ").concat(this.path), this.state.showWarnings);
                    var card = this.masterObjects && this.masterObjects[this.cardName];
                    return card && card[prop];
                }
                if (Array.prototype.hasOwnProperty(prop)) {
                    if ("toString" === prop || !_.isFunction(target[prop])) return target[prop];
                    if ("constructor" === prop) {
                        var self_1 = this;
                        return function(length) {
                            var newArray = new Array(length);
                            return new Proxy(newArray, new DataViewObjectDefinitionArrayHandler(self_1.path, prop, self_1.masterObjects, self_1.mobileObjects, self_1.state, self_1.services, new Map, self_1.visualType));
                        }.bind(this);
                    }
                    this.mobileObjects[this.cardName] || (this.mobileObjects[this.cardName] = []);
                    var arrayProxy = new ArrayProxy(target, this.mobileObjects[this.cardName], prop);
                    return get(arrayProxy, "invoke");
                }
                if (!target.hasOwnProperty(prop)) return target[prop];
                if (isNumber(prop)) {
                    var path = this.path + "." + prop;
                    return this.cache.has(path) || this.cache.set(path, new Proxy(target[prop], new DataViewObjectDefinitionHandler(path, this.cardName, prop, this.masterObjects, this.mobileObjects, this.state, this.services, new Map, this.visualType))), 
                    this.cache.get(path);
                }
                return target[prop];
            }, DataViewObjectDefinitionArrayHandler;
        }(), copyInvocationExclude = {
            find: !0,
            filter: !0,
            some: !0
        }, ArrayProxy = function() {
            function ArrayProxy(target, copy, prop) {
                this.target = target, this.copy = copy, this.prop = prop, this.invoke = this.invoke.bind(this);
            }
            return ArrayProxy.prototype.invoke = function(args) {
                var _a;
                if (this.target !== this.copy && !copyInvocationExclude[this.prop]) {
                    var clonedArgs = args ? null === (_a = (0, dataViewObjectDefinition1.dn)([ args ])) || void 0 === _a ? void 0 : _a[0] : args;
                    this.copy[this.prop](clonedArgs);
                }
                return this.target[this.prop](args);
            }, ArrayProxy;
        }(), DataViewObjectDefinitionHandler = function() {
            function DataViewObjectDefinitionHandler(path, cardName, index, masterObjects, mobileObjects, state, services, cache, visualType) {
                this.path = path, this.cardName = cardName, this.index = index, this.masterObjects = masterObjects, 
                this.mobileObjects = mobileObjects, this.state = state, this.services = services, 
                this.cache = cache, this.visualType = visualType, this.visualPropertyFilter = new mobile_vc_objects_proxy_utils.pI(state, cardName, mobileObjects, services, visualType);
            }
            return DataViewObjectDefinitionHandler.prototype.get = function(target, prop) {
                if ("isJsProxy" === prop) return !0;
                if (!target.hasOwnProperty(prop)) return target[prop];
                var path = this.path + "." + prop;
                if (!this.state.enabled) {
                    notifyError("DataViewObjectDefinitionHandler: access ".concat(prop, " on ").concat(path), this.state.showWarnings);
                    var card = this.masterObjects && this.masterObjects[this.cardName], cardItem = card && card[this.index];
                    return cardItem && cardItem[prop];
                }
                return "properties" === prop && this.cardName ? (this.cache.has(path) || this.cache.set(path, new Proxy(target[prop], new DataViewObjectPropertyDefinitionHandler(path, this.cardName, this.index, this.mobileObjects, this.masterObjects, target.selector, this.state, this.services, this.visualType))), 
                this.cache.get(path)) : target[prop];
            }, DataViewObjectDefinitionHandler.prototype.set = function(target, prop, value) {
                if ("properties" === prop && this.cardName) {
                    if (!this.state.enabled || this.state.viewMode) return this.state.enabled || notifyError("DataViewObjectDefinitionHandler: setting ".concat(prop), this.state.showWarnings), 
                    (0, dataViewObjectDefinition1.zx)(this.masterObjects, this.cardName, target.selector)[prop] = value, 
                    target[prop] = value, this.cache.clear(), !0;
                    this.visualPropertyFilter.setMobileObjectsValue(prop, value, target, target.selector), 
                    this.cache.clear();
                }
                return target[prop] = value, !0;
            }, DataViewObjectDefinitionHandler;
        }(), DataViewObjectPropertyDefinitionHandler = function() {
            function DataViewObjectPropertyDefinitionHandler(path, cardName, index, mobileObjects, masterObjects, selector, state, services, visualType) {
                this.path = path, this.cardName = cardName, this.index = index, this.mobileObjects = mobileObjects, 
                this.masterObjects = masterObjects, this.selector = selector, this.state = state, 
                this.services = services, this.visualType = visualType, this.visualPropertyFilter = new mobile_vc_objects_proxy_utils.pI(state, cardName, mobileObjects, services, visualType);
            }
            return DataViewObjectPropertyDefinitionHandler.prototype.has = function(target, key) {
                var _a, _b, _c;
                return this.state.enabled ? key in target : key in (null === (_c = null === (_b = null === (_a = this.masterObjects) || void 0 === _a ? void 0 : _a[this.cardName]) || void 0 === _b ? void 0 : _b[this.index]) || void 0 === _c ? void 0 : _c.properties);
            }, DataViewObjectPropertyDefinitionHandler.prototype.get = function(target, prop) {
                if (!target.hasOwnProperty(prop)) return target[prop];
                var path = this.path + "." + prop;
                if (!this.state.enabled) {
                    notifyError("DataViewObjectPropertyDefinitionHandler: access ".concat(prop, " on ").concat(path), this.state.showWarnings);
                    var card = this.masterObjects && this.masterObjects[this.cardName], cardItem = card && card[this.index], cardItemProperties = cardItem && cardItem.properties;
                    return cardItemProperties && cardItemProperties[prop];
                }
                return target[prop];
            }, DataViewObjectPropertyDefinitionHandler.prototype.set = function(target, prop, value) {
                return !this.state.enabled || this.state.viewMode ? (this.state.enabled || notifyError("DataViewObjectPropertyDefinitionHandler: setting ".concat(prop), this.state.showWarnings), 
                (0, dataViewObjectDefinition1.zx)(this.masterObjects, this.cardName, this.selector).properties[prop] = value, 
                target[prop] = value, !0) : (this.visualPropertyFilter.setMobileObjectsPropertiesValue(prop, value, this.selector), 
                target[prop] = value, !0);
            }, DataViewObjectPropertyDefinitionHandler.prototype.deleteProperty = function(target, prop) {
                var _a, _b, _c, _d, _e, _f, _g, _h;
                if (!this.state.enabled) return notifyError("DataViewObjectPropertyDefinitionHandler: deleteProperty ".concat(prop, " for ").concat(this.path), this.state.showWarnings), 
                !0;
                if (delete target[prop], this.state.viewMode) return null === (_d = null === (_c = null === (_b = null === (_a = this.masterObjects) || void 0 === _a ? void 0 : _a[this.cardName]) || void 0 === _b ? void 0 : _b[this.index]) || void 0 === _c ? void 0 : _c.properties) || void 0 === _d || delete _d[prop], 
                !0;
                var selectedCard = (0, mobile_vc_objects_proxy_utils.cH)(this.masterObjects, this.cardName, prop, this.selector);
                return selectedCard && this.visualPropertyFilter.shouldSetFilteringProps(prop) && (target[prop] = _.clone(selectedCard).properties[prop]), 
                null === (_h = null === (_g = null === (_f = null === (_e = this.mobileObjects) || void 0 === _e ? void 0 : _e[this.cardName]) || void 0 === _f ? void 0 : _f[this.index]) || void 0 === _g ? void 0 : _g.properties) || void 0 === _h || delete _h[prop], 
                !0;
            }, DataViewObjectPropertyDefinitionHandler;
        }(), visual_plugin_service = __webpack_require__(29866), VisualFilterPropertiesProvider = {
            provide: "visualFilterProperties",
            useFactory: function(visualPluginService) {
                return new VisualFilterProperties(visualPluginService);
            },
            deps: [ visual_plugin_service.D ]
        }, VisualFilterProperties = function() {
            function VisualFilterProperties(visualPlugin) {
                this.visualPlugin = visualPlugin, this.filterPropertiesCache = new Map;
            }
            return VisualFilterProperties.prototype.ngOnDestroy = function() {
                this.filterPropertiesCache.clear();
            }, VisualFilterProperties.prototype.getProperties = function(visualType, excludeKeys) {
                var _a;
                if (this.filterPropertiesCache.has(visualType)) return this.filterPropertiesCache.get(visualType);
                var capabilities = null === (_a = this.visualPlugin) || void 0 === _a ? void 0 : _a.capabilities(visualType), currVisualPropCache = new Set;
                return _.forEach(null == capabilities ? void 0 : capabilities.objects, function(descriptors) {
                    (null == descriptors ? void 0 : descriptors.properties) && Object.entries(descriptors.properties).forEach(function(_a) {
                        var key = _a[0], value = _a[1], valueType = null == value ? void 0 : value.type;
                        (null == excludeKeys ? void 0 : excludeKeys.has(key)) || !(null == value ? void 0 : value.filterState) && !(null == valueType ? void 0 : valueType.filter) || currVisualPropCache.add(key);
                    });
                }), this.filterPropertiesCache.set(visualType, currVisualPropCache), currVisualPropCache;
            }, VisualFilterProperties.\u0275fac = function(t) {
                return new (t || VisualFilterProperties)(core["\u0275\u0275inject"](visual_plugin_service.D));
            }, VisualFilterProperties.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: VisualFilterProperties,
                factory: VisualFilterProperties.\u0275fac
            }), VisualFilterProperties;
        }(), MobileVcObjectsProxyLazyProvider = {
            provide: "mobileVcObjectsProxy",
            useFactory: function(eventBridge, explorationNavigation, featureSwitches, visualFilterProperties, mobileReportConsumption) {
                return new Promise(function(resolve) {
                    resolve(new MobileVcObjectsProxy(eventBridge, explorationNavigation, featureSwitches, visualFilterProperties, mobileReportConsumption));
                });
            },
            deps: [ event_bridge_service.J, exploration_navigation_service.z, feature_switch_service.vZ, "visualFilterProperties", [ new core.Optional, MobileReportConsumptionInjectionToken ] ]
        }, MobileVcObjectsProxy = function() {
            function MobileVcObjectsProxy(eventBridge, explorationNavigation, featureSwitches, visualFilterProperties, mobileReportConsumption) {
                var _this = this;
                this.explorationNavigation = explorationNavigation, this.featureSwitches = featureSwitches, 
                this.visualFilterProperties = visualFilterProperties, this.state = {
                    enabled: !0,
                    ignoreFilteringProps: !1,
                    showWarnings: !0,
                    viewMode: !0
                }, this.state.viewMode = !!mobileReportConsumption, this.services = {
                    visualFilterProperties
                }, featureSwitches.featureSwitches.mobileVcObjectsProxyFormFactorChange && (this.state.enabled = !1, 
                this.subscriptionManager = eventBridge.createChannelSubscriptionManager().subscribe(services_events.aco, function(e, args) {
                    setTimeout(function() {
                        return _this.state.showWarnings = 1 !== args.layout;
                    });
                })), featureSwitches.featureSwitches.interactiveMobileCanvas && (this.state.ignoreFilteringProps = !0);
            }
            return MobileVcObjectsProxy.prototype.ngOnDestroy = function() {
                this.subscriptionManager.unsubscribeAll();
            }, MobileVcObjectsProxy.prototype.wrap = function(exploration, reset) {
                if (void 0 === reset && (reset = !0), this.isSupported()) {
                    if (this.isProxy(exploration)) return exploration;
                    this.state.enabled = !0, this.masterContract = exploration;
                    var proxy = new Proxy(exploration, new ExplorationHandler("[root]", "", this.state, this.services, new Map));
                    return reset && this.resetNavigationService(proxy), proxy;
                }
                debug.fF.assertFail("Can not wrap in IE");
            }, MobileVcObjectsProxy.prototype.unwrap = function(reset) {
                if (void 0 === reset && (reset = !0), this.masterContract) {
                    var masterContract = this.masterContract;
                    return this.masterContract = void 0, reset && this.resetNavigationService(masterContract), 
                    this.featureSwitches.featureSwitches.mobileVcObjectsProxyFormFactorChange && (this.state.enabled = !1), 
                    masterContract;
                }
            }, MobileVcObjectsProxy.prototype.isSupported = function() {
                var _a;
                return this._isSupported = null !== (_a = this._isSupported) && void 0 !== _a ? _a : this.state.viewMode || !browserUtils.M.isInternetExplorerOrEdge(), 
                this._isSupported;
            }, MobileVcObjectsProxy.prototype.resetNavigationService = function(exploration) {
                this.explorationNavigation.loadExploration(exploration);
            }, MobileVcObjectsProxy.prototype.isProxy = function(exploration) {
                return !!exploration.isJsProxy;
            }, MobileVcObjectsProxy.\u0275fac = function(t) {
                return new (t || MobileVcObjectsProxy)(core["\u0275\u0275inject"](event_bridge_service.J), core["\u0275\u0275inject"](exploration_navigation_service.z), core["\u0275\u0275inject"](feature_switch_service.vZ), core["\u0275\u0275inject"](VisualFilterProperties), core["\u0275\u0275inject"](MobileReportConsumptionInjectionToken, 8));
            }, MobileVcObjectsProxy.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: MobileVcObjectsProxy,
                factory: MobileVcObjectsProxy.\u0275fac
            }), MobileVcObjectsProxy;
        }(), MobileStateConsumptionServiceLazyProvider = {
            provide: "mobileStateConsumptionService",
            useFactory: function(telemetryService, mobileVcObjectsProxy) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var _a, _b;
                    return (0, tslib_es6.__generator)(this, function(_c) {
                        switch (_c.label) {
                          case 0:
                            return _a = MobileStateConsumptionService.bind, _b = [ void 0, telemetryService ], 
                            [ 4, mobileVcObjectsProxy ];

                          case 1:
                            return [ 2, new (_a.apply(MobileStateConsumptionService, _b.concat([ _c.sent() ]))) ];
                        }
                    });
                });
            },
            deps: [ Telemetry.y0, "mobileVcObjectsProxy" ]
        }, MobileStateConsumptionService = function() {
            function MobileStateConsumptionService(telemetryService, mobileVcObjectsProxy) {
                this.telemetryService = telemetryService, this.mobileVcObjectsProxy = mobileVcObjectsProxy;
            }
            return MobileStateConsumptionService.prototype.apply = function(canvasLayout, contract, mobileState) {
                var _a;
                if (mobileState.bookmark || !_.isEmpty(mobileState.visualPositions)) return (0, 
                mobile_state_utils.zi)(contract, null === (_a = mobileState.bookmark) || void 0 === _a ? void 0 : _a.explorationState, mobileState.visualPositions, this.telemetryService.startEvent(events.Y8)), 
                this.changeLayout(canvasLayout, contract, !1);
            }, MobileStateConsumptionService.prototype.changeLayout = function(canvasLayout, contract, reset) {
                return void 0 === reset && (reset = !0), 1 === canvasLayout ? this.mobileVcObjectsProxy.wrap(contract, reset) : this.mobileVcObjectsProxy.unwrap(reset);
            }, MobileStateConsumptionService.\u0275fac = function(t) {
                return new (t || MobileStateConsumptionService)(core["\u0275\u0275inject"](Telemetry.y0), core["\u0275\u0275inject"](MobileVcObjectsProxy));
            }, MobileStateConsumptionService.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: MobileStateConsumptionService,
                factory: MobileStateConsumptionService.\u0275fac
            }), MobileStateConsumptionService;
        }(), MobileExploreModule = function() {
            function MobileExploreModule() {}
            return MobileExploreModule.\u0275fac = function(t) {
                return new (t || MobileExploreModule);
            }, MobileExploreModule.\u0275mod = core["\u0275\u0275defineNgModule"]({
                type: MobileExploreModule
            }), MobileExploreModule.\u0275inj = core["\u0275\u0275defineInjector"]({
                providers: [ MobileVcObjectsProxyLazyProvider, MobileStateConsumptionServiceLazyProvider, VisualFilterPropertiesProvider ]
            }), MobileExploreModule;
        }();
    },
    17774: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            cH: function() {
                return getCardForSliceAndSelector;
            },
            pI: function() {
                return MobileVcObjectsVisualPropertyFilter;
            }
        });
        var _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_slicer_capabilities__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(9434), _powerbi_legacy_PowerBIVisuals_VisualsData_contracts_selector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(32379), _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObjectDefinition1__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(5265), _powerbi_legacy_PowerBIVisuals_VisualsData_semanticQuery_sqExprEqualityVisitor__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(45413);
        function getCardForSliceAndSelector(objects, cardName, sliceName, selector) {
            var _a;
            return null === (_a = null == objects ? void 0 : objects[cardName]) || void 0 === _a ? void 0 : _a.find(function(card) {
                var _a;
                return (null === (_a = null == card ? void 0 : card.properties) || void 0 === _a ? void 0 : _a[sliceName]) && (0, 
                _powerbi_legacy_PowerBIVisuals_VisualsData_contracts_selector__WEBPACK_IMPORTED_MODULE_0__.fS)(null == card ? void 0 : card.selector, selector);
            });
        }
        var slicerModeProp = _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_slicer_capabilities__WEBPACK_IMPORTED_MODULE_1__.gO.data.mode.propertyName, excludeProps = new Set([ slicerModeProp ]), MobileVcObjectsVisualPropertyFilter = function() {
            function MobileVcObjectsVisualPropertyFilter(state, cardName, defns, services, visualType) {
                this.state = state, this.cardName = cardName, this.defns = defns, this.services = services, 
                this.visualType = visualType;
            }
            return MobileVcObjectsVisualPropertyFilter.prototype.setMobileObjectsValue = function(prop, value, target, selector) {
                this.state.ignoreFilteringProps && (!this.state.ignoreFilteringProps || this.propExistsInDefn(value) || this.slicerModePersistWithoutChange(value, target[prop])) || ((0, 
                _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObjectDefinition1__WEBPACK_IMPORTED_MODULE_2__.zx)(this.defns, this.cardName, selector)[prop] = value);
            }, MobileVcObjectsVisualPropertyFilter.prototype.setMobileObjectsPropertiesValue = function(prop, value, selector) {
                this.shouldSetFilteringProps(prop) && ((0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObjectDefinition1__WEBPACK_IMPORTED_MODULE_2__.zx)(this.defns, this.cardName, selector).properties[prop] = value);
            }, MobileVcObjectsVisualPropertyFilter.prototype.shouldSetFilteringProps = function(prop) {
                return !this.state.ignoreFilteringProps || !this.services.visualFilterProperties.getProperties(this.visualType, excludeProps).has(prop);
            }, MobileVcObjectsVisualPropertyFilter.prototype.propExistsInDefn = function(value) {
                return function(set, value) {
                    for (var iterator = set.values(), result = iterator.next(); !result.done; ) {
                        if (value.hasOwnProperty(result.value)) return !0;
                        result = iterator.next();
                    }
                    return !1;
                }(this.services.visualFilterProperties.getProperties(this.visualType, excludeProps), value);
            }, MobileVcObjectsVisualPropertyFilter.prototype.slicerModePersistWithoutChange = function(value, properties) {
                if (value.hasOwnProperty(slicerModeProp) && (0, _powerbi_legacy_PowerBIVisuals_VisualsData_semanticQuery_sqExprEqualityVisitor__WEBPACK_IMPORTED_MODULE_3__.fS)(null == properties ? void 0 : properties[slicerModeProp], value[slicerModeProp])) return !0;
            }, MobileVcObjectsVisualPropertyFilter;
        }();
    }
} ]);