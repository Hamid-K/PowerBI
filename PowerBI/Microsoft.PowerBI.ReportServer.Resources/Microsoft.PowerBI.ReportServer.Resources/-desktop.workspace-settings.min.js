"use strict";

(self.webpackChunkdesktop = self.webpackChunkdesktop || []).push([ [ "workspace-settings" ], {
    19828: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            X: function() {
                return retry;
            }
        });
        var C_w_1_s_node_modules_pnpm_babel_runtime_7_14_8_node_modules_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(37419), _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(47875);
        function retry(count) {
            return void 0 === count && (count = -1), function(source) {
                return source.lift(new RetryOperator(count, source));
            };
        }
        var RetryOperator = function() {
            function RetryOperator(count, source) {
                this.count = count, this.source = source;
            }
            return RetryOperator.prototype.call = function(subscriber, source) {
                return source.subscribe(new RetrySubscriber(subscriber, this.count, this.source));
            }, RetryOperator;
        }(), RetrySubscriber = function(_Subscriber) {
            function RetrySubscriber(destination, count, source) {
                var _this;
                return (_this = _Subscriber.call(this, destination) || this).count = count, _this.source = source, 
                _this;
            }
            return (0, C_w_1_s_node_modules_pnpm_babel_runtime_7_14_8_node_modules_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__.Z)(RetrySubscriber, _Subscriber), 
            RetrySubscriber.prototype.error = function(err) {
                if (!this.isStopped) {
                    var source = this.source, count = this.count;
                    if (0 === count) return _Subscriber.prototype.error.call(this, err);
                    count > -1 && (this.count = count - 1), source.subscribe(this._unsubscribeAndRecycle());
                }
            }, RetrySubscriber;
        }(_Subscriber__WEBPACK_IMPORTED_MODULE_1__.L);
    },
    18176: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            Ug: function() {
                return DataAccessGitModule;
            },
            su: function() {
                return GitBranchOutClient;
            },
            ce: function() {
                return GitCommitClient;
            },
            Kl: function() {
                return GitConfigureCredentialsClient;
            },
            i: function() {
                return GitConnectionDetailsClient;
            },
            bE: function() {
                return GitConnectionDiscoveryClient;
            },
            xU: function() {
                return GitConnectionInitializationResult;
            },
            aw: function() {
                return GitDatasourceClient;
            },
            Zt: function() {
                return GitInitializationClient;
            },
            P9: function() {
                return GitRepairClient;
            },
            mK: function() {
                return GitStatusClient;
            },
            ZH: function() {
                return GitSwitchBranchClient;
            },
            WV: function() {
                return GitSyncClient;
            },
            nD: function() {
                return GitUndoClient;
            },
            Jv: function() {
                return GitUpdateClient;
            },
            h_: function() {
                return isExtensionDatasourceConnectionDetails;
            }
        });
        var throwError = __webpack_require__(60225), retry = __webpack_require__(19828), map = __webpack_require__(14172), catchError = __webpack_require__(59822), http_service = __webpack_require__(68698), core = __webpack_require__(50423), GitHttpUtils = function() {
            function GitHttpUtils(httpService) {
                this.httpService = httpService;
            }
            return GitHttpUtils.prototype.getData = function(url) {
                var option = this.createNoRetriesRequestOptions();
                return this.httpService.get(url, option).pipe((0, retry.X)(0), (0, map.U)(function(response) {
                    return response.data;
                }));
            }, GitHttpUtils.prototype.postData = function(url, data) {
                var option = this.createNoRetriesRequestOptions();
                return this.httpService.post(url, data, option).pipe(this.retryWithTransform(), (0, 
                map.U)(function(_a) {
                    return _a.data;
                }));
            }, GitHttpUtils.prototype.deleteData = function(url) {
                var option = this.createNoRetriesRequestOptions();
                return this.httpService.delete(url, option).pipe((0, retry.X)(0), (0, map.U)(function(response) {
                    return response.data;
                }));
            }, GitHttpUtils.prototype.createNoRetriesRequestOptions = function() {
                var option = this.httpService.powerbiRequestOptions();
                return option.disableRetriesOnServerError = !0, option.retryCount = 0, option.signInOnConditionalAccessErrors = !1, 
                option;
            }, GitHttpUtils.prototype.retryWithTransform = function() {
                return function(source) {
                    return source.pipe((0, retry.X)(0), (0, catchError.K)(function(error) {
                        return (0, throwError._)(error);
                    }), (0, map.U)(function(_a) {
                        return {
                            data: _a.data
                        };
                    }));
                };
            }, GitHttpUtils.\u0275fac = function(t) {
                return new (t || GitHttpUtils)(core["\u0275\u0275inject"](http_service.s));
            }, GitHttpUtils.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: GitHttpUtils,
                factory: GitHttpUtils.\u0275fac,
                providedIn: "root"
            }), GitHttpUtils;
        }(), GitBranchOutClient = function() {
            function GitBranchOutClient(httpUtils) {
                this.httpUtils = httpUtils;
            }
            return GitBranchOutClient.prototype.branchOut = function(workspaceId, branchOutRequest) {
                return this.httpUtils.postData("metadata/git/workspaces/".concat(workspaceId, "/branchOut"), branchOutRequest);
            }, GitBranchOutClient.\u0275fac = function(t) {
                return new (t || GitBranchOutClient)(core["\u0275\u0275inject"](GitHttpUtils));
            }, GitBranchOutClient.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: GitBranchOutClient,
                factory: GitBranchOutClient.\u0275fac
            }), GitBranchOutClient;
        }(), tslib_es6 = __webpack_require__(81337), GitCommitClient = function() {
            function GitCommitClient(httpUtils) {
                this.httpUtils = httpUtils;
            }
            return GitCommitClient.prototype.commitArtifacts = function(workspaceId, commitToGitRequest) {
                return this.httpUtils.postData("metadata/git/workspaces/".concat(workspaceId, "/commitToGit?skipHeadValidation=true"), commitToGitRequest).pipe((0, 
                map.U)(function(response) {
                    return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, response), {
                        responseDate: new Date(Date.now())
                    });
                }));
            }, GitCommitClient.\u0275fac = function(t) {
                return new (t || GitCommitClient)(core["\u0275\u0275inject"](GitHttpUtils));
            }, GitCommitClient.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: GitCommitClient,
                factory: GitCommitClient.\u0275fac
            }), GitCommitClient;
        }(), GitConfigureCredentialsClient = function() {
            function GitConfigureCredentialsClient(httpUtils) {
                this.httpUtils = httpUtils;
            }
            return GitConfigureCredentialsClient.prototype.postConfigureCredentials = function(workspaceId, configureCredentialsRequest) {
                return this.httpUtils.postData("/metadata/git/workspaces/".concat(workspaceId, "/configureCredentials"), configureCredentialsRequest);
            }, GitConfigureCredentialsClient.prototype.deleteConfiguredCredentials = function(workspaceId) {
                return this.httpUtils.deleteData("/metadata/git/workspaces/".concat(workspaceId, "/configureCredentials"));
            }, GitConfigureCredentialsClient.\u0275fac = function(t) {
                return new (t || GitConfigureCredentialsClient)(core["\u0275\u0275inject"](GitHttpUtils));
            }, GitConfigureCredentialsClient.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: GitConfigureCredentialsClient,
                factory: GitConfigureCredentialsClient.\u0275fac,
                providedIn: "root"
            }), GitConfigureCredentialsClient;
        }(), GitConnectionDetailsClient = function() {
            function GitConnectionDetailsClient(httpUtils) {
                this.httpUtils = httpUtils;
            }
            return GitConnectionDetailsClient.prototype.getGitConnectionDetails = function(workspaceId) {
                return this.httpUtils.getData("/metadata/git/workspaces/".concat(workspaceId, "/connection"));
            }, GitConnectionDetailsClient.prototype.setGitConnectionDetails = function(workspaceId, gitConnectionDetails) {
                return this.httpUtils.postData("/metadata/git/workspaces/".concat(workspaceId, "/connection"), gitConnectionDetails);
            }, GitConnectionDetailsClient.prototype.checkoutBranch = function(workspaceId, checkoutBranchRequest) {
                return this.httpUtils.postData("/metadata/git/workspaces/".concat(workspaceId, "/checkoutBranch"), checkoutBranchRequest);
            }, GitConnectionDetailsClient.prototype.deleteGitConnectionDetails = function(workspaceId) {
                return this.httpUtils.deleteData("/metadata/git/workspaces/".concat(workspaceId, "/connection"));
            }, GitConnectionDetailsClient.\u0275fac = function(t) {
                return new (t || GitConnectionDetailsClient)(core["\u0275\u0275inject"](GitHttpUtils));
            }, GitConnectionDetailsClient.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: GitConnectionDetailsClient,
                factory: GitConnectionDetailsClient.\u0275fac
            }), GitConnectionDetailsClient;
        }(), src = __webpack_require__(18016), GitConnectionDiscoveryClient = function() {
            function GitConnectionDiscoveryClient(httpUtils) {
                this.httpUtils = httpUtils;
            }
            return GitConnectionDiscoveryClient.prototype.getOrganizations = function(gitProviderType, workspaceId) {
                return this.httpUtils.getData("/metadata/git/organizations?gitProviderType=".concat(src.IS[gitProviderType], "&workspaceId=").concat(workspaceId));
            }, GitConnectionDiscoveryClient.prototype.getProjects = function(gitProviderType, gitOrganizationName, workspaceId) {
                return this.httpUtils.getData("/metadata/git/projects?gitProviderType=".concat(src.IS[gitProviderType], "&organizationName=").concat(gitOrganizationName, "&workspaceId=").concat(workspaceId));
            }, GitConnectionDiscoveryClient.prototype.getRepositories = function(gitProviderType, gitOrganizationName, gitProjectName, workspaceId) {
                return this.httpUtils.getData("/metadata/git/repositories?gitProviderType=".concat(src.IS[gitProviderType], "&organizationName=").concat(gitOrganizationName, "&projectName=").concat(gitProjectName, "&workspaceId=").concat(workspaceId));
            }, GitConnectionDiscoveryClient.prototype.getBranches = function(workspaceId, gitProviderType, organization, repository, project, datasourceOID) {
                var url = "/metadata/git/branches?workspaceId=".concat(workspaceId, "&gitProviderType=").concat(src.IS[gitProviderType], "&organizationName=").concat(organization, "&repositoryName=").concat(repository);
                return project && (url += "&projectName=".concat(project)), datasourceOID && (url += "&datasourceOID=".concat(datasourceOID)), 
                this.httpUtils.getData(url);
            }, GitConnectionDiscoveryClient.prototype.createBranch = function(createBranchRequest) {
                return this.httpUtils.postData("/metadata/git/branches", createBranchRequest);
            }, GitConnectionDiscoveryClient.prototype.createDirectory = function(createDirectoryRequest) {
                return this.httpUtils.postData("/metadata/git/directory", createDirectoryRequest);
            }, GitConnectionDiscoveryClient.prototype.getRelatedWorkspaces = function(workspaceId) {
                return this.httpUtils.getData("/metadata/git/workspaces/".concat(workspaceId, "/relatedWorkspaces"));
            }, GitConnectionDiscoveryClient.\u0275fac = function(t) {
                return new (t || GitConnectionDiscoveryClient)(core["\u0275\u0275inject"](GitHttpUtils));
            }, GitConnectionDiscoveryClient.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: GitConnectionDiscoveryClient,
                factory: GitConnectionDiscoveryClient.\u0275fac,
                providedIn: "root"
            }), GitConnectionDiscoveryClient;
        }(), GitDatasourceClient = function() {
            function GitDatasourceClient(httpUtils) {
                this.httpUtils = httpUtils;
            }
            return GitDatasourceClient.prototype.createDatasource = function(request) {
                return this.httpUtils.postData("/v2.0/myorg/me/gatewayClusterCloudDatasource", request);
            }, GitDatasourceClient.prototype.discoverDatasources = function() {
                return this.httpUtils.postData("/v2.0/myorg/me/gatewayClusterDatasources", {
                    datasourceTypes: [ "Extension" ]
                });
            }, GitDatasourceClient.prototype.getDatasource = function(datasourceId) {
                var requestUrl = "/v2.0/myorg/me/gatewayClusterDatasources/".concat(datasourceId);
                return this.httpUtils.getData(requestUrl);
            }, GitDatasourceClient.\u0275fac = function(t) {
                return new (t || GitDatasourceClient)(core["\u0275\u0275inject"](GitHttpUtils));
            }, GitDatasourceClient.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: GitDatasourceClient,
                factory: GitDatasourceClient.\u0275fac,
                providedIn: "root"
            }), GitDatasourceClient;
        }(), GitInitializationClient = function() {
            function GitInitializationClient(httpUtils) {
                this.httpUtils = httpUtils;
            }
            return GitInitializationClient.prototype.initializeGitConnection = function(workspaceId, initializeGitConnectionRequest) {
                return this.httpUtils.postData("/metadata/git/workspaces/".concat(workspaceId, "/connection/initialize"), initializeGitConnectionRequest);
            }, GitInitializationClient.\u0275fac = function(t) {
                return new (t || GitInitializationClient)(core["\u0275\u0275inject"](GitHttpUtils));
            }, GitInitializationClient.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: GitInitializationClient,
                factory: GitInitializationClient.\u0275fac
            }), GitInitializationClient;
        }(), GitStatusClient = function() {
            function GitStatusClient(httpUtils) {
                this.httpUtils = httpUtils;
            }
            return GitStatusClient.prototype.getUncommittedChanges = function(workspaceId) {
                return this.getData(workspaceId, "uncommittedChanges");
            }, GitStatusClient.prototype.getIncomingChanges = function(workspaceId) {
                return this.getData(workspaceId, "incomingChanges");
            }, GitStatusClient.prototype.getGitStatus = function(workspaceId) {
                return this.getData(workspaceId, "gitStatus");
            }, GitStatusClient.prototype.getData = function(workspaceId, operation) {
                var path = "metadata/git/workspaces/".concat(workspaceId, "/").concat(operation);
                return this.httpUtils.getData(path);
            }, GitStatusClient.\u0275fac = function(t) {
                return new (t || GitStatusClient)(core["\u0275\u0275inject"](GitHttpUtils));
            }, GitStatusClient.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: GitStatusClient,
                factory: GitStatusClient.\u0275fac
            }), GitStatusClient;
        }(), GitSyncClient = function() {
            function GitSyncClient(httpUtils) {
                this.httpUtils = httpUtils;
            }
            return GitSyncClient.prototype.getlatestGitOperation = function(workspaceId) {
                return this.httpUtils.getData("metadata/git/workspaces/".concat(workspaceId, "/latestGitOperationV2"));
            }, GitSyncClient.\u0275fac = function(t) {
                return new (t || GitSyncClient)(core["\u0275\u0275inject"](GitHttpUtils));
            }, GitSyncClient.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: GitSyncClient,
                factory: GitSyncClient.\u0275fac
            }), GitSyncClient;
        }(), GitSwitchBranchClient = function() {
            function GitSwitchBranchClient(httpUtils) {
                this.httpUtils = httpUtils;
            }
            return GitSwitchBranchClient.prototype.switchBranch = function(workspaceId, switchBranchRequest) {
                return this.httpUtils.postData("/metadata/git/workspaces/".concat(workspaceId, "/switchBranch"), switchBranchRequest);
            }, GitSwitchBranchClient.\u0275fac = function(t) {
                return new (t || GitSwitchBranchClient)(core["\u0275\u0275inject"](GitHttpUtils));
            }, GitSwitchBranchClient.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: GitSwitchBranchClient,
                factory: GitSwitchBranchClient.\u0275fac
            }), GitSwitchBranchClient;
        }(), GitUndoClient = function() {
            function GitUndoClient(httpUtils) {
                this.httpUtils = httpUtils;
            }
            return GitUndoClient.prototype.undoCommitArtifacts = function(workspaceId, undoFromGitRequest) {
                return this.httpUtils.postData("metadata/git/workspaces/".concat(workspaceId, "/undo"), undoFromGitRequest);
            }, GitUndoClient.\u0275fac = function(t) {
                return new (t || GitUndoClient)(core["\u0275\u0275inject"](GitHttpUtils));
            }, GitUndoClient.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: GitUndoClient,
                factory: GitUndoClient.\u0275fac
            }), GitUndoClient;
        }(), GitUpdateClient = function() {
            function GitUpdateClient(httpUtils) {
                this.httpUtils = httpUtils;
            }
            return GitUpdateClient.prototype.UpdateArtifactsFromGit = function(workspaceId, updateFromGitRequest) {
                return this.httpUtils.postData("metadata/git/workspaces/".concat(workspaceId, "/updateFromGit"), updateFromGitRequest).pipe((0, 
                map.U)(function(response) {
                    return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, response), {
                        responseDate: new Date(Date.now())
                    });
                }));
            }, GitUpdateClient.\u0275fac = function(t) {
                return new (t || GitUpdateClient)(core["\u0275\u0275inject"](GitHttpUtils));
            }, GitUpdateClient.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: GitUpdateClient,
                factory: GitUpdateClient.\u0275fac
            }), GitUpdateClient;
        }(), GitRepairClient = function() {
            function GitRepairClient(httpUtils) {
                this.httpUtils = httpUtils;
            }
            return GitRepairClient.prototype.gitRepairItems = function(workspaceId, repairRemoteItemsRequest) {
                return this.httpUtils.postData("metadata/git/workspaces/".concat(workspaceId, "/repairGitItems"), repairRemoteItemsRequest).pipe((0, 
                map.U)(function(response) {
                    return (0, tslib_es6.__assign)({}, response);
                }));
            }, GitRepairClient.\u0275fac = function(t) {
                return new (t || GitRepairClient)(core["\u0275\u0275inject"](GitHttpUtils));
            }, GitRepairClient.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: GitRepairClient,
                factory: GitRepairClient.\u0275fac
            }), GitRepairClient;
        }();
        function isExtensionDatasourceConnectionDetails(object) {
            return object && "string" == typeof object.extensionDataSourceKind && "string" == typeof object.extensionDataSourcePath;
        }
        var GitConnectionInitializationResult = function(GitConnectionInitializationResult) {
            return GitConnectionInitializationResult[GitConnectionInitializationResult.Undefined = 0] = "Undefined", 
            GitConnectionInitializationResult[GitConnectionInitializationResult.Completed = 1] = "Completed", 
            GitConnectionInitializationResult[GitConnectionInitializationResult.UpdateFromGitRequired = 2] = "UpdateFromGitRequired", 
            GitConnectionInitializationResult[GitConnectionInitializationResult.CommitToGitRequired = 3] = "CommitToGitRequired", 
            GitConnectionInitializationResult[GitConnectionInitializationResult.Failed = 100] = "Failed", 
            GitConnectionInitializationResult;
        }({}), common = __webpack_require__(77476), DataAccessGitModule = function() {
            function DataAccessGitModule() {}
            return DataAccessGitModule.forRoot = function() {
                return {
                    ngModule: DataAccessGitModule,
                    providers: []
                };
            }, DataAccessGitModule.\u0275fac = function(t) {
                return new (t || DataAccessGitModule);
            }, DataAccessGitModule.\u0275mod = core["\u0275\u0275defineNgModule"]({
                type: DataAccessGitModule
            }), DataAccessGitModule.\u0275inj = core["\u0275\u0275defineInjector"]({
                providers: [ GitBranchOutClient, GitCommitClient, GitConfigureCredentialsClient, GitConnectionDetailsClient, GitConnectionDiscoveryClient, GitDatasourceClient, GitHttpUtils, GitInitializationClient, GitStatusClient, GitSyncClient, GitSwitchBranchClient, GitUndoClient, GitUpdateClient, GitRepairClient ],
                imports: [ common.CommonModule ]
            }), DataAccessGitModule;
        }();
    },
    70628: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            CmZ: function() {
                return ConnectionOperationState;
            },
            DAQ: function() {
                return DataGitModule;
            },
            j3q: function() {
                return DatasourceManagementState;
            },
            f$Z: function() {
                return GitConnectionFacade;
            },
            iAv: function() {
                return GitDatasourcesFacade;
            },
            REK: function() {
                return GitInitializeFacade;
            },
            gCl: function() {
                return GitSessionStorageService;
            },
            F8e: function() {
                return GitStatusFacade;
            },
            pPx: function() {
                return GitStatusMode;
            },
            CCT: function() {
                return GitSwitchBranchFacade;
            },
            Gui: function() {
                return LoadingState;
            },
            ND3: function() {
                return SwitchBranchState;
            },
            x6e: function() {
                return loadUncommittedChanges;
            },
            V_q: function() {
                return updateDatasourceInGitConnection;
            }
        });
        var ngrx_effects = __webpack_require__(60756), ngrx_store = __webpack_require__(85732), src = __webpack_require__(18176), tslib_es6 = __webpack_require__(81337), ngrx_entity = __webpack_require__(8894), loadUncommittedChanges = (0, 
        ngrx_store.PH)("[GitStatus] Load Uncommitted Changes", (0, ngrx_store.Ky)()), loadUncommittedChangesSuccess = (0, 
        ngrx_store.PH)("[GitStatus] Load Uncommitted Changes Success", (0, ngrx_store.Ky)()), loadUncommittedChangesFailure = (0, 
        ngrx_store.PH)("[GitStatus] Load Uncommitted Changes Failure", (0, ngrx_store.Ky)()), loadIncomingChanges = (0, 
        ngrx_store.PH)("[GitStatus] Load Incoming Changes", (0, ngrx_store.Ky)()), loadIncomingChangesSuccess = (0, 
        ngrx_store.PH)("[GitStatus] Load Incoming Changes Success", (0, ngrx_store.Ky)()), loadIncomingChangesFailure = (0, 
        ngrx_store.PH)("[GitStatus] Load Incoming Changes Failure", (0, ngrx_store.Ky)()), setChangesArtifactSelection = (0, 
        ngrx_store.PH)("[GitStatus] set selection of artifact in changes tab", (0, ngrx_store.Ky)()), clearChangesArtifactSelection = (0, 
        ngrx_store.PH)("[GitStatus] clear selection of artifact in changes tab", (0, ngrx_store.Ky)()), invalidateGitStatus = (0, 
        ngrx_store.PH)("[GitConnection] Invalidate Git status", (0, ngrx_store.Ky)()), loadGitStatus = (0, 
        ngrx_store.PH)("[GitStatus] Load Git Status", (0, ngrx_store.Ky)()), loadGitStatusSuccess = (0, 
        ngrx_store.PH)("[GitStatus] Load Git Status Success", (0, ngrx_store.Ky)()), loadGitStatusFailure = (0, 
        ngrx_store.PH)("[GitStatus] Load Git Status Failure", (0, ngrx_store.Ky)()), LoadingState = function(LoadingState) {
            return LoadingState[LoadingState.Initial = 0] = "Initial", LoadingState[LoadingState.Loading = 1] = "Loading", 
            LoadingState[LoadingState.Loaded = 2] = "Loaded", LoadingState;
        }({}), ConnectionOperationState = function(ConnectionOperationState) {
            return ConnectionOperationState[ConnectionOperationState.Initial = 0] = "Initial", 
            ConnectionOperationState[ConnectionOperationState.InProgress = 1] = "InProgress", 
            ConnectionOperationState[ConnectionOperationState.Completed = 2] = "Completed", 
            ConnectionOperationState;
        }({}), types_CommittingState = function(CommittingState) {
            return CommittingState[CommittingState.Initial = 0] = "Initial", CommittingState[CommittingState.Committing = 1] = "Committing", 
            CommittingState[CommittingState.Committed = 2] = "Committed", CommittingState;
        }({}), UndoingState = function(UndoingState) {
            return UndoingState[UndoingState.Initial = 0] = "Initial", UndoingState[UndoingState.Undoing = 1] = "Undoing", 
            UndoingState[UndoingState.Undone = 2] = "Undone", UndoingState;
        }({}), UpdatingState = function(UpdatingState) {
            return UpdatingState[UpdatingState.Initial = 0] = "Initial", UpdatingState[UpdatingState.Updating = 1] = "Updating", 
            UpdatingState[UpdatingState.Updated = 2] = "Updated", UpdatingState;
        }({}), GitProgressIndicatorState = function(GitProgressIndicatorState) {
            return GitProgressIndicatorState[GitProgressIndicatorState.None = 0] = "None", GitProgressIndicatorState[GitProgressIndicatorState.CommitFlowInProgress = 1] = "CommitFlowInProgress", 
            GitProgressIndicatorState[GitProgressIndicatorState.CommitInitialFlowInProgress = 2] = "CommitInitialFlowInProgress", 
            GitProgressIndicatorState[GitProgressIndicatorState.UpdateFlowInProgress = 3] = "UpdateFlowInProgress", 
            GitProgressIndicatorState[GitProgressIndicatorState.UpdateInitialFlowInProgress = 4] = "UpdateInitialFlowInProgress", 
            GitProgressIndicatorState[GitProgressIndicatorState.UndoFlowInProgress = 5] = "UndoFlowInProgress", 
            GitProgressIndicatorState[GitProgressIndicatorState.CheckoutBranchFlowInProgress = 6] = "CheckoutBranchFlowInProgress", 
            GitProgressIndicatorState[GitProgressIndicatorState.SwitchBranchFlowInProgress = 7] = "SwitchBranchFlowInProgress", 
            GitProgressIndicatorState;
        }({}), SwitchBranchState = function(SwitchBranchState) {
            return SwitchBranchState[SwitchBranchState.Initial = 0] = "Initial", SwitchBranchState[SwitchBranchState.InProgress = 1] = "InProgress", 
            SwitchBranchState[SwitchBranchState.Completed = 2] = "Completed", SwitchBranchState;
        }({}), types_BranchOutState = function(BranchOutState) {
            return BranchOutState[BranchOutState.Initial = 0] = "Initial", BranchOutState[BranchOutState.InProgress = 1] = "InProgress", 
            BranchOutState[BranchOutState.Completed = 2] = "Completed", BranchOutState;
        }({}), DatasourceManagementState = function(DatasourceManagementState) {
            return DatasourceManagementState[DatasourceManagementState.Initial = 0] = "Initial", 
            DatasourceManagementState[DatasourceManagementState.InProgress = 1] = "InProgress", 
            DatasourceManagementState[DatasourceManagementState.Completed = 2] = "Completed", 
            DatasourceManagementState;
        }({}), types_RepairingItemsState = function(RepairingItemsState) {
            return RepairingItemsState[RepairingItemsState.Initial = 0] = "Initial", RepairingItemsState[RepairingItemsState.InProgress = 1] = "InProgress", 
            RepairingItemsState[RepairingItemsState.Completed = 2] = "Completed", RepairingItemsState;
        }({}), gitStatusAdapter = (0, ngrx_entity.H)({
            selectId: function(item) {
                return item.workspaceId;
            }
        }), initialState = (0, tslib_es6.__assign)({}, gitStatusAdapter.getInitialState()), gitStatusReducer = (0, 
        ngrx_store.Lq)(initialState, (0, ngrx_store.on)(loadGitStatus, function(state, _a) {
            return gitStatusAdapter.upsertOne({
                workspaceId: _a.workspaceId,
                statusCallState: LoadingState.Loading
            }, state);
        }), (0, ngrx_store.on)(loadGitStatusSuccess, function(state, _a) {
            return gitStatusAdapter.upsertOne((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, _a.gitStatus), {
                statusCallState: LoadingState.Loaded
            }), state);
        }), (0, ngrx_store.on)(loadGitStatusFailure, function(state, _a) {
            return gitStatusAdapter.upsertOne({
                workspaceId: _a.workspaceId,
                statusCallState: _a.error
            }, state);
        }), (0, ngrx_store.on)(loadUncommittedChanges, function(state, _a) {
            return gitStatusAdapter.upsertOne({
                workspaceId: _a.workspaceId,
                uncommittedChangesCallState: LoadingState.Loading
            }, state);
        }), (0, ngrx_store.on)(loadUncommittedChangesSuccess, function(state, _a) {
            var _b, _c, _d, _e, _f, gitStatus = _a.gitStatus;
            return gitStatusAdapter.upsertOne({
                workspaceId: gitStatus.workspaceId,
                head: gitStatus.head,
                gitChanges: (0, tslib_es6.__spreadArray)((0, tslib_es6.__spreadArray)([], null !== (_d = null === (_c = null === (_b = state.entities[gitStatus.workspaceId]) || void 0 === _b ? void 0 : _b.gitChanges) || void 0 === _c ? void 0 : _c.filter(function(change) {
                    return change.remoteChange;
                })) && void 0 !== _d ? _d : [], !0), null !== (_e = null == gitStatus ? void 0 : gitStatus.gitChanges) && void 0 !== _e ? _e : [], !0),
                incomingChangesCommitHash: null === (_f = state.entities[gitStatus.workspaceId]) || void 0 === _f ? void 0 : _f.incomingChangesCommitHash,
                uncommittedChangesCallState: LoadingState.Loaded
            }, state);
        }), (0, ngrx_store.on)(loadUncommittedChangesFailure, function(state, _a) {
            return gitStatusAdapter.upsertOne({
                workspaceId: _a.workspaceId,
                uncommittedChangesCallState: _a.error
            }, state);
        }), (0, ngrx_store.on)(loadIncomingChanges, function(state, _a) {
            return gitStatusAdapter.upsertOne({
                workspaceId: _a.workspaceId,
                incomingChangesCallState: LoadingState.Loading
            }, state);
        }), (0, ngrx_store.on)(loadIncomingChangesSuccess, function(state, _a) {
            var _b, _c, _d, _e, gitStatus = _a.gitStatus;
            return gitStatusAdapter.upsertOne({
                workspaceId: gitStatus.workspaceId,
                head: gitStatus.head,
                gitChanges: (0, tslib_es6.__spreadArray)((0, tslib_es6.__spreadArray)([], null !== (_d = null === (_c = null === (_b = state.entities[gitStatus.workspaceId]) || void 0 === _b ? void 0 : _b.gitChanges) || void 0 === _c ? void 0 : _c.filter(function(change) {
                    return change.workspaceChange;
                })) && void 0 !== _d ? _d : [], !0), null !== (_e = null == gitStatus ? void 0 : gitStatus.gitChanges) && void 0 !== _e ? _e : [], !0),
                incomingChangesCommitHash: gitStatus.incomingChangesCommitHash,
                incomingChangesCallState: LoadingState.Loaded
            }, state);
        }), (0, ngrx_store.on)(loadIncomingChangesFailure, function(state, _a) {
            return gitStatusAdapter.upsertOne({
                workspaceId: _a.workspaceId,
                incomingChangesCallState: _a.error
            }, state);
        }), (0, ngrx_store.on)(setChangesArtifactSelection, function(state, _a) {
            var _b, _c, workspaceId = _a.workspaceId, artifactId = _a.artifactId, logicalId = _a.logicalId, currentSelection = (null === (_c = null === (_b = state.entities[workspaceId]) || void 0 === _b ? void 0 : _b.uncommittedChangesArtifactSelectionState) || void 0 === _c ? void 0 : _c.selectedArtifacts) || [], newSelection = _a.isChecked ? currentSelection.concat({
                artifactId,
                logicalId
            }) : currentSelection.filter(function(selector) {
                return selector.artifactId !== artifactId || selector.logicalId !== logicalId;
            });
            return gitStatusAdapter.upsertOne({
                workspaceId,
                uncommittedChangesArtifactSelectionState: {
                    selectedArtifacts: newSelection
                }
            }, state);
        }), (0, ngrx_store.on)(clearChangesArtifactSelection, function(state, _a) {
            return gitStatusAdapter.updateOne({
                id: _a.workspaceId,
                changes: {
                    uncommittedChangesArtifactSelectionState: {
                        selectedArtifacts: []
                    }
                }
            }, state);
        }), (0, ngrx_store.on)(invalidateGitStatus, function(state, _a) {
            return gitStatusAdapter.removeOne(_a.workspaceId, state);
        })), git_src = __webpack_require__(18016), initializeGitConnection = (0, ngrx_store.PH)("[GitConnection] Initialize Git connection", (0, 
        ngrx_store.Ky)()), initializeGitConnectionSuccess = (0, ngrx_store.PH)("[GitConnection] Initialize Git connection success", (0, 
        ngrx_store.Ky)()), initializeGitConnectionFailure = (0, ngrx_store.PH)("[GitConnection] Initialize Git connection failure", (0, 
        ngrx_store.Ky)()), invalidateGitConnectionInitialization = (0, ngrx_store.PH)("[GitConnection] Invalidate Git connection initialization", (0, 
        ngrx_store.Ky)()), loadGitConnection = (0, ngrx_store.PH)("[GitConnection] Load Git Connection", (0, 
        ngrx_store.Ky)()), loadGitConnectionSuccess = (0, ngrx_store.PH)("[GitConnection] Load Git Connection Success", (0, 
        ngrx_store.Ky)()), loadGitConnectionFailure = (0, ngrx_store.PH)("[GitConnection] Load Git Connection Failure", (0, 
        ngrx_store.Ky)()), ensureGitConnection = (0, ngrx_store.PH)("[GitConnection] Ensure Git Connection", (0, 
        ngrx_store.Ky)()), saveGitConnection = (0, ngrx_store.PH)("[GitConnection] Save Git Connection", (0, 
        ngrx_store.Ky)()), saveGitConnectionSuccess = (0, ngrx_store.PH)("[GitConnection] Save Git Connection Success", (0, 
        ngrx_store.Ky)()), saveGitConnectionFailure = (0, ngrx_store.PH)("[GitConnection] Save Git Connection Failure", (0, 
        ngrx_store.Ky)()), deleteGitConnection = (0, ngrx_store.PH)("[GitConnection] Delete Git Connection", (0, 
        ngrx_store.Ky)()), deleteGitConnectionSuccess = (0, ngrx_store.PH)("[GitConnection] Delete Git Connection Success", (0, 
        ngrx_store.Ky)()), deleteGitConnectionFailure = (0, ngrx_store.PH)("[GitConnection] Delete Git Connection Failure", (0, 
        ngrx_store.Ky)()), gitCheckoutBranch = (0, ngrx_store.PH)("[GitConnection] Git Checkout Branch", (0, 
        ngrx_store.Ky)()), gitCheckoutBranchSuccess = (0, ngrx_store.PH)("[GitConnection] Git Checkout Branch Success", (0, 
        ngrx_store.Ky)()), gitCheckoutBranchFailure = (0, ngrx_store.PH)("[GitConnection] Git Checkout Branch Failure", (0, 
        ngrx_store.Ky)()), updateDatasourceInGitConnection = (0, ngrx_store.PH)("[GitConnection] Update datasource in GitConnection", (0, 
        ngrx_store.Ky)()), git_sync_actions_getLatestGitAlmOperation = (0, ngrx_store.PH)("[GitSync] Get latest git alm operation", (0, 
        ngrx_store.Ky)()), getLatestGitAlmOperationSuccess = (0, ngrx_store.PH)("[GitSync] Get latest git alm operation Success", (0, 
        ngrx_store.Ky)()), getLatestGitAlmOperationFailure = (0, ngrx_store.PH)("[GitSync] Get latest git alm operation Failure", (0, 
        ngrx_store.Ky)()), invalidateGitSync = (0, ngrx_store.PH)("[GitConnection] Invalidate Git sync", (0, 
        ngrx_store.Ky)()), gitSwitchBranch = (0, ngrx_store.PH)("[GitSwitchBranch] Git Switch Branch", (0, 
        ngrx_store.Ky)()), gitSwitchBranchSuccess = (0, ngrx_store.PH)("[GitSwitchBranch] Git Switch Branch Success", (0, 
        ngrx_store.Ky)()), gitSwitchBranchInProgress = (0, ngrx_store.PH)("[GitSwitchBranch] Git Switch Branch In Progress", (0, 
        ngrx_store.Ky)()), gitSwitchBranchFailureServerError = (0, ngrx_store.PH)("[GitSwitchBranch] Git Switch Branch Failure server error", (0, 
        ngrx_store.Ky)()), gitSwitchBranchFailure = (0, ngrx_store.PH)("[GitSwitchBranch] Git Switch Branch Failure", (0, 
        ngrx_store.Ky)()), git_branch_out_actions_gitBranchOut = (0, ngrx_store.PH)("[GitBranchOut] Branch Out", (0, 
        ngrx_store.Ky)()), gitBranchOutSuccess = (0, ngrx_store.PH)("[GitBranchOut] Branch Out success", (0, 
        ngrx_store.Ky)()), gitBranchOutFailure = (0, ngrx_store.PH)("[GitBranchOut] Branch Out failure", (0, 
        ngrx_store.Ky)()), gitBranchOutSyncFolder = (0, ngrx_store.PH)("[GitBranchOut] Branch Out requires to sync folder into store", (0, 
        ngrx_store.Ky)()), gitBranchOutCompleted = (0, ngrx_store.PH)("[GitBranchOut] Branch Out completed", (0, 
        ngrx_store.Ky)()), git_branch_out_actions_gitBranchOutSyncFolderNoUpdate = (0, ngrx_store.PH)("[GitBranchOut] Branch Out requires to sync folder into store without update", (0, 
        ngrx_store.Ky)()), git_branch_out_actions_gitBranchOutStoreInvalidate = (0, ngrx_store.PH)("[GitBranchOut] Branch Out store invalidate", (0, 
        ngrx_store.Ky)()), gitConnectionAdapter = (0, ngrx_entity.H)({
            selectId: function(item) {
                return item.workspaceId;
            }
        }), git_connection_reducer_initialState = (0, tslib_es6.__assign)({}, gitConnectionAdapter.getInitialState()), gitConnectionReducer = (0, 
        ngrx_store.Lq)(git_connection_reducer_initialState, (0, ngrx_store.on)(loadGitConnection, deleteGitConnection, function(state, _a) {
            return gitConnectionAdapter.upsertOne({
                workspaceId: _a.workspaceId,
                callState: ConnectionOperationState.InProgress
            }, state);
        }), (0, ngrx_store.on)(saveGitConnection, function(state, _a) {
            return gitConnectionAdapter.upsertOne({
                workspaceId: _a.gitConnection.workspaceId,
                callState: ConnectionOperationState.InProgress
            }, state);
        }), (0, ngrx_store.on)(gitCheckoutBranch, function(state, _a) {
            return gitConnectionAdapter.upsertOne({
                workspaceId: _a.gitCheckoutBranchState.workspaceId,
                callState: ConnectionOperationState.InProgress
            }, state);
        }), (0, ngrx_store.on)(loadGitConnectionSuccess, saveGitConnectionSuccess, function(state, _a) {
            return gitConnectionAdapter.upsertOne((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, _a.gitConnection), {
                callState: ConnectionOperationState.Completed
            }), state);
        }), (0, ngrx_store.on)(gitCheckoutBranchSuccess, function(state, _a) {
            var _b, gitCheckoutBranchState = _a.gitCheckoutBranchState, workspaceId = gitCheckoutBranchState.workspaceId, currentGitConnectionDetails = null === (_b = state.entities[workspaceId]) || void 0 === _b ? void 0 : _b.gitConnectionDetails;
            return gitConnectionAdapter.updateOne({
                id: workspaceId,
                changes: {
                    gitConnectionDetails: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, currentGitConnectionDetails), {
                        branchName: gitCheckoutBranchState.request.branchName
                    }),
                    callState: ConnectionOperationState.Completed
                }
            }, state);
        }), (0, ngrx_store.on)(gitSwitchBranchInProgress, function(state, _a) {
            var _b, gitSwitchBranchState = _a.gitSwitchBranchState;
            return void 0 !== (null === (_b = null == gitSwitchBranchState ? void 0 : gitSwitchBranchState.request) || void 0 === _b ? void 0 : _b.targetBranchName) ? function(state, workspaceId, newBranchName) {
                var _a, currentGitConnectionDetails = null === (_a = state.entities[workspaceId]) || void 0 === _a ? void 0 : _a.gitConnectionDetails;
                return gitConnectionAdapter.updateOne({
                    id: workspaceId,
                    changes: {
                        gitConnectionDetails: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, currentGitConnectionDetails), {
                            branchName: newBranchName
                        }),
                        callState: ConnectionOperationState.Completed
                    }
                }, state);
            }(state, gitSwitchBranchState.workspaceId, gitSwitchBranchState.request.targetBranchName) : state;
        }), (0, ngrx_store.on)(updateDatasourceInGitConnection, function(state, _a) {
            var _b, workspaceId = _a.workspaceId, datasourceOID = _a.datasourceOID, currentGitConnectionDetails = null === (_b = state.entities[workspaceId]) || void 0 === _b ? void 0 : _b.gitConnectionDetails;
            return gitConnectionAdapter.updateOne({
                id: workspaceId,
                changes: {
                    gitConnectionDetails: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, currentGitConnectionDetails), {
                        datasourceOID
                    }),
                    callState: ConnectionOperationState.Completed
                }
            }, state);
        }), (0, ngrx_store.on)(deleteGitConnectionSuccess, function(state, _a) {
            return gitConnectionAdapter.removeOne(_a.workspaceId, state);
        }), (0, ngrx_store.on)(loadGitConnectionFailure, deleteGitConnectionFailure, gitCheckoutBranchFailure, function(state, _a) {
            return gitConnectionAdapter.updateOne({
                id: _a.workspaceId,
                changes: {
                    callState: _a.error
                }
            }, state);
        }), (0, ngrx_store.on)(saveGitConnectionFailure, function(state, _a) {
            return gitConnectionAdapter.updateOne({
                id: _a.gitConnection.workspaceId,
                changes: {
                    callState: _a.error
                }
            }, state);
        }), (0, ngrx_store.on)(initializeGitConnectionSuccess, function(state, _a) {
            var _b, _c, gitInitializationStateWithResponse = _a.gitInitializationStateWithResponse, workspaceId = gitInitializationStateWithResponse.workspaceId, currentGitConnectionDetails = null === (_b = state.entities[workspaceId]) || void 0 === _b ? void 0 : _b.gitConnectionDetails;
            return gitConnectionAdapter.updateOne({
                id: workspaceId,
                changes: {
                    gitConnectionDetails: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, currentGitConnectionDetails), {
                        isInitialized: !0,
                        head: null === (_c = gitInitializationStateWithResponse.response) || void 0 === _c ? void 0 : _c.head
                    })
                }
            }, state);
        }), (0, ngrx_store.on)(gitBranchOutSuccess, function(state, _a) {
            var _b, _c, _d, _e, _f, _g, gitBranchOutState = _a.gitBranchOutState;
            if (void 0 === (null === (_b = gitBranchOutState.response) || void 0 === _b ? void 0 : _b.folder)) return state;
            var targetWorkspaceId = null === (_d = null === (_c = gitBranchOutState.response) || void 0 === _c ? void 0 : _c.folder) || void 0 === _d ? void 0 : _d.objectId, currentGitConnectionDetails = null === (_e = state.entities[gitBranchOutState.workspaceId]) || void 0 === _e ? void 0 : _e.gitConnectionDetails, newgitConnectionDetails = (0, 
            tslib_es6.__assign)((0, tslib_es6.__assign)({}, currentGitConnectionDetails), {
                head: null === (_g = null === (_f = gitBranchOutState.response) || void 0 === _f ? void 0 : _f.initializeConnectionStatus) || void 0 === _g ? void 0 : _g.head,
                branchName: gitBranchOutState.request.targetBranchName
            });
            return gitConnectionAdapter.upsertOne((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, newgitConnectionDetails), {
                workspaceId: targetWorkspaceId,
                callState: ConnectionOperationState.Completed
            }), state);
        }), (0, ngrx_store.on)(loadUncommittedChangesSuccess, loadIncomingChangesSuccess, loadGitStatusSuccess, function(state, _a) {
            var _b, _c, _d, gitStatus = _a.gitStatus, workspaceId = gitStatus.workspaceId, currentGitConnectionDetails = null === (_b = state.entities[workspaceId]) || void 0 === _b ? void 0 : _b.gitConnectionDetails;
            return gitStatus.head && gitStatus.head !== (null === (_d = null === (_c = state.entities[gitStatus.workspaceId]) || void 0 === _c ? void 0 : _c.gitConnectionDetails) || void 0 === _d ? void 0 : _d.head) ? gitConnectionAdapter.updateOne({
                id: workspaceId,
                changes: {
                    gitConnectionDetails: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, currentGitConnectionDetails), {
                        head: gitStatus.head
                    })
                }
            }, state) : state;
        }), (0, ngrx_store.on)(getLatestGitAlmOperationSuccess, function(state, _a) {
            var _b, _c, gitSyncState = _a.gitSyncState, workspaceId = gitSyncState.workspaceId, currentGitConnectionDetails = null === (_b = state.entities[workspaceId]) || void 0 === _b ? void 0 : _b.gitConnectionDetails;
            return gitSyncState.gitOperationStatus !== git_src.wM.Successful ? state : gitConnectionAdapter.updateOne({
                id: workspaceId,
                changes: {
                    gitConnectionDetails: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, currentGitConnectionDetails), {
                        lastSyncTime: null === (_c = gitSyncState.lastUpdatedTime) || void 0 === _c ? void 0 : _c.toString()
                    })
                }
            }, state);
        })), git_commit_actions_commitToGit = (0, ngrx_store.PH)("[CommitToGit] Commit Changes To Git", (0, 
        ngrx_store.Ky)()), commitToGitInProgress = (0, ngrx_store.PH)("[CommitToGit] Commit Changes To Git inProgress", (0, 
        ngrx_store.Ky)()), commitToGitSuccess = (0, ngrx_store.PH)("[CommitToGit] Commit Changes To Git success", (0, 
        ngrx_store.Ky)()), commitToGitFailureServerError = (0, ngrx_store.PH)("[CommitToGit] Commit Changes To Git failure server error ", (0, 
        ngrx_store.Ky)()), commitToGitFailure = (0, ngrx_store.PH)("[CommitToGit] Commit Changes To Git failure ", (0, 
        ngrx_store.Ky)()), gitCommitAdapter = (0, ngrx_entity.H)({
            selectId: function(item) {
                return item.workspaceId;
            }
        }), git_commit_reducer_initialState = (0, tslib_es6.__assign)({}, gitCommitAdapter.getInitialState()), gitCommitReducer = (0, 
        ngrx_store.Lq)(git_commit_reducer_initialState, (0, ngrx_store.on)(git_commit_actions_commitToGit, function(state, _a) {
            return gitCommitAdapter.upsertOne((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, _a.gitCommitState), {
                callState: types_CommittingState.Committing
            }), state);
        }), (0, ngrx_store.on)(commitToGitInProgress, function(state, _a) {
            return gitCommitAdapter.upsertOne((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, _a.gitCommitState), {
                callState: types_CommittingState.Committing
            }), state);
        }), (0, ngrx_store.on)(commitToGitSuccess, function(state, _a) {
            return gitCommitAdapter.upsertOne((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, _a.gitCommitStateWithResponse), {
                callState: types_CommittingState.Committed,
                notificationId: void 0
            }), state);
        }), (0, ngrx_store.on)(commitToGitFailureServerError, function(state, _a) {
            return gitCommitAdapter.upsertOne((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, _a.gitCommitState), {
                callState: types_CommittingState.Committed,
                notificationId: void 0
            }), state);
        }), (0, ngrx_store.on)(commitToGitFailure, function(state, _a) {
            var error = _a.error;
            return gitCommitAdapter.upsertOne((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, _a.gitCommitState), {
                callState: error,
                notificationId: void 0
            }), state);
        }), (0, ngrx_store.on)(invalidateGitConnectionInitialization, function(state, _a) {
            return gitCommitAdapter.removeOne(_a.workspaceId, state);
        })), updateFromGit = (0, ngrx_store.PH)("[UpdateFromGit] Update Changes From Git", (0, 
        ngrx_store.Ky)()), updateFromGitInProgress = (0, ngrx_store.PH)("[UpdateFromGit] Update Changes From Git InProgress", (0, 
        ngrx_store.Ky)()), updateFromGitSuccess = (0, ngrx_store.PH)("[UpdateFromGit] Update Changes From Git success", (0, 
        ngrx_store.Ky)()), updateFromGitFailure = (0, ngrx_store.PH)("[UpdateFromGit] Update Changes From Git failure ", (0, 
        ngrx_store.Ky)()), updateFromGitFailureServerError = (0, ngrx_store.PH)("[UpdateFromGit] Update Changes From Git failure server error", (0, 
        ngrx_store.Ky)()), gitUpdateAdapter = (0, ngrx_entity.H)({
            selectId: function(item) {
                return item.workspaceId;
            }
        }), git_update_reducer_initialState = (0, tslib_es6.__assign)({}, gitUpdateAdapter.getInitialState()), gitUpdateReducer = (0, 
        ngrx_store.Lq)(git_update_reducer_initialState, (0, ngrx_store.on)(updateFromGit, function(state, _a) {
            return gitUpdateAdapter.upsertOne((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, _a.gitUpdateState), {
                callState: UpdatingState.Updating
            }), state);
        }), (0, ngrx_store.on)(updateFromGitInProgress, function(state, _a) {
            return gitUpdateAdapter.upsertOne((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, _a.gitUpdateState), {
                callState: UpdatingState.Updating
            }), state);
        }), (0, ngrx_store.on)(updateFromGitSuccess, function(state, _a) {
            return gitUpdateAdapter.upsertOne((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, _a.gitUpdateStateWithResponse), {
                callState: UpdatingState.Updated,
                notificationId: void 0
            }), state);
        }), (0, ngrx_store.on)(updateFromGitFailureServerError, function(state, _a) {
            var error = _a.error;
            return gitUpdateAdapter.upsertOne((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, _a.gitUpdateState), {
                callState: error,
                notificationId: void 0
            }), state);
        }), (0, ngrx_store.on)(updateFromGitFailure, function(state, _a) {
            var error = _a.error;
            return gitUpdateAdapter.upsertOne((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, _a.gitUpdateState), {
                callState: error,
                notificationId: void 0
            }), state);
        }), (0, ngrx_store.on)(invalidateGitConnectionInitialization, function(state, _a) {
            return gitUpdateAdapter.removeOne(_a.workspaceId, state);
        })), gitInitializationAdapter = (0, ngrx_entity.H)({
            selectId: function(item) {
                return item.workspaceId;
            }
        }), git_initialization_reducer_initialState = (0, tslib_es6.__assign)({}, gitInitializationAdapter.getInitialState()), git_initialization_reducer_gitCommitReducer = (0, 
        ngrx_store.Lq)(git_initialization_reducer_initialState, (0, ngrx_store.on)(initializeGitConnection, function(state, _a) {
            return gitInitializationAdapter.upsertOne((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, _a.gitInitializationState), {
                callState: ConnectionOperationState.InProgress
            }), state);
        }), (0, ngrx_store.on)(initializeGitConnectionSuccess, function(state, _a) {
            return gitInitializationAdapter.upsertOne((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, _a.gitInitializationStateWithResponse), {
                callState: ConnectionOperationState.Completed
            }), state);
        }), (0, ngrx_store.on)(initializeGitConnectionFailure, function(state, _a) {
            var error = _a.error;
            return gitInitializationAdapter.upsertOne((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, _a.gitInitializationState), {
                callState: error
            }), state);
        }), (0, ngrx_store.on)(invalidateGitConnectionInitialization, function(state, _a) {
            return gitInitializationAdapter.removeOne(_a.workspaceId, state);
        })), gitSyncAdapter = (0, ngrx_entity.H)({
            selectId: function(item) {
                return item.workspaceId;
            }
        }), git_sync_reducer_initialState = (0, tslib_es6.__assign)({}, gitSyncAdapter.getInitialState()), gitSyncReducer = (0, 
        ngrx_store.Lq)(git_sync_reducer_initialState, (0, ngrx_store.on)(git_sync_actions_getLatestGitAlmOperation, function(state, _a) {
            return gitSyncAdapter.upsertOne({
                workspaceId: _a.workspaceId,
                isValid: !0,
                isInitial: !!_a.isInitial,
                callState: ConnectionOperationState.InProgress
            }, state);
        }), (0, ngrx_store.on)(getLatestGitAlmOperationSuccess, function(state, _a) {
            return gitSyncAdapter.upsertOne((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, _a.gitSyncState), {
                callState: ConnectionOperationState.Completed
            }), state);
        }), (0, ngrx_store.on)(getLatestGitAlmOperationFailure, function(state, _a) {
            return gitSyncAdapter.updateOne({
                id: _a.workspaceId,
                changes: {
                    callState: _a.error,
                    isValid: !1
                }
            }, state);
        }), (0, ngrx_store.on)(invalidateGitSync, function(state, _a) {
            return gitSyncAdapter.removeOne(_a.workspaceId, state);
        })), undoFromGit = (0, ngrx_store.PH)("[undoFromGit] Undo changes From Git", (0, 
        ngrx_store.Ky)()), undoFromGitInProgress = (0, ngrx_store.PH)("[undoFromGit] Undo changes From Git inProgress", (0, 
        ngrx_store.Ky)()), undoFromGitSuccess = (0, ngrx_store.PH)("[undoFromGit] Undo changes From Git success", (0, 
        ngrx_store.Ky)()), undoFromGitFailureServerError = (0, ngrx_store.PH)("[undoFromGit] Undo changes From Git failure server error ", (0, 
        ngrx_store.Ky)()), undoFromGitFailure = (0, ngrx_store.PH)("[undoFromGit] Undo changes From Git failure ", (0, 
        ngrx_store.Ky)()), gitUndoAdapter = (0, ngrx_entity.H)({
            selectId: function(item) {
                return item.workspaceId;
            }
        }), git_undo_reducer_initialState = (0, tslib_es6.__assign)({}, gitUndoAdapter.getInitialState()), gitUndoReducer = (0, 
        ngrx_store.Lq)(git_undo_reducer_initialState, (0, ngrx_store.on)(undoFromGit, function(state, _a) {
            return gitUndoAdapter.upsertOne((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, _a.gitUndoState), {
                callState: UndoingState.Undoing
            }), state);
        }), (0, ngrx_store.on)(undoFromGitInProgress, function(state, _a) {
            return gitUndoAdapter.upsertOne((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, _a.gitUndoState), {
                callState: UndoingState.Undoing
            }), state);
        }), (0, ngrx_store.on)(undoFromGitSuccess, function(state, _a) {
            return gitUndoAdapter.upsertOne((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, _a.gitUndoStateWithResponse), {
                callState: UndoingState.Undone,
                notificationId: void 0
            }), state);
        }), (0, ngrx_store.on)(undoFromGitFailureServerError, function(state, _a) {
            var error = _a.error;
            return gitUndoAdapter.upsertOne((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, _a.gitUndoState), {
                callState: error,
                notificationId: void 0
            }), state);
        }), (0, ngrx_store.on)(undoFromGitFailure, function(state, _a) {
            var error = _a.error;
            return gitUndoAdapter.upsertOne((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, _a.gitUndoState), {
                callState: error,
                notificationId: void 0
            }), state);
        }), (0, ngrx_store.on)(invalidateGitConnectionInitialization, function(state, _a) {
            return gitUndoAdapter.removeOne(_a.workspaceId, state);
        })), ProgressState = function(ProgressState) {
            return ProgressState[ProgressState.None = 0] = "None", ProgressState[ProgressState.GitActionStart = 1] = "GitActionStart", 
            ProgressState[ProgressState.GitActionInProgress = 2] = "GitActionInProgress", ProgressState[ProgressState.GitActionDone = 3] = "GitActionDone", 
            ProgressState[ProgressState.GitSyncStart = 4] = "GitSyncStart", ProgressState[ProgressState.GitSyncInProgress = 5] = "GitSyncInProgress", 
            ProgressState[ProgressState.GitSyncDone = 6] = "GitSyncDone", ProgressState;
        }({}), ActiveFlowName = function(ActiveFlowName) {
            return ActiveFlowName[ActiveFlowName.None = 0] = "None", ActiveFlowName[ActiveFlowName.Commit = 1] = "Commit", 
            ActiveFlowName[ActiveFlowName.Update = 2] = "Update", ActiveFlowName[ActiveFlowName.Undo = 3] = "Undo", 
            ActiveFlowName[ActiveFlowName.CheckoutBranch = 4] = "CheckoutBranch", ActiveFlowName[ActiveFlowName.SwitchBranch = 5] = "SwitchBranch", 
            ActiveFlowName;
        }({}), gitProgressIndicatorAdapter = (0, ngrx_entity.H)({
            selectId: function(item) {
                return item.workspaceId;
            }
        }), git_progressIndicator_reducer_initialState = (0, tslib_es6.__assign)({}, gitProgressIndicatorAdapter.getInitialState()), gitProgressIndicatorReducer = (0, 
        ngrx_store.Lq)(git_progressIndicator_reducer_initialState, (0, ngrx_store.on)(git_commit_actions_commitToGit, function(state, _a) {
            return gitProgressIndicatorAdapter.upsertOne({
                workspaceId: _a.gitCommitState.workspaceId,
                activeFlowName: ActiveFlowName.Commit,
                progressState: ProgressState.GitActionStart,
                activeFlowState: _a.isInitialSync ? GitProgressIndicatorState.CommitInitialFlowInProgress : GitProgressIndicatorState.CommitFlowInProgress,
                isIntermidiateStep: !1
            }, state);
        }), (0, ngrx_store.on)(commitToGitInProgress, function(state, _a) {
            var gitCommitState = _a.gitCommitState, currentState = state.entities[gitCommitState.workspaceId];
            return currentState && isSameSession(ActiveFlowName.Commit, currentState) ? gitProgressIndicatorAdapter.upsertOne((0, 
            tslib_es6.__assign)((0, tslib_es6.__assign)({}, currentState), {
                progressState: ProgressState.GitActionInProgress
            }), state) : gitProgressIndicatorAdapter.upsertOne({
                workspaceId: gitCommitState.workspaceId,
                activeFlowName: ActiveFlowName.Commit,
                progressState: ProgressState.GitActionInProgress,
                activeFlowState: GitProgressIndicatorState.CommitFlowInProgress,
                isIntermidiateStep: !1
            }, state);
        }), (0, ngrx_store.on)(commitToGitSuccess, function(state, _a) {
            var currentState = state.entities[_a.gitCommitStateWithResponse.workspaceId];
            return currentState ? gitProgressIndicatorAdapter.upsertOne((0, tslib_es6.__assign)((0, 
            tslib_es6.__assign)({}, currentState), {
                progressState: ProgressState.GitActionDone
            }), state) : state;
        }), (0, ngrx_store.on)(commitToGitFailure, commitToGitFailureServerError, function(state, _a) {
            var currentState = state.entities[_a.gitCommitState.workspaceId];
            return currentState ? gitProgressIndicatorAdapter.upsertOne((0, tslib_es6.__assign)((0, 
            tslib_es6.__assign)({}, currentState), {
                activeFlowState: GitProgressIndicatorState.None,
                progressState: ProgressState.None,
                isIntermidiateStep: !1
            }), state) : state;
        }), (0, ngrx_store.on)(undoFromGit, function(state, _a) {
            return gitProgressIndicatorAdapter.upsertOne({
                workspaceId: _a.gitUndoState.workspaceId,
                activeFlowName: ActiveFlowName.Undo,
                activeFlowState: GitProgressIndicatorState.UndoFlowInProgress,
                isIntermidiateStep: !1,
                progressState: ProgressState.GitActionStart
            }, state);
        }), (0, ngrx_store.on)(undoFromGitInProgress, function(state, _a) {
            var gitUndoState = _a.gitUndoState, currentState = state.entities[gitUndoState.workspaceId];
            return currentState && isSameSession(ActiveFlowName.Undo, currentState) ? gitProgressIndicatorAdapter.upsertOne((0, 
            tslib_es6.__assign)((0, tslib_es6.__assign)({}, currentState), {
                progressState: ProgressState.GitActionInProgress
            }), state) : gitProgressIndicatorAdapter.upsertOne({
                workspaceId: gitUndoState.workspaceId,
                activeFlowName: ActiveFlowName.Undo,
                progressState: ProgressState.GitActionInProgress,
                activeFlowState: GitProgressIndicatorState.UndoFlowInProgress,
                isIntermidiateStep: !1
            }, state);
        }), (0, ngrx_store.on)(undoFromGitSuccess, function(state, _a) {
            var currentState = state.entities[_a.gitUndoStateWithResponse.workspaceId];
            return currentState ? gitProgressIndicatorAdapter.upsertOne((0, tslib_es6.__assign)((0, 
            tslib_es6.__assign)({}, currentState), {
                progressState: ProgressState.GitActionDone
            }), state) : state;
        }), (0, ngrx_store.on)(undoFromGitFailure, undoFromGitFailureServerError, function(state, _a) {
            var currentState = state.entities[_a.gitUndoState.workspaceId];
            return currentState ? gitProgressIndicatorAdapter.upsertOne((0, tslib_es6.__assign)((0, 
            tslib_es6.__assign)({}, currentState), {
                activeFlowState: GitProgressIndicatorState.None,
                progressState: ProgressState.None,
                isIntermidiateStep: !1
            }), state) : state;
        }), (0, ngrx_store.on)(gitSwitchBranch, function(state, _a) {
            return gitProgressIndicatorAdapter.upsertOne({
                workspaceId: _a.gitSwitchBranchState.workspaceId,
                activeFlowName: ActiveFlowName.SwitchBranch,
                activeFlowState: GitProgressIndicatorState.SwitchBranchFlowInProgress,
                isIntermidiateStep: !1,
                progressState: ProgressState.GitActionStart
            }, state);
        }), (0, ngrx_store.on)(gitSwitchBranchInProgress, function(state, _a) {
            var gitSwitchBranchState = _a.gitSwitchBranchState, currentState = state.entities[gitSwitchBranchState.workspaceId];
            return currentState && isSameSession(ActiveFlowName.SwitchBranch, currentState) ? gitProgressIndicatorAdapter.upsertOne((0, 
            tslib_es6.__assign)((0, tslib_es6.__assign)({}, currentState), {
                progressState: ProgressState.GitActionInProgress
            }), state) : gitProgressIndicatorAdapter.upsertOne({
                workspaceId: gitSwitchBranchState.workspaceId,
                activeFlowName: ActiveFlowName.SwitchBranch,
                progressState: ProgressState.GitActionInProgress,
                activeFlowState: GitProgressIndicatorState.SwitchBranchFlowInProgress,
                isIntermidiateStep: !1
            }, state);
        }), (0, ngrx_store.on)(gitSwitchBranchSuccess, function(state, _a) {
            var currentState = state.entities[_a.gitSwitchBranchState.workspaceId];
            return currentState ? gitProgressIndicatorAdapter.upsertOne((0, tslib_es6.__assign)((0, 
            tslib_es6.__assign)({}, currentState), {
                progressState: ProgressState.GitActionDone
            }), state) : state;
        }), (0, ngrx_store.on)(gitSwitchBranchFailure, gitSwitchBranchFailureServerError, function(state, _a) {
            var currentState = state.entities[_a.gitSwitchBranchState.workspaceId];
            return currentState ? gitProgressIndicatorAdapter.upsertOne((0, tslib_es6.__assign)((0, 
            tslib_es6.__assign)({}, currentState), {
                activeFlowState: GitProgressIndicatorState.None,
                progressState: ProgressState.None,
                isIntermidiateStep: !1
            }), state) : state;
        }), (0, ngrx_store.on)(updateFromGit, function(state, _a) {
            return gitProgressIndicatorAdapter.upsertOne({
                workspaceId: _a.gitUpdateState.workspaceId,
                activeFlowName: ActiveFlowName.Update,
                activeFlowState: _a.isInitialSync ? GitProgressIndicatorState.UpdateInitialFlowInProgress : GitProgressIndicatorState.UpdateFlowInProgress,
                isIntermidiateStep: !1,
                progressState: ProgressState.GitActionStart
            }, state);
        }), (0, ngrx_store.on)(updateFromGitInProgress, function(state, _a) {
            var gitUpdateState = _a.gitUpdateState, currentState = state.entities[gitUpdateState.workspaceId];
            return currentState && isSameSession(ActiveFlowName.Update, currentState) ? gitProgressIndicatorAdapter.upsertOne((0, 
            tslib_es6.__assign)((0, tslib_es6.__assign)({}, currentState), {
                progressState: ProgressState.GitActionInProgress
            }), state) : gitProgressIndicatorAdapter.upsertOne({
                workspaceId: gitUpdateState.workspaceId,
                activeFlowName: ActiveFlowName.Update,
                progressState: ProgressState.GitActionInProgress,
                activeFlowState: GitProgressIndicatorState.UpdateFlowInProgress,
                isIntermidiateStep: !1
            }, state);
        }), (0, ngrx_store.on)(updateFromGitSuccess, function(state, _a) {
            var currentState = state.entities[_a.gitUpdateStateWithResponse.workspaceId];
            return currentState ? gitProgressIndicatorAdapter.upsertOne((0, tslib_es6.__assign)((0, 
            tslib_es6.__assign)({}, currentState), {
                progressState: ProgressState.GitActionDone
            }), state) : state;
        }), (0, ngrx_store.on)(updateFromGitFailure, updateFromGitFailureServerError, function(state, _a) {
            var currentState = state.entities[_a.gitUpdateState.workspaceId];
            return currentState ? gitProgressIndicatorAdapter.upsertOne((0, tslib_es6.__assign)((0, 
            tslib_es6.__assign)({}, currentState), {
                activeFlowState: GitProgressIndicatorState.None,
                progressState: ProgressState.None,
                isIntermidiateStep: !1
            }), state) : state;
        }), (0, ngrx_store.on)(loadIncomingChanges, loadUncommittedChanges, loadGitStatus, function(state, _a) {
            var currentState = state.entities[_a.workspaceId];
            return _a.isTriggeredByGitAction && (null == currentState ? void 0 : currentState.progressState) === ProgressState.GitActionDone ? gitProgressIndicatorAdapter.upsertOne((0, 
            tslib_es6.__assign)((0, tslib_es6.__assign)({}, currentState), {
                isIntermidiateStep: !0,
                progressState: ProgressState.GitSyncStart
            }), state) : state;
        }), (0, ngrx_store.on)(loadUncommittedChangesSuccess, loadIncomingChangesSuccess, loadGitStatusSuccess, function(state, _a) {
            var currentState = state.entities[_a.gitStatus.workspaceId];
            return (null == currentState ? void 0 : currentState.isIntermidiateStep) && (null == currentState ? void 0 : currentState.progressState) === ProgressState.GitSyncStart ? gitProgressIndicatorAdapter.upsertOne((0, 
            tslib_es6.__assign)((0, tslib_es6.__assign)({}, currentState), {
                activeFlowState: GitProgressIndicatorState.None,
                progressState: ProgressState.GitSyncDone,
                isIntermidiateStep: !1
            }), state) : state;
        }), (0, ngrx_store.on)(loadUncommittedChangesFailure, loadIncomingChangesFailure, loadGitStatusFailure, function(state, _a) {
            var currentState = state.entities[_a.workspaceId];
            return (null == currentState ? void 0 : currentState.isIntermidiateStep) ? gitProgressIndicatorAdapter.upsertOne((0, 
            tslib_es6.__assign)((0, tslib_es6.__assign)({}, currentState), {
                progressState: ProgressState.None,
                isIntermidiateStep: !1
            }), state) : state;
        }), (0, ngrx_store.on)(gitCheckoutBranch, function(state, _a) {
            return gitProgressIndicatorAdapter.upsertOne({
                workspaceId: _a.gitCheckoutBranchState.workspaceId,
                activeFlowName: ActiveFlowName.CheckoutBranch,
                activeFlowState: GitProgressIndicatorState.CheckoutBranchFlowInProgress,
                isIntermidiateStep: !1,
                progressState: ProgressState.GitActionStart
            }, state);
        }), (0, ngrx_store.on)(gitCheckoutBranchSuccess, function(state, _a) {
            var currentState = state.entities[_a.gitCheckoutBranchState.workspaceId];
            return currentState ? gitProgressIndicatorAdapter.upsertOne((0, tslib_es6.__assign)((0, 
            tslib_es6.__assign)({}, currentState), {
                progressState: ProgressState.GitActionDone
            }), state) : state;
        }), (0, ngrx_store.on)(gitCheckoutBranchFailure, function(state, _a) {
            var currentState = state.entities[_a.workspaceId];
            return currentState ? gitProgressIndicatorAdapter.upsertOne((0, tslib_es6.__assign)((0, 
            tslib_es6.__assign)({}, currentState), {
                activeFlowState: GitProgressIndicatorState.None,
                progressState: ProgressState.None,
                isIntermidiateStep: !1
            }), state) : state;
        }));
        function isSameSession(actionName, currentState) {
            return currentState.activeFlowName === actionName && (currentState.progressState === ProgressState.GitActionStart || currentState.progressState === ProgressState.GitActionInProgress);
        }
        var gitSwitchBranchAdapter = (0, ngrx_entity.H)({
            selectId: function(item) {
                return item.workspaceId;
            }
        }), git_switch_branch_reducer_initialState = (0, tslib_es6.__assign)({}, gitSwitchBranchAdapter.getInitialState()), gitSwitchBranchReducer = (0, 
        ngrx_store.Lq)(git_switch_branch_reducer_initialState, (0, ngrx_store.on)(gitSwitchBranch, function(state, _a) {
            return gitSwitchBranchAdapter.upsertOne((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, _a.gitSwitchBranchState), {
                response: void 0,
                callState: SwitchBranchState.InProgress
            }), state);
        }), (0, ngrx_store.on)(gitSwitchBranchInProgress, function(state, _a) {
            return gitSwitchBranchAdapter.upsertOne((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, _a.gitSwitchBranchState), {
                callState: SwitchBranchState.InProgress
            }), state);
        }), (0, ngrx_store.on)(gitSwitchBranchSuccess, function(state, _a) {
            var gitSwitchBranchState = _a.gitSwitchBranchState;
            return gitSwitchBranchAdapter.upsertOne((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, gitSwitchBranchState), {
                callState: SwitchBranchState.Completed,
                response: gitSwitchBranchState.response,
                notificationId: void 0
            }), state);
        }), (0, ngrx_store.on)(gitSwitchBranchFailureServerError, function(state, _a) {
            return gitSwitchBranchAdapter.upsertOne((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, _a.gitSwitchBranchState), {
                callState: SwitchBranchState.Completed,
                notificationId: void 0
            }), state);
        }), (0, ngrx_store.on)(gitSwitchBranchFailure, function(state, _a) {
            var error = _a.error;
            return gitSwitchBranchAdapter.upsertOne((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, _a.gitSwitchBranchState), {
                callState: error,
                notificationId: void 0
            }), state);
        }), (0, ngrx_store.on)(invalidateGitConnectionInitialization, function(state, _a) {
            return gitSwitchBranchAdapter.removeOne(_a.workspaceId, state);
        })), selectGitProviderType = (0, ngrx_store.PH)("[GitSessionStorage] select Git provider type", (0, 
        ngrx_store.Ky)()), selectDatasource = (0, ngrx_store.PH)("[GitSessionStorage] select datasource", (0, 
        ngrx_store.Ky)()), selectTempDatasource = (0, ngrx_store.PH)("[GitSessionStorage] select temp datasource", (0, 
        ngrx_store.Ky)()), setDatasourceUrl = (0, ngrx_store.PH)("[GitSessionStorage] set datasource url", (0, 
        ngrx_store.Ky)()), resetDatasourceUrl = (0, ngrx_store.PH)("[GitSessionStorage] reset datasource url", (0, 
        ngrx_store.Ky)()), selectOrganization = (0, ngrx_store.PH)("[GitSessionStorage] select organization", (0, 
        ngrx_store.Ky)()), selectRepository = (0, ngrx_store.PH)("[GitSessionStorage] select repository", (0, 
        ngrx_store.Ky)()), selectBranch = (0, ngrx_store.PH)("[GitSessionStorage] select branch", (0, 
        ngrx_store.Ky)()), selectRootDirectory = (0, ngrx_store.PH)("[GitSessionStorage] select directory", (0, 
        ngrx_store.Ky)()), selectUserAccount = (0, ngrx_store.PH)("[GitSessionStorage] select userAccount", (0, 
        ngrx_store.Ky)()), configureCredentials = (0, ngrx_store.PH)("[GitSessionStorage] configure credentials", (0, 
        ngrx_store.Ky)()), deleteCredentials = (0, ngrx_store.PH)("[GitSessionStorage] delete credentials", (0, 
        ngrx_store.Ky)()), selectWorkspaceOnCapacity = (0, ngrx_store.PH)("[GitSessionStorage] select workspace capacity", (0, 
        ngrx_store.Ky)()), GitSessionStorageAdapter = (0, ngrx_entity.H)({
            selectId: function(item) {
                return item.workspaceId;
            }
        }), session_storage_reducer_initialState = (0, tslib_es6.__assign)({}, GitSessionStorageAdapter.getInitialState()), gitSessionStorageReducer = (0, 
        ngrx_store.Lq)(session_storage_reducer_initialState, (0, ngrx_store.on)(selectGitProviderType, function(state, _a) {
            return GitSessionStorageAdapter.upsertOne({
                workspaceId: _a.workspaceId,
                selectedGitProviderType: _a.gitProviderType
            }, state);
        }), (0, ngrx_store.on)(selectDatasource, function(state, _a) {
            var workspaceId = _a.workspaceId, datasourceOID = _a.datasourceOID, currentEntity = state.entities[workspaceId];
            return currentEntity && currentEntity.selectedDatasourceOID === datasourceOID ? state : GitSessionStorageAdapter.upsertOne({
                workspaceId,
                selectedDatasourceOID: datasourceOID
            }, state);
        }), (0, ngrx_store.on)(selectTempDatasource, function(state, _a) {
            return GitSessionStorageAdapter.upsertOne({
                workspaceId: _a.workspaceId,
                selectedTempDatasourceOID: _a.datasourceOID
            }, state);
        }), (0, ngrx_store.on)(selectOrganization, function(state, _a) {
            var organization = _a.organization;
            return GitSessionStorageAdapter.upsertOne({
                workspaceId: _a.workspaceId,
                selectedOrganization: organization ? {
                    name: organization,
                    setByDatasource: !1
                } : void 0
            }, state);
        }), (0, ngrx_store.on)(selectRepository, function(state, _a) {
            var repository = _a.repository;
            return GitSessionStorageAdapter.upsertOne({
                workspaceId: _a.workspaceId,
                selectedRepository: repository ? {
                    name: repository,
                    setByDatasource: !1
                } : void 0
            }, state);
        }), (0, ngrx_store.on)(selectBranch, function(state, _a) {
            return GitSessionStorageAdapter.upsertOne({
                workspaceId: _a.workspaceId,
                selectedBranch: _a.branch
            }, state);
        }), (0, ngrx_store.on)(selectRootDirectory, function(state, _a) {
            return GitSessionStorageAdapter.upsertOne({
                workspaceId: _a.workspaceId,
                selectedDirectory: _a.directory
            }, state);
        }), (0, ngrx_store.on)(setDatasourceUrl, function(state, _a) {
            return GitSessionStorageAdapter.upsertOne({
                workspaceId: _a.workspaceId,
                selectedOrganization: {
                    name: _a.organization,
                    setByDatasource: !0
                },
                selectedRepository: {
                    name: _a.repository,
                    setByDatasource: !0
                }
            }, state);
        }), (0, ngrx_store.on)(resetDatasourceUrl, function(state, _a) {
            return GitSessionStorageAdapter.upsertOne({
                workspaceId: _a.workspaceId,
                selectedOrganization: void 0,
                selectedRepository: void 0
            }, state);
        }), (0, ngrx_store.on)(selectUserAccount, function(state, _a) {
            return GitSessionStorageAdapter.upsertOne({
                workspaceId: _a.workspaceId,
                selectedUserAccount: _a.userAccount
            }, state);
        }), (0, ngrx_store.on)(configureCredentials, function(state, _a) {
            return GitSessionStorageAdapter.upsertOne({
                workspaceId: _a.workspaceId,
                isConfigured: !0
            }, state);
        }), (0, ngrx_store.on)(deleteCredentials, function(state, _a) {
            return GitSessionStorageAdapter.updateOne({
                id: _a.workspaceId,
                changes: {
                    selectedUserAccount: void 0,
                    isConfigured: !1
                }
            }, state);
        }), (0, ngrx_store.on)(loadGitConnectionSuccess, function(state, _a) {
            var _b, _c, _d, gitConnection = _a.gitConnection;
            return GitSessionStorageAdapter.upsertOne({
                workspaceId: gitConnection.workspaceId,
                selectedGitProviderType: null === (_b = gitConnection.gitConnectionDetails) || void 0 === _b ? void 0 : _b.gitProviderType,
                selectedDatasourceOID: null === (_c = gitConnection.gitConnectionDetails) || void 0 === _c ? void 0 : _c.datasourceOID,
                isConfigured: void 0 !== (null === (_d = gitConnection.gitConnectionDetails) || void 0 === _d ? void 0 : _d.datasourceOID)
            }, state);
        }), (0, ngrx_store.on)(deleteGitConnectionSuccess, function(state, _a) {
            return GitSessionStorageAdapter.updateOne({
                id: _a.workspaceId,
                changes: {
                    selectedBranch: void 0,
                    selectedDatasourceOID: void 0,
                    selectedTempDatasourceOID: void 0,
                    selectedGitProviderType: void 0,
                    selectedDirectory: void 0,
                    selectedOrganization: void 0,
                    selectedRepository: void 0,
                    selectedUserAccount: void 0,
                    isConfigured: void 0
                }
            }, state);
        }), (0, ngrx_store.on)(selectWorkspaceOnCapacity, function(state, _a) {
            return GitSessionStorageAdapter.upsertOne({
                workspaceId: _a.workspaceId,
                isWorkspaceOnCapaity: _a.isWorkspaceOnCapacity
            }, state);
        })), branchOutAdapter = (0, ngrx_entity.H)({
            selectId: function(item) {
                return item.workspaceId;
            }
        }), git_branch_out_reducer_initialState = (0, tslib_es6.__assign)({}, branchOutAdapter.getInitialState()), branchOutReducer = (0, 
        ngrx_store.Lq)(git_branch_out_reducer_initialState, (0, ngrx_store.on)(git_branch_out_actions_gitBranchOut, function(state, _a) {
            return branchOutAdapter.upsertOne((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, _a.gitBranchOutState), {
                response: void 0,
                callState: types_BranchOutState.InProgress
            }), state);
        }), (0, ngrx_store.on)(gitBranchOutSuccess, function(state, _a) {
            var gitBranchOutState = _a.gitBranchOutState;
            return branchOutAdapter.upsertOne((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, gitBranchOutState), {
                callState: types_BranchOutState.InProgress,
                response: gitBranchOutState.response
            }), state);
        }), (0, ngrx_store.on)(gitBranchOutSyncFolder, function(state, _a) {
            var gitBranchOutState = _a.gitBranchOutState;
            return branchOutAdapter.upsertOne((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, gitBranchOutState), {
                callState: types_BranchOutState.InProgress,
                response: gitBranchOutState.response
            }), state);
        }), (0, ngrx_store.on)(git_branch_out_actions_gitBranchOutSyncFolderNoUpdate, function(state, _a) {
            var gitBranchOutState = _a.gitBranchOutState;
            return branchOutAdapter.upsertOne((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, gitBranchOutState), {
                callState: types_BranchOutState.Completed,
                response: gitBranchOutState.response
            }), state);
        }), (0, ngrx_store.on)(gitBranchOutCompleted, function(state, _a) {
            var gitBranchOutState = _a.gitBranchOutState;
            return branchOutAdapter.upsertOne((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, gitBranchOutState), {
                callState: types_BranchOutState.Completed,
                response: gitBranchOutState.response
            }), state);
        }), (0, ngrx_store.on)(gitBranchOutFailure, function(state, _a) {
            var error = _a.error;
            return branchOutAdapter.upsertOne((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, _a.gitBranchOutState), {
                callState: error
            }), state);
        }), (0, ngrx_store.on)(git_branch_out_actions_gitBranchOutStoreInvalidate, function(state, _a) {
            return branchOutAdapter.removeOne(_a.gitBranchOutState.workspaceId, state);
        })), loadDatasources = (0, ngrx_store.PH)("[GitDatasources] Load Datasources", (0, 
        ngrx_store.Ky)()), loadDatasourcesSuccess = (0, ngrx_store.PH)("[GitDatasources] Load Datasources Success", (0, 
        ngrx_store.Ky)()), loadDatasourcesFailure = (0, ngrx_store.PH)("[GitDatasources] Load Datasources Failure", (0, 
        ngrx_store.Ky)()), createDatasource = (0, ngrx_store.PH)("[GitDatasources] Create Datasource", (0, 
        ngrx_store.Ky)()), createDatasourceSuccess = (0, ngrx_store.PH)("[GitDatasources] Create Datasource Success", (0, 
        ngrx_store.Ky)()), createDatasourceFailure = (0, ngrx_store.PH)("[GitDatasources] Create Datasource Failure", (0, 
        ngrx_store.Ky)()), gitDatasourcesAdapter = (0, ngrx_entity.H)({
            selectId: function(item) {
                return item.workspaceId;
            }
        }), git_datasources_reducer_initialState = (0, tslib_es6.__assign)({}, gitDatasourcesAdapter.getInitialState()), gitDatasourcesReducer = (0, 
        ngrx_store.Lq)(git_datasources_reducer_initialState, (0, ngrx_store.on)(loadDatasources, function(state, _a) {
            return gitDatasourcesAdapter.upsertOne({
                workspaceId: _a.gitDatasourceRequest.workspaceId,
                callState: DatasourceManagementState.InProgress
            }, state);
        }), (0, ngrx_store.on)(loadDatasourcesSuccess, function(state, _a) {
            return gitDatasourcesAdapter.upsertOne((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, _a.gitDatasourcesState), {
                callState: DatasourceManagementState.Completed
            }), state);
        }), (0, ngrx_store.on)(loadDatasourcesFailure, createDatasourceFailure, function(state, _a) {
            return gitDatasourcesAdapter.updateOne({
                id: _a.workspaceId,
                changes: {
                    callState: _a.error
                }
            }, state);
        }), (0, ngrx_store.on)(createDatasource, function(state, _a) {
            return gitDatasourcesAdapter.upsertOne({
                workspaceId: _a.request.workspaceId,
                callState: DatasourceManagementState.InProgress
            }, state);
        })), git_repair_actions_gitRepairItems = (0, ngrx_store.PH)("[GitRepairItems] Repair Items in Git", (0, 
        ngrx_store.Ky)()), gitRepairItemsInProgress = (0, ngrx_store.PH)("[GitRepairItems] Repair Items in Git inProgress", (0, 
        ngrx_store.Ky)()), gitRepairItemsSuccess = (0, ngrx_store.PH)("[GitRepairItems] Repair Items in Git success", (0, 
        ngrx_store.Ky)()), gitRepairItemsFailure = (0, ngrx_store.PH)("[GitRepairItems] Repair Items in Git failure ", (0, 
        ngrx_store.Ky)()), gitRepairAdapter = (0, ngrx_entity.H)({
            selectId: function(item) {
                return item.workspaceId;
            }
        }), git_repair_reducer_initialState = (0, tslib_es6.__assign)({}, gitRepairAdapter.getInitialState()), gitRepairReducer = (0, 
        ngrx_store.Lq)(git_repair_reducer_initialState, (0, ngrx_store.on)(git_repair_actions_gitRepairItems, gitRepairItemsInProgress, function(state, _a) {
            return gitRepairAdapter.upsertOne((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, _a.gitRepairState), {
                callState: types_RepairingItemsState.InProgress
            }), state);
        }), (0, ngrx_store.on)(gitRepairItemsSuccess, function(state, _a) {
            var gitRepairStateWithResponse = _a.gitRepairStateWithResponse;
            return gitRepairAdapter.upsertOne((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, gitRepairStateWithResponse), {
                response: gitRepairStateWithResponse.response,
                callState: types_RepairingItemsState.Completed
            }), state);
        }), (0, ngrx_store.on)(gitRepairItemsFailure, function(state, _a) {
            var error = _a.error;
            return gitRepairAdapter.upsertOne((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, _a.gitRepairState), {
                callState: error,
                notificationId: void 0
            }), state);
        })), reducers = {
            gitStatus: function(state, action) {
                return gitStatusReducer(state, action);
            },
            gitConnection: function(state, action) {
                return gitConnectionReducer(state, action);
            },
            gitCommit: function(state, action) {
                return gitCommitReducer(state, action);
            },
            gitUpdate: function(state, action) {
                return gitUpdateReducer(state, action);
            },
            gitInitialization: function(state, action) {
                return git_initialization_reducer_gitCommitReducer(state, action);
            },
            gitSync: function(state, action) {
                return gitSyncReducer(state, action);
            },
            gitUndo: function(state, action) {
                return gitUndoReducer(state, action);
            },
            gitProgressIndicator: function(state, action) {
                return gitProgressIndicatorReducer(state, action);
            },
            gitSwitchBranch: function(state, action) {
                return gitSwitchBranchReducer(state, action);
            },
            gitSessionStorage: function(state, action) {
                return gitSessionStorageReducer(state, action);
            },
            gitBranchOut: function(state, action) {
                return branchOutReducer(state, action);
            },
            gitDatasources: function(state, action) {
                return gitDatasourcesReducer(state, action);
            },
            gitRepair: function(state, action) {
                return gitRepairReducer(state, action);
            }
        }, getGitState = (0, ngrx_store.ZF)("git"), observable_of = __webpack_require__(11547), operators_map = __webpack_require__(14172), switchMap = __webpack_require__(81905), catchError = __webpack_require__(59822), manifest_src = __webpack_require__(67758), error_src = __webpack_require__(65232), artifact_src = __webpack_require__(12315), GitStatusMode = function(GitStatusMode) {
            return GitStatusMode[GitStatusMode.SingleCall = 0] = "SingleCall", GitStatusMode[GitStatusMode.SeparateCalls = 1] = "SeparateCalls", 
            GitStatusMode;
        }({});
        function parseArtifactType(artifactType) {
            var availableTypes = artifact_src.RG, isValidArtifactType = availableTypes.includes(artifactType);
            if (isValidArtifactType) return artifactType;
            if (!isValidArtifactType) {
                var index = availableTypes.findIndex(function(item) {
                    return artifactType.toLowerCase() === item.toLowerCase();
                });
                if (index >= 0) return availableTypes[index];
            }
            throw Error("Invalid ArtifactType: " + artifactType);
        }
        function convertGitIncomingChangeToModel(gitChange, extensionManifestService) {
            return {
                artifact: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, gitChange.artifact), {
                    artifactType: extensionManifestService.getFrontendArtifactType(gitChange.artifact.artifactType)
                }),
                remoteChange: {
                    displayName: gitChange.artifact.displayName,
                    changeType: gitChange.gitChangeType
                },
                syncStatus: 0
            };
        }
        function convertGitUncommittedChangeToModel(gitChange, extensionManifestService) {
            var frontendArtifactType = extensionManifestService.getFrontendArtifactType(gitChange.artifact.artifactType);
            return {
                artifact: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, gitChange.artifact), {
                    artifactType: parseArtifactType(frontendArtifactType)
                }),
                workspaceChange: {
                    displayName: gitChange.artifact.displayName,
                    changeType: gitChange.gitChangeType
                },
                syncStatus: 0
            };
        }
        function makeGitStatus(workspaceId, head, changes, incomingChangesCommitHash) {
            return {
                workspaceId,
                head,
                gitChanges: changes,
                incomingChangesCommitHash: incomingChangesCommitHash || void 0
            };
        }
        var core = __webpack_require__(50423), GitStatusEffects = function() {
            function GitStatusEffects(actions$, gitStatusClient, gitErrorService, extensionManifestService) {
                var _this = this;
                this.actions$ = actions$, this.gitStatusClient = gitStatusClient, this.gitErrorService = gitErrorService, 
                this.extensionManifestService = extensionManifestService, this.loadUncommittedChanges$ = (0, 
                ngrx_effects.GW)(function() {
                    return _this.actions$.pipe((0, ngrx_effects.l4)(loadUncommittedChanges), (0, operators_map.U)(function(_a) {
                        return _a.workspaceId;
                    }), (0, switchMap.w)(function(workspaceId) {
                        return _this.gitStatusClient.getUncommittedChanges(workspaceId).pipe((0, operators_map.U)(function(uncommittedChanges) {
                            return _this.updateGitStatusWithUncommittedChanges(workspaceId, uncommittedChanges);
                        }), (0, operators_map.U)(function(gitStatus) {
                            return loadUncommittedChangesSuccess({
                                gitStatus
                            });
                        }), (0, catchError.K)(function(httpError) {
                            var error = _this.gitErrorService.makeGitErrorFromHttpResponse("Git_Status_Failed", httpError);
                            return (0, observable_of.of)(loadUncommittedChangesFailure({
                                workspaceId,
                                error
                            }));
                        }));
                    }));
                }), this.loadIncomingChanges$ = (0, ngrx_effects.GW)(function() {
                    return _this.actions$.pipe((0, ngrx_effects.l4)(loadIncomingChanges), (0, operators_map.U)(function(_a) {
                        return _a.workspaceId;
                    }), (0, switchMap.w)(function(workspaceId) {
                        return _this.gitStatusClient.getIncomingChanges(workspaceId).pipe((0, operators_map.U)(function(incomingChanges) {
                            return _this.updateGitStatusWithIncomingChanges(workspaceId, incomingChanges);
                        }), (0, operators_map.U)(function(gitStatus) {
                            return loadIncomingChangesSuccess({
                                gitStatus
                            });
                        }), (0, catchError.K)(function(httpError) {
                            var error = _this.gitErrorService.makeGitErrorFromHttpResponse("Git_Status_Failed", httpError);
                            return (0, observable_of.of)(loadIncomingChangesFailure({
                                workspaceId,
                                error
                            }));
                        }));
                    }));
                }), this.loadGitStatus$ = (0, ngrx_effects.GW)(function() {
                    return _this.actions$.pipe((0, ngrx_effects.l4)(loadGitStatus), (0, operators_map.U)(function(_a) {
                        return _a.workspaceId;
                    }), (0, switchMap.w)(function(workspaceId) {
                        return _this.gitStatusClient.getGitStatus(workspaceId).pipe((0, operators_map.U)(function(gitStatusResponse) {
                            return _this.gitStatusContractToModel(workspaceId, gitStatusResponse);
                        }), (0, operators_map.U)(function(gitStatus) {
                            return loadGitStatusSuccess({
                                gitStatus
                            });
                        }), (0, catchError.K)(function(httpError) {
                            var error = _this.gitErrorService.makeGitErrorFromHttpResponse("Git_Status_Failed", httpError);
                            return (0, observable_of.of)(loadGitStatusFailure({
                                workspaceId,
                                error
                            }));
                        }));
                    }));
                });
            }
            return GitStatusEffects.prototype.updateGitStatusWithIncomingChanges = function(workspaceId, incomingChangesContract) {
                var incomingChanges = function(incomingChangesContract, extensionManifestService) {
                    for (var incomingChanges = [], _i = 0, _a = incomingChangesContract.changes; _i < _a.length; _i++) incomingChanges.push(convertGitIncomingChangeToModel(_a[_i], extensionManifestService));
                    return incomingChanges;
                }(incomingChangesContract, this.extensionManifestService);
                return makeGitStatus(workspaceId, incomingChangesContract.head, incomingChanges, incomingChangesContract.targetCommit.commitId);
            }, GitStatusEffects.prototype.updateGitStatusWithUncommittedChanges = function(workspaceId, uncommittedChangesContract) {
                var uncommittedChanges = function(uncommittedChangesContract, extensionManifestService) {
                    for (var uncommittedChanges = [], _i = 0, _a = uncommittedChangesContract.changes; _i < _a.length; _i++) uncommittedChanges.push(convertGitUncommittedChangeToModel(_a[_i], extensionManifestService));
                    return uncommittedChanges;
                }(uncommittedChangesContract, this.extensionManifestService);
                return makeGitStatus(workspaceId, uncommittedChangesContract.head, uncommittedChanges);
            }, GitStatusEffects.prototype.gitStatusContractToModel = function(workspaceId, gitStatusResponse) {
                var _a, changes = function(gitStatusResponse, extensionManifestService) {
                    var gitStatusChanges = [];
                    if (null == gitStatusResponse.changes) return gitStatusChanges;
                    for (var _i = 0, _a = gitStatusResponse.changes; _i < _a.length; _i++) {
                        var change = _a[_i], newChange = change;
                        newChange.artifact.artifactType = extensionManifestService.getFrontendArtifactType(change.artifact.artifactType), 
                        gitStatusChanges.push(newChange);
                    }
                    return gitStatusChanges;
                }(gitStatusResponse, this.extensionManifestService);
                return makeGitStatus(workspaceId, gitStatusResponse.head, changes, null === (_a = gitStatusResponse.targetCommit) || void 0 === _a ? void 0 : _a.commitId);
            }, GitStatusEffects.\u0275fac = function(t) {
                return new (t || GitStatusEffects)(core["\u0275\u0275inject"](ngrx_effects.eX), core["\u0275\u0275inject"](src.mK), core["\u0275\u0275inject"](error_src.jR), core["\u0275\u0275inject"](manifest_src.vC));
            }, GitStatusEffects.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: GitStatusEffects,
                factory: GitStatusEffects.\u0275fac
            }), GitStatusEffects;
        }(), empty = __webpack_require__(37272), notification_src = __webpack_require__(12385), feature_switch_service = __webpack_require__(94771), getGitConnectionStoreState = (0, 
        ngrx_store.P1)(getGitState, function(state) {
            return (null == state ? void 0 : state.gitConnection) || git_connection_reducer_initialState;
        }), _a = gitConnectionAdapter.getSelectors(), selectAll = _a.selectAll, selectEntities = _a.selectEntities, getAllGitConnectionEntities = ((0, 
        ngrx_store.P1)(getGitConnectionStoreState, function(state) {
            return selectAll(state);
        }), (0, ngrx_store.P1)(getGitConnectionStoreState, function(state) {
            return selectEntities(state);
        })), getWorkspaceGitConnection = function(workspaceId) {
            return (0, ngrx_store.P1)(getAllGitConnectionEntities, function(entities) {
                return entities[workspaceId];
            });
        };
        function getGitStatusActions(workspaceId, isTriggeredByGitAction, gitStatusApiEnabled) {
            return gitStatusApiEnabled ? [ loadGitStatus({
                workspaceId,
                isTriggeredByGitAction
            }) ] : [ loadIncomingChanges({
                workspaceId,
                isTriggeredByGitAction
            }), loadUncommittedChanges({
                workspaceId,
                isTriggeredByGitAction
            }) ];
        }
        var GitConnectionEffects = function() {
            function GitConnectionEffects(actions$, gitConnectionDetailsClient, gitErrorService, gitNotificationService, extensionManifestService, store, featureSwitchService) {
                var _this = this;
                this.actions$ = actions$, this.gitConnectionDetailsClient = gitConnectionDetailsClient, 
                this.gitErrorService = gitErrorService, this.gitNotificationService = gitNotificationService, 
                this.extensionManifestService = extensionManifestService, this.store = store, this.featureSwitchService = featureSwitchService, 
                this.ensureGitConnection$ = (0, ngrx_effects.GW)(function() {
                    return _this.actions$.pipe((0, ngrx_effects.l4)(ensureGitConnection), (0, operators_map.U)(function(_a) {
                        return _a.workspaceId;
                    }), (0, ngrx_effects.IC)(function(workspaceId) {
                        return _this.store.select(getWorkspaceGitConnection(workspaceId));
                    }), (0, switchMap.w)(function(_a) {
                        var workspaceId = _a[0], gitConnection = _a[1];
                        return (null == gitConnection ? void 0 : gitConnection.gitConnectionDetails) && gitConnection.callState === ConnectionOperationState.Completed || !(null == gitConnection ? void 0 : gitConnection.gitConnectionDetails) && (0, 
                        git_src.pb)(null == gitConnection ? void 0 : gitConnection.callState) ? empty.E : (0, 
                        observable_of.of)(loadGitConnection({
                            workspaceId
                        }));
                    }));
                }), this.loadGitConnection$ = (0, ngrx_effects.GW)(function() {
                    return _this.actions$.pipe((0, ngrx_effects.l4)(loadGitConnection), (0, operators_map.U)(function(_a) {
                        return _a.workspaceId;
                    }), (0, switchMap.w)(function(workspaceId) {
                        return _this.gitConnectionDetailsClient.getGitConnectionDetails(workspaceId).pipe((0, 
                        operators_map.U)(function(gitConnectionDetailsContract) {
                            return _this.gitConnectionContractToModel(workspaceId, gitConnectionDetailsContract);
                        }), (0, operators_map.U)(function(gitConnection) {
                            return loadGitConnectionSuccess({
                                gitConnection
                            });
                        }), (0, catchError.K)(function(httpError) {
                            var error = _this.gitErrorService.makeGitErrorFromHttpResponse("Git_Connect_Failed", httpError);
                            return (0, observable_of.of)(loadGitConnectionFailure({
                                workspaceId,
                                error
                            }));
                        }));
                    }));
                }), this.saveGitConnection$ = (0, ngrx_effects.GW)(function() {
                    return _this.actions$.pipe((0, ngrx_effects.l4)(saveGitConnection), (0, operators_map.U)(function(_a) {
                        return _a.gitConnection;
                    }), (0, switchMap.w)(function(gitConnection) {
                        if (!gitConnection.gitConnectionDetails) {
                            var error = _this.gitErrorService.makeClientSideGitError("Git_Invalid_Connection_Details");
                            return _this.gitNotificationService.showErrorNotification(error, "Trident_Git_Error_Git_Invalid_Connection_Details_Title"), 
                            (0, observable_of.of)(saveGitConnectionFailure({
                                gitConnection,
                                error
                            }));
                        }
                        var loadingNotificationId = _this.gitNotificationService.showLoadingNotification("Trident_Git_Toast_Connect_Loading");
                        return _this.gitConnectionDetailsClient.setGitConnectionDetails(gitConnection.workspaceId, gitConnection.gitConnectionDetails).pipe((0, 
                        operators_map.U)(function() {
                            return _this.gitNotificationService.showSuccessNotification("Trident_Git_Toast_Connect_Success", loadingNotificationId), 
                            saveGitConnectionSuccess({
                                gitConnection
                            });
                        }), (0, catchError.K)(function(httpError) {
                            var error = _this.gitErrorService.makeGitErrorFromHttpResponse("Git_Connect_Failed", httpError);
                            return (0, git_src.yG)(error) ? _this.gitNotificationService.hideCurrentNotification() : _this.gitNotificationService.showErrorNotification(error, "Trident_Git_Error_Git_Invalid_Connection_Details_Title", loadingNotificationId), 
                            (0, observable_of.of)(saveGitConnectionFailure({
                                gitConnection,
                                error
                            }));
                        }));
                    }));
                }), this.gitCheckoutBranch$ = (0, ngrx_effects.GW)(function() {
                    return _this.actions$.pipe((0, ngrx_effects.l4)(gitCheckoutBranch), (0, operators_map.U)(function(_a) {
                        return _a.gitCheckoutBranchState;
                    }), (0, switchMap.w)(function(gitCheckoutBranchState) {
                        return _this.gitConnectionDetailsClient.checkoutBranch(gitCheckoutBranchState.workspaceId, gitCheckoutBranchState.request).pipe((0, 
                        switchMap.w)(function() {
                            var _a;
                            return _this.gitNotificationService.showSuccessNotification("Trident_Git_Toast_CheckoutBranch_Success"), 
                            (0, tslib_es6.__spreadArray)([ gitCheckoutBranchSuccess({
                                gitCheckoutBranchState
                            }), git_sync_actions_getLatestGitAlmOperation({
                                workspaceId: gitCheckoutBranchState.workspaceId
                            }) ], getGitStatusActions(gitCheckoutBranchState.workspaceId, !0, null !== (_a = _this.featureSwitchService.featureSwitches.tridentGitStatusAPI) && void 0 !== _a && _a), !0);
                        }), (0, catchError.K)(function(httpError) {
                            var gitError = _this.gitErrorService.makeGitErrorFromHttpResponse("Git_Checkout_Branch_Failed", httpError);
                            return (0, git_src.xT)(gitError, "Git_BranchNameAlreadyExists") || _this.gitNotificationService.showErrorNotification(gitError, "Trident_Git_Error_Git_Checkout_Branch_Failed_Title"), 
                            (0, observable_of.of)(gitCheckoutBranchFailure({
                                workspaceId: gitCheckoutBranchState.workspaceId,
                                error: gitError
                            }));
                        }));
                    }));
                }), this.deleteGitConnection$ = (0, ngrx_effects.GW)(function() {
                    return _this.actions$.pipe((0, ngrx_effects.l4)(deleteGitConnection), (0, operators_map.U)(function(_a) {
                        return _a.workspaceId;
                    }), (0, switchMap.w)(function(workspaceId) {
                        var loadingNotificationId = _this.gitNotificationService.showLoadingNotification("Trident_Git_Toast_Disconnect_Loading_Title", "Trident_Git_Toast_Disconnect_Loading_Message");
                        return _this.gitConnectionDetailsClient.deleteGitConnectionDetails(workspaceId).pipe((0, 
                        switchMap.w)(function() {
                            return _this.gitNotificationService.showSuccessNotification("Trident_Git_Toast_Disconnect_Success", loadingNotificationId), 
                            [ deleteGitConnectionSuccess({
                                workspaceId
                            }), invalidateGitConnectionInitialization({
                                workspaceId
                            }), invalidateGitSync({
                                workspaceId
                            }), invalidateGitStatus({
                                workspaceId
                            }) ];
                        }), (0, catchError.K)(function(httpError) {
                            var error = _this.gitErrorService.makeGitErrorFromHttpResponse("Git_Connect_Failed", httpError);
                            return _this.gitNotificationService.showErrorNotification(error, "Trident_Git_Error_Git_Disconnect_Failed_Title", loadingNotificationId), 
                            (0, observable_of.of)(deleteGitConnectionFailure({
                                workspaceId,
                                error
                            }));
                        }));
                    }));
                });
            }
            return GitConnectionEffects.prototype.gitConnectionContractToModel = function(workspaceId, gitConnectionDetails) {
                var datasourceOID = gitConnectionDetails.datasourceOID;
                return {
                    workspaceId,
                    gitConnectionDetails: {
                        gitProviderType: gitConnectionDetails.gitProviderType,
                        organizationName: gitConnectionDetails.organizationName,
                        projectName: gitConnectionDetails.projectName,
                        repositoryName: gitConnectionDetails.repositoryName,
                        branchName: gitConnectionDetails.branchName,
                        rootDirectory: gitConnectionDetails.rootDirectory,
                        head: gitConnectionDetails.head,
                        isInitialized: !!gitConnectionDetails.isInitialized,
                        lastSyncTime: gitConnectionDetails.lastSyncTime,
                        supportedArtifactTypeNames: this.ConvertArtifactNamesBackendToFrontEnd(gitConnectionDetails.supportedArtifactTypeNames),
                        datasourceOID
                    }
                };
            }, GitConnectionEffects.prototype.ConvertArtifactNamesBackendToFrontEnd = function(backendArtifactNames) {
                var _this = this;
                if (backendArtifactNames) return backendArtifactNames.map(function(backendArtifactName) {
                    return _this.extensionManifestService.getFrontendArtifactType(backendArtifactName);
                });
            }, GitConnectionEffects.\u0275fac = function(t) {
                return new (t || GitConnectionEffects)(core["\u0275\u0275inject"](ngrx_effects.eX), core["\u0275\u0275inject"](src.i), core["\u0275\u0275inject"](error_src.jR), core["\u0275\u0275inject"](notification_src.mn), core["\u0275\u0275inject"](manifest_src.vC), core["\u0275\u0275inject"](ngrx_store.yh), core["\u0275\u0275inject"](feature_switch_service.V$));
            }, GitConnectionEffects.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: GitConnectionEffects,
                factory: GitConnectionEffects.\u0275fac
            }), GitConnectionEffects;
        }(), combineLatest = __webpack_require__(59017), filter = __webpack_require__(59973), take = __webpack_require__(48787), getGitStatusStoreState = (0, 
        ngrx_store.P1)(getGitState, function(state) {
            return (null == state ? void 0 : state.gitStatus) || initialState;
        }), git_status_selectors_a = gitStatusAdapter.getSelectors(), git_status_selectors_selectAll = git_status_selectors_a.selectAll, git_status_selectors_selectEntities = git_status_selectors_a.selectEntities, getAllGitStatusEntities = ((0, 
        ngrx_store.P1)(getGitStatusStoreState, function(state) {
            return git_status_selectors_selectAll(state);
        }), (0, ngrx_store.P1)(getGitStatusStoreState, function(state) {
            return git_status_selectors_selectEntities(state);
        })), getWorkspaceGitStatus = function(workspaceId) {
            return (0, ngrx_store.P1)(getAllGitStatusEntities, function(entities) {
                return entities[workspaceId];
            });
        }, GitStatusFacade = function() {
            function GitStatusFacade(store) {
                this.store = store;
            }
            return GitStatusFacade.prototype.getGitStatus = function(workspaceId) {
                return this.store.select(getWorkspaceGitStatus(workspaceId));
            }, GitStatusFacade.prototype.loadGitStatus = function(workspaceId) {
                return this.store.dispatch(loadGitStatus({
                    workspaceId
                })), this.getGitStatus(workspaceId);
            }, GitStatusFacade.prototype.getStatusLoadingState = function(workspaceId) {
                return this.store.select(getWorkspaceGitStatus(workspaceId)).pipe((0, operators_map.U)(function(gitStatus) {
                    var _a;
                    return null !== (_a = null == gitStatus ? void 0 : gitStatus.statusCallState) && void 0 !== _a ? _a : LoadingState.Initial;
                }));
            }, GitStatusFacade.prototype.getAllChanges = function(workspaceId) {
                return this.getGitStatus(workspaceId).pipe((0, operators_map.U)(function(gitStatus) {
                    var _a;
                    return null !== (_a = null == gitStatus ? void 0 : gitStatus.gitChanges) && void 0 !== _a ? _a : [];
                }));
            }, GitStatusFacade.prototype.getUncommittedChanges = function(workspaceId) {
                return this.getGitStatus(workspaceId).pipe((0, operators_map.U)(function(gitStatus) {
                    var _a, _b;
                    return null !== (_b = null === (_a = null == gitStatus ? void 0 : gitStatus.gitChanges) || void 0 === _a ? void 0 : _a.filter(function(change) {
                        return change.workspaceChange;
                    })) && void 0 !== _b ? _b : [];
                }));
            }, GitStatusFacade.prototype.loadUncommittedChanges = function(workspaceId) {
                return this.store.dispatch(loadUncommittedChanges({
                    workspaceId
                })), this.getUncommittedChanges(workspaceId);
            }, GitStatusFacade.prototype.getUncommittedChangesLoadingState = function(workspaceId) {
                return this.store.select(getWorkspaceGitStatus(workspaceId)).pipe((0, operators_map.U)(function(gitStatus) {
                    return gitStatus && gitStatus.uncommittedChangesCallState || LoadingState.Initial;
                }));
            }, GitStatusFacade.prototype.getUncommittedArtifactsSelectionState = function(workspaceId) {
                return this.store.select(getWorkspaceGitStatus(workspaceId)).pipe((0, operators_map.U)(function(gitStatus) {
                    return gitStatus && gitStatus.uncommittedChangesArtifactSelectionState || {
                        selectedArtifacts: []
                    };
                }));
            }, GitStatusFacade.prototype.setChangesArtifactSelection = function(workspaceId, artifactId, logicalId, isChecked) {
                this.store.dispatch(setChangesArtifactSelection({
                    workspaceId,
                    artifactId,
                    logicalId,
                    isChecked
                }));
            }, GitStatusFacade.prototype.clearChangesArtifactSelection = function(workspaceId) {
                this.store.dispatch(clearChangesArtifactSelection({
                    workspaceId
                }));
            }, GitStatusFacade.prototype.getIncomingChanges = function(workspaceId) {
                return this.getGitStatus(workspaceId).pipe((0, operators_map.U)(function(gitStatus) {
                    var _a, _b;
                    return null !== (_b = null === (_a = null == gitStatus ? void 0 : gitStatus.gitChanges) || void 0 === _a ? void 0 : _a.filter(function(change) {
                        return change.remoteChange;
                    })) && void 0 !== _b ? _b : [];
                }));
            }, GitStatusFacade.prototype.loadIncomingChanges = function(workspaceId) {
                return this.store.dispatch(loadIncomingChanges({
                    workspaceId
                })), this.getIncomingChanges(workspaceId);
            }, GitStatusFacade.prototype.getIncomingChangesLoadingState = function(workspaceId) {
                return this.store.select(getWorkspaceGitStatus(workspaceId)).pipe((0, operators_map.U)(function(gitStatus) {
                    return gitStatus && gitStatus.incomingChangesCallState || LoadingState.Initial;
                }));
            }, GitStatusFacade.prototype.getIncomingChangesCommitId = function(workspaceId) {
                return this.store.select(getWorkspaceGitStatus(workspaceId)).pipe((0, operators_map.U)(function(gitStatus) {
                    return null == gitStatus ? void 0 : gitStatus.incomingChangesCommitHash;
                }));
            }, GitStatusFacade.\u0275fac = function(t) {
                return new (t || GitStatusFacade)(core["\u0275\u0275inject"](ngrx_store.yh));
            }, GitStatusFacade.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: GitStatusFacade,
                factory: GitStatusFacade.\u0275fac,
                providedIn: "root"
            }), GitStatusFacade;
        }(), getGitCommitStoreState = (0, ngrx_store.P1)(getGitState, function(state) {
            return (null == state ? void 0 : state.gitCommit) || git_commit_reducer_initialState;
        }), git_commit_selectors_a = gitCommitAdapter.getSelectors(), git_commit_selectors_selectAll = git_commit_selectors_a.selectAll, git_commit_selectors_selectEntities = git_commit_selectors_a.selectEntities, getAllGitCommitEntities = ((0, 
        ngrx_store.P1)(getGitCommitStoreState, function(state) {
            return git_commit_selectors_selectAll(state);
        }), (0, ngrx_store.P1)(getGitCommitStoreState, function(state) {
            return git_commit_selectors_selectEntities(state);
        })), GitCommitEffects = function() {
            function GitCommitEffects(actions$, gitCommitClient, gitErrorService, gitNotificationService, extensionManifestService, gitStatusFacade, store, featureSwitchService) {
                var _this = this;
                this.actions$ = actions$, this.gitCommitClient = gitCommitClient, this.gitErrorService = gitErrorService, 
                this.gitNotificationService = gitNotificationService, this.extensionManifestService = extensionManifestService, 
                this.gitStatusFacade = gitStatusFacade, this.store = store, this.featureSwitchService = featureSwitchService, 
                this.commitToGit$ = (0, ngrx_effects.GW)(function() {
                    return _this.actions$.pipe((0, ngrx_effects.l4)(git_commit_actions_commitToGit), (0, 
                    operators_map.U)(function(_a) {
                        var gitCommitState = _a.gitCommitState, isInitialSync = _a.isInitialSync, loadingNotificationId = _this.gitNotificationService.showLoadingNotification(isInitialSync ? "Trident_Git_Toast_Initial_Commit_Loading" : "Trident_Git_Toast_Commit_Loading_Title", isInitialSync ? void 0 : "Trident_Git_Toast_Commit_Loading_Message");
                        return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, gitCommitState), {
                            isInitialSync,
                            notificationId: loadingNotificationId
                        });
                    }), (0, switchMap.w)(function(gitCommitStateWithNotification) {
                        return (0, combineLatest.aj)([ _this.gitCommitClient.commitArtifacts(gitCommitStateWithNotification.workspaceId, _this.fromGitCommitContractToGitCommitRequest(gitCommitStateWithNotification.request)) ]).pipe((0, 
                        switchMap.w)(function(_a) {
                            var gitCommitContractResponse = _a[0], gitCommitStateWithResponse = (0, tslib_es6.__assign)((0, 
                            tslib_es6.__assign)({}, gitCommitStateWithNotification), {
                                response: {
                                    almAction: gitCommitContractResponse.almOperation,
                                    responseDate: gitCommitContractResponse.responseDate
                                }
                            });
                            return [ commitToGitInProgress({
                                gitCommitState: gitCommitStateWithResponse
                            }) ];
                        }), (0, catchError.K)(function(httpError) {
                            var error = _this.gitErrorService.makeGitErrorFromHttpResponse(" Git_Commit_Invalid_Request", httpError);
                            return (null == gitCommitStateWithNotification ? void 0 : gitCommitStateWithNotification.notificationId) && (_this.gitNotificationService.showErrorNotification(error, "Trident_Git_Error_Unable_To_Commit_Title", gitCommitStateWithNotification.notificationId), 
                            _this.gitErrorService.showErrorHandlingDialog(error)), (0, observable_of.of)(commitToGitFailure({
                                gitCommitState: gitCommitStateWithNotification,
                                error
                            }));
                        }));
                    }));
                }), this.getLatestGitAlmOperationSuccess$ = (0, ngrx_effects.GW)(function() {
                    return _this.actions$.pipe((0, ngrx_effects.l4)(getLatestGitAlmOperationSuccess), (0, 
                    operators_map.U)(function(_a) {
                        return _a.gitSyncState;
                    }), (0, filter.h)(function(latestGitOp) {
                        return _this.isLatestOpValid(latestGitOp);
                    }), (0, switchMap.w)(function(gitSyncState) {
                        return _this.store.select((workspaceId = gitSyncState.workspaceId, (0, ngrx_store.P1)(getAllGitCommitEntities, function(entities) {
                            return entities[workspaceId];
                        }))).pipe((0, take.q)(1), (0, switchMap.w)(function(gitCommitState) {
                            return _this.getActions(gitSyncState, gitCommitState);
                        }));
                        var workspaceId;
                    }));
                });
            }
            return GitCommitEffects.prototype.isLatestOpValid = function(latestGitOp) {
                return !!(null == latestGitOp ? void 0 : latestGitOp.isValid) && latestGitOp.gitOperationType === git_src.u9.Commit;
            }, GitCommitEffects.prototype.getActions = function(latestGitOp, gitCommitRecord) {
                var _a, gitCommitState = gitCommitRecord && gitCommitRecord.workspaceId === latestGitOp.workspaceId ? {
                    workspaceId: gitCommitRecord.workspaceId,
                    request: gitCommitRecord.request,
                    response: null == gitCommitRecord ? void 0 : gitCommitRecord.response,
                    isInitialSync: null == gitCommitRecord ? void 0 : gitCommitRecord.isInitialSync,
                    notificationId: null == gitCommitRecord ? void 0 : gitCommitRecord.notificationId
                } : {
                    workspaceId: latestGitOp.workspaceId,
                    request: void 0
                };
                switch (latestGitOp.gitOperationStatus) {
                  case git_src.wM.Successful:
                    return (null == gitCommitRecord ? void 0 : gitCommitRecord.notificationId) && this.gitNotificationService.showSuccessNotification((null == gitCommitRecord ? void 0 : gitCommitRecord.isInitialSync) ? "Trident_Git_Toast_Initial_Action_Success" : "Trident_Git_Toast_Commit_Success", gitCommitRecord.notificationId), 
                    this.gitStatusFacade.clearChangesArtifactSelection(gitCommitState.workspaceId), 
                    (0, tslib_es6.__spreadArray)((0, tslib_es6.__spreadArray)([ commitToGitSuccess({
                        gitCommitStateWithResponse: gitCommitState
                    }) ], getGitStatusActions(gitCommitState.workspaceId, !0, null !== (_a = this.featureSwitchService.featureSwitches.tridentGitStatusAPI) && void 0 !== _a && _a), !0), [ invalidateGitSync({
                        workspaceId: gitCommitState.workspaceId
                    }) ], !1);

                  case git_src.wM.InProgress:
                    return [ commitToGitInProgress({
                        gitCommitState
                    }) ];

                  case git_src.wM.Failed:
                    var error = this.gitErrorService.handleAlmGitError("AlmOperationFailed_CommitToGit", latestGitOp);
                    return (null == gitCommitRecord ? void 0 : gitCommitRecord.notificationId) && (this.gitNotificationService.showErrorNotification(error, "Trident_Git_Error_Unable_To_Commit_Title", gitCommitRecord.notificationId), 
                    this.gitErrorService.showErrorHandlingDialog(error)), [ commitToGitFailureServerError({
                        gitCommitState
                    }), invalidateGitSync({
                        workspaceId: gitCommitState.workspaceId
                    }) ];
                }
                return [ commitToGitInProgress({
                    gitCommitState
                }) ];
            }, GitCommitEffects.prototype.fromGitCommitContractToGitCommitRequest = function(gitCommitRequestModel) {
                var _this = this;
                return {
                    artifacts: gitCommitRequestModel.artifacts.map(function(artifact) {
                        return _this.fromGitArtifactChangeToArtifactSelector(artifact);
                    }),
                    workspaceHead: gitCommitRequestModel.workspaceHead,
                    comment: gitCommitRequestModel.comment
                };
            }, GitCommitEffects.prototype.fromGitArtifactChangeToArtifactSelector = function(gitArtifactChange) {
                var gitArtifact = gitArtifactChange.artifact;
                return {
                    artifactType: this.extensionManifestService.getBackendArtifactType(gitArtifact.artifactType),
                    etag: gitArtifact.etag,
                    objectId: gitArtifact.objectId,
                    logicalId: gitArtifact.logicalId,
                    changeType: gitArtifactChange.workspaceChange.changeType
                };
            }, GitCommitEffects.\u0275fac = function(t) {
                return new (t || GitCommitEffects)(core["\u0275\u0275inject"](ngrx_effects.eX), core["\u0275\u0275inject"](src.ce), core["\u0275\u0275inject"](error_src.jR), core["\u0275\u0275inject"](notification_src.mn), core["\u0275\u0275inject"](manifest_src.vC), core["\u0275\u0275inject"](GitStatusFacade), core["\u0275\u0275inject"](ngrx_store.yh), core["\u0275\u0275inject"](feature_switch_service.V$));
            }, GitCommitEffects.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: GitCommitEffects,
                factory: GitCommitEffects.\u0275fac
            }), GitCommitEffects;
        }(), dialog_src = __webpack_require__(32980), dialog = (__webpack_require__(17177), 
        __webpack_require__(94228), __webpack_require__(14977), __webpack_require__(95228), 
        __webpack_require__(32293)), registry_src = __webpack_require__(41838), AlmGitOperationType = function(AlmGitOperationType) {
            return AlmGitOperationType[AlmGitOperationType.CommitToGit = 100] = "CommitToGit", 
            AlmGitOperationType[AlmGitOperationType.UpdateFromGit = 101] = "UpdateFromGit", 
            AlmGitOperationType[AlmGitOperationType.InitializeWorkspaceGitConnection = 102] = "InitializeWorkspaceGitConnection", 
            AlmGitOperationType[AlmGitOperationType.Undo = 103] = "Undo", AlmGitOperationType[AlmGitOperationType.CheckoutBranch = 104] = "CheckoutBranch", 
            AlmGitOperationType[AlmGitOperationType.SwitchBranch = 105] = "SwitchBranch", AlmGitOperationType;
        }({}), AlmOperationStatus = function(AlmOperationStatus) {
            return AlmOperationStatus[AlmOperationStatus.NonFinalBase = 0] = "NonFinalBase", 
            AlmOperationStatus[AlmOperationStatus.FinalBase = 1001] = "FinalBase", AlmOperationStatus[AlmOperationStatus.FinalSuccessBase = 1001] = "FinalSuccessBase", 
            AlmOperationStatus[AlmOperationStatus.FinalErrorBase = 2001] = "FinalErrorBase", 
            AlmOperationStatus[AlmOperationStatus.Created = 0] = "Created", AlmOperationStatus[AlmOperationStatus.Approval_Pending = 10] = "Approval_Pending", 
            AlmOperationStatus[AlmOperationStatus.Execution_Pending = 20] = "Execution_Pending", 
            AlmOperationStatus[AlmOperationStatus.Executing_Running = 30] = "Executing_Running", 
            AlmOperationStatus[AlmOperationStatus.Succeeded = 1001] = "Succeeded", AlmOperationStatus[AlmOperationStatus.SucceededWithWarning_RefreshSkipped = 1011] = "SucceededWithWarning_RefreshSkipped", 
            AlmOperationStatus[AlmOperationStatus.SucceededWithWarning_MissingCredentials = 1012] = "SucceededWithWarning_MissingCredentials", 
            AlmOperationStatus[AlmOperationStatus.Failed_GenericError = 2001] = "Failed_GenericError", 
            AlmOperationStatus[AlmOperationStatus.Failed_GenericDryRunError = 2006] = "Failed_GenericDryRunError", 
            AlmOperationStatus[AlmOperationStatus.Approval_Abandoned = 2011] = "Approval_Abandoned", 
            AlmOperationStatus[AlmOperationStatus.Approval_Rejected = 2012] = "Approval_Rejected", 
            AlmOperationStatus[AlmOperationStatus.Execution_Cancelled = 2021] = "Execution_Cancelled", 
            AlmOperationStatus[AlmOperationStatus.Execution_UnsupportedOperationType = 2031] = "Execution_UnsupportedOperationType", 
            AlmOperationStatus[AlmOperationStatus.Execution_UnsupportedStepType = 2032] = "Execution_UnsupportedStepType", 
            AlmOperationStatus[AlmOperationStatus.Execution_NoSteps = 2033] = "Execution_NoSteps", 
            AlmOperationStatus;
        }({}), InteractionType = function(InteractionType) {
            return InteractionType[InteractionType.SingleOption = 0] = "SingleOption", InteractionType[InteractionType.None = 1] = "None", 
            InteractionType;
        }({}), common = __webpack_require__(77476), dialog_component = __webpack_require__(95825), tri_svg_icon_component = __webpack_require__(74913), tri_pivot_item_component = __webpack_require__(64266), tri_pivot_component = __webpack_require__(94243), tri_checkbox_component = __webpack_require__(10965), tri_radio_button_component = __webpack_require__(37350), tri_radio_group_component = __webpack_require__(89330), localize_pipe = __webpack_require__(55334);
        function GitInteractiveOperationsDialogComponent_tri_pivot_item_7_tri_svg_icon_2_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "tri-svg-icon", 16);
        }
        function GitInteractiveOperationsDialogComponent_tri_pivot_item_7_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "tri-pivot-item", 11)(1, "span", 12), 
            core["\u0275\u0275template"](2, GitInteractiveOperationsDialogComponent_tri_pivot_item_7_tri_svg_icon_2_Template, 1, 0, "tri-svg-icon", 13), 
            core["\u0275\u0275elementEnd"](), core["\u0275\u0275element"](3, "tri-svg-icon", 14), 
            core["\u0275\u0275elementStart"](4, "span", 15), core["\u0275\u0275text"](5), core["\u0275\u0275elementEnd"]()()), 
            2 & rf) {
                var tmp_2_0, tmp_3_0, error_r2 = ctx.$implicit, ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("value", error_r2), core["\u0275\u0275advance"](2), 
                core["\u0275\u0275property"]("ngIf", ctx_r0.isArtifactOptionSelected(error_r2)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("sprite", null == (tmp_2_0 = ctx_r0.localGetArtifactIconFromDict(ctx_r0.getArtifactType(error_r2))) ? null : tmp_2_0.sprite)("name", null == (tmp_3_0 = ctx_r0.localGetArtifactIconFromDict(ctx_r0.getArtifactType(error_r2))) ? null : tmp_3_0.name), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275attribute"]("aria-label", null == error_r2.failedArtifactMetadata ? null : error_r2.failedArtifactMetadata.artifactDisplayName), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate1"](" ", null == error_r2.failedArtifactMetadata ? null : error_r2.failedArtifactMetadata.artifactDisplayName, " ");
            }
        }
        function GitInteractiveOperationsDialogComponent_ng_container_13_ng_container_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r8 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementContainerStart"](0, 19), core["\u0275\u0275elementStart"](1, "tri-checkbox", 20), 
                core["\u0275\u0275listener"]("onChange", function() {
                    core["\u0275\u0275restoreView"](_r8);
                    var ctx_r7 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r7.checkBoxSelectionChanged(ctx_r7.getSingleOption(ctx_r7.displayError)));
                }), core["\u0275\u0275text"](2), core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementEnd"](), 
                core["\u0275\u0275elementContainerEnd"]();
            }
            if (2 & rf) {
                var ctx_r4 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("checked", ctx_r4.isArtifactOptionSelected(ctx_r4.displayError)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](3, 2, ctx_r4.getSingleOptionMessageKey(ctx_r4.displayError)), " ");
            }
        }
        function GitInteractiveOperationsDialogComponent_ng_container_13_ng_template_2_tri_radio_button_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r12 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "tri-radio-button", 22), core["\u0275\u0275listener"]("change", function() {
                    var option_r10 = core["\u0275\u0275restoreView"](_r12).$implicit, ctx_r11 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r11.radioButtonSelectionChanged(option_r10));
                }), core["\u0275\u0275text"](1), core["\u0275\u0275pipe"](2, "localize"), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var option_r10 = ctx.$implicit, ctx_r9 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275property"]("value", option_r10.OptionKey)("checked", ctx_r9.isArtifactOptionSelected(ctx_r9.displayError, option_r10)), 
                core["\u0275\u0275attribute"]("role", "radio"), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](2, 4, option_r10.OptionMessageKey), " ");
            }
        }
        function GitInteractiveOperationsDialogComponent_ng_container_13_ng_template_2_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "tri-radio-group"), core["\u0275\u0275template"](1, GitInteractiveOperationsDialogComponent_ng_container_13_ng_template_2_tri_radio_button_1_Template, 3, 6, "tri-radio-button", 21), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r6 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngForOf", null == ctx_r6.displayError.interactiveOperationInfo ? null : ctx_r6.displayError.interactiveOperationInfo.options);
            }
        }
        function GitInteractiveOperationsDialogComponent_ng_container_13_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, GitInteractiveOperationsDialogComponent_ng_container_13_ng_container_1_Template, 4, 4, "ng-container", 17), 
            core["\u0275\u0275template"](2, GitInteractiveOperationsDialogComponent_ng_container_13_ng_template_2_Template, 2, 1, "ng-template", null, 18, core["\u0275\u0275templateRefExtractor"]), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var _r5 = core["\u0275\u0275reference"](3), ctx_r1 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", 1 === ctx_r1.displayErrorOptionsListSize)("ngIfElse", _r5);
            }
        }
        var GitInteractiveOperationsDialogComponent = function() {
            function GitInteractiveOperationsDialogComponent(extensionManifestService, dialogRef, data) {
                var _a, _b;
                this.extensionManifestService = extensionManifestService, this.dialogRef = dialogRef, 
                this.data = data, this.localGetArtifactIconFromDict = registry_src.zp, this.enabledOptions = new Map, 
                this.displayError = (0, git_src.lz)(this.data.errors), this.displayErrorOptionsListSize = null !== (_b = null === (_a = this.displayError.interactiveOperationInfo) || void 0 === _a ? void 0 : _a.options.length) && void 0 !== _b ? _b : 0, 
                this.InteractionType = InteractionType;
            }
            return GitInteractiveOperationsDialogComponent.prototype.buttonClicked = function(buttonName) {
                if (buttonName === this.data.buttons[0].name) return this.dialogRef.close(this.getInteractiveOperationsOptions(this.enabledOptions));
                this.dialogRef.close();
            }, GitInteractiveOperationsDialogComponent.prototype.getInteractiveOperationsOptions = function(enabledOptions) {
                var optionPerArtifactList = [];
                return enabledOptions.forEach(function(value, key) {
                    optionPerArtifactList.push({
                        artifactLogicalId: key,
                        optionName: value
                    });
                }), {
                    optionPerArtifactList
                };
            }, GitInteractiveOperationsDialogComponent.prototype.convertDialogData = function(data) {
                return {
                    title: data.title,
                    buttons: data.buttons
                };
            }, GitInteractiveOperationsDialogComponent.prototype.onArtifactSelectionChange = function(error) {
                var _a, _b;
                this.displayError = error, this.displayErrorOptionsListSize = null !== (_b = null === (_a = this.displayError.interactiveOperationInfo) || void 0 === _a ? void 0 : _a.options.length) && void 0 !== _b ? _b : 0;
            }, GitInteractiveOperationsDialogComponent.prototype.radioButtonSelectionChanged = function(option) {
                var _a;
                this.enabledOptions.set(null === (_a = this.displayError.failedArtifactMetadata) || void 0 === _a ? void 0 : _a.artifactLogicalId, option.OptionKey), 
                this.data.buttons[0].disabled = this.enabledOptions.size !== this.data.errors.errorsDetails.length;
            }, GitInteractiveOperationsDialogComponent.prototype.checkBoxSelectionChanged = function(option) {
                var _a, _b, _c;
                this.enabledOptions.has(null === (_a = this.displayError.failedArtifactMetadata) || void 0 === _a ? void 0 : _a.artifactLogicalId) ? this.enabledOptions.delete(null === (_b = this.displayError.failedArtifactMetadata) || void 0 === _b ? void 0 : _b.artifactLogicalId) : this.enabledOptions.set(null === (_c = this.displayError.failedArtifactMetadata) || void 0 === _c ? void 0 : _c.artifactLogicalId, option.OptionKey), 
                this.data.buttons[0].disabled = this.enabledOptions.size !== this.data.errors.errorsDetails.length;
            }, GitInteractiveOperationsDialogComponent.prototype.getOptionsListSize = function(error) {
                var _a, _b;
                return null !== (_b = null === (_a = error.interactiveOperationInfo) || void 0 === _a ? void 0 : _a.options.length) && void 0 !== _b ? _b : 0;
            }, GitInteractiveOperationsDialogComponent.prototype.getSingleOption = function(error) {
                var _a;
                return null === (_a = error.interactiveOperationInfo) || void 0 === _a ? void 0 : _a.options[0];
            }, GitInteractiveOperationsDialogComponent.prototype.getSingleOptionMessageKey = function(error) {
                var _a;
                return null === (_a = error.interactiveOperationInfo) || void 0 === _a ? void 0 : _a.options[0].OptionMessageKey;
            }, GitInteractiveOperationsDialogComponent.prototype.isArtifactOptionSelected = function(error, option) {
                var _a, artifactErrorLogicalId = null === (_a = error.failedArtifactMetadata) || void 0 === _a ? void 0 : _a.artifactLogicalId;
                return option ? this.enabledOptions.has(artifactErrorLogicalId) && this.enabledOptions.get(artifactErrorLogicalId) === option.OptionKey : this.enabledOptions.has(artifactErrorLogicalId);
            }, GitInteractiveOperationsDialogComponent.prototype.getArtifactType = function(error) {
                var _a;
                return this.extensionManifestService.getFrontendArtifactType(null === (_a = error.failedArtifactMetadata) || void 0 === _a ? void 0 : _a.artifactType);
            }, GitInteractiveOperationsDialogComponent.\u0275fac = function(t) {
                return new (t || GitInteractiveOperationsDialogComponent)(core["\u0275\u0275directiveInject"](manifest_src.vC), core["\u0275\u0275directiveInject"](dialog.so), core["\u0275\u0275directiveInject"](dialog.WI));
            }, GitInteractiveOperationsDialogComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: GitInteractiveOperationsDialogComponent,
                selectors: [ [ "interactive-operations-dialog" ] ],
                decls: 14,
                vars: 11,
                consts: [ [ 3, "dialogData", "closeButtonLabel", "buttonClickEvent" ], [ 1, "subtitle" ], [ 1, "content" ], [ 1, "artifacts" ], [ "linkFormat", "tab", "direction", "vertical", 3, "selectedValue", "selectedValueChange" ], [ "class", "artifact-details", 3, "value", 4, "ngFor", "ngForOf" ], [ 1, "divider" ], [ 1, "options" ], [ "tabindex", "0", 1, "message" ], [ 1, "options-list-container", 3, "ngSwitch" ], [ 4, "ngSwitchCase" ], [ 1, "artifact-details", 3, "value" ], [ 1, "check-mark-icon" ], [ "sprite", "fluentui-icons", "name", "checkmark_12_filled", 4, "ngIf" ], [ "tri-svg-icon-22", "", 1, "artifact-icon", 3, "sprite", "name" ], [ 1, "trimmedTextWithEllipsis" ], [ "sprite", "fluentui-icons", "name", "checkmark_12_filled" ], [ "class", "single-option", 4, "ngIf", "ngIfElse" ], [ "multiOptions", "" ], [ 1, "single-option" ], [ "ng-non-bindable", "", 3, "checked", "onChange" ], [ "ng-non-bindable", "", 3, "value", "checked", "change", 4, "ngFor", "ngForOf" ], [ "ng-non-bindable", "", 3, "value", "checked", "change" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementStart"](0, "trident-dialog", 0), core["\u0275\u0275listener"]("buttonClickEvent", function($event) {
                        return ctx.buttonClicked($event);
                    }), core["\u0275\u0275pipe"](1, "localize"), core["\u0275\u0275elementStart"](2, "div", 1), 
                    core["\u0275\u0275text"](3), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](4, "div", 2)(5, "div", 3)(6, "tri-pivot", 4), 
                    core["\u0275\u0275listener"]("selectedValueChange", function($event) {
                        return ctx.onArtifactSelectionChange($event);
                    }), core["\u0275\u0275template"](7, GitInteractiveOperationsDialogComponent_tri_pivot_item_7_Template, 6, 6, "tri-pivot-item", 5), 
                    core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275element"](8, "hr", 6), core["\u0275\u0275elementStart"](9, "div", 7)(10, "div", 8), 
                    core["\u0275\u0275text"](11), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](12, "div", 9), 
                    core["\u0275\u0275template"](13, GitInteractiveOperationsDialogComponent_ng_container_13_Template, 4, 2, "ng-container", 10), 
                    core["\u0275\u0275elementEnd"]()()()()), 2 & rf && (core["\u0275\u0275property"]("dialogData", ctx.convertDialogData(ctx.data))("closeButtonLabel", core["\u0275\u0275pipeBind1"](1, 9, "Cancel_ButtonText")), 
                    core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"](" ", ctx.data.subTitle, " "), 
                    core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("selectedValue", ctx.displayError), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngForOf", ctx.data.errors.errorsDetails), 
                    core["\u0275\u0275advance"](3), core["\u0275\u0275attribute"]("aria-label", null == ctx.displayError.interactiveOperationInfo ? null : ctx.displayError.interactiveOperationInfo.dialogMessage), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate1"](" ", null == ctx.displayError.interactiveOperationInfo ? null : ctx.displayError.interactiveOperationInfo.dialogMessage, " "), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitch", null == ctx.displayError.interactiveOperationInfo ? null : ctx.displayError.interactiveOperationInfo.interactionType), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", ctx.InteractionType.SingleOption));
                },
                dependencies: [ common.NgForOf, common.NgIf, common.NgSwitch, common.NgSwitchCase, dialog_component.v, tri_svg_icon_component.M, tri_pivot_item_component.E, tri_pivot_component.B, tri_checkbox_component.r, tri_radio_button_component.Y, tri_radio_group_component.Z, localize_pipe.Y ],
                styles: [ ".content[_ngcontent-%COMP%]{display:flex;flex-direction:row;gap:16px}.subtitle[_ngcontent-%COMP%]{padding:0 0 16px}.artifacts[_ngcontent-%COMP%]   tri-pivot-item[_ngcontent-%COMP%]{width:220px;padding-bottom:10px;margin-inline-end:10px}.artifacts[_ngcontent-%COMP%]   .tri-pivot-item-tab[_ngcontent-%COMP%]{display:flex;gap:4px}.artifacts[_ngcontent-%COMP%]   .check-mark-icon[_ngcontent-%COMP%]{width:20px}hr.divider[_ngcontent-%COMP%]{border:1px solid var(--colorNeutralStroke1);height:inherit;margin:0}[_nghost-%COMP%]     .tri-pivot-item-tab{display:flex;gap:4px}.message[_ngcontent-%COMP%]{font-size:16px;font-weight:600;padding:0 0 10px}.options-list-container[_ngcontent-%COMP%]{max-height:100px;overflow-y:scroll}" ],
                changeDetection: 0
            }), GitInteractiveOperationsDialogComponent;
        }(), localization_service = __webpack_require__(7452), interactive_operations_service_InteractiveOperationsService = function() {
            function InteractiveOperationsService(dialogService, localizationService) {
                this.dialogService = dialogService, this.localizationService = localizationService;
            }
            return InteractiveOperationsService.prototype.isOptionNotEnabled = function(error) {
                return (0, git_src.lz)(error).workloadErrorCategory === git_src.QJ;
            }, InteractiveOperationsService.prototype.showInteractiveOperationsDialog = function(error, dialogSubTitle, handler) {
                var dialog = function(localizationService, errors, dialogTitle) {
                    var cancelButtonText = localizationService.get("Cancel_ButtonText"), acceptButtonText = localizationService.get("ModalDialogButtonText_Continue"), dialogSubTitle = localizationService.get("Trident_Git_Interactive_Operations_Dialog_Message"), data = {
                        title: localizationService.get(dialogTitle),
                        buttons: [ {
                            name: acceptButtonText,
                            label: acceptButtonText,
                            buttonType: "primary",
                            disabled: !0
                        }, {
                            name: cancelButtonText,
                            label: cancelButtonText,
                            buttonType: null
                        } ],
                        subTitle: dialogSubTitle,
                        errors
                    };
                    return {
                        componentRef: GitInteractiveOperationsDialogComponent,
                        config: {
                            width: "864px",
                            panelClass: "dialog-style",
                            data
                        }
                    };
                }(this.localizationService, error, dialogSubTitle);
                this.dialogService.open(dialog.componentRef, dialog.config).afterClosed().pipe((0, 
                take.q)(1), (0, filter.h)(function(enabledOptions) {
                    return enabledOptions;
                })).subscribe(function(enabledOptions) {
                    handler(error, enabledOptions);
                });
            }, InteractiveOperationsService.\u0275fac = function(t) {
                return new (t || InteractiveOperationsService)(core["\u0275\u0275inject"](dialog_src.uQ), core["\u0275\u0275inject"](localization_service.z));
            }, InteractiveOperationsService.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: InteractiveOperationsService,
                factory: InteractiveOperationsService.\u0275fac,
                providedIn: "root"
            }), InteractiveOperationsService;
        }(), getGitUpdateStoreState = (0, ngrx_store.P1)(getGitState, function(state) {
            return (null == state ? void 0 : state.gitUpdate) || git_update_reducer_initialState;
        }), git_update_selectors_a = gitUpdateAdapter.getSelectors(), git_update_selectors_selectAll = git_update_selectors_a.selectAll, git_update_selectors_selectEntities = git_update_selectors_a.selectEntities, getAllGitUpdateEntities = ((0, 
        ngrx_store.P1)(getGitUpdateStoreState, function(state) {
            return git_update_selectors_selectAll(state);
        }), (0, ngrx_store.P1)(getGitUpdateStoreState, function(state) {
            return git_update_selectors_selectEntities(state);
        })), getWorkspaceGitUpdates = function(workspaceId) {
            return (0, ngrx_store.P1)(getAllGitUpdateEntities, function(entities) {
                return entities[workspaceId];
            });
        }, GitConnectionFacade = function() {
            function GitConnectionFacade(store) {
                this.store = store;
            }
            return GitConnectionFacade.prototype.getGitConnection = function(workspaceId) {
                return this.store.select(getWorkspaceGitConnection(workspaceId));
            }, GitConnectionFacade.prototype.ensureGitConnection = function(workspaceId) {
                return this.store.dispatch(ensureGitConnection({
                    workspaceId
                })), this.getGitConnection(workspaceId);
            }, GitConnectionFacade.prototype.loadGitConnection = function(workspaceId) {
                return this.store.dispatch(loadGitConnection({
                    workspaceId
                })), this.getGitConnection(workspaceId);
            }, GitConnectionFacade.prototype.saveGitConnection = function(gitConnection) {
                return this.store.dispatch(saveGitConnection({
                    gitConnection
                })), (0, observable_of.of)(void 0);
            }, GitConnectionFacade.prototype.deleteGitConnection = function(workspaceId) {
                return this.store.dispatch(deleteGitConnection({
                    workspaceId
                })), (0, observable_of.of)(void 0);
            }, GitConnectionFacade.prototype.checkoutBranch = function(gitCheckoutBranchState) {
                return this.store.dispatch(gitCheckoutBranch({
                    gitCheckoutBranchState
                })), (0, observable_of.of)(void 0);
            }, GitConnectionFacade.prototype.getGitConnectionOperationState = function(workspaceId) {
                return this.store.select(getWorkspaceGitConnection(workspaceId)).pipe((0, operators_map.U)(function(gitConnection) {
                    return gitConnection && gitConnection.callState || ConnectionOperationState.Initial;
                }));
            }, GitConnectionFacade.\u0275fac = function(t) {
                return new (t || GitConnectionFacade)(core["\u0275\u0275inject"](ngrx_store.yh));
            }, GitConnectionFacade.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: GitConnectionFacade,
                factory: GitConnectionFacade.\u0275fac,
                providedIn: "root"
            }), GitConnectionFacade;
        }(), GitUpdateFacade = function() {
            function GitUpdateFacade(store) {
                this.store = store;
            }
            return GitUpdateFacade.prototype.updateFromGit = function(gitUpdateState) {
                return this.store.dispatch(updateFromGit({
                    gitUpdateState
                })), this.store.select(getWorkspaceGitUpdates(gitUpdateState.workspaceId));
            }, GitUpdateFacade.prototype.getUpdatingState = function(workspaceId) {
                return this.store.select(getWorkspaceGitUpdates(workspaceId)).pipe((0, operators_map.U)(function(gitUpdateState) {
                    return gitUpdateState && gitUpdateState.callState || UpdatingState.Initial;
                }));
            }, GitUpdateFacade.\u0275fac = function(t) {
                return new (t || GitUpdateFacade)(core["\u0275\u0275inject"](ngrx_store.yh));
            }, GitUpdateFacade.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: GitUpdateFacade,
                factory: GitUpdateFacade.\u0275fac,
                providedIn: "root"
            }), GitUpdateFacade;
        }(), GitUpdateEffects = function() {
            function GitUpdateEffects(actions$, gitUpdateClient, gitErrorService, gitNotificationService, interactiveOperationsService, store, extensionManifestService, gitConnectionFacade, gitUpdateFacade, featureSwitchService) {
                var _this = this;
                this.actions$ = actions$, this.gitUpdateClient = gitUpdateClient, this.gitErrorService = gitErrorService, 
                this.gitNotificationService = gitNotificationService, this.interactiveOperationsService = interactiveOperationsService, 
                this.store = store, this.extensionManifestService = extensionManifestService, this.gitConnectionFacade = gitConnectionFacade, 
                this.gitUpdateFacade = gitUpdateFacade, this.featureSwitchService = featureSwitchService, 
                this.updateFromGit$ = (0, ngrx_effects.GW)(function() {
                    return _this.actions$.pipe((0, ngrx_effects.l4)(updateFromGit), (0, operators_map.U)(function(_a) {
                        var gitUpdateState = _a.gitUpdateState, isInitialSync = _a.isInitialSync, loadingNotificationId = _this.gitNotificationService.showLoadingNotification(isInitialSync ? "Trident_Git_Toast_Initial_Update_Loading" : "Trident_Git_Toast_Update_Loading_Title", isInitialSync ? void 0 : "Trident_Git_Toast_Update_Loading_Message");
                        return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, gitUpdateState), {
                            isInitialSync,
                            notificationId: loadingNotificationId
                        });
                    }), (0, switchMap.w)(function(gitUpdateStateWithNotification) {
                        return _this.gitUpdateClient.UpdateArtifactsFromGit(gitUpdateStateWithNotification.workspaceId, _this.updateFromGitModelToContract(gitUpdateStateWithNotification.request)).pipe((0, 
                        switchMap.w)(function(gitUpdateContractResponse) {
                            var gitUpdateStateWithResponse = (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, gitUpdateStateWithNotification), {
                                response: {
                                    almAction: gitUpdateContractResponse.almOperation
                                }
                            });
                            return [ updateFromGitInProgress({
                                gitUpdateState: gitUpdateStateWithResponse
                            }) ];
                        }), (0, catchError.K)(function(httpError) {
                            var error = _this.gitErrorService.makeGitErrorFromHttpResponse("Git_Update_Invalid_Request", httpError);
                            return (null == gitUpdateStateWithNotification ? void 0 : gitUpdateStateWithNotification.notificationId) && (_this.gitNotificationService.showErrorNotification(error, "Trident_Git_Error_Unable_To_Update_Title", gitUpdateStateWithNotification.notificationId), 
                            _this.gitErrorService.showErrorHandlingDialog(error)), (0, observable_of.of)(updateFromGitFailure({
                                gitUpdateState: gitUpdateStateWithNotification,
                                error
                            }));
                        }));
                    }));
                }), this.getLatestGitAlmOperationSuccess$ = (0, ngrx_effects.GW)(function() {
                    return _this.actions$.pipe((0, ngrx_effects.l4)(getLatestGitAlmOperationSuccess), (0, 
                    operators_map.U)(function(_a) {
                        return _a.gitSyncState;
                    }), (0, filter.h)(function(latestGitOp) {
                        return _this.isLatestOpValid(latestGitOp);
                    }), (0, switchMap.w)(function(gitSyncState) {
                        return _this.store.select(getWorkspaceGitUpdates(gitSyncState.workspaceId)).pipe((0, 
                        take.q)(1), (0, switchMap.w)(function(gitUpdateState) {
                            return _this.getActions(gitSyncState, gitUpdateState);
                        }));
                    }));
                });
            }
            return GitUpdateEffects.prototype.isLatestOpValid = function(latestGitOp) {
                return !!(null == latestGitOp ? void 0 : latestGitOp.isValid) && latestGitOp.gitOperationType === git_src.u9.Update;
            }, GitUpdateEffects.prototype.getActions = function(latestGitOp, gitUpdateRecord) {
                var _a, _this = this, gitUpdateState = gitUpdateRecord && gitUpdateRecord.workspaceId === latestGitOp.workspaceId ? {
                    workspaceId: gitUpdateRecord.workspaceId,
                    request: gitUpdateRecord.request,
                    response: null == gitUpdateRecord ? void 0 : gitUpdateRecord.response,
                    isInitialSync: null == gitUpdateRecord ? void 0 : gitUpdateRecord.isInitialSync,
                    notificationId: null == gitUpdateRecord ? void 0 : gitUpdateRecord.notificationId
                } : {
                    workspaceId: latestGitOp.workspaceId,
                    request: void 0
                };
                switch (latestGitOp.gitOperationStatus) {
                  case git_src.wM.Successful:
                    return (null == gitUpdateRecord ? void 0 : gitUpdateRecord.notificationId) && this.gitNotificationService.showSuccessNotification((null == gitUpdateRecord ? void 0 : gitUpdateRecord.notificationId) ? "Trident_Git_Toast_Initial_Action_Success" : "Trident_Git_Toast_Update_Success", gitUpdateRecord.notificationId), 
                    (0, tslib_es6.__spreadArray)((0, tslib_es6.__spreadArray)([ updateFromGitSuccess({
                        gitUpdateStateWithResponse: gitUpdateState
                    }) ], getGitStatusActions(gitUpdateState.workspaceId, !0, null !== (_a = this.featureSwitchService.featureSwitches.tridentGitStatusAPI) && void 0 !== _a && _a), !0), [ invalidateGitSync({
                        workspaceId: gitUpdateState.workspaceId
                    }) ], !1);

                  case git_src.wM.InProgress:
                    return [ updateFromGitInProgress({
                        gitUpdateState
                    }) ];

                  case git_src.wM.Failed:
                    var error = this.gitErrorService.handleAlmGitError("AlmOperationFailed_UpdateFromGit", latestGitOp);
                    return (null == gitUpdateRecord ? void 0 : gitUpdateRecord.notificationId) && (this.featureSwitchService.featureSwitches.interactiveOperationUI && this.interactiveOperationsService.isOptionNotEnabled(error) ? (this.interactiveOperationsService.showInteractiveOperationsDialog(error, "Trident_Git_Updates_Fail_Message_Bar", function(error, enabledOptions) {
                        return _this.doUpdateFlowWithInteractiveOptions(error, enabledOptions, latestGitOp.workspaceId);
                    }), this.gitNotificationService.hideCurrentNotification()) : (this.gitNotificationService.showErrorNotification(error, "Trident_Git_Error_Unable_To_Update_Title", gitUpdateRecord.notificationId), 
                    this.gitErrorService.showErrorHandlingDialog(error))), [ updateFromGitFailureServerError({
                        gitUpdateState,
                        error
                    }), invalidateGitSync({
                        workspaceId: gitUpdateState.workspaceId
                    }) ];
                }
                return [ updateFromGitInProgress({
                    gitUpdateState
                }) ];
            }, GitUpdateEffects.prototype.updateFromGitModelToContract = function(model) {
                var _a, treeWithBackendTypes = this.ConvertArtifactTypesInTree(model.artifactMergePolicyInfoTreeList, this.extensionManifestService);
                return {
                    targetCommit: model.targetCommit,
                    workspaceHead: null !== (_a = model.workspaceHead) && void 0 !== _a ? _a : null,
                    ArtifactMergePolicyInfoTreeList: treeWithBackendTypes,
                    retryOperationId: model.retryOperationId,
                    interactiveUpdateOptions: model.interactiveUpdateOptions
                };
            }, GitUpdateEffects.prototype.ConvertArtifactTypesInTree = function(artifactMergePolicyInfoTreeList, extensionManifestService) {
                return artifactMergePolicyInfoTreeList ? artifactMergePolicyInfoTreeList.map(function(tree) {
                    var newTree = (0, tslib_es6.__assign)({}, tree);
                    return "artifact" in newTree.root && (newTree.root = (0, tslib_es6.__assign)((0, 
                    tslib_es6.__assign)({}, newTree.root), {
                        artifact: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, newTree.root.artifact), {
                            artifactType: extensionManifestService.getBackendArtifactType(newTree.root.artifact.artifactType)
                        })
                    })), newTree;
                }) : artifactMergePolicyInfoTreeList;
            }, GitUpdateEffects.prototype.doUpdateFlowWithInteractiveOptions = function(error, enabledOptions, workspaceId) {
                var _this = this;
                this.gitConnectionFacade.getGitConnection(workspaceId).pipe((0, take.q)(1)).subscribe(function(gitConnectionRecord) {
                    var _a, _b, workspaceHead = null === (_a = null == gitConnectionRecord ? void 0 : gitConnectionRecord.gitConnectionDetails) || void 0 === _a ? void 0 : _a.head;
                    _this.gitUpdateFacade.updateFromGit({
                        workspaceId,
                        request: {
                            workspaceHead,
                            targetCommit: void 0,
                            artifactMergePolicyInfoTreeList: void 0,
                            retryOperationId: null === (_b = error.errorInfo) || void 0 === _b ? void 0 : _b.retryOperationId,
                            interactiveUpdateOptions: enabledOptions
                        }
                    });
                });
            }, GitUpdateEffects.\u0275fac = function(t) {
                return new (t || GitUpdateEffects)(core["\u0275\u0275inject"](ngrx_effects.eX), core["\u0275\u0275inject"](src.Jv), core["\u0275\u0275inject"](error_src.jR), core["\u0275\u0275inject"](notification_src.mn), core["\u0275\u0275inject"](interactive_operations_service_InteractiveOperationsService), core["\u0275\u0275inject"](ngrx_store.yh), core["\u0275\u0275inject"](manifest_src.vC), core["\u0275\u0275inject"](GitConnectionFacade), core["\u0275\u0275inject"](GitUpdateFacade), core["\u0275\u0275inject"](feature_switch_service.V$));
            }, GitUpdateEffects.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: GitUpdateEffects,
                factory: GitUpdateEffects.\u0275fac
            }), GitUpdateEffects;
        }(), telemetry_service = __webpack_require__(54323), GitInitializationEffects = function() {
            function GitInitializationEffects(actions$, gitInitializationClient, gitErrorService, gitNotificationService, interactiveOperationsService, telemetryService, extensionManifestService) {
                var _this = this;
                this.actions$ = actions$, this.gitInitializationClient = gitInitializationClient, 
                this.gitErrorService = gitErrorService, this.gitNotificationService = gitNotificationService, 
                this.interactiveOperationsService = interactiveOperationsService, this.telemetryService = telemetryService, 
                this.extensionManifestService = extensionManifestService, this.initializeGitConnection$ = (0, 
                ngrx_effects.GW)(function() {
                    return _this.actions$.pipe((0, ngrx_effects.l4)(initializeGitConnection), (0, operators_map.U)(function(_a) {
                        return _a.gitInitializationState;
                    }), (0, switchMap.w)(function(gitInitializationState) {
                        return _this.gitInitializationClient.initializeGitConnection(gitInitializationState.workspaceId, _this.gitInitializationRequestFromState(gitInitializationState)).pipe((0, 
                        switchMap.w)(function(gitInitializeResponse) {
                            var gitInitializationStateWithResponse = (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, gitInitializationState), {
                                response: gitInitializeResponse
                            });
                            return _this.mapInitializationStateToActions(gitInitializationStateWithResponse);
                        }), (0, catchError.K)(function(httpError) {
                            var error = _this.gitErrorService.makeGitErrorFromHttpResponse("Git_Initialization_Failed", httpError);
                            return (0, git_src.E6)(error) || _this.interactiveOperationsService.isOptionNotEnabled(error) || _this.gitNotificationService.showErrorNotification(error, "Trident_Git_Toast_Initialize_Fail"), 
                            (0, observable_of.of)(initializeGitConnectionFailure({
                                gitInitializationState,
                                error
                            }));
                        }));
                    }));
                });
            }
            return GitInitializationEffects.prototype.gitInitializationRequestFromState = function(gitInitializationContract) {
                return {
                    mergePolicy: gitInitializationContract.request.mergePolicy
                };
            }, GitInitializationEffects.prototype.mapInitializationStateToActions = function(state) {
                var _a;
                switch (null === (_a = state.response) || void 0 === _a ? void 0 : _a.result) {
                  case src.xU.Completed:
                    if (state.response.incomingChanges && state.response.incomingChanges.length > 0 || state.response.uncommittedChanges && state.response.uncommittedChanges.length > 0 || !state.response.head) {
                        var error = this.gitErrorService.makeClientSideGitError("Git_Initialization_Invalid_Request");
                        return this.gitNotificationService.showErrorNotification(error, "Trident_Git_Toast_Initialize_Fail"), 
                        [ initializeGitConnectionFailure({
                            gitInitializationState: state,
                            error
                        }) ];
                    }
                    return [ initializeGitConnectionSuccess({
                        gitInitializationStateWithResponse: state
                    }), git_sync_actions_getLatestGitAlmOperation({
                        workspaceId: state.workspaceId
                    }) ];

                  case src.xU.UpdateFromGitRequired:
                    if (!state.response.incomingChanges || !state.response.partialSyncBaseCommit) return error = this.gitErrorService.makeClientSideGitError("Git_Initialization_Invalid_Request"), 
                    this.gitNotificationService.showErrorNotification(error, "Trident_Git_Toast_Initialize_Fail"), 
                    [ initializeGitConnectionFailure({
                        gitInitializationState: state,
                        error
                    }) ];
                    var gitUpdateState = this.createUpdateRequestFromState(state);
                    return this.telemetryService.logEvent({
                        name: "Automatic update after initialization",
                        properties: {
                            workspaceId: state.workspaceId,
                            targetCommit: gitUpdateState.request.targetCommit
                        }
                    }), [ initializeGitConnectionSuccess({
                        gitInitializationStateWithResponse: state
                    }), updateFromGit({
                        gitUpdateState,
                        isInitialSync: !0
                    }) ];

                  case src.xU.CommitToGitRequired:
                    var gitCommitState = this.createCommitRequestFromState(state);
                    return null != gitCommitState ? (this.telemetryService.logEvent({
                        name: "Automatic commit after initialization",
                        properties: {
                            workspaceId: state.workspaceId,
                            workspaceHead: gitCommitState.request.workspaceHead
                        }
                    }), [ initializeGitConnectionSuccess({
                        gitInitializationStateWithResponse: state
                    }), git_commit_actions_commitToGit({
                        gitCommitState,
                        isInitialSync: !0
                    }) ]) : (error = this.gitErrorService.makeClientSideGitError("Git_Initialization_Invalid_Request"), 
                    this.gitNotificationService.showErrorNotification(error, "Trident_Git_Toast_Initialize_Fail"), 
                    [ initializeGitConnectionFailure({
                        gitInitializationState: state,
                        error
                    }) ]);

                  default:
                    return error = this.gitErrorService.makeClientSideGitError("Git_Initialization_Invalid_Request"), 
                    this.gitNotificationService.showErrorNotification(error, "Trident_Git_Toast_Initialize_Fail"), 
                    [ initializeGitConnectionFailure({
                        gitInitializationState: state,
                        error
                    }) ];
                }
            }, GitInitializationEffects.prototype.createUpdateRequestFromState = function(state) {
                var _a, response = state.response;
                return {
                    workspaceId: state.workspaceId,
                    request: {
                        targetCommit: null == response ? void 0 : response.partialSyncBaseCommit,
                        workspaceHead: null !== (_a = null == response ? void 0 : response.head) && void 0 !== _a ? _a : null
                    }
                };
            }, GitInitializationEffects.prototype.createCommitRequestFromState = function(state) {
                var _a, _b, _this = this, head = null === (_a = null == state ? void 0 : state.response) || void 0 === _a ? void 0 : _a.head, uncommittedChangesList = null === (_b = null == state ? void 0 : state.response) || void 0 === _b ? void 0 : _b.uncommittedChanges;
                if (!uncommittedChangesList || !head) return this.gitErrorService.handleClientSideGitError(" Git_Commit_Invalid_Request"), 
                null;
                var items, workspaceId, artifacts = uncommittedChangesList.map(function(uncommittedChange) {
                    return convertGitUncommittedChangeToModel(uncommittedChange, _this.extensionManifestService);
                });
                return {
                    workspaceId: state.workspaceId,
                    request: {
                        workspaceHead: head,
                        artifacts,
                        comment: (items = uncommittedChangesList.length, workspaceId = state.workspaceId, 
                        "Committing ".concat(items.toString(), " ").concat(1 === items ? "item" : "items", " from workspace ").concat(workspaceId))
                    }
                };
            }, GitInitializationEffects.\u0275fac = function(t) {
                return new (t || GitInitializationEffects)(core["\u0275\u0275inject"](ngrx_effects.eX), core["\u0275\u0275inject"](src.Zt), core["\u0275\u0275inject"](error_src.jR), core["\u0275\u0275inject"](notification_src.mn), core["\u0275\u0275inject"](interactive_operations_service_InteractiveOperationsService), core["\u0275\u0275inject"](telemetry_service.t), core["\u0275\u0275inject"](manifest_src.vC));
            }, GitInitializationEffects.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: GitInitializationEffects,
                factory: GitInitializationEffects.\u0275fac
            }), GitInitializationEffects;
        }(), GitSyncEffects = function() {
            function GitSyncEffects(actions$, gitSyncClient, gitErrorService) {
                var _this = this;
                this.actions$ = actions$, this.gitSyncClient = gitSyncClient, this.gitErrorService = gitErrorService, 
                this.getLatestGitAlmOperation$ = (0, ngrx_effects.GW)(function() {
                    return _this.actions$.pipe((0, ngrx_effects.l4)(git_sync_actions_getLatestGitAlmOperation), (0, 
                    switchMap.w)(function(_a) {
                        var workspaceId = _a.workspaceId, isInitial = _a.isInitial;
                        return _this.gitSyncClient.getlatestGitOperation(workspaceId).pipe((0, operators_map.U)(function(gitAlmOperation) {
                            return _this.almOperationToSyncModel(gitAlmOperation, workspaceId, isInitial);
                        }), (0, operators_map.U)(function(gitSyncState) {
                            return getLatestGitAlmOperationSuccess({
                                gitSyncState
                            });
                        }), (0, catchError.K)(function() {
                            var error = _this.gitErrorService.makeClientSideGitError("Git_Sync_Failed");
                            return (0, observable_of.of)(getLatestGitAlmOperationFailure({
                                workspaceId,
                                error
                            }));
                        }));
                    }));
                });
            }
            return GitSyncEffects.prototype.almOperationToSyncModel = function(gitAlmOperation, workspaceId, isInitial) {
                var operationType = this.getGitOperationType(gitAlmOperation.operationType), isValid = "0" !== gitAlmOperation.objectId && void 0 !== operationType, operationStatus = this.getGitOperationStatus(gitAlmOperation.status);
                return {
                    isValid,
                    isInitial: !!isInitial,
                    workspaceId,
                    gitOperationId: gitAlmOperation.operationId,
                    gitOperationType: operationType,
                    gitOperationStatus: operationStatus,
                    lastUpdatedTime: new Date(gitAlmOperation.lastUpdatedTime),
                    gitNonInteractiveOperationErrorDetails: this.getNonInteractiveErrorDetails(gitAlmOperation.gitOperationErrorDetailsList),
                    gitInteractiveOperationErrorDetailsList: this.getInteractiveErrorDetails(gitAlmOperation.gitOperationErrorDetailsList)
                };
            }, GitSyncEffects.prototype.getInteractiveErrorDetails = function(gitOperationErrorDetailsList) {
                if (!gitOperationErrorDetailsList || !gitOperationErrorDetailsList.some(function(error) {
                    var _a;
                    return (null === (_a = error.artifactErrorDetails) || void 0 === _a ? void 0 : _a.ErrorCategory) !== git_src.QJ;
                })) return gitOperationErrorDetailsList;
            }, GitSyncEffects.prototype.getNonInteractiveErrorDetails = function(gitOperationErrorDetailsList) {
                if (gitOperationErrorDetailsList) return gitOperationErrorDetailsList.find(function(error) {
                    var _a;
                    return (null === (_a = error.artifactErrorDetails) || void 0 === _a ? void 0 : _a.ErrorCategory) !== git_src.QJ;
                });
            }, GitSyncEffects.prototype.getGitOperationType = function(almOperationType) {
                switch (almOperationType) {
                  case AlmGitOperationType.CommitToGit:
                    return git_src.u9.Commit;

                  case AlmGitOperationType.UpdateFromGit:
                    return git_src.u9.Update;

                  case AlmGitOperationType.InitializeWorkspaceGitConnection:
                    return git_src.u9.Initialize;

                  case AlmGitOperationType.Undo:
                    return git_src.u9.Undo;

                  case AlmGitOperationType.CheckoutBranch:
                    return git_src.u9.CheckoutBranch;

                  case AlmGitOperationType.SwitchBranch:
                    return git_src.u9.SwitchBranch;

                  default:
                    return;
                }
            }, GitSyncEffects.prototype.getGitOperationStatus = function(almOperationStatus) {
                return almOperationStatus < AlmOperationStatus.FinalBase ? git_src.wM.InProgress : almOperationStatus >= AlmOperationStatus.FinalSuccessBase && almOperationStatus < AlmOperationStatus.FinalErrorBase ? git_src.wM.Successful : git_src.wM.Failed;
            }, GitSyncEffects.\u0275fac = function(t) {
                return new (t || GitSyncEffects)(core["\u0275\u0275inject"](ngrx_effects.eX), core["\u0275\u0275inject"](src.WV), core["\u0275\u0275inject"](error_src.jR));
            }, GitSyncEffects.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: GitSyncEffects,
                factory: GitSyncEffects.\u0275fac
            }), GitSyncEffects;
        }(), getGitUndoStoreState = (0, ngrx_store.P1)(getGitState, function(state) {
            return (null == state ? void 0 : state.gitUndo) || git_undo_reducer_initialState;
        }), git_undo_selectors_a = gitUndoAdapter.getSelectors(), git_undo_selectors_selectAll = git_undo_selectors_a.selectAll, git_undo_selectors_selectEntities = git_undo_selectors_a.selectEntities, getAllGitUndoEntities = ((0, 
        ngrx_store.P1)(getGitUndoStoreState, function(state) {
            return git_undo_selectors_selectAll(state);
        }), (0, ngrx_store.P1)(getGitUndoStoreState, function(state) {
            return git_undo_selectors_selectEntities(state);
        })), getGitUndoState = function(workspaceId) {
            return (0, ngrx_store.P1)(getAllGitUndoEntities, function(entities) {
                return entities[workspaceId];
            });
        }, GitUndoFacade = function() {
            function GitUndoFacade(store) {
                this.store = store;
            }
            return GitUndoFacade.prototype.UndoFromGit = function(gitUndoState) {
                return this.store.dispatch(undoFromGit({
                    gitUndoState
                })), this.store.select(getGitUndoState(gitUndoState.workspaceId));
            }, GitUndoFacade.prototype.getUndoState = function(workspaceId) {
                return this.store.select(getGitUndoState(workspaceId)).pipe((0, operators_map.U)(function(gitUndoState) {
                    return gitUndoState && gitUndoState.callState || UndoingState.Initial;
                }));
            }, GitUndoFacade.\u0275fac = function(t) {
                return new (t || GitUndoFacade)(core["\u0275\u0275inject"](ngrx_store.yh));
            }, GitUndoFacade.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: GitUndoFacade,
                factory: GitUndoFacade.\u0275fac,
                providedIn: "root"
            }), GitUndoFacade;
        }(), GitUndoEffects = function() {
            function GitUndoEffects(actions$, gitUndoClient, gitErrorService, gitNotificationService, interactiveOperationsService, gitUndoFacade, gitStatusFacade, gitConnectionFacade, store, featureSwitchService) {
                var _this = this;
                this.actions$ = actions$, this.gitUndoClient = gitUndoClient, this.gitErrorService = gitErrorService, 
                this.gitNotificationService = gitNotificationService, this.interactiveOperationsService = interactiveOperationsService, 
                this.gitUndoFacade = gitUndoFacade, this.gitStatusFacade = gitStatusFacade, this.gitConnectionFacade = gitConnectionFacade, 
                this.store = store, this.featureSwitchService = featureSwitchService, this.undoFromGit$ = (0, 
                ngrx_effects.GW)(function() {
                    return _this.actions$.pipe((0, ngrx_effects.l4)(undoFromGit), (0, operators_map.U)(function(_a) {
                        var gitUndoState = _a.gitUndoState, loadingNotificationId = _this.gitNotificationService.showLoadingNotification("Trident_Git_Toast_Undo_Loading_Title", "Trident_Git_Toast_Undo_Loading_Message");
                        return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, gitUndoState), {
                            notificationId: loadingNotificationId
                        });
                    }), (0, switchMap.w)(function(gitUndoStateWithNotification) {
                        return _this.gitUndoClient.undoCommitArtifacts(gitUndoStateWithNotification.workspaceId, _this.fromGitUndoContractToGitUndoRequest(gitUndoStateWithNotification.request)).pipe((0, 
                        switchMap.w)(function(gitUndoContractResponse) {
                            var gitUndoStateWithResponse = (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, gitUndoStateWithNotification), {
                                response: {
                                    almAciton: gitUndoContractResponse.almOperation
                                }
                            });
                            return [ undoFromGitInProgress({
                                gitUndoState: gitUndoStateWithResponse
                            }) ];
                        }), (0, catchError.K)(function(httpError) {
                            var error = _this.gitErrorService.makeGitErrorFromHttpResponse("Git_InvalidUndoRequest", httpError);
                            return (null == gitUndoStateWithNotification ? void 0 : gitUndoStateWithNotification.notificationId) && (_this.gitNotificationService.showErrorNotification(error, "Trident_Git_Error_Unable_To_Undo_Title", gitUndoStateWithNotification.notificationId), 
                            _this.gitErrorService.showErrorHandlingDialog(error)), (0, observable_of.of)(undoFromGitFailure({
                                gitUndoState: gitUndoStateWithNotification,
                                error
                            }));
                        }));
                    }));
                }), this.getLatestGitAlmOperationSuccess$ = (0, ngrx_effects.GW)(function() {
                    return _this.actions$.pipe((0, ngrx_effects.l4)(getLatestGitAlmOperationSuccess), (0, 
                    operators_map.U)(function(_a) {
                        return _a.gitSyncState;
                    }), (0, filter.h)(function(latestGitOp) {
                        return _this.isLatestOpValid(latestGitOp);
                    }), (0, switchMap.w)(function(gitSyncState) {
                        return _this.store.select(getGitUndoState(gitSyncState.workspaceId)).pipe((0, take.q)(1), (0, 
                        switchMap.w)(function(gitUndoState) {
                            return _this.getUndoActions(gitSyncState, gitUndoState);
                        }));
                    }));
                });
            }
            return GitUndoEffects.prototype.isLatestOpValid = function(latestGitOp) {
                return !!(null == latestGitOp ? void 0 : latestGitOp.isValid) && latestGitOp.gitOperationType === git_src.u9.Undo;
            }, GitUndoEffects.prototype.getUndoActions = function(latestGitOp, gitUndoRecord) {
                var _a, _this = this, gitUndoState = gitUndoRecord && gitUndoRecord.workspaceId === latestGitOp.workspaceId ? {
                    workspaceId: gitUndoRecord.workspaceId,
                    request: gitUndoRecord.request,
                    response: null == gitUndoRecord ? void 0 : gitUndoRecord.response,
                    notificationId: null == gitUndoRecord ? void 0 : gitUndoRecord.notificationId
                } : {
                    workspaceId: latestGitOp.workspaceId,
                    request: void 0
                };
                switch (latestGitOp.gitOperationStatus) {
                  case git_src.wM.Successful:
                    return (null == gitUndoState ? void 0 : gitUndoState.notificationId) && this.gitNotificationService.showSuccessNotification("Trident_Git_Toast_Undo_Success", gitUndoState.notificationId), 
                    this.gitStatusFacade.clearChangesArtifactSelection(gitUndoState.workspaceId), (0, 
                    tslib_es6.__spreadArray)((0, tslib_es6.__spreadArray)([ undoFromGitSuccess({
                        gitUndoStateWithResponse: gitUndoState
                    }) ], getGitStatusActions(gitUndoState.workspaceId, !0, null !== (_a = this.featureSwitchService.featureSwitches.tridentGitStatusAPI) && void 0 !== _a && _a), !0), [ invalidateGitSync({
                        workspaceId: gitUndoState.workspaceId
                    }) ], !1);

                  case git_src.wM.InProgress:
                    return [ undoFromGitInProgress({
                        gitUndoState
                    }) ];

                  case git_src.wM.Failed:
                    var error = this.gitErrorService.handleAlmGitError("AlmOperationFailed_UndoFromGit", latestGitOp);
                    return (null == gitUndoState ? void 0 : gitUndoState.notificationId) && (this.featureSwitchService.featureSwitches.interactiveOperationUI && this.interactiveOperationsService.isOptionNotEnabled(error) ? (this.interactiveOperationsService.showInteractiveOperationsDialog(error, "Trident_Git_Error_Undo_Title", function(error, enabledOptions) {
                        return _this.undoWithInteractiveOptions(error, enabledOptions, latestGitOp.workspaceId);
                    }), this.gitNotificationService.hideCurrentNotification()) : (this.gitNotificationService.showErrorNotification(error, "Trident_Git_Error_Unable_To_Undo_Title", gitUndoState.notificationId), 
                    this.gitErrorService.showErrorHandlingDialog(error))), [ undoFromGitFailureServerError({
                        gitUndoState,
                        error
                    }), invalidateGitSync({
                        workspaceId: gitUndoState.workspaceId
                    }) ];
                }
                return [ undoFromGitInProgress({
                    gitUndoState
                }) ];
            }, GitUndoEffects.prototype.fromGitArtifactToArtifactSelector = function(gitArtifactChange) {
                var _a, _b, _c, gitArtifact = gitArtifactChange.artifact;
                return {
                    artifactType: gitArtifact.artifactType,
                    etag: gitArtifact.etag,
                    objectId: gitArtifact.objectId,
                    logicalId: gitArtifact.logicalId,
                    changeType: null !== (_b = null === (_a = gitArtifactChange.remoteChange) || void 0 === _a ? void 0 : _a.changeType) && void 0 !== _b ? _b : null === (_c = null == gitArtifactChange ? void 0 : gitArtifactChange.workspaceChange) || void 0 === _c ? void 0 : _c.changeType
                };
            }, GitUndoEffects.prototype.fromGitUndoContractToGitUndoRequest = function(GitUndoRequestModel) {
                var _a, _this = this;
                return {
                    artifacts: null === (_a = GitUndoRequestModel.artifacts) || void 0 === _a ? void 0 : _a.map(function(artifact) {
                        return _this.fromGitArtifactToArtifactSelector(artifact);
                    }),
                    workspaceHead: GitUndoRequestModel.workspaceHead,
                    retryOperationId: GitUndoRequestModel.retryOperationId,
                    interactiveUpdateOptions: GitUndoRequestModel.interactiveUpdateOptions
                };
            }, GitUndoEffects.prototype.undoWithInteractiveOptions = function(error, enabledOptions, workspaceId) {
                var _this = this;
                this.gitConnectionFacade.getGitConnection(workspaceId).pipe((0, take.q)(1)).subscribe(function(gitConnection) {
                    var _a, _b;
                    _this.gitUndoFacade.UndoFromGit({
                        workspaceId,
                        request: {
                            workspaceHead: null === (_a = null == gitConnection ? void 0 : gitConnection.gitConnectionDetails) || void 0 === _a ? void 0 : _a.head,
                            artifacts: void 0,
                            retryOperationId: null === (_b = error.errorInfo) || void 0 === _b ? void 0 : _b.retryOperationId,
                            interactiveUpdateOptions: enabledOptions
                        }
                    });
                });
            }, GitUndoEffects.\u0275fac = function(t) {
                return new (t || GitUndoEffects)(core["\u0275\u0275inject"](ngrx_effects.eX), core["\u0275\u0275inject"](src.nD), core["\u0275\u0275inject"](error_src.jR), core["\u0275\u0275inject"](notification_src.mn), core["\u0275\u0275inject"](interactive_operations_service_InteractiveOperationsService), core["\u0275\u0275inject"](GitUndoFacade), core["\u0275\u0275inject"](GitStatusFacade), core["\u0275\u0275inject"](GitConnectionFacade), core["\u0275\u0275inject"](ngrx_store.yh), core["\u0275\u0275inject"](feature_switch_service.V$));
            }, GitUndoEffects.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: GitUndoEffects,
                factory: GitUndoEffects.\u0275fac
            }), GitUndoEffects;
        }(), getgitSwitchBranchStoreState = (0, ngrx_store.P1)(getGitState, function(state) {
            return (null == state ? void 0 : state.gitSwitchBranch) || git_switch_branch_reducer_initialState;
        }), git_switch_branch_selectors_a = gitSwitchBranchAdapter.getSelectors(), git_switch_branch_selectors_selectAll = git_switch_branch_selectors_a.selectAll, git_switch_branch_selectors_selectEntities = git_switch_branch_selectors_a.selectEntities, getAllGitSwitchBranchEntities = ((0, 
        ngrx_store.P1)(getgitSwitchBranchStoreState, function(state) {
            return git_switch_branch_selectors_selectAll(state);
        }), (0, ngrx_store.P1)(getgitSwitchBranchStoreState, function(state) {
            return git_switch_branch_selectors_selectEntities(state);
        })), getGitSwitchBranchState = function(workspaceId) {
            return (0, ngrx_store.P1)(getAllGitSwitchBranchEntities, function(entities) {
                return entities[workspaceId];
            });
        }, GitSwitchBranchEffects = function() {
            function GitSwitchBranchEffects(actions$, gitSwitchBranchClient, gitErrorService, gitNotificationService, store, featureSwitchService) {
                var _this = this;
                this.actions$ = actions$, this.gitSwitchBranchClient = gitSwitchBranchClient, this.gitErrorService = gitErrorService, 
                this.gitNotificationService = gitNotificationService, this.store = store, this.featureSwitchService = featureSwitchService, 
                this.gitSwitchBranch$ = (0, ngrx_effects.GW)(function() {
                    return _this.actions$.pipe((0, ngrx_effects.l4)(gitSwitchBranch), (0, operators_map.U)(function(_a) {
                        var gitSwitchBranchState = _a.gitSwitchBranchState, loadingNotificationId = _this.gitNotificationService.showLoadingNotification("Trident_Git_Toast_Switch_Branch_Switching_In_Progress_Message");
                        return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, gitSwitchBranchState), {
                            notificationId: loadingNotificationId
                        });
                    }), (0, switchMap.w)(function(gitSwitchBranchStateWithNotification) {
                        return _this.gitSwitchBranchClient.switchBranch(gitSwitchBranchStateWithNotification.workspaceId, gitSwitchBranchStateWithNotification.request).pipe((0, 
                        switchMap.w)(function(gitSwitchBranchContractResponse) {
                            var switchBranchResponse = (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, gitSwitchBranchStateWithNotification), {
                                response: {
                                    almOperation: gitSwitchBranchContractResponse.almOperation
                                }
                            });
                            return _this.gitNotificationService.showSuccessNotification("Trident_Git_Toast_Switch_Branch_Success_Message", gitSwitchBranchStateWithNotification.notificationId), 
                            [ gitSwitchBranchInProgress({
                                gitSwitchBranchState: switchBranchResponse
                            }) ];
                        }), (0, catchError.K)(function(httpError) {
                            var gitError = _this.gitErrorService.makeGitErrorFromHttpResponse("Git_Switch_Branch_Failed", httpError), gitErrorType = _this.convertToSwitchBranchSpecficError(gitError), error = _this.gitErrorService.handleSyncGitError(gitErrorType, httpError);
                            return (null == gitSwitchBranchStateWithNotification ? void 0 : gitSwitchBranchStateWithNotification.notificationId) && _this.gitNotificationService.showErrorNotification(error, "Trident_Git_Error_Unable_To_Switch_Branch_Title", gitSwitchBranchStateWithNotification.notificationId), 
                            (0, observable_of.of)(gitSwitchBranchFailure({
                                gitSwitchBranchState: gitSwitchBranchStateWithNotification,
                                error
                            }));
                        }));
                    }));
                }), this.getLatestGitAlmOperationSuccess$ = (0, ngrx_effects.GW)(function() {
                    return _this.actions$.pipe((0, ngrx_effects.l4)(getLatestGitAlmOperationSuccess), (0, 
                    operators_map.U)(function(_a) {
                        return _a.gitSyncState;
                    }), (0, filter.h)(function(latestGitOp) {
                        return _this.isLatestOpValid(latestGitOp);
                    }), (0, switchMap.w)(function(gitSyncState) {
                        return _this.store.select(getGitSwitchBranchState(gitSyncState.workspaceId)).pipe((0, 
                        take.q)(1), (0, switchMap.w)(function(gitSwitchBranchState) {
                            return _this.getSwitchBranchActions(gitSyncState, gitSwitchBranchState);
                        }));
                    }));
                });
            }
            return GitSwitchBranchEffects.prototype.getSwitchBranchActions = function(latestGitOp, gitSwitchBranchRecord) {
                var _a, switchBranchStateWithResponse = gitSwitchBranchRecord && gitSwitchBranchRecord.workspaceId === latestGitOp.workspaceId ? (0, 
                tslib_es6.__assign)({}, gitSwitchBranchRecord) : {
                    workspaceId: latestGitOp.workspaceId,
                    request: void 0
                };
                if (latestGitOp) switch (latestGitOp.gitOperationStatus) {
                  case git_src.wM.Successful:
                    return (null == switchBranchStateWithResponse ? void 0 : switchBranchStateWithResponse.notificationId) && this.gitNotificationService.showSuccessNotification("Trident_Git_Toast_Switch_Branch_Syncing_Completed_Message", switchBranchStateWithResponse.notificationId), 
                    (0, tslib_es6.__spreadArray)((0, tslib_es6.__spreadArray)([ gitSwitchBranchSuccess({
                        gitSwitchBranchState: switchBranchStateWithResponse
                    }) ], getGitStatusActions(switchBranchStateWithResponse.workspaceId, !0, null !== (_a = this.featureSwitchService.featureSwitches.tridentGitStatusAPI) && void 0 !== _a && _a), !0), [ invalidateGitSync({
                        workspaceId: switchBranchStateWithResponse.workspaceId
                    }) ], !1);

                  case git_src.wM.InProgress:
                    return this.setInProgress(switchBranchStateWithResponse);

                  default:
                    var error = this.gitErrorService.handleAlmGitError("AlmOperationFailed_SwitchGitBranch", latestGitOp);
                    return (null == switchBranchStateWithResponse ? void 0 : switchBranchStateWithResponse.notificationId) && this.gitNotificationService.showErrorNotification(error, "Trident_Git_Error_Unable_To_Switch_Branch_Title", switchBranchStateWithResponse.notificationId), 
                    [ gitSwitchBranchFailureServerError({
                        gitSwitchBranchState: switchBranchStateWithResponse
                    }), invalidateGitSync({
                        workspaceId: switchBranchStateWithResponse.workspaceId
                    }) ];
                }
                return [ gitSwitchBranchInProgress({
                    gitSwitchBranchState: switchBranchStateWithResponse
                }) ];
            }, GitSwitchBranchEffects.prototype.setInProgress = function(gitSwitchBranchRecord) {
                var notificationId = this.gitNotificationService.showLoadingNotification("Trident_Git_Toast_Switch_Branch_Syncing_In_Progress_Message");
                return [ gitSwitchBranchInProgress({
                    gitSwitchBranchState: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, gitSwitchBranchRecord), {
                        notificationId
                    })
                }) ];
            }, GitSwitchBranchEffects.prototype.isLatestOpValid = function(latestGitOp) {
                return !!(null == latestGitOp ? void 0 : latestGitOp.isValid) && latestGitOp.gitOperationType === git_src.u9.SwitchBranch;
            }, GitSwitchBranchEffects.prototype.convertToSwitchBranchSpecficError = function(gitError) {
                if (void 0 === gitError) return "Git_Switch_Branch_Invalid_Request";
                if ((0, git_src.yG)(gitError)) return "Git_Switch_Branch_Item_Not_Found";
                switch ((0, git_src.lz)(gitError).errorType) {
                  case "Git_MissingDependencies":
                    return "Git_MissingDependenciesSwitchBranch";

                  case "Git_CyclicDependencyDetected":
                    return "Git_CyclicDependencyDetectedSwitchBranch";

                  default:
                    return "Git_Switch_Branch_Invalid_Request";
                }
            }, GitSwitchBranchEffects.\u0275fac = function(t) {
                return new (t || GitSwitchBranchEffects)(core["\u0275\u0275inject"](ngrx_effects.eX), core["\u0275\u0275inject"](src.ZH), core["\u0275\u0275inject"](error_src.jR), core["\u0275\u0275inject"](notification_src.mn), core["\u0275\u0275inject"](ngrx_store.yh), core["\u0275\u0275inject"](feature_switch_service.V$));
            }, GitSwitchBranchEffects.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: GitSwitchBranchEffects,
                factory: GitSwitchBranchEffects.\u0275fac
            }), GitSwitchBranchEffects;
        }(), tap = __webpack_require__(17653), router = __webpack_require__(9398), GitBranchOutEffects = function() {
            function GitBranchOutEffects(actions$, router, gitBranchOutClient, gitErrorService, gitNotificationService) {
                var _this = this;
                this.actions$ = actions$, this.router = router, this.gitBranchOutClient = gitBranchOutClient, 
                this.gitErrorService = gitErrorService, this.gitNotificationService = gitNotificationService, 
                this.gitBranchOut$ = (0, ngrx_effects.GW)(function() {
                    return _this.actions$.pipe((0, ngrx_effects.l4)(git_branch_out_actions_gitBranchOut), (0, 
                    operators_map.U)(function(_a) {
                        var gitBranchOutState = _a.gitBranchOutState, loadingNotificationId = _this.gitNotificationService.showLoadingNotification("Trident_Git_Branch_Out", "Trident_Git_Toast_Branch_Out_In_Progress_Message");
                        return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, gitBranchOutState), {
                            notificationId: loadingNotificationId
                        });
                    }), (0, switchMap.w)(function(gitBranchOutStateWithNotification) {
                        return _this.gitBranchOutClient.branchOut(gitBranchOutStateWithNotification.workspaceId, gitBranchOutStateWithNotification.request).pipe((0, 
                        switchMap.w)(function(gitBranchOutResponse) {
                            var branchOutResponse = (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, gitBranchOutStateWithNotification), {
                                response: gitBranchOutResponse
                            });
                            return [ gitBranchOutSuccess({
                                gitBranchOutState: branchOutResponse
                            }) ];
                        }), (0, catchError.K)(function(httpError) {
                            var gitError = _this.gitErrorService.makeGitErrorFromHttpResponse("Git_Branch_Out_Failed", httpError), branchOutErrorState = "Git_Branch_Out_Failed" !== (0, 
                            git_src.lz)(gitError).errorType && function(response, presetnState) {
                                var _a, _b, _c, _d, _e, errorDetailsStr = null === (_e = null === (_d = null === (_c = null === (_b = null === (_a = response.error) || void 0 === _a ? void 0 : _a["pbi.error"]) || void 0 === _b ? void 0 : _b.details) || void 0 === _c ? void 0 : _c[0]) || void 0 === _d ? void 0 : _d.detail) || void 0 === _e ? void 0 : _e.value;
                                if (errorDetailsStr) try {
                                    var errorDetails = JSON.parse(errorDetailsStr);
                                    if (null == errorDetails ? void 0 : errorDetails.errorSpecificData) {
                                        var groupAsFolder = JSON.parse(errorDetails.errorSpecificData);
                                        if (groupAsFolder) return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, presetnState), {
                                            response: {
                                                folder: groupAsFolder
                                            }
                                        });
                                    }
                                } catch (error) {
                                    return null;
                                }
                                return null;
                            }(httpError, gitBranchOutStateWithNotification) || gitBranchOutStateWithNotification;
                            return (null == gitBranchOutStateWithNotification ? void 0 : gitBranchOutStateWithNotification.notificationId) && _this.gitNotificationService.showErrorNotification(gitError, "Trident_Git_Error_Unable_To_Branch_Out_Git_Branch_Fail_Title", gitBranchOutStateWithNotification.notificationId), 
                            (0, observable_of.of)(gitBranchOutFailure({
                                gitBranchOutState: branchOutErrorState,
                                error: gitError
                            }));
                        }));
                    }));
                }), this.gitBranchOutSuccess$ = (0, ngrx_effects.GW)(function() {
                    return _this.actions$.pipe((0, ngrx_effects.l4)(gitBranchOutSuccess), (0, switchMap.w)(function(_a) {
                        var _b, _c, _d, gitBranchOutState = _a.gitBranchOutState;
                        if (null === (_b = null == gitBranchOutState ? void 0 : gitBranchOutState.response) || void 0 === _b ? void 0 : _b.initializeConnectionStatus) {
                            var gitUpdateState = gitBranchOutState.response.initializeConnectionStatus.incomingChanges && (null === (_d = null === (_c = gitBranchOutState.response) || void 0 === _c ? void 0 : _c.initializeConnectionStatus) || void 0 === _d ? void 0 : _d.incomingChanges.length) > 0 ? _this.createUpdateRequestFromState(gitBranchOutState) : void 0;
                            return (0, observable_of.of)(gitBranchOutSyncFolder({
                                gitBranchOutState,
                                gitUpdateState
                            }));
                        }
                        var error = _this.gitErrorService.makeClientSideGitError("Git_Invalid_Connection_Details");
                        return _this.gitNotificationService.showErrorNotification(error, "Trident_Git_Error_Git_Invalid_Connection_Details_Title"), 
                        (0, observable_of.of)(gitBranchOutFailure({
                            gitBranchOutState,
                            error
                        }));
                    }));
                }), this.gitBranchOutCompleted$ = (0, ngrx_effects.GW)(function() {
                    return _this.actions$.pipe((0, ngrx_effects.l4)(gitBranchOutCompleted), (0, tap.b)(function(action) {
                        var _a, _b, _c;
                        _this.navigateToNewWorkspace(null === (_a = action.gitBranchOutState.response) || void 0 === _a ? void 0 : _a.folder.objectId), 
                        (null === (_b = action.gitBranchOutState) || void 0 === _b ? void 0 : _b.notificationId) && _this.gitNotificationService.showSuccessNotification("Trident_Git_Toast_Branch_Out_Success_Message", null === (_c = action.gitBranchOutState) || void 0 === _c ? void 0 : _c.notificationId);
                    }));
                }, {
                    dispatch: !1
                });
            }
            return GitBranchOutEffects.prototype.createUpdateRequestFromState = function(state) {
                var _a, _b, _c, response = null === (_a = state.response) || void 0 === _a ? void 0 : _a.initializeConnectionStatus, targetWorkspaceId = null === (_b = state.response) || void 0 === _b ? void 0 : _b.folder.objectId;
                if (response && targetWorkspaceId) return {
                    workspaceId: targetWorkspaceId,
                    request: {
                        targetCommit: response.partialSyncBaseCommit,
                        workspaceHead: null !== (_c = response.head) && void 0 !== _c ? _c : null
                    }
                };
            }, GitBranchOutEffects.prototype.navigateToNewWorkspace = function(targetWorkspaceId) {
                this.router.navigate([ "/groups/".concat(targetWorkspaceId, "/") ], {
                    queryParamsHandling: "preserve"
                });
            }, GitBranchOutEffects.\u0275fac = function(t) {
                return new (t || GitBranchOutEffects)(core["\u0275\u0275inject"](ngrx_effects.eX), core["\u0275\u0275inject"](router.F0), core["\u0275\u0275inject"](src.su), core["\u0275\u0275inject"](error_src.jR), core["\u0275\u0275inject"](notification_src.mn));
            }, GitBranchOutEffects.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: GitBranchOutEffects,
                factory: GitBranchOutEffects.\u0275fac
            }), GitBranchOutEffects;
        }();
        function filterDatasourceGitHub(responseContract) {
            var parsedConnectionDetails = JSON.parse(responseContract.connectionDetails);
            return (0, src.h_)(parsedConnectionDetails) && "GitHubSourceControl" === parsedConnectionDetails.extensionDataSourceKind;
        }
        function convertDatasourceContractToModelGitHub(responseContract) {
            var parsedConnectionDetails = JSON.parse(responseContract.connectionDetails);
            return {
                id: responseContract.id,
                datasourceName: responseContract.datasourceName,
                url: (0, src.h_)(parsedConnectionDetails) ? parsedConnectionDetails.extensionDataSourcePath : "https://github.com"
            };
        }
        function convertCreateDatasourceRequestModelToContractGitHub(requestModel) {
            return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, git_src.I), {
                datasourceName: requestModel.displayName,
                datasourceType: git_src.LO,
                connectionDetails: JSON.stringify((null == requestModel ? void 0 : requestModel.repositoryUrl) ? {
                    url: null == requestModel ? void 0 : requestModel.repositoryUrl
                } : {}),
                mashupTestConnectionDetails: {
                    functionName: "GitHubSourceControl.Contents",
                    parameters: [ (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, git_src.cW), {
                        value: null == requestModel ? void 0 : requestModel.repositoryUrl
                    }) ]
                },
                credentialDetails: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, git_src.f7), {
                    credentials: JSON.stringify({
                        credentialData: [ {
                            name: "key",
                            value: requestModel.personalAccessToken
                        } ]
                    })
                })
            });
        }
        var GitDatasourcesEffects = function() {
            function GitDatasourcesEffects(actions$, gitDatasourceClient, gitErrorService, gitNotificationService) {
                var _this = this;
                this.actions$ = actions$, this.gitDatasourceClient = gitDatasourceClient, this.gitErrorService = gitErrorService, 
                this.gitNotificationService = gitNotificationService, this.loadDatasources$ = (0, 
                ngrx_effects.GW)(function() {
                    return _this.actions$.pipe((0, ngrx_effects.l4)(loadDatasources), (0, switchMap.w)(function(_a) {
                        var _b, _c, gitDatasourceRequest = _a.gitDatasourceRequest, convertFunc = null === (_b = _this.gitDatasourcesConfigRecord[gitDatasourceRequest.gitProviderType]) || void 0 === _b ? void 0 : _b.convertDatasourceContractToModel, filterFunc = null === (_c = _this.gitDatasourcesConfigRecord[gitDatasourceRequest.gitProviderType]) || void 0 === _c ? void 0 : _c.filterDatasource;
                        if (!convertFunc || !filterFunc) {
                            var error = _this.gitErrorService.makeClientSideGitError("Git_UnsupportedGitProvider");
                            return (0, observable_of.of)(loadDatasourcesFailure({
                                workspaceId: gitDatasourceRequest.workspaceId,
                                error
                            }));
                        }
                        return _this.gitDatasourceClient.discoverDatasources().pipe((0, take.q)(1), (0, 
                        operators_map.U)(function(list) {
                            return list.value.filter(filterFunc);
                        }), (0, operators_map.U)(function(filteredList) {
                            return filteredList.map(convertFunc);
                        }), (0, switchMap.w)(function(datasources) {
                            var _a, datasourcesState = {
                                workspaceId: gitDatasourceRequest.workspaceId,
                                datasourcesRecord: (_a = {}, _a[gitDatasourceRequest.gitProviderType] = datasources, 
                                _a)
                            };
                            return (0, observable_of.of)(loadDatasourcesSuccess({
                                gitDatasourcesState: datasourcesState
                            }));
                        }), (0, catchError.K)(function(error) {
                            var gitError = _this.gitErrorService.makeGitErrorFromHttpResponse("Git_Load_Datasources_Failed", error);
                            return (0, observable_of.of)(loadDatasourcesFailure({
                                workspaceId: gitDatasourceRequest.workspaceId,
                                error: gitError
                            }));
                        }));
                    }));
                }), this.createDatasource$ = (0, ngrx_effects.GW)(function() {
                    return _this.actions$.pipe((0, ngrx_effects.l4)(createDatasource), (0, switchMap.w)(function(_a) {
                        var _b, request = _a.request, loadingNotificationId = _this.gitNotificationService.showLoadingNotification("Trident_Git_Toast_Add_Account_In_Progress_Title", "Trident_Git_Toast_Add_Account_In_Progress_Message"), convertFunc = null === (_b = _this.gitDatasourcesConfigRecord[request.gitProviderType]) || void 0 === _b ? void 0 : _b.convertCreateDatasourceRequestModelToContract;
                        if (!convertFunc) {
                            var error = _this.gitErrorService.makeClientSideGitError("Git_UnsupportedGitProvider");
                            return _this.gitNotificationService.showErrorNotification(error, "Trident_Git_Toast_Add_Account_Fail_Title", loadingNotificationId), 
                            (0, observable_of.of)(createDatasourceFailure({
                                workspaceId: request.workspaceId,
                                error
                            }));
                        }
                        var loadDatasourcesRequest = {
                            workspaceId: request.workspaceId,
                            gitProviderType: request.gitProviderType
                        };
                        return _this.gitDatasourceClient.createDatasource(convertFunc(request)).pipe((0, 
                        switchMap.w)(function(id) {
                            return _this.gitNotificationService.showSuccessNotification("Trident_Git_Toast_Add_Account_Success", loadingNotificationId), 
                            [ createDatasourceSuccess({
                                workspaceId: request.workspaceId,
                                datasourceResponse: id
                            }), loadDatasources({
                                gitDatasourceRequest: loadDatasourcesRequest
                            }) ];
                        }), (0, catchError.K)(function(error) {
                            var gitError = _this.gitErrorService.makeGitErrorFromHttpResponse("Git_Create_Datasource_Failed", error);
                            return _this.gitNotificationService.showErrorNotification(gitError, "Trident_Git_Toast_Add_Account_Fail_Title", loadingNotificationId), 
                            (0, observable_of.of)(createDatasourceFailure({
                                workspaceId: request.workspaceId,
                                error: gitError
                            }));
                        }));
                    }));
                }), this.gitDatasourcesConfigRecord = function() {
                    var _a;
                    return (_a = {})[git_src.IS.AzureDevOps] = {}, _a[git_src.IS.GitHub] = {
                        filterDatasource: filterDatasourceGitHub,
                        convertDatasourceContractToModel: convertDatasourceContractToModelGitHub,
                        convertCreateDatasourceRequestModelToContract: convertCreateDatasourceRequestModelToContractGitHub
                    }, _a;
                }();
            }
            return GitDatasourcesEffects.\u0275fac = function(t) {
                return new (t || GitDatasourcesEffects)(core["\u0275\u0275inject"](ngrx_effects.eX), core["\u0275\u0275inject"](src.aw), core["\u0275\u0275inject"](error_src.jR), core["\u0275\u0275inject"](notification_src.mn));
            }, GitDatasourcesEffects.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: GitDatasourcesEffects,
                factory: GitDatasourcesEffects.\u0275fac
            }), GitDatasourcesEffects;
        }(), GitRepairItemsEffects = function() {
            function GitRepairItemsEffects(actions$, gitNotificationService, gitErrorService, gitRepairClient) {
                var _this = this;
                this.actions$ = actions$, this.gitNotificationService = gitNotificationService, 
                this.gitErrorService = gitErrorService, this.gitRepairClient = gitRepairClient, 
                this.gitRepairItems$ = (0, ngrx_effects.GW)(function() {
                    return _this.actions$.pipe((0, ngrx_effects.l4)(git_repair_actions_gitRepairItems), (0, 
                    operators_map.U)(function(_a) {
                        var gitRepairState = _a.gitRepairState, loadingNotificationId = _this.gitNotificationService.showLoadingNotification("Trident_Git_Toast_Repair_Loading_Message");
                        return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, gitRepairState), {
                            notificationId: loadingNotificationId
                        });
                    }), (0, switchMap.w)(function(stateWithNotification) {
                        return _this.gitRepairClient.gitRepairItems(stateWithNotification.workspaceId, stateWithNotification.request).pipe((0, 
                        switchMap.w)(function(gitRepairItemsResponse) {
                            var gitRepairStateWithResponse = (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, stateWithNotification), {
                                response: gitRepairItemsResponse
                            });
                            return (0, observable_of.of)(gitRepairItemsSuccess({
                                gitRepairStateWithResponse
                            }));
                        }), (0, catchError.K)(function(httpError) {
                            var error = _this.gitErrorService.makeGitErrorFromHttpResponse("Git_Repair_Items_Failed", httpError);
                            return (null == stateWithNotification ? void 0 : stateWithNotification.notificationId) && (_this.gitNotificationService.showErrorNotification(error, "Trident_Git_Error_Unable_To_Repair_Items_Title", stateWithNotification.notificationId), 
                            _this.gitErrorService.showErrorHandlingDialog(error)), (0, observable_of.of)(gitRepairItemsFailure({
                                gitRepairState: stateWithNotification,
                                error
                            }));
                        }));
                    }));
                });
            }
            return GitRepairItemsEffects.\u0275fac = function(t) {
                return new (t || GitRepairItemsEffects)(core["\u0275\u0275inject"](ngrx_effects.eX), core["\u0275\u0275inject"](notification_src.mn), core["\u0275\u0275inject"](error_src.jR), core["\u0275\u0275inject"](src.P9));
            }, GitRepairItemsEffects.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: GitRepairItemsEffects,
                factory: GitRepairItemsEffects.\u0275fac
            }), GitRepairItemsEffects;
        }(), DataGitModule = function() {
            function DataGitModule() {}
            return DataGitModule.\u0275fac = function(t) {
                return new (t || DataGitModule);
            }, DataGitModule.\u0275mod = core["\u0275\u0275defineNgModule"]({
                type: DataGitModule
            }), DataGitModule.\u0275inj = core["\u0275\u0275defineInjector"]({
                imports: [ ngrx_store.Aw.forFeature("git", reducers), ngrx_effects.sQ.forFeature([ GitStatusEffects ]), ngrx_effects.sQ.forFeature([ GitConnectionEffects ]), ngrx_effects.sQ.forFeature([ GitCommitEffects ]), ngrx_effects.sQ.forFeature([ GitUpdateEffects ]), ngrx_effects.sQ.forFeature([ GitInitializationEffects ]), ngrx_effects.sQ.forFeature([ GitSyncEffects ]), ngrx_effects.sQ.forFeature([ GitUndoEffects ]), ngrx_effects.sQ.forFeature([ GitSwitchBranchEffects ]), ngrx_effects.sQ.forFeature([ GitBranchOutEffects ]), ngrx_effects.sQ.forFeature([ GitDatasourcesEffects ]), ngrx_effects.sQ.forFeature([ GitRepairItemsEffects ]), src.Ug ]
            }), DataGitModule;
        }(), getGitInitializationStoreState = (0, ngrx_store.P1)(getGitState, function(state) {
            return (null == state ? void 0 : state.gitInitialization) || git_initialization_reducer_initialState;
        }), git_initialization_selectors_a = gitInitializationAdapter.getSelectors(), git_initialization_selectors_selectAll = git_initialization_selectors_a.selectAll, git_initialization_selectors_selectEntities = git_initialization_selectors_a.selectEntities, getAllGitInitializationEntities = ((0, 
        ngrx_store.P1)(getGitInitializationStoreState, function(state) {
            return git_initialization_selectors_selectAll(state);
        }), (0, ngrx_store.P1)(getGitInitializationStoreState, function(state) {
            return git_initialization_selectors_selectEntities(state);
        })), GitInitializeFacade = function() {
            function GitInitializeFacade(store) {
                this.store = store;
            }
            return GitInitializeFacade.prototype.getGitInitializationState = function(workspaceId) {
                return this.store.select(function(workspaceId) {
                    return (0, ngrx_store.P1)(getAllGitInitializationEntities, function(entities) {
                        return entities[workspaceId];
                    });
                }(workspaceId));
            }, GitInitializeFacade.prototype.initializeGitConnection = function(gitInitializationState) {
                return this.store.dispatch(initializeGitConnection({
                    gitInitializationState
                })), this.getGitInitializationState(gitInitializationState.workspaceId);
            }, GitInitializeFacade.prototype.invalidateGitConnectionInitialization = function(workspaceId) {
                return this.store.dispatch(invalidateGitConnectionInitialization({
                    workspaceId
                })), (0, observable_of.of)(void 0);
            }, GitInitializeFacade.prototype.getGitInitializationCallState = function(workspaceId) {
                return this.getGitInitializationState(workspaceId).pipe((0, operators_map.U)(function(gitInitialization) {
                    return gitInitialization && gitInitialization.callState || ConnectionOperationState.Initial;
                }));
            }, GitInitializeFacade.\u0275fac = function(t) {
                return new (t || GitInitializeFacade)(core["\u0275\u0275inject"](ngrx_store.yh));
            }, GitInitializeFacade.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: GitInitializeFacade,
                factory: GitInitializeFacade.\u0275fac,
                providedIn: "root"
            }), GitInitializeFacade;
        }(), getGitSyncStoreState = (0, ngrx_store.P1)(getGitState, function(state) {
            return (null == state ? void 0 : state.gitSync) || git_sync_reducer_initialState;
        }), git_sync_selectors_a = gitSyncAdapter.getSelectors(), git_sync_selectors_selectAll = git_sync_selectors_a.selectAll, git_sync_selectors_selectEntities = git_sync_selectors_a.selectEntities, getgitProgressIndicatorState = ((0, 
        ngrx_store.P1)(getGitSyncStoreState, function(state) {
            return git_sync_selectors_selectAll(state);
        }), (0, ngrx_store.P1)(getGitSyncStoreState, function(state) {
            return git_sync_selectors_selectEntities(state);
        }), (0, ngrx_store.P1)(getGitState, function(state) {
            return (null == state ? void 0 : state.gitProgressIndicator) || git_progressIndicator_reducer_initialState;
        })), git_progressIndicator_selectors_a = gitProgressIndicatorAdapter.getSelectors(), git_progressIndicator_selectors_selectAll = git_progressIndicator_selectors_a.selectAll, git_progressIndicator_selectors_selectEntities = git_progressIndicator_selectors_a.selectEntities, GitSwitchBranchFacade = ((0, 
        ngrx_store.P1)(getgitProgressIndicatorState, function(state) {
            return git_progressIndicator_selectors_selectAll(state);
        }), (0, ngrx_store.P1)(getgitProgressIndicatorState, function(state) {
            return git_progressIndicator_selectors_selectEntities(state);
        }), function() {
            function GitSwitchBranchFacade(store) {
                this.store = store;
            }
            return GitSwitchBranchFacade.prototype.switchBranch = function(gitSwitchBranchState) {
                return this.store.dispatch(gitSwitchBranch({
                    gitSwitchBranchState
                })), this.store.select(getGitSwitchBranchState(gitSwitchBranchState.workspaceId));
            }, GitSwitchBranchFacade.prototype.getSwitchBranchState = function(workspaceId) {
                return this.store.select(getGitSwitchBranchState(workspaceId)).pipe((0, operators_map.U)(function(gitSwitchBranchState) {
                    return gitSwitchBranchState && gitSwitchBranchState.callState || SwitchBranchState.Initial;
                }));
            }, GitSwitchBranchFacade.\u0275fac = function(t) {
                return new (t || GitSwitchBranchFacade)(core["\u0275\u0275inject"](ngrx_store.yh));
            }, GitSwitchBranchFacade.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: GitSwitchBranchFacade,
                factory: GitSwitchBranchFacade.\u0275fac,
                providedIn: "root"
            }), GitSwitchBranchFacade;
        }()), getGitStorageSelectionState = (0, ngrx_store.P1)(getGitState, function(state) {
            return (null == state ? void 0 : state.gitSessionStorage) || session_storage_reducer_initialState;
        }), session_storage_selectors_a = GitSessionStorageAdapter.getSelectors(), session_storage_selectors_selectAll = session_storage_selectors_a.selectAll, session_storage_selectors_selectEntities = session_storage_selectors_a.selectEntities, getAllGitSessionStorageEntities = ((0, 
        ngrx_store.P1)(getGitStorageSelectionState, function(state) {
            return session_storage_selectors_selectAll(state);
        }), (0, ngrx_store.P1)(getGitStorageSelectionState, function(state) {
            return session_storage_selectors_selectEntities(state);
        })), GitSessionStorageService = function() {
            function GitSessionStorageService(store) {
                this.store = store;
            }
            return GitSessionStorageService.prototype.selectGitProviderType = function(workspaceId, gitProviderType) {
                this.store.dispatch(selectGitProviderType({
                    workspaceId,
                    gitProviderType
                }));
            }, GitSessionStorageService.prototype.selectDatasource = function(workspaceId, datasourceOID) {
                this.store.dispatch(selectDatasource({
                    workspaceId,
                    datasourceOID
                }));
            }, GitSessionStorageService.prototype.selectTempDatasource = function(workspaceId, datasourceOID) {
                this.store.dispatch(selectTempDatasource({
                    workspaceId,
                    datasourceOID
                }));
            }, GitSessionStorageService.prototype.selectOrganization = function(workspaceId, organization) {
                this.store.dispatch(selectOrganization({
                    workspaceId,
                    organization
                }));
            }, GitSessionStorageService.prototype.selectRepository = function(workspaceId, repository) {
                this.store.dispatch(selectRepository({
                    workspaceId,
                    repository
                }));
            }, GitSessionStorageService.prototype.selectBranch = function(workspaceId, branch) {
                this.store.dispatch(selectBranch({
                    workspaceId,
                    branch
                }));
            }, GitSessionStorageService.prototype.selectRootDirectory = function(workspaceId, directory) {
                this.store.dispatch(selectRootDirectory({
                    workspaceId,
                    directory
                }));
            }, GitSessionStorageService.prototype.selectUserAccount = function(workspaceId, userAccount) {
                this.store.dispatch(selectUserAccount({
                    workspaceId,
                    userAccount
                }));
            }, GitSessionStorageService.prototype.setDatasourceUrl = function(workspaceId, organization, repository) {
                this.store.dispatch(setDatasourceUrl({
                    workspaceId,
                    organization,
                    repository
                }));
            }, GitSessionStorageService.prototype.selectWorkspaceCapacity = function(workspaceId, isWorkspaceOnCapacity) {
                this.store.dispatch(selectWorkspaceOnCapacity({
                    workspaceId,
                    isWorkspaceOnCapacity
                }));
            }, GitSessionStorageService.prototype.resetDatasourceUrl = function(workspaceId) {
                this.store.dispatch(resetDatasourceUrl({
                    workspaceId
                }));
            }, GitSessionStorageService.prototype.loadGitSessionStorage = function(workspaceId) {
                return this.store.select(function(workspaceId) {
                    return (0, ngrx_store.P1)(getAllGitSessionStorageEntities, function(entities) {
                        return entities[workspaceId];
                    });
                }(workspaceId)).pipe((0, operators_map.U)(function(sessionState) {
                    return null != sessionState ? sessionState : {
                        workspaceId
                    };
                }));
            }, GitSessionStorageService.prototype.configureCredentials = function(workspaceId) {
                this.store.dispatch(configureCredentials({
                    workspaceId
                }));
            }, GitSessionStorageService.prototype.deleteCredentials = function(workspaceId) {
                this.store.dispatch(deleteCredentials({
                    workspaceId
                }));
            }, GitSessionStorageService.\u0275fac = function(t) {
                return new (t || GitSessionStorageService)(core["\u0275\u0275inject"](ngrx_store.yh));
            }, GitSessionStorageService.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: GitSessionStorageService,
                factory: GitSessionStorageService.\u0275fac,
                providedIn: "root"
            }), GitSessionStorageService;
        }(), getBranchOutStoreState = (0, ngrx_store.P1)(getGitState, function(state) {
            return (null == state ? void 0 : state.gitBranchOut) || git_branch_out_reducer_initialState;
        }), git_branch_out_selectors_a = branchOutAdapter.getSelectors(), git_branch_out_selectors_selectAll = git_branch_out_selectors_a.selectAll, git_branch_out_selectors_selectEntities = git_branch_out_selectors_a.selectEntities, gitDatasourcesStoreState = ((0, 
        ngrx_store.P1)(getBranchOutStoreState, function(state) {
            return git_branch_out_selectors_selectAll(state);
        }), (0, ngrx_store.P1)(getBranchOutStoreState, function(state) {
            return git_branch_out_selectors_selectEntities(state);
        }), (0, ngrx_store.P1)(getGitState, function(state) {
            return (null == state ? void 0 : state.gitDatasources) || git_datasources_reducer_initialState;
        })), git_datasources_selector_a = gitDatasourcesAdapter.getSelectors(), git_datasources_selector_selectAll = git_datasources_selector_a.selectAll, git_datasources_selector_selectEntities = git_datasources_selector_a.selectEntities, getAllDatasourcesEntities = ((0, 
        ngrx_store.P1)(gitDatasourcesStoreState, function(state) {
            return git_datasources_selector_selectAll(state);
        }), (0, ngrx_store.P1)(gitDatasourcesStoreState, function(state) {
            return git_datasources_selector_selectEntities(state);
        })), getDatasources = function(workspaceId) {
            return (0, ngrx_store.P1)(getAllDatasourcesEntities, function(entities) {
                return entities[workspaceId];
            });
        }, GitDatasourcesFacade = function() {
            function GitDatasourcesFacade(store) {
                this.store = store;
            }
            return GitDatasourcesFacade.prototype.getDatasources = function(gitDatasourceRequest) {
                return this.store.select(getDatasources(gitDatasourceRequest.workspaceId)).pipe((0, 
                operators_map.U)(function(datasourcesState) {
                    return {
                        workspaceId: gitDatasourceRequest.workspaceId,
                        datasourcesRecord: null == datasourcesState ? void 0 : datasourcesState.datasourcesRecord,
                        callState: (null == datasourcesState ? void 0 : datasourcesState.callState) || DatasourceManagementState.Initial
                    };
                }));
            }, GitDatasourcesFacade.prototype.loadDatasources = function(gitDatasourceRequest) {
                return this.store.dispatch(loadDatasources({
                    gitDatasourceRequest
                })), this.getDatasources(gitDatasourceRequest);
            }, GitDatasourcesFacade.prototype.createDatasource = function(request) {
                return this.store.dispatch(createDatasource({
                    request
                })), (0, observable_of.of)(void 0);
            }, GitDatasourcesFacade.prototype.getDataSourcesCallState = function(workspaceId) {
                return this.store.select(getDatasources(workspaceId)).pipe((0, operators_map.U)(function(datasourcesState) {
                    return (null == datasourcesState ? void 0 : datasourcesState.callState) || DatasourceManagementState.Initial;
                }));
            }, GitDatasourcesFacade.\u0275fac = function(t) {
                return new (t || GitDatasourcesFacade)(core["\u0275\u0275inject"](ngrx_store.yh));
            }, GitDatasourcesFacade.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: GitDatasourcesFacade,
                factory: GitDatasourcesFacade.\u0275fac,
                providedIn: "root"
            }), GitDatasourcesFacade;
        }(), getGitRepairStoreState = (0, ngrx_store.P1)(getGitState, function(state) {
            return (null == state ? void 0 : state.gitRepair) || git_repair_reducer_initialState;
        }), git_repair_selectors_a = gitRepairAdapter.getSelectors(), git_repair_selectors_selectAll = git_repair_selectors_a.selectAll, git_repair_selectors_selectEntities = git_repair_selectors_a.selectEntities;
        (0, ngrx_store.P1)(getGitRepairStoreState, function(state) {
            return git_repair_selectors_selectAll(state);
        }), (0, ngrx_store.P1)(getGitRepairStoreState, function(state) {
            return git_repair_selectors_selectEntities(state);
        });
    },
    10510: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            Gg: function() {
                return services.Gg;
            },
            eL: function() {
                return services.eL;
            },
            rC: function() {
                return services.rC;
            },
            AC: function() {
                return services.AC;
            },
            a6: function() {
                return GitCreateBranchComponent;
            },
            FF: function() {
                return GitServicesConnectionModule;
            },
            Mv: function() {
                return services.Mv;
            },
            rl: function() {
                return git_providers.rl;
            },
            EI: function() {
                return git_providers.EI;
            }
        }), __webpack_require__(81544);
        var dialog = __webpack_require__(32293), BehaviorSubject = __webpack_require__(35510), of = __webpack_require__(11547), take = __webpack_require__(48787), tap = __webpack_require__(17653), catchError = __webpack_require__(59822), src = __webpack_require__(18016), error_src = __webpack_require__(65232), services = __webpack_require__(40773), core = __webpack_require__(50423), localization_service = __webpack_require__(7452), telemetry_service = __webpack_require__(54323), common = __webpack_require__(77476), fesm2022_forms = __webpack_require__(17174), dialog_component = __webpack_require__(95825), tri_link_component = __webpack_require__(65e3), tri_svg_icon_component = __webpack_require__(74913), tri_tooltip_directive = __webpack_require__(55490), tri_dropdown_component = __webpack_require__(20551), tri_dropdown_item_component = __webpack_require__(64716), tri_dropdown_item_menu_directive = __webpack_require__(85721), tri_search_box_component = __webpack_require__(89237), localize_pipe = __webpack_require__(55334);
        function GitCreateBranchComponent_ng_container_16_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "div", 14), 
            core["\u0275\u0275element"](2, "tri-svg-icon", 15), core["\u0275\u0275elementStart"](3, "span"), 
            core["\u0275\u0275text"](4), core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementContainerEnd"]()), 
            2 & rf) {
                var ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275attribute"]("data-testid", "tri-git-connection-details-settings-v2-directory-error"), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("name", "error_circle_12_filled"), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", ctx_r0.branchNameInputError$.value, " ");
            }
        }
        function GitCreateBranchComponent_tri_dropdown_item_32_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "tri-dropdown-item", 16)(1, "p"), 
            core["\u0275\u0275text"](2), core["\u0275\u0275elementEnd"]()()), 2 & rf) {
                var item_r2 = ctx.$implicit;
                core["\u0275\u0275property"]("value", item_r2), core["\u0275\u0275advance"](2), 
                core["\u0275\u0275textInterpolate"](item_r2.text);
            }
        }
        var _c0 = function(a0) {
            return {
                error: a0
            };
        }, GitCreateBranchComponent = function() {
            function GitCreateBranchComponent(data, cdr, dr, gitConnectionDiscoveryService, localizationService, telemetryService, gitErrorService) {
                this.data = data, this.cdr = cdr, this.dr = dr, this.gitConnectionDiscoveryService = gitConnectionDiscoveryService, 
                this.localizationService = localizationService, this.telemetryService = telemetryService, 
                this.gitErrorService = gitErrorService, this._isCreateButtonEnabled = !1, this._isCreateButtonLoading = !1, 
                this.branchNameInputError$ = new BehaviorSubject.X(void 0), this.unfiliteredBranchesList = this.data.branchesList.map(function(branch) {
                    return {
                        key: branch,
                        text: branch
                    };
                }), this.filteredBranchesList = this.unfiliteredBranchesList, this.dialogData = {
                    title: this.localizationService.get("Trident_Git_Create_New_Branch"),
                    buttons: [ {
                        name: "createButton",
                        label: this.localizationService.get("Create_ButtonText"),
                        buttonType: "primary",
                        disabled: !this.isCreateButtonEnabled,
                        isLoading: this.isCreateButtonLoading
                    }, {
                        name: "cancelButton",
                        label: this.localizationService.get("Cancel_ButtonText"),
                        closeButton: !0
                    } ]
                };
            }
            return GitCreateBranchComponent.prototype.onBranchNameChange = function(branchName) {
                this.branchName = branchName, this.branchNameInputError$.next(this.validateBranchName(branchName)), 
                this.calculateCreateButtonState();
            }, GitCreateBranchComponent.prototype.onParentBranchNameChange = function(parentBranch) {
                this.parentBranch = null == parentBranch ? void 0 : parentBranch.text, this.calculateCreateButtonState();
            }, GitCreateBranchComponent.prototype.onBranchesSearch = function(searchTerm) {
                this.filteredBranchesList = this.unfiliteredBranchesList.filter(function(branch) {
                    return !searchTerm || branch.text.toLowerCase().includes(searchTerm.toLowerCase());
                });
            }, GitCreateBranchComponent.prototype.clickButton = function(buttonName) {
                "createButton" === buttonName ? this.handleCreateBranchRequest() : "cancelButton" === buttonName && this.dr.close();
            }, GitCreateBranchComponent.prototype.handleCreateBranchRequest = function() {
                var _a, _this = this;
                if (this.isCreateButtonLoading = !0, this.branchNameInputError$.next(void 0), !this.branchName) return this.isCreateButtonLoading = !1, 
                void this.branchNameInputError$.next(this.localizationService.get("Trident_Git_Error_Git_InvalidBranchName_Message"));
                if (!this.parentBranch) return this.isCreateButtonLoading = !1, void this.branchNameInputError$.next(this.localizationService.get("Trident_Git_Error_Git_Create_Branch_Origin_Branch_Not_Found_Message"));
                if (void 0 === this.data.details.gitProviderType || !this.data.details.organizationName || !this.data.details.repositoryName) return this.isCreateButtonLoading = !1, 
                void this.branchNameInputError$.next(this.localizationService.get("Trident_Git_Error_Git_Create_Branch_Failed_Message"));
                var createBranchRequest = {
                    branchName: this.branchName,
                    parentBranchName: this.parentBranch,
                    organizationName: this.data.details.organizationName,
                    providerType: this.data.details.gitProviderType,
                    repositoryId: this.data.details.repositoryName,
                    projectName: this.data.details.projectName,
                    datasourceOID: null === (_a = this.data.details) || void 0 === _a ? void 0 : _a.datasourceOID,
                    workspaceId: this.data.workspaceId
                };
                this.gitConnectionDiscoveryService.createBranch(createBranchRequest).pipe((0, take.q)(1), (0, 
                tap.b)(function() {
                    _this.isCreateButtonLoading = !1, _this.telemetryService.logEvent({
                        name: "Create branch request",
                        properties: {
                            isWorkspaceConnected: _this.data.isWorkspaceConnected
                        }
                    }), _this.dr.close(_this.branchName);
                }), (0, catchError.K)(function(error) {
                    var _a, gitErrorDetails = null === (_a = _this.gitErrorService.makeGitErrorFromHttpResponse("Git_Create_Branch_Failed", error)) || void 0 === _a ? void 0 : _a.errorsDetails[0];
                    return gitErrorDetails && _this.gitErrorService.isDedicatedErrorMessageAvailable(gitErrorDetails.errorType) ? _this.branchNameInputError$.next(gitErrorDetails.message) : _this.branchNameInputError$.next(_this.localizationService.get("Trident_Git_Error_Git_Create_Branch_Failed_Message")), 
                    _this.isCreateButtonLoading = !1, (0, of.of)();
                })).subscribe();
            }, GitCreateBranchComponent.prototype.validateBranchName = function(branchName) {
                return (0, src.tI)(branchName, this.localizationService);
            }, GitCreateBranchComponent.prototype.calculateCreateButtonState = function() {
                this.isCreateButtonEnabled = void 0 !== this.branchName && "" !== this.branchName && void 0 !== this.parentBranch && void 0 === this.branchNameInputError$.value;
            }, GitCreateBranchComponent.prototype.getDropDownOptions = function() {
                return {
                    showFullContent: !1,
                    dropdownHeight: this.filteredBranchesList.length > 1 ? 200 : 76,
                    dropdownWidth: 304
                };
            }, GitCreateBranchComponent.prototype.getDropdownOverlayOptions = function(optionCount) {
                return {
                    dropdownHeight: 30 * Math.max(Math.min(optionCount, 12), 1) + 34
                };
            }, Object.defineProperty(GitCreateBranchComponent.prototype, "isCreateButtonEnabled", {
                get: function() {
                    return this._isCreateButtonEnabled;
                },
                set: function(value) {
                    this._isCreateButtonEnabled = value, this.dialogData.buttons[0].disabled = !value;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(GitCreateBranchComponent.prototype, "isCreateButtonLoading", {
                get: function() {
                    return this._isCreateButtonLoading;
                },
                set: function(value) {
                    this._isCreateButtonLoading = value, this.dialogData.buttons[0].isLoading = value, 
                    this.dialogData.buttons[0].label = this.localizationService.get(value ? "CapacityProvisioning_SpinnerText" : "Create_ButtonText"), 
                    this.cdr.detectChanges();
                },
                enumerable: !1,
                configurable: !0
            }), GitCreateBranchComponent.\u0275fac = function(t) {
                return new (t || GitCreateBranchComponent)(core["\u0275\u0275directiveInject"](dialog.WI), core["\u0275\u0275directiveInject"](core.ChangeDetectorRef), core["\u0275\u0275directiveInject"](dialog.so), core["\u0275\u0275directiveInject"](services.eL), core["\u0275\u0275directiveInject"](localization_service.z), core["\u0275\u0275directiveInject"](telemetry_service.t), core["\u0275\u0275directiveInject"](error_src.jR));
            }, GitCreateBranchComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: GitCreateBranchComponent,
                selectors: [ [ "tri-git-create-branch" ] ],
                decls: 33,
                vars: 37,
                consts: [ [ 3, "dialogData", "buttonClickEvent" ], [ "target", "_blank", "href", "https://go.microsoft.com/fwlink/?linkid=2235132", "localize", "LearnMore", "localize-tooltip", "LearnMore", 1, "learn-more-link-icon" ], [ 1, "accordion-area" ], [ 1, "branch-name-input" ], [ 1, "mandatory" ], [ "type", "text", 3, "ngClass", "ngModel", "placeholder", "ngModelChange" ], [ 4, "ngIf" ], [ 1, "parent-branch-selection" ], [ 1, "header-and-tooltip" ], [ "id", "select-origin-branch-dropdown-label-v2" ], [ "tri-svg-icon-16", "", 3, "name", "triTooltip" ], [ "aria-labelledby", "select-origin-branch-dropdown-label-V2", 3, "ngModel", "isDisabled", "options", "valueChange" ], [ 1, "dropdown-search", 3, "value" ], [ 3, "value", 4, "ngFor", "ngForOf" ], [ "tri-textfield-error", "", 1, "error-message" ], [ "tri-svg-icon-12", "", 3, "name" ], [ 3, "value" ] ],
                template: function(rf, ctx) {
                    var tmp_17_0;
                    1 & rf && (core["\u0275\u0275elementStart"](0, "trident-dialog", 0), core["\u0275\u0275listener"]("buttonClickEvent", function($event) {
                        return ctx.clickButton($event);
                    }), core["\u0275\u0275elementStart"](1, "div"), core["\u0275\u0275text"](2), core["\u0275\u0275pipe"](3, "localize"), 
                    core["\u0275\u0275elementStart"](4, "tri-link", 1), core["\u0275\u0275text"](5), 
                    core["\u0275\u0275pipe"](6, "localize"), core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementStart"](7, "div", 2)(8, "div", 3)(9, "h4"), 
                    core["\u0275\u0275text"](10), core["\u0275\u0275pipe"](11, "localize"), core["\u0275\u0275elementStart"](12, "span", 4), 
                    core["\u0275\u0275text"](13, " *"), core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementStart"](14, "input", 5), 
                    core["\u0275\u0275listener"]("ngModelChange", function($event) {
                        return ctx.onBranchNameChange($event);
                    }), core["\u0275\u0275pipe"](15, "localize"), core["\u0275\u0275elementEnd"](), 
                    core["\u0275\u0275template"](16, GitCreateBranchComponent_ng_container_16_Template, 5, 3, "ng-container", 6), 
                    core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](17, "div", 7)(18, "div", 8)(19, "h4", 9), 
                    core["\u0275\u0275text"](20), core["\u0275\u0275pipe"](21, "localize"), core["\u0275\u0275elementStart"](22, "span", 4), 
                    core["\u0275\u0275text"](23, " *"), core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275element"](24, "tri-svg-icon", 10), 
                    core["\u0275\u0275pipe"](25, "localize"), core["\u0275\u0275pipe"](26, "localize"), 
                    core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](27, "tri-dropdown", 11), 
                    core["\u0275\u0275listener"]("valueChange", function($event) {
                        return ctx.onParentBranchNameChange($event);
                    }), core["\u0275\u0275elementStart"](28, "tri-dropdown-trigger"), core["\u0275\u0275text"](29), 
                    core["\u0275\u0275pipe"](30, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](31, "tri-search-box", 12), 
                    core["\u0275\u0275listener"]("value", function($event) {
                        return ctx.onBranchesSearch($event);
                    }), core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](32, GitCreateBranchComponent_tri_dropdown_item_32_Template, 3, 2, "tri-dropdown-item", 13), 
                    core["\u0275\u0275elementEnd"]()()()()), 2 & rf && (core["\u0275\u0275property"]("dialogData", ctx.dialogData), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](3, 19, "Trident_Git_Create_New_Branch_Info"), " "), 
                    core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](6, 21, "LearnMore"), " "), 
                    core["\u0275\u0275advance"](5), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](11, 23, "Trident_Git_Branch_Name"), " "), 
                    core["\u0275\u0275advance"](4), core["\u0275\u0275property"]("ngClass", core["\u0275\u0275pureFunction1"](35, _c0, void 0 !== ctx.branchNameInputError$.value))("ngModel", ctx.branchName)("placeholder", core["\u0275\u0275pipeBind1"](15, 25, "Trident_Git_Branch_Name")), 
                    core["\u0275\u0275attribute"]("data-testid", "branch-name-text-input"), core["\u0275\u0275advance"](2), 
                    core["\u0275\u0275property"]("ngIf", void 0 !== ctx.branchNameInputError$.value), 
                    core["\u0275\u0275advance"](4), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](21, 27, "Trident_Git_Create_New_Branch_Create_From"), " "), 
                    core["\u0275\u0275advance"](4), core["\u0275\u0275property"]("name", "info_16_regular")("triTooltip", core["\u0275\u0275pipeBind1"](25, 29, "Trident_Git_Create_New_Branch_Tooltip")), 
                    core["\u0275\u0275attribute"]("aria-label", core["\u0275\u0275pipeBind1"](26, 31, "Trident_Git_Create_New_Branch_Tooltip")), 
                    core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngModel", ctx.parentBranch)("isDisabled", 0 === ctx.data.branchesList.length)("options", ctx.getDropDownOptions()), 
                    core["\u0275\u0275attribute"]("data-testid", "parent-branch-dropdown"), core["\u0275\u0275advance"](2), 
                    core["\u0275\u0275textInterpolate1"](" ", null !== (tmp_17_0 = ctx.parentBranch) && void 0 !== tmp_17_0 ? tmp_17_0 : core["\u0275\u0275pipeBind1"](30, 33, "Trident_Git_Create_New_Branch_Choose_Parent_Branch"), " "), 
                    core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngForOf", ctx.filteredBranchesList));
                },
                dependencies: [ common.NgClass, common.NgForOf, common.NgIf, fesm2022_forms.Fj, fesm2022_forms.JJ, fesm2022_forms.On, dialog_component.v, tri_link_component.v, tri_svg_icon_component.M, tri_tooltip_directive.Z, tri_dropdown_component.M3, tri_dropdown_item_component.l, tri_dropdown_item_menu_directive.q, tri_dropdown_component.ii, tri_search_box_component.U, localize_pipe.Y ],
                styles: [ "[_nghost-%COMP%]     mat-dialog-content{display:flex;flex-direction:column;font-size:var(--fontSizeBase300)}[_nghost-%COMP%]     .mat-mdc-dialog-content.dialog-body{display:flex;flex-direction:column;gap:16px;max-height:none}.accordion-area[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:stretch;padding:24px;border:1px solid var(--globalColorGrey82);border-radius:8px;gap:24px;height:100%}.accordion-area[_ngcontent-%COMP%]   h4[_ngcontent-%COMP%]{font-size:var(--fontSizeBase300);font-weight:var(--fontWeightSemibold);margin:0 0 4px}.accordion-area[_ngcontent-%COMP%]   h4[_ngcontent-%COMP%]   span.mandatory[_ngcontent-%COMP%]{color:var(--globalColorRedShade10)}.accordion-area[_ngcontent-%COMP%]   .branch-name-input[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{width:100%;border-bottom:1px solid var(--globalColorGrey38);border:1px solid var(--globalColorGrey82);border-radius:4px;padding:6px 10px 6px 12px;box-sizing:border-box}.accordion-area[_ngcontent-%COMP%]   .branch-name-input[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:focus{outline:none;border-bottom:2px solid var(--globalColorBrand80)}.accordion-area[_ngcontent-%COMP%]   .branch-name-input[_ngcontent-%COMP%]   .input-error[_ngcontent-%COMP%]{border-color:var(--colorPaletteRedForeground1)}.accordion-area[_ngcontent-%COMP%]   .parent-branch-selection[_ngcontent-%COMP%]{margin-bottom:12px;display:flex;flex-direction:column;gap:4px}.accordion-area[_ngcontent-%COMP%]   .parent-branch-selection[_ngcontent-%COMP%]   .header-and-tooltip[_ngcontent-%COMP%]{display:flex;flex-direction:row;height:20px}.accordion-area[_ngcontent-%COMP%]   .parent-branch-selection[_ngcontent-%COMP%]   .header-and-tooltip[_ngcontent-%COMP%]   tri-svg-icon[_ngcontent-%COMP%]{fill:var(--globalColorGrey38)}tri-dropdown[_ngcontent-%COMP%]{width:100%;overflow-x:hidden;text-overflow:ellipsis;color:var(--colorNeutralForeground4);box-sizing:border-box}tri-dropdown.error[_ngcontent-%COMP%]{border:1px solid var(--globalColorCranberryPrimary)}.dropdown-search[_ngcontent-%COMP%]{box-sizing:border-box;width:100%;margin-bottom:2px}.error-message[_ngcontent-%COMP%]{display:flex;flex-direction:row;align-items:center;gap:4px;color:var(--globalColorCranberryPrimary);fill:var(--globalColorCranberryPrimary)}.error-message[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{font-size:var(--fontSizeBase200)}.error-message[_ngcontent-%COMP%]   tri-svg-icon[_ngcontent-%COMP%]{min-width:12px;min-height:12px}" ],
                changeDetection: 0
            }), GitCreateBranchComponent;
        }(), git_providers = (__webpack_require__(81099), __webpack_require__(31572)), dialog_src = __webpack_require__(32980), lazy_provider_service = __webpack_require__(6814), localization_module = __webpack_require__(78035), tri_radio_button = __webpack_require__(95228), tri_link = __webpack_require__(16149), tri_svg_icon = __webpack_require__(17177), tri_empty_state = __webpack_require__(75476), tri_collapsed_container = __webpack_require__(57156), tri_card = __webpack_require__(13281), tri_tooltip = __webpack_require__(8816), git_src = __webpack_require__(18176), notification_src = __webpack_require__(12385), tri_dropdown = __webpack_require__(44913), tri_search_box = __webpack_require__(46303), git_admin_switches_service = __webpack_require__(94757), git_connection_discovery_service = __webpack_require__(84515), git_connection_service = __webpack_require__(42178), git_connection_service_injection_token = __webpack_require__(81339), git_datasource_service = __webpack_require__(15468), GitServicesConnectionModule = function() {
            function GitServicesConnectionModule() {}
            return GitServicesConnectionModule.\u0275fac = function(t) {
                return new (t || GitServicesConnectionModule);
            }, GitServicesConnectionModule.\u0275mod = core["\u0275\u0275defineNgModule"]({
                type: GitServicesConnectionModule
            }), GitServicesConnectionModule.\u0275inj = core["\u0275\u0275defineInjector"]({
                providers: [ git_admin_switches_service.G, git_connection_discovery_service.e, git_connection_service.r, git_datasource_service.A, lazy_provider_service.Ns.withLazyService(git_connection_service_injection_token.A, git_connection_service.r) ],
                imports: [ common.CommonModule, fesm2022_forms.u5, dialog_src.sp, tri_link.m, localization_module.Y, tri_svg_icon.T6, tri_tooltip.w, tri_card.fe, tri_collapsed_container.F, tri_empty_state.OT, tri_radio_button.W, git_src.Ug, notification_src.K3, tri_dropdown.lK, tri_search_box.b ]
            }), GitServicesConnectionModule;
        }();
    },
    81544: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            b: function() {
                return GitAuthDialogComponent;
            }
        });
        var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(32293), rxjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(30794), rxjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(35510), rxjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(11547), rxjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(59017), rxjs_operators__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(48787), rxjs_operators__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(14172), rxjs_operators__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(81905), rxjs_operators__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(83317), rxjs_operators__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(59973), _trident_data_git__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(70628), _trident_shared_git__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(18016), _git_providers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(31572), _services__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(40773), _angular_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(50423), _trident_localization__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(7452), _angular_common__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(77476), _angular_forms__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(17174), _dialog_src_lib_components_dialog_dialog_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(95825), _ux_angular_src_lib_tri_svg_icon_components_tri_svg_icon_tri_svg_icon_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(74913), _ux_angular_src_lib_tri_tooltip_tri_tooltip_directive__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(55490), _localization_src_localize_pipe__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(55334);
        function GitAuthDialogComponent_ng_container_0_ng_container_14_Template(rf, ctx) {
            1 & rf && (_angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275elementContainerStart"](0), 
            _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275elementStart"](1, "div", 7), 
            _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275element"](2, "tri-svg-icon", 8), 
            _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275elementStart"](3, "span"), 
            _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275text"](4), _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275pipe"](5, "localize"), 
            _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275elementEnd"]()(), _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275elementContainerEnd"]()), 
            2 & rf && (_angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275advance"](1), 
            _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275attribute"]("data-testid", "tri-git-auth-dialog-name-error"), 
            _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275advance"](1), _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275property"]("name", "error_circle_12_filled"), 
            _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275advance"](2), _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275textInterpolate1"](" ", _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275pipeBind1"](5, 3, "Pipelines_CreatePipelineDialog_NameAlreadyExistsError"), " "));
        }
        function GitAuthDialogComponent_ng_container_0_ng_container_29_Template(rf, ctx) {
            1 & rf && (_angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275elementContainerStart"](0), 
            _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275elementStart"](1, "div", 7), 
            _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275element"](2, "tri-svg-icon", 8), 
            _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275elementStart"](3, "span"), 
            _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275text"](4), _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275pipe"](5, "localize"), 
            _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275elementEnd"]()(), _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275elementContainerEnd"]()), 
            2 & rf && (_angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275advance"](1), 
            _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275attribute"]("data-testid", "tri-git-auth-dialog-pat-error"), 
            _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275advance"](1), _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275property"]("name", "error_circle_12_filled"), 
            _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275advance"](2), _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275textInterpolate1"](" ", _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275pipeBind1"](5, 3, "Trident_Git_Auth_Dialog_Param_PAT_Error"), " "));
        }
        function GitAuthDialogComponent_ng_container_0_ng_container_42_Template(rf, ctx) {
            1 & rf && (_angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275elementContainerStart"](0), 
            _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275elementStart"](1, "div", 7), 
            _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275element"](2, "tri-svg-icon", 8), 
            _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275elementStart"](3, "span"), 
            _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275text"](4), _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275pipe"](5, "localize"), 
            _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275elementEnd"]()(), _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275elementContainerEnd"]()), 
            2 & rf && (_angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275advance"](1), 
            _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275attribute"]("data-testid", "tri-git-auth-dialog-url-error"), 
            _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275advance"](1), _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275property"]("name", "error_circle_12_filled"), 
            _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275advance"](2), _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275textInterpolate1"](" ", _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275pipeBind1"](5, 3, "Trident_Git_Auth_Dialog_Param_RepoUrl_Error"), " "));
        }
        var _c0 = function(a0) {
            return {
                error: a0
            };
        };
        function GitAuthDialogComponent_ng_container_0_Template(rf, ctx) {
            if (1 & rf) {
                var _r6 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275getCurrentView"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275elementContainerStart"](0), 
                _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275elementStart"](1, "trident-dialog", 1), 
                _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275listener"]("buttonClickEvent", function($event) {
                    _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275restoreView"](_r6);
                    var ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275nextContext"]();
                    return _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275resetView"](ctx_r5.clickButton($event));
                }), _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275pipe"](2, "localize"), 
                _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275elementStart"](3, "div")(4, "h4"), 
                _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275text"](5), _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275pipe"](6, "localize"), 
                _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275elementStart"](7, "span", 2), 
                _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275text"](8, " *"), _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275elementEnd"]()(), 
                _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275elementStart"](9, "div", 3)(10, "input", 4), 
                _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275listener"]("ngModelChange", function($event) {
                    _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275restoreView"](_r6);
                    var ctx_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275nextContext"]();
                    return _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275resetView"](ctx_r7.displayName = $event);
                })("ngModelChange", function($event) {
                    _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275restoreView"](_r6);
                    var ctx_r8 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275nextContext"]();
                    return _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275resetView"](ctx_r8.displayNameChanged($event));
                }), _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275pipe"](11, "async"), 
                _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275pipe"](12, "localize"), 
                _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275pipe"](13, "localize"), 
                _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275elementEnd"](), _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275template"](14, GitAuthDialogComponent_ng_container_0_ng_container_14_Template, 6, 5, "ng-container", 0), 
                _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275pipe"](15, "async"), _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275elementEnd"]()(), 
                _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275elementStart"](16, "div")(17, "h4"), 
                _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275text"](18), _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275pipe"](19, "localize"), 
                _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275elementStart"](20, "span", 2), 
                _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275text"](21, " *"), _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275elementEnd"](), 
                _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275element"](22, "tri-svg-icon", 5), 
                _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275pipe"](23, "localize"), 
                _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275elementEnd"](), _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275elementStart"](24, "div", 3)(25, "input", 6), 
                _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275listener"]("ngModelChange", function($event) {
                    _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275restoreView"](_r6);
                    var ctx_r9 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275nextContext"]();
                    return _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275resetView"](ctx_r9.personalAccessToken = $event);
                })("ngModelChange", function($event) {
                    _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275restoreView"](_r6);
                    var ctx_r10 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275nextContext"]();
                    return _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275resetView"](ctx_r10.personalAccessTokenChanged($event));
                }), _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275pipe"](26, "async"), 
                _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275pipe"](27, "localize"), 
                _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275pipe"](28, "localize"), 
                _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275elementEnd"](), _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275template"](29, GitAuthDialogComponent_ng_container_0_ng_container_29_Template, 6, 5, "ng-container", 0), 
                _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275pipe"](30, "async"), _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275elementEnd"]()(), 
                _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275elementStart"](31, "div")(32, "h4"), 
                _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275text"](33), _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275pipe"](34, "localize"), 
                _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275element"](35, "tri-svg-icon", 5), 
                _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275pipe"](36, "localize"), 
                _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275elementEnd"](), _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275elementStart"](37, "div", 3)(38, "input", 4), 
                _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275listener"]("ngModelChange", function($event) {
                    _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275restoreView"](_r6);
                    var ctx_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275nextContext"]();
                    return _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275resetView"](ctx_r11.repositoryUrl = $event);
                })("ngModelChange", function($event) {
                    _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275restoreView"](_r6);
                    var ctx_r12 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275nextContext"]();
                    return _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275resetView"](ctx_r12.repositoryUrlChanged($event));
                }), _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275pipe"](39, "async"), 
                _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275pipe"](40, "localize"), 
                _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275pipe"](41, "localize"), 
                _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275elementEnd"](), _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275template"](42, GitAuthDialogComponent_ng_container_0_ng_container_42_Template, 6, 5, "ng-container", 0), 
                _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275pipe"](43, "async"), _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275elementEnd"]()()(), 
                _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275elementContainerEnd"]();
            }
            if (2 & rf) {
                var componentAssets_r1 = ctx.ngIf, ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275nextContext"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275advance"](1), _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275property"]("dialogData", ctx_r0.dialogData)("closeButtonLabel", _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275pipeBind1"](2, 27, "Cancel_ButtonText")), 
                _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275advance"](4), _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275textInterpolate1"](" ", _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275pipeBind1"](6, 29, "Trident_Git_Auth_Dialog_Param_DisplayName"), " "), 
                _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275advance"](5), _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275property"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275pureFunction1"](63, _c0, _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275pipeBind1"](11, 31, ctx_r0.isDisplayNameInvalid$)))("ngModel", ctx_r0.displayName)("placeholder", _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275pipeBind1"](12, 33, componentAssets_r1.localizationKeysList[1])), 
                _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275attribute"]("data-testid", "tri-git-auth-dialog-display-name-input")("aria-label", _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275pipeBind1"](13, 35, "Trident_Git_Auth_Dialog_Param_DisplayName")), 
                _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275advance"](4), _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275property"]("ngIf", _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275pipeBind1"](15, 37, ctx_r0.isDisplayNameInvalid$)), 
                _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275advance"](4), _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275textInterpolate1"](" ", _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275pipeBind1"](19, 39, "Trident_Git_Auth_Dialog_Param_PAT"), " "), 
                _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275advance"](4), _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275property"]("name", "info_16_regular")("triTooltip", _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275pipeBind1"](23, 41, componentAssets_r1.localizationKeysList[2])), 
                _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275advance"](3), _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275property"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275pureFunction1"](65, _c0, _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275pipeBind1"](26, 43, ctx_r0.isPersonalAccessTokenInvalid$)))("ngModel", ctx_r0.personalAccessToken)("placeholder", _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275pipeBind1"](27, 45, componentAssets_r1.localizationKeysList[3])), 
                _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275attribute"]("data-testid", "tri-git-auth-dialog-pat-input")("aria-label", _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275pipeBind1"](28, 47, "Trident_Git_Auth_Dialog_Param_PAT")), 
                _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275advance"](4), _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275property"]("ngIf", _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275pipeBind1"](30, 49, ctx_r0.isPersonalAccessTokenInvalid$)), 
                _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275advance"](4), _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275textInterpolate1"](" ", _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275pipeBind1"](34, 51, "Trident_Git_Auth_Dialog_Param_RepoUrl"), " "), 
                _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275advance"](2), _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275property"]("name", "info_16_regular")("triTooltip", _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275pipeBind1"](36, 53, componentAssets_r1.localizationKeysList[4])), 
                _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275advance"](3), _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275property"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275pureFunction1"](67, _c0, _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275pipeBind1"](39, 55, ctx_r0.isRepositoryUrlInvalid$)))("ngModel", ctx_r0.repositoryUrl)("placeholder", _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275pipeBind1"](40, 57, componentAssets_r1.localizationKeysList[5])), 
                _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275attribute"]("data-testid", "tri-git-auth-dialog-url-input")("aria-label", _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275pipeBind1"](41, 59, "Trident_Git_Auth_Dialog_Param_RepoUrl")), 
                _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275advance"](4), _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275property"]("ngIf", _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275pipeBind1"](43, 61, ctx_r0.isRepositoryUrlInvalid$));
            }
        }
        var GitAuthDialogComponent = function() {
            function GitAuthDialogComponent(cdr, dr, gitDatasourceService, gitSessionStorageService, localizationService, data) {
                this.cdr = cdr, this.dr = dr, this.gitDatasourceService = gitDatasourceService, 
                this.gitSessionStorageService = gitSessionStorageService, this.localizationService = localizationService, 
                this.data = data, this._isAddButtonEnabled = !1, this._isAddButtonLoading = !1, 
                this.destroy$ = new rxjs__WEBPACK_IMPORTED_MODULE_8__.xQ, this.isDisplayNameInvalid$ = new rxjs__WEBPACK_IMPORTED_MODULE_9__.X(void 0), 
                this.isPersonalAccessTokenInvalid$ = new rxjs__WEBPACK_IMPORTED_MODULE_9__.X(void 0), 
                this.validatePersonalAccessToken = function() {
                    return !1;
                }, this.isRepositoryUrlInvalid$ = new rxjs__WEBPACK_IMPORTED_MODULE_9__.X(!1), this.validateRepositoryUrl = function() {
                    return !0;
                }, this.workspaceId = this.data, this.selectedGitProviderType$ = (0, rxjs__WEBPACK_IMPORTED_MODULE_10__.of)(), 
                this.componentAssets$ = (0, rxjs__WEBPACK_IMPORTED_MODULE_10__.of)(), this.existingDatasourcesNames = [], 
                this.dialogData = {
                    title: "",
                    buttons: [ {
                        name: "Add",
                        label: this.localizationService.get("ItemAction_Add"),
                        buttonType: "primary",
                        disabled: !this.isAddButtonEnabled,
                        isLoading: this.isAddButtonLoading
                    }, {
                        name: "Cancel",
                        label: this.localizationService.get("Cancel_ButtonText"),
                        closeButton: !0
                    } ]
                }, this.displayName = "", this.personalAccessToken = "", this.repositoryUrl = "";
            }
            return GitAuthDialogComponent.prototype.ngOnInit = function() {
                var _this = this, componentAssetsRecord = (0, _git_providers__WEBPACK_IMPORTED_MODULE_2__.fA)();
                this.selectedGitProviderType$ = this.gitSessionStorageService.loadGitSessionStorage(this.workspaceId).pipe((0, 
                rxjs_operators__WEBPACK_IMPORTED_MODULE_11__.q)(1), (0, rxjs_operators__WEBPACK_IMPORTED_MODULE_12__.U)(function(sessionStorage) {
                    return null == sessionStorage ? void 0 : sessionStorage.selectedGitProviderType;
                })), this.componentAssets$ = this.selectedGitProviderType$.pipe((0, rxjs_operators__WEBPACK_IMPORTED_MODULE_11__.q)(1), (0, 
                rxjs_operators__WEBPACK_IMPORTED_MODULE_12__.U)(function(gitProviderType) {
                    if (gitProviderType) {
                        var componentAssets = componentAssetsRecord[gitProviderType];
                        if (componentAssets) return _this.dialogData.title = _this.localizationService.get(componentAssets.localizationKeysList[0]), 
                        _this.validatePersonalAccessToken = componentAssets.validationFunctionsList[0], 
                        _this.validateRepositoryUrl = componentAssets.validationFunctionsList[1], componentAssets;
                    }
                })), this.selectedGitProviderType$.pipe((0, rxjs_operators__WEBPACK_IMPORTED_MODULE_11__.q)(1), (0, 
                rxjs_operators__WEBPACK_IMPORTED_MODULE_13__.w)(function(gitProviderType) {
                    return void 0 !== gitProviderType ? _this.gitDatasourceService.getDatasources({
                        workspaceId: _this.workspaceId,
                        gitProviderType
                    }).pipe((0, rxjs_operators__WEBPACK_IMPORTED_MODULE_12__.U)(function(datasources) {
                        return {
                            gitProviderType,
                            datasources
                        };
                    })) : (0, rxjs__WEBPACK_IMPORTED_MODULE_10__.of)({
                        gitProviderType: void 0,
                        datasources: void 0
                    });
                })).subscribe(function(_a) {
                    var _b, gitProviderType = _a.gitProviderType, datasources = _a.datasources;
                    void 0 !== (null == datasources ? void 0 : datasources.datasourcesRecord) && void 0 !== gitProviderType && (_this.existingDatasourcesNames = null !== (_b = datasources.datasourcesRecord[gitProviderType].map(function(datasource) {
                        return datasource.datasourceName.toLowerCase();
                    })) && void 0 !== _b ? _b : []);
                });
            }, GitAuthDialogComponent.prototype.ngOnDestroy = function() {
                this.destroy$.next(), this.destroy$.complete();
            }, GitAuthDialogComponent.prototype.clickButton = function(buttonName) {
                "Add" === buttonName ? this.handleCreateDatasourceRequest() : "Cancel" === buttonName && this.dr.close();
            }, GitAuthDialogComponent.prototype.displayNameChanged = function(displayName) {
                this.isDisplayNameInvalid$.next(this.existingDatasourcesNames.includes(displayName.toLowerCase())), 
                this.calculateAddButtonState();
            }, GitAuthDialogComponent.prototype.personalAccessTokenChanged = function(personalAccessToken) {
                this.isPersonalAccessTokenInvalid$.next(!("" === this.personalAccessToken || this.validatePersonalAccessToken(personalAccessToken))), 
                this.calculateAddButtonState();
            }, GitAuthDialogComponent.prototype.repositoryUrlChanged = function(repositoryUrl) {
                this.isRepositoryUrlInvalid$.next("" !== repositoryUrl && !this.validateRepositoryUrl(repositoryUrl)), 
                this.calculateAddButtonState();
            }, GitAuthDialogComponent.prototype.handleCreateDatasourceRequest = function() {
                var _this = this, request = {
                    workspaceId: this.workspaceId,
                    gitProviderType: _trident_shared_git__WEBPACK_IMPORTED_MODULE_1__.IS.GitHub,
                    displayName: this.displayName,
                    personalAccessToken: this.personalAccessToken,
                    repositoryUrl: this.repositoryUrl
                };
                this.isAddButtonLoading = !0, (0, rxjs__WEBPACK_IMPORTED_MODULE_14__.aj)([ this.gitDatasourceService.getDatasourceCallState(this.workspaceId), this.gitDatasourceService.createDatasource(request) ]).pipe((0, 
                rxjs_operators__WEBPACK_IMPORTED_MODULE_15__.R)(this.destroy$), (0, rxjs_operators__WEBPACK_IMPORTED_MODULE_16__.h)(function(_a) {
                    var callState = _a[0];
                    return callState === _trident_data_git__WEBPACK_IMPORTED_MODULE_0__.j3q.Completed || (0, 
                    _trident_shared_git__WEBPACK_IMPORTED_MODULE_1__.pb)(callState);
                }), (0, rxjs_operators__WEBPACK_IMPORTED_MODULE_11__.q)(1)).subscribe(function(_a) {
                    var callState = _a[0];
                    callState === _trident_data_git__WEBPACK_IMPORTED_MODULE_0__.j3q.Completed ? _this.dr.close() : (_this.isAddButtonLoading = !1, 
                    (0, _trident_shared_git__WEBPACK_IMPORTED_MODULE_1__.pb)(callState) && _this.isRecoverableError(callState) || _this.dr.close());
                });
            }, GitAuthDialogComponent.prototype.calculateAddButtonState = function() {
                this.isAddButtonEnabled = !("" === this.displayName || this.isDisplayNameInvalid$.value || "" === this.personalAccessToken || this.isPersonalAccessTokenInvalid$.value || "" !== this.repositoryUrl && this.isRepositoryUrlInvalid$.value);
            }, GitAuthDialogComponent.prototype.isRecoverableError = function(_error) {
                return !1;
            }, Object.defineProperty(GitAuthDialogComponent.prototype, "isAddButtonEnabled", {
                get: function() {
                    return this._isAddButtonEnabled;
                },
                set: function(value) {
                    this._isAddButtonEnabled = value, this.dialogData.buttons[0].disabled = !value;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(GitAuthDialogComponent.prototype, "isAddButtonLoading", {
                get: function() {
                    return this._isAddButtonLoading;
                },
                set: function(value) {
                    this._isAddButtonLoading = value, this.dialogData.buttons[0].isLoading = value, 
                    this.dialogData.buttons[0].label = this.localizationService.get(value ? "Adding" : "ItemAction_Add"), 
                    this.cdr.detectChanges();
                },
                enumerable: !1,
                configurable: !0
            }), GitAuthDialogComponent.\u0275fac = function(t) {
                return new (t || GitAuthDialogComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275directiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_7__.ChangeDetectorRef), _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275directiveInject"](_angular_material_dialog__WEBPACK_IMPORTED_MODULE_17__.so), _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275directiveInject"](_services__WEBPACK_IMPORTED_MODULE_3__.Ae), _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275directiveInject"](_trident_data_git__WEBPACK_IMPORTED_MODULE_0__.gCl), _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275directiveInject"](_trident_localization__WEBPACK_IMPORTED_MODULE_18__.z), _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275directiveInject"](_angular_material_dialog__WEBPACK_IMPORTED_MODULE_17__.WI));
            }, GitAuthDialogComponent.\u0275cmp = _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275defineComponent"]({
                type: GitAuthDialogComponent,
                selectors: [ [ "tri-git-auth-dialog" ] ],
                decls: 2,
                vars: 3,
                consts: [ [ 4, "ngIf" ], [ 3, "dialogData", "closeButtonLabel", "buttonClickEvent" ], [ 1, "mandatory" ], [ "tri-textfield", "", 1, "input-container" ], [ "type", "text", 3, "ngClass", "ngModel", "placeholder", "ngModelChange" ], [ "tri-svg-icon-16", "", 3, "name", "triTooltip" ], [ "type", "password", 3, "ngClass", "ngModel", "placeholder", "ngModelChange" ], [ "tri-textfield-error", "", 1, "error-message" ], [ "tri-svg-icon-12", "", 3, "name" ] ],
                template: function(rf, ctx) {
                    1 & rf && (_angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275template"](0, GitAuthDialogComponent_ng_container_0_Template, 44, 69, "ng-container", 0), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275pipe"](1, "async")), 2 & rf && _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275property"]("ngIf", _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275pipeBind1"](1, 1, ctx.componentAssets$));
                },
                dependencies: [ _angular_common__WEBPACK_IMPORTED_MODULE_19__.NgClass, _angular_common__WEBPACK_IMPORTED_MODULE_19__.NgIf, _angular_forms__WEBPACK_IMPORTED_MODULE_20__.Fj, _angular_forms__WEBPACK_IMPORTED_MODULE_20__.JJ, _angular_forms__WEBPACK_IMPORTED_MODULE_20__.On, _dialog_src_lib_components_dialog_dialog_component__WEBPACK_IMPORTED_MODULE_4__.v, _ux_angular_src_lib_tri_svg_icon_components_tri_svg_icon_tri_svg_icon_component__WEBPACK_IMPORTED_MODULE_5__.M, _ux_angular_src_lib_tri_tooltip_tri_tooltip_directive__WEBPACK_IMPORTED_MODULE_6__.Z, _angular_common__WEBPACK_IMPORTED_MODULE_19__.AsyncPipe, _localization_src_localize_pipe__WEBPACK_IMPORTED_MODULE_21__.Y ],
                styles: [ "[_nghost-%COMP%]     mat-dialog-content{display:flex;flex-direction:column;gap:8px;font-size:var(--fontSizeBase300)}[_nghost-%COMP%]     mat-dialog-content div:not(.input-container){display:flex;flex-direction:column;gap:4px}[_nghost-%COMP%]     mat-dialog-content div:not(.input-container) h4{display:flex;flex-direction:row;align-items:center;gap:4px;margin:0;font-size:var(--fontSizeBase300);font-weight:var(--fontWeightSemibold)}[_nghost-%COMP%]     mat-dialog-content div:not(.input-container) h4 span.mandatory{color:var(--globalColorRedShade10)}[_nghost-%COMP%]     mat-dialog-content div:not(.input-container) h4 tri-svg-icon{fill:var(--globalColorGrey38)}[_nghost-%COMP%]     mat-dialog-content div:not(.input-container) input{width:100%;border-bottom:1px solid var(--globalColorGrey38)}[_nghost-%COMP%]     mat-dialog-content div:not(.input-container) input.error{border:1px solid var(--globalColorCranberryPrimary)}[_nghost-%COMP%]     mat-dialog-content div:not(.input-container) input:focus{border-bottom:2px solid var(--globalColorBrand80)}[_nghost-%COMP%]     mat-dialog-content div:not(.input-container) .error-message{display:flex;flex-direction:row}[_nghost-%COMP%]     mat-dialog-content div:not(.input-container) .error-message span{font-size:var(--fontSizeBase200)}[_nghost-%COMP%]     mat-dialog-actions .button-container{gap:8px;margin:16px 0 0}[_nghost-%COMP%]     .mat-mdc-dialog-content.dialog-body{max-height:none}" ],
                changeDetection: 0
            }), GitAuthDialogComponent;
        }();
    },
    81099: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            A: function() {
                return GitLogoutDialogComponent;
            }
        });
        var take = __webpack_require__(48787), switchMap = __webpack_require__(81905), tap = __webpack_require__(17653), catchError = __webpack_require__(59822), dialog = __webpack_require__(32293), of = __webpack_require__(11547), src = __webpack_require__(65232), git_src = __webpack_require__(70628), notification_src = __webpack_require__(12385), services = __webpack_require__(40773), core = __webpack_require__(50423), localization_service = __webpack_require__(7452), dialog_component = __webpack_require__(95825), localize_pipe = __webpack_require__(55334), GitLogoutDialogComponent = function() {
            function GitLogoutDialogComponent(data, dr, localizationService, gitConfigureCredentialsService, gitSessionStorageService, gitNotificationService, gitConnectionService, gitErrorService) {
                this.data = data, this.dr = dr, this.localizationService = localizationService, 
                this.gitConfigureCredentialsService = gitConfigureCredentialsService, this.gitSessionStorageService = gitSessionStorageService, 
                this.gitNotificationService = gitNotificationService, this.gitConnectionService = gitConnectionService, 
                this.gitErrorService = gitErrorService, this.dialogData = {
                    title: this.localizationService.get("Trident_Git_Log_Out_Dialog_Title"),
                    buttons: [ {
                        name: "logoutButton",
                        label: this.localizationService.get("Trident_Git_Log_Out"),
                        buttonType: "primary"
                    }, {
                        name: "cancelButton",
                        label: this.localizationService.get("Cancel_ButtonText"),
                        closeButton: !0
                    } ]
                };
            }
            return GitLogoutDialogComponent.prototype.clickButton = function(buttonName) {
                "logoutButton" === buttonName ? this.handleLogOutRequest() : "cancelButton" === buttonName && this.dr.close(buttonName);
            }, GitLogoutDialogComponent.prototype.handleLogOutRequest = function() {
                var _this = this;
                this.gitConnectionService.getGitConnection(this.data.workspaceId).pipe((0, take.q)(1), (0, 
                switchMap.w)(function(gitConnectionRecord) {
                    return (null == gitConnectionRecord ? void 0 : gitConnectionRecord.gitConnectionDetails) ? _this.gitConfigureCredentialsService.deleteConfiguredCredentials(_this.data.workspaceId) : (0, 
                    of.of)(void 0);
                }), (0, take.q)(1), (0, tap.b)(function() {
                    _this.gitSessionStorageService.deleteCredentials(_this.data.workspaceId), _this.gitNotificationService.showSuccessNotification("Trident_Git_Toast_Logout_Success"), 
                    _this.dr.close("logoutButton");
                }), (0, catchError.K)(function(httpError) {
                    var error = _this.gitErrorService.makeGitErrorFromHttpResponse("Git_Delete_Credentials_Failed", httpError);
                    return _this.gitNotificationService.showErrorNotification(error, "Trident_Git_Toast_Logout_Fail"), 
                    [];
                })).subscribe();
            }, GitLogoutDialogComponent.\u0275fac = function(t) {
                return new (t || GitLogoutDialogComponent)(core["\u0275\u0275directiveInject"](dialog.WI), core["\u0275\u0275directiveInject"](dialog.so), core["\u0275\u0275directiveInject"](localization_service.z), core["\u0275\u0275directiveInject"](services.id), core["\u0275\u0275directiveInject"](git_src.gCl), core["\u0275\u0275directiveInject"](notification_src.mn), core["\u0275\u0275directiveInject"](services.rC), core["\u0275\u0275directiveInject"](src.jR));
            }, GitLogoutDialogComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: GitLogoutDialogComponent,
                selectors: [ [ "tri-git-logout-dialog" ] ],
                decls: 4,
                vars: 4,
                consts: [ [ 3, "dialogData", "buttonClickEvent" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementStart"](0, "trident-dialog", 0), core["\u0275\u0275listener"]("buttonClickEvent", function($event) {
                        return ctx.clickButton($event);
                    }), core["\u0275\u0275elementStart"](1, "p"), core["\u0275\u0275text"](2), core["\u0275\u0275pipe"](3, "localize"), 
                    core["\u0275\u0275elementEnd"]()()), 2 & rf && (core["\u0275\u0275property"]("dialogData", ctx.dialogData), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](3, 2, "Trident_Git_Log_Out_Dialog_Message"), " "));
                },
                dependencies: [ dialog_component.v, localize_pipe.Y ],
                encapsulation: 2,
                changeDetection: 0
            }), GitLogoutDialogComponent;
        }();
    },
    31572: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            NJ: function() {
                return AccountsListDisplayMode;
            },
            P0: function() {
                return ConnectedProviderDetailsType;
            },
            rl: function() {
                return getUrlGitHub;
            },
            fA: function() {
                return initializeGitAuthDialogComponentAssetsRecord;
            },
            ge: function() {
                return initializeGitConnectionDiscoveryServiceConfigRecord;
            },
            _k: function() {
                return initializeGitConnectionServiceConfigRecord;
            },
            Tr: function() {
                return initializeGitDatasourceServiceConfigRecord;
            },
            EI: function() {
                return initializeGitProviderAccountsComponentAssetsRecord;
            },
            yp: function() {
                return populateGitProviderEnableMap;
            }
        });
        var of = __webpack_require__(11547), src = __webpack_require__(18016), take = __webpack_require__(48787), map = __webpack_require__(14172);
        function getBranchesValidator(request) {
            if (!(null == request ? void 0 : request.project)) throw "Git_AzureDevOpsMissingProjectName";
            if (null == request ? void 0 : request.datasourceOID) throw "Git_AzureDevOpsInvalidParameters";
        }
        function createBranchRequestValidator(requestContract) {
            if (!(null == requestContract ? void 0 : requestContract.projectName)) throw "Git_AzureDevOpsMissingProjectName";
        }
        function createDirectoryRequestValidator(request) {
            if (!(null == request ? void 0 : request.projectName)) throw "Git_AzureDevOpsMissingProjectName";
        }
        function isAzureDevopsUserAccountSelected(sessionState) {
            return void 0 !== (null == sessionState ? void 0 : sessionState.selectedUserAccount);
        }
        function gitConnectionDetailsContractValidator(details) {
            if (!(null == details ? void 0 : details.projectName)) throw "Git_AzureDevOpsMissingProjectName";
        }
        function canUserLogOut(workspaceId, gitConnectionService) {
            return gitConnectionService.getGitConnection(workspaceId).pipe((0, take.q)(1), (0, 
            map.U)(function(connection) {
                return void 0 === (null == connection ? void 0 : connection.gitConnectionDetails);
            }));
        }
        var combineLatest = __webpack_require__(59017), c_extensionDataSourcePathGitHub = "https://github.com";
        function createConfigureCredentialsRequestFromDatasourceGitHub(datasouce) {
            return {
                datasourceOID: datasouce.id
            };
        }
        function isGitHubDatasourceSelected(sessionState) {
            var _a;
            return null !== (_a = sessionState.isConfigured) && void 0 !== _a && _a;
        }
        function shouldShowGitHubSwitchAccount(workspaceId, gitConnectionService, gitSessionStorageService) {
            return (0, combineLatest.aj)([ gitSessionStorageService.loadGitSessionStorage(workspaceId), gitConnectionService.getGitConnection(workspaceId) ]).pipe((0, 
            map.U)(function(_a) {
                var connection = _a[1];
                return void 0 !== (null == connection ? void 0 : connection.gitConnectionDetails);
            }));
        }
        function selectDatasourceSideEffectGitHub(gitSessionStorageService, url, workspaceId) {
            if (url && url !== c_extensionDataSourcePathGitHub) {
                if (!validateRepositoryUrl(url)) throw new Error("Git_Invalid_Github_Repository_Url");
                var url_parts = url.split("/");
                gitSessionStorageService.setDatasourceUrl(workspaceId, url_parts[3], url_parts[4]);
            } else gitSessionStorageService.resetDatasourceUrl(workspaceId);
        }
        var localizationKeysListGitHub = [ "Trident_Git_Auth_Dialog_Title_GitHub", "Trident_Git_Auth_Dialog_Param_DisplayName_Placeholder", "Trident_Git_Auth_Dialog_Param_PAT_Tooltip_GitHub", "Trident_Git_Auth_Dialog_Param_PAT_Placeholder_GitHub", "Trident_Git_Auth_Dialog_Param_RepoUrl_Tooltip_GitHub", "Trident_Git_Auth_Dialog_Param_RepoUrl_Placeholder" ], validationFunctionsListGitHub = [ function(value) {
            return value.toLowerCase().startsWith("ghp_") || value.startsWith("github_pat_");
        }, validateRepositoryUrl ];
        function validateRepositoryUrl(value) {
            var normalizedUrl = value.replace(/\/$|\.git$/g, "");
            return /^https:\/\/github\.com\/[^/]+\/[^/]+$/.test(normalizedUrl);
        }
        function getBranchesRequestValidator(request) {
            if (!(null == request ? void 0 : request.datasourceOID)) throw "Git_GitHubMissingDatasourceOID";
        }
        function validateCreateBranchRequest(requestContract) {
            if (null == requestContract ? void 0 : requestContract.projectName) throw "Git_GitHubInvalidParameters";
            if (!(null == requestContract ? void 0 : requestContract.datasourceOID)) throw "Git_GitHubMissingDatasourceOID";
        }
        function validateCreateDirectoryRequest(request) {
            if (null == request ? void 0 : request.projectName) throw "Git_GitHubInvalidParameters";
            if (!(null == request ? void 0 : request.datasourceOID)) throw "Git_GitHubMissingDatasourceOID";
        }
        function github_gitConnectionDetailsContractValidator(details) {
            if (null == details ? void 0 : details.projectName) throw "Git_GitHubInvalidParameters";
            if (!(null == details ? void 0 : details.datasourceOID)) throw "Git_GitHubMissingDatasourceOID";
        }
        function filterDatasourcesGitHub(datasourcesList, value) {
            return null == datasourcesList ? void 0 : datasourcesList.filter(function(datasource) {
                return datasource.url === value || datasource.url === c_extensionDataSourcePathGitHub;
            });
        }
        function getUrlGitHub(gitConnectionDetails) {
            return "".concat(c_extensionDataSourcePathGitHub, "/").concat(gitConnectionDetails.organizationName, "/").concat(gitConnectionDetails.repositoryName);
        }
        var AccountsListDisplayMode = function(AccountsListDisplayMode) {
            return AccountsListDisplayMode[AccountsListDisplayMode.ShowADOAccountsList = 0] = "ShowADOAccountsList", 
            AccountsListDisplayMode[AccountsListDisplayMode.ShowGitHubDataSourcesList = 1] = "ShowGitHubDataSourcesList", 
            AccountsListDisplayMode;
        }({}), ConnectedProviderDetailsType = function(ConnectedProviderDetailsType) {
            return ConnectedProviderDetailsType.UserAccountDetails = "UserAccountDetails", ConnectedProviderDetailsType.DatasourceDetails = "DatasourceDetails", 
            ConnectedProviderDetailsType;
        }({});
        function initializeGitAuthDialogComponentAssetsRecord() {
            var _a;
            return (_a = {})[src.IS.AzureDevOps] = void 0, _a[src.IS.GitHub] = {
                localizationKeysList: localizationKeysListGitHub,
                validationFunctionsList: validationFunctionsListGitHub
            }, _a;
        }
        function initializeGitProviderAccountsComponentAssetsRecord() {
            var _a;
            return (_a = {})[src.IS.AzureDevOps] = {
                displayMode: AccountsListDisplayMode.ShowADOAccountsList,
                connectedProviderDetailsType: ConnectedProviderDetailsType.UserAccountDetails,
                doesGitProviderNeedsDatasource: !1,
                canTheUserLogOut: canUserLogOut,
                shouldShowSwitchAccount: function() {
                    return (0, of.of)(!1);
                },
                isWorkspaceConnectedToGitProvider: isAzureDevopsUserAccountSelected
            }, _a[src.IS.GitHub] = {
                displayMode: AccountsListDisplayMode.ShowGitHubDataSourcesList,
                connectedProviderDetailsType: ConnectedProviderDetailsType.DatasourceDetails,
                doesGitProviderNeedsDatasource: !0,
                canTheUserLogOut: function() {
                    return (0, of.of)(!0);
                },
                shouldShowSwitchAccount: shouldShowGitHubSwitchAccount,
                isWorkspaceConnectedToGitProvider: isGitHubDatasourceSelected,
                selectDatasourceSideEffect: selectDatasourceSideEffectGitHub,
                filterDatasources: filterDatasourcesGitHub,
                getFilteringValue: getUrlGitHub
            }, _a;
        }
        function initializeGitDatasourceServiceConfigRecord() {
            var _a;
            return (_a = {})[src.IS.AzureDevOps] = {}, _a[src.IS.GitHub] = {
                createConfigureCredentialsRequestFromDatasource: createConfigureCredentialsRequestFromDatasourceGitHub
            }, _a;
        }
        function initializeGitConnectionDiscoveryServiceConfigRecord() {
            var _a;
            return (_a = {})[src.IS.AzureDevOps] = {
                getBranchesValidator,
                createBranchRequestValidator,
                createDirectoryRequestValidator
            }, _a[src.IS.GitHub] = {
                getBranchesValidator: getBranchesRequestValidator,
                createBranchRequestValidator: validateCreateBranchRequest,
                createDirectoryRequestValidator: validateCreateDirectoryRequest
            }, _a;
        }
        function initializeGitConnectionServiceConfigRecord() {
            var _a;
            return (_a = {})[src.IS.AzureDevOps] = {
                gitConnectionDetailsContractValidator
            }, _a[src.IS.GitHub] = {
                gitConnectionDetailsContractValidator: github_gitConnectionDetailsContractValidator
            }, _a;
        }
        function populateGitProviderEnableMap(featureSwitchService) {
            var gitProviderEnabledMap = new Map;
            return gitProviderEnabledMap.set(src.IS.GitHub, function(featureSwitchService) {
                var _a, _b;
                return null === (_b = null === (_a = featureSwitchService.featureSwitches) || void 0 === _a ? void 0 : _a.gitHubTenantSettingsEnabled) || void 0 === _b || _b;
            }(featureSwitchService)), gitProviderEnabledMap.set(src.IS.AzureDevOps, !0), gitProviderEnabledMap;
        }
    },
    94757: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            G: function() {
                return GitAdminSwitchesService;
            }
        });
        var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(33554), rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(58417), rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(48787), rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(14172), _trident_models_feature_switch_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(94771), _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(50423), GitAdminSwitchesService = function() {
            function GitAdminSwitchesService(featureSwitchService) {
                this.featureSwitchService = featureSwitchService, this.featureSwitchStatusSubjects = {};
            }
            return GitAdminSwitchesService.prototype.isTenantAdminEnabled = function(workspaceId) {
                return this.featureSwitchStatusSubjects[workspaceId] || (this.featureSwitchStatusSubjects[workspaceId] = new rxjs__WEBPACK_IMPORTED_MODULE_1__.t(1), 
                this.fetchFeatureSwitchStatus(workspaceId).subscribe(this.featureSwitchStatusSubjects[workspaceId])), 
                this.featureSwitchStatusSubjects[workspaceId].asObservable();
            }, GitAdminSwitchesService.prototype.fetchFeatureSwitchStatus = function(workspaceId) {
                var _this = this;
                return !0 !== this.featureSwitchService.featureSwitches.tridentGitSwitchesDelegation ? new rxjs__WEBPACK_IMPORTED_MODULE_2__.y(function(observer) {
                    observer.next(!!_this.featureSwitchService.featureSwitches.gitIntegrationTenantSwitchEnabled), 
                    observer.complete();
                }) : this.featureSwitchService.getWorkspaceDelegatedSetting({
                    name: "GitIntegrationTenantSwitchEnabled",
                    workspaceObjectId: workspaceId
                }).pipe((0, rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.q)(1), (0, rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.U)(function(delegatedSetting) {
                    return delegatedSetting.isEnabled || !1;
                }));
            }, GitAdminSwitchesService.\u0275fac = function(t) {
                return new (t || GitAdminSwitchesService)(_angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275inject"](_trident_models_feature_switch_service__WEBPACK_IMPORTED_MODULE_0__.V$));
            }, GitAdminSwitchesService.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275defineInjectable"]({
                token: GitAdminSwitchesService,
                factory: GitAdminSwitchesService.\u0275fac,
                providedIn: "root"
            }), GitAdminSwitchesService;
        }();
    },
    84515: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            e: function() {
                return GitConnectionDiscoveryService;
            }
        });
        var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(14172), _trident_data_access_git__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(18176), _git_providers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(31572), _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(50423), GitConnectionDiscoveryService = function() {
            function GitConnectionDiscoveryService(gitConnectionDiscoveryClient) {
                this.gitConnectionDiscoveryClient = gitConnectionDiscoveryClient, this.serviceConfig = (0, 
                _git_providers__WEBPACK_IMPORTED_MODULE_1__.ge)();
            }
            return GitConnectionDiscoveryService.prototype.getOrganizations = function(gitProviderType, workspaceId) {
                return this.gitConnectionDiscoveryClient.getOrganizations(gitProviderType, workspaceId);
            }, GitConnectionDiscoveryService.prototype.getProjects = function(gitProviderType, gitOrganizationName, workspaceId) {
                return this.gitConnectionDiscoveryClient.getProjects(gitProviderType, gitOrganizationName, workspaceId);
            }, GitConnectionDiscoveryService.prototype.getRepositories = function(gitProviderType, gitOrganizationName, gitProjectName, workspaceId) {
                return this.gitConnectionDiscoveryClient.getRepositories(gitProviderType, gitOrganizationName, gitProjectName, workspaceId);
            }, GitConnectionDiscoveryService.prototype.getBranches = function(request) {
                var _a, validatorFunc = null === (_a = this.serviceConfig[request.gitProviderType]) || void 0 === _a ? void 0 : _a.getBranchesValidator;
                return validatorFunc && validatorFunc(request), this.gitConnectionDiscoveryClient.getBranches(request.workspaceId, request.gitProviderType, request.organization, request.repository, null == request ? void 0 : request.project, null == request ? void 0 : request.datasourceOID);
            }, GitConnectionDiscoveryService.prototype.createBranch = function(createBranchRequest) {
                var _a, validatorFunc = null === (_a = this.serviceConfig[createBranchRequest.providerType]) || void 0 === _a ? void 0 : _a.createBranchRequestValidator;
                return validatorFunc && validatorFunc(createBranchRequest), this.gitConnectionDiscoveryClient.createBranch(createBranchRequest);
            }, GitConnectionDiscoveryService.prototype.createDirectory = function(request) {
                var _a, validatorFunc = null === (_a = this.serviceConfig[request.providerType]) || void 0 === _a ? void 0 : _a.createDirectoryRequestValidator;
                return validatorFunc && validatorFunc(request), this.gitConnectionDiscoveryClient.createDirectory(request);
            }, GitConnectionDiscoveryService.prototype.getRelatedWorkspaces = function(workspaceId) {
                return this.gitConnectionDiscoveryClient.getRelatedWorkspaces(workspaceId).pipe((0, 
                rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.U)(function(gitRelatedWorkspaces) {
                    return gitRelatedWorkspaces.relatedWorkspaces;
                }));
            }, GitConnectionDiscoveryService.\u0275fac = function(t) {
                return new (t || GitConnectionDiscoveryService)(_angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_trident_data_access_git__WEBPACK_IMPORTED_MODULE_0__.bE));
            }, GitConnectionDiscoveryService.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275defineInjectable"]({
                token: GitConnectionDiscoveryService,
                factory: GitConnectionDiscoveryService.\u0275fac,
                providedIn: "root"
            }), GitConnectionDiscoveryService;
        }();
    },
    81339: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            A: function() {
                return GitConnectionServiceInjectionToken;
            }
        });
        var GitConnectionServiceInjectionToken = new (__webpack_require__(50423).InjectionToken)("GitConnectionService");
    },
    42178: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            r: function() {
                return GitConnectionService;
            }
        });
        var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(11547), rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(48787), rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(81905), rxjs_operators__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(17653), rxjs_operators__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(59822), _trident_data_git__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(70628), _git_admin_switches_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(94757), _git_providers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(31572), _angular_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(50423), _ngrx_store__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(85732), GitConnectionService = function() {
            function GitConnectionService(gitConnectionFacade, gitAdminSwitchesService, store) {
                this.gitConnectionFacade = gitConnectionFacade, this.gitAdminSwitchesService = gitAdminSwitchesService, 
                this.store = store, this.serviceConfig = (0, _git_providers__WEBPACK_IMPORTED_MODULE_2__._k)();
            }
            return GitConnectionService.prototype.loadGitConnection = function(workspaceId) {
                var _this = this;
                return this.gitAdminSwitchesService.isTenantAdminEnabled(workspaceId).pipe((0, rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.q)(1), (0, 
                rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.w)(function(isEnabled) {
                    return isEnabled ? _this.gitConnectionFacade.loadGitConnection(workspaceId) : (0, 
                    rxjs__WEBPACK_IMPORTED_MODULE_5__.of)(void 0);
                }), (0, rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.q)(1), (0, rxjs_operators__WEBPACK_IMPORTED_MODULE_6__.b)(function(connection) {
                    var _a;
                    if (null == connection ? void 0 : connection.gitConnectionDetails) {
                        var validatorFunc = null === (_a = _this.serviceConfig[connection.gitConnectionDetails.gitProviderType]) || void 0 === _a ? void 0 : _a.gitConnectionDetailsContractValidator;
                        validatorFunc && validatorFunc(connection.gitConnectionDetails);
                    }
                }), (0, rxjs_operators__WEBPACK_IMPORTED_MODULE_7__.K)(function() {
                    return (0, rxjs__WEBPACK_IMPORTED_MODULE_5__.of)(void 0);
                }));
            }, GitConnectionService.prototype.ensureGitConnection = function(workspaceId, bypassAdminSwitch) {
                var _this = this;
                return void 0 === bypassAdminSwitch && (bypassAdminSwitch = !1), bypassAdminSwitch ? this.gitConnectionFacade.ensureGitConnection(workspaceId) : this.gitAdminSwitchesService.isTenantAdminEnabled(workspaceId).pipe((0, 
                rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.q)(1), (0, rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.w)(function(isEnabled) {
                    return isEnabled ? _this.gitConnectionFacade.ensureGitConnection(workspaceId) : (0, 
                    rxjs__WEBPACK_IMPORTED_MODULE_5__.of)(void 0);
                }));
            }, GitConnectionService.prototype.getGitConnection = function(workspaceId) {
                var _this = this;
                return this.gitAdminSwitchesService.isTenantAdminEnabled(workspaceId).pipe((0, rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.q)(1), (0, 
                rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.w)(function(isEnabled) {
                    return isEnabled ? _this.gitConnectionFacade.getGitConnection(workspaceId) : (0, 
                    rxjs__WEBPACK_IMPORTED_MODULE_5__.of)(void 0);
                }));
            }, GitConnectionService.prototype.updateDatasourceInGitConnection = function(workspaceId, datasourceOID) {
                this.store.dispatch((0, _trident_data_git__WEBPACK_IMPORTED_MODULE_0__.V_q)({
                    workspaceId,
                    datasourceOID
                }));
            }, GitConnectionService.prototype.saveGitConnection = function(gitConnection) {
                var _a;
                if (null == gitConnection ? void 0 : gitConnection.gitConnectionDetails) {
                    var validatorFunc = null === (_a = this.serviceConfig[gitConnection.gitConnectionDetails.gitProviderType]) || void 0 === _a ? void 0 : _a.gitConnectionDetailsContractValidator;
                    validatorFunc && validatorFunc(gitConnection.gitConnectionDetails);
                }
                return this.gitConnectionFacade.saveGitConnection(gitConnection);
            }, GitConnectionService.prototype.deleteGitConnection = function(workspaceId) {
                return this.gitConnectionFacade.deleteGitConnection(workspaceId);
            }, GitConnectionService.prototype.getGitConnectionOperationState = function(workspaceId) {
                var _this = this;
                return this.gitAdminSwitchesService.isTenantAdminEnabled(workspaceId).pipe((0, rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.q)(1), (0, 
                rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.w)(function(isEnabled) {
                    return isEnabled ? _this.gitConnectionFacade.getGitConnectionOperationState(workspaceId) : (0, 
                    rxjs__WEBPACK_IMPORTED_MODULE_5__.of)(_trident_data_git__WEBPACK_IMPORTED_MODULE_0__.Gui.Initial);
                }));
            }, GitConnectionService.prototype.checkoutBranch = function(gitCheckoutBranchState) {
                return this.gitConnectionFacade.checkoutBranch(gitCheckoutBranchState);
            }, GitConnectionService.\u0275fac = function(t) {
                return new (t || GitConnectionService)(_angular_core__WEBPACK_IMPORTED_MODULE_8__["\u0275\u0275inject"](_trident_data_git__WEBPACK_IMPORTED_MODULE_0__.f$Z), _angular_core__WEBPACK_IMPORTED_MODULE_8__["\u0275\u0275inject"](_git_admin_switches_service__WEBPACK_IMPORTED_MODULE_1__.G), _angular_core__WEBPACK_IMPORTED_MODULE_8__["\u0275\u0275inject"](_ngrx_store__WEBPACK_IMPORTED_MODULE_9__.yh));
            }, GitConnectionService.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_8__["\u0275\u0275defineInjectable"]({
                token: GitConnectionService,
                factory: GitConnectionService.\u0275fac,
                providedIn: "root"
            }), GitConnectionService;
        }();
    },
    15468: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            A: function() {
                return GitDatasourceService;
            }
        });
        var _trident_data_git__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(70628), _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(50423), GitDatasourceService = function() {
            function GitDatasourceService(gitDatasourcesFacade) {
                this.gitDatasourcesFacade = gitDatasourcesFacade;
            }
            return GitDatasourceService.prototype.createDatasource = function(request) {
                return this.gitDatasourcesFacade.createDatasource(request);
            }, GitDatasourceService.prototype.discoverDatasources = function(gitDatasourcesModel) {
                return this.gitDatasourcesFacade.loadDatasources(gitDatasourcesModel);
            }, GitDatasourceService.prototype.getDatasources = function(gitDatasourcesModel) {
                return this.gitDatasourcesFacade.getDatasources(gitDatasourcesModel);
            }, GitDatasourceService.prototype.getDatasourceCallState = function(workspaceId) {
                return this.gitDatasourcesFacade.getDataSourcesCallState(workspaceId);
            }, GitDatasourceService.\u0275fac = function(t) {
                return new (t || GitDatasourceService)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275inject"](_trident_data_git__WEBPACK_IMPORTED_MODULE_0__.iAv));
            }, GitDatasourceService.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275defineInjectable"]({
                token: GitDatasourceService,
                factory: GitDatasourceService.\u0275fac,
                providedIn: "root"
            }), GitDatasourceService;
        }();
    },
    40773: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            Gg: function() {
                return git_admin_switches_service.G;
            },
            id: function() {
                return GitConfigureCredentialsService;
            },
            eL: function() {
                return git_connection_discovery_service.e;
            },
            rC: function() {
                return git_connection_service.r;
            },
            AC: function() {
                return git_connection_service_injection_token.A;
            },
            Ae: function() {
                return git_datasource_service.A;
            },
            Mv: function() {
                return GitSwitchBranchService;
            }
        });
        var git_admin_switches_service = __webpack_require__(94757), src = __webpack_require__(70628), git_connection_discovery_service = __webpack_require__(84515), git_connection_service_injection_token = __webpack_require__(81339), git_connection_service = __webpack_require__(42178), git_datasource_service = __webpack_require__(15468), throwError = __webpack_require__(60225), git_src = __webpack_require__(18176), git_providers = __webpack_require__(31572), core = __webpack_require__(50423), GitConfigureCredentialsService = function() {
            function GitConfigureCredentialsService(gitDatasourceClient) {
                this.gitDatasourceClient = gitDatasourceClient, this.datasourceServiceConfigRecord = (0, 
                git_providers.Tr)();
            }
            return GitConfigureCredentialsService.prototype.configureCredentials = function(gitProviderType, workspaceId, dataSource) {
                var _a, createRequestFunc = null === (_a = this.datasourceServiceConfigRecord[gitProviderType]) || void 0 === _a ? void 0 : _a.createConfigureCredentialsRequestFromDatasource;
                return createRequestFunc ? this.gitDatasourceClient.postConfigureCredentials(workspaceId, createRequestFunc(dataSource)) : (0, 
                throwError._)("Git_UnsupportedGitProvider");
            }, GitConfigureCredentialsService.prototype.deleteConfiguredCredentials = function(workspaceId) {
                return this.gitDatasourceClient.deleteConfiguredCredentials(workspaceId);
            }, Object.defineProperty(GitConfigureCredentialsService.prototype, "getDatasourceServiceConfig", {
                get: function() {
                    return this.datasourceServiceConfigRecord;
                },
                enumerable: !1,
                configurable: !0
            }), GitConfigureCredentialsService.\u0275fac = function(t) {
                return new (t || GitConfigureCredentialsService)(core["\u0275\u0275inject"](git_src.Kl));
            }, GitConfigureCredentialsService.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: GitConfigureCredentialsService,
                factory: GitConfigureCredentialsService.\u0275fac,
                providedIn: "root"
            }), GitConfigureCredentialsService;
        }(), GitSwitchBranchService = function() {
            function GitSwitchBranchService(gitSwitchBranchFacade) {
                this.gitSwitchBranchFacade = gitSwitchBranchFacade;
            }
            return GitSwitchBranchService.prototype.switchBranch = function(gitSwitchBranchState) {
                return this.gitSwitchBranchFacade.switchBranch(gitSwitchBranchState);
            }, GitSwitchBranchService.prototype.getSwitchBranchState = function(workspaceId) {
                return this.gitSwitchBranchFacade.getSwitchBranchState(workspaceId);
            }, GitSwitchBranchService.\u0275fac = function(t) {
                return new (t || GitSwitchBranchService)(core["\u0275\u0275inject"](src.CCT));
            }, GitSwitchBranchService.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: GitSwitchBranchService,
                factory: GitSwitchBranchService.\u0275fac,
                providedIn: "root"
            }), GitSwitchBranchService;
        }();
    },
    65232: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            jR: function() {
                return GitErrorService;
            },
            Nn: function() {
                return GitServicesErrorModule;
            }
        });
        var common = __webpack_require__(77476), dialog = __webpack_require__(32293), localization_module = __webpack_require__(78035), src = __webpack_require__(32980), tri_svg_icon = __webpack_require__(17177), core = __webpack_require__(50423), GitServicesErrorModule = function() {
            function GitServicesErrorModule() {}
            return GitServicesErrorModule.\u0275fac = function(t) {
                return new (t || GitServicesErrorModule);
            }, GitServicesErrorModule.\u0275mod = core["\u0275\u0275defineNgModule"]({
                type: GitServicesErrorModule
            }), GitServicesErrorModule.\u0275inj = core["\u0275\u0275defineInjector"]({
                imports: [ common.CommonModule, dialog.Is, localization_module.Y, src.sp, tri_svg_icon.T6 ]
            }), GitServicesErrorModule;
        }(), tslib_es6 = __webpack_require__(81337), git_src = __webpack_require__(18016), manifest_src = __webpack_require__(67758), registry_src = __webpack_require__(41838), artifact_src = __webpack_require__(12315), dialog_component = __webpack_require__(95825), tri_svg_icon_component = __webpack_require__(74913);
        function GitItemsListComponent_div_0_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 1), core["\u0275\u0275element"](1, "tri-svg-icon", 2), 
            core["\u0275\u0275elementStart"](2, "span", 3), core["\u0275\u0275text"](3), core["\u0275\u0275elementEnd"]()()), 
            2 & rf) {
                var item_r1 = ctx.$implicit;
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("sprite", item_r1.sprite)("name", item_r1.iconName), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275attribute"]("aria-label", item_r1.name), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate"](item_r1.name);
            }
        }
        var GitItemsListComponent = function() {
            function GitItemsListComponent() {
                this.artifactList = [];
            }
            return GitItemsListComponent.\u0275fac = function(t) {
                return new (t || GitItemsListComponent);
            }, GitItemsListComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: GitItemsListComponent,
                selectors: [ [ "tri-git-items-list" ] ],
                inputs: {
                    artifactList: "artifactList"
                },
                decls: 1,
                vars: 1,
                consts: [ [ "class", "artifacts-list", 4, "ngFor", "ngForOf" ], [ 1, "artifacts-list" ], [ "tri-svg-icon-22", "", 1, "artifact-icon", 3, "sprite", "name" ], [ "tabIndex", "0", 1, "artifact-name", "trimmedTextWithEllipsis" ] ],
                template: function(rf, ctx) {
                    1 & rf && core["\u0275\u0275template"](0, GitItemsListComponent_div_0_Template, 4, 4, "div", 0), 
                    2 & rf && core["\u0275\u0275property"]("ngForOf", ctx.artifactList);
                },
                dependencies: [ common.NgForOf, tri_svg_icon_component.M ],
                styles: [ ".artifacts-list[_ngcontent-%COMP%]{display:flex;flex-direction:row;justify-content:flex-start;align-items:center;min-height:40px;flex-grow:1;gap:8px}.artifacts-list[_ngcontent-%COMP%]   .artifact-icon[_ngcontent-%COMP%]{fill:var(--globalColorGrey26)}.artifacts-list[_ngcontent-%COMP%]   .artifact-name[_ngcontent-%COMP%]{font-size:var(--fontSizeBase300);font-weight:var(--fontWeightRegular);line-height:var(--lineHeightBase300);color:var(--colorNeutralForeground1)}" ]
            }), GitItemsListComponent;
        }(), localize_pipe = __webpack_require__(55334);
        function GitErrorDialogComponent_tri_git_items_list_3_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "tri-git-items-list", 5), 2 & rf) {
                var ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("artifactList", ctx_r0.failedArtifacts);
            }
        }
        function GitErrorDialogComponent_div_4_div_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 8)(1, "span"), core["\u0275\u0275element"](2, "tri-svg-icon", 9), 
            core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](3, "span", 10), 
            core["\u0275\u0275text"](4), core["\u0275\u0275elementEnd"]()()), 2 & rf) {
                var infoText_r5 = ctx.$implicit;
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("sprite", "git-icons")("name", "bullet_dot_8"), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275attribute"]("aria-label", infoText_r5), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate"](infoText_r5);
            }
        }
        function GitErrorDialogComponent_div_4_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 6), core["\u0275\u0275template"](1, GitErrorDialogComponent_div_4_div_1_Template, 5, 4, "div", 7), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r1 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngForOf", ctx_r1.data.moreInfo);
            }
        }
        function GitErrorDialogComponent_div_5_Template(rf, ctx) {
            if (1 & rf) {
                var _r7 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div", 11), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r7);
                    var ctx_r6 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r6.collapseExpand());
                }), core["\u0275\u0275pipe"](1, "localizeFormat"), core["\u0275\u0275elementStart"](2, "span"), 
                core["\u0275\u0275text"](3), core["\u0275\u0275pipe"](4, "localize"), core["\u0275\u0275pipe"](5, "localize"), 
                core["\u0275\u0275elementEnd"](), core["\u0275\u0275element"](6, "tri-svg-icon", 12), 
                core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r2 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275attribute"]("aria-expanded", !ctx_r2.showDetailsToggle)("aria-label", core["\u0275\u0275pipeBind2"](1, 4, ctx_r2.showDetailsToggle ? "ClickToExpandFormat" : "ClickToCollapseFormat", "errorDetails")), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](ctx_r2.showDetailsToggle ? core["\u0275\u0275pipeBind1"](4, 7, "Generic_HideDetails") : core["\u0275\u0275pipeBind1"](5, 9, "Generic_ShowDetails")), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("name", ctx_r2.showDetailsToggle ? "chevron_up_16_regular" : "chevron_down_16_regular");
            }
        }
        function GitErrorDialogComponent_ng_container_6_p_2_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "p")(1, "b"), core["\u0275\u0275text"](2), 
            core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275text"](4), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var detail_r9 = ctx.$implicit;
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"]("", detail_r9.shouldLocalize ? core["\u0275\u0275pipeBind1"](3, 2, detail_r9.name) : detail_r9.name, " "), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"]("", detail_r9.content, " ");
            }
        }
        function GitErrorDialogComponent_ng_container_6_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "div", 13), 
            core["\u0275\u0275template"](2, GitErrorDialogComponent_ng_container_6_p_2_Template, 5, 4, "p", 14), 
            core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var ctx_r3 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngForOf", ctx_r3.details);
            }
        }
        var GitErrorDialogComponent = function() {
            function GitErrorDialogComponent(dialogRef, extensionManifestService, data) {
                var _a, _b, _c, _d;
                this.dialogRef = dialogRef, this.extensionManifestService = extensionManifestService, 
                this.data = data, this.showDetailsToggle = !1, this.errorDetails = this.data.errorDetails, 
                this.requestInfo = this.data.requestInfo, this.details = [], this.artifactType = null === (_b = null === (_a = this.errorDetails) || void 0 === _a ? void 0 : _a.failedArtifactMetadata) || void 0 === _b ? void 0 : _b.artifactType, 
                this.artifactName = null === (_d = null === (_c = this.errorDetails) || void 0 === _c ? void 0 : _c.failedArtifactMetadata) || void 0 === _d ? void 0 : _d.artifactDisplayName, 
                this.failedArtifacts = [], this.failedArtifactsSize = 0, this.createGitErrorDetailsFromGitError();
            }
            return GitErrorDialogComponent.prototype.convertDialogData = function(data) {
                return {
                    title: data.title,
                    buttons: data.buttons
                };
            }, GitErrorDialogComponent.prototype.close = function() {
                return this.dialogRef.close();
            }, GitErrorDialogComponent.prototype.collapseExpand = function() {
                this.showDetailsToggle = !this.showDetailsToggle;
            }, GitErrorDialogComponent.prototype.getErrorMoreInfoSize = function() {
                var _a, _b;
                return null !== (_b = null === (_a = this.data.moreInfo) || void 0 === _a ? void 0 : _a.length) && void 0 !== _b ? _b : 0;
            }, GitErrorDialogComponent.prototype.createGitErrorDetailsFromGitError = function() {
                var _a, _b, _c, _d, _e, _f;
                if (null == this ? void 0 : this.errorDetails) {
                    if (this.requestInfo.clusterUri && this.details.push(this.createGitErrorDetail("ServerError_ClusterUriText", this.requestInfo.clusterUri)), 
                    this.requestInfo.activityId && this.details.push(this.createGitErrorDetail("ServerError_ActivityIdText", this.requestInfo.activityId)), 
                    this.requestInfo.requestId && this.details.push(this.createGitErrorDetail("AdditionalErrorInfo_RequestIdText", this.requestInfo.requestId)), 
                    (null === (_a = this.errorDetails) || void 0 === _a ? void 0 : _a.workloadErrorCode) && this.details.push(this.createGitErrorDetail("Workload_Error_Code", this.errorDetails.workloadErrorCode)), 
                    this.getFailedArtifactsDetails(), null === (_b = this.errorDetails) || void 0 === _b ? void 0 : _b.workloadErrorMessage) {
                        var errorMessage = this.errorDetails.workloadErrorMessage, numberOfParamsInMessage = (errorMessage.match(/{(\d+)}/g) || []).length;
                        if (null === (_c = this.errorDetails) || void 0 === _c ? void 0 : _c.workloadErrorParameters) {
                            var params = this.errorDetails.workloadErrorParameters, numberOfParamsInJSON = params.length;
                            if (numberOfParamsInMessage === numberOfParamsInJSON) {
                                for (var formattedMessage = errorMessage, i = 0; i < numberOfParamsInJSON; i++) formattedMessage = formattedMessage.replace("{".concat(i, "}"), params[i]);
                                this.details.push(this.createGitErrorDetail("Workload_Error_Message", formattedMessage));
                            }
                        } else 0 === numberOfParamsInMessage && this.details.push(this.createGitErrorDetail("Workload_Error_Message", errorMessage));
                    }
                    if (null === (_d = this.errorDetails) || void 0 === _d ? void 0 : _d.errorParameters) for (var key in this.errorDetails.errorParameters) this.details.push(this.createGitErrorDetail(key, this.errorDetails.errorParameters[key], !1));
                    this.details.push(this.createGitErrorDetail("ServerError_TimestampText", null !== (_f = null === (_e = null == this ? void 0 : this.errorDetails) || void 0 === _e ? void 0 : _e.time) && void 0 !== _f ? _f : (new Date).toString()));
                }
            }, GitErrorDialogComponent.prototype.createGitErrorDetail = function(name, content, shouldLocalize) {
                return void 0 === shouldLocalize && (shouldLocalize = !0), {
                    name,
                    content,
                    shouldLocalize
                };
            }, GitErrorDialogComponent.prototype.getFailedArtifactsDetails = function() {
                var _a, _b, _c;
                if (this.artifactType && this.artifactName) {
                    var artifactType = this.extensionManifestService.getFrontendArtifactType(this.artifactType), artifactIcon = (0, 
                    registry_src.zp)(artifactType);
                    this.failedArtifacts.push({
                        name: this.artifactName,
                        iconName: null == artifactIcon ? void 0 : artifactIcon.name,
                        sprite: null == artifactIcon ? void 0 : artifactIcon.sprite
                    });
                } else if (null === (_a = this.errorDetails) || void 0 === _a ? void 0 : _a.errorParameters) for (var parms = null === (_c = null === (_b = this.errorDetails) || void 0 === _b ? void 0 : _b.errorParameters.Artifacts) || void 0 === _c ? void 0 : _c.slice(1, -1), regex = /Display Name: '([^']+)' Type: '([^']+)'/g, matches = void 0; null !== (matches = regex.exec(parms)); ) artifactType = this.extensionManifestService.getFrontendArtifactType(matches[2]), 
                artifact_src.RG.includes(artifactType) && (artifactIcon = (0, registry_src.zp)(artifactType), 
                this.failedArtifacts.push({
                    name: matches[1],
                    iconName: null == artifactIcon ? void 0 : artifactIcon.name,
                    sprite: null == artifactIcon ? void 0 : artifactIcon.sprite
                }));
                this.failedArtifactsSize = this.failedArtifacts.length;
            }, GitErrorDialogComponent.\u0275fac = function(t) {
                return new (t || GitErrorDialogComponent)(core["\u0275\u0275directiveInject"](dialog.so), core["\u0275\u0275directiveInject"](manifest_src.vC), core["\u0275\u0275directiveInject"](dialog.WI));
            }, GitErrorDialogComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: GitErrorDialogComponent,
                selectors: [ [ "tri-git-error-dialog" ] ],
                decls: 7,
                vars: 9,
                consts: [ [ 3, "dialogData", "closeButtonLabel", "buttonClickEvent" ], [ "class", "git-artifact-list", 3, "artifactList", 4, "ngIf" ], [ "class", "git-info-list", 4, "ngIf" ], [ "class", "details-selector", 3, "click", 4, "ngIf" ], [ 4, "ngIf" ], [ 1, "git-artifact-list", 3, "artifactList" ], [ 1, "git-info-list" ], [ "class", "info-list-item", 4, "ngFor", "ngForOf" ], [ 1, "info-list-item" ], [ "calss", "info-icon", "tri-svg-icon-8", "", 3, "sprite", "name" ], [ 1, "list-item" ], [ 1, "details-selector", 3, "click" ], [ "tri-svg-icon-16", "", 3, "name" ], [ 1, "error-details-container" ], [ 4, "ngFor", "ngForOf" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementStart"](0, "trident-dialog", 0), core["\u0275\u0275listener"]("buttonClickEvent", function() {
                        return ctx.close();
                    }), core["\u0275\u0275pipe"](1, "localize"), core["\u0275\u0275text"](2), core["\u0275\u0275template"](3, GitErrorDialogComponent_tri_git_items_list_3_Template, 1, 1, "tri-git-items-list", 1), 
                    core["\u0275\u0275template"](4, GitErrorDialogComponent_div_4_Template, 2, 1, "div", 2), 
                    core["\u0275\u0275template"](5, GitErrorDialogComponent_div_5_Template, 7, 11, "div", 3), 
                    core["\u0275\u0275template"](6, GitErrorDialogComponent_ng_container_6_Template, 3, 1, "ng-container", 4), 
                    core["\u0275\u0275elementEnd"]()), 2 & rf && (core["\u0275\u0275property"]("dialogData", ctx.convertDialogData(ctx.data))("closeButtonLabel", core["\u0275\u0275pipeBind1"](1, 7, "Close")), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", ctx.data.content, " "), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx.failedArtifactsSize > 0), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx.getErrorMoreInfoSize() > 0), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx.details.length > 0), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx.showDetailsToggle));
                },
                dependencies: [ common.NgForOf, common.NgIf, dialog_component.v, tri_svg_icon_component.M, GitItemsListComponent, localize_pipe.Y, localize_pipe.A ],
                styles: [ ".mat-mdc-dialog-content{display:flex;flex-direction:column;margin-top:4px;margin-bottom:16px;gap:12px}.details-selector[_ngcontent-%COMP%]{display:flex;flex-direction:row;align-items:center;gap:6px;font-weight:600}.error-details-container[_ngcontent-%COMP%]{font-size:12px;display:flex;flex-direction:column;align-items:flex-start;padding:12px;max-height:228px;overflow-y:scroll;background:var(--globalColorGrey96);border-radius:4px}.error-details-container[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin:0}.git-artifact-list[_ngcontent-%COMP%]{display:flex;flex-direction:column;overflow-y:auto;min-height:40px;max-height:200px}.git-info-list[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:8px}.info-list-item[_ngcontent-%COMP%]{display:flex;flex-direction:row;justify-content:flex-start;gap:8px}" ],
                changeDetection: 0
            }), GitErrorDialogComponent;
        }(), localization_service = __webpack_require__(7452), telemetry_service = __webpack_require__(54323), GitErrorService = function() {
            function GitErrorService(dialogService, localizationService, telemetryService) {
                this.dialogService = dialogService, this.localizationService = localizationService, 
                this.telemetryService = telemetryService, this.dialogWidth = "564px", this.defaultDialogClass = "dialog-style";
            }
            return GitErrorService.prototype.getErrorContent = function(errorType) {
                var _a, _b, messageKey = null === (_a = git_src.A6[errorType]) || void 0 === _a ? void 0 : _a.messageKey, titleKey = null === (_b = git_src.A6[errorType]) || void 0 === _b ? void 0 : _b.titleKey;
                return messageKey && titleKey || !errorType.startsWith("Git_") && !errorType.startsWith("Alm") || this.telemetryService.logEvent({
                    name: "Git error which is not mapped to content occurred",
                    properties: {
                        errorType
                    }
                }), {
                    message: this.localizationService.get(null != messageKey ? messageKey : "ErrorDialogHelperText_TechnicalDetails"),
                    title: this.localizationService.get(null != titleKey ? titleKey : "ErrorMessage_DefaultTitle")
                };
            }, GitErrorService.prototype.getErrorMoreInfo = function(errorType) {
                var _a, _b;
                return null !== (_b = null === (_a = git_src.jZ[errorType]) || void 0 === _a ? void 0 : _a.moreInfoKeys) && void 0 !== _b ? _b : [];
            }, GitErrorService.prototype.handleSyncGitError = function(errorType, response) {
                var error = this.makeGitErrorFromHttpResponse(errorType, response);
                return this.showErrorHandlingDialog(error), error;
            }, GitErrorService.prototype.handleAlmGitError = function(cause, gitSyncState) {
                return this.isGitAlmError(cause, gitSyncState) ? this.makeGitErrorFromAlmResponse(cause, gitSyncState) : this.makeClientSideGitError(cause);
            }, GitErrorService.prototype.handleClientSideGitError = function(type, parameters) {
                this.logValidationError(type);
                var error = this.makeClientSideGitError(type, parameters);
                return this.showErrorHandlingDialog(error), error;
            }, GitErrorService.prototype.logValidationError = function(errorType) {
                this.telemetryService.logEvent({
                    name: "Validation error occurred",
                    properties: {
                        errorType
                    }
                });
            }, GitErrorService.prototype.showErrorHandlingDialog = function(error) {
                var dialog = this.createGitErrorDialogModel(error);
                return this.dialogService.open(dialog.componentRef, dialog.config);
            }, GitErrorService.prototype.createGitErrorDialogModel = function(error) {
                var _a, _b, _c, _this = this, closeButtonText = this.localizationService.get("Close"), errorDetails = (0, 
                git_src.lz)(error), moreInfo = this.getErrorMoreInfo(null == errorDetails ? void 0 : errorDetails.errorType).map(function(key) {
                    return _this.localizationService.get(key);
                }), data = {
                    title: errorDetails.title,
                    buttons: [ {
                        name: closeButtonText,
                        label: closeButtonText,
                        buttonType: null
                    } ],
                    content: errorDetails.message,
                    moreInfo,
                    errorDetails,
                    requestInfo: {
                        clusterUri: null === (_a = error.errorInfo) || void 0 === _a ? void 0 : _a.clusterUri,
                        activityId: null === (_b = error.errorInfo) || void 0 === _b ? void 0 : _b.activityId,
                        requestId: null === (_c = error.errorInfo) || void 0 === _c ? void 0 : _c.requestId
                    }
                };
                return {
                    componentRef: GitErrorDialogComponent,
                    config: {
                        width: this.dialogWidth,
                        panelClass: this.defaultDialogClass,
                        data
                    }
                };
            }, GitErrorService.prototype.makeClientSideGitError = function(errorType, parameters) {
                var errorContent = this.getErrorContent(errorType);
                return (0, git_src.iX)([ {
                    errorType,
                    title: errorContent.title,
                    message: errorContent.message,
                    errorParameters: parameters
                } ]);
            }, GitErrorService.prototype.makeGitErrorFromHttpResponse = function(cause, response) {
                var errorType, gitWorkloadErrorDetails = this.parseHttpWorkloadError(response), gitHttpErrorDetails = this.parseHttpError(response);
                errorType = (0, git_src.KJ)(response) ? "Git_AdoConditionalAccessNotSupported" : "Git_Switch_Branch_Item_Not_Found" === cause ? "Git_Switch_Branch_Item_Not_Found" : "Git_Branch_Out_Failed" === cause ? this.getBranchOutError(response) : (null == gitHttpErrorDetails ? void 0 : gitHttpErrorDetails.code) ? gitHttpErrorDetails.code : cause;
                var errorContent = this.getErrorContent(errorType), errorDetails = (0, tslib_es6.__assign)((0, 
                tslib_es6.__assign)((0, tslib_es6.__assign)({}, gitWorkloadErrorDetails), gitHttpErrorDetails), {
                    errorType,
                    time: (new Date).toString(),
                    title: errorContent.title,
                    message: errorContent.message
                }), errorInfo = {
                    requestId: null == response ? void 0 : response.requestId,
                    clusterUri: window.clusterUri,
                    activityId: null == response ? void 0 : response.activityId,
                    statusCode: null == response ? void 0 : response.status
                };
                return (0, git_src.iX)([ errorDetails ], errorInfo);
            }, GitErrorService.prototype.makeGitErrorFromAlmResponse = function(cause, gitSyncState) {
                var _a, _b, _c, _d, gitWorkloadErrorDetails, _this = this, gitErrorDetails = [];
                if (gitSyncState.gitInteractiveOperationErrorDetailsList) null === (_a = gitSyncState.gitInteractiveOperationErrorDetailsList) || void 0 === _a || _a.forEach(function(element) {
                    var _a, _b, _c, _d, _e, _f, _g;
                    gitWorkloadErrorDetails = _this.parseAlmWorkloadError(element);
                    var errorContet = _this.getErrorContent(gitWorkloadErrorDetails.workloadErrorCode), interactiveOperationInfo = {
                        dialogMessage: errorContet.message,
                        interactionType: null !== (_c = null === (_b = null === (_a = null == element ? void 0 : element.artifactErrorDetails) || void 0 === _a ? void 0 : _a.UserInteractionRequest) || void 0 === _b ? void 0 : _b.InteractionType) && void 0 !== _c ? _c : git_src.s_.None,
                        options: null !== (_f = null === (_e = null === (_d = null == element ? void 0 : element.artifactErrorDetails) || void 0 === _d ? void 0 : _d.UserInteractionRequest) || void 0 === _e ? void 0 : _e.Options) && void 0 !== _f ? _f : []
                    }, errorDetails = (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, gitWorkloadErrorDetails), {
                        errorType: cause,
                        time: null === (_g = gitSyncState.lastUpdatedTime) || void 0 === _g ? void 0 : _g.toString(),
                        title: errorContet.title,
                        message: errorContet.message,
                        interactiveOperationInfo
                    });
                    gitErrorDetails.push(errorDetails);
                }); else if (gitSyncState.gitNonInteractiveOperationErrorDetails) {
                    var errorType = null !== (_b = null == (gitWorkloadErrorDetails = this.parseAlmWorkloadError(gitSyncState.gitNonInteractiveOperationErrorDetails)) ? void 0 : gitWorkloadErrorDetails.workloadErrorCode) && void 0 !== _b ? _b : cause, errorContet = this.getErrorContent(errorType), errorDetails = (0, 
                    tslib_es6.__assign)((0, tslib_es6.__assign)({}, gitWorkloadErrorDetails), {
                        errorType,
                        time: null === (_c = gitSyncState.lastUpdatedTime) || void 0 === _c ? void 0 : _c.toString(),
                        title: errorContet.title,
                        message: errorContet.message
                    });
                    if ((0, git_src.VQ)(cause, gitSyncState)) {
                        var errorContent = this.getErrorContent("Git_GitProviderCommitRejectedByPolicy");
                        errorDetails.errorType = "Git_GitProviderCommitRejectedByPolicy", errorDetails.title = errorContent.title, 
                        errorDetails.message = errorContent.message;
                    } else (0, git_src.Ss)(cause, gitSyncState) && (errorContent = this.getErrorContent("Git_GitProviderCommitMaxSizeExceeded"), 
                    errorDetails.errorType = "Git_GitProviderCommitMaxSizeExceeded", errorDetails.title = errorContent.title, 
                    errorDetails.message = errorContent.message);
                    gitErrorDetails.push(errorDetails);
                }
                var errorInfo = {
                    requestId: null === (_d = gitSyncState.gitNonInteractiveOperationErrorDetails) || void 0 === _d ? void 0 : _d.requestId,
                    clusterUri: window.clusterUri,
                    retryOperationId: gitSyncState.gitOperationId
                };
                return (0, git_src.iX)(gitErrorDetails, errorInfo);
            }, GitErrorService.prototype.isDedicatedErrorMessageAvailable = function(error) {
                return error in git_src.A6;
            }, GitErrorService.prototype.parseHttpError = function(response) {
                var _a, _b, _c;
                return {
                    code: null === (_a = null == response ? void 0 : response.error) || void 0 === _a ? void 0 : _a.code,
                    errorParameters: null === (_c = null === (_b = null == response ? void 0 : response.error) || void 0 === _b ? void 0 : _b["pbi.error"]) || void 0 === _c ? void 0 : _c.parameters
                };
            }, GitErrorService.prototype.parseHttpWorkloadError = function(response) {
                var _a, _b, _c, _d, _e, _f, _g, deserializedGitErrorDetails, serializedGitErrorDetails = null === (_c = null === (_b = null === (_a = null == response ? void 0 : response.error) || void 0 === _a ? void 0 : _a["pbi.error"]) || void 0 === _b ? void 0 : _b.parameters) || void 0 === _c ? void 0 : _c.GitErrorDetails;
                return serializedGitErrorDetails && (deserializedGitErrorDetails = JSON.parse(serializedGitErrorDetails)), 
                deserializedGitErrorDetails ? {
                    failedArtifactMetadata: (null == deserializedGitErrorDetails ? void 0 : deserializedGitErrorDetails.artifactType) && (null == deserializedGitErrorDetails ? void 0 : deserializedGitErrorDetails.artifactDisplayName) ? {
                        artifactType: deserializedGitErrorDetails.artifactType,
                        artifactDisplayName: deserializedGitErrorDetails.artifactDisplayName,
                        artifactLogicalId: deserializedGitErrorDetails.artifactLogicalId
                    } : void 0,
                    workloadErrorCode: null !== (_e = null === (_d = null == deserializedGitErrorDetails ? void 0 : deserializedGitErrorDetails.errorDetails) || void 0 === _d ? void 0 : _d.ErrorCode) && void 0 !== _e ? _e : null == deserializedGitErrorDetails ? void 0 : deserializedGitErrorDetails.errorCode,
                    workloadErrorMessage: null === (_f = null == deserializedGitErrorDetails ? void 0 : deserializedGitErrorDetails.errorDetails) || void 0 === _f ? void 0 : _f.ErrorMessage,
                    workloadErrorParameters: null === (_g = null == deserializedGitErrorDetails ? void 0 : deserializedGitErrorDetails.errorDetails) || void 0 === _g ? void 0 : _g.ErrorParameters
                } : {
                    failedArtifactMetadata: void 0,
                    workloadErrorCode: void 0,
                    workloadErrorMessage: void 0,
                    workloadErrorParameters: void 0
                };
            }, GitErrorService.prototype.parseAlmWorkloadError = function(gitErrorDetails) {
                var _a, _b, _c, _d, _e;
                return {
                    failedArtifactMetadata: {
                        artifactDisplayName: gitErrorDetails.artifactDisplayName,
                        artifactType: gitErrorDetails.artifactType,
                        artifactLogicalId: gitErrorDetails.artifactLogicalId
                    },
                    workloadErrorCode: null !== (_b = null === (_a = gitErrorDetails.artifactErrorDetails) || void 0 === _a ? void 0 : _a.ErrorCode) && void 0 !== _b ? _b : gitErrorDetails.errorCode,
                    workloadErrorMessage: null === (_c = gitErrorDetails.artifactErrorDetails) || void 0 === _c ? void 0 : _c.ErrorMessage,
                    workloadErrorCategory: null === (_d = gitErrorDetails.artifactErrorDetails) || void 0 === _d ? void 0 : _d.ErrorCategory,
                    workloadErrorParameters: null === (_e = null == gitErrorDetails ? void 0 : gitErrorDetails.artifactErrorDetails) || void 0 === _e ? void 0 : _e.ErrorParameters
                };
            }, GitErrorService.prototype.isGitAlmError = function(cause, gitSyncState) {
                return gitSyncState.gitOperationStatus === git_src.wM.Failed && (!!gitSyncState.gitNonInteractiveOperationErrorDetails || !!gitSyncState.gitInteractiveOperationErrorDetailsList) && (0, 
                git_src.ve)(cause);
            }, GitErrorService.prototype.getBranchOutError = function(httpError) {
                var _a, _b, _c, _d, _e, errorType = null === (_a = httpError.error) || void 0 === _a ? void 0 : _a.code;
                if ("Alm_InvalidBranchOutRequest_OperationFailureAfterFolderCreation" === errorType) {
                    var internalErrorCode = null === (_e = null === (_d = null === (_c = null === (_b = httpError.error) || void 0 === _b ? void 0 : _b["pbi.error"]) || void 0 === _c ? void 0 : _c.details) || void 0 === _d ? void 0 : _d[0]) || void 0 === _e ? void 0 : _e.code;
                    if (internalErrorCode) return internalErrorCode;
                } else if (errorType) return errorType;
                return "Git_Branch_Out_Failed";
            }, GitErrorService.\u0275fac = function(t) {
                return new (t || GitErrorService)(core["\u0275\u0275inject"](src.uQ), core["\u0275\u0275inject"](localization_service.z), core["\u0275\u0275inject"](telemetry_service.t));
            }, GitErrorService.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: GitErrorService,
                factory: GitErrorService.\u0275fac,
                providedIn: "root"
            }), GitErrorService;
        }();
        (0, tslib_es6.__assign)({
            errorType: "Git_MergePolicyNotSpecified"
        }, {
            title: "MockTitle",
            message: "MockMessage"
        });
    },
    12385: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            mn: function() {
                return GitNotificationService;
            },
            K3: function() {
                return GitServicesNotificationModule;
            }
        });
        var common = __webpack_require__(77476), src = __webpack_require__(65232), core = __webpack_require__(50423), GitServicesNotificationModule = function() {
            function GitServicesNotificationModule() {}
            return GitServicesNotificationModule.\u0275fac = function(t) {
                return new (t || GitServicesNotificationModule);
            }, GitServicesNotificationModule.\u0275mod = core["\u0275\u0275defineNgModule"]({
                type: GitServicesNotificationModule
            }), GitServicesNotificationModule.\u0275inj = core["\u0275\u0275defineInjector"]({
                imports: [ common.CommonModule, src.Nn ]
            }), GitServicesNotificationModule;
        }(), tslib_es6 = __webpack_require__(81337), notification_toast_service = __webpack_require__(42888), index_core = __webpack_require__(73471), baseNotification = {
            style: "Trident"
        }, baseLoadingNotification = (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, baseNotification), {
            notificationType: index_core.k$.Loading
        }), baseSuccessNotification = (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, baseNotification), {
            notificationType: index_core.k$.Success
        }), baseErrorNotification = (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, baseNotification), {
            notificationType: index_core.k$.Error
        }), localization_service = __webpack_require__(7452), GitNotificationService = function() {
            function GitNotificationService(localizationService, notificationService) {
                this.localizationService = localizationService, this.notificationService = notificationService;
            }
            return GitNotificationService.prototype.hideNotification = function(notificationId) {
                return this.notificationService.hide(notificationId);
            }, GitNotificationService.prototype.hideCurrentNotification = function() {
                this.notificationService.hideCurrentNotification();
            }, GitNotificationService.prototype.showLoadingNotification = function(titleKey, messageKey) {
                var notification = (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, baseLoadingNotification), {
                    title: this.localizationService.get(titleKey),
                    message: messageKey ? this.localizationService.get(messageKey) : void 0
                });
                return this.notificationService.notify(notification);
            }, GitNotificationService.prototype.showSuccessNotification = function(titleKey, loadingNotificationId) {
                var notification = (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, baseSuccessNotification), {
                    id: loadingNotificationId,
                    title: this.localizationService.get(titleKey)
                });
                return this.notificationService.notify(notification);
            }, GitNotificationService.prototype.showErrorNotification = function(gitError, titleKey, loadingNotificationId) {
                var openGitErrorDialogPortalAction = {
                    action: "open.git.error.dialog",
                    data: gitError
                }, openErrorDialogAction = {
                    displayText: this.localizationService.get("View_Details"),
                    action: openGitErrorDialogPortalAction
                };
                return this.notificationService.notify((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, baseErrorNotification), {
                    id: loadingNotificationId,
                    duration: notification_toast_service.S.Long,
                    title: this.localizationService.get(titleKey),
                    message: this.localizationService.get("View_Details_Learn_More"),
                    actionButtons: [ openErrorDialogAction ]
                }));
            }, GitNotificationService.\u0275fac = function(t) {
                return new (t || GitNotificationService)(core["\u0275\u0275inject"](localization_service.z), core["\u0275\u0275inject"](notification_toast_service.g));
            }, GitNotificationService.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: GitNotificationService,
                factory: GitNotificationService.\u0275fac,
                providedIn: "root"
            }), GitNotificationService;
        }();
    },
    18016: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        var _a, _b;
        __webpack_require__.d(__webpack_exports__, {
            wM: function() {
                return GitOperationStatus;
            },
            u9: function() {
                return GitOperationType;
            },
            IS: function() {
                return GitProviderType;
            },
            s_: function() {
                return InteractionType;
            },
            Z_: function() {
                return MergePolicy;
            },
            I: function() {
                return c_createDatasourceRequestStaticInfo;
            },
            f7: function() {
                return c_credentialsDetailsStaticInfo;
            },
            LO: function() {
                return c_datasourceType;
            },
            Rv: function() {
                return c_gitProviderInfoRecord;
            },
            cW: function() {
                return c_testConnectionParameterStaticInfo;
            },
            tI: function() {
                return checkBranchNameValidity;
            },
            lz: function() {
                return getFirstErrorDetails;
            },
            n: function() {
                return getFormattedLastSyncTime;
            },
            A6: function() {
                return gitErrorLocalizationMap;
            },
            jZ: function() {
                return gitErrorMoreInfoLocalizationMap;
            },
            xT: function() {
                return hasError;
            },
            L4: function() {
                return initializeGitProviderSharedUtils;
            },
            KJ: function() {
                return isAdoMFAError;
            },
            VQ: function() {
                return isBranchPolicyCommitError;
            },
            Ss: function() {
                return isCommitMaxSizeExceededError;
            },
            ve: function() {
                return isGitAlmOperationType;
            },
            pb: function() {
                return isGitError;
            },
            Fc: function() {
                return isInvalidDirectoryNameError;
            },
            yG: function() {
                return isItemNotFoundError;
            },
            E6: function() {
                return isMergePolicyNotSpecifiedError;
            },
            iX: function() {
                return makeGitError;
            },
            QJ: function() {
                return optionNotEnabled;
            }
        });
        var AdalErrorType = function(AdalErrorType) {
            return AdalErrorType.AdalMultiFactorAuthEnrollRequiredErrorCode = "AdalMultiFactorAuthEnrollRequiredErrorCode", 
            AdalErrorType.AdalMultiFactorAuthRequiredErrorCode = "AdalMultiFactorAuthRequiredErrorCode", 
            AdalErrorType.AdalDeviceObjectNotFoundInTenantErrorCode = "AdalDeviceObjectNotFoundInTenantErrorCode", 
            AdalErrorType;
        }({}), gitErrorLocalizationMap = ((_a = {}).Git_MissingRequiredParam = {
            messageKey: "Trident_Git_Error_Git_Provider_API_Message",
            titleKey: "Trident_Git_Error_Git_Provider_API_Title"
        }, _a.Git_DirectoryHasInvalidSystemFiles = {
            messageKey: "Trident_Git_Error_Git_DirectoryHasInvalidSystemFiles_Message",
            titleKey: "Trident_Git_Error_Git_DirectoryHasInvalidSystemFiles_Title"
        }, _a.Git_SelectedArtifactsDoNotBelongToWorkspace = {
            messageKey: "Trident_Git_Error_Git_Undo_Failed_Message",
            titleKey: "Trident_Git_Error_Unable_To_Undo_Title"
        }, _a.Git_AzureDevOpsMissingProjectName = {
            messageKey: "Trident_Git_Error_Git_Connect_Failed_Message",
            titleKey: "Trident_Git_Error_Git_Connect_Failed_Title"
        }, _a.Git_UndoDuplicateArtifacts = {
            messageKey: "Trident_Git_Error_Git_Undo_Failed_Message",
            titleKey: "Trident_Git_Error_Unable_To_Undo_Title"
        }, _a.Git_CommitInvalidArtifacts = {
            messageKey: "Trident_Git_Error_Git_InvalidCommitRequest_Message",
            titleKey: "Trident_Git_Error_Unable_To_Commit_Title"
        }, _a.Git_GitProviderApiFailed = {
            messageKey: "Trident_Git_Error_Git_Provider_API_Message",
            titleKey: "Trident_Git_Error_Git_Provider_API_Title"
        }, _a.Git_GitProviderDeserialization = {
            messageKey: "Trident_Git_Error_Git_Provider_API_Message",
            titleKey: "Trident_Git_Error_Git_Provider_API_Title"
        }, _a.Git_GitProviderResourceNotExistOrUnauthorized = {
            messageKey: "Trident_Git_Error_Git_No_Permissions_ADO_Message",
            titleKey: "Trident_Git_Error_Git_No_Permissions_ADO_Title"
        }, _a.Git_WorkspaceAlreadyConnectedToGit = {
            messageKey: "Trident_Git_Error_Git_Workspace_Already_Connected_To_Git_Message",
            titleKey: "Trident_Git_Error_Git_Workspace_Already_Connected_To_Git_Title"
        }, _a.Git_WorkspaceNotConnectedToGit = {
            messageKey: "Trident_Git_Error_Git_Workspace_Not_Connected_To_Git_Message",
            titleKey: "Trident_Git_Error_Git_Workspace_Not_Connected_To_Git_Title"
        }, _a.Git_WorkspaceHasNoCapacity = {
            messageKey: "Trident_Git_Error_Git_Workspace_Has_No_Capacity_Message",
            titleKey: "Pipelines_Error_FoldersHasNoCapacity_Title"
        }, _a.Git_InvalidPath = {
            messageKey: "Trident_Git_Error_Git_Connection_Details_Message",
            titleKey: "Trident_Git_Error_Git_Connection_Details_Title"
        }, _a.Alm_InvalidRequest_PurgeRequired = {
            messageKey: "Trident_Git_Error_Dataset_PurgeData_Message",
            titleKey: "Trident_Git_Error_AlmOperation_Update_Title"
        }, _a.Git_PotentialCrossGeo = {
            messageKey: "Trident_Git_Error_Git_PotentialCrossGeo_Message",
            titleKey: "Trident_Git_Error_Git_PotentialCrossGeo_Title"
        }, _a.Git_DuplicateDisplayNameAndType = {
            messageKey: "Trident_Git_Error_Git_DuplicateDisplayNameAndType_Message",
            titleKey: "Trident_Git_Error_Unable_To_Complete_Action_Title"
        }, _a.Git_CommitDuplicateArtifacts = {
            messageKey: "Trident_Git_Error_Git_CommitDuplicateArtifacts_Message",
            titleKey: "Trident_Git_Error_Git_CommitDuplicateArtifacts_Title"
        }, _a.Git_HeadNotSynced = {
            messageKey: "Trident_Git_Error_Git_HeadNotSynced_Message",
            titleKey: "Trident_Git_Error_Git_HeadNotSynced_Title"
        }, _a.Git_IdentifierExceededMaxLength = {
            messageKey: "Trident_Git_Error_Git_IdentifierExceededMaxLength_Message",
            titleKey: "Trident_Git_Error_Unable_To_Complete_Action_Title"
        }, _a.Git_InvalidCommitRequest = {
            messageKey: "Trident_Git_Error_Git_InvalidCommitRequest_Message",
            titleKey: "Trident_Git_Error_Unable_To_Commit_Title"
        }, _a.Git_InvalidUndoRequest = {
            messageKey: "Trident_Git_Error_Git_Undo_Failed_Message",
            titleKey: "Trident_Git_Error_Unable_To_Undo_Title"
        }, _a.Git_InvalidBranchName = {
            messageKey: "Trident_Git_Error_Git_InvalidBranchName_Message",
            titleKey: "Trident_Git_Error_Git_InvalidBranchName_Title"
        }, _a.Git_InvalidDirectoryName = {
            messageKey: "Trident_Git_Error_Git_InvalidDirectoryName_Message",
            titleKey: "Trident_Git_Error_Git_InvalidDirectoryName_Title"
        }, _a.Git_InvalidRequestNoFilesToCommit = {
            messageKey: "Trident_Git_Error_Git_InvalidRequestNoFilesToCommit_Message",
            titleKey: "Trident_Git_Error_Git_InvalidRequestNoFilesToCommit_Title"
        }, _a.Git_PotentialMergeConflict = {
            messageKey: "Trident_Git_Error_Git_PotentialMergeConflict_Message",
            titleKey: "Trident_Git_Error_Git_PotentialMergeConflict_Title"
        }, _a.Git_GitConnectionAlreadyInitialized = {
            messageKey: "Trident_Git_Error_Git_GitConnectionAlreadyInitialized_Message",
            titleKey: "Trident_Git_Error_Git_GitConnectionAlreadyInitialized_Title"
        }, _a.Git_UnexpectedResponseFromGitProvider = {
            messageKey: "Trident_Git_Error_Git_Provider_API_Message",
            titleKey: "Trident_Git_Error_Git_Provider_API_Title"
        }, _a.Git_DependenciesDeletionFailed = {
            messageKey: "Trident_Git_Error_Git_DependenciesDeletionFailed_Message",
            titleKey: "Trident_Git_Error_Unable_To_Complete_Action_Title"
        }, _a.Git_MissingDependencies = {
            messageKey: "Trident_Git_Error_Git_MissingDependencies_Message",
            titleKey: "Trident_Git_Error_Unable_To_Update_Title"
        }, _a.Git_MissingDependenciesSwitchBranch = {
            messageKey: "Trident_Git_Error_Git_Switch_Branch_MissingDependencies_Message",
            titleKey: "Trident_Git_Error_Git_Switch_Branch_Failed_Title"
        }, _a.Git_CyclicDependencyDetectedSwitchBranch = {
            messageKey: "Trident_Git_Error_Git_Switch_Branch_MissingDependencies_Message",
            titleKey: "Trident_Git_Error_Git_Switch_Branch_Failed_Title"
        }, _a.Git_CyclicDependencyDetected = {
            messageKey: "Trident_Git_Error_Git_MissingDependencies_Message",
            titleKey: "Trident_Git_Error_Unable_To_Update_Title"
        }, _a.Git_ItemNotFound = {
            titleKey: "Trident_Git_Error_Git_ItemNotFound_Title",
            messageKey: "Trident_Git_Error_Git_ItemNotFound_Message"
        }, _a.Git_PathTooLong = {
            titleKey: "Trident_Git_Error_Git_PathTooLong_Title",
            messageKey: "Trident_Git_Error_Git_PathTooLong_Message"
        }, _a.Git_GitOperationWithSensitivityLabelsNotSupported = {
            messageKey: "Trident_Git_Error_Git_GitOperationWithSensitivityLabelsNotSupported_Message",
            titleKey: "Trident_Git_Error_Git_GitOperationWithSensitivityLabelsNotSupported_Title"
        }, _a.Git_BranchDeleted = {
            messageKey: "Trident_Git_Error_Git_BranchDeleted_Message",
            titleKey: "Trident_Git_Error_Unable_To_Complete_Action_Title"
        }, _a.Git_GitProviderCommitRejectedByPolicy = {
            messageKey: "Trident_Git_Error_GitProviderCommitRejectedByPolicy_Message",
            titleKey: "Trident_Git_Error_GitProviderCommitRejectedByPolicy_Title"
        }, _a.Git_DirectoryNameDiffersByCase = {
            messageKey: "Trident_Git_Error_Git_ItemNotFound_Message",
            titleKey: "Trident_Git_Error_Git_ItemNotFound_Title"
        }, _a.Git_GitIntegrationTenantAdminSwitchDisabled = {
            messageKey: "Trident_Git_TenantAdminSwitchDisabled_Message",
            titleKey: "Trident_Git_TenantAdminSwitchDisabled_Title"
        }, _a.Git_GitProviderCommitMaxSizeExceeded = {
            messageKey: "Trident_Git_Error_GitProviderCommitMaxSizeExceeded_Message",
            titleKey: "Trident_Git_Error_GitProviderCommitMaxSizeExceeded_Title"
        }, _a.Git_ExportDefinitionFailed = {
            messageKey: "Trident_Git_Error_ExportDefinitionFailed_Message",
            titleKey: "Trident_Git_Error_ExportDefinitionFailed_Title"
        }, _a.Git_DiscoverDependenciesFailed = {
            messageKey: "Trident_Git_Error_DiscoverDependenciesFailed_Message",
            titleKey: "Trident_Git_Error_DiscoverDependenciesFailed_Title"
        }, _a.Git_GitProviderUnauthorizedGuestUser = {
            messageKey: "Trident_Git_Error_GitProviderUnauthorizedGuestUser_Message",
            titleKey: "Trident_Git_Error_GitProviderUnauthorizedGuestUser_Title"
        }, _a.Git_GitProviderCommitObjectRejected = {
            messageKey: "Trident_Git_Error_GitProviderCommitObjectRejected_Message",
            titleKey: "Trident_Git_Error_GitProviderCommitRejectedByPolicy_Title"
        }, _a.Git_BranchNameAlreadyExists = {
            messageKey: "Trident_Git_Error_Git_Branch_Name_Already_Exists_Message",
            titleKey: "Trident_Git_Error_Git_InvalidBranchName_Title"
        }, _a.Git_GitProviderAadUserStateError = {
            messageKey: "Trident_Git_Error_GitProviderAadUserStateError_Message",
            titleKey: "Trident_Git_Error_Unable_To_Complete_Action_Title"
        }, _a.Git_Disconnect_No_Connection = {
            messageKey: "Trident_Git_Error_Git_Disconnect_No_Connection_Message",
            titleKey: "Trident_Git_Error_Git_Disconnect_Failed_Title"
        }, _a.Git_Invalid_Connection_Details = {
            messageKey: "Trident_Git_Error_Git_Invalid_Connection_Details_Message",
            titleKey: "Trident_Git_Error_Git_Invalid_Connection_Details_Title"
        }, _a.Git_ConnectionDetailsNotFound = {
            messageKey: "Trident_Git_Error_Git_Connection_Details_Not_Found_Message",
            titleKey: "ErrorMessage_DefaultTitle"
        }, _a.Git_Workspace_Not_Initialized = {
            messageKey: "Trident_Git_Error_Git_Workspace_Not_Initialized_Message",
            titleKey: "Trident_Git_Error_Git_Workspace_Not_Initialized_Title"
        }, _a.Git_Create_Branch_Origin_Branch_Not_Found = {
            messageKey: "Trident_Git_Error_Git_Create_Branch_Origin_Branch_Not_Found_Message",
            titleKey: "Trident_Git_Error_Git_Create_Branch_Origin_Branch_Not_Found_Title"
        }, _a.Git_GitSwitchBranchWithUncommittedChanges = {
            messageKey: "Trident_Git_Error_Git_Switch_Branch_Uncommited_Changes_Message",
            titleKey: "Trident_Git_Error_Git_Switch_Branch_Failed_Title"
        }, _a.GitGitInvalidSwitchBranchRequest = {
            messageKey: "Trident_Git_Error_Git_Switch_Branch_Invalid_Request_Message",
            titleKey: "Trident_Git_Error_Git_Switch_Branch_Failed_Title"
        }, _a.GitSwitchBranchIdenticalBranchName = {
            messageKey: "Trident_Git_Error_Git_Switch_Branch_Identical_Branch_Name_Message",
            titleKey: "Trident_Git_Error_Git_Switch_Branch_Failed_Title"
        }, _a.Git_Switch_Branch_Item_Not_Found = {
            messageKey: "Trident_Git_Error_Git_Switch_Branch_Item_Not_Found_Message",
            titleKey: "Trident_Git_Error_Git_Switch_Branch_Failed_Title"
        }, _a.Git_Switch_Branch_Head_Not_Synced = {
            messageKey: "Trident_Git_Error_Git_Switch_Branch_Head_Not_Synced_Message",
            titleKey: "Trident_Git_Error_Git_Switch_Branch_Failed_Title"
        }, _a.Git_GitProviderCredentialsNotAuthorizedError = {
            messageKey: "Trident_Git_Error_Git_CredentialsNotAuthorized_Message",
            titleKey: "Trident_Git_Error_Git_CredentialsNotAuthorized_Title"
        }, _a.Git_DuplicateArtifactsWithSameLogicalId = {
            messageKey: "Trident_Git_Duplicate_LogicalId_Message",
            titleKey: "Trident_Git_Duplicate_LogicalId_Title"
        }, _a.Git_PotentialDuplicateDisplayNameAndType = {
            messageKey: "Trident_Git_Error_Git_Potential_Duplicate_Diaplay_Name_And_Type_Message",
            titleKey: "Trident_Git_Error_AlmOperation_Update_Title"
        }, _a.Git_DisplayNameIsInvalid = {
            messageKey: "Trident_Git_Error_Git_Display_Name_Is_Invalid_Message",
            titleKey: "Trident_Git_Error_AlmOperation_Update_Title"
        }, _a.Git_GitIntegrationBlockedByDataLossPrevention = {
            messageKey: "Trident_Git_Blocked_DataLoss_Prevention_Message",
            titleKey: "Trident_Git_Blocked_DataLoss_Prevention_Title"
        }, _a.Git_Connect_Invalid_Request = {
            messageKey: "Trident_Git_Error_Git_Connect_Failed_Message",
            titleKey: "Trident_Git_Error_Git_Connect_Failed_Title"
        }, _a.Git_Disconnect_Invalid_Request = {
            messageKey: "Trident_Git_Error_Git_Disconnect_Failed_Message",
            titleKey: "Trident_Git_Error_Git_Disconnect_Failed_Title"
        }, _a.Git_Initialization_Invalid_Request = {
            messageKey: "Trident_Git_Error_Git_Invalid_Initialization_Request_Message",
            titleKey: "Trident_Git_Error_Unable_To_Initialize_Title"
        }, _a.Git_Undo_Invalid_Request = {
            messageKey: "Trident_Git_Error_Undo_Message",
            titleKey: "Trident_Git_Error_Unable_To_Undo_Title"
        }, _a[" Git_Commit_Invalid_Request"] = {
            messageKey: "Trident_Git_Error_Git_InvalidCommitRequest_Message",
            titleKey: "Trident_Git_Error_Unable_To_Commit_Title"
        }, _a.Git_Update_Invalid_Request = {
            messageKey: "Trident_Git_Error_Git_Update_Invalid_Request_Message",
            titleKey: "Trident_Git_Error_Unable_To_Update_Title"
        }, _a.Git_Create_Branch_Invalid_Request = {
            messageKey: "Trident_Git_Error_Git_Create_Branch_Invalid_Request_Message",
            titleKey: "Trident_Git_Error_Unable_To_Create_Branch_Title"
        }, _a.Git_Create_Directory_Invalid_Request = {
            messageKey: "Trident_Git_Error_Git_Create_Folder_Invalid_Request_Message",
            titleKey: "Trident_Git_Error_Unable_To_Create_Folder_Title"
        }, _a.Git_Switch_Branch_Invalid_Request = {
            messageKey: "Trident_Git_Error_Git_Switch_Branch_Invalid_Request_Message",
            titleKey: "Trident_Git_Error_Git_Switch_Branch_Failed_Title"
        }, _a.Git_Connect_Failed = {
            messageKey: "Trident_Git_Error_Git_Connect_Failed_Message",
            titleKey: "Trident_Git_Error_Git_Connect_Failed_Title"
        }, _a.Git_Status_Failed = {
            messageKey: "Trident_Git_Error_Git_Status_Failed_Message",
            titleKey: "Trident_Git_Error_Git_Status_Failed_Title"
        }, _a.Git_Create_Branch_Failed = {
            messageKey: "Trident_Git_Error_Git_Create_Branch_Failed_Message",
            titleKey: "Trident_Git_Error_Git_Create_Branch_Failed_Title"
        }, _a.Git_Sync_Failed = {
            messageKey: "Trident_Git_Error_Git_Sync_Failed_Message",
            titleKey: "Trident_Git_Error_Git_Sync_Failed_Title"
        }, _a.Git_Disconnect_Failed = {
            messageKey: "Trident_Git_Error_Git_Disconnect_Failed_Message",
            titleKey: "Trident_Git_Error_Git_Disconnect_Failed_Title"
        }, _a.Git_Initialization_Failed = {
            messageKey: "Trident_Git_Error_Git_Initialization_Failed_Message",
            titleKey: "Trident_Git_Error_Unable_To_Initialize_Title"
        }, _a.Git_Undo_Failed = {
            messageKey: "Trident_Git_Error_Git_Undo_Failed_Message",
            titleKey: "Trident_Git_Error_Unable_To_Undo_Title"
        }, _a.Git_Commit_Failed = {
            messageKey: "Trident_Git_Error_Git_InvalidCommitRequest_Message",
            titleKey: "Trident_Git_Error_Unable_To_Commit_Title"
        }, _a.Git_Update_Failed = {
            messageKey: "Trident_Git_Error_Git_Update_Invalid_Request_Message",
            titleKey: "Trident_Git_Error_Unable_To_Update_Title"
        }, _a.Git_Create_Folder_Failed = {
            messageKey: "Trident_Git_Error_Git_Create_Folder_Invalid_Request_Message",
            titleKey: "Trident_Git_Error_Unable_To_Create_Folder_Title"
        }, _a.Git_Checkout_Branch_Failed = {
            messageKey: "Trident_Git_Error_Git_Checkout_Branch_Failed_Message",
            titleKey: "Trident_Git_Error_Git_Checkout_Branch_Failed_Title"
        }, _a.Git_Switch_Branch_Failed = {
            messageKey: "Trident_Git_Error_Git_Switch_Branch_Failed_Message",
            titleKey: "Trident_Git_Error_Git_Switch_Branch_Failed_Title"
        }, _a.Git_Get_Branches_Failed = {
            messageKey: "Trident_Git_Error_Git_Get_Branches_Failed_Message",
            titleKey: "Trident_Git_Error_Git_Connection_Details_Title"
        }, _a.Git_Branch_Out_Failed = {
            messageKey: "Trident_Git_Error_Git_Branch_Out_Failed_Message",
            titleKey: "Trident_Git_Error_Git_Branch_Out_Failed_Title"
        }, _a.Git_BranchOutIdenticalBranchNames = {
            messageKey: "Trident_Git_Error_Git_Branch_Name_Already_Exists_Message",
            titleKey: "Trident_Git_Error_Git_InvalidBranchName_Title"
        }, _a.GitProviderRepositoryNotFoundException = {
            messageKey: "Trident_Git_Provider_Repository_Not_Found_Error_Message",
            titleKey: "Trident_Git_Provider_Repository_Not_Found_Error_Title"
        }, _a.GitTreeSizeExceeded = {
            messageKey: "Trident_Git_Tree_Size_Exceeded_Message",
            titleKey: "Trident_Git_Tree_Size_Exceeded_Title"
        }, _a.GitIntegrationGitHubTenantAdminSwitchDisabled = {
            messageKey: "Trident_Git_GitHub_Tenant_Admin_Switch_Disabled_Message",
            titleKey: "Trident_Git_GitHub_Tenant_Admin_Switch_Disabled_Title"
        }, _a.GitTokenExpiredOrDeprecatedException = {
            messageKey: "Trident_Git_Token_Expired_Or_Deprecated_Exception_Message",
            titleKey: "Trident_Git_Token_Expired_Or_Deprecated_Exception_Title"
        }, _a.Git_GitTokenProviderCredentialsKindMismatchError = {
            messageKey: "Trident_Git_Git_Token_Provider_Credentials_Kind_Mismatch_Error_Message",
            titleKey: "Trident_Git_Git_Token_Provider_Credentials_Kind_Mismatch_Error_Title"
        }, _a.Git_GitTokenProviderCredentialsConnectionMismatchError = {
            messageKey: "Trident_Git_Git_Token_Provider_Credentials_Connection_Mismatch_Error_Message",
            titleKey: "Trident_Git_Git_Token_Provider_Credentials_Connection_Mismatch_Error_Title"
        }, _a.Git_GitTokenProviderCredentialsInternalError = {
            messageKey: "Trident_Git_Provider_Bad_Credentials_Message",
            titleKey: "Trident_Git_Provider_Bad_Credentials_Title"
        }, _a.Git_InvalidConfigureCredentialsRequest = {
            messageKey: "Trident_Git_Invalid_Configure_Credentials_Request_Message",
            titleKey: "Trident_Git_Invalid_Configure_Credentials_Request_Title"
        }, _a.GitCommitInvalidOperationResult = {
            messageKey: "Trident_Git_Commit_Invalid_Operation_Result_Message",
            titleKey: "Trident_Git_Commit_Invalid_Operation_Result_Title"
        }, _a.Git_GitProviderRateLimitExceeded = {
            messageKey: "Trident_Git_Git_Provider_Rate_Limit_Exceeded_Message",
            titleKey: "Trident_Git_Git_Provider_Rate_Limit_Exceeded_Title"
        }, _a.Git_GitProviderBadCredentials = {
            messageKey: "Trident_Git_Provider_Bad_Credentials_Message",
            titleKey: "Trident_Git_Provider_Bad_Credentials_Title"
        }, _a.Git_Create_Datasource_Failed = {
            messageKey: "Trident_Git_Create_Datasource_Failed_Message",
            titleKey: "Trident_Git_Create_Datasource_Failed_Title"
        }, _a.Git_Load_Datasources_Failed = {
            messageKey: "Trident_Git_Load_Datasources_Failed_Message",
            titleKey: "Trident_Git_Load_Datasources_Failed_Title"
        }, _a.Git_SQLDatabaseDisplayNameCannotBeChanged = {
            messageKey: "Trident_Git_SQL_Database_Display_Name_Cannot_Be_Changed_Message",
            titleKey: "Trident_Git_SQL_Database_Display_Name_Cannot_Be_Changed_Title"
        }, _a.Git_GitHttpClientTimeout = {
            messageKey: "Trident_Git_Error_Git_GitHttpClientTimeout_Message",
            titleKey: "MultiSelect_Shortcut_Failed"
        }, _a.Alm_InvalidBranchOutRequest_OperationFailureAfterFolderCreation = {
            messageKey: "Trident_Git_Branch_Out_Error_Branch_Error_Message",
            titleKey: "Trident_Git_Branch_Out_Error_Branch_Error_Title"
        }, _a.AlmOperationFailed_CommitToGit = {
            messageKey: "ErrorDialogHelperText_TechnicalDetails",
            titleKey: "Trident_Git_Error_AlmOperation_Commit_Title"
        }, _a.AlmOperationFailed_UndoFromGit = {
            messageKey: "ErrorDialogHelperText_TechnicalDetails",
            titleKey: "Trident_Git_Error_AlmOperation_Undo_Title"
        }, _a.AlmOperationFailed_UpdateFromGit = {
            messageKey: "ErrorDialogHelperText_TechnicalDetails",
            titleKey: "Trident_Git_Error_AlmOperation_Update_Title"
        }, _a.AlmOperationFailed_SwitchGitBranch = {
            messageKey: "ErrorDialogHelperText_TechnicalDetails",
            titleKey: "Trident_Git_Error_AlmOperation_Switch_Branch_Title"
        }, _a.DMTS_DuplicateDataSourceNameError = {
            messageKey: "Trident_Git_Data_Source_Name_Already_Exists_Message",
            titleKey: "Trident_Git_Data_Source_Name_Already_Exists_Title"
        }, _a.DM_GWPipeline_Gateway_MashupDataAccessError = {
            messageKey: "Trident_Git_Provider_Bad_Credentials_Message",
            titleKey: "Trident_Git_Provider_Bad_Credentials_Title"
        }, _a), gitErrorMoreInfoLocalizationMap = ((_b = {}).Git_PotentialDuplicateDisplayNameAndType = {
            moreInfoKeys: [ "Trident_Git_Error_Git_Potential_Duplicate_Diaplay_Name_And_Type_MoreInfo1", "Trident_Git_Error_Git_Potential_Duplicate_Diaplay_Name_And_Type_MoreInfo2" ]
        }, _b);
        function isGitError(token) {
            return token && "GitError" === token.__tag;
        }
        function getFirstErrorDetails(gitError) {
            return null == gitError ? void 0 : gitError.errorsDetails[0];
        }
        function hasError(gitError, errorType) {
            return null == gitError ? void 0 : gitError.errorsDetails.some(function(error) {
                return error.errorType === errorType;
            });
        }
        function isAdoMFAError(response) {
            var _a, adalError = AdalErrorType[null === (_a = null == response ? void 0 : response.error) || void 0 === _a ? void 0 : _a.code];
            return 400 === (null == response ? void 0 : response.status) && !!adalError;
        }
        function isInvalidDirectoryNameError(response) {
            var _a;
            return "Git_InvalidDirectoryName" === (null === (_a = response.error["pbi.error"]) || void 0 === _a ? void 0 : _a.code);
        }
        function isMergePolicyNotSpecifiedError(gitError) {
            return hasError(gitError, "Git_MergePolicyNotSpecified");
        }
        function isBranchPolicyCommitError(errortype, gitSyncState) {
            var _a;
            return "AlmOperationFailed_CommitToGit" === errortype && "Git_GitProviderCommitRejectedByPolicy" === (null === (_a = null == gitSyncState ? void 0 : gitSyncState.gitNonInteractiveOperationErrorDetails) || void 0 === _a ? void 0 : _a.errorCode);
        }
        function isCommitMaxSizeExceededError(errortype, gitSyncState) {
            var _a;
            return "AlmOperationFailed_CommitToGit" === errortype && "Git_GitProviderCommitMaxSizeExceeded" === (null === (_a = null == gitSyncState ? void 0 : gitSyncState.gitNonInteractiveOperationErrorDetails) || void 0 === _a ? void 0 : _a.errorCode);
        }
        function makeGitError(errorDetails, errorInfo) {
            return {
                __tag: "GitError",
                errorInfo,
                errorsDetails: errorDetails
            };
        }
        function isGitAlmOperationType(gitErrorType) {
            return !!gitAlmOperationErrors.find(function(e) {
                return e === gitErrorType;
            });
        }
        function isItemNotFoundError(gitError) {
            return hasError(gitError, "Git_ItemNotFound") || hasError(gitError, "Git_DirectoryNameDiffersByCase");
        }
        var constants_a, InteractionType = function(InteractionType) {
            return InteractionType[InteractionType.SingleOption = 0] = "SingleOption", InteractionType[InteractionType.None = 1] = "None", 
            InteractionType;
        }({}), gitAlmOperationErrors = [ "AlmOperationFailed_CommitToGit", "AlmOperationFailed_UndoFromGit", "AlmOperationFailed_UpdateFromGit" ], GitProviderType = function(GitProviderType) {
            return GitProviderType[GitProviderType.AzureDevOps = 0] = "AzureDevOps", GitProviderType[GitProviderType.GitHub = 1] = "GitHub", 
            GitProviderType;
        }({}), optionNotEnabled = "optionNotEnabled", GitOperationType = function(GitOperationType) {
            return GitOperationType[GitOperationType.Commit = 0] = "Commit", GitOperationType[GitOperationType.Update = 1] = "Update", 
            GitOperationType[GitOperationType.Initialize = 2] = "Initialize", GitOperationType[GitOperationType.Undo = 3] = "Undo", 
            GitOperationType[GitOperationType.CheckoutBranch = 4] = "CheckoutBranch", GitOperationType[GitOperationType.SwitchBranch = 5] = "SwitchBranch", 
            GitOperationType;
        }({}), GitOperationStatus = function(GitOperationStatus) {
            return GitOperationStatus[GitOperationStatus.InProgress = 0] = "InProgress", GitOperationStatus[GitOperationStatus.Successful = 1] = "Successful", 
            GitOperationStatus[GitOperationStatus.Failed = 2] = "Failed", GitOperationStatus;
        }({}), MergePolicy = function(MergePolicy) {
            return MergePolicy[MergePolicy.None = 0] = "None", MergePolicy[MergePolicy.KeepYours = 1] = "KeepYours", 
            MergePolicy[MergePolicy.TakeTheirs = 2] = "TakeTheirs", MergePolicy;
        }({}), GitProviderDisplayName = function(GitProviderDisplayName) {
            return GitProviderDisplayName.AzureDevOps = "Azure DevOps", GitProviderDisplayName.GitHub = "GitHub", 
            GitProviderDisplayName;
        }({}), c_gitProviderInfoRecord = ((constants_a = {})[GitProviderType.AzureDevOps] = {
            type: GitProviderType.AzureDevOps,
            name: GitProviderDisplayName.AzureDevOps,
            iconName: "azuredevops_logo_16_regular"
        }, constants_a[GitProviderType.GitHub] = {
            type: GitProviderType.GitHub,
            name: GitProviderDisplayName.GitHub,
            iconName: "github_logo"
        }, constants_a);
        function getBranchReference(details) {
            var _a, repoUrl = null === (_a = getRepositoryReference(details)) || void 0 === _a ? void 0 : _a.repositoryLink;
            if (repoUrl) return {
                branchName: details.branchName,
                branchLink: repoUrl + "?version=GB".concat(details.branchName)
            };
        }
        function getHeadReference(details) {
            var _a, repoUrl = null === (_a = getRepositoryReference(details)) || void 0 === _a ? void 0 : _a.repositoryLink;
            if (repoUrl && (null == details ? void 0 : details.head)) return {
                commitId: details.head,
                commitLink: repoUrl + "/commit/".concat(details.head, "/?refName=refs/heads/").concat(details.branchName)
            };
        }
        function getRepositoryReference(details) {
            if (null == details ? void 0 : details.projectName) return {
                repositoryName: details.repositoryName,
                repositoryLink: "https://".concat(details.organizationName, ".visualstudio.com/").concat(details.projectName, "/_git/").concat(details.repositoryName)
            };
        }
        function github_getBranchReference(details) {
            return {
                branchName: details.branchName,
                branchLink: github_getRepositoryReference(details).repositoryLink + "/tree/".concat(details.branchName)
            };
        }
        function github_getHeadReference(details) {
            if (null == details ? void 0 : details.head) return {
                commitId: details.head,
                commitLink: github_getRepositoryReference(details).repositoryLink + "/commit/".concat(details.head)
            };
        }
        function github_getRepositoryReference(details) {
            return {
                repositoryName: details.repositoryName,
                repositoryLink: "https://github.com/".concat(details.organizationName, "/").concat(details.repositoryName)
            };
        }
        var c_credentialsDetailsStaticInfo = {
            credentialType: "Key",
            encryptedConnection: "Any",
            privacyLevel: "Private",
            skipTestConnection: !1,
            encryptionAlgorithm: "NONE"
        }, c_createDatasourceRequestStaticInfo = {
            singleSignOnType: "None",
            allowDatasourceThroughGateway: !1
        }, c_datasourceType = "Extension", c_testConnectionParameterStaticInfo = {
            name: "url",
            type: "nullable text",
            isRequired: !1
        }, c_branchNameInvalidCharacters = [ "\\", "?", "*", ":", "|", '"', "<", ">" ], c_branchNameInvalidSuffix = [ ".", " " ];
        function getFormattedLastSyncTime(triLocalizationService, time, message) {
            if (void 0 === message && (message = "Trident_Git_Last_Synced_At"), time) {
                var currentLocale = triLocalizationService.currentLanguageLocale, date = new Date(time), formattedDate = triLocalizationService.format("Trident_Git_Last_Synced_At", [ date.toLocaleDateString(currentLocale, {
                    day: "numeric",
                    month: "numeric",
                    year: "numeric"
                }), date.toLocaleTimeString(currentLocale, {
                    hour: "numeric",
                    minute: "numeric"
                }) ]);
                return "Trident_Git_Last_Synced_At" === message ? formattedDate : triLocalizationService.get(message) + formattedDate;
            }
        }
        function initializeGitProviderSharedUtils() {
            var _a;
            return (_a = {})[GitProviderType.AzureDevOps] = {
                getBranchReference,
                getHeadReference,
                getIconName: function() {
                    return "azuredevops_logo_16_regular";
                },
                getRepositoryReference
            }, _a[GitProviderType.GitHub] = {
                getBranchReference: github_getBranchReference,
                getHeadReference: github_getHeadReference,
                getIconName: function() {
                    return "github_logo";
                },
                getRepositoryReference: github_getRepositoryReference
            }, _a;
        }
        function checkBranchNameValidity(branchName, localizationService) {
            return c_branchNameInvalidCharacters.some(function(char) {
                return branchName.includes(char);
            }) ? localizationService.get("Trident_Git_Error_Git_InvalidBranchName_Message") : c_branchNameInvalidSuffix.some(function(char) {
                return branchName.endsWith(char);
            }) ? localizationService.get("Trident_Git_Error_Git_InvalidBranchNameSuffix_Message") : void 0;
        }
    },
    57156: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            F: function() {
                return TriCollapsedContainerModule;
            }
        });
        var common = __webpack_require__(77476), localization_module = __webpack_require__(78035), tri_svg_icon = __webpack_require__(17177), tri_svg_icon_mock = __webpack_require__(16622), core = __webpack_require__(50423), TriCollapsedContainerModule = function() {
            function TriCollapsedContainerModule() {}
            return TriCollapsedContainerModule.\u0275fac = function(t) {
                return new (t || TriCollapsedContainerModule);
            }, TriCollapsedContainerModule.\u0275mod = core["\u0275\u0275defineNgModule"]({
                type: TriCollapsedContainerModule
            }), TriCollapsedContainerModule.\u0275inj = core["\u0275\u0275defineInjector"]({
                imports: [ common.CommonModule, localization_module.Y, tri_svg_icon.T6, tri_svg_icon_mock.u ]
            }), TriCollapsedContainerModule;
        }();
    },
    13414: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            t: function() {
                return TriSwitchComponent;
            }
        });
        var _angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(4437), _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(50423), _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(17174), _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(51193), _angular_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(77476), _c0 = [ "switchInput" ];
        function TriSwitchComponent_span_0_Template(rf, ctx) {
            if (1 & rf && (_angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementStart"](0, "span", 7), 
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275text"](1), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementEnd"]()), 
            2 & rf) {
                var ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275advance"](1), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275textInterpolate1"](" ", ctx_r0.label, "\n");
            }
        }
        function TriSwitchComponent_div_5_span_2_Template(rf, ctx) {
            1 & rf && (_angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementStart"](0, "span", 11), 
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275projection"](1, 1), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementEnd"]());
        }
        function TriSwitchComponent_div_5_Template(rf, ctx) {
            if (1 & rf && (_angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementStart"](0, "div", 8), 
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275element"](1, "span", 9), 
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275template"](2, TriSwitchComponent_div_5_span_2_Template, 2, 0, "span", 10), 
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275advance"](2), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275property"]("ngIf", ctx_r2.compact);
            }
        }
        function TriSwitchComponent_div_6_Template(rf, ctx) {
            1 & rf && (_angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementStart"](0, "div", 12), 
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275element"](1, "span", 13), 
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementEnd"]());
        }
        var _c1 = [ [ [ "tri-switch-text" ], [ "", "tri-switch-text", "" ] ], [ [ "inline-toggle-content" ], [ "", "inline-toggle-content", "" ] ] ], _c2 = [ "tri-switch-text, [tri-switch-text]", "inline-toggle-content, [inline-toggle-content]" ], nextUniqueId = 0, TriSwitchChange = function() {
            return function(source, checked) {
                this.source = source, this.checked = checked;
            };
        }(), TriSwitchComponent = function() {
            function TriSwitchComponent(elementRef, focusMonitor, changeDetectorRef) {
                this.elementRef = elementRef, this.focusMonitor = focusMonitor, this.changeDetectorRef = changeDetectorRef, 
                this._disabled = !1, this._required = !1, this._compact = !1, this._checked = !1, 
                this._indeterminate = !1, this.name = void 0, this._uniqueId = "tri-switch-".concat(++nextUniqueId), 
                this.id = this._uniqueId, this.ariaLabel = void 0, this.ariaLabelledby = void 0, 
                this.ariaDescribedby = "", this.label = void 0, this.listenValueChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, 
                this.toggleChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, 
                this.inputElement = {}, this.onChange = function() {}, this.onTouched = function() {};
            }
            return Object.defineProperty(TriSwitchComponent.prototype, "disabled", {
                get: function() {
                    return this._disabled;
                },
                set: function(value) {
                    this._disabled = (0, _angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__.Ig)(value), 
                    this.changeDetectorRef.markForCheck();
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(TriSwitchComponent.prototype, "required", {
                get: function() {
                    return this._required;
                },
                set: function(value) {
                    this._required = (0, _angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__.Ig)(value);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(TriSwitchComponent.prototype, "checked", {
                get: function() {
                    return this._checked;
                },
                set: function(value) {
                    this._checked = (0, _angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__.Ig)(value), 
                    this.changeDetectorRef.markForCheck();
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(TriSwitchComponent.prototype, "indeterminate", {
                get: function() {
                    return this._indeterminate;
                },
                set: function(value) {
                    this._indeterminate = (0, _angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__.Ig)(value), 
                    this.changeDetectorRef.markForCheck();
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(TriSwitchComponent.prototype, "compact", {
                get: function() {
                    return this._compact;
                },
                set: function(value) {
                    this._compact = (0, _angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__.Ig)(value), 
                    this.changeDetectorRef.markForCheck();
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(TriSwitchComponent.prototype, "inputId", {
                get: function() {
                    return "".concat(this.id || this._uniqueId, "-input");
                },
                enumerable: !1,
                configurable: !0
            }), TriSwitchComponent.prototype.ngAfterContentInit = function() {
                var _this = this;
                this.focusMonitor.monitor(this.elementRef, !0).subscribe(function(focusOrigin) {
                    "keyboard" === focusOrigin || "program" === focusOrigin ? _this.inputElement.nativeElement.focus() : focusOrigin || Promise.resolve().then(function() {
                        return _this.onTouched();
                    });
                });
            }, TriSwitchComponent.prototype.ngOnDestroy = function() {
                this.focusMonitor.stopMonitoring(this.elementRef);
            }, TriSwitchComponent.prototype.onInputChange = function(event, toggleNativeState) {
                void 0 === toggleNativeState && (toggleNativeState = !1), event.stopPropagation(), 
                this.toggleChange.emit(), this.checked = toggleNativeState ? !this.inputElement.nativeElement.checked : this.inputElement.nativeElement.checked, 
                this.indeterminate = !toggleNativeState && this.indeterminate, this.emitChangeEvent();
            }, TriSwitchComponent.prototype.onInputClick = function(event) {
                event.stopPropagation();
            }, TriSwitchComponent.prototype.writeValue = function(value) {
                this.checked = !!value;
            }, TriSwitchComponent.prototype.registerOnChange = function(fn) {
                this.onChange = fn;
            }, TriSwitchComponent.prototype.registerOnTouched = function(fn) {
                this.onTouched = fn;
            }, TriSwitchComponent.prototype.setDisabledState = function(isDisabled) {
                this.disabled = isDisabled, this.changeDetectorRef.markForCheck();
            }, TriSwitchComponent.prototype.focus = function(options, origin) {
                origin ? this.focusMonitor.focusVia(this.inputElement, origin, options) : this.inputElement.nativeElement.focus(options);
            }, TriSwitchComponent.prototype.emitChangeEvent = function() {
                this.onChange(this.checked), this.listenValueChange.emit(new TriSwitchChange(this, this.checked));
            }, TriSwitchComponent.\u0275fac = function(t) {
                return new (t || TriSwitchComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275directiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275directiveInject"](_angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_2__.tE), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275directiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectorRef));
            }, TriSwitchComponent.\u0275cmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275defineComponent"]({
                type: TriSwitchComponent,
                selectors: [ [ "tri-switch" ] ],
                viewQuery: function(rf, ctx) {
                    var _t;
                    1 & rf && _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275viewQuery"](_c0, 5), 
                    2 & rf && _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275queryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275loadQuery"]()) && (ctx.inputElement = _t.first);
                },
                hostAttrs: [ 1, "tri-switch" ],
                hostVars: 10,
                hostBindings: function(rf, ctx) {
                    2 & rf && (_angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275hostProperty"]("id", ctx.id), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275attribute"]("tabindex", ctx.disabled ? null : -1)("aria-label", null)("aria-labelledby", null), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275classProp"]("compact", ctx.compact)("checked", ctx.checked)("disabled", ctx.disabled));
                },
                inputs: {
                    name: "name",
                    id: "id",
                    ariaLabel: [ "aria-label", "ariaLabel" ],
                    ariaLabelledby: [ "aria-labelledby", "ariaLabelledby" ],
                    ariaDescribedby: [ "aria-describedby", "ariaDescribedby" ],
                    label: "label",
                    disabled: "disabled",
                    required: "required",
                    checked: "checked",
                    indeterminate: "indeterminate",
                    compact: "compact"
                },
                outputs: {
                    listenValueChange: "listenValueChange",
                    toggleChange: "toggleChange"
                },
                exportAs: [ "triSwitch" ],
                features: [ _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275ProvidersFeature"]([ {
                    provide: _angular_forms__WEBPACK_IMPORTED_MODULE_3__.JU,
                    useExisting: (0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(function() {
                        return TriSwitchComponent;
                    }),
                    multi: !0
                } ]) ],
                ngContentSelectors: _c2,
                decls: 9,
                vars: 17,
                consts: [ [ "aria-hidden", "true", "class", "tri-switch-label", 4, "ngIf" ], [ 1, "tri-switch-internal" ], [ "type", "checkbox", "role", "checkbox", 1, "tri-switch-input", "cdk-visually-hidden", 3, "id", "checked", "indeterminate", "disabled", "required", "change", "click", "keydown.enter" ], [ "switchInput", "" ], [ "class", "tri-switch-circle", 4, "ngIf" ], [ "class", "tri-switch-rect", 4, "ngIf" ], [ "aria-hidden", "true", 1, "tri-switch-text" ], [ "aria-hidden", "true", 1, "tri-switch-label" ], [ 1, "tri-switch-circle" ], [ "aria-hidden", "true", 1, "tri-switch-checkmark" ], [ "class", "tri-toggle-inner-text", 4, "ngIf" ], [ 1, "tri-toggle-inner-text" ], [ 1, "tri-switch-rect" ], [ "aria-hidden", "true", 1, "tri-switch-dash" ] ],
                template: function(rf, ctx) {
                    1 & rf && (_angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275projectionDef"](_c1), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275template"](0, TriSwitchComponent_span_0_Template, 2, 1, "span", 0), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementStart"](1, "label", 1)(2, "input", 2, 3), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275listener"]("change", function($event) {
                        return ctx.onInputChange($event, !1);
                    })("click", function($event) {
                        return ctx.onInputClick($event);
                    })("keydown.enter", function($event) {
                        return ctx.onInputChange($event, !0);
                    }), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementEnd"](), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementStart"](4, "section"), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275template"](5, TriSwitchComponent_div_5_Template, 3, 1, "div", 4), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275template"](6, TriSwitchComponent_div_6_Template, 2, 0, "div", 5), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementStart"](7, "span", 6), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275projection"](8), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementEnd"]()()()), 
                    2 & rf && (_angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275property"]("ngIf", ctx.label), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275advance"](1), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275classProp"]("disabled", ctx.disabled)("indeterminate", ctx.indeterminate), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275attribute"]("for", ctx.inputId), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275advance"](1), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275property"]("id", ctx.inputId)("checked", ctx.checked && !ctx.indeterminate)("indeterminate", ctx.indeterminate)("disabled", ctx.disabled)("required", ctx.required), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275attribute"]("name", ctx.name)("aria-label", ctx.ariaLabel || ctx.label)("aria-labelledby", ctx.ariaLabelledby)("aria-describedby", ctx.ariaDescribedby), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275advance"](3), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275property"]("ngIf", !ctx.indeterminate), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275advance"](1), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275property"]("ngIf", ctx.indeterminate));
                },
                dependencies: [ _angular_common__WEBPACK_IMPORTED_MODULE_4__.NgIf ],
                styles: [ '.compact[_nghost-%COMP%]   .tri-switch-circle[_ngcontent-%COMP%], .compact[_nghost-%COMP%]   .tri-switch-rect[_ngcontent-%COMP%]{width:32px;height:16px}.compact[_nghost-%COMP%]   .tri-switch-label[_ngcontent-%COMP%]{font-family:var(--fontFamilyBase);font-size:var(--fontSizeBase200);font-weight:400;margin-bottom:8px}.compact[_nghost-%COMP%]   .tri-switch-text[_ngcontent-%COMP%]{font-size:var(--fontSizeBase200);line-height:16px}.compact[_nghost-%COMP%]   .tri-switch-checkmark[_ngcontent-%COMP%]{width:8px;height:8px}.compact[_nghost-%COMP%]   .tri-switch-dash[_ngcontent-%COMP%]{width:8px;height:2px}.compact[_nghost-%COMP%]   .tri-toggle-inner-text[_ngcontent-%COMP%]{display:flex;font-family:var(--fontFamilyBase);font-size:9px}.compact[_nghost-%COMP%]   .tri-switch-internal[_ngcontent-%COMP%]:not(.disabled)   .tri-switch-input[_ngcontent-%COMP%] + section[_ngcontent-%COMP%]   .tri-toggle-inner-text[_ngcontent-%COMP%]{color:var(--colorNeutralForeground3)}.compact[_nghost-%COMP%]   .tri-switch-internal[_ngcontent-%COMP%]:not(.disabled)   .tri-switch-input[_ngcontent-%COMP%]:checked + section[_ngcontent-%COMP%]   .tri-toggle-inner-text[_ngcontent-%COMP%]{color:var(--colorNeutralForegroundOnBrand)}.compact[_nghost-%COMP%]   .tri-switch-internal[_ngcontent-%COMP%]:not(.disabled)   .tri-switch-rect[_ngcontent-%COMP%]{color:var(--colorNeutralForegroundInverted)}.compact[_nghost-%COMP%]   .tri-switch-internal[_ngcontent-%COMP%]:hover   .tri-switch-input[_ngcontent-%COMP%]:not(:checked) + section[_ngcontent-%COMP%]   .tri-toggle-inner-text[_ngcontent-%COMP%]{color:var(--colorNeutralForeground3)}.compact[_nghost-%COMP%]   .tri-switch-internal[_ngcontent-%COMP%]:hover   .tri-switch-rect[_ngcontent-%COMP%]{color:var(--colorNeutralForegroundInverted)}.compact[_nghost-%COMP%]   .tri-switch-internal.disabled[_ngcontent-%COMP%]   .tri-switch-input[_ngcontent-%COMP%]:not(:checked) + section[_ngcontent-%COMP%]   .tri-toggle-inner-text[_ngcontent-%COMP%]{color:var(--colorNeutralForegroundDisabled)}.compact[_nghost-%COMP%]   .tri-switch-internal.disabled[_ngcontent-%COMP%]   .tri-switch-rect[_ngcontent-%COMP%], .compact[_nghost-%COMP%]   .tri-switch-internal.disabled[_ngcontent-%COMP%]   .tri-switch-text[_ngcontent-%COMP%]{color:var(--colorNeutralForegroundDisabled)}  .tri-switch{display:inline-block;border:2px solid transparent}@media (forced-colors: active){  .tri-switch{border-color:transparent;forced-color-adjust:none}}  .tri-switch.cdk-keyboard-focused:focus-within{border:2px solid var(--colorNeutralStrokeFocus2);border-radius:var(--borderRadiusMedium)}.tri-switch-internal[_ngcontent-%COMP%]{cursor:pointer;display:flex;position:relative;padding:8px 0}.tri-switch-internal[_ngcontent-%COMP%]   section[_ngcontent-%COMP%]{align-items:center;display:flex}.tri-switch-internal[_ngcontent-%COMP%]   input[type=checkbox].tri-switch-input[_ngcontent-%COMP%]{position:absolute;width:0;height:0;opacity:0}.tri-switch-internal.disabled[_ngcontent-%COMP%]{color:var(--colorNeutralForegroundDisabled);cursor:default}.tri-switch-internal.disabled[_ngcontent-%COMP%]   .tri-switch-label[_ngcontent-%COMP%]{cursor:default}.tri-switch-internal.disabled[_ngcontent-%COMP%]   .tri-switch-checkmark[_ngcontent-%COMP%]{background-color:var(--colorNeutralForegroundDisabled)}.tri-switch-internal.disabled[_ngcontent-%COMP%]   .tri-switch-circle[_ngcontent-%COMP%]{border-color:var(--colorNeutralForegroundDisabled)}.tri-switch-internal.disabled[_ngcontent-%COMP%]   .tri-switch-input[_ngcontent-%COMP%]:checked + section[_ngcontent-%COMP%]   .tri-switch-checkmark[_ngcontent-%COMP%]{background-color:var(--colorNeutralForegroundDisabled)}.tri-switch-internal.disabled[_ngcontent-%COMP%]   .tri-switch-input[_ngcontent-%COMP%]:checked + section[_ngcontent-%COMP%]   .tri-switch-circle[_ngcontent-%COMP%]{background-color:var(--colorNeutralBackgroundDisabled);border-color:var(--colorNeutralBackgroundDisabled)}.tri-switch-internal[_ngcontent-%COMP%]:hover:not(.disabled)   .tri-switch-input[_ngcontent-%COMP%]:checked + section[_ngcontent-%COMP%]   .tri-switch-circle[_ngcontent-%COMP%]{border-color:transparent}.tri-switch-internal[_ngcontent-%COMP%]:hover:not(.disabled)   .tri-switch-checkmark[_ngcontent-%COMP%]{background-color:var(--colorNeutralForeground3Hover)}.tri-switch-internal[_ngcontent-%COMP%]:hover:not(.disabled)   .tri-switch-circle[_ngcontent-%COMP%]{border-color:var(--colorNeutralForeground3Hover)}.tri-switch-internal[_ngcontent-%COMP%]:not(.disabled)   .tri-switch-input[_ngcontent-%COMP%]:checked + section[_ngcontent-%COMP%]   .tri-switch-checkmark[_ngcontent-%COMP%]{background-color:var(--colorNeutralForegroundInverted)}.tri-switch-internal[_ngcontent-%COMP%]:not(.disabled)   .tri-switch-input[_ngcontent-%COMP%]:checked + section[_ngcontent-%COMP%]   .tri-switch-circle[_ngcontent-%COMP%]{background-color:var(--colorCompoundBrandBackground);border-color:var(--colorCompoundBrandStroke)}.tri-switch-internal[_ngcontent-%COMP%]:not(.disabled)   .tri-switch-input[_ngcontent-%COMP%]:checked + section[_ngcontent-%COMP%]   .tri-switch-rect[_ngcontent-%COMP%]{background-color:var(--colorCompoundBrandBackground);border-color:var(--colorCompoundBrandStroke)}.tri-switch-internal[_ngcontent-%COMP%]:not(.disabled)   .tri-switch-rect[_ngcontent-%COMP%]{background-color:var(--colorCompoundBrandBackground);border-color:var(--colorCompoundBrandStroke)}.tri-switch-internal[_ngcontent-%COMP%]:not(.disabled):hover   .tri-switch-input[_ngcontent-%COMP%]:checked + section[_ngcontent-%COMP%]   .tri-switch-circle[_ngcontent-%COMP%]{background-color:var(--colorBrandBackgroundHover);border-color:var(--colorCompoundBrandStroke)}.tri-switch-internal[_ngcontent-%COMP%]:not(.disabled):hover   .tri-switch-input[_ngcontent-%COMP%]:checked + section[_ngcontent-%COMP%]   .tri-switch-rect[_ngcontent-%COMP%]{background-color:var(--colorBrandBackgroundHover);border-color:var(--colorCompoundBrandStroke)}.tri-switch-internal[_ngcontent-%COMP%]:not(.disabled):active   .tri-switch-input[_ngcontent-%COMP%]:checked + section[_ngcontent-%COMP%]   .tri-switch-circle[_ngcontent-%COMP%]{background-color:var(--colorBrandBackgroundPressed);border-color:var(--colorBrandBackgroundPressed)}.tri-switch-internal[_ngcontent-%COMP%]:not(.disabled):active   .tri-switch-input[_ngcontent-%COMP%]:checked + section[_ngcontent-%COMP%]   .tri-switch-rect[_ngcontent-%COMP%]{background-color:var(--colorBrandBackgroundPressed);border-color:var(--colorBrandBackgroundPressed)}.tri-switch-internal[_ngcontent-%COMP%]:not(.disabled):focus{border:2px solid var(--colorNeutralStrokeFocus2);border-radius:var(--borderRadiusMedium)}.tri-switch-internal[_ngcontent-%COMP%]:not(.disabled):focus:after{border-radius:var(--borderRadiusSmall);border:1px solid var(--colorNeutralStrokeFocus1);content:"";display:block;height:calc(100% - 2px);width:calc(100% - 1px);position:absolute;left:0;bottom:0;top:0;right:0}.tri-switch-internal[_ngcontent-%COMP%]   .tri-switch-input[_ngcontent-%COMP%]:checked + section[_ngcontent-%COMP%]   .tri-switch-circle[_ngcontent-%COMP%]{flex-direction:row-reverse}.tri-switch-internal[_ngcontent-%COMP%]   .tri-switch-input[_ngcontent-%COMP%]{position:absolute}.tri-switch-circle[_ngcontent-%COMP%], .tri-switch-rect[_ngcontent-%COMP%]{display:flex;align-items:center;flex-direction:row;flex-shrink:0;justify-content:space-between;padding:2px 4px;width:40px;height:20px;border:1px solid var(--colorNeutralStrokeAccessible);border-radius:10px;box-sizing:border-box;transition-property:background,border,border-color;transition-duration:.2s;transition-timing-function:cubic-bezier(.4,0,.23,1);overflow:hidden;background:var(--colorNeutralBackground1)}  html[data-focus-source=key] .tri-switch-input:focus+section{outline-offset:2px}.tri-switch-label[_ngcontent-%COMP%]{font-family:var(--fontFamilyBase);font-size:var(--fontSizeBase300);font-weight:400;display:block;margin-bottom:12px}.tri-switch-text[_ngcontent-%COMP%]{font-family:var(--fontFamilyBase);font-size:var(--fontSizeBase300);color:var(--colorNeutralForeground1);line-height:20px;margin:0 0 0 12px}.tri-switch-checkmark[_ngcontent-%COMP%]{background-color:var(--colorNeutralForeground3);border-radius:50%;margin:2px 0;width:14px;height:14px}.tri-switch-dash[_ngcontent-%COMP%]{background-color:var(--colorNeutralForegroundInverted);border-radius:20%;margin:auto;width:14px;height:4px}' ],
                changeDetection: 0
            }), TriSwitchComponent;
        }();
    },
    30651: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            Jy: function() {
                return TriSwitchModule;
            }
        });
        var common = __webpack_require__(77476), tri_svg_icon = __webpack_require__(17177), core = __webpack_require__(50423), TriSwitchModule = function() {
            function TriSwitchModule() {}
            return TriSwitchModule.\u0275fac = function(t) {
                return new (t || TriSwitchModule);
            }, TriSwitchModule.\u0275mod = core["\u0275\u0275defineNgModule"]({
                type: TriSwitchModule
            }), TriSwitchModule.\u0275inj = core["\u0275\u0275defineInjector"]({
                imports: [ common.CommonModule, tri_svg_icon.T6 ]
            }), TriSwitchModule;
        }();
    },
    43059: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, {
            AutoSaveFieldsActivityName: function() {
                return AutoSaveFieldsActivityName;
            },
            AzureConnectionResourceType: function() {
                return AzureConnectionResourceType;
            },
            CacheTypes: function() {
                return CacheTypes;
            },
            ConfigurationContentType: function() {
                return ConfigurationContentType;
            },
            DatasourceBindingSecurityMode: function() {
                return DatasourceBindingSecurityMode;
            },
            EditConfigurationType: function() {
                return EditConfigurationType;
            },
            LicenseMode: function() {
                return LicenseMode;
            },
            OperationState: function() {
                return OperationState;
            },
            OperationType: function() {
                return OperationType;
            },
            PrivateEndpointConnectionStateStatus: function() {
                return PrivateEndpointConnectionStateStatus;
            },
            PrivateEndpointProvisioningState: function() {
                return PrivateEndpointProvisioningState;
            },
            PrivateEndpointsColumn: function() {
                return PrivateEndpointsColumn;
            },
            StorageFormat: function() {
                return StorageFormat;
            },
            WorkspaceIdentityProvisionState: function() {
                return WorkspaceIdentityProvisionState;
            },
            WorkspaceIdentityRole: function() {
                return WorkspaceIdentityRole;
            },
            WorkspaceIdentityUsersColumn: function() {
                return WorkspaceIdentityUsersColumn;
            },
            WorkspaceSettingsModule: function() {
                return WorkspaceSettingsModule;
            },
            WorkspaceShellSettingsViewComponent: function() {
                return WorkspaceShellSettingsViewComponent;
            },
            datasourceGroup_CognitiveServices: function() {
                return datasourceGroup_CognitiveServices;
            },
            datasourceGroup_Databricks: function() {
                return datasourceGroup_Databricks;
            },
            datasourceGroup_DocumentDb: function() {
                return datasourceGroup_DocumentDb;
            },
            datasourceGroup_EventHub: function() {
                return datasourceGroup_EventHub;
            },
            datasourceGroup_IOTHub: function() {
                return datasourceGroup_IOTHub;
            },
            datasourceGroup_Insights: function() {
                return datasourceGroup_Insights;
            },
            datasourceGroup_KeyVault: function() {
                return datasourceGroup_KeyVault;
            },
            datasourceGroup_Kusto: function() {
                return datasourceGroup_Kusto;
            },
            datasourceGroup_MachineLearningService: function() {
                return datasourceGroup_MachineLearningService;
            },
            datasourceGroup_MariaDB: function() {
                return datasourceGroup_MariaDB;
            },
            datasourceGroup_MySQL: function() {
                return datasourceGroup_MySQL;
            },
            datasourceGroup_Network_ApplicationGateway: function() {
                return datasourceGroup_Network_ApplicationGateway;
            },
            datasourceGroup_Network_PrivateLinkService: function() {
                return datasourceGroup_Network_PrivateLinkService;
            },
            datasourceGroup_PostgreSQL: function() {
                return datasourceGroup_PostgreSQL;
            },
            datasourceGroup_Purview: function() {
                return datasourceGroup_Purview;
            },
            datasourceGroup_Search: function() {
                return datasourceGroup_Search;
            },
            datasourceGroup_Sql: function() {
                return datasourceGroup_Sql;
            },
            datasourceGroup_SqlManagedInstance: function() {
                return datasourceGroup_SqlManagedInstance;
            },
            datasourceGroup_Storage: function() {
                return datasourceGroup_Storage;
            },
            datasourceGroup_Synapse: function() {
                return datasourceGroup_Synapse;
            },
            datasourceGroup_Web: function() {
                return datasourceGroup_Web;
            },
            getDatasourceConfigs: function() {
                return getDatasourceConfigs;
            },
            getErrorCodeLearnMore: function() {
                return getErrorCodeLearnMore;
            },
            isPrivateEndpointsErrorMessage: function() {
                return isPrivateEndpointsErrorMessage;
            },
            isVNetErrorMessage: function() {
                return isVNetErrorMessage;
            },
            resourceIdRegex: function() {
                return resourceIdRegex;
            }
        });
        var common = __webpack_require__(77476), fesm2022_forms = __webpack_require__(17174), legacy_form_field = __webpack_require__(87650), legacy_select = __webpack_require__(48205), divider = __webpack_require__(57746), localization_module = __webpack_require__(78035), telemetry_module = __webpack_require__(65152), core = __webpack_require__(50423), SettingsSharedUIModule = function() {
            function SettingsSharedUIModule() {}
            return SettingsSharedUIModule.\u0275fac = function(t) {
                return new (t || SettingsSharedUIModule);
            }, SettingsSharedUIModule.\u0275mod = core["\u0275\u0275defineNgModule"]({
                type: SettingsSharedUIModule
            }), SettingsSharedUIModule.\u0275inj = core["\u0275\u0275defineInjector"]({
                imports: [ common.CommonModule ]
            }), SettingsSharedUIModule;
        }(), tri_spinner_module = __webpack_require__(5915), tri_dropdown = __webpack_require__(44913), tri_message_bar = __webpack_require__(47768), tri_search_box = __webpack_require__(46303), tri_svg_icon = __webpack_require__(17177), tri_tooltip = __webpack_require__(8816), tri_link = __webpack_require__(16149), tri_radio_button = __webpack_require__(95228), tri_checkbox = __webpack_require__(14977), tri_collapsed_container = __webpack_require__(57156), tri_switch = __webpack_require__(30651), icon = __webpack_require__(44408), src = __webpack_require__(70628), connection_src = __webpack_require__(10510), error_src = __webpack_require__(65232), dialog_src = __webpack_require__(32980), GitServicesInitializeModule = function() {
            function GitServicesInitializeModule() {}
            return GitServicesInitializeModule.\u0275fac = function(t) {
                return new (t || GitServicesInitializeModule);
            }, GitServicesInitializeModule.\u0275mod = core["\u0275\u0275defineNgModule"]({
                type: GitServicesInitializeModule
            }), GitServicesInitializeModule.\u0275inj = core["\u0275\u0275defineInjector"]({
                imports: [ common.CommonModule, tri_checkbox.B, dialog_src.sp, tri_link.m, localization_module.Y, tri_radio_button.W, tri_svg_icon.T6 ]
            }), GitServicesInitializeModule;
        }(), GitInitializationService = function() {
            function GitInitializationService(gitInitializeFacade) {
                this.gitInitializeFacade = gitInitializeFacade;
            }
            return GitInitializationService.prototype.initializeGitConnection = function(gitInitializationState) {
                return this.gitInitializeFacade.initializeGitConnection(gitInitializationState);
            }, GitInitializationService.prototype.getGitInitializationState = function(workspaceId) {
                return this.gitInitializeFacade.getGitInitializationState(workspaceId);
            }, GitInitializationService.prototype.getGitInitializationCallState = function(workspaceId) {
                return this.gitInitializeFacade.getGitInitializationCallState(workspaceId);
            }, GitInitializationService.\u0275fac = function(t) {
                return new (t || GitInitializationService)(core["\u0275\u0275inject"](src.REK));
            }, GitInitializationService.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: GitInitializationService,
                factory: GitInitializationService.\u0275fac,
                providedIn: "root"
            }), GitInitializationService;
        }(), MergePolicy = function(MergePolicy) {
            return MergePolicy[MergePolicy.None = 0] = "None", MergePolicy[MergePolicy.KeepYours = 1] = "KeepYours", 
            MergePolicy[MergePolicy.TakeTheirs = 2] = "TakeTheirs", MergePolicy;
        }({}), localization_service = __webpack_require__(7452), dialog = __webpack_require__(32293), tri_checkbox_component = __webpack_require__(10965), dialog_component = __webpack_require__(95825), tri_link_component = __webpack_require__(65e3), tri_radio_button_component = __webpack_require__(37350), tri_radio_group_component = __webpack_require__(89330), tri_svg_icon_component = __webpack_require__(74913), localize_pipe = __webpack_require__(55334);
        function GitMergePolicySelectionDialogComponent_div_23_Template(rf, ctx) {
            if (1 & rf) {
                var _r2 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div", 9)(1, "tri-checkbox", 10), core["\u0275\u0275listener"]("onChange", function($event) {
                    core["\u0275\u0275restoreView"](_r2);
                    var ctx_r1 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r1.onCheckboxClick($event));
                }), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](2, "span"), 
                core["\u0275\u0275text"](3), core["\u0275\u0275pipe"](4, "localize"), core["\u0275\u0275elementEnd"]()();
            }
            2 & rf && (core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](4, 1, "Trident_Git_Override_Checkbox_Information"), " "));
        }
        var _MatSliderVisualThumb, _MatSlider, _MatSliderThumb, _MatSliderRangeThumb, _MatSliderModule, GitMergePolicySelectionDialogComponent = function() {
            function GitMergePolicySelectionDialogComponent(localizationService, dialogRef) {
                this.localizationService = localizationService, this.dialogRef = dialogRef, this._isSyncButtonDisabled = !0, 
                this._selectedMergePolicy = null, this._isOverrideCheckboxChecked = !1, this.MergePolicy = MergePolicy, 
                this.dialogData = {
                    title: this.localizationService.get("Trident_Git_Sync_Title"),
                    buttons: [ {
                        name: "syncButtonName",
                        label: this.localizationService.get("Sync"),
                        buttonType: "primary",
                        disabled: this.isSyncButtonDisabled
                    }, {
                        name: "cancelButton",
                        label: this.localizationService.get("Cancel_ButtonText"),
                        closeButton: !0
                    } ]
                };
            }
            return GitMergePolicySelectionDialogComponent.prototype.onMergePolicyChange = function(selected, value) {
                selected && (this._isOverrideCheckboxChecked = !1, this._selectedMergePolicy = value), 
                this.calculateSyncButtonState();
            }, GitMergePolicySelectionDialogComponent.prototype.onCheckboxClick = function(isChecked) {
                this._isOverrideCheckboxChecked = isChecked, this.calculateSyncButtonState();
            }, GitMergePolicySelectionDialogComponent.prototype.onButtonClick = function(buttonName) {
                "cancelButton" === buttonName ? this.dialogRef.close(null) : "syncButtonName" === buttonName && this.dialogRef.close(this._selectedMergePolicy);
            }, GitMergePolicySelectionDialogComponent.prototype.calculateSyncButtonState = function() {
                this.isSyncButtonDisabled = null === this._selectedMergePolicy || this._selectedMergePolicy === MergePolicy.TakeTheirs && !this._isOverrideCheckboxChecked;
            }, Object.defineProperty(GitMergePolicySelectionDialogComponent.prototype, "isSyncButtonDisabled", {
                get: function() {
                    return this._isSyncButtonDisabled;
                },
                set: function(value) {
                    this._isSyncButtonDisabled = value, this.dialogData.buttons[0].disabled = value;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(GitMergePolicySelectionDialogComponent.prototype, "selectedMergePolicy", {
                get: function() {
                    return this._selectedMergePolicy;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(GitMergePolicySelectionDialogComponent.prototype, "isOverrideCheckboxChecked", {
                get: function() {
                    return this._isOverrideCheckboxChecked;
                },
                enumerable: !1,
                configurable: !0
            }), GitMergePolicySelectionDialogComponent.\u0275fac = function(t) {
                return new (t || GitMergePolicySelectionDialogComponent)(core["\u0275\u0275directiveInject"](localization_service.z), core["\u0275\u0275directiveInject"](dialog.so));
            }, GitMergePolicySelectionDialogComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: GitMergePolicySelectionDialogComponent,
                selectors: [ [ "tri-git-merge-policy-selection" ] ],
                decls: 24,
                vars: 21,
                consts: [ [ 3, "dialogData", "buttonClickEvent" ], [ "target", "_blank", "href", "https://go.microsoft.com/fwlink/?linkid=2235445&clcid=0x409", "localize", "LearnMore", "localize-tooltip", "LearnMore", 1, "learn-more-link-icon" ], [ 1, "radio-button-container" ], [ 1, "keep-yours", 3, "value", "checked", "change" ], [ 1, "radio-button-text" ], [ 1, "take-theirs", 3, "value", "checked", "change" ], [ 1, "message-bar" ], [ "tri-svg-icon-20", "", "name", "important_20_filled" ], [ "class", "checkbox", 4, "ngIf" ], [ 1, "checkbox" ], [ 3, "onChange" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementStart"](0, "trident-dialog", 0), core["\u0275\u0275listener"]("buttonClickEvent", function($event) {
                        return ctx.onButtonClick($event);
                    }), core["\u0275\u0275elementStart"](1, "p"), core["\u0275\u0275text"](2), core["\u0275\u0275pipe"](3, "localize"), 
                    core["\u0275\u0275elementStart"](4, "tri-link", 1), core["\u0275\u0275text"](5), 
                    core["\u0275\u0275pipe"](6, "localize"), core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementStart"](7, "tri-radio-group")(8, "div", 2)(9, "tri-radio-button", 3), 
                    core["\u0275\u0275listener"]("change", function($event) {
                        return ctx.onMergePolicyChange($event, ctx.MergePolicy.KeepYours);
                    }), core["\u0275\u0275elementStart"](10, "span", 4), core["\u0275\u0275text"](11), 
                    core["\u0275\u0275pipe"](12, "localize"), core["\u0275\u0275elementEnd"]()()(), 
                    core["\u0275\u0275elementStart"](13, "div", 2)(14, "tri-radio-button", 5), core["\u0275\u0275listener"]("change", function($event) {
                        return ctx.onMergePolicyChange($event, ctx.MergePolicy.TakeTheirs);
                    }), core["\u0275\u0275elementStart"](15, "span", 4), core["\u0275\u0275text"](16), 
                    core["\u0275\u0275pipe"](17, "localize"), core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementStart"](18, "div", 6), 
                    core["\u0275\u0275element"](19, "tri-svg-icon", 7), core["\u0275\u0275elementStart"](20, "span"), 
                    core["\u0275\u0275text"](21), core["\u0275\u0275pipe"](22, "localize"), core["\u0275\u0275elementEnd"]()()()(), 
                    core["\u0275\u0275template"](23, GitMergePolicySelectionDialogComponent_div_23_Template, 5, 3, "div", 8), 
                    core["\u0275\u0275elementEnd"]()), 2 & rf && (core["\u0275\u0275property"]("dialogData", ctx.dialogData), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](3, 11, "Trident_Git_Sync_Details"), " "), 
                    core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](6, 13, "LearnMore"), " "), 
                    core["\u0275\u0275advance"](4), core["\u0275\u0275property"]("value", ctx.MergePolicy.KeepYours)("checked", ctx.selectedMergePolicy === ctx.MergePolicy.KeepYours), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](12, 15, "Trident_Git_Sync_From_Workspace_To_Git"), " "), 
                    core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("value", ctx.MergePolicy.TakeTheirs)("checked", ctx.selectedMergePolicy === ctx.MergePolicy.TakeTheirs), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](17, 17, "Trident_Git_Sync_From_Git_To_Workspace"), " "), 
                    core["\u0275\u0275advance"](5), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](22, 19, "Trident_Git_Override_Warning"), " "), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", ctx.selectedMergePolicy === ctx.MergePolicy.TakeTheirs));
                },
                dependencies: [ common.NgIf, tri_checkbox_component.r, dialog_component.v, tri_link_component.v, tri_radio_button_component.Y, tri_radio_group_component.Z, tri_svg_icon_component.M, localize_pipe.Y ],
                styles: [ "[_nghost-%COMP%]     .mat-mdc-dialog-content.dialog-body{display:flex;flex-direction:column;gap:16px;max-height:none}p[_ngcontent-%COMP%]{margin-bottom:0}tri-radio-group[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:16px}tri-radio-group[_ngcontent-%COMP%]   .radio-button-container[_ngcontent-%COMP%]{border:1px solid var(--globalColorGrey82);border-radius:8px;padding:16px}tri-radio-group[_ngcontent-%COMP%]   .radio-button-container[_ngcontent-%COMP%]   tri-radio-button[_ngcontent-%COMP%]   section[_ngcontent-%COMP%]{display:flex;flex-direction:row;align-content:center;gap:8px}tri-radio-group[_ngcontent-%COMP%]   .radio-button-container[_ngcontent-%COMP%]   tri-radio-button[_ngcontent-%COMP%]   .radio-button-text[_ngcontent-%COMP%]{color:var(--globalColorGrey14);font-size:14px}.message-bar[_ngcontent-%COMP%]{display:flex;flex-direction:row;gap:8px;padding:6px 8px;margin-top:8px;background:var(--globalColorDarkOrangeTint60);border-bottom:1px solid var(--globalColorDarkOrangeTint40)}.message-bar[_ngcontent-%COMP%]   tri-svg-icon[_ngcontent-%COMP%]{fill:var(--globalColorDarkOrangeShade10)}.message-bar[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{color:var(--globalColorDarkOrangeShade10);font-size:12px}.checkbox[_ngcontent-%COMP%]{display:flex;flex-direction:row;align-items:center}" ],
                changeDetection: 0
            }), GitMergePolicySelectionDialogComponent;
        }(), notification_src = __webpack_require__(12385), GitFeatureConnectModule = function() {
            function GitFeatureConnectModule() {}
            return GitFeatureConnectModule.\u0275fac = function(t) {
                return new (t || GitFeatureConnectModule);
            }, GitFeatureConnectModule.\u0275mod = core["\u0275\u0275defineNgModule"]({
                type: GitFeatureConnectModule
            }), GitFeatureConnectModule.\u0275inj = core["\u0275\u0275defineInjector"]({
                imports: [ common.CommonModule, src.DAQ, fesm2022_forms.u5, connection_src.FF, error_src.Nn, GitServicesInitializeModule, notification_src.K3, icon.Ps, tri_collapsed_container.F, dialog_src.sp, tri_dropdown.lK, tri_link.m, localization_module.Y, tri_message_bar.I, tri_search_box.b, tri_spinner_module.d, tri_svg_icon.T6, tri_tooltip.w ]
            }), GitFeatureConnectModule;
        }(), createClass = __webpack_require__(90341), inheritsLoose = __webpack_require__(37419), bidi = __webpack_require__(94130), coercion = __webpack_require__(4437), platform = __webpack_require__(10519), fesm2022_core = __webpack_require__(48138), Subject = __webpack_require__(30794), _c0 = [ "knob" ], _c1 = [ "valueIndicatorContainer" ];
        function _MatSliderVisualThumb_div_0_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 4, 5)(2, "div", 6)(3, "span", 7), 
            core["\u0275\u0275text"](4), core["\u0275\u0275elementEnd"]()()()), 2 & rf) {
                var ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](4), core["\u0275\u0275textInterpolate"](ctx_r0.valueIndicatorText);
            }
        }
        var _c2 = [ "trackActive" ];
        function _MatSlider_div_6_ng_container_2_div_1_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "div"), 2 & rf) {
                var tickMark_r6 = ctx.$implicit, i_r7 = ctx.index, ctx_r5 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275classMap"](0 === tickMark_r6 ? "mdc-slider__tick-mark--active" : "mdc-slider__tick-mark--inactive"), 
                core["\u0275\u0275styleProp"]("transform", ctx_r5._calcTickMarkTransform(i_r7));
            }
        }
        function _MatSlider_div_6_ng_container_2_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, _MatSlider_div_6_ng_container_2_div_1_Template, 1, 4, "div", 11), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var ctx_r4 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngForOf", ctx_r4._tickMarks);
            }
        }
        function _MatSlider_div_6_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 8, 9), core["\u0275\u0275template"](2, _MatSlider_div_6_ng_container_2_Template, 2, 1, "ng-container", 10), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r1 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", ctx_r1._cachedWidth);
            }
        }
        function _MatSlider_mat_slider_visual_thumb_7_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "mat-slider-visual-thumb", 7), 2 & rf) {
                var ctx_r2 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("discrete", ctx_r2.discrete)("thumbPosition", 1)("valueIndicatorText", ctx_r2.startValueIndicatorText);
            }
        }
        var MAT_SLIDER = new core.InjectionToken("_MatSlider"), MAT_SLIDER_THUMB = new core.InjectionToken("_MatSliderThumb"), MAT_SLIDER_RANGE_THUMB = new core.InjectionToken("_MatSliderRangeThumb"), MAT_SLIDER_VISUAL_THUMB = new core.InjectionToken("_MatSliderVisualThumb"), MatSliderVisualThumb = function() {
            function MatSliderVisualThumb(_cdr, _ngZone, _elementRef, _slider) {
                var _this = this;
                this._cdr = _cdr, this._ngZone = _ngZone, this._slider = _slider, this._isHovered = !1, 
                this._isActive = !1, this._isValueIndicatorVisible = !1, this._onPointerMove = function(event) {
                    if (!_this._sliderInput._isFocused) {
                        var rect = _this._hostElement.getBoundingClientRect(), isHovered = _this._slider._isCursorOnSliderThumb(event, rect);
                        _this._isHovered = isHovered, isHovered ? _this._showHoverRipple() : _this._hideRipple(_this._hoverRippleRef);
                    }
                }, this._onMouseLeave = function() {
                    _this._isHovered = !1, _this._hideRipple(_this._hoverRippleRef);
                }, this._onFocus = function() {
                    _this._hideRipple(_this._hoverRippleRef), _this._showFocusRipple(), _this._hostElement.classList.add("mdc-slider__thumb--focused");
                }, this._onBlur = function() {
                    _this._isActive || _this._hideRipple(_this._focusRippleRef), _this._isHovered && _this._showHoverRipple(), 
                    _this._hostElement.classList.remove("mdc-slider__thumb--focused");
                }, this._onDragStart = function(event) {
                    0 === event.button && (_this._isActive = !0, _this._showActiveRipple());
                }, this._onDragEnd = function() {
                    _this._isActive = !1, _this._hideRipple(_this._activeRippleRef), _this._sliderInput._isFocused || _this._hideRipple(_this._focusRippleRef);
                }, this._hostElement = _elementRef.nativeElement;
            }
            var _proto = MatSliderVisualThumb.prototype;
            return _proto.ngAfterViewInit = function() {
                var _this2 = this;
                this._ripple.radius = 24, this._sliderInput = this._slider._getInput(this.thumbPosition), 
                this._sliderInputEl = this._sliderInput._hostElement;
                var input = this._sliderInputEl;
                this._ngZone.runOutsideAngular(function() {
                    input.addEventListener("pointermove", _this2._onPointerMove), input.addEventListener("pointerdown", _this2._onDragStart), 
                    input.addEventListener("pointerup", _this2._onDragEnd), input.addEventListener("pointerleave", _this2._onMouseLeave), 
                    input.addEventListener("focus", _this2._onFocus), input.addEventListener("blur", _this2._onBlur);
                });
            }, _proto.ngOnDestroy = function() {
                var input = this._sliderInputEl;
                input.removeEventListener("pointermove", this._onPointerMove), input.removeEventListener("pointerdown", this._onDragStart), 
                input.removeEventListener("pointerup", this._onDragEnd), input.removeEventListener("pointerleave", this._onMouseLeave), 
                input.removeEventListener("focus", this._onFocus), input.removeEventListener("blur", this._onBlur);
            }, _proto._showHoverRipple = function() {
                var _this$_hoverRippleRef;
                this._isShowingRipple(this._hoverRippleRef) || (this._hoverRippleRef = this._showRipple({
                    enterDuration: 0,
                    exitDuration: 0
                }), null == (_this$_hoverRippleRef = this._hoverRippleRef) || _this$_hoverRippleRef.element.classList.add("mat-mdc-slider-hover-ripple"));
            }, _proto._showFocusRipple = function() {
                var _this$_focusRippleRef;
                this._isShowingRipple(this._focusRippleRef) || (this._focusRippleRef = this._showRipple({
                    enterDuration: 0,
                    exitDuration: 0
                }, !0), null == (_this$_focusRippleRef = this._focusRippleRef) || _this$_focusRippleRef.element.classList.add("mat-mdc-slider-focus-ripple"));
            }, _proto._showActiveRipple = function() {
                var _this$_activeRippleRe;
                this._isShowingRipple(this._activeRippleRef) || (this._activeRippleRef = this._showRipple({
                    enterDuration: 225,
                    exitDuration: 400
                }), null == (_this$_activeRippleRe = this._activeRippleRef) || _this$_activeRippleRe.element.classList.add("mat-mdc-slider-active-ripple"));
            }, _proto._isShowingRipple = function(rippleRef) {
                return 0 === (null == rippleRef ? void 0 : rippleRef.state) || 1 === (null == rippleRef ? void 0 : rippleRef.state);
            }, _proto._showRipple = function(animation, ignoreGlobalRippleConfig) {
                var _this$_slider$_global;
                if (!this._slider.disabled && (this._showValueIndicator(), this._slider._isRange && this._slider._getThumb(1 === this.thumbPosition ? 2 : 1)._showValueIndicator(), 
                null == (_this$_slider$_global = this._slider._globalRippleOptions) || !_this$_slider$_global.disabled || ignoreGlobalRippleConfig)) return this._ripple.launch({
                    animation: this._slider._noopAnimations ? {
                        enterDuration: 0,
                        exitDuration: 0
                    } : animation,
                    centered: !0,
                    persistent: !0
                });
            }, _proto._hideRipple = function(rippleRef) {
                if (null == rippleRef || rippleRef.fadeOut(), !this._isShowingAnyRipple()) {
                    this._slider._isRange || this._hideValueIndicator();
                    var sibling = this._getSibling();
                    sibling._isShowingAnyRipple() || (this._hideValueIndicator(), sibling._hideValueIndicator());
                }
            }, _proto._showValueIndicator = function() {
                this._hostElement.classList.add("mdc-slider__thumb--with-indicator");
            }, _proto._hideValueIndicator = function() {
                this._hostElement.classList.remove("mdc-slider__thumb--with-indicator");
            }, _proto._getSibling = function() {
                return this._slider._getThumb(1 === this.thumbPosition ? 2 : 1);
            }, _proto._getValueIndicatorContainer = function() {
                var _this$_valueIndicator;
                return null == (_this$_valueIndicator = this._valueIndicatorContainer) ? void 0 : _this$_valueIndicator.nativeElement;
            }, _proto._getKnob = function() {
                return this._knob.nativeElement;
            }, _proto._isShowingAnyRipple = function() {
                return this._isShowingRipple(this._hoverRippleRef) || this._isShowingRipple(this._focusRippleRef) || this._isShowingRipple(this._activeRippleRef);
            }, MatSliderVisualThumb;
        }();
        (_MatSliderVisualThumb = MatSliderVisualThumb).\u0275fac = function(t) {
            return new (t || _MatSliderVisualThumb)(core["\u0275\u0275directiveInject"](core.ChangeDetectorRef), core["\u0275\u0275directiveInject"](core.NgZone), core["\u0275\u0275directiveInject"](core.ElementRef), core["\u0275\u0275directiveInject"](MAT_SLIDER));
        }, _MatSliderVisualThumb.\u0275cmp = core["\u0275\u0275defineComponent"]({
            type: _MatSliderVisualThumb,
            selectors: [ [ "mat-slider-visual-thumb" ] ],
            viewQuery: function(rf, ctx) {
                var _t;
                1 & rf && (core["\u0275\u0275viewQuery"](fesm2022_core.wG, 5), core["\u0275\u0275viewQuery"](_c0, 5), 
                core["\u0275\u0275viewQuery"](_c1, 5)), 2 & rf && (core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx._ripple = _t.first), 
                core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx._knob = _t.first), 
                core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx._valueIndicatorContainer = _t.first));
            },
            hostAttrs: [ 1, "mdc-slider__thumb", "mat-mdc-slider-visual-thumb" ],
            inputs: {
                discrete: "discrete",
                thumbPosition: "thumbPosition",
                valueIndicatorText: "valueIndicatorText"
            },
            features: [ core["\u0275\u0275ProvidersFeature"]([ {
                provide: MAT_SLIDER_VISUAL_THUMB,
                useExisting: _MatSliderVisualThumb
            } ]) ],
            decls: 4,
            vars: 2,
            consts: [ [ "class", "mdc-slider__value-indicator-container", 4, "ngIf" ], [ 1, "mdc-slider__thumb-knob" ], [ "knob", "" ], [ "matRipple", "", 1, "mat-mdc-focus-indicator", 3, "matRippleDisabled" ], [ 1, "mdc-slider__value-indicator-container" ], [ "valueIndicatorContainer", "" ], [ 1, "mdc-slider__value-indicator" ], [ 1, "mdc-slider__value-indicator-text" ] ],
            template: function(rf, ctx) {
                1 & rf && (core["\u0275\u0275template"](0, _MatSliderVisualThumb_div_0_Template, 5, 1, "div", 0), 
                core["\u0275\u0275element"](1, "div", 1, 2)(3, "div", 3)), 2 & rf && (core["\u0275\u0275property"]("ngIf", ctx.discrete), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("matRippleDisabled", !0));
            },
            dependencies: [ common.NgIf, fesm2022_core.wG ],
            styles: [ ".mat-mdc-slider-visual-thumb .mat-ripple{height:100%;width:100%}.mat-mdc-slider .mdc-slider__tick-marks{justify-content:start}.mat-mdc-slider .mdc-slider__tick-marks .mdc-slider__tick-mark--active,.mat-mdc-slider .mdc-slider__tick-marks .mdc-slider__tick-mark--inactive{position:absolute;left:2px}" ],
            encapsulation: 2,
            changeDetection: 0
        });
        var MatSlider = function(_MatSliderMixinBase2) {
            (0, inheritsLoose.Z)(MatSlider, _MatSliderMixinBase2);
            var _proto2 = MatSlider.prototype;
            function MatSlider(_ngZone, _cdr, elementRef, _dir, _globalRippleOptions, animationMode) {
                var _this3;
                return (_this3 = _MatSliderMixinBase2.call(this, elementRef) || this)._ngZone = _ngZone, 
                _this3._cdr = _cdr, _this3._dir = _dir, _this3._globalRippleOptions = _globalRippleOptions, 
                _this3._disabled = !1, _this3._discrete = !1, _this3._showTickMarks = !1, _this3._min = 0, 
                _this3._max = 100, _this3._step = 1, _this3.displayWith = function(value) {
                    return "" + value;
                }, _this3._rippleRadius = 24, _this3.startValueIndicatorText = "", _this3.endValueIndicatorText = "", 
                _this3._isRange = !1, _this3._isRtl = !1, _this3._hasViewInitialized = !1, _this3._tickMarkTrackWidth = 0, 
                _this3._hasAnimation = !1, _this3._resizeTimer = null, _this3._platform = (0, core.inject)(platform.t4), 
                _this3._knobRadius = 8, _this3._thumbsOverlap = !1, _this3._noopAnimations = "NoopAnimations" === animationMode, 
                _this3._dirChangeSubscription = _this3._dir.change.subscribe(function() {
                    return _this3._onDirChange();
                }), _this3._isRtl = "rtl" === _this3._dir.value, _this3;
            }
            return _proto2._updateMin = function(min) {
                var prevMin = this._min;
                this._min = min, this._isRange ? this._updateMinRange({
                    old: prevMin,
                    new: min
                }) : this._updateMinNonRange(min), this._onMinMaxOrStepChange();
            }, _proto2._updateMinRange = function(min) {
                var endInput = this._getInput(2), startInput = this._getInput(1), oldEndValue = endInput.value, oldStartValue = startInput.value;
                startInput.min = min.new, endInput.min = Math.max(min.new, startInput.value), startInput.max = Math.min(endInput.max, endInput.value), 
                startInput._updateWidthInactive(), endInput._updateWidthInactive(), min.new < min.old ? this._onTranslateXChangeBySideEffect(endInput, startInput) : this._onTranslateXChangeBySideEffect(startInput, endInput), 
                oldEndValue !== endInput.value && this._onValueChange(endInput), oldStartValue !== startInput.value && this._onValueChange(startInput);
            }, _proto2._updateMinNonRange = function(min) {
                var input = this._getInput(2);
                if (input) {
                    var oldValue = input.value;
                    input.min = min, input._updateThumbUIByValue(), this._updateTrackUI(input), oldValue !== input.value && this._onValueChange(input);
                }
            }, _proto2._updateMax = function(max) {
                var prevMax = this._max;
                this._max = max, this._isRange ? this._updateMaxRange({
                    old: prevMax,
                    new: max
                }) : this._updateMaxNonRange(max), this._onMinMaxOrStepChange();
            }, _proto2._updateMaxRange = function(max) {
                var endInput = this._getInput(2), startInput = this._getInput(1), oldEndValue = endInput.value, oldStartValue = startInput.value;
                endInput.max = max.new, startInput.max = Math.min(max.new, endInput.value), endInput.min = startInput.value, 
                endInput._updateWidthInactive(), startInput._updateWidthInactive(), max.new > max.old ? this._onTranslateXChangeBySideEffect(startInput, endInput) : this._onTranslateXChangeBySideEffect(endInput, startInput), 
                oldEndValue !== endInput.value && this._onValueChange(endInput), oldStartValue !== startInput.value && this._onValueChange(startInput);
            }, _proto2._updateMaxNonRange = function(max) {
                var input = this._getInput(2);
                if (input) {
                    var oldValue = input.value;
                    input.max = max, input._updateThumbUIByValue(), this._updateTrackUI(input), oldValue !== input.value && this._onValueChange(input);
                }
            }, _proto2._updateStep = function(step) {
                this._step = step, this._isRange ? this._updateStepRange() : this._updateStepNonRange(), 
                this._onMinMaxOrStepChange();
            }, _proto2._updateStepRange = function() {
                var endInput = this._getInput(2), startInput = this._getInput(1), oldEndValue = endInput.value, oldStartValue = startInput.value, prevStartValue = startInput.value;
                endInput.min = this._min, startInput.max = this._max, endInput.step = this._step, 
                startInput.step = this._step, this._platform.SAFARI && (endInput.value = endInput.value, 
                startInput.value = startInput.value), endInput.min = Math.max(this._min, startInput.value), 
                startInput.max = Math.min(this._max, endInput.value), startInput._updateWidthInactive(), 
                endInput._updateWidthInactive(), endInput.value < prevStartValue ? this._onTranslateXChangeBySideEffect(startInput, endInput) : this._onTranslateXChangeBySideEffect(endInput, startInput), 
                oldEndValue !== endInput.value && this._onValueChange(endInput), oldStartValue !== startInput.value && this._onValueChange(startInput);
            }, _proto2._updateStepNonRange = function() {
                var input = this._getInput(2);
                if (input) {
                    var oldValue = input.value;
                    input.step = this._step, this._platform.SAFARI && (input.value = input.value), input._updateThumbUIByValue(), 
                    oldValue !== input.value && this._onValueChange(input);
                }
            }, _proto2.ngAfterViewInit = function() {
                this._platform.isBrowser && this._updateDimensions();
                var eInput = this._getInput(2), sInput = this._getInput(1);
                this._isRange = !!eInput && !!sInput, this._cdr.detectChanges();
                var thumb = this._getThumb(2);
                this._rippleRadius = thumb._ripple.radius, this._inputPadding = this._rippleRadius - this._knobRadius, 
                this._inputOffset = this._knobRadius, this._isRange ? this._initUIRange(eInput, sInput) : this._initUINonRange(eInput), 
                this._updateTrackUI(eInput), this._updateTickMarkUI(), this._updateTickMarkTrackUI(), 
                this._observeHostResize(), this._cdr.detectChanges();
            }, _proto2._initUINonRange = function(eInput) {
                eInput.initProps(), eInput.initUI(), this._updateValueIndicatorUI(eInput), this._hasViewInitialized = !0, 
                eInput._updateThumbUIByValue();
            }, _proto2._initUIRange = function(eInput, sInput) {
                eInput.initProps(), eInput.initUI(), sInput.initProps(), sInput.initUI(), eInput._updateMinMax(), 
                sInput._updateMinMax(), eInput._updateStaticStyles(), sInput._updateStaticStyles(), 
                this._updateValueIndicatorUIs(), this._hasViewInitialized = !0, eInput._updateThumbUIByValue(), 
                sInput._updateThumbUIByValue();
            }, _proto2.ngOnDestroy = function() {
                var _this$_resizeObserver;
                this._dirChangeSubscription.unsubscribe(), null == (_this$_resizeObserver = this._resizeObserver) || _this$_resizeObserver.disconnect(), 
                this._resizeObserver = null;
            }, _proto2._onDirChange = function() {
                this._isRtl = "rtl" === this._dir.value, this._isRange ? this._onDirChangeRange() : this._onDirChangeNonRange(), 
                this._updateTickMarkUI();
            }, _proto2._onDirChangeRange = function() {
                var endInput = this._getInput(2), startInput = this._getInput(1);
                endInput._setIsLeftThumb(), startInput._setIsLeftThumb(), endInput.translateX = endInput._calcTranslateXByValue(), 
                startInput.translateX = startInput._calcTranslateXByValue(), endInput._updateStaticStyles(), 
                startInput._updateStaticStyles(), endInput._updateWidthInactive(), startInput._updateWidthInactive(), 
                endInput._updateThumbUIByValue(), startInput._updateThumbUIByValue();
            }, _proto2._onDirChangeNonRange = function() {
                this._getInput(2)._updateThumbUIByValue();
            }, _proto2._observeHostResize = function() {
                var _this4 = this;
                "undefined" != typeof ResizeObserver && ResizeObserver && this._ngZone.runOutsideAngular(function() {
                    _this4._resizeObserver = new ResizeObserver(function() {
                        _this4._isActive() || (_this4._resizeTimer && clearTimeout(_this4._resizeTimer), 
                        _this4._onResize());
                    }), _this4._resizeObserver.observe(_this4._elementRef.nativeElement);
                });
            }, _proto2._isActive = function() {
                return this._getThumb(1)._isActive || this._getThumb(2)._isActive;
            }, _proto2._getValue = function(thumbPosition) {
                void 0 === thumbPosition && (thumbPosition = 2);
                var input = this._getInput(thumbPosition);
                return input ? input.value : this.min;
            }, _proto2._skipUpdate = function() {
                var _this$_getInput, _this$_getInput2;
                return !!(null != (_this$_getInput = this._getInput(1)) && _this$_getInput._skipUIUpdate || null != (_this$_getInput2 = this._getInput(2)) && _this$_getInput2._skipUIUpdate);
            }, _proto2._updateDimensions = function() {
                this._cachedWidth = this._elementRef.nativeElement.offsetWidth, this._cachedLeft = this._elementRef.nativeElement.getBoundingClientRect().left;
            }, _proto2._setTrackActiveStyles = function(styles) {
                var trackStyle = this._trackActive.nativeElement.style;
                trackStyle.left = styles.left, trackStyle.right = styles.right, trackStyle.transformOrigin = styles.transformOrigin, 
                trackStyle.transform = styles.transform;
            }, _proto2._calcTickMarkTransform = function(index) {
                return "translateX(" + index * (this._tickMarkTrackWidth / (this._tickMarks.length - 1)) + "px";
            }, _proto2._onTranslateXChange = function(source) {
                this._hasViewInitialized && (this._updateThumbUI(source), this._updateTrackUI(source), 
                this._updateOverlappingThumbUI(source));
            }, _proto2._onTranslateXChangeBySideEffect = function(input1, input2) {
                this._hasViewInitialized && (input1._updateThumbUIByValue(), input2._updateThumbUIByValue());
            }, _proto2._onValueChange = function(source) {
                this._hasViewInitialized && (this._updateValueIndicatorUI(source), this._updateTickMarkUI(), 
                this._cdr.detectChanges());
            }, _proto2._onMinMaxOrStepChange = function() {
                this._hasViewInitialized && (this._updateTickMarkUI(), this._updateTickMarkTrackUI(), 
                this._cdr.markForCheck());
            }, _proto2._onResize = function() {
                if (this._hasViewInitialized) {
                    if (this._updateDimensions(), this._isRange) {
                        var eInput = this._getInput(2), sInput = this._getInput(1);
                        eInput._updateThumbUIByValue(), sInput._updateThumbUIByValue(), eInput._updateStaticStyles(), 
                        sInput._updateStaticStyles(), eInput._updateMinMax(), sInput._updateMinMax(), eInput._updateWidthInactive(), 
                        sInput._updateWidthInactive();
                    } else {
                        var _eInput = this._getInput(2);
                        _eInput && _eInput._updateThumbUIByValue();
                    }
                    this._updateTickMarkUI(), this._updateTickMarkTrackUI(), this._cdr.detectChanges();
                }
            }, _proto2._areThumbsOverlapping = function() {
                var startInput = this._getInput(1), endInput = this._getInput(2);
                return !(!startInput || !endInput) && endInput.translateX - startInput.translateX < 20;
            }, _proto2._updateOverlappingThumbClassNames = function(source) {
                var sibling = source.getSibling(), sourceThumb = this._getThumb(source.thumbPosition);
                this._getThumb(sibling.thumbPosition)._hostElement.classList.remove("mdc-slider__thumb--top"), 
                sourceThumb._hostElement.classList.toggle("mdc-slider__thumb--top", this._thumbsOverlap);
            }, _proto2._updateOverlappingThumbUI = function(source) {
                this._isRange && !this._skipUpdate() && this._thumbsOverlap !== this._areThumbsOverlapping() && (this._thumbsOverlap = !this._thumbsOverlap, 
                this._updateOverlappingThumbClassNames(source));
            }, _proto2._updateThumbUI = function(source) {
                this._skipUpdate() || (this._getThumb(2 === source.thumbPosition ? 2 : 1)._hostElement.style.transform = "translateX(" + source.translateX + "px)");
            }, _proto2._updateValueIndicatorUI = function(source) {
                if (!this._skipUpdate()) {
                    var valuetext = this.displayWith(source.value);
                    if (this._hasViewInitialized ? source._valuetext = valuetext : source._hostElement.setAttribute("aria-valuetext", valuetext), 
                    this.discrete) {
                        1 === source.thumbPosition ? this.startValueIndicatorText = valuetext : this.endValueIndicatorText = valuetext;
                        var visualThumb = this._getThumb(source.thumbPosition);
                        valuetext.length < 3 ? visualThumb._hostElement.classList.add("mdc-slider__thumb--short-value") : visualThumb._hostElement.classList.remove("mdc-slider__thumb--short-value");
                    }
                }
            }, _proto2._updateValueIndicatorUIs = function() {
                var eInput = this._getInput(2), sInput = this._getInput(1);
                eInput && this._updateValueIndicatorUI(eInput), sInput && this._updateValueIndicatorUI(sInput);
            }, _proto2._updateTickMarkTrackUI = function() {
                if (this.showTickMarks && !this._skipUpdate()) {
                    var step = this._step && this._step > 0 ? this._step : 1, maxValue = Math.floor(this.max / step) * step;
                    this._tickMarkTrackWidth = this._cachedWidth * ((maxValue - this.min) / (this.max - this.min)) - 6;
                }
            }, _proto2._updateTrackUI = function(source) {
                this._skipUpdate() || (this._isRange ? this._updateTrackUIRange(source) : this._updateTrackUINonRange(source));
            }, _proto2._updateTrackUIRange = function(source) {
                var sibling = source.getSibling();
                if (sibling && this._cachedWidth) {
                    var activePercentage = Math.abs(sibling.translateX - source.translateX) / this._cachedWidth;
                    this._setTrackActiveStyles(source._isLeftThumb && this._cachedWidth ? {
                        left: "auto",
                        right: this._cachedWidth - sibling.translateX + "px",
                        transformOrigin: "right",
                        transform: "scaleX(" + activePercentage + ")"
                    } : {
                        left: sibling.translateX + "px",
                        right: "auto",
                        transformOrigin: "left",
                        transform: "scaleX(" + activePercentage + ")"
                    });
                }
            }, _proto2._updateTrackUINonRange = function(source) {
                this._setTrackActiveStyles(this._isRtl ? {
                    left: "auto",
                    right: "0px",
                    transformOrigin: "right",
                    transform: "scaleX(" + (1 - source.fillPercentage) + ")"
                } : {
                    left: "0px",
                    right: "auto",
                    transformOrigin: "left",
                    transform: "scaleX(" + source.fillPercentage + ")"
                });
            }, _proto2._updateTickMarkUI = function() {
                if (this.showTickMarks && void 0 !== this.step && void 0 !== this.min && void 0 !== this.max) {
                    var step = this.step > 0 ? this.step : 1;
                    this._isRange ? this._updateTickMarkUIRange(step) : this._updateTickMarkUINonRange(step), 
                    this._isRtl && this._tickMarks.reverse();
                }
            }, _proto2._updateTickMarkUINonRange = function(step) {
                var value = this._getValue(), numActive = Math.max(Math.round((value - this.min) / step), 0), numInactive = Math.max(Math.round((this.max - value) / step), 0);
                this._isRtl ? numActive++ : numInactive++, this._tickMarks = Array(numActive).fill(0).concat(Array(numInactive).fill(1));
            }, _proto2._updateTickMarkUIRange = function(step) {
                var endValue = this._getValue(), startValue = this._getValue(1), numInactiveBeforeStartThumb = Math.max(Math.floor((startValue - this.min) / step), 0), numActive = Math.max(Math.floor((endValue - startValue) / step) + 1, 0), numInactiveAfterEndThumb = Math.max(Math.floor((this.max - endValue) / step), 0);
                this._tickMarks = Array(numInactiveBeforeStartThumb).fill(1).concat(Array(numActive).fill(0), Array(numInactiveAfterEndThumb).fill(1));
            }, _proto2._getInput = function(thumbPosition) {
                var _this$_inputs;
                return 2 === thumbPosition && this._input ? this._input : null != (_this$_inputs = this._inputs) && _this$_inputs.length ? 1 === thumbPosition ? this._inputs.first : this._inputs.last : void 0;
            }, _proto2._getThumb = function(thumbPosition) {
                var _this$_thumbs, _this$_thumbs2;
                return 2 === thumbPosition ? null == (_this$_thumbs = this._thumbs) ? void 0 : _this$_thumbs.last : null == (_this$_thumbs2 = this._thumbs) ? void 0 : _this$_thumbs2.first;
            }, _proto2._setTransition = function(withAnimation) {
                this._hasAnimation = !this._platform.IOS && withAnimation && !this._noopAnimations, 
                this._elementRef.nativeElement.classList.toggle("mat-mdc-slider-with-animation", this._hasAnimation);
            }, _proto2._isCursorOnSliderThumb = function(event, rect) {
                var radius = rect.width / 2, dy = event.clientY - (rect.y + radius);
                return Math.pow(event.clientX - (rect.x + radius), 2) + Math.pow(dy, 2) < Math.pow(radius, 2);
            }, (0, createClass.Z)(MatSlider, [ {
                key: "disabled",
                get: function() {
                    return this._disabled;
                },
                set: function(v) {
                    this._disabled = (0, coercion.Ig)(v);
                    var endInput = this._getInput(2), startInput = this._getInput(1);
                    endInput && (endInput.disabled = this._disabled), startInput && (startInput.disabled = this._disabled);
                }
            }, {
                key: "discrete",
                get: function() {
                    return this._discrete;
                },
                set: function(v) {
                    this._discrete = (0, coercion.Ig)(v), this._updateValueIndicatorUIs();
                }
            }, {
                key: "showTickMarks",
                get: function() {
                    return this._showTickMarks;
                },
                set: function(v) {
                    this._showTickMarks = (0, coercion.Ig)(v);
                }
            }, {
                key: "min",
                get: function() {
                    return this._min;
                },
                set: function(v) {
                    var min = (0, coercion.su)(v, this._min);
                    this._min !== min && this._updateMin(min);
                }
            }, {
                key: "max",
                get: function() {
                    return this._max;
                },
                set: function(v) {
                    var max = (0, coercion.su)(v, this._max);
                    this._max !== max && this._updateMax(max);
                }
            }, {
                key: "step",
                get: function() {
                    return this._step;
                },
                set: function(v) {
                    var step = (0, coercion.su)(v, this._step);
                    this._step !== step && this._updateStep(step);
                }
            } ]), MatSlider;
        }((0, fesm2022_core.pj)((0, fesm2022_core.Kr)(function() {
            return function(_elementRef) {
                this._elementRef = _elementRef;
            };
        }()), "primary"));
        (_MatSlider = MatSlider).\u0275fac = function(t) {
            return new (t || _MatSlider)(core["\u0275\u0275directiveInject"](core.NgZone), core["\u0275\u0275directiveInject"](core.ChangeDetectorRef), core["\u0275\u0275directiveInject"](core.ElementRef), core["\u0275\u0275directiveInject"](bidi.Is, 8), core["\u0275\u0275directiveInject"](fesm2022_core.Y2, 8), core["\u0275\u0275directiveInject"](core.ANIMATION_MODULE_TYPE, 8));
        }, _MatSlider.\u0275cmp = core["\u0275\u0275defineComponent"]({
            type: _MatSlider,
            selectors: [ [ "mat-slider" ] ],
            contentQueries: function(rf, ctx, dirIndex) {
                var _t;
                1 & rf && (core["\u0275\u0275contentQuery"](dirIndex, MAT_SLIDER_THUMB, 5), core["\u0275\u0275contentQuery"](dirIndex, MAT_SLIDER_RANGE_THUMB, 4)), 
                2 & rf && (core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx._input = _t.first), 
                core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx._inputs = _t));
            },
            viewQuery: function(rf, ctx) {
                var _t;
                1 & rf && (core["\u0275\u0275viewQuery"](_c2, 5), core["\u0275\u0275viewQuery"](MAT_SLIDER_VISUAL_THUMB, 5)), 
                2 & rf && (core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx._trackActive = _t.first), 
                core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx._thumbs = _t));
            },
            hostAttrs: [ 1, "mat-mdc-slider", "mdc-slider" ],
            hostVars: 10,
            hostBindings: function(rf, ctx) {
                2 & rf && core["\u0275\u0275classProp"]("mdc-slider--range", ctx._isRange)("mdc-slider--disabled", ctx.disabled)("mdc-slider--discrete", ctx.discrete)("mdc-slider--tick-marks", ctx.showTickMarks)("_mat-animation-noopable", ctx._noopAnimations);
            },
            inputs: {
                color: "color",
                disableRipple: "disableRipple",
                disabled: "disabled",
                discrete: "discrete",
                showTickMarks: "showTickMarks",
                min: "min",
                max: "max",
                step: "step",
                displayWith: "displayWith"
            },
            exportAs: [ "matSlider" ],
            features: [ core["\u0275\u0275ProvidersFeature"]([ {
                provide: MAT_SLIDER,
                useExisting: _MatSlider
            } ]), core["\u0275\u0275InheritDefinitionFeature"] ],
            ngContentSelectors: [ "*" ],
            decls: 9,
            vars: 5,
            consts: [ [ 1, "mdc-slider__track" ], [ 1, "mdc-slider__track--inactive" ], [ 1, "mdc-slider__track--active" ], [ 1, "mdc-slider__track--active_fill" ], [ "trackActive", "" ], [ "class", "mdc-slider__tick-marks", 4, "ngIf" ], [ 3, "discrete", "thumbPosition", "valueIndicatorText", 4, "ngIf" ], [ 3, "discrete", "thumbPosition", "valueIndicatorText" ], [ 1, "mdc-slider__tick-marks" ], [ "tickMarkContainer", "" ], [ 4, "ngIf" ], [ 3, "class", "transform", 4, "ngFor", "ngForOf" ] ],
            template: function(rf, ctx) {
                1 & rf && (core["\u0275\u0275projectionDef"](), core["\u0275\u0275projection"](0), 
                core["\u0275\u0275elementStart"](1, "div", 0), core["\u0275\u0275element"](2, "div", 1), 
                core["\u0275\u0275elementStart"](3, "div", 2), core["\u0275\u0275element"](4, "div", 3, 4), 
                core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](6, _MatSlider_div_6_Template, 3, 1, "div", 5), 
                core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](7, _MatSlider_mat_slider_visual_thumb_7_Template, 1, 3, "mat-slider-visual-thumb", 6), 
                core["\u0275\u0275element"](8, "mat-slider-visual-thumb", 7)), 2 & rf && (core["\u0275\u0275advance"](6), 
                core["\u0275\u0275property"]("ngIf", ctx.showTickMarks), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275property"]("ngIf", ctx._isRange), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275property"]("discrete", ctx.discrete)("thumbPosition", 2)("valueIndicatorText", ctx.endValueIndicatorText));
            },
            dependencies: [ common.NgForOf, common.NgIf, MatSliderVisualThumb ],
            styles: [ '.mdc-slider{cursor:pointer;height:48px;margin:0 24px;position:relative;touch-action:pan-y}.mdc-slider .mdc-slider__track{position:absolute;top:50%;transform:translateY(-50%);width:100%}.mdc-slider .mdc-slider__track--active,.mdc-slider .mdc-slider__track--inactive{display:flex;height:100%;position:absolute;width:100%}.mdc-slider .mdc-slider__track--active{overflow:hidden}.mdc-slider .mdc-slider__track--active_fill{border-top-style:solid;box-sizing:border-box;height:100%;width:100%;position:relative;-webkit-transform-origin:left;transform-origin:left}[dir=rtl] .mdc-slider .mdc-slider__track--active_fill,.mdc-slider .mdc-slider__track--active_fill[dir=rtl]{-webkit-transform-origin:right;transform-origin:right}.mdc-slider .mdc-slider__track--inactive{left:0;top:0}.mdc-slider .mdc-slider__track--inactive::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:"";pointer-events:none}@media screen and (forced-colors: active){.mdc-slider .mdc-slider__track--inactive::before{border-color:CanvasText}}.mdc-slider .mdc-slider__value-indicator-container{bottom:44px;left:var(--slider-value-indicator-container-left, 50%);pointer-events:none;position:absolute;right:var(--slider-value-indicator-container-right);transform:var(--slider-value-indicator-container-transform, translateX(-50%))}.mdc-slider .mdc-slider__value-indicator{transition:transform 100ms 0ms cubic-bezier(0.4, 0, 1, 1);align-items:center;border-radius:4px;display:flex;height:32px;padding:0 12px;transform:scale(0);transform-origin:bottom}.mdc-slider .mdc-slider__value-indicator::before{border-left:6px solid rgba(0,0,0,0);border-right:6px solid rgba(0,0,0,0);border-top:6px solid;bottom:-5px;content:"";height:0;left:var(--slider-value-indicator-caret-left, 50%);position:absolute;right:var(--slider-value-indicator-caret-right);transform:var(--slider-value-indicator-caret-transform, translateX(-50%));width:0}.mdc-slider .mdc-slider__value-indicator::after{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:"";pointer-events:none}@media screen and (forced-colors: active){.mdc-slider .mdc-slider__value-indicator::after{border-color:CanvasText}}.mdc-slider .mdc-slider__thumb--with-indicator .mdc-slider__value-indicator-container{pointer-events:auto}.mdc-slider .mdc-slider__thumb--with-indicator .mdc-slider__value-indicator{transition:transform 100ms 0ms cubic-bezier(0, 0, 0.2, 1);transform:scale(1)}@media(prefers-reduced-motion){.mdc-slider .mdc-slider__value-indicator,.mdc-slider .mdc-slider__thumb--with-indicator .mdc-slider__value-indicator{transition:none}}.mdc-slider .mdc-slider__thumb{display:flex;left:-24px;outline:none;position:absolute;user-select:none;height:48px;width:48px}.mdc-slider .mdc-slider__thumb--top{z-index:1}.mdc-slider .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-style:solid;border-width:1px;box-sizing:content-box}.mdc-slider .mdc-slider__thumb-knob{box-sizing:border-box;left:50%;position:absolute;top:50%;transform:translate(-50%, -50%)}.mdc-slider .mdc-slider__tick-marks{align-items:center;box-sizing:border-box;display:flex;height:100%;justify-content:space-between;padding:0 1px;position:absolute;width:100%}.mdc-slider--discrete .mdc-slider__thumb,.mdc-slider--discrete .mdc-slider__track--active_fill{transition:transform 80ms ease}@media(prefers-reduced-motion){.mdc-slider--discrete .mdc-slider__thumb,.mdc-slider--discrete .mdc-slider__track--active_fill{transition:none}}.mdc-slider--disabled{cursor:auto}.mdc-slider--disabled .mdc-slider__thumb{pointer-events:none}.mdc-slider__input{cursor:pointer;left:2px;margin:0;height:44px;opacity:0;pointer-events:none;position:absolute;top:2px;width:44px}.mat-mdc-slider{display:inline-block;box-sizing:border-box;outline:none;vertical-align:middle;margin-left:8px;margin-right:8px;width:auto;min-width:112px;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-slider .mdc-slider__thumb-knob{background-color:var(--mdc-slider-handle-color, var(--mdc-theme-primary, #6200ee));border-color:var(--mdc-slider-handle-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__thumb-knob{background-color:var(--mdc-slider-disabled-handle-color, var(--mdc-theme-on-surface, #000));border-color:var(--mdc-slider-disabled-handle-color, var(--mdc-theme-on-surface, #000))}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider.mdc-slider--disabled .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider.mdc-slider--disabled .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider .mdc-slider__thumb::before,.mat-mdc-slider .mdc-slider__thumb::after{background-color:var(--mdc-slider-handle-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider .mdc-slider__thumb:hover::before,.mat-mdc-slider .mdc-slider__thumb.mdc-ripple-surface--hover::before{opacity:var(--mdc-ripple-hover-opacity, 0.04)}.mat-mdc-slider .mdc-slider__thumb.mdc-ripple-upgraded--background-focused::before,.mat-mdc-slider .mdc-slider__thumb:not(.mdc-ripple-upgraded):focus::before{transition-duration:75ms;opacity:var(--mdc-ripple-focus-opacity, 0.12)}.mat-mdc-slider .mdc-slider__thumb:not(.mdc-ripple-upgraded)::after{transition:opacity 150ms linear}.mat-mdc-slider .mdc-slider__thumb:not(.mdc-ripple-upgraded):active::after{transition-duration:75ms;opacity:var(--mdc-ripple-press-opacity, 0.12)}.mat-mdc-slider .mdc-slider__thumb.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-ripple-press-opacity, 0.12)}.mat-mdc-slider .mdc-slider__track--active_fill{border-color:var(--mdc-slider-active-track-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__track--active_fill{border-color:var(--mdc-slider-disabled-active-track-color, var(--mdc-theme-on-surface, #000))}.mat-mdc-slider .mdc-slider__track--inactive{background-color:var(--mdc-slider-inactive-track-color, var(--mdc-theme-primary, #6200ee));opacity:.24}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__track--inactive{background-color:var(--mdc-slider-disabled-inactive-track-color, var(--mdc-theme-on-surface, #000));opacity:.24}.mat-mdc-slider .mdc-slider__tick-mark--active{background-color:var(--mdc-slider-with-tick-marks-active-container-color, var(--mdc-theme-on-primary, #fff));opacity:var(--mdc-slider-with-tick-marks-active-container-opacity, 0.6)}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__tick-mark--active{background-color:var(--mdc-slider-with-tick-marks-active-container-color, var(--mdc-theme-on-primary, #fff));opacity:var(--mdc-slider-with-tick-marks-active-container-opacity, 0.6)}.mat-mdc-slider .mdc-slider__tick-mark--inactive{background-color:var(--mdc-slider-with-tick-marks-inactive-container-color, var(--mdc-theme-primary, #6200ee));opacity:var(--mdc-slider-with-tick-marks-inactive-container-opacity, 0.6)}.mat-mdc-slider.mdc-slider--disabled .mdc-slider__tick-mark--inactive{background-color:var(--mdc-slider-with-tick-marks-disabled-container-color, var(--mdc-theme-on-surface, #000));opacity:var(--mdc-slider-with-tick-marks-inactive-container-opacity, 0.6)}.mat-mdc-slider .mdc-slider__value-indicator{background-color:var(--mdc-slider-label-container-color, #666666);opacity:1}.mat-mdc-slider .mdc-slider__value-indicator::before{border-top-color:var(--mdc-slider-label-container-color, #666666)}.mat-mdc-slider .mdc-slider__value-indicator{color:var(--mdc-slider-label-label-text-color, var(--mdc-theme-on-primary, #fff))}.mat-mdc-slider .mdc-slider__track{height:var(--mdc-slider-inactive-track-height, 4px)}.mat-mdc-slider .mdc-slider__track--active{height:var(--mdc-slider-active-track-height, 6px);top:calc((var(--mdc-slider-inactive-track-height, 4px) - var(--mdc-slider-active-track-height, 6px)) / 2)}.mat-mdc-slider .mdc-slider__track--active_fill{border-top-width:var(--mdc-slider-active-track-height, 6px)}.mat-mdc-slider .mdc-slider__track--inactive{height:var(--mdc-slider-inactive-track-height, 4px)}.mat-mdc-slider .mdc-slider__tick-mark--active,.mat-mdc-slider .mdc-slider__tick-mark--inactive{height:var(--mdc-slider-with-tick-marks-container-size, 2px);width:var(--mdc-slider-with-tick-marks-container-size, 2px)}.mat-mdc-slider.mdc-slider--disabled{opacity:0.38}.mat-mdc-slider .mdc-slider__value-indicator-text{letter-spacing:var(--mdc-slider-label-label-text-tracking, 0.0071428571em);font-size:var(--mdc-slider-label-label-text-size, 0.875rem);font-family:var(--mdc-slider-label-label-text-font, Roboto, sans-serif);font-weight:var(--mdc-slider-label-label-text-weight, 500);line-height:var(--mdc-slider-label-label-text-line-height, 1.375rem)}.mat-mdc-slider .mdc-slider__track--active{border-radius:var(--mdc-slider-active-track-shape, 9999px)}.mat-mdc-slider .mdc-slider__track--inactive{border-radius:var(--mdc-slider-inactive-track-shape, 9999px)}.mat-mdc-slider .mdc-slider__thumb-knob{border-radius:var(--mdc-slider-handle-shape, 50%);width:var(--mdc-slider-handle-width, 20px);height:var(--mdc-slider-handle-height, 20px);border-style:solid;border-width:calc(var(--mdc-slider-handle-height, 20px) / 2) calc(var(--mdc-slider-handle-width, 20px) / 2)}.mat-mdc-slider .mdc-slider__tick-mark--active,.mat-mdc-slider .mdc-slider__tick-mark--inactive{border-radius:var(--mdc-slider-with-tick-marks-container-shape, 50%)}.mat-mdc-slider .mdc-slider__thumb-knob{box-shadow:var(--mdc-slider-handle-elevation, 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12))}.mat-mdc-slider .mdc-slider__thumb:hover .mdc-slider__thumb-knob{background-color:var(--mdc-slider-hover-handle-color, var(--mdc-theme-primary, #6200ee));border-color:var(--mdc-slider-hover-handle-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider .mdc-slider__thumb:hover .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb:hover .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb:hover .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider .mdc-slider__thumb--focused .mdc-slider__thumb-knob{background-color:var(--mdc-slider-focus-handle-color, var(--mdc-theme-primary, #6200ee));border-color:var(--mdc-slider-focus-handle-color, var(--mdc-theme-primary, #6200ee))}.mat-mdc-slider .mdc-slider__thumb--focused .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--focused .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--focused .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider .mdc-slider__thumb:not(:disabled):active .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb:not(:disabled):active .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb:not(:disabled):active .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:#fff}.mat-mdc-slider .mdc-slider__thumb--top .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mat-mdc-slider .mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border-color:var(--mdc-slider-with-overlap-handle-outline-color, #fff);border-width:var(--mdc-slider-with-overlap-handle-outline-width, 1px)}.mat-mdc-slider .mdc-slider__input{box-sizing:content-box;pointer-events:auto}.mat-mdc-slider .mdc-slider__input.mat-mdc-slider-input-no-pointer-events{pointer-events:none}.mat-mdc-slider .mdc-slider__input.mat-slider__right-input{left:auto;right:0}.mat-mdc-slider .mdc-slider__thumb,.mat-mdc-slider .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__thumb,.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__track--active_fill{transition-duration:80ms}.mat-mdc-slider.mdc-slider--discrete .mdc-slider__thumb,.mat-mdc-slider.mdc-slider--discrete .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__thumb,.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__track--active_fill{transition-duration:80ms}.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__value-indicator{word-break:normal}.mat-mdc-slider .mdc-slider__track,.mat-mdc-slider .mdc-slider__thumb{pointer-events:none}.mat-mdc-slider .mdc-slider__value-indicator{opacity:var(--mat-mdc-slider-value-indicator-opacity, 1)}.mat-mdc-slider .mat-ripple .mat-ripple-element{background-color:var(--mat-mdc-slider-ripple-color, transparent)}.mat-mdc-slider .mat-ripple .mat-mdc-slider-hover-ripple{background-color:var(--mat-mdc-slider-hover-ripple-color, transparent)}.mat-mdc-slider .mat-ripple .mat-mdc-slider-focus-ripple,.mat-mdc-slider .mat-ripple .mat-mdc-slider-active-ripple{background-color:var(--mat-mdc-slider-focus-ripple-color, transparent)}.mat-mdc-slider._mat-animation-noopable.mdc-slider--discrete .mdc-slider__thumb,.mat-mdc-slider._mat-animation-noopable.mdc-slider--discrete .mdc-slider__track--active_fill,.mat-mdc-slider._mat-animation-noopable .mdc-slider__value-indicator{transition:none}.mat-mdc-slider .mat-mdc-focus-indicator::before{border-radius:50%}.mdc-slider__thumb--focused .mat-mdc-focus-indicator::before{content:""}' ],
            encapsulation: 2,
            changeDetection: 0
        });
        var MAT_SLIDER_THUMB_VALUE_ACCESSOR = {
            provide: fesm2022_forms.JU,
            useExisting: (0, core.forwardRef)(function() {
                return MatSliderThumb;
            }),
            multi: !0
        }, MAT_SLIDER_RANGE_THUMB_VALUE_ACCESSOR = {
            provide: fesm2022_forms.JU,
            useExisting: (0, core.forwardRef)(function() {
                return MatSliderRangeThumb;
            }),
            multi: !0
        }, MatSliderThumb = function() {
            var _proto3 = MatSliderThumb.prototype;
            function MatSliderThumb(_ngZone, _elementRef, _cdr, _slider) {
                var _this5 = this;
                this._ngZone = _ngZone, this._elementRef = _elementRef, this._cdr = _cdr, this._slider = _slider, 
                this.valueChange = new core.EventEmitter, this.dragStart = new core.EventEmitter, 
                this.dragEnd = new core.EventEmitter, this.thumbPosition = 2, this._knobRadius = 8, 
                this._isActive = !1, this._isFocused = !1, this._hasSetInitialValue = !1, this._destroyed = new Subject.xQ, 
                this._skipUIUpdate = !1, this._onTouchedFn = function() {}, this._isControlInitialized = !1, 
                this._platform = (0, core.inject)(platform.t4), this._hostElement = _elementRef.nativeElement, 
                this._ngZone.runOutsideAngular(function() {
                    _this5._hostElement.addEventListener("pointerdown", _this5._onPointerDown.bind(_this5)), 
                    _this5._hostElement.addEventListener("pointermove", _this5._onPointerMove.bind(_this5)), 
                    _this5._hostElement.addEventListener("pointerup", _this5._onPointerUp.bind(_this5));
                });
            }
            return _proto3._setIsFocused = function(v) {
                this._isFocused = v;
            }, _proto3.ngOnDestroy = function() {
                this._hostElement.removeEventListener("pointerdown", this._onPointerDown), this._hostElement.removeEventListener("pointermove", this._onPointerMove), 
                this._hostElement.removeEventListener("pointerup", this._onPointerUp), this._destroyed.next(), 
                this._destroyed.complete(), this.dragStart.complete(), this.dragEnd.complete();
            }, _proto3.initProps = function() {
                this._updateWidthInactive(), this.disabled !== this._slider.disabled && (this._slider.disabled = !0), 
                this.step = this._slider.step, this.min = this._slider.min, this.max = this._slider.max, 
                this._initValue();
            }, _proto3.initUI = function() {
                this._updateThumbUIByValue();
            }, _proto3._initValue = function() {
                this._hasSetInitialValue = !0, void 0 === this._initialValue ? this.value = this._getDefaultValue() : (this._hostElement.value = this._initialValue, 
                this._updateThumbUIByValue(), this._slider._onValueChange(this), this._cdr.detectChanges());
            }, _proto3._getDefaultValue = function() {
                return this.min;
            }, _proto3._onBlur = function() {
                this._setIsFocused(!1), this._onTouchedFn();
            }, _proto3._onFocus = function() {
                this._setIsFocused(!0);
            }, _proto3._onChange = function() {
                this.valueChange.emit(this.value), this._isActive && this._updateThumbUIByValue({
                    withAnimation: !0
                });
            }, _proto3._onInput = function() {
                var _this$_onChangeFn;
                null == (_this$_onChangeFn = this._onChangeFn) || _this$_onChangeFn.call(this, this.value), 
                !this._slider.step && this._isActive || this._updateThumbUIByValue({
                    withAnimation: !0
                }), this._slider._onValueChange(this);
            }, _proto3._onNgControlValueChange = function() {
                this._isActive && this._isFocused || (this._slider._onValueChange(this), this._updateThumbUIByValue()), 
                this._slider.disabled = this._formControl.disabled;
            }, _proto3._onPointerDown = function(event) {
                if (!this.disabled && 0 === event.button) {
                    if (this._platform.IOS) {
                        var isCursorOnSliderThumb = this._slider._isCursorOnSliderThumb(event, this._slider._getThumb(this.thumbPosition)._hostElement.getBoundingClientRect());
                        return this._isActive = isCursorOnSliderThumb, this._updateWidthActive(), void this._slider._updateDimensions();
                    }
                    this._isActive = !0, this._setIsFocused(!0), this._updateWidthActive(), this._slider._updateDimensions(), 
                    this._slider.step || this._updateThumbUIByPointerEvent(event, {
                        withAnimation: !0
                    }), this.disabled || (this._handleValueCorrection(event), this.dragStart.emit({
                        source: this,
                        parent: this._slider,
                        value: this.value
                    }));
                }
            }, _proto3._handleValueCorrection = function(event) {
                var _this6 = this;
                this._skipUIUpdate = !0, setTimeout(function() {
                    _this6._skipUIUpdate = !1, _this6._fixValue(event);
                }, 0);
            }, _proto3._fixValue = function(event) {
                var _this$_onChangeFn2, xPos = event.clientX - this._slider._cachedLeft, width = this._slider._cachedWidth, step = 0 === this._slider.step ? 1 : this._slider.step, numSteps = Math.floor((this._slider.max - this._slider.min) / step), fixedPercentage = Math.round((this._slider._isRtl ? 1 - xPos / width : xPos / width) * numSteps) / numSteps, value = Math.round((fixedPercentage * (this._slider.max - this._slider.min) + this._slider.min) / step) * step;
                if (value === this.value) return this._slider._onValueChange(this), void (this._slider.step > 0 ? this._updateThumbUIByValue() : this._updateThumbUIByPointerEvent(event, {
                    withAnimation: this._slider._hasAnimation
                }));
                this.value = value, this.valueChange.emit(this.value), null == (_this$_onChangeFn2 = this._onChangeFn) || _this$_onChangeFn2.call(this, this.value), 
                this._slider._onValueChange(this), this._slider.step > 0 ? this._updateThumbUIByValue() : this._updateThumbUIByPointerEvent(event, {
                    withAnimation: this._slider._hasAnimation
                });
            }, _proto3._onPointerMove = function(event) {
                !this._slider.step && this._isActive && this._updateThumbUIByPointerEvent(event);
            }, _proto3._onPointerUp = function() {
                var _this7 = this;
                this._isActive && (this._isActive = !1, this.dragEnd.emit({
                    source: this,
                    parent: this._slider,
                    value: this.value
                }), setTimeout(function() {
                    return _this7._updateWidthInactive();
                }, this._platform.IOS ? 10 : 0));
            }, _proto3._clamp = function(v) {
                return Math.max(Math.min(v, this._slider._cachedWidth), 0);
            }, _proto3._calcTranslateXByValue = function() {
                return this._slider._isRtl ? (1 - this.percentage) * this._slider._cachedWidth : this.percentage * this._slider._cachedWidth;
            }, _proto3._calcTranslateXByPointerEvent = function(event) {
                return event.clientX - this._slider._cachedLeft;
            }, _proto3._updateWidthActive = function() {
                this._hostElement.style.padding = "0 " + this._slider._inputPadding + "px", this._hostElement.style.width = "calc(100% + " + this._slider._inputPadding + "px)";
            }, _proto3._updateWidthInactive = function() {
                this._hostElement.style.padding = "0px", this._hostElement.style.width = "calc(100% + 48px)", 
                this._hostElement.style.left = "-24px";
            }, _proto3._updateThumbUIByValue = function(options) {
                this.translateX = this._clamp(this._calcTranslateXByValue()), this._updateThumbUI(options);
            }, _proto3._updateThumbUIByPointerEvent = function(event, options) {
                this.translateX = this._clamp(this._calcTranslateXByPointerEvent(event)), this._updateThumbUI(options);
            }, _proto3._updateThumbUI = function(options) {
                this._slider._setTransition(!(null == options || !options.withAnimation)), this._slider._onTranslateXChange(this);
            }, _proto3.writeValue = function(value) {
                (this._isControlInitialized || null !== value) && (this.value = value);
            }, _proto3.registerOnChange = function(fn) {
                this._onChangeFn = fn, this._isControlInitialized = !0;
            }, _proto3.registerOnTouched = function(fn) {
                this._onTouchedFn = fn;
            }, _proto3.setDisabledState = function(isDisabled) {
                this.disabled = isDisabled;
            }, _proto3.focus = function() {
                this._hostElement.focus();
            }, _proto3.blur = function() {
                this._hostElement.blur();
            }, (0, createClass.Z)(MatSliderThumb, [ {
                key: "value",
                get: function() {
                    return (0, coercion.su)(this._hostElement.value);
                },
                set: function(v) {
                    var val = (0, coercion.su)(v).toString();
                    this._hasSetInitialValue ? this._isActive || (this._hostElement.value = val, this._updateThumbUIByValue(), 
                    this._slider._onValueChange(this), this._cdr.detectChanges(), this._slider._cdr.markForCheck()) : this._initialValue = val;
                }
            }, {
                key: "translateX",
                get: function() {
                    return this._slider.min >= this._slider.max ? (this._translateX = 0, this._translateX) : (void 0 === this._translateX && (this._translateX = this._calcTranslateXByValue()), 
                    this._translateX);
                },
                set: function(v) {
                    this._translateX = v;
                }
            }, {
                key: "min",
                get: function() {
                    return (0, coercion.su)(this._hostElement.min);
                },
                set: function(v) {
                    this._hostElement.min = (0, coercion.su)(v).toString(), this._cdr.detectChanges();
                }
            }, {
                key: "max",
                get: function() {
                    return (0, coercion.su)(this._hostElement.max);
                },
                set: function(v) {
                    this._hostElement.max = (0, coercion.su)(v).toString(), this._cdr.detectChanges();
                }
            }, {
                key: "step",
                get: function() {
                    return (0, coercion.su)(this._hostElement.step);
                },
                set: function(v) {
                    this._hostElement.step = (0, coercion.su)(v).toString(), this._cdr.detectChanges();
                }
            }, {
                key: "disabled",
                get: function() {
                    return (0, coercion.Ig)(this._hostElement.disabled);
                },
                set: function(v) {
                    this._hostElement.disabled = (0, coercion.Ig)(v), this._cdr.detectChanges(), this._slider.disabled !== this.disabled && (this._slider.disabled = this.disabled);
                }
            }, {
                key: "percentage",
                get: function() {
                    return this._slider.min >= this._slider.max ? this._slider._isRtl ? 1 : 0 : (this.value - this._slider.min) / (this._slider.max - this._slider.min);
                }
            }, {
                key: "fillPercentage",
                get: function() {
                    return this._slider._cachedWidth ? 0 === this._translateX ? 0 : this.translateX / this._slider._cachedWidth : this._slider._isRtl ? 1 : 0;
                }
            } ]), MatSliderThumb;
        }();
        (_MatSliderThumb = MatSliderThumb).\u0275fac = function(t) {
            return new (t || _MatSliderThumb)(core["\u0275\u0275directiveInject"](core.NgZone), core["\u0275\u0275directiveInject"](core.ElementRef), core["\u0275\u0275directiveInject"](core.ChangeDetectorRef), core["\u0275\u0275directiveInject"](MAT_SLIDER));
        }, _MatSliderThumb.\u0275dir = core["\u0275\u0275defineDirective"]({
            type: _MatSliderThumb,
            selectors: [ [ "input", "matSliderThumb", "" ] ],
            hostAttrs: [ "type", "range", 1, "mdc-slider__input" ],
            hostVars: 1,
            hostBindings: function(rf, ctx) {
                1 & rf && core["\u0275\u0275listener"]("change", function() {
                    return ctx._onChange();
                })("input", function() {
                    return ctx._onInput();
                })("blur", function() {
                    return ctx._onBlur();
                })("focus", function() {
                    return ctx._onFocus();
                }), 2 & rf && core["\u0275\u0275attribute"]("aria-valuetext", ctx._valuetext);
            },
            inputs: {
                value: "value"
            },
            outputs: {
                valueChange: "valueChange",
                dragStart: "dragStart",
                dragEnd: "dragEnd"
            },
            exportAs: [ "matSliderThumb" ],
            features: [ core["\u0275\u0275ProvidersFeature"]([ MAT_SLIDER_THUMB_VALUE_ACCESSOR, {
                provide: MAT_SLIDER_THUMB,
                useExisting: _MatSliderThumb
            } ]) ]
        });
        var MatSliderRangeThumb = function(_MatSliderThumb2) {
            (0, inheritsLoose.Z)(MatSliderRangeThumb, _MatSliderThumb2);
            var _proto4 = MatSliderRangeThumb.prototype;
            function MatSliderRangeThumb(_ngZone, _slider, _elementRef, _cdr) {
                var _this8;
                return (_this8 = _MatSliderThumb2.call(this, _ngZone, _elementRef, _cdr, _slider) || this)._cdr = _cdr, 
                _this8._isEndThumb = _this8._hostElement.hasAttribute("matSliderEndThumb"), _this8._setIsLeftThumb(), 
                _this8.thumbPosition = _this8._isEndThumb ? 2 : 1, _this8;
            }
            return _proto4.getSibling = function() {
                return this._sibling || (this._sibling = this._slider._getInput(this._isEndThumb ? 1 : 2)), 
                this._sibling;
            }, _proto4.getMinPos = function() {
                var sibling = this.getSibling();
                return !this._isLeftThumb && sibling ? sibling.translateX : 0;
            }, _proto4.getMaxPos = function() {
                var sibling = this.getSibling();
                return this._isLeftThumb && sibling ? sibling.translateX : this._slider._cachedWidth;
            }, _proto4._setIsLeftThumb = function() {
                this._isLeftThumb = this._isEndThumb && this._slider._isRtl || !this._isEndThumb && !this._slider._isRtl;
            }, _proto4._getDefaultValue = function() {
                return this._isEndThumb && this._slider._isRange ? this.max : this.min;
            }, _proto4._onInput = function() {
                _MatSliderThumb2.prototype._onInput.call(this), this._updateSibling(), this._isActive || this._updateWidthInactive();
            }, _proto4._onNgControlValueChange = function() {
                var _this$getSibling;
                _MatSliderThumb2.prototype._onNgControlValueChange.call(this), null == (_this$getSibling = this.getSibling()) || _this$getSibling._updateMinMax();
            }, _proto4._onPointerDown = function(event) {
                this.disabled || 0 !== event.button || (this._sibling && (this._sibling._updateWidthActive(), 
                this._sibling._hostElement.classList.add("mat-mdc-slider-input-no-pointer-events")), 
                _MatSliderThumb2.prototype._onPointerDown.call(this, event));
            }, _proto4._onPointerUp = function() {
                var _this9 = this;
                _MatSliderThumb2.prototype._onPointerUp.call(this), this._sibling && setTimeout(function() {
                    _this9._sibling._updateWidthInactive(), _this9._sibling._hostElement.classList.remove("mat-mdc-slider-input-no-pointer-events");
                });
            }, _proto4._onPointerMove = function(event) {
                _MatSliderThumb2.prototype._onPointerMove.call(this, event), !this._slider.step && this._isActive && this._updateSibling();
            }, _proto4._fixValue = function(event) {
                var _this$_sibling;
                _MatSliderThumb2.prototype._fixValue.call(this, event), null == (_this$_sibling = this._sibling) || _this$_sibling._updateMinMax();
            }, _proto4._clamp = function(v) {
                return Math.max(Math.min(v, this.getMaxPos()), this.getMinPos());
            }, _proto4._updateMinMax = function() {
                var sibling = this.getSibling();
                sibling && (this._isEndThumb ? (this.min = Math.max(this._slider.min, sibling.value), 
                this.max = this._slider.max) : (this.min = this._slider.min, this.max = Math.min(this._slider.max, sibling.value)));
            }, _proto4._updateWidthActive = function() {
                var minWidth = 2 * this._slider._rippleRadius - 2 * this._slider._inputPadding;
                this._hostElement.style.width = (this._slider._cachedWidth + this._slider._inputPadding - minWidth) * (this._slider.min < this._slider.max ? (this.max - this.min) / (this._slider.max - this._slider.min) : 1) + minWidth + "px", 
                this._hostElement.style.padding = "0 " + this._slider._inputPadding + "px";
            }, _proto4._updateWidthInactive = function() {
                var sibling = this.getSibling();
                if (sibling) {
                    var midValue = this._isEndThumb ? this.value - (this.value - sibling.value) / 2 : this.value + (sibling.value - this.value) / 2, percentage = this._slider.min < this._slider.max ? this._isEndThumb ? (this.max - midValue) / (this._slider.max - this._slider.min) : (midValue - this.min) / (this._slider.max - this._slider.min) : 1, ripplePadding = this._slider._rippleRadius;
                    1 === percentage ? ripplePadding = 48 : 0 === percentage && (ripplePadding = 0), 
                    this._hostElement.style.width = this._slider._cachedWidth * percentage + ripplePadding + "px", 
                    this._hostElement.style.padding = "0px", this._isLeftThumb ? (this._hostElement.style.left = "-24px", 
                    this._hostElement.style.right = "auto") : (this._hostElement.style.left = "auto", 
                    this._hostElement.style.right = "-24px");
                }
            }, _proto4._updateStaticStyles = function() {
                this._hostElement.classList.toggle("mat-slider__right-input", !this._isLeftThumb);
            }, _proto4._updateSibling = function() {
                var sibling = this.getSibling();
                sibling && (sibling._updateMinMax(), this._isActive ? sibling._updateWidthActive() : sibling._updateWidthInactive());
            }, _proto4.writeValue = function(value) {
                (this._isControlInitialized || null !== value) && (this.value = value, this._updateWidthInactive(), 
                this._updateSibling());
            }, MatSliderRangeThumb;
        }(MatSliderThumb);
        (_MatSliderRangeThumb = MatSliderRangeThumb).\u0275fac = function(t) {
            return new (t || _MatSliderRangeThumb)(core["\u0275\u0275directiveInject"](core.NgZone), core["\u0275\u0275directiveInject"](MAT_SLIDER), core["\u0275\u0275directiveInject"](core.ElementRef), core["\u0275\u0275directiveInject"](core.ChangeDetectorRef));
        }, _MatSliderRangeThumb.\u0275dir = core["\u0275\u0275defineDirective"]({
            type: _MatSliderRangeThumb,
            selectors: [ [ "input", "matSliderStartThumb", "" ], [ "input", "matSliderEndThumb", "" ] ],
            exportAs: [ "matSliderRangeThumb" ],
            features: [ core["\u0275\u0275ProvidersFeature"]([ MAT_SLIDER_RANGE_THUMB_VALUE_ACCESSOR, {
                provide: MAT_SLIDER_RANGE_THUMB,
                useExisting: _MatSliderRangeThumb
            } ]), core["\u0275\u0275InheritDefinitionFeature"] ]
        });
        var MatSliderModule = function() {};
        (_MatSliderModule = MatSliderModule).\u0275fac = function(t) {
            return new (t || _MatSliderModule);
        }, _MatSliderModule.\u0275mod = core["\u0275\u0275defineNgModule"]({
            type: _MatSliderModule
        }), _MatSliderModule.\u0275inj = core["\u0275\u0275defineInjector"]({
            imports: [ fesm2022_core.BQ, common.CommonModule, fesm2022_core.si ]
        });
        var form_field = __webpack_require__(60733), TriSliderModule = function() {
            function TriSliderModule() {}
            return TriSliderModule.\u0275fac = function(t) {
                return new (t || TriSliderModule);
            }, TriSliderModule.\u0275mod = core["\u0275\u0275defineNgModule"]({
                type: TriSliderModule
            }), TriSliderModule.\u0275inj = core["\u0275\u0275defineInjector"]({
                imports: [ common.CommonModule, MatSliderModule, fesm2022_forms.u5, form_field.lN ]
            }), TriSliderModule;
        }(), StatusIndicatorType = function(StatusIndicatorType) {
            return StatusIndicatorType[StatusIndicatorType.Information = 0] = "Information", 
            StatusIndicatorType[StatusIndicatorType.Error = 1] = "Error", StatusIndicatorType[StatusIndicatorType.Warning = 2] = "Warning", 
            StatusIndicatorType[StatusIndicatorType.Success = 3] = "Success", StatusIndicatorType;
        }({});
        function TriStatusIndicatorComponent_div_4_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 5), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate1"](" ", ctx_r0.message, " ");
            }
        }
        var tri_status_indicator_component_c0 = [ "*" ], TriStatusIndicatorComponent = function() {
            function TriStatusIndicatorComponent() {}
            return TriStatusIndicatorComponent.prototype.ngOnInit = function() {
                this.setStatusIndicatorClass();
            }, TriStatusIndicatorComponent.prototype.ngOnChanges = function() {
                this.setStatusIndicatorClass();
            }, TriStatusIndicatorComponent.prototype.setStatusIndicatorClass = function() {
                switch (this.statusIndicatorType) {
                  case StatusIndicatorType.Error:
                    this.statusIndicatorClass = "status-indicator-error", this.statusIndicatorIconName = "error_circle_12_filled";
                    break;

                  case StatusIndicatorType.Warning:
                    this.statusIndicatorClass = "status-indicator-warning", this.statusIndicatorIconName = "warning_12_filled";
                    break;

                  case StatusIndicatorType.Success:
                    this.statusIndicatorClass = "status-indicator-success", this.statusIndicatorIconName = "checkmark_circle_12_filled";
                    break;

                  default:
                    this.statusIndicatorClass = "status-indicator-info", this.statusIndicatorIconName = "info_12_filled";
                }
            }, TriStatusIndicatorComponent.\u0275fac = function(t) {
                return new (t || TriStatusIndicatorComponent);
            }, TriStatusIndicatorComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: TriStatusIndicatorComponent,
                selectors: [ [ "tri-status-indicator" ] ],
                inputs: {
                    statusIndicatorType: "statusIndicatorType",
                    message: "message"
                },
                features: [ core["\u0275\u0275NgOnChangesFeature"] ],
                ngContentSelectors: tri_status_indicator_component_c0,
                decls: 6,
                vars: 4,
                consts: [ [ 1, "status-indicator", 3, "ngClass" ], [ 1, "status-indicator-icon" ], [ "tri-svg-icon-12", "", 3, "name" ], [ 1, "status-indicator-text-container" ], [ "class", "status-indicator-text", 4, "ngIf" ], [ 1, "status-indicator-text" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275projectionDef"](), core["\u0275\u0275elementStart"](0, "div", 0)(1, "div", 1), 
                    core["\u0275\u0275element"](2, "tri-svg-icon", 2), core["\u0275\u0275elementEnd"](), 
                    core["\u0275\u0275elementStart"](3, "div", 3), core["\u0275\u0275template"](4, TriStatusIndicatorComponent_div_4_Template, 2, 1, "div", 4), 
                    core["\u0275\u0275projection"](5), core["\u0275\u0275elementEnd"]()()), 2 & rf && (core["\u0275\u0275property"]("ngClass", ctx.statusIndicatorClass), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("name", ctx.statusIndicatorIconName), 
                    core["\u0275\u0275attribute"]("aria-hidden", !0), core["\u0275\u0275advance"](2), 
                    core["\u0275\u0275property"]("ngIf", !!ctx.message));
                },
                dependencies: [ common.NgClass, common.NgIf, tri_svg_icon_component.M ],
                styles: [ ".status-indicator[_ngcontent-%COMP%]{display:flex;align-items:center;width:100%;box-sizing:border-box}.status-indicator[_ngcontent-%COMP%]   .status-indicator-text-container[_ngcontent-%COMP%]{color:var(--colorNeutralForeground3);font-family:var(--caption-font-family);font-size:var(--caption-font-size);font-weight:var(--caption-font-weight);line-height:var(--caption-font-lineheight);margin-left:4px}.status-indicator.status-indicator-info[_ngcontent-%COMP%]   .status-indicator-icon[_ngcontent-%COMP%]{fill:var(--colorNeutralForeground3)}.status-indicator.status-indicator-error[_ngcontent-%COMP%]   .status-indicator-icon[_ngcontent-%COMP%]{fill:var(--colorPaletteRedForeground1)}.status-indicator.status-indicator-error[_ngcontent-%COMP%]   .status-indicator-text-container[_ngcontent-%COMP%]{color:var(--colorPaletteRedForeground1)}.status-indicator.status-indicator-warning[_ngcontent-%COMP%]   .status-indicator-icon[_ngcontent-%COMP%]{fill:var(--globalColorYellowShade30)}.status-indicator.status-indicator-success[_ngcontent-%COMP%]   .status-indicator-icon[_ngcontent-%COMP%]{fill:var(--globalColorGreenShade10)}.status-indicator-icon[_ngcontent-%COMP%]{display:flex}" ],
                changeDetection: 0
            }), TriStatusIndicatorComponent;
        }(), TriStatusIndicatorModule = function() {
            function TriStatusIndicatorModule() {}
            return TriStatusIndicatorModule.\u0275fac = function(t) {
                return new (t || TriStatusIndicatorModule);
            }, TriStatusIndicatorModule.\u0275mod = core["\u0275\u0275defineNgModule"]({
                type: TriStatusIndicatorModule
            }), TriStatusIndicatorModule.\u0275inj = core["\u0275\u0275defineInjector"]({
                imports: [ common.CommonModule, localization_module.Y, tri_svg_icon.T6 ]
            }), TriStatusIndicatorModule;
        }(), tri_workspace_settings = __webpack_require__(98131), tri_empty_state = __webpack_require__(75476), domains_ui_src = __webpack_require__(28154), tslib_es6 = __webpack_require__(81337), http_service = __webpack_require__(68698), errorService = __webpack_require__(56186), feature_switch_service = __webpack_require__(94771), BehaviorSubject = __webpack_require__(35510), take = __webpack_require__(48787), PlatformMonitoringDeleteButtonComponent = function() {
            function PlatformMonitoringDeleteButtonComponent(dialog) {
                this.dialog = dialog, this.deleteButtonClicked = !1;
            }
            return PlatformMonitoringDeleteButtonComponent.prototype.onDeleteButtonClicked = function() {
                this.deleteButtonClicked = !0, this.dialog.close(this.deleteButtonClicked);
            }, PlatformMonitoringDeleteButtonComponent.prototype.onCancelButtonClick = function() {
                this.dialog.close();
            }, PlatformMonitoringDeleteButtonComponent.prototype.onDismissButtonClick = function() {
                this.dialog.close();
            }, PlatformMonitoringDeleteButtonComponent.\u0275fac = function(t) {
                return new (t || PlatformMonitoringDeleteButtonComponent)(core["\u0275\u0275directiveInject"](dialog.so));
            }, PlatformMonitoringDeleteButtonComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: PlatformMonitoringDeleteButtonComponent,
                selectors: [ [ "tri-platform-monitoring-delete-button" ] ],
                decls: 18,
                vars: 12,
                consts: [ [ 1, "dialog" ], [ 1, "dialog-header" ], [ 1, "dialog-title" ], [ "aria-label", "close", 1, "dismiss-button", 3, "click" ], [ "name", "dismiss_20_regular" ], [ 1, "dialog-content" ], [ 1, "subtitle" ], [ 1, "dialog-footer" ], [ "tri-button", "", "appearance", "primary", 1, "sync-button", 3, "click" ], [ "tri-button", "", "appearance", "tri-middle", 1, "delete-button", 3, "click" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementStart"](0, "div", 0)(1, "div", 1)(2, "h4", 2), 
                    core["\u0275\u0275text"](3), core["\u0275\u0275pipe"](4, "localize"), core["\u0275\u0275elementEnd"](), 
                    core["\u0275\u0275elementStart"](5, "button", 3), core["\u0275\u0275listener"]("click", function() {
                        return ctx.onDismissButtonClick();
                    }), core["\u0275\u0275element"](6, "tri-svg-icon", 4), core["\u0275\u0275elementEnd"]()(), 
                    core["\u0275\u0275elementStart"](7, "div", 5)(8, "div", 6), core["\u0275\u0275text"](9), 
                    core["\u0275\u0275pipe"](10, "localize"), core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementStart"](11, "div", 7)(12, "button", 8), 
                    core["\u0275\u0275listener"]("click", function() {
                        return ctx.onDeleteButtonClicked();
                    }), core["\u0275\u0275text"](13), core["\u0275\u0275pipe"](14, "localize"), core["\u0275\u0275elementEnd"](), 
                    core["\u0275\u0275elementStart"](15, "button", 9), core["\u0275\u0275listener"]("click", function() {
                        return ctx.onCancelButtonClick();
                    }), core["\u0275\u0275text"](16), core["\u0275\u0275pipe"](17, "localize"), core["\u0275\u0275elementEnd"]()()()), 
                    2 & rf && (core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](4, 4, "Platform_Monitoring_Delete")), 
                    core["\u0275\u0275advance"](6), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](10, 6, "Platform_Monitoring_Delete_Message"), " "), 
                    core["\u0275\u0275advance"](4), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](14, 8, "Delete"), " "), 
                    core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](17, 10, "Cancel_ButtonText"), " "));
                },
                dependencies: [ tri_svg_icon_component.M, localize_pipe.Y ],
                styles: [ ".dialog[_ngcontent-%COMP%]{display:flex;width:250px;flex-direction:column;justify-content:left;background:var(--globalColorWhite);padding:15px}.dialog-header[_ngcontent-%COMP%]{display:flex;flex-direction:row;justify-content:space-between;align-items:flex-start}.dialog-header[_ngcontent-%COMP%]   .dialog-title[_ngcontent-%COMP%]{font-weight:600;font-size:20px;margin:0}.dialog-header[_ngcontent-%COMP%]   .dismiss-button[_ngcontent-%COMP%]{border:none;background:transparent;padding:0;fill:var(--globalColorGrey38)}.dialog-content[_ngcontent-%COMP%]   .subtitle[_ngcontent-%COMP%]{margin-top:18px;font-size:14px;line-height:20px}.dialog-footer[_ngcontent-%COMP%]{display:flex;flex-direction:row;justify-content:right;margin-top:24px;gap:8px}.dialog-footer[_ngcontent-%COMP%]   .delete-button[_ngcontent-%COMP%], .dialog-footer[_ngcontent-%COMP%]   .cancel-button[_ngcontent-%COMP%]{width:fit-content}" ],
                changeDetection: 0
            }), PlatformMonitoringDeleteButtonComponent;
        }(), artifact_src = __webpack_require__(25082), data_access_artifact_src = __webpack_require__(12315), router = __webpack_require__(9398), tri_spinner_component = __webpack_require__(54729), tri_switch_component = __webpack_require__(13414);
        function WorkspaceSettingsPlatformMonitoringComponent_ng_container_0_section_1_div_1_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementStart"](0, "div", 22), core["\u0275\u0275element"](1, "tri-svg-icon", 23), 
            core["\u0275\u0275elementStart"](2, "div", 24), core["\u0275\u0275text"](3), core["\u0275\u0275pipe"](4, "localize"), 
            core["\u0275\u0275elementEnd"]()()), 2 & rf && (core["\u0275\u0275advance"](3), 
            core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](4, 1, "Platform_Monitoring_Disabled_By_Admin_Created")));
        }
        function WorkspaceSettingsPlatformMonitoringComponent_ng_container_0_section_1_div_2_Template(rf, ctx) {
            if (1 & rf) {
                var _r11 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div", 25), core["\u0275\u0275element"](1, "tri-svg-icon", 26), 
                core["\u0275\u0275elementStart"](2, "div", 24), core["\u0275\u0275text"](3), core["\u0275\u0275pipe"](4, "localize"), 
                core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](5, "button", 27), 
                core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r11);
                    var ctx_r10 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r10.dismissModal());
                }), core["\u0275\u0275element"](6, "tri-svg-icon", 28), core["\u0275\u0275elementEnd"]()();
            }
            2 & rf && (core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](4, 1, "Platform_Monitoring_CreateDatabase_Success")));
        }
        function WorkspaceSettingsPlatformMonitoringComponent_ng_container_0_section_1_div_3_Template(rf, ctx) {
            if (1 & rf) {
                var _r13 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div", 25), core["\u0275\u0275element"](1, "tri-svg-icon", 26), 
                core["\u0275\u0275elementStart"](2, "div", 24), core["\u0275\u0275text"](3), core["\u0275\u0275pipe"](4, "localize"), 
                core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](5, "button", 27), 
                core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r13);
                    var ctx_r12 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r12.dismissModalOfToggle());
                }), core["\u0275\u0275element"](6, "tri-svg-icon", 28), core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var ctx_r7 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](4, 1, ctx_r7.actionOfTogglingInjestionString));
            }
        }
        function WorkspaceSettingsPlatformMonitoringComponent_ng_container_0_section_1_button_48_Template(rf, ctx) {
            if (1 & rf) {
                var _r15 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "button", 29), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r15);
                    var ctx_r14 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r14.promptDeletePlatformMonitoring());
                }), core["\u0275\u0275element"](1, "tri-svg-icon", 30), core["\u0275\u0275text"](2), 
                core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementEnd"]();
            }
            2 & rf && (core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](3, 1, "Platform_Monitoring_DeleteDatabase"), " "));
        }
        function WorkspaceSettingsPlatformMonitoringComponent_ng_container_0_section_1_div_50_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementStart"](0, "div", 31), core["\u0275\u0275element"](1, "tri-spinner", 32), 
            core["\u0275\u0275text"](2), core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementEnd"]()), 
            2 & rf && (core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](3, 1, "AnalysisServer_Loading"), " "));
        }
        var workspace_settings_platform_monitoring_component_c0 = function() {
            return {
                standalone: !0
            };
        };
        function WorkspaceSettingsPlatformMonitoringComponent_ng_container_0_section_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r17 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "section"), core["\u0275\u0275template"](1, WorkspaceSettingsPlatformMonitoringComponent_ng_container_0_section_1_div_1_Template, 5, 3, "div", 3), 
                core["\u0275\u0275template"](2, WorkspaceSettingsPlatformMonitoringComponent_ng_container_0_section_1_div_2_Template, 7, 3, "div", 4), 
                core["\u0275\u0275template"](3, WorkspaceSettingsPlatformMonitoringComponent_ng_container_0_section_1_div_3_Template, 7, 3, "div", 4), 
                core["\u0275\u0275elementStart"](4, "section", 5), core["\u0275\u0275text"](5), 
                core["\u0275\u0275pipe"](6, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](7, "section", 6), 
                core["\u0275\u0275text"](8), core["\u0275\u0275pipe"](9, "localize"), core["\u0275\u0275elementEnd"](), 
                core["\u0275\u0275elementStart"](10, "section", 7)(11, "span", 8), core["\u0275\u0275text"](12), 
                core["\u0275\u0275pipe"](13, "localize"), core["\u0275\u0275elementStart"](14, "tri-switch", 9), 
                core["\u0275\u0275listener"]("ngModelChange", function($event) {
                    core["\u0275\u0275restoreView"](_r17);
                    var ctx_r16 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r16.allowPlatformMonitoring = $event);
                })("ngModelChange", function() {
                    core["\u0275\u0275restoreView"](_r17);
                    var ctx_r18 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r18.savePlatformMonitoringStatus());
                }), core["\u0275\u0275pipe"](15, "localize"), core["\u0275\u0275elementStart"](16, "div", 10), 
                core["\u0275\u0275text"](17), core["\u0275\u0275pipe"](18, "localize"), core["\u0275\u0275elementEnd"]()()()(), 
                core["\u0275\u0275elementStart"](19, "span", 11), core["\u0275\u0275text"](20), 
                core["\u0275\u0275pipe"](21, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](22, "section", 7)(23, "div")(24, "label", 12), 
                core["\u0275\u0275text"](25), core["\u0275\u0275pipe"](26, "localize"), core["\u0275\u0275elementEnd"]()(), 
                core["\u0275\u0275elementStart"](27, "label", 6), core["\u0275\u0275text"](28), 
                core["\u0275\u0275pipe"](29, "localize"), core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementStart"](30, "section", 13)(31, "tri-link", 14), 
                core["\u0275\u0275text"](32), core["\u0275\u0275pipe"](33, "localize"), core["\u0275\u0275elementEnd"]()(), 
                core["\u0275\u0275elementStart"](34, "section", 15)(35, "div", 16), core["\u0275\u0275element"](36, "mat-divider"), 
                core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](37, "span", 17), 
                core["\u0275\u0275text"](38), core["\u0275\u0275pipe"](39, "localize"), core["\u0275\u0275elementEnd"](), 
                core["\u0275\u0275elementStart"](40, "div", 18), core["\u0275\u0275element"](41, "mat-divider"), 
                core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementStart"](42, "section", 19), 
                core["\u0275\u0275text"](43), core["\u0275\u0275pipe"](44, "localize"), core["\u0275\u0275elementEnd"](), 
                core["\u0275\u0275elementStart"](45, "section", 6), core["\u0275\u0275text"](46), 
                core["\u0275\u0275pipe"](47, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](48, WorkspaceSettingsPlatformMonitoringComponent_ng_container_0_section_1_button_48_Template, 4, 3, "button", 20), 
                core["\u0275\u0275pipe"](49, "async"), core["\u0275\u0275template"](50, WorkspaceSettingsPlatformMonitoringComponent_ng_container_0_section_1_div_50_Template, 4, 3, "div", 21), 
                core["\u0275\u0275pipe"](51, "async"), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r3 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !ctx_r3.toggleEnabled), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx_r3.actionOfDatabaseCreation), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx_r3.actionOfTogglingInjestion), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](6, 22, "Monitoring")), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](9, 24, "Platform_Monitoring_CreateDatabase_Description")), 
                core["\u0275\u0275advance"](4), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](13, 26, "Platform_Monitoring_Ingestion_Metrics"), " "), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngModel", ctx_r3.allowPlatformMonitoring)("ngModelOptions", core["\u0275\u0275pureFunction0"](50, workspace_settings_platform_monitoring_component_c0))("aria-label", core["\u0275\u0275pipeBind1"](15, 28, ctx_r3.allowPlatformMonitoringToggleString))("disabled", !ctx_r3.toggleEnabled), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](18, 30, ctx_r3.allowPlatformMonitoringToggleString)), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](21, 32, "Platform_Monitoring_Description"), " "), 
                core["\u0275\u0275advance"](5), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](26, 34, "Platform_Monitoring_ConnectionString")), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](29, 36, "Platform_Monitoring_ConnectionString_Description")), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("external", !0)("href", ctx_r3.databaseString), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](33, 38, "Platform_Monitoring_Database_Link"), " "), 
                core["\u0275\u0275advance"](6), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](39, 40, "Manage_Tooltip")), 
                core["\u0275\u0275advance"](5), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](44, 42, "Platform_Monitoring_DeleteDatabase_Title")), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](47, 44, "Platform_Monitoring_DeleteDatabase_Description")), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](49, 46, ctx_r3.databaseDeletedSubjectObservable)), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", !1 === core["\u0275\u0275pipeBind1"](51, 48, ctx_r3.databaseDeletedSubjectObservable));
            }
        }
        function WorkspaceSettingsPlatformMonitoringComponent_ng_container_0_section_2_div_1_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementStart"](0, "div", 22), core["\u0275\u0275element"](1, "tri-svg-icon", 23), 
            core["\u0275\u0275elementStart"](2, "div", 24), core["\u0275\u0275text"](3), core["\u0275\u0275pipe"](4, "localize"), 
            core["\u0275\u0275elementEnd"]()()), 2 & rf && (core["\u0275\u0275advance"](3), 
            core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](4, 1, "Platform_Monitoring_Disabled_By_Admin")));
        }
        function WorkspaceSettingsPlatformMonitoringComponent_ng_container_0_section_2_div_2_Template(rf, ctx) {
            if (1 & rf) {
                var _r25 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div", 36), core["\u0275\u0275element"](1, "tri-svg-icon", 37), 
                core["\u0275\u0275elementStart"](2, "div", 24), core["\u0275\u0275text"](3), core["\u0275\u0275pipe"](4, "localize"), 
                core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](5, "button", 38), 
                core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r25);
                    var ctx_r24 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r24.dismissModalOfFailure());
                }), core["\u0275\u0275element"](6, "tri-svg-icon", 28), core["\u0275\u0275elementEnd"]()();
            }
            2 & rf && (core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](4, 1, "Platform_Monitoring_CreateDatabase_Failure")));
        }
        function WorkspaceSettingsPlatformMonitoringComponent_ng_container_0_section_2_div_3_Template(rf, ctx) {
            if (1 & rf) {
                var _r27 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div", 25), core["\u0275\u0275element"](1, "tri-svg-icon", 26), 
                core["\u0275\u0275elementStart"](2, "div", 24), core["\u0275\u0275text"](3), core["\u0275\u0275pipe"](4, "localize"), 
                core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](5, "button", 27), 
                core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r27);
                    var ctx_r26 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r26.dismissModalOfDeletion());
                }), core["\u0275\u0275element"](6, "tri-svg-icon", 28), core["\u0275\u0275elementEnd"]()();
            }
            2 & rf && (core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](4, 1, "Platform_Monitoring_DeleteDatabase_Success")));
        }
        function WorkspaceSettingsPlatformMonitoringComponent_ng_container_0_section_2_button_16_Template(rf, ctx) {
            if (1 & rf) {
                var _r29 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "button", 39), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r29);
                    var ctx_r28 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r28.createDatabase());
                }), core["\u0275\u0275element"](1, "tri-svg-icon", 40), core["\u0275\u0275text"](2), 
                core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r22 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275property"]("disabled", !ctx_r22.toggleEnabled || ctx_r22.buttonDisabledForCreation), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](3, 2, "SettingsDataSource_SettingsAuthenticationMethodDatabase"), " ");
            }
        }
        function WorkspaceSettingsPlatformMonitoringComponent_ng_container_0_section_2_div_18_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementStart"](0, "div", 31), core["\u0275\u0275element"](1, "tri-spinner", 32), 
            core["\u0275\u0275text"](2), core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementEnd"]()), 
            2 & rf && (core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](3, 1, "DataLoaderSpinner_LoadingMessage3"), " "));
        }
        function WorkspaceSettingsPlatformMonitoringComponent_ng_container_0_section_2_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "section"), core["\u0275\u0275template"](1, WorkspaceSettingsPlatformMonitoringComponent_ng_container_0_section_2_div_1_Template, 5, 3, "div", 3), 
            core["\u0275\u0275template"](2, WorkspaceSettingsPlatformMonitoringComponent_ng_container_0_section_2_div_2_Template, 7, 3, "div", 33), 
            core["\u0275\u0275template"](3, WorkspaceSettingsPlatformMonitoringComponent_ng_container_0_section_2_div_3_Template, 7, 3, "div", 4), 
            core["\u0275\u0275elementStart"](4, "section", 5), core["\u0275\u0275text"](5), 
            core["\u0275\u0275pipe"](6, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](7, "section", 6), 
            core["\u0275\u0275text"](8), core["\u0275\u0275pipe"](9, "localize"), core["\u0275\u0275elementEnd"](), 
            core["\u0275\u0275elementStart"](10, "section", 34), core["\u0275\u0275text"](11), 
            core["\u0275\u0275pipe"](12, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](13, "section", 6), 
            core["\u0275\u0275text"](14), core["\u0275\u0275pipe"](15, "localize"), core["\u0275\u0275elementEnd"](), 
            core["\u0275\u0275template"](16, WorkspaceSettingsPlatformMonitoringComponent_ng_container_0_section_2_button_16_Template, 4, 4, "button", 35), 
            core["\u0275\u0275pipe"](17, "async"), core["\u0275\u0275template"](18, WorkspaceSettingsPlatformMonitoringComponent_ng_container_0_section_2_div_18_Template, 4, 3, "div", 21), 
            core["\u0275\u0275pipe"](19, "async"), core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r4 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !ctx_r4.toggleEnabled), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !ctx_r4.databaseCreationSuccess), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx_r4.actionOfDatabaseDeletion), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](6, 9, "Monitoring")), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](9, 11, "Platform_Monitoring_CreateDatabase_Description")), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](12, 13, "Platform_Monitoring_CreateDatabase")), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](15, 15, "Platform_Monitoring_CreateDatabase_Button_Description")), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](17, 17, ctx_r4.databaseCreatedSubjectObservable)), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", !1 === core["\u0275\u0275pipeBind1"](19, 19, ctx_r4.databaseCreatedSubjectObservable));
            }
        }
        function WorkspaceSettingsPlatformMonitoringComponent_ng_container_0_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, WorkspaceSettingsPlatformMonitoringComponent_ng_container_0_section_1_Template, 52, 51, "section", 2), 
            core["\u0275\u0275template"](2, WorkspaceSettingsPlatformMonitoringComponent_ng_container_0_section_2_Template, 20, 21, "section", 2), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx_r0.databaseCreated), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !ctx_r0.databaseCreated);
            }
        }
        function WorkspaceSettingsPlatformMonitoringComponent_ng_template_2_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "tri-spinner");
        }
        var WorkspaceSettingsPlatformMonitoringComponent = function() {
            function WorkspaceSettingsPlatformMonitoringComponent(httpService, workspaceSettingsService, errorService, featureSwitchService, changeDetectorRef, localizationService, dialogService, activatedRoute, artifactFacade) {
                this.httpService = httpService, this.workspaceSettingsService = workspaceSettingsService, 
                this.errorService = errorService, this.featureSwitchService = featureSwitchService, 
                this.changeDetectorRef = changeDetectorRef, this.localizationService = localizationService, 
                this.dialogService = dialogService, this.activatedRoute = activatedRoute, this.artifactFacade = artifactFacade, 
                this.closeSettings = new core.EventEmitter, this.allowPlatformMonitoring = !0, this.platformMonitoringUi = "/metadata/platformMonitoring/workspace", 
                this.groupsUi = "/groups", this.databases = "databases", this.dataLoaded = new BehaviorSubject.X(!1), 
                this.dataLoadedObservable = this.dataLoaded.asObservable(), this.databaseCreatedSubject = new BehaviorSubject.X(!0), 
                this.databaseCreatedSubjectObservable = this.databaseCreatedSubject.asObservable(), 
                this.databaseDeletedSubject = new BehaviorSubject.X(!0), this.databaseDeletedSubjectObservable = this.databaseDeletedSubject.asObservable(), 
                this.delegationSettingEnabled = !1, this.artifactMetadata = null, this.toggleEnabled = !1, 
                this.databaseCreated = !1, this.actionOfDatabaseCreation = !1, this.actionOfDatabaseDeletion = !1, 
                this.databaseCreationSuccess = !0, this.buttonDisabledForCreation = !1, this.actionOfTogglingInjestion = !1, 
                this.actionOfTogglingInjestionString = "", this.allowPlatformMonitoringToggleString = "", 
                this.databaseString = "";
            }
            return WorkspaceSettingsPlatformMonitoringComponent.prototype.ngOnInit = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        return this.getPlatformMonitoringTenantSwitch(), [ 2 ];
                    });
                });
            }, WorkspaceSettingsPlatformMonitoringComponent.prototype.getPlatformMonitoringTenantSwitch = function() {
                var _this = this;
                this.featureSwitchService.getWorkspaceDelegatedSetting({
                    name: "platformMonitoringTenantSettingEnabled",
                    workspaceObjectId: this.workspaceSettingsService.workspaceObjectId
                }).pipe((0, take.q)(1)).subscribe(function(delegationSetting) {
                    _this.delegationSettingEnabled = void 0 !== delegationSetting.isEnabled && delegationSetting.isEnabled, 
                    _this.getPlatformMonitoringStatus();
                });
            }, WorkspaceSettingsPlatformMonitoringComponent.prototype.getPlatformMonitoringStatus = function() {
                var _this = this, options = this.httpService.powerbiRequestOptions(void 0, "GetPlatformMonitoringValue"), groupObjectId = this.workspaceSettingsService.workspaceObjectId, uri = "".concat(this.platformMonitoringUi, "/").concat(groupObjectId);
                this.httpService.get(uri, options).subscribe(function(response) {
                    var platformMonitoringMetadata = response.data;
                    if (platformMonitoringMetadata) {
                        _this.artifactMetadata = platformMonitoringMetadata.artifact, _this.allowPlatformMonitoring = "Enabled" === platformMonitoringMetadata.ingestionState, 
                        _this.allowPlatformMonitoringToggleString = _this.allowPlatformMonitoring ? "ToggleSwitchOn" : "ToggleSwitchOff";
                        var queryParams = _this.activatedRoute.snapshot.queryParams, connectionString = "";
                        platformMonitoringMetadata.artifact.artifactType === data_access_artifact_src.RG[33] && platformMonitoringMetadata.artifact.artifactRelations && platformMonitoringMetadata.artifact.artifactRelations[0] ? connectionString = "".concat(_this.groupsUi, "/").concat(groupObjectId, "/").concat(_this.databases, "/").concat(platformMonitoringMetadata.artifact.artifactRelations[0].dependentArtifactObjectId) : platformMonitoringMetadata.artifact.artifactType === data_access_artifact_src.RG[32] && (connectionString = "".concat(_this.groupsUi, "/").concat(groupObjectId, "/").concat(_this.databases, "/").concat(platformMonitoringMetadata.artifact.objectId)), 
                        _this.databaseString = _this.buildConnectionStringWithQueryParams(connectionString, queryParams), 
                        _this.databaseCreated = !0;
                    } else _this.databaseCreated = !1;
                    _this.toggleEnabled = _this.delegationSettingEnabled, _this.dataLoaded.next(!0);
                }, function(err) {
                    _this.errorService.error(_this.localizationService.get("GetPlatformMonitoringValue_Error_FailedToGet"), "GetPlatformMonitoringValue_Error_FailedToGet", {
                        requestId: err.requestId
                    });
                });
            }, WorkspaceSettingsPlatformMonitoringComponent.prototype.buildConnectionStringWithQueryParams = function(url, queryParams) {
                return 0 !== Object.keys(queryParams).length && (url += (-1 === url.indexOf("?") ? "?" : "&") + Object.keys(queryParams).reduce(function(prev, key) {
                    return "searchQuery" === key ? prev : prev.concat(encodeURIComponent(key) + "=" + encodeURIComponent(queryParams[key]));
                }, []).join("&")), url;
            }, WorkspaceSettingsPlatformMonitoringComponent.prototype.createDatabase = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var options, createPlatformMonitoringRequest, groupObjectId, uri, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return options = this.httpService.powerbiRequestOptions(void 0, "CreatePlatformMonitoringDatabase"), 
                            this.databaseCreatedSubject.next(!1), this.changeDetectorRef.markForCheck(), createPlatformMonitoringRequest = {
                                artifactType: "KustoDatabase",
                                workloadPayload: "{}"
                            }, groupObjectId = this.workspaceSettingsService.workspaceObjectId, uri = "".concat(this.platformMonitoringUi, "/").concat(groupObjectId), 
                            [ 4, this.httpService.post(uri, JSON.stringify(createPlatformMonitoringRequest), options).subscribe(function() {
                                _this.enablePlatformMonitoringInjestion(!0);
                            }, function(error) {
                                _this.actionOfDatabaseDeletion = !1, _this.databaseCreatedSubject.next(!0), _this.databaseCreationSuccess = !1, 
                                _this.buttonDisabledForCreation = !0, _this.errorService.error(_this.localizationService.get("GetPlatformMonitoringValue_Error_FailedToCreate"), "GetPlatformMonitoringValue_Error_FailedToCreate", {
                                    requestId: error.requestId,
                                    statusCode: String(error.status)
                                }), _this.changeDetectorRef.markForCheck();
                            }) ];

                          case 1:
                            return _a.sent(), [ 2 ];
                        }
                    });
                });
            }, WorkspaceSettingsPlatformMonitoringComponent.prototype.promptDeletePlatformMonitoring = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var _this = this;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.dialogService.open(PlatformMonitoringDeleteButtonComponent).afterClosed().subscribe(function(deleteButtonClicked) {
                                return (0, tslib_es6.__awaiter)(_this, void 0, void 0, function() {
                                    return (0, tslib_es6.__generator)(this, function(_a) {
                                        switch (_a.label) {
                                          case 0:
                                            return deleteButtonClicked ? [ 4, this.deleteDatabase() ] : [ 3, 2 ];

                                          case 1:
                                            _a.sent(), _a.label = 2;

                                          case 2:
                                            return [ 2 ];
                                        }
                                    });
                                });
                            }) ];

                          case 1:
                            return _a.sent(), [ 2 ];
                        }
                    });
                });
            }, WorkspaceSettingsPlatformMonitoringComponent.prototype.deleteDatabase = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var options, groupObjectId, uri, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        return this.databaseDeletedSubject.next(!1), this.changeDetectorRef.markForCheck(), 
                        options = this.httpService.powerbiRequestOptions(void 0, "GetPlatformMonitoringValue"), 
                        groupObjectId = this.workspaceSettingsService.workspaceObjectId, uri = "".concat(this.platformMonitoringUi, "/").concat(groupObjectId), 
                        this.httpService.delete(uri, options).subscribe(function() {
                            if (_this.actionOfDatabaseDeletion = !0, _this.databaseCreated = !1, _this.databaseDeletedSubject.next(!0), 
                            _this.artifactMetadata && _this.artifactMetadata.objectId) if ("KustoEventHouse" === _this.artifactMetadata.artifactType && _this.artifactMetadata.artifactRelations && _this.artifactMetadata.artifactRelations[0] && _this.artifactMetadata.artifactRelations[0].dependentArtifactObjectId) {
                                var artifactIds = [];
                                artifactIds = (artifactIds = artifactIds.concat(_this.artifactMetadata.artifactRelations[0].dependentArtifactObjectId)).concat(_this.artifactMetadata.objectId), 
                                _this.artifactFacade.deleteArtifactsFromFEStore(artifactIds);
                            } else "KustoDatabase" === _this.artifactMetadata.artifactType && _this.artifactFacade.deleteArtifactFromFEStore(_this.artifactMetadata.objectId);
                            _this.changeDetectorRef.markForCheck();
                        }, function(err) {
                            _this.errorService.error(_this.localizationService.get("GetPlatformMonitoringValue_Error_FailedToDelete"), "GetPlatformMonitoringValue_Error_FailedToDelete", {
                                requestId: err.requestId
                            });
                        }), [ 2 ];
                    });
                });
            }, WorkspaceSettingsPlatformMonitoringComponent.prototype.savePlatformMonitoringStatus = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var options, groupObjectId, uri, savePlatformMonitoringStatusRequest, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return options = this.httpService.powerbiRequestOptions(void 0, "UpdatePlatformMonitoringValue"), 
                            groupObjectId = this.workspaceSettingsService.workspaceObjectId, uri = "".concat(this.platformMonitoringUi, "/").concat(groupObjectId), 
                            savePlatformMonitoringStatusRequest = {
                                ingestionState: this.allowPlatformMonitoring ? "Enabled" : "Disabled"
                            }, this.allowPlatformMonitoring ? (this.allowPlatformMonitoringToggleString = "ToggleSwitchOn", 
                            this.actionOfTogglingInjestion = !1) : (this.allowPlatformMonitoringToggleString = "ToggleSwitchOff", 
                            this.actionOfTogglingInjestion = !0, this.actionOfTogglingInjestionString = "Platform_Monitoring_Injestion_Turned_Off"), 
                            this.changeDetectorRef.markForCheck(), [ 4, this.httpService.patch(uri, JSON.stringify(savePlatformMonitoringStatusRequest), options).subscribe(function() {}, function(err) {
                                _this.errorService.error(_this.localizationService.get("GetPlatformMonitoringValue_Error_FailedToUpdate"), "GetPlatformMonitoringValue_Error_FailedToUpdate", {
                                    requestId: err.requestId
                                });
                            }) ];

                          case 1:
                            return _a.sent(), [ 2 ];
                        }
                    });
                });
            }, WorkspaceSettingsPlatformMonitoringComponent.prototype.dismissModal = function() {
                this.actionOfDatabaseCreation = !1, this.changeDetectorRef.markForCheck();
            }, WorkspaceSettingsPlatformMonitoringComponent.prototype.dismissModalOfFailure = function() {
                this.databaseCreationSuccess = !0, this.changeDetectorRef.markForCheck();
            }, WorkspaceSettingsPlatformMonitoringComponent.prototype.dismissModalOfDeletion = function() {
                this.actionOfDatabaseDeletion = !1, this.changeDetectorRef.markForCheck();
            }, WorkspaceSettingsPlatformMonitoringComponent.prototype.dismissModalOfToggle = function() {
                this.actionOfTogglingInjestion = !1, this.changeDetectorRef.markForCheck();
            }, WorkspaceSettingsPlatformMonitoringComponent.prototype.enablePlatformMonitoringInjestion = function(calledOnDatabaseCreation) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var options, groupObjectId, uri, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return options = this.httpService.powerbiRequestOptions(void 0, "UpdatePlatformMonitoringValue"), 
                            groupObjectId = this.workspaceSettingsService.workspaceObjectId, uri = "".concat(this.platformMonitoringUi, "/").concat(groupObjectId), 
                            [ 4, this.httpService.patch(uri, JSON.stringify({
                                ingestionState: "Enabled"
                            }), options).subscribe(function(response) {
                                calledOnDatabaseCreation && (_this.actionOfDatabaseCreation = !0, _this.databaseCreated = !0, 
                                _this.databaseCreatedSubject.next(!0));
                                var platformMonitoringMetadata = response.data;
                                if (platformMonitoringMetadata) {
                                    _this.allowPlatformMonitoring = "Enabled" === platformMonitoringMetadata.ingestionState, 
                                    _this.allowPlatformMonitoringToggleString = _this.allowPlatformMonitoring ? "ToggleSwitchOn" : "ToggleSwitchOff";
                                    var queryParams = _this.activatedRoute.snapshot.queryParams, connectionString = "".concat(_this.groupsUi, "/").concat(groupObjectId, "/").concat(_this.databases, "/").concat(platformMonitoringMetadata.artifact.objectId);
                                    if (_this.databaseString = _this.buildConnectionStringWithQueryParams(connectionString, queryParams), 
                                    calledOnDatabaseCreation) {
                                        _this.artifactMetadata = platformMonitoringMetadata.artifact;
                                        var serializeArtifact = (0, data_access_artifact_src.WN)(platformMonitoringMetadata.artifact);
                                        _this.artifactFacade.addArtifact(serializeArtifact);
                                    }
                                }
                                _this.changeDetectorRef.markForCheck();
                            }, function(err) {
                                _this.errorService.error(_this.localizationService.get("GetPlatformMonitoringValue_Error_FailedToUpdate"), "GetPlatformMonitoringValue_Error_FailedToUpdate", {
                                    requestId: err.requestId
                                });
                            }) ];

                          case 1:
                            return _a.sent(), [ 2 ];
                        }
                    });
                });
            }, WorkspaceSettingsPlatformMonitoringComponent.\u0275fac = function(t) {
                return new (t || WorkspaceSettingsPlatformMonitoringComponent)(core["\u0275\u0275directiveInject"](http_service.s), core["\u0275\u0275directiveInject"](tri_workspace_settings.X), core["\u0275\u0275directiveInject"](errorService.g), core["\u0275\u0275directiveInject"](feature_switch_service.V$), core["\u0275\u0275directiveInject"](core.ChangeDetectorRef), core["\u0275\u0275directiveInject"](localization_service.z), core["\u0275\u0275directiveInject"](dialog_src.uQ), core["\u0275\u0275directiveInject"](router.gz), core["\u0275\u0275directiveInject"](artifact_src.f5));
            }, WorkspaceSettingsPlatformMonitoringComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: WorkspaceSettingsPlatformMonitoringComponent,
                selectors: [ [ "tri-workspace-settings-platform-monitoring" ] ],
                outputs: {
                    closeSettings: "closeSettings"
                },
                standalone: !0,
                features: [ core["\u0275\u0275StandaloneFeature"] ],
                decls: 4,
                vars: 4,
                consts: [ [ 4, "ngIf", "ngIfElse" ], [ "loading", "" ], [ 4, "ngIf" ], [ "class", "delete-workspace-message tri-flex", 4, "ngIf" ], [ "class", "create-database-message tri-flex", 4, "ngIf" ], [ 1, "platformMonitoringSettingsTitle" ], [ 1, "platformMonitoringCaption" ], [ 1, "allowConfigurationPadding" ], [ 1, "platformMonitoringSettingsSubTitleWithSmallPadding" ], [ "ngDefaultControl", "", 1, "toggle", 3, "ngModel", "ngModelOptions", "aria-label", "disabled", "ngModelChange" ], [ "tri-switch-text", "", 1, "toggleString" ], [ 1, "checkbox-label" ], [ "id", "workspace-connection-setting-label", 1, "platformMonitoringSettingsSubTitle" ], [ 1, "link" ], [ "target", "_blank", 3, "external", "href" ], [ 1, "divider" ], [ 1, "divider-left-line" ], [ 1, "divider-text" ], [ 1, "divider-right-line" ], [ 1, "platformMonitoringSettingsSubTitle" ], [ "tri-button", "", "appearance", "tri-middle", "class", "buttonGeneral", 3, "click", 4, "ngIf" ], [ "class", "spinnerDiv", 4, "ngIf" ], [ 1, "delete-workspace-message", "tri-flex" ], [ "name", "info_20_filled", 1, "banner-icon", "tri-shrink-0" ], [ 1, "banner-text" ], [ 1, "create-database-message", "tri-flex" ], [ "name", "checkmark_circle_20_filled", 1, "banner-icon", "tri-shrink-0" ], [ "aria-label", "close", 1, "dismissButton", 3, "click" ], [ "name", "dismiss_20_regular", 1, "smallIcon" ], [ "tri-button", "", "appearance", "tri-middle", 1, "buttonGeneral", 3, "click" ], [ "name", "delete_20_regular" ], [ 1, "spinnerDiv" ], [ 1, "spinnerSvg" ], [ "class", "schema-failure-message tri-flex", 4, "ngIf" ], [ 1, "platformMonitoringSettingsSubTitleWithPadding" ], [ "tri-button", "", "appearance", "primary", "class", "buttonGeneral", 3, "disabled", "click", 4, "ngIf" ], [ 1, "schema-failure-message", "tri-flex" ], [ "name", "dismiss_circle_20_filled", 1, "banner-icon", "tri-shrink-0" ], [ "aria-label", "close", 1, "dismissButtonFailure", 3, "click" ], [ "tri-button", "", "appearance", "primary", 1, "buttonGeneral", 3, "disabled", "click" ], [ "name", "add_20_regular" ] ],
                template: function(rf, ctx) {
                    if (1 & rf && (core["\u0275\u0275template"](0, WorkspaceSettingsPlatformMonitoringComponent_ng_container_0_Template, 3, 2, "ng-container", 0), 
                    core["\u0275\u0275pipe"](1, "async"), core["\u0275\u0275template"](2, WorkspaceSettingsPlatformMonitoringComponent_ng_template_2_Template, 1, 0, "ng-template", null, 1, core["\u0275\u0275templateRefExtractor"])), 
                    2 & rf) {
                        var _r1 = core["\u0275\u0275reference"](3);
                        core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](1, 2, ctx.dataLoadedObservable))("ngIfElse", _r1);
                    }
                },
                dependencies: [ common.CommonModule, common.NgIf, common.AsyncPipe, tri_svg_icon.T6, tri_svg_icon_component.M, divider.t, divider.d, localization_module.Y, localize_pipe.Y, tri_spinner_module.d, tri_spinner_component.D, tri_switch.Jy, tri_switch_component.t, fesm2022_forms.u5, fesm2022_forms.Fj, fesm2022_forms.JJ, fesm2022_forms.On, tri_link.m, tri_link_component.v ],
                styles: [ ".delete-workspace-message[_ngcontent-%COMP%]{font-size:var(--fontSizeBase200);background-color:var(--globalColorGrey94);padding:6px 10px;box-sizing:border-box;margin-bottom:16px;border-radius:4px;border:solid 1px;border-color:var(--globalColorGrey88)}.delete-workspace-message[_ngcontent-%COMP%]   .banner-icon[_ngcontent-%COMP%]{height:16px;width:16px;margin-bottom:2px;margin-inline-end:8px;fill:var(--globalColorGrey38)}.delete-workspace-message[_ngcontent-%COMP%]   .banner-text[_ngcontent-%COMP%]{line-height:16px}.create-database-message[_ngcontent-%COMP%]{font-size:var(--fontSizeBase200);background-color:var(--globalColorGreenTint60);padding:6px 10px;box-sizing:border-box;margin-bottom:16px;border-radius:4px;border:solid 1px;border-color:var(--globalColorGreenTint40)}.create-database-message[_ngcontent-%COMP%]   .banner-icon[_ngcontent-%COMP%]{height:16px;width:16px;margin-bottom:2px;margin-inline-end:8px;fill:var(--globalColorGreenShade10)}.create-database-message[_ngcontent-%COMP%]   .banner-text[_ngcontent-%COMP%]{line-height:16px}.spinnerDiv[_ngcontent-%COMP%]{margin-top:24px;font-size:14px;display:inline-flex}.spinnerDiv[_ngcontent-%COMP%]   .spinnerSvg[_ngcontent-%COMP%]{margin-right:10px}.schema-failure-message[_ngcontent-%COMP%]{font-size:var(--fontSizeBase200);background-color:var(--globalColorCranberryTint60);padding:6px 10px;box-sizing:border-box;margin-bottom:16px;border-radius:4px;margin-top:10px;border:solid 1px;border-color:var(--globalColorCranberryTint40)}.schema-failure-message[_ngcontent-%COMP%]   .banner-icon[_ngcontent-%COMP%]{height:16px;width:16px;margin-bottom:2px;margin-inline-end:8px;fill:var(--globalColorCranberryShade10)}.schema-failure-message[_ngcontent-%COMP%]   .banner-text[_ngcontent-%COMP%]{line-height:16px}.platformMonitoringSettingsTitle[_ngcontent-%COMP%]{font-size:24px;font-weight:var(--subheadline-font-weight);line-height:20px;margin-bottom:10px;color:var(--globalColorGrey14)}.platformMonitoringSettingsSubTitle[_ngcontent-%COMP%]{font-size:16px;font-weight:var(--subheadline-font-weight);line-height:20px;margin-bottom:10px;color:var(--globalColorGrey14)}.platformMonitoringSettingsSubTitleWithPadding[_ngcontent-%COMP%]{font-size:16px;font-weight:var(--subheadline-font-weight);line-height:20px;margin-bottom:8px;color:var(--globalColorGrey14);margin-top:24px}.platformMonitoringSettingsSubTitleWithSmallPadding[_ngcontent-%COMP%]{font-size:16px;font-weight:var(--subheadline-font-weight);line-height:20px;margin-bottom:8px;color:var(--globalColorGrey14);margin-top:16px}.platformMonitoringCaption[_ngcontent-%COMP%]{font-size:14px}.toggle[_ngcontent-%COMP%]{float:right;display:inline-flex;margin-top:-8px}.toggleString[_ngcontent-%COMP%]{font-weight:400;font-size:14px}.checkbox-label[_ngcontent-%COMP%]{font-size:14px}.iconForDb[_ngcontent-%COMP%]{padding-right:6px}.buttonGeneral[_ngcontent-%COMP%]{margin-top:16px}.divider[_ngcontent-%COMP%]{width:100%;height:20px;display:flex;flex-direction:row;justify-content:center;align-items:center;margin-bottom:24px}.divider[_ngcontent-%COMP%]   .divider-left-line[_ngcontent-%COMP%]{width:8px}.divider[_ngcontent-%COMP%]   .divider-right-line[_ngcontent-%COMP%]{flex:1}.divider[_ngcontent-%COMP%]   .divider-text[_ngcontent-%COMP%]{padding:0 var(--spacingVerticalM);font-weight:var(--fontWeightRegular);font-size:var(--fontSizeBase200);line-height:var(--lineHeightBase200)}.allowConfigurationPadding[_ngcontent-%COMP%]{margin-top:16px}[_nghost-%COMP%]     .link{margin-top:16px;margin-bottom:26px;font-size:14px}[_nghost-%COMP%]     .link tri-link a{display:inline-flex}.dismissButton[_ngcontent-%COMP%]{float:right;display:block;margin-left:auto;margin-right:0;background-color:var(--globalColorGreenTint60);border-color:var(--globalColorGreenTint60);padding-top:0;padding-bottom:0;border-top-width:0px;width:20px;height:20px}.dismissButton[_ngcontent-%COMP%]   .smallIcon[_ngcontent-%COMP%]{height:16px;width:16px}.dismissButtonFailure[_ngcontent-%COMP%]{float:right;display:block;margin-left:auto;margin-right:0;background-color:var(--globalColorCranberryTint60);border-color:var(--globalColorCranberryTint60);padding-top:0;padding-bottom:0;border-top-width:0px;width:20px;height:20px}.dismissButtonFailure[_ngcontent-%COMP%]   .smallIcon[_ngcontent-%COMP%]{height:16px;width:16px}" ],
                changeDetection: 0
            }), WorkspaceSettingsPlatformMonitoringComponent;
        }(), filter = __webpack_require__(59973), tap = __webpack_require__(17653), WorkspaceSettingsActivityNames = function(WorkspaceSettingsActivityNames) {
            return WorkspaceSettingsActivityNames.UpdateOneDrive = "Update OneDrive", WorkspaceSettingsActivityNames.UpdateContracts = "Update workspace contacts", 
            WorkspaceSettingsActivityNames.UpdateImage = "Update workspace image", WorkspaceSettingsActivityNames.UpdateDescription = "Update description", 
            WorkspaceSettingsActivityNames.UpdateName = "Workspace rename", WorkspaceSettingsActivityNames.DetailSettings = "Detail settings", 
            WorkspaceSettingsActivityNames.DeleteWorkspace = "delete workspace", WorkspaceSettingsActivityNames;
        }({}), trident_env = __webpack_require__(63271), telemetry_service = __webpack_require__(54323), WorkspaceSettingsTelemetryService = function() {
            function WorkspaceSettingsTelemetryService(telemetryService) {
                this.telemetryService = telemetryService;
            }
            return WorkspaceSettingsTelemetryService.prototype.logEvent = function(activityName, activityAttributes, activityStatus, operationEndTime, correlationId) {
                var featureEvent = {
                    originatingService: "DataCloudUX",
                    activityName,
                    featureName: "Fabric Workspace Settings",
                    activityAttributes: activityAttributes ? (0, tslib_es6.__assign)({}, activityAttributes) : void 0,
                    activityStatus,
                    operationEndTime,
                    correlationId
                };
                this.telemetryService.logStandardFeatureEvent(featureEvent);
            }, WorkspaceSettingsTelemetryService.prototype.logDomainEvent = function(activityAttributes, activityStatus, operationEndTime, correlationId) {
                var featureEvent = {
                    originatingService: "DataCloudUX",
                    activityName: "Update domain association",
                    featureName: "".concat("Domains", ",").concat("Domains Direct MAU", ",").concat("Domains WS Management"),
                    activityAttributes: activityAttributes ? (0, tslib_es6.__assign)({}, activityAttributes) : void 0,
                    activityStatus,
                    operationEndTime,
                    correlationId
                };
                this.telemetryService.logStandardFeatureEvent(featureEvent);
            }, WorkspaceSettingsTelemetryService.\u0275fac = function(t) {
                return new (t || WorkspaceSettingsTelemetryService)(core["\u0275\u0275inject"](telemetry_service.t));
            }, WorkspaceSettingsTelemetryService.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: WorkspaceSettingsTelemetryService,
                factory: WorkspaceSettingsTelemetryService.\u0275fac,
                providedIn: "root"
            }), WorkspaceSettingsTelemetryService;
        }(), combineLatest = __webpack_require__(59017), takeUntil = __webpack_require__(83317), domains_core_src = __webpack_require__(35402), tri_menu = __webpack_require__(98759);
        function DomainInfoTooltipComponent_div_3_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 3), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate"](ctx_r0.domainsTooltipData.data.description);
            }
        }
        var DomainInfoTooltipComponent = function() {
            function DomainInfoTooltipComponent(domainsTooltipData) {
                this.domainsTooltipData = domainsTooltipData;
            }
            return DomainInfoTooltipComponent.\u0275fac = function(t) {
                return new (t || DomainInfoTooltipComponent)(core["\u0275\u0275directiveInject"](tri_tooltip.WF));
            }, DomainInfoTooltipComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: DomainInfoTooltipComponent,
                selectors: [ [ "trident-domain-info-tooltip" ] ],
                decls: 4,
                vars: 2,
                consts: [ [ 1, "tooltip-container" ], [ 1, "tooltip-title" ], [ "class", "tooltip-content", 4, "ngIf" ], [ 1, "tooltip-content" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementStart"](0, "div", 0)(1, "div", 1), core["\u0275\u0275text"](2), 
                    core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](3, DomainInfoTooltipComponent_div_3_Template, 2, 1, "div", 2), 
                    core["\u0275\u0275elementEnd"]()), 2 & rf && (core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](ctx.domainsTooltipData.data.displayName), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx.domainsTooltipData.data.description));
                },
                dependencies: [ common.NgIf ],
                styles: [ ".tooltip-container[_ngcontent-%COMP%]{display:contents}" ],
                changeDetection: 0
            }), DomainInfoTooltipComponent;
        }(), branding_utils = __webpack_require__(8255), domain_rounded_image_component_c0 = function(a0, a1) {
            return [ a0, a1 ];
        }, DomainImageComponentData = function() {
            return function(domainObjectId) {
                this.domainObjectId = domainObjectId;
            };
        }(), DomainRoundedImageComponent = function() {
            function DomainRoundedImageComponent(domainsCoreService, changeDetectorRef, domainImageComponentData) {
                this.domainsCoreService = domainsCoreService, this.changeDetectorRef = changeDetectorRef, 
                this.domainImageComponentData = domainImageComponentData, this.domainObjectId = "", 
                this.domainRoundedImageId = (0, branding_utils.u2)(branding_utils.CG), this.isColorBackground = !1;
            }
            return DomainRoundedImageComponent.prototype.ngOnInit = function() {
                var _a, _b;
                (null === (_a = this.domainImageComponentData) || void 0 === _a ? void 0 : _a.domainObjectId) && !this.domainObjectId && (this.domainObjectId = null === (_b = this.domainImageComponentData) || void 0 === _b ? void 0 : _b.domainObjectId, 
                this.initBrandingData());
            }, DomainRoundedImageComponent.prototype.ngOnChanges = function() {
                this.initBrandingData();
            }, DomainRoundedImageComponent.prototype.ngOnDestroy = function() {
                var _a;
                null === (_a = this.getDomainBrandingSubscription) || void 0 === _a || _a.unsubscribe();
            }, DomainRoundedImageComponent.prototype.initBrandingData = function() {
                var _a, _this = this;
                if (!this.domainObjectId) return this.domainRoundedImageId = (0, branding_utils.u2)(branding_utils.CG), 
                void (this.isColorBackground = !1);
                this.domainsCoreService.loadDomainBranding(this.domainObjectId), null === (_a = this.getDomainBrandingSubscription) || void 0 === _a || _a.unsubscribe(), 
                this.getDomainBrandingSubscription = this.domainsCoreService.getDomain(this.domainObjectId).pipe((0, 
                filter.h)(function(domain) {
                    return !!domain;
                })).subscribe(function(domain) {
                    var _a, _b, backgroundId = (null === (_a = domain.branding) || void 0 === _a ? void 0 : _a.backgroundId) || branding_utils.CG;
                    _this.isColorBackground = (0, branding_utils.e7)(backgroundId), _this.domainRoundedImageId = (0, 
                    branding_utils.u2)(backgroundId), null === (_b = _this.changeDetectorRef) || void 0 === _b || _b.markForCheck();
                });
            }, DomainRoundedImageComponent.\u0275fac = function(t) {
                return new (t || DomainRoundedImageComponent)(core["\u0275\u0275directiveInject"](domains_core_src.wB), core["\u0275\u0275directiveInject"](core.ChangeDetectorRef), core["\u0275\u0275directiveInject"](DomainImageComponentData, 8));
            }, DomainRoundedImageComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: DomainRoundedImageComponent,
                selectors: [ [ "trident-domain-rounded-image" ] ],
                inputs: {
                    domainObjectId: "domainObjectId"
                },
                features: [ core["\u0275\u0275NgOnChangesFeature"] ],
                decls: 1,
                vars: 4,
                consts: [ [ 1, "image", 3, "ngClass" ] ],
                template: function(rf, ctx) {
                    1 & rf && core["\u0275\u0275element"](0, "div", 0), 2 & rf && core["\u0275\u0275property"]("ngClass", core["\u0275\u0275pureFunction2"](1, domain_rounded_image_component_c0, ctx.domainRoundedImageId, ctx.isColorBackground ? "color" : ""));
                },
                dependencies: [ common.NgClass ],
                styles: [ ".image-domain-background-1[_ngcontent-%COMP%]{background:url(/minerva/images/background1.png)}.image-domain-background-2[_ngcontent-%COMP%]{background:url(/minerva/images/background2.png)}.image-domain-background-3[_ngcontent-%COMP%]{background:url(/minerva/images/background3.png)}.image-domain-background-4[_ngcontent-%COMP%]{background:url(/minerva/images/background4.png)}.image-domain-background-5[_ngcontent-%COMP%]{background:url(/minerva/images/background5.png)}.image-domain-background-6[_ngcontent-%COMP%]{background:url(/minerva/images/background6.png)}.image-domain-background-7[_ngcontent-%COMP%]{background:url(/minerva/images/background7.png)}.image-domain-background-8[_ngcontent-%COMP%]{background:url(/minerva/images/background8.png)}.image-domain-background-9[_ngcontent-%COMP%]{background:url(/minerva/images/background9.png)}.image-domain-background-10[_ngcontent-%COMP%]{background:url(/minerva/images/background10.png)}.image-domain-background-11[_ngcontent-%COMP%]{background:url(/minerva/images/background11.png)}.image-domain-background-12[_ngcontent-%COMP%]{background:url(/minerva/images/background12.png)}.image-domain-background-13[_ngcontent-%COMP%]{background:url(/minerva/images/background13.png)}.image-domain-background-14[_ngcontent-%COMP%]{background:url(/minerva/images/background14.png)}.image-domain-background-15[_ngcontent-%COMP%]{background:url(/minerva/images/background15.png)}.image-domain-background-16[_ngcontent-%COMP%]{background:#FFDAC6}.image-domain-background-17[_ngcontent-%COMP%]{background:#F0F4DD}.image-domain-background-18[_ngcontent-%COMP%]{background:#E8E8FF}.image-domain-background-19[_ngcontent-%COMP%]{background:#D7ECFF}.image-domain-background-20[_ngcontent-%COMP%]{background:#E3F7EF}.image-domain-background-1-thumbnail[_ngcontent-%COMP%]{background:url(/minerva/images/Background1Thumbnail.png)}.image-domain-background-2-thumbnail[_ngcontent-%COMP%]{background:url(/minerva/images/Background2Thumbnail.png)}.image-domain-background-3-thumbnail[_ngcontent-%COMP%]{background:url(/minerva/images/Background3Thumbnail.png)}.image-domain-background-4-thumbnail[_ngcontent-%COMP%]{background:url(/minerva/images/Background4Thumbnail.png)}.image-domain-background-5-thumbnail[_ngcontent-%COMP%]{background:url(/minerva/images/Background5Thumbnail.png)}.image-domain-background-6-thumbnail[_ngcontent-%COMP%]{background:url(/minerva/images/Background6Thumbnail.png)}.image-domain-background-7-thumbnail[_ngcontent-%COMP%]{background:url(/minerva/images/Background7Thumbnail.png)}.image-domain-background-8-thumbnail[_ngcontent-%COMP%]{background:url(/minerva/images/Background8Thumbnail.png)}.image-domain-background-9-thumbnail[_ngcontent-%COMP%]{background:url(/minerva/images/Background9Thumbnail.png)}.image-domain-background-10-thumbnail[_ngcontent-%COMP%]{background:url(/minerva/images/Background10Thumbnail.png)}.image-domain-background-11-thumbnail[_ngcontent-%COMP%]{background:url(/minerva/images/background11Thumbnail.png)}.image-domain-background-12-thumbnail[_ngcontent-%COMP%]{background:url(/minerva/images/background12Thumbnail.png)}.image-domain-background-13-thumbnail[_ngcontent-%COMP%]{background:url(/minerva/images/background13Thumbnail.png)}.image-domain-background-14-thumbnail[_ngcontent-%COMP%]{background:url(/minerva/images/background14Thumbnail.png)}.image-domain-background-15-thumbnail[_ngcontent-%COMP%]{background:url(/minerva/images/background15Thumbnail.png)}.image-domain-background-1-rounded[_ngcontent-%COMP%]{background:url(/minerva/images/Background1Rounded.png)}.image-domain-background-2-rounded[_ngcontent-%COMP%]{background:url(/minerva/images/Background2Rounded.png)}.image-domain-background-3-rounded[_ngcontent-%COMP%]{background:url(/minerva/images/Background3Rounded.png)}.image-domain-background-4-rounded[_ngcontent-%COMP%]{background:url(/minerva/images/Background4Rounded.png)}.image-domain-background-5-rounded[_ngcontent-%COMP%]{background:url(/minerva/images/Background5Rounded.png)}.image-domain-background-6-rounded[_ngcontent-%COMP%]{background:url(/minerva/images/Background6Rounded.png)}.image-domain-background-7-rounded[_ngcontent-%COMP%]{background:url(/minerva/images/Background7Rounded.png)}.image-domain-background-8-rounded[_ngcontent-%COMP%]{background:url(/minerva/images/Background8Rounded.png)}.image-domain-background-9-rounded[_ngcontent-%COMP%]{background:url(/minerva/images/Background9Rounded.png)}.image-domain-background-10-rounded[_ngcontent-%COMP%]{background:url(/minerva/images/Background10Rounded.png)}.image-domain-background-11-rounded[_ngcontent-%COMP%]{background:url(/minerva/images/Background11Rounded.png)}.image-domain-background-12-rounded[_ngcontent-%COMP%]{background:url(/minerva/images/Background12Rounded.png)}.image-domain-background-13-rounded[_ngcontent-%COMP%]{background:url(/minerva/images/Background13Rounded.png)}.image-domain-background-14-rounded[_ngcontent-%COMP%]{background:url(/minerva/images/Background14Rounded.png)}.image-domain-background-15-rounded[_ngcontent-%COMP%]{background:url(/minerva/images/Background15Rounded.png)}.image-domain-background-default-rounded[_ngcontent-%COMP%]{background:url(/minerva/images/DefaultBackgroundRounded.png)}.image[_ngcontent-%COMP%]{width:24px;height:24px;background-position:left;background-repeat:no-repeat;background-size:contain}.color[_ngcontent-%COMP%]{border-radius:var(--borderRadiusCircular)}" ],
                changeDetection: 0
            }), DomainRoundedImageComponent;
        }(), CompareMenuItemTexts = function(item1, item2) {
            return item1.text.localeCompare(item2.text);
        }, MenuItemsCommonStyles = {
            border: "none"
        };
        function createDomainMenuItem(domain, itemKind, parentMenuButtonId, checked, text, subMenu, includeBrandingImage) {
            return (0, tslib_es6.__assign)((0, tslib_es6.__assign)((0, tslib_es6.__assign)({
                type: itemKind,
                id: domain.objectId,
                text: text || domain.displayName,
                styles: MenuItemsCommonStyles,
                data: {
                    domainDisplayName: domain.displayName,
                    parentObjectId: parentMenuButtonId
                },
                checkable: !0,
                checked
            }, includeBrandingImage ? {
                imageComponent: {
                    imageComponent: DomainRoundedImageComponent,
                    injector: core.Injector.create({
                        providers: [ {
                            provide: DomainImageComponentData,
                            useValue: new DomainImageComponentData(domain.objectId)
                        } ]
                    })
                }
            } : {}), itemKind === tri_menu.fz.Button ? {
                tooltip: DomainInfoTooltipComponent,
                tooltipComponentData: {
                    data: {
                        displayName: domain.displayName,
                        description: domain.description
                    }
                },
                ariaLabel: text || domain.displayName
            } : {}), itemKind === tri_menu.fz.SubMenu ? {
                menu: subMenu
            } : {});
        }
        function updateParentDomainSubmenuChecked(isChecked, selectedDomainMenuButton, domainSubmenus) {
            var _a, parentObjectId = null === (_a = selectedDomainMenuButton.data) || void 0 === _a ? void 0 : _a.parentObjectId;
            if (parentObjectId) {
                var currentSelectedParentDomainMenuButton = domainSubmenus.find(function(submenu) {
                    return submenu.id === parentObjectId;
                });
                currentSelectedParentDomainMenuButton && (currentSelectedParentDomainMenuButton.checked = isChecked);
            }
        }
        var tri_message_bar_component = __webpack_require__(45769), tri_tooltip_directive = __webpack_require__(55490), tri_menu_directive = __webpack_require__(76688), domains_dropdown_component_c0 = [ "menuButton" ];
        function DomainsDropdownComponent_tri_spinner_13_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "tri-spinner", 11);
        }
        function DomainsDropdownComponent_tri_message_bar_14_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "tri-message-bar", 12), 2 & rf) {
                var ctx_r2 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("viewModel", ctx_r2.domainsMessageBarModel);
            }
        }
        var domains_dropdown_component_c1 = function(a0) {
            return {
                "placeholder-text": a0
            };
        }, DomainsDropdownComponent = function() {
            function DomainsDropdownComponent(triLocalizationService, domainsCoreService) {
                this.triLocalizationService = triLocalizationService, this.domainsCoreService = domainsCoreService, 
                this.selectedDomainObjectId = "", this.shouldBeDisabled = !1, this.supportDomainChangeMessage = !0, 
                this.autoSetToPrimaryDefaultDomain = !1, this.showSpinner = !1, this.domainSelected = new core.EventEmitter, 
                this.shouldShowDomainsMessageBar = !1, this.domainsMessageBarModel = {
                    bannerType: 1
                }, this.selectedDomainText = "", this.isPlaceholderText = !0, this.menu = {
                    items: []
                }, this.allDomainMenuButtons = [], this.allDomainMenuSubmenus = [], this.destroy$ = new Subject.xQ, 
                this.menuStyles = {};
            }
            return DomainsDropdownComponent.prototype.ngOnInit = function() {
                var _this = this;
                this.domainsMessageBarModel = {
                    bannerType: 0,
                    iconName: "info_20_filled",
                    message: this.triLocalizationService.get("Domains_Switch_Domain")
                }, this.selectedDomainText = this.triLocalizationService.get("Domain_Combobox_Placeholder"), 
                (0, combineLatest.aj)([ this.domainsCoreService.getDomain(this.selectedDomainObjectId), this.domainsCoreService.getDomainsWithAccessPermission() ]).pipe((0, 
                takeUntil.R)(this.destroy$)).subscribe(function(_a) {
                    var assignedDomain = _a[0], domainsWithAccessPermission = _a[1];
                    assignedDomain && (_this.selectedDomainText = assignedDomain.displayName, _this.isPlaceholderText = !1), 
                    _this.shouldBeDisabled || _this.initDomainsMenu(domainsWithAccessPermission);
                });
            }, DomainsDropdownComponent.prototype.ngOnDestroy = function() {
                this.destroy$.next(), this.destroy$.complete();
            }, DomainsDropdownComponent.prototype.ngAfterViewInit = function() {
                if (this.menuButton) {
                    var width = this.menuButton.nativeElement.clientWidth;
                    this.menuStyles.width = "".concat(width, "px"), this.menuStyles["max-width"] = "".concat(width, "px");
                }
            }, DomainsDropdownComponent.prototype.onMenuDomainSelected = function(selectedDomain) {
                var _a, _b, _c, _d, _e, _f, _g, _h;
                if (selectedDomain && "0" !== selectedDomain.id) {
                    this.selectDomainMenuButton(null === (_a = selectedDomain.id) || void 0 === _a ? void 0 : _a.toString());
                    var updatedDomainObjectId = "noneDomain" === (null === (_b = this.selectedDomainMenuButton) || void 0 === _b ? void 0 : _b.id) || null === (_d = null === (_c = this.selectedDomainMenuButton) || void 0 === _c ? void 0 : _c.id) || void 0 === _d ? void 0 : _d.toString();
                    this.shouldShowDomainsMessageBar = this.supportDomainChangeMessage && !!this.selectedDomainObjectId && this.selectedDomainObjectId !== updatedDomainObjectId;
                    var parentObjectId = null === (_f = null === (_e = this.selectedDomainMenuButton) || void 0 === _e ? void 0 : _e.data) || void 0 === _f ? void 0 : _f.parentObjectId;
                    this.setSelectedDomain((null === (_h = null === (_g = this.selectedDomainMenuButton) || void 0 === _g ? void 0 : _g.data) || void 0 === _h ? void 0 : _h.domainDisplayName) || "", updatedDomainObjectId, !(parentObjectId && updatedDomainObjectId && parentObjectId === updatedDomainObjectId));
                }
            }, DomainsDropdownComponent.prototype.setSelectedDomain = function(selectedDomainDisplayText, selectedDomainId, isSubDomain) {
                this.selectedDomainText = selectedDomainDisplayText, this.isPlaceholderText = !1, 
                this.domainSelected.emit({
                    domainObjectId: selectedDomainId,
                    isSubDomain
                });
            }, DomainsDropdownComponent.prototype.initDomainsMenu = function(domainsWithAccessPermission) {
                var domains, localizationService, selectedDomainObjectId, menuItems, submenusMap, menuButtons, submenus, domainMenuData = (domains = domainsWithAccessPermission, 
                localizationService = this.triLocalizationService, selectedDomainObjectId = this.selectedDomainObjectId, 
                !1, menuItems = [], submenusMap = new Map, menuButtons = [], submenus = [], domains.forEach(function(domain) {
                    if (domain.parentObjectId) {
                        var domainButton = createDomainMenuItem(domain, tri_menu.fz.Button, domain.parentObjectId, domain.objectId === selectedDomainObjectId, void 0, void 0, !1), parentSubmenu = submenusMap.get(domain.parentObjectId) || [];
                        parentSubmenu.push(domainButton), submenusMap.set(domain.parentObjectId, parentSubmenu), 
                        menuButtons.push(domainButton);
                    }
                }), domains.forEach(function(domain) {
                    if (!domain.parentObjectId) {
                        var submenu = submenusMap.get(domain.objectId), domainButton = createDomainMenuItem(domain, tri_menu.fz.Button, domain.objectId, domain.objectId === selectedDomainObjectId, submenu ? "".concat(localizationService.get("All"), " ") + domain.displayName : void 0, void 0, false);
                        if (menuButtons.push(domainButton), !submenu) return void menuItems.push(domainButton);
                        var menuButton = createDomainMenuItem(domain, tri_menu.fz.SubMenu, void 0, submenu ? _.some(submenu, function(subMenu) {
                            return subMenu.checked;
                        }) || domainButton.checked : void 0, void 0, {
                            items: (0, tslib_es6.__spreadArray)([ domainButton, {
                                type: tri_menu.fz.Divider
                            } ], submenu.sort(CompareMenuItemTexts), !0)
                        }, false);
                        submenus.push(menuButton), menuItems.push(menuButton);
                    }
                }), {
                    menu: {
                        items: menuItems.sort(CompareMenuItemTexts)
                    },
                    menuButtons,
                    submenus
                });
                if (0 === domainMenuData.menu.items.length && !this.selectedDomainObjectId) return this.allDomainMenuButtons = [ {
                    type: tri_menu.fz.Button,
                    id: "0",
                    text: this.triLocalizationService.get("Domain_Combobox_No_Domains"),
                    styles: MenuItemsCommonStyles
                } ], void (this.menu = {
                    items: this.allDomainMenuButtons,
                    styles: this.menuStyles
                });
                var noneText = this.triLocalizationService.get("None"), noneButton = {
                    type: tri_menu.fz.Button,
                    id: "noneDomain",
                    text: noneText,
                    data: {
                        domainDisplayName: noneText,
                        parentObjectId: void 0
                    },
                    styles: MenuItemsCommonStyles,
                    checkable: !0
                };
                this.allDomainMenuButtons = (0, tslib_es6.__spreadArray)([ noneButton ], domainMenuData.menuButtons, !0), 
                this.allDomainMenuSubmenus = domainMenuData.submenus, this.menu = {
                    items: (0, tslib_es6.__spreadArray)([ noneButton, {
                        type: tri_menu.fz.Divider
                    } ], domainMenuData.menu.items, !0),
                    styles: this.menuStyles
                }, this.selectDomainMenuButton(this.selectedDomainObjectId || "noneDomain"), this.setDefaultDomain(domainsWithAccessPermission);
            }, DomainsDropdownComponent.prototype.setDefaultDomain = function(domains) {
                if (this.autoSetToPrimaryDefaultDomain && !this.selectedDomainObjectId) {
                    var defaultDomain = domains.find(function(domain) {
                        return domain.isPrimaryDefaultDataDomainForUser;
                    });
                    if (defaultDomain) {
                        var defaultDomainExists = !!this.selectedDomainMenuButton;
                        this.selectDomainMenuButton(null == defaultDomain ? void 0 : defaultDomain.objectId), 
                        defaultDomainExists && this.setSelectedDomain(defaultDomain.displayName, defaultDomain.objectId, !!defaultDomain.parentObjectId);
                    }
                }
            }, DomainsDropdownComponent.prototype.selectDomainMenuButton = function(domainObjectId) {
                domainObjectId && (this.selectedDomainMenuButton && (this.selectedDomainMenuButton.checked = !1, 
                updateParentDomainSubmenuChecked(!1, this.selectedDomainMenuButton, this.allDomainMenuSubmenus)), 
                this.selectedDomainMenuButton = this.allDomainMenuButtons.find(function(button) {
                    return button.id === domainObjectId;
                }), this.selectedDomainMenuButton && (this.selectedDomainMenuButton.checked = !0, 
                updateParentDomainSubmenuChecked(!0, this.selectedDomainMenuButton, this.allDomainMenuSubmenus)));
            }, DomainsDropdownComponent.\u0275fac = function(t) {
                return new (t || DomainsDropdownComponent)(core["\u0275\u0275directiveInject"](localization_service.z), core["\u0275\u0275directiveInject"](domains_core_src.wB));
            }, DomainsDropdownComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: DomainsDropdownComponent,
                selectors: [ [ "trident-domains-dropdown" ] ],
                viewQuery: function(rf, ctx) {
                    var _t;
                    1 & rf && core["\u0275\u0275viewQuery"](domains_dropdown_component_c0, 5), 2 & rf && core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx.menuButton = _t.first);
                },
                inputs: {
                    selectedDomainObjectId: "selectedDomainObjectId",
                    shouldBeDisabled: "shouldBeDisabled",
                    supportDomainChangeMessage: "supportDomainChangeMessage",
                    autoSetToPrimaryDefaultDomain: "autoSetToPrimaryDefaultDomain",
                    showSpinner: "showSpinner"
                },
                outputs: {
                    domainSelected: "domainSelected"
                },
                decls: 15,
                vars: 14,
                consts: [ [ 1, "about-input-container", "tri-flex", "tri-flex-col", "tri-relative" ], [ 1, "domains-header", "tri-flex", "tri-flex-row", "tri-relative" ], [ "data-testid", "domains-dropdown-label", "id", "domain-label", 1, "picker-label" ], [ "tri-svg-icon-12", "", "name", "info_20_regular", "tabindex", "0", 3, "triTooltip" ], [ 1, "menu-with-spinner" ], [ "tri-button", "", "data-testid", "domains-dropdown-button", "appearance", "default", 1, "domain-menu-button", 3, "triMenu", "triMenuButtonClick" ], [ "menuButton", "" ], [ 1, "menu-button-text", 3, "ngClass" ], [ "name", "chevron_down_20_regular", 1, "chevron-down-icon" ], [ "size", "extra-small", 4, "ngIf" ], [ "data-testid", "domains-dropdown-message-banner", "class", "domains-message-banner", 3, "viewModel", 4, "ngIf" ], [ "size", "extra-small" ], [ "data-testid", "domains-dropdown-message-banner", 1, "domains-message-banner", 3, "viewModel" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementStart"](0, "div", 0)(1, "div", 1)(2, "label", 2), 
                    core["\u0275\u0275text"](3), core["\u0275\u0275pipe"](4, "localize"), core["\u0275\u0275elementEnd"](), 
                    core["\u0275\u0275element"](5, "tri-svg-icon", 3), core["\u0275\u0275pipe"](6, "localize"), 
                    core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](7, "div", 4)(8, "button", 5, 6), 
                    core["\u0275\u0275listener"]("triMenuButtonClick", function($event) {
                        return ctx.onMenuDomainSelected($event);
                    }), core["\u0275\u0275elementStart"](10, "span", 7), core["\u0275\u0275text"](11), 
                    core["\u0275\u0275elementEnd"](), core["\u0275\u0275element"](12, "tri-svg-icon", 8), 
                    core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](13, DomainsDropdownComponent_tri_spinner_13_Template, 1, 0, "tri-spinner", 9), 
                    core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](14, DomainsDropdownComponent_tri_message_bar_14_Template, 1, 1, "tri-message-bar", 10), 
                    core["\u0275\u0275elementEnd"]()), 2 & rf && (core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](4, 8, "Domain")), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("triTooltip", core["\u0275\u0275pipeBind1"](6, 10, "Domains_Tip")), 
                    core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("triMenu", ctx.menu), 
                    core["\u0275\u0275attribute"]("disabled", !(0 !== ctx.allDomainMenuButtons.length && !ctx.shouldBeDisabled) || null), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngClass", core["\u0275\u0275pureFunction1"](12, domains_dropdown_component_c1, ctx.isPlaceholderText)), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate"](ctx.selectedDomainText), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", ctx.showSpinner), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx.shouldShowDomainsMessageBar));
                },
                dependencies: [ common.NgClass, common.NgIf, tri_svg_icon_component.M, tri_message_bar_component.h, tri_tooltip_directive.Z, tri_menu_directive.rX, tri_spinner_component.D, localize_pipe.Y ],
                styles: [ "[_nghost-%COMP%]{display:block;font-size:14px}[_nghost-%COMP%]   .domains-header[_ngcontent-%COMP%]{margin-bottom:4px}[_nghost-%COMP%]   .domains-header[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{font-weight:var(--subheadline-font-weight);font-size:var(--body-font-size)}[_nghost-%COMP%]   .domains-header[_ngcontent-%COMP%]   tri-svg-icon[_ngcontent-%COMP%]{margin-top:4px;margin-left:4px}[_nghost-%COMP%]   .menu-with-spinner[_ngcontent-%COMP%]{display:flex;align-items:center}[_nghost-%COMP%]   .menu-with-spinner[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{flex-grow:1}[_nghost-%COMP%]   .menu-with-spinner[_ngcontent-%COMP%]   tri-spinner[_ngcontent-%COMP%]{margin-inline-start:8px}[_nghost-%COMP%]   .domains-message-banner[_ngcontent-%COMP%]{margin-top:8px}[_nghost-%COMP%]   .domain-menu-button[_ngcontent-%COMP%]{display:flex;justify-content:space-between}[_nghost-%COMP%]   .domain-menu-button[_ngcontent-%COMP%]   .menu-button-text[_ngcontent-%COMP%]{font-weight:400}[_nghost-%COMP%]   .domain-menu-button[_ngcontent-%COMP%]   .placeholder-text[_ngcontent-%COMP%]{color:var(--globalColorGrey44)}[_nghost-%COMP%]   .domain-menu-button[_ngcontent-%COMP%]   .chevron-down-icon[_ngcontent-%COMP%]{fill:var(--globalColorGrey38)}" ],
                changeDetection: 0
            }), DomainsDropdownComponent;
        }(), about_component_c0 = [ "imageFileInput" ];
        function WorkspaceSettingsGeneralAboutComponent_img_8_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275element"](0, "img", 26), core["\u0275\u0275pipe"](1, "async")), 
            2 & rf) {
                var ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("src", core["\u0275\u0275pipeBind1"](1, 2, ctx_r0.image$), core["\u0275\u0275sanitizeUrl"]), 
                core["\u0275\u0275attribute"]("data-testid", "workspace-settings-general-logo-img");
            }
        }
        function WorkspaceSettingsGeneralAboutComponent_tri_svg_icon_10_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "tri-svg-icon", 27), 2 & rf && core["\u0275\u0275attribute"]("data-testid", "workspace-settings-general-logo-default");
        }
        function WorkspaceSettingsGeneralAboutComponent_ng_container_16_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275element"](1, "tri-spinner"), 
            core["\u0275\u0275elementStart"](2, "span", 28), core["\u0275\u0275text"](3), core["\u0275\u0275pipe"](4, "localize"), 
            core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementContainerEnd"]()), 2 & rf && (core["\u0275\u0275advance"](3), 
            core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](4, 1, "Uploading")));
        }
        function WorkspaceSettingsGeneralAboutComponent_ng_template_19_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275element"](0, "tri-svg-icon", 29), core["\u0275\u0275elementStart"](1, "span", 28), 
            core["\u0275\u0275text"](2), core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementEnd"]()), 
            2 & rf && (core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](3, 1, "Upload")));
        }
        function WorkspaceSettingsGeneralAboutComponent_ng_container_26_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275element"](1, "tri-spinner"), 
            core["\u0275\u0275elementStart"](2, "span", 28), core["\u0275\u0275text"](3), core["\u0275\u0275pipe"](4, "localize"), 
            core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementContainerEnd"]()), 2 & rf && (core["\u0275\u0275advance"](3), 
            core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](4, 1, "Deleting")));
        }
        function WorkspaceSettingsGeneralAboutComponent_ng_template_29_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275element"](0, "tri-svg-icon", 30), core["\u0275\u0275elementStart"](1, "span", 28), 
            core["\u0275\u0275text"](2), core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementEnd"]()), 
            2 & rf && (core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](3, 1, "Delete")));
        }
        function WorkspaceSettingsGeneralAboutComponent_tri_status_indicator_31_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "tri-status-indicator", 31), 
            core["\u0275\u0275text"](1), core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275elementEnd"]()), 
            2 & rf) {
                var tmp_1_0, ctx_r8 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("statusIndicatorType", ctx_r8.StatusIndicatorType.Error), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate1"](" ", null !== (tmp_1_0 = core["\u0275\u0275pipeBind1"](2, 2, ctx_r8.imgError$)) && void 0 !== tmp_1_0 ? tmp_1_0 : "", "");
            }
        }
        function WorkspaceSettingsGeneralAboutComponent_tri_spinner_44_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "tri-spinner", 32);
        }
        function WorkspaceSettingsGeneralAboutComponent_tri_status_indicator_46_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "tri-status-indicator", 33), 
            core["\u0275\u0275text"](1), core["\u0275\u0275pipe"](2, "localize"), core["\u0275\u0275elementEnd"]()), 
            2 & rf) {
                var ctx_r10 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("statusIndicatorType", ctx_r10.StatusIndicatorType.Error), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](2, 2, "NotAvailable_PleaseEdit_Text"));
            }
        }
        function WorkspaceSettingsGeneralAboutComponent_tri_status_indicator_48_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "tri-status-indicator", 33), 
            core["\u0275\u0275text"](1), core["\u0275\u0275pipe"](2, "localize"), core["\u0275\u0275elementEnd"]()), 
            2 & rf) {
                var ctx_r11 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("statusIndicatorType", ctx_r11.StatusIndicatorType.Error), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](2, 2, "Validation_Empty"));
            }
        }
        function WorkspaceSettingsGeneralAboutComponent_tri_spinner_58_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "tri-spinner", 32);
        }
        function WorkspaceSettingsGeneralAboutComponent_trident_domains_dropdown_68_Template(rf, ctx) {
            if (1 & rf) {
                var _r16 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "trident-domains-dropdown", 34), core["\u0275\u0275listener"]("domainSelected", function($event) {
                    core["\u0275\u0275restoreView"](_r16);
                    var ctx_r15 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r15.selectDomain($event));
                }), core["\u0275\u0275pipe"](1, "async"), core["\u0275\u0275pipe"](2, "async"), 
                core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r13 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("selectedDomainObjectId", ctx_r13.domain)("shouldBeDisabled", core["\u0275\u0275pipeBind1"](1, 3, ctx_r13.autoSaveDomainInProgress$) || !ctx_r13.isWorkspaceAdmin)("showSpinner", !!core["\u0275\u0275pipeBind1"](2, 5, ctx_r13.autoSaveDomainInProgress$));
            }
        }
        var about_component_c1 = function(a0) {
            return {
                "no-image-container": a0
            };
        }, WorkspaceSettingsGeneralAboutComponent = function() {
            function WorkspaceSettingsGeneralAboutComponent(localizationService, telemetryService, isTrident, workspaceSettingsService) {
                this.localizationService = localizationService, this.telemetryService = telemetryService, 
                this.isTrident = isTrident, this.workspaceSettingsService = workspaceSettingsService, 
                this.imageFileInput = null, this.StatusIndicatorType = StatusIndicatorType, this.image$ = new BehaviorSubject.X(""), 
                this.name = "", this.description = "", this.domain = "", this.isWorkspaceAdmin = !1, 
                this.imgError$ = new BehaviorSubject.X(""), this.isDomainsEnabled = !1, this.clickUpload$ = new BehaviorSubject.X(!1), 
                this.clickDelete$ = new BehaviorSubject.X(!1), this.image$.next(this.workspaceSettingsService.imageSrc), 
                this.name = this.workspaceSettingsService.workspaceName, this.description = this.workspaceSettingsService.description, 
                this.domain = this.workspaceSettingsService.domainObjectId, this.autoSaveImageInProgress$ = this.workspaceSettingsService.autoSaveInProgress.Image, 
                this.autoSaveNameInProgress$ = this.workspaceSettingsService.autoSaveInProgress.Name, 
                this.autoSaveDescriptionInProgress$ = this.workspaceSettingsService.autoSaveInProgress.Description, 
                this.autoSaveDomainInProgress$ = this.workspaceSettingsService.autoSaveInProgress.DomainObjectId, 
                this.isWorkspaceAdmin = this.workspaceSettingsService.isWorkspaceAdmin, this.isNameExist$ = this.workspaceSettingsService.nameExists$, 
                this.isDomainsEnabled = !!this.isTrident;
            }
            return WorkspaceSettingsGeneralAboutComponent.prototype.uploadImage = function() {
                var _a, _b;
                null === (_b = null === (_a = this.imageFileInput) || void 0 === _a ? void 0 : _a.nativeElement) || void 0 === _b || _b.click(), 
                this.clickUpload$.next(!0), this.clickDelete$.next(!1);
            }, WorkspaceSettingsGeneralAboutComponent.prototype.deleteImage = function() {
                var _a;
                (null === (_a = this.imageFileInput) || void 0 === _a ? void 0 : _a.nativeElement) && (this.imageFileInput.nativeElement.value = ""), 
                this.image$.next(""), this.workspaceSettingsService.imageSrc = "", this.clickUpload$.next(!1), 
                this.clickDelete$.next(!0);
            }, WorkspaceSettingsGeneralAboutComponent.prototype.imageFileHandler = function() {
                var _a, _b, _this = this;
                this.imgError$.next("");
                var files = null === (_b = null === (_a = this.imageFileInput) || void 0 === _a ? void 0 : _a.nativeElement) || void 0 === _b ? void 0 : _b.files;
                if (files && 1 === files.length) {
                    var imageFile = files[0];
                    if (imageFile.size > 46080) this.imgError$.next(this.localizationService.format("Publish_ImageSizeValidationError", this.localizationService.get("File_Size_KB_45"))); else {
                        var extension = imageFile.name.split(".").reverse()[0];
                        if ([ "jpeg", "jpg", "png" ].some(function(ext) {
                            return extension.toLowerCase() === ext;
                        })) try {
                            var fileReader = new FileReader;
                            fileReader.addEventListener("load", function(e) {
                                var _a, _b, content = null === (_a = e.target) || void 0 === _a ? void 0 : _a.result;
                                content && (_this.image$.next(content.toString()), _this.workspaceSettingsService.imageSrc = content.toString(), 
                                (null === (_b = _this.imageFileInput) || void 0 === _b ? void 0 : _b.nativeElement) && (_this.imageFileInput.nativeElement.value = ""), 
                                _this.telemetryService.logEvent(WorkspaceSettingsActivityNames.UpdateImage));
                            }), fileReader.readAsDataURL(imageFile);
                        } catch (ex) {
                            this.imgError$.next(this.localizationService.get("Trident_Workspace_Settings_File_Read_Error"));
                        } else this.imgError$.next(this.localizationService.get("Trident_Workspace_Settings_Image_File_Extension_Error"));
                    }
                } else this.imgError$.next(this.localizationService.get("Trident_Workspace_Settings_One_Image_File_Only"));
            }, WorkspaceSettingsGeneralAboutComponent.prototype.updateName = function(event) {
                this.name = event.target.value, this.workspaceSettingsService.workspaceName = this.name, 
                this.telemetryService.logEvent(WorkspaceSettingsActivityNames.UpdateName);
            }, WorkspaceSettingsGeneralAboutComponent.prototype.validateName = function(event) {
                var _this = this, name = event.target.value;
                this.validateNameTimeoutId && clearTimeout(this.validateNameTimeoutId), this.validateNameTimeoutId = setTimeout(function() {
                    _this.workspaceSettingsService.validateFolderName(name);
                }, 600);
            }, WorkspaceSettingsGeneralAboutComponent.prototype.updateDescription = function(event) {
                this.description = event.target.value, this.workspaceSettingsService.description = this.description, 
                this.telemetryService.logEvent(WorkspaceSettingsActivityNames.UpdateDescription);
            }, WorkspaceSettingsGeneralAboutComponent.prototype.selectDomain = function(updatedDomain) {
                this.workspaceSettingsService.domainObjectId = null == updatedDomain ? void 0 : updatedDomain.domainObjectId, 
                this.telemetryService.logDomainEvent({
                    source: "WS settings",
                    isSubDomain: !!(null == updatedDomain ? void 0 : updatedDomain.isSubDomain)
                });
            }, WorkspaceSettingsGeneralAboutComponent.\u0275fac = function(t) {
                return new (t || WorkspaceSettingsGeneralAboutComponent)(core["\u0275\u0275directiveInject"](localization_service.z), core["\u0275\u0275directiveInject"](WorkspaceSettingsTelemetryService), core["\u0275\u0275directiveInject"](trident_env.Y), core["\u0275\u0275directiveInject"](tri_workspace_settings.X));
            }, WorkspaceSettingsGeneralAboutComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: WorkspaceSettingsGeneralAboutComponent,
                selectors: [ [ "tri-workspace-settings-general-about" ] ],
                viewQuery: function(rf, ctx) {
                    var _t;
                    1 & rf && core["\u0275\u0275viewQuery"](about_component_c0, 7), 2 & rf && core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx.imageFileInput = _t.first);
                },
                standalone: !0,
                features: [ core["\u0275\u0275StandaloneFeature"] ],
                decls: 71,
                vars: 91,
                consts: [ [ 1, "section-container", "tri-flex", "tri-flex-col" ], [ 1, "section-title", "tri-subtitle2" ], [ 1, "image-container", "tri-flex" ], [ 1, "image", "tri-flex", "tri-justify-center", "tri-items-center", "tri-relative", 3, "ngClass" ], [ "class", "valid-image", "alt", "Workspace image", 3, "src", 4, "ngIf" ], [ "tri-svg-icon-32", "", "class", "no-image", "name", "image_32_regular", 4, "ngIf" ], [ 1, "image-buttons", "tri-flex", "tri-flex-col" ], [ "tri-button", "", "appearance", "subtle", "size", "small", 1, "image-button", 3, "disabled", "click" ], [ 4, "ngIf", "ngIfElse" ], [ "uploadImageBtn", "" ], [ "deleteImageBtn", "" ], [ "role", "alert", 3, "statusIndicatorType", 4, "ngIf" ], [ "id", "workspace-settings-general-name-label", 1, "section-title", "tri-subtitle2" ], [ 1, "required-star" ], [ 1, "tri-flex" ], [ "aria-labelledby", "workspace-settings-general-name-label", 1, "general-settings-input", "tri-flex-grow", 3, "disabled", "value", "blur", "keyup" ], [ "class", "inline-autosave-spinner tri-flex tri-items-center", 4, "ngIf" ], [ 3, "statusIndicatorType", 4, "ngIf" ], [ "id", "workspace-settings-general-description-label", 1, "section-title", "tri-subtitle2" ], [ "aria-labelledby", "workspace-settings-general-description-label", "maxlength", "4000", "rows", "3", 1, "general-settings-textarea", "tri-flex-grow", 3, "value", "disabled", "placeholder", "blur" ], [ 1, "section-title" ], [ 1, "tri-subtitle2" ], [ 1, "tri-body1" ], [ 3, "selectedDomainObjectId", "shouldBeDisabled", "showSpinner", "domainSelected", 4, "ngIf" ], [ "type", "file", "accept", ".jpeg,.jpg,.png", 1, "tri-hidden", 3, "change" ], [ "imageFileInput", "" ], [ "alt", "Workspace image", 1, "valid-image", 3, "src" ], [ "tri-svg-icon-32", "", "name", "image_32_regular", 1, "no-image" ], [ 1, "tri-body1-strong" ], [ "name", "arrow_upload_20_regular" ], [ "name", "delete_20_regular" ], [ "role", "alert", 3, "statusIndicatorType" ], [ 1, "inline-autosave-spinner", "tri-flex", "tri-items-center" ], [ 3, "statusIndicatorType" ], [ 3, "selectedDomainObjectId", "shouldBeDisabled", "showSpinner", "domainSelected" ] ],
                template: function(rf, ctx) {
                    if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 0)(1, "div")(2, "div", 1), 
                    core["\u0275\u0275text"](3), core["\u0275\u0275pipe"](4, "localize"), core["\u0275\u0275elementEnd"](), 
                    core["\u0275\u0275elementStart"](5, "div", 2)(6, "div", 3), core["\u0275\u0275pipe"](7, "async"), 
                    core["\u0275\u0275template"](8, WorkspaceSettingsGeneralAboutComponent_img_8_Template, 2, 4, "img", 4), 
                    core["\u0275\u0275pipe"](9, "async"), core["\u0275\u0275template"](10, WorkspaceSettingsGeneralAboutComponent_tri_svg_icon_10_Template, 1, 1, "tri-svg-icon", 5), 
                    core["\u0275\u0275pipe"](11, "async"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](12, "div", 6)(13, "button", 7), 
                    core["\u0275\u0275listener"]("click", function() {
                        return ctx.uploadImage();
                    }), core["\u0275\u0275pipe"](14, "async"), core["\u0275\u0275pipe"](15, "async"), 
                    core["\u0275\u0275template"](16, WorkspaceSettingsGeneralAboutComponent_ng_container_16_Template, 5, 3, "ng-container", 8), 
                    core["\u0275\u0275pipe"](17, "async"), core["\u0275\u0275pipe"](18, "async"), core["\u0275\u0275template"](19, WorkspaceSettingsGeneralAboutComponent_ng_template_19_Template, 4, 3, "ng-template", null, 9, core["\u0275\u0275templateRefExtractor"]), 
                    core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](21, "button", 7), 
                    core["\u0275\u0275listener"]("click", function() {
                        return ctx.deleteImage();
                    }), core["\u0275\u0275pipe"](22, "async"), core["\u0275\u0275pipe"](23, "async"), 
                    core["\u0275\u0275pipe"](24, "async"), core["\u0275\u0275pipe"](25, "async"), core["\u0275\u0275template"](26, WorkspaceSettingsGeneralAboutComponent_ng_container_26_Template, 5, 3, "ng-container", 8), 
                    core["\u0275\u0275pipe"](27, "async"), core["\u0275\u0275pipe"](28, "async"), core["\u0275\u0275template"](29, WorkspaceSettingsGeneralAboutComponent_ng_template_29_Template, 4, 3, "ng-template", null, 10, core["\u0275\u0275templateRefExtractor"]), 
                    core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](31, WorkspaceSettingsGeneralAboutComponent_tri_status_indicator_31_Template, 3, 4, "tri-status-indicator", 11), 
                    core["\u0275\u0275pipe"](32, "async"), core["\u0275\u0275elementEnd"]()()(), core["\u0275\u0275elementStart"](33, "div")(34, "div", 12)(35, "div"), 
                    core["\u0275\u0275text"](36), core["\u0275\u0275pipe"](37, "localize"), core["\u0275\u0275elementStart"](38, "span", 13), 
                    core["\u0275\u0275text"](39, " *"), core["\u0275\u0275elementEnd"]()()(), core["\u0275\u0275elementStart"](40, "div", 14)(41, "input", 15), 
                    core["\u0275\u0275listener"]("blur", function($event) {
                        return ctx.updateName($event);
                    })("keyup", function($event) {
                        return ctx.validateName($event);
                    }), core["\u0275\u0275pipe"](42, "async"), core["\u0275\u0275pipe"](43, "async"), 
                    core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](44, WorkspaceSettingsGeneralAboutComponent_tri_spinner_44_Template, 1, 0, "tri-spinner", 16), 
                    core["\u0275\u0275pipe"](45, "async"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](46, WorkspaceSettingsGeneralAboutComponent_tri_status_indicator_46_Template, 3, 4, "tri-status-indicator", 17), 
                    core["\u0275\u0275pipe"](47, "async"), core["\u0275\u0275template"](48, WorkspaceSettingsGeneralAboutComponent_tri_status_indicator_48_Template, 3, 4, "tri-status-indicator", 17), 
                    core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](49, "div")(50, "div", 18), 
                    core["\u0275\u0275text"](51), core["\u0275\u0275pipe"](52, "localize"), core["\u0275\u0275elementEnd"](), 
                    core["\u0275\u0275elementStart"](53, "div", 14)(54, "textarea", 19), core["\u0275\u0275listener"]("blur", function($event) {
                        return ctx.updateDescription($event);
                    }), core["\u0275\u0275pipe"](55, "async"), core["\u0275\u0275pipe"](56, "localize"), 
                    core["\u0275\u0275pipe"](57, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](58, WorkspaceSettingsGeneralAboutComponent_tri_spinner_58_Template, 1, 0, "tri-spinner", 16), 
                    core["\u0275\u0275pipe"](59, "async"), core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementStart"](60, "div")(61, "div", 20)(62, "div", 21), 
                    core["\u0275\u0275text"](63), core["\u0275\u0275pipe"](64, "localize"), core["\u0275\u0275elementEnd"](), 
                    core["\u0275\u0275elementStart"](65, "div", 22), core["\u0275\u0275text"](66), core["\u0275\u0275pipe"](67, "localize"), 
                    core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275template"](68, WorkspaceSettingsGeneralAboutComponent_trident_domains_dropdown_68_Template, 3, 7, "trident-domains-dropdown", 23), 
                    core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementStart"](69, "input", 24, 25), 
                    core["\u0275\u0275listener"]("change", function() {
                        return ctx.imageFileHandler();
                    }), core["\u0275\u0275elementEnd"]()), 2 & rf) {
                        var tmp_1_0, tmp_3_0, tmp_9_0, tmp_10_0, _r3 = core["\u0275\u0275reference"](20), _r6 = core["\u0275\u0275reference"](30);
                        core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](4, 35, "WorkspaceImage")), 
                        core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngClass", core["\u0275\u0275pureFunction1"](89, about_component_c1, !(null != (tmp_1_0 = core["\u0275\u0275pipeBind1"](7, 37, ctx.image$)) && tmp_1_0.length))), 
                        core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](9, 39, ctx.image$)), 
                        core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", !(null != (tmp_3_0 = core["\u0275\u0275pipeBind1"](11, 41, ctx.image$)) && tmp_3_0.length)), 
                        core["\u0275\u0275advance"](3), core["\u0275\u0275classProp"]("is-disabled", core["\u0275\u0275pipeBind1"](14, 43, ctx.autoSaveImageInProgress$) || !ctx.isWorkspaceAdmin), 
                        core["\u0275\u0275property"]("disabled", core["\u0275\u0275pipeBind1"](15, 45, ctx.autoSaveImageInProgress$) || !ctx.isWorkspaceAdmin), 
                        core["\u0275\u0275attribute"]("data-testid", "workspace-settings-general-upload-btn"), 
                        core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](17, 47, ctx.autoSaveImageInProgress$) && core["\u0275\u0275pipeBind1"](18, 49, ctx.clickUpload$))("ngIfElse", _r3), 
                        core["\u0275\u0275advance"](5), core["\u0275\u0275classProp"]("is-disabled", !(null != (tmp_9_0 = core["\u0275\u0275pipeBind1"](22, 51, ctx.image$)) && tmp_9_0.length) || core["\u0275\u0275pipeBind1"](23, 53, ctx.autoSaveImageInProgress$) || !ctx.isWorkspaceAdmin), 
                        core["\u0275\u0275property"]("disabled", !(null != (tmp_10_0 = core["\u0275\u0275pipeBind1"](24, 55, ctx.image$)) && tmp_10_0.length) || core["\u0275\u0275pipeBind1"](25, 57, ctx.autoSaveImageInProgress$) || !ctx.isWorkspaceAdmin), 
                        core["\u0275\u0275attribute"]("data-testid", "workspace-settings-general-reset-btn"), 
                        core["\u0275\u0275advance"](5), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](27, 59, ctx.autoSaveImageInProgress$) && core["\u0275\u0275pipeBind1"](28, 61, ctx.clickDelete$))("ngIfElse", _r6), 
                        core["\u0275\u0275advance"](5), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](32, 63, ctx.imgError$)), 
                        core["\u0275\u0275advance"](5), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](37, 65, "Name")), 
                        core["\u0275\u0275advance"](5), core["\u0275\u0275classProp"]("has-error", core["\u0275\u0275pipeBind1"](42, 67, ctx.isNameExist$) || !ctx.name), 
                        core["\u0275\u0275property"]("disabled", core["\u0275\u0275pipeBind1"](43, 69, ctx.autoSaveNameInProgress$) || !ctx.isWorkspaceAdmin)("value", ctx.name), 
                        core["\u0275\u0275attribute"]("data-testid", "workspace-settings-general-name-input"), 
                        core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](45, 71, ctx.autoSaveNameInProgress$)), 
                        core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](47, 73, ctx.isNameExist$)), 
                        core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", !ctx.name), 
                        core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](52, 75, "Description")), 
                        core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("value", ctx.description)("disabled", core["\u0275\u0275pipeBind1"](55, 77, ctx.autoSaveDescriptionInProgress$) || !ctx.isWorkspaceAdmin)("placeholder", core["\u0275\u0275pipeBind1"](56, 79, "DescribeThisWorkspace") + " " + core["\u0275\u0275pipeBind1"](57, 81, "Optional_Parenthesis")), 
                        core["\u0275\u0275attribute"]("data-testid", "workspace-settings-general-description-input"), 
                        core["\u0275\u0275advance"](4), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](59, 83, ctx.autoSaveDescriptionInProgress$)), 
                        core["\u0275\u0275advance"](5), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](64, 85, "Domain")), 
                        core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](67, 87, "Domains_Tip")), 
                        core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", ctx.isDomainsEnabled);
                    }
                },
                dependencies: [ common.NgClass, common.NgIf, common.AsyncPipe, tri_svg_icon.T6, tri_svg_icon_component.M, localization_module.Y, localize_pipe.Y, telemetry_module.l, tri_spinner_module.d, tri_spinner_component.D, TriStatusIndicatorModule, TriStatusIndicatorComponent, domains_ui_src.AP, DomainsDropdownComponent, tri_tooltip.w ],
                styles: [ "[_nghost-%COMP%]   .image-container[_ngcontent-%COMP%]{gap:8px}[_nghost-%COMP%]   .image-container[_ngcontent-%COMP%]   .image[_ngcontent-%COMP%]{height:72px;width:72px;max-width:72px}[_nghost-%COMP%]   .image-container[_ngcontent-%COMP%]   .image[_ngcontent-%COMP%]   .valid-image[_ngcontent-%COMP%]{height:72px;width:72px;border-radius:50%}[_nghost-%COMP%]   .image-container[_ngcontent-%COMP%]   .image.no-image-container[_ngcontent-%COMP%]{background-color:var(--colorNeutralBackground6);color:var(--colorNeutralForeground3);fill:var(--colorNeutralForeground3);border-radius:50%}[_nghost-%COMP%]   .image-container[_ngcontent-%COMP%]   .image[_ngcontent-%COMP%]   .no-image[_ngcontent-%COMP%]{fill:var(--colorNeutralForeground3)}[_nghost-%COMP%]   .image-container[_ngcontent-%COMP%]   .image-buttons[_ngcontent-%COMP%]{gap:4px}[_nghost-%COMP%]   .image-container[_ngcontent-%COMP%]   .image-buttons[_ngcontent-%COMP%]   .image-button[_ngcontent-%COMP%]{height:32px}[_nghost-%COMP%]   .image-container[_ngcontent-%COMP%]   .image-buttons[_ngcontent-%COMP%] > *[_ngcontent-%COMP%]{justify-content:flex-start}[_nghost-%COMP%]   .image-container[_ngcontent-%COMP%]   .image-error-message[_ngcontent-%COMP%]{color:var(--colorPaletteRedForeground1)}[_nghost-%COMP%]   tri-status-indicator[_ngcontent-%COMP%]     .status-indicator{margin-top:4px}[_nghost-%COMP%]   trident-domains-dropdown[_ngcontent-%COMP%]     .domains-header{display:none}[_nghost-%COMP%]   trident-domains-dropdown[_ngcontent-%COMP%]     .domain-menu-button[disabled] .menu-button-text{color:var(--colorNeutralForegroundDisabled)}" ],
                changeDetection: 0
            }), WorkspaceSettingsGeneralAboutComponent;
        }();
        function WorkspaceSettingsGeneralManageComponent_tri_message_bar_5_Template(rf, ctx) {
            if (1 & rf) {
                var _r5 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "tri-message-bar", 7), core["\u0275\u0275listener"]("hideMessageBar", function() {
                    core["\u0275\u0275restoreView"](_r5);
                    var ctx_r4 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r4.dismissError());
                }), core["\u0275\u0275pipe"](1, "async"), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var tmp_0_0, ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("viewModel", ctx_r0.getErrorMessageBarViewModel(null !== (tmp_0_0 = core["\u0275\u0275pipeBind1"](1, 1, ctx_r0.deleteWorkspaceErrorMessage$)) && void 0 !== tmp_0_0 ? tmp_0_0 : ""));
            }
        }
        function WorkspaceSettingsGeneralManageComponent_div_8_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementStart"](0, "div", 8), core["\u0275\u0275element"](1, "tri-svg-icon", 9), 
            core["\u0275\u0275elementStart"](2, "div", 10), core["\u0275\u0275text"](3), core["\u0275\u0275pipe"](4, "localize"), 
            core["\u0275\u0275elementEnd"]()()), 2 & rf && (core["\u0275\u0275advance"](3), 
            core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](4, 1, "Trident_Workspace_Settings_Delete_Workspace_Banner")));
        }
        function WorkspaceSettingsGeneralManageComponent_div_9_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 11), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r2 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate1"]("", ctx_r2.getDeleteWorkspaceRetentionPolicyText(), " ");
            }
        }
        function WorkspaceSettingsGeneralManageComponent_tri_spinner_14_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "tri-spinner");
        }
        var WorkspaceSettingsGeneralManageComponent = function() {
            function WorkspaceSettingsGeneralManageComponent(workspaceSettingsService, triLocalizationService, telemetryService) {
                this.workspaceSettingsService = workspaceSettingsService, this.triLocalizationService = triLocalizationService, 
                this.telemetryService = telemetryService, this.closeSettings = new core.EventEmitter, 
                this.showDeleteWorkspaceError$ = new BehaviorSubject.X(!1);
            }
            return WorkspaceSettingsGeneralManageComponent.prototype.ngOnInit = function() {
                var _this = this;
                this.workspaceRecoveryEnabled = this.workspaceSettingsService.workspaceRecoveryEnabled, 
                this.deleteWorkspaceInProgress$ = this.workspaceSettingsService.deleteWorkspaceInProgress$, 
                this.deleteWorkspaceErrorMessage$ = this.workspaceSettingsService.deleteWorkspaceErrorMessage$.pipe((0, 
                filter.h)(function(error) {
                    return !!error;
                }), (0, tap.b)(function() {
                    return _this.showDeleteWorkspaceError$.next(!0);
                }));
            }, WorkspaceSettingsGeneralManageComponent.prototype.deleteWorkspace = function() {
                var _this = this;
                this.telemetryService.logEvent(WorkspaceSettingsActivityNames.DeleteWorkspace), 
                this.workspaceSettingsService.deleteWorkspace().then(function(deleted) {
                    var _a;
                    deleted && (null === (_a = _this.closeSettings) || void 0 === _a || _a.emit());
                });
            }, WorkspaceSettingsGeneralManageComponent.prototype.getDeleteWorkspaceRetentionPolicyText = function() {
                return this.triLocalizationService.format("Trident_Workspace_Settings_Delete_Workspace_Configurable", this.workspaceSettingsService.retentionPeriodDays);
            }, WorkspaceSettingsGeneralManageComponent.prototype.dismissError = function() {
                this.showDeleteWorkspaceError$.next(!1);
            }, WorkspaceSettingsGeneralManageComponent.prototype.getErrorMessageBarViewModel = function(message) {
                return {
                    bannerType: 1,
                    allowDismiss: !0,
                    isRoundedCorners: !0,
                    message
                };
            }, WorkspaceSettingsGeneralManageComponent.\u0275fac = function(t) {
                return new (t || WorkspaceSettingsGeneralManageComponent)(core["\u0275\u0275directiveInject"](tri_workspace_settings.X), core["\u0275\u0275directiveInject"](localization_service.z), core["\u0275\u0275directiveInject"](WorkspaceSettingsTelemetryService));
            }, WorkspaceSettingsGeneralManageComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: WorkspaceSettingsGeneralManageComponent,
                selectors: [ [ "tri-workspace-settings-general-manage" ] ],
                outputs: {
                    closeSettings: "closeSettings"
                },
                standalone: !0,
                features: [ core["\u0275\u0275StandaloneFeature"] ],
                decls: 19,
                vars: 23,
                consts: [ [ 1, "section-title", "tri-subtitle2" ], [ 3, "viewModel", "hideMessageBar", 4, "ngIf" ], [ "class", "delete-workspace-message tri-flex", 4, "ngIf" ], [ "class", "delete-workspace-new-message tri-body1", 4, "ngIf" ], [ "tri-button", "", "appearance", "primary", "data-testid", "delete-workspace-btn", 3, "disabled", "click" ], [ 4, "ngIf" ], [ "name", "delete_20_regular" ], [ 3, "viewModel", "hideMessageBar" ], [ 1, "delete-workspace-message", "tri-flex" ], [ "name", "info_20_regular", 1, "banner-icon", "tri-shrink-0" ], [ 1, "banner-text" ], [ 1, "delete-workspace-new-message", "tri-body1" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementStart"](0, "div", 0)(1, "div"), core["\u0275\u0275text"](2), 
                    core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](4, "div"), 
                    core["\u0275\u0275template"](5, WorkspaceSettingsGeneralManageComponent_tri_message_bar_5_Template, 2, 3, "tri-message-bar", 1), 
                    core["\u0275\u0275pipe"](6, "async"), core["\u0275\u0275pipe"](7, "async"), core["\u0275\u0275template"](8, WorkspaceSettingsGeneralManageComponent_div_8_Template, 5, 3, "div", 2), 
                    core["\u0275\u0275template"](9, WorkspaceSettingsGeneralManageComponent_div_9_Template, 2, 1, "div", 3), 
                    core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementStart"](10, "div")(11, "button", 4), 
                    core["\u0275\u0275listener"]("click", function() {
                        return ctx.deleteWorkspace();
                    }), core["\u0275\u0275pipe"](12, "async"), core["\u0275\u0275pipe"](13, "async"), 
                    core["\u0275\u0275template"](14, WorkspaceSettingsGeneralManageComponent_tri_spinner_14_Template, 1, 0, "tri-spinner", 5), 
                    core["\u0275\u0275pipe"](15, "async"), core["\u0275\u0275element"](16, "tri-svg-icon", 6), 
                    core["\u0275\u0275text"](17), core["\u0275\u0275pipe"](18, "localize"), core["\u0275\u0275elementEnd"]()()), 
                    2 & rf && (core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](3, 9, "GroupEditor_DeleteGroup_Text")), 
                    core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](6, 11, ctx.deleteWorkspaceErrorMessage$) && core["\u0275\u0275pipeBind1"](7, 13, ctx.showDeleteWorkspaceError$)), 
                    core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngIf", !ctx.workspaceRecoveryEnabled), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx.workspaceRecoveryEnabled), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275classProp"]("is-disabled", core["\u0275\u0275pipeBind1"](12, 15, ctx.deleteWorkspaceInProgress$)), 
                    core["\u0275\u0275property"]("disabled", core["\u0275\u0275pipeBind1"](13, 17, ctx.deleteWorkspaceInProgress$)), 
                    core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](15, 19, ctx.deleteWorkspaceInProgress$)), 
                    core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](18, 21, "Trident_Workspace_Settings_Delete_This_Workspace"), " "));
                },
                dependencies: [ common.NgIf, common.AsyncPipe, tri_svg_icon.T6, tri_svg_icon_component.M, localization_module.Y, localize_pipe.Y, telemetry_module.l, tri_spinner_module.d, tri_spinner_component.D, tri_message_bar.I, tri_message_bar_component.h ],
                styles: [ "[_nghost-%COMP%]   .delete-workspace-message[_ngcontent-%COMP%]{font-size:12px;background-color:var(--colorNeutralBackground4);padding:6px 10px;box-sizing:border-box}[_nghost-%COMP%]   .delete-workspace-message[_ngcontent-%COMP%]   .banner-icon[_ngcontent-%COMP%]{height:16px;width:16px;margin-bottom:2px;margin-inline-end:8px}[_nghost-%COMP%]   .delete-workspace-message[_ngcontent-%COMP%]   .banner-text[_ngcontent-%COMP%]{line-height:16px}[_nghost-%COMP%]   .delete-workspace-new-message[_ngcontent-%COMP%]{font-size:14px}" ],
                changeDetection: 0
            }), WorkspaceSettingsGeneralManageComponent;
        }();
        function WorkspaceSettingsGeneralNotificationsComponent_ng_container_8_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275elementContainer"](0);
        }
        function WorkspaceSettingsGeneralNotificationsComponent_tri_spinner_9_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "tri-spinner", 7);
        }
        var notifications_component_c0 = function() {
            return [];
        };
        function WorkspaceSettingsGeneralNotificationsComponent_ng_template_11_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "input", 8), 2 & rf) {
                var tmp_1_0, model_r4 = ctx.$implicit;
                core["\u0275\u0275property"]("placeholder", null == model_r4 ? null : model_r4.inputPlaceholder)("value", (null !== (tmp_1_0 = null == model_r4 ? null : model_r4.identities) && void 0 !== tmp_1_0 ? tmp_1_0 : core["\u0275\u0275pureFunction0"](2, notifications_component_c0)).join(";"));
            }
        }
        var notifications_component_c1 = function(a0) {
            return {
                $implicit: a0
            };
        }, WorkspaceSettingsGeneralNotificationsComponent = function() {
            function WorkspaceSettingsGeneralNotificationsComponent(workspaceSettingsService, triLocalizationService, telemetryService) {
                var _this = this;
                this.workspaceSettingsService = workspaceSettingsService, this.triLocalizationService = triLocalizationService, 
                this.telemetryService = telemetryService, this.contactListContext = void 0, this.isWorkspaceAdmin = !1, 
                this.onContactListUpdated = function(identities) {
                    _this.contactListContext && (_this.contactListContext = (0, tslib_es6.__assign)((0, 
                    tslib_es6.__assign)({}, _this.contactListContext), {
                        identities: (0, tslib_es6.__spreadArray)([], identities, !0)
                    }), _this.workspaceSettingsService.contactList = _this.contactListContext.identities, 
                    _this.telemetryService.logEvent(WorkspaceSettingsActivityNames.UpdateContracts));
                }, this.isWorkspaceAdmin = this.workspaceSettingsService.isWorkspaceAdmin, this.contactListContext = {
                    identities: this.workspaceSettingsService.contactList,
                    onIdentitiesUpdated: this.onContactListUpdated,
                    allowEmailEnabledSecurityGroups: !0,
                    allowObjectIds: !0,
                    allowDistributionLists: !0,
                    allowUnifiedGroups: !0,
                    checkValidOrgUser: !0,
                    includeGuests: !0,
                    showRelevantUsers: !1,
                    inputPlaceholder: this.workspaceSettingsService.contactList.length > 0 ? "" : this.triLocalizationService.get("EmailsList_UsersAndGroupsPlaceholder"),
                    inputAriaLabelledBy: "workspace-settings-general-contact-list-label",
                    disabled: !this.isWorkspaceAdmin
                }, this.autoSaveContactListInProgress$ = this.workspaceSettingsService.autoSaveInProgress.ContactList;
            }
            return WorkspaceSettingsGeneralNotificationsComponent.\u0275fac = function(t) {
                return new (t || WorkspaceSettingsGeneralNotificationsComponent)(core["\u0275\u0275directiveInject"](tri_workspace_settings.X), core["\u0275\u0275directiveInject"](localization_service.z), core["\u0275\u0275directiveInject"](WorkspaceSettingsTelemetryService));
            }, WorkspaceSettingsGeneralNotificationsComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: WorkspaceSettingsGeneralNotificationsComponent,
                selectors: [ [ "tri-workspace-settings-general-notifications" ] ],
                inputs: {
                    userPicker: "userPicker"
                },
                standalone: !0,
                features: [ core["\u0275\u0275StandaloneFeature"] ],
                decls: 13,
                vars: 13,
                consts: [ [ 1, "section-title" ], [ "id", "workspace-settings-general-contact-list-label", 1, "tri-subtitle2" ], [ 1, "tri-body1" ], [ 1, "email-list-input-container", "tri-flex" ], [ 4, "ngTemplateOutlet", "ngTemplateOutletContext" ], [ "class", "inline-autosave-spinner tri-flex tri-items-center", 4, "ngIf" ], [ "inputUserPicker", "" ], [ 1, "inline-autosave-spinner", "tri-flex", "tri-items-center" ], [ "aria-labelledby", "workspace-settings-general-contact-list-label", 1, "tri-flex-grow", "contact-list", 3, "placeholder", "value" ] ],
                template: function(rf, ctx) {
                    if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 0)(1, "div", 1), core["\u0275\u0275text"](2), 
                    core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](4, "div", 2), 
                    core["\u0275\u0275text"](5), core["\u0275\u0275pipe"](6, "localize"), core["\u0275\u0275elementEnd"]()(), 
                    core["\u0275\u0275elementStart"](7, "div", 3), core["\u0275\u0275template"](8, WorkspaceSettingsGeneralNotificationsComponent_ng_container_8_Template, 1, 0, "ng-container", 4), 
                    core["\u0275\u0275template"](9, WorkspaceSettingsGeneralNotificationsComponent_tri_spinner_9_Template, 1, 0, "tri-spinner", 5), 
                    core["\u0275\u0275pipe"](10, "async"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](11, WorkspaceSettingsGeneralNotificationsComponent_ng_template_11_Template, 1, 3, "ng-template", null, 6, core["\u0275\u0275templateRefExtractor"])), 
                    2 & rf) {
                        var _r2 = core["\u0275\u0275reference"](12);
                        core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](3, 5, "Workspace_Contact")), 
                        core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](6, 7, "Workspace_Contact_List_Description")), 
                        core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngTemplateOutlet", ctx.userPicker || _r2)("ngTemplateOutletContext", core["\u0275\u0275pureFunction1"](11, notifications_component_c1, ctx.contactListContext)), 
                        core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](10, 9, ctx.autoSaveContactListInProgress$));
                    }
                },
                dependencies: [ common.NgIf, common.NgTemplateOutlet, common.AsyncPipe, localization_module.Y, localize_pipe.Y, telemetry_module.l, tri_spinner_module.d, tri_spinner_component.D, fesm2022_forms.u5 ],
                encapsulation: 2,
                changeDetection: 0
            }), WorkspaceSettingsGeneralNotificationsComponent;
        }();
        function WorkspaceSettingsGeneralOneDriveComponent_ng_container_4_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275elementContainer"](0);
        }
        function WorkspaceSettingsGeneralOneDriveComponent_tri_spinner_5_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "tri-spinner", 5);
        }
        var one_drive_component_c0 = function() {
            return [];
        };
        function WorkspaceSettingsGeneralOneDriveComponent_ng_template_7_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "input", 6), 2 & rf) {
                var tmp_1_0, model_r4 = ctx.$implicit;
                core["\u0275\u0275property"]("placeholder", null == model_r4 ? null : model_r4.inputPlaceholder)("value", (null !== (tmp_1_0 = null == model_r4 ? null : model_r4.identities) && void 0 !== tmp_1_0 ? tmp_1_0 : core["\u0275\u0275pureFunction0"](2, one_drive_component_c0)).join(";"));
            }
        }
        var one_drive_component_c1 = function(a0) {
            return {
                $implicit: a0
            };
        }, WorkspaceSettingsGeneralOneDriveComponent = function() {
            function WorkspaceSettingsGeneralOneDriveComponent(workspaceSettingsService, triLocalizationService, telemetryService) {
                var _this = this;
                this.workspaceSettingsService = workspaceSettingsService, this.triLocalizationService = triLocalizationService, 
                this.telemetryService = telemetryService, this.oneDriveContext = void 0, this.isWorkspaceAdmin = !1, 
                this.onOneDriveUpdated = function(identities) {
                    _this.oneDriveContext && (_this.oneDriveContext = (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, _this.oneDriveContext), {
                        identities: (0, tslib_es6.__spreadArray)([], identities, !0)
                    }), _this.workspaceSettingsService.workspaceOneDrive = _this.oneDriveContext.identities[0], 
                    _this.telemetryService.logEvent(WorkspaceSettingsActivityNames.UpdateOneDrive));
                }, this.isWorkspaceAdmin = this.workspaceSettingsService.isWorkspaceAdmin, this.oneDriveContext = {
                    identities: this.workspaceSettingsService.workspaceOneDrive ? [ this.workspaceSettingsService.workspaceOneDrive ] : [],
                    onIdentitiesUpdated: this.onOneDriveUpdated,
                    allowSecurityGroups: !1,
                    allowObjectIds: !0,
                    allowDistributionLists: !1,
                    allowUnifiedGroups: !0,
                    blockUsers: !0,
                    checkValidOrgUser: !0,
                    maxSelectableUsers: 1,
                    showRelevantUsers: !1,
                    inputPlaceholder: this.workspaceSettingsService.workspaceOneDrive ? "" : this.triLocalizationService.get("EmailsList_GroupsPlaceholder"),
                    inputAriaLabelledBy: "workspace-settings-general-oneDrive-list-label",
                    disabled: !this.isWorkspaceAdmin
                }, this.autoSaveOneDriveInProgress = this.workspaceSettingsService.autoSaveInProgress.OneDrive;
            }
            return WorkspaceSettingsGeneralOneDriveComponent.\u0275fac = function(t) {
                return new (t || WorkspaceSettingsGeneralOneDriveComponent)(core["\u0275\u0275directiveInject"](tri_workspace_settings.X), core["\u0275\u0275directiveInject"](localization_service.z), core["\u0275\u0275directiveInject"](WorkspaceSettingsTelemetryService));
            }, WorkspaceSettingsGeneralOneDriveComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: WorkspaceSettingsGeneralOneDriveComponent,
                selectors: [ [ "tri-workspace-settings-general-one-drive" ] ],
                inputs: {
                    userPicker: "userPicker"
                },
                standalone: !0,
                features: [ core["\u0275\u0275StandaloneFeature"] ],
                decls: 9,
                vars: 10,
                consts: [ [ "id", "workspace-settings-general-oneDrive-list-label", 1, "section-title", "tri-subtitle2" ], [ 1, "email-list-input-container", "tri-flex" ], [ 4, "ngTemplateOutlet", "ngTemplateOutletContext" ], [ "class", "inline-autosave-spinner tri-flex tri-items-center", 4, "ngIf" ], [ "inputUserPicker", "" ], [ 1, "inline-autosave-spinner", "tri-flex", "tri-items-center" ], [ "aria-labelledby", "workspace-settings-general-oneDrive-list-label", 1, "tri-flex-grow", "contact-list", 3, "placeholder", "value" ] ],
                template: function(rf, ctx) {
                    if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 0), core["\u0275\u0275text"](1), 
                    core["\u0275\u0275pipe"](2, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](3, "div", 1), 
                    core["\u0275\u0275template"](4, WorkspaceSettingsGeneralOneDriveComponent_ng_container_4_Template, 1, 0, "ng-container", 2), 
                    core["\u0275\u0275template"](5, WorkspaceSettingsGeneralOneDriveComponent_tri_spinner_5_Template, 1, 0, "tri-spinner", 3), 
                    core["\u0275\u0275pipe"](6, "async"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](7, WorkspaceSettingsGeneralOneDriveComponent_ng_template_7_Template, 1, 3, "ng-template", null, 4, core["\u0275\u0275templateRefExtractor"])), 
                    2 & rf) {
                        var _r2 = core["\u0275\u0275reference"](8);
                        core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](2, 4, "WorkspaceSharePoint")), 
                        core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngTemplateOutlet", ctx.userPicker || _r2)("ngTemplateOutletContext", core["\u0275\u0275pureFunction1"](8, one_drive_component_c1, ctx.oneDriveContext)), 
                        core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](6, 6, ctx.autoSaveOneDriveInProgress));
                    }
                },
                dependencies: [ common.NgIf, common.AsyncPipe, common.NgTemplateOutlet, localization_module.Y, localize_pipe.Y, telemetry_module.l, tri_spinner_module.d, tri_spinner_component.D, fesm2022_forms.u5 ],
                encapsulation: 2,
                changeDetection: 0
            }), WorkspaceSettingsGeneralOneDriveComponent;
        }(), section_divider_component_c0 = [ "*" ], WorkspaceSettingsSectionDividerComponent = function() {
            function WorkspaceSettingsSectionDividerComponent() {}
            return WorkspaceSettingsSectionDividerComponent.\u0275fac = function(t) {
                return new (t || WorkspaceSettingsSectionDividerComponent);
            }, WorkspaceSettingsSectionDividerComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: WorkspaceSettingsSectionDividerComponent,
                selectors: [ [ "tri-workspace-settings-section-divider" ] ],
                inputs: {
                    sectionNameLocKey: "sectionNameLocKey"
                },
                standalone: !0,
                features: [ core["\u0275\u0275StandaloneFeature"] ],
                ngContentSelectors: section_divider_component_c0,
                decls: 10,
                vars: 3,
                consts: [ [ 1, "section" ], [ 1, "divider", "tri-flex", "tri-flex-row", "tri-justify-content", "tri-items-center" ], [ 1, "divider-left-line" ], [ 1, "divider-text", "tri-caption1" ], [ 1, "tri-flex-auto" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275projectionDef"](), core["\u0275\u0275elementStart"](0, "div", 0)(1, "div", 1)(2, "div", 2), 
                    core["\u0275\u0275element"](3, "mat-divider"), core["\u0275\u0275elementEnd"](), 
                    core["\u0275\u0275elementStart"](4, "span", 3), core["\u0275\u0275text"](5), core["\u0275\u0275pipe"](6, "localize"), 
                    core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](7, "div", 4), 
                    core["\u0275\u0275element"](8, "mat-divider"), core["\u0275\u0275elementEnd"]()(), 
                    core["\u0275\u0275projection"](9), core["\u0275\u0275elementEnd"]()), 2 & rf && (core["\u0275\u0275advance"](5), 
                    core["\u0275\u0275textInterpolate"](ctx.sectionNameLocKey ? core["\u0275\u0275pipeBind1"](6, 1, ctx.sectionNameLocKey) : ""));
                },
                dependencies: [ localization_module.Y, localize_pipe.Y, divider.t, divider.d ],
                styles: [ "[_nghost-%COMP%]   .section[_ngcontent-%COMP%]{margin-bottom:48px}[_nghost-%COMP%]   .divider[_ngcontent-%COMP%]{width:100%;height:20px;margin-bottom:16px}[_nghost-%COMP%]   .divider[_ngcontent-%COMP%]   .divider-left-line[_ngcontent-%COMP%]{width:8px}[_nghost-%COMP%]   .divider[_ngcontent-%COMP%]   .divider-text[_ngcontent-%COMP%]{padding:0 var(--spacingVerticalM)}" ],
                changeDetection: 0
            }), WorkspaceSettingsSectionDividerComponent;
        }();
        function WorkspaceSettingsGeneralComponent_ng_container_0_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275element"](1, "tri-spinner", 2), 
            core["\u0275\u0275elementContainerEnd"]());
        }
        function WorkspaceSettingsGeneralComponent_tri_message_bar_2_Template(rf, ctx) {
            if (1 & rf) {
                var _r6 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "tri-message-bar", 3), core["\u0275\u0275listener"]("hideMessageBar", function() {
                    core["\u0275\u0275restoreView"](_r6);
                    var ctx_r5 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r5.dismissWorkspaceInitializationError());
                }), core["\u0275\u0275pipe"](1, "async"), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var tmp_0_0, ctx_r1 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("viewModel", ctx_r1.getErrorMessageBarViewModel(null !== (tmp_0_0 = core["\u0275\u0275pipeBind1"](1, 1, ctx_r1.workspaceInitializationError$)) && void 0 !== tmp_0_0 ? tmp_0_0 : ""));
            }
        }
        function WorkspaceSettingsGeneralComponent_tri_message_bar_5_Template(rf, ctx) {
            if (1 & rf) {
                var _r8 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "tri-message-bar", 3), core["\u0275\u0275listener"]("hideMessageBar", function() {
                    core["\u0275\u0275restoreView"](_r8);
                    var ctx_r7 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r7.dismissNameValidationError());
                }), core["\u0275\u0275pipe"](1, "async"), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var tmp_0_0, ctx_r2 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("viewModel", ctx_r2.getErrorMessageBarViewModel(null !== (tmp_0_0 = core["\u0275\u0275pipeBind1"](1, 1, ctx_r2.nameValidationError$)) && void 0 !== tmp_0_0 ? tmp_0_0 : ""));
            }
        }
        function WorkspaceSettingsGeneralComponent_tri_message_bar_8_Template(rf, ctx) {
            if (1 & rf) {
                var _r10 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "tri-message-bar", 3), core["\u0275\u0275listener"]("hideMessageBar", function() {
                    core["\u0275\u0275restoreView"](_r10);
                    var ctx_r9 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r9.dismissAutoSaveError());
                }), core["\u0275\u0275pipe"](1, "async"), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var tmp_0_0, ctx_r3 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("viewModel", ctx_r3.getErrorMessageBarViewModel(null !== (tmp_0_0 = core["\u0275\u0275pipeBind1"](1, 1, ctx_r3.autoSaveError$)) && void 0 !== tmp_0_0 ? tmp_0_0 : ""));
            }
        }
        function WorkspaceSettingsGeneralComponent_ng_container_11_tri_workspace_settings_section_divider_10_Template(rf, ctx) {
            if (1 & rf) {
                var _r13 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "tri-workspace-settings-section-divider", 10)(1, "tri-workspace-settings-general-manage", 11), 
                core["\u0275\u0275listener"]("closeSettings", function() {
                    core["\u0275\u0275restoreView"](_r13);
                    var ctx_r12 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r12.onCloseSettings());
                }), core["\u0275\u0275elementEnd"]()();
            }
        }
        function WorkspaceSettingsGeneralComponent_ng_container_11_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "div", 4), 
            core["\u0275\u0275text"](2), core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementEnd"](), 
            core["\u0275\u0275elementStart"](4, "tri-workspace-settings-section-divider", 5), 
            core["\u0275\u0275element"](5, "tri-workspace-settings-general-about"), core["\u0275\u0275elementEnd"](), 
            core["\u0275\u0275elementStart"](6, "tri-workspace-settings-section-divider", 6), 
            core["\u0275\u0275element"](7, "tri-workspace-settings-general-notifications", 7), 
            core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](8, "tri-workspace-settings-section-divider", 8), 
            core["\u0275\u0275element"](9, "tri-workspace-settings-general-one-drive", 7), core["\u0275\u0275elementEnd"](), 
            core["\u0275\u0275template"](10, WorkspaceSettingsGeneralComponent_ng_container_11_tri_workspace_settings_section_divider_10_Template, 2, 0, "tri-workspace-settings-section-divider", 9), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var ctx_r4 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](3, 4, "SettingsGroupsNames_General")), 
                core["\u0275\u0275advance"](5), core["\u0275\u0275property"]("userPicker", ctx_r4.userPicker), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("userPicker", ctx_r4.userPicker), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !!ctx_r4.isWorkspaceAdmin);
            }
        }
        var WorkspaceSettingsGeneralComponent = function() {
            function WorkspaceSettingsGeneralComponent(workspaceSettingsService, telemetryService) {
                this.workspaceSettingsService = workspaceSettingsService, this.telemetryService = telemetryService, 
                this.closeSettings = new core.EventEmitter, this.showWorkspaceInitializationError$ = new BehaviorSubject.X(!1), 
                this.showNameValidationError$ = new BehaviorSubject.X(!1), this.showAutoSaveError$ = new BehaviorSubject.X(!1);
            }
            return WorkspaceSettingsGeneralComponent.prototype.ngOnInit = function() {
                var _this = this;
                this.initialized$ = this.workspaceSettingsService.folderSettingsInitialized$, this.initialized$.subscribe(function(initialized) {
                    initialized && (_this.isWorkspaceAdmin = _this.workspaceSettingsService.isWorkspaceAdmin, 
                    _this.telemetryService.logEvent(WorkspaceSettingsActivityNames.DetailSettings, {
                        name: "Load Workspace settings - end"
                    }), _this.workspaceInitializationError$ = _this.workspaceSettingsService.workspaceInitializationErrorMessage$.pipe((0, 
                    filter.h)(function(error) {
                        return !!error;
                    }), (0, tap.b)(function() {
                        return _this.showWorkspaceInitializationError$.next(!0);
                    })), _this.nameValidationError$ = _this.workspaceSettingsService.nameValidationErrorMessage$.pipe((0, 
                    filter.h)(function(error) {
                        return !!error;
                    }), (0, tap.b)(function() {
                        return _this.showNameValidationError$.next(!0);
                    })), _this.autoSaveError$ = _this.workspaceSettingsService.autoSaveErrorMessage$.pipe((0, 
                    filter.h)(function(error) {
                        return !!error;
                    }), (0, tap.b)(function() {
                        return _this.showAutoSaveError$.next(!0);
                    })));
                });
            }, WorkspaceSettingsGeneralComponent.prototype.dismissWorkspaceInitializationError = function() {
                this.showWorkspaceInitializationError$.next(!1);
            }, WorkspaceSettingsGeneralComponent.prototype.dismissNameValidationError = function() {
                this.showNameValidationError$.next(!1);
            }, WorkspaceSettingsGeneralComponent.prototype.dismissAutoSaveError = function() {
                this.showAutoSaveError$.next(!1);
            }, WorkspaceSettingsGeneralComponent.prototype.getErrorMessageBarViewModel = function(message) {
                return {
                    bannerType: 1,
                    allowDismiss: !0,
                    isRoundedCorners: !0,
                    message
                };
            }, WorkspaceSettingsGeneralComponent.prototype.onCloseSettings = function() {
                this.closeSettings.emit();
            }, WorkspaceSettingsGeneralComponent.\u0275fac = function(t) {
                return new (t || WorkspaceSettingsGeneralComponent)(core["\u0275\u0275directiveInject"](tri_workspace_settings.X), core["\u0275\u0275directiveInject"](WorkspaceSettingsTelemetryService));
            }, WorkspaceSettingsGeneralComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: WorkspaceSettingsGeneralComponent,
                selectors: [ [ "tri-workspace-settings-general" ] ],
                inputs: {
                    userPicker: "userPicker"
                },
                outputs: {
                    closeSettings: "closeSettings"
                },
                standalone: !0,
                features: [ core["\u0275\u0275StandaloneFeature"] ],
                decls: 13,
                vars: 21,
                consts: [ [ 4, "ngIf" ], [ 3, "viewModel", "hideMessageBar", 4, "ngIf" ], [ 1, "tri-flex", "tri-items-center", "tri-justify-center", "tri-h-full" ], [ 3, "viewModel", "hideMessageBar" ], [ 1, "tab-title", "tri-title3" ], [ "sectionNameLocKey", "About" ], [ "sectionNameLocKey", "UsersNotifications_BadgeTooltip" ], [ 3, "userPicker" ], [ "sectionNameLocKey", "OneDrive" ], [ "sectionNameLocKey", "Manage_Tooltip", 4, "ngIf" ], [ "sectionNameLocKey", "Manage_Tooltip" ], [ 3, "closeSettings" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275template"](0, WorkspaceSettingsGeneralComponent_ng_container_0_Template, 2, 0, "ng-container", 0), 
                    core["\u0275\u0275pipe"](1, "async"), core["\u0275\u0275template"](2, WorkspaceSettingsGeneralComponent_tri_message_bar_2_Template, 2, 3, "tri-message-bar", 1), 
                    core["\u0275\u0275pipe"](3, "async"), core["\u0275\u0275pipe"](4, "async"), core["\u0275\u0275template"](5, WorkspaceSettingsGeneralComponent_tri_message_bar_5_Template, 2, 3, "tri-message-bar", 1), 
                    core["\u0275\u0275pipe"](6, "async"), core["\u0275\u0275pipe"](7, "async"), core["\u0275\u0275template"](8, WorkspaceSettingsGeneralComponent_tri_message_bar_8_Template, 2, 3, "tri-message-bar", 1), 
                    core["\u0275\u0275pipe"](9, "async"), core["\u0275\u0275pipe"](10, "async"), core["\u0275\u0275template"](11, WorkspaceSettingsGeneralComponent_ng_container_11_Template, 11, 6, "ng-container", 0), 
                    core["\u0275\u0275pipe"](12, "async")), 2 & rf && (core["\u0275\u0275property"]("ngIf", !1 === core["\u0275\u0275pipeBind1"](1, 5, ctx.initialized$)), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", !!core["\u0275\u0275pipeBind1"](3, 7, ctx.workspaceInitializationError$) && core["\u0275\u0275pipeBind1"](4, 9, ctx.showWorkspaceInitializationError$)), 
                    core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngIf", !!core["\u0275\u0275pipeBind1"](6, 11, ctx.nameValidationError$) && core["\u0275\u0275pipeBind1"](7, 13, ctx.showNameValidationError$)), 
                    core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngIf", !!core["\u0275\u0275pipeBind1"](9, 15, ctx.autoSaveError$) && core["\u0275\u0275pipeBind1"](10, 17, ctx.showAutoSaveError$)), 
                    core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](12, 19, ctx.initialized$)));
                },
                dependencies: [ WorkspaceSettingsGeneralAboutComponent, WorkspaceSettingsGeneralManageComponent, WorkspaceSettingsGeneralNotificationsComponent, WorkspaceSettingsGeneralOneDriveComponent, WorkspaceSettingsSectionDividerComponent, common.NgIf, tri_message_bar.I, tri_message_bar_component.h, localization_module.Y, localize_pipe.Y, telemetry_module.l, tri_spinner_module.d, tri_spinner_component.D, common.AsyncPipe ],
                styles: [ "[_nghost-%COMP%]     .general-settings-input, [_nghost-%COMP%]     .general-settings-textarea{resize:none;font-size:14px;font-family:var(--fontFamilyBase);line-height:20px;padding:5px 12px;box-sizing:border-box;border-radius:4px;outline:none;border:1px solid var(--colorNeutralStroke1)}[_nghost-%COMP%]     .general-settings-input:not([disabled]), [_nghost-%COMP%]     .general-settings-textarea:not([disabled]){border-bottom:1px solid var(--globalColorGrey38)}[_nghost-%COMP%]     .general-settings-input:not([disabled]):focus-visible, [_nghost-%COMP%]     .general-settings-textarea:not([disabled]):focus-visible{border-bottom:2px solid var(--globalColorBrand80)}[_nghost-%COMP%]     .general-settings-input[disabled], [_nghost-%COMP%]     .general-settings-textarea[disabled]{border:1px solid var(--colorNeutralStroke2);background-color:var(--colorNeutralBackgroundDisabled);color:var(--colorNeutralForegroundDisabled)}[_nghost-%COMP%]     .general-settings-input[disabled]::placeholder, [_nghost-%COMP%]     .general-settings-textarea[disabled]::placeholder{color:var(--colorNeutralForegroundDisabled, #bdbdbd)}[_nghost-%COMP%]     .general-settings-input.has-error, [_nghost-%COMP%]     .general-settings-textarea.has-error{border:1px solid var(--colorPaletteRedForeground1)}[_nghost-%COMP%]     .email-list-input-container emails-list-modern{flex-grow:1}[_nghost-%COMP%]     .email-list-input-container .mat-form-field.emails-list{border-radius:4px;outline:none;border:1px solid var(--colorNeutralStroke1);border-bottom:1px solid var(--globalColorGrey38)}[_nghost-%COMP%]     .email-list-input-container .mat-form-field.emails-list:hover{border:1px solid var(--colorNeutralStroke1);border-bottom:1px solid var(--globalColorGrey38)}[_nghost-%COMP%]     .email-list-input-container .mat-form-field.emails-list:focus-visible, [_nghost-%COMP%]     .email-list-input-container .mat-form-field.emails-list:focus-within, [_nghost-%COMP%]     .email-list-input-container .mat-form-field.emails-list:focus{border:1px solid var(--colorNeutralStroke1);border-bottom:2px solid var(--globalColorBrand80)}[_nghost-%COMP%]     .email-list-input-container emails-list-modern.invalid .emails-list{border:1px solid var(--colorPaletteRedForeground1)}[_nghost-%COMP%]     .email-list-input-container emails-list-modern.disabled .emails-list{border:1px solid var(--colorNeutralStroke2);background-color:var(--colorNeutralBackgroundDisabled)}[_nghost-%COMP%]     .email-list-input-container emails-list-modern.disabled .emails-list:hover{border:1px solid var(--colorNeutralStroke2)}[_nghost-%COMP%]     .email-list-input-container emails-list-modern.disabled .emails-list input::placeholder{color:var(--colorNeutralForegroundDisabled, #bdbdbd)}[_nghost-%COMP%]     .email-list-input-container input, [_nghost-%COMP%]     .email-list-input-container .chip-list{padding:6px 10px}[_nghost-%COMP%]     .email-list-input-container message-banner{margin-bottom:0}[_nghost-%COMP%]     .email-list-input-container message-banner .message-banner.message-banner-error{color:var(--colorPaletteRedForeground1);padding:4px 0 0;background-color:unset;align-items:center}[_nghost-%COMP%]     .email-list-input-container message-banner .message-banner-icon{margin-right:4px!important;background:var(--colorPaletteRedForeground1);color:#fff;display:flex;align-items:center;justify-content:center;height:11px;width:11px;border-radius:100%}" ],
                changeDetection: 0
            }), WorkspaceSettingsGeneralComponent;
        }(), AzureConnectionResourceType = function(AzureConnectionResourceType) {
            return AzureConnectionResourceType[AzureConnectionResourceType.AdlsStorage = 0] = "AdlsStorage", 
            AzureConnectionResourceType[AzureConnectionResourceType.LogAnalytics = 1] = "LogAnalytics", 
            AzureConnectionResourceType;
        }({}), of = __webpack_require__(11547), merge = __webpack_require__(63057), map = __webpack_require__(14172), startWith = __webpack_require__(22318), v4 = __webpack_require__(11105), ConfigurationContentType = function(ConfigurationContentType) {
            return ConfigurationContentType.NotConfigured = "not-configured", ConfigurationContentType.EditConfiguration = "edit-configuration", 
            ConfigurationContentType.ShowConfiguration = "show-configuration", ConfigurationContentType;
        }({}), EditConfigurationType = function(EditConfigurationType) {
            return EditConfigurationType.Default = "default", EditConfigurationType.Custom = "custom", 
            EditConfigurationType;
        }({}), tri_search_box_component = __webpack_require__(89237), tri_dropdown_component = __webpack_require__(20551), tri_dropdown_item_component = __webpack_require__(64716), tri_dropdown_item_menu_directive = __webpack_require__(85721);
        function WorkspaceSettingsAzureConnectionsConfigurationComponent_tri_message_bar_0_Template(rf, ctx) {
            if (1 & rf) {
                var _r9 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "tri-message-bar", 8), core["\u0275\u0275listener"]("hideMessageBar", function() {
                    core["\u0275\u0275restoreView"](_r9);
                    var ctx_r8 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r8.dismissServerMessageBar());
                }), core["\u0275\u0275pipe"](1, "async"), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("viewModel", ctx_r0.getServerMessageBarViewModel(core["\u0275\u0275pipeBind1"](1, 1, ctx_r0.serverMessageBarModel$)));
            }
        }
        function WorkspaceSettingsAzureConnectionsConfigurationComponent_div_7_Template(rf, ctx) {
            if (1 & rf) {
                var _r11 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div", 9)(1, "div", 10), core["\u0275\u0275text"](2), 
                core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](4, "div", 11)(5, "div")(6, "div", 12), 
                core["\u0275\u0275text"](7), core["\u0275\u0275pipe"](8, "localize"), core["\u0275\u0275elementEnd"](), 
                core["\u0275\u0275elementStart"](9, "div", 13), core["\u0275\u0275text"](10), core["\u0275\u0275pipe"](11, "localize"), 
                core["\u0275\u0275elementEnd"]()()(), core["\u0275\u0275elementStart"](12, "div", 14)(13, "button", 15), 
                core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r11);
                    var ctx_r10 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r10.editConfiguration());
                }), core["\u0275\u0275text"](14), core["\u0275\u0275pipe"](15, "localize"), core["\u0275\u0275elementEnd"]()()();
            }
            if (2 & rf) {
                var ctx_r1 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](3, 4, ctx_r1.resourceConnector.collapsibeSectionHeader)), 
                core["\u0275\u0275advance"](5), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](8, 6, "Status"), ""), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](11, 8, "Not_Configured"), " "), 
                core["\u0275\u0275advance"](4), core["\u0275\u0275textInterpolate1"]("", core["\u0275\u0275pipeBind1"](15, 10, "Configure"), " ");
            }
        }
        function WorkspaceSettingsAzureConnectionsConfigurationComponent_div_8_ng_container_5_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275elementContainer"](0);
        }
        function WorkspaceSettingsAzureConnectionsConfigurationComponent_div_8_button_7_tri_spinner_3_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "tri-spinner");
        }
        function WorkspaceSettingsAzureConnectionsConfigurationComponent_div_8_button_7_Template(rf, ctx) {
            if (1 & rf) {
                var _r17 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "button", 20), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r17);
                    var ctx_r16 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r16.connectResource());
                }), core["\u0275\u0275pipe"](1, "async"), core["\u0275\u0275pipe"](2, "async"), 
                core["\u0275\u0275template"](3, WorkspaceSettingsAzureConnectionsConfigurationComponent_div_8_button_7_tri_spinner_3_Template, 1, 0, "tri-spinner", 21), 
                core["\u0275\u0275pipe"](4, "async"), core["\u0275\u0275text"](5), core["\u0275\u0275pipe"](6, "localize"), 
                core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r13 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275property"]("disabled", !((ctx_r13.selectedSubscription && ctx_r13.selectedResourceGroup && ctx_r13.selectedResource || core["\u0275\u0275pipeBind1"](1, 3, ctx_r13.editConfigurationType$) === ctx_r13.EditConfigurationType.Default) && !0 !== core["\u0275\u0275pipeBind1"](2, 5, ctx_r13.saveInProgress$) && ctx_r13.isWorkspaceAdmin)), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngIf", !0 === core["\u0275\u0275pipeBind1"](4, 7, ctx_r13.saveInProgress$)), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](6, 9, "PBI_Button_Label_Save"), " ");
            }
        }
        function WorkspaceSettingsAzureConnectionsConfigurationComponent_div_8_button_9_Template(rf, ctx) {
            if (1 & rf) {
                var _r19 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "button", 22), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r19);
                    var ctx_r18 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r18.cancelConnect());
                }), core["\u0275\u0275pipe"](1, "async"), core["\u0275\u0275text"](2), core["\u0275\u0275pipe"](3, "localize"), 
                core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r14 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275property"]("disabled", !0 === core["\u0275\u0275pipeBind1"](1, 2, ctx_r14.saveInProgress$)), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](3, 4, "Cancel_ButtonText"), " ");
            }
        }
        function WorkspaceSettingsAzureConnectionsConfigurationComponent_div_8_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 9)(1, "div", 16), core["\u0275\u0275text"](2), 
            core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](4, "div", 11), 
            core["\u0275\u0275template"](5, WorkspaceSettingsAzureConnectionsConfigurationComponent_div_8_ng_container_5_Template, 1, 0, "ng-container", 17), 
            core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](6, "div", 14), 
            core["\u0275\u0275template"](7, WorkspaceSettingsAzureConnectionsConfigurationComponent_div_8_button_7_Template, 7, 11, "button", 18), 
            core["\u0275\u0275pipe"](8, "async"), core["\u0275\u0275template"](9, WorkspaceSettingsAzureConnectionsConfigurationComponent_div_8_button_9_Template, 4, 6, "button", 19), 
            core["\u0275\u0275pipe"](10, "async"), core["\u0275\u0275elementEnd"]()()), 2 & rf) {
                var ctx_r2 = core["\u0275\u0275nextContext"](), _r6 = core["\u0275\u0275reference"](13);
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](3, 4, ctx_r2.resourceConnector.collapsibeSectionHeader)), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngTemplateOutlet", _r6), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", void 0 === core["\u0275\u0275pipeBind1"](8, 6, ctx_r2.connectedResource$)), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", void 0 === core["\u0275\u0275pipeBind1"](10, 8, ctx_r2.connectedResource$));
            }
        }
        function WorkspaceSettingsAzureConnectionsConfigurationComponent_div_9_ng_container_5_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275elementContainer"](0);
        }
        function WorkspaceSettingsAzureConnectionsConfigurationComponent_div_9_tri_spinner_11_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "tri-spinner");
        }
        var configuration_component_c0 = function(a0) {
            return {
                $implicit: a0
            };
        };
        function WorkspaceSettingsAzureConnectionsConfigurationComponent_div_9_Template(rf, ctx) {
            if (1 & rf) {
                var _r23 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div", 9)(1, "div", 10), core["\u0275\u0275text"](2), 
                core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](4, "div", 11), 
                core["\u0275\u0275template"](5, WorkspaceSettingsAzureConnectionsConfigurationComponent_div_9_ng_container_5_Template, 1, 0, "ng-container", 23), 
                core["\u0275\u0275pipe"](6, "async"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](7, "div", 14)(8, "button", 20), 
                core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r23);
                    var ctx_r22 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r22.disconnectResource());
                }), core["\u0275\u0275pipe"](9, "async"), core["\u0275\u0275pipe"](10, "async"), 
                core["\u0275\u0275template"](11, WorkspaceSettingsAzureConnectionsConfigurationComponent_div_9_tri_spinner_11_Template, 1, 0, "tri-spinner", 21), 
                core["\u0275\u0275pipe"](12, "async"), core["\u0275\u0275text"](13), core["\u0275\u0275pipe"](14, "localize"), 
                core["\u0275\u0275elementEnd"]()()();
            }
            if (2 & rf) {
                var ctx_r3 = core["\u0275\u0275nextContext"](), _r4 = core["\u0275\u0275reference"](11);
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](3, 8, "Storage_Configuration")), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngTemplateOutlet", _r4)("ngTemplateOutletContext", core["\u0275\u0275pureFunction1"](20, configuration_component_c0, core["\u0275\u0275pipeBind1"](6, 10, ctx_r3.connectedResource$))), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275classProp"]("is-disabled", !0 === core["\u0275\u0275pipeBind1"](9, 12, ctx_r3.saveInProgress$) || !ctx_r3.isWorkspaceAdmin), 
                core["\u0275\u0275property"]("disabled", !0 === core["\u0275\u0275pipeBind1"](10, 14, ctx_r3.saveInProgress$) || !ctx_r3.isWorkspaceAdmin), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngIf", !0 === core["\u0275\u0275pipeBind1"](12, 16, ctx_r3.saveInProgress$)), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](14, 18, "BYOResources_Disconnect_Button_Workspace"), " ");
            }
        }
        function WorkspaceSettingsAzureConnectionsConfigurationComponent_ng_template_10_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div")(1, "div")(2, "div", 12), 
            core["\u0275\u0275text"](3), core["\u0275\u0275pipe"](4, "localize"), core["\u0275\u0275elementEnd"](), 
            core["\u0275\u0275elementStart"](5, "div", 13), core["\u0275\u0275text"](6), core["\u0275\u0275elementEnd"]()(), 
            core["\u0275\u0275elementStart"](7, "div")(8, "div", 12), core["\u0275\u0275text"](9), 
            core["\u0275\u0275pipe"](10, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](11, "div", 13), 
            core["\u0275\u0275text"](12), core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementStart"](13, "div")(14, "div", 12), 
            core["\u0275\u0275text"](15), core["\u0275\u0275pipe"](16, "localize"), core["\u0275\u0275elementEnd"](), 
            core["\u0275\u0275elementStart"](17, "div", 13), core["\u0275\u0275text"](18), core["\u0275\u0275elementEnd"]()()()), 
            2 & rf) {
                var data_r24 = ctx.$implicit, ctx_r5 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](4, 6, "Subscription"), ""), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"](" ", (null == data_r24 ? null : data_r24.subscriptionId) || "\u2014", ""), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](10, 8, "BYOResources_Connect_ResourceGroup"), ""), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"](" ", (null == data_r24 ? null : data_r24.resourceGroup) || "\u2014", ""), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](16, 10, ctx_r5.resourceConnector.resourceLabel), ""), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"](" ", (null == data_r24 ? null : data_r24.resourceName) || "\u2014", "");
            }
        }
        function WorkspaceSettingsAzureConnectionsConfigurationComponent_ng_template_12_tri_radio_group_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r29 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "tri-radio-group")(1, "tri-radio-button", 26), 
                core["\u0275\u0275listener"]("change", function($event) {
                    core["\u0275\u0275restoreView"](_r29);
                    var ctx_r28 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r28.selectEditConfigurationType($event, ctx_r28.EditConfigurationType.Default));
                }), core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275pipe"](3, "async"), 
                core["\u0275\u0275elementStart"](4, "label", 27), core["\u0275\u0275text"](5), core["\u0275\u0275pipe"](6, "localize"), 
                core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementStart"](7, "tri-radio-button", 28), 
                core["\u0275\u0275listener"]("change", function($event) {
                    core["\u0275\u0275restoreView"](_r29);
                    var ctx_r30 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r30.selectEditConfigurationType($event, ctx_r30.EditConfigurationType.Custom));
                }), core["\u0275\u0275pipe"](8, "async"), core["\u0275\u0275elementStart"](9, "label", 29), 
                core["\u0275\u0275text"](10), core["\u0275\u0275pipe"](11, "localize"), core["\u0275\u0275elementEnd"]()()();
            }
            if (2 & rf) {
                var ctx_r25 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("disabled", !ctx_r25.canChooseDefault || !0 === core["\u0275\u0275pipeBind1"](2, 7, ctx_r25.saveInProgress$))("value", ctx_r25.EditConfigurationType.Default)("checked", core["\u0275\u0275pipeBind1"](3, 9, ctx_r25.editConfigurationType$) === ctx_r25.EditConfigurationType.Default), 
                core["\u0275\u0275advance"](4), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](6, 11, "BYOResources_Connect_Default"), ""), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("checked", core["\u0275\u0275pipeBind1"](8, 13, ctx_r25.editConfigurationType$) === ctx_r25.EditConfigurationType.Custom)("value", ctx_r25.EditConfigurationType.Custom), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](11, 15, "BYOResources_Connect_Custom"), "");
            }
        }
        function WorkspaceSettingsAzureConnectionsConfigurationComponent_ng_template_12_tri_message_bar_2_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275element"](0, "tri-message-bar", 30), core["\u0275\u0275pipe"](1, "localize")), 
            2 & rf) {
                var ctx_r26 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275property"]("viewModel", ctx_r26.getErrorMessageBarViewModel(core["\u0275\u0275pipeBind1"](1, 1, ctx_r26.resourceConnector.notAllowedWarningMessage)));
            }
        }
        function WorkspaceSettingsAzureConnectionsConfigurationComponent_ng_template_12_ng_container_4_div_2_ng_container_1_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275elementContainer"](0);
        }
        function WorkspaceSettingsAzureConnectionsConfigurationComponent_ng_template_12_ng_container_4_div_2_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div"), core["\u0275\u0275template"](1, WorkspaceSettingsAzureConnectionsConfigurationComponent_ng_template_12_ng_container_4_div_2_ng_container_1_Template, 1, 0, "ng-container", 23), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r31 = core["\u0275\u0275nextContext"](3), _r4 = core["\u0275\u0275reference"](11);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngTemplateOutlet", _r4)("ngTemplateOutletContext", core["\u0275\u0275pureFunction1"](2, configuration_component_c0, ctx_r31.tenantResource));
            }
        }
        function WorkspaceSettingsAzureConnectionsConfigurationComponent_ng_template_12_ng_container_4_div_3_tri_message_bar_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r44 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "tri-message-bar", 8), core["\u0275\u0275listener"]("hideMessageBar", function() {
                    core["\u0275\u0275restoreView"](_r44);
                    var ctx_r43 = core["\u0275\u0275nextContext"](4);
                    return core["\u0275\u0275resetView"](ctx_r43.dismissFetchError());
                }), core["\u0275\u0275pipe"](1, "async"), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var tmp_0_0, ctx_r34 = core["\u0275\u0275nextContext"](4);
                core["\u0275\u0275property"]("viewModel", null !== (tmp_0_0 = core["\u0275\u0275pipeBind1"](1, 1, ctx_r34.fetchErrorMessageBarModel$)) && void 0 !== tmp_0_0 ? tmp_0_0 : void 0);
            }
        }
        function WorkspaceSettingsAzureConnectionsConfigurationComponent_ng_template_12_ng_container_4_div_3_tri_dropdown_item_19_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "tri-dropdown-item", 43), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var sub_r45 = ctx.$implicit;
                core["\u0275\u0275property"]("value", sub_r45), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275textInterpolate2"]("", sub_r45.text, " (", sub_r45.key, ") ");
            }
        }
        function WorkspaceSettingsAzureConnectionsConfigurationComponent_ng_template_12_ng_container_4_div_3_tri_spinner_20_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "tri-spinner", 44);
        }
        function WorkspaceSettingsAzureConnectionsConfigurationComponent_ng_template_12_ng_container_4_div_3_tri_status_indicator_22_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "tri-status-indicator", 45)(1, "span"), 
            core["\u0275\u0275text"](2), core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementStart"](4, "tri-link", 46), 
            core["\u0275\u0275text"](5), core["\u0275\u0275pipe"](6, "localize"), core["\u0275\u0275elementEnd"]()()()), 
            2 & rf) {
                var ctx_r37 = core["\u0275\u0275nextContext"](4);
                core["\u0275\u0275property"]("statusIndicatorType", ctx_r37.StatusIndicatorType.Error), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"]("", core["\u0275\u0275pipeBind1"](3, 5, ctx_r37.resourceConnector.noSubscriptionsMessage), " "), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("external", !0)("href", ctx_r37.resourceConnector.noSubscriptionLearnMoreLink), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](6, 7, "LearnMore"), " ");
            }
        }
        function WorkspaceSettingsAzureConnectionsConfigurationComponent_ng_template_12_ng_container_4_div_3_tri_dropdown_item_41_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "tri-dropdown-item", 43), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var resGroup_r46 = ctx.$implicit;
                core["\u0275\u0275property"]("value", resGroup_r46), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275textInterpolate1"]("", resGroup_r46.text, " ");
            }
        }
        function WorkspaceSettingsAzureConnectionsConfigurationComponent_ng_template_12_ng_container_4_div_3_tri_spinner_42_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "tri-spinner", 44);
        }
        function WorkspaceSettingsAzureConnectionsConfigurationComponent_ng_template_12_ng_container_4_div_3_tri_status_indicator_44_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "tri-status-indicator", 45)(1, "span"), 
            core["\u0275\u0275text"](2), core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementStart"](4, "tri-link", 46), 
            core["\u0275\u0275text"](5), core["\u0275\u0275pipe"](6, "localize"), core["\u0275\u0275elementEnd"]()()()), 
            2 & rf) {
                var ctx_r40 = core["\u0275\u0275nextContext"](4);
                core["\u0275\u0275property"]("statusIndicatorType", ctx_r40.StatusIndicatorType.Error), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"]("", core["\u0275\u0275pipeBind1"](3, 5, ctx_r40.resourceConnector.noResourceGroupMessage), " "), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("external", !0)("href", ctx_r40.resourceConnector.noResourceGroupLearnMoreLink), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](6, 7, "LearnMore"), " ");
            }
        }
        function WorkspaceSettingsAzureConnectionsConfigurationComponent_ng_template_12_ng_container_4_div_3_tri_dropdown_item_63_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "tri-dropdown-item", 43), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var res_r47 = ctx.$implicit;
                core["\u0275\u0275property"]("value", res_r47), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275textInterpolate1"]("", res_r47.text, " ");
            }
        }
        function WorkspaceSettingsAzureConnectionsConfigurationComponent_ng_template_12_ng_container_4_div_3_tri_spinner_64_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "tri-spinner", 44);
        }
        function WorkspaceSettingsAzureConnectionsConfigurationComponent_ng_template_12_ng_container_4_div_3_Template(rf, ctx) {
            if (1 & rf) {
                var _r49 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div", 33), core["\u0275\u0275template"](1, WorkspaceSettingsAzureConnectionsConfigurationComponent_ng_template_12_ng_container_4_div_3_tri_message_bar_1_Template, 2, 3, "tri-message-bar", 0), 
                core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275elementStart"](3, "div")(4, "div", 34), 
                core["\u0275\u0275text"](5), core["\u0275\u0275pipe"](6, "localize"), core["\u0275\u0275elementStart"](7, "span", 35), 
                core["\u0275\u0275text"](8, " *"), core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementStart"](9, "div", 36)(10, "tri-dropdown", 37), 
                core["\u0275\u0275listener"]("ngModelChange", function($event) {
                    core["\u0275\u0275restoreView"](_r49);
                    var ctx_r48 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r48.selectedSubscriptionDropdownOption = $event);
                })("valueChange", function($event) {
                    core["\u0275\u0275restoreView"](_r49);
                    var ctx_r50 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r50.onSubscriptionChange($event));
                }), core["\u0275\u0275pipe"](11, "async"), core["\u0275\u0275pipe"](12, "async"), 
                core["\u0275\u0275elementStart"](13, "tri-dropdown-trigger")(14, "div", 38), core["\u0275\u0275pipe"](15, "localize"), 
                core["\u0275\u0275text"](16), core["\u0275\u0275pipe"](17, "localize"), core["\u0275\u0275elementEnd"]()(), 
                core["\u0275\u0275elementStart"](18, "tri-search-box", 39), core["\u0275\u0275listener"]("value", function($event) {
                    core["\u0275\u0275restoreView"](_r49);
                    var ctx_r51 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r51.onSubscriptionsSearched($event));
                }), core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](19, WorkspaceSettingsAzureConnectionsConfigurationComponent_ng_template_12_ng_container_4_div_3_tri_dropdown_item_19_Template, 2, 3, "tri-dropdown-item", 40), 
                core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](20, WorkspaceSettingsAzureConnectionsConfigurationComponent_ng_template_12_ng_container_4_div_3_tri_spinner_20_Template, 1, 0, "tri-spinner", 41), 
                core["\u0275\u0275pipe"](21, "async"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](22, WorkspaceSettingsAzureConnectionsConfigurationComponent_ng_template_12_ng_container_4_div_3_tri_status_indicator_22_Template, 7, 9, "tri-status-indicator", 42), 
                core["\u0275\u0275pipe"](23, "async"), core["\u0275\u0275pipe"](24, "async"), core["\u0275\u0275elementEnd"](), 
                core["\u0275\u0275elementStart"](25, "div")(26, "div", 34), core["\u0275\u0275text"](27), 
                core["\u0275\u0275pipe"](28, "localize"), core["\u0275\u0275elementStart"](29, "span", 35), 
                core["\u0275\u0275text"](30, " *"), core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementStart"](31, "div", 36)(32, "tri-dropdown", 37), 
                core["\u0275\u0275listener"]("ngModelChange", function($event) {
                    core["\u0275\u0275restoreView"](_r49);
                    var ctx_r52 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r52.selectedResourceGroupDropdownOption = $event);
                })("valueChange", function($event) {
                    core["\u0275\u0275restoreView"](_r49);
                    var ctx_r53 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r53.onResourceGroupChange($event));
                }), core["\u0275\u0275pipe"](33, "async"), core["\u0275\u0275pipe"](34, "async"), 
                core["\u0275\u0275elementStart"](35, "tri-dropdown-trigger")(36, "div", 38), core["\u0275\u0275pipe"](37, "localize"), 
                core["\u0275\u0275text"](38), core["\u0275\u0275pipe"](39, "localize"), core["\u0275\u0275elementEnd"]()(), 
                core["\u0275\u0275elementStart"](40, "tri-search-box", 39), core["\u0275\u0275listener"]("value", function($event) {
                    core["\u0275\u0275restoreView"](_r49);
                    var ctx_r54 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r54.onResourceGroupsSearched($event));
                }), core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](41, WorkspaceSettingsAzureConnectionsConfigurationComponent_ng_template_12_ng_container_4_div_3_tri_dropdown_item_41_Template, 2, 2, "tri-dropdown-item", 40), 
                core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](42, WorkspaceSettingsAzureConnectionsConfigurationComponent_ng_template_12_ng_container_4_div_3_tri_spinner_42_Template, 1, 0, "tri-spinner", 41), 
                core["\u0275\u0275pipe"](43, "async"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](44, WorkspaceSettingsAzureConnectionsConfigurationComponent_ng_template_12_ng_container_4_div_3_tri_status_indicator_44_Template, 7, 9, "tri-status-indicator", 42), 
                core["\u0275\u0275pipe"](45, "async"), core["\u0275\u0275pipe"](46, "async"), core["\u0275\u0275elementEnd"](), 
                core["\u0275\u0275elementStart"](47, "div")(48, "div", 34), core["\u0275\u0275text"](49), 
                core["\u0275\u0275pipe"](50, "localize"), core["\u0275\u0275elementStart"](51, "span", 35), 
                core["\u0275\u0275text"](52, " *"), core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementStart"](53, "div", 36)(54, "tri-dropdown", 37), 
                core["\u0275\u0275listener"]("ngModelChange", function($event) {
                    core["\u0275\u0275restoreView"](_r49);
                    var ctx_r55 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r55.selectedResourceDropdownOption = $event);
                })("valueChange", function($event) {
                    core["\u0275\u0275restoreView"](_r49);
                    var ctx_r56 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r56.onResourceChange($event));
                }), core["\u0275\u0275pipe"](55, "async"), core["\u0275\u0275pipe"](56, "async"), 
                core["\u0275\u0275elementStart"](57, "tri-dropdown-trigger")(58, "div", 38), core["\u0275\u0275pipe"](59, "localize"), 
                core["\u0275\u0275text"](60), core["\u0275\u0275pipe"](61, "localize"), core["\u0275\u0275elementEnd"]()(), 
                core["\u0275\u0275elementStart"](62, "tri-search-box", 39), core["\u0275\u0275listener"]("value", function($event) {
                    core["\u0275\u0275restoreView"](_r49);
                    var ctx_r57 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r57.onResourcesSearched($event));
                }), core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](63, WorkspaceSettingsAzureConnectionsConfigurationComponent_ng_template_12_ng_container_4_div_3_tri_dropdown_item_63_Template, 2, 2, "tri-dropdown-item", 40), 
                core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](64, WorkspaceSettingsAzureConnectionsConfigurationComponent_ng_template_12_ng_container_4_div_3_tri_spinner_64_Template, 1, 0, "tri-spinner", 41), 
                core["\u0275\u0275pipe"](65, "async"), core["\u0275\u0275elementEnd"]()()();
            }
            if (2 & rf) {
                var tmp_2_0, tmp_11_0, tmp_14_0, tmp_15_0, tmp_20_0, tmp_23_0, tmp_24_0, ctx_r32 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](2, 27, ctx_r32.fetchErrorMessageBarModel$)), 
                core["\u0275\u0275advance"](4), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](6, 29, "Subscription"), ""), 
                core["\u0275\u0275advance"](5), core["\u0275\u0275property"]("options", ctx_r32.getDropdownOverlayOptions(null !== (tmp_2_0 = null == ctx_r32.allSubscriptionDropdownOptions ? null : ctx_r32.allSubscriptionDropdownOptions.length) && void 0 !== tmp_2_0 ? tmp_2_0 : 0))("ngModel", ctx_r32.selectedSubscriptionDropdownOption)("disabled", !0 === core["\u0275\u0275pipeBind1"](11, 31, ctx_r32.saveInProgress$) || !0 === core["\u0275\u0275pipeBind1"](12, 33, null == ctx_r32.fetchResourceStatus || null == ctx_r32.fetchResourceStatus.subscription ? null : ctx_r32.fetchResourceStatus.subscription.inProgress$) || !ctx_r32.isWorkspaceAdmin), 
                core["\u0275\u0275advance"](4), core["\u0275\u0275property"]("triTooltip", ctx_r32.selectedSubscriptionDropdownOption ? ctx_r32.selectedSubscriptionDropdownOption.text + " (" + (null == ctx_r32.selectedSubscriptionDropdownOption ? null : ctx_r32.selectedSubscriptionDropdownOption.key) + ")" : core["\u0275\u0275pipeBind1"](15, 35, "Trident_Workspace_Settings_Select_Subscription")), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", ctx_r32.selectedSubscriptionDropdownOption ? ctx_r32.selectedSubscriptionDropdownOption.text + " (" + (null == ctx_r32.selectedSubscriptionDropdownOption ? null : ctx_r32.selectedSubscriptionDropdownOption.key) + ")" : core["\u0275\u0275pipeBind1"](17, 37, "Trident_Workspace_Settings_Select_Subscription"), " "), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngForOf", ctx_r32.allSubscriptionDropdownOptions), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !0 === core["\u0275\u0275pipeBind1"](21, 39, null == ctx_r32.fetchResourceStatus || null == ctx_r32.fetchResourceStatus.subscription ? null : ctx_r32.fetchResourceStatus.subscription.inProgress$)), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", void 0 === core["\u0275\u0275pipeBind1"](23, 41, ctx_r32.connectedResource$) && 0 === ctx_r32.allSubscriptions.length && !0 !== core["\u0275\u0275pipeBind1"](24, 43, null == ctx_r32.fetchResourceStatus || null == ctx_r32.fetchResourceStatus.subscription ? null : ctx_r32.fetchResourceStatus.subscription.inProgress$)), 
                core["\u0275\u0275advance"](5), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](28, 45, "BYOResources_Connect_ResourceGroup"), ""), 
                core["\u0275\u0275advance"](5), core["\u0275\u0275property"]("options", ctx_r32.getDropdownOverlayOptions(null !== (tmp_11_0 = null == ctx_r32.allResourceGroupsDropdownOptions ? null : ctx_r32.allResourceGroupsDropdownOptions.length) && void 0 !== tmp_11_0 ? tmp_11_0 : 0))("ngModel", ctx_r32.selectedResourceGroupDropdownOption)("disabled", !ctx_r32.selectedSubscription || !0 === core["\u0275\u0275pipeBind1"](33, 47, ctx_r32.saveInProgress$) || !0 === core["\u0275\u0275pipeBind1"](34, 49, null == ctx_r32.fetchResourceStatus || null == ctx_r32.fetchResourceStatus.resourceGroup ? null : ctx_r32.fetchResourceStatus.resourceGroup.inProgress$) || !ctx_r32.isWorkspaceAdmin), 
                core["\u0275\u0275advance"](4), core["\u0275\u0275property"]("triTooltip", null !== (tmp_14_0 = null == ctx_r32.selectedResourceGroupDropdownOption ? null : ctx_r32.selectedResourceGroupDropdownOption.text) && void 0 !== tmp_14_0 ? tmp_14_0 : core["\u0275\u0275pipeBind1"](37, 51, "Trident_Workspace_Settings_Select_Resource_Group")), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", null !== (tmp_15_0 = null == ctx_r32.selectedResourceGroupDropdownOption ? null : ctx_r32.selectedResourceGroupDropdownOption.text) && void 0 !== tmp_15_0 ? tmp_15_0 : core["\u0275\u0275pipeBind1"](39, 53, "Trident_Workspace_Settings_Select_Resource_Group"), " "), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngForOf", ctx_r32.allResourceGroupsDropdownOptions), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !0 === core["\u0275\u0275pipeBind1"](43, 55, null == ctx_r32.fetchResourceStatus || null == ctx_r32.fetchResourceStatus.resourceGroup ? null : ctx_r32.fetchResourceStatus.resourceGroup.inProgress$)), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", void 0 === core["\u0275\u0275pipeBind1"](45, 57, ctx_r32.connectedResource$) && ctx_r32.selectedSubscription && 0 === ctx_r32.allResourceGroups.length && !0 !== core["\u0275\u0275pipeBind1"](46, 59, null == ctx_r32.fetchResourceStatus || null == ctx_r32.fetchResourceStatus.resourceGroup ? null : ctx_r32.fetchResourceStatus.resourceGroup.inProgress$)), 
                core["\u0275\u0275advance"](5), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](50, 61, ctx_r32.resourceConnector.resourceLabel), ""), 
                core["\u0275\u0275advance"](5), core["\u0275\u0275property"]("options", ctx_r32.getDropdownOverlayOptions(null !== (tmp_20_0 = null == ctx_r32.allResourcesDropdownOptions ? null : ctx_r32.allResourcesDropdownOptions.length) && void 0 !== tmp_20_0 ? tmp_20_0 : 0))("ngModel", ctx_r32.selectedResourceDropdownOption)("disabled", !ctx_r32.selectedSubscription || !ctx_r32.selectedResourceGroup || !0 === core["\u0275\u0275pipeBind1"](55, 63, ctx_r32.saveInProgress$) || !0 === core["\u0275\u0275pipeBind1"](56, 65, null == ctx_r32.fetchResourceStatus || null == ctx_r32.fetchResourceStatus.resource ? null : ctx_r32.fetchResourceStatus.resource.inProgress$) || !ctx_r32.isWorkspaceAdmin), 
                core["\u0275\u0275advance"](4), core["\u0275\u0275property"]("triTooltip", null !== (tmp_23_0 = null == ctx_r32.selectedResourceDropdownOption ? null : ctx_r32.selectedResourceDropdownOption.text) && void 0 !== tmp_23_0 ? tmp_23_0 : core["\u0275\u0275pipeBind1"](59, 67, ctx_r32.resourceConnector.resourcePickerPlaceholder)), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", null !== (tmp_24_0 = null == ctx_r32.selectedResourceDropdownOption ? null : ctx_r32.selectedResourceDropdownOption.text) && void 0 !== tmp_24_0 ? tmp_24_0 : core["\u0275\u0275pipeBind1"](61, 69, ctx_r32.resourceConnector.resourcePickerPlaceholder), " "), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngForOf", ctx_r32.allResourcesDropdownOptions), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !0 === core["\u0275\u0275pipeBind1"](65, 71, null == ctx_r32.fetchResourceStatus || null == ctx_r32.fetchResourceStatus.resource ? null : ctx_r32.fetchResourceStatus.resource.inProgress$));
            }
        }
        function WorkspaceSettingsAzureConnectionsConfigurationComponent_ng_template_12_ng_container_4_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0, 4), core["\u0275\u0275pipe"](1, "async"), 
            core["\u0275\u0275template"](2, WorkspaceSettingsAzureConnectionsConfigurationComponent_ng_template_12_ng_container_4_div_2_Template, 2, 4, "div", 31), 
            core["\u0275\u0275template"](3, WorkspaceSettingsAzureConnectionsConfigurationComponent_ng_template_12_ng_container_4_div_3_Template, 66, 73, "div", 32), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var ctx_r27 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275property"]("ngSwitch", core["\u0275\u0275pipeBind1"](1, 3, ctx_r27.editConfigurationType$)), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngSwitchCase", ctx_r27.EditConfigurationType.Default), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", ctx_r27.EditConfigurationType.Custom);
            }
        }
        function WorkspaceSettingsAzureConnectionsConfigurationComponent_ng_template_12_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div"), core["\u0275\u0275template"](1, WorkspaceSettingsAzureConnectionsConfigurationComponent_ng_template_12_tri_radio_group_1_Template, 12, 17, "tri-radio-group", 21), 
            core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](2, WorkspaceSettingsAzureConnectionsConfigurationComponent_ng_template_12_tri_message_bar_2_Template, 2, 3, "tri-message-bar", 24), 
            core["\u0275\u0275pipe"](3, "async"), core["\u0275\u0275template"](4, WorkspaceSettingsAzureConnectionsConfigurationComponent_ng_template_12_ng_container_4_Template, 4, 5, "ng-container", 25), 
            core["\u0275\u0275pipe"](5, "async")), 2 & rf) {
                var ctx_r7 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx_r7.isShowRadioGroup), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](3, 3, ctx_r7.editConfigurationType$) === ctx_r7.EditConfigurationType.Custom && !ctx_r7.canChooseCustom), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", ctx_r7.canChooseCustom || core["\u0275\u0275pipeBind1"](5, 5, ctx_r7.editConfigurationType$) === ctx_r7.EditConfigurationType.Default);
            }
        }
        var WorkspaceSettingsAzureConnectionsConfigurationComponent = function() {
            function WorkspaceSettingsAzureConnectionsConfigurationComponent(workspaceSettingsService, telemetryService, triLocalizationService) {
                this.workspaceSettingsService = workspaceSettingsService, this.telemetryService = telemetryService, 
                this.triLocalizationService = triLocalizationService, this.resourceConnector = {}, 
                this.isWorkspaceAdmin = !1, this.connectedResource$ = new BehaviorSubject.X(void 0), 
                this.configurationContent$ = new BehaviorSubject.X(ConfigurationContentType.EditConfiguration), 
                this.ConfigurationContentType = ConfigurationContentType, this.editConfigurationType$ = new BehaviorSubject.X(EditConfigurationType.Custom), 
                this.EditConfigurationType = EditConfigurationType, this.allSubscriptions = [], 
                this.allResourceGroups = [], this.allResources = [], this.allSubscriptionDropdownOptions = [], 
                this.allResourceGroupsDropdownOptions = [], this.allResourcesDropdownOptions = [], 
                this.subscriptionDropdownSearchText = "", this.resourceGroupDropdownSearchText = "", 
                this.resourceDropdownSearchText = "", this.saveInProgress$ = (0, of.of)(!1), this.updateResMsg$ = (0, 
                of.of)(""), this.serverMessageBarModel$ = new BehaviorSubject.X(void 0), this.fetchErrorMessageBarModel$ = new BehaviorSubject.X(void 0), 
                this.StatusIndicatorType = StatusIndicatorType, this.destroy$ = new Subject.xQ;
            }
            return WorkspaceSettingsAzureConnectionsConfigurationComponent.prototype.ngOnInit = function() {
                var _a, _b, _c, _this = this;
                this.isWorkspaceAdmin = this.workspaceSettingsService.isWorkspaceAdmin, this.tenantResource = this.workspaceSettingsService.getTenantResource(this.resourceConnector.resourceType), 
                this.saveInProgress$ = this.workspaceSettingsService.azureResourceApiInProgress[this.resourceConnector.resourceType], 
                this.fetchResourceStatus = this.workspaceSettingsService.azureResourcesFetchStatus[this.resourceConnector.resourceType], 
                (0, merge.T)(null === (_a = this.fetchResourceStatus) || void 0 === _a ? void 0 : _a.subscription.errorMessage$, null === (_b = this.fetchResourceStatus) || void 0 === _b ? void 0 : _b.resourceGroup.errorMessage$, null === (_c = this.fetchResourceStatus) || void 0 === _c ? void 0 : _c.resource.errorMessage$).pipe((0, 
                tap.b)(function(error) {
                    _this.fetchErrorMessageBarModel$.next({
                        bannerType: 1,
                        allowDismiss: !0,
                        isRoundedCorners: !0,
                        message: error
                    });
                })), this.isShowRadioGroup = this.resourceConnector.canSelectTenantResource, this.canChooseDefault = !!this.tenantResource && this.isWorkspaceAdmin, 
                this.canChooseCustom = !!this.resourceConnector && this.workspaceSettingsService.getFeatureSwitchState(this.resourceConnector.featureFlagToAllowResource), 
                this.updateResMsg$ = (0, merge.T)(this.workspaceSettingsService.azureConnectionsServiceErrorMessages[this.resourceConnector.resourceType].pipe((0, 
                filter.h)(function(error) {
                    return !!error;
                })), this.workspaceSettingsService.azureConnectionUpdateSuccess[this.resourceConnector.resourceType].pipe((0, 
                filter.h)(function(success) {
                    return !!success;
                }), (0, map.U)(function() {
                    return "";
                }))), (0, combineLatest.aj)([ this.updateResMsg$, this.saveInProgress$ ]).pipe((0, 
                takeUntil.R)(this.destroy$), (0, filter.h)(function(_a) {
                    return !_a[1];
                }), (0, map.U)(function(_a) {
                    var msg = _a[0];
                    return msg ? {
                        id: (0, v4.Z)(),
                        bannerType: 1,
                        message: msg
                    } : {
                        id: (0, v4.Z)(),
                        bannerType: 3,
                        message: _this.triLocalizationService.get("Sharing_EditDashboardUsersSuccess")
                    };
                })).subscribe(function(messageBarModel) {
                    _this.serverMessageBarModel$.next(messageBarModel);
                }), (0, combineLatest.aj)([ this.saveInProgress$, this.updateResMsg$.pipe((0, startWith.O)("")) ]).pipe((0, 
                takeUntil.R)(this.destroy$)).subscribe(function(_a) {
                    var inProgress = _a[0], error = _a[1], connectedResource = _this.workspaceSettingsService.getLinkedResource(_this.resourceConnector.resourceType), hasConnectedResource = !!(null == connectedResource ? void 0 : connectedResource.resourceName) || !!(null == connectedResource ? void 0 : connectedResource.resourceGroup) || !!(null == connectedResource ? void 0 : connectedResource.subscriptionId);
                    _this.connectedResource$.next(hasConnectedResource ? connectedResource : void 0), 
                    inProgress ? hasConnectedResource ? _this.configurationContent$.next(ConfigurationContentType.ShowConfiguration) : _this.editConfiguration(_this.workspaceSettingsService.azureConnectionEditConfigurationType[_this.resourceConnector.resourceType]) : (_this.clearCurrentResource(), 
                    error ? _this.editConfiguration() : _this.configurationContent$.next(hasConnectedResource ? ConfigurationContentType.ShowConfiguration : ConfigurationContentType.NotConfigured));
                });
            }, WorkspaceSettingsAzureConnectionsConfigurationComponent.prototype.ngOnDestroy = function() {
                this.destroy$.next(), this.destroy$.complete();
            }, WorkspaceSettingsAzureConnectionsConfigurationComponent.prototype.connectResource = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.editConfigurationType$.pipe((0, take.q)(1)).toPromise() ];

                          case 1:
                            return _a.sent() === EditConfigurationType.Default ? this.workspaceSettingsService.connectTenantResource(this.resourceConnector.resourceType) : this.workspaceSettingsService.connectAzureResource(this.resourceConnector.resourceType), 
                            this.telemetryService.logEvent("Connect ".concat(this.resourceConnector.resourceType)), 
                            [ 2 ];
                        }
                    });
                });
            }, WorkspaceSettingsAzureConnectionsConfigurationComponent.prototype.cancelConnect = function() {
                this.clearCurrentResource(), this.configurationContent$.next(ConfigurationContentType.NotConfigured);
            }, WorkspaceSettingsAzureConnectionsConfigurationComponent.prototype.disconnectResource = function() {
                this.workspaceSettingsService.disconnectAzureResource(this.resourceConnector.resourceType, this.resourceConnector.disconnectionPromptMessage);
            }, WorkspaceSettingsAzureConnectionsConfigurationComponent.prototype.editConfiguration = function(editConfigurationType) {
                this.initializePickerOptions(), this.configurationContent$.next(ConfigurationContentType.EditConfiguration), 
                editConfigurationType ? this.editConfigurationType$.next(editConfigurationType) : this.isShowRadioGroup && this.canChooseDefault ? (this.editConfigurationType$.next(EditConfigurationType.Default), 
                this.workspaceSettingsService.updateAzureConnectionEditConfigurationType(this.resourceConnector.resourceType, EditConfigurationType.Default)) : (this.editConfigurationType$.next(EditConfigurationType.Custom), 
                this.workspaceSettingsService.updateAzureConnectionEditConfigurationType(this.resourceConnector.resourceType, EditConfigurationType.Custom));
            }, WorkspaceSettingsAzureConnectionsConfigurationComponent.prototype.selectEditConfigurationType = function(selected, value) {
                selected && (this.workspaceSettingsService.updateAzureConnectionEditConfigurationType(this.resourceConnector.resourceType, value), 
                this.editConfigurationType$.next(value));
            }, WorkspaceSettingsAzureConnectionsConfigurationComponent.prototype.getErrorMessageBarViewModel = function(message) {
                return {
                    bannerType: 1,
                    allowDismiss: !1,
                    isRoundedCorners: !0,
                    message
                };
            }, WorkspaceSettingsAzureConnectionsConfigurationComponent.prototype.getServerMessageBarViewModel = function(messageBarModel) {
                if (messageBarModel) return {
                    id: messageBarModel.id,
                    bannerType: messageBarModel.bannerType,
                    allowDismiss: !0,
                    isRoundedCorners: !0,
                    message: messageBarModel.message
                };
            }, WorkspaceSettingsAzureConnectionsConfigurationComponent.prototype.dismissServerMessageBar = function() {
                this.serverMessageBarModel$.next(void 0);
            }, WorkspaceSettingsAzureConnectionsConfigurationComponent.prototype.dismissFetchError = function() {
                this.fetchErrorMessageBarModel$.next(void 0);
            }, WorkspaceSettingsAzureConnectionsConfigurationComponent.prototype.getDropdownOverlayOptions = function(optionCount) {
                return {
                    dropdownHeight: 30 * Math.max(Math.min(optionCount, 12), 1) + 34
                };
            }, WorkspaceSettingsAzureConnectionsConfigurationComponent.prototype.onSubscriptionChange = function(subscriptionDropdownOption) {
                var _a, _b, _c, _this = this;
                this.selectedSubscription = this.allSubscriptions.find(function(sub) {
                    return sub.subscriptionId === (null == subscriptionDropdownOption ? void 0 : subscriptionDropdownOption.key);
                }), this.workspaceSettingsService.updateCurrentResource(this.resourceConnector.resourceType, {
                    azureTenantObjectId: null === (_a = this.selectedSubscription) || void 0 === _a ? void 0 : _a.azureTenantObjectId,
                    subscriptionId: null === (_b = this.selectedSubscription) || void 0 === _b ? void 0 : _b.subscriptionId
                }), this.selectedResourceGroup = void 0, this.selectedResource = void 0, this.selectedResourceGroupDropdownOption = void 0, 
                this.selectedResourceDropdownOption = void 0, this.selectedSubscription && this.workspaceSettingsService.getResourceGroupsWithResourceTypeForAzureSubscription(this.resourceConnector.resourceType, (null === (_c = this.selectedSubscription) || void 0 === _c ? void 0 : _c.subscriptionId) || "", !0).then(function(resourceGroups) {
                    _this.allResourceGroups = resourceGroups, _this.createResourceGroupDropdownOptions();
                });
            }, WorkspaceSettingsAzureConnectionsConfigurationComponent.prototype.onResourceGroupChange = function(resourceGroupDropdownOption) {
                var _a, _b, _c, _d, _e, _this = this;
                this.selectedResourceGroup = this.allResourceGroups.find(function(rg) {
                    return rg.name === (null == resourceGroupDropdownOption ? void 0 : resourceGroupDropdownOption.text);
                }), this.workspaceSettingsService.updateCurrentResource(this.resourceConnector.resourceType, {
                    azureTenantObjectId: null === (_a = this.selectedSubscription) || void 0 === _a ? void 0 : _a.azureTenantObjectId,
                    subscriptionId: null === (_b = this.selectedSubscription) || void 0 === _b ? void 0 : _b.subscriptionId,
                    resourceGroup: null === (_c = this.selectedResourceGroup) || void 0 === _c ? void 0 : _c.name
                }), this.selectedResource = void 0, this.selectedResourceDropdownOption = void 0, 
                this.selectedSubscription && this.selectedResourceGroup && this.workspaceSettingsService.getAzureResources(this.resourceConnector.resourceType, (null === (_d = this.selectedSubscription) || void 0 === _d ? void 0 : _d.subscriptionId) || "", (null === (_e = this.selectedResourceGroup) || void 0 === _e ? void 0 : _e.name) || "").then(function(resources) {
                    _this.allResources = resources, _this.createResourcesDropdownOptions();
                });
            }, WorkspaceSettingsAzureConnectionsConfigurationComponent.prototype.onResourceChange = function(resourceDropdownOption) {
                var _a, _b, _c, _d;
                this.selectedResource = this.allResources.find(function(res) {
                    return res.name === (null == resourceDropdownOption ? void 0 : resourceDropdownOption.text);
                }), this.workspaceSettingsService.updateCurrentResource(this.resourceConnector.resourceType, {
                    azureTenantObjectId: null === (_a = this.selectedSubscription) || void 0 === _a ? void 0 : _a.azureTenantObjectId,
                    subscriptionId: null === (_b = this.selectedSubscription) || void 0 === _b ? void 0 : _b.subscriptionId,
                    resourceGroup: null === (_c = this.selectedResourceGroup) || void 0 === _c ? void 0 : _c.name,
                    resourceName: null === (_d = this.selectedResource) || void 0 === _d ? void 0 : _d.name
                });
            }, WorkspaceSettingsAzureConnectionsConfigurationComponent.prototype.onSubscriptionsSearched = function(searchText) {
                this.subscriptionDropdownSearchText = searchText, this.createSubscriptionDropdownOptions();
            }, WorkspaceSettingsAzureConnectionsConfigurationComponent.prototype.onResourceGroupsSearched = function(searchText) {
                this.resourceGroupDropdownSearchText = searchText, this.createResourceGroupDropdownOptions();
            }, WorkspaceSettingsAzureConnectionsConfigurationComponent.prototype.onResourcesSearched = function(searchText) {
                this.resourceDropdownSearchText = searchText, this.createResourcesDropdownOptions();
            }, WorkspaceSettingsAzureConnectionsConfigurationComponent.prototype.initializePickerOptions = function() {
                var _this = this, currentResource = this.workspaceSettingsService.getCurrentResource(this.resourceConnector.resourceType);
                this.workspaceSettingsService.getAzureSubscriptions().then(function(subs) {
                    if (_this.allSubscriptions = (0, tslib_es6.__spreadArray)([], subs, !0), _this.createSubscriptionDropdownOptions(), 
                    null == currentResource ? void 0 : currentResource.subscriptionId) {
                        var matchingSubIndex = _this.allSubscriptions.findIndex(function(sub) {
                            return sub.subscriptionId === currentResource.subscriptionId;
                        });
                        if (matchingSubIndex >= 0) {
                            var matchingSub = _this.allSubscriptions[matchingSubIndex];
                            _this.selectedSubscriptionDropdownOption = _this.allSubscriptionDropdownOptions[matchingSubIndex], 
                            _this.selectedSubscription = matchingSub, currentResource.resourceGroup && (_this.selectedResourceGroup = {
                                name: currentResource.resourceGroup,
                                subscriptionId: matchingSub.subscriptionId
                            }), currentResource.resourceName && (_this.selectedResource = {
                                id: currentResource.resourceName,
                                name: currentResource.resourceName,
                                subscriptionId: matchingSub.subscriptionId,
                                resourceGroup: currentResource.resourceGroup
                            });
                        }
                    }
                }), (null == currentResource ? void 0 : currentResource.subscriptionId) && (this.workspaceSettingsService.getResourceGroupsWithResourceTypeForAzureSubscription(this.resourceConnector.resourceType, currentResource.subscriptionId).then(function(resourceGroups) {
                    var _a;
                    _this.allResourceGroups = (0, tslib_es6.__spreadArray)([], resourceGroups, !0), 
                    _this.createResourceGroupDropdownOptions(), currentResource.resourceGroup && (_this.selectedResourceGroupDropdownOption = null === (_a = _this.allResourceGroupsDropdownOptions) || void 0 === _a ? void 0 : _a.find(function(opt) {
                        return opt.text === currentResource.resourceGroup;
                    }));
                }), currentResource.resourceGroup && this.workspaceSettingsService.getAzureResources(this.resourceConnector.resourceType, currentResource.subscriptionId, currentResource.resourceGroup).then(function(resources) {
                    var _a;
                    _this.allResources = (0, tslib_es6.__spreadArray)([], resources, !0), _this.createResourcesDropdownOptions(), 
                    currentResource.resourceName && (_this.selectedResourceDropdownOption = null === (_a = _this.allResourcesDropdownOptions) || void 0 === _a ? void 0 : _a.find(function(opt) {
                        return opt.text === currentResource.resourceName;
                    }));
                }));
            }, WorkspaceSettingsAzureConnectionsConfigurationComponent.prototype.createSubscriptionDropdownOptions = function() {
                var _this = this;
                this.allSubscriptionDropdownOptions = this.allSubscriptions.map(function(sub) {
                    return {
                        key: sub.subscriptionId,
                        text: sub.name
                    };
                }).filter(function(opt) {
                    var _a, _b, _c, _d;
                    return !_this.subscriptionDropdownSearchText || (null === (_b = null === (_a = opt.text) || void 0 === _a ? void 0 : _a.toLowerCase()) || void 0 === _b ? void 0 : _b.indexOf(_this.subscriptionDropdownSearchText.toLowerCase())) >= 0 || (null === (_d = null === (_c = opt.key) || void 0 === _c ? void 0 : _c.toLowerCase()) || void 0 === _d ? void 0 : _d.indexOf(_this.subscriptionDropdownSearchText.toLowerCase())) >= 0;
                });
            }, WorkspaceSettingsAzureConnectionsConfigurationComponent.prototype.createResourceGroupDropdownOptions = function() {
                var _this = this;
                this.allResourceGroupsDropdownOptions = this.allResourceGroups.map(function(rg) {
                    return {
                        key: rg.name,
                        text: rg.name
                    };
                }).filter(function(opt) {
                    var _a, _b;
                    return !_this.resourceGroupDropdownSearchText || (null === (_b = null === (_a = opt.text) || void 0 === _a ? void 0 : _a.toLowerCase()) || void 0 === _b ? void 0 : _b.indexOf(_this.resourceGroupDropdownSearchText.toLowerCase())) >= 0;
                });
            }, WorkspaceSettingsAzureConnectionsConfigurationComponent.prototype.createResourcesDropdownOptions = function() {
                var _this = this;
                this.allResourcesDropdownOptions = this.allResources.map(function(res) {
                    return {
                        key: res.name,
                        text: res.name
                    };
                }).filter(function(opt) {
                    var _a, _b;
                    return !_this.resourceDropdownSearchText || (null === (_b = null === (_a = opt.text) || void 0 === _a ? void 0 : _a.toLowerCase()) || void 0 === _b ? void 0 : _b.indexOf(_this.resourceDropdownSearchText.toLowerCase())) >= 0;
                });
            }, WorkspaceSettingsAzureConnectionsConfigurationComponent.prototype.clearCurrentResource = function() {
                this.workspaceSettingsService.clearCurrentResource(this.resourceConnector.resourceType), 
                this.selectedSubscription = void 0, this.selectedSubscriptionDropdownOption = void 0, 
                this.subscriptionDropdownSearchText = "", this.selectedResourceGroup = void 0, this.selectedResourceGroupDropdownOption = void 0, 
                this.resourceGroupDropdownSearchText = "", this.selectedResource = void 0, this.selectedResourceDropdownOption = void 0, 
                this.resourceDropdownSearchText = "";
            }, WorkspaceSettingsAzureConnectionsConfigurationComponent.\u0275fac = function(t) {
                return new (t || WorkspaceSettingsAzureConnectionsConfigurationComponent)(core["\u0275\u0275directiveInject"](tri_workspace_settings.X), core["\u0275\u0275directiveInject"](WorkspaceSettingsTelemetryService), core["\u0275\u0275directiveInject"](localization_service.z));
            }, WorkspaceSettingsAzureConnectionsConfigurationComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: WorkspaceSettingsAzureConnectionsConfigurationComponent,
                selectors: [ [ "tri-workspace-settings-azure-connections-configuration" ] ],
                inputs: {
                    resourceConnector: "resourceConnector"
                },
                standalone: !0,
                features: [ core["\u0275\u0275StandaloneFeature"] ],
                decls: 14,
                vars: 9,
                consts: [ [ 3, "viewModel", "hideMessageBar", 4, "ngIf" ], [ 1, "configuration-container", "tri-flex", "tri-flex-row" ], [ 1, "anchor-icon" ], [ "name", "storage_20_regular" ], [ 3, "ngSwitch" ], [ "class", "container-right-part tri-flex-auto", 4, "ngSwitchCase" ], [ "configurationSummary", "" ], [ "editConfigurationContent", "" ], [ 3, "viewModel", "hideMessageBar" ], [ 1, "container-right-part", "tri-flex-auto" ], [ 1, "title", "tri-body1" ], [ 1, "content" ], [ 1, "tri-caption2" ], [ 1, "tri-body1-strong" ], [ 1, "footer" ], [ "tri-button", "", 3, "click" ], [ 1, "title", "tri-body1-strong" ], [ 4, "ngTemplateOutlet" ], [ "tri-button", "", "appearance", "primary", 3, "disabled", "click", 4, "ngIf" ], [ "tri-button", "", 3, "disabled", "click", 4, "ngIf" ], [ "tri-button", "", "appearance", "primary", 3, "disabled", "click" ], [ 4, "ngIf" ], [ "tri-button", "", 3, "disabled", "click" ], [ 4, "ngTemplateOutlet", "ngTemplateOutletContext" ], [ 3, "viewModel", 4, "ngIf" ], [ 3, "ngSwitch", 4, "ngIf" ], [ "aria-labelledby", "'default-connection-radio-button-' + resourceConnector.resourceType", 3, "disabled", "value", "checked", "change" ], [ "id", "'default-connection-radio-button-' + resourceConnector.resourceType" ], [ "aria-labelledby", "'custom-connection-radio-button-' + resourceConnector.resourceType", 3, "checked", "value", "change" ], [ "id", "'custom-connection-radio-button-' + resourceConnector.resourceType" ], [ 3, "viewModel" ], [ 4, "ngSwitchCase" ], [ "class", "resource-pickers-container tri-flex tri-flex-col", 4, "ngSwitchCase" ], [ 1, "resource-pickers-container", "tri-flex", "tri-flex-col" ], [ 1, "picker-label", "tri-body1-strong" ], [ 1, "required-star" ], [ 1, "tri-flex" ], [ 3, "options", "ngModel", "disabled", "ngModelChange", "valueChange" ], [ 1, "tri-body1", 3, "triTooltip" ], [ 1, "azure-connection-configuration-dropdown-search-box", 3, "value" ], [ 3, "value", 4, "ngFor", "ngForOf" ], [ "class", "inline-autosave-spinner tri-flex tri-items-center", 4, "ngIf" ], [ 3, "statusIndicatorType", 4, "ngIf" ], [ 3, "value" ], [ 1, "inline-autosave-spinner", "tri-flex", "tri-items-center" ], [ 3, "statusIndicatorType" ], [ "target", "_blank", "rel", "noopener noreferrer", 3, "external", "href" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275template"](0, WorkspaceSettingsAzureConnectionsConfigurationComponent_tri_message_bar_0_Template, 2, 3, "tri-message-bar", 0), 
                    core["\u0275\u0275pipe"](1, "async"), core["\u0275\u0275elementStart"](2, "div", 1)(3, "div", 2), 
                    core["\u0275\u0275element"](4, "tri-svg-icon", 3), core["\u0275\u0275elementEnd"](), 
                    core["\u0275\u0275elementContainerStart"](5, 4), core["\u0275\u0275pipe"](6, "async"), 
                    core["\u0275\u0275template"](7, WorkspaceSettingsAzureConnectionsConfigurationComponent_div_7_Template, 16, 12, "div", 5), 
                    core["\u0275\u0275template"](8, WorkspaceSettingsAzureConnectionsConfigurationComponent_div_8_Template, 11, 10, "div", 5), 
                    core["\u0275\u0275template"](9, WorkspaceSettingsAzureConnectionsConfigurationComponent_div_9_Template, 15, 22, "div", 5), 
                    core["\u0275\u0275elementContainerEnd"](), core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](10, WorkspaceSettingsAzureConnectionsConfigurationComponent_ng_template_10_Template, 19, 12, "ng-template", null, 6, core["\u0275\u0275templateRefExtractor"]), 
                    core["\u0275\u0275template"](12, WorkspaceSettingsAzureConnectionsConfigurationComponent_ng_template_12_Template, 6, 7, "ng-template", null, 7, core["\u0275\u0275templateRefExtractor"])), 
                    2 & rf && (core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](1, 5, ctx.serverMessageBarModel$)), 
                    core["\u0275\u0275advance"](5), core["\u0275\u0275property"]("ngSwitch", core["\u0275\u0275pipeBind1"](6, 7, ctx.configurationContent$)), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngSwitchCase", ctx.ConfigurationContentType.NotConfigured), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", ctx.ConfigurationContentType.EditConfiguration), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", ctx.ConfigurationContentType.ShowConfiguration));
                },
                dependencies: [ common.NgIf, common.NgFor, common.NgTemplateOutlet, common.NgSwitch, common.NgSwitchCase, common.AsyncPipe, fesm2022_forms.u5, fesm2022_forms.JJ, fesm2022_forms.On, localization_module.Y, localize_pipe.Y, tri_spinner_module.d, tri_spinner_component.D, tri_message_bar.I, tri_message_bar_component.h, tri_radio_button.W, tri_radio_button_component.Y, tri_radio_group_component.Z, tri_svg_icon.T6, tri_svg_icon_component.M, tri_search_box.b, tri_search_box_component.U, tri_dropdown.lK, tri_dropdown_component.M3, tri_dropdown_item_component.l, tri_dropdown_item_menu_directive.q, tri_dropdown_component.ii, tri_tooltip.w, tri_tooltip_directive.Z, TriStatusIndicatorModule, TriStatusIndicatorComponent, tri_link.m, tri_link_component.v ],
                styles: [ "[_nghost-%COMP%]   .configuration-container[_ngcontent-%COMP%]{padding:8px;border-radius:4px;border:1px solid var(--colorNeutralStroke2)}[_nghost-%COMP%]   .configuration-container[_ngcontent-%COMP%]   .anchor-icon[_ngcontent-%COMP%]{display:flex;margin-right:8px;fill:var(--tridentColor80)}[_nghost-%COMP%]   .configuration-container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]{margin:8px 8px 8px 0;display:flex;flex-direction:column;gap:16px}[_nghost-%COMP%]   .configuration-container[_ngcontent-%COMP%]   .footer[_ngcontent-%COMP%]{padding:8px 0;margin-top:10px}[_nghost-%COMP%]   .resource-pickers-container[_ngcontent-%COMP%]{gap:8px}[_nghost-%COMP%]   .resource-pickers-container[_ngcontent-%COMP%]   .picker-label[_ngcontent-%COMP%]{margin-bottom:4px}[_nghost-%COMP%]   .resource-pickers-container[_ngcontent-%COMP%]   tri-dropdown[_ngcontent-%COMP%]{width:100%}[_nghost-%COMP%]   .resource-pickers-container[_ngcontent-%COMP%]   tri-dropdown[_ngcontent-%COMP%]     .popout-button[disabled] .tri-dropdown-trigger-container{color:var(--colorNeutralForegroundDisabled)}[_nghost-%COMP%]     tri-status-indicator .status-indicator{align-items:baseline;margin-top:4px}  .azure-connection-configuration-dropdown-search-box{width:100%}" ],
                changeDetection: 0
            }), WorkspaceSettingsAzureConnectionsConfigurationComponent;
        }();
        function WorkspaceSettingsAzureConnectionsComponent_ng_container_0_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275element"](1, "tri-spinner", 1), 
            core["\u0275\u0275elementContainerEnd"]());
        }
        function WorkspaceSettingsAzureConnectionsComponent_ng_container_2_ng_container_9_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "div")(2, "div", 7)(3, "div", 8), 
            core["\u0275\u0275text"](4), core["\u0275\u0275pipe"](5, "localize"), core["\u0275\u0275elementEnd"](), 
            core["\u0275\u0275elementStart"](6, "div", 4), core["\u0275\u0275text"](7), core["\u0275\u0275pipe"](8, "localize"), 
            core["\u0275\u0275elementStart"](9, "tri-link", 9), core["\u0275\u0275text"](10), 
            core["\u0275\u0275pipe"](11, "localize"), core["\u0275\u0275elementEnd"]()()(), 
            core["\u0275\u0275element"](12, "tri-workspace-settings-azure-connections-configuration", 10), 
            core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var resourceConnector_r3 = ctx.$implicit;
                core["\u0275\u0275advance"](4), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](5, 6, resourceConnector_r3.headerText)), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"]("", core["\u0275\u0275pipeBind1"](8, 8, resourceConnector_r3.headerSubText), " "), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("href", resourceConnector_r3.learnMoreLink)("external", !0), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](11, 10, resourceConnector_r3.headerLearnMoreText), " "), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("resourceConnector", resourceConnector_r3);
            }
        }
        function WorkspaceSettingsAzureConnectionsComponent_ng_container_2_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "div", 2)(2, "div", 3), 
            core["\u0275\u0275text"](3), core["\u0275\u0275pipe"](4, "localize"), core["\u0275\u0275elementEnd"](), 
            core["\u0275\u0275elementStart"](5, "div", 4), core["\u0275\u0275text"](6), core["\u0275\u0275pipe"](7, "localize"), 
            core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementStart"](8, "div", 5), 
            core["\u0275\u0275template"](9, WorkspaceSettingsAzureConnectionsComponent_ng_container_2_ng_container_9_Template, 13, 12, "ng-container", 6), 
            core["\u0275\u0275pipe"](10, "async"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementContainerEnd"]()), 
            2 & rf) {
                var ctx_r1 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](4, 3, "Azure_Connections")), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](7, 5, "Azure_Connections_Description")), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngForOf", core["\u0275\u0275pipeBind1"](10, 7, ctx_r1.resourceConnectorArray$));
            }
        }
        var WorkspaceSettingsAzureConnectionsComponent = function() {
            function WorkspaceSettingsAzureConnectionsComponent(workspaceSettingsService) {
                var _a, _this = this;
                this.workspaceSettingsService = workspaceSettingsService, this.resourceConnectors = ((_a = {})[AzureConnectionResourceType.AdlsStorage] = {
                    resourceType: AzureConnectionResourceType.AdlsStorage,
                    headerSubText: "BYOResources_Workspace_AdlsStorage_Description",
                    headerText: "Trident_Workspace_Settings_ADLS_header",
                    headerLearnMoreText: "Trident_Workspace_Settings_Learn_More_ADLS",
                    resourceLabel: "Trident_Workspace_Settings_Storage_Account",
                    resourcePickerPlaceholder: "Trident_Workspace_Settings_Select_Storage",
                    collapsibeSectionHeader: "AdminPortal_BYOTenantStorage_Description",
                    icon: {
                        name: "plug_connected_20_regular"
                    },
                    forPremiumOnly: !1,
                    canSelectTenantResource: !0,
                    learnMoreLink: "https://go.microsoft.com/fwlink/?linkid=2128745",
                    featureFlagToAllowResource: "storageAccountAttachForWorkspaceAdminsEnabled",
                    notAllowedWarningMessage: "Warning_BYOSA_Workspace_Not_Enabled",
                    notAllowedLearnMoreLink: "https://go.microsoft.com/fwlink/?linkid=2128134",
                    noSubscriptionsMessage: "Error_No_Azure_Subscriptions_Access",
                    noSubscriptionLearnMoreLink: "https://go.microsoft.com/fwlink/?linkid=2128263",
                    noResourceGroupMessage: "Error_No_Storage_Account_Access",
                    noResourceGroupLearnMoreLink: "https://go.microsoft.com/fwlink/?linkid=2128132",
                    disconnectionPromptMessage: "AdminPortal_DatapoolSettings_DialogWarningNote1"
                }, _a[AzureConnectionResourceType.LogAnalytics] = {
                    resourceType: AzureConnectionResourceType.LogAnalytics,
                    headerSubText: "BYOResources_Workspace_LogAnalytics_Description",
                    headerText: "Trident_Workspace_Settings_Log_Analytics_Header",
                    headerLearnMoreText: "Trident_Workspace_Settings_Learn_More_Log_Analytics",
                    resourceLabel: "BYOResources_Connect_LogAnalytics",
                    resourcePickerPlaceholder: "Trident_Workspace_Settings_Select_Log_Analytics",
                    collapsibeSectionHeader: "Trident_Workspace_Settings_Configure_Log_Analytics",
                    icon: {
                        name: "plug_connected_20_regular"
                    },
                    learnMoreLink: "https://go.microsoft.com/fwlink/?linkid=2128746",
                    forPremiumOnly: !0,
                    canSelectTenantResource: !1,
                    featureFlagToAllowResource: "logAnalyticsAttachForWorkspaceAdminsEnabled",
                    notAllowedWarningMessage: "Warning_BYOLA_Workspace_Not_Enabled",
                    notAllowedLearnMoreLink: "https://go.microsoft.com/fwlink/?linkid=2128744",
                    noSubscriptionsMessage: "Error_No_Azure_Subscriptions_Access",
                    noSubscriptionLearnMoreLink: "https://go.microsoft.com/fwlink/?linkid=2128742",
                    noResourceGroupMessage: "Error_No_Log_Analytics_Workspace_Access",
                    noResourceGroupLearnMoreLink: "https://go.microsoft.com/fwlink/?linkid=2128743",
                    disconnectionPromptMessage: "BYOResources_Workspace_Disconnect_LogAnalytics_Description"
                }, _a), this.resourceConnectorArray$ = new BehaviorSubject.X([]), this.initialized$ = this.workspaceSettingsService.azureConnectionsInitialized$, 
                this.initialized$.subscribe(function(value) {
                    if (value) {
                        var isWorkspacePremium_1 = _this.workspaceSettingsService.isPremium;
                        _this.resourceConnectorArray$.next(Object.values(_this.resourceConnectors).filter(function(r) {
                            return !r.forPremiumOnly || isWorkspacePremium_1;
                        }));
                    }
                });
            }
            return WorkspaceSettingsAzureConnectionsComponent.\u0275fac = function(t) {
                return new (t || WorkspaceSettingsAzureConnectionsComponent)(core["\u0275\u0275directiveInject"](tri_workspace_settings.X));
            }, WorkspaceSettingsAzureConnectionsComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: WorkspaceSettingsAzureConnectionsComponent,
                selectors: [ [ "tri-workspace-settings-azure-connections-v2" ] ],
                standalone: !0,
                features: [ core["\u0275\u0275StandaloneFeature"] ],
                decls: 4,
                vars: 6,
                consts: [ [ 4, "ngIf" ], [ 1, "tri-flex", "tri-items-center", "tri-justify-center" ], [ 1, "tab-title" ], [ 1, "tri-title3" ], [ 1, "tri-body1" ], [ 1, "section-container" ], [ 4, "ngFor", "ngForOf" ], [ 1, "section-title" ], [ 1, "tri-subtitle2" ], [ "target", "_blank", "rel", "noopener noreferrer", 3, "href", "external" ], [ 3, "resourceConnector" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275template"](0, WorkspaceSettingsAzureConnectionsComponent_ng_container_0_Template, 2, 0, "ng-container", 0), 
                    core["\u0275\u0275pipe"](1, "async"), core["\u0275\u0275template"](2, WorkspaceSettingsAzureConnectionsComponent_ng_container_2_Template, 11, 9, "ng-container", 0), 
                    core["\u0275\u0275pipe"](3, "async")), 2 & rf && (core["\u0275\u0275property"]("ngIf", !0 !== core["\u0275\u0275pipeBind1"](1, 2, ctx.initialized$)), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](3, 4, ctx.initialized$)));
                },
                dependencies: [ common.NgIf, common.NgFor, common.AsyncPipe, localization_module.Y, localize_pipe.Y, tri_spinner_module.d, tri_spinner_component.D, tri_link.m, tri_link_component.v, WorkspaceSettingsAzureConnectionsConfigurationComponent ],
                encapsulation: 2,
                changeDetection: 0
            }), WorkspaceSettingsAzureConnectionsComponent;
        }(), delay = __webpack_require__(70032), ClipboardWriteFuncInjectionToken = new core.InjectionToken("ClipboardWriteFunc"), LicenseMode = function(LicenseMode) {
            return LicenseMode.PowerBIPro = "PowerBIPro", LicenseMode.TridentPremiumPerUser = "TridentPremiumPerUser", 
            LicenseMode.TridentPremiumPerCapacity = "TridentPremiumPerCapacity", LicenseMode.Embedded = "Embedded", 
            LicenseMode.DataCapacity = "DataCapacity", LicenseMode.DataCapacityTrial = "DataCapacityTrial", 
            LicenseMode.Unknown = "Unknown", LicenseMode;
        }({}), StorageFormat = function(StorageFormat) {
            return StorageFormat.None = "None", StorageFormat.SmallDataset = "SmallDataset", 
            StorageFormat.LargeDataset = "LargeDataset", StorageFormat;
        }({});
        function getLicenseModeFromCapacitySkuTier(capacitySkuTier) {
            switch (capacitySkuTier) {
              case 1:
                return LicenseMode.TridentPremiumPerCapacity;

              case 4:
                return LicenseMode.TridentPremiumPerUser;

              case 3:
              case 2:
                return LicenseMode.Embedded;

              case 8:
              case 9:
                return LicenseMode.DataCapacity;

              case 7:
                return LicenseMode.DataCapacityTrial;

              default:
                return LicenseMode.PowerBIPro;
            }
        }
        function WorkspaceSettingPremiumConfigurationComponent_div_5_div_16_ng_container_4_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275elementContainer"](0);
        }
        function WorkspaceSettingPremiumConfigurationComponent_div_5_div_16_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div")(1, "div", 17), core["\u0275\u0275text"](2), 
            core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](4, WorkspaceSettingPremiumConfigurationComponent_div_5_div_16_ng_container_4_Template, 1, 0, "ng-container", 19), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                core["\u0275\u0275nextContext"](2);
                var _r11 = core["\u0275\u0275reference"](17);
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](3, 2, "Trident_Workspace_Settings_License_Capacity"), " "), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngTemplateOutlet", _r11);
            }
        }
        function WorkspaceSettingPremiumConfigurationComponent_div_5_div_17_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div")(1, "div", 17), core["\u0275\u0275text"](2), 
            core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](4, "div", 18), 
            core["\u0275\u0275text"](5), core["\u0275\u0275pipe"](6, "localize"), core["\u0275\u0275pipe"](7, "localize"), 
            core["\u0275\u0275elementEnd"]()()), 2 & rf) {
                var ctx_r16 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](3, 2, "GroupEditor_StorageFormat"), ""), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"](" ", ctx_r16.defaultStorageFormat === ctx_r16.StorageFormat.SmallDataset ? core["\u0275\u0275pipeBind1"](6, 4, "GroupEditor_StorageFormat_Small") : core["\u0275\u0275pipeBind1"](7, 6, "GroupEditor_StorageFormat_Large"), " ");
            }
        }
        function WorkspaceSettingPremiumConfigurationComponent_div_5_Template(rf, ctx) {
            if (1 & rf) {
                var _r19 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div", 12)(1, "div", 13)(2, "span"), core["\u0275\u0275text"](3), 
                core["\u0275\u0275pipe"](4, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](5, "button", 14), 
                core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r19);
                    var ctx_r18 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r18.editConfiguration());
                }), core["\u0275\u0275element"](6, "tri-svg-icon", 15), core["\u0275\u0275text"](7), 
                core["\u0275\u0275pipe"](8, "localize"), core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementStart"](9, "div", 16)(10, "div")(11, "div", 17), 
                core["\u0275\u0275text"](12), core["\u0275\u0275pipe"](13, "localize"), core["\u0275\u0275elementEnd"](), 
                core["\u0275\u0275elementStart"](14, "div", 18), core["\u0275\u0275text"](15), core["\u0275\u0275elementEnd"]()(), 
                core["\u0275\u0275template"](16, WorkspaceSettingPremiumConfigurationComponent_div_5_div_16_Template, 5, 4, "div", 5), 
                core["\u0275\u0275template"](17, WorkspaceSettingPremiumConfigurationComponent_div_5_div_17_Template, 8, 8, "div", 5), 
                core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](4, 6, "License_Configuration"), ""), 
                core["\u0275\u0275advance"](4), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](8, 8, "Edit"), " "), 
                core["\u0275\u0275advance"](5), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](13, 10, "Current_License"), ""), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"](" ", ctx_r0.getLicenseModeLocString(ctx_r0.licenseMode), " "), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", (null == ctx_r0.selectedCapacity ? null : ctx_r0.selectedCapacity.name) || (null == ctx_r0.selectedCapacity ? null : ctx_r0.selectedCapacity.sku) || (null == ctx_r0.selectedCapacity ? null : ctx_r0.selectedCapacity.region)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !ctx_r0.isMyWorkspace && !!ctx_r0.selectedCapacity);
            }
        }
        function WorkspaceSettingPremiumConfigurationComponent_div_6_ng_container_5_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275elementContainer"](0);
        }
        function WorkspaceSettingPremiumConfigurationComponent_div_6_tri_spinner_12_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "tri-spinner");
        }
        function WorkspaceSettingPremiumConfigurationComponent_div_6_ng_container_14_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275text"](1), 
            core["\u0275\u0275pipe"](2, "localize"), core["\u0275\u0275elementContainerEnd"]()), 
            2 & rf && (core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](2, 1, "Applying")));
        }
        function WorkspaceSettingPremiumConfigurationComponent_div_6_ng_container_16_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275text"](1), 
            core["\u0275\u0275pipe"](2, "localize"), core["\u0275\u0275elementContainerEnd"]()), 
            2 & rf && (core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](2, 1, "Select_License")));
        }
        var configuration_configuration_component_c0 = function(a0) {
            return {
                "is-disabled": a0
            };
        };
        function WorkspaceSettingPremiumConfigurationComponent_div_6_Template(rf, ctx) {
            if (1 & rf) {
                var _r25 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div", 12)(1, "div", 20), core["\u0275\u0275text"](2), 
                core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](4, "div", 16), 
                core["\u0275\u0275template"](5, WorkspaceSettingPremiumConfigurationComponent_div_6_ng_container_5_Template, 1, 0, "ng-container", 19), 
                core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](6, "div", 21)(7, "button", 22), 
                core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r25);
                    var ctx_r24 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r24.clickSelectLicense());
                }), core["\u0275\u0275pipe"](8, "async"), core["\u0275\u0275pipe"](9, "async"), 
                core["\u0275\u0275pipe"](10, "async"), core["\u0275\u0275pipe"](11, "async"), core["\u0275\u0275template"](12, WorkspaceSettingPremiumConfigurationComponent_div_6_tri_spinner_12_Template, 1, 0, "tri-spinner", 5), 
                core["\u0275\u0275pipe"](13, "async"), core["\u0275\u0275template"](14, WorkspaceSettingPremiumConfigurationComponent_div_6_ng_container_14_Template, 3, 3, "ng-container", 5), 
                core["\u0275\u0275pipe"](15, "async"), core["\u0275\u0275template"](16, WorkspaceSettingPremiumConfigurationComponent_div_6_ng_container_16_Template, 3, 3, "ng-container", 5), 
                core["\u0275\u0275pipe"](17, "async"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](18, "button", 23), 
                core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r25);
                    var ctx_r26 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r26.clickCancel());
                }), core["\u0275\u0275pipe"](19, "async"), core["\u0275\u0275pipe"](20, "async"), 
                core["\u0275\u0275text"](21), core["\u0275\u0275pipe"](22, "localize"), core["\u0275\u0275elementEnd"]()()();
            }
            if (2 & rf) {
                var ctx_r1 = core["\u0275\u0275nextContext"](), _r3 = core["\u0275\u0275reference"](9);
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](3, 10, "License_Configuration")), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngTemplateOutlet", _r3), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("disabled", !0 !== core["\u0275\u0275pipeBind1"](8, 12, ctx_r1.canSaveCapacity$) || core["\u0275\u0275pipeBind1"](9, 14, ctx_r1.saveInProgress$))("ngClass", core["\u0275\u0275pureFunction1"](32, configuration_configuration_component_c0, !0 !== core["\u0275\u0275pipeBind1"](10, 16, ctx_r1.canSaveCapacity$) || core["\u0275\u0275pipeBind1"](11, 18, ctx_r1.saveInProgress$))), 
                core["\u0275\u0275advance"](5), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](13, 20, ctx_r1.saveInProgress$)), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](15, 22, ctx_r1.saveInProgress$)), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", !0 !== core["\u0275\u0275pipeBind1"](17, 24, ctx_r1.saveInProgress$)), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("disabled", core["\u0275\u0275pipeBind1"](19, 26, ctx_r1.saveInProgress$))("ngClass", core["\u0275\u0275pureFunction1"](34, configuration_configuration_component_c0, core["\u0275\u0275pipeBind1"](20, 28, ctx_r1.saveInProgress$))), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](22, 30, "Cancel_ButtonText"));
            }
        }
        function WorkspaceSettingPremiumConfigurationComponent_ng_container_7_div_15_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementStart"](0, "div", 33)(1, "span", 34), core["\u0275\u0275text"](2), 
            core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementEnd"]()()), 2 & rf && (core["\u0275\u0275advance"](2), 
            core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](3, 1, "Trident_Workspace_Settings_Copied_Connection")));
        }
        function WorkspaceSettingPremiumConfigurationComponent_ng_container_7_Template(rf, ctx) {
            if (1 & rf) {
                var _r29 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "div", 24)(2, "div", 25)(3, "div", 26), 
                core["\u0275\u0275text"](4), core["\u0275\u0275pipe"](5, "localize"), core["\u0275\u0275elementEnd"](), 
                core["\u0275\u0275elementStart"](6, "div", 27), core["\u0275\u0275text"](7), core["\u0275\u0275pipe"](8, "localize"), 
                core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementStart"](9, "div", 28)(10, "div", 29), 
                core["\u0275\u0275text"](11), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](12, "button", 30), 
                core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r29);
                    var ctx_r28 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r28.copyConnectionLink());
                })("mouseover", function() {
                    core["\u0275\u0275restoreView"](_r29);
                    var ctx_r30 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r30.mouseOverCopy());
                })("mouseout", function() {
                    core["\u0275\u0275restoreView"](_r29);
                    var ctx_r31 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r31.mouseOutCopy());
                }), core["\u0275\u0275pipe"](13, "localize"), core["\u0275\u0275element"](14, "tri-svg-icon", 31), 
                core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275template"](15, WorkspaceSettingPremiumConfigurationComponent_ng_container_7_div_15_Template, 4, 3, "div", 32), 
                core["\u0275\u0275pipe"](16, "async"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementContainerEnd"]();
            }
            if (2 & rf) {
                var ctx_r2 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](4), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](5, 7, "Connection_Link")), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](8, 9, "Connection_Link_Description")), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("triTooltip", ctx_r2.connectionLink), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate"](ctx_r2.connectionLink), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275attribute"]("aria-label", core["\u0275\u0275pipeBind1"](13, 11, "Copy_Connection_Link_Label")), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("name", ctx_r2.connectLinkCopyIconName), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](16, 13, ctx_r2.isShowConnectLinkCopied$));
            }
        }
        function WorkspaceSettingPremiumConfigurationComponent_ng_template_8_tri_svg_icon_13_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "tri-svg-icon", 47), 2 & rf) {
                core["\u0275\u0275nextContext"](2);
                var _r5 = core["\u0275\u0275reference"](11);
                core["\u0275\u0275property"]("triTooltip", _r5);
            }
        }
        function WorkspaceSettingPremiumConfigurationComponent_ng_template_8_tri_radio_button_21_Template(rf, ctx) {
            if (1 & rf) {
                var _r40 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "tri-radio-button", 53), core["\u0275\u0275listener"]("change", function($event) {
                    core["\u0275\u0275restoreView"](_r40);
                    var ctx_r39 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r39.selectLicenseMode($event, ctx_r39.LicenseMode.TridentPremiumPerUser));
                }), core["\u0275\u0275pipe"](1, "async"), core["\u0275\u0275elementStart"](2, "span", 54), 
                core["\u0275\u0275text"](3), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](4, "div", 36)(5, "span"), 
                core["\u0275\u0275text"](6), core["\u0275\u0275pipe"](7, "localize"), core["\u0275\u0275elementStart"](8, "tri-link", 55), 
                core["\u0275\u0275text"](9), core["\u0275\u0275pipe"](10, "localize"), core["\u0275\u0275elementEnd"]()()()();
            }
            if (2 & rf) {
                var ctx_r33 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275property"]("checked", ctx_r33.licenseMode === ctx_r33.LicenseMode.TridentPremiumPerUser)("value", ctx_r33.LicenseMode.TridentPremiumPerUser)("disabled", !ctx_r33.licenseModeEnabled(ctx_r33.LicenseMode.TridentPremiumPerUser) || core["\u0275\u0275pipeBind1"](1, 7, ctx_r33.saveInProgress$) || !ctx_r33.isWorkspaceAdmin), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](ctx_r33.getLicenseModeLocString(ctx_r33.LicenseMode.TridentPremiumPerUser)), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"]("", core["\u0275\u0275pipeBind1"](7, 9, "Workspace_LicenseMode_PPU_Description"), " "), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("external", !0), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](10, 11, "LearnMore"), " ");
            }
        }
        function WorkspaceSettingPremiumConfigurationComponent_ng_template_8_tri_radio_button_45_Template(rf, ctx) {
            if (1 & rf) {
                var _r42 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "tri-radio-button", 56), core["\u0275\u0275listener"]("change", function($event) {
                    core["\u0275\u0275restoreView"](_r42);
                    var ctx_r41 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r41.selectLicenseMode($event, ctx_r41.LicenseMode.DataCapacity));
                }), core["\u0275\u0275pipe"](1, "async"), core["\u0275\u0275elementStart"](2, "span", 57), 
                core["\u0275\u0275text"](3), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](4, "div", 36)(5, "span"), 
                core["\u0275\u0275text"](6), core["\u0275\u0275pipe"](7, "localize"), core["\u0275\u0275elementStart"](8, "tri-link", 58), 
                core["\u0275\u0275text"](9), core["\u0275\u0275pipe"](10, "localize"), core["\u0275\u0275elementEnd"]()()()();
            }
            if (2 & rf) {
                var ctx_r34 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275property"]("checked", ctx_r34.licenseMode === ctx_r34.LicenseMode.DataCapacity)("value", ctx_r34.LicenseMode.DataCapacity)("disabled", !ctx_r34.licenseModeEnabled(ctx_r34.LicenseMode.DataCapacity) || core["\u0275\u0275pipeBind1"](1, 7, ctx_r34.saveInProgress$) || !ctx_r34.isWorkspaceAdmin), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](ctx_r34.getLicenseModeLocString(ctx_r34.LicenseMode.DataCapacity)), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"]("", core["\u0275\u0275pipeBind1"](7, 9, "CapacityHeader_FabricCapacity_Description"), " "), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("external", !0), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](10, 11, "LearnMore"), " ");
            }
        }
        function WorkspaceSettingPremiumConfigurationComponent_ng_template_8_tri_radio_button_46_Template(rf, ctx) {
            if (1 & rf) {
                var _r44 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "tri-radio-button", 59), core["\u0275\u0275listener"]("change", function($event) {
                    core["\u0275\u0275restoreView"](_r44);
                    var ctx_r43 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r43.selectLicenseMode($event, ctx_r43.LicenseMode.DataCapacityTrial));
                }), core["\u0275\u0275pipe"](1, "async"), core["\u0275\u0275elementStart"](2, "span", 60), 
                core["\u0275\u0275text"](3), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](4, "div", 36)(5, "span"), 
                core["\u0275\u0275text"](6), core["\u0275\u0275pipe"](7, "localize"), core["\u0275\u0275elementStart"](8, "tri-link", 61), 
                core["\u0275\u0275text"](9), core["\u0275\u0275pipe"](10, "localize"), core["\u0275\u0275elementEnd"]()()()();
            }
            if (2 & rf) {
                var ctx_r35 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275property"]("checked", ctx_r35.licenseMode === ctx_r35.LicenseMode.DataCapacityTrial)("value", ctx_r35.LicenseMode.DataCapacityTrial)("disabled", !ctx_r35.licenseModeEnabled(ctx_r35.LicenseMode.DataCapacityTrial) || core["\u0275\u0275pipeBind1"](1, 7, ctx_r35.saveInProgress$) || !ctx_r35.isWorkspaceAdmin), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](ctx_r35.getLicenseModeLocString(ctx_r35.LicenseMode.DataCapacityTrial)), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"]("", core["\u0275\u0275pipeBind1"](7, 9, "Workspace_LicenseMode_Trial_Description"), " "), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("external", !0), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](10, 11, "LearnMore"), " ");
            }
        }
        function WorkspaceSettingPremiumConfigurationComponent_ng_template_8_div_47_tri_dropdown_item_15_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "tri-dropdown-item", 67), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var capacity_r47 = ctx.$implicit;
                core["\u0275\u0275property"]("value", capacity_r47), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275textInterpolate1"](" ", capacity_r47.text, " ");
            }
        }
        function WorkspaceSettingPremiumConfigurationComponent_ng_template_8_div_47_div_17_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementStart"](0, "div", 68), core["\u0275\u0275element"](1, "tri-svg-icon", 69), 
            core["\u0275\u0275text"](2), core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementEnd"]()), 
            2 & rf && (core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](3, 1, "Workspace_LicenseMode_Select"), " "));
        }
        var configuration_component_c1 = function(a0, a1, a2) {
            return {
                data: a0,
                key: a1,
                text: a2
            };
        };
        function WorkspaceSettingPremiumConfigurationComponent_ng_template_8_div_47_Template(rf, ctx) {
            if (1 & rf) {
                var _r49 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div", 62)(1, "div", 25)(2, "div", 18), core["\u0275\u0275text"](3), 
                core["\u0275\u0275pipe"](4, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](5, "div", 36), 
                core["\u0275\u0275text"](6), core["\u0275\u0275pipe"](7, "localize"), core["\u0275\u0275elementEnd"]()(), 
                core["\u0275\u0275elementStart"](8, "div")(9, "tri-dropdown", 63), core["\u0275\u0275listener"]("valueChange", function($event) {
                    core["\u0275\u0275restoreView"](_r49);
                    var ctx_r48 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r48.selectCapacity($event));
                }), core["\u0275\u0275pipe"](10, "async"), core["\u0275\u0275elementStart"](11, "tri-dropdown-trigger")(12, "div", 64), 
                core["\u0275\u0275text"](13), core["\u0275\u0275pipe"](14, "localize"), core["\u0275\u0275elementEnd"]()(), 
                core["\u0275\u0275template"](15, WorkspaceSettingPremiumConfigurationComponent_ng_template_8_div_47_tri_dropdown_item_15_Template, 2, 2, "tri-dropdown-item", 65), 
                core["\u0275\u0275pipe"](16, "async"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](17, WorkspaceSettingPremiumConfigurationComponent_ng_template_8_div_47_div_17_Template, 4, 3, "div", 66), 
                core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var tmp_2_0, tmp_3_0, ctx_r36 = core["\u0275\u0275nextContext"](2), _r9 = core["\u0275\u0275reference"](15);
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](4, 9, "Trident_Workspace_Settings_License_Capacity")), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](7, 11, "Trident_Workspace_Settings_License_Capacity_Description"), " "), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("value", core["\u0275\u0275pureFunction3"](19, configuration_component_c1, ctx_r36.selectedCapacity, null !== (tmp_2_0 = null == ctx_r36.selectedCapacity ? null : ctx_r36.selectedCapacity.id) && void 0 !== tmp_2_0 ? tmp_2_0 : "", (null == ctx_r36.selectedCapacity ? null : ctx_r36.selectedCapacity.name) + " - " + (null == ctx_r36.selectedCapacity ? null : ctx_r36.selectedCapacity.region)))("isDisabled", !ctx_r36.isWorkspaceAdmin || null !== (tmp_3_0 = core["\u0275\u0275pipeBind1"](10, 13, ctx_r36.saveInProgress$)) && void 0 !== tmp_3_0 && tmp_3_0), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("triTooltip", _r9)("triTooltipDisabled", !ctx_r36.selectedCapacity), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate1"](" ", ctx_r36.selectedCapacity ? ctx_r36.selectedCapacity.name + " - " + ctx_r36.selectedCapacity.region : core["\u0275\u0275pipeBind1"](14, 15, "Workspace_LicenseMode_Select"), " "), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngForOf", core["\u0275\u0275pipeBind1"](16, 17, ctx_r36.currentCapacitiesDropdownOptions$)), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", !ctx_r36.selectedCapacity);
            }
        }
        function WorkspaceSettingPremiumConfigurationComponent_ng_template_8_tri_message_bar_49_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "tri-message-bar", 70), 2 & rf) {
                var ctx_r37 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275property"]("viewModel", ctx_r37.getNoPermissionsToCapacityMessageBarViewModel());
            }
        }
        function WorkspaceSettingPremiumConfigurationComponent_ng_template_8_ng_container_50_div_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r52 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div", 72)(1, "div", 25)(2, "div", 18), core["\u0275\u0275text"](3), 
                core["\u0275\u0275pipe"](4, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](5, "div", 36), 
                core["\u0275\u0275text"](6), core["\u0275\u0275pipe"](7, "localize"), core["\u0275\u0275elementStart"](8, "tri-link", 73), 
                core["\u0275\u0275text"](9), core["\u0275\u0275pipe"](10, "localize"), core["\u0275\u0275elementEnd"]()()(), 
                core["\u0275\u0275elementStart"](11, "tri-radio-group")(12, "tri-radio-button", 74), 
                core["\u0275\u0275listener"]("change", function($event) {
                    core["\u0275\u0275restoreView"](_r52);
                    var ctx_r51 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r51.selectDefaultStorageFormat($event, ctx_r51.StorageFormat.SmallDataset));
                }), core["\u0275\u0275pipe"](13, "async"), core["\u0275\u0275elementStart"](14, "span", 75), 
                core["\u0275\u0275text"](15), core["\u0275\u0275pipe"](16, "localize"), core["\u0275\u0275elementEnd"]()(), 
                core["\u0275\u0275elementStart"](17, "tri-radio-button", 76), core["\u0275\u0275listener"]("change", function($event) {
                    core["\u0275\u0275restoreView"](_r52);
                    var ctx_r53 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r53.selectDefaultStorageFormat($event, ctx_r53.StorageFormat.LargeDataset));
                }), core["\u0275\u0275pipe"](18, "async"), core["\u0275\u0275pipe"](19, "async"), 
                core["\u0275\u0275elementStart"](20, "span", 77), core["\u0275\u0275text"](21), 
                core["\u0275\u0275pipe"](22, "localize"), core["\u0275\u0275elementEnd"]()()()();
            }
            if (2 & rf) {
                var tmp_6_0, tmp_10_0, ctx_r50 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](4, 12, "GroupEditor_StorageFormat")), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](7, 14, "Workspace_LicenseMode_Edit_StorageFormat_Prompt"), " "), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("external", !0), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](10, 16, "LearnMore"), " "), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("checked", ctx_r50.defaultStorageFormat === ctx_r50.StorageFormat.SmallDataset)("value", ctx_r50.StorageFormat.SmallDataset)("disabled", !ctx_r50.isWorkspaceAdmin || null !== (tmp_6_0 = core["\u0275\u0275pipeBind1"](13, 18, ctx_r50.saveInProgress$)) && void 0 !== tmp_6_0 && tmp_6_0), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](16, 20, "GroupEditor_StorageFormat_Small")), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("checked", ctx_r50.defaultStorageFormat === ctx_r50.StorageFormat.LargeDataset)("value", ctx_r50.StorageFormat.LargeDataset)("disabled", !ctx_r50.isWorkspaceAdmin || !0 !== core["\u0275\u0275pipeBind1"](18, 22, ctx_r50.allowLargeDataset$) || null !== (tmp_10_0 = core["\u0275\u0275pipeBind1"](19, 24, ctx_r50.saveInProgress$)) && void 0 !== tmp_10_0 && tmp_10_0), 
                core["\u0275\u0275advance"](4), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](22, 26, "GroupEditor_StorageFormat_Large"));
            }
        }
        function WorkspaceSettingPremiumConfigurationComponent_ng_template_8_ng_container_50_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, WorkspaceSettingPremiumConfigurationComponent_ng_template_8_ng_container_50_div_1_Template, 23, 28, "div", 71), 
            core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275elementContainerEnd"]()), 
            2 & rf) {
                var ctx_r38 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !!ctx_r38.selectedCapacity && void 0 !== core["\u0275\u0275pipeBind1"](2, 1, ctx_r38.allowLargeDataset$));
            }
        }
        function WorkspaceSettingPremiumConfigurationComponent_ng_template_8_Template(rf, ctx) {
            if (1 & rf) {
                var _r55 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div", 35)(1, "div", 25)(2, "div", 18), core["\u0275\u0275text"](3), 
                core["\u0275\u0275pipe"](4, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](5, "div", 36), 
                core["\u0275\u0275text"](6), core["\u0275\u0275pipe"](7, "localize"), core["\u0275\u0275elementEnd"]()(), 
                core["\u0275\u0275elementStart"](8, "tri-radio-group")(9, "tri-radio-button", 37), 
                core["\u0275\u0275listener"]("change", function($event) {
                    core["\u0275\u0275restoreView"](_r55);
                    var ctx_r54 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r54.selectLicenseMode($event, ctx_r54.LicenseMode.PowerBIPro));
                }), core["\u0275\u0275pipe"](10, "async"), core["\u0275\u0275elementStart"](11, "span", 38), 
                core["\u0275\u0275text"](12), core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](13, WorkspaceSettingPremiumConfigurationComponent_ng_template_8_tri_svg_icon_13_Template, 1, 1, "tri-svg-icon", 39), 
                core["\u0275\u0275elementStart"](14, "div", 36)(15, "span"), core["\u0275\u0275text"](16), 
                core["\u0275\u0275pipe"](17, "localize"), core["\u0275\u0275elementStart"](18, "tri-link", 40), 
                core["\u0275\u0275text"](19), core["\u0275\u0275pipe"](20, "localize"), core["\u0275\u0275elementEnd"]()()()(), 
                core["\u0275\u0275template"](21, WorkspaceSettingPremiumConfigurationComponent_ng_template_8_tri_radio_button_21_Template, 11, 13, "tri-radio-button", 41), 
                core["\u0275\u0275elementStart"](22, "tri-radio-button", 42), core["\u0275\u0275listener"]("change", function($event) {
                    core["\u0275\u0275restoreView"](_r55);
                    var ctx_r56 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r56.selectLicenseMode($event, ctx_r56.LicenseMode.TridentPremiumPerCapacity));
                }), core["\u0275\u0275pipe"](23, "async"), core["\u0275\u0275elementStart"](24, "span", 43), 
                core["\u0275\u0275text"](25), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](26, "div", 36)(27, "span"), 
                core["\u0275\u0275text"](28), core["\u0275\u0275pipe"](29, "localize"), core["\u0275\u0275elementStart"](30, "tri-link", 44), 
                core["\u0275\u0275text"](31), core["\u0275\u0275pipe"](32, "localize"), core["\u0275\u0275elementEnd"]()()()(), 
                core["\u0275\u0275elementStart"](33, "tri-radio-button", 45), core["\u0275\u0275listener"]("change", function($event) {
                    core["\u0275\u0275restoreView"](_r55);
                    var ctx_r57 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r57.selectLicenseMode($event, ctx_r57.LicenseMode.Embedded));
                }), core["\u0275\u0275pipe"](34, "async"), core["\u0275\u0275elementStart"](35, "span", 46), 
                core["\u0275\u0275text"](36), core["\u0275\u0275elementEnd"](), core["\u0275\u0275element"](37, "tri-svg-icon", 47), 
                core["\u0275\u0275elementStart"](38, "div", 36)(39, "span"), core["\u0275\u0275text"](40), 
                core["\u0275\u0275pipe"](41, "localize"), core["\u0275\u0275elementStart"](42, "tri-link", 48), 
                core["\u0275\u0275text"](43), core["\u0275\u0275pipe"](44, "localize"), core["\u0275\u0275elementEnd"]()()()(), 
                core["\u0275\u0275template"](45, WorkspaceSettingPremiumConfigurationComponent_ng_template_8_tri_radio_button_45_Template, 11, 13, "tri-radio-button", 49), 
                core["\u0275\u0275template"](46, WorkspaceSettingPremiumConfigurationComponent_ng_template_8_tri_radio_button_46_Template, 11, 13, "tri-radio-button", 50), 
                core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275template"](47, WorkspaceSettingPremiumConfigurationComponent_ng_template_8_div_47_Template, 18, 23, "div", 51), 
                core["\u0275\u0275pipe"](48, "async"), core["\u0275\u0275template"](49, WorkspaceSettingPremiumConfigurationComponent_ng_template_8_tri_message_bar_49_Template, 1, 1, "tri-message-bar", 52), 
                core["\u0275\u0275template"](50, WorkspaceSettingPremiumConfigurationComponent_ng_template_8_ng_container_50_Template, 3, 3, "ng-container", 5);
            }
            if (2 & rf) {
                var tmp_28_0, ctx_r4 = core["\u0275\u0275nextContext"](), _r7 = core["\u0275\u0275reference"](13), _r13 = core["\u0275\u0275reference"](19);
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](4, 32, "Workspace_LicenseMode")), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](7, 34, "Workspace_LicenseMode_Select_Prompt")), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("checked", ctx_r4.licenseMode === ctx_r4.LicenseMode.PowerBIPro)("value", ctx_r4.LicenseMode.PowerBIPro)("disabled", core["\u0275\u0275pipeBind1"](10, 36, ctx_r4.saveInProgress$) || !ctx_r4.isWorkspaceAdmin || ctx_r4.isMyWorkspace && ctx_r4.restrictMyFolderCapacityEnabled), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](ctx_r4.getLicenseModeLocString(ctx_r4.LicenseMode.PowerBIPro)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx_r4.isMyWorkspace), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"]("", core["\u0275\u0275pipeBind1"](17, 38, "Workspace_LicenseMode_Pro_Description"), " "), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("external", !0), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](20, 40, "LearnMore"), " "), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", !(ctx_r4.flagTridentUIHidePPU || ctx_r4.isMyWorkspace && !ctx_r4.isShowPPUForMyWorkspace)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("checked", ctx_r4.licenseMode === ctx_r4.LicenseMode.TridentPremiumPerCapacity)("value", ctx_r4.LicenseMode.TridentPremiumPerCapacity)("disabled", !ctx_r4.licenseModeEnabled(ctx_r4.LicenseMode.TridentPremiumPerCapacity) || core["\u0275\u0275pipeBind1"](23, 42, ctx_r4.saveInProgress$) || !ctx_r4.isWorkspaceAdmin), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](ctx_r4.getLicenseModeLocString(ctx_r4.LicenseMode.TridentPremiumPerCapacity)), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](29, 44, "Workspace_LicenseMode_PPC_Description"), " "), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("external", !0), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](32, 46, "LearnMore"), " "), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("checked", ctx_r4.licenseMode === ctx_r4.LicenseMode.Embedded)("value", ctx_r4.LicenseMode.Embedded)("disabled", !ctx_r4.licenseModeEnabled(ctx_r4.LicenseMode.Embedded) || core["\u0275\u0275pipeBind1"](34, 48, ctx_r4.saveInProgress$) || !ctx_r4.isWorkspaceAdmin), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](ctx_r4.getLicenseModeLocString(ctx_r4.LicenseMode.Embedded)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("triTooltip", _r7), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"]("", core["\u0275\u0275pipeBind1"](41, 50, "Workspace_LicenseMode_Embedded_Description"), " "), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("external", !0), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](44, 52, "LearnMore"), " "), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", ctx_r4.isShowDataCapacityLicense || ctx_r4.licenseMode === ctx_r4.LicenseMode.DataCapacity), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx_r4.isShowDataCapacityTrialLicense || ctx_r4.licenseMode === ctx_r4.LicenseMode.DataCapacityTrial), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx_r4.licenseMode !== ctx_r4.LicenseMode.TridentPremiumPerUser && ctx_r4.licenseMode !== ctx_r4.LicenseMode.DataCapacityTrial && null !== (tmp_28_0 = null == (tmp_28_0 = core["\u0275\u0275pipeBind1"](48, 54, ctx_r4.currentCapacities$)) ? null : tmp_28_0.length) && void 0 !== tmp_28_0 && tmp_28_0)("ngIfElse", _r13), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", null == ctx_r4.selectedCapacity ? null : ctx_r4.selectedCapacity.unavailableToUser), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !ctx_r4.isMyWorkspace);
            }
        }
        function WorkspaceSettingPremiumConfigurationComponent_ng_template_10_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementStart"](0, "div", 78), core["\u0275\u0275text"](1), 
            core["\u0275\u0275pipe"](2, "localize"), core["\u0275\u0275elementStart"](3, "tri-link", 79), 
            core["\u0275\u0275text"](4), core["\u0275\u0275pipe"](5, "localize"), core["\u0275\u0275elementEnd"]()()), 
            2 & rf && (core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](2, 3, "Workspace_LicenseMode_Pro_Information"), " \xa0 "), 
            core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("external", !0), core["\u0275\u0275advance"](1), 
            core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](5, 5, "Generic_LearnMore"), " "));
        }
        function WorkspaceSettingPremiumConfigurationComponent_ng_template_12_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementStart"](0, "div", 78), core["\u0275\u0275text"](1), 
            core["\u0275\u0275pipe"](2, "localize"), core["\u0275\u0275elementStart"](3, "tri-link", 80), 
            core["\u0275\u0275text"](4), core["\u0275\u0275pipe"](5, "localize"), core["\u0275\u0275elementEnd"]()()), 
            2 & rf && (core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](2, 3, "Workspace_LicenseMode_Embedded_Information"), " \xa0 "), 
            core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("external", !0), core["\u0275\u0275advance"](1), 
            core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](5, 5, "Generic_LearnMore"), " "));
        }
        function WorkspaceSettingPremiumConfigurationComponent_ng_template_14_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275text"](0), 2 & rf) {
                var ctx_r10 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275textInterpolate1"](" ", (null == ctx_r10.selectedCapacity ? null : ctx_r10.selectedCapacity.name) + " - " + (null == ctx_r10.selectedCapacity ? null : ctx_r10.selectedCapacity.region), "\n");
            }
        }
        function WorkspaceSettingPremiumConfigurationComponent_ng_template_16_div_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 83), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r58 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate"](null == ctx_r58.selectedCapacity ? null : ctx_r58.selectedCapacity.name);
            }
        }
        function WorkspaceSettingPremiumConfigurationComponent_ng_template_16_div_2_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 84), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r59 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate1"](" ", ctx_r59.getCapacityRegionString(), "");
            }
        }
        function WorkspaceSettingPremiumConfigurationComponent_ng_template_16_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div"), core["\u0275\u0275template"](1, WorkspaceSettingPremiumConfigurationComponent_ng_template_16_div_1_Template, 2, 1, "div", 81), 
            core["\u0275\u0275template"](2, WorkspaceSettingPremiumConfigurationComponent_ng_template_16_div_2_Template, 2, 1, "div", 82), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r12 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", null == ctx_r12.selectedCapacity ? null : ctx_r12.selectedCapacity.name), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", (null == ctx_r12.selectedCapacity ? null : ctx_r12.selectedCapacity.sku) || (null == ctx_r12.selectedCapacity ? null : ctx_r12.selectedCapacity.region));
            }
        }
        function WorkspaceSettingPremiumConfigurationComponent_ng_template_18_div_0_ng_container_4_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275elementContainer"](0);
        }
        function WorkspaceSettingPremiumConfigurationComponent_ng_template_18_div_0_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 86)(1, "div", 18), core["\u0275\u0275text"](2), 
            core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](4, WorkspaceSettingPremiumConfigurationComponent_ng_template_18_div_0_ng_container_4_Template, 1, 0, "ng-container", 19), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                core["\u0275\u0275nextContext"](2);
                var _r11 = core["\u0275\u0275reference"](17);
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](3, 2, "Trident_Workspace_Settings_License_Capacity")), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngTemplateOutlet", _r11);
            }
        }
        function WorkspaceSettingPremiumConfigurationComponent_ng_template_18_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275template"](0, WorkspaceSettingPremiumConfigurationComponent_ng_template_18_div_0_Template, 5, 4, "div", 85), 
            2 & rf) {
                var ctx_r14 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("ngIf", (null == ctx_r14.selectedCapacity ? null : ctx_r14.selectedCapacity.name) || (null == ctx_r14.selectedCapacity ? null : ctx_r14.selectedCapacity.sku) || (null == ctx_r14.selectedCapacity ? null : ctx_r14.selectedCapacity.region));
            }
        }
        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, WorkspaceSettingPremiumConfigurationComponent = function() {
            function WorkspaceSettingPremiumConfigurationComponent(workspaceSettingsService, isTrident, clipboardWriteFunc, triLocalizationService, telemetryService, changeDetectorRef) {
                this.workspaceSettingsService = workspaceSettingsService, this.isTrident = isTrident, 
                this.clipboardWriteFunc = clipboardWriteFunc, this.triLocalizationService = triLocalizationService, 
                this.telemetryService = telemetryService, this.changeDetectorRef = changeDetectorRef, 
                this.updateResMsg$ = (0, of.of)(""), this.licenseMode = LicenseMode.PowerBIPro, 
                this.previousLicenseMode = "", this.currentCapacities$ = new BehaviorSubject.X([]), 
                this.defaultStorageFormat = StorageFormat.SmallDataset, this.capacitiesMapByLicenseMode = {}, 
                this.allowLargeDataset$ = new BehaviorSubject.X(void 0), this.configurationContent$ = new BehaviorSubject.X(ConfigurationContentType.EditConfiguration), 
                this.flagTridentUIHidePPU = !1, this.isShowPPUForMyWorkspace = this.workspaceSettingsService.showPPUForMyWorkspace, 
                this.isShowDataCapacityLicense = this.workspaceSettingsService.showDCCapacityOptions() && !!this.isTrident, 
                this.isShowDataCapacityTrialLicense = this.workspaceSettingsService.getShowDataCapacityTrialEnabled() && !!this.isTrident, 
                this.restrictMyFolderCapacityEnabled = !1, this.LicenseMode = LicenseMode, this.StorageFormat = StorageFormat, 
                this.ConfigurationContentType = ConfigurationContentType, this.connectionLink = "", 
                this.isShowConnectLinkCopied$ = new BehaviorSubject.X(!1), this.connectLinkCopyIconName = "copy_20_regular", 
                this.destroy$ = new Subject.xQ;
            }
            return Object.defineProperty(WorkspaceSettingPremiumConfigurationComponent.prototype, "isShowConnectionLink", {
                get: function() {
                    return !this.isMyWorkspace && this.licenseMode !== LicenseMode.PowerBIPro;
                },
                enumerable: !1,
                configurable: !0
            }), WorkspaceSettingPremiumConfigurationComponent.prototype.ngOnInit = function() {
                var _this = this;
                this.capacitiesMapByLicenseMode = this.createCapacitiesMapByLicenseMode(), this.setInitialLicenseMode(), 
                this.currentCapacitiesDropdownOptions$ = this.currentCapacities$.pipe((0, map.U)(function(currentCapacities) {
                    return currentCapacities.map(function(capacity) {
                        return {
                            data: capacity,
                            key: capacity.id,
                            text: capacity.name + " - " + capacity.region
                        };
                    });
                })), this.isWorkspaceAdmin = this.workspaceSettingsService.isWorkspaceAdmin, this.isMyWorkspace = this.workspaceSettingsService.isMyWorkspace, 
                this.saveInProgress$ = this.workspaceSettingsService.capacitySaveInProgress$, this.canSaveCapacity$ = this.workspaceSettingsService.canSaveCapacitySelection$, 
                this.restrictMyFolderCapacityEnabled = this.workspaceSettingsService.getFeatureSwitchState("restrictMyFolderCapacityEnabled"), 
                this.connectionLink = this.workspaceSettingsService.workspaceConnectionString, (0, 
                combineLatest.aj)([ this.updateResMsg$.pipe((0, startWith.O)("")), this.saveInProgress$ ]).pipe((0, 
                takeUntil.R)(this.destroy$)).subscribe(function(_a) {
                    _a[1] || (_a[0] ? (_this.resetConfiguration(), _this.configurationContent$.next(ConfigurationContentType.EditConfiguration)) : _this.configurationContent$.next(ConfigurationContentType.ShowConfiguration));
                }), this.isShowConnectLinkCopied$.pipe((0, filter.h)(function(v) {
                    return !!v;
                }), (0, delay.g)(6e3)).subscribe(function() {
                    return _this.isShowConnectLinkCopied$.next(!1);
                });
            }, WorkspaceSettingPremiumConfigurationComponent.prototype.ngOnDestroy = function() {
                var _a, _this = this;
                this.workspaceSettingsService.clearAllErrorMessages(), null === (_a = this.saveInProgress$) || void 0 === _a || _a.pipe((0, 
                take.q)(1)).subscribe(function(inProgress) {
                    inProgress || _this.workspaceSettingsService.resetCapacitySelection();
                }), this.destroy$.next(), this.destroy$.complete();
            }, WorkspaceSettingPremiumConfigurationComponent.prototype.editConfiguration = function() {
                this.configurationContent$.next(ConfigurationContentType.EditConfiguration);
            }, WorkspaceSettingPremiumConfigurationComponent.prototype.selectLicenseMode = function(selected, value) {
                selected && (this.previousLicenseMode = this.licenseMode, this.licenseMode = value, 
                this.currentCapacities$.next(this.capacitiesMapByLicenseMode[this.licenseMode]), 
                this.licenseMode === LicenseMode.TridentPremiumPerUser || this.licenseMode === LicenseMode.DataCapacityTrial ? (this.selectedCapacity = this.capacitiesMapByLicenseMode[this.licenseMode][0], 
                this.updateWithPremiumFilesAvailablity()) : (this.selectedCapacity = void 0, void 0 === this.workspaceSettingsService.selectedCapacity && this.workspaceSettingsService.disableCanSaveCapacitySelection()), 
                this.workspaceSettingsService.selectedCapacity = this.selectedCapacity, this.licenseMode === LicenseMode.PowerBIPro && (this.defaultStorageFormat = StorageFormat.SmallDataset, 
                this.workspaceSettingsService.defaultStorageFormat = this.defaultStorageFormat));
            }, WorkspaceSettingPremiumConfigurationComponent.prototype.selectCapacity = function(value) {
                this.selectedCapacity = value.data, this.updateWithPremiumFilesAvailablity(), this.workspaceSettingsService.selectedCapacity = this.selectedCapacity;
            }, WorkspaceSettingPremiumConfigurationComponent.prototype.selectDefaultStorageFormat = function(selected, value) {
                selected && (this.defaultStorageFormat = value, this.workspaceSettingsService.defaultStorageFormat = this.defaultStorageFormat);
            }, WorkspaceSettingPremiumConfigurationComponent.prototype.clickSelectLicense = function() {
                var correlationId = "";
                (this.previousLicenseMode === LicenseMode.PowerBIPro && (this.licenseMode === LicenseMode.TridentPremiumPerUser || this.licenseMode === LicenseMode.TridentPremiumPerCapacity) || this.previousLicenseMode === LicenseMode.TridentPremiumPerUser && this.licenseMode === LicenseMode.TridentPremiumPerCapacity) && (correlationId = "".concat((0, 
                v4.Z)(), ".").concat((0, v4.Z)()), this.telemetryService.logEvent("Upgrade license mode from ".concat(this.previousLicenseMode, " to ").concat(this.licenseMode), {
                    fromLicenseMode: this.previousLicenseMode,
                    toLicenseMode: this.licenseMode
                }, "Pending", (new Date).toISOString(), correlationId)), this.workspaceSettingsService.saveCapacitySelection(correlationId);
            }, WorkspaceSettingPremiumConfigurationComponent.prototype.clickCancel = function() {
                this.resetConfiguration(), this.configurationContent$.next(ConfigurationContentType.ShowConfiguration);
            }, WorkspaceSettingPremiumConfigurationComponent.prototype.licenseModeEnabled = function(licenseMode) {
                return licenseMode === LicenseMode.PowerBIPro || !(licenseMode === LicenseMode.TridentPremiumPerUser && !this.workspaceSettingsService.isPPUTierAvialbleToUser()) && this.capacitiesMapByLicenseMode[licenseMode].length > 0;
            }, WorkspaceSettingPremiumConfigurationComponent.prototype.getLicenseModeLocString = function(licenseMode) {
                switch (licenseMode) {
                  case LicenseMode.PowerBIPro:
                    return this.triLocalizationService.get("Trident_Workspace_Settings_License_Pro");

                  case LicenseMode.TridentPremiumPerUser:
                    return this.triLocalizationService.get("Workspace_LicenseMode_PPU");

                  case LicenseMode.TridentPremiumPerCapacity:
                    return this.triLocalizationService.get("Capacity_PremiumCapacity");

                  case LicenseMode.Embedded:
                    return this.triLocalizationService.get("Workspace_LicenseMode_Embedded");

                  case LicenseMode.DataCapacity:
                    return this.triLocalizationService.get("CapacityHeader_FabricCapacity");

                  case LicenseMode.DataCapacityTrial:
                    return this.triLocalizationService.get("CapacityHeader_TrialCapacity");

                  case LicenseMode.Unknown:
                    return this.triLocalizationService.get("Unknown");
                }
            }, WorkspaceSettingPremiumConfigurationComponent.prototype.getCapacityRegionString = function() {
                var _a, _b, _c, _d;
                return (null === (_a = this.selectedCapacity) || void 0 === _a ? void 0 : _a.sku) && (null === (_b = this.selectedCapacity) || void 0 === _b ? void 0 : _b.region) ? this.triLocalizationService.format("CapacitySetting_SKU_And_Region", this.selectedCapacity.sku, this.selectedCapacity.region) : (null === (_c = this.selectedCapacity) || void 0 === _c ? void 0 : _c.sku) ? this.triLocalizationService.format("CapacitySetting_SKU", this.selectedCapacity.sku) : (null === (_d = this.selectedCapacity) || void 0 === _d ? void 0 : _d.region) ? this.triLocalizationService.format("CapacitySetting_Region", this.selectedCapacity.region) : "";
            }, WorkspaceSettingPremiumConfigurationComponent.prototype.getNoPermissionsToCapacityMessageBarViewModel = function() {
                return {
                    bannerType: 0,
                    isRoundedCorners: !0,
                    allowDismiss: !1,
                    message: this.triLocalizationService.get("Trident_Workspace_Settings_Capacity_No_Access")
                };
            }, WorkspaceSettingPremiumConfigurationComponent.prototype.resetConfiguration = function() {
                this.workspaceSettingsService.resetCapacitySelection(), this.setInitialLicenseMode();
            }, WorkspaceSettingPremiumConfigurationComponent.prototype.setInitialLicenseMode = function() {
                var _a, _this = this;
                this.selectedCapacity = this.workspaceSettingsService.selectedCapacity, this.selectedCapacity ? this.selectedCapacity.unavailableToUser ? this.licenseMode = null != this.selectedCapacity.capacitySkuTier ? getLicenseModeFromCapacitySkuTier(this.selectedCapacity.capacitySkuTier) : LicenseMode.Unknown : (this.licenseMode = getLicenseModeFromCapacitySkuTier(this.selectedCapacity.capacitySkuTier), 
                this.selectedCapacity = null === (_a = this.capacitiesMapByLicenseMode[this.licenseMode]) || void 0 === _a ? void 0 : _a.find(function(c) {
                    var _a;
                    return c.id === (null === (_a = _this.selectedCapacity) || void 0 === _a ? void 0 : _a.id);
                })) : this.licenseMode = LicenseMode.PowerBIPro, this.currentCapacities$.next(this.capacitiesMapByLicenseMode[this.licenseMode]), 
                this.updateWithPremiumFilesAvailablity();
            }, WorkspaceSettingPremiumConfigurationComponent.prototype.createCapacitiesMapByLicenseMode = function() {
                var _a, map = ((_a = {})[LicenseMode.Unknown] = [], _a[LicenseMode.PowerBIPro] = [], 
                _a[LicenseMode.TridentPremiumPerUser] = [], _a[LicenseMode.TridentPremiumPerCapacity] = [], 
                _a[LicenseMode.Embedded] = [], _a[LicenseMode.DataCapacity] = [], _a[LicenseMode.DataCapacityTrial] = [], 
                _a);
                return this.workspaceSettingsService.allCapacities.forEach(function(capacity) {
                    var licenseMode = getLicenseModeFromCapacitySkuTier(capacity.capacitySkuTier);
                    licenseMode !== LicenseMode.PowerBIPro && map[licenseMode].push(capacity);
                }), map;
            }, WorkspaceSettingPremiumConfigurationComponent.prototype.updateWithPremiumFilesAvailablity = function() {
                var _this = this;
                this.selectedCapacity && !this.selectedCapacity.unavailableToUser ? this.workspaceSettingsService.checkPremiumFilesEnabled(this.selectedCapacity.id).then(function(v) {
                    _this.allowLargeDataset$.next(v), _this.defaultStorageFormat = _this.workspaceSettingsService.defaultStorageFormat, 
                    _this.changeDetectorRef.markForCheck();
                }) : (this.defaultStorageFormat = this.workspaceSettingsService.defaultStorageFormat, 
                this.allowLargeDataset$.next(!1), this.changeDetectorRef.markForCheck());
            }, WorkspaceSettingPremiumConfigurationComponent.prototype.copyConnectionLink = function() {
                this.clipboardWriteFunc(this.connectionLink), this.isShowConnectLinkCopied$.next(!0);
            }, WorkspaceSettingPremiumConfigurationComponent.prototype.mouseOverCopy = function() {
                this.connectLinkCopyIconName = "copy_20_filled";
            }, WorkspaceSettingPremiumConfigurationComponent.prototype.mouseOutCopy = function() {
                this.connectLinkCopyIconName = "copy_20_regular";
            }, WorkspaceSettingPremiumConfigurationComponent.\u0275fac = function(t) {
                return new (t || WorkspaceSettingPremiumConfigurationComponent)(core["\u0275\u0275directiveInject"](tri_workspace_settings.X), core["\u0275\u0275directiveInject"](trident_env.Y), core["\u0275\u0275directiveInject"](ClipboardWriteFuncInjectionToken), core["\u0275\u0275directiveInject"](localization_service.z), core["\u0275\u0275directiveInject"](WorkspaceSettingsTelemetryService), core["\u0275\u0275directiveInject"](core.ChangeDetectorRef));
            }, WorkspaceSettingPremiumConfigurationComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: WorkspaceSettingPremiumConfigurationComponent,
                selectors: [ [ "tri-workspace-settings-premium-configuration" ] ],
                inputs: {
                    updateResMsg$: "updateResMsg$"
                },
                standalone: !0,
                features: [ core["\u0275\u0275StandaloneFeature"] ],
                decls: 20,
                vars: 6,
                consts: [ [ 1, "configuration-container", "tri-flex", "tri-flex-row" ], [ 1, "anchor-icon" ], [ "name", "premium_20_regular" ], [ 3, "ngSwitch" ], [ "class", "container-right-part tri-flex-auto", 4, "ngSwitchCase" ], [ 4, "ngIf" ], [ "editConfigurationContent", "" ], [ "myWorkspaceProInfoTip", "" ], [ "embeddedInfoTip", "" ], [ "selectedCapacityString", "" ], [ "staticLicenseCapacityContent", "" ], [ "staticLicenseCapacity", "" ], [ 1, "container-right-part", "tri-flex-auto" ], [ 1, "summary-title", "title", "tri-body1" ], [ "tri-button", "", "appearance", "subtle", "size", "small", 3, "click" ], [ "name", "edit_20_regular" ], [ 1, "content" ], [ 1, "grey-text", "tri-caption2" ], [ 1, "tri-body1-strong" ], [ 4, "ngTemplateOutlet" ], [ 1, "title", "tri-body1-strong" ], [ 1, "footer" ], [ "tri-button", "", "appearance", "primary", 3, "disabled", "ngClass", "click" ], [ "tri-button", "", 3, "disabled", "ngClass", "click" ], [ 1, "tri-relative", "connection-link" ], [ 1, "section-title" ], [ 1, "tri-subtitle2" ], [ 1, "tri-body1" ], [ 1, "connection-container", "tri-flex" ], [ "disabled", "", 1, "connection-string", "tri-body1", "tri-flex-grow", 3, "triTooltip" ], [ "tri-button", "", "appearance", "subtle", 1, "copy-connection-button", 3, "click", "mouseover", "mouseout" ], [ 1, "copy-connection-icon", 3, "name" ], [ "class", "link-copied-tip", "role", "alert", 4, "ngIf" ], [ "role", "alert", 1, "link-copied-tip" ], [ 1, "connection-copied-message" ], [ 1, "license-radio-group" ], [ 1, "tri-caption1" ], [ "name", "licenseMode", "type", "radio", "aria-labelledby", "workspace-license-mode-pro", 3, "checked", "value", "disabled", "change" ], [ "id", "workspace-license-mode-pro", 1, "tri-body1-strong" ], [ "name", "info_20_regular", "class", "tooltip-info-button", "tabindex", "-1", 3, "triTooltip", 4, "ngIf" ], [ "target", "_blank", "href", "https://go.microsoft.com/fwlink/?linkid=2227278", "localize", "LearnMore", "localize-tooltip", "LearnMore", 3, "external" ], [ "name", "licenseMode", "type", "radio", "aria-labelledby", "workspace-license-mode-premium-per-user", 3, "checked", "value", "disabled", "change", 4, "ngIf" ], [ "name", "licenseMode", "type", "radio", "aria-labelledby", "workspace-license-mode-premium-per-capacity", 3, "checked", "value", "disabled", "change" ], [ "id", "workspace-license-mode-premium-per-capacity", 1, "tri-body1-strong" ], [ "target", "_blank", "href", "https://go.microsoft.com/fwlink/?linkid=2227277", "localize", "LearnMore", "localize-tooltip", "LearnMore", 3, "external" ], [ "name", "licenseMode", "type", "radio", "aria-labelledby", "workspace-license-mode-embedded", 3, "checked", "value", "disabled", "change" ], [ "id", "workspace-license-mode-embedded", 1, "tri-body1-strong" ], [ "name", "info_20_regular", "tabindex", "-1", 1, "tooltip-info-button", 3, "triTooltip" ], [ "target", "_blank", "href", "https://go.microsoft.com/fwlink/?linkid=2227525", "localize", "LearnMore", "localize-tooltip", "LearnMore", 3, "external" ], [ "name", "licenseMode", "type", "radio", "aria-labelledby", "workspace-license-mode-data-capacity", 3, "checked", "value", "disabled", "change", 4, "ngIf" ], [ "name", "licenseMode", "type", "radio", "aria-labelledby", "workspace-license-mode-data-capacity-trial", 3, "checked", "value", "disabled", "change", 4, "ngIf" ], [ "class", "license-capacity-group", 4, "ngIf", "ngIfElse" ], [ 3, "viewModel", 4, "ngIf" ], [ "name", "licenseMode", "type", "radio", "aria-labelledby", "workspace-license-mode-premium-per-user", 3, "checked", "value", "disabled", "change" ], [ "id", "workspace-license-mode-premium-per-user", 1, "tri-body1-strong" ], [ "target", "_blank", "href", "https://go.microsoft.com/fwlink/?linkid=2227449", "localize", "LearnMore", "localize-tooltip", "LearnMore", 3, "external" ], [ "name", "licenseMode", "type", "radio", "aria-labelledby", "workspace-license-mode-data-capacity", 3, "checked", "value", "disabled", "change" ], [ "id", "workspace-license-mode-data-capacity", 1, "tri-body1-strong" ], [ "target", "_blank", "href", "https://go.microsoft.com/fwlink/?linkid=2227397", "localize", "LearnMore", "localize-tooltip", "LearnMore", 3, "external" ], [ "name", "licenseMode", "type", "radio", "aria-labelledby", "workspace-license-mode-data-capacity-trial", 3, "checked", "value", "disabled", "change" ], [ "id", "workspace-license-mode-data-capacity-trial", 1, "tri-body1-strong" ], [ "target", "_blank", "href", "https://go.microsoft.com/fwlink/?linkid=2227617", "localize", "LearnMore", "localize-tooltip", "LearnMore", 3, "external" ], [ 1, "license-capacity-group" ], [ 3, "value", "isDisabled", "valueChange" ], [ 1, "tri-body1", 3, "triTooltip", "triTooltipDisabled" ], [ 3, "value", 4, "ngFor", "ngForOf" ], [ "class", "tri-flex error-message-container", 4, "ngIf" ], [ 3, "value" ], [ 1, "tri-flex", "error-message-container" ], [ "name", "error_circle_12_filled", 1, "error-message-icon" ], [ 3, "viewModel" ], [ "class", "default-storage-format", 4, "ngIf" ], [ 1, "default-storage-format" ], [ "target", "_blank", "href", "https://docs.microsoft.com/en-us/power-bi/enterprise/service-premium-large-models#enable-large-models", "localize", "LearnMore", "localize-tooltip", "LearnMore", 3, "external" ], [ "name", "defaultStorageFormat", "type", "radio", "aria-labelledby", "workspace-default-storage-small-dataset", 3, "checked", "value", "disabled", "change" ], [ "id", "workspace-default-storage-small-dataset", 1, "tri-body1" ], [ "name", "defaultStorageFormat", "type", "radio", "aria-labelledby", "workspace-default-storage-large-dataset", 3, "checked", "value", "disabled", "change" ], [ "id", "workspace-default-storage-large-dataset", 1, "tri-body1" ], [ 1, "info-tip-content" ], [ "href", "https://go.microsoft.com/fwlink/?linkid=2218869", "target", "_blank", "rel", "noopener noreferrer", 3, "external" ], [ "href", "https://go.microsoft.com/fwlink/?linkid=2159726", "target", "_blank", "rel", "noopener noreferrer", 3, "external" ], [ "class", "tri-caption1-strong", 4, "ngIf" ], [ "class", "tri-caption1 grey-text", 4, "ngIf" ], [ 1, "tri-caption1-strong" ], [ 1, "tri-caption1", "grey-text" ], [ "class", "section-title  no-margin-section-title", 4, "ngIf" ], [ 1, "section-title", "no-margin-section-title" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementStart"](0, "div", 0)(1, "div", 1), core["\u0275\u0275element"](2, "tri-svg-icon", 2), 
                    core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementContainerStart"](3, 3), 
                    core["\u0275\u0275pipe"](4, "async"), core["\u0275\u0275template"](5, WorkspaceSettingPremiumConfigurationComponent_div_5_Template, 18, 12, "div", 4), 
                    core["\u0275\u0275template"](6, WorkspaceSettingPremiumConfigurationComponent_div_6_Template, 23, 36, "div", 4), 
                    core["\u0275\u0275elementContainerEnd"](), core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](7, WorkspaceSettingPremiumConfigurationComponent_ng_container_7_Template, 17, 15, "ng-container", 5), 
                    core["\u0275\u0275template"](8, WorkspaceSettingPremiumConfigurationComponent_ng_template_8_Template, 51, 56, "ng-template", null, 6, core["\u0275\u0275templateRefExtractor"]), 
                    core["\u0275\u0275template"](10, WorkspaceSettingPremiumConfigurationComponent_ng_template_10_Template, 6, 7, "ng-template", null, 7, core["\u0275\u0275templateRefExtractor"]), 
                    core["\u0275\u0275template"](12, WorkspaceSettingPremiumConfigurationComponent_ng_template_12_Template, 6, 7, "ng-template", null, 8, core["\u0275\u0275templateRefExtractor"]), 
                    core["\u0275\u0275template"](14, WorkspaceSettingPremiumConfigurationComponent_ng_template_14_Template, 1, 1, "ng-template", null, 9, core["\u0275\u0275templateRefExtractor"]), 
                    core["\u0275\u0275template"](16, WorkspaceSettingPremiumConfigurationComponent_ng_template_16_Template, 3, 2, "ng-template", null, 10, core["\u0275\u0275templateRefExtractor"]), 
                    core["\u0275\u0275template"](18, WorkspaceSettingPremiumConfigurationComponent_ng_template_18_Template, 1, 1, "ng-template", null, 11, core["\u0275\u0275templateRefExtractor"])), 
                    2 & rf && (core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngSwitch", core["\u0275\u0275pipeBind1"](4, 4, ctx.configurationContent$)), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngSwitchCase", ctx.ConfigurationContentType.ShowConfiguration), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", ctx.ConfigurationContentType.EditConfiguration), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx.isShowConnectionLink));
                },
                dependencies: [ common.NgIf, common.NgFor, common.NgClass, common.NgSwitch, common.NgSwitchCase, common.NgTemplateOutlet, common.AsyncPipe, localization_module.Y, localize_pipe.Y, tri_spinner_module.d, tri_spinner_component.D, tri_message_bar.I, tri_message_bar_component.h, tri_dropdown.lK, tri_dropdown_component.M3, tri_dropdown_item_component.l, tri_dropdown_item_menu_directive.q, tri_dropdown_component.ii, tri_radio_button.W, tri_radio_button_component.Y, tri_radio_group_component.Z, tri_svg_icon.T6, tri_svg_icon_component.M, tri_tooltip.w, tri_tooltip_directive.Z, tri_link.m, tri_link_component.v ],
                styles: [ "[_nghost-%COMP%]   .license-radio-group[_ngcontent-%COMP%]     .tri-radio-button-internal section{align-items:start}[_nghost-%COMP%]   .license-radio-group[_ngcontent-%COMP%]     .tri-radio-button-internal section tri-link>a{display:inline-flex}[_nghost-%COMP%]   .license-radio-group[_ngcontent-%COMP%]     .tri-radio-button-internal section tri-link>a tri-svg-icon{width:16px}[_nghost-%COMP%]   .license-radio-group[_ngcontent-%COMP%]     .tri-radio-button-internal section .tooltip-info-button{height:12px;width:12px;fill:var(--colorNeutralForeground3);margin-left:8px;margin-bottom:4px}[_nghost-%COMP%]   .no-margin-section-title[_ngcontent-%COMP%]{margin-bottom:0}[_nghost-%COMP%]   .default-storage-format[_ngcontent-%COMP%]     .tri-radio-button-internal section{padding:6px,8px}[_nghost-%COMP%]   tri-dropdown[_ngcontent-%COMP%]{width:100%}[_nghost-%COMP%]   .license-edit-prompt[_ngcontent-%COMP%]{margin-top:4px}[_nghost-%COMP%]   .grey-text[_ngcontent-%COMP%]{color:var(--colorNeutralForeground4)}[_nghost-%COMP%]   .connection-link[_ngcontent-%COMP%]{margin-top:32px}[_nghost-%COMP%]   .connection-container[_ngcontent-%COMP%]{border:1px solid var(--colorNeutralStroke1);box-sizing:border-box;border-radius:4px;height:32px;align-items:center;padding:0 12px}[_nghost-%COMP%]   .connection-container[_ngcontent-%COMP%]   .connection-string[_ngcontent-%COMP%]{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;-webkit-user-select:none;-ms-user-select:none;user-select:none}[_nghost-%COMP%]   .connection-container[_ngcontent-%COMP%]   .copy-connection-button[_ngcontent-%COMP%]{padding:0}[_nghost-%COMP%]   .connection-container[_ngcontent-%COMP%]   .copy-connection-button[_ngcontent-%COMP%]:hover   .copy-connection-icon[_ngcontent-%COMP%], [_nghost-%COMP%]   .connection-container[_ngcontent-%COMP%]   .copy-connection-button[_ngcontent-%COMP%]:focus   .copy-connection-icon[_ngcontent-%COMP%], [_nghost-%COMP%]   .connection-container[_ngcontent-%COMP%]   .copy-connection-button[_ngcontent-%COMP%]:active   .copy-connection-icon[_ngcontent-%COMP%]{fill:var(--colorBrandForeground1)}[_nghost-%COMP%]   .link-copied-tip[_ngcontent-%COMP%]{position:absolute;right:0;box-shadow:0 4px 8px 0 var(--globalColorBlackAlpha10);padding:6px 12px}[_nghost-%COMP%]   .link-copied-tip[_ngcontent-%COMP%]   .connection-copied-message[_ngcontent-%COMP%]{white-space:pre-wrap}" ],
                changeDetection: 0
            }), WorkspaceSettingPremiumConfigurationComponent;
        }(), PrivateEndpointConnectionStateStatus = function(PrivateEndpointConnectionStateStatus) {
            return PrivateEndpointConnectionStateStatus.Pending = "Pending", PrivateEndpointConnectionStateStatus.Approved = "Approved", 
            PrivateEndpointConnectionStateStatus.Rejected = "Rejected", PrivateEndpointConnectionStateStatus.Disconnected = "Disconnected", 
            PrivateEndpointConnectionStateStatus;
        }({}), PrivateEndpointProvisioningState = function(PrivateEndpointProvisioningState) {
            return PrivateEndpointProvisioningState.Provisioning = "Provisioning", PrivateEndpointProvisioningState.Updating = "Updating", 
            PrivateEndpointProvisioningState.Succeeded = "Succeeded", PrivateEndpointProvisioningState.Deleting = "Deleting", 
            PrivateEndpointProvisioningState.Failed = "Failed", PrivateEndpointProvisioningState;
        }({}), PrivateEndpointsColumn = function(PrivateEndpointsColumn) {
            return PrivateEndpointsColumn.Name = "Name", PrivateEndpointsColumn.ProvisioningState = "ProvisioningState", 
            PrivateEndpointsColumn.ApprovalState = "ApprovalState", PrivateEndpointsColumn;
        }({}), datasourceGroup_CognitiveServices = ((_a = {}).AzureDatasource_CognitiveServices = "account", 
        _a), datasourceGroup_MariaDB = ((_b = {}).AzureDatasource_AzureDatabaseForMariaDB = "mariadbServer", 
        _b), datasourceGroup_MySQL = ((_c = {}).AzureDatasource_AzureDatabaseForMySQL = "mysqlServer", 
        _c), datasourceGroup_PostgreSQL = ((_d = {}).AzureDatasource_AzureDatabaseForPostgreSQL = "postgresqlServer", 
        _d), datasourceGroup_DocumentDb = ((_e = {}).AzureDatasource_AzureCosmosDBForMongoDB = "MongoDB", 
        _e.AzureDatasource_AzureCosmosDBForNoSQL = "Sql", _e), datasourceGroup_Insights = ((_f = {}).AzureDatasource_AzureMonitorPrivateLinkScopes = "azuremonitor", 
        _f), datasourceGroup_KeyVault = ((_g = {}).AzureDatasource_AzureKeyVault = "vault", 
        _g), datasourceGroup_Kusto = ((_h = {}).AzureDatasource_AzureDataExplorer_Kusto = "kusto", 
        _h), datasourceGroup_MachineLearningService = ((_j = {}).AzureDatasource_AzureMachineLearning = "amlworkspace", 
        _j), datasourceGroup_Network_ApplicationGateway = ((_k = {}).AzureDatasource_ApplicationGateway = "appGwPublicFrontendIpIPv4", 
        _k), datasourceGroup_Network_PrivateLinkService = ((_l = {}).AzureDatasource_PrivateLinkService = "privateLinkServices", 
        _l), datasourceGroup_Purview = ((_m = {}).AzureDatasource_MicrosoftPurview = "account", 
        _m), datasourceGroup_Search = ((_o = {}).AzureDatasource_AzureSearch = "searchService", 
        _o), datasourceGroup_Sql = ((_p = {}).SqlAzureDbContentProvider_Title = "sqlServer", 
        _p), datasourceGroup_SqlManagedInstance = ((_q = {}).AzureDatasource_AzureSqlDatabase_ManagedInstance = "managedInstance", 
        _q), datasourceGroup_Storage = ((_r = {}).SettingsDataSource_SettingsDataSourceType_AzureBlob = "blob", 
        _r.SettingsDataSource_SettingsDataSourceType_AzureDataLakeStorage = "dfs", _r.AzureDatasource_AzureFileStorage = "file", 
        _r.AzureDatasource_AzureQueueStorage = "queue", _r.SettingsDataSource_SettingsDataSourceType_AzureTable = "table", 
        _r.AzureDatasource_StaticWebsite = "web", _r), datasourceGroup_Synapse = ((_s = {}).AzureDatasource_AzureSynapseAnalytics_SQL = "sql", 
        _s.AzureDatasource_AzureSynapseAnalytics_Dev = "dev", _s.AzureDatasource_AzureSynapseAnalytics_SqlOnDemand = "sqlOnDemand", 
        _s), datasourceGroup_Web = ((_t = {}).AzureDatasource_AzureFunction = "sites", _t), datasourceGroup_Databricks = ((_u = {}).AzureDatasource_AzureDatabricks = "databricks_ui_api", 
        _u), datasourceGroup_IOTHub = ((_v = {}).TridentStreaming_IoTHub = "iotHub", _v), datasourceGroup_EventHub = ((_w = {}).AzureDatasource_EventHub = "namespace", 
        _w);
        function getDatasourceConfigs(provider, resourceType) {
            switch (provider.toLowerCase()) {
              case "Microsoft.CognitiveServices".toLowerCase():
                return datasourceGroup_CognitiveServices;

              case "Microsoft.Databricks".toLowerCase():
                return datasourceGroup_Databricks;

              case "Microsoft.DBforMariaDB".toLowerCase():
                return datasourceGroup_MariaDB;

              case "Microsoft.DBforMySQL".toLowerCase():
                return datasourceGroup_MySQL;

              case "Microsoft.DBforPostgreSQL".toLowerCase():
                return datasourceGroup_PostgreSQL;

              case "Microsoft.DocumentDB".toLowerCase():
                return datasourceGroup_DocumentDb;

              case "Microsoft.Insights".toLowerCase():
                return datasourceGroup_Insights;

              case "Microsoft.KeyVault".toLowerCase():
                return datasourceGroup_KeyVault;

              case "Microsoft.Kusto".toLowerCase():
                return datasourceGroup_Kusto;

              case "Microsoft.MachineLearningServices".toLowerCase():
                return datasourceGroup_MachineLearningService;

              case "Microsoft.Network".toLowerCase():
                if (resourceType.toLowerCase() === "applicationGateways".toLowerCase()) return datasourceGroup_Network_ApplicationGateway;
                if (resourceType.toLowerCase() === "privateLinkServices".toLowerCase()) return datasourceGroup_Network_PrivateLinkService;
                break;

              case "Microsoft.Purview".toLowerCase():
                return datasourceGroup_Purview;

              case "Microsoft.Search".toLowerCase():
                return datasourceGroup_Search;

              case "Microsoft.Sql".toLowerCase():
                if (resourceType.toLowerCase() === "managedInstances".toLowerCase()) return datasourceGroup_SqlManagedInstance;
                if (resourceType.toLowerCase() === "servers".toLowerCase()) return datasourceGroup_Sql;
                break;

              case "Microsoft.Storage".toLowerCase():
                return datasourceGroup_Storage;

              case "Microsoft.Synapse".toLowerCase():
                return datasourceGroup_Synapse;

              case "Microsoft.Web".toLowerCase():
                return datasourceGroup_Web;

              case "Microsoft.EventHub".toLowerCase():
                return datasourceGroup_EventHub;

              case "Microsoft.Devices".toLowerCase():
                return datasourceGroup_IOTHub;

              default:
                return null;
            }
            return null;
        }
        var resourceIdRegex = new RegExp("/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/(?<provider>[^/]+)/(?<resourceType>[^/]+)/(?<resourceName>[^/]+)", "i");
        function isPrivateEndpointsErrorMessage(errorCode) {
            switch (errorCode) {
              case "ManagedVNet_PrivateEndpointNotFound":
              case "ManagedVNet_InvalidPrivateEndpointName":
              case "ManagedVNet_InvalidPrivateEndpointResourceID":
              case "ManagedVNet_DuplicatePrivateEndpointName":
              case "ManagedVNet_DuplicatePrivateEndpointResourceID":
              case "ManagedVNet_WorkspaceOperationAlreadyInProgress":
              case "ManagedVNet_UnsupportedRegion":
              case "ManagedVNet_UnsupportedSku":
              case "ManagedVNet_WorkspaceLockInternalError":
              case "ManagedVNet_InvalidRequestMessage":
              case "ManagedVNet_NonCompliant":
              case "ManagedVNet_IncorrectType":
                return !0;

              default:
                return !1;
            }
        }
        function isVNetErrorMessage(errorCode) {
            return "PowerBICapacityFoldersMigrationVNetMigrationNotAllowedException" === errorCode;
        }
        function getErrorCodeLearnMore(errorCode) {
            return "PowerBICapacityFoldersMigrationVNetMigrationNotAllowedException" === errorCode ? "https://go.microsoft.com/fwlink/?linkid=2257669" : "";
        }
        function WorkspaceSettingsPremiumComponent_ng_container_0_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275element"](1, "tri-spinner", 2), 
            core["\u0275\u0275elementContainerEnd"]());
        }
        function WorkspaceSettingsPremiumComponent_tri_message_bar_2_Template(rf, ctx) {
            if (1 & rf) {
                var _r4 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "tri-message-bar", 3), core["\u0275\u0275listener"]("hideMessageBar", function() {
                    core["\u0275\u0275restoreView"](_r4);
                    var ctx_r3 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r3.dismissMessageBar());
                }), core["\u0275\u0275pipe"](1, "async"), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r1 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("viewModel", ctx_r1.getMessageBarViewModel(core["\u0275\u0275pipeBind1"](1, 1, ctx_r1.messageBarModel$)));
            }
        }
        function WorkspaceSettingsPremiumComponent_ng_container_4_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "div", 4)(2, "div", 5), 
            core["\u0275\u0275text"](3), core["\u0275\u0275pipe"](4, "localize"), core["\u0275\u0275elementEnd"](), 
            core["\u0275\u0275elementStart"](5, "div", 6), core["\u0275\u0275text"](6), core["\u0275\u0275pipe"](7, "localize"), 
            core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementStart"](8, "div"), 
            core["\u0275\u0275element"](9, "tri-workspace-settings-premium-configuration", 7), 
            core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var ctx_r2 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](4, 3, "License_Info")), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](7, 5, "Premium_Description")), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("updateResMsg$", ctx_r2.updateResMsg$);
            }
        }
        var workspace_settings_about_model_a, WorkspaceSettingsPremiumComponent = function() {
            function WorkspaceSettingsPremiumComponent(workspaceSettingsService, triLocalizationService) {
                this.workspaceSettingsService = workspaceSettingsService, this.triLocalizationService = triLocalizationService, 
                this.updateResMsg$ = (0, of.of)(""), this.messageBarModel$ = new BehaviorSubject.X(void 0), 
                this.destroy$ = new Subject.xQ;
            }
            return WorkspaceSettingsPremiumComponent.prototype.ngOnInit = function() {
                var _this = this;
                this.initialized$ = this.workspaceSettingsService.capacitiesInitialized$, this.updateResMsg$ = (0, 
                merge.T)(this.workspaceSettingsService.capacityUpdateErrorMessage$.pipe((0, filter.h)(function(error) {
                    return !!error;
                })), this.workspaceSettingsService.capacityUpdateSuccess$.pipe((0, filter.h)(function(success) {
                    return !!success;
                }), (0, map.U)(function() {
                    return "";
                }))), (0, combineLatest.aj)([ this.updateResMsg$, this.workspaceSettingsService.capacitySaveInProgress$ ]).pipe((0, 
                takeUntil.R)(this.destroy$), (0, filter.h)(function(_a) {
                    return !_a[1];
                }), (0, map.U)(function(_a) {
                    var msg = _a[0];
                    return msg ? {
                        id: (0, v4.Z)(),
                        bannerType: 1,
                        message: msg
                    } : {
                        id: (0, v4.Z)(),
                        bannerType: 3,
                        message: _this.triLocalizationService.get("Sharing_EditDashboardUsersSuccess")
                    };
                })).subscribe(function(messageBarModel) {
                    _this.messageBarModel$.next(messageBarModel);
                });
            }, WorkspaceSettingsPremiumComponent.prototype.ngOnDestroy = function() {
                this.destroy$.next(), this.destroy$.complete();
            }, WorkspaceSettingsPremiumComponent.prototype.dismissMessageBar = function() {
                this.messageBarModel$.next(void 0);
            }, WorkspaceSettingsPremiumComponent.prototype.getMessageBarViewModel = function(messageBarModel) {
                if (messageBarModel) {
                    var message = messageBarModel.message, finalMessageBarModel = {
                        id: messageBarModel.id,
                        bannerType: messageBarModel.bannerType,
                        allowDismiss: !0,
                        isRoundedCorners: !0,
                        message
                    };
                    if (message && isVNetErrorMessage(message)) {
                        var learnMoreLink = getErrorCodeLearnMore(message), localizedMessage = this.triLocalizationService.get("Workspace_PrivateEndpointsErrorMessage_".concat(message));
                        learnMoreLink && (finalMessageBarModel.link = learnMoreLink, finalMessageBarModel.linkDisplayName = this.triLocalizationService.get("LearnMore")), 
                        finalMessageBarModel.message = localizedMessage;
                    }
                    return finalMessageBarModel;
                }
            }, WorkspaceSettingsPremiumComponent.\u0275fac = function(t) {
                return new (t || WorkspaceSettingsPremiumComponent)(core["\u0275\u0275directiveInject"](tri_workspace_settings.X), core["\u0275\u0275directiveInject"](localization_service.z));
            }, WorkspaceSettingsPremiumComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: WorkspaceSettingsPremiumComponent,
                selectors: [ [ "tri-workspace-settings-premium-v2" ] ],
                standalone: !0,
                features: [ core["\u0275\u0275StandaloneFeature"] ],
                decls: 6,
                vars: 9,
                consts: [ [ 4, "ngIf" ], [ 3, "viewModel", "hideMessageBar", 4, "ngIf" ], [ 1, "tri-flex", "tri-items-center", "tri-justify-center", "tri-h-full" ], [ 3, "viewModel", "hideMessageBar" ], [ 1, "tab-title" ], [ 1, "tri-title3" ], [ 1, "tri-body1" ], [ 3, "updateResMsg$" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275template"](0, WorkspaceSettingsPremiumComponent_ng_container_0_Template, 2, 0, "ng-container", 0), 
                    core["\u0275\u0275pipe"](1, "async"), core["\u0275\u0275template"](2, WorkspaceSettingsPremiumComponent_tri_message_bar_2_Template, 2, 3, "tri-message-bar", 1), 
                    core["\u0275\u0275pipe"](3, "async"), core["\u0275\u0275template"](4, WorkspaceSettingsPremiumComponent_ng_container_4_Template, 10, 7, "ng-container", 0), 
                    core["\u0275\u0275pipe"](5, "async")), 2 & rf && (core["\u0275\u0275property"]("ngIf", !1 === core["\u0275\u0275pipeBind1"](1, 3, ctx.initialized$)), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](3, 5, ctx.messageBarModel$)), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](5, 7, ctx.initialized$)));
                },
                dependencies: [ WorkspaceSettingPremiumConfigurationComponent, localization_module.Y, localize_pipe.Y, tri_spinner_module.d, tri_spinner_component.D, tri_message_bar.I, tri_message_bar_component.h, tri_link.m, common.NgIf, common.AsyncPipe ],
                encapsulation: 2,
                changeDetection: 0
            }), WorkspaceSettingsPremiumComponent;
        }(), WorkspaceSettingsModule = function() {
            function WorkspaceSettingsModule() {}
            return WorkspaceSettingsModule.forRoot = function(config) {
                return {
                    ngModule: WorkspaceSettingsModule,
                    providers: [ {
                        provide: tri_workspace_settings.X,
                        useExisting: config.workspaceSettingsService
                    } ]
                };
            }, WorkspaceSettingsModule.\u0275fac = function(t) {
                return new (t || WorkspaceSettingsModule);
            }, WorkspaceSettingsModule.\u0275mod = core["\u0275\u0275defineNgModule"]({
                type: WorkspaceSettingsModule
            }), WorkspaceSettingsModule.\u0275inj = core["\u0275\u0275defineInjector"]({
                imports: [ common.CommonModule, domains_ui_src.AP, fesm2022_forms.u5.withConfig({
                    callSetDisabledState: "whenDisabledForLegacyCode"
                }), tri_svg_icon.T6, localization_module.Y, telemetry_module.l, legacy_form_field.wp, legacy_select.uw, tri_spinner_module.d, tri_message_bar.I, tri_radio_button.W, tri_checkbox.B, tri_switch.Jy, tri_tooltip.w, tri_dropdown.lK, tri_search_box.b, tri_collapsed_container.F, tri_empty_state.OT, GitFeatureConnectModule, SettingsSharedUIModule, tri_link.m, TriSliderModule, divider.t, TriStatusIndicatorModule, WorkspaceSettingsSectionDividerComponent, WorkspaceSettingsGeneralComponent, WorkspaceSettingsAzureConnectionsComponent, WorkspaceSettingsPremiumComponent, WorkspaceSettingsPlatformMonitoringComponent ]
            }), WorkspaceSettingsModule;
        }(), DatasourceBindingSecurityMode = function(DatasourceBindingSecurityMode) {
            return DatasourceBindingSecurityMode.Origin = "Origin", DatasourceBindingSecurityMode.Strict = "Strict", 
            DatasourceBindingSecurityMode;
        }({}), AutoSaveFieldsActivityName = ((workspace_settings_about_model_a = {}).Image = WorkspaceSettingsActivityNames.UpdateImage, 
        workspace_settings_about_model_a.Name = WorkspaceSettingsActivityNames.UpdateName, 
        workspace_settings_about_model_a.Description = WorkspaceSettingsActivityNames.UpdateDescription, 
        workspace_settings_about_model_a.ContactList = WorkspaceSettingsActivityNames.UpdateContracts, 
        workspace_settings_about_model_a.OneDrive = WorkspaceSettingsActivityNames.UpdateOneDrive, 
        workspace_settings_about_model_a.AllowContributorApp = "", workspace_settings_about_model_a.AllowWebModeling = "", 
        workspace_settings_about_model_a.DomainObjectId = "", workspace_settings_about_model_a.DatasourceBindingSecurityMode = "", 
        workspace_settings_about_model_a), skipWhile = __webpack_require__(41198), workspace_settings_about_component_c0 = [ "imageFileInput" ];
        function WorkspaceSettingsAboutComponent_ng_container_0_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275element"](1, "tri-spinner", 5), 
            core["\u0275\u0275elementContainerEnd"]());
        }
        function WorkspaceSettingsAboutComponent_ng_container_2_tri_message_bar_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r11 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "tri-message-bar", 7), core["\u0275\u0275listener"]("hideMessageBar", function() {
                    core["\u0275\u0275restoreView"](_r11);
                    var index_r7 = core["\u0275\u0275nextContext"]().index, ctx_r9 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r9.dismissError(index_r7));
                }), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r12 = core["\u0275\u0275nextContext"](), error_r6 = ctx_r12.$implicit, index_r7 = ctx_r12.index, ctx_r8 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("viewModel", ctx_r8.getErrorMessageBarViewModel(error_r6, index_r7));
            }
        }
        function WorkspaceSettingsAboutComponent_ng_container_2_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, WorkspaceSettingsAboutComponent_ng_container_2_tri_message_bar_1_Template, 1, 1, "tri-message-bar", 6), 
            core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275elementContainerEnd"]()), 
            2 & rf) {
                var tmp_0_0, error_r6 = ctx.$implicit, index_r7 = ctx.index, ctx_r1 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !1 === (null == (tmp_0_0 = core["\u0275\u0275pipeBind1"](2, 1, ctx_r1.apiErrorsDismissedIndices$)) ? null : tmp_0_0[index_r7]) && error_r6);
            }
        }
        function WorkspaceSettingsAboutComponent_ng_container_4_img_7_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275element"](0, "img", 31), core["\u0275\u0275pipe"](1, "async")), 
            2 & rf) {
                var ctx_r13 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275property"]("src", core["\u0275\u0275pipeBind1"](1, 2, ctx_r13.workspaceImgSrc$), core["\u0275\u0275sanitizeUrl"]), 
                core["\u0275\u0275attribute"]("data-testid", "workspace-settings-about-logo-img");
            }
        }
        function WorkspaceSettingsAboutComponent_ng_container_4_tri_svg_icon_9_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "tri-svg-icon", 32), 2 & rf && core["\u0275\u0275attribute"]("data-testid", "workspace-settings-about-logo-default");
        }
        function WorkspaceSettingsAboutComponent_ng_container_4_ng_container_11_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "div", 33), 
            core["\u0275\u0275element"](2, "tri-spinner"), core["\u0275\u0275elementEnd"](), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf && (core["\u0275\u0275advance"](1), 
            core["\u0275\u0275attribute"]("data-testid", "workspace-settings-about-logo-img-loading"));
        }
        function WorkspaceSettingsAboutComponent_ng_container_4_div_28_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 34), core["\u0275\u0275element"](1, "tri-svg-icon", 35), 
            core["\u0275\u0275text"](2), core["\u0275\u0275pipe"](3, "async"), core["\u0275\u0275elementEnd"]()), 
            2 & rf) {
                var ctx_r16 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](3, 1, ctx_r16.imageFileError$), " ");
            }
        }
        function WorkspaceSettingsAboutComponent_ng_container_4_tri_spinner_38_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "tri-spinner", 36);
        }
        function WorkspaceSettingsAboutComponent_ng_container_4_div_40_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementStart"](0, "div", 37), core["\u0275\u0275element"](1, "tri-svg-icon", 35), 
            core["\u0275\u0275text"](2), core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementEnd"]()), 
            2 & rf && (core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](3, 1, "NotAvailable_PleaseEdit_Text"), " "));
        }
        function WorkspaceSettingsAboutComponent_ng_container_4_div_42_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementStart"](0, "div", 37), core["\u0275\u0275element"](1, "tri-svg-icon", 35), 
            core["\u0275\u0275text"](2), core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementEnd"]()), 
            2 & rf && (core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](3, 1, "Validation_Empty"), " "));
        }
        function WorkspaceSettingsAboutComponent_ng_container_4_tri_spinner_52_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "tri-spinner", 36);
        }
        function WorkspaceSettingsAboutComponent_ng_container_4_trident_domains_dropdown_54_Template(rf, ctx) {
            if (1 & rf) {
                var _r27 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "trident-domains-dropdown", 38), core["\u0275\u0275listener"]("domainSelected", function($event) {
                    core["\u0275\u0275restoreView"](_r27);
                    var ctx_r26 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r26.onDomainSelected($event));
                }), core["\u0275\u0275pipe"](1, "async"), core["\u0275\u0275pipe"](2, "async"), 
                core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r21 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275property"]("selectedDomainObjectId", ctx_r21.getSelectedDomain())("shouldBeDisabled", core["\u0275\u0275pipeBind1"](1, 3, ctx_r21.autoSaveInProgress.DomainObjectId) || !ctx_r21.isWorkspaceAdmin)("showSpinner", !!core["\u0275\u0275pipeBind1"](2, 5, ctx_r21.autoSaveInProgress.DomainObjectId));
            }
        }
        function WorkspaceSettingsAboutComponent_ng_container_4_ng_container_60_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275elementContainer"](0);
        }
        function WorkspaceSettingsAboutComponent_ng_container_4_tri_spinner_61_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "tri-spinner", 36);
        }
        function WorkspaceSettingsAboutComponent_ng_container_4_ng_container_68_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275elementContainer"](0);
        }
        function WorkspaceSettingsAboutComponent_ng_container_4_tri_spinner_69_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "tri-spinner", 36);
        }
        var workspace_settings_about_component_c1 = function(a0) {
            return {
                "no-image": a0
            };
        }, workspace_settings_about_component_c2 = function(a0) {
            return {
                $implicit: a0
            };
        };
        function WorkspaceSettingsAboutComponent_ng_container_4_Template(rf, ctx) {
            if (1 & rf) {
                var _r29 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "label", 8), 
                core["\u0275\u0275text"](2), core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementEnd"](), 
                core["\u0275\u0275elementStart"](4, "div", 9)(5, "div", 10), core["\u0275\u0275pipe"](6, "async"), 
                core["\u0275\u0275template"](7, WorkspaceSettingsAboutComponent_ng_container_4_img_7_Template, 2, 4, "img", 11), 
                core["\u0275\u0275pipe"](8, "async"), core["\u0275\u0275template"](9, WorkspaceSettingsAboutComponent_ng_container_4_tri_svg_icon_9_Template, 1, 1, "tri-svg-icon", 12), 
                core["\u0275\u0275pipe"](10, "async"), core["\u0275\u0275template"](11, WorkspaceSettingsAboutComponent_ng_container_4_ng_container_11_Template, 3, 1, "ng-container", 0), 
                core["\u0275\u0275pipe"](12, "async"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](13, "div", 13)(14, "button", 14), 
                core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r29);
                    var ctx_r28 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r28.onUploadClick());
                }), core["\u0275\u0275pipe"](15, "async"), core["\u0275\u0275pipe"](16, "async"), 
                core["\u0275\u0275element"](17, "tri-svg-icon", 15), core["\u0275\u0275text"](18), 
                core["\u0275\u0275pipe"](19, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](20, "button", 14), 
                core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r29);
                    var ctx_r30 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r30.onResetImage());
                }), core["\u0275\u0275pipe"](21, "async"), core["\u0275\u0275pipe"](22, "async"), 
                core["\u0275\u0275pipe"](23, "async"), core["\u0275\u0275pipe"](24, "async"), core["\u0275\u0275element"](25, "tri-svg-icon", 16), 
                core["\u0275\u0275text"](26), core["\u0275\u0275pipe"](27, "localize"), core["\u0275\u0275elementEnd"](), 
                core["\u0275\u0275template"](28, WorkspaceSettingsAboutComponent_ng_container_4_div_28_Template, 4, 3, "div", 17), 
                core["\u0275\u0275pipe"](29, "async"), core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementStart"](30, "div", 18)(31, "label", 19), 
                core["\u0275\u0275text"](32), core["\u0275\u0275pipe"](33, "localize"), core["\u0275\u0275elementEnd"](), 
                core["\u0275\u0275elementStart"](34, "div", 20)(35, "input", 21), core["\u0275\u0275listener"]("blur", function($event) {
                    core["\u0275\u0275restoreView"](_r29);
                    var ctx_r31 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r31.onNameUpdated($event));
                })("keyup", function($event) {
                    core["\u0275\u0275restoreView"](_r29);
                    var ctx_r32 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r32.validateName($event));
                }), core["\u0275\u0275pipe"](36, "async"), core["\u0275\u0275pipe"](37, "async"), 
                core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](38, WorkspaceSettingsAboutComponent_ng_container_4_tri_spinner_38_Template, 1, 0, "tri-spinner", 22), 
                core["\u0275\u0275pipe"](39, "async"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](40, WorkspaceSettingsAboutComponent_ng_container_4_div_40_Template, 4, 3, "div", 23), 
                core["\u0275\u0275pipe"](41, "async"), core["\u0275\u0275template"](42, WorkspaceSettingsAboutComponent_ng_container_4_div_42_Template, 4, 3, "div", 23), 
                core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](43, "div", 18)(44, "label", 24), 
                core["\u0275\u0275text"](45), core["\u0275\u0275pipe"](46, "localize"), core["\u0275\u0275elementEnd"](), 
                core["\u0275\u0275elementStart"](47, "div", 20)(48, "textarea", 25), core["\u0275\u0275listener"]("blur", function($event) {
                    core["\u0275\u0275restoreView"](_r29);
                    var ctx_r33 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r33.onDescriptionUpdated($event));
                }), core["\u0275\u0275pipe"](49, "async"), core["\u0275\u0275pipe"](50, "localize"), 
                core["\u0275\u0275pipe"](51, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](52, WorkspaceSettingsAboutComponent_ng_container_4_tri_spinner_52_Template, 1, 0, "tri-spinner", 22), 
                core["\u0275\u0275pipe"](53, "async"), core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275template"](54, WorkspaceSettingsAboutComponent_ng_container_4_trident_domains_dropdown_54_Template, 3, 7, "trident-domains-dropdown", 26), 
                core["\u0275\u0275elementStart"](55, "div", 27)(56, "label", 28), core["\u0275\u0275text"](57), 
                core["\u0275\u0275pipe"](58, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](59, "div", 20), 
                core["\u0275\u0275template"](60, WorkspaceSettingsAboutComponent_ng_container_4_ng_container_60_Template, 1, 0, "ng-container", 29), 
                core["\u0275\u0275template"](61, WorkspaceSettingsAboutComponent_ng_container_4_tri_spinner_61_Template, 1, 0, "tri-spinner", 22), 
                core["\u0275\u0275pipe"](62, "async"), core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementStart"](63, "div", 27)(64, "label", 30), 
                core["\u0275\u0275text"](65), core["\u0275\u0275pipe"](66, "localize"), core["\u0275\u0275elementEnd"](), 
                core["\u0275\u0275elementStart"](67, "div", 20), core["\u0275\u0275template"](68, WorkspaceSettingsAboutComponent_ng_container_4_ng_container_68_Template, 1, 0, "ng-container", 29), 
                core["\u0275\u0275template"](69, WorkspaceSettingsAboutComponent_ng_container_4_tri_spinner_69_Template, 1, 0, "tri-spinner", 22), 
                core["\u0275\u0275pipe"](70, "async"), core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementContainerEnd"]();
            }
            if (2 & rf) {
                var tmp_1_0, tmp_3_0, tmp_9_0, tmp_10_0, ctx_r2 = core["\u0275\u0275nextContext"](), _r4 = core["\u0275\u0275reference"](9);
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](3, 40, "WorkspaceImage")), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngClass", core["\u0275\u0275pureFunction1"](96, workspace_settings_about_component_c1, !(null != (tmp_1_0 = core["\u0275\u0275pipeBind1"](6, 42, ctx_r2.workspaceImgSrc$)) && tmp_1_0.length))), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](8, 44, ctx_r2.workspaceImgSrc$)), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", !(null != (tmp_3_0 = core["\u0275\u0275pipeBind1"](10, 46, ctx_r2.workspaceImgSrc$)) && tmp_3_0.length)), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](12, 48, ctx_r2.autoSaveInProgress.Image)), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275classProp"]("is-disabled", core["\u0275\u0275pipeBind1"](15, 50, ctx_r2.autoSaveInProgress.Image) || !ctx_r2.isWorkspaceAdmin), 
                core["\u0275\u0275property"]("disabled", core["\u0275\u0275pipeBind1"](16, 52, ctx_r2.autoSaveInProgress.Image) || !ctx_r2.isWorkspaceAdmin), 
                core["\u0275\u0275attribute"]("data-testid", "workspace-settings-about-upload-btn"), 
                core["\u0275\u0275advance"](4), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](19, 54, "Upload"), " "), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275classProp"]("is-disabled", !(null != (tmp_9_0 = core["\u0275\u0275pipeBind1"](21, 56, ctx_r2.workspaceImgSrc$)) && tmp_9_0.length) || core["\u0275\u0275pipeBind1"](22, 58, ctx_r2.autoSaveInProgress.Image) || !ctx_r2.isWorkspaceAdmin), 
                core["\u0275\u0275property"]("disabled", !(null != (tmp_10_0 = core["\u0275\u0275pipeBind1"](23, 60, ctx_r2.workspaceImgSrc$)) && tmp_10_0.length) || core["\u0275\u0275pipeBind1"](24, 62, ctx_r2.autoSaveInProgress.Image) || !ctx_r2.isWorkspaceAdmin), 
                core["\u0275\u0275attribute"]("data-testid", "workspace-settings-about-reset-btn"), 
                core["\u0275\u0275advance"](6), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](27, 64, "Reset"), " "), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](29, 66, ctx_r2.imageFileError$)), 
                core["\u0275\u0275advance"](4), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](33, 68, "Name")), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275classProp"]("has-error", core["\u0275\u0275pipeBind1"](36, 70, ctx_r2.nameExists$) || !ctx_r2.workspaceName), 
                core["\u0275\u0275property"]("disabled", core["\u0275\u0275pipeBind1"](37, 72, ctx_r2.autoSaveInProgress.Name) || !ctx_r2.isWorkspaceAdmin)("value", ctx_r2.workspaceName), 
                core["\u0275\u0275attribute"]("data-testid", "workspace-settings-about-name-input"), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](39, 74, ctx_r2.autoSaveInProgress.Name)), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](41, 76, ctx_r2.nameExists$)), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", !ctx_r2.workspaceName), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](46, 78, "Description")), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("value", ctx_r2.description)("disabled", core["\u0275\u0275pipeBind1"](49, 80, ctx_r2.autoSaveInProgress.Description) || !ctx_r2.isWorkspaceAdmin)("placeholder", core["\u0275\u0275pipeBind1"](50, 82, "DescribeThisWorkspace") + " " + core["\u0275\u0275pipeBind1"](51, 84, "Optional_Parenthesis")), 
                core["\u0275\u0275attribute"]("data-testid", "workspace-settings-about-description-input"), 
                core["\u0275\u0275advance"](4), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](53, 86, ctx_r2.autoSaveInProgress.Description)), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", ctx_r2.isDomainsEnabled), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](58, 88, "ContactList")), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngTemplateOutlet", ctx_r2.userPicker || _r4)("ngTemplateOutletContext", core["\u0275\u0275pureFunction1"](98, workspace_settings_about_component_c2, ctx_r2.contactListContext)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](62, 90, ctx_r2.autoSaveInProgress.ContactList)), 
                core["\u0275\u0275advance"](4), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](66, 92, "WorkspaceSharePoint")), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngTemplateOutlet", ctx_r2.userPicker || _r4)("ngTemplateOutletContext", core["\u0275\u0275pureFunction1"](100, workspace_settings_about_component_c2, ctx_r2.oneDriveContext)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](70, 94, ctx_r2.autoSaveInProgress.OneDrive));
            }
        }
        var workspace_settings_about_component_c3 = function() {
            return [];
        };
        function WorkspaceSettingsAboutComponent_ng_template_8_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "input", 39), 2 & rf) {
                var tmp_1_0, model_r34 = ctx.$implicit;
                core["\u0275\u0275property"]("placeholder", null == model_r34 ? null : model_r34.inputPlaceholder)("value", (null !== (tmp_1_0 = null == model_r34 ? null : model_r34.identities) && void 0 !== tmp_1_0 ? tmp_1_0 : core["\u0275\u0275pureFunction0"](2, workspace_settings_about_component_c3)).join(";"));
            }
        }
        var WorkspaceSettingsAboutComponent = function() {
            function WorkspaceSettingsAboutComponent(workspaceSettingsService, triLocalizationService, telemetryService, isTrident) {
                var _this = this;
                this.workspaceSettingsService = workspaceSettingsService, this.triLocalizationService = triLocalizationService, 
                this.telemetryService = telemetryService, this.isTrident = isTrident, this.destroy$ = new Subject.xQ, 
                this.initialized$ = this.workspaceSettingsService.folderSettingsInitialized$, this.workspaceImgSrc$ = new BehaviorSubject.X(""), 
                this.workspaceName = "", this.description = "", this.contactListContext = void 0, 
                this.oneDriveContext = void 0, this.imageFileError$ = new BehaviorSubject.X(""), 
                this.autoSaveInProgress = this.workspaceSettingsService.autoSaveInProgress, this.isWorkspaceAdmin = !1, 
                this.isDomainsEnabled = !1, this.nameExists$ = this.workspaceSettingsService.nameExists$, 
                this.apiErrors$ = (0, combineLatest.aj)([ this.workspaceSettingsService.workspaceInitializationErrorMessage$, this.workspaceSettingsService.nameValidationErrorMessage$, this.workspaceSettingsService.autoSaveErrorMessage$ ]).pipe((0, 
                map.U)(function(_a) {
                    var nameValidationError = _a[1], autoSaveError = _a[2], errors = [];
                    return errors.push(_a[0] || ""), errors.push(nameValidationError || ""), errors.push(autoSaveError || ""), 
                    errors.length ? errors : void 0;
                })), this.apiErrorsDismissedIndices$ = new BehaviorSubject.X([ !1, !1, !1 ]), this.subscriptionsToDispose = [], 
                this.imageFileInput = null, this.onContactListUpdated = function(identities) {
                    _this.contactListContext && (_this.contactListContext = (0, tslib_es6.__assign)((0, 
                    tslib_es6.__assign)({}, _this.contactListContext), {
                        identities: (0, tslib_es6.__spreadArray)([], identities, !0)
                    }), _this.workspaceSettingsService.contactList = _this.contactListContext.identities, 
                    _this.telemetryService.logStandardFeatureEvent({
                        originatingService: "DataCloudUX",
                        activityName: "Update workspace contacts",
                        featureName: "Fabric Workspace Settings"
                    }), _this.logTelemetryEvent("Update workspace contacts"));
                }, this.onOneDriveUpdated = function(identities) {
                    _this.oneDriveContext && (_this.oneDriveContext = (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, _this.oneDriveContext), {
                        identities: (0, tslib_es6.__spreadArray)([], identities, !0)
                    }), _this.workspaceSettingsService.workspaceOneDrive = _this.oneDriveContext.identities[0], 
                    _this.telemetryService.logStandardFeatureEvent({
                        originatingService: "DataCloudUX",
                        activityName: "Update OneDrive",
                        featureName: "Fabric Workspace Settings"
                    }), _this.logTelemetryEvent("Update OneDrive"));
                }, this.initialized$.subscribe(function(initialized) {
                    initialized && (_this.workspaceImgSrc$.next(_this.workspaceSettingsService.imageSrc), 
                    _this.workspaceName = _this.workspaceSettingsService.workspaceName, _this.description = _this.workspaceSettingsService.description, 
                    _this.isWorkspaceAdmin = _this.workspaceSettingsService.isWorkspaceAdmin, _this.contactListContext = {
                        identities: _this.workspaceSettingsService.contactList,
                        onIdentitiesUpdated: _this.onContactListUpdated,
                        allowEmailEnabledSecurityGroups: !0,
                        allowObjectIds: !0,
                        allowDistributionLists: !0,
                        allowUnifiedGroups: !0,
                        checkValidOrgUser: !0,
                        includeGuests: !0,
                        showRelevantUsers: !1,
                        inputPlaceholder: _this.workspaceSettingsService.contactList.length > 0 ? "" : _this.triLocalizationService.get("EmailsList_UsersAndGroupsPlaceholder"),
                        inputAriaLabelledBy: "workspace-contact-list-setting-label",
                        disabled: !_this.isWorkspaceAdmin
                    }, _this.oneDriveContext = {
                        identities: _this.workspaceSettingsService.workspaceOneDrive ? [ _this.workspaceSettingsService.workspaceOneDrive ] : [],
                        onIdentitiesUpdated: _this.onOneDriveUpdated,
                        allowSecurityGroups: !1,
                        allowObjectIds: !0,
                        allowDistributionLists: !1,
                        allowUnifiedGroups: !0,
                        blockUsers: !0,
                        checkValidOrgUser: !0,
                        maxSelectableUsers: 1,
                        showRelevantUsers: !1,
                        inputPlaceholder: _this.workspaceSettingsService.workspaceOneDrive ? "" : _this.triLocalizationService.get("Optional_Parenthesis"),
                        inputAriaLabelledBy: "workspace-onedrive-setting-label",
                        disabled: !_this.isWorkspaceAdmin
                    }, _this.subscriptionsToDispose.push(_this.autoSaveInProgress.ContactList.subscribe(function(value) {
                        _this.contactListContext.disabled = !!value || !_this.isWorkspaceAdmin;
                    })), _this.subscriptionsToDispose.push(_this.autoSaveInProgress.OneDrive.subscribe(function(value) {
                        _this.oneDriveContext.disabled = !!value || !_this.isWorkspaceAdmin;
                    })), _this.isDomainsEnabled = !!_this.isTrident, _this.telemetryService.logStandardFeatureEvent({
                        originatingService: "DataCloudUX",
                        activityName: "Detail settings",
                        featureName: "Fabric Workspace Settings",
                        activityAttributes: {
                            name: "Load Workspace settings - end"
                        }
                    }));
                });
            }
            return WorkspaceSettingsAboutComponent.prototype.onUploadClick = function() {
                var _a, _b;
                null === (_b = null === (_a = this.imageFileInput) || void 0 === _a ? void 0 : _a.nativeElement) || void 0 === _b || _b.click();
            }, WorkspaceSettingsAboutComponent.prototype.onResetImage = function() {
                var _a;
                (null === (_a = this.imageFileInput) || void 0 === _a ? void 0 : _a.nativeElement) && (this.imageFileInput.nativeElement.value = ""), 
                this.workspaceImgSrc$.next(""), this.workspaceSettingsService.imageSrc = "";
            }, WorkspaceSettingsAboutComponent.prototype.onNameUpdated = function(event) {
                this.workspaceName = event.target.value, this.workspaceSettingsService.workspaceName = this.workspaceName, 
                this.telemetryService.logStandardFeatureEvent({
                    originatingService: "DataCloudUX",
                    activityName: "Workspace rename",
                    featureName: "Fabric Workspace Settings"
                }), this.logTelemetryEvent("Workspace rename");
            }, WorkspaceSettingsAboutComponent.prototype.validateName = function(event) {
                var _this = this, name = event.target.value;
                this.validateNameTimeoutId && clearTimeout(this.validateNameTimeoutId), this.validateNameTimeoutId = setTimeout(function() {
                    _this.workspaceSettingsService.validateFolderName(name);
                }, 600);
            }, WorkspaceSettingsAboutComponent.prototype.onDescriptionUpdated = function(event) {
                this.description = event.target.value, this.workspaceSettingsService.description = this.description, 
                this.telemetryService.logStandardFeatureEvent({
                    originatingService: "DataCloudUX",
                    activityName: "Update description",
                    featureName: "Fabric Workspace Settings"
                }), this.logTelemetryEvent("Update description");
            }, WorkspaceSettingsAboutComponent.prototype.onDomainSelected = function(updatedDomain) {
                this.workspaceSettingsService.domainObjectId = null == updatedDomain ? void 0 : updatedDomain.domainObjectId;
                var featureNames = "".concat("Domains", ",").concat("Domains Direct MAU", ",").concat("Domains WS Management");
                this.telemetryService.logStandardFeatureEvent({
                    originatingService: "DataCloudUX",
                    activityName: "Update domain association",
                    featureName: featureNames,
                    activityAttributes: {
                        source: "WS settings",
                        isSubDomain: !!(null == updatedDomain ? void 0 : updatedDomain.isSubDomain)
                    }
                }), this.logTelemetryEvent("Update domain association");
            }, WorkspaceSettingsAboutComponent.prototype.getSelectedDomain = function() {
                return this.workspaceSettingsService.domainObjectId;
            }, WorkspaceSettingsAboutComponent.prototype.onImageUploaded = function() {
                var _a, _b, _this = this;
                this.imageFileError$.next("");
                var files = null === (_b = null === (_a = this.imageFileInput) || void 0 === _a ? void 0 : _a.nativeElement) || void 0 === _b ? void 0 : _b.files;
                if (files && 1 === files.length) {
                    var imageFile = files[0];
                    if (imageFile.size > 46080) this.imageFileError$.next(this.triLocalizationService.format("Publish_ImageSizeValidationError", this.triLocalizationService.get("File_Size_KB_45"))); else {
                        var extension = imageFile.name.split(".").reverse()[0];
                        if ([ "jpeg", "jpg", "png" ].some(function(ext) {
                            return extension.toLowerCase() === ext;
                        })) try {
                            var fileReader = new FileReader;
                            fileReader.addEventListener("load", function(e) {
                                var _a, _b, content = null === (_a = e.target) || void 0 === _a ? void 0 : _a.result;
                                content && (_this.workspaceImgSrc$.next(content.toString()), _this.workspaceSettingsService.imageSrc = content.toString(), 
                                (null === (_b = _this.imageFileInput) || void 0 === _b ? void 0 : _b.nativeElement) && (_this.imageFileInput.nativeElement.value = ""), 
                                _this.telemetryService.logStandardFeatureEvent({
                                    originatingService: "DataCloudUX",
                                    activityName: "Update workspace image",
                                    featureName: "Fabric Workspace Settings"
                                }), _this.logTelemetryEvent("Update workspace image"));
                            }), fileReader.readAsDataURL(imageFile);
                        } catch (ex) {
                            this.imageFileError$.next(this.triLocalizationService.get("Trident_Workspace_Settings_File_Read_Error"));
                        } else this.imageFileError$.next(this.triLocalizationService.get("Trident_Workspace_Settings_Image_File_Extension_Error"));
                    }
                } else this.imageFileError$.next(this.triLocalizationService.get("Trident_Workspace_Settings_One_Image_File_Only"));
            }, WorkspaceSettingsAboutComponent.prototype.dismissError = function(index) {
                var apiErrorsDismissedIndices = (0, tslib_es6.__spreadArray)([], this.apiErrorsDismissedIndices$.value, !0);
                apiErrorsDismissedIndices[index] = !0, this.apiErrorsDismissedIndices$.next(apiErrorsDismissedIndices);
            }, WorkspaceSettingsAboutComponent.prototype.ngOnDestroy = function() {
                this.destroy$.next(), this.destroy$.complete();
            }, WorkspaceSettingsAboutComponent.prototype.getErrorMessageBarViewModel = function(message, index) {
                var _this = this;
                return {
                    bannerType: 1,
                    allowDismiss: !0,
                    iconName: "dismiss_circle_16_regular",
                    closeBarCallback: function() {
                        return _this.dismissError(index);
                    },
                    message
                };
            }, WorkspaceSettingsAboutComponent.prototype.logTelemetryEvent = function(activityName) {
                this.telemetryService.logEvent({
                    name: "Updating workspace settings - auto save",
                    properties: {
                        activityName,
                        featureName: "Fabric Workspace Settings",
                        workspaceObjectId: this.workspaceSettingsService.workspaceObjectId
                    }
                });
            }, WorkspaceSettingsAboutComponent.\u0275fac = function(t) {
                return new (t || WorkspaceSettingsAboutComponent)(core["\u0275\u0275directiveInject"](tri_workspace_settings.X), core["\u0275\u0275directiveInject"](localization_service.z), core["\u0275\u0275directiveInject"](telemetry_service.t), core["\u0275\u0275directiveInject"](trident_env.Y));
            }, WorkspaceSettingsAboutComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: WorkspaceSettingsAboutComponent,
                selectors: [ [ "tri-workspace-settings-about" ] ],
                viewQuery: function(rf, ctx) {
                    var _t;
                    1 & rf && core["\u0275\u0275viewQuery"](workspace_settings_about_component_c0, 7), 
                    2 & rf && core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx.imageFileInput = _t.first);
                },
                inputs: {
                    userPicker: "userPicker"
                },
                decls: 10,
                vars: 9,
                consts: [ [ 4, "ngIf" ], [ 4, "ngFor", "ngForOf" ], [ "hidden", "", "type", "file", "accept", ".jpeg,.jpg,.png", 1, "tri-hidden", 3, "change" ], [ "imageFileInput", "" ], [ "inputUserPicker", "" ], [ 1, "tri-flex", "tri-items-center", "tri-justify-center", "tri-h-full" ], [ 3, "viewModel", "hideMessageBar", 4, "ngIf" ], [ 3, "viewModel", "hideMessageBar" ], [ "id", "workspace-image-label" ], [ 1, "workspace-image-setting-container", "tri-flex" ], [ 1, "workspace-image", "tri-flex", "tri-justify-center", "tri-items-center", "tri-relative", 3, "ngClass" ], [ "class", "valid-workspace-image", "alt", "Workspace image", 3, "src", 4, "ngIf" ], [ "tri-svg-icon-32", "", "class", "no-workspace-image", "name", "image_32_regular", 4, "ngIf" ], [ 1, "workspace-image-buttons", "tri-flex", "tri-flex-col" ], [ "tri-button", "", "appearance", "subtle", "size", "small", 3, "disabled", "click" ], [ "name", "arrow_upload_20_regular" ], [ "name", "arrow_undo_20_regular" ], [ "class", "image-error-message error-message-container tri-flex", "role", "alert", 4, "ngIf" ], [ 1, "about-input-container", "tri-flex", "tri-flex-col" ], [ "id", "workspace-name-setting-label" ], [ 1, "tri-flex" ], [ "aria-labelledby", "workspace-name-setting-label", "data-testid", "workspace-name-setting-input", 1, "about-settings-input", "tri-flex-grow", 3, "disabled", "value", "blur", "keyup" ], [ "class", "inline-autosave-spinner tri-flex tri-items-center", 4, "ngIf" ], [ "class", "tri-flex error-message-container", 4, "ngIf" ], [ "id", "workspace-description-setting-label" ], [ "aria-labelledby", "workspace-description-setting-label", "data-testid", "workspace-description-setting-input", "maxlength", "4000", "rows", "3", 1, "about-settings-textarea", "tri-flex-grow", 3, "value", "disabled", "placeholder", "blur" ], [ 3, "selectedDomainObjectId", "shouldBeDisabled", "showSpinner", "domainSelected", 4, "ngIf" ], [ 1, "about-input-container", "tri-flex", "tri-flex-col", "tri-relative" ], [ "id", "workspace-contact-list-setting-label" ], [ 4, "ngTemplateOutlet", "ngTemplateOutletContext" ], [ "id", "workspace-onedrive-setting-label" ], [ "alt", "Workspace image", 1, "valid-workspace-image", 3, "src" ], [ "tri-svg-icon-32", "", "name", "image_32_regular", 1, "no-workspace-image" ], [ 1, "image-autosave-spinner", "tri-flex" ], [ "role", "alert", 1, "image-error-message", "error-message-container", "tri-flex" ], [ "name", "error_circle_12_filled", 1, "error-message-icon" ], [ 1, "inline-autosave-spinner", "tri-flex", "tri-items-center" ], [ 1, "tri-flex", "error-message-container" ], [ 3, "selectedDomainObjectId", "shouldBeDisabled", "showSpinner", "domainSelected" ], [ "aria-labelledby", "workspace-contact-list-setting-label", 1, "tri-flex-grow", "contact-list", 3, "placeholder", "value" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275template"](0, WorkspaceSettingsAboutComponent_ng_container_0_Template, 2, 0, "ng-container", 0), 
                    core["\u0275\u0275pipe"](1, "async"), core["\u0275\u0275template"](2, WorkspaceSettingsAboutComponent_ng_container_2_Template, 3, 3, "ng-container", 1), 
                    core["\u0275\u0275pipe"](3, "async"), core["\u0275\u0275template"](4, WorkspaceSettingsAboutComponent_ng_container_4_Template, 71, 102, "ng-container", 0), 
                    core["\u0275\u0275pipe"](5, "async"), core["\u0275\u0275elementStart"](6, "input", 2, 3), 
                    core["\u0275\u0275listener"]("change", function() {
                        return ctx.onImageUploaded();
                    }), core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](8, WorkspaceSettingsAboutComponent_ng_template_8_Template, 1, 3, "ng-template", null, 4, core["\u0275\u0275templateRefExtractor"])), 
                    2 & rf && (core["\u0275\u0275property"]("ngIf", !1 === core["\u0275\u0275pipeBind1"](1, 3, ctx.initialized$)), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngForOf", core["\u0275\u0275pipeBind1"](3, 5, ctx.apiErrors$)), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](5, 7, ctx.initialized$)));
                },
                dependencies: [ common.NgClass, common.NgForOf, common.NgIf, common.NgTemplateOutlet, DomainsDropdownComponent, tri_svg_icon_component.M, tri_spinner_component.D, tri_message_bar_component.h, common.AsyncPipe, localize_pipe.Y ],
                styles: [ "[_nghost-%COMP%]{font-family:var(--fontFamilyBase);font-size:14px;line-height:20px}[_nghost-%COMP%]   label[_ngcontent-%COMP%]{font-weight:var(--subheadline-font-weight);font-size:var(--body-font-size);line-height:18px;margin-bottom:4px}[_nghost-%COMP%]   label#workspace-image-label[_ngcontent-%COMP%]{margin-bottom:0}[_nghost-%COMP%]   .error-message-banner-container[_ngcontent-%COMP%]{margin-bottom:16px}[_nghost-%COMP%]   trident-domains-dropdown[_ngcontent-%COMP%]{margin-top:16px}[_nghost-%COMP%]   .workspace-image-setting-container[_ngcontent-%COMP%]{margin-top:8px}[_nghost-%COMP%]   .workspace-image-setting-container[_ngcontent-%COMP%]   .workspace-image[_ngcontent-%COMP%]{height:56px;width:56px;max-width:56px}[_nghost-%COMP%]   .workspace-image-setting-container[_ngcontent-%COMP%]   .workspace-image.no-image[_ngcontent-%COMP%]{background-color:var(--colorNeutralBackground6);color:var(--colorNeutralForeground3);fill:var(--colorNeutralForeground3);border-radius:50%}[_nghost-%COMP%]   .workspace-image-setting-container[_ngcontent-%COMP%]   .workspace-image[_ngcontent-%COMP%]   .valid-workspace-image[_ngcontent-%COMP%]{height:56px;width:56px;border-radius:50%}[_nghost-%COMP%]   .workspace-image-setting-container[_ngcontent-%COMP%]   .workspace-image[_ngcontent-%COMP%]   .no-workspace-image[_ngcontent-%COMP%]{fill:var(--colorNeutralForeground3)}[_nghost-%COMP%]   .workspace-image-setting-container[_ngcontent-%COMP%]   .workspace-image-buttons[_ngcontent-%COMP%]{margin-left:8px;justify-content:center;gap:4px}[_nghost-%COMP%]   .workspace-image-setting-container[_ngcontent-%COMP%]   .workspace-image-buttons[_ngcontent-%COMP%] > *[_ngcontent-%COMP%]{justify-content:flex-start}[_nghost-%COMP%]   .workspace-image-setting-container[_ngcontent-%COMP%]   .image-error-message[_ngcontent-%COMP%]{color:var(--colorPaletteRedForeground1)}[_nghost-%COMP%]   .settings-seperator[_ngcontent-%COMP%]{margin-top:26px;border-top:1px solid var(--colorNeutralStroke1);margin-bottom:10px}[_nghost-%COMP%]   .about-input-container[_ngcontent-%COMP%]{margin-top:16px}[_nghost-%COMP%]   .about-input-container[_ngcontent-%COMP%]     .mat-form-field.emails-list{border-radius:4px;outline:none;border:1px solid var(--colorNeutralStroke1)}[_nghost-%COMP%]   .about-input-container[_ngcontent-%COMP%]     emails-list-modern{flex-grow:1}[_nghost-%COMP%]   .about-input-container[_ngcontent-%COMP%]     input, [_nghost-%COMP%]   .about-input-container[_ngcontent-%COMP%]     .chip-list{padding:6px 10px}[_nghost-%COMP%]   .about-settings-input[_ngcontent-%COMP%], [_nghost-%COMP%]   .about-settings-textarea[_ngcontent-%COMP%]{resize:none;font-size:14px;font-family:var(--fontFamilyBase);line-height:20px;padding:5px 12px;box-sizing:border-box;border-radius:4px;outline:none;border:1px solid var(--colorNeutralStroke1)}[_nghost-%COMP%]   .about-settings-input[_ngcontent-%COMP%]:not([disabled]), [_nghost-%COMP%]   .about-settings-textarea[_ngcontent-%COMP%]:not([disabled]){border-bottom:1px solid var(--globalColorGrey38)}[_nghost-%COMP%]   .about-settings-input[_ngcontent-%COMP%]:not([disabled]):focus-visible, [_nghost-%COMP%]   .about-settings-textarea[_ngcontent-%COMP%]:not([disabled]):focus-visible{border-bottom:2px solid var(--globalColorBrand80)}[_nghost-%COMP%]   .about-settings-input[disabled][_ngcontent-%COMP%], [_nghost-%COMP%]   .about-settings-textarea[disabled][_ngcontent-%COMP%]{border:1px solid var(--colorNeutralStroke2)}[_nghost-%COMP%]   .about-settings-input.has-error[_ngcontent-%COMP%], [_nghost-%COMP%]   .about-settings-textarea.has-error[_ngcontent-%COMP%]{border:1px solid var(--colorPaletteRedForeground1)}[_nghost-%COMP%]   .inline-autosave-spinner[_ngcontent-%COMP%]{margin-left:16px}[_nghost-%COMP%]   .image-autosave-spinner[_ngcontent-%COMP%]{background-color:var(--globalColorWhiteAlpha80);height:100%;width:100%;border-radius:50%;position:absolute}[_nghost-%COMP%]   .image-autosave-spinner[_ngcontent-%COMP%]   tri-spinner[_ngcontent-%COMP%]{margin:auto}[_nghost-%COMP%]   .disabled-field-overlay[_ngcontent-%COMP%]{position:absolute;top:0;bottom:0;left:0;right:0}" ],
                changeDetection: 0
            }), WorkspaceSettingsAboutComponent;
        }(), legacy_core = __webpack_require__(33846);
        function TriCollapsedContainerComponent_ng_container_8_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275projection"](1), 
            core["\u0275\u0275elementContainerEnd"]());
        }
        function TriCollapsedContainerComponent_ng_template_9_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275projection"](0, 1);
        }
        var tri_collapsed_container_component_c0 = [ [ [ "tri-collapsible-collapsed-content" ] ], "*" ], tri_collapsed_container_component_c1 = function(a0) {
            return {
                disabled: a0
            };
        }, tri_collapsed_container_component_c2 = [ "tri-collapsible-collapsed-content", "*" ], TriCollapsedContainerComponent = function() {
            function TriCollapsedContainerComponent() {
                this.headerText = "", this.collapsed = !1, this.iconName = "", this.iconSprite = "", 
                this.disabled = !1, this.collapseContainer = new core.EventEmitter;
            }
            return TriCollapsedContainerComponent.prototype.onCollapseToggle = function() {
                this.collapsed = !this.collapsed, this.collapseContainer.emit(this.collapsed);
            }, TriCollapsedContainerComponent.\u0275fac = function(t) {
                return new (t || TriCollapsedContainerComponent);
            }, TriCollapsedContainerComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: TriCollapsedContainerComponent,
                selectors: [ [ "tri-collapsed-container" ] ],
                inputs: {
                    headerText: "headerText",
                    collapsed: "collapsed",
                    iconName: "iconName",
                    iconSprite: "iconSprite",
                    disabled: "disabled"
                },
                outputs: {
                    collapseContainer: "collapseContainer"
                },
                ngContentSelectors: tri_collapsed_container_component_c2,
                decls: 11,
                vars: 22,
                consts: [ [ 1, "collapsible-picker-box", 3, "ngClass" ], [ 1, "box-header", "tri-flex", 3, "click" ], [ 1, "box-icon", 3, "ngClass", "name", "sprite" ], [ 1, "header-text" ], [ "tri-icon-button", "", "appearance", "subtle", 1, "expand-collapse-button", 3, "disabled" ], [ 3, "name" ], [ 4, "ngIf", "ngIfElse" ], [ "notCollapsed", "" ] ],
                template: function(rf, ctx) {
                    if (1 & rf && (core["\u0275\u0275projectionDef"](tri_collapsed_container_component_c0), 
                    core["\u0275\u0275elementStart"](0, "div", 0)(1, "div", 1), core["\u0275\u0275listener"]("click", function() {
                        return ctx.onCollapseToggle();
                    }), core["\u0275\u0275element"](2, "tri-svg-icon", 2), core["\u0275\u0275elementStart"](3, "span", 3), 
                    core["\u0275\u0275text"](4), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](5, "button", 4), 
                    core["\u0275\u0275pipe"](6, "localizeFormat"), core["\u0275\u0275element"](7, "tri-svg-icon", 5), 
                    core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275template"](8, TriCollapsedContainerComponent_ng_container_8_Template, 2, 0, "ng-container", 6), 
                    core["\u0275\u0275template"](9, TriCollapsedContainerComponent_ng_template_9_Template, 1, 0, "ng-template", null, 7, core["\u0275\u0275templateRefExtractor"]), 
                    core["\u0275\u0275elementEnd"]()), 2 & rf) {
                        var _r1 = core["\u0275\u0275reference"](10);
                        core["\u0275\u0275styleProp"]("pointer-events", ctx.disabled ? "none" : "initial"), 
                        core["\u0275\u0275classProp"]("is-collapsed", !!ctx.collapsed), core["\u0275\u0275property"]("ngClass", core["\u0275\u0275pureFunction1"](18, tri_collapsed_container_component_c1, ctx.disabled)), 
                        core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngClass", core["\u0275\u0275pureFunction1"](20, tri_collapsed_container_component_c1, ctx.disabled))("name", ctx.iconName)("sprite", ctx.iconSprite), 
                        core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", ctx.headerText, ""), 
                        core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("disabled", ctx.disabled), 
                        core["\u0275\u0275attribute"]("aria-expanded", !ctx.collapsed)("aria-label", core["\u0275\u0275pipeBind2"](6, 15, ctx.collapsed ? "ClickToExpandFormat" : "ClickToCollapseFormat", ctx.headerText)), 
                        core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("name", ctx.collapsed ? "chevron_down_20_regular" : "chevron_up_20_regular"), 
                        core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx.collapsed)("ngIfElse", _r1);
                    }
                },
                dependencies: [ common.NgClass, common.NgIf, tri_svg_icon_component.M, localize_pipe.A ],
                styles: [ ".collapsible-picker-box[_ngcontent-%COMP%]{padding:12px;border:1px solid var(--globalColorGrey82);border-radius:8px}.collapsible-picker-box.disabled[_ngcontent-%COMP%]{border-color:var(--colorNeutralStrokeDisabled);color:var(--colorNeutralForegroundDisabled);cursor:not-allowed}.collapsible-picker-box.disabled[_ngcontent-%COMP%]:focus, .collapsible-picker-box.disabled[_ngcontent-%COMP%]   [_ngcontent-%COMP%]:active, .collapsible-picker-box.disabled[_ngcontent-%COMP%]   [_ngcontent-%COMP%]:hover{color:var(--colorNeutralForegroundDisabled)}.collapsible-picker-box[_ngcontent-%COMP%]   .box-header[_ngcontent-%COMP%]{height:20px;display:flex;justify-content:space-between}.collapsible-picker-box[_ngcontent-%COMP%]   .box-header[_ngcontent-%COMP%]   .box-icon.disabled[_ngcontent-%COMP%]{fill:var(--colorNeutralForegroundDisabled)}html:not([dir=rtl])[_nghost-%COMP%]   .collapsible-picker-box[_ngcontent-%COMP%]   .box-header[_ngcontent-%COMP%]   .header-text[_ngcontent-%COMP%], html:not([dir=rtl])   [_nghost-%COMP%]   .collapsible-picker-box[_ngcontent-%COMP%]   .box-header[_ngcontent-%COMP%]   .header-text[_ngcontent-%COMP%]{margin-left:8px;margin-right:8px}html[dir=rtl][_nghost-%COMP%]   .collapsible-picker-box[_ngcontent-%COMP%]   .box-header[_ngcontent-%COMP%]   .header-text[_ngcontent-%COMP%], html[dir=rtl]   [_nghost-%COMP%]   .collapsible-picker-box[_ngcontent-%COMP%]   .box-header[_ngcontent-%COMP%]   .header-text[_ngcontent-%COMP%]{margin-left:8px;margin-right:8px}.collapsible-picker-box[_ngcontent-%COMP%]   .box-header[_ngcontent-%COMP%] > button[_ngcontent-%COMP%]{display:flex}.collapsible-picker-box[_ngcontent-%COMP%]   .box-header[_ngcontent-%COMP%] > button[_ngcontent-%COMP%]:disabled{background:transparent!important}.collapsible-picker-box[_ngcontent-%COMP%]   .box-header[_ngcontent-%COMP%] > button[_ngcontent-%COMP%]:disabled   tri-svg-icon[_ngcontent-%COMP%]{background-color:var(--globalColorWhiteAlpha40)!important;fill:var(--colorNeutralForegroundDisabled)!important}.collapsible-picker-box[_ngcontent-%COMP%]   .box-header[_ngcontent-%COMP%]   .expand-collapse-button[_ngcontent-%COMP%]{height:20px;width:20px}html:not([dir=rtl])[_nghost-%COMP%]   .collapsible-picker-box[_ngcontent-%COMP%]   .box-header[_ngcontent-%COMP%]   .expand-collapse-button[_ngcontent-%COMP%], html:not([dir=rtl])   [_nghost-%COMP%]   .collapsible-picker-box[_ngcontent-%COMP%]   .box-header[_ngcontent-%COMP%]   .expand-collapse-button[_ngcontent-%COMP%]{margin-left:auto;margin-right:0}html[dir=rtl][_nghost-%COMP%]   .collapsible-picker-box[_ngcontent-%COMP%]   .box-header[_ngcontent-%COMP%]   .expand-collapse-button[_ngcontent-%COMP%], html[dir=rtl]   [_nghost-%COMP%]   .collapsible-picker-box[_ngcontent-%COMP%]   .box-header[_ngcontent-%COMP%]   .expand-collapse-button[_ngcontent-%COMP%]{margin-left:0;margin-right:auto}" ],
                changeDetection: 0
            }), TriCollapsedContainerComponent;
        }();
        function workspace_settings_premium_component_WorkspaceSettingsPremiumComponent_ng_container_0_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275element"](1, "tri-spinner", 5), 
            core["\u0275\u0275elementContainerEnd"]());
        }
        function workspace_settings_premium_component_WorkspaceSettingsPremiumComponent_tri_message_bar_2_Template(rf, ctx) {
            if (1 & rf) {
                var _r11 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "tri-message-bar", 6), core["\u0275\u0275listener"]("hideMessageBar", function() {
                    core["\u0275\u0275restoreView"](_r11);
                    var ctx_r10 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r10.dismissError());
                }), core["\u0275\u0275pipe"](1, "async"), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var tmp_0_0, ctx_r1 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("viewModel", ctx_r1.getErrorMessageBarViewModel(null !== (tmp_0_0 = core["\u0275\u0275pipeBind1"](1, 1, ctx_r1.apiError$)) && void 0 !== tmp_0_0 ? tmp_0_0 : ""));
            }
        }
        function WorkspaceSettingsPremiumComponent_tri_message_bar_5_Template(rf, ctx) {
            if (1 & rf) {
                var _r13 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "tri-message-bar", 6), core["\u0275\u0275listener"]("hideMessageBar", function() {
                    core["\u0275\u0275restoreView"](_r13);
                    var ctx_r12 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r12.dismissSuccess());
                }), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r2 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("viewModel", ctx_r2.getSuccessMessageBarViewModel());
            }
        }
        function WorkspaceSettingsPremiumComponent_ng_container_8_tri_svg_icon_14_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "tri-svg-icon", 10), 2 & rf) {
                core["\u0275\u0275nextContext"](2);
                var _r6 = core["\u0275\u0275reference"](13);
                core["\u0275\u0275property"]("triTooltip", _r6);
            }
        }
        function WorkspaceSettingsPremiumComponent_ng_container_8_ng_container_22_Template(rf, ctx) {
            if (1 & rf) {
                var _r28 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "tri-radio-button", 31), 
                core["\u0275\u0275listener"]("change", function($event) {
                    core["\u0275\u0275restoreView"](_r28);
                    var ctx_r27 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r27.onLicenseModeSelected($event, ctx_r27.LicenseMode.TridentPremiumPerUser));
                }), core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275elementStart"](3, "span", 32), 
                core["\u0275\u0275text"](4), core["\u0275\u0275pipe"](5, "localize"), core["\u0275\u0275elementEnd"](), 
                core["\u0275\u0275elementStart"](6, "div", 14)(7, "span"), core["\u0275\u0275text"](8), 
                core["\u0275\u0275pipe"](9, "localize"), core["\u0275\u0275elementStart"](10, "tri-link", 33), 
                core["\u0275\u0275text"](11), core["\u0275\u0275pipe"](12, "localize"), core["\u0275\u0275elementEnd"]()()()(), 
                core["\u0275\u0275elementContainerEnd"]();
            }
            if (2 & rf) {
                var ctx_r15 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("checked", ctx_r15.licenseMode === ctx_r15.LicenseMode.TridentPremiumPerUser)("value", ctx_r15.LicenseMode.TridentPremiumPerUser)("disabled", !ctx_r15.licenseModeEnabled(ctx_r15.LicenseMode.TridentPremiumPerUser) || core["\u0275\u0275pipeBind1"](2, 7, ctx_r15.saveInProgress$) || !ctx_r15.isWorkspaceAdmin), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](5, 9, "Workspace_LicenseMode_PPU")), 
                core["\u0275\u0275advance"](4), core["\u0275\u0275textInterpolate1"]("", core["\u0275\u0275pipeBind1"](9, 11, "Workspace_LicenseMode_PPU_Description"), " "), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("external", !0), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](12, 13, "LearnMore"), " ");
            }
        }
        function WorkspaceSettingsPremiumComponent_ng_container_8_tri_radio_button_48_Template(rf, ctx) {
            if (1 & rf) {
                var _r30 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "tri-radio-button", 34), core["\u0275\u0275listener"]("change", function($event) {
                    core["\u0275\u0275restoreView"](_r30);
                    var ctx_r29 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r29.onLicenseModeSelected($event, ctx_r29.LicenseMode.DataCapacity));
                }), core["\u0275\u0275pipe"](1, "async"), core["\u0275\u0275elementStart"](2, "span", 35), 
                core["\u0275\u0275text"](3), core["\u0275\u0275pipe"](4, "localize"), core["\u0275\u0275elementEnd"](), 
                core["\u0275\u0275elementStart"](5, "div", 14)(6, "span"), core["\u0275\u0275text"](7), 
                core["\u0275\u0275pipe"](8, "localize"), core["\u0275\u0275elementStart"](9, "tri-link", 36), 
                core["\u0275\u0275text"](10), core["\u0275\u0275pipe"](11, "localize"), core["\u0275\u0275elementEnd"]()()()();
            }
            if (2 & rf) {
                var ctx_r16 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275property"]("checked", ctx_r16.licenseMode === ctx_r16.LicenseMode.DataCapacity)("value", ctx_r16.LicenseMode.DataCapacity)("disabled", !ctx_r16.licenseModeEnabled(ctx_r16.LicenseMode.DataCapacity) || core["\u0275\u0275pipeBind1"](1, 7, ctx_r16.saveInProgress$) || !ctx_r16.isWorkspaceAdmin), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](4, 9, "CapacityHeader_FabricCapacity")), 
                core["\u0275\u0275advance"](4), core["\u0275\u0275textInterpolate1"]("", core["\u0275\u0275pipeBind1"](8, 11, "CapacityHeader_FabricCapacity_Description"), " "), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("external", !0), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](11, 13, "LearnMore"), " ");
            }
        }
        function WorkspaceSettingsPremiumComponent_ng_container_8_tri_radio_button_49_Template(rf, ctx) {
            if (1 & rf) {
                var _r32 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "tri-radio-button", 37), core["\u0275\u0275listener"]("change", function($event) {
                    core["\u0275\u0275restoreView"](_r32);
                    var ctx_r31 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r31.onLicenseModeSelected($event, ctx_r31.LicenseMode.DataCapacityTrial));
                }), core["\u0275\u0275pipe"](1, "async"), core["\u0275\u0275elementStart"](2, "span", 38), 
                core["\u0275\u0275text"](3), core["\u0275\u0275pipe"](4, "localize"), core["\u0275\u0275elementEnd"](), 
                core["\u0275\u0275elementStart"](5, "div", 14)(6, "span"), core["\u0275\u0275text"](7), 
                core["\u0275\u0275pipe"](8, "localize"), core["\u0275\u0275elementStart"](9, "tri-link", 39), 
                core["\u0275\u0275text"](10), core["\u0275\u0275pipe"](11, "localize"), core["\u0275\u0275elementEnd"]()()()();
            }
            if (2 & rf) {
                var ctx_r17 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275property"]("checked", ctx_r17.licenseMode === ctx_r17.LicenseMode.DataCapacityTrial)("value", ctx_r17.LicenseMode.DataCapacityTrial)("disabled", !ctx_r17.licenseModeEnabled(ctx_r17.LicenseMode.DataCapacityTrial) || core["\u0275\u0275pipeBind1"](1, 7, ctx_r17.saveInProgress$) || !ctx_r17.isWorkspaceAdmin), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](4, 9, "CapacityHeader_TrialCapacity")), 
                core["\u0275\u0275advance"](4), core["\u0275\u0275textInterpolate1"]("", core["\u0275\u0275pipeBind1"](8, 11, "Workspace_LicenseMode_Trial_Description"), " "), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("external", !0), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](11, 13, "LearnMore"), " ");
            }
        }
        function WorkspaceSettingsPremiumComponent_ng_container_8_ng_container_51_mat_option_8_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "mat-option", 45), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var capacity_r35 = ctx.$implicit;
                core["\u0275\u0275property"]("value", capacity_r35), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275textInterpolate2"](" ", capacity_r35.name, " - ", capacity_r35.region, " ");
            }
        }
        function WorkspaceSettingsPremiumComponent_ng_container_8_ng_container_51_div_10_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementStart"](0, "div", 46), core["\u0275\u0275element"](1, "tri-svg-icon", 47), 
            core["\u0275\u0275text"](2), core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementEnd"]()), 
            2 & rf && (core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](3, 1, "Workspace_LicenseMode_Select"), " "));
        }
        function WorkspaceSettingsPremiumComponent_ng_container_8_ng_container_51_Template(rf, ctx) {
            if (1 & rf) {
                var _r37 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "label", 40), 
                core["\u0275\u0275text"](2), core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementEnd"](), 
                core["\u0275\u0275elementContainerStart"](4), core["\u0275\u0275elementStart"](5, "mat-form-field", 41)(6, "mat-select", 42), 
                core["\u0275\u0275listener"]("ngModelChange", function($event) {
                    core["\u0275\u0275restoreView"](_r37);
                    var ctx_r36 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r36.selectedCapacity = $event);
                })("selectionChange", function() {
                    core["\u0275\u0275restoreView"](_r37);
                    var ctx_r38 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r38.onSelectedCapacityChange());
                }), core["\u0275\u0275pipe"](7, "async"), core["\u0275\u0275template"](8, WorkspaceSettingsPremiumComponent_ng_container_8_ng_container_51_mat_option_8_Template, 2, 3, "mat-option", 43), 
                core["\u0275\u0275pipe"](9, "async"), core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementContainerEnd"](), 
                core["\u0275\u0275template"](10, WorkspaceSettingsPremiumComponent_ng_container_8_ng_container_51_div_10_Template, 4, 3, "div", 44), 
                core["\u0275\u0275elementContainerEnd"]();
            }
            if (2 & rf) {
                var tmp_3_0, ctx_r18 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](3, 7, "Trident_Workspace_Settings_License_Capacity")), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275classProp"]("has-error", !ctx_r18.selectedCapacity), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngModel", ctx_r18.selectedCapacity)("disabled", !ctx_r18.isWorkspaceAdmin || null !== (tmp_3_0 = core["\u0275\u0275pipeBind1"](7, 9, ctx_r18.saveInProgress$)) && void 0 !== tmp_3_0 && tmp_3_0), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngForOf", core["\u0275\u0275pipeBind1"](9, 11, ctx_r18.currentCapacities$)), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", !ctx_r18.selectedCapacity);
            }
        }
        function WorkspaceSettingsPremiumComponent_ng_container_8_ng_template_53_ng_container_0_div_4_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 50), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r40 = core["\u0275\u0275nextContext"](4);
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate"](ctx_r40.selectedCapacity.name);
            }
        }
        function WorkspaceSettingsPremiumComponent_ng_container_8_ng_template_53_ng_container_0_div_5_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 51), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r41 = core["\u0275\u0275nextContext"](4);
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate"](ctx_r41.capacityRegionString);
            }
        }
        function WorkspaceSettingsPremiumComponent_ng_container_8_ng_template_53_ng_container_0_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "label", 40), 
            core["\u0275\u0275text"](2), core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementEnd"](), 
            core["\u0275\u0275template"](4, WorkspaceSettingsPremiumComponent_ng_container_8_ng_template_53_ng_container_0_div_4_Template, 2, 1, "div", 48), 
            core["\u0275\u0275template"](5, WorkspaceSettingsPremiumComponent_ng_container_8_ng_template_53_ng_container_0_div_5_Template, 2, 1, "div", 49), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var ctx_r39 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](3, 3, "Trident_Workspace_Settings_License_Capacity")), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", ctx_r39.selectedCapacity.name), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx_r39.capacityRegionString);
            }
        }
        function WorkspaceSettingsPremiumComponent_ng_container_8_ng_template_53_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275template"](0, WorkspaceSettingsPremiumComponent_ng_container_8_ng_template_53_ng_container_0_Template, 6, 5, "ng-container", 0), 
            core["\u0275\u0275pipe"](1, "async")), 2 & rf) {
                var ctx_r20 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275property"]("ngIf", ctx_r20.selectedCapacity && core["\u0275\u0275pipeBind1"](1, 1, ctx_r20.showWorkspaceSettingsV2$));
            }
        }
        function WorkspaceSettingsPremiumComponent_ng_container_8_tri_message_bar_55_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "tri-message-bar", 52), 2 & rf) {
                var ctx_r21 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275property"]("viewModel", ctx_r21.getNoPermissionsToCapacityMessageBarViewModel());
            }
        }
        function WorkspaceSettingsPremiumComponent_ng_container_8_ng_container_56_tri_radio_group_2_Template(rf, ctx) {
            if (1 & rf) {
                var _r44 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "tri-radio-group")(1, "label", 53), core["\u0275\u0275text"](2), 
                core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](4, "tri-radio-button", 54), 
                core["\u0275\u0275listener"]("change", function($event) {
                    core["\u0275\u0275restoreView"](_r44);
                    var ctx_r43 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r43.onDefaultStorageFormatSelected($event, ctx_r43.StorageFormat.SmallDataset));
                }), core["\u0275\u0275pipe"](5, "async"), core["\u0275\u0275elementStart"](6, "label", 55), 
                core["\u0275\u0275text"](7), core["\u0275\u0275pipe"](8, "localize"), core["\u0275\u0275elementEnd"]()(), 
                core["\u0275\u0275elementStart"](9, "tri-radio-button", 56), core["\u0275\u0275listener"]("change", function($event) {
                    core["\u0275\u0275restoreView"](_r44);
                    var ctx_r45 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r45.onDefaultStorageFormatSelected($event, ctx_r45.StorageFormat.LargeDataset));
                }), core["\u0275\u0275pipe"](10, "async"), core["\u0275\u0275pipe"](11, "async"), 
                core["\u0275\u0275elementStart"](12, "label", 57), core["\u0275\u0275text"](13), 
                core["\u0275\u0275pipe"](14, "localize"), core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementStart"](15, "tri-link", 58), 
                core["\u0275\u0275text"](16), core["\u0275\u0275pipe"](17, "localize"), core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var tmp_3_0, tmp_7_0, ctx_r42 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](3, 11, "GroupEditor_StorageFormat")), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("checked", ctx_r42.defaultStorageFormat === ctx_r42.StorageFormat.SmallDataset)("value", ctx_r42.StorageFormat.SmallDataset)("disabled", !ctx_r42.isWorkspaceAdmin || null !== (tmp_3_0 = core["\u0275\u0275pipeBind1"](5, 13, ctx_r42.saveInProgress$)) && void 0 !== tmp_3_0 && tmp_3_0), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](8, 15, "GroupEditor_StorageFormat_Small")), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("checked", ctx_r42.defaultStorageFormat === ctx_r42.StorageFormat.LargeDataset)("value", ctx_r42.StorageFormat.LargeDataset)("disabled", !ctx_r42.isWorkspaceAdmin || !0 !== core["\u0275\u0275pipeBind1"](10, 17, ctx_r42.allowLargeDataset$) || null !== (tmp_7_0 = core["\u0275\u0275pipeBind1"](11, 19, ctx_r42.saveInProgress$)) && void 0 !== tmp_7_0 && tmp_7_0), 
                core["\u0275\u0275advance"](4), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](14, 21, "GroupEditor_StorageFormat_Large")), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("external", !0), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275textInterpolate1"]("", core["\u0275\u0275pipeBind1"](17, 23, "GroupEditor_StorageFormat_LearnMore"), " ");
            }
        }
        function WorkspaceSettingsPremiumComponent_ng_container_8_ng_container_56_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "div", 8), 
            core["\u0275\u0275template"](2, WorkspaceSettingsPremiumComponent_ng_container_8_ng_container_56_tri_radio_group_2_Template, 18, 25, "tri-radio-group", 0), 
            core["\u0275\u0275pipe"](3, "async"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementContainerEnd"]()), 
            2 & rf) {
                var ctx_r22 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", !!ctx_r22.selectedCapacity && void 0 !== core["\u0275\u0275pipeBind1"](3, 1, ctx_r22.allowLargeDataset$));
            }
        }
        function WorkspaceSettingsPremiumComponent_ng_container_8_tri_spinner_63_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "tri-spinner");
        }
        function WorkspaceSettingsPremiumComponent_ng_container_8_ng_container_65_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275text"](1), 
            core["\u0275\u0275pipe"](2, "localize"), core["\u0275\u0275elementContainerEnd"]()), 
            2 & rf && (core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](2, 1, "Applying")));
        }
        function WorkspaceSettingsPremiumComponent_ng_container_8_ng_container_67_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275text"](1), 
            core["\u0275\u0275pipe"](2, "localize"), core["\u0275\u0275elementContainerEnd"]()), 
            2 & rf && (core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](2, 1, "Apply")));
        }
        function WorkspaceSettingsPremiumComponent_ng_container_8_ng_container_75_div_11_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementStart"](0, "div")(1, "div", 65)(2, "span", 66), 
            core["\u0275\u0275text"](3), core["\u0275\u0275pipe"](4, "localize"), core["\u0275\u0275elementEnd"]()()()), 
            2 & rf && (core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](4, 1, "Trident_Workspace_Settings_Copied_Connection")));
        }
        function WorkspaceSettingsPremiumComponent_ng_container_8_ng_container_75_Template(rf, ctx) {
            if (1 & rf) {
                var _r48 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "div", 59)(2, "label", 60), 
                core["\u0275\u0275text"](3), core["\u0275\u0275pipe"](4, "localize"), core["\u0275\u0275elementEnd"](), 
                core["\u0275\u0275elementStart"](5, "div", 61)(6, "div", 62), core["\u0275\u0275text"](7), 
                core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](8, "button", 63), 
                core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r48);
                    var ctx_r47 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r47.copyConnectionToClipboard());
                })("mouseover", function() {
                    core["\u0275\u0275restoreView"](_r48);
                    var ctx_r49 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r49.mouseOverCopy());
                })("mouseout", function() {
                    core["\u0275\u0275restoreView"](_r48);
                    var ctx_r50 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r50.mouseOutCopy());
                }), core["\u0275\u0275pipe"](9, "localize"), core["\u0275\u0275element"](10, "tri-svg-icon", 64), 
                core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275template"](11, WorkspaceSettingsPremiumComponent_ng_container_8_ng_container_75_div_11_Template, 5, 3, "div", 0), 
                core["\u0275\u0275pipe"](12, "async"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementContainerEnd"]();
            }
            if (2 & rf) {
                var ctx_r26 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](4, 6, "WorkspaceConnection")), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("triTooltip", ctx_r26.workspaceConnectionString), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate"](ctx_r26.workspaceConnectionString), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275attribute"]("aria-label", core["\u0275\u0275pipeBind1"](9, 8, "CopyVisualImage_Copy")), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("name", ctx_r26.copyIconName), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](12, 10, ctx_r26.showCopied$));
            }
        }
        var workspace_settings_premium_component_c0 = function(a0) {
            return {
                "is-disabled": a0
            };
        };
        function WorkspaceSettingsPremiumComponent_ng_container_8_Template(rf, ctx) {
            if (1 & rf) {
                var _r52 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "tri-collapsed-container", 7), 
                core["\u0275\u0275pipe"](2, "localize"), core["\u0275\u0275elementStart"](3, "div", 8)(4, "tri-radio-group")(5, "label", 9), 
                core["\u0275\u0275text"](6), core["\u0275\u0275pipe"](7, "localize"), core["\u0275\u0275elementEnd"](), 
                core["\u0275\u0275element"](8, "tri-svg-icon", 10), core["\u0275\u0275elementStart"](9, "tri-radio-button", 11), 
                core["\u0275\u0275listener"]("change", function($event) {
                    core["\u0275\u0275restoreView"](_r52);
                    var ctx_r51 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r51.onLicenseModeSelected($event, ctx_r51.LicenseMode.PowerBIPro));
                }), core["\u0275\u0275pipe"](10, "async"), core["\u0275\u0275elementStart"](11, "span", 12), 
                core["\u0275\u0275text"](12), core["\u0275\u0275pipe"](13, "localize"), core["\u0275\u0275elementEnd"](), 
                core["\u0275\u0275template"](14, WorkspaceSettingsPremiumComponent_ng_container_8_tri_svg_icon_14_Template, 1, 1, "tri-svg-icon", 13), 
                core["\u0275\u0275elementStart"](15, "div", 14)(16, "span"), core["\u0275\u0275text"](17), 
                core["\u0275\u0275pipe"](18, "localize"), core["\u0275\u0275elementStart"](19, "tri-link", 15), 
                core["\u0275\u0275text"](20), core["\u0275\u0275pipe"](21, "localize"), core["\u0275\u0275elementEnd"]()()()(), 
                core["\u0275\u0275template"](22, WorkspaceSettingsPremiumComponent_ng_container_8_ng_container_22_Template, 13, 15, "ng-container", 0), 
                core["\u0275\u0275elementStart"](23, "tri-radio-button", 16), core["\u0275\u0275listener"]("change", function($event) {
                    core["\u0275\u0275restoreView"](_r52);
                    var ctx_r53 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r53.onLicenseModeSelected($event, ctx_r53.LicenseMode.TridentPremiumPerCapacity));
                }), core["\u0275\u0275pipe"](24, "async"), core["\u0275\u0275elementStart"](25, "span", 17), 
                core["\u0275\u0275text"](26), core["\u0275\u0275pipe"](27, "localize"), core["\u0275\u0275elementEnd"](), 
                core["\u0275\u0275elementStart"](28, "div", 14)(29, "span"), core["\u0275\u0275text"](30), 
                core["\u0275\u0275pipe"](31, "localize"), core["\u0275\u0275elementStart"](32, "tri-link", 18), 
                core["\u0275\u0275text"](33), core["\u0275\u0275pipe"](34, "localize"), core["\u0275\u0275elementEnd"]()()()(), 
                core["\u0275\u0275elementStart"](35, "tri-radio-button", 19), core["\u0275\u0275listener"]("change", function($event) {
                    core["\u0275\u0275restoreView"](_r52);
                    var ctx_r54 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r54.onLicenseModeSelected($event, ctx_r54.LicenseMode.Embedded));
                }), core["\u0275\u0275pipe"](36, "async"), core["\u0275\u0275elementStart"](37, "span", 20), 
                core["\u0275\u0275text"](38), core["\u0275\u0275pipe"](39, "localize"), core["\u0275\u0275elementEnd"](), 
                core["\u0275\u0275element"](40, "tri-svg-icon", 10), core["\u0275\u0275elementStart"](41, "div", 14)(42, "span"), 
                core["\u0275\u0275text"](43), core["\u0275\u0275pipe"](44, "localize"), core["\u0275\u0275elementStart"](45, "tri-link", 21), 
                core["\u0275\u0275text"](46), core["\u0275\u0275pipe"](47, "localize"), core["\u0275\u0275elementEnd"]()()()(), 
                core["\u0275\u0275template"](48, WorkspaceSettingsPremiumComponent_ng_container_8_tri_radio_button_48_Template, 12, 15, "tri-radio-button", 22), 
                core["\u0275\u0275template"](49, WorkspaceSettingsPremiumComponent_ng_container_8_tri_radio_button_49_Template, 12, 15, "tri-radio-button", 23), 
                core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementStart"](50, "div", 24), 
                core["\u0275\u0275template"](51, WorkspaceSettingsPremiumComponent_ng_container_8_ng_container_51_Template, 11, 13, "ng-container", 25), 
                core["\u0275\u0275pipe"](52, "async"), core["\u0275\u0275template"](53, WorkspaceSettingsPremiumComponent_ng_container_8_ng_template_53_Template, 2, 3, "ng-template", null, 26, core["\u0275\u0275templateRefExtractor"]), 
                core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](55, WorkspaceSettingsPremiumComponent_ng_container_8_tri_message_bar_55_Template, 1, 1, "tri-message-bar", 27), 
                core["\u0275\u0275template"](56, WorkspaceSettingsPremiumComponent_ng_container_8_ng_container_56_Template, 4, 3, "ng-container", 0), 
                core["\u0275\u0275elementStart"](57, "div", 28)(58, "button", 29), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r52);
                    var ctx_r55 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r55.applyCapacity());
                }), core["\u0275\u0275pipe"](59, "async"), core["\u0275\u0275pipe"](60, "async"), 
                core["\u0275\u0275pipe"](61, "async"), core["\u0275\u0275pipe"](62, "async"), core["\u0275\u0275template"](63, WorkspaceSettingsPremiumComponent_ng_container_8_tri_spinner_63_Template, 1, 0, "tri-spinner", 0), 
                core["\u0275\u0275pipe"](64, "async"), core["\u0275\u0275template"](65, WorkspaceSettingsPremiumComponent_ng_container_8_ng_container_65_Template, 3, 3, "ng-container", 0), 
                core["\u0275\u0275pipe"](66, "async"), core["\u0275\u0275template"](67, WorkspaceSettingsPremiumComponent_ng_container_8_ng_container_67_Template, 3, 3, "ng-container", 0), 
                core["\u0275\u0275pipe"](68, "async"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](69, "button", 30), 
                core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r52);
                    var ctx_r56 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r56.resetCapacity());
                }), core["\u0275\u0275pipe"](70, "async"), core["\u0275\u0275pipe"](71, "async"), 
                core["\u0275\u0275pipe"](72, "async"), core["\u0275\u0275text"](73), core["\u0275\u0275pipe"](74, "localize"), 
                core["\u0275\u0275elementEnd"]()()(), core["\u0275\u0275template"](75, WorkspaceSettingsPremiumComponent_ng_container_8_ng_container_75_Template, 13, 12, "ng-container", 0), 
                core["\u0275\u0275elementContainerEnd"]();
            }
            if (2 & rf) {
                var tmp_29_0, _r19 = core["\u0275\u0275reference"](54), ctx_r3 = core["\u0275\u0275nextContext"](), _r4 = core["\u0275\u0275reference"](11), _r8 = core["\u0275\u0275reference"](15);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("headerText", core["\u0275\u0275pipeBind1"](2, 42, "Trident_Workspace_Settings_Choose_License")), 
                core["\u0275\u0275advance"](5), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](7, 44, "Workspace_LicenseMode")), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("triTooltip", _r4), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("checked", ctx_r3.licenseMode === ctx_r3.LicenseMode.PowerBIPro)("value", ctx_r3.LicenseMode.PowerBIPro)("disabled", core["\u0275\u0275pipeBind1"](10, 46, ctx_r3.saveInProgress$) || !ctx_r3.isWorkspaceAdmin || ctx_r3.isMyWorkspace && ctx_r3.restrictMyFolderCapacityEnabled), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](13, 48, "Trident_Workspace_Settings_License_Pro")), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", ctx_r3.isMyWorkspace), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"]("", core["\u0275\u0275pipeBind1"](18, 50, "Workspace_LicenseMode_Pro_Description"), " "), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("external", !0), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](21, 52, "LearnMore"), " "), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", !(ctx_r3.flagTridentUIHidePPU || ctx_r3.isMyWorkspace && !ctx_r3.showPPUForMyWorkspace)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("checked", ctx_r3.licenseMode === ctx_r3.LicenseMode.TridentPremiumPerCapacity)("value", ctx_r3.LicenseMode.TridentPremiumPerCapacity)("disabled", !ctx_r3.licenseModeEnabled(ctx_r3.LicenseMode.TridentPremiumPerCapacity) || core["\u0275\u0275pipeBind1"](24, 54, ctx_r3.saveInProgress$) || !ctx_r3.isWorkspaceAdmin), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](27, 56, "Capacity_PremiumCapacity")), 
                core["\u0275\u0275advance"](4), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](31, 58, "Workspace_LicenseMode_PPC_Description"), " "), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("external", !0), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](34, 60, "LearnMore"), " "), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("checked", ctx_r3.licenseMode === ctx_r3.LicenseMode.Embedded)("value", ctx_r3.LicenseMode.Embedded)("disabled", !ctx_r3.licenseModeEnabled(ctx_r3.LicenseMode.Embedded) || core["\u0275\u0275pipeBind1"](36, 62, ctx_r3.saveInProgress$) || !ctx_r3.isWorkspaceAdmin), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](39, 64, "Workspace_LicenseMode_Embedded")), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("triTooltip", _r8), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"]("", core["\u0275\u0275pipeBind1"](44, 66, "Workspace_LicenseMode_Embedded_Description"), " "), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("external", !0), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](47, 68, "LearnMore"), " "), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", ctx_r3.showDCCapacityOptions() || ctx_r3.licenseMode === ctx_r3.LicenseMode.DataCapacity), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx_r3.getShowDataCapacityTrialEnabled() || ctx_r3.licenseMode === ctx_r3.LicenseMode.DataCapacityTrial), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", ctx_r3.licenseMode !== ctx_r3.LicenseMode.TridentPremiumPerUser && ctx_r3.licenseMode !== ctx_r3.LicenseMode.DataCapacityTrial && null !== (tmp_29_0 = null == (tmp_29_0 = core["\u0275\u0275pipeBind1"](52, 70, ctx_r3.currentCapacities$)) ? null : tmp_29_0.length) && void 0 !== tmp_29_0 && tmp_29_0)("ngIfElse", _r19), 
                core["\u0275\u0275advance"](4), core["\u0275\u0275property"]("ngIf", null == ctx_r3.selectedCapacity ? null : ctx_r3.selectedCapacity.unavailableToUser), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !ctx_r3.isMyWorkspace), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("disabled", !0 !== core["\u0275\u0275pipeBind1"](59, 72, ctx_r3.canSaveCapacity$) || core["\u0275\u0275pipeBind1"](60, 74, ctx_r3.saveInProgress$))("ngClass", core["\u0275\u0275pureFunction1"](94, workspace_settings_premium_component_c0, !0 !== core["\u0275\u0275pipeBind1"](61, 76, ctx_r3.canSaveCapacity$) || core["\u0275\u0275pipeBind1"](62, 78, ctx_r3.saveInProgress$))), 
                core["\u0275\u0275advance"](5), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](64, 80, ctx_r3.saveInProgress$)), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](66, 82, ctx_r3.saveInProgress$)), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", !0 !== core["\u0275\u0275pipeBind1"](68, 84, ctx_r3.saveInProgress$)), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("disabled", !0 !== core["\u0275\u0275pipeBind1"](70, 86, ctx_r3.canSaveCapacity$) || core["\u0275\u0275pipeBind1"](71, 88, ctx_r3.saveInProgress$))("ngClass", core["\u0275\u0275pureFunction1"](96, workspace_settings_premium_component_c0, !0 !== core["\u0275\u0275pipeBind1"](72, 90, ctx_r3.canSaveCapacity$))), 
                core["\u0275\u0275advance"](4), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](74, 92, "Cancel_ButtonText")), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", !ctx_r3.isMyWorkspace && ctx_r3.licenseMode !== ctx_r3.LicenseMode.PowerBIPro);
            }
        }
        function WorkspaceSettingsPremiumComponent_ng_template_10_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementStart"](0, "div", 67), core["\u0275\u0275text"](1), 
            core["\u0275\u0275pipe"](2, "localize"), core["\u0275\u0275elementStart"](3, "tri-link", 68), 
            core["\u0275\u0275text"](4), core["\u0275\u0275pipe"](5, "localize"), core["\u0275\u0275elementEnd"]()()), 
            2 & rf && (core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](2, 3, "Workspace_LicenseMode_Tooltip"), " \xa0 "), 
            core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("external", !0), core["\u0275\u0275advance"](1), 
            core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](5, 5, "Workspace_LicenseMode_Tooltip_Link"), " "));
        }
        function WorkspaceSettingsPremiumComponent_ng_template_12_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementStart"](0, "div", 67), core["\u0275\u0275text"](1), 
            core["\u0275\u0275pipe"](2, "localize"), core["\u0275\u0275elementStart"](3, "tri-link", 69), 
            core["\u0275\u0275text"](4), core["\u0275\u0275pipe"](5, "localize"), core["\u0275\u0275elementEnd"]()()), 
            2 & rf && (core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](2, 3, "Workspace_LicenseMode_Pro_Information"), " \xa0 "), 
            core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("external", !0), core["\u0275\u0275advance"](1), 
            core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](5, 5, "Generic_LearnMore"), " "));
        }
        function WorkspaceSettingsPremiumComponent_ng_template_14_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementStart"](0, "div", 67), core["\u0275\u0275text"](1), 
            core["\u0275\u0275pipe"](2, "localize"), core["\u0275\u0275elementStart"](3, "tri-link", 70), 
            core["\u0275\u0275text"](4), core["\u0275\u0275pipe"](5, "localize"), core["\u0275\u0275elementEnd"]()()), 
            2 & rf && (core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](2, 3, "Workspace_LicenseMode_Embedded_Information"), " \xa0 "), 
            core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("external", !0), core["\u0275\u0275advance"](1), 
            core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](5, 5, "Generic_LearnMore"), " "));
        }
        var workspace_settings_premium_component_WorkspaceSettingsPremiumComponent = function() {
            function WorkspaceSettingsPremiumComponent(workspaceSettingsService, isTrident, featureSwitchService, triLocalizationService, telemetryService) {
                var _this = this;
                this.workspaceSettingsService = workspaceSettingsService, this.isTrident = isTrident, 
                this.featureSwitchService = featureSwitchService, this.triLocalizationService = triLocalizationService, 
                this.telemetryService = telemetryService, this.initialized$ = this.workspaceSettingsService.capacitiesInitialized$, 
                this.licenseMode = LicenseMode.PowerBIPro, this.defaultStorageFormat = StorageFormat.SmallDataset, 
                this.selectedCapacity = void 0, this.isMyWorkspace = this.workspaceSettingsService.isMyWorkspace, 
                this.showPPUForMyWorkspace = this.workspaceSettingsService.showPPUForMyWorkspace, 
                this.restrictMyFolderCapacityEnabled = !1, this.previousLicenseMode = "", this.currentCapacities$ = new BehaviorSubject.X([]), 
                this.canSaveCapacity$ = this.workspaceSettingsService.canSaveCapacitySelection$, 
                this.apiError$ = this.workspaceSettingsService.capacityUpdateErrorMessage$.pipe((0, 
                map.U)(function(error) {
                    return _this.errorDismissed$.next(!1), error;
                })), this.apiSuccess$ = this.workspaceSettingsService.capacityUpdateSuccess$.pipe((0, 
                map.U)(function(success) {
                    return _this.successDismissed$.next(!1), success;
                })), this.errorDismissed$ = new BehaviorSubject.X(!1), this.successDismissed$ = new BehaviorSubject.X(!1), 
                this.saveInProgress$ = this.workspaceSettingsService.capacitySaveInProgress$, this.workspaceConnectionString = "", 
                this.showCopied$ = new BehaviorSubject.X(!1), this.allowLargeDataset$ = new BehaviorSubject.X(void 0), 
                this.copyIconName = "copy_20_regular", this.flagTridentUIHidePPU = !1, this.isWorkspaceAdmin = !1, 
                this.LicenseMode = LicenseMode, this.StorageFormat = StorageFormat, this.capacitiesMapByLicenseMode = {}, 
                this.workspaceSettingsService.clearAllErrorMessages(), this.workspaceSettingsService.capacitiesInitialized$.subscribe(function(initialized) {
                    initialized && (_this.capacitiesMapByLicenseMode = _this.createCapacitiesMapByLicenseMode(), 
                    _this.setInitialLicenseMode(), _this.workspaceConnectionString = _this.workspaceSettingsService.workspaceConnectionString, 
                    _this.isWorkspaceAdmin = _this.workspaceSettingsService.isWorkspaceAdmin, _this.restrictMyFolderCapacityEnabled = _this.workspaceSettingsService.getFeatureSwitchState("restrictMyFolderCapacityEnabled"));
                }), this.workspaceSettingsService.selectedCapacity && !this.workspaceSettingsService.selectedCapacity.unavailableToUser && this.workspaceSettingsService.checkPremiumFilesEnabled(this.workspaceSettingsService.selectedCapacity.id).then(function(v) {
                    return _this.allowLargeDataset$.next(v);
                }), this.apiError$.subscribe(function(_error) {
                    _this.errorDismissed$.next(!1), _this.resetCapacity();
                }), this.apiSuccess$.subscribe(function() {
                    _this.successDismissed$.next(!1);
                }), this.showCopied$.pipe((0, filter.h)(function(v) {
                    return !!v;
                }), (0, delay.g)(6e3)).subscribe(function() {
                    return _this.showCopied$.next(!1);
                }), this.showWorkspaceSettingsV2$ = this.featureSwitchService.featureSwitches$.pipe((0, 
                filter.h)(function(switches) {
                    return !!switches;
                }), (0, take.q)(1), (0, map.U)(function(switches) {
                    return _this.isTrident && !!switches.showWorkspaceSettingsV2;
                }));
            }
            return Object.defineProperty(WorkspaceSettingsPremiumComponent.prototype, "capacityRegionString", {
                get: function() {
                    var _a, _b, _c;
                    return (null === (_a = this.selectedCapacity) || void 0 === _a ? void 0 : _a.sku) && this.selectedCapacity.region ? this.triLocalizationService.format("CapacitySetting_SKU_And_Region", this.selectedCapacity.sku, this.selectedCapacity.region) : (null === (_b = this.selectedCapacity) || void 0 === _b ? void 0 : _b.sku) ? this.triLocalizationService.format("CapacitySetting_SKU", this.selectedCapacity.sku) : (null === (_c = this.selectedCapacity) || void 0 === _c ? void 0 : _c.region) ? this.triLocalizationService.format("CapacitySetting_Region", this.selectedCapacity.region) : "";
                },
                enumerable: !1,
                configurable: !0
            }), WorkspaceSettingsPremiumComponent.prototype.onLicenseModeSelected = function(selected, value) {
                selected && (this.previousLicenseMode = this.licenseMode, this.licenseMode = value, 
                this.currentCapacities$.next(this.capacitiesMapByLicenseMode[this.licenseMode]), 
                this.licenseMode === LicenseMode.TridentPremiumPerUser || this.licenseMode === LicenseMode.DataCapacityTrial ? (this.selectedCapacity = this.capacitiesMapByLicenseMode[this.licenseMode][0], 
                this.updateWithPremiumFilesAvailablity()) : this.selectedCapacity = void 0, this.workspaceSettingsService.selectedCapacity = this.selectedCapacity, 
                this.licenseMode === LicenseMode.PowerBIPro && (this.defaultStorageFormat = StorageFormat.SmallDataset, 
                this.workspaceSettingsService.defaultStorageFormat = this.defaultStorageFormat));
            }, WorkspaceSettingsPremiumComponent.prototype.applyCapacity = function() {
                var correlationId = "";
                if (this.previousLicenseMode === LicenseMode.PowerBIPro && (this.licenseMode === LicenseMode.TridentPremiumPerUser || this.licenseMode === LicenseMode.TridentPremiumPerCapacity) || this.previousLicenseMode === LicenseMode.TridentPremiumPerUser && this.licenseMode === LicenseMode.TridentPremiumPerCapacity) {
                    correlationId = "".concat((0, v4.Z)(), ".").concat((0, v4.Z)());
                    var licenseModeUpgrade = {
                        originatingService: "DataCloudUX",
                        activityName: "Upgrade license mode from ".concat(this.previousLicenseMode, " to ").concat(this.licenseMode),
                        featureName: "Fabric Workspace Settings",
                        activityStatus: "Pending",
                        activityAttributes: {
                            fromLicenseMode: this.previousLicenseMode,
                            toLicenseMode: this.licenseMode
                        },
                        operationEndTime: (new Date).toISOString(),
                        correlationId
                    };
                    this.telemetryService.logStandardFeatureEvent(licenseModeUpgrade);
                }
                this.workspaceSettingsService.saveCapacitySelection(correlationId);
            }, WorkspaceSettingsPremiumComponent.prototype.resetCapacity = function() {
                this.workspaceSettingsService.resetCapacitySelection(), this.setInitialLicenseMode();
            }, WorkspaceSettingsPremiumComponent.prototype.onDefaultStorageFormatSelected = function(selected, value) {
                selected && (this.defaultStorageFormat = value, this.workspaceSettingsService.defaultStorageFormat = this.defaultStorageFormat);
            }, WorkspaceSettingsPremiumComponent.prototype.copyConnectionToClipboard = function() {
                navigator.clipboard.writeText(this.workspaceConnectionString), this.showCopied$.next(!0);
            }, WorkspaceSettingsPremiumComponent.prototype.licenseModeEnabled = function(licenseMode) {
                return licenseMode === LicenseMode.PowerBIPro || !(licenseMode === LicenseMode.TridentPremiumPerUser && !this.workspaceSettingsService.isPPUTierAvialbleToUser()) && this.capacitiesMapByLicenseMode[licenseMode].length > 0;
            }, WorkspaceSettingsPremiumComponent.prototype.onSelectedCapacityChange = function() {
                this.updateWithPremiumFilesAvailablity(), this.workspaceSettingsService.selectedCapacity = this.selectedCapacity;
            }, WorkspaceSettingsPremiumComponent.prototype.mouseOverCopy = function() {
                this.copyIconName = "copy_20_filled";
            }, WorkspaceSettingsPremiumComponent.prototype.mouseOutCopy = function() {
                this.copyIconName = "copy_20_regular";
            }, WorkspaceSettingsPremiumComponent.prototype.dismissError = function() {
                this.errorDismissed$.next(!0);
            }, WorkspaceSettingsPremiumComponent.prototype.dismissSuccess = function() {
                this.successDismissed$.next(!0);
            }, WorkspaceSettingsPremiumComponent.prototype.getErrorMessageBarViewModel = function(message) {
                var _this = this, messageBarModel = {
                    bannerType: 1,
                    allowDismiss: !0,
                    iconName: "dismiss_circle_16_regular",
                    closeBarCallback: function() {
                        return _this.dismissError();
                    },
                    message
                };
                if (isVNetErrorMessage(message)) {
                    var learnMoreLink = getErrorCodeLearnMore(message), localizedMessage = this.triLocalizationService.get("Workspace_PrivateEndpointsErrorMessage_".concat(message));
                    learnMoreLink && (messageBarModel.link = learnMoreLink, messageBarModel.linkDisplayName = this.triLocalizationService.get("LearnMore")), 
                    messageBarModel.message = localizedMessage;
                }
                return messageBarModel;
            }, WorkspaceSettingsPremiumComponent.prototype.getNoPermissionsToCapacityMessageBarViewModel = function() {
                return {
                    bannerType: 0,
                    allowDismiss: !1,
                    iconName: "info_20_regular",
                    message: this.triLocalizationService.get("Trident_Workspace_Settings_Capacity_No_Access")
                };
            }, WorkspaceSettingsPremiumComponent.prototype.getSuccessMessageBarViewModel = function() {
                return {
                    bannerType: 3,
                    allowDismiss: !0,
                    iconName: "info_20_regular",
                    message: this.triLocalizationService.get("Sharing_EditDashboardUsersSuccess")
                };
            }, WorkspaceSettingsPremiumComponent.prototype.setInitialLicenseMode = function() {
                var _this = this;
                this.selectedCapacity = this.workspaceSettingsService.selectedCapacity, this.selectedCapacity ? this.selectedCapacity.unavailableToUser ? this.licenseMode = null != this.selectedCapacity.capacitySkuTier ? getLicenseModeFromCapacitySkuTier(this.selectedCapacity.capacitySkuTier) : LicenseMode.Unknown : (this.licenseMode = getLicenseModeFromCapacitySkuTier(this.selectedCapacity.capacitySkuTier), 
                this.selectedCapacity = this.capacitiesMapByLicenseMode[this.licenseMode].find(function(c) {
                    var _a;
                    return c.id === (null === (_a = _this.selectedCapacity) || void 0 === _a ? void 0 : _a.id);
                })) : this.licenseMode = LicenseMode.PowerBIPro, this.currentCapacities$.next(this.capacitiesMapByLicenseMode[this.licenseMode]), 
                this.updateWithPremiumFilesAvailablity();
            }, WorkspaceSettingsPremiumComponent.prototype.showDCCapacityOptions = function() {
                return this.workspaceSettingsService.showDCCapacityOptions() && !!this.isTrident;
            }, WorkspaceSettingsPremiumComponent.prototype.getShowDataCapacityTrialEnabled = function() {
                return this.workspaceSettingsService.getShowDataCapacityTrialEnabled() && !!this.isTrident;
            }, WorkspaceSettingsPremiumComponent.prototype.createCapacitiesMapByLicenseMode = function() {
                var _a, map = ((_a = {})[LicenseMode.Unknown] = [], _a[LicenseMode.PowerBIPro] = [], 
                _a[LicenseMode.TridentPremiumPerUser] = [], _a[LicenseMode.TridentPremiumPerCapacity] = [], 
                _a[LicenseMode.Embedded] = [], _a[LicenseMode.DataCapacity] = [], _a[LicenseMode.DataCapacityTrial] = [], 
                _a);
                return this.workspaceSettingsService.allCapacities.forEach(function(capacity) {
                    1 === capacity.capacitySkuTier ? map[LicenseMode.TridentPremiumPerCapacity].push(capacity) : 4 === capacity.capacitySkuTier ? map[LicenseMode.TridentPremiumPerUser].push(capacity) : 2 === capacity.capacitySkuTier || 3 === capacity.capacitySkuTier ? map[LicenseMode.Embedded].push(capacity) : 8 === capacity.capacitySkuTier || 9 === capacity.capacitySkuTier ? map[LicenseMode.DataCapacity].push(capacity) : 7 === capacity.capacitySkuTier && map[LicenseMode.DataCapacityTrial].push(capacity);
                }), map;
            }, WorkspaceSettingsPremiumComponent.prototype.updateWithPremiumFilesAvailablity = function() {
                var _this = this;
                this.selectedCapacity && !this.selectedCapacity.unavailableToUser ? this.workspaceSettingsService.checkPremiumFilesEnabled(this.selectedCapacity.id).then(function(v) {
                    _this.allowLargeDataset$.next(v), _this.defaultStorageFormat = _this.workspaceSettingsService.defaultStorageFormat;
                }) : (this.defaultStorageFormat = this.workspaceSettingsService.defaultStorageFormat, 
                this.allowLargeDataset$.next(!1));
            }, WorkspaceSettingsPremiumComponent.\u0275fac = function(t) {
                return new (t || WorkspaceSettingsPremiumComponent)(core["\u0275\u0275directiveInject"](tri_workspace_settings.X), core["\u0275\u0275directiveInject"](trident_env.Y), core["\u0275\u0275directiveInject"](feature_switch_service.V$), core["\u0275\u0275directiveInject"](localization_service.z), core["\u0275\u0275directiveInject"](telemetry_service.t));
            }, WorkspaceSettingsPremiumComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: WorkspaceSettingsPremiumComponent,
                selectors: [ [ "tri-workspace-settings-premium" ] ],
                decls: 16,
                vars: 16,
                consts: [ [ 4, "ngIf" ], [ 3, "viewModel", "hideMessageBar", 4, "ngIf" ], [ "licenseModeInfoTip", "" ], [ "myWorkspaceProInfoTip", "" ], [ "embeddedInfoTip", "" ], [ 1, "tri-flex", "tri-items-center", "tri-justify-center", "tri-h-full" ], [ 3, "viewModel", "hideMessageBar" ], [ "iconName", "premium_20_regular", 3, "headerText" ], [ 1, "premium-input-container" ], [ "id", "workspace-license-mode-setting-label" ], [ "name", "info_20_regular", "tabindex", "-1", 1, "premium-info-tip-button", 3, "triTooltip" ], [ "name", "licenseMode", "type", "radio", "aria-labelledby", "workspace-license-mode-pro", 1, "radio-button-input", 3, "checked", "value", "disabled", "change" ], [ "id", "workspace-license-mode-pro", 1, "radio-label" ], [ "name", "info_20_regular", "class", "premium-info-tip-button", "tabindex", "-1", 3, "triTooltip", 4, "ngIf" ], [ 1, "licensemode-description-info" ], [ "target", "_blank", "href", "https://go.microsoft.com/fwlink/?linkid=2227278", "localize", "LearnMore", "localize-tooltip", "LearnMore", 1, "learn-more-link-icon", 3, "external" ], [ "name", "licenseMode", "type", "radio", "aria-labelledby", "workspace-license-mode-premium-per-capacity", 1, "radio-button-input", 3, "checked", "value", "disabled", "change" ], [ "id", "workspace-license-mode-premium-per-capacity", 1, "radio-label" ], [ "target", "_blank", "href", "https://go.microsoft.com/fwlink/?linkid=2227277", "localize", "LearnMore", "localize-tooltip", "LearnMore", 1, "learn-more-link-icon", 3, "external" ], [ "name", "licenseMode", "type", "radio", "aria-labelledby", "workspace-license-mode-embedded", 1, "radio-button-input", 3, "checked", "value", "disabled", "change" ], [ "id", "workspace-license-mode-embedded", 1, "radio-label" ], [ "target", "_blank", "href", "https://go.microsoft.com/fwlink/?linkid=2227525", "localize", "LearnMore", "localize-tooltip", "LearnMore", 1, "learn-more-link-icon", 3, "external" ], [ "name", "licenseMode", "type", "radio", "class", "radio-button-input", "aria-labelledby", "workspace-license-mode-data-capacity", 3, "checked", "value", "disabled", "change", 4, "ngIf" ], [ "name", "licenseMode", "type", "radio", "class", "radio-button-input", "aria-labelledby", "workspace-license-mode-data-capacity-trial", 3, "checked", "value", "disabled", "change", 4, "ngIf" ], [ 1, "capacity-container" ], [ 4, "ngIf", "ngIfElse" ], [ "staticLicenseCapacity", "" ], [ 3, "viewModel", 4, "ngIf" ], [ 1, "premium-footer-buttons", "tri-flex" ], [ "tri-button", "", "appearance", "primary", 1, "footer-button", 3, "disabled", "ngClass", "click" ], [ "tri-button", "", 1, "footer-button", 3, "disabled", "ngClass", "click" ], [ "name", "licenseMode", "type", "radio", "aria-labelledby", "workspace-license-mode-premium-per-user", 1, "radio-button-input", 3, "checked", "value", "disabled", "change" ], [ "id", "workspace-license-mode-premium-per-user", 1, "radio-label" ], [ "target", "_blank", "href", "https://go.microsoft.com/fwlink/?linkid=2227449", "localize", "LearnMore", "localize-tooltip", "LearnMore", 1, "learn-more-link-icon", 3, "external" ], [ "name", "licenseMode", "type", "radio", "aria-labelledby", "workspace-license-mode-data-capacity", 1, "radio-button-input", 3, "checked", "value", "disabled", "change" ], [ "id", "workspace-license-mode-data-capacity", 1, "radio-label" ], [ "target", "_blank", "href", "https://go.microsoft.com/fwlink/?linkid=2227397", "localize", "LearnMore", "localize-tooltip", "LearnMore", 1, "learn-more-link-icon", 3, "external" ], [ "name", "licenseMode", "type", "radio", "aria-labelledby", "workspace-license-mode-data-capacity-trial", 1, "radio-button-input", 3, "checked", "value", "disabled", "change" ], [ "id", "workspace-license-mode-data-capacity-trial", 1, "radio-label" ], [ "target", "_blank", "href", "https://go.microsoft.com/fwlink/?linkid=2227617", "localize", "LearnMore", "localize-tooltip", "LearnMore", 1, "learn-more-link-icon", 3, "external" ], [ 1, "capacity-label" ], [ 1, "capacity-select-field" ], [ "disableRipple", "", "disableOptionCentering", "", 1, "capacity-select", 3, "ngModel", "disabled", "ngModelChange", "selectionChange" ], [ 3, "value", 4, "ngFor", "ngForOf" ], [ "class", "tri-flex error-message-container", 4, "ngIf" ], [ 3, "value" ], [ 1, "tri-flex", "error-message-container" ], [ "name", "error_circle_12_filled", 1, "error-message-icon" ], [ "class", "license-capacity-name tri-caption1Strong", 4, "ngIf" ], [ "class", "license-capacity-region tri-caption1", 4, "ngIf" ], [ 1, "license-capacity-name", "tri-caption1Strong" ], [ 1, "license-capacity-region", "tri-caption1" ], [ 3, "viewModel" ], [ "id", "workspace-default-storage-format-label" ], [ "name", "defaultStorageFormat", "type", "radio", "aria-labelledby", "workspace-default-storage-small-dataset", 1, "radio-button-input", 3, "checked", "value", "disabled", "change" ], [ "id", "workspace-default-storage-small-dataset", 1, "radio-label" ], [ "name", "defaultStorageFormat", "type", "radio", "aria-labelledby", "workspace-default-storage-large-dataset", 1, "radio-button-input", 3, "checked", "value", "disabled", "change" ], [ "id", "workspace-default-storage-large-dataset", 1, "radio-label" ], [ "target", "_blank", "rel", "noopener noreferrer", "href", "https://docs.microsoft.com/en-us/power-bi/enterprise/service-premium-large-models#enable-large-models", 3, "external" ], [ 1, "premium-input-container", "tri-flex", "tri-flex-col", "tri-relative" ], [ "id", "workspace-connection-setting-label" ], [ 1, "workspace-connection-container", "tri-flex" ], [ "disabled", "", 1, "tri-flex-grow", "connection-string", 3, "triTooltip" ], [ "tri-button", "", "appearance", "subtle", 1, "copy-connection-button", 3, "click", "mouseover", "mouseout" ], [ 1, "copy-connection-icon", 3, "name" ], [ "role", "alert", 1, "link-copied-tip" ], [ 1, "workspace-connection-copied-message" ], [ 1, "info-tip-content" ], [ "href", "https://go.microsoft.com/fwlink/?linkid=2159767", "target", "_blank", "rel", "noopener noreferrer", 3, "external" ], [ "href", "https://go.microsoft.com/fwlink/?linkid=2218869", "target", "_blank", "rel", "noopener noreferrer", 3, "external" ], [ "href", "https://go.microsoft.com/fwlink/?linkid=2159726", "target", "_blank", "rel", "noopener noreferrer", 3, "external" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275template"](0, workspace_settings_premium_component_WorkspaceSettingsPremiumComponent_ng_container_0_Template, 2, 0, "ng-container", 0), 
                    core["\u0275\u0275pipe"](1, "async"), core["\u0275\u0275template"](2, workspace_settings_premium_component_WorkspaceSettingsPremiumComponent_tri_message_bar_2_Template, 2, 3, "tri-message-bar", 1), 
                    core["\u0275\u0275pipe"](3, "async"), core["\u0275\u0275pipe"](4, "async"), core["\u0275\u0275template"](5, WorkspaceSettingsPremiumComponent_tri_message_bar_5_Template, 1, 1, "tri-message-bar", 1), 
                    core["\u0275\u0275pipe"](6, "async"), core["\u0275\u0275pipe"](7, "async"), core["\u0275\u0275template"](8, WorkspaceSettingsPremiumComponent_ng_container_8_Template, 76, 98, "ng-container", 0), 
                    core["\u0275\u0275pipe"](9, "async"), core["\u0275\u0275template"](10, WorkspaceSettingsPremiumComponent_ng_template_10_Template, 6, 7, "ng-template", null, 2, core["\u0275\u0275templateRefExtractor"]), 
                    core["\u0275\u0275template"](12, WorkspaceSettingsPremiumComponent_ng_template_12_Template, 6, 7, "ng-template", null, 3, core["\u0275\u0275templateRefExtractor"]), 
                    core["\u0275\u0275template"](14, WorkspaceSettingsPremiumComponent_ng_template_14_Template, 6, 7, "ng-template", null, 4, core["\u0275\u0275templateRefExtractor"])), 
                    2 & rf && (core["\u0275\u0275property"]("ngIf", !1 === core["\u0275\u0275pipeBind1"](1, 4, ctx.initialized$)), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", !1 === core["\u0275\u0275pipeBind1"](3, 6, ctx.errorDismissed$) && core["\u0275\u0275pipeBind1"](4, 8, ctx.apiError$)), 
                    core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngIf", !1 === core["\u0275\u0275pipeBind1"](6, 10, ctx.successDismissed$) && core["\u0275\u0275pipeBind1"](7, 12, ctx.apiSuccess$)), 
                    core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](9, 14, ctx.initialized$)));
                },
                dependencies: [ common.NgClass, common.NgForOf, common.NgIf, fesm2022_forms.JJ, fesm2022_forms.On, tri_svg_icon_component.M, legacy_form_field.v_, legacy_select.x8, legacy_core.CK, tri_spinner_component.D, tri_message_bar_component.h, tri_radio_button_component.Y, tri_radio_group_component.Z, tri_tooltip_directive.Z, TriCollapsedContainerComponent, tri_link_component.v, common.AsyncPipe, localize_pipe.Y ],
                styles: [ "[_nghost-%COMP%]{font-family:var(--fontFamilyBase);font-size:14px;line-height:20px}[_nghost-%COMP%]   label[_ngcontent-%COMP%]{margin-bottom:8px}[_nghost-%COMP%]   .radio-button-container[_ngcontent-%COMP%]{height:32px;box-sizing:border-box;padding:6px 0}[_nghost-%COMP%]   .radio-button-container[_ngcontent-%COMP%]   .radio-button-input[_ngcontent-%COMP%]{height:20px;width:20px;margin-top:0}[_nghost-%COMP%]   .radio-button-container[_ngcontent-%COMP%]   .radio-label[_ngcontent-%COMP%]{font-weight:400;margin-bottom:0;margin-left:9px;-webkit-user-select:none;-ms-user-select:none;user-select:none}[_nghost-%COMP%]   .premium-input-container[_ngcontent-%COMP%]{margin-top:16px}[_nghost-%COMP%]   .premium-input-container[_ngcontent-%COMP%]   .radio-button-input[_ngcontent-%COMP%]     .tri-radio-button-internal section{align-items:start}[_nghost-%COMP%]   .premium-input-container[_ngcontent-%COMP%]   .radio-button-input[_ngcontent-%COMP%]     .tri-radio-button-internal section .tri-radio-button-text .radio-label{font-weight:600}[_nghost-%COMP%]   .premium-input-container[_ngcontent-%COMP%]   .radio-button-input[_ngcontent-%COMP%]     .tri-radio-button-internal section .tri-radio-button-text .licensemode-description-info{font-size:12px}[_nghost-%COMP%]   .premium-input-container[_ngcontent-%COMP%]   .radio-button-input[_ngcontent-%COMP%]     .tri-radio-button-internal section .tri-radio-button-text .licensemode-description-info tri-link>a{display:inline-flex}[_nghost-%COMP%]   .premium-input-container[_ngcontent-%COMP%]   .radio-button-input[_ngcontent-%COMP%]     .tri-radio-button-internal section .tri-radio-button-text .licensemode-description-info tri-link>a tri-svg-icon{width:16px}[_nghost-%COMP%]   .premium-footer-buttons[_ngcontent-%COMP%]{margin-top:28px}[_nghost-%COMP%]   .premium-footer-buttons[_ngcontent-%COMP%]   .footer-button[_ngcontent-%COMP%]{margin-right:8px}[_nghost-%COMP%]   .premium-info-tip-button[_ngcontent-%COMP%]{height:12px;width:12px;fill:var(--colorNeutralForeground3);margin-left:8px;margin-bottom:4px}[_nghost-%COMP%]   .capacity-container[_ngcontent-%COMP%]{margin-top:24px}[_nghost-%COMP%]   .capacity-container[_ngcontent-%COMP%]   .capacity-select-field[_ngcontent-%COMP%]{font-size:14px;line-height:20px;font-family:var(--fontFamilyBase);width:100%}[_nghost-%COMP%]   .capacity-container[_ngcontent-%COMP%]   .capacity-select-field[_ngcontent-%COMP%]   .capacity-select[_ngcontent-%COMP%]{font-family:var(--fontFamilyBase)}[_nghost-%COMP%]   .capacity-container[_ngcontent-%COMP%]   .capacity-select-field[_ngcontent-%COMP%]  .mat-form-field-underline{display:none}[_nghost-%COMP%]   .capacity-container[_ngcontent-%COMP%]   .capacity-select-field[_ngcontent-%COMP%]  .mat-form-field-wrapper{padding-bottom:0}[_nghost-%COMP%]   .capacity-container[_ngcontent-%COMP%]   .capacity-select-field[_ngcontent-%COMP%]  .mat-form-field-infix{height:32px;border:1px solid var(--colorNeutralStroke1);border-radius:4px;box-sizing:border-box;padding:6px 12px}[_nghost-%COMP%]   .capacity-container[_ngcontent-%COMP%]   .capacity-select-field[_ngcontent-%COMP%]  .mat-form-field-infix .mat-form-field-label-wrapper{left:12px;width:calc(100% - 24px)}[_nghost-%COMP%]   .capacity-container[_ngcontent-%COMP%]   .capacity-select-field.has-error[_ngcontent-%COMP%]  .mat-form-field-infix{border:1px solid var(--globalColorBurgundyTint10)}[_nghost-%COMP%]   .capacity-container[_ngcontent-%COMP%]   .license-capacity-name[_ngcontent-%COMP%]{color:var(--colorNeutralForeground1);margin-top:var(--spacingVerticalXS)}[_nghost-%COMP%]   .capacity-container[_ngcontent-%COMP%]   .license-capacity-region[_ngcontent-%COMP%]{color:var(--colorNeutralForeground4)}[_nghost-%COMP%]   .workspace-connection-container[_ngcontent-%COMP%]{border:1px solid var(--colorNeutralStroke1);box-sizing:border-box;border-radius:4px;height:32px;align-items:center;padding:0 12px;background-color:var(--colorNeutralBackground4);color:var(--colorNeutralForeground1)}[_nghost-%COMP%]   .workspace-connection-container[_ngcontent-%COMP%]   tri-svg-icon[_ngcontent-%COMP%]{height:16px;width:16px}[_nghost-%COMP%]   .workspace-connection-container[_ngcontent-%COMP%]   .copy-connection-button[_ngcontent-%COMP%]{padding:0;height:20px}[_nghost-%COMP%]   .workspace-connection-container[_ngcontent-%COMP%]   .copy-connection-button[_ngcontent-%COMP%]:hover   .copy-connection-icon[_ngcontent-%COMP%], [_nghost-%COMP%]   .workspace-connection-container[_ngcontent-%COMP%]   .copy-connection-button[_ngcontent-%COMP%]:focus   .copy-connection-icon[_ngcontent-%COMP%]{fill:var(--colorBrandForeground1)}[_nghost-%COMP%]   .workspace-connection-container[_ngcontent-%COMP%]   .copy-connection-button[_ngcontent-%COMP%]:active   .copy-connection-icon[_ngcontent-%COMP%]{fill:var(--colorBrandForeground1)}[_nghost-%COMP%]   .link-copied-tip[_ngcontent-%COMP%]{position:absolute;right:0;top:65px;box-shadow:0 4px 8px 0 var(--globalColorBlackAlpha10);padding:6px 12px}[_nghost-%COMP%]   .link-copied-tip[_ngcontent-%COMP%]   .workspace-connection-copied-message[_ngcontent-%COMP%]{white-space:pre-wrap}[_nghost-%COMP%]   .connection-string[_ngcontent-%COMP%]{height:24px;background-color:var(--colorNeutralBackground4);line-height:24px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;-webkit-user-select:none;-ms-user-select:none;user-select:none}[_nghost-%COMP%]   #workspace-license-mode-setting-label[_ngcontent-%COMP%], [_nghost-%COMP%]   #workspace-default-storage-format-label[_ngcontent-%COMP%], [_nghost-%COMP%]   #workspace-connection-setting-label[_ngcontent-%COMP%], [_nghost-%COMP%]   .capacity-label[_ngcontent-%COMP%]{font-weight:600}" ],
                changeDetection: 0
            }), WorkspaceSettingsPremiumComponent;
        }(), withLatestFrom = __webpack_require__(23558), datasetStore = __webpack_require__(24692), workspace_settings_storage_systems_component_c0 = [ "storageTable" ];
        function WorkspaceSettingsStorageSystemsComponent_tri_message_bar_0_Template(rf, ctx) {
            if (1 & rf) {
                var _r6 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "tri-message-bar", 25), core["\u0275\u0275listener"]("hideMessageBar", function() {
                    core["\u0275\u0275restoreView"](_r6);
                    var ctx_r5 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r5.dismissError());
                }), core["\u0275\u0275pipe"](1, "async"), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var tmp_0_0, ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("viewModel", ctx_r0.getErrorMessageBarViewModel(null !== (tmp_0_0 = core["\u0275\u0275pipeBind1"](1, 1, ctx_r0.deleteArtifactErrorMessage$)) && void 0 !== tmp_0_0 ? tmp_0_0 : ""));
            }
        }
        function WorkspaceSettingsStorageSystemsComponent_div_33_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 11), core["\u0275\u0275element"](1, "div", 26), 
            core["\u0275\u0275text"](2), core["\u0275\u0275pipe"](3, "async"), core["\u0275\u0275pipe"](4, "localize"), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r1 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate2"](" ", core["\u0275\u0275pipeBind1"](3, 2, ctx_r1.storageSizeUsedByOthersWithUnit$), " ", core["\u0275\u0275pipeBind1"](4, 4, "Trident_Workspace_Settings_Storage_Owned_By_Others"), " ");
            }
        }
        function WorkspaceSettingsStorageSystemsComponent_th_52_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "th", 27);
        }
        function WorkspaceSettingsStorageSystemsComponent_ng_container_54_td_10_ng_container_1_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275element"](1, "tri-spinner", 36), 
            core["\u0275\u0275elementContainerEnd"]());
        }
        function WorkspaceSettingsStorageSystemsComponent_ng_container_54_td_10_ng_template_3_Template(rf, ctx) {
            if (1 & rf) {
                var _r15 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "button", 37), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r15);
                    var artifact_r7 = core["\u0275\u0275nextContext"](2).$implicit, ctx_r13 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r13.deleteArtifact(artifact_r7));
                })("keydown", function($event) {
                    core["\u0275\u0275restoreView"](_r15);
                    var ctx_r16 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r16.onDeleteButtonKeyDown($event));
                }), core["\u0275\u0275pipe"](1, "localizeFormat"), core["\u0275\u0275element"](2, "tri-svg-icon", 38), 
                core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r17 = core["\u0275\u0275nextContext"](2), index_r8 = ctx_r17.index, artifact_r7 = ctx_r17.$implicit, ctx_r12 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("tabIndex", ctx_r12.focussedDeleteButtonIndex === index_r8 ? 0 : -1), 
                core["\u0275\u0275attribute"]("aria-label", core["\u0275\u0275pipeBind2"](1, 2, "Hierarchy_Format_Level_Delete", artifact_r7.name));
            }
        }
        function WorkspaceSettingsStorageSystemsComponent_ng_container_54_td_10_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "td"), core["\u0275\u0275template"](1, WorkspaceSettingsStorageSystemsComponent_ng_container_54_td_10_ng_container_1_Template, 2, 0, "ng-container", 34), 
            core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275template"](3, WorkspaceSettingsStorageSystemsComponent_ng_container_54_td_10_ng_template_3_Template, 3, 5, "ng-template", null, 35, core["\u0275\u0275templateRefExtractor"]), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var tmp_0_0, _r11 = core["\u0275\u0275reference"](4), artifact_r7 = core["\u0275\u0275nextContext"]().$implicit, ctx_r9 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", null == (tmp_0_0 = core["\u0275\u0275pipeBind1"](2, 2, ctx_r9.artifactDeleteInProgress$)) ? null : tmp_0_0[artifact_r7.modelId])("ngIfElse", _r11);
            }
        }
        function WorkspaceSettingsStorageSystemsComponent_ng_container_54_Template(rf, ctx) {
            if (1 & rf) {
                var _r20 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "tr", 28), 
                core["\u0275\u0275listener"]("keydown", function($event) {
                    core["\u0275\u0275restoreView"](_r20);
                    var ctx_r19 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r19.onRowKeyDown($event));
                }), core["\u0275\u0275elementStart"](2, "td", 29), core["\u0275\u0275text"](3), 
                core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](4, "td", 30), 
                core["\u0275\u0275text"](5), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](6, "td", 31), 
                core["\u0275\u0275text"](7), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](8, "td", 32), 
                core["\u0275\u0275text"](9), core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](10, WorkspaceSettingsStorageSystemsComponent_ng_container_54_td_10_Template, 5, 4, "td", 33), 
                core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementContainerEnd"]();
            }
            if (2 & rf) {
                var artifact_r7 = ctx.$implicit, index_r8 = ctx.index, ctx_r4 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("tabindex", ctx_r4.focussedRowIndex === index_r8 ? 0 : -1), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("triTooltip", artifact_r7.name), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate1"]("", artifact_r7.name, " "), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275propertyInterpolate1"]("triTooltip", "", artifact_r7.sizeInMBs, " MB"), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate1"]("", artifact_r7.sizeInMBs, " MB"), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("triTooltip", artifact_r7.typeText), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate"](artifact_r7.typeText), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("triTooltip", ctx_r4.getRelatedObjects(artifact_r7)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate1"](" ", ctx_r4.getRelatedObjects(artifact_r7), ""), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx_r4.isWorkspaceAdmin);
            }
        }
        var workspace_settings_storage_systems_component_c1 = function(a0) {
            return {
                width: a0
            };
        }, WorkspaceSettingsStorageSystemsComponent = function() {
            function WorkspaceSettingsStorageSystemsComponent(workspaceSettingsService, datasetStore, localizationService, telemetryService) {
                var _this = this;
                this.workspaceSettingsService = workspaceSettingsService, this.datasetStore = datasetStore, 
                this.localizationService = localizationService, this.telemetryService = telemetryService, 
                this.isWorkspaceAdmin = this.workspaceSettingsService.isWorkspaceAdmin, this.focussedRowIndex = 0, 
                this.focussedDeleteButtonIndex = -1, this.totalStorageQuotaInMB$ = new BehaviorSubject.X(0), 
                this.storageUsageArtifacts$ = new BehaviorSubject.X([]), this.storageUsedByIdentityInMB$ = this.storageUsageArtifacts$.pipe((0, 
                map.U)(function(artifacts) {
                    return _this.workspaceSettingsService.isPremium ? 0 : artifacts.reduce(function(pVal, artifact) {
                        return pVal + artifact.sizeInMBs;
                    }, 0);
                })), this.storageUsedByOthersInMB$ = new BehaviorSubject.X(0), this.totalStorageUsedInMB$ = (0, 
                combineLatest.aj)([ this.storageUsedByIdentityInMB$, this.storageUsedByOthersInMB$ ]).pipe((0, 
                map.U)(function(_a) {
                    return _this.workspaceSettingsService.isPremium ? 0 : _a[0] + _a[1];
                })), this.totalStorageAvailableWithUnit$ = (0, combineLatest.aj)([ this.totalStorageQuotaInMB$, this.totalStorageUsedInMB$ ]).pipe((0, 
                map.U)(function(_a) {
                    return getIntuitiveSizeText(_a[0] - _a[1], _this.localizationService);
                })), this.storageSizeUsedByIdentityWithUnit$ = this.storageUsedByIdentityInMB$.pipe((0, 
                map.U)(function(size) {
                    return getIntuitiveSizeText(size, _this.localizationService);
                })), this.storageSizeUsedByOthersWithUnit$ = this.storageUsedByOthersInMB$.pipe((0, 
                map.U)(function(size) {
                    return getIntuitiveSizeText(size, _this.localizationService);
                })), this.totalStorageQuoutaWithUnit$ = this.totalStorageQuotaInMB$.pipe((0, map.U)(function(size) {
                    return getIntuitiveSizeText(size, _this.localizationService);
                })), this.deleteArtifactErrorMessage$ = this.workspaceSettingsService.deleteArtifactErrorMessage$.pipe((0, 
                map.U)(function(v) {
                    return null == v ? void 0 : v.message;
                })), this.artifactDeleteInProgress$ = this.workspaceSettingsService.artifactsBeingDeleted$.pipe((0, 
                withLatestFrom.M)(this.storageUsageArtifacts$), (0, map.U)(function(_a) {
                    var models = _a[0], deleteInProgressByModelId = {};
                    return _a[1].forEach(function(a) {
                        deleteInProgressByModelId[a.modelId] = !1;
                    }), models.forEach(function(mid) {
                        deleteInProgressByModelId[mid] = !0;
                    }), deleteInProgressByModelId;
                })), this.errorDismissed$ = new BehaviorSubject.X(!1), this.zoneClicksRemoved = !1, 
                this.datasetsSubscription = this.datasetStore.datasets.subscribe(function() {
                    _this.updateStorageInfo();
                });
            }
            return WorkspaceSettingsStorageSystemsComponent.prototype.ngOnInit = function() {
                this.updateStorageInfo(), this.telemetryService.logStandardFeatureEvent({
                    originatingService: "DataCloudUX",
                    activityName: "Open system storage",
                    featureName: "Fabric Workspace Settings"
                });
            }, WorkspaceSettingsStorageSystemsComponent.prototype.ngAfterViewChecked = function() {
                !this.zoneClicksRemoved && this.storageUsageArtifacts$.value.length && (this.removeZoneClickFromTableCells(), 
                this.zoneClicksRemoved = !0);
            }, WorkspaceSettingsStorageSystemsComponent.prototype.ngOnDestroy = function() {
                var _a;
                null === (_a = this.datasetsSubscription) || void 0 === _a || _a.unsubscribe();
            }, WorkspaceSettingsStorageSystemsComponent.prototype.getRelatedObjects = function(artifact) {
                return (0, tslib_es6.__spreadArray)((0, tslib_es6.__spreadArray)([], artifact.reportsFromModel, !0), artifact.dashboardsFromModel, !0).map(function(m) {
                    return m.displayName;
                }).join(", ");
            }, WorkspaceSettingsStorageSystemsComponent.prototype.deleteArtifact = function(artifact) {
                var _this = this;
                this.workspaceSettingsService.deleteArtifact(artifact.modelId, artifact.packageId, artifact.storageType).then(function(deleted) {
                    deleted && (_this.storageUsageArtifacts$.pipe((0, take.q)(1)).subscribe(function(artifacts) {
                        var indexToRemove = artifacts.findIndex(function(a) {
                            return a.modelId === artifact.modelId;
                        });
                        indexToRemove >= 0 && _this.storageUsageArtifacts$.next((0, tslib_es6.__spreadArray)((0, 
                        tslib_es6.__spreadArray)([], artifacts.slice(0, indexToRemove), !0), artifacts.slice(indexToRemove + 1), !0));
                    }), _this.telemetryService.logStandardFeatureEvent({
                        originatingService: "DataCloudUX",
                        activityName: "Delete artifact",
                        featureName: "Fabric Workspace Settings"
                    }));
                });
            }, WorkspaceSettingsStorageSystemsComponent.prototype.dismissError = function() {
                this.errorDismissed$.next(!0);
            }, WorkspaceSettingsStorageSystemsComponent.prototype.getErrorMessageBarViewModel = function(message) {
                var _this = this;
                return {
                    bannerType: 1,
                    allowDismiss: !0,
                    iconName: "dismiss_circle_16_regular",
                    closeBarCallback: function() {
                        return _this.dismissError();
                    },
                    message
                };
            }, WorkspaceSettingsStorageSystemsComponent.prototype.onRowKeyDown = function(event) {
                var nextRowToFocus = -1, nextButtonToFocus = -1;
                switch (event.key) {
                  case "ArrowUp":
                    -1 == (nextRowToFocus = this.focussedRowIndex - 1) && (nextRowToFocus = this.storageUsageArtifacts$.value.length - 1);
                    break;

                  case "ArrowDown":
                    (nextRowToFocus = this.focussedRowIndex + 1) === this.storageUsageArtifacts$.value.length && (nextRowToFocus = 0);
                    break;

                  case "ArrowLeft":
                  case "ArrowRight":
                    if (!this.isWorkspaceAdmin) return;
                    nextButtonToFocus = this.focussedRowIndex, nextRowToFocus = -1;
                    break;

                  default:
                    return;
                }
                this.focusOnNextItem(nextRowToFocus, nextButtonToFocus);
            }, WorkspaceSettingsStorageSystemsComponent.prototype.onDeleteButtonKeyDown = function(event) {
                var nextRowToFocus = -1, nextButtonToFocus = -1;
                switch (event.key) {
                  case "ArrowUp":
                    -1 == (nextButtonToFocus = this.focussedDeleteButtonIndex - 1) && (nextButtonToFocus = this.storageUsageArtifacts$.value.length - 1);
                    break;

                  case "ArrowDown":
                    (nextButtonToFocus = this.focussedDeleteButtonIndex + 1) === this.storageUsageArtifacts$.value.length && (nextButtonToFocus = 0);
                    break;

                  case "ArrowLeft":
                  case "ArrowRight":
                    nextRowToFocus = this.focussedDeleteButtonIndex, nextButtonToFocus = -1;
                    break;

                  default:
                    return;
                }
                event.preventDefault(), event.stopImmediatePropagation(), this.focusOnNextItem(nextRowToFocus, nextButtonToFocus);
            }, WorkspaceSettingsStorageSystemsComponent.prototype.focusOnNextItem = function(nextRowToFocus, nextButtonToFocus) {
                var _a, _b, _c;
                if (this.focussedRowIndex = nextRowToFocus, this.focussedDeleteButtonIndex = nextButtonToFocus, 
                null === (_a = this.storageTable) || void 0 === _a ? void 0 : _a.nativeElement) if (-1 !== nextRowToFocus) {
                    var rowToFocus = null === (_b = this.storageTable.nativeElement.getElementsByClassName("storage-systems-artifact-row")) || void 0 === _b ? void 0 : _b.item(nextRowToFocus);
                    null == rowToFocus || rowToFocus.focus(), null == rowToFocus || rowToFocus.scrollIntoView();
                } else if (-1 !== nextButtonToFocus) {
                    var buttonToFocus = null === (_c = this.storageTable.nativeElement.getElementsByClassName("storage-row-delete-button")) || void 0 === _c ? void 0 : _c.item(nextButtonToFocus);
                    null == buttonToFocus || buttonToFocus.focus(), null == buttonToFocus || buttonToFocus.scrollIntoView();
                }
            }, WorkspaceSettingsStorageSystemsComponent.prototype.removeZoneClickFromTableCells = function() {
                var _a, _b, _c;
                if (null === (_a = this.storageTable) || void 0 === _a ? void 0 : _a.nativeElement) for (var _i = 0, tableCells_1 = Array.from(this.storageTable.nativeElement.getElementsByTagName("td")); _i < tableCells_1.length; _i++) null === (_c = (_b = tableCells_1[_i]).removeAllListeners) || void 0 === _c || _c.call(_b, "click");
            }, WorkspaceSettingsStorageSystemsComponent.prototype.updateStorageInfo = function() {
                this.storageUsageArtifacts$.next(this.workspaceSettingsService.getStorageArtifacts()), 
                this.totalStorageQuotaInMB$.next(this.workspaceSettingsService.getUserUsageQuotaInMB());
            }, WorkspaceSettingsStorageSystemsComponent.\u0275fac = function(t) {
                return new (t || WorkspaceSettingsStorageSystemsComponent)(core["\u0275\u0275directiveInject"](tri_workspace_settings.X), core["\u0275\u0275directiveInject"](datasetStore.h), core["\u0275\u0275directiveInject"](localization_service.z), core["\u0275\u0275directiveInject"](telemetry_service.t));
            }, WorkspaceSettingsStorageSystemsComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: WorkspaceSettingsStorageSystemsComponent,
                selectors: [ [ "tri-workspace-settings-storage-systems" ] ],
                viewQuery: function(rf, ctx) {
                    var _t;
                    1 & rf && core["\u0275\u0275viewQuery"](workspace_settings_storage_systems_component_c0, 5), 
                    2 & rf && core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx.storageTable = _t.first);
                },
                decls: 58,
                vars: 64,
                consts: [ [ 3, "viewModel", "hideMessageBar", 4, "ngIf" ], [ 1, "storage-usage-container", "tri-flex", "tri-flex-col" ], [ 1, "storage-usage-full", "tri-flex" ], [ 1, "total-storage-percentage" ], [ 1, "total-quota-legend", "tri-flex" ], [ 1, "storage-usage-legend", "storage-unused" ], [ 1, "storage-usage-bar", "tri-flex" ], [ 1, "storage-bar", "storage-used-by-me", 3, "ngStyle" ], [ 1, "storage-bar", "storage-used-by-others", 3, "ngStyle" ], [ 1, "storage-bar", "storage-unused", "tri-flex-grow" ], [ 1, "storage-usage-legends" ], [ 1, "tri-flex" ], [ 1, "storage-usage-legend", "storage-used-by-me" ], [ "class", "tri-flex", 4, "ngIf" ], [ 1, "scroller" ], [ 1, "storage-artifacts-table", 2, "width", "100%" ], [ "storageTable", "" ], [ 1, "storage-artifacts-table-header", 2, "width", "200px" ], [ 1, "storage-artifacts-table-header", 2, "width", "60px" ], [ 1, "storage-artifacts-table-header", 2, "width", "145px" ], [ 1, "storage-artifacts-table-header", 2, "width", "160px" ], [ "class", "storage-artifacts-table-header", "style", "width:40px", 4, "ngIf" ], [ 4, "ngFor", "ngForOf" ], [ 1, "fogofscroll" ], [ 1, "fog" ], [ 3, "viewModel", "hideMessageBar" ], [ 1, "storage-usage-legend", "storage-used-by-others" ], [ 1, "storage-artifacts-table-header", 2, "width", "40px" ], [ 1, "storage-systems-artifact-row", 3, "tabindex", "keydown" ], [ 1, "storage-system-cell", 2, "max-width", "200px", 3, "triTooltip" ], [ 1, "storage-system-cell", 2, "max-width", "60px", 3, "triTooltip" ], [ 1, "storage-system-cell", 2, "max-width", "145px", 3, "triTooltip" ], [ 1, "storage-system-cell", 2, "max-width", "160px", 3, "triTooltip" ], [ 4, "ngIf" ], [ 4, "ngIf", "ngIfElse" ], [ "deleteButton", "" ], [ 1, "delete-artifact-spinner" ], [ "tri-button", "", "appearance", "subtle", 1, "storage-row-delete-button", 3, "tabIndex", "click", "keydown" ], [ "name", "delete_20_regular" ] ],
                template: function(rf, ctx) {
                    if (1 & rf && (core["\u0275\u0275template"](0, WorkspaceSettingsStorageSystemsComponent_tri_message_bar_0_Template, 2, 3, "tri-message-bar", 0), 
                    core["\u0275\u0275pipe"](1, "async"), core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275elementStart"](3, "div", 1)(4, "div", 2)(5, "span"), 
                    core["\u0275\u0275text"](6), core["\u0275\u0275pipe"](7, "localizeFormat"), core["\u0275\u0275pipe"](8, "async"), 
                    core["\u0275\u0275pipe"](9, "async"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](10, "span", 3), 
                    core["\u0275\u0275text"](11), core["\u0275\u0275pipe"](12, "async"), core["\u0275\u0275pipe"](13, "async"), 
                    core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](14, "div", 4), 
                    core["\u0275\u0275element"](15, "div", 5), core["\u0275\u0275text"](16), core["\u0275\u0275pipe"](17, "localizeFormat"), 
                    core["\u0275\u0275pipe"](18, "async"), core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementStart"](19, "div", 6), 
                    core["\u0275\u0275element"](20, "div", 7), core["\u0275\u0275pipe"](21, "async"), 
                    core["\u0275\u0275pipe"](22, "async"), core["\u0275\u0275element"](23, "div", 8), 
                    core["\u0275\u0275pipe"](24, "async"), core["\u0275\u0275pipe"](25, "async"), core["\u0275\u0275element"](26, "div", 9), 
                    core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](27, "div", 10)(28, "div", 11), 
                    core["\u0275\u0275element"](29, "div", 12), core["\u0275\u0275text"](30), core["\u0275\u0275pipe"](31, "async"), 
                    core["\u0275\u0275pipe"](32, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](33, WorkspaceSettingsStorageSystemsComponent_div_33_Template, 5, 6, "div", 13), 
                    core["\u0275\u0275pipe"](34, "async"), core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementStart"](35, "div", 14)(36, "table", 15, 16)(38, "thead")(39, "tr")(40, "th", 17), 
                    core["\u0275\u0275text"](41), core["\u0275\u0275pipe"](42, "localize"), core["\u0275\u0275elementEnd"](), 
                    core["\u0275\u0275elementStart"](43, "th", 18), core["\u0275\u0275text"](44), core["\u0275\u0275pipe"](45, "localize"), 
                    core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](46, "th", 19), 
                    core["\u0275\u0275text"](47), core["\u0275\u0275pipe"](48, "localize"), core["\u0275\u0275elementEnd"](), 
                    core["\u0275\u0275elementStart"](49, "th", 20), core["\u0275\u0275text"](50), core["\u0275\u0275pipe"](51, "localize"), 
                    core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](52, WorkspaceSettingsStorageSystemsComponent_th_52_Template, 1, 0, "th", 21), 
                    core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementStart"](53, "tbody"), 
                    core["\u0275\u0275template"](54, WorkspaceSettingsStorageSystemsComponent_ng_container_54_Template, 11, 10, "ng-container", 22), 
                    core["\u0275\u0275pipe"](55, "async"), core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementStart"](56, "div", 23), 
                    core["\u0275\u0275element"](57, "div", 24), core["\u0275\u0275elementEnd"]()()), 
                    2 & rf) {
                        var tmp_7_0, tmp_2_0 = void 0, tmp_4_0 = void 0, tmp_5_0 = void 0;
                        core["\u0275\u0275property"]("ngIf", !1 === core["\u0275\u0275pipeBind1"](1, 15, ctx.errorDismissed$) && core["\u0275\u0275pipeBind1"](2, 17, ctx.deleteArtifactErrorMessage$)), 
                        core["\u0275\u0275advance"](6), core["\u0275\u0275textInterpolate1"]("", core["\u0275\u0275pipeBind3"](7, 19, "Trident_Workspace_Settings_Storage_Used_Of_Format", core["\u0275\u0275pipeBind1"](8, 23, ctx.storageSizeUsedByIdentityWithUnit$), core["\u0275\u0275pipeBind1"](9, 25, ctx.totalStorageQuoutaWithUnit$)), "\xa0 "), 
                        core["\u0275\u0275advance"](5), core["\u0275\u0275textInterpolate1"]("(", (100 * (null !== (tmp_2_0 = core["\u0275\u0275pipeBind1"](12, 27, ctx.totalStorageUsedInMB$)) && void 0 !== tmp_2_0 ? tmp_2_0 : 0) / (null !== (tmp_2_0 = core["\u0275\u0275pipeBind1"](13, 29, ctx.totalStorageQuotaInMB$)) && void 0 !== tmp_2_0 ? tmp_2_0 : 1)).toFixed(2), "%)"), 
                        core["\u0275\u0275advance"](5), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind2"](17, 31, "Trident_Workspace_Settings_Storage_Available_Format", core["\u0275\u0275pipeBind1"](18, 34, ctx.totalStorageAvailableWithUnit$)), " "), 
                        core["\u0275\u0275advance"](4), core["\u0275\u0275property"]("ngStyle", core["\u0275\u0275pureFunction1"](60, workspace_settings_storage_systems_component_c1, (100 * (null !== (tmp_4_0 = core["\u0275\u0275pipeBind1"](21, 36, ctx.storageUsedByIdentityInMB$)) && void 0 !== tmp_4_0 ? tmp_4_0 : 0) / (null !== (tmp_4_0 = core["\u0275\u0275pipeBind1"](22, 38, ctx.totalStorageQuotaInMB$)) && void 0 !== tmp_4_0 ? tmp_4_0 : 1)).toFixed(2) + "%")), 
                        core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngStyle", core["\u0275\u0275pureFunction1"](62, workspace_settings_storage_systems_component_c1, (100 * (null !== (tmp_5_0 = core["\u0275\u0275pipeBind1"](24, 40, ctx.storageUsedByOthersInMB$)) && void 0 !== tmp_5_0 ? tmp_5_0 : 0) / (null !== (tmp_5_0 = core["\u0275\u0275pipeBind1"](25, 42, ctx.totalStorageQuotaInMB$)) && void 0 !== tmp_5_0 ? tmp_5_0 : 1)).toFixed(2) + "%")), 
                        core["\u0275\u0275advance"](7), core["\u0275\u0275textInterpolate2"](" ", core["\u0275\u0275pipeBind1"](31, 44, ctx.storageSizeUsedByIdentityWithUnit$), " ", core["\u0275\u0275pipeBind1"](32, 46, "QuotaManagement_OwnedByMe"), " "), 
                        core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngIf", null !== (tmp_7_0 = core["\u0275\u0275pipeBind1"](34, 48, ctx.storageUsedByOthersInMB$)) && void 0 !== tmp_7_0 && tmp_7_0), 
                        core["\u0275\u0275advance"](8), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](42, 50, "Name")), 
                        core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"]("", core["\u0275\u0275pipeBind1"](45, 52, "QuotaManagement_ModelSize"), " "), 
                        core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](48, 54, "Type")), 
                        core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](51, 56, "Trident_Workspace_Settings_Storage_Related_Objects_Header"), ""), 
                        core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", ctx.isWorkspaceAdmin), 
                        core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngForOf", core["\u0275\u0275pipeBind1"](55, 58, ctx.storageUsageArtifacts$));
                    }
                },
                dependencies: [ common.NgForOf, common.NgIf, common.NgStyle, tri_svg_icon_component.M, tri_spinner_component.D, tri_message_bar_component.h, tri_tooltip_directive.Z, common.AsyncPipe, localize_pipe.Y, localize_pipe.A ],
                styles: [ "[_nghost-%COMP%]{font-family:var(--fontFamilyBase);font-size:14px;line-height:20px}[_nghost-%COMP%]   label[_ngcontent-%COMP%]{font-weight:600;margin-bottom:8px}[_nghost-%COMP%]   .storage-usage-container[_ngcontent-%COMP%]   .total-storage-percentage[_ngcontent-%COMP%]{font-weight:700}[_nghost-%COMP%]   .storage-usage-container[_ngcontent-%COMP%]   .total-quota-legend[_ngcontent-%COMP%]{margin-left:auto}[_nghost-%COMP%]   .storage-usage-container[_ngcontent-%COMP%]   .storage-used-by-me[_ngcontent-%COMP%]{background-color:#0078d4}[_nghost-%COMP%]   .storage-usage-container[_ngcontent-%COMP%]   .storage-used-by-others[_ngcontent-%COMP%]{background-color:#917edb}[_nghost-%COMP%]   .storage-usage-container[_ngcontent-%COMP%]   .storage-unused[_ngcontent-%COMP%]{background-color:#edebe9}[_nghost-%COMP%]   .storage-usage-container[_ngcontent-%COMP%]   .storage-usage-legend[_ngcontent-%COMP%]{height:10px;width:10px;margin-right:4px;display:flex;align-self:center}[_nghost-%COMP%]   .storage-usage-container[_ngcontent-%COMP%]   .storage-usage-bar[_ngcontent-%COMP%]{height:24px;margin:4px 0}[_nghost-%COMP%]   .storage-artifacts-table[_ngcontent-%COMP%]{width:100%;margin-top:24px}[_nghost-%COMP%]   .storage-artifacts-table[_ngcontent-%COMP%]   .storage-artifacts-table-header[_ngcontent-%COMP%]{height:40px;text-align:left}[_nghost-%COMP%]   .storage-artifacts-table[_ngcontent-%COMP%]   .delete-artifact-spinner[_ngcontent-%COMP%]{padding:0 12px}[_nghost-%COMP%]   .storage-artifacts-table[_ngcontent-%COMP%]   .storage-system-cell[_ngcontent-%COMP%]{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}[_nghost-%COMP%]   .scroller[_ngcontent-%COMP%]{width:100%;overflow-x:auto;padding-right:32px}[_nghost-%COMP%]   .fogofscroll[_ngcontent-%COMP%]{position:absolute;width:48px;height:100%;top:0;right:0;pointer-events:none;padding-bottom:24px;z-index:500}[_nghost-%COMP%]   .fogofscroll[_ngcontent-%COMP%]   .fog[_ngcontent-%COMP%]{height:100%;width:100%;background:linear-gradient(90deg,rgba(255,255,255,0) 0%,rgb(255,255,255) 79%,rgb(255,255,255) 100%)}" ],
                changeDetection: 0
            }), WorkspaceSettingsStorageSystemsComponent;
        }();
        function getIntuitiveSizeText(sizeInMB, localizationService) {
            return sizeInMB > 1024 ? localizationService.format("QuotaUsage_SizeInGB", Math.floor(sizeInMB / 1024)) : localizationService.format("QuotaUsage_SizeInMB", sizeInMB);
        }
        var view_models_a, view_models_b, empty = __webpack_require__(37272), distinctUntilChanged = __webpack_require__(77526), catchError = __webpack_require__(59822), switchMap = __webpack_require__(81905), first = __webpack_require__(88255), concatMap = __webpack_require__(24874), manage_access_shared_src = __webpack_require__(8697), workspaceContext = __webpack_require__(35030), git_src = __webpack_require__(18016), rx_component = __webpack_require__(12587), user_info_src = __webpack_require__(92363), GitStatusService = function() {
            function GitStatusService(gitStatusFacade, gitConnectionService, featureSwitchService) {
                this.gitStatusFacade = gitStatusFacade, this.gitConnectionService = gitConnectionService, 
                this.featureSwitchService = featureSwitchService, this.gitStatusMode = this.featureSwitchService.featureSwitches.tridentGitStatusAPI ? src.pPx.SingleCall : src.pPx.SeparateCalls;
            }
            return GitStatusService.prototype.getGitStatus = function(workspaceId) {
                return this.gitStatusFacade.getGitStatus(workspaceId);
            }, GitStatusService.prototype.loadGitStatus = function(workspaceId) {
                return this.gitStatusMode === src.pPx.SeparateCalls ? (this.loadIncomingChanges(workspaceId), 
                this.loadUncommittedChanges(workspaceId)) : this.gitStatusFacade.loadGitStatus(workspaceId), 
                this.getGitStatus(workspaceId);
            }, GitStatusService.prototype.isStatusLoaded = function(workspaceId) {
                switch (this.gitStatusMode) {
                  case src.pPx.SeparateCalls:
                    return (0, combineLatest.aj)([ this.getIncomingChangesLoadingState(workspaceId), this.getUncommittedChangesLoadingState(workspaceId) ]).pipe((0, 
                    map.U)(function(_a) {
                        return _a[0] === src.Gui.Loaded && _a[1] === src.Gui.Loaded;
                    }));

                  case src.pPx.SingleCall:
                    return this.getStatusLoadingState(workspaceId).pipe((0, map.U)(function(statusLoadingState) {
                        return statusLoadingState === src.Gui.Loaded;
                    }));
                }
            }, GitStatusService.prototype.isStatusError = function(workspaceId) {
                switch (this.gitStatusMode) {
                  case src.pPx.SeparateCalls:
                    return (0, combineLatest.aj)([ this.getIncomingChangesLoadingState(workspaceId), this.getUncommittedChangesLoadingState(workspaceId) ]).pipe((0, 
                    map.U)(function(_a) {
                        var uncommittedChangesLoadingState = _a[1];
                        return (0, git_src.pb)(_a[0]) || (0, git_src.pb)(uncommittedChangesLoadingState);
                    }));

                  case src.pPx.SingleCall:
                    return this.getStatusLoadingState(workspaceId).pipe((0, map.U)(function(statusLoadingState) {
                        return (0, git_src.pb)(statusLoadingState);
                    }));
                }
            }, GitStatusService.prototype.getStatusLoadingState = function(workspaceId) {
                return this.gitStatusFacade.getStatusLoadingState(workspaceId);
            }, GitStatusService.prototype.getAllChanges = function(workspaceId) {
                return this.gitStatusFacade.getAllChanges(workspaceId);
            }, GitStatusService.prototype.getIncomingChanges = function(workspaceId) {
                return this.gitStatusFacade.getIncomingChanges(workspaceId);
            }, GitStatusService.prototype.getUncommittedChanges = function(workspaceId) {
                return this.gitStatusFacade.getUncommittedChanges(workspaceId);
            }, GitStatusService.prototype.loadUncommittedChanges = function(workspaceId) {
                return this.gitStatusFacade.loadUncommittedChanges(workspaceId);
            }, GitStatusService.prototype.getUncommittedChangesCount = function(workspaceId) {
                return this.gitStatusFacade.getUncommittedChanges(workspaceId).pipe((0, map.U)(function(changes) {
                    return changes.length;
                }));
            }, GitStatusService.prototype.getUncommittedChangesLoadingState = function(workspaceId) {
                return this.gitStatusFacade.getUncommittedChangesLoadingState(workspaceId);
            }, GitStatusService.prototype.getUncommittedArtifactsSelectionState = function(workspaceId) {
                return this.gitStatusFacade.getUncommittedArtifactsSelectionState(workspaceId);
            }, GitStatusService.prototype.setChangesArtifactSelection = function(workspaceId, artifactId, logicalId, isChecked) {
                this.gitStatusFacade.setChangesArtifactSelection(workspaceId, artifactId, logicalId, isChecked);
            }, GitStatusService.prototype.clearChangesArtifactSelection = function(workspaceId) {
                this.gitStatusFacade.clearChangesArtifactSelection(workspaceId);
            }, GitStatusService.prototype.loadIncomingChanges = function(workspaceId) {
                return this.gitStatusFacade.loadIncomingChanges(workspaceId);
            }, GitStatusService.prototype.getIncomingChangesCount = function(workspaceId) {
                return this.gitStatusFacade.getIncomingChanges(workspaceId).pipe((0, map.U)(function(changes) {
                    return changes.length;
                }));
            }, GitStatusService.prototype.getIncomingChangesLoadingState = function(workspaceId) {
                return this.gitStatusFacade.getIncomingChangesLoadingState(workspaceId);
            }, GitStatusService.prototype.getIncomingChangesCommitId = function(workspaceId) {
                return this.gitStatusFacade.getIncomingChangesCommitId(workspaceId);
            }, GitStatusService.prototype.refreshUncommittedChanges = function(workspaceId) {
                return this.gitConnectionService.loadGitConnection(workspaceId).pipe((0, take.q)(1), (0, 
                filter.h)(function(gitConnection) {
                    var _a;
                    return void 0 !== (null === (_a = null == gitConnection ? void 0 : gitConnection.gitConnectionDetails) || void 0 === _a ? void 0 : _a.isInitialized);
                }), (0, map.U)(function() {
                    return (0, src.x6e)({
                        workspaceId
                    });
                }));
            }, GitStatusService.prototype.hasConflictChange = function(workspaceId) {
                return this.gitStatusFacade.getIncomingChanges(workspaceId).pipe((0, map.U)(function(changes) {
                    return changes.some(function(change) {
                        return 1 === change.syncStatus;
                    });
                }));
            }, GitStatusService.prototype.getGitStatusLoadingState = function(workspaceId) {
                var _this = this;
                return this.getGitStatus(workspaceId).pipe((0, map.U)(function(statusRecord) {
                    var _a;
                    switch (_this.gitStatusMode) {
                      case src.pPx.SeparateCalls:
                        return (null == statusRecord ? void 0 : statusRecord.incomingChangesCallState) === src.Gui.Loaded && (null == statusRecord ? void 0 : statusRecord.uncommittedChangesCallState) === src.Gui.Loaded ? src.Gui.Loaded : (null == statusRecord ? void 0 : statusRecord.incomingChangesCallState) === src.Gui.Loading || (null == statusRecord ? void 0 : statusRecord.uncommittedChangesCallState) === src.Gui.Loading ? src.Gui.Loading : src.Gui.Initial;

                      case src.pPx.SingleCall:
                        return null !== (_a = null == statusRecord ? void 0 : statusRecord.statusCallState) && void 0 !== _a ? _a : src.Gui.Initial;
                    }
                }));
            }, GitStatusService.prototype.getGitStatusError = function(workspaceId) {
                switch (this.gitStatusMode) {
                  case src.pPx.SeparateCalls:
                    return (0, combineLatest.aj)([ this.getIncomingChangesLoadingState(workspaceId), this.getUncommittedChangesLoadingState(workspaceId) ]).pipe((0, 
                    map.U)(function(_a) {
                        var incomingChangesLoadingState = _a[0], uncommittedChangesLoadingState = _a[1];
                        return (0, git_src.pb)(incomingChangesLoadingState) ? incomingChangesLoadingState : (0, 
                        git_src.pb)(uncommittedChangesLoadingState) ? uncommittedChangesLoadingState : void 0;
                    }));

                  case src.pPx.SingleCall:
                    return this.getStatusLoadingState(workspaceId).pipe((0, map.U)(function(statusLoadinState) {
                        return (0, git_src.pb)(statusLoadinState) ? statusLoadinState : void 0;
                    }));
                }
            }, GitStatusService.\u0275fac = function(t) {
                return new (t || GitStatusService)(core["\u0275\u0275inject"](src.F8e), core["\u0275\u0275inject"](connection_src.rC), core["\u0275\u0275inject"](feature_switch_service.V$));
            }, GitStatusService.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: GitStatusService,
                factory: GitStatusService.\u0275fac,
                providedIn: "root"
            }), GitStatusService;
        }(), Selection = ((view_models_a = {})[0] = {
            icon: "added",
            stringId: "Added"
        }, view_models_a[1] = {
            icon: "modified",
            stringId: "Modified"
        }, view_models_a[2] = {
            icon: "deleted",
            stringId: "Deleted"
        }, (view_models_b = {})[1] = {
            icon: "conflict",
            stringId: "Conflict"
        }, view_models_b[2] = {
            icon: "same_changes",
            stringId: "Trident_Git_Same_Changes_Tooltip"
        }, view_models_b[0] = {
            icon: "",
            stringId: ""
        }, function(Selection) {
            return Selection[Selection.None = 0] = "None", Selection[Selection.GitProviderType = 1] = "GitProviderType", 
            Selection[Selection.Organization = 2] = "Organization", Selection[Selection.Project = 3] = "Project", 
            Selection[Selection.Repository = 4] = "Repository", Selection[Selection.Branch = 5] = "Branch", 
            Selection[Selection.IteratorLast = 6] = "IteratorLast", Selection;
        }({}));
        function getSwitchBranchConfirmationDialogConfig(localizationService) {
            return {
                panelClass: "dialog-style",
                width: dialog_src.PW.Medium + "px",
                data: {
                    title: localizationService.get("Trident_Git_Switch_Branch_Confirmation_Title"),
                    buttons: [ {
                        name: localizationService.get("Trident_Git_Switch_Branch_Button_Text"),
                        label: localizationService.get("Trident_Git_Switch_Branch_Button_Text"),
                        buttonType: "primary"
                    }, {
                        name: localizationService.get("Cancel_ButtonText"),
                        label: localizationService.get("Cancel_ButtonText"),
                        buttonType: null
                    } ],
                    content: localizationService.get("Trident_Git_Switch_Branch_Confirmation_Content")
                }
            };
        }
        function getNoBranchesInRepoMessagBarViewModel(localizationService) {
            return {
                bannerType: 0,
                message: localizationService.get("Trident_Git_No_Branches_In_Repo_Message")
            };
        }
        var GitConnectionCreateFolderComponent = function() {
            function GitConnectionCreateFolderComponent(dialogRef, data) {
                this.dialogRef = dialogRef, this.data = data;
            }
            return GitConnectionCreateFolderComponent.prototype.ChangeToCreateFolderData = function(data) {
                return {
                    title: data.title,
                    buttons: data.buttons
                };
            }, GitConnectionCreateFolderComponent.prototype.clickButton = function(buttonName) {
                "Cancel" === buttonName ? this.dialogRef.close() : this.dialogRef.close(!0);
            }, GitConnectionCreateFolderComponent.\u0275fac = function(t) {
                return new (t || GitConnectionCreateFolderComponent)(core["\u0275\u0275directiveInject"](dialog.so), core["\u0275\u0275directiveInject"](dialog.WI));
            }, GitConnectionCreateFolderComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: GitConnectionCreateFolderComponent,
                selectors: [ [ "tri-git-connection-create-folder" ] ],
                decls: 3,
                vars: 6,
                consts: [ [ 3, "dialogData", "closeButtonLabel", "buttonClickEvent" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementStart"](0, "trident-dialog", 0), core["\u0275\u0275listener"]("buttonClickEvent", function($event) {
                        return ctx.clickButton($event);
                    }), core["\u0275\u0275pipe"](1, "localize"), core["\u0275\u0275text"](2), core["\u0275\u0275elementEnd"]()), 
                    2 & rf && (core["\u0275\u0275property"]("dialogData", ctx.ChangeToCreateFolderData(ctx.data))("closeButtonLabel", core["\u0275\u0275pipeBind1"](1, 4, "Cancel_ButtonText")), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate2"](" ", ctx.data.folderName, "", ctx.data.content, "\n"));
                },
                dependencies: [ dialog_component.v, localize_pipe.Y ],
                encapsulation: 2,
                changeDetection: 0
            }), GitConnectionCreateFolderComponent;
        }(), GitDisconnectDialogComponent = function() {
            function GitDisconnectDialogComponent(data, localizationService) {
                this.data = data, this.localizationService = localizationService, this.dialogData = {
                    title: this.localizationService.format("Trident_Git_Disconnect_Dialog_Title", [ this.data.workspaceName ]),
                    buttons: [ {
                        name: "disconnectButton",
                        label: this.localizationService.get("BYOResources_Disconnect_Button_Workspace"),
                        buttonType: "primary"
                    }, {
                        name: "cancelButton",
                        label: this.localizationService.get("Cancel_ButtonText"),
                        closeButton: !0
                    } ]
                };
            }
            return GitDisconnectDialogComponent.\u0275fac = function(t) {
                return new (t || GitDisconnectDialogComponent)(core["\u0275\u0275directiveInject"](dialog.WI), core["\u0275\u0275directiveInject"](localization_service.z));
            }, GitDisconnectDialogComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: GitDisconnectDialogComponent,
                selectors: [ [ "tri-git-disconnect-dialog" ] ],
                decls: 4,
                vars: 5,
                consts: [ [ 3, "dialogData", "passthroughButtonClickEvent" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementStart"](0, "trident-dialog", 0)(1, "p"), core["\u0275\u0275text"](2), 
                    core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementEnd"]()()), 2 & rf && (core["\u0275\u0275property"]("dialogData", ctx.dialogData)("passthroughButtonClickEvent", !0), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](3, 3, "Trident_Git_Disconnect_Dialog_Content"), " "));
                },
                dependencies: [ dialog_component.v, localize_pipe.Y ],
                styles: [ "[_nghost-%COMP%]     .mat-dialog-content.dialog-body{padding:20px 0}" ],
                changeDetection: 0
            }), GitDisconnectDialogComponent;
        }(), GitSwitchBranchDialogComponent = function() {
            function GitSwitchBranchDialogComponent(dialogRef, data) {
                this.dialogRef = dialogRef, this.data = data;
            }
            return GitSwitchBranchDialogComponent.prototype.PopulateDialog = function(data) {
                return {
                    title: data.title,
                    buttons: data.buttons
                };
            }, GitSwitchBranchDialogComponent.prototype.clickButton = function(buttonName) {
                "Cancel" === buttonName ? this.dialogRef.close() : this.dialogRef.close(!0);
            }, GitSwitchBranchDialogComponent.\u0275fac = function(t) {
                return new (t || GitSwitchBranchDialogComponent)(core["\u0275\u0275directiveInject"](dialog.so), core["\u0275\u0275directiveInject"](dialog.WI));
            }, GitSwitchBranchDialogComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: GitSwitchBranchDialogComponent,
                selectors: [ [ "tri-git-switch-branch-dialog" ] ],
                decls: 6,
                vars: 9,
                consts: [ [ 3, "dialogData", "closeButtonLabel", "buttonClickEvent" ], [ "target", "_blank", "href", "https://go.microsoft.com/fwlink/?linkid=2241304", "localize", "LearnMore", "localize-tooltip", "LearnMore" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementStart"](0, "trident-dialog", 0), core["\u0275\u0275listener"]("buttonClickEvent", function($event) {
                        return ctx.clickButton($event);
                    }), core["\u0275\u0275pipe"](1, "localize"), core["\u0275\u0275text"](2), core["\u0275\u0275elementStart"](3, "tri-link", 1), 
                    core["\u0275\u0275text"](4), core["\u0275\u0275pipe"](5, "localize"), core["\u0275\u0275elementEnd"]()()), 
                    2 & rf && (core["\u0275\u0275property"]("dialogData", ctx.PopulateDialog(ctx.data))("closeButtonLabel", core["\u0275\u0275pipeBind1"](1, 5, "Cancel_ButtonText")), 
                    core["\u0275\u0275attribute"]("data-testid", "switch-branch-dialog"), core["\u0275\u0275advance"](2), 
                    core["\u0275\u0275textInterpolate1"](" ", ctx.data.content, " "), core["\u0275\u0275advance"](2), 
                    core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](5, 7, "LearnMore"), " "));
                },
                dependencies: [ dialog_component.v, tri_link_component.v, localize_pipe.Y ],
                encapsulation: 2,
                changeDetection: 0
            }), GitSwitchBranchDialogComponent;
        }(), dialogService = __webpack_require__(86668), services = __webpack_require__(40773), git_providers = __webpack_require__(31572), git_log_out_dialog = __webpack_require__(81099), tri_card_component = __webpack_require__(4511);
        function GitConnectedProviderDetailsComponent_div_0_div_1_div_8_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div")(1, "div", 3), core["\u0275\u0275text"](2), 
            core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](4, "div", 6), 
            core["\u0275\u0275text"](5), core["\u0275\u0275elementEnd"]()()), 2 & rf) {
                var ctx_r3 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](3, 2, "Trident_Git_AAD")), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](ctx_r3.userAccount);
            }
        }
        function GitConnectedProviderDetailsComponent_div_0_div_1_div_9_div_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div")(1, "div", 3), core["\u0275\u0275text"](2), 
            core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](3, "div", 6), 
            core["\u0275\u0275text"](4), core["\u0275\u0275elementEnd"]()()), 2 & rf) {
                var selectedDatasource_r6 = ctx.ngIf;
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](null == selectedDatasource_r6 ? null : selectedDatasource_r6.datasourceName), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](null == selectedDatasource_r6 ? null : selectedDatasource_r6.url);
            }
        }
        function GitConnectedProviderDetailsComponent_div_0_div_1_div_9_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div"), core["\u0275\u0275template"](1, GitConnectedProviderDetailsComponent_div_0_div_1_div_9_div_1_Template, 5, 2, "div", 0), 
            core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r4 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](2, 1, ctx_r4.selectedDatasource$));
            }
        }
        function GitConnectedProviderDetailsComponent_div_0_div_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 2)(1, "div")(2, "div", 3), 
            core["\u0275\u0275text"](3), core["\u0275\u0275pipe"](4, "localize"), core["\u0275\u0275elementEnd"](), 
            core["\u0275\u0275text"](5), core["\u0275\u0275pipe"](6, "async"), core["\u0275\u0275elementEnd"](), 
            core["\u0275\u0275elementStart"](7, "div", 4), core["\u0275\u0275template"](8, GitConnectedProviderDetailsComponent_div_0_div_1_div_8_Template, 6, 4, "div", 5), 
            core["\u0275\u0275template"](9, GitConnectedProviderDetailsComponent_div_0_div_1_div_9_Template, 3, 3, "div", 5), 
            core["\u0275\u0275elementEnd"]()()), 2 & rf) {
                var gitProviderConfig_r2 = ctx.ngIf, ctx_r1 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](4, 5, "SettingsDataSource_SettingsLabel_Provider")), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](6, 7, ctx_r1.selectedGitProviderDisplayName$), " "), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngSwitch", gitProviderConfig_r2.connectedProviderDetailsType), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", ctx_r1.ConnectedProviderDetailsType.UserAccountDetails), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", ctx_r1.ConnectedProviderDetailsType.DatasourceDetails);
            }
        }
        function GitConnectedProviderDetailsComponent_div_0_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div"), core["\u0275\u0275template"](1, GitConnectedProviderDetailsComponent_div_0_div_1_Template, 10, 9, "div", 1), 
            core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](2, 1, ctx_r0.gitProviderConfig$));
            }
        }
        var GitConnectedProviderDetailsComponent = function(_super) {
            function GitConnectedProviderDetailsComponent(gitSessionStorageService, gitDatasourceService, userInfoTridentService) {
                var _this = _super.call(this) || this;
                return _this.gitSessionStorageService = gitSessionStorageService, _this.gitDatasourceService = gitDatasourceService, 
                _this.userInfoTridentService = userInfoTridentService, _this.ConnectedProviderDetailsType = git_providers.P0, 
                _this.gitProviderInfo = git_src.Rv, _this.workspaceId = "", _this.componentConfigMap = (0, 
                git_providers.EI)(), _this.selectedGitProvider$ = new BehaviorSubject.X(void 0), 
                _this.selectedDatasourceOID$ = new BehaviorSubject.X(void 0), _this.selectedDatasource$ = new BehaviorSubject.X(void 0), 
                _this.selectedGitProviderDisplayName$ = new BehaviorSubject.X(void 0), _this.gitProviderConfig$ = new BehaviorSubject.X(void 0), 
                _this.showDetails$ = (0, of.of)(!1), _this.userAccount = "", _this;
            }
            return (0, tslib_es6.__extends)(GitConnectedProviderDetailsComponent, _super), GitConnectedProviderDetailsComponent.prototype.ngOnInit = function() {
                var _this = this;
                this.userAccount = this.userInfoTridentService.name, this.showDetails$ = this.gitSessionStorageService.loadGitSessionStorage(this.workspaceId).pipe((0, 
                takeUntil.R)(this.onDestroy$), (0, tap.b)(function(sessionState) {
                    _this.updateSessionStorageInfo(sessionState);
                }), (0, switchMap.w)(function() {
                    return _this.gitDatasourceService.getDatasources({
                        gitProviderType: _this.selectedGitProvider$.value,
                        workspaceId: _this.workspaceId
                    });
                }), (0, map.U)(function(result) {
                    if (void 0 !== _this.selectedGitProvider$.value && void 0 !== _this.selectedDatasourceOID$.value) {
                        var datasources = (null == result ? void 0 : result.datasourcesRecord) ? result.datasourcesRecord[_this.selectedGitProvider$.value] : [];
                        _this.selectedDatasource$.next(null == datasources ? void 0 : datasources.find(function(d) {
                            return d.id === _this.selectedDatasourceOID$.value;
                        }));
                    }
                    return !0;
                }));
            }, GitConnectedProviderDetailsComponent.prototype.updateSessionStorageInfo = function(sessionState) {
                void 0 !== sessionState.selectedGitProviderType && (this.gitProviderConfig$.next(this.componentConfigMap[null == sessionState ? void 0 : sessionState.selectedGitProviderType]), 
                this.selectedGitProvider$.next(null == sessionState ? void 0 : sessionState.selectedGitProviderType), 
                this.selectedGitProviderDisplayName$.next(this.gitProviderInfo[null == sessionState ? void 0 : sessionState.selectedGitProviderType].name)), 
                this.selectedDatasourceOID$.next(null == sessionState ? void 0 : sessionState.selectedDatasourceOID);
            }, GitConnectedProviderDetailsComponent.\u0275fac = function(t) {
                return new (t || GitConnectedProviderDetailsComponent)(core["\u0275\u0275directiveInject"](src.gCl), core["\u0275\u0275directiveInject"](services.Ae), core["\u0275\u0275directiveInject"](user_info_src.NQ));
            }, GitConnectedProviderDetailsComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: GitConnectedProviderDetailsComponent,
                selectors: [ [ "tri-git-connected-provider-details" ] ],
                inputs: {
                    workspaceId: "workspaceId"
                },
                features: [ core["\u0275\u0275InheritDefinitionFeature"] ],
                decls: 2,
                vars: 3,
                consts: [ [ 4, "ngIf" ], [ "class", "connected-provider-info", 4, "ngIf" ], [ 1, "connected-provider-info" ], [ 1, "title" ], [ 3, "ngSwitch" ], [ 4, "ngSwitchCase" ], [ 1, "trimmedTextWithEllipsis" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275template"](0, GitConnectedProviderDetailsComponent_div_0_Template, 3, 3, "div", 0), 
                    core["\u0275\u0275pipe"](1, "async")), 2 & rf && core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](1, 1, ctx.showDetails$));
                },
                dependencies: [ common.NgIf, common.NgSwitch, common.NgSwitchCase, common.AsyncPipe, localize_pipe.Y ],
                styles: [ ".connected-provider-info[_ngcontent-%COMP%]{display:flex;flex-direction:column;padding-top:8px;gap:4px}.title[_ngcontent-%COMP%]{font-weight:var(--fontWeightSemibold);font-size:var(--fontSizeBase300);line-height:20px}" ]
            }), GitConnectedProviderDetailsComponent;
        }(rx_component.w), git_auth_dialog_component = __webpack_require__(81544), tri_empty_state_component = __webpack_require__(92710);
        function GitDatasourcesListComponent_div_1_div_1_div_1_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementStart"](0, "div", 10), core["\u0275\u0275text"](1), 
            core["\u0275\u0275pipe"](2, "localize"), core["\u0275\u0275elementEnd"]()), 2 & rf && (core["\u0275\u0275advance"](1), 
            core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](2, 1, "Trident_Git_Accounts")));
        }
        function GitDatasourcesListComponent_div_1_div_1_tri_radio_button_5_Template(rf, ctx) {
            if (1 & rf) {
                var _r9 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "tri-radio-button", 11), core["\u0275\u0275listener"]("change", function() {
                    var dataSource_r7 = core["\u0275\u0275restoreView"](_r9).$implicit, ctx_r8 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r8.selectedUserAccountChanged(dataSource_r7));
                }), core["\u0275\u0275elementStart"](1, "div", 12)(2, "span", 13), core["\u0275\u0275text"](3), 
                core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](4, "span", 14), 
                core["\u0275\u0275text"](5), core["\u0275\u0275elementEnd"]()()();
            }
            if (2 & rf) {
                var dataSource_r7 = ctx.$implicit, ctx_r6 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275property"]("value", dataSource_r7.id)("checked", ctx_r6.isDataSourceChecked(dataSource_r7)), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](dataSource_r7.datasourceName), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](dataSource_r7.url);
            }
        }
        function GitDatasourcesListComponent_div_1_div_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r11 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div"), core["\u0275\u0275template"](1, GitDatasourcesListComponent_div_1_div_1_div_1_Template, 3, 3, "div", 4), 
                core["\u0275\u0275elementStart"](2, "div")(3, "tri-radio-group", 5), core["\u0275\u0275pipe"](4, "async"), 
                core["\u0275\u0275template"](5, GitDatasourcesListComponent_div_1_div_1_tri_radio_button_5_Template, 6, 4, "tri-radio-button", 6), 
                core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementStart"](6, "div", 7)(7, "button", 8), 
                core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r11);
                    var ctx_r10 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r10.authorizeNewAccount());
                }), core["\u0275\u0275pipe"](8, "async"), core["\u0275\u0275element"](9, "tri-svg-icon", 9), 
                core["\u0275\u0275text"](10), core["\u0275\u0275pipe"](11, "localize"), core["\u0275\u0275elementEnd"]()()();
            }
            if (2 & rf) {
                var datasourceList_r3 = core["\u0275\u0275nextContext"]().ngIf, ctx_r4 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !ctx_r4.isPartOfCollapsible), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("disabled", !!core["\u0275\u0275pipeBind1"](4, 8, ctx_r4.doesWorkspaceNeedCapacity$)), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngForOf", datasourceList_r3), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("disabled", !!core["\u0275\u0275pipeBind1"](8, 10, ctx_r4.doesWorkspaceNeedCapacity$)), 
                core["\u0275\u0275attribute"]("data-testid", "authorize-new-user-button"), core["\u0275\u0275advance"](2), 
                core["\u0275\u0275property"]("name", "add_16_regular")("sprite", "fluentui-icons"), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](11, 12, "Trident_Git_Authorize_New_User"), " ");
            }
        }
        function GitDatasourcesListComponent_div_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div"), core["\u0275\u0275template"](1, GitDatasourcesListComponent_div_1_div_1_Template, 12, 14, "div", 3), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var datasourceList_r3 = ctx.ngIf;
                core["\u0275\u0275nextContext"]();
                var _r1 = core["\u0275\u0275reference"](4);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", 0 !== datasourceList_r3.length)("ngIfElse", _r1);
            }
        }
        function GitDatasourcesListComponent_ng_template_3_Template(rf, ctx) {
            if (1 & rf) {
                var _r14 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "tri-empty-state", 15), core["\u0275\u0275listener"]("buttonClicked", function() {
                    core["\u0275\u0275restoreView"](_r14);
                    var ctx_r13 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r13.authorizeNewAccount());
                }), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r2 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("viewModel", ctx_r2.getEmptyStateModel());
            }
        }
        var GitDatasourcesListComponent = function(_super) {
            function GitDatasourcesListComponent(gitDatasourceService, gitSessionStorageService, localizationService, gitConnectionService, dialogService) {
                var _this = _super.call(this) || this;
                return _this.gitDatasourceService = gitDatasourceService, _this.gitSessionStorageService = gitSessionStorageService, 
                _this.localizationService = localizationService, _this.gitConnectionService = gitConnectionService, 
                _this.dialogService = dialogService, _this.workspaceId = "", _this.isPartOfCollapsible = !1, 
                _this.componentConfigMap = (0, git_providers.EI)(), _this.selectedDatasourceOID$ = new BehaviorSubject.X(void 0), 
                _this.doesWorkspaceNeedCapacity$ = new BehaviorSubject.X(!0), _this.selectedDatasource$ = new BehaviorSubject.X(void 0), 
                _this.datasourceList$ = new BehaviorSubject.X(void 0), _this;
            }
            return (0, tslib_es6.__extends)(GitDatasourcesListComponent, _super), GitDatasourcesListComponent.prototype.ngOnInit = function() {
                var _this = this;
                this.gitSessionStorageService.loadGitSessionStorage(this.workspaceId).pipe((0, takeUntil.R)(this.onDestroy$), (0, 
                tap.b)(function(state) {
                    _this.selectedDatasourceOID$.next(state.selectedTempDatasourceOID), _this.doesWorkspaceNeedCapacity$.next(!state.isWorkspaceOnCapaity);
                }), (0, map.U)(function(state) {
                    return state.selectedGitProviderType;
                }), (0, switchMap.w)(function(selectedGitProvider) {
                    return _this.selectedGitProvider = selectedGitProvider, (0, combineLatest.aj)([ _this.gitConnectionService.getGitConnection(_this.workspaceId), _this.gitDatasourceService.getDatasources({
                        workspaceId: _this.workspaceId,
                        gitProviderType: selectedGitProvider
                    }) ]);
                }), (0, filter.h)(function(_a) {
                    var datasources = _a[1];
                    return void 0 !== datasources && datasources.callState === src.j3q.Completed;
                }), (0, tap.b)(function(_a) {
                    var _b, _c, _d, _e, _f, _g, connection = _a[0], datasources = _a[1], datasourcesList = datasources.datasourcesRecord ? datasources.datasourcesRecord[_this.selectedGitProvider] : void 0, filteredDatasourcesList = datasourcesList;
                    if (null == connection ? void 0 : connection.gitConnectionDetails) {
                        var filteringValue = null === (_c = null === (_b = _this.componentConfigMap[_this.selectedGitProvider]) || void 0 === _b ? void 0 : _b.getFilteringValue) || void 0 === _c ? void 0 : _c.call(_b, connection.gitConnectionDetails);
                        void 0 !== filteringValue && (filteredDatasourcesList = null !== (_f = null === (_e = (_d = _this.componentConfigMap[_this.selectedGitProvider]).filterDatasources) || void 0 === _e ? void 0 : _e.call(_d, datasourcesList, filteringValue)) && void 0 !== _f ? _f : datasourcesList);
                    }
                    var currentDatasourceOID = null === (_g = null == connection ? void 0 : connection.gitConnectionDetails) || void 0 === _g ? void 0 : _g.datasourceOID;
                    filteredDatasourcesList && currentDatasourceOID && (filteredDatasourcesList = null == filteredDatasourcesList ? void 0 : filteredDatasourcesList.filter(function(datasource) {
                        return datasource.id !== currentDatasourceOID;
                    })), _this.datasourceList$.next(filteredDatasourcesList), _this.updateSelectedDatasource(filteredDatasourcesList);
                })).subscribe();
            }, GitDatasourcesListComponent.prototype.isDataSourceChecked = function(dataSource) {
                var _a;
                return (null === (_a = this.selectedDatasource$.value) || void 0 === _a ? void 0 : _a.id) === dataSource.id;
            }, GitDatasourcesListComponent.prototype.selectedUserAccountChanged = function(datasource) {
                this.selectedDatasource$.next(datasource), void 0 !== this.selectedDatasource$.value && this.gitSessionStorageService.selectTempDatasource(this.workspaceId, this.selectedDatasource$.value.id);
            }, GitDatasourcesListComponent.prototype.authorizeNewAccount = function() {
                var workspaceId, gitAuthDialogModel = (workspaceId = this.workspaceId, {
                    componentRef: git_auth_dialog_component.b,
                    config: {
                        panelClass: "dialog-style",
                        width: "".concat(dialog_src.PW.Medium, "px"),
                        data: workspaceId
                    }
                });
                this.dialogService.open(gitAuthDialogModel.componentRef, gitAuthDialogModel.config).afterClosed().pipe((0, 
                take.q)(1)).subscribe();
            }, GitDatasourcesListComponent.prototype.dataSourcesListLength = function() {
                var _a, _b;
                return null !== (_b = null === (_a = this.datasourceList$.value) || void 0 === _a ? void 0 : _a.length) && void 0 !== _b ? _b : 0;
            }, GitDatasourcesListComponent.prototype.getEmptyStateModel = function() {
                return isWorkspaceOnCapacity = this.doesWorkspaceNeedCapacity$, {
                    emptyStateType: 9,
                    iconType: 3,
                    title: (localizationService = this.localizationService).get("Trident_Git_Empty_State_No_Authorized_Users_Title"),
                    message: localizationService.get("Trident_Git_Empty_State_No_Authorized_Users_Message"),
                    buttonText: localizationService.get("Trident_Git_Authorize_New_User"),
                    isButtonDiabled: isWorkspaceOnCapacity
                };
                var localizationService, isWorkspaceOnCapacity;
            }, GitDatasourcesListComponent.prototype.updateSelectedDatasource = function(datasources) {
                var _a, _b, _this = this;
                if (datasources) {
                    if (this.selectedDatasource$.next(null == datasources ? void 0 : datasources.find(function(d) {
                        return d.id === _this.selectedDatasourceOID$.value;
                    })), 1 === datasources.length && this.selectedDatasourceOID$.value !== (null === (_a = datasources[0]) || void 0 === _a ? void 0 : _a.id)) {
                        var datasourceOID = null === (_b = datasources[0]) || void 0 === _b ? void 0 : _b.id;
                        this.gitSessionStorageService.selectTempDatasource(this.workspaceId, datasourceOID), 
                        this.selectedDatasourceOID$.next(datasourceOID), this.selectedDatasource$.next(datasources[0]);
                    }
                } else this.selectedDatasource$.next(void 0);
            }, GitDatasourcesListComponent.\u0275fac = function(t) {
                return new (t || GitDatasourcesListComponent)(core["\u0275\u0275directiveInject"](services.Ae), core["\u0275\u0275directiveInject"](src.gCl), core["\u0275\u0275directiveInject"](localization_service.z), core["\u0275\u0275directiveInject"](services.rC), core["\u0275\u0275directiveInject"](dialogService.j));
            }, GitDatasourcesListComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: GitDatasourcesListComponent,
                selectors: [ [ "tri-git-datasources-list" ] ],
                inputs: {
                    workspaceId: "workspaceId",
                    isPartOfCollapsible: "isPartOfCollapsible"
                },
                features: [ core["\u0275\u0275InheritDefinitionFeature"] ],
                decls: 5,
                vars: 3,
                consts: [ [ 1, "data-sources-list" ], [ 4, "ngIf" ], [ "emptyState", "" ], [ 4, "ngIf", "ngIfElse" ], [ "class", "accounts", 4, "ngIf" ], [ 3, "disabled" ], [ "data-testid", "dataSource.datasourceName", "tabindex", "0", 3, "value", "checked", "change", 4, "ngFor", "ngForOf" ], [ 1, "authorize-new-user" ], [ "tri-button", "", "appearance", "subtle", 3, "disabled", "click" ], [ 3, "name", "sprite" ], [ 1, "accounts" ], [ "data-testid", "dataSource.datasourceName", "tabindex", "0", 3, "value", "checked", "change" ], [ 1, "data-source-info" ], [ 1, "data-source-display-name" ], [ 1, "data-source-url" ], [ "data-testid", "datasources-list-empty-state", 1, "empty-state-container", 3, "viewModel", "buttonClicked" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementStart"](0, "div", 0), core["\u0275\u0275template"](1, GitDatasourcesListComponent_div_1_Template, 2, 2, "div", 1), 
                    core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275template"](3, GitDatasourcesListComponent_ng_template_3_Template, 1, 1, "ng-template", null, 2, core["\u0275\u0275templateRefExtractor"]), 
                    core["\u0275\u0275elementEnd"]()), 2 & rf && (core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](2, 1, ctx.datasourceList$)));
                },
                dependencies: [ common.NgForOf, common.NgIf, tri_svg_icon_component.M, tri_empty_state_component.v, tri_radio_button_component.Y, tri_radio_group_component.Z, common.AsyncPipe, localize_pipe.Y ],
                styles: [ ".data-sources-list[_ngcontent-%COMP%]{padding-top:16px;max-width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.accounts[_ngcontent-%COMP%]{font-weight:var(--fontWeightSemibold);font-size:var(--fontSizeBase300)}.data-source-info[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:2px}.title[_ngcontent-%COMP%], .git-provider[_ngcontent-%COMP%], .data-source-display-name[_ngcontent-%COMP%]{font-weight:var(--fontWeightSemibold);font-size:var(--fontSizeBase300);line-height:20px}.data-source-url[_ngcontent-%COMP%]{font-weight:var(--fontWeightMedium);font-size:var(--fontSizeBase200);line-height:16px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.authorize-new-user[_ngcontent-%COMP%]{border-top:1px solid var(--globalColorGrey82);padding-top:12px;margin-top:16px}" ],
                changeDetection: 0
            }), GitDatasourcesListComponent;
        }(rx_component.w), git_provider_accounts_component_c0 = function(a0, a1) {
            return {
                "disabled-card": a0,
                "card-selected": a1
            };
        };
        function GitProviderAccountsComponent_div_0_div_5_Template(rf, ctx) {
            if (1 & rf) {
                var _r6 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div")(1, "tri-card", 7), core["\u0275\u0275listener"]("click", function() {
                    var option_r4 = core["\u0275\u0275restoreView"](_r6).$implicit, ctx_r5 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r5.onGitProviderTypeChange(option_r4.value.type));
                }), core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275element"](3, "tri-svg-icon", 8), 
                core["\u0275\u0275elementStart"](4, "tri-card-header")(5, "div", 9), core["\u0275\u0275text"](6), 
                core["\u0275\u0275elementEnd"]()()()();
            }
            if (2 & rf) {
                var option_r4 = ctx.$implicit, ctx_r2 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngClass", core["\u0275\u0275pureFunction2"](8, git_provider_accounts_component_c0, !option_r4.value.isEnabled, core["\u0275\u0275pipeBind1"](2, 6, ctx_r2.selectedGitProvider$) === option_r4.key)), 
                core["\u0275\u0275attribute"]("title", ctx_r2.getCardTooltip(option_r4.value))("data-testid", option_r4.value.name), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("name", option_r4.value.iconName)("sprite", "git-icons"), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"](" ", option_r4.value.name, " ");
            }
        }
        function GitProviderAccountsComponent_div_0_div_7_Template(rf, ctx) {
            if (1 & rf) {
                var _r9 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div", 10)(1, "button", 11), core["\u0275\u0275listener"]("click", function() {
                    var option_r7 = core["\u0275\u0275restoreView"](_r9).$implicit, ctx_r8 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r8.onGitProviderTypeChange(option_r7.value.type));
                }), core["\u0275\u0275elementEnd"]()();
            }
            2 & rf && (core["\u0275\u0275advance"](1), core["\u0275\u0275attribute"]("data-testid", "select-git-provider-sr-only"));
        }
        function GitProviderAccountsComponent_div_0_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 2)(1, "div", 3), core["\u0275\u0275text"](2), 
            core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](4, "div", 4), 
            core["\u0275\u0275template"](5, GitProviderAccountsComponent_div_0_div_5_Template, 7, 11, "div", 5), 
            core["\u0275\u0275pipe"](6, "keyvalue"), core["\u0275\u0275template"](7, GitProviderAccountsComponent_div_0_div_7_Template, 2, 1, "div", 6), 
            core["\u0275\u0275pipe"](8, "keyvalue"), core["\u0275\u0275elementEnd"]()()), 2 & rf) {
                var ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](3, 3, "Trident_Git_Provider")), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngForOf", core["\u0275\u0275pipeBind1"](6, 5, ctx_r0.gitProviderInfo)), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngForOf", core["\u0275\u0275pipeBind1"](8, 7, ctx_r0.gitProviderInfo));
            }
        }
        function GitProviderAccountsComponent_div_3_div_1_div_2_Template(rf, ctx) {
            if (1 & rf) {
                var _r17 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div", 17)(1, "tri-collapsed-container", 18), 
                core["\u0275\u0275listener"]("collapseContainer", function($event) {
                    core["\u0275\u0275restoreView"](_r17);
                    var ctx_r16 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r16.onShowConnentionsChange($event));
                }), core["\u0275\u0275pipe"](2, "localize"), core["\u0275\u0275element"](3, "tri-git-datasources-list", 19), 
                core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var ctx_r14 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("headerText", core["\u0275\u0275pipeBind1"](2, 6, "Trident_Git_ShowMoreUsers"))("iconName", "connected")("collapsed", !0), 
                core["\u0275\u0275attribute"]("data-testid", "datasource-list-switch-account-provider-accounts"), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("workspaceId", ctx_r14.workspaceId)("isPartOfCollapsible", !0);
            }
        }
        function GitProviderAccountsComponent_div_3_div_1_div_4_button_2_Template(rf, ctx) {
            if (1 & rf) {
                var _r21 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "button", 24), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r21);
                    var ctx_r20 = core["\u0275\u0275nextContext"](4);
                    return core["\u0275\u0275resetView"](ctx_r20.SwitchAccount());
                }), core["\u0275\u0275pipe"](1, "async"), core["\u0275\u0275pipe"](2, "async"), 
                core["\u0275\u0275pipe"](3, "async"), core["\u0275\u0275text"](4), core["\u0275\u0275pipe"](5, "localize"), 
                core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r18 = core["\u0275\u0275nextContext"](4);
                core["\u0275\u0275property"]("disabled", !0 === core["\u0275\u0275pipeBind1"](1, 3, ctx_r18.isShowMoreUsersCollapsed$) || !1 === core["\u0275\u0275pipeBind1"](2, 5, ctx_r18.isDatasourceSelected()) || !1 === core["\u0275\u0275pipeBind1"](3, 7, ctx_r18.isWorkspaceOnCapacity$)), 
                core["\u0275\u0275attribute"]("data-testid", "switch-account-Github-button"), core["\u0275\u0275advance"](4), 
                core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](5, 9, "Storytelling_Switch"), " ");
            }
        }
        function GitProviderAccountsComponent_div_3_div_1_div_4_button_4_Template(rf, ctx) {
            if (1 & rf) {
                var _r23 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "button", 25), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r23);
                    var ctx_r22 = core["\u0275\u0275nextContext"](4);
                    return core["\u0275\u0275resetView"](ctx_r22.LogOutFromDatasource());
                }), core["\u0275\u0275element"](1, "tri-svg-icon", 26), core["\u0275\u0275text"](2), 
                core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementEnd"]();
            }
            2 & rf && (core["\u0275\u0275attribute"]("data-testid", "logout-Github-button"), 
            core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("name", "log_out_16_regular")("sprite", "git-icons"), 
            core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](3, 4, "Trident_Git_Log_Out"), " "));
        }
        function GitProviderAccountsComponent_div_3_div_1_div_4_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 20)(1, "div"), core["\u0275\u0275template"](2, GitProviderAccountsComponent_div_3_div_1_div_4_button_2_Template, 6, 11, "button", 21), 
            core["\u0275\u0275pipe"](3, "async"), core["\u0275\u0275template"](4, GitProviderAccountsComponent_div_3_div_1_div_4_button_4_Template, 4, 6, "button", 22), 
            core["\u0275\u0275pipe"](5, "async"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](6, "tri-link", 23), 
            core["\u0275\u0275text"](7), core["\u0275\u0275pipe"](8, "localize"), core["\u0275\u0275elementEnd"]()()), 
            2 & rf) {
                var ctx_r15 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](3, 6, ctx_r15.showSwitchAccountButton())), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", !0 === core["\u0275\u0275pipeBind1"](5, 8, ctx_r15.isConfiguredCredentials$)), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275propertyInterpolate1"]("href", "groups/", ctx_r15.workspaceId, "/gateways"), 
                core["\u0275\u0275property"]("block", !0)("external", !0), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](8, 10, "Trident_Git_Manage_All_Users"), " ");
            }
        }
        function GitProviderAccountsComponent_div_3_div_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div"), core["\u0275\u0275element"](1, "tri-git-connected-provider-details", 14), 
            core["\u0275\u0275template"](2, GitProviderAccountsComponent_div_3_div_1_div_2_Template, 4, 8, "div", 15), 
            core["\u0275\u0275pipe"](3, "async"), core["\u0275\u0275template"](4, GitProviderAccountsComponent_div_3_div_1_div_4_Template, 9, 12, "div", 16), 
            core["\u0275\u0275pipe"](5, "async"), core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r11 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("workspaceId", ctx_r11.workspaceId), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](3, 3, ctx_r11.showSwitchAccountButton())), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](5, 5, ctx_r11.showLogOutButton()));
            }
        }
        function GitProviderAccountsComponent_div_3_ng_template_3_div_1_span_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r29 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "span"), core["\u0275\u0275element"](1, "tri-git-datasources-list", 14), 
                core["\u0275\u0275elementStart"](2, "div", 20)(3, "button", 30), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r29);
                    var ctx_r28 = core["\u0275\u0275nextContext"](4);
                    return core["\u0275\u0275resetView"](ctx_r28.connectWorkspaceToDatasource());
                }), core["\u0275\u0275pipe"](4, "async"), core["\u0275\u0275pipe"](5, "async"), 
                core["\u0275\u0275text"](6), core["\u0275\u0275pipe"](7, "localize"), core["\u0275\u0275elementEnd"](), 
                core["\u0275\u0275elementStart"](8, "tri-link", 23), core["\u0275\u0275text"](9), 
                core["\u0275\u0275pipe"](10, "localize"), core["\u0275\u0275elementEnd"]()()();
            }
            if (2 & rf) {
                var ctx_r26 = core["\u0275\u0275nextContext"](4);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("workspaceId", ctx_r26.workspaceId), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("disabled", !1 === core["\u0275\u0275pipeBind1"](4, 8, ctx_r26.isDatasourceSelected()) || !1 === core["\u0275\u0275pipeBind1"](5, 10, ctx_r26.isWorkspaceOnCapacity$)), 
                core["\u0275\u0275attribute"]("data-testid", "connect-Github-button"), core["\u0275\u0275advance"](3), 
                core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](7, 12, "UploadExcel_Connect"), " "), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275propertyInterpolate1"]("href", "groups/", ctx_r26.workspaceId, "/gateways"), 
                core["\u0275\u0275property"]("block", !0)("external", !0), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](10, 14, "Trident_Git_Manage_All_Users"), " ");
            }
        }
        function GitProviderAccountsComponent_div_3_ng_template_3_div_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 29), core["\u0275\u0275template"](1, GitProviderAccountsComponent_div_3_ng_template_3_div_1_span_1_Template, 11, 16, "span", 1), 
            core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r24 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](2, 1, ctx_r24.datasourceList$));
            }
        }
        function GitProviderAccountsComponent_div_3_ng_template_3_div_2_Template(rf, ctx) {
            if (1 & rf) {
                var _r31 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div", 29)(1, "div", 31), core["\u0275\u0275text"](2), 
                core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](4, "tri-radio-group")(5, "tri-radio-button", 32), 
                core["\u0275\u0275pipe"](6, "async"), core["\u0275\u0275elementStart"](7, "div", 33)(8, "span", 34), 
                core["\u0275\u0275text"](9), core["\u0275\u0275pipe"](10, "localize"), core["\u0275\u0275elementEnd"](), 
                core["\u0275\u0275elementStart"](11, "span", 35), core["\u0275\u0275text"](12), 
                core["\u0275\u0275elementEnd"]()()()(), core["\u0275\u0275elementStart"](13, "div", 36)(14, "button", 30), 
                core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r31);
                    var ctx_r30 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r30.connectWorkspaceToUserAccount());
                }), core["\u0275\u0275pipe"](15, "async"), core["\u0275\u0275text"](16), core["\u0275\u0275pipe"](17, "localize"), 
                core["\u0275\u0275elementEnd"]()()();
            }
            if (2 & rf) {
                var ctx_r25 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](3, 8, "Trident_Git_Accounts")), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("checked", !0)("disabled", !1 === core["\u0275\u0275pipeBind1"](6, 10, ctx_r25.isWorkspaceOnCapacity$)), 
                core["\u0275\u0275advance"](4), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](10, 12, "Trident_Git_AAD")), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](ctx_r25.userAccount), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("disabled", !ctx_r25.isUserAccountSelected() || !1 === core["\u0275\u0275pipeBind1"](15, 14, ctx_r25.isWorkspaceOnCapacity$)), 
                core["\u0275\u0275attribute"]("data-testid", "connect-ADO-button"), core["\u0275\u0275advance"](2), 
                core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](17, 16, "UploadExcel_Connect"), " ");
            }
        }
        function GitProviderAccountsComponent_div_3_ng_template_3_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 27), core["\u0275\u0275template"](1, GitProviderAccountsComponent_div_3_ng_template_3_div_1_Template, 3, 3, "div", 28), 
            core["\u0275\u0275template"](2, GitProviderAccountsComponent_div_3_ng_template_3_div_2_Template, 18, 18, "div", 28), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var gitProviderConfig_r10 = core["\u0275\u0275nextContext"]().ngIf, ctx_r13 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("ngSwitch", null == gitProviderConfig_r10 ? null : gitProviderConfig_r10.displayMode), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", ctx_r13.AccountsListDisplayMode.ShowGitHubDataSourcesList), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", ctx_r13.AccountsListDisplayMode.ShowADOAccountsList);
            }
        }
        function GitProviderAccountsComponent_div_3_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div"), core["\u0275\u0275template"](1, GitProviderAccountsComponent_div_3_div_1_Template, 6, 7, "div", 12), 
            core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275template"](3, GitProviderAccountsComponent_div_3_ng_template_3_Template, 3, 3, "ng-template", null, 13, core["\u0275\u0275templateRefExtractor"]), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var _r12 = core["\u0275\u0275reference"](4), ctx_r1 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !0 === core["\u0275\u0275pipeBind1"](2, 2, ctx_r1.isConfiguredCredentials$))("ngIfElse", _r12);
            }
        }
        var GitProviderAccountsComponent = function(_super) {
            function GitProviderAccountsComponent(gitNotificationService, gitErrorService, gitDatasourceService, gitSessionStorageService, gitConnectionService, gitConfigureCredentialsService, tridentDialogService, localizationService, dialogService, userInfoTridentService, featureSwitchService) {
                var _this = _super.call(this) || this;
                return _this.gitNotificationService = gitNotificationService, _this.gitErrorService = gitErrorService, 
                _this.gitDatasourceService = gitDatasourceService, _this.gitSessionStorageService = gitSessionStorageService, 
                _this.gitConnectionService = gitConnectionService, _this.gitConfigureCredentialsService = gitConfigureCredentialsService, 
                _this.tridentDialogService = tridentDialogService, _this.localizationService = localizationService, 
                _this.dialogService = dialogService, _this.userInfoTridentService = userInfoTridentService, 
                _this.featureSwitchService = featureSwitchService, _this.GitProviderType = git_src.IS, 
                _this.AccountsListDisplayMode = git_providers.NJ, _this.gitProviderInfo = new Map, 
                _this.workspaceId = "", _this.componentConfigMap = (0, git_providers.EI)(), _this.isConnected$ = new BehaviorSubject.X(void 0), 
                _this.selectedGitProvider$ = new BehaviorSubject.X(void 0), _this.gitProviderConfig$ = new BehaviorSubject.X(void 0), 
                _this.isConfiguredCredentials$ = new BehaviorSubject.X(!1), _this.isShowMoreUsersCollapsed$ = new BehaviorSubject.X(!0), 
                _this.isWorkspaceOnCapacity$ = new BehaviorSubject.X(!1), _this.datasourceList$ = new BehaviorSubject.X(void 0), 
                _this.selectedDatasource$ = new BehaviorSubject.X(void 0), _this.configureCredentialsInProgress$ = new BehaviorSubject.X(!1), 
                _this.userAccount = "", _this;
            }
            return (0, tslib_es6.__extends)(GitProviderAccountsComponent, _super), GitProviderAccountsComponent.prototype.ngOnInit = function() {
                var _this = this;
                this.userAccount = this.userInfoTridentService.name, this.selectedGitProvider$.pipe((0, 
                takeUntil.R)(this.onDestroy$), (0, filter.h)(function(selectedGitProvider) {
                    return void 0 !== selectedGitProvider;
                }), (0, filter.h)(function(selectedGitProvider) {
                    return !0 === _this.componentConfigMap[selectedGitProvider].doesGitProviderNeedsDatasource;
                }), (0, take.q)(1)).subscribe(function(selectedGitProvider) {
                    return _this.updateDiscoveredDatasources(selectedGitProvider);
                }), this.gitSessionStorageService.loadGitSessionStorage(this.workspaceId).pipe((0, 
                takeUntil.R)(this.onDestroy$), (0, tap.b)(function(sessionState) {
                    _this.updateSelectedGitProviderInfo(sessionState), _this.updateSelectedDatasource(sessionState), 
                    _this.isConfiguredCredentials$.next(void 0 !== _this.selectedGitProvider$.value && _this.componentConfigMap[_this.selectedGitProvider$.value].isWorkspaceConnectedToGitProvider(sessionState)), 
                    _this.isWorkspaceOnCapacity$.next(!!sessionState.isWorkspaceOnCapaity);
                })).subscribe(), this.gitConnectionService.getGitConnection(this.workspaceId).pipe((0, 
                takeUntil.R)(this.onDestroy$), (0, distinctUntilChanged.x)()).subscribe(function(connection) {
                    connection && connection.gitConnectionDetails ? (_this.isConnected$.next(!0), void 0 !== _this.selectedGitProvider$.value && _this.updateDiscoveredDatasources(_this.selectedGitProvider$.value)) : _this.isConnected$.next(!1);
                }), this.populateGitProviderInfo();
            }, GitProviderAccountsComponent.prototype.onGitProviderTypeChange = function(selectedGitProviderType) {
                this.gitSessionStorageService.selectGitProviderType(this.workspaceId, selectedGitProviderType);
            }, GitProviderAccountsComponent.prototype.SwitchAccount = function() {
                !1 !== this.isConnected$.value && this.sendConfigureCredentialsRequest();
            }, GitProviderAccountsComponent.prototype.connectWorkspaceToDatasource = function() {
                !1 === this.isConnected$.value ? (this.gitSessionStorageService.configureCredentials(this.workspaceId), 
                this.updateSelectedFromTemp(!1)) : this.sendConfigureCredentialsRequest();
            }, GitProviderAccountsComponent.prototype.onShowConnentionsChange = function(collapsed) {
                this.isShowMoreUsersCollapsed$.next(collapsed);
            }, GitProviderAccountsComponent.prototype.connectWorkspaceToUserAccount = function() {
                this.userAccount && (this.gitSessionStorageService.selectUserAccount(this.workspaceId, this.userAccount), 
                this.gitSessionStorageService.configureCredentials(this.workspaceId));
            }, GitProviderAccountsComponent.prototype.isDatasourceSelected = function() {
                return this.gitSessionStorageService.loadGitSessionStorage(this.workspaceId).pipe((0, 
                take.q)(1), (0, map.U)(function(sessionState) {
                    return void 0 !== sessionState.selectedTempDatasourceOID;
                }));
            }, GitProviderAccountsComponent.prototype.isUserAccountSelected = function() {
                return void 0 !== this.userAccount;
            }, GitProviderAccountsComponent.prototype.LogOutFromDatasource = function() {
                var _this = this;
                this.tridentDialogService.open(git_log_out_dialog.A, {
                    panelClass: "dialog-style",
                    width: dialog_src.PW.Medium + "px",
                    data: {
                        workspaceId: this.workspaceId
                    }
                }).afterClosed().pipe((0, take.q)(1), (0, tap.b)(function() {
                    _this.updateDiscoveredDatasources(_this.selectedGitProvider$.value), _this.isConfiguredCredentials$.next(!1), 
                    _this.gitSessionStorageService.selectDatasource(_this.workspaceId, void 0), _this.isConnected$.value && _this.gitConnectionService.updateDatasourceInGitConnection(_this.workspaceId, void 0);
                })).subscribe();
            }, GitProviderAccountsComponent.prototype.showLogOutButton = function() {
                return this.componentConfigMap[this.selectedGitProvider$.value].canTheUserLogOut(this.workspaceId, this.gitConnectionService);
            }, GitProviderAccountsComponent.prototype.getCardTooltip = function(option) {
                return option.isEnabled ? option.name : option.disabledTooltip;
            }, GitProviderAccountsComponent.prototype.updateDiscoveredDatasources = function(selectedGitProvider) {
                var _this = this;
                this.gitDatasourceService.discoverDatasources({
                    workspaceId: this.workspaceId,
                    gitProviderType: selectedGitProvider
                }).pipe((0, filter.h)(function(datasources) {
                    return void 0 !== datasources && datasources.callState === src.j3q.Completed;
                }), (0, tap.b)(function(datasources) {
                    _this.datasourceList$.next(datasources.datasourcesRecord ? datasources.datasourcesRecord[selectedGitProvider] : void 0);
                })).subscribe();
            }, GitProviderAccountsComponent.prototype.populateGitProviderInfo = function() {
                var _this = this, gitProviderEnabledMap = (0, git_providers.yp)(this.featureSwitchService), disabledTooltip = this.localizationService.get("Trident_Git_Git_Provider_Card_Disabled_Tooltip");
                Object.entries(git_src.Rv).forEach(function(_a) {
                    var value = _a[1], enumKey = Number(_a[0]);
                    _this.gitProviderInfo.set(enumKey, (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, value), {
                        isEnabled: gitProviderEnabledMap.get(enumKey) || !1,
                        disabledTooltip
                    }));
                });
            }, GitProviderAccountsComponent.prototype.showSwitchAccountButton = function() {
                return this.componentConfigMap[this.selectedGitProvider$.value].shouldShowSwitchAccount(this.workspaceId, this.gitConnectionService, this.gitSessionStorageService);
            }, GitProviderAccountsComponent.prototype.sendConfigureCredentialsRequest = function() {
                var _this = this;
                this.configureCredentialsInProgress$.getValue() || (this.configureCredentialsInProgress$.next(!0), 
                this.gitConfigureCredentialsService.configureCredentials(this.selectedGitProvider$.value, this.workspaceId, this.selectedDatasource$.value).pipe((0, 
                tap.b)(function() {
                    _this.gitNotificationService.showSuccessNotification("Trident_Git_Toast_Configure_Credentials_Success"), 
                    _this.gitSessionStorageService.configureCredentials(_this.workspaceId), _this.updateSelectedFromTemp(), 
                    _this.configureCredentialsInProgress$.next(!1);
                }), (0, take.q)(1), (0, catchError.K)(function(httpError) {
                    _this.configureCredentialsInProgress$.next(!1);
                    var gitError = _this.gitErrorService.makeGitErrorFromHttpResponse("Git_Configure_Credentials_Failed", httpError);
                    return _this.gitNotificationService.showErrorNotification(gitError, "Trident_Git_Toast_Configure_Credentials_Fail"), 
                    [];
                })).subscribe());
            }, GitProviderAccountsComponent.prototype.updateSelectedFromTemp = function(shouldUpdateConnection) {
                var _a, _b, _c;
                void 0 === shouldUpdateConnection && (shouldUpdateConnection = !0);
                var datasource = null === (_a = this.selectedDatasource$) || void 0 === _a ? void 0 : _a.value;
                this.gitSessionStorageService.selectDatasource(this.workspaceId, null == datasource ? void 0 : datasource.id), 
                null === (_c = (_b = this.componentConfigMap[this.selectedGitProvider$.value]).selectDatasourceSideEffect) || void 0 === _c || _c.call(_b, this.gitSessionStorageService, null == datasource ? void 0 : datasource.url, this.workspaceId), 
                shouldUpdateConnection && this.gitConnectionService.updateDatasourceInGitConnection(this.workspaceId, null == datasource ? void 0 : datasource.id), 
                this.gitSessionStorageService.selectTempDatasource(this.workspaceId, void 0);
            }, GitProviderAccountsComponent.prototype.updateSelectedDatasource = function(sessionState) {
                var _this = this;
                this.datasourceList$.pipe((0, takeUntil.R)(this.onDestroy$)).subscribe(function(datasources) {
                    if (datasources) {
                        if (void 0 !== sessionState.selectedTempDatasourceOID) return void _this.selectedDatasource$.next(datasources.find(function(d) {
                            return d.id === sessionState.selectedTempDatasourceOID;
                        }));
                        if (1 === datasources.length) return void _this.selectedDatasource$.next(datasources[0]);
                    }
                    _this.selectedDatasource$.next(void 0);
                });
            }, GitProviderAccountsComponent.prototype.updateSelectedGitProviderInfo = function(sessionState) {
                this.selectedGitProvider$.next(null == sessionState ? void 0 : sessionState.selectedGitProviderType), 
                this.gitProviderConfig$.next(void 0 !== (null == sessionState ? void 0 : sessionState.selectedGitProviderType) ? this.componentConfigMap[null == sessionState ? void 0 : sessionState.selectedGitProviderType] : void 0);
            }, Object.defineProperty(GitProviderAccountsComponent.prototype, "getComponentConfigMap", {
                get: function() {
                    return this.componentConfigMap;
                },
                enumerable: !1,
                configurable: !0
            }), GitProviderAccountsComponent.\u0275fac = function(t) {
                return new (t || GitProviderAccountsComponent)(core["\u0275\u0275directiveInject"](notification_src.mn), core["\u0275\u0275directiveInject"](error_src.jR), core["\u0275\u0275directiveInject"](services.Ae), core["\u0275\u0275directiveInject"](src.gCl), core["\u0275\u0275directiveInject"](services.rC), core["\u0275\u0275directiveInject"](services.id), core["\u0275\u0275directiveInject"](dialog_src.uQ), core["\u0275\u0275directiveInject"](localization_service.z), core["\u0275\u0275directiveInject"](dialogService.j), core["\u0275\u0275directiveInject"](user_info_src.NQ), core["\u0275\u0275directiveInject"](feature_switch_service.V$));
            }, GitProviderAccountsComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: GitProviderAccountsComponent,
                selectors: [ [ "tri-git-provider-accounts" ] ],
                inputs: {
                    workspaceId: "workspaceId"
                },
                features: [ core["\u0275\u0275InheritDefinitionFeature"] ],
                decls: 5,
                vars: 8,
                consts: [ [ "class", "git-provider-selection", 4, "ngIf" ], [ 4, "ngIf" ], [ 1, "git-provider-selection" ], [ 1, "git-provider" ], [ 1, "git-providers" ], [ 4, "ngFor", "ngForOf" ], [ "class", "sr-only", 4, "ngFor", "ngForOf" ], [ "orientation", "horizontal", 1, "git-provider-card", 3, "ngClass", "click" ], [ 3, "name", "sprite" ], [ "tri-card-title", "", "triCardTitle", "" ], [ 1, "sr-only" ], [ "tri-button", "", 3, "click" ], [ 4, "ngIf", "ngIfElse" ], [ "workspaceNotConnectedToGitProvider", "" ], [ 3, "workspaceId" ], [ "class", "divider", 4, "ngIf" ], [ "class", "github-footer", 4, "ngIf" ], [ 1, "divider" ], [ 1, "switch-container", 3, "headerText", "iconName", "collapsed", "collapseContainer" ], [ 3, "workspaceId", "isPartOfCollapsible" ], [ 1, "github-footer" ], [ "tri-button", "", "class", "switch-account-button", "appearance", "primary", 3, "disabled", "click", 4, "ngIf" ], [ "tri-button", "", "class", "logout-button", 3, "click", 4, "ngIf" ], [ "data-testid", "manage-all-users-link", 3, "block", "href", "external" ], [ "tri-button", "", "appearance", "primary", 1, "switch-account-button", 3, "disabled", "click" ], [ "tri-button", "", 1, "logout-button", 3, "click" ], [ "tri-svg-icon-16", "", 3, "name", "sprite" ], [ 3, "ngSwitch" ], [ "class", "git-provider-accounts", 4, "ngSwitchCase" ], [ 1, "git-provider-accounts" ], [ "tri-button", "", "appearance", "primary", 1, "connect-button", 3, "disabled", "click" ], [ 1, "accounts" ], [ "data-testid", "userAccount", 3, "checked", "disabled" ], [ 1, "data-source-info" ], [ 1, "data-source-display-name" ], [ 1, "data-source-url" ], [ 1, "footer" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275template"](0, GitProviderAccountsComponent_div_0_Template, 9, 9, "div", 0), 
                    core["\u0275\u0275pipe"](1, "async"), core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275template"](3, GitProviderAccountsComponent_div_3_Template, 5, 4, "div", 1), 
                    core["\u0275\u0275pipe"](4, "async")), 2 & rf && (core["\u0275\u0275property"]("ngIf", !1 === core["\u0275\u0275pipeBind1"](1, 2, ctx.isConfiguredCredentials$) && !0 !== core["\u0275\u0275pipeBind1"](2, 4, ctx.isConnected$)), 
                    core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](4, 6, ctx.gitProviderConfig$)));
                },
                dependencies: [ common.NgClass, common.NgForOf, common.NgIf, common.NgSwitch, common.NgSwitchCase, tri_link_component.v, tri_svg_icon_component.M, tri_card_component.LB, tri_card_component.Pw, tri_card_component.Ab, TriCollapsedContainerComponent, tri_radio_button_component.Y, tri_radio_group_component.Z, GitConnectedProviderDetailsComponent, GitDatasourcesListComponent, common.AsyncPipe, common.KeyValuePipe, localize_pipe.Y ],
                styles: [ ".git-provider-selection[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:8px;padding-top:16px}.git-provider-card[_ngcontent-%COMP%]{display:flex;flex-direction:column;justify-content:center;width:128px;height:128px}.accounts[_ngcontent-%COMP%]{font-weight:var(--fontWeightSemibold);font-size:var(--fontSizeBase300);padding-top:16px}.logout-button[_ngcontent-%COMP%]{margin:0 8px}.switch-container[_ngcontent-%COMP%]     .collapsible-picker-box{border:none;padding:0}.git-provider[_ngcontent-%COMP%]{font-weight:var(--fontWeightSemibold);font-size:var(--fontSizeBase300);line-height:20px}.git-provider-accounts[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:8px}.data-source-info[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:2px}.data-source-url[_ngcontent-%COMP%]{font-weight:var(--fontWeightMedium);font-size:var(--fontSizeBase200);line-height:16px}.git-providers[_ngcontent-%COMP%]{display:flex;flex-direction:row;gap:16px}.footer[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;padding-top:16px}.divider[_ngcontent-%COMP%]{margin:24px 0;border-top:1px solid var(--globalColorGrey82);padding-top:24px}.github-footer[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;padding-top:16px;margin-top:16px;border-top:1px solid var(--globalColorGrey82)}.sr-only[_ngcontent-%COMP%]{position:absolute;left:-9999px;top:auto;width:1px;height:1px;overflow:hidden}.disabled-card[_ngcontent-%COMP%]{background:var(--globalColorGrey94);color:var(--globalColorGrey74);fill:var(--globalColorGrey74);box-shadow:None;cursor:not-allowed}.card-selected[_ngcontent-%COMP%]{background-color:var(--globalColorGrey92);border:1px solid var(--globalColorGrey82)}.disabled-card[_ngcontent-%COMP%]:active{pointer-events:none}" ],
                changeDetection: 0
            }), GitProviderAccountsComponent;
        }(rx_component.w);
        function GitConnectionCreateBranchComponent_div_23_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 24), core["\u0275\u0275element"](1, "tri-svg-icon", 25), 
            core["\u0275\u0275text"](2), core["\u0275\u0275pipe"](3, "async"), core["\u0275\u0275elementEnd"]()), 
            2 & rf) {
                var ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](3, 1, ctx_r0.createBranchFailedMessage$), " ");
            }
        }
        function GitConnectionCreateBranchComponent_tri_search_box_39_Template(rf, ctx) {
            if (1 & rf) {
                var _r7 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "tri-search-box", 26), core["\u0275\u0275listener"]("value", function($event) {
                    core["\u0275\u0275restoreView"](_r7);
                    var ctx_r6 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r6.onBranchesSearch($event));
                }), core["\u0275\u0275elementEnd"]();
            }
        }
        function GitConnectionCreateBranchComponent_tri_dropdown_item_40_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "tri-dropdown-item", 27)(1, "p"), 
            core["\u0275\u0275text"](2), core["\u0275\u0275elementEnd"]()()), 2 & rf) {
                var item_r8 = ctx.$implicit;
                core["\u0275\u0275property"]("value", item_r8), core["\u0275\u0275advance"](2), 
                core["\u0275\u0275textInterpolate"](item_r8.text);
            }
        }
        function GitConnectionCreateBranchComponent_ng_container_44_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275element"](1, "tri-spinner", 28), 
            core["\u0275\u0275text"](2), core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementContainerEnd"]()), 
            2 & rf && (core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](3, 1, "Creating_ButtonText"), " "));
        }
        function GitConnectionCreateBranchComponent_ng_template_46_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275text"](0), core["\u0275\u0275pipe"](1, "localize")), 
            2 & rf && core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](1, 1, "Create_ButtonText"), " ");
        }
        var git_connection_create_branch_component_c0 = function(a1) {
            return {
                showFullContent: !1,
                dropdownHeight: a1,
                dropdownWidth: 304
            };
        }, GitConnectionCreateBranchComponent = function() {
            function GitConnectionCreateBranchComponent(data, telemetryService, dialog) {
                var _this = this;
                this.telemetryService = telemetryService, this.dialog = dialog, this.branchesListFromInput = [], 
                this.filteredBranchesList = [], this.firstBranch = "", this.createButtonEnabled = !1, 
                this.selectedBranchName = "", this.selectedParentBranchName = null, this.loadingRequest$ = new BehaviorSubject.X(!1), 
                this.createBranchFailedMessage$ = new BehaviorSubject.X(null), this.isWorkspaceConnected = void 0, 
                this.destroy$ = new Subject.xQ, this.firstBranch = data.defaultRepoBranch, this.selectedParentBranchName = {
                    name: this.firstBranch
                }, this.branchesListFromInput = data.branchesList, this.filteredBranchesList = data.branchesList, 
                this.isWorkspaceConnected = data.isWorkspaceConnected, this.createNewBranchChange = data.createNewBranchChange, 
                data.newBranchState$.pipe((0, filter.h)(function(state) {
                    return !!state;
                }), (0, takeUntil.R)(this.destroy$)).subscribe(function(state) {
                    if (_this.loadingRequest$.next(!1), (0, git_src.pb)(state)) {
                        var gitErrorDetails = (0, git_src.lz)(state);
                        _this.createBranchFailedMessage$.next(gitErrorDetails.message);
                    } else _this.telemetryService.logEvent({
                        name: "Create branch request",
                        properties: {
                            isWorkspaceConnected: _this.isWorkspaceConnected
                        }
                    }), _this.dialog.close();
                });
            }
            return GitConnectionCreateBranchComponent.prototype.ngOnDestroy = function() {
                this.destroy$.next(), this.destroy$.complete();
            }, GitConnectionCreateBranchComponent.prototype.onBranchNameChange = function(selectedBranchName) {
                this.selectedBranchName = selectedBranchName, this.toggleCreateBranchButton();
            }, GitConnectionCreateBranchComponent.prototype.onParentBranchNameChange = function(selectedparentBranch) {
                this.selectedParentBranchName = {
                    name: selectedparentBranch.text
                }, this.toggleCreateBranchButton();
            }, GitConnectionCreateBranchComponent.prototype.onCreateButtonClick = function() {
                this.createBranchFailedMessage$.next(null), this.loadingRequest$.next(!0);
                var newBranch = {
                    name: this.selectedBranchName,
                    parentBranch: this.selectedParentBranchName
                };
                this.telemetryService.logEvent({
                    name: "Create branch request",
                    properties: {
                        isWorkspaceConnected: this.isWorkspaceConnected
                    }
                }), this.createNewBranchChange.emit(newBranch);
            }, GitConnectionCreateBranchComponent.prototype.onCancelButtonClick = function() {
                this.dialog.close();
            }, GitConnectionCreateBranchComponent.prototype.onDismissButtonClick = function() {
                this.dialog.close();
            }, GitConnectionCreateBranchComponent.prototype.calcDropdownHeight = function(itemsCount) {
                return itemsCount > 1 ? 104 : 76;
            }, GitConnectionCreateBranchComponent.prototype.toggleCreateBranchButton = function() {
                this.createButtonEnabled = !!this.selectedBranchName && !!this.selectedParentBranchName && !!this.selectedParentBranchName.name;
            }, GitConnectionCreateBranchComponent.prototype.onBranchesSearch = function(searchTerm) {
                this.filteredBranchesList = this.branchesListFromInput.filter(function(branch) {
                    return branch.text.toLowerCase().includes(searchTerm.toLowerCase());
                });
            }, GitConnectionCreateBranchComponent.\u0275fac = function(t) {
                return new (t || GitConnectionCreateBranchComponent)(core["\u0275\u0275directiveInject"](dialog.WI), core["\u0275\u0275directiveInject"](telemetry_service.t), core["\u0275\u0275directiveInject"](dialog.so));
            }, GitConnectionCreateBranchComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: GitConnectionCreateBranchComponent,
                selectors: [ [ "tri-git-connection-create-branch" ] ],
                decls: 51,
                vars: 56,
                consts: [ [ 1, "dialog-header" ], [ 1, "dialog-title" ], [ 1, "dismiss-button", 3, "click" ], [ "name", "dismiss_16_regular" ], [ 1, "dialog-content" ], [ 1, "info" ], [ "target", "_blank", "href", "https://go.microsoft.com/fwlink/?linkid=2235132", "localize", "LearnMore", "localize-tooltip", "LearnMore", 1, "learn-more-link-icon" ], [ 1, "accordion-area" ], [ 1, "branch-name-input" ], [ 1, "star" ], [ 3, "ngModel", "placeholder", "ngModelChange" ], [ "class", "tri-flex error-message-container", 4, "ngIf" ], [ 1, "parent-branch-selection" ], [ 1, "header-branch-selection" ], [ "id", "select-origin-branch-dropdown-label" ], [ "tabindex", "0", 3, "name", "triTooltip", "triTooltipMaxWidth" ], [ "aria-labelledby", "select-origin-branch-dropdown-label", 3, "ngModel", "isDisabled", "options", "valueChange" ], [ "class", "dropdown-search", 3, "value", 4, "ngIf" ], [ 3, "value", 4, "ngFor", "ngForOf" ], [ 1, "dialog-footer" ], [ "tri-button", "", "appearance", "primary", 3, "disabled", "click" ], [ 4, "ngIf", "ngIfElse" ], [ "activeCreate", "" ], [ "tri-button", "", "appearance", "tri-middle", 3, "click" ], [ 1, "tri-flex", "error-message-container" ], [ "name", "error_circle_12_filled", 1, "error-message-icon" ], [ 1, "dropdown-search", 3, "value" ], [ 3, "value" ], [ "size", "tiny", "labelPosition", "after" ] ],
                template: function(rf, ctx) {
                    if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 0)(1, "div", 1), core["\u0275\u0275text"](2), 
                    core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](4, "button", 2), 
                    core["\u0275\u0275listener"]("click", function() {
                        return ctx.onDismissButtonClick();
                    }), core["\u0275\u0275element"](5, "tri-svg-icon", 3), core["\u0275\u0275elementEnd"]()(), 
                    core["\u0275\u0275elementStart"](6, "div", 4)(7, "div", 5), core["\u0275\u0275text"](8), 
                    core["\u0275\u0275pipe"](9, "localize"), core["\u0275\u0275elementStart"](10, "tri-link", 6), 
                    core["\u0275\u0275text"](11), core["\u0275\u0275pipe"](12, "localize"), core["\u0275\u0275elementEnd"]()(), 
                    core["\u0275\u0275elementStart"](13, "div", 7)(14, "div", 8)(15, "h4"), core["\u0275\u0275text"](16), 
                    core["\u0275\u0275pipe"](17, "localize"), core["\u0275\u0275elementStart"](18, "span", 9), 
                    core["\u0275\u0275text"](19), core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementStart"](20, "input", 10), 
                    core["\u0275\u0275listener"]("ngModelChange", function($event) {
                        return ctx.onBranchNameChange($event);
                    }), core["\u0275\u0275pipe"](21, "async"), core["\u0275\u0275pipe"](22, "localize"), 
                    core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](23, GitConnectionCreateBranchComponent_div_23_Template, 4, 3, "div", 11), 
                    core["\u0275\u0275pipe"](24, "async"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](25, "div", 12)(26, "div", 13)(27, "h4", 14), 
                    core["\u0275\u0275text"](28), core["\u0275\u0275pipe"](29, "localize"), core["\u0275\u0275elementStart"](30, "span", 9), 
                    core["\u0275\u0275text"](31), core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275element"](32, "tri-svg-icon", 15), 
                    core["\u0275\u0275pipe"](33, "localize"), core["\u0275\u0275pipe"](34, "localize"), 
                    core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](35, "tri-dropdown", 16), 
                    core["\u0275\u0275listener"]("valueChange", function($event) {
                        return ctx.onParentBranchNameChange($event);
                    }), core["\u0275\u0275elementStart"](36, "tri-dropdown-trigger"), core["\u0275\u0275text"](37), 
                    core["\u0275\u0275pipe"](38, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](39, GitConnectionCreateBranchComponent_tri_search_box_39_Template, 1, 0, "tri-search-box", 17), 
                    core["\u0275\u0275template"](40, GitConnectionCreateBranchComponent_tri_dropdown_item_40_Template, 3, 2, "tri-dropdown-item", 18), 
                    core["\u0275\u0275elementEnd"]()()()(), core["\u0275\u0275elementStart"](41, "div", 19)(42, "button", 20), 
                    core["\u0275\u0275listener"]("click", function() {
                        return ctx.onCreateButtonClick();
                    }), core["\u0275\u0275pipe"](43, "async"), core["\u0275\u0275template"](44, GitConnectionCreateBranchComponent_ng_container_44_Template, 4, 3, "ng-container", 21), 
                    core["\u0275\u0275pipe"](45, "async"), core["\u0275\u0275template"](46, GitConnectionCreateBranchComponent_ng_template_46_Template, 2, 3, "ng-template", null, 22, core["\u0275\u0275templateRefExtractor"]), 
                    core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](48, "button", 23), 
                    core["\u0275\u0275listener"]("click", function() {
                        return ctx.onCancelButtonClick();
                    }), core["\u0275\u0275text"](49), core["\u0275\u0275pipe"](50, "localize"), core["\u0275\u0275elementEnd"]()()), 
                    2 & rf) {
                        var tmp_18_0, tmp_19_0, _r4 = core["\u0275\u0275reference"](47);
                        core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](3, 26, "Trident_Git_Create_New_Branch"), " "), 
                        core["\u0275\u0275advance"](6), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](9, 28, "Trident_Git_Create_New_Branch_Info"), " "), 
                        core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](12, 30, "LearnMore"), " "), 
                        core["\u0275\u0275advance"](5), core["\u0275\u0275textInterpolate1"]("", core["\u0275\u0275pipeBind1"](17, 32, "Trident_Git_Branch_Name"), " "), 
                        core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"]("*"), core["\u0275\u0275advance"](1), 
                        core["\u0275\u0275classMap"](null !== core["\u0275\u0275pipeBind1"](21, 34, ctx.createBranchFailedMessage$) ? "input-error" : ""), 
                        core["\u0275\u0275property"]("ngModel", ctx.selectedBranchName)("placeholder", core["\u0275\u0275pipeBind1"](22, 36, "Trident_Git_Branch_Name")), 
                        core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngIf", null !== core["\u0275\u0275pipeBind1"](24, 38, ctx.createBranchFailedMessage$)), 
                        core["\u0275\u0275advance"](5), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](29, 40, "Trident_Git_Create_New_Branch_Create_From")), 
                        core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"]("*"), core["\u0275\u0275advance"](1), 
                        core["\u0275\u0275property"]("name", "info_16_regular")("triTooltip", core["\u0275\u0275pipeBind1"](33, 42, "Trident_Git_Create_New_Branch_Tooltip"))("triTooltipMaxWidth", 240), 
                        core["\u0275\u0275attribute"]("aria-label", core["\u0275\u0275pipeBind1"](34, 44, "Trident_Git_Create_New_Branch_Tooltip")), 
                        core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngModel", ctx.selectedParentBranchName)("isDisabled", 0 === ctx.branchesListFromInput.length)("options", core["\u0275\u0275pureFunction1"](54, git_connection_create_branch_component_c0, ctx.calcDropdownHeight(ctx.filteredBranchesList.length))), 
                        core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", null !== (tmp_18_0 = null == ctx.selectedParentBranchName ? null : ctx.selectedParentBranchName.name) && void 0 !== tmp_18_0 ? tmp_18_0 : core["\u0275\u0275pipeBind1"](38, 46, "Trident_Git_Create_New_Branch_Choose_Parent_Branch"), " "), 
                        core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", (null !== (tmp_19_0 = null == ctx.branchesListFromInput ? null : ctx.branchesListFromInput.length) && void 0 !== tmp_19_0 ? tmp_19_0 : 0) > 0), 
                        core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngForOf", ctx.filteredBranchesList), 
                        core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("disabled", !ctx.createButtonEnabled || core["\u0275\u0275pipeBind1"](43, 48, ctx.loadingRequest$)), 
                        core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](45, 50, ctx.loadingRequest$))("ngIfElse", _r4), 
                        core["\u0275\u0275advance"](5), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](50, 52, "Cancel_ButtonText"), " ");
                    }
                },
                dependencies: [ common.NgForOf, common.NgIf, fesm2022_forms.Fj, fesm2022_forms.JJ, fesm2022_forms.On, tri_dropdown_component.M3, tri_dropdown_item_component.l, tri_dropdown_item_menu_directive.q, tri_dropdown_component.ii, tri_link_component.v, tri_search_box_component.U, tri_spinner_component.D, tri_svg_icon_component.M, tri_tooltip_directive.Z, common.AsyncPipe, localize_pipe.Y ],
                styles: [ ".cdk-overlay-pane.pbi-dialog{border-radius:8px}tri-git-connection-create-branch[_nghost-%COMP%]{display:flex;flex-direction:column;width:352px;font-size:14px}.dialog-header[_ngcontent-%COMP%]{display:flex;flex-direction:row;justify-content:space-between;align-items:center}.dialog-header[_ngcontent-%COMP%]   .dialog-title[_ngcontent-%COMP%]{font-weight:600;font-size:20px}.dialog-header[_ngcontent-%COMP%]   .dismiss-button[_ngcontent-%COMP%]{padding:0;background-color:var(--globalColorWhite);border:none}.dialog-header[_ngcontent-%COMP%]   .dismiss-button[_ngcontent-%COMP%]   tri-svg-icon[_ngcontent-%COMP%]{fill:var(--globalColorGrey38);height:20px;width:20px}.dialog-content[_ngcontent-%COMP%]{display:flex;flex-direction:column}.dialog-content[_ngcontent-%COMP%]   .info[_ngcontent-%COMP%]{margin-top:20px;margin-bottom:16px}.dialog-content[_ngcontent-%COMP%]   .accordion-area[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:flex-start;width:304px;padding:24px;border:1px solid var(--globalColorGrey82);border-radius:8px;gap:24px}.dialog-content[_ngcontent-%COMP%]   .accordion-area[_ngcontent-%COMP%]   h4[_ngcontent-%COMP%]{font-size:14px;font-weight:600;margin:0 0 4px}.dialog-content[_ngcontent-%COMP%]   .accordion-area[_ngcontent-%COMP%]   .branch-name-input[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{height:30px;width:278px;border:1px solid var(--globalColorGrey82);border-radius:4px;padding:0 12px;border-bottom:1px solid var(--globalColorGrey38)}.dialog-content[_ngcontent-%COMP%]   .accordion-area[_ngcontent-%COMP%]   .branch-name-input[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:focus{outline:none;border-bottom:2px solid var(--globalColorBrand80)}.dialog-content[_ngcontent-%COMP%]   .accordion-area[_ngcontent-%COMP%]   .branch-name-input[_ngcontent-%COMP%]   .input-error[_ngcontent-%COMP%]{border-color:var(--colorPaletteRedForeground1)}.dialog-content[_ngcontent-%COMP%]   .accordion-area[_ngcontent-%COMP%]   .star[_ngcontent-%COMP%]{color:var(--globalColorRedShade10);font-weight:400;margin-left:2px}.dialog-content[_ngcontent-%COMP%]   .accordion-area[_ngcontent-%COMP%]   .parent-branch-selection[_ngcontent-%COMP%]{margin-bottom:12px}.dialog-content[_ngcontent-%COMP%]   .accordion-area[_ngcontent-%COMP%]   .parent-branch-selection[_ngcontent-%COMP%]   .header-branch-selection[_ngcontent-%COMP%]{display:flex;flex-direction:row}.dialog-content[_ngcontent-%COMP%]   .accordion-area[_ngcontent-%COMP%]   .parent-branch-selection[_ngcontent-%COMP%]   .header-branch-selection[_ngcontent-%COMP%]   h4[_ngcontent-%COMP%]{margin-bottom:0}.dialog-content[_ngcontent-%COMP%]   .accordion-area[_ngcontent-%COMP%]   .parent-branch-selection[_ngcontent-%COMP%]   .header-branch-selection[_ngcontent-%COMP%]   tri-svg-icon[_ngcontent-%COMP%]{fill:var(--globalColorGrey38);height:16px;width:16px;margin-bottom:6px}.dialog-content[_ngcontent-%COMP%]   .accordion-area[_ngcontent-%COMP%]   .parent-branch-selection[_ngcontent-%COMP%]   tri-dropdown[_ngcontent-%COMP%]{width:304px;border-radius:4px}.dialog-content[_ngcontent-%COMP%]   .accordion-area[_ngcontent-%COMP%]   .parent-branch-selection[_ngcontent-%COMP%]   tri-dropdown[_ngcontent-%COMP%]     button{padding:6px 8px 6px 12px;border-radius:var(--button-base-corner-radius);border-bottom:1px solid var(--globalColorGrey38)}.dialog-content[_ngcontent-%COMP%]   .accordion-area[_ngcontent-%COMP%]   .parent-branch-selection[_ngcontent-%COMP%]   tri-dropdown[_ngcontent-%COMP%]     .tri-dropdown-trigger-container{margin-left:0;padding-left:0}.dialog-content[_ngcontent-%COMP%]   .accordion-area[_ngcontent-%COMP%]   .parent-branch-selection[_ngcontent-%COMP%]   tri-dropdown[_ngcontent-%COMP%]     .dropdown-icon{fill:var(--globalColorGrey38)}.dialog-content[_ngcontent-%COMP%]   .accordion-area[_ngcontent-%COMP%]   .parent-branch-selection[_ngcontent-%COMP%]   tri-dropdown[_ngcontent-%COMP%]     tri-dropdown-trigger{color:var(--globalColorGrey44)}.dialog-footer[_ngcontent-%COMP%]{display:flex;flex-direction:row;justify-content:flex-end;gap:8px;margin-top:16px}.dialog-footer[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{width:96px}.dropdown-search[_ngcontent-%COMP%]{width:100%}" ],
                changeDetection: 0
            }), GitConnectionCreateBranchComponent;
        }(), c_gitSessionStorage_gitHub_repositorySelected = {
            workspaceId: "workspaceId",
            selectedGitProviderType: git_src.IS.GitHub,
            selectedOrganization: {
                name: "repoOwner2",
                setByDatasource: !0
            },
            selectedRepository: {
                name: "repoName2",
                setByDatasource: !0
            },
            selectedDatasourceOID: "dataSourceOID2"
        }, c_gitSessionStorage_gitHub_branchSelected = (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, c_gitSessionStorage_gitHub_repositorySelected), {
            selectedBranch: "branchName2"
        });
        function getDropdownOverlayOptions(optionCount) {
            return {
                dropdownHeight: 30 * Math.max(Math.min(optionCount, 12), 1) + 34
            };
        }
        (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, c_gitSessionStorage_gitHub_repositorySelected), {
            selectedBranch: "branchToSwitchTo"
        }), (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, c_gitSessionStorage_gitHub_branchSelected), {
            selectedDirectory: "dirName2"
        });
        var tri_dropdown_service = __webpack_require__(41756);
        function TriDropdownActionComponent_tri_svg_icon_3_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "tri-svg-icon", 6), 2 & rf) {
                var ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275propertyInterpolate"]("name", ctx_r0.icon);
            }
        }
        function TriDropdownActionComponent_tri_svg_icon_4_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "tri-svg-icon", 7), 2 & rf) {
                var ctx_r1 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275propertyInterpolate"]("name", ctx_r1.icon), core["\u0275\u0275propertyInterpolate"]("sprite", ctx_r1.sprite);
            }
        }
        var TriDropdownActionComponent = function(_super) {
            function TriDropdownActionComponent(triDropdownService) {
                var _this = _super.call(this) || this;
                return _this.triDropdownService = triDropdownService, _this.text = null, _this.icon = null, 
                _this.sprite = null, _this.actionClicked = new core.EventEmitter, _this.triDropdownService.actionItems += 1, 
                _this;
            }
            return (0, tslib_es6.__extends)(TriDropdownActionComponent, _super), TriDropdownActionComponent.prototype.actionEmit = function() {
                this.triDropdownService.toggleOpenState(), this.actionClicked.emit();
            }, TriDropdownActionComponent.\u0275fac = function(t) {
                return new (t || TriDropdownActionComponent)(core["\u0275\u0275directiveInject"](tri_dropdown_service._));
            }, TriDropdownActionComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: TriDropdownActionComponent,
                selectors: [ [ "tri-dropdown-action" ] ],
                inputs: {
                    text: "text",
                    icon: "icon",
                    sprite: "sprite"
                },
                outputs: {
                    actionClicked: "actionClicked"
                },
                features: [ core["\u0275\u0275InheritDefinitionFeature"] ],
                decls: 7,
                vars: 3,
                consts: [ [ 1, "action" ], [ "tri-button", "", 3, "click" ], [ 3, "ngSwitch" ], [ "class", "icon", 3, "name", 4, "ngSwitchCase" ], [ "class", "icon", 3, "name", "sprite", 4, "ngSwitchDefault" ], [ 1, "text" ], [ 1, "icon", 3, "name" ], [ 1, "icon", 3, "name", "sprite" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementStart"](0, "div", 0)(1, "button", 1), core["\u0275\u0275listener"]("click", function() {
                        return ctx.actionEmit();
                    }), core["\u0275\u0275elementStart"](2, "div", 2), core["\u0275\u0275template"](3, TriDropdownActionComponent_tri_svg_icon_3_Template, 1, 1, "tri-svg-icon", 3), 
                    core["\u0275\u0275template"](4, TriDropdownActionComponent_tri_svg_icon_4_Template, 1, 2, "tri-svg-icon", 4), 
                    core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](5, "div", 5), 
                    core["\u0275\u0275text"](6), core["\u0275\u0275elementEnd"]()()()), 2 & rf && (core["\u0275\u0275advance"](2), 
                    core["\u0275\u0275property"]("ngSwitch", ctx.sprite), core["\u0275\u0275advance"](1), 
                    core["\u0275\u0275property"]("ngSwitchCase", null), core["\u0275\u0275advance"](3), 
                    core["\u0275\u0275textInterpolate1"](" ", ctx.text, " "));
                },
                dependencies: [ common.NgSwitch, common.NgSwitchCase, common.NgSwitchDefault, tri_svg_icon_component.M ],
                styles: [ ".action[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{display:flex;justify-content:flex-start;border:none;width:100%}.action[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   .text[_ngcontent-%COMP%]{font-size:var(--global-font-size-300);margin-left:9px;overflow:hidden;text-overflow:ellipsis}" ],
                changeDetection: 0
            }), TriDropdownActionComponent;
        }(rx_component.w);
        function GitConnectionDetailsSettingsComponent_tri_message_bar_2_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "tri-message-bar", 5), 2 & rf) {
                var ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("viewModel", ctx_r0.getNoBranchesInRepoMessagBarViewModel());
            }
        }
        function GitConnectionDetailsSettingsComponent_div_3_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementStart"](0, "div"), core["\u0275\u0275element"](1, "tri-spinner", 6), 
            core["\u0275\u0275elementEnd"]());
        }
        function GitConnectionDetailsSettingsComponent_div_4_div_21_tri_search_box_12_Template(rf, ctx) {
            if (1 & rf) {
                var _r14 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "tri-search-box", 18), core["\u0275\u0275listener"]("value", function($event) {
                    core["\u0275\u0275restoreView"](_r14);
                    var ctx_r13 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r13.onBranchesSearch($event));
                }), core["\u0275\u0275elementEnd"]();
            }
        }
        function GitConnectionDetailsSettingsComponent_div_4_div_21_span_13_Template(rf, ctx) {
            if (1 & rf) {
                var _r16 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "span", 19)(1, "tri-dropdown-action", 20), core["\u0275\u0275listener"]("actionClicked", function() {
                    core["\u0275\u0275restoreView"](_r16);
                    var ctx_r15 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r15.onCreateBranchButtonClick());
                }), core["\u0275\u0275pipe"](2, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275element"](3, "hr"), 
                core["\u0275\u0275elementEnd"]();
            }
            2 & rf && (core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("text", core["\u0275\u0275pipeBind1"](2, 1, "Trident_Git_New_Branch")));
        }
        function GitConnectionDetailsSettingsComponent_div_4_div_21_tri_dropdown_item_14_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "tri-dropdown-item", 21)(1, "p"), 
            core["\u0275\u0275text"](2), core["\u0275\u0275elementEnd"]()()), 2 & rf) {
                var item_r17 = ctx.$implicit;
                core["\u0275\u0275property"]("title", item_r17.text)("value", item_r17), core["\u0275\u0275advance"](2), 
                core["\u0275\u0275textInterpolate"](item_r17.text);
            }
        }
        function GitConnectionDetailsSettingsComponent_div_4_div_21_tri_dropdown_item_15_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementStart"](0, "tri-dropdown-item", 22)(1, "p"), 
            core["\u0275\u0275text"](2), core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementEnd"]()()), 
            2 & rf && (core["\u0275\u0275property"]("disabled", !0), core["\u0275\u0275advance"](2), 
            core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](3, 2, "Trident_Git_Empty_Branches_Dropdown")));
        }
        function GitConnectionDetailsSettingsComponent_div_4_div_21_Template(rf, ctx) {
            if (1 & rf) {
                var _r19 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div")(1, "h4", 10), core["\u0275\u0275text"](2), 
                core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementStart"](4, "span", 11), 
                core["\u0275\u0275text"](5, " *"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275element"](6, "tri-svg-icon", 12), 
                core["\u0275\u0275pipe"](7, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](8, "tri-dropdown", 13), 
                core["\u0275\u0275listener"]("ngModelChange", function($event) {
                    core["\u0275\u0275restoreView"](_r19);
                    var ctx_r18 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r18.selectedBranch = $event);
                })("valueChange", function($event) {
                    core["\u0275\u0275restoreView"](_r19);
                    var ctx_r20 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r20.onBranchChange($event));
                }), core["\u0275\u0275elementStart"](9, "tri-dropdown-trigger"), core["\u0275\u0275text"](10), 
                core["\u0275\u0275pipe"](11, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](12, GitConnectionDetailsSettingsComponent_div_4_div_21_tri_search_box_12_Template, 1, 0, "tri-search-box", 14), 
                core["\u0275\u0275template"](13, GitConnectionDetailsSettingsComponent_div_4_div_21_span_13_Template, 4, 3, "span", 15), 
                core["\u0275\u0275template"](14, GitConnectionDetailsSettingsComponent_div_4_div_21_tri_dropdown_item_14_Template, 3, 3, "tri-dropdown-item", 16), 
                core["\u0275\u0275template"](15, GitConnectionDetailsSettingsComponent_div_4_div_21_tri_dropdown_item_15_Template, 4, 4, "tri-dropdown-item", 17), 
                core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var tmp_10_0, tmp_11_0, ctx_r6 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](3, 15, "Trident_Git_Branch"), " "), 
                core["\u0275\u0275advance"](4), core["\u0275\u0275property"]("name", "info_16_regular")("triTooltip", core["\u0275\u0275pipeBind1"](7, 17, "Trident_Git_Branch_Tooltip"))("triTooltipMaxWidth", 240), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngModel", ctx_r6.selectedBranch)("disabled", !ctx_r6.selectedRepository || !ctx_r6.branchesList || null !== ctx_r6.branchesError)("isLoading", !!ctx_r6.selectedRepository && !ctx_r6.branchesList)("options", ctx_r6.getDropdownOverlayOptions((null == ctx_r6.filteredBranchesList ? null : ctx_r6.filteredBranchesList.length) || 0, 5, 2)), 
                core["\u0275\u0275attribute"]("data-testid", "switch-branch-dropdown")("data-isLoading", ctx_r6.selectedRepository && !ctx_r6.branchesList ? "true" : "false"), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", null !== (tmp_10_0 = null == ctx_r6.selectedBranch ? null : ctx_r6.selectedBranch.name) && void 0 !== tmp_10_0 ? tmp_10_0 : core["\u0275\u0275pipeBind1"](11, 19, "Trident_Git_Branch"), " "), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", (null !== (tmp_11_0 = null == ctx_r6.branchesList ? null : ctx_r6.branchesList.length) && void 0 !== tmp_11_0 ? tmp_11_0 : 0) > 0), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", 0 !== (null == ctx_r6.branchesList ? null : ctx_r6.branchesList.length)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngForOf", ctx_r6.filteredBranchesList), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", 0 === (null == ctx_r6.branchesList ? null : ctx_r6.branchesList.length));
            }
        }
        function GitConnectionDetailsSettingsComponent_div_4_ng_template_22_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "h4"), core["\u0275\u0275text"](1), 
            core["\u0275\u0275pipe"](2, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275text"](3)), 
            2 & rf) {
                var ctx_r8 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](2, 2, "Trident_Git_Branch")), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", null == ctx_r8.selectedBranch ? null : ctx_r8.selectedBranch.name, " ");
            }
        }
        function GitConnectionDetailsSettingsComponent_div_4_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div")(1, "h4"), core["\u0275\u0275text"](2), 
            core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](4, "div", 7), 
            core["\u0275\u0275text"](5), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](6, "h4"), 
            core["\u0275\u0275text"](7), core["\u0275\u0275pipe"](8, "localize"), core["\u0275\u0275elementEnd"](), 
            core["\u0275\u0275elementStart"](9, "div", 7), core["\u0275\u0275text"](10), core["\u0275\u0275elementEnd"](), 
            core["\u0275\u0275elementStart"](11, "h4"), core["\u0275\u0275text"](12), core["\u0275\u0275pipe"](13, "localize"), 
            core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](14, "div", 7), 
            core["\u0275\u0275text"](15), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](16, "h4"), 
            core["\u0275\u0275text"](17), core["\u0275\u0275pipe"](18, "localize"), core["\u0275\u0275elementEnd"](), 
            core["\u0275\u0275elementStart"](19, "div", 7), core["\u0275\u0275text"](20), core["\u0275\u0275elementEnd"](), 
            core["\u0275\u0275template"](21, GitConnectionDetailsSettingsComponent_div_4_div_21_Template, 16, 21, "div", 8), 
            core["\u0275\u0275template"](22, GitConnectionDetailsSettingsComponent_div_4_ng_template_22_Template, 4, 4, "ng-template", null, 9, core["\u0275\u0275templateRefExtractor"]), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var _r7 = core["\u0275\u0275reference"](23), ctx_r2 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](3, 18, "Organization")), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("triTooltip", null == ctx_r2.selectedOrganization ? null : ctx_r2.selectedOrganization.name), 
                core["\u0275\u0275attribute"]("data-testid", null == ctx_r2.selectedOrganization ? null : ctx_r2.selectedOrganization.name), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate"](null == ctx_r2.selectedOrganization ? null : ctx_r2.selectedOrganization.name), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](8, 20, "Trident_Git_Project")), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("triTooltip", null == ctx_r2.selectedProject ? null : ctx_r2.selectedProject.name), 
                core["\u0275\u0275attribute"]("data-testid", null == ctx_r2.selectedProject ? null : ctx_r2.selectedProject.name), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate"](null == ctx_r2.selectedProject ? null : ctx_r2.selectedProject.name), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](13, 22, "Trident_Git_Repository")), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("triTooltip", null == ctx_r2.selectedRepository ? null : ctx_r2.selectedRepository.name), 
                core["\u0275\u0275attribute"]("data-testid", null == ctx_r2.selectedRepository ? null : ctx_r2.selectedRepository.name), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate"](null == ctx_r2.selectedRepository ? null : ctx_r2.selectedRepository.name), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](18, 24, "Trident_Git_Folder")), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("triTooltip", ctx_r2.selectedFolderName), 
                core["\u0275\u0275attribute"]("data-testid", ctx_r2.selectedFolderName), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275textInterpolate"](ctx_r2.selectedFolderName), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275property"]("ngIf", ctx_r2.isSwitchBranchEnabled)("ngIfElse", _r7);
            }
        }
        function GitConnectionDetailsSettingsComponent_div_5_tri_search_box_10_Template(rf, ctx) {
            if (1 & rf) {
                var _r39 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "tri-search-box", 38), core["\u0275\u0275listener"]("value", function($event) {
                    core["\u0275\u0275restoreView"](_r39);
                    var ctx_r38 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r38.onOrganizationsSearch($event));
                }), core["\u0275\u0275elementEnd"]();
            }
        }
        function GitConnectionDetailsSettingsComponent_div_5_tri_dropdown_item_11_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "tri-dropdown-item", 21)(1, "p"), 
            core["\u0275\u0275text"](2), core["\u0275\u0275elementEnd"]()()), 2 & rf) {
                var item_r40 = ctx.$implicit;
                core["\u0275\u0275property"]("title", item_r40.text)("value", item_r40), core["\u0275\u0275advance"](2), 
                core["\u0275\u0275textInterpolate"](item_r40.text);
            }
        }
        function GitConnectionDetailsSettingsComponent_div_5_tri_dropdown_item_12_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementStart"](0, "tri-dropdown-item", 22)(1, "p"), 
            core["\u0275\u0275text"](2), core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementEnd"]()()), 
            2 & rf && (core["\u0275\u0275property"]("disabled", !0), core["\u0275\u0275advance"](2), 
            core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](3, 2, "Trident_Git_Empty_Organizations_Dropdown")));
        }
        function GitConnectionDetailsSettingsComponent_div_5_div_13_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 39), core["\u0275\u0275element"](1, "tri-svg-icon", 40), 
            core["\u0275\u0275text"](2), core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r24 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", ctx_r24.organizationsError.message, " ");
            }
        }
        function GitConnectionDetailsSettingsComponent_div_5_tri_search_box_23_Template(rf, ctx) {
            if (1 & rf) {
                var _r42 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "tri-search-box", 38), core["\u0275\u0275listener"]("value", function($event) {
                    core["\u0275\u0275restoreView"](_r42);
                    var ctx_r41 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r41.onProjectsSearch($event));
                }), core["\u0275\u0275elementEnd"]();
            }
        }
        function GitConnectionDetailsSettingsComponent_div_5_tri_dropdown_item_24_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "tri-dropdown-item", 21)(1, "p"), 
            core["\u0275\u0275text"](2), core["\u0275\u0275elementEnd"]()()), 2 & rf) {
                var item_r43 = ctx.$implicit;
                core["\u0275\u0275property"]("title", item_r43.text)("value", item_r43), core["\u0275\u0275advance"](2), 
                core["\u0275\u0275textInterpolate"](item_r43.text);
            }
        }
        function GitConnectionDetailsSettingsComponent_div_5_tri_dropdown_item_25_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementStart"](0, "tri-dropdown-item", 22)(1, "p"), 
            core["\u0275\u0275text"](2), core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementEnd"]()()), 
            2 & rf && (core["\u0275\u0275property"]("disabled", !0), core["\u0275\u0275advance"](2), 
            core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](3, 2, "Trident_Git_Empty_Projects_Dropdown")));
        }
        function GitConnectionDetailsSettingsComponent_div_5_div_26_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 39), core["\u0275\u0275element"](1, "tri-svg-icon", 40), 
            core["\u0275\u0275text"](2), core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r28 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", ctx_r28.projectsError.message, " ");
            }
        }
        function GitConnectionDetailsSettingsComponent_div_5_tri_search_box_38_Template(rf, ctx) {
            if (1 & rf) {
                var _r45 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "tri-search-box", 38), core["\u0275\u0275listener"]("value", function($event) {
                    core["\u0275\u0275restoreView"](_r45);
                    var ctx_r44 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r44.onReposSearch($event));
                }), core["\u0275\u0275elementEnd"]();
            }
        }
        function GitConnectionDetailsSettingsComponent_div_5_tri_dropdown_item_40_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "tri-dropdown-item", 21)(1, "p"), 
            core["\u0275\u0275text"](2), core["\u0275\u0275elementEnd"]()()), 2 & rf) {
                var item_r46 = ctx.$implicit;
                core["\u0275\u0275property"]("title", item_r46.text)("value", item_r46), core["\u0275\u0275advance"](2), 
                core["\u0275\u0275textInterpolate"](item_r46.text);
            }
        }
        function GitConnectionDetailsSettingsComponent_div_5_tri_dropdown_item_41_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementStart"](0, "tri-dropdown-item", 22)(1, "p"), 
            core["\u0275\u0275text"](2), core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementEnd"]()()), 
            2 & rf && (core["\u0275\u0275property"]("disabled", !0), core["\u0275\u0275advance"](2), 
            core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](3, 2, "Trident_Git_Empty_Repositories_Dropdown")));
        }
        function GitConnectionDetailsSettingsComponent_div_5_div_42_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 39), core["\u0275\u0275element"](1, "tri-svg-icon", 40), 
            core["\u0275\u0275text"](2), core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r32 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", ctx_r32.repositoriesError.message, " ");
            }
        }
        function GitConnectionDetailsSettingsComponent_div_5_tri_search_box_54_Template(rf, ctx) {
            if (1 & rf) {
                var _r48 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "tri-search-box", 18), core["\u0275\u0275listener"]("value", function($event) {
                    core["\u0275\u0275restoreView"](_r48);
                    var ctx_r47 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r47.onBranchesSearch($event));
                }), core["\u0275\u0275elementEnd"]();
            }
        }
        function GitConnectionDetailsSettingsComponent_div_5_span_55_Template(rf, ctx) {
            if (1 & rf) {
                var _r50 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "span", 19)(1, "tri-dropdown-action", 20), core["\u0275\u0275listener"]("actionClicked", function() {
                    core["\u0275\u0275restoreView"](_r50);
                    var ctx_r49 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r49.onCreateBranchButtonClick());
                }), core["\u0275\u0275pipe"](2, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275element"](3, "hr"), 
                core["\u0275\u0275elementEnd"]();
            }
            2 & rf && (core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("text", core["\u0275\u0275pipeBind1"](2, 1, "Trident_Git_New_Branch")));
        }
        function GitConnectionDetailsSettingsComponent_div_5_tri_dropdown_item_57_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "tri-dropdown-item", 21)(1, "p"), 
            core["\u0275\u0275text"](2), core["\u0275\u0275elementEnd"]()()), 2 & rf) {
                var item_r51 = ctx.$implicit;
                core["\u0275\u0275property"]("title", item_r51.text)("value", item_r51), core["\u0275\u0275advance"](2), 
                core["\u0275\u0275textInterpolate"](item_r51.text);
            }
        }
        function GitConnectionDetailsSettingsComponent_div_5_tri_dropdown_item_58_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementStart"](0, "tri-dropdown-item", 22)(1, "p"), 
            core["\u0275\u0275text"](2), core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementEnd"]()()), 
            2 & rf && (core["\u0275\u0275property"]("disabled", !0), core["\u0275\u0275advance"](2), 
            core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](3, 2, "Trident_Git_Empty_Branches_Dropdown")));
        }
        function GitConnectionDetailsSettingsComponent_div_5_div_59_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 39), core["\u0275\u0275element"](1, "tri-svg-icon", 40), 
            core["\u0275\u0275text"](2), core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r37 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", ctx_r37.branchesError.message, " ");
            }
        }
        var git_connection_details_settings_component_c0 = function(a0) {
            return {
                "connection-loading": a0
            };
        };
        function GitConnectionDetailsSettingsComponent_div_5_Template(rf, ctx) {
            if (1 & rf) {
                var _r53 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div", 23)(1, "h4", 24), core["\u0275\u0275text"](2), 
                core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementStart"](4, "span", 11), 
                core["\u0275\u0275text"](5, " *"), core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementStart"](6, "tri-dropdown", 25), 
                core["\u0275\u0275listener"]("ngModelChange", function($event) {
                    core["\u0275\u0275restoreView"](_r53);
                    var ctx_r52 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r52.selectedOrganization = $event);
                })("valueChange", function($event) {
                    core["\u0275\u0275restoreView"](_r53);
                    var ctx_r54 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r54.onOrganizationChange($event));
                }), core["\u0275\u0275elementStart"](7, "tri-dropdown-trigger"), core["\u0275\u0275text"](8), 
                core["\u0275\u0275pipe"](9, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](10, GitConnectionDetailsSettingsComponent_div_5_tri_search_box_10_Template, 1, 0, "tri-search-box", 26), 
                core["\u0275\u0275template"](11, GitConnectionDetailsSettingsComponent_div_5_tri_dropdown_item_11_Template, 3, 3, "tri-dropdown-item", 16), 
                core["\u0275\u0275template"](12, GitConnectionDetailsSettingsComponent_div_5_tri_dropdown_item_12_Template, 4, 4, "tri-dropdown-item", 17), 
                core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](13, GitConnectionDetailsSettingsComponent_div_5_div_13_Template, 3, 1, "div", 27), 
                core["\u0275\u0275elementStart"](14, "h4", 28), core["\u0275\u0275text"](15), core["\u0275\u0275pipe"](16, "localize"), 
                core["\u0275\u0275elementStart"](17, "span", 11), core["\u0275\u0275text"](18, " *"), 
                core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementStart"](19, "tri-dropdown", 29), 
                core["\u0275\u0275listener"]("ngModelChange", function($event) {
                    core["\u0275\u0275restoreView"](_r53);
                    var ctx_r55 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r55.selectedProject = $event);
                })("valueChange", function($event) {
                    core["\u0275\u0275restoreView"](_r53);
                    var ctx_r56 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r56.onProjectChange($event));
                }), core["\u0275\u0275elementStart"](20, "tri-dropdown-trigger"), core["\u0275\u0275text"](21), 
                core["\u0275\u0275pipe"](22, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](23, GitConnectionDetailsSettingsComponent_div_5_tri_search_box_23_Template, 1, 0, "tri-search-box", 26), 
                core["\u0275\u0275template"](24, GitConnectionDetailsSettingsComponent_div_5_tri_dropdown_item_24_Template, 3, 3, "tri-dropdown-item", 16), 
                core["\u0275\u0275template"](25, GitConnectionDetailsSettingsComponent_div_5_tri_dropdown_item_25_Template, 4, 4, "tri-dropdown-item", 17), 
                core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](26, GitConnectionDetailsSettingsComponent_div_5_div_26_Template, 3, 1, "div", 27), 
                core["\u0275\u0275elementStart"](27, "h4", 30), core["\u0275\u0275text"](28), core["\u0275\u0275pipe"](29, "localize"), 
                core["\u0275\u0275elementStart"](30, "span", 11), core["\u0275\u0275text"](31, " *"), 
                core["\u0275\u0275elementEnd"](), core["\u0275\u0275element"](32, "tri-svg-icon", 12), 
                core["\u0275\u0275pipe"](33, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](34, "tri-dropdown", 31), 
                core["\u0275\u0275listener"]("ngModelChange", function($event) {
                    core["\u0275\u0275restoreView"](_r53);
                    var ctx_r57 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r57.selectedRepository = $event);
                })("valueChange", function($event) {
                    core["\u0275\u0275restoreView"](_r53);
                    var ctx_r58 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r58.onRepositoryChange($event));
                }), core["\u0275\u0275elementStart"](35, "tri-dropdown-trigger"), core["\u0275\u0275text"](36), 
                core["\u0275\u0275pipe"](37, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](38, GitConnectionDetailsSettingsComponent_div_5_tri_search_box_38_Template, 1, 0, "tri-search-box", 26), 
                core["\u0275\u0275elementStart"](39, "div", 32), core["\u0275\u0275template"](40, GitConnectionDetailsSettingsComponent_div_5_tri_dropdown_item_40_Template, 3, 3, "tri-dropdown-item", 16), 
                core["\u0275\u0275template"](41, GitConnectionDetailsSettingsComponent_div_5_tri_dropdown_item_41_Template, 4, 4, "tri-dropdown-item", 17), 
                core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275template"](42, GitConnectionDetailsSettingsComponent_div_5_div_42_Template, 3, 1, "div", 27), 
                core["\u0275\u0275elementStart"](43, "h4", 33), core["\u0275\u0275text"](44), core["\u0275\u0275pipe"](45, "localize"), 
                core["\u0275\u0275elementStart"](46, "span", 11), core["\u0275\u0275text"](47, " *"), 
                core["\u0275\u0275elementEnd"](), core["\u0275\u0275element"](48, "tri-svg-icon", 12), 
                core["\u0275\u0275pipe"](49, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](50, "tri-dropdown", 34), 
                core["\u0275\u0275listener"]("ngModelChange", function($event) {
                    core["\u0275\u0275restoreView"](_r53);
                    var ctx_r59 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r59.selectedBranch = $event);
                })("valueChange", function($event) {
                    core["\u0275\u0275restoreView"](_r53);
                    var ctx_r60 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r60.onBranchChange($event));
                }), core["\u0275\u0275elementStart"](51, "tri-dropdown-trigger"), core["\u0275\u0275text"](52), 
                core["\u0275\u0275pipe"](53, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](54, GitConnectionDetailsSettingsComponent_div_5_tri_search_box_54_Template, 1, 0, "tri-search-box", 14), 
                core["\u0275\u0275template"](55, GitConnectionDetailsSettingsComponent_div_5_span_55_Template, 4, 3, "span", 15), 
                core["\u0275\u0275elementStart"](56, "div", 32), core["\u0275\u0275template"](57, GitConnectionDetailsSettingsComponent_div_5_tri_dropdown_item_57_Template, 3, 3, "tri-dropdown-item", 16), 
                core["\u0275\u0275template"](58, GitConnectionDetailsSettingsComponent_div_5_tri_dropdown_item_58_Template, 4, 4, "tri-dropdown-item", 17), 
                core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275template"](59, GitConnectionDetailsSettingsComponent_div_5_div_59_Template, 3, 1, "div", 27), 
                core["\u0275\u0275elementStart"](60, "h4", 35), core["\u0275\u0275text"](61), core["\u0275\u0275pipe"](62, "localize"), 
                core["\u0275\u0275element"](63, "tri-svg-icon", 12), core["\u0275\u0275pipe"](64, "localize"), 
                core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](65, "div", 36)(66, "input", 37), 
                core["\u0275\u0275listener"]("ngModelChange", function($event) {
                    core["\u0275\u0275restoreView"](_r53);
                    var ctx_r61 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r61.onFolderNameChange($event));
                }), core["\u0275\u0275pipe"](67, "async"), core["\u0275\u0275pipe"](68, "localize"), 
                core["\u0275\u0275elementEnd"]()()();
            }
            if (2 & rf) {
                var tmp_8_0, tmp_9_0, tmp_20_0, tmp_21_0, tmp_35_0, tmp_36_0, tmp_50_0, tmp_51_0, ctx_r3 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("ngClass", core["\u0275\u0275pureFunction1"](91, git_connection_details_settings_component_c0, ctx_r3.connectionRequestInProgress)), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](3, 63, "Organization"), " "), 
                core["\u0275\u0275advance"](4), core["\u0275\u0275property"]("ngModel", ctx_r3.selectedOrganization)("options", ctx_r3.getDropdownOverlayOptions((null == ctx_r3.filteredOrganizationsList ? null : ctx_r3.filteredOrganizationsList.length) || 0, 5, 1))("disabled", !ctx_r3.organizationsList || null !== ctx_r3.organizationsError)("isLoading", !ctx_r3.organizationsList), 
                core["\u0275\u0275attribute"]("data-testid", "organization-dropdown")("data-isLoading", ctx_r3.organizationsList ? "false" : "true"), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", null !== (tmp_8_0 = null == ctx_r3.selectedOrganization ? null : ctx_r3.selectedOrganization.name) && void 0 !== tmp_8_0 ? tmp_8_0 : core["\u0275\u0275pipeBind1"](9, 65, "Organization"), " "), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", (null !== (tmp_9_0 = null == ctx_r3.organizationsList ? null : ctx_r3.organizationsList.length) && void 0 !== tmp_9_0 ? tmp_9_0 : 0) > 0), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngForOf", ctx_r3.filteredOrganizationsList), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", 0 === (null == ctx_r3.organizationsList ? null : ctx_r3.organizationsList.length)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", null !== ctx_r3.organizationsError && null !== ctx_r3.organizationsError.message), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](16, 67, "Trident_Git_Project"), " "), 
                core["\u0275\u0275advance"](4), core["\u0275\u0275property"]("ngModel", ctx_r3.selectedProject)("disabled", !ctx_r3.selectedOrganization || !ctx_r3.projectsList || null !== ctx_r3.projectsError)("isLoading", !!ctx_r3.selectedOrganization && !ctx_r3.projectsList)("options", ctx_r3.getDropdownOverlayOptions((null == ctx_r3.filteredProjectsList ? null : ctx_r3.filteredProjectsList.length) || 0, 5, 1)), 
                core["\u0275\u0275attribute"]("data-testid", "project-dropdown")("data-isLoading", ctx_r3.selectedOrganization && !ctx_r3.projectsList ? "true" : "false"), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", null !== (tmp_20_0 = null == ctx_r3.selectedProject ? null : ctx_r3.selectedProject.name) && void 0 !== tmp_20_0 ? tmp_20_0 : core["\u0275\u0275pipeBind1"](22, 69, "Trident_Git_Project"), " "), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", (null !== (tmp_21_0 = null == ctx_r3.projectsList ? null : ctx_r3.projectsList.length) && void 0 !== tmp_21_0 ? tmp_21_0 : 0) > 0), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngForOf", ctx_r3.filteredProjectsList), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", 0 === (null == ctx_r3.projectsList ? null : ctx_r3.projectsList.length)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", null !== ctx_r3.projectsError && null !== ctx_r3.projectsError.message), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](29, 71, "Trident_Git_Repository"), " "), 
                core["\u0275\u0275advance"](4), core["\u0275\u0275property"]("name", "info_16_regular")("triTooltip", core["\u0275\u0275pipeBind1"](33, 73, "Trident_Git_Repository_Tooltip"))("triTooltipMaxWidth", 240), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngModel", ctx_r3.selectedRepository)("disabled", !ctx_r3.selectedProject || !ctx_r3.repositoriesList || null !== ctx_r3.repositoriesError)("isLoading", !!ctx_r3.selectedProject && !ctx_r3.repositoriesList)("options", ctx_r3.getDropdownOverlayOptions((null == ctx_r3.filteredRepositoriesList ? null : ctx_r3.filteredRepositoriesList.length) || 0, 5, 1)), 
                core["\u0275\u0275attribute"]("data-testid", "repository-dropdown")("data-isLoading", ctx_r3.selectedProject && !ctx_r3.repositoriesList ? "true" : "false"), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", null !== (tmp_35_0 = null == ctx_r3.selectedRepository ? null : ctx_r3.selectedRepository.name) && void 0 !== tmp_35_0 ? tmp_35_0 : core["\u0275\u0275pipeBind1"](37, 75, "Trident_Git_Repository"), " "), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", (null !== (tmp_36_0 = null == ctx_r3.repositoriesList ? null : ctx_r3.repositoriesList.length) && void 0 !== tmp_36_0 ? tmp_36_0 : 0) > 0), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngForOf", ctx_r3.filteredRepositoriesList), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", 0 === (null == ctx_r3.repositoriesList ? null : ctx_r3.repositoriesList.length)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", null !== ctx_r3.repositoriesError && null !== ctx_r3.repositoriesError.message), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](45, 77, "Trident_Git_Branch"), " "), 
                core["\u0275\u0275advance"](4), core["\u0275\u0275property"]("name", "info_16_regular")("triTooltip", core["\u0275\u0275pipeBind1"](49, 79, "Trident_Git_Branch_Tooltip"))("triTooltipMaxWidth", 240), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngModel", ctx_r3.selectedBranch)("disabled", !ctx_r3.selectedRepository || !ctx_r3.branchesList || null !== ctx_r3.branchesError)("isLoading", !!ctx_r3.selectedRepository && !ctx_r3.branchesList)("options", ctx_r3.getDropdownOverlayOptions((null == ctx_r3.filteredBranchesList ? null : ctx_r3.filteredBranchesList.length) || 0, 5, 2)), 
                core["\u0275\u0275attribute"]("data-testid", "branch-dropdown")("data-isLoading", ctx_r3.selectedRepository && !ctx_r3.branchesList ? "true" : "false"), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", null !== (tmp_50_0 = null == ctx_r3.selectedBranch ? null : ctx_r3.selectedBranch.name) && void 0 !== tmp_50_0 ? tmp_50_0 : core["\u0275\u0275pipeBind1"](53, 81, "Trident_Git_Branch"), " "), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", (null !== (tmp_51_0 = null == ctx_r3.branchesList ? null : ctx_r3.branchesList.length) && void 0 !== tmp_51_0 ? tmp_51_0 : 0) > 0), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", 0 !== (null == ctx_r3.filteredBranchesList ? null : ctx_r3.filteredBranchesList.length)), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngForOf", ctx_r3.filteredBranchesList), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", 0 === (null == ctx_r3.branchesList ? null : ctx_r3.branchesList.length)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", null !== ctx_r3.branchesError && null !== ctx_r3.branchesError.message), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](62, 83, "Trident_Git_Folder"), " "), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("name", "info_16_regular")("triTooltip", core["\u0275\u0275pipeBind1"](64, 85, "Trident_Git_Folder_Tooltip"))("triTooltipMaxWidth", 240), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("disabled", core["\u0275\u0275pipeBind1"](67, 87, ctx_r3.folderInputDisabled$))("ngModel", ctx_r3.selectedFolderName)("placeholder", core["\u0275\u0275pipeBind1"](68, 89, "Trident_Git_Select_Folder"));
            }
        }
        function GitConnectionDetailsSettingsComponent_div_6_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementStart"](0, "div")(1, "div", 41), core["\u0275\u0275text"](2), 
            core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementEnd"]()()), 2 & rf && (core["\u0275\u0275advance"](2), 
            core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](3, 1, "Trident_Git_Connect_Permission")));
        }
        function GitConnectionDetailsSettingsComponent_div_7_div_1_button_1_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementStart"](0, "button", 48), core["\u0275\u0275element"](1, "tri-spinner", 49), 
            core["\u0275\u0275text"](2), core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementEnd"]()), 
            2 & rf && (core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](3, 1, "Trident_Git_Switch_Branch_Button_In_Progress"), " "));
        }
        function GitConnectionDetailsSettingsComponent_div_7_div_1_ng_template_2_Template(rf, ctx) {
            if (1 & rf) {
                var _r69 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "button", 50), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r69);
                    var ctx_r68 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r68.onSwitchBranchButtonClick());
                }), core["\u0275\u0275pipe"](1, "async"), core["\u0275\u0275text"](2), core["\u0275\u0275pipe"](3, "localize"), 
                core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r67 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275property"]("disabled", core["\u0275\u0275pipeBind1"](1, 3, ctx_r67.switchButtonDisabled$)), 
                core["\u0275\u0275attribute"]("data-testid", "switch-branch-button"), core["\u0275\u0275advance"](2), 
                core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](3, 5, "Trident_Git_Switch_Branch_Button_Text"), " ");
            }
        }
        function GitConnectionDetailsSettingsComponent_div_7_div_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r71 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div", 42), core["\u0275\u0275template"](1, GitConnectionDetailsSettingsComponent_div_7_div_1_button_1_Template, 4, 3, "button", 45), 
                core["\u0275\u0275template"](2, GitConnectionDetailsSettingsComponent_div_7_div_1_ng_template_2_Template, 4, 7, "ng-template", null, 46, core["\u0275\u0275templateRefExtractor"]), 
                core["\u0275\u0275elementStart"](4, "button", 47), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r71);
                    var ctx_r70 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r70.onCancelSwitchButtonClick());
                }), core["\u0275\u0275pipe"](5, "async"), core["\u0275\u0275text"](6), core["\u0275\u0275pipe"](7, "localize"), 
                core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var _r66 = core["\u0275\u0275reference"](3), ctx_r62 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx_r62.switchBranchRequestInProgress)("ngIfElse", _r66), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("disabled", core["\u0275\u0275pipeBind1"](5, 5, ctx_r62.cancelSwitchButtonDisabled$)), 
                core["\u0275\u0275attribute"]("data-testid", "cancel-switch-button"), core["\u0275\u0275advance"](2), 
                core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](7, 7, "Cancel_ButtonText"), " ");
            }
        }
        function GitConnectionDetailsSettingsComponent_div_7_ng_template_3_button_0_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementStart"](0, "button", 48), core["\u0275\u0275element"](1, "tri-spinner", 49), 
            core["\u0275\u0275text"](2), core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementEnd"]()), 
            2 & rf && (core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](3, 1, "UploadExcel_OneDriveProConnecting"), " "));
        }
        function GitConnectionDetailsSettingsComponent_div_7_ng_template_3_ng_template_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r76 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "button", 50), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r76);
                    var ctx_r75 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r75.onConnectButtonClick());
                }), core["\u0275\u0275pipe"](1, "async"), core["\u0275\u0275text"](2), core["\u0275\u0275pipe"](3, "localize"), 
                core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](4, "button", 47), 
                core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r76);
                    var ctx_r77 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r77.onCancelButtonClick());
                }), core["\u0275\u0275pipe"](5, "async"), core["\u0275\u0275text"](6), core["\u0275\u0275pipe"](7, "localize"), 
                core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r74 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275property"]("disabled", core["\u0275\u0275pipeBind1"](1, 6, ctx_r74.connectButtonDisabled$)), 
                core["\u0275\u0275attribute"]("data-testid", "connect-button"), core["\u0275\u0275advance"](2), 
                core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](3, 8, "Trident_Git_Connect_And_Sync"), " "), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("disabled", core["\u0275\u0275pipeBind1"](5, 10, ctx_r74.cancelButtonDisabled$)), 
                core["\u0275\u0275attribute"]("data-testid", "cancel-button"), core["\u0275\u0275advance"](2), 
                core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](7, 12, "Cancel_ButtonText"), " ");
            }
        }
        function GitConnectionDetailsSettingsComponent_div_7_ng_template_3_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275template"](0, GitConnectionDetailsSettingsComponent_div_7_ng_template_3_button_0_Template, 4, 3, "button", 45), 
            core["\u0275\u0275template"](1, GitConnectionDetailsSettingsComponent_div_7_ng_template_3_ng_template_1_Template, 8, 14, "ng-template", null, 51, core["\u0275\u0275templateRefExtractor"])), 
            2 & rf) {
                var _r73 = core["\u0275\u0275reference"](2), ctx_r64 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275property"]("ngIf", ctx_r64.connectionRequestInProgress || ctx_r64.switchBranchRequestInProgress)("ngIfElse", _r73);
            }
        }
        function GitConnectionDetailsSettingsComponent_div_7_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 42), core["\u0275\u0275template"](1, GitConnectionDetailsSettingsComponent_div_7_div_1_Template, 8, 9, "div", 43), 
            core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275template"](3, GitConnectionDetailsSettingsComponent_div_7_ng_template_3_Template, 3, 2, "ng-template", null, 44, core["\u0275\u0275templateRefExtractor"]), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var _r63 = core["\u0275\u0275reference"](4), ctx_r5 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](2, 2, ctx_r5.showSwitchButton$))("ngIfElse", _r63);
            }
        }
        var DisplayMode = function(DisplayMode) {
            return DisplayMode[DisplayMode.Loading = 0] = "Loading", DisplayMode[DisplayMode.Connected = 1] = "Connected", 
            DisplayMode[DisplayMode.NotConnected = 2] = "NotConnected", DisplayMode[DisplayMode.NotConnectedAdmin = 3] = "NotConnectedAdmin", 
            DisplayMode;
        }({}), GitConnectionDetailsSettingsComponent = function(_super) {
            function GitConnectionDetailsSettingsComponent(telemetryService, localizationService, dialogService, featureSwitchService) {
                var _this = _super.call(this) || this;
                return _this.telemetryService = telemetryService, _this.localizationService = localizationService, 
                _this.dialogService = dialogService, _this.featureSwitchService = featureSwitchService, 
                _this.isOnCapacity = !1, _this.connectionRequestInProgress = !1, _this.switchBranchRequestInProgress = null, 
                _this.workspaceMemberRole = null, _this.organizationsList = null, _this.organizationsError = null, 
                _this.selectedOrganization = null, _this.organizationChange = new core.EventEmitter, 
                _this.projectsList = null, _this.projectsError = null, _this.selectedProject = null, 
                _this.projectChange = new core.EventEmitter, _this.repositoriesList = null, _this.repositoriesError = null, 
                _this.selectedRepository = null, _this.repositoryChange = new core.EventEmitter, 
                _this.branchesList = null, _this.branchesError = null, _this.selectedBranch = null, 
                _this.branchChange = new core.EventEmitter, _this.selectedFolderName = null, _this.folderNameChange = new core.EventEmitter, 
                _this.newBranchState = null, _this.createNewBranchChange = new core.EventEmitter, 
                _this.connectButtonClick = new core.EventEmitter, _this.switchBranchButtonClick = new core.EventEmitter, 
                _this.cancelButtonClick = new core.EventEmitter, _this.cancelSwitchButtonClick = new core.EventEmitter, 
                _this.workspaceAdminPermissions$ = (0, of.of)(!1), _this.showSwitchButton$ = (0, 
                of.of)(!1), _this.FolderMememberRole = manage_access_shared_src.R7, _this.DisplayMode = DisplayMode, 
                _this.displayMode$ = (0, of.of)(DisplayMode.Loading), _this.folderInputDisabled$ = new BehaviorSubject.X(!0), 
                _this.isDifferentBranchSelected$ = new BehaviorSubject.X(!1), _this.connectButtonDisabled$ = new BehaviorSubject.X(!0), 
                _this.cancelButtonDisabled$ = new BehaviorSubject.X(!0), _this.switchButtonDisabled$ = new BehaviorSubject.X(!0), 
                _this.cancelSwitchButtonDisabled$ = new BehaviorSubject.X(!0), _this.branchStateNotification$ = new BehaviorSubject.X(null), 
                _this.isSwitchBranchEnabled = !1, _this.connectedBranch = null, _this.organizationSearchInput = "", 
                _this.filteredOrganizationsList = null, _this.projectSearchInput = "", _this.filteredProjectsList = null, 
                _this.branchSearchInput = "", _this.filteredBranchesList = null, _this.repoSearchInput = "", 
                _this.filteredRepositoriesList = null, _this;
            }
            return (0, tslib_es6.__extends)(GitConnectionDetailsSettingsComponent, _super), 
            Object.defineProperty(GitConnectionDetailsSettingsComponent.prototype, "isConnected", {
                get: function() {
                    return !!this._isConnected;
                },
                set: function(value) {
                    this._isConnected = value;
                },
                enumerable: !1,
                configurable: !0
            }), GitConnectionDetailsSettingsComponent.prototype.ngOnInit = function() {
                var _this = this;
                this.changes$("isConnected").pipe((0, filter.h)(function(connected) {
                    return !connected;
                }), (0, takeUntil.R)(this.onDestroy$)).subscribe(function() {
                    _this.setOnDisconnectTriggers();
                }), this.changes$("newBranchState").pipe((0, filter.h)(function(change) {
                    return !!change;
                }), (0, takeUntil.R)(this.onDestroy$)).subscribe(function(change) {
                    _this.branchStateNotification$.next(change), (0, git_src.pb)(change) || (_this.setConnectButtonAndFolderSelection(!1), 
                    _this.isSwitchBranchEnabled && _this.setSwitchBranchButtonsState(!1));
                }), this.changes$("switchBranchRequestInProgress").pipe((0, takeUntil.R)(this.onDestroy$)).subscribe(function(inProgress) {
                    null !== inProgress && _this.cancelSwitchButtonDisabled$.next(inProgress);
                }), this.displayMode$ = (0, combineLatest.aj)([ this.changes$("isConnected"), this.changes$("workspaceMemberRole") ]).pipe((0, 
                tap.b)(function(_a) {
                    _this.isSwitchBranchEnabled = (0, manage_access_shared_src.GJ)(_a[1]) && _this.isOnCapacity && !!_this.featureSwitchService.featureSwitches.tridentGitSwitchBranch;
                }), (0, map.U)(function(_a) {
                    return _this.determineDisplayMode(_a[0], _a[1]);
                })), this.workspaceAdminPermissions$ = this.changes$("workspaceMemberRole").pipe((0, 
                filter.h)(function(role) {
                    return null != role;
                }), (0, take.q)(1), (0, map.U)(function(role) {
                    return (0, manage_access_shared_src.GJ)(role);
                })), this.connectedBranch = this.selectedBranch, this.showSwitchButton$ = this.displayMode$.pipe((0, 
                map.U)(function(displayMode) {
                    return _this.isSwitchBranchEnabled && displayMode === DisplayMode.Connected;
                })), this.changes$("organizationsList").pipe((0, takeUntil.R)(this.onDestroy$)).subscribe(function(orgListChange) {
                    _this.organizationsList = orgListChange, _this.filteredOrganizationsList = orgListChange;
                }), this.changes$("projectsList").pipe((0, takeUntil.R)(this.onDestroy$)).subscribe(function(projectsListChange) {
                    _this.projectsList = projectsListChange, _this.filteredProjectsList = projectsListChange;
                }), this.changes$("branchesList").pipe((0, takeUntil.R)(this.onDestroy$)).subscribe(function(branchesListChange) {
                    _this.branchesList = branchesListChange, _this.filteredBranchesList = branchesListChange;
                }), this.changes$("repositoriesList").pipe((0, takeUntil.R)(this.onDestroy$)).subscribe(function(repoListChange) {
                    _this.repositoriesList = repoListChange, _this.filteredRepositoriesList = repoListChange;
                });
            }, GitConnectionDetailsSettingsComponent.prototype.onOrganizationChange = function(selectedOrganization) {
                this.selectedOrganization = {
                    name: selectedOrganization.text
                }, this.organizationChange.emit(this.selectedOrganization), this.setConnectButtonAndFolderSelection(!0), 
                this.cancelButtonDisabled$.next(!1);
            }, GitConnectionDetailsSettingsComponent.prototype.onProjectChange = function(selectedProject) {
                this.selectedProject = {
                    name: selectedProject.text
                }, this.projectChange.emit(this.selectedProject), this.setConnectButtonAndFolderSelection(!0);
            }, GitConnectionDetailsSettingsComponent.prototype.onRepositoryChange = function(selectedRepository) {
                this.selectedRepository = {
                    name: selectedRepository.text
                }, this.repositoryChange.emit(this.selectedRepository), this.setConnectButtonAndFolderSelection(!0);
            }, GitConnectionDetailsSettingsComponent.prototype.onBranchChange = function(incomingBranch) {
                var _a, isConnected = null != this.connectedBranch;
                if (this.isDifferentBranchSelected$.next(isConnected), this.selectedBranch = {
                    name: incomingBranch.text
                }, isConnected) {
                    var isSame = (null === (_a = this.connectedBranch) || void 0 === _a ? void 0 : _a.name) === this.selectedBranch.name;
                    this.setSwitchBranchButtonsState(isSame);
                }
                this.branchChange.emit(this.selectedBranch), this.setConnectButtonAndFolderSelection(isConnected);
            }, GitConnectionDetailsSettingsComponent.prototype.onFolderNameChange = function(selectedFolderName) {
                this.selectedFolderName = selectedFolderName, this.folderNameChange.emit(selectedFolderName);
            }, GitConnectionDetailsSettingsComponent.prototype.onConnectButtonClick = function() {
                this.connectButtonClick.emit();
            }, GitConnectionDetailsSettingsComponent.prototype.onSwitchBranchButtonClick = function() {
                this.switchBranchButtonClick.emit();
            }, GitConnectionDetailsSettingsComponent.prototype.onCancelButtonClick = function() {
                this.setConnectButtonAndFolderSelection(!0), this.cancelButtonDisabled$.next(!0), 
                this.cancelButtonClick.emit();
            }, GitConnectionDetailsSettingsComponent.prototype.onCancelSwitchButtonClick = function() {
                this.selectedBranch = this.connectedBranch, this.isDifferentBranchSelected$.next(!1), 
                this.setSwitchBranchButtonsState(!0), this.cancelSwitchButtonClick.emit();
            }, GitConnectionDetailsSettingsComponent.prototype.onCreateBranchButtonClick = function() {
                this.branchStateNotification$.next(null);
                var createBranchDialogData = {
                    data: {
                        branchesList: this.branchesList,
                        newBranchState$: this.branchStateNotification$.asObservable(),
                        isWorkspaceConnected: this.isConnected,
                        createNewBranchChange: this.createNewBranchChange
                    }
                };
                this.telemetryService.logEvent({
                    name: "Open create branch dialog",
                    properties: {
                        isWorkspaceConnected: this.isConnected
                    }
                }), this.dialogService.open(GitConnectionCreateBranchComponent, createBranchDialogData).afterClosed().pipe((0, 
                take.q)(1)).subscribe();
            }, GitConnectionDetailsSettingsComponent.prototype.getDropdownOverlayOptions = function(itemsCount, maxSize, actionsCount) {
                return void 0 === maxSize && (maxSize = 5), void 0 === actionsCount && (actionsCount = 0), 
                {
                    dropdownHeight: this.calcDropdownHeight(0 === itemsCount ? 0 : itemsCount + actionsCount, maxSize),
                    dropdownMaxWidth: 360,
                    showFullContent: !1
                };
            }, GitConnectionDetailsSettingsComponent.prototype.setSwitchBranchButtonsState = function(toggle) {
                this.switchButtonDisabled$.next(toggle), this.cancelSwitchButtonDisabled$.next(toggle);
            }, GitConnectionDetailsSettingsComponent.prototype.setConnectButtonAndFolderSelection = function(toggle) {
                this.folderInputDisabled$.next(toggle), this.connectButtonDisabled$.next(toggle);
            }, GitConnectionDetailsSettingsComponent.prototype.setSwitchBranchButtonVisibility = function(toggle) {
                this.isDifferentBranchSelected$.next(toggle);
            }, GitConnectionDetailsSettingsComponent.prototype.calcDropdownHeight = function(itemsCount, maxItemsCount) {
                return function(itemsCount) {
                    return 0 === itemsCount || 1 === itemsCount ? 46 : itemsCount > 0 ? itemsCount <= 10 ? 36 * itemsCount + 2 * (itemsCount - 1) + 10 : 388 : 10;
                }(itemsCount > maxItemsCount ? maxItemsCount : itemsCount);
            }, GitConnectionDetailsSettingsComponent.prototype.determineDisplayMode = function(isConnected, role) {
                return null === role ? DisplayMode.Loading : isConnected ? DisplayMode.Connected : role === manage_access_shared_src.R7.Admin ? DisplayMode.NotConnectedAdmin : DisplayMode.NotConnected;
            }, GitConnectionDetailsSettingsComponent.prototype.setOnDisconnectTriggers = function() {
                this.setConnectButtonAndFolderSelection(!0), this.setSwitchBranchButtonVisibility(!1), 
                this.connectedBranch = null;
            }, GitConnectionDetailsSettingsComponent.prototype.onOrganizationsSearch = function(searchTerm) {
                var _a;
                this.filteredOrganizationsList = this.filterListAndSearch(null !== (_a = this.organizationsList) && void 0 !== _a ? _a : [], searchTerm);
            }, GitConnectionDetailsSettingsComponent.prototype.onProjectsSearch = function(searchTerm) {
                var _a;
                this.filteredProjectsList = this.filterListAndSearch(null !== (_a = this.projectsList) && void 0 !== _a ? _a : [], searchTerm);
            }, GitConnectionDetailsSettingsComponent.prototype.onBranchesSearch = function(searchTerm) {
                var _a;
                this.filteredBranchesList = this.filterListAndSearch(null !== (_a = this.branchesList) && void 0 !== _a ? _a : [], searchTerm);
            }, GitConnectionDetailsSettingsComponent.prototype.onReposSearch = function(searchTerm) {
                var _a;
                this.filteredRepositoriesList = this.filterListAndSearch(null !== (_a = this.repositoriesList) && void 0 !== _a ? _a : [], searchTerm);
            }, GitConnectionDetailsSettingsComponent.prototype.getNoBranchesInRepoMessagBarViewModel = function() {
                return getNoBranchesInRepoMessagBarViewModel(this.localizationService);
            }, GitConnectionDetailsSettingsComponent.prototype.filterListAndSearch = function(listToFilter, searchTerm) {
                return listToFilter.filter(function(item) {
                    var _a, _b;
                    return !searchTerm || (null === (_b = null === (_a = item.text) || void 0 === _a ? void 0 : _a.toLowerCase()) || void 0 === _b ? void 0 : _b.includes(searchTerm.toLowerCase()));
                });
            }, GitConnectionDetailsSettingsComponent.\u0275fac = function(t) {
                return new (t || GitConnectionDetailsSettingsComponent)(core["\u0275\u0275directiveInject"](telemetry_service.t), core["\u0275\u0275directiveInject"](localization_service.z), core["\u0275\u0275directiveInject"](dialogService.j), core["\u0275\u0275directiveInject"](feature_switch_service.V$));
            }, GitConnectionDetailsSettingsComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: GitConnectionDetailsSettingsComponent,
                selectors: [ [ "tri-git-connection-details-settings" ] ],
                inputs: {
                    isConnected: "isConnected",
                    isOnCapacity: "isOnCapacity",
                    connectionRequestInProgress: "connectionRequestInProgress",
                    switchBranchRequestInProgress: "switchBranchRequestInProgress",
                    workspaceMemberRole: "workspaceMemberRole",
                    organizationsList: "organizationsList",
                    organizationsError: "organizationsError",
                    selectedOrganization: "selectedOrganization",
                    projectsList: "projectsList",
                    projectsError: "projectsError",
                    selectedProject: "selectedProject",
                    repositoriesList: "repositoriesList",
                    repositoriesError: "repositoriesError",
                    selectedRepository: "selectedRepository",
                    branchesList: "branchesList",
                    branchesError: "branchesError",
                    selectedBranch: "selectedBranch",
                    selectedFolderName: "selectedFolderName",
                    newBranchState: "newBranchState"
                },
                outputs: {
                    organizationChange: "organizationChange",
                    projectChange: "projectChange",
                    repositoryChange: "repositoryChange",
                    branchChange: "branchChange",
                    folderNameChange: "folderNameChange",
                    createNewBranchChange: "createNewBranchChange",
                    connectButtonClick: "connectButtonClick",
                    switchBranchButtonClick: "switchBranchButtonClick",
                    cancelButtonClick: "cancelButtonClick",
                    cancelSwitchButtonClick: "cancelSwitchButtonClick"
                },
                features: [ core["\u0275\u0275InheritDefinitionFeature"] ],
                decls: 9,
                vars: 11,
                consts: [ [ 1, "container", 3, "ngSwitch" ], [ "class", "no_branches_in_repo_message_bar", 3, "viewModel", 4, "ngIf" ], [ 4, "ngSwitchCase" ], [ 3, "ngClass", 4, "ngSwitchCase" ], [ "class", "footer", 4, "ngIf" ], [ 1, "no_branches_in_repo_message_bar", 3, "viewModel" ], [ "delay", "0" ], [ 1, "field", 3, "triTooltip" ], [ 4, "ngIf", "ngIfElse" ], [ "switchBranchDisabled", "" ], [ "id", "switch-branch-dropdown-label", 1, "with-tooltip" ], [ 1, "star" ], [ "tabindex", "0", 3, "name", "triTooltip", "triTooltipMaxWidth" ], [ "aria-labelledby", "switch-branch-dropdown-label", 1, "field", 3, "ngModel", "disabled", "isLoading", "options", "ngModelChange", "valueChange" ], [ "class", "dropdown-search-with-divider", 3, "value", 4, "ngIf" ], [ "class", "action-and-divider", 4, "ngIf" ], [ 3, "title", "value", 4, "ngFor", "ngForOf" ], [ "class", "empty-dropdown-message", 3, "disabled", 4, "ngIf" ], [ 1, "dropdown-search-with-divider", 3, "value" ], [ 1, "action-and-divider" ], [ "icon", "add_16_regular", 3, "text", "actionClicked" ], [ 3, "title", "value" ], [ 1, "empty-dropdown-message", 3, "disabled" ], [ 3, "ngClass" ], [ "id", "select-organization-dropdown" ], [ "aria-labelledby", "select-organization-dropdown", 1, "field", 3, "ngModel", "options", "disabled", "isLoading", "ngModelChange", "valueChange" ], [ "class", "dropdown-search", 3, "value", 4, "ngIf" ], [ "class", "tri-flex error-message-container", 4, "ngIf" ], [ "id", "select-project-dropdown" ], [ "aria-labelledby", "select-project-dropdown", 1, "field", 3, "ngModel", "disabled", "isLoading", "options", "ngModelChange", "valueChange" ], [ "id", "select-repository-dropdown", 1, "with-tooltip" ], [ "aria-labelledby", "select-repository-dropdown", 1, "field", 3, "ngModel", "disabled", "isLoading", "options", "ngModelChange", "valueChange" ], [ "tabindex", "0" ], [ "id", "select-branch-dropdown", 1, "with-tooltip" ], [ "aria-labelledby", "select-branch-dropdown", 1, "field", 3, "ngModel", "disabled", "isLoading", "options", "ngModelChange", "valueChange" ], [ "id", "select-folder-input", 1, "with-tooltip" ], [ 1, "field", "folder" ], [ "aria-labelledby", "select-folder-input", 3, "disabled", "ngModel", "placeholder", "ngModelChange" ], [ 1, "dropdown-search", 3, "value" ], [ 1, "tri-flex", "error-message-container" ], [ "name", "error_circle_12_filled", 1, "error-message-icon" ], [ 1, "subtitle" ], [ 1, "footer" ], [ "class", "footer", 4, "ngIf", "ngIfElse" ], [ "connectButton", "" ], [ "tri-button", "", "appearance", "primary", "class", "connect-and-sync-button in-progress", 4, "ngIf", "ngIfElse" ], [ "switchActive", "" ], [ "tri-button", "", 1, "cancel-button", 3, "disabled", "click" ], [ "tri-button", "", "appearance", "primary", 1, "connect-and-sync-button", "in-progress" ], [ "size", "tiny", "labelPosition", "after" ], [ "tri-button", "", "appearance", "primary", 1, "connect-and-sync-button", 3, "disabled", "click" ], [ "connectActive", "" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementStart"](0, "div", 0), core["\u0275\u0275pipe"](1, "async"), 
                    core["\u0275\u0275template"](2, GitConnectionDetailsSettingsComponent_tri_message_bar_2_Template, 1, 1, "tri-message-bar", 1), 
                    core["\u0275\u0275template"](3, GitConnectionDetailsSettingsComponent_div_3_Template, 2, 0, "div", 2), 
                    core["\u0275\u0275template"](4, GitConnectionDetailsSettingsComponent_div_4_Template, 24, 26, "div", 2), 
                    core["\u0275\u0275template"](5, GitConnectionDetailsSettingsComponent_div_5_Template, 69, 93, "div", 3), 
                    core["\u0275\u0275template"](6, GitConnectionDetailsSettingsComponent_div_6_Template, 4, 3, "div", 2), 
                    core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](7, GitConnectionDetailsSettingsComponent_div_7_Template, 5, 4, "div", 4), 
                    core["\u0275\u0275pipe"](8, "async")), 2 & rf && (core["\u0275\u0275property"]("ngSwitch", core["\u0275\u0275pipeBind1"](1, 7, ctx.displayMode$)), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", 0 === (null == ctx.branchesList ? null : ctx.branchesList.length)), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", ctx.DisplayMode.Loading), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", ctx.DisplayMode.Connected), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", ctx.DisplayMode.NotConnectedAdmin), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", ctx.DisplayMode.NotConnected), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](8, 9, ctx.workspaceAdminPermissions$)));
                },
                dependencies: [ common.NgClass, common.NgForOf, common.NgIf, common.NgSwitch, common.NgSwitchCase, fesm2022_forms.Fj, fesm2022_forms.JJ, fesm2022_forms.On, tri_dropdown_component.M3, tri_dropdown_item_component.l, TriDropdownActionComponent, tri_dropdown_item_menu_directive.q, tri_dropdown_component.ii, tri_message_bar_component.h, tri_search_box_component.U, tri_spinner_component.D, tri_svg_icon_component.M, tri_tooltip_directive.Z, common.AsyncPipe, localize_pipe.Y ],
                styles: [ "tri-collapsed-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:stretch;justify-content:center;margin-bottom:16px}tri-dropdown-item[_ngcontent-%COMP%]{font-size:14px}tri-dropdown-item.empty-dropdown-message[_ngcontent-%COMP%]{display:flex;flex-direction:row;align-items:center;height:32px}tri-dropdown-item.empty-dropdown-message[_ngcontent-%COMP%]   .span[_ngcontent-%COMP%]{margin-left:4px}.no_branches_in_repo_message_bar[_ngcontent-%COMP%]{padding-top:12px}.container[_ngcontent-%COMP%]{display:flex;flex-direction:column;height:100%;font-size:14px;margin-bottom:16px}.container[_ngcontent-%COMP%]   h4[_ngcontent-%COMP%]{font-size:14px;font-weight:600;margin-bottom:6px}.container[_ngcontent-%COMP%]   h4.with-tooltip[_ngcontent-%COMP%]{margin-bottom:2px}.container[_ngcontent-%COMP%]   h4[_ngcontent-%COMP%]   span.star[_ngcontent-%COMP%]{color:var(--globalColorRedShade10)}.container[_ngcontent-%COMP%]   h4[_ngcontent-%COMP%]   tri-svg-icon[_ngcontent-%COMP%]{fill:var(--globalColorGrey38);height:16px;width:16px;margin-left:6px;margin-bottom:6px}.container[_ngcontent-%COMP%]   .field[_ngcontent-%COMP%]{width:100%;max-width:360px;overflow-x:hidden;text-overflow:ellipsis}.container[_ngcontent-%COMP%]   .subtitle[_ngcontent-%COMP%]{margin-top:14px}.container[_ngcontent-%COMP%]   tri-dropdown[_ngcontent-%COMP%]{color:var(--colorNeutralForeground4);box-sizing:border-box}.container[_ngcontent-%COMP%]   tri-dropdown[_ngcontent-%COMP%]     button{padding:6px 6px 6px 3px;border-bottom:1px solid var(--globalColorGrey38);border-radius:var(--button-base-corner-radius)}.container[_ngcontent-%COMP%]   .folder[_ngcontent-%COMP%]{margin-bottom:16px}input[_ngcontent-%COMP%]{height:18px;width:inherit;padding:6px 8px;max-width:340px;border-radius:4px;border:1px solid var(--globalColorGrey82)}input[_ngcontent-%COMP%]:not(:disabled){border-bottom:1px solid var(--globalColorGrey38)}input[_ngcontent-%COMP%]:not(:disabled):focus{outline:none;border-bottom:2px solid var(--globalColorBrand80)}input[_ngcontent-%COMP%]:disabled{opacity:.4}.dropdown-search[_ngcontent-%COMP%]{width:100%}.dropdown-search-with-divider[_ngcontent-%COMP%]{width:100%;margin-bottom:2px}.action-and-divider[_ngcontent-%COMP%]   hr[_ngcontent-%COMP%]{border:none;border-top:1px solid var(--globalColorGrey88);width:100%;margin-top:3px;margin-bottom:4px}.footer[_ngcontent-%COMP%]{display:flex;flex-direction:row;align-items:center;gap:8px}.footer[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{padding:6px 12px;border-radius:4px}.footer[_ngcontent-%COMP%]   .connect-and-sync-button[_ngcontent-%COMP%]{min-width:136px}.footer[_ngcontent-%COMP%]   .cancel-button[_ngcontent-%COMP%]{min-width:66px}div.connection-loading[_ngcontent-%COMP%]{pointer-events:none;opacity:.4}" ],
                changeDetection: 0
            }), GitConnectionDetailsSettingsComponent;
        }(rx_component.w), GitConnectionDetailsSettingsV2ComponentState = function(GitConnectionDetailsSettingsV2ComponentState) {
            return GitConnectionDetailsSettingsV2ComponentState[GitConnectionDetailsSettingsV2ComponentState.NotConnected = 0] = "NotConnected", 
            GitConnectionDetailsSettingsV2ComponentState[GitConnectionDetailsSettingsV2ComponentState.Connected = 1] = "Connected", 
            GitConnectionDetailsSettingsV2ComponentState[GitConnectionDetailsSettingsV2ComponentState.NonAdmin = 2] = "NonAdmin", 
            GitConnectionDetailsSettingsV2ComponentState[GitConnectionDetailsSettingsV2ComponentState.Admin = 4] = "Admin", 
            GitConnectionDetailsSettingsV2ComponentState[GitConnectionDetailsSettingsV2ComponentState.FixedRepository = 8] = "FixedRepository", 
            GitConnectionDetailsSettingsV2ComponentState[GitConnectionDetailsSettingsV2ComponentState.NotOnCapacity = 16] = "NotOnCapacity", 
            GitConnectionDetailsSettingsV2ComponentState[GitConnectionDetailsSettingsV2ComponentState.NotConfigured = 32] = "NotConfigured", 
            GitConnectionDetailsSettingsV2ComponentState;
        }({}), ButtonDisplayMode = function(ButtonDisplayMode) {
            return ButtonDisplayMode[ButtonDisplayMode.Hidden = 0] = "Hidden", ButtonDisplayMode[ButtonDisplayMode.ConnectAndSync = 1] = "ConnectAndSync", 
            ButtonDisplayMode[ButtonDisplayMode.SwitchBranch = 2] = "SwitchBranch", ButtonDisplayMode;
        }({}), FieldDisplayMode = function(FieldDisplayMode) {
            return FieldDisplayMode[FieldDisplayMode.Hidden = 0] = "Hidden", FieldDisplayMode[FieldDisplayMode.Fixed = 1] = "Fixed", 
            FieldDisplayMode[FieldDisplayMode.Textbox = 2] = "Textbox", FieldDisplayMode[FieldDisplayMode.Dropdown = 3] = "Dropdown", 
            FieldDisplayMode;
        }({}), c_allHiddenConfig = {
            repository: FieldDisplayMode.Hidden,
            branch: FieldDisplayMode.Hidden,
            directory: FieldDisplayMode.Hidden,
            button: ButtonDisplayMode.Hidden
        }, c_allFixedConfig = {
            repository: FieldDisplayMode.Fixed,
            branch: FieldDisplayMode.Fixed,
            directory: FieldDisplayMode.Fixed,
            button: ButtonDisplayMode.Hidden
        }, c_invalidCharacters = [ '"', ":", "<", ">", "\\", "*", "?", "|" ], c_invalidSuffixCharacters = [ " ", "." ], c_invalidPrefixCharacters = [ " " ], componentStateToConfigGitHub = {
            getComponentConfig: function(state) {
                var config;
                switch (state & ~(GitConnectionDetailsSettingsV2ComponentState.FixedRepository | GitConnectionDetailsSettingsV2ComponentState.NotOnCapacity)) {
                  case GitConnectionDetailsSettingsV2ComponentState.NotConnected | GitConnectionDetailsSettingsV2ComponentState.Admin:
                    config = {
                        repository: FieldDisplayMode.Textbox,
                        branch: FieldDisplayMode.Dropdown,
                        directory: FieldDisplayMode.Textbox,
                        button: ButtonDisplayMode.ConnectAndSync
                    };
                    break;

                  case GitConnectionDetailsSettingsV2ComponentState.NotConnected | GitConnectionDetailsSettingsV2ComponentState.NonAdmin:
                    config = {
                        repository: FieldDisplayMode.Hidden,
                        branch: FieldDisplayMode.Hidden,
                        directory: FieldDisplayMode.Hidden,
                        button: ButtonDisplayMode.Hidden
                    };
                    break;

                  case GitConnectionDetailsSettingsV2ComponentState.Connected | GitConnectionDetailsSettingsV2ComponentState.Admin:
                    config = {
                        repository: FieldDisplayMode.Fixed,
                        branch: FieldDisplayMode.Dropdown,
                        directory: FieldDisplayMode.Fixed,
                        button: ButtonDisplayMode.SwitchBranch
                    };
                    break;

                  case GitConnectionDetailsSettingsV2ComponentState.Connected | GitConnectionDetailsSettingsV2ComponentState.NonAdmin:
                    config = c_allFixedConfig;
                    break;

                  default:
                    config = c_allHiddenConfig;
                }
                return config = (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, config), {
                    state
                }), state & GitConnectionDetailsSettingsV2ComponentState.FixedRepository && (config.repository = FieldDisplayMode.Fixed), 
                state & GitConnectionDetailsSettingsV2ComponentState.NotConfigured && (config = (0, 
                tslib_es6.__assign)((0, tslib_es6.__assign)({}, c_allFixedConfig), {
                    state
                })), state & GitConnectionDetailsSettingsV2ComponentState.NotOnCapacity && (config = (0, 
                tslib_es6.__assign)((0, tslib_es6.__assign)({}, c_allFixedConfig), {
                    state
                })), config;
            },
            onRepositoryChangeFunc: function(newValue, workspaceId, service) {
                if (validateRepositoryUrlGitHub(newValue)) {
                    var normalizedUrl = newValue.replace(/\/$|\.git$/g, ""), splitUrl = new URL(normalizedUrl).pathname.split("/").filter(function(part) {
                        return part;
                    });
                    if (2 === splitUrl.length) {
                        var repositoryName = splitUrl[1];
                        service.selectOrganization(workspaceId, splitUrl[0]), service.selectRepository(workspaceId, repositoryName);
                    }
                } else service.selectOrganization(workspaceId, void 0), service.selectRepository(workspaceId, newValue);
            },
            getRepositoryFunc: function(gitConnection, gitSessionStorageState) {
                return (null == gitConnection ? void 0 : gitConnection.gitConnectionDetails) ? (0, 
                connection_src.rl)(gitConnection.gitConnectionDetails) : (null == gitSessionStorageState ? void 0 : gitSessionStorageState.selectedOrganization) && (null == gitSessionStorageState ? void 0 : gitSessionStorageState.selectedRepository) ? "".concat("https://github.com", "/").concat(gitSessionStorageState.selectedOrganization.name, "/").concat(gitSessionStorageState.selectedRepository.name) : void 0;
            },
            validateRepositoryUrl: validateRepositoryUrlGitHub,
            validateDirectoryNameFunc: function(value) {
                return !(value.length > 256 || c_invalidCharacters.some(function(c) {
                    return value.includes(c);
                }) || c_invalidPrefixCharacters.some(function(c) {
                    return value.startsWith(c);
                }) || c_invalidSuffixCharacters.some(function(c) {
                    return value.endsWith(c);
                }));
            }
        };
        function validateRepositoryUrlGitHub(value) {
            var normalizedUrl = value.replace(/\/$|\.git$/g, "");
            return /^https:\/\/github\.com\/[^/]+\/[^/]+$/.test(normalizedUrl);
        }
        function GitConnectionDetailsSettingsV2Component_ng_container_0_ng_container_1_tri_message_bar_1_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "tri-message-bar", 10), 2 & rf) {
                var ctx_r3 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275property"]("viewModel", ctx_r3.getNoBranchesInRepoMessagBarViewModel());
            }
        }
        function GitConnectionDetailsSettingsV2Component_ng_container_0_ng_container_1_div_4_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 11)(1, "h4"), core["\u0275\u0275text"](2), 
            core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](4, "p", 12), 
            core["\u0275\u0275pipe"](5, "async"), core["\u0275\u0275text"](6), core["\u0275\u0275pipe"](7, "async"), 
            core["\u0275\u0275elementEnd"]()()), 2 & rf) {
                var ctx_r4 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](3, 4, "Trident_Git_Auth_Dialog_Param_RepoUrl"), " "), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("triTooltip", core["\u0275\u0275pipeBind1"](5, 6, ctx_r4.repository$)), 
                core["\u0275\u0275attribute"]("data-testid", "repository-fixed"), core["\u0275\u0275advance"](2), 
                core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](7, 8, ctx_r4.repository$), " ");
            }
        }
        function GitConnectionDetailsSettingsV2Component_ng_container_0_ng_container_1_div_5_ng_container_12_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "div", 17), 
            core["\u0275\u0275element"](2, "tri-svg-icon", 18), core["\u0275\u0275elementStart"](3, "span"), 
            core["\u0275\u0275text"](4), core["\u0275\u0275pipe"](5, "localize"), core["\u0275\u0275elementEnd"]()(), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf && (core["\u0275\u0275advance"](1), 
            core["\u0275\u0275attribute"]("data-testid", "tri-git-connection-details-settings-v2-repository-error"), 
            core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("name", "error_circle_12_filled"), 
            core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](5, 3, "Trident_Git_Auth_Dialog_Param_RepoUrl_Error"), " "));
        }
        var git_connection_details_settings_v2_component_c0 = function(a0) {
            return {
                error: a0
            };
        };
        function GitConnectionDetailsSettingsV2Component_ng_container_0_ng_container_1_div_5_Template(rf, ctx) {
            if (1 & rf) {
                var _r15 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div", 13)(1, "h4"), core["\u0275\u0275text"](2), 
                core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementStart"](4, "span", 14), 
                core["\u0275\u0275text"](5, " *"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275element"](6, "tri-svg-icon", 15), 
                core["\u0275\u0275pipe"](7, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](8, "input", 16), 
                core["\u0275\u0275listener"]("ngModelChange", function($event) {
                    core["\u0275\u0275restoreView"](_r15);
                    var ctx_r14 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r14.onRepositoryChange($event));
                }), core["\u0275\u0275pipe"](9, "async"), core["\u0275\u0275pipe"](10, "async"), 
                core["\u0275\u0275pipe"](11, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](12, GitConnectionDetailsSettingsV2Component_ng_container_0_ng_container_1_div_5_ng_container_12_Template, 6, 5, "ng-container", 0), 
                core["\u0275\u0275pipe"](13, "async"), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r5 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](3, 8, "Trident_Git_Auth_Dialog_Param_RepoUrl"), " "), 
                core["\u0275\u0275advance"](4), core["\u0275\u0275property"]("name", "info_16_regular")("triTooltip", core["\u0275\u0275pipeBind1"](7, 10, "Trident_Git_Auth_Dialog_Param_RepoUrl_Tooltip_GitHub")), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngClass", core["\u0275\u0275pureFunction1"](20, git_connection_details_settings_v2_component_c0, core["\u0275\u0275pipeBind1"](9, 12, ctx_r5.repositoryInputError$)))("ngModel", core["\u0275\u0275pipeBind1"](10, 14, ctx_r5.repositoryTextInput$))("placeholder", core["\u0275\u0275pipeBind1"](11, 16, "Trident_Git_Auth_Dialog_Param_RepoUrl_Placeholder")), 
                core["\u0275\u0275attribute"]("data-testid", "repository-text-input"), core["\u0275\u0275advance"](4), 
                core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](13, 18, ctx_r5.repositoryInputError$));
            }
        }
        function GitConnectionDetailsSettingsV2Component_ng_container_0_ng_container_1_div_7_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 11)(1, "h4"), core["\u0275\u0275text"](2), 
            core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](4, "p", 12), 
            core["\u0275\u0275pipe"](5, "async"), core["\u0275\u0275text"](6), core["\u0275\u0275pipe"](7, "async"), 
            core["\u0275\u0275elementEnd"]()()), 2 & rf) {
                var ctx_r6 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](3, 4, "Trident_Git_Folder"), " "), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("triTooltip", core["\u0275\u0275pipeBind1"](5, 6, ctx_r6.directory$)), 
                core["\u0275\u0275attribute"]("data-testid", "directory-fixed"), core["\u0275\u0275advance"](2), 
                core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](7, 8, ctx_r6.directory$), " ");
            }
        }
        function GitConnectionDetailsSettingsV2Component_ng_container_0_ng_container_1_div_9_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 11)(1, "h4"), core["\u0275\u0275text"](2), 
            core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](4, "p", 12), 
            core["\u0275\u0275pipe"](5, "async"), core["\u0275\u0275text"](6), core["\u0275\u0275pipe"](7, "async"), 
            core["\u0275\u0275elementEnd"]()()), 2 & rf) {
                var ctx_r7 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](3, 4, "Trident_Git_Branch"), " "), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("triTooltip", core["\u0275\u0275pipeBind1"](5, 6, ctx_r7.branch$)), 
                core["\u0275\u0275attribute"]("data-testid", "branch-fixed"), core["\u0275\u0275advance"](2), 
                core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](7, 8, ctx_r7.branch$), " ");
            }
        }
        function GitConnectionDetailsSettingsV2Component_ng_container_0_ng_container_1_div_10_tri_search_box_17_Template(rf, ctx) {
            if (1 & rf) {
                var _r22 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "tri-search-box", 25), core["\u0275\u0275listener"]("value", function($event) {
                    core["\u0275\u0275restoreView"](_r22);
                    var ctx_r21 = core["\u0275\u0275nextContext"](4);
                    return core["\u0275\u0275resetView"](ctx_r21.onBranchesSearch($event));
                }), core["\u0275\u0275elementEnd"]();
            }
        }
        function GitConnectionDetailsSettingsV2Component_ng_container_0_ng_container_1_div_10_span_18_Template(rf, ctx) {
            if (1 & rf) {
                var _r24 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "span", 26)(1, "tri-dropdown-action", 27), core["\u0275\u0275listener"]("actionClicked", function() {
                    core["\u0275\u0275restoreView"](_r24);
                    var ctx_r23 = core["\u0275\u0275nextContext"](4);
                    return core["\u0275\u0275resetView"](ctx_r23.onCreateBranchButtonClick());
                }), core["\u0275\u0275pipe"](2, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275element"](3, "hr"), 
                core["\u0275\u0275elementEnd"]();
            }
            2 & rf && (core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("text", core["\u0275\u0275pipeBind1"](2, 1, "Trident_Git_New_Branch")));
        }
        function GitConnectionDetailsSettingsV2Component_ng_container_0_ng_container_1_div_10_tri_dropdown_item_19_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "tri-dropdown-item", 28)(1, "p"), 
            core["\u0275\u0275text"](2), core["\u0275\u0275elementEnd"]()()), 2 & rf) {
                var item_r25 = ctx.$implicit;
                core["\u0275\u0275property"]("title", item_r25.text)("value", item_r25), core["\u0275\u0275advance"](2), 
                core["\u0275\u0275textInterpolate"](item_r25.text);
            }
        }
        function GitConnectionDetailsSettingsV2Component_ng_container_0_ng_container_1_div_10_tri_dropdown_item_20_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementStart"](0, "tri-dropdown-item", 29)(1, "p"), 
            core["\u0275\u0275text"](2), core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementEnd"]()()), 
            2 & rf && (core["\u0275\u0275property"]("disabled", !0), core["\u0275\u0275advance"](2), 
            core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](3, 2, "Trident_Git_Empty_Branches_Dropdown")));
        }
        function GitConnectionDetailsSettingsV2Component_ng_container_0_ng_container_1_div_10_ng_container_21_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "div", 17), 
            core["\u0275\u0275element"](2, "tri-svg-icon", 18), core["\u0275\u0275elementStart"](3, "span"), 
            core["\u0275\u0275text"](4), core["\u0275\u0275pipe"](5, "async"), core["\u0275\u0275elementEnd"]()(), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var ctx_r20 = core["\u0275\u0275nextContext"](4);
                core["\u0275\u0275advance"](1), core["\u0275\u0275attribute"]("data-testid", "tri-git-connection-details-settings-v2-branch-error"), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("name", "error_circle_12_filled"), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](5, 3, ctx_r20.branchDropdownError$), " ");
            }
        }
        function GitConnectionDetailsSettingsV2Component_ng_container_0_ng_container_1_div_10_Template(rf, ctx) {
            if (1 & rf) {
                var _r27 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div", 19)(1, "h4"), core["\u0275\u0275text"](2), 
                core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementStart"](4, "span", 14), 
                core["\u0275\u0275text"](5, " *"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275element"](6, "tri-svg-icon", 15), 
                core["\u0275\u0275pipe"](7, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](8, "tri-dropdown", 20), 
                core["\u0275\u0275listener"]("ngModelChange", function($event) {
                    core["\u0275\u0275restoreView"](_r27);
                    var ctx_r26 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r26.branchDropdownSelectedOption = $event);
                })("valueChange", function($event) {
                    core["\u0275\u0275restoreView"](_r27);
                    var ctx_r28 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r28.onBranchChange($event));
                }), core["\u0275\u0275pipe"](9, "async"), core["\u0275\u0275pipe"](10, "async"), 
                core["\u0275\u0275pipe"](11, "async"), core["\u0275\u0275pipe"](12, "async"), core["\u0275\u0275pipe"](13, "async"), 
                core["\u0275\u0275elementStart"](14, "tri-dropdown-trigger"), core["\u0275\u0275text"](15), 
                core["\u0275\u0275pipe"](16, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](17, GitConnectionDetailsSettingsV2Component_ng_container_0_ng_container_1_div_10_tri_search_box_17_Template, 1, 0, "tri-search-box", 21), 
                core["\u0275\u0275template"](18, GitConnectionDetailsSettingsV2Component_ng_container_0_ng_container_1_div_10_span_18_Template, 4, 3, "span", 22), 
                core["\u0275\u0275template"](19, GitConnectionDetailsSettingsV2Component_ng_container_0_ng_container_1_div_10_tri_dropdown_item_19_Template, 3, 3, "tri-dropdown-item", 23), 
                core["\u0275\u0275template"](20, GitConnectionDetailsSettingsV2Component_ng_container_0_ng_container_1_div_10_tri_dropdown_item_20_Template, 4, 4, "tri-dropdown-item", 24), 
                core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](21, GitConnectionDetailsSettingsV2Component_ng_container_0_ng_container_1_div_10_ng_container_21_Template, 6, 5, "ng-container", 0), 
                core["\u0275\u0275pipe"](22, "async"), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var tmp_5_0, tmp_9_0, tmp_10_0, ctx_r8 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](3, 15, "Trident_Git_Branch"), " "), 
                core["\u0275\u0275advance"](4), core["\u0275\u0275property"]("name", "info_16_regular")("triTooltip", core["\u0275\u0275pipeBind1"](7, 17, "Trident_Git_Branch_Tooltip")), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngModel", ctx_r8.branchDropdownSelectedOption)("ngClass", core["\u0275\u0275pureFunction1"](33, git_connection_details_settings_v2_component_c0, core["\u0275\u0275pipeBind1"](9, 19, ctx_r8.branchDropdownError$)))("options", ctx_r8.getDropdownOverlayOptions(null !== (tmp_5_0 = null == ctx_r8.branchDropdownOptionsList ? null : ctx_r8.branchDropdownOptionsList.length) && void 0 !== tmp_5_0 ? tmp_5_0 : 0))("disabled", void 0 === core["\u0275\u0275pipeBind1"](10, 21, ctx_r8.repository$) || void 0 === ctx_r8.branchDropdownOptionsList || void 0 !== core["\u0275\u0275pipeBind1"](11, 23, ctx_r8.branchDropdownError$))("isLoading", void 0 !== core["\u0275\u0275pipeBind1"](12, 25, ctx_r8.repository$) && void 0 === ctx_r8.branchDropdownOptionsList && void 0 === core["\u0275\u0275pipeBind1"](13, 27, ctx_r8.branchDropdownError$)), 
                core["\u0275\u0275attribute"]("data-testid", "branch-dropdown"), core["\u0275\u0275advance"](7), 
                core["\u0275\u0275textInterpolate1"](" ", null !== (tmp_9_0 = null == ctx_r8.branchDropdownSelectedOption ? null : ctx_r8.branchDropdownSelectedOption.text) && void 0 !== tmp_9_0 ? tmp_9_0 : core["\u0275\u0275pipeBind1"](16, 29, "Trident_Git_Branch"), " "), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", (null !== (tmp_10_0 = null == ctx_r8.branchDropdownOptionsList ? null : ctx_r8.branchDropdownOptionsList.length) && void 0 !== tmp_10_0 ? tmp_10_0 : 0) > 0), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", 0 !== (null == ctx_r8.branchDropdownOptionsList ? null : ctx_r8.branchDropdownOptionsList.length)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngForOf", ctx_r8.branchDropdownOptionsListFiltered), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", 0 === (null == ctx_r8.branchDropdownOptionsList ? null : ctx_r8.branchDropdownOptionsList.length)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", void 0 !== core["\u0275\u0275pipeBind1"](22, 31, ctx_r8.branchDropdownError$));
            }
        }
        function GitConnectionDetailsSettingsV2Component_ng_container_0_ng_container_1_div_12_ng_container_11_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "div", 17), 
            core["\u0275\u0275element"](2, "tri-svg-icon", 18), core["\u0275\u0275elementStart"](3, "span"), 
            core["\u0275\u0275text"](4), core["\u0275\u0275pipe"](5, "localize"), core["\u0275\u0275elementEnd"]()(), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf && (core["\u0275\u0275advance"](1), 
            core["\u0275\u0275attribute"]("data-testid", "tri-git-connection-details-settings-v2-directory-error"), 
            core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("name", "error_circle_12_filled"), 
            core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](5, 3, "Trident_Git_Error_Git_InvalidDirectoryName_Title"), " "));
        }
        function GitConnectionDetailsSettingsV2Component_ng_container_0_ng_container_1_div_12_Template(rf, ctx) {
            if (1 & rf) {
                var _r31 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div", 13)(1, "h4"), core["\u0275\u0275text"](2), 
                core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275element"](4, "tri-svg-icon", 15), 
                core["\u0275\u0275pipe"](5, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](6, "input", 30), 
                core["\u0275\u0275listener"]("ngModelChange", function($event) {
                    core["\u0275\u0275restoreView"](_r31);
                    var ctx_r30 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r30.onDirectoryChange($event));
                }), core["\u0275\u0275pipe"](7, "async"), core["\u0275\u0275pipe"](8, "async"), 
                core["\u0275\u0275pipe"](9, "async"), core["\u0275\u0275pipe"](10, "localize"), 
                core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](11, GitConnectionDetailsSettingsV2Component_ng_container_0_ng_container_1_div_12_ng_container_11_Template, 6, 5, "ng-container", 0), 
                core["\u0275\u0275pipe"](12, "async"), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r9 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](3, 9, "Trident_Git_Folder"), " "), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("name", "info_16_regular")("triTooltip", core["\u0275\u0275pipeBind1"](5, 11, "Trident_Git_Folder_Tooltip")), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngClass", core["\u0275\u0275pureFunction1"](23, git_connection_details_settings_v2_component_c0, core["\u0275\u0275pipeBind1"](7, 13, ctx_r9.directoryInputError$)))("ngModel", core["\u0275\u0275pipeBind1"](8, 15, ctx_r9.directory$))("disabled", void 0 === core["\u0275\u0275pipeBind1"](9, 17, ctx_r9.branch$))("placeholder", core["\u0275\u0275pipeBind1"](10, 19, "Trident_Git_Select_Folder")), 
                core["\u0275\u0275attribute"]("data-testid", "directory-text-input"), core["\u0275\u0275advance"](5), 
                core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](12, 21, ctx_r9.directoryInputError$));
            }
        }
        function GitConnectionDetailsSettingsV2Component_ng_container_0_ng_container_1_button_15_ng_container_2_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275text"](1), 
            core["\u0275\u0275pipe"](2, "localize"), core["\u0275\u0275elementContainerEnd"]()), 
            2 & rf && (core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](2, 1, "Trident_Git_Connect_And_Sync"), " "));
        }
        function GitConnectionDetailsSettingsV2Component_ng_container_0_ng_container_1_button_15_ng_template_4_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275element"](0, "tri-spinner", 34), core["\u0275\u0275text"](1), 
            core["\u0275\u0275pipe"](2, "localize")), 2 & rf && (core["\u0275\u0275advance"](1), 
            core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](2, 1, "UploadExcel_OneDriveProConnecting"), " "));
        }
        function GitConnectionDetailsSettingsV2Component_ng_container_0_ng_container_1_button_15_Template(rf, ctx) {
            if (1 & rf) {
                var _r36 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "button", 31), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r36);
                    var ctx_r35 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r35.onConnectButtonClick());
                }), core["\u0275\u0275pipe"](1, "async"), core["\u0275\u0275template"](2, GitConnectionDetailsSettingsV2Component_ng_container_0_ng_container_1_button_15_ng_container_2_Template, 3, 3, "ng-container", 32), 
                core["\u0275\u0275pipe"](3, "async"), core["\u0275\u0275template"](4, GitConnectionDetailsSettingsV2Component_ng_container_0_ng_container_1_button_15_ng_template_4_Template, 3, 3, "ng-template", null, 33, core["\u0275\u0275templateRefExtractor"]), 
                core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var _r33 = core["\u0275\u0275reference"](5), ctx_r10 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275property"]("disabled", core["\u0275\u0275pipeBind1"](1, 4, ctx_r10.connectButtonDisabled$)), 
                core["\u0275\u0275attribute"]("data-testid", "connect-button"), core["\u0275\u0275advance"](2), 
                core["\u0275\u0275property"]("ngIf", !1 === core["\u0275\u0275pipeBind1"](3, 6, ctx_r10.actionButtonInProgress$))("ngIfElse", _r33);
            }
        }
        function GitConnectionDetailsSettingsV2Component_ng_container_0_ng_container_1_button_16_ng_container_2_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275text"](1), 
            core["\u0275\u0275pipe"](2, "localize"), core["\u0275\u0275elementContainerEnd"]()), 
            2 & rf && (core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](2, 1, "Trident_Git_Switch_Branch_Button_Text"), " "));
        }
        function GitConnectionDetailsSettingsV2Component_ng_container_0_ng_container_1_button_16_ng_template_4_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275element"](0, "tri-spinner", 34), core["\u0275\u0275text"](1), 
            core["\u0275\u0275pipe"](2, "localize")), 2 & rf && (core["\u0275\u0275advance"](1), 
            core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](2, 1, "Trident_Git_Switch_Branch_Button_In_Progress"), " "));
        }
        function GitConnectionDetailsSettingsV2Component_ng_container_0_ng_container_1_button_16_Template(rf, ctx) {
            if (1 & rf) {
                var _r41 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "button", 31), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r41);
                    var ctx_r40 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r40.onSwitchBranchButtonClick());
                }), core["\u0275\u0275pipe"](1, "async"), core["\u0275\u0275template"](2, GitConnectionDetailsSettingsV2Component_ng_container_0_ng_container_1_button_16_ng_container_2_Template, 3, 3, "ng-container", 32), 
                core["\u0275\u0275pipe"](3, "async"), core["\u0275\u0275template"](4, GitConnectionDetailsSettingsV2Component_ng_container_0_ng_container_1_button_16_ng_template_4_Template, 3, 3, "ng-template", null, 33, core["\u0275\u0275templateRefExtractor"]), 
                core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var _r38 = core["\u0275\u0275reference"](5), ctx_r11 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275property"]("disabled", core["\u0275\u0275pipeBind1"](1, 4, ctx_r11.switchBranchButtonDisabled$)), 
                core["\u0275\u0275attribute"]("data-testid", "switch-branch-button"), core["\u0275\u0275advance"](2), 
                core["\u0275\u0275property"]("ngIf", !1 === core["\u0275\u0275pipeBind1"](3, 6, ctx_r11.actionButtonInProgress$))("ngIfElse", _r38);
            }
        }
        function GitConnectionDetailsSettingsV2Component_ng_container_0_ng_container_1_button_17_Template(rf, ctx) {
            if (1 & rf) {
                var _r43 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "button", 35), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r43);
                    var ctx_r42 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r42.onCancelButtonClick());
                }), core["\u0275\u0275pipe"](1, "async"), core["\u0275\u0275text"](2), core["\u0275\u0275pipe"](3, "localize"), 
                core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r12 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275property"]("disabled", core["\u0275\u0275pipeBind1"](1, 3, ctx_r12.cancelButtonDisabled$)), 
                core["\u0275\u0275attribute"]("data-testid", "cancel-button"), core["\u0275\u0275advance"](2), 
                core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](3, 5, "Cancel_ButtonText"), " ");
            }
        }
        function GitConnectionDetailsSettingsV2Component_ng_container_0_ng_container_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, GitConnectionDetailsSettingsV2Component_ng_container_0_ng_container_1_tri_message_bar_1_Template, 1, 1, "tri-message-bar", 1), 
            core["\u0275\u0275elementStart"](2, "div", 2), core["\u0275\u0275elementContainerStart"](3, 3), 
            core["\u0275\u0275template"](4, GitConnectionDetailsSettingsV2Component_ng_container_0_ng_container_1_div_4_Template, 8, 10, "div", 4), 
            core["\u0275\u0275template"](5, GitConnectionDetailsSettingsV2Component_ng_container_0_ng_container_1_div_5_Template, 14, 22, "div", 5), 
            core["\u0275\u0275elementContainerEnd"](), core["\u0275\u0275elementContainerStart"](6, 3), 
            core["\u0275\u0275template"](7, GitConnectionDetailsSettingsV2Component_ng_container_0_ng_container_1_div_7_Template, 8, 10, "div", 4), 
            core["\u0275\u0275elementContainerEnd"](), core["\u0275\u0275elementContainerStart"](8, 3), 
            core["\u0275\u0275template"](9, GitConnectionDetailsSettingsV2Component_ng_container_0_ng_container_1_div_9_Template, 8, 10, "div", 4), 
            core["\u0275\u0275template"](10, GitConnectionDetailsSettingsV2Component_ng_container_0_ng_container_1_div_10_Template, 23, 35, "div", 6), 
            core["\u0275\u0275elementContainerEnd"](), core["\u0275\u0275elementContainerStart"](11, 3), 
            core["\u0275\u0275template"](12, GitConnectionDetailsSettingsV2Component_ng_container_0_ng_container_1_div_12_Template, 13, 25, "div", 5), 
            core["\u0275\u0275elementContainerEnd"](), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](13, "div", 7), 
            core["\u0275\u0275elementContainerStart"](14, 3), core["\u0275\u0275template"](15, GitConnectionDetailsSettingsV2Component_ng_container_0_ng_container_1_button_15_Template, 6, 8, "button", 8), 
            core["\u0275\u0275template"](16, GitConnectionDetailsSettingsV2Component_ng_container_0_ng_container_1_button_16_Template, 6, 8, "button", 8), 
            core["\u0275\u0275template"](17, GitConnectionDetailsSettingsV2Component_ng_container_0_ng_container_1_button_17_Template, 4, 7, "button", 9), 
            core["\u0275\u0275elementContainerEnd"](), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementContainerEnd"]()), 
            2 & rf) {
                var componentConfig_r2 = ctx.ngIf, ctx_r1 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", 0 === (null == ctx_r1.branchDropdownOptionsList ? null : ctx_r1.branchDropdownOptionsList.length)), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngSwitch", componentConfig_r2.repository), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", ctx_r1.FieldDisplayMode.Fixed), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", ctx_r1.FieldDisplayMode.Textbox), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitch", componentConfig_r2.directory), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", ctx_r1.FieldDisplayMode.Fixed), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitch", componentConfig_r2.branch), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", ctx_r1.FieldDisplayMode.Fixed), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", ctx_r1.FieldDisplayMode.Dropdown), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitch", componentConfig_r2.directory), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", ctx_r1.FieldDisplayMode.Textbox), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngSwitch", componentConfig_r2.button), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", ctx_r1.ButtonDisplayMode.ConnectAndSync), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", ctx_r1.ButtonDisplayMode.SwitchBranch), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", componentConfig_r2.button !== ctx_r1.ButtonDisplayMode.Hidden);
            }
        }
        function GitConnectionDetailsSettingsV2Component_ng_container_0_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, GitConnectionDetailsSettingsV2Component_ng_container_0_ng_container_1_Template, 18, 15, "ng-container", 0), 
            core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275elementContainerEnd"]()), 
            2 & rf) {
                var ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](2, 1, ctx_r0.componentConfig$));
            }
        }
        var GitConnectionDetailsSettingsV2Component = function(_super) {
            function GitConnectionDetailsSettingsV2Component(gitSessionStorageService, gitConnectionService, gitConnectionDiscoveryService, gitErrorService, gitInitializationService, gitStatusService, gitSwitchBranchService, dialogService, localizationService, cdr, featureSwitchService, workspaceContextService) {
                var _this = _super.call(this) || this;
                return _this.gitSessionStorageService = gitSessionStorageService, _this.gitConnectionService = gitConnectionService, 
                _this.gitConnectionDiscoveryService = gitConnectionDiscoveryService, _this.gitErrorService = gitErrorService, 
                _this.gitInitializationService = gitInitializationService, _this.gitStatusService = gitStatusService, 
                _this.gitSwitchBranchService = gitSwitchBranchService, _this.dialogService = dialogService, 
                _this.localizationService = localizationService, _this.cdr = cdr, _this.featureSwitchService = featureSwitchService, 
                _this.workspaceContextService = workspaceContextService, _this.closeWorkspaceSettings = new core.EventEmitter, 
                _this.loadComponentUtilitiesRecord$ = (0, of.of)(), _this.componentUtilitiesRecord$ = new BehaviorSubject.X(void 0), 
                _this.componentConfig$ = (0, of.of)(), _this.loadGitConnection$ = (0, of.of)(), 
                _this.gitConnection$ = new BehaviorSubject.X(void 0), _this.loadGitSessionStorageState$ = (0, 
                of.of)(), _this.sessionStorageState$ = new BehaviorSubject.X(void 0), _this.getDropdownOverlayOptions = getDropdownOverlayOptions, 
                _this.ButtonDisplayMode = ButtonDisplayMode, _this.FieldDisplayMode = FieldDisplayMode, 
                _this.organization$ = (0, of.of)(), _this.repository$ = (0, of.of)(), _this.repositoryTextInput$ = new BehaviorSubject.X(void 0), 
                _this.repositoryInputError$ = new BehaviorSubject.X(!1), _this.repositoryDisplayValue$ = new BehaviorSubject.X(void 0), 
                _this.branch$ = (0, of.of)(), _this._branchDropdownOptionsList = void 0, _this.branchDropdownOptionsListFiltered = void 0, 
                _this.branchDropdownError$ = new BehaviorSubject.X(void 0), _this.directory$ = (0, 
                of.of)(), _this.directoryInputError$ = new BehaviorSubject.X(!1), _this.connectButtonDisabled$ = (0, 
                of.of)(!0), _this.switchBranchButtonDisabled$ = (0, of.of)(!0), _this.actionButtonInProgress$ = new BehaviorSubject.X(!1), 
                _this.cancelButtonDisabled$ = new BehaviorSubject.X(!0), _this.componentUtilities = function() {
                    var _a;
                    return (_a = {})[git_src.IS.AzureDevOps] = void 0, _a[git_src.IS.GitHub] = componentStateToConfigGitHub, 
                    _a;
                }(), _this;
            }
            return (0, tslib_es6.__extends)(GitConnectionDetailsSettingsV2Component, _super), 
            GitConnectionDetailsSettingsV2Component.prototype.ngOnInit = function() {
                var _this = this, workspaceId$ = this.changes$("workspaceId").pipe((0, distinctUntilChanged.x)(), (0, 
                filter.h)(function(workspaceId) {
                    return !!workspaceId;
                }), (0, take.q)(1)), isAdmin$ = this.workspaceContextService.selectedWorkspacePermission$.pipe((0, 
                map.U)(function(permission) {
                    return (0, manage_access_shared_src.GJ)((0, manage_access_shared_src.lC)(permission));
                })), isWorkspaceOnCapacity$ = this.workspaceContextService.selectedWorkspaceCapacitySkuTier$.pipe((0, 
                map.U)(function(capacity) {
                    return capacity && 6 !== capacity || _this.featureSwitchService.featureSwitches.tridentGitOnShared;
                })), staticWorkspaceState$ = (0, combineLatest.aj)([ isAdmin$.pipe((0, take.q)(1)), isWorkspaceOnCapacity$.pipe((0, 
                take.q)(1)) ]).pipe((0, map.U)(function(_a) {
                    return {
                        isAdmin: _a[0],
                        isWorkspaceOnCapacity: !!_a[1]
                    };
                }));
                this.loadGitConnection$ = workspaceId$.pipe((0, switchMap.w)(function(workspaceId) {
                    return _this.gitConnectionService.ensureGitConnection(workspaceId);
                }), (0, distinctUntilChanged.x)(), (0, tap.b)(function(connection) {
                    return _this.gitConnection$.next(connection);
                })), this.loadGitSessionStorageState$ = workspaceId$.pipe((0, switchMap.w)(function(workspaceId) {
                    return _this.gitSessionStorageService.loadGitSessionStorage(workspaceId);
                }), (0, distinctUntilChanged.x)(), (0, tap.b)(function(sessionStorage) {
                    return _this.sessionStorageState$.next(sessionStorage);
                })), this.loadComponentUtilitiesRecord$ = this.sessionStorageState$.pipe((0, filter.h)(function(sessionStorage) {
                    return void 0 !== (null == sessionStorage ? void 0 : sessionStorage.selectedGitProviderType);
                }), (0, map.U)(function(sessionStorage) {
                    return _this.componentUtilities[null == sessionStorage ? void 0 : sessionStorage.selectedGitProviderType];
                }), (0, distinctUntilChanged.x)(), (0, tap.b)(function(utilities) {
                    return _this.componentUtilitiesRecord$.next(utilities);
                })), this.componentConfig$ = (0, combineLatest.aj)([ staticWorkspaceState$, this.gitConnection$, this.sessionStorageState$, this.componentUtilitiesRecord$ ]).pipe((0, 
                distinctUntilChanged.x)(), (0, map.U)(function(_a) {
                    var staticWorkspaceState = _a[0], connectionState = _a[1], selectionState = _a[2], utilities = _a[3];
                    if (staticWorkspaceState && connectionState && selectionState && utilities) return _this.applyStateToConfigMap(staticWorkspaceState, connectionState, selectionState, utilities);
                }), (0, tap.b)(function(state) {
                    (null == state ? void 0 : state.branch) !== FieldDisplayMode.Fixed && _this.setBranchDropdownOptionsList();
                })), this.organization$ = this.sessionStorageState$.pipe((0, map.U)(function(selectionState) {
                    var _a;
                    return null === (_a = null == selectionState ? void 0 : selectionState.selectedOrganization) || void 0 === _a ? void 0 : _a.name;
                }), (0, distinctUntilChanged.x)()), this.repository$ = (0, combineLatest.aj)([ this.componentUtilitiesRecord$, this.gitConnection$, this.sessionStorageState$ ]).pipe((0, 
                map.U)(function(_a) {
                    var componentConfigMap = _a[0];
                    if (null == componentConfigMap ? void 0 : componentConfigMap.getRepositoryFunc) return componentConfigMap.getRepositoryFunc(_a[1], _a[2]);
                })), this.branch$ = (0, combineLatest.aj)([ this.gitConnection$, this.sessionStorageState$ ]).pipe((0, 
                map.U)(function(_a) {
                    var connectionState = _a[0], selectionState = _a[1];
                    return (null == selectionState ? void 0 : selectionState.selectedBranch) ? (_this.branchDropdownSelectedOption = {
                        key: selectionState.selectedBranch,
                        text: selectionState.selectedBranch
                    }, null == selectionState ? void 0 : selectionState.selectedBranch) : (null == connectionState ? void 0 : connectionState.gitConnectionDetails) ? (_this.branchDropdownSelectedOption = {
                        key: connectionState.gitConnectionDetails.branchName,
                        text: connectionState.gitConnectionDetails.branchName
                    }, connectionState.gitConnectionDetails.branchName) : void 0;
                }), (0, distinctUntilChanged.x)()), this.directory$ = (0, combineLatest.aj)([ this.gitConnection$, this.sessionStorageState$ ]).pipe((0, 
                map.U)(function(_a) {
                    var connectionState = _a[0], selectionState = _a[1];
                    return (null == connectionState ? void 0 : connectionState.gitConnectionDetails) ? connectionState.gitConnectionDetails.rootDirectory : null == selectionState ? void 0 : selectionState.selectedDirectory;
                }), (0, distinctUntilChanged.x)()), this.connectButtonDisabled$ = (0, combineLatest.aj)([ this.gitConnection$, this.sessionStorageState$, this.directoryInputError$ ]).pipe((0, 
                map.U)(function(_a) {
                    var connectionState = _a[0], selectionState = _a[1];
                    return !(!(null == connectionState ? void 0 : connectionState.gitConnectionDetails) && (null == selectionState ? void 0 : selectionState.selectedBranch) && !1 === _a[2]);
                })), this.switchBranchButtonDisabled$ = (0, combineLatest.aj)([ this.gitConnection$, this.sessionStorageState$, isWorkspaceOnCapacity$ ]).pipe((0, 
                map.U)(function(_a) {
                    var connectionState = _a[0], selectionState = _a[1];
                    return !(_a[2] && (null == connectionState ? void 0 : connectionState.gitConnectionDetails) && (null == selectionState ? void 0 : selectionState.selectedBranch)) || connectionState.gitConnectionDetails.branchName === selectionState.selectedBranch;
                }));
            }, GitConnectionDetailsSettingsV2Component.prototype.ngOnDestroy = function() {
                return this.unsetUserSelections(), _super.prototype.ngOnDestroy.call(this);
            }, GitConnectionDetailsSettingsV2Component.prototype.onRepositoryChange = function(newValue) {
                var _this = this;
                this.repoTimeoutId && clearTimeout(this.repoTimeoutId), this.repoTimeoutId = setTimeout(function() {
                    var _a, _b, _c;
                    null === (_a = _this.componentUtilitiesRecord$.value) || void 0 === _a || _a.onRepositoryChangeFunc(newValue, _this.workspaceId, _this.gitSessionStorageService), 
                    _this.repositoryTextInput$.next(newValue);
                    var isRepositoryUrlValid = null === (_c = null === (_b = _this.componentUtilitiesRecord$.value) || void 0 === _b ? void 0 : _b.validateRepositoryUrl(newValue)) || void 0 === _c || _c;
                    _this.repositoryInputError$.next("" !== newValue && !isRepositoryUrlValid), isRepositoryUrlValid && _this.getBranches(), 
                    _this.cancelButtonDisabled$.next("" === newValue);
                }, 300);
            }, GitConnectionDetailsSettingsV2Component.prototype.onBranchChange = function(newValue) {
                this.gitSessionStorageService.selectBranch(this.workspaceId, null == newValue ? void 0 : newValue.text), 
                this.cancelButtonDisabled$.next(!1);
            }, GitConnectionDetailsSettingsV2Component.prototype.onBranchesSearch = function(searchTerm) {
                var _a;
                this.branchDropdownOptionsListFiltered = null === (_a = this.branchDropdownOptionsList) || void 0 === _a ? void 0 : _a.filter(function(branch) {
                    return !searchTerm || branch.text.toLowerCase().includes(searchTerm.toLowerCase());
                });
            }, GitConnectionDetailsSettingsV2Component.prototype.onDirectoryChange = function(newValue) {
                var _a, _b;
                this.gitSessionStorageService.selectRootDirectory(this.workspaceId, newValue), this.directoryInputError$.next(null !== (_b = !(null === (_a = this.componentUtilitiesRecord$.value) || void 0 === _a ? void 0 : _a.validateDirectoryNameFunc(newValue))) && void 0 !== _b && _b);
            }, GitConnectionDetailsSettingsV2Component.prototype.onCreateBranchButtonClick = function() {
                var _a, _this = this, dialogConfig = function(branchesList, sessionStorageState, connection) {
                    var _a, _b, _c;
                    return {
                        panelClass: "dialog-style",
                        width: (dialog_src.PW.Medium + dialog_src.PW.Small) / 2 + "px",
                        data: {
                            branchesList: null !== (_a = null == branchesList ? void 0 : branchesList.map(function(branch) {
                                return branch.text;
                            })) && void 0 !== _a ? _a : [],
                            details: {
                                gitProviderType: null == sessionStorageState ? void 0 : sessionStorageState.selectedGitProviderType,
                                organizationName: (null == connection ? void 0 : connection.gitConnectionDetails) ? connection.gitConnectionDetails.organizationName : null === (_b = null == sessionStorageState ? void 0 : sessionStorageState.selectedOrganization) || void 0 === _b ? void 0 : _b.name,
                                repositoryName: (null == connection ? void 0 : connection.gitConnectionDetails) ? connection.gitConnectionDetails.repositoryName : null === (_c = null == sessionStorageState ? void 0 : sessionStorageState.selectedRepository) || void 0 === _c ? void 0 : _c.name,
                                datasourceOID: null == sessionStorageState ? void 0 : sessionStorageState.selectedDatasourceOID
                            },
                            isWorkspaceConnected: null == connection ? void 0 : connection.gitConnectionDetails,
                            workspaceId: null == connection ? void 0 : connection.workspaceId
                        }
                    };
                }(null !== (_a = this.branchDropdownOptionsList) && void 0 !== _a ? _a : [], this.sessionStorageState$.value, this.gitConnection$.value);
                this.dialogService.open(connection_src.a6, dialogConfig).afterClosed().pipe((0, 
                take.q)(1), (0, tap.b)(function(newBranchName) {
                    var _a, _b;
                    if (newBranchName) {
                        var currentBranchesList = null !== (_b = null === (_a = _this.branchDropdownOptionsList) || void 0 === _a ? void 0 : _a.map(function(branch) {
                            return branch.text;
                        })) && void 0 !== _b ? _b : [], branchesListWithNewCreatedBranch = (0, tslib_es6.__spreadArray)((0, 
                        tslib_es6.__spreadArray)([], currentBranchesList, !0), [ newBranchName ], !1);
                        _this.mapBranchesListToDropdown(branchesListWithNewCreatedBranch), _this.gitSessionStorageService.selectBranch(_this.workspaceId, newBranchName), 
                        _this.cancelButtonDisabled$.next(!1);
                    }
                })).subscribe();
            }, GitConnectionDetailsSettingsV2Component.prototype.onConnectButtonClick = function() {
                var _this = this;
                if (!this.actionButtonInProgress$.getValue()) {
                    this.actionButtonInProgress$.next(!0);
                    var saveConnectionRequest = this.createSaveConnectionRequest();
                    saveConnectionRequest && this.gitConnectionService.saveGitConnection(saveConnectionRequest).pipe((0, 
                    concatMap.b)(function() {
                        return _this.gitConnectionService.getGitConnectionOperationState(_this.workspaceId).pipe((0, 
                        takeUntil.R)(_this.onDestroy$), (0, filter.h)(function(callState) {
                            return callState === src.CmZ.Completed || (0, git_src.pb)(callState);
                        }), (0, take.q)(1), (0, switchMap.w)(function(callState) {
                            return _this.actionButtonInProgress$.next(!1), (0, git_src.pb)(callState) && (0, 
                            git_src.yG)(callState) ? _this.createNewDirectory() : callState === src.CmZ.Completed ? _this.gitConnectionService.loadGitConnection(_this.workspaceId).pipe((0, 
                            takeUntil.R)(_this.onDestroy$), (0, filter.h)(function(connection) {
                                return !!connection;
                            }), (0, tap.b)(function(connection) {
                                _this.gitConnection$.next(connection), _this.cancelButtonDisabled$.next(!0);
                            }), (0, switchMap.w)(function(connection) {
                                var _a;
                                return (null === (_a = null == connection ? void 0 : connection.gitConnectionDetails) || void 0 === _a ? void 0 : _a.isInitialized) ? (0, 
                                of.of)(void 0) : _this.initializeConnection();
                            })) : (_this.actionButtonInProgress$.next(!1), (0, of.of)(void 0));
                        }));
                    }), (0, catchError.K)(function(_error) {
                        return _this.actionButtonInProgress$.next(!1), (0, of.of)(void 0);
                    })).subscribe();
                }
            }, GitConnectionDetailsSettingsV2Component.prototype.onSwitchBranchButtonClick = function() {
                var _a, _this = this;
                this.actionButtonInProgress$.next(!0);
                var details = null === (_a = this.gitConnection$.value) || void 0 === _a ? void 0 : _a.gitConnectionDetails;
                return !1 === (null == details ? void 0 : details.isInitialized) ? (this.actionButtonInProgress$.next(!1), 
                void this.gitErrorService.handleClientSideGitError("Git_Workspace_Not_Initialized")) : void 0 === (null == details ? void 0 : details.head) ? (this.actionButtonInProgress$.next(!1), 
                void this.gitErrorService.handleClientSideGitError("Git_HeadNotSynced")) : void this.gitStatusService.getUncommittedChangesCount(this.workspaceId).pipe((0, 
                take.q)(1), (0, tap.b)(function(uncommittedChanges) {
                    uncommittedChanges > 0 && (_this.actionButtonInProgress$.next(!1), _this.gitErrorService.handleClientSideGitError("Git_GitSwitchBranchWithUncommittedChanges"));
                }), (0, filter.h)(function(uncommittedChanges) {
                    return 0 === uncommittedChanges;
                }), (0, switchMap.w)(function() {
                    return _this.dialogService.open(GitSwitchBranchDialogComponent, getSwitchBranchConfirmationDialogConfig(_this.localizationService)).afterClosed().pipe((0, 
                    take.q)(1), (0, tap.b)(function(confirmed) {
                        confirmed || _this.actionButtonInProgress$.next(!1);
                    }), (0, filter.h)(function(confirmed) {
                        return !!confirmed;
                    }), (0, switchMap.w)(function() {
                        var switchBranchRequest = _this.createSwitchBranchRequest();
                        return switchBranchRequest ? _this.gitSwitchBranchService.switchBranch(switchBranchRequest).pipe((0, 
                        catchError.K)(function(_error) {
                            return _this.actionButtonInProgress$.next(!1), (0, of.of)(void 0);
                        })) : (0, of.of)(void 0);
                    }), (0, take.q)(1), (0, switchMap.w)(function() {
                        return _this.gitSwitchBranchService.getSwitchBranchState(_this.workspaceId);
                    }), (0, filter.h)(function(state) {
                        return state === src.ND3.Completed || (0, git_src.pb)(state);
                    }), (0, switchMap.w)(function(state) {
                        return _this.actionButtonInProgress$.next(!1), state === src.ND3.Completed ? (_this.closeWorkspaceSettings.emit(), 
                        _this.gitConnectionService.loadGitConnection(_this.workspaceId)) : (0, of.of)(void 0);
                    }));
                }), (0, takeUntil.R)(this.onDestroy$)).subscribe();
            }, GitConnectionDetailsSettingsV2Component.prototype.onCancelButtonClick = function() {
                this.returnToInitialState();
            }, GitConnectionDetailsSettingsV2Component.prototype.getNoBranchesInRepoMessagBarViewModel = function() {
                return getNoBranchesInRepoMessagBarViewModel(this.localizationService);
            }, GitConnectionDetailsSettingsV2Component.prototype.getBranches = function() {
                var _this = this;
                this.branchDropdownError$.next(void 0);
                var getBranchesRequest = this.createGetBranchesRequest();
                getBranchesRequest && this.gitConnectionDiscoveryService.getBranches(getBranchesRequest).pipe((0, 
                take.q)(1), (0, tap.b)(function(branches) {
                    var list = branches.map(function(branch) {
                        return branch.name;
                    });
                    _this.mapBranchesListToDropdown(list);
                }), (0, catchError.K)(function(error) {
                    var errorMessage = _this.getBranchDropdownError(error);
                    return _this.branchDropdownError$.next(errorMessage), (0, of.of)(void 0);
                })).subscribe();
            }, GitConnectionDetailsSettingsV2Component.prototype.getBranchDropdownError = function(error) {
                var _a, errorCode = null === (_a = null == error ? void 0 : error.error) || void 0 === _a ? void 0 : _a.code;
                return "Git_ItemNotFound" === errorCode || "Git_GitProviderBadCredentials" === errorCode ? this.localizationService.get("Trident_Git_Item_Not_Found_On_Get_branches") : this.gitErrorService.getErrorContent("Git_Get_Branches_Failed").message;
            }, GitConnectionDetailsSettingsV2Component.prototype.mapBranchesListToDropdown = function(list) {
                var sortedList = list.sort(function(a, b) {
                    return a.toLocaleLowerCase() > b.toLocaleLowerCase() ? 1 : -1;
                });
                this.branchDropdownOptionsList = sortedList.map(function(branch) {
                    return {
                        key: branch,
                        text: branch
                    };
                }), this.cdr.detectChanges();
            }, GitConnectionDetailsSettingsV2Component.prototype.returnToInitialState = function() {
                this.unsetUIstate(), this.unsetUserSelections(), this.setBranchDropdownOptionsList();
            }, GitConnectionDetailsSettingsV2Component.prototype.unsetUIstate = function() {
                this.actionButtonInProgress$.next(!1), this.cancelButtonDisabled$.next(!0), this.repositoryTextInput$.next(void 0), 
                this.repositoryInputError$.next(!1), this.branchDropdownError$.next(void 0), this.directoryInputError$.next(!1);
            }, GitConnectionDetailsSettingsV2Component.prototype.unsetUserSelections = function() {
                var _a, _b, state = this.sessionStorageState$.value;
                (null === (_a = null == state ? void 0 : state.selectedOrganization) || void 0 === _a ? void 0 : _a.setByDatasource) || this.gitSessionStorageService.selectOrganization(this.workspaceId, void 0), 
                (null === (_b = null == state ? void 0 : state.selectedRepository) || void 0 === _b ? void 0 : _b.setByDatasource) || this.gitSessionStorageService.selectRepository(this.workspaceId, void 0), 
                this.gitSessionStorageService.selectBranch(this.workspaceId, void 0), this.gitSessionStorageService.selectRootDirectory(this.workspaceId, void 0);
            }, GitConnectionDetailsSettingsV2Component.prototype.applyStateToConfigMap = function(staticWorkspaceState, connectionState, selectionState, componentUtilities) {
                var _a, _b, state;
                return state = staticWorkspaceState.isAdmin ? GitConnectionDetailsSettingsV2ComponentState.Admin : GitConnectionDetailsSettingsV2ComponentState.NonAdmin, 
                staticWorkspaceState.isWorkspaceOnCapacity || (state |= GitConnectionDetailsSettingsV2ComponentState.NotOnCapacity), 
                state |= (null == connectionState ? void 0 : connectionState.gitConnectionDetails) ? GitConnectionDetailsSettingsV2ComponentState.Connected : GitConnectionDetailsSettingsV2ComponentState.NotConnected, 
                (null === (_a = null == selectionState ? void 0 : selectionState.selectedRepository) || void 0 === _a ? void 0 : _a.setByDatasource) && (null === (_b = null == selectionState ? void 0 : selectionState.selectedOrganization) || void 0 === _b ? void 0 : _b.setByDatasource) && (state |= GitConnectionDetailsSettingsV2ComponentState.FixedRepository), 
                (null == selectionState ? void 0 : selectionState.isConfigured) || (state |= GitConnectionDetailsSettingsV2ComponentState.NotConfigured), 
                componentUtilities.getComponentConfig(state);
            }, GitConnectionDetailsSettingsV2Component.prototype.setBranchDropdownOptionsList = function() {
                var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;
                ((null === (_a = this.gitConnection$.value) || void 0 === _a ? void 0 : _a.gitConnectionDetails) && void 0 === this.branchDropdownOptionsList || (null === (_c = null === (_b = this.sessionStorageState$.value) || void 0 === _b ? void 0 : _b.selectedOrganization) || void 0 === _c ? void 0 : _c.setByDatasource) && (null === (_e = null === (_d = this.sessionStorageState$.value) || void 0 === _d ? void 0 : _d.selectedRepository) || void 0 === _e ? void 0 : _e.setByDatasource) && void 0 === this.branchDropdownOptionsList) && this.getBranches();
                var defaultBranch = null !== (_g = null === (_f = this.sessionStorageState$.value) || void 0 === _f ? void 0 : _f.selectedBranch) && void 0 !== _g ? _g : null !== (_k = null === (_j = null === (_h = this.gitConnection$.value) || void 0 === _h ? void 0 : _h.gitConnectionDetails) || void 0 === _j ? void 0 : _j.branchName) && void 0 !== _k ? _k : void 0;
                this.branchDropdownSelectedOption = defaultBranch ? {
                    key: defaultBranch,
                    text: defaultBranch
                } : void 0;
            }, GitConnectionDetailsSettingsV2Component.prototype.createGetBranchesRequest = function() {
                var _a, _b, connection = this.gitConnection$.value, state = this.sessionStorageState$.value;
                return this.workspaceId && (null == connection ? void 0 : connection.gitConnectionDetails) ? {
                    workspaceId: this.workspaceId,
                    gitProviderType: connection.gitConnectionDetails.gitProviderType,
                    organization: connection.gitConnectionDetails.organizationName,
                    repository: connection.gitConnectionDetails.repositoryName,
                    project: void 0,
                    datasourceOID: null !== (_b = null === (_a = connection.gitConnectionDetails) || void 0 === _a ? void 0 : _a.datasourceOID) && void 0 !== _b ? _b : null == state ? void 0 : state.selectedDatasourceOID
                } : this.workspaceId && (null == state ? void 0 : state.selectedGitProviderType) && (null == state ? void 0 : state.selectedOrganization) && (null == state ? void 0 : state.selectedRepository) && (null == state ? void 0 : state.selectedDatasourceOID) ? {
                    workspaceId: this.workspaceId,
                    gitProviderType: state.selectedGitProviderType,
                    organization: state.selectedOrganization.name,
                    repository: state.selectedRepository.name,
                    project: void 0,
                    datasourceOID: state.selectedDatasourceOID
                } : void 0;
            }, GitConnectionDetailsSettingsV2Component.prototype.createNewDirectoryRequest = function() {
                var _a, state = this.sessionStorageState$.value;
                return this.workspaceId && (null == state ? void 0 : state.selectedGitProviderType) && (null == state ? void 0 : state.selectedOrganization) && (null == state ? void 0 : state.selectedRepository) && (null == state ? void 0 : state.selectedBranch) && (null == state ? void 0 : state.selectedDatasourceOID) ? {
                    workspaceId: this.workspaceId,
                    providerType: state.selectedGitProviderType,
                    organizationName: state.selectedOrganization.name,
                    repositoryId: state.selectedRepository.name,
                    branchName: state.selectedBranch,
                    datasourceOID: null == state ? void 0 : state.selectedDatasourceOID,
                    newDirectoryName: null !== (_a = null == state ? void 0 : state.selectedDirectory) && void 0 !== _a ? _a : ""
                } : void 0;
            }, GitConnectionDetailsSettingsV2Component.prototype.createNewDirectory = function() {
                var _a, _b, directoryName, localizationService, _this = this;
                return this.dialogService.open(GitConnectionCreateFolderComponent, (directoryName = null !== (_b = null === (_a = this.sessionStorageState$.value) || void 0 === _a ? void 0 : _a.selectedDirectory) && void 0 !== _b ? _b : "", 
                localizationService = this.localizationService, {
                    panelWidth: "400px",
                    panelClass: "dialog-style",
                    data: {
                        title: localizationService.get("Trident_Git_Add_New_Folder_Title"),
                        buttons: [ {
                            name: localizationService.get("Trident_Git_Create_And_Sync"),
                            label: localizationService.get("Trident_Git_Create_And_Sync"),
                            buttonType: "primary"
                        }, {
                            name: localizationService.get("Cancel_ButtonText"),
                            label: localizationService.get("Cancel_ButtonText"),
                            buttonType: null
                        } ],
                        folderName: directoryName,
                        content: localizationService.get("Trident_Git_Create_New_Folder_Content")
                    }
                })).afterClosed().pipe((0, take.q)(1), (0, filter.h)(function(confirm) {
                    return confirm;
                }), (0, switchMap.w)(function() {
                    var newDirectoryRequest = _this.createNewDirectoryRequest();
                    return newDirectoryRequest ? _this.gitConnectionDiscoveryService.createDirectory(newDirectoryRequest).pipe((0, 
                    tap.b)(function() {
                        return _this.onConnectButtonClick();
                    }), (0, catchError.K)(function(httpError) {
                        return (0, git_src.Fc)(httpError) ? _this.gitErrorService.handleSyncGitError("Git_InvalidDirectoryName", httpError) : _this.gitErrorService.handleSyncGitError("Git_Create_Folder_Failed", httpError), 
                        (0, of.of)(void 0);
                    })) : (0, of.of)(void 0);
                }), (0, take.q)(1));
            }, GitConnectionDetailsSettingsV2Component.prototype.createSaveConnectionRequest = function() {
                var _a, state = this.sessionStorageState$.value;
                return this.workspaceId && (null == state ? void 0 : state.selectedGitProviderType) && (null == state ? void 0 : state.selectedOrganization) && (null == state ? void 0 : state.selectedRepository) && (null == state ? void 0 : state.selectedBranch) ? {
                    workspaceId: this.workspaceId,
                    gitConnectionDetails: {
                        gitProviderType: state.selectedGitProviderType,
                        organizationName: state.selectedOrganization.name,
                        projectName: void 0,
                        repositoryName: state.selectedRepository.name,
                        branchName: state.selectedBranch,
                        rootDirectory: null !== (_a = null == state ? void 0 : state.selectedDirectory) && void 0 !== _a ? _a : "/",
                        datasourceOID: null == state ? void 0 : state.selectedDatasourceOID
                    }
                } : void 0;
            }, GitConnectionDetailsSettingsV2Component.prototype.createSwitchBranchRequest = function() {
                var _a, _b, _c, _d, _e;
                return (null === (_b = null === (_a = this.gitConnection$.value) || void 0 === _a ? void 0 : _a.gitConnectionDetails) || void 0 === _b ? void 0 : _b.head) && (null === (_c = this.sessionStorageState$.value) || void 0 === _c ? void 0 : _c.selectedBranch) && this.sessionStorageState$.value.selectedBranch !== (null === (_e = null === (_d = this.gitConnection$.value) || void 0 === _d ? void 0 : _d.gitConnectionDetails) || void 0 === _e ? void 0 : _e.branchName) ? {
                    workspaceId: this.workspaceId,
                    request: {
                        workspaceHead: this.gitConnection$.value.gitConnectionDetails.head,
                        targetBranchName: this.sessionStorageState$.value.selectedBranch
                    }
                } : void 0;
            }, GitConnectionDetailsSettingsV2Component.prototype.createInitializeRequest = function(mergePolicy) {
                return {
                    workspaceId: this.workspaceId,
                    request: {
                        mergePolicy
                    }
                };
            }, GitConnectionDetailsSettingsV2Component.prototype.initializeConnection = function() {
                var _this = this, initializeRequest = this.createInitializeRequest(MergePolicy.None);
                return this.gitInitializationService.initializeGitConnection(initializeRequest).pipe((0, 
                concatMap.b)(function() {
                    return _this.gitInitializationService.getGitInitializationCallState(_this.workspaceId).pipe((0, 
                    takeUntil.R)(_this.onDestroy$), (0, tap.b)(function(callState) {
                        callState === src.CmZ.Completed && _this.closeWorkspaceSettings.emit();
                    }), (0, filter.h)(function(callState) {
                        return (0, git_src.pb)(callState) && (0, git_src.E6)(callState);
                    }), (0, take.q)(1), (0, switchMap.w)(function() {
                        return _this.closeWorkspaceSettings.emit(), _this.dialogService.open(GitMergePolicySelectionDialogComponent, {
                            panelClass: "dialog-style",
                            width: dialog_src.PW.Medium + "px"
                        }).afterClosed().pipe((0, take.q)(1), (0, tap.b)(function(selection) {
                            selection !== MergePolicy.KeepYours && selection !== MergePolicy.TakeTheirs || (initializeRequest = _this.createInitializeRequest(selection), 
                            _this.gitInitializationService.initializeGitConnection(initializeRequest));
                        }));
                    }));
                }));
            }, Object.defineProperty(GitConnectionDetailsSettingsV2Component.prototype, "branchDropdownOptionsList", {
                get: function() {
                    return this._branchDropdownOptionsList;
                },
                set: function(value) {
                    this._branchDropdownOptionsList = value, this.branchDropdownOptionsListFiltered = value;
                },
                enumerable: !1,
                configurable: !0
            }), GitConnectionDetailsSettingsV2Component.\u0275fac = function(t) {
                return new (t || GitConnectionDetailsSettingsV2Component)(core["\u0275\u0275directiveInject"](src.gCl), core["\u0275\u0275directiveInject"](connection_src.rC), core["\u0275\u0275directiveInject"](connection_src.eL), core["\u0275\u0275directiveInject"](error_src.jR), core["\u0275\u0275directiveInject"](GitInitializationService), core["\u0275\u0275directiveInject"](GitStatusService), core["\u0275\u0275directiveInject"](connection_src.Mv), core["\u0275\u0275directiveInject"](dialog_src.uQ), core["\u0275\u0275directiveInject"](localization_service.z), core["\u0275\u0275directiveInject"](core.ChangeDetectorRef), core["\u0275\u0275directiveInject"](feature_switch_service.V$), core["\u0275\u0275directiveInject"](workspaceContext._));
            }, GitConnectionDetailsSettingsV2Component.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: GitConnectionDetailsSettingsV2Component,
                selectors: [ [ "tri-git-connection-details-settings-v2" ] ],
                inputs: {
                    workspaceId: "workspaceId"
                },
                outputs: {
                    closeWorkspaceSettings: "closeWorkspaceSettings"
                },
                features: [ core["\u0275\u0275InheritDefinitionFeature"] ],
                decls: 4,
                vars: 7,
                consts: [ [ 4, "ngIf" ], [ "class", "no_branches_in_repo_message_bar", 3, "viewModel", 4, "ngIf" ], [ 1, "git-connection-details-settings" ], [ 3, "ngSwitch" ], [ "class", "fixed-style", 4, "ngSwitchCase" ], [ "class", "textbox-style", 4, "ngSwitchCase" ], [ "class", "dropdown-style", 4, "ngSwitchCase" ], [ 1, "buttons" ], [ "tri-button", "", "appearance", "primary", 3, "disabled", "click", 4, "ngSwitchCase" ], [ "tri-button", "", 3, "disabled", "click", 4, "ngIf" ], [ 1, "no_branches_in_repo_message_bar", 3, "viewModel" ], [ 1, "fixed-style" ], [ 3, "triTooltip" ], [ 1, "textbox-style" ], [ 1, "mandatory" ], [ 3, "name", "triTooltip" ], [ "type", "text", 3, "ngClass", "ngModel", "placeholder", "ngModelChange" ], [ "tri-textfield-error", "", 1, "error-message" ], [ "tri-svg-icon-12", "", 3, "name" ], [ 1, "dropdown-style" ], [ 3, "ngModel", "ngClass", "options", "disabled", "isLoading", "ngModelChange", "valueChange" ], [ "class", "dropdown-search-with-divider", 3, "value", 4, "ngIf" ], [ "class", "action-and-divider", 4, "ngIf" ], [ 3, "title", "value", 4, "ngFor", "ngForOf" ], [ "class", "empty-dropdown-message", 3, "disabled", 4, "ngIf" ], [ 1, "dropdown-search-with-divider", 3, "value" ], [ 1, "action-and-divider" ], [ "icon", "add_16_regular", 3, "text", "actionClicked" ], [ 3, "title", "value" ], [ 1, "empty-dropdown-message", 3, "disabled" ], [ "type", "text", 3, "ngClass", "ngModel", "disabled", "placeholder", "ngModelChange" ], [ "tri-button", "", "appearance", "primary", 3, "disabled", "click" ], [ 4, "ngIf", "ngIfElse" ], [ "loading", "" ], [ "size", "tiny", "labelPosition", "after" ], [ "tri-button", "", 3, "disabled", "click" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275template"](0, GitConnectionDetailsSettingsV2Component_ng_container_0_Template, 3, 3, "ng-container", 0), 
                    core["\u0275\u0275pipe"](1, "async"), core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275pipe"](3, "async")), 
                    2 & rf && core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](1, 1, ctx.loadGitConnection$) && core["\u0275\u0275pipeBind1"](2, 3, ctx.loadGitSessionStorageState$) && core["\u0275\u0275pipeBind1"](3, 5, ctx.loadComponentUtilitiesRecord$));
                },
                dependencies: [ common.NgClass, common.NgForOf, common.NgIf, common.NgSwitch, common.NgSwitchCase, fesm2022_forms.Fj, fesm2022_forms.JJ, fesm2022_forms.On, tri_dropdown_component.M3, tri_dropdown_item_component.l, TriDropdownActionComponent, tri_dropdown_item_menu_directive.q, tri_dropdown_component.ii, tri_message_bar_component.h, tri_search_box_component.U, tri_spinner_component.D, tri_svg_icon_component.M, tri_tooltip_directive.Z, common.AsyncPipe, localize_pipe.Y ],
                styles: [ ".no_branches_in_repo_message_bar[_ngcontent-%COMP%]{padding-top:12px}.git-connection-details-settings[_ngcontent-%COMP%]{display:flex;flex-direction:column;margin-top:20px;gap:24px}.git-connection-details-settings[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin:0}.git-connection-details-settings[_ngcontent-%COMP%]   .fixed-style[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:6px}.buttons[_ngcontent-%COMP%]{display:flex;flex-direction:row;gap:8px;margin-top:28px}h4[_ngcontent-%COMP%]{display:flex;flex-direction:row;align-items:center;gap:4px;margin:0;font-size:var(--fontSizeBase300);font-weight:var(--fontWeightSemibold)}h4[_ngcontent-%COMP%]   span.mandatory[_ngcontent-%COMP%]{color:var(--globalColorRedShade10)}h4[_ngcontent-%COMP%]   tri-svg-icon[_ngcontent-%COMP%]{fill:var(--globalColorGrey38)}.textbox-style[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:6px}.textbox-style[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{border:1px solid var(--globalColorGrey82);border-radius:4px;padding:6px 10px 6px 12px;box-sizing:border-box;width:360px}.textbox-style[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:disabled{opacity:.4}.textbox-style[_ngcontent-%COMP%]   input.error[_ngcontent-%COMP%]{border:1px solid var(--globalColorCranberryPrimary)}.textbox-style[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:not(:disabled):not(.error){border-bottom:1px solid var(--globalColorGrey38)}.textbox-style[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:not(:disabled):focus{outline:none}.textbox-style[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:not(:disabled):focus:not(.error){border-bottom:2px solid var(--globalColorBrand80)}.dropdown-style[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:6px}.dropdown-style[_ngcontent-%COMP%]   tri-dropdown[_ngcontent-%COMP%]{width:100%;max-width:360px;overflow-x:hidden;text-overflow:ellipsis;color:var(--colorNeutralForeground4);box-sizing:border-box}.dropdown-style[_ngcontent-%COMP%]   tri-dropdown[_ngcontent-%COMP%]     button{border:1px solid var(--globalColorGrey82);border-radius:4px;padding:6px 10px 6px 12px;box-sizing:border-box;width:360px}.dropdown-style[_ngcontent-%COMP%]   tri-dropdown[_ngcontent-%COMP%]     button:disabled{opacity:.4}.dropdown-style[_ngcontent-%COMP%]   .action-and-divider[_ngcontent-%COMP%]   hr[_ngcontent-%COMP%]{border:none;border-top:1px solid var(--globalColorGrey88);width:100%;margin-top:3px;margin-bottom:4px}.dropdown-style.error[_ngcontent-%COMP%]{border:1px solid var(--globalColorCranberryPrimary)}.dropdown-search-with-divider[_ngcontent-%COMP%]{box-sizing:border-box;width:100%;margin-bottom:2px}.error-message[_ngcontent-%COMP%]{display:flex;flex-direction:row;align-items:center;gap:4px;color:var(--globalColorCranberryPrimary);fill:var(--globalColorCranberryPrimary)}.error-message[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{font-size:var(--fontSizeBase200)}" ],
                changeDetection: 0
            }), GitConnectionDetailsSettingsV2Component;
        }(rx_component.w);
        function GitProviderSettingsComponent_ng_container_1_h4_7_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementStart"](0, "h4", 3), core["\u0275\u0275text"](1), 
            core["\u0275\u0275pipe"](2, "localize"), core["\u0275\u0275elementEnd"]()), 2 & rf && (core["\u0275\u0275advance"](1), 
            core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](2, 1, "Trident_Git_AAD")));
        }
        function GitProviderSettingsComponent_ng_container_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "h4", 3), 
            core["\u0275\u0275text"](2), core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementEnd"](), 
            core["\u0275\u0275elementStart"](4, "div", 4), core["\u0275\u0275text"](5), core["\u0275\u0275elementEnd"](), 
            core["\u0275\u0275elementContainerStart"](6, 5), core["\u0275\u0275template"](7, GitProviderSettingsComponent_ng_container_1_h4_7_Template, 3, 3, "h4", 6), 
            core["\u0275\u0275elementContainerEnd"](), core["\u0275\u0275elementStart"](8, "div", 4), 
            core["\u0275\u0275text"](9), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementContainerEnd"]()), 
            2 & rf) {
                var ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](3, 5, "Trident_Git_Provider")), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](ctx_r0.gitProviderTypeDisplayName), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitch", ctx_r0.selectedGitProviderType), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", ctx_r0.GitProviderTypeSwitch.AzureDevOps), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](ctx_r0.userAccount);
            }
        }
        function GitProviderSettingsComponent_ng_template_2_Template(rf, ctx) {
            if (1 & rf) {
                var _r5 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div", 4), core["\u0275\u0275text"](1), core["\u0275\u0275pipe"](2, "localize"), 
                core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](3, "a", 7)(4, "button", 8), 
                core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r5);
                    var ctx_r4 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r4.onClickAdoSignup());
                }), core["\u0275\u0275text"](5), core["\u0275\u0275pipe"](6, "localize"), core["\u0275\u0275elementEnd"]()();
            }
            2 & rf && (core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](2, 2, "Trident_Git_ADO_Signup"), " "), 
            core["\u0275\u0275advance"](4), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](6, 4, "Trident_Git_ADO_Signup_Button"), " "));
        }
        var GitProviderSettingsComponent = function(_super) {
            function GitProviderSettingsComponent(telemetryService) {
                var _this = _super.call(this) || this;
                return _this.telemetryService = telemetryService, _this.selectedGitProviderType = git_src.IS.AzureDevOps, 
                _this.userAccount = null, _this.gitProviderTypeChange = new core.EventEmitter, _this.GitProviderTypeSwitch = git_src.IS, 
                _this.gitProviderTypesList = [ git_src.IS.AzureDevOps ], _this.gitProviderTypeDisplayName = _this.gitProviderTypeEnumToString(git_src.IS.AzureDevOps), 
                _this;
            }
            return (0, tslib_es6.__extends)(GitProviderSettingsComponent, _super), GitProviderSettingsComponent.prototype.onGitProviderTypeChange = function(selectedGitProviderType) {
                this.selectedGitProviderType = selectedGitProviderType, this.gitProviderTypeDisplayName = this.gitProviderTypeEnumToString(selectedGitProviderType), 
                this.gitProviderTypeChange.emit(selectedGitProviderType);
            }, GitProviderSettingsComponent.prototype.onClickAdoSignup = function() {
                this.telemetryService.logEvent({
                    name: "Navigate to Git provider signup from connection settings",
                    properties: {
                        gitProvider: git_src.IS.AzureDevOps
                    }
                });
            }, GitProviderSettingsComponent.prototype.gitProviderTypeEnumToString = function(gitProviderTypeEnum) {
                return git_src.IS[gitProviderTypeEnum];
            }, GitProviderSettingsComponent.\u0275fac = function(t) {
                return new (t || GitProviderSettingsComponent)(core["\u0275\u0275directiveInject"](telemetry_service.t));
            }, GitProviderSettingsComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: GitProviderSettingsComponent,
                selectors: [ [ "tri-git-provider-settings" ] ],
                inputs: {
                    selectedGitProviderType: "selectedGitProviderType",
                    userAccount: "userAccount"
                },
                outputs: {
                    gitProviderTypeChange: "gitProviderTypeChange"
                },
                features: [ core["\u0275\u0275InheritDefinitionFeature"] ],
                decls: 4,
                vars: 2,
                consts: [ [ 1, "container" ], [ 4, "ngIf", "ngIfElse" ], [ "noAccount", "" ], [ 1, "title" ], [ 1, "content" ], [ 3, "ngSwitch" ], [ "class", "title", 4, "ngSwitchCase" ], [ "href", "https://azure.microsoft.com/en-us/products/devops/", "target", "_blank", "rel", "noopener noreferrer" ], [ "tri-button", "", 1, "signup-button", 3, "click" ] ],
                template: function(rf, ctx) {
                    if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 0), core["\u0275\u0275template"](1, GitProviderSettingsComponent_ng_container_1_Template, 10, 7, "ng-container", 1), 
                    core["\u0275\u0275template"](2, GitProviderSettingsComponent_ng_template_2_Template, 7, 6, "ng-template", null, 2, core["\u0275\u0275templateRefExtractor"]), 
                    core["\u0275\u0275elementEnd"]()), 2 & rf) {
                        var _r1 = core["\u0275\u0275reference"](3);
                        core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx.userAccount)("ngIfElse", _r1);
                    }
                },
                dependencies: [ common.NgIf, common.NgSwitch, common.NgSwitchCase, localize_pipe.Y ],
                styles: [ ".container[_ngcontent-%COMP%]{display:flex;flex-direction:column;justify-content:center;align-items:flex-start;margin-top:6px;height:100%;font-size:14px}.title[_ngcontent-%COMP%]{margin-top:8px}h4[_ngcontent-%COMP%]{margin:0;font-weight:600;font-size:14px}.content[_ngcontent-%COMP%]{margin-top:4px}.signup-button[_ngcontent-%COMP%]{margin-top:16px}" ],
                changeDetection: 0
            }), GitProviderSettingsComponent;
        }(rx_component.w);
        function GitConnectionSettingsComponent_tri_message_bar_8_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "tri-message-bar", 11), 2 & rf) {
                var ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("viewModel", ctx_r0.getWorkspaceNotOnPremiumWarningContainer());
            }
        }
        function GitConnectionSettingsComponent_tri_message_bar_10_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "tri-message-bar", 11), 2 & rf) {
                var ctx_r1 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("viewModel", ctx_r1.getTenantAdminFSDisabledWarningContainer());
            }
        }
        function GitConnectionSettingsComponent_tri_message_bar_12_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "tri-message-bar", 11), 2 & rf) {
                var ctx_r2 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("viewModel", ctx_r2.getTemplateAppNotSupportedWarningContainer());
            }
        }
        function GitConnectionSettingsComponent_tri_message_bar_14_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "tri-message-bar", 11), 2 & rf) {
                var ctx_r3 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("viewModel", ctx_r3.getAdoMFAErrorContainer());
            }
        }
        function GitConnectionSettingsComponent_ng_container_18_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275element"](1, "tri-git-provider-accounts", 12), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var ctx_r4 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("workspaceId", ctx_r4.workspaceId);
            }
        }
        function GitConnectionSettingsComponent_ng_template_19_Template(rf, ctx) {
            if (1 & rf) {
                var _r12 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "tri-git-provider-settings", 13), core["\u0275\u0275listener"]("gitProviderTypeChange", function($event) {
                    core["\u0275\u0275restoreView"](_r12);
                    var ctx_r11 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r11.onGitProviderTypeChange($event));
                }), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r6 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("userAccount", ctx_r6.userAccount);
            }
        }
        function GitConnectionSettingsComponent_ng_container_26_Template(rf, ctx) {
            if (1 & rf) {
                var _r14 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "tri-git-connection-details-settings-v2", 14), 
                core["\u0275\u0275listener"]("closeWorkspaceSettings", function() {
                    core["\u0275\u0275restoreView"](_r14);
                    var ctx_r13 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r13.closeWorkspaceSettings());
                }), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementContainerEnd"]();
            }
            if (2 & rf) {
                var ctx_r7 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("workspaceId", ctx_r7.workspaceId);
            }
        }
        function GitConnectionSettingsComponent_ng_template_28_tri_git_connection_details_settings_0_Template(rf, ctx) {
            if (1 & rf) {
                var _r17 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "tri-git-connection-details-settings", 16), 
                core["\u0275\u0275listener"]("organizationChange", function($event) {
                    core["\u0275\u0275restoreView"](_r17);
                    var ctx_r16 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r16.onOrganizationChange($event));
                })("projectChange", function($event) {
                    core["\u0275\u0275restoreView"](_r17);
                    var ctx_r18 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r18.onProjectChange($event));
                })("repositoryChange", function($event) {
                    core["\u0275\u0275restoreView"](_r17);
                    var ctx_r19 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r19.onRepositoryChange($event, !1));
                })("branchChange", function($event) {
                    core["\u0275\u0275restoreView"](_r17);
                    var ctx_r20 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r20.onBranchChange($event));
                })("folderNameChange", function($event) {
                    core["\u0275\u0275restoreView"](_r17);
                    var ctx_r21 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r21.onFolderNameChange($event));
                })("createNewBranchChange", function($event) {
                    core["\u0275\u0275restoreView"](_r17);
                    var ctx_r22 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r22.onCreateNewBranch($event));
                })("connectButtonClick", function() {
                    core["\u0275\u0275restoreView"](_r17);
                    var ctx_r23 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r23.onConnectButtonClick());
                })("switchBranchButtonClick", function() {
                    core["\u0275\u0275restoreView"](_r17);
                    var ctx_r24 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r24.onSwitchBranchButtonClick());
                })("cancelButtonClick", function() {
                    core["\u0275\u0275restoreView"](_r17);
                    var ctx_r25 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r25.onCancelButtonClick());
                })("cancelSwitchButtonClick", function() {
                    core["\u0275\u0275restoreView"](_r17);
                    var ctx_r26 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r26.onSwitchCancelButtonClick());
                }), core["\u0275\u0275pipe"](1, "async"), core["\u0275\u0275pipe"](2, "async"), 
                core["\u0275\u0275pipe"](3, "async"), core["\u0275\u0275pipe"](4, "async"), core["\u0275\u0275pipe"](5, "async"), 
                core["\u0275\u0275pipe"](6, "async"), core["\u0275\u0275pipe"](7, "async"), core["\u0275\u0275pipe"](8, "async"), 
                core["\u0275\u0275pipe"](9, "async"), core["\u0275\u0275pipe"](10, "async"), core["\u0275\u0275pipe"](11, "async"), 
                core["\u0275\u0275pipe"](12, "async"), core["\u0275\u0275pipe"](13, "async"), core["\u0275\u0275pipe"](14, "async"), 
                core["\u0275\u0275pipe"](15, "async"), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r15 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275property"]("isOnCapacity", core["\u0275\u0275pipeBind1"](1, 19, ctx_r15.isWorkspaceOnCapacity$))("isConnected", core["\u0275\u0275pipeBind1"](2, 21, ctx_r15.isConnected$))("connectionRequestInProgress", core["\u0275\u0275pipeBind1"](3, 23, ctx_r15.connectionRequestInProgress$))("switchBranchRequestInProgress", core["\u0275\u0275pipeBind1"](4, 25, ctx_r15.switchBranchRequestInProgress$))("workspaceMemberRole", core["\u0275\u0275pipeBind1"](5, 27, ctx_r15.workspaceMemberRole$))("organizationsList", core["\u0275\u0275pipeBind1"](6, 29, ctx_r15.organizationsList$))("organizationsError", ctx_r15.organizationsError)("selectedOrganization", core["\u0275\u0275pipeBind1"](7, 31, ctx_r15.selectedOrganization$))("projectsList", core["\u0275\u0275pipeBind1"](8, 33, ctx_r15.projectsList$))("projectsError", ctx_r15.projectsError)("selectedProject", core["\u0275\u0275pipeBind1"](9, 35, ctx_r15.selectedProject$))("repositoriesList", core["\u0275\u0275pipeBind1"](10, 37, ctx_r15.repositoriesList$))("repositoriesError", ctx_r15.repositoriesError)("selectedRepository", core["\u0275\u0275pipeBind1"](11, 39, ctx_r15.selectedRepository$))("branchesList", core["\u0275\u0275pipeBind1"](12, 41, ctx_r15.branchesList$))("branchesError", ctx_r15.branchesError)("selectedBranch", core["\u0275\u0275pipeBind1"](13, 43, ctx_r15.selectedBranch$))("newBranchState", core["\u0275\u0275pipeBind1"](14, 45, ctx_r15.newBranchState$))("selectedFolderName", core["\u0275\u0275pipeBind1"](15, 47, ctx_r15.selectedFolderName$));
            }
        }
        function GitConnectionSettingsComponent_ng_template_28_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275template"](0, GitConnectionSettingsComponent_ng_template_28_tri_git_connection_details_settings_0_Template, 16, 49, "tri-git-connection-details-settings", 15), 
            core["\u0275\u0275pipe"](1, "async")), 2 & rf) {
                var ctx_r9 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](1, 1, ctx_r9.showConnectionDetails));
            }
        }
        function GitConnectionSettingsComponent_div_30_Template(rf, ctx) {
            if (1 & rf) {
                var _r28 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div", 17)(1, "button", 18), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r28);
                    var ctx_r27 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r27.onDisconnectButtonClick());
                }), core["\u0275\u0275text"](2), core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementEnd"]()();
            }
            2 & rf && (core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](3, 1, "Trident_Git_Disconnect_Workspace"), " "));
        }
        var GitConnectionSettingsComponent = function(_super) {
            function GitConnectionSettingsComponent(tridentDialogService, localizationService, gitAdminSwitchesService, gitConnectionService, gitConnectionDiscoveryService, gitInitializationService, gitErrorService, gitNotificationService, gitSwitchBranchService, gitStatusService, telemetryService, gitSessionStorageService, workspaceContextService, userInfoTridentService, featureSwitchService) {
                var _a, _this = _super.call(this) || this;
                return _this.tridentDialogService = tridentDialogService, _this.localizationService = localizationService, 
                _this.gitAdminSwitchesService = gitAdminSwitchesService, _this.gitConnectionService = gitConnectionService, 
                _this.gitConnectionDiscoveryService = gitConnectionDiscoveryService, _this.gitInitializationService = gitInitializationService, 
                _this.gitErrorService = gitErrorService, _this.gitNotificationService = gitNotificationService, 
                _this.gitSwitchBranchService = gitSwitchBranchService, _this.gitStatusService = gitStatusService, 
                _this.telemetryService = telemetryService, _this.gitSessionStorageService = gitSessionStorageService, 
                _this.workspaceContextService = workspaceContextService, _this.userInfoTridentService = userInfoTridentService, 
                _this.featureSwitchService = featureSwitchService, _this.workspaceId = "", _this.workspaceName = "", 
                _this.closeWorkspaceSettingsFromTab = new core.EventEmitter, _this.Title = "", _this.LoadingState = src.Gui, 
                _this.loadingState$ = (0, of.of)(src.Gui.Initial), _this.connectionRequestInProgress$ = new BehaviorSubject.X(!1), 
                _this.switchBranchRequestInProgress$ = new BehaviorSubject.X(null), _this.isConnected$ = new BehaviorSubject.X(!1), 
                _this.workspaceMemberRole$ = (0, of.of)(null), _this.isServiceAppWorkspace$ = (0, 
                of.of)(!1), _this.isAdoMFANeeded$ = new BehaviorSubject.X(!1), _this.isWorkspaceOnCapacity$ = new BehaviorSubject.X(!1), 
                _this.showConnectionDetails = new BehaviorSubject.X(!1), _this.isAdminFeatureSwitchEnabled$ = (0, 
                of.of)(!1), _this.FolderMemberRole = manage_access_shared_src.R7, _this.currentSelection$ = new BehaviorSubject.X(Selection.None), 
                _this.selectedGitProviderType$ = new BehaviorSubject.X(git_src.IS.AzureDevOps), 
                _this.gitProviderTypesList = [ git_src.IS.AzureDevOps ], _this.selectedOrganization$ = new BehaviorSubject.X(null), 
                _this.organizationsList$ = new BehaviorSubject.X(null), _this.organizationsError = null, 
                _this.selectedProject$ = new BehaviorSubject.X(null), _this.projectsList$ = new BehaviorSubject.X(null), 
                _this.projectsError = null, _this.selectedRepository$ = new BehaviorSubject.X(null), 
                _this.repositoriesList$ = new BehaviorSubject.X(null), _this.repositoriesError = null, 
                _this.selectedBranch$ = new BehaviorSubject.X(null), _this.newBranchState$ = new BehaviorSubject.X(null), 
                _this.branchesList$ = new BehaviorSubject.X(null), _this.branchesError = null, _this.componentConfigMap = (0, 
                connection_src.EI)(), _this.showGenericUI = _this.featureSwitchService.featureSwitches.tridentGitGitHubApis, 
                _this.showConnectionDetailsV2$ = (0, of.of)(), _this.disableAndCollapseConnectionDetails$ = (0, 
                of.of)(!0), _this.selectedFolderName$ = new BehaviorSubject.X(null), _this.isFolderExists$ = new BehaviorSubject.X(!0), 
                _this.selectionMetadata = ((_a = {})[Selection.Organization] = {
                    selected$: _this.selectedOrganization$,
                    list$: _this.organizationsList$
                }, _a[Selection.Project] = {
                    selected$: _this.selectedProject$,
                    list$: _this.projectsList$
                }, _a[Selection.Repository] = {
                    selected$: _this.selectedRepository$,
                    list$: _this.repositoriesList$
                }, _a[Selection.Branch] = {
                    selected$: _this.selectedBranch$,
                    list$: _this.branchesList$
                }, _a), _this.userAccount = _this.userInfoTridentService.name, _this;
            }
            return (0, tslib_es6.__extends)(GitConnectionSettingsComponent, _super), GitConnectionSettingsComponent.prototype.ngOnInit = function() {
                var _this = this;
                this.isAdminFeatureSwitchEnabled$ = this.gitAdminSwitchesService.isTenantAdminEnabled(this.workspaceId), 
                this.workspaceContextService.selectedWorkspaceCapacitySkuTier$.pipe((0, takeUntil.R)(this.onDestroy$)).subscribe(function(workspaceCapacity) {
                    _this.isWorkspaceOnCapacity$.next(!!(workspaceCapacity && 6 !== workspaceCapacity || _this.featureSwitchService.featureSwitches.tridentGitOnShared)), 
                    _this.gitSessionStorageService.selectWorkspaceCapacity(_this.workspaceId, _this.isWorkspaceOnCapacity$.value);
                }), this.isServiceAppWorkspace$ = this.workspaceContextService.selectedWorkspaceIsServiceApp$;
                var gitIntegration = this.localizationService.get("Trident_Git_Git_Integration"), preview = this.localizationService.get("Preview");
                this.Title = "".concat(gitIntegration, " (").concat(preview, ")"), (0, combineLatest.aj)([ this.isServiceAppWorkspace$, this.isAdoMFANeeded$, this.isWorkspaceOnCapacity$, this.isConnected$, this.isAdminFeatureSwitchEnabled$ ]).pipe((0, 
                takeUntil.R)(this.onDestroy$)).subscribe(function(_a) {
                    _this.showConnectionDetails.next(null !== _this.userAccount && !_a[0] && !_a[1] && _a[4] && (_a[3] || _a[2]));
                }), (0, combineLatest.aj)([ this.gitConnectionService.ensureGitConnection(this.workspaceId, !0).pipe((0, 
                filter.h)(function(c) {
                    return (null == c ? void 0 : c.callState) !== src.CmZ.Initial && (null == c ? void 0 : c.callState) !== src.CmZ.InProgress;
                }), (0, take.q)(1)), this.showConnectionDetails.pipe((0, distinctUntilChanged.x)()) ]).pipe((0, 
                takeUntil.R)(this.onDestroy$)).subscribe(function(_a) {
                    var gitConnection = _a[0], showConnectionDetails = _a[1];
                    gitConnection && (null == gitConnection ? void 0 : gitConnection.gitConnectionDetails) && !(0, 
                    git_src.pb)(null == gitConnection ? void 0 : gitConnection.callState) ? (null == gitConnection ? void 0 : gitConnection.gitConnectionDetails) && (_this.setExistingConnection(gitConnection.gitConnectionDetails), 
                    _this.userAccount && _this.gitSessionStorageService.selectUserAccount(_this.workspaceId, _this.userAccount)) : showConnectionDetails && _this.returnToDefaultState();
                }), this.loadingState$ = this.gitConnectionService.getGitConnectionOperationState(this.workspaceId), 
                this.workspaceContextService.selectedWorkspacePermission$.pipe((0, take.q)(1), (0, 
                map.U)(function(result) {
                    return _this.workspaceMemberRole$ = (0, of.of)((0, manage_access_shared_src.lC)(result));
                })).subscribe(), this.initializeUISettings(), this.logOpenGitIntegrationTabEvent();
            }, GitConnectionSettingsComponent.prototype.getWorkspaceNotOnPremiumWarningContainer = function() {
                return {
                    bannerType: 2,
                    message: (localizationService = this.localizationService).get("Trident_Git_Premium_License"),
                    linkDisplayName: localizationService.get("LearnMore"),
                    link: "https://go.microsoft.com/fwlink/?linkid=2235445&clcid=0x409"
                };
                var localizationService;
            }, GitConnectionSettingsComponent.prototype.getTemplateAppNotSupportedWarningContainer = function() {
                return {
                    bannerType: 2,
                    message: this.localizationService.get("Trident_Git_ServiceApp_NotSupported_Warning")
                };
            }, GitConnectionSettingsComponent.prototype.getAdoMFAErrorContainer = function() {
                return {
                    bannerType: 1,
                    message: this.localizationService.get("Trident_Git_ADO_MFANotSupported_Error")
                };
            }, GitConnectionSettingsComponent.prototype.getTenantAdminFSDisabledWarningContainer = function() {
                return {
                    bannerType: 2,
                    message: this.localizationService.get("Trident_Git_TenantAdminSwitchDisabled_Message")
                };
            }, GitConnectionSettingsComponent.prototype.getSelectionValue = function(selection) {
                var metadata = this.selectionMetadata[selection];
                return metadata ? metadata.selected$ : void 0;
            }, GitConnectionSettingsComponent.prototype.getSelectionList = function(selection) {
                var metadata = this.selectionMetadata[selection];
                return metadata ? metadata.list$ : void 0;
            }, GitConnectionSettingsComponent.prototype.resetList = function(list$) {
                null == list$ || list$.next(null);
            }, GitConnectionSettingsComponent.prototype.updateState = function(selection) {
                this.currentSelection$.next(selection), this.resetPriorSelections(selection);
            }, GitConnectionSettingsComponent.prototype.resetPriorSelections = function(selection) {
                for (var iterator = ++selection; iterator < Selection.IteratorLast; iterator++) {
                    var listFromIterator = this.getSelectionList(iterator);
                    this.resetList(listFromIterator);
                    var selectionValFromIterator = this.getSelectionValue(iterator);
                    null == selectionValFromIterator || selectionValFromIterator.next(null);
                }
                this.organizationsError = null, this.projectsError = null, this.repositoriesError = null, 
                this.branchesError = null;
            }, GitConnectionSettingsComponent.prototype.onGitProviderTypeChange = function(selectedGitProviderType) {
                var _this = this;
                this.updateState(Selection.GitProviderType), this.selectedGitProviderType$.next(selectedGitProviderType), 
                this.organizationsError = null, this.gitConnectionDiscoveryService.getOrganizations(selectedGitProviderType, this.workspaceId).pipe((0, 
                map.U)(function(list) {
                    var items = _this.sortArray(list.map(function(organization) {
                        return {
                            key: organization.name,
                            text: organization.name
                        };
                    }));
                    _this.organizationsList$.next(items);
                }), (0, catchError.K)(function(httpError) {
                    var error = _this.gitErrorService.makeGitErrorFromHttpResponse("Git_Connect_Failed", httpError);
                    return (0, git_src.xT)(error, "Git_GitProviderResourceNotExistOrUnauthorized") && (_this.userAccount = null), 
                    (0, git_src.xT)(error, "Git_AdoConditionalAccessNotSupported") && _this.isAdoMFANeeded$.next(!0), 
                    _this.organizationsList$.next([]), _this.organizationsError = (0, git_src.lz)(error), 
                    (0, of.of)([]);
                })).subscribe();
            }, GitConnectionSettingsComponent.prototype.onOrganizationChange = function(selectedOrganization) {
                var _this = this;
                this.logGitSelection("Git organization selected", this.organizationsList$), this.updateState(Selection.Organization), 
                this.selectedOrganization$.next(selectedOrganization), this.projectsError = null, 
                this.gitConnectionDiscoveryService.getProjects(this.selectedGitProviderType$.value, selectedOrganization.name, this.workspaceId).pipe((0, 
                map.U)(function(list) {
                    var items = _this.sortArray(list.map(function(project) {
                        return {
                            key: project.name,
                            text: project.name
                        };
                    }));
                    _this.projectsList$.next(items);
                }), (0, catchError.K)(function(httpError) {
                    var error = _this.gitErrorService.makeGitErrorFromHttpResponse("Git_Connect_Failed", httpError);
                    return _this.projectsList$.next([]), _this.projectsError = (0, git_src.lz)(error), 
                    (0, of.of)([]);
                })).subscribe();
            }, GitConnectionSettingsComponent.prototype.onProjectChange = function(selectedProject) {
                var _a, _this = this;
                this.logGitSelection("Git project selected", this.projectsList$), this.updateState(Selection.Project), 
                this.selectedProject$.next(selectedProject), this.repositoriesError = null, this.gitConnectionDiscoveryService.getRepositories(this.selectedGitProviderType$.value, null === (_a = this.selectedOrganization$.value) || void 0 === _a ? void 0 : _a.name, selectedProject.name, this.workspaceId).pipe((0, 
                map.U)(function(list) {
                    var items = _this.sortArray(list.map(function(repository) {
                        return {
                            key: repository.name,
                            text: repository.name
                        };
                    }));
                    _this.repositoriesList$.next(items);
                }), (0, catchError.K)(function(httpError) {
                    var error = _this.gitErrorService.makeGitErrorFromHttpResponse("Git_Connect_Failed", httpError);
                    return _this.repositoriesList$.next([]), _this.repositoriesError = (0, git_src.lz)(error), 
                    (0, of.of)([]);
                })).subscribe();
            }, GitConnectionSettingsComponent.prototype.onRepositoryChange = function(selectedRepository, isConnected) {
                var _a, _b, _this = this;
                isConnected || this.logGitSelection("Git repository selected", this.repositoriesList$), 
                this.updateState(Selection.Repository), this.selectedRepository$.next(selectedRepository), 
                this.branchesError = null;
                var getBranchesRequest = {
                    workspaceId: this.workspaceId,
                    gitProviderType: this.selectedGitProviderType$.value,
                    organization: null === (_a = this.selectedOrganization$.value) || void 0 === _a ? void 0 : _a.name,
                    repository: selectedRepository.name,
                    project: null === (_b = this.selectedProject$.value) || void 0 === _b ? void 0 : _b.name,
                    datasourceOID: void 0
                };
                this.gitConnectionDiscoveryService.getBranches(getBranchesRequest).pipe((0, take.q)(1), (0, 
                catchError.K)(function(httpError) {
                    var error = _this.gitErrorService.makeGitErrorFromHttpResponse("Git_Connect_Failed", httpError);
                    return _this.branchesList$.next([]), _this.branchesError = (0, git_src.lz)(error), 
                    (0, of.of)([]);
                })).subscribe(function(list) {
                    var filteredList = _this.filterBranchsByPrefix(list), items = _this.sortArray(filteredList.map(function(branch) {
                        return {
                            key: branch.name,
                            text: branch.name
                        };
                    }));
                    _this.telemetryService.logEvent({
                        name: "Git branches fetched",
                        properties: {
                            fetchContext: isConnected ? "Connection management" : "Connection creation"
                        }
                    }), _this.branchesList$.next(items);
                });
            }, GitConnectionSettingsComponent.prototype.onBranchChange = function(selectedBranch) {
                this.logGitSelection("Git branch selected", this.branchesList$), this.updateState(Selection.Branch), 
                this.selectedBranch$.next(selectedBranch);
            }, GitConnectionSettingsComponent.prototype.onFolderNameChange = function(selectedFolderName) {
                selectedFolderName && "" === selectedFolderName || this.selectedFolderName$.next(selectedFolderName);
            }, GitConnectionSettingsComponent.prototype.onCreateNewBranch = function(createBranchProperties) {
                var _a, _b, _c, _d, _this = this;
                if ((null === (_a = createBranchProperties.parentBranch) || void 0 === _a ? void 0 : _a.name) && (null === (_b = this.selectedOrganization$.value) || void 0 === _b ? void 0 : _b.name) && (null === (_c = this.selectedProject$.value) || void 0 === _c ? void 0 : _c.name) && (null === (_d = this.selectedRepository$.value) || void 0 === _d ? void 0 : _d.name)) this.gitConnectionDiscoveryService.createBranch({
                    branchName: createBranchProperties.name,
                    parentBranchName: createBranchProperties.parentBranch.name,
                    organizationName: this.selectedOrganization$.value.name,
                    projectName: this.selectedProject$.value.name,
                    providerType: this.selectedGitProviderType$.value,
                    repositoryId: this.selectedRepository$.value.name,
                    workspaceId: this.workspaceId
                }).pipe((0, tap.b)(function() {
                    var newBranchName = createBranchProperties.name;
                    if (_this.selectedBranch$.next({
                        name: newBranchName
                    }), _this.newBranchState$.next({
                        name: newBranchName
                    }), _this.branchesList$.value) {
                        _this.branchesList$.value.push({
                            key: newBranchName,
                            text: newBranchName
                        });
                        var items = _this.sortArray(_this.branchesList$.value.map(function(branch) {
                            return {
                                key: branch.key,
                                text: branch.text
                            };
                        }));
                        _this.branchesList$.next(items);
                    }
                }), (0, catchError.K)(function(httpError) {
                    var _a, error;
                    switch (null === (_a = httpError.error["pbi.error"]) || void 0 === _a ? void 0 : _a.code) {
                      case "Git_InvalidBranchName":
                        error = _this.gitErrorService.makeGitErrorFromHttpResponse("Git_InvalidBranchName", httpError);
                        break;

                      case "Git_BranchNameAlreadyExists":
                        error = _this.gitErrorService.makeGitErrorFromHttpResponse("Git_BranchNameAlreadyExists", httpError);
                        break;

                      default:
                        error = _this.gitErrorService.makeGitErrorFromHttpResponse("Git_Create_Branch_Failed", httpError);
                    }
                    return _this.newBranchState$.next(error), (0, of.of)();
                })).subscribe(); else {
                    var error = this.gitErrorService.makeClientSideGitError("Git_Create_Branch_Origin_Branch_Not_Found");
                    this.newBranchState$.next(error);
                }
            }, GitConnectionSettingsComponent.prototype.createFolderForNewConnection = function() {
                var _this = this, data = {
                    title: this.localizationService.get("Trident_Git_Add_New_Folder_Title"),
                    buttons: [ {
                        name: this.localizationService.get("Trident_Git_Create_And_Sync"),
                        label: this.localizationService.get("Trident_Git_Create_And_Sync"),
                        buttonType: "primary"
                    }, {
                        name: this.localizationService.get("Cancel_ButtonText"),
                        label: this.localizationService.get("Cancel_ButtonText"),
                        buttonType: null
                    } ],
                    folderName: this.selectedFolderName$.value,
                    content: this.localizationService.get("Trident_Git_Create_New_Folder_Content")
                };
                this.tridentDialogService.open(GitConnectionCreateFolderComponent, {
                    width: "400px",
                    panelClass: "dialog-style",
                    data
                }).afterClosed().subscribe(function(output) {
                    var _a, _b, _c, _d, _e, _f, _g, _h;
                    if (output) {
                        if (!((null === (_a = _this.selectedOrganization$.value) || void 0 === _a ? void 0 : _a.name) && (null === (_b = _this.selectedProject$.value) || void 0 === _b ? void 0 : _b.name) && (null === (_c = _this.selectedRepository$.value) || void 0 === _c ? void 0 : _c.name) && (null === (_d = _this.selectedBranch$.value) || void 0 === _d ? void 0 : _d.name) && _this.selectedFolderName$.value)) {
                            var error = _this.gitErrorService.makeClientSideGitError("Git_Create_Directory_Invalid_Request");
                            return void _this.gitNotificationService.showErrorNotification(error, "Trident_Git_Toast_Create_Folder_Fail");
                        }
                        var createFolderRequest = {
                            providerType: _this.selectedGitProviderType$.value,
                            organizationName: _this.selectedOrganization$.value.name,
                            projectName: null === (_e = _this.selectedProject$.value) || void 0 === _e ? void 0 : _e.name,
                            repositoryId: null === (_f = _this.selectedRepository$.value) || void 0 === _f ? void 0 : _f.name,
                            branchName: null === (_g = _this.selectedBranch$.value) || void 0 === _g ? void 0 : _g.name,
                            newDirectoryName: _this.selectedFolderName$.value,
                            workspaceId: _this.workspaceId
                        };
                        _this.gitConnectionDiscoveryService.createDirectory(createFolderRequest).pipe((0, 
                        take.q)(1), (0, tap.b)(function() {
                            _this.isFolderExists$.next(!0), _this.onConnectButtonClick();
                        }), (0, catchError.K)(function(httpError) {
                            var _a;
                            return "Git_InvalidDirectoryName" === (null === (_a = httpError.error["pbi.error"]) || void 0 === _a ? void 0 : _a.code) ? _this.gitErrorService.handleSyncGitError("Git_InvalidDirectoryName", httpError) : _this.gitErrorService.handleSyncGitError("Git_Create_Folder_Failed", httpError), 
                            (0, of.of)();
                        })).subscribe();
                    } else _this.onBranchChange(null === (_h = _this.selectedBranch$) || void 0 === _h ? void 0 : _h.value), 
                    _this.connectionRequestInProgress$.next(!1);
                });
            }, GitConnectionSettingsComponent.prototype.onSwitchBranchButtonClick = function() {
                var _this = this;
                (0, combineLatest.aj)([ this.gitConnectionService.getGitConnection(this.workspaceId), this.gitStatusService.getUncommittedChangesCount(this.workspaceId) ]).pipe((0, 
                take.q)(1)).subscribe(function(_a) {
                    var _b, _c, gitConnection = _a[0], uncommittedChanges = _a[1];
                    !1 === (null === (_b = null == gitConnection ? void 0 : gitConnection.gitConnectionDetails) || void 0 === _b ? void 0 : _b.isInitialized) ? _this.gitErrorService.handleClientSideGitError("Git_Workspace_Not_Initialized") : void 0 === (null === (_c = null == gitConnection ? void 0 : gitConnection.gitConnectionDetails) || void 0 === _c ? void 0 : _c.head) ? _this.gitErrorService.handleClientSideGitError("Git_HeadNotSynced") : 0 !== uncommittedChanges ? _this.gitErrorService.handleClientSideGitError("Git_GitSwitchBranchWithUncommittedChanges") : (_this.openSwitchBranchConfirmationDialog(), 
                    _this.switchBranchRequestInProgress$.next(!1));
                });
            }, GitConnectionSettingsComponent.prototype.onConnectButtonClick = function() {
                var _this = this, gitConnectionDetails = this.getSelectedConnectionDetails();
                this.gitConnectionService.saveGitConnection({
                    workspaceId: this.workspaceId,
                    gitConnectionDetails
                }), this.gitConnectionService.getGitConnectionOperationState(this.workspaceId).pipe((0, 
                takeUntil.R)(this.onDestroy$), (0, filter.h)(function(callState) {
                    return (0, git_src.pb)(callState) && (0, git_src.yG)(callState);
                }), (0, take.q)(1)).subscribe(function() {
                    _this.connectionRequestInProgress$.next(!1), _this.createFolderForNewConnection();
                });
                var gitConnectionState$ = this.gitConnectionService.getGitConnectionOperationState(this.workspaceId).pipe((0, 
                takeUntil.R)(this.onDestroy$), (0, map.U)(function(callState) {
                    return (0, git_src.pb)(callState) && (0, git_src.yG)(callState) ? (_this.isFolderExists$.next(!1), 
                    src.CmZ.Initial) : (_this.connectionRequestInProgress$.next(callState === src.CmZ.InProgress), 
                    callState);
                }));
                (0, combineLatest.aj)([ gitConnectionState$, this.isFolderExists$ ]).pipe((0, takeUntil.R)(this.onDestroy$), (0, 
                filter.h)(function(_a) {
                    return _a[0] === src.CmZ.Completed || !_a[1];
                }), (0, take.q)(1), (0, switchMap.w)(function(_a) {
                    return _a[1] ? _this.gitConnectionService.loadGitConnection(_this.workspaceId) : (0, 
                    of.of)(void 0);
                }), (0, take.q)(1)).subscribe(function(gitConnection) {
                    var _a, _b;
                    !1 === (null === (_a = null == gitConnection ? void 0 : gitConnection.gitConnectionDetails) || void 0 === _a ? void 0 : _a.isInitialized) && ((0, 
                    git_src.pb)(null == gitConnection ? void 0 : gitConnection.callState) ? _this.onBranchChange(null === (_b = _this.selectedBranch$) || void 0 === _b ? void 0 : _b.value) : (null == gitConnection ? void 0 : gitConnection.callState) === src.CmZ.Completed && (_this.isConnected$.next(!0), 
                    _this.initializeGitConnection(), _this.closeWorkspaceSettingsFromTab.emit()));
                });
            }, GitConnectionSettingsComponent.prototype.initializeGitConnection = function() {
                var _this = this;
                this.isConnected$.value ? (this.gitInitializationService.initializeGitConnection({
                    workspaceId: this.workspaceId,
                    request: {
                        mergePolicy: git_src.Z_.None
                    }
                }), this.gitInitializationService.getGitInitializationCallState(this.workspaceId).pipe((0, 
                filter.h)(function(callState) {
                    return (0, git_src.pb)(callState) && (0, git_src.E6)(callState);
                }), (0, take.q)(1), (0, switchMap.w)(function() {
                    return _this.tridentDialogService.open(GitMergePolicySelectionDialogComponent, {
                        panelClass: "dialog-style",
                        width: dialog_src.PW.Medium + "px"
                    }).afterClosed();
                })).subscribe(function(selectedPolicy) {
                    selectedPolicy !== git_src.Z_.KeepYours && selectedPolicy !== git_src.Z_.TakeTheirs || _this.gitInitializationService.initializeGitConnection({
                        workspaceId: _this.workspaceId,
                        request: {
                            mergePolicy: selectedPolicy
                        }
                    });
                })) : this.gitErrorService.handleClientSideGitError("Git_WorkspaceNotConnectedToGit");
            }, GitConnectionSettingsComponent.prototype.getSelectedConnectionDetails = function() {
                var _a, _b, _c, _d, _e, gitProviderType = this.selectedGitProviderType$.value, organization = null === (_a = this.selectedOrganization$.value) || void 0 === _a ? void 0 : _a.name, project = null === (_b = this.selectedProject$.value) || void 0 === _b ? void 0 : _b.name, repository = null === (_c = this.selectedRepository$.value) || void 0 === _c ? void 0 : _c.name, branch = null === (_d = this.selectedBranch$.value) || void 0 === _d ? void 0 : _d.name, folder = null !== (_e = this.selectedFolderName$.value) && void 0 !== _e ? _e : "/";
                if (gitProviderType === git_src.IS.AzureDevOps && organization && project && repository && branch) return {
                    gitProviderType,
                    organizationName: organization,
                    projectName: project,
                    repositoryName: repository,
                    branchName: branch,
                    rootDirectory: folder,
                    isInitialized: !1
                };
                this.gitErrorService.handleClientSideGitError("Git_Invalid_Connection_Details");
            }, GitConnectionSettingsComponent.prototype.onCancelButtonClick = function() {
                this.returnToDefaultState();
            }, GitConnectionSettingsComponent.prototype.onSwitchCancelButtonClick = function() {
                var _this = this;
                this.gitConnectionService.getGitConnection(this.workspaceId).pipe((0, takeUntil.R)(this.onDestroy$), (0, 
                take.q)(1), (0, map.U)(function(gitConnection) {
                    var _a;
                    return (null === (_a = null == gitConnection ? void 0 : gitConnection.gitConnectionDetails) || void 0 === _a ? void 0 : _a.branchName) && _this.onBranchChange({
                        name: gitConnection.gitConnectionDetails.branchName
                    }), null;
                }));
            }, GitConnectionSettingsComponent.prototype.onDisconnectButtonClick = function() {
                var _this = this;
                this.tridentDialogService.open(GitDisconnectDialogComponent, {
                    panelClass: "dialog-style",
                    width: dialog_src.PW.Medium + "px",
                    data: {
                        workspaceName: this.workspaceName
                    }
                }).afterClosed().pipe((0, first.P)(), (0, filter.h)(function(buttonName) {
                    return "disconnectButton" === buttonName;
                }), (0, switchMap.w)(function() {
                    return _this.gitConnectionService.deleteGitConnection(_this.workspaceId).pipe((0, 
                    take.q)(1), (0, catchError.K)(function(httpError) {
                        return _this.gitErrorService.handleSyncGitError("Git_Disconnect_Failed", httpError), 
                        (0, of.of)();
                    }));
                })).subscribe(function() {
                    _this.connectionRequestInProgress$.next(!1), _this.isConnected$.next(!1), _this.returnToDefaultState();
                });
            }, GitConnectionSettingsComponent.prototype.closeWorkspaceSettings = function() {
                this.closeWorkspaceSettingsFromTab.emit();
            }, GitConnectionSettingsComponent.prototype.returnToDefaultState = function() {
                this.selectedFolderName$.next(null), this.resetPriorSelections(Selection.GitProviderType), 
                this.onGitProviderTypeChange(git_src.IS.AzureDevOps);
            }, GitConnectionSettingsComponent.prototype.setExistingConnection = function(gitConnectionDetails) {
                this.isConnected$.value || (this.isConnected$.next(!0), (null == gitConnectionDetails ? void 0 : gitConnectionDetails.gitProviderType) !== git_src.IS.GitHub && (this.selectedOrganization$.next({
                    name: gitConnectionDetails.organizationName
                }), this.selectedProject$.next({
                    name: gitConnectionDetails.projectName
                }), this.selectedRepository$.next({
                    name: gitConnectionDetails.repositoryName
                }), this.onRepositoryChange({
                    name: gitConnectionDetails.repositoryName
                }, !0), this.selectedBranch$.next({
                    name: gitConnectionDetails.branchName
                }), this.selectedFolderName$.next(gitConnectionDetails.rootDirectory)));
            }, GitConnectionSettingsComponent.prototype.sortArray = function(array) {
                return array.sort(function(a, b) {
                    return a.text.toLocaleLowerCase() > b.text.toLocaleLowerCase() ? 1 : -1;
                });
            }, GitConnectionSettingsComponent.prototype.filterBranchsByPrefix = function(items) {
                if (0 === items.length) return [];
                var pathsToFilter = [ "refs/tags/" ];
                return items.filter(function(item) {
                    return !pathsToFilter.some(function(substring) {
                        return item.name.toLowerCase().startsWith(substring.toLowerCase());
                    });
                });
            }, GitConnectionSettingsComponent.prototype.openSwitchBranchConfirmationDialog = function() {
                var _this = this;
                this.tridentDialogService.open(GitSwitchBranchDialogComponent, getSwitchBranchConfirmationDialogConfig(this.localizationService)).afterClosed().pipe((0, 
                filter.h)(function(output) {
                    return !!output;
                }), (0, take.q)(1), (0, switchMap.w)(function() {
                    return _this.switchBranchRequestInProgress$.next(!0), _this.doSwitchBranchFlow();
                })).subscribe(function() {
                    return _this.switchBranchRequestInProgress$.next(!1);
                });
            }, GitConnectionSettingsComponent.prototype.doSwitchBranchFlow = function() {
                var _this = this;
                return this.switchBranchRequestInProgress$.next(!0), this.gitConnectionService.getGitConnection(this.workspaceId).pipe((0, 
                take.q)(1), (0, concatMap.b)(function(gitConnection) {
                    var _a, _b;
                    if ((null === (_a = null == gitConnection ? void 0 : gitConnection.gitConnectionDetails) || void 0 === _a ? void 0 : _a.head) && (null === (_b = _this.selectedBranch$) || void 0 === _b ? void 0 : _b.value)) return (0, 
                    combineLatest.aj)([ _this.gitSwitchBranchService.switchBranch({
                        workspaceId: _this.workspaceId,
                        request: {
                            workspaceHead: gitConnection.gitConnectionDetails.head,
                            targetBranchName: _this.selectedBranch$.value.name
                        }
                    }), _this.gitSwitchBranchService.getSwitchBranchState(_this.workspaceId) ]);
                    throw "Git_Switch_Branch_Invalid_Request";
                }), (0, filter.h)(function(_a) {
                    var switchBranchResponse = _a[0], callState = _a[1];
                    return (0, git_src.pb)(callState) || callState === src.ND3.Completed || void 0 !== (null == switchBranchResponse ? void 0 : switchBranchResponse.response);
                }), (0, take.q)(1), (0, map.U)(function(_a) {
                    var _b;
                    return (0, git_src.pb)(_a[1]) ? void _this.onBranchChange(null === (_b = _this.selectedBranch$) || void 0 === _b ? void 0 : _b.value) : (_this.gitConnectionService.loadGitConnection(_this.workspaceId), 
                    void _this.closeWorkspaceSettings());
                }), (0, catchError.K)(function(error) {
                    return _this.switchBranchRequestInProgress$.next(!1), _this.gitErrorService.handleClientSideGitError(error), 
                    empty.E;
                }));
            }, GitConnectionSettingsComponent.prototype.logOpenGitIntegrationTabEvent = function() {
                var _this = this;
                this.gitAdminSwitchesService.isTenantAdminEnabled(this.workspaceId).pipe((0, take.q)(1)).subscribe(function(isTenantAdminEnabled) {
                    _this.telemetryService.logStandardFeatureEvent({
                        originatingService: "DataCloudUX",
                        featureName: "Git Integration",
                        activityName: "Open Git workspace settings tab",
                        activityAttributes: {
                            isConnected: _this.isConnected$.value,
                            restrictedByCapacity: !_this.isWorkspaceOnCapacity$.value,
                            restrictedByTenantAdminFS: !isTenantAdminEnabled
                        }
                    });
                });
            }, GitConnectionSettingsComponent.prototype.logGitSelection = function(activity, selectedFrom) {
                var _this = this;
                selectedFrom.pipe((0, take.q)(1), (0, map.U)(function(list) {
                    return null == list ? void 0 : list.length;
                })).subscribe(function(length) {
                    _this.telemetryService.logEvent({
                        name: activity,
                        properties: {
                            selectionContext: "Git connection settings",
                            selectionCount: length
                        }
                    });
                });
            }, GitConnectionSettingsComponent.prototype.initializeUISettings = function() {
                var _this = this;
                this.showConnectionDetailsV2$ = (0, combineLatest.aj)([ this.gitSessionStorageService.loadGitSessionStorage(this.workspaceId), this.gitConnectionService.getGitConnection(this.workspaceId) ]).pipe((0, 
                map.U)(function(_a) {
                    var state = _a[0], connection = _a[1];
                    return _this.showGenericUI && (null == state ? void 0 : state.selectedGitProviderType) === git_src.IS.GitHub && ((null == state ? void 0 : state.isConfigured) || void 0 !== (null == connection ? void 0 : connection.gitConnectionDetails));
                })), this.disableAndCollapseConnectionDetails$ = (0, combineLatest.aj)([ this.gitSessionStorageService.loadGitSessionStorage(this.workspaceId), this.gitConnectionService.getGitConnection(this.workspaceId) ]).pipe((0, 
                map.U)(function(_a) {
                    var _b, state = _a[0], connection = _a[1];
                    return !(!_this.showGenericUI || void 0 !== (null == connection ? void 0 : connection.gitConnectionDetails) || state.isWorkspaceOnCapaity && void 0 !== state.selectedGitProviderType && (null === (_b = _this.componentConfigMap[null == state ? void 0 : state.selectedGitProviderType]) || void 0 === _b ? void 0 : _b.isWorkspaceConnectedToGitProvider(state)));
                }));
            }, GitConnectionSettingsComponent.\u0275fac = function(t) {
                return new (t || GitConnectionSettingsComponent)(core["\u0275\u0275directiveInject"](dialog_src.uQ), core["\u0275\u0275directiveInject"](localization_service.z), core["\u0275\u0275directiveInject"](connection_src.Gg), core["\u0275\u0275directiveInject"](connection_src.rC), core["\u0275\u0275directiveInject"](connection_src.eL), core["\u0275\u0275directiveInject"](GitInitializationService), core["\u0275\u0275directiveInject"](error_src.jR), core["\u0275\u0275directiveInject"](notification_src.mn), core["\u0275\u0275directiveInject"](connection_src.Mv), core["\u0275\u0275directiveInject"](GitStatusService), core["\u0275\u0275directiveInject"](telemetry_service.t), core["\u0275\u0275directiveInject"](src.gCl), core["\u0275\u0275directiveInject"](workspaceContext._), core["\u0275\u0275directiveInject"](user_info_src.NQ), core["\u0275\u0275directiveInject"](feature_switch_service.V$));
            }, GitConnectionSettingsComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: GitConnectionSettingsComponent,
                selectors: [ [ "tri-git-connection-settings" ] ],
                inputs: {
                    workspaceId: "workspaceId",
                    workspaceName: "workspaceName"
                },
                outputs: {
                    closeWorkspaceSettingsFromTab: "closeWorkspaceSettingsFromTab"
                },
                features: [ core["\u0275\u0275InheritDefinitionFeature"] ],
                decls: 33,
                vars: 45,
                consts: [ [ 1, "title" ], [ 1, "subtitle" ], [ "target", "_blank", "href", "https://go.microsoft.com/fwlink/?linkid=2235346&clcid=0x409", "localize", "LearnMore", "localize-tooltip", "LearnMore", 1, "learn-more-link-icon" ], [ 3, "viewModel", 4, "ngIf" ], [ 3, "headerText", "iconName" ], [ 4, "ngIf", "ngIfElse" ], [ "showAzureDevopsUI", "" ], [ 1, "divider" ], [ 3, "headerText", "iconName", "collapsed", "disabled" ], [ "showConnectionDetailsV1", "" ], [ "class", "footer", 4, "ngIf" ], [ 3, "viewModel" ], [ 3, "workspaceId" ], [ 3, "userAccount", "gitProviderTypeChange" ], [ 3, "workspaceId", "closeWorkspaceSettings" ], [ 3, "isOnCapacity", "isConnected", "connectionRequestInProgress", "switchBranchRequestInProgress", "workspaceMemberRole", "organizationsList", "organizationsError", "selectedOrganization", "projectsList", "projectsError", "selectedProject", "repositoriesList", "repositoriesError", "selectedRepository", "branchesList", "branchesError", "selectedBranch", "newBranchState", "selectedFolderName", "organizationChange", "projectChange", "repositoryChange", "branchChange", "folderNameChange", "createNewBranchChange", "connectButtonClick", "switchBranchButtonClick", "cancelButtonClick", "cancelSwitchButtonClick", 4, "ngIf" ], [ 3, "isOnCapacity", "isConnected", "connectionRequestInProgress", "switchBranchRequestInProgress", "workspaceMemberRole", "organizationsList", "organizationsError", "selectedOrganization", "projectsList", "projectsError", "selectedProject", "repositoriesList", "repositoriesError", "selectedRepository", "branchesList", "branchesError", "selectedBranch", "newBranchState", "selectedFolderName", "organizationChange", "projectChange", "repositoryChange", "branchChange", "folderNameChange", "createNewBranchChange", "connectButtonClick", "switchBranchButtonClick", "cancelButtonClick", "cancelSwitchButtonClick" ], [ 1, "footer" ], [ "tri-button", "", 1, "disconnect-button", 3, "click" ] ],
                template: function(rf, ctx) {
                    if (1 & rf && (core["\u0275\u0275elementStart"](0, "h4", 0), core["\u0275\u0275text"](1), 
                    core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](2, "div", 1), 
                    core["\u0275\u0275text"](3), core["\u0275\u0275pipe"](4, "localize"), core["\u0275\u0275elementStart"](5, "tri-link", 2), 
                    core["\u0275\u0275text"](6), core["\u0275\u0275pipe"](7, "localize"), core["\u0275\u0275elementEnd"]()(), 
                    core["\u0275\u0275template"](8, GitConnectionSettingsComponent_tri_message_bar_8_Template, 1, 1, "tri-message-bar", 3), 
                    core["\u0275\u0275pipe"](9, "async"), core["\u0275\u0275template"](10, GitConnectionSettingsComponent_tri_message_bar_10_Template, 1, 1, "tri-message-bar", 3), 
                    core["\u0275\u0275pipe"](11, "async"), core["\u0275\u0275template"](12, GitConnectionSettingsComponent_tri_message_bar_12_Template, 1, 1, "tri-message-bar", 3), 
                    core["\u0275\u0275pipe"](13, "async"), core["\u0275\u0275template"](14, GitConnectionSettingsComponent_tri_message_bar_14_Template, 1, 1, "tri-message-bar", 3), 
                    core["\u0275\u0275pipe"](15, "async"), core["\u0275\u0275elementStart"](16, "tri-collapsed-container", 4), 
                    core["\u0275\u0275pipe"](17, "localize"), core["\u0275\u0275template"](18, GitConnectionSettingsComponent_ng_container_18_Template, 2, 1, "ng-container", 5), 
                    core["\u0275\u0275template"](19, GitConnectionSettingsComponent_ng_template_19_Template, 1, 1, "ng-template", null, 6, core["\u0275\u0275templateRefExtractor"]), 
                    core["\u0275\u0275elementEnd"](), core["\u0275\u0275element"](21, "div", 7), core["\u0275\u0275elementStart"](22, "tri-collapsed-container", 8), 
                    core["\u0275\u0275pipe"](23, "localize"), core["\u0275\u0275pipe"](24, "async"), 
                    core["\u0275\u0275pipe"](25, "async"), core["\u0275\u0275template"](26, GitConnectionSettingsComponent_ng_container_26_Template, 2, 1, "ng-container", 5), 
                    core["\u0275\u0275pipe"](27, "async"), core["\u0275\u0275template"](28, GitConnectionSettingsComponent_ng_template_28_Template, 2, 3, "ng-template", null, 9, core["\u0275\u0275templateRefExtractor"]), 
                    core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](30, GitConnectionSettingsComponent_div_30_Template, 4, 3, "div", 10), 
                    core["\u0275\u0275pipe"](31, "async"), core["\u0275\u0275pipe"](32, "async")), 2 & rf) {
                        var tmp_14_0, tmp_15_0, _r5 = core["\u0275\u0275reference"](20), _r8 = core["\u0275\u0275reference"](29);
                        core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate"](ctx.Title), 
                        core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"]("", core["\u0275\u0275pipeBind1"](4, 19, "Trident_Git_Git_Integration_Info"), " "), 
                        core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](7, 21, "LearnMore"), " "), 
                        core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", !1 === core["\u0275\u0275pipeBind1"](9, 23, ctx.isWorkspaceOnCapacity$)), 
                        core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", !1 === core["\u0275\u0275pipeBind1"](11, 25, ctx.isAdminFeatureSwitchEnabled$)), 
                        core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](13, 27, ctx.isServiceAppWorkspace$)), 
                        core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](15, 29, ctx.isAdoMFANeeded$)), 
                        core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("headerText", core["\u0275\u0275pipeBind1"](17, 31, "Trident_Git_Provider_Title"))("iconName", "plug_connected_20_regular"), 
                        core["\u0275\u0275attribute"]("data-testid", "git-provider-accounts-connection-settings"), 
                        core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", ctx.showGenericUI)("ngIfElse", _r5), 
                        core["\u0275\u0275advance"](4), core["\u0275\u0275property"]("headerText", core["\u0275\u0275pipeBind1"](23, 33, "Trident_Git_Repository_And_Branch"))("iconName", "archive_20_regular")("collapsed", null === (tmp_14_0 = core["\u0275\u0275pipeBind1"](24, 35, ctx.disableAndCollapseConnectionDetails$)) || void 0 === tmp_14_0 || tmp_14_0)("disabled", null === (tmp_15_0 = core["\u0275\u0275pipeBind1"](25, 37, ctx.disableAndCollapseConnectionDetails$)) || void 0 === tmp_15_0 || tmp_15_0), 
                        core["\u0275\u0275advance"](4), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](27, 39, ctx.showConnectionDetailsV2$))("ngIfElse", _r8), 
                        core["\u0275\u0275advance"](4), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](31, 41, ctx.isConnected$) && core["\u0275\u0275pipeBind1"](32, 43, ctx.workspaceMemberRole$) === ctx.FolderMemberRole.Admin);
                    }
                },
                dependencies: [ common.NgIf, GitProviderAccountsComponent, TriCollapsedContainerComponent, tri_link_component.v, tri_message_bar_component.h, GitConnectionDetailsSettingsComponent, GitConnectionDetailsSettingsV2Component, GitProviderSettingsComponent, common.AsyncPipe, localize_pipe.Y ],
                styles: [ "[_nghost-%COMP%]{font-size:14px}.title[_ngcontent-%COMP%]{margin:0 0 6px;font-weight:600}.subtitle[_ngcontent-%COMP%]{margin-bottom:20px}tri-message-bar[_ngcontent-%COMP%]{margin-bottom:16px}.divider[_ngcontent-%COMP%]{height:16px}.footer[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:flex-end;padding:0 0 16px 12px;gap:8px;border-radius:2px;margin-top:16px}.footer[_ngcontent-%COMP%]   .disconnect-button[_ngcontent-%COMP%]{padding:0 12px;gap:4px;min-width:166px;height:32px;background:var(--globalColorWhite);border-radius:4px}" ],
                changeDetection: 0
            }), GitConnectionSettingsComponent;
        }(rx_component.w), WorkspaceSettingsGitIntegrationComponent = function() {
            function WorkspaceSettingsGitIntegrationComponent(workspaceSettingsService) {
                this.workspaceSettingsService = workspaceSettingsService, this.workspaceObjectId = this.workspaceSettingsService.workspaceObjectId, 
                this.workspaceName = this.workspaceSettingsService.workspaceName, this.closeWorkspaceSettingsFromTab = new core.EventEmitter;
            }
            return WorkspaceSettingsGitIntegrationComponent.prototype.onCloseWorkspaceSettingsFromTab = function() {
                this.closeWorkspaceSettingsFromTab.emit();
            }, WorkspaceSettingsGitIntegrationComponent.\u0275fac = function(t) {
                return new (t || WorkspaceSettingsGitIntegrationComponent)(core["\u0275\u0275directiveInject"](tri_workspace_settings.X));
            }, WorkspaceSettingsGitIntegrationComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: WorkspaceSettingsGitIntegrationComponent,
                selectors: [ [ "tri-workspace-settings-git-integration" ] ],
                outputs: {
                    closeWorkspaceSettingsFromTab: "closeWorkspaceSettingsFromTab"
                },
                decls: 1,
                vars: 2,
                consts: [ [ 3, "workspaceId", "workspaceName", "closeWorkspaceSettingsFromTab" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementStart"](0, "tri-git-connection-settings", 0), 
                    core["\u0275\u0275listener"]("closeWorkspaceSettingsFromTab", function() {
                        return ctx.onCloseWorkspaceSettingsFromTab();
                    }), core["\u0275\u0275elementEnd"]()), 2 & rf && core["\u0275\u0275property"]("workspaceId", ctx.workspaceObjectId)("workspaceName", ctx.workspaceName);
                },
                dependencies: [ GitConnectionSettingsComponent ],
                changeDetection: 0
            }), WorkspaceSettingsGitIntegrationComponent;
        }(), CacheTypes = function(CacheTypes) {
            return CacheTypes.S3 = "S3", CacheTypes.GCP = "GCP", CacheTypes.ExternalADLS = "ExternalADLS", 
            CacheTypes.S3Compatible = "S3Compatible", CacheTypes.OnPrem = "OnPrem", CacheTypes.InternalCrossRegion = "InternalCrossRegion", 
            CacheTypes.OneLakeDatashare = "OneLakeDatashare", CacheTypes;
        }({}), OperationState = function(OperationState) {
            return OperationState.Started = "STARTED", OperationState.InProgress = "INPROGRESS", 
            OperationState.Completed = "COMPLETED", OperationState;
        }({}), OperationType = function(OperationType) {
            return OperationType.CacheReset = "CACHERESET", OperationType.CacheDisable = "CACHEDISABLE", 
            OperationType.RetentionPeriodUpDate = "RETENTIONPERIODUPDATE", OperationType;
        }({});
        function WorkspaceSettingsOneLakeComponent_ng_container_0_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275element"](1, "tri-spinner", 1), 
            core["\u0275\u0275elementContainerEnd"]());
        }
        function WorkspaceSettingsOneLakeComponent_ng_container_2_section_2_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementStart"](0, "section", 10), core["\u0275\u0275text"](1), 
            core["\u0275\u0275pipe"](2, "localize"), core["\u0275\u0275elementEnd"]()), 2 & rf && (core["\u0275\u0275advance"](1), 
            core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](2, 1, "Trident_Unsaved_Changes_OneLake_Settings"), " "));
        }
        function WorkspaceSettingsOneLakeComponent_ng_container_2_ng_container_25_tri_switch_11_Template(rf, ctx) {
            if (1 & rf) {
                var _r6 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "tri-switch", 20), core["\u0275\u0275listener"]("ngModelChange", function($event) {
                    core["\u0275\u0275restoreView"](_r6);
                    var ctx_r5 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r5.isSwitchToggled = $event);
                })("ngModelChange", function() {
                    core["\u0275\u0275restoreView"](_r6);
                    var ctx_r7 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r7.toggleCacheSettings());
                }), core["\u0275\u0275elementStart"](1, "div", 21), core["\u0275\u0275text"](2), 
                core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var ctx_r4 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275property"]("ngModel", ctx_r4.isSwitchToggled)("disabled", !ctx_r4.isWorkspaceAdmin)("aria-label", ctx_r4.isSwitchToggled ? ctx_r4.toggleSwitchOn : ctx_r4.toggleSwitchOff), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](ctx_r4.isSwitchToggled ? ctx_r4.toggleSwitchOn : ctx_r4.toggleSwitchOff);
            }
        }
        function WorkspaceSettingsOneLakeComponent_ng_container_2_ng_container_25_Template(rf, ctx) {
            if (1 & rf) {
                var _r9 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "tri-workspace-settings-section-divider", 11)(2, "h3", 8), 
                core["\u0275\u0275text"](3), core["\u0275\u0275pipe"](4, "localize"), core["\u0275\u0275elementEnd"](), 
                core["\u0275\u0275elementStart"](5, "div", 12)(6, "section", 13)(7, "h3", 8), core["\u0275\u0275text"](8), 
                core["\u0275\u0275pipe"](9, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](10, "div", 2), 
                core["\u0275\u0275template"](11, WorkspaceSettingsOneLakeComponent_ng_container_2_ng_container_25_tri_switch_11_Template, 3, 4, "tri-switch", 14), 
                core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementStart"](12, "div", 2)(13, "section", 5), 
                core["\u0275\u0275text"](14), core["\u0275\u0275pipe"](15, "localize"), core["\u0275\u0275element"](16, "br"), 
                core["\u0275\u0275elementStart"](17, "tri-link", 15), core["\u0275\u0275text"](18), 
                core["\u0275\u0275pipe"](19, "localize"), core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementStart"](20, "div")(21, "section", 16), 
                core["\u0275\u0275text"](22), core["\u0275\u0275pipe"](23, "localize"), core["\u0275\u0275elementStart"](24, "span"), 
                core["\u0275\u0275text"](25), core["\u0275\u0275elementEnd"](), core["\u0275\u0275text"](26), 
                core["\u0275\u0275pipe"](27, "localize"), core["\u0275\u0275elementEnd"]()()(), 
                core["\u0275\u0275elementStart"](28, "div", 17)(29, "button", 18), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r9);
                    var ctx_r8 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r8.saveCacheSettings());
                }), core["\u0275\u0275text"](30), core["\u0275\u0275pipe"](31, "localize"), core["\u0275\u0275elementEnd"](), 
                core["\u0275\u0275elementStart"](32, "button", 19), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r9);
                    var ctx_r10 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r10.discardChanges());
                }), core["\u0275\u0275text"](33), core["\u0275\u0275pipe"](34, "localize"), core["\u0275\u0275elementEnd"]()()()(), 
                core["\u0275\u0275elementContainerEnd"]();
            }
            if (2 & rf) {
                var ctx_r3 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](4, 13, "Trident_Workspace_Settings_OneLake_S3ShortcutCachePreview"), " "), 
                core["\u0275\u0275advance"](5), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](9, 15, "Trident_Workspace_Settings_OneLake_S3ShortcutCacheDuration"), " "), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngIf", !ctx_r3.isSaveInProgress), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](15, 17, "Trident_Workspace_Settings_OneLake_S3ShortcutCacheDuration_Description"), " "), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("external", !0), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](19, 19, "Trident_Workspace_Settings_OneLake_S3ShortcutCacheDuration_Description_LearnMoreText"), " "), 
                core["\u0275\u0275advance"](4), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](23, 21, "Trident_Workspace_Settings_OneLake_S3ShortcutCacheDuration_RetentionPeriod"), " "), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"](" ", ctx_r3.selectedCacheDuration, " "), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](27, 23, ctx_r3.selectedCacheDuration > 0 ? "TimeUnit_Day" : "TimeUnit_Days"), " "), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("disabled", !ctx_r3.isWorkspaceAdmin || ctx_r3.isButtonDisabled), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](31, 25, "PBI_Button_Label_Save"), " "), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("disabled", !ctx_r3.isWorkspaceAdmin || ctx_r3.isButtonDisabled), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](34, 27, "Settings_DiscardButtonText"), " ");
            }
        }
        function WorkspaceSettingsOneLakeComponent_ng_container_2_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "div", 2), 
            core["\u0275\u0275template"](2, WorkspaceSettingsOneLakeComponent_ng_container_2_section_2_Template, 3, 3, "section", 3), 
            core["\u0275\u0275elementStart"](3, "h2", 4), core["\u0275\u0275text"](4), core["\u0275\u0275pipe"](5, "localize"), 
            core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](6, "section", 5), 
            core["\u0275\u0275text"](7), core["\u0275\u0275pipe"](8, "localize"), core["\u0275\u0275element"](9, "br"), 
            core["\u0275\u0275elementStart"](10, "tri-link", 6), core["\u0275\u0275text"](11), 
            core["\u0275\u0275pipe"](12, "localize"), core["\u0275\u0275elementEnd"]()()(), 
            core["\u0275\u0275elementStart"](13, "tri-workspace-settings-section-divider", 7)(14, "div", 2)(15, "h3", 8), 
            core["\u0275\u0275text"](16), core["\u0275\u0275pipe"](17, "localize"), core["\u0275\u0275elementEnd"](), 
            core["\u0275\u0275elementStart"](18, "section", 5), core["\u0275\u0275text"](19), 
            core["\u0275\u0275pipe"](20, "localize"), core["\u0275\u0275element"](21, "br"), 
            core["\u0275\u0275elementStart"](22, "tri-link", 9), core["\u0275\u0275text"](23), 
            core["\u0275\u0275pipe"](24, "localize"), core["\u0275\u0275elementEnd"]()()()(), 
            core["\u0275\u0275template"](25, WorkspaceSettingsOneLakeComponent_ng_container_2_ng_container_25_Template, 35, 29, "ng-container", 0), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var ctx_r1 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", ctx_r1.isSaveInProgress), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](5, 10, "Trident_Workspace_Settings_OneLake_Settings"), " "), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](8, 12, "Trident_Workspace_Settings_OneLake_S3ShortcutManageSetting"), " "), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("external", !0), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](12, 14, "Trident_Workspace_Settings_OneLake_Settings_Description_LearnMoreText"), " "), 
                core["\u0275\u0275advance"](5), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](17, 16, "Trident_Workspace_Settings_OneLake_DownloadOneLakeAppLink"), " "), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](20, 18, "Trident_Workspace_Settings_OneLake_DownloadOneLakeAppLink_Description"), " "), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("external", !0), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](24, 20, "Trident_Workspace_Settings_OneLake_DownloadOneLakeAppLink_Description_DownloadOneLakeText"), " "), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", ctx_r1.enableOneLakeUXS3Cache);
            }
        }
        var WorkspaceSettingsOneLakeComponent = function() {
            function WorkspaceSettingsOneLakeComponent(workspaceSettingsService, featureSwitchService, localizationService, changeDetectorRef) {
                var _a, _this = this;
                this.workspaceSettingsService = workspaceSettingsService, this.featureSwitchService = featureSwitchService, 
                this.localizationService = localizationService, this.changeDetectorRef = changeDetectorRef, 
                this.closeSettings = new core.EventEmitter, this.isWorkspaceAdmin = !1, this.initialized$ = this.workspaceSettingsService.initialized$, 
                this.enableOneLakeUXS3Cache = !0, this.toggleSwitchOn = "", this.toggleSwitchOff = "", 
                this.isSaveInProgress = !1, this.initialized$.subscribe(function(initialized) {
                    initialized && (_this.isWorkspaceAdmin = _this.workspaceSettingsService.isWorkspaceAdmin);
                }), this.selectedCacheDuration = 0, this.isSwitchToggled = this.isCacheEnabled = !1, 
                this.enableOneLakeUXS3Cache = !!(null === (_a = this.featureSwitchService.featureSwitches) || void 0 === _a ? void 0 : _a.OneLakeUXS3Cache), 
                this.isButtonDisabled = !0, this.fileReadCountForCaching = 1, this.maxCacheSizeInGB = 1, 
                this.maxCacheStalenessPeriodInHours = 1;
            }
            return WorkspaceSettingsOneLakeComponent.prototype.ngOnInit = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var cacheSettingsData;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return this.toggleSwitchOn = this.localizationService.get("ToggleSwitchOn"), this.toggleSwitchOff = this.localizationService.get("ToggleSwitchOff"), 
                            [ 4, this.workspaceSettingsService.retrieveCacheSettings(CacheTypes.S3) ];

                          case 1:
                            return cacheSettingsData = _a.sent(), this.selectedCacheDuration = null == cacheSettingsData ? void 0 : cacheSettingsData.cacheRetentionPeriodInDays, 
                            this.isSwitchToggled = this.isCacheEnabled = (null == cacheSettingsData ? void 0 : cacheSettingsData.isCacheEnabled) || !1, 
                            this.fileReadCountForCaching = (null == cacheSettingsData ? void 0 : cacheSettingsData.fileReadCountForCaching) || 1, 
                            this.maxCacheSizeInGB = (null == cacheSettingsData ? void 0 : cacheSettingsData.maxCacheSizeInGB) || 1, 
                            this.maxCacheStalenessPeriodInHours = (null == cacheSettingsData ? void 0 : cacheSettingsData.maxCacheStalenessPeriodInHours) || 1, 
                            (null == cacheSettingsData ? void 0 : cacheSettingsData.isCacheEnabled) || (this.selectedCacheDuration = 0), 
                            this.changeDetectorRef.detectChanges(), [ 2 ];
                        }
                    });
                });
            }, WorkspaceSettingsOneLakeComponent.prototype.handleSliderChange = function(val) {
                this.selectedCacheDuration = val;
            }, WorkspaceSettingsOneLakeComponent.prototype.saveCacheSettings = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var responseData;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return this.isSwitchToggled ? (this.workspaceSettingsService.saveCacheSettings(CacheTypes.S3, {
                                isCacheEnabled: this.isSwitchToggled,
                                cacheRetentionPeriodInDays: 1,
                                fileReadCountForCaching: 1,
                                maxCacheSizeInGB: 1,
                                maxCacheStalenessPeriodInHours: 1
                            }), [ 4, this.workspaceSettingsService.retrieveCacheSettings(CacheTypes.S3) ]) : [ 3, 2 ];

                          case 1:
                            return responseData = _a.sent(), this.isCacheEnabled = null == responseData ? void 0 : responseData.isCacheEnabled, 
                            this.isButtonDisabled = !0, this.selectedCacheDuration = (null == responseData ? void 0 : responseData.cacheRetentionPeriodInDays) || 0, 
                            this.changeDetectorRef.detectChanges(), [ 3, 4 ];

                          case 2:
                            return this.workspaceSettingsService.disableCacheSettings(CacheTypes.S3), this.workspaceSettingsService.isCacheDeleted$ ? (this.isButtonDisabled = !0, 
                            [ 4, this.workspaceSettingsService.retrieveCacheSettings(CacheTypes.S3) ]) : [ 3, 4 ];

                          case 3:
                            responseData = _a.sent(), this.isCacheEnabled = null == responseData ? void 0 : responseData.isCacheEnabled, 
                            this.setRetentionPeriod(), this.changeDetectorRef.detectChanges(), _a.label = 4;

                          case 4:
                            return [ 2 ];
                        }
                    });
                });
            }, WorkspaceSettingsOneLakeComponent.prototype.toggleCacheSettings = function() {
                this.setRetentionPeriod(), this.isButtonDisabled = !(!this.isSwitchToggled && this.isCacheEnabled || this.isSwitchToggled && !this.isCacheEnabled);
            }, WorkspaceSettingsOneLakeComponent.prototype.discardChanges = function() {
                this.isSwitchToggled = !this.isSwitchToggled, (this.isSwitchToggled && this.isCacheEnabled || !this.isSwitchToggled && !this.isCacheEnabled) && (this.isButtonDisabled = !0), 
                this.setRetentionPeriod();
            }, WorkspaceSettingsOneLakeComponent.prototype.setRetentionPeriod = function() {
                (!this.isSwitchToggled && this.isCacheEnabled || !this.isSwitchToggled && !this.isCacheEnabled) && (this.selectedCacheDuration = 0), 
                (this.isSwitchToggled && !this.isCacheEnabled || this.isSwitchToggled && this.isCacheEnabled) && (this.selectedCacheDuration = 1);
            }, WorkspaceSettingsOneLakeComponent.\u0275fac = function(t) {
                return new (t || WorkspaceSettingsOneLakeComponent)(core["\u0275\u0275directiveInject"](tri_workspace_settings.X), core["\u0275\u0275directiveInject"](feature_switch_service.V$), core["\u0275\u0275directiveInject"](localization_service.z), core["\u0275\u0275directiveInject"](core.ChangeDetectorRef));
            }, WorkspaceSettingsOneLakeComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: WorkspaceSettingsOneLakeComponent,
                selectors: [ [ "tri-workspace-settings-onelake" ] ],
                outputs: {
                    closeSettings: "closeSettings"
                },
                decls: 4,
                vars: 6,
                consts: [ [ 4, "ngIf" ], [ 1, "tri-flex", "tri-items-center", "tri-justify-center", "tri-h-full" ], [ 1, "onelake-settings-container", "tri-flex", "tri-flex-col" ], [ "class", "onelake-settings-description-banner", 4, "ngIf" ], [ 1, "onelake-settings-header", 2, "margin-top", "0" ], [ 1, "onelake-settings-description" ], [ "localize", "Trident_Workspace_Settings_OneLake_Settings_Description_LearnMoreText", "href", "https://go.microsoft.com/fwlink/?linkid=2246518&clcid=0x409", "rel", "noopener noreferrer", "target", "_blank", 1, "learn-more-link", 3, "external" ], [ "sectionNameLocKey", "Trident_Workspace_Settings_OneLake_DownloadOneLakeAppLink" ], [ 1, "onelake-settings-subheader" ], [ "localize", "Trident_Workspace_Settings_OneLake_DownloadOneLakeAppLink_Description_DownloadOneLakeText", "href", "https://go.microsoft.com/fwlink/?linkid=2235671", "rel", "noopener noreferrer", "target", "_blank", 1, "learn-more-link", 3, "external" ], [ 1, "onelake-settings-description-banner" ], [ "sectionNameLocKey", "Trident_Workspace_Settings_OneLake_S3ShortcutSettings" ], [ 1, "preview-cache-box" ], [ 2, "display", "flex", "justify-content", "space-between", "align-items", "center" ], [ "class", "switcher", 3, "ngModel", "disabled", "aria-label", "ngModelChange", 4, "ngIf" ], [ "localize", "Trident_Workspace_Settings_OneLake_S3ShortcutCacheDuration_Description_LearnMoreText", "href", "https://go.microsoft.com/fwlink/?linkid=2234198", "rel", "noopener noreferrer", "target", "_blank", 1, "learn-more-link", 3, "external" ], [ 1, "onelake-settings-description", "retention-period", 2, "font-weight", "var(--font-weight-semi-bold)" ], [ 1, "premium-footer-buttons", "tri-flex" ], [ "tri-button", "", "appearance", "primary", 1, "footer-button", 2, "margin-right", "5px", 3, "disabled", "click" ], [ "tri-button", "", 1, "footer-button", 3, "disabled", "click" ], [ 1, "switcher", 3, "ngModel", "disabled", "aria-label", "ngModelChange" ], [ "tri-switch-text", "" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275template"](0, WorkspaceSettingsOneLakeComponent_ng_container_0_Template, 2, 0, "ng-container", 0), 
                    core["\u0275\u0275pipe"](1, "async"), core["\u0275\u0275template"](2, WorkspaceSettingsOneLakeComponent_ng_container_2_Template, 26, 22, "ng-container", 0), 
                    core["\u0275\u0275pipe"](3, "async")), 2 & rf && (core["\u0275\u0275property"]("ngIf", !1 === core["\u0275\u0275pipeBind1"](1, 2, ctx.initialized$)), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", !0 === core["\u0275\u0275pipeBind1"](3, 4, ctx.initialized$)));
                },
                dependencies: [ common.NgIf, fesm2022_forms.JJ, fesm2022_forms.On, tri_spinner_component.D, tri_switch_component.t, tri_link_component.v, WorkspaceSettingsSectionDividerComponent, common.AsyncPipe, localize_pipe.Y ],
                styles: [ "[_nghost-%COMP%]   .onelake-settings-header[_ngcontent-%COMP%]{font-size:var(--fontSizeBase600);line-height:var(--lineHeightBase600);font-weight:var(--fontWeightSemibold)}[_nghost-%COMP%]   .header-with-line-decor[_ngcontent-%COMP%]   .section-header-line-container[_ngcontent-%COMP%]{align-items:flex-start;height:20px}[_nghost-%COMP%]   .header-with-line-decor[_ngcontent-%COMP%]   .section-header-line-container[_ngcontent-%COMP%]   .section-header-line[_ngcontent-%COMP%]{border-bottom:1px solid var(--colorNeutralStroke2);height:50%}[_nghost-%COMP%]   .header-with-line-decor[_ngcontent-%COMP%]   .section-header-line-container.prefix-line[_ngcontent-%COMP%]{width:8px}[_nghost-%COMP%]   .header-with-line-decor[_ngcontent-%COMP%]   .section-header-line-container.postfix-line[_ngcontent-%COMP%]{flex-grow:1}[_nghost-%COMP%]   .header-with-line-decor[_ngcontent-%COMP%]   .section-header-text[_ngcontent-%COMP%]{margin:0 12px;font-size:12px;font-weight:400;line-height:20px;color:var(--colorNeutralForeground2)}[_nghost-%COMP%]   .onelake-settings-subheader[_ngcontent-%COMP%]{font-size:var(--fontSizeBase400);line-height:var(--lineHeightBase400);font-weight:var(--fontWeightSemibold);margin-top:0!important}[_nghost-%COMP%]   .onelake-settings-description[_ngcontent-%COMP%]{font-weight:var(--fontWeightRegular);font-size:var(--fontSizeBase300);line-height:var(--lineHeightBase300);color:var(--colorNeutralForeground3);margin-bottom:10px}[_nghost-%COMP%]   h3[_ngcontent-%COMP%]{font-size:16px;display:block;margin-block-start:1.33em;margin-block-end:1.33em;margin-inline-start:0px;margin-inline-end:0px;font-weight:700;margin:10px 0}[_nghost-%COMP%]   .learn-more-link[_ngcontent-%COMP%]{text-decoration:none;margin-bottom:5px;margin-top:5px}[_nghost-%COMP%]   .preview-cache-box[_ngcontent-%COMP%]{padding:12px;border:1px solid var(--globalColorGrey82);border-radius:8px}[_nghost-%COMP%]     .section{margin-bottom:6px!important}[_nghost-%COMP%]   .switcher[_ngcontent-%COMP%]     .tri-switch-internal{padding:0 0 8px!important}" ],
                changeDetection: 0
            }), WorkspaceSettingsOneLakeComponent;
        }(), WorkspaceIdentityProvisionState = function(WorkspaceIdentityProvisionState) {
            return WorkspaceIdentityProvisionState[WorkspaceIdentityProvisionState.InProgress = 0] = "InProgress", 
            WorkspaceIdentityProvisionState[WorkspaceIdentityProvisionState.Active = 1] = "Active", 
            WorkspaceIdentityProvisionState[WorkspaceIdentityProvisionState.Inactive = 2] = "Inactive", 
            WorkspaceIdentityProvisionState[WorkspaceIdentityProvisionState.Deleting = 3] = "Deleting", 
            WorkspaceIdentityProvisionState[WorkspaceIdentityProvisionState.Unusable = 4] = "Unusable", 
            WorkspaceIdentityProvisionState[WorkspaceIdentityProvisionState.Failed = 5] = "Failed", 
            WorkspaceIdentityProvisionState[WorkspaceIdentityProvisionState.DeleteFailed = 6] = "DeleteFailed", 
            WorkspaceIdentityProvisionState;
        }({}), WorkspaceIdentityRole = function(WorkspaceIdentityRole) {
            return WorkspaceIdentityRole[WorkspaceIdentityRole.Administrator = 15] = "Administrator", 
            WorkspaceIdentityRole[WorkspaceIdentityRole.Member = 13] = "Member", WorkspaceIdentityRole[WorkspaceIdentityRole.Contributor = 9] = "Contributor", 
            WorkspaceIdentityRole[WorkspaceIdentityRole.Viewer = 1] = "Viewer", WorkspaceIdentityRole[WorkspaceIdentityRole.None = 0] = "None", 
            WorkspaceIdentityRole;
        }({}), WorkspaceIdentityUsersColumn = function(WorkspaceIdentityUsersColumn) {
            return WorkspaceIdentityUsersColumn.Name = "Name", WorkspaceIdentityUsersColumn.Permissions = "Permissions", 
            WorkspaceIdentityUsersColumn;
        }({});
        function WorkspaceSettingsWorkspaceIdentityComponent_ng_container_0_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275element"](1, "tri-spinner", 2), 
            core["\u0275\u0275elementContainerEnd"]());
        }
        function WorkspaceSettingsWorkspaceIdentityComponent_tri_message_bar_3_Template(rf, ctx) {
            if (1 & rf) {
                var _r5 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "tri-message-bar", 3), core["\u0275\u0275listener"]("hideMessageBar", function() {
                    core["\u0275\u0275restoreView"](_r5);
                    var ctx_r4 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r4.dismissError());
                }), core["\u0275\u0275pipe"](1, "async"), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var tmp_0_0, ctx_r1 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("viewModel", ctx_r1.getErrorMessageBarViewModel(null !== (tmp_0_0 = core["\u0275\u0275pipeBind1"](1, 1, ctx_r1.apiError$)) && void 0 !== tmp_0_0 ? tmp_0_0 : ""));
            }
        }
        function WorkspaceSettingsWorkspaceIdentityComponent_tri_message_bar_6_Template(rf, ctx) {
            if (1 & rf) {
                var _r7 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "tri-message-bar", 3), core["\u0275\u0275listener"]("hideMessageBar", function() {
                    core["\u0275\u0275restoreView"](_r7);
                    var ctx_r6 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r6.dismissFabricWarning());
                }), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r2 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("viewModel", ctx_r2.getFabricWarningMessageBarViewModel());
            }
        }
        function WorkspaceSettingsWorkspaceIdentityComponent_ng_container_8_section_14_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementStart"](0, "section", 10), core["\u0275\u0275element"](1, "tri-spinner")(2, "label", 11), 
            core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementEnd"]()), 2 & rf && (core["\u0275\u0275advance"](2), 
            core["\u0275\u0275attribute"]("aria-label", core["\u0275\u0275pipeBind1"](3, 1, "AnalysisServer_Loading")));
        }
        function WorkspaceSettingsWorkspaceIdentityComponent_ng_container_8_section_17_button_7_Template(rf, ctx) {
            if (1 & rf) {
                var _r14 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "button", 16), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r14);
                    var ctx_r13 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r13.createWorkspaceIdentity());
                }), core["\u0275\u0275pipe"](1, "async"), core["\u0275\u0275element"](2, "tri-svg-icon", 17), 
                core["\u0275\u0275text"](3), core["\u0275\u0275pipe"](4, "localize"), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r11 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275property"]("disabled", !!core["\u0275\u0275pipeBind1"](1, 2, ctx_r11.disableCreateIdentity$)), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](4, 4, "Trident_Workspace_Settings_Workspace_Identity"), " ");
            }
        }
        function WorkspaceSettingsWorkspaceIdentityComponent_ng_container_8_section_17_div_9_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementStart"](0, "div", 18), core["\u0275\u0275element"](1, "tri-spinner"), 
            core["\u0275\u0275elementStart"](2, "span", 11), core["\u0275\u0275pipe"](3, "localize"), 
            core["\u0275\u0275text"](4), core["\u0275\u0275pipe"](5, "localize"), core["\u0275\u0275elementEnd"]()()), 
            2 & rf && (core["\u0275\u0275advance"](2), core["\u0275\u0275attribute"]("aria-label", core["\u0275\u0275pipeBind1"](3, 2, "CapacityProvisioning_SpinnerText")), 
            core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](5, 4, "CapacityProvisioning_SpinnerText")));
        }
        function WorkspaceSettingsWorkspaceIdentityComponent_ng_container_8_section_17_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "section", 4)(1, "h4", 12), core["\u0275\u0275text"](2), 
            core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](4, "div", 13), 
            core["\u0275\u0275text"](5), core["\u0275\u0275pipe"](6, "localize"), core["\u0275\u0275elementEnd"](), 
            core["\u0275\u0275template"](7, WorkspaceSettingsWorkspaceIdentityComponent_ng_container_8_section_17_button_7_Template, 5, 6, "button", 14), 
            core["\u0275\u0275pipe"](8, "async"), core["\u0275\u0275template"](9, WorkspaceSettingsWorkspaceIdentityComponent_ng_container_8_section_17_div_9_Template, 6, 6, "div", 15), 
            core["\u0275\u0275pipe"](10, "async"), core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r9 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](3, 4, "Trident_Workspace_Settings_Workspace_Identity_Create"), " "), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](6, 6, "Trident_Workspace_Settings_Workspace_Identity_Create_Description"), " "), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", !1 === core["\u0275\u0275pipeBind1"](8, 8, ctx_r9.isCreating$)), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", !0 === core["\u0275\u0275pipeBind1"](10, 10, ctx_r9.isCreating$));
            }
        }
        function WorkspaceSettingsWorkspaceIdentityComponent_ng_container_8_section_20_section_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r21 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "section", 34)(1, "h4"), core["\u0275\u0275text"](2), 
                core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](4, "tri-switch", 35), 
                core["\u0275\u0275listener"]("ngModelChange", function($event) {
                    core["\u0275\u0275restoreView"](_r21);
                    var ctx_r20 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r20.workspaceIdentity.allowUsersToUseWorkspaceIdentity = $event);
                })("ngModelChange", function($event) {
                    core["\u0275\u0275restoreView"](_r21);
                    var ctx_r22 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r22.onToggleAllowUsersToUseWorkspaceIdentity($event));
                }), core["\u0275\u0275pipe"](5, "async"), core["\u0275\u0275pipe"](6, "localize"), 
                core["\u0275\u0275elementStart"](7, "div", 36), core["\u0275\u0275text"](8), core["\u0275\u0275pipe"](9, "localize"), 
                core["\u0275\u0275pipe"](10, "localize"), core["\u0275\u0275elementEnd"]()()();
            }
            if (2 & rf) {
                var ctx_r15 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](3, 5, "Trident_Workspace_Settings_Workspace_Identity_UsersCanUseIdentity")), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("disabled", !!core["\u0275\u0275pipeBind1"](5, 7, ctx_r15.disableUseIdentity$))("aria-label", core["\u0275\u0275pipeBind1"](6, 9, "Trident_Workspace_Settings_Workspace_Identity_UsersCanUseIdentity"))("ngModel", ctx_r15.workspaceIdentity.allowUsersToUseWorkspaceIdentity), 
                core["\u0275\u0275advance"](4), core["\u0275\u0275textInterpolate"](ctx_r15.workspaceIdentity.allowUsersToUseWorkspaceIdentity ? core["\u0275\u0275pipeBind1"](9, 11, "ToggleSwitchOn") : core["\u0275\u0275pipeBind1"](10, 13, "ToggleSwitchOff"));
            }
        }
        function WorkspaceSettingsWorkspaceIdentityComponent_ng_container_8_section_20_tri_svg_icon_32_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "tri-svg-icon", 37);
        }
        function WorkspaceSettingsWorkspaceIdentityComponent_ng_container_8_section_20_div_35_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 38), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r17 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate1"](" ", ctx_r17.getStateDescription(), " ");
            }
        }
        function WorkspaceSettingsWorkspaceIdentityComponent_ng_container_8_section_20_section_36_div_4_Template(rf, ctx) {
            if (1 & rf) {
                var _r31 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div", 50)(1, "button", 51), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r31);
                    var ctx_r30 = core["\u0275\u0275nextContext"](4);
                    return core["\u0275\u0275resetView"](ctx_r30.addAuthorizedUsers());
                }), core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275element"](3, "tri-svg-icon", 17), 
                core["\u0275\u0275text"](4), core["\u0275\u0275pipe"](5, "localize"), core["\u0275\u0275elementEnd"](), 
                core["\u0275\u0275elementStart"](6, "button", 51), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r31);
                    var ctx_r32 = core["\u0275\u0275nextContext"](4);
                    return core["\u0275\u0275resetView"](ctx_r32.deleteAuthorizedUsers());
                }), core["\u0275\u0275pipe"](7, "async"), core["\u0275\u0275element"](8, "tri-svg-icon", 52), 
                core["\u0275\u0275text"](9), core["\u0275\u0275pipe"](10, "localize"), core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var ctx_r23 = core["\u0275\u0275nextContext"](4);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("disabled", !!core["\u0275\u0275pipeBind1"](2, 4, ctx_r23.disableIdentity$)), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](5, 6, "Add_User_Or_Group"), " "), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("disabled", !!core["\u0275\u0275pipeBind1"](7, 8, ctx_r23.disableIdentity$)), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](10, 10, "Remove"), " ");
            }
        }
        function WorkspaceSettingsWorkspaceIdentityComponent_ng_container_8_section_20_section_36_th_9_Template(rf, ctx) {
            if (1 & rf) {
                var _r34 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "th", 53)(1, "tri-checkbox", 54), core["\u0275\u0275listener"]("onChange", function() {
                    core["\u0275\u0275restoreView"](_r34);
                    var ctx_r33 = core["\u0275\u0275nextContext"](4);
                    return core["\u0275\u0275resetView"](ctx_r33.selectAllUsers());
                }), core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var ctx_r24 = core["\u0275\u0275nextContext"](4);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("checked", ctx_r24.isAllUsersSelected)("disabled", !!core["\u0275\u0275pipeBind1"](2, 2, ctx_r24.disableIdentity$));
            }
        }
        function WorkspaceSettingsWorkspaceIdentityComponent_ng_container_8_section_20_section_36_tri_svg_icon_16_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "tri-svg-icon", 55);
        }
        function WorkspaceSettingsWorkspaceIdentityComponent_ng_container_8_section_20_section_36_tri_svg_icon_17_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "tri-svg-icon", 56);
        }
        function WorkspaceSettingsWorkspaceIdentityComponent_ng_container_8_section_20_section_36_tri_svg_icon_24_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "tri-svg-icon", 55);
        }
        function WorkspaceSettingsWorkspaceIdentityComponent_ng_container_8_section_20_section_36_tri_svg_icon_25_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "tri-svg-icon", 56);
        }
        function WorkspaceSettingsWorkspaceIdentityComponent_ng_container_8_section_20_section_36_tr_27_td_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r42 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "td", 62)(1, "tri-checkbox", 63), core["\u0275\u0275listener"]("onChange", function($event) {
                    core["\u0275\u0275restoreView"](_r42);
                    var user_r35 = core["\u0275\u0275nextContext"]().$implicit, ctx_r40 = core["\u0275\u0275nextContext"](4);
                    return core["\u0275\u0275resetView"](ctx_r40.onUserSelected($event, user_r35));
                })("ngModelChange", function($event) {
                    core["\u0275\u0275restoreView"](_r42);
                    var user_r35 = core["\u0275\u0275nextContext"]().$implicit;
                    return core["\u0275\u0275resetView"](user_r35.selected = $event);
                }), core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var ctx_r45 = core["\u0275\u0275nextContext"](), index_r36 = ctx_r45.index, user_r35 = ctx_r45.$implicit, ctx_r37 = core["\u0275\u0275nextContext"](4);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("name", "workspaceIdentityUser_" + index_r36)("disabled", !!core["\u0275\u0275pipeBind1"](2, 3, ctx_r37.disableIdentity$))("ngModel", user_r35.selected);
            }
        }
        function WorkspaceSettingsWorkspaceIdentityComponent_ng_container_8_section_20_section_36_tr_27_tri_svg_icon_3_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "tri-svg-icon", 64);
        }
        function WorkspaceSettingsWorkspaceIdentityComponent_ng_container_8_section_20_section_36_tr_27_tri_svg_icon_4_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "tri-svg-icon", 65);
        }
        function WorkspaceSettingsWorkspaceIdentityComponent_ng_container_8_section_20_section_36_tr_27_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "tr"), core["\u0275\u0275template"](1, WorkspaceSettingsWorkspaceIdentityComponent_ng_container_8_section_20_section_36_tr_27_td_1_Template, 3, 5, "td", 57), 
            core["\u0275\u0275elementStart"](2, "td", 58), core["\u0275\u0275template"](3, WorkspaceSettingsWorkspaceIdentityComponent_ng_container_8_section_20_section_36_tr_27_tri_svg_icon_3_Template, 1, 0, "tri-svg-icon", 59), 
            core["\u0275\u0275template"](4, WorkspaceSettingsWorkspaceIdentityComponent_ng_container_8_section_20_section_36_tr_27_tri_svg_icon_4_Template, 1, 0, "tri-svg-icon", 60), 
            core["\u0275\u0275text"](5), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](6, "td", 61), 
            core["\u0275\u0275text"](7), core["\u0275\u0275elementEnd"]()()), 2 & rf) {
                var user_r35 = ctx.$implicit, ctx_r29 = core["\u0275\u0275nextContext"](4);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx_r29.showAddRemoveButtons), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275propertyInterpolate"]("title", ctx_r29.getUserDisplayName(user_r35)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", user_r35.groupId), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", user_r35.userId), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate1"](" ", ctx_r29.getUserDisplayName(user_r35), " "), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275propertyInterpolate"]("title", ctx_r29.getUserPermissions(user_r35)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate1"](" ", ctx_r29.getUserPermissions(user_r35), " ");
            }
        }
        function WorkspaceSettingsWorkspaceIdentityComponent_ng_container_8_section_20_section_36_Template(rf, ctx) {
            if (1 & rf) {
                var _r47 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "section", 39)(1, "h4"), core["\u0275\u0275text"](2), 
                core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](4, WorkspaceSettingsWorkspaceIdentityComponent_ng_container_8_section_20_section_36_div_4_Template, 11, 12, "div", 40), 
                core["\u0275\u0275elementStart"](5, "div", 41)(6, "table")(7, "thead")(8, "tr", 42), 
                core["\u0275\u0275template"](9, WorkspaceSettingsWorkspaceIdentityComponent_ng_container_8_section_20_section_36_th_9_Template, 3, 4, "th", 43), 
                core["\u0275\u0275elementStart"](10, "th", 44)(11, "button", 45), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r47);
                    var ctx_r46 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r46.sortWorkspaceIdentityUsers(ctx_r46.workspaceIdentityUsersColumn.Name));
                }), core["\u0275\u0275pipe"](12, "localizeFormat"), core["\u0275\u0275pipe"](13, "localize"), 
                core["\u0275\u0275text"](14), core["\u0275\u0275pipe"](15, "localize"), core["\u0275\u0275template"](16, WorkspaceSettingsWorkspaceIdentityComponent_ng_container_8_section_20_section_36_tri_svg_icon_16_Template, 1, 0, "tri-svg-icon", 46), 
                core["\u0275\u0275template"](17, WorkspaceSettingsWorkspaceIdentityComponent_ng_container_8_section_20_section_36_tri_svg_icon_17_Template, 1, 0, "tri-svg-icon", 47), 
                core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementStart"](18, "th", 48)(19, "button", 45), 
                core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r47);
                    var ctx_r48 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r48.sortWorkspaceIdentityUsers(ctx_r48.workspaceIdentityUsersColumn.Permissions));
                }), core["\u0275\u0275pipe"](20, "localizeFormat"), core["\u0275\u0275pipe"](21, "localize"), 
                core["\u0275\u0275text"](22), core["\u0275\u0275pipe"](23, "localize"), core["\u0275\u0275template"](24, WorkspaceSettingsWorkspaceIdentityComponent_ng_container_8_section_20_section_36_tri_svg_icon_24_Template, 1, 0, "tri-svg-icon", 46), 
                core["\u0275\u0275template"](25, WorkspaceSettingsWorkspaceIdentityComponent_ng_container_8_section_20_section_36_tri_svg_icon_25_Template, 1, 0, "tri-svg-icon", 47), 
                core["\u0275\u0275elementEnd"]()()()(), core["\u0275\u0275elementStart"](26, "tbody"), 
                core["\u0275\u0275template"](27, WorkspaceSettingsWorkspaceIdentityComponent_ng_container_8_section_20_section_36_tr_27_Template, 8, 7, "tr", 49), 
                core["\u0275\u0275elementEnd"]()()()();
            }
            if (2 & rf) {
                var ctx_r18 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](3, 12, "AuthorizedUsers")), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", ctx_r18.showAddRemoveButtons), 
                core["\u0275\u0275advance"](5), core["\u0275\u0275property"]("ngIf", ctx_r18.showAddRemoveButtons), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275attribute"]("aria-label", core["\u0275\u0275pipeBind2"](12, 14, ctx_r18.sortColumnAscending ? "DataGrid_ColumnSortedAscending" : "DataGrid_ColumnSortedDescending", core["\u0275\u0275pipeBind1"](13, 17, "Name"))), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](15, 19, "Name"), " "), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", "Name" === ctx_r18.sortColumn && ctx_r18.sortColumnAscending), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", "Name" === ctx_r18.sortColumn && !ctx_r18.sortColumnAscending), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275attribute"]("aria-label", core["\u0275\u0275pipeBind2"](20, 21, ctx_r18.sortColumnAscending ? "DataGrid_ColumnSortedAscending" : "DataGrid_ColumnSortedDescending", core["\u0275\u0275pipeBind1"](21, 24, "Permissions"))), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](23, 26, "Permissions"), " "), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", "Permissions" === ctx_r18.sortColumn && ctx_r18.sortColumnAscending), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", "Permissions" === ctx_r18.sortColumn && !ctx_r18.sortColumnAscending), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngForOf", ctx_r18.workspaceIdentity.users);
            }
        }
        function WorkspaceSettingsWorkspaceIdentityComponent_ng_container_8_section_20_tri_spinner_50_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "tri-spinner");
        }
        var workspace_settings_workspace_identity_component_c0 = function(a0) {
            return {
                "unusable-state": a0
            };
        };
        function WorkspaceSettingsWorkspaceIdentityComponent_ng_container_8_section_20_Template(rf, ctx) {
            if (1 & rf) {
                var _r50 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "section", 4), core["\u0275\u0275template"](1, WorkspaceSettingsWorkspaceIdentityComponent_ng_container_8_section_20_section_1_Template, 11, 15, "section", 19), 
                core["\u0275\u0275elementStart"](2, "section", 20)(3, "h4"), core["\u0275\u0275text"](4), 
                core["\u0275\u0275pipe"](5, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](6, "table", 21)(7, "tbody")(8, "tr")(9, "td", 22), 
                core["\u0275\u0275text"](10), core["\u0275\u0275pipe"](11, "localize"), core["\u0275\u0275elementEnd"](), 
                core["\u0275\u0275elementStart"](12, "td", 23), core["\u0275\u0275text"](13), core["\u0275\u0275elementEnd"]()(), 
                core["\u0275\u0275elementStart"](14, "tr")(15, "td", 22), core["\u0275\u0275text"](16), 
                core["\u0275\u0275pipe"](17, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](18, "td", 23), 
                core["\u0275\u0275text"](19), core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementStart"](20, "tr")(21, "td", 22), 
                core["\u0275\u0275text"](22), core["\u0275\u0275pipe"](23, "localize"), core["\u0275\u0275elementEnd"](), 
                core["\u0275\u0275elementStart"](24, "td", 23), core["\u0275\u0275text"](25), core["\u0275\u0275elementEnd"]()(), 
                core["\u0275\u0275elementStart"](26, "tr")(27, "td", 22), core["\u0275\u0275text"](28), 
                core["\u0275\u0275pipe"](29, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](30, "td", 23)(31, "div", 24), 
                core["\u0275\u0275template"](32, WorkspaceSettingsWorkspaceIdentityComponent_ng_container_8_section_20_tri_svg_icon_32_Template, 1, 0, "tri-svg-icon", 25), 
                core["\u0275\u0275elementStart"](33, "span", 26), core["\u0275\u0275text"](34), 
                core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275template"](35, WorkspaceSettingsWorkspaceIdentityComponent_ng_container_8_section_20_div_35_Template, 2, 1, "div", 27), 
                core["\u0275\u0275elementEnd"]()()()()(), core["\u0275\u0275template"](36, WorkspaceSettingsWorkspaceIdentityComponent_ng_container_8_section_20_section_36_Template, 28, 28, "section", 28), 
                core["\u0275\u0275elementStart"](37, "section", 29)(38, "h4"), core["\u0275\u0275text"](39), 
                core["\u0275\u0275pipe"](40, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](41, "div", 30), 
                core["\u0275\u0275text"](42), core["\u0275\u0275pipe"](43, "localize"), core["\u0275\u0275elementEnd"](), 
                core["\u0275\u0275elementStart"](44, "div", 31)(45, "button", 32), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r50);
                    var ctx_r49 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r49.onDeleteClick());
                }), core["\u0275\u0275pipe"](46, "async"), core["\u0275\u0275element"](47, "tri-svg-icon", 33), 
                core["\u0275\u0275text"](48), core["\u0275\u0275pipe"](49, "localize"), core["\u0275\u0275elementEnd"](), 
                core["\u0275\u0275template"](50, WorkspaceSettingsWorkspaceIdentityComponent_ng_container_8_section_20_tri_spinner_50_Template, 1, 0, "tri-spinner", 0), 
                core["\u0275\u0275pipe"](51, "async"), core["\u0275\u0275elementEnd"]()()();
            }
            if (2 & rf) {
                var ctx_r10 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx_r10.showUseWorkspaceIdentityToggle), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](5, 19, "Trident_Workspace_Settings_Workspace_Identity_Details")), 
                core["\u0275\u0275advance"](6), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](11, 21, "Name")), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](ctx_r10.workspaceIdentity.name || "-"), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](17, 23, "Id")), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](ctx_r10.workspaceIdentity.servicePrincipalId || "-"), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](23, 25, "Role")), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](ctx_r10.getLocalizedWorkspaceIdentityRole()), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](29, 27, "State")), 
                core["\u0275\u0275advance"](4), core["\u0275\u0275property"]("ngIf", ctx_r10.isUnusableState()), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngClass", core["\u0275\u0275pureFunction1"](39, workspace_settings_workspace_identity_component_c0, ctx_r10.isUnusableState())), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate"](ctx_r10.getLocalizedWorkspaceIdentityState()), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx_r10.getStateDescription().length > 0), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx_r10.workspaceIdentity.users && ctx_r10.workspaceIdentity.users.length > 0), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](40, 29, "Trident_Workspace_Settings_Workspace_Identity_Delete")), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](43, 31, "Trident_Workspace_Settings_Workspace_Identity_Delete_Description")), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("disabled", !!core["\u0275\u0275pipeBind1"](46, 33, ctx_r10.disableDeleteIdentity$)), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](49, 35, "Delete"), " "), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](51, 37, ctx_r10.isDeleting$));
            }
        }
        function WorkspaceSettingsWorkspaceIdentityComponent_ng_container_8_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "div", 4)(2, "h2", 5), 
            core["\u0275\u0275text"](3), core["\u0275\u0275pipe"](4, "localize"), core["\u0275\u0275elementEnd"](), 
            core["\u0275\u0275elementStart"](5, "section", 6)(6, "span"), core["\u0275\u0275text"](7), 
            core["\u0275\u0275pipe"](8, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](9, "tri-link", 7), 
            core["\u0275\u0275pipe"](10, "localizeFormat"), core["\u0275\u0275pipe"](11, "localize"), 
            core["\u0275\u0275text"](12), core["\u0275\u0275pipe"](13, "localize"), core["\u0275\u0275elementEnd"]()()(), 
            core["\u0275\u0275template"](14, WorkspaceSettingsWorkspaceIdentityComponent_ng_container_8_section_14_Template, 4, 3, "section", 8), 
            core["\u0275\u0275pipe"](15, "async"), core["\u0275\u0275pipe"](16, "async"), core["\u0275\u0275template"](17, WorkspaceSettingsWorkspaceIdentityComponent_ng_container_8_section_17_Template, 11, 12, "section", 9), 
            core["\u0275\u0275pipe"](18, "async"), core["\u0275\u0275pipe"](19, "async"), core["\u0275\u0275template"](20, WorkspaceSettingsWorkspaceIdentityComponent_ng_container_8_section_20_Template, 52, 41, "section", 9), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var ctx_r3 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](4, 8, "Trident_Workspace_Settings_Workspace_Identities"), " "), 
                core["\u0275\u0275advance"](4), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](8, 10, "Trident_Workspace_Settings_Workspace_Identity_Description")), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("aria-label", core["\u0275\u0275pipeBind2"](10, 12, "LearnMore_About", core["\u0275\u0275pipeBind1"](11, 15, "Trident_Workspace_Settings_Workspace_Identities")))("external", !0), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](13, 17, "LearnMore"), " "), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", !ctx_r3.workspaceIdentity && !1 === core["\u0275\u0275pipeBind1"](15, 19, ctx_r3.isCreating$) && !0 === core["\u0275\u0275pipeBind1"](16, 21, ctx_r3.isLoadingIdentity$)), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngIf", !ctx_r3.workspaceIdentity && (!0 === core["\u0275\u0275pipeBind1"](18, 23, ctx_r3.isCreating$) || !1 === core["\u0275\u0275pipeBind1"](19, 25, ctx_r3.isLoadingIdentity$))), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngIf", ctx_r3.workspaceIdentity);
            }
        }
        var WorkspaceSettingsWorkspaceIdentityComponent = function() {
            function WorkspaceSettingsWorkspaceIdentityComponent(workspaceSettingsService, changeDetectorRef, localizationService) {
                var _this = this;
                this.workspaceSettingsService = workspaceSettingsService, this.changeDetectorRef = changeDetectorRef, 
                this.localizationService = localizationService, this.closeSettings = new core.EventEmitter, 
                this.isWorkspaceAdmin = !1, this.initialized$ = this.workspaceSettingsService.initialized$, 
                this.capacitiesInitialized$ = this.workspaceSettingsService.capacitiesInitialized$, 
                this.isAllUsersSelected = !1, this.sortColumn = WorkspaceIdentityUsersColumn.Name, 
                this.sortColumnAscending = !0, this.isCreating$ = new BehaviorSubject.X(!1), this.isDeleting$ = new BehaviorSubject.X(!1), 
                this.isLoadingIdentity$ = new BehaviorSubject.X(!1), this.disableIdentity$ = new BehaviorSubject.X(!1), 
                this.disableUseIdentity$ = new BehaviorSubject.X(!1), this.disableDeleteIdentity$ = new BehaviorSubject.X(!1), 
                this.disableCreateIdentity$ = new BehaviorSubject.X(!1), this.showUseWorkspaceIdentityToggle = !1, 
                this.workspaceIdentityUsersColumn = WorkspaceIdentityUsersColumn, this.errorDismissed$ = new BehaviorSubject.X(!1), 
                this.fabricWarningDismissed$ = new BehaviorSubject.X(!0), this.showAddRemoveButtons = !1, 
                this.workspaceIdentityDisableCapacityCheck = !1, this.isFolderInFsku = !1, this.apiError$ = this.workspaceSettingsService.workspaceIdentityErrorMessage$.pipe((0, 
                map.U)(function(error) {
                    return _this.errorDismissed$.next(!1), error;
                })), this.initialized$.subscribe(function(initialized) {
                    initialized && (_this.isWorkspaceAdmin = _this.workspaceSettingsService.isWorkspaceAdmin, 
                    _this.showUseWorkspaceIdentityToggle = _this.workspaceSettingsService.getFeatureSwitchState("workspaceIdentityToggleUsage"), 
                    _this.workspaceIdentityDisableCapacityCheck = _this.workspaceSettingsService.getFeatureSwitchState("workspaceIdentityDisableCapacityCheck"), 
                    _this.showAddRemoveButtons = _this.workspaceSettingsService.getFeatureSwitchState("FabricIdentitySharing"), 
                    _this.isWorkspaceAdmin || (_this.disableIdentity$.next(!0), _this.disableUseIdentity$.next(!0), 
                    _this.disableDeleteIdentity$.next(!0), _this.disableCreateIdentity$.next(!0)), _this.changeDetectorRef.markForCheck());
                }), this.capacitiesInitialized$.subscribe(function(initialized) {
                    var _a;
                    initialized && (_this.capacitySkuTier = null === (_a = _this.workspaceSettingsService.selectedCapacity) || void 0 === _a ? void 0 : _a.capacitySkuTier, 
                    _this.isFolderInFsku = 8 === _this.capacitySkuTier, _this.workspaceIdentityDisableCapacityCheck || _this.isFolderInFsku || (_this.disableCreateIdentity$.next(!0), 
                    _this.fabricWarningDismissed$.next(!1)), _this.changeDetectorRef.markForCheck());
                }), this.apiError$.subscribe(function(_error) {
                    _this.errorDismissed$.next(!1);
                });
            }
            return WorkspaceSettingsWorkspaceIdentityComponent.prototype.ngOnInit = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.getWorkspaceIdentity() ];

                          case 1:
                            return _a.sent(), [ 2 ];
                        }
                    });
                });
            }, WorkspaceSettingsWorkspaceIdentityComponent.prototype.createWorkspaceIdentity = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return _a.trys.push([ 0, , 4, 5 ]), this.isCreating$.next(!0), [ 4, this.workspaceSettingsService.createWorkspaceIdentity() ];

                          case 1:
                            return _a.sent(), [ 4, this.delay(5e3) ];

                          case 2:
                            return _a.sent(), [ 4, this.getWorkspaceIdentity() ];

                          case 3:
                            return _a.sent(), [ 3, 5 ];

                          case 4:
                            return this.isCreating$.next(!1), [ 7 ];

                          case 5:
                            return [ 2 ];
                        }
                    });
                });
            }, WorkspaceSettingsWorkspaceIdentityComponent.prototype.getWorkspaceIdentity = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var workspaceIdentity;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            this.isLoadingIdentity$.next(!0), _a.label = 1;

                          case 1:
                            if (this.workspaceIdentity && this.workspaceIdentity.provisionState !== WorkspaceIdentityProvisionState.InProgress && this.workspaceIdentity.provisionState !== WorkspaceIdentityProvisionState.Deleting) return [ 3, 8 ];
                            workspaceIdentity = void 0, _a.label = 2;

                          case 2:
                            return _a.trys.push([ 2, 4, 5, 6 ]), [ 4, this.workspaceSettingsService.getWorkspaceIdentity() ];

                          case 3:
                            return (workspaceIdentity = _a.sent()) ? [ 3, 6 ] : (this.disableIdentity$.next(!1), 
                            this.disableUseIdentity$.next(!1), this.disableCreateIdentity$.next(!this.workspaceIdentityDisableCapacityCheck && !this.isFolderInFsku), 
                            this.isDeleting$.next(!1), this.workspaceIdentity = workspaceIdentity, [ 2, Promise.resolve() ]);

                          case 4:
                            return _a.sent(), this.disableIdentity$.next(!1), this.disableUseIdentity$.next(!1), 
                            this.disableCreateIdentity$.next(!this.workspaceIdentityDisableCapacityCheck && !this.isFolderInFsku), 
                            this.isDeleting$.next(!1), this.workspaceIdentity = void 0, [ 2, Promise.resolve() ];

                          case 5:
                            return this.isLoadingIdentity$.next(!1), [ 7 ];

                          case 6:
                            return workspaceIdentity.provisionState !== WorkspaceIdentityProvisionState.InProgress && workspaceIdentity.provisionState !== WorkspaceIdentityProvisionState.Deleting ? (this.workspaceIdentity = workspaceIdentity, 
                            this.isCreating$.next(!1), this.workspaceIdentity.provisionState !== WorkspaceIdentityProvisionState.Active && (this.disableIdentity$.next(!0), 
                            this.workspaceIdentity.provisionState === WorkspaceIdentityProvisionState.Unusable && this.disableUseIdentity$.next(!0)), 
                            this.changeDetectorRef.markForCheck(), [ 3, 8 ]) : (workspaceIdentity.provisionState === WorkspaceIdentityProvisionState.InProgress ? this.isCreating$.next(!0) : workspaceIdentity.provisionState === WorkspaceIdentityProvisionState.Deleting && (this.workspaceIdentity = workspaceIdentity, 
                            this.disableIdentity$.next(!0), this.disableUseIdentity$.next(!0), this.disableDeleteIdentity$.next(!0), 
                            this.disableCreateIdentity$.next(!0), this.isDeleting$.next(!0)), [ 4, this.delay(1e4) ]);

                          case 7:
                            return _a.sent(), [ 3, 1 ];

                          case 8:
                            return [ 2 ];
                        }
                    });
                });
            }, WorkspaceSettingsWorkspaceIdentityComponent.prototype.onToggleAllowUsersToUseWorkspaceIdentity = function($event) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        if (!this.workspaceIdentity) return [ 2 ];
                        try {
                            this.workspaceIdentity.provisionState = $event ? WorkspaceIdentityProvisionState.Active : WorkspaceIdentityProvisionState.Inactive, 
                            this.disableIdentity$.next(!$event);
                        } catch (error) {
                            this.workspaceIdentity.allowUsersToUseWorkspaceIdentity = !$event, this.workspaceIdentity.provisionState = $event ? WorkspaceIdentityProvisionState.Inactive : WorkspaceIdentityProvisionState.Active, 
                            this.disableIdentity$.next(!this.workspaceIdentity.allowUsersToUseWorkspaceIdentity);
                        }
                        return [ 2 ];
                    });
                });
            }, WorkspaceSettingsWorkspaceIdentityComponent.prototype.getStateDescription = function() {
                if (!this.workspaceIdentity) return "";
                switch (this.workspaceIdentity.provisionState) {
                  case WorkspaceIdentityProvisionState.Inactive:
                    return this.localizationService.get("Trident_Workspace_Settings_Workspace_Identity_State_Inactive_Description");

                  case WorkspaceIdentityProvisionState.Unusable:
                    return this.localizationService.get("Trident_Workspace_Settings_Workspace_Identity_State_Unusable_Description");

                  default:
                    return "";
                }
            }, WorkspaceSettingsWorkspaceIdentityComponent.prototype.dismissError = function() {
                this.errorDismissed$.next(!0);
            }, WorkspaceSettingsWorkspaceIdentityComponent.prototype.dismissFabricWarning = function() {
                this.fabricWarningDismissed$.next(!0);
            }, WorkspaceSettingsWorkspaceIdentityComponent.prototype.getErrorMessageBarViewModel = function(message) {
                var _this = this;
                return {
                    bannerType: 1,
                    allowDismiss: !0,
                    iconName: "dismiss_circle_16_regular",
                    closeBarCallback: function() {
                        return _this.dismissError();
                    },
                    message
                };
            }, WorkspaceSettingsWorkspaceIdentityComponent.prototype.getFabricWarningMessageBarViewModel = function() {
                var _this = this;
                return {
                    bannerType: 2,
                    allowDismiss: !0,
                    closeBarCallback: function() {
                        return _this.dismissFabricWarning();
                    },
                    message: this.localizationService.get("Trident_Workspace_Settings_Workspace_Identity_FabricWarning"),
                    link: "https://go.microsoft.com/fwlink/?linkid=2259103",
                    linkDisplayName: this.localizationService.get("LearnMore")
                };
            }, WorkspaceSettingsWorkspaceIdentityComponent.prototype.isUnusableState = function() {
                return !!this.workspaceIdentity && this.workspaceIdentity.provisionState === WorkspaceIdentityProvisionState.Unusable;
            }, WorkspaceSettingsWorkspaceIdentityComponent.prototype.onUserSelected = function($event, user) {
                user.selected = $event, this.isAllUsersSelected = this.allSelected();
            }, WorkspaceSettingsWorkspaceIdentityComponent.prototype.selectAllUsers = function() {
                var _a, _b;
                this.allSelected() ? (_.forEach(null === (_a = this.workspaceIdentity) || void 0 === _a ? void 0 : _a.users, function(u) {
                    return u.selected = !1, !0;
                }), this.isAllUsersSelected = !1) : (_.forEach(null === (_b = this.workspaceIdentity) || void 0 === _b ? void 0 : _b.users, function(u) {
                    return u.selected = !0, !0;
                }), this.isAllUsersSelected = !0);
            }, WorkspaceSettingsWorkspaceIdentityComponent.prototype.getUserDisplayName = function(user) {
                return this.localizationService.format("Capacity_User_DisplayName", user.givenName, user.familyName);
            }, WorkspaceSettingsWorkspaceIdentityComponent.prototype.getUserPermissions = function(user) {
                return this.localizationService.get(2 & ~user.permissions ? "Trident_Workspace_Settings_Workspace_Identity_CanUseIdentity" : "Trident_Workspace_Settings_Workspace_Identity_CanEditMembers");
            }, WorkspaceSettingsWorkspaceIdentityComponent.prototype.delay = function(ms) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        return [ 2, new Promise(function(resolve) {
                            return setTimeout(resolve, ms);
                        }) ];
                    });
                });
            }, WorkspaceSettingsWorkspaceIdentityComponent.prototype.allSelected = function() {
                var _a;
                return _.every(null === (_a = this.workspaceIdentity) || void 0 === _a ? void 0 : _a.users, function(u) {
                    return u.selected;
                });
            }, WorkspaceSettingsWorkspaceIdentityComponent.prototype.getLocalizedWorkspaceIdentityRole = function() {
                var _a, role = null === (_a = this.workspaceIdentity) || void 0 === _a ? void 0 : _a.role;
                if (!role) return "-";
                switch (role) {
                  case WorkspaceIdentityRole.Administrator:
                    return this.localizationService.get("WorkspaceAdmin");

                  case WorkspaceIdentityRole.Member:
                    return this.localizationService.get("WorkspaceMember");

                  case WorkspaceIdentityRole.Contributor:
                    return this.localizationService.get("WorkspaceContributor");

                  case WorkspaceIdentityRole.Viewer:
                    return this.localizationService.get("WorkspaceViewer");

                  default:
                    return "-";
                }
            }, WorkspaceSettingsWorkspaceIdentityComponent.prototype.getLocalizedWorkspaceIdentityState = function() {
                var _a, state = null === (_a = this.workspaceIdentity) || void 0 === _a ? void 0 : _a.provisionState;
                if (null == state) return "-";
                switch (state) {
                  case WorkspaceIdentityProvisionState.InProgress:
                    return this.localizationService.get("InProgress");

                  case WorkspaceIdentityProvisionState.Active:
                    return this.localizationService.get("Active");

                  case WorkspaceIdentityProvisionState.Inactive:
                    return this.localizationService.get("Inactive");

                  case WorkspaceIdentityProvisionState.Deleting:
                    return this.localizationService.get("Deleting");

                  case WorkspaceIdentityProvisionState.Unusable:
                    return this.localizationService.get("Unusable");

                  case WorkspaceIdentityProvisionState.Failed:
                    return this.localizationService.get("Failed");

                  case WorkspaceIdentityProvisionState.DeleteFailed:
                    return this.localizationService.get("Failed_To_Delete");

                  default:
                    return "-";
                }
            }, WorkspaceSettingsWorkspaceIdentityComponent.prototype.sortWorkspaceIdentityUsers = function(column) {
                var _this = this;
                this.workspaceIdentity && (this.sortColumn === column ? this.sortColumnAscending = !this.sortColumnAscending : (this.sortColumn = column, 
                this.sortColumnAscending = !0), this.workspaceIdentity.users = _.sortBy(this.workspaceIdentity.users, function(user) {
                    switch (column) {
                      case WorkspaceIdentityUsersColumn.Name:
                        return _this.getUserDisplayName(user);

                      case WorkspaceIdentityUsersColumn.Permissions:
                        return _this.getUserPermissions(user);
                    }
                }), this.sortColumnAscending || (this.workspaceIdentity.users = _.reverse(this.workspaceIdentity.users)));
            }, WorkspaceSettingsWorkspaceIdentityComponent.prototype.addAuthorizedUsers = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var _a;
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return _a = this, [ 4, this.workspaceSettingsService.addWorkspaceIdentityUsers() ];

                          case 1:
                            return _a.workspaceIdentity = _b.sent(), this.changeDetectorRef.markForCheck(), 
                            [ 2 ];
                        }
                    });
                });
            }, WorkspaceSettingsWorkspaceIdentityComponent.prototype.deleteAuthorizedUsers = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var _a;
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return this.workspaceIdentity ? (_a = this, [ 4, this.workspaceSettingsService.removeWorkspaceIdentityUsers(_.filter(this.workspaceIdentity.users, function(u) {
                                return u.selected;
                            })) ]) : [ 2 ];

                          case 1:
                            return _a.workspaceIdentity = _b.sent(), this.changeDetectorRef.markForCheck(), 
                            [ 2 ];
                        }
                    });
                });
            }, WorkspaceSettingsWorkspaceIdentityComponent.prototype.onDeleteClick = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return this.workspaceIdentity ? (this.workspaceSettingsService.deleteWorkspaceIdentity(), 
                            this.disableIdentity$.next(!0), this.disableUseIdentity$.next(!0), this.disableCreateIdentity$.next(!0), 
                            this.disableDeleteIdentity$.next(!0), this.isDeleting$.next(!0), this.workspaceIdentity.provisionState = WorkspaceIdentityProvisionState.Deleting, 
                            [ 4, this.delay(5e3) ]) : [ 2 ];

                          case 1:
                            return _a.sent(), [ 4, this.getWorkspaceIdentity() ];

                          case 2:
                            return _a.sent(), [ 2 ];
                        }
                    });
                });
            }, WorkspaceSettingsWorkspaceIdentityComponent.\u0275fac = function(t) {
                return new (t || WorkspaceSettingsWorkspaceIdentityComponent)(core["\u0275\u0275directiveInject"](tri_workspace_settings.X), core["\u0275\u0275directiveInject"](core.ChangeDetectorRef), core["\u0275\u0275directiveInject"](localization_service.z));
            }, WorkspaceSettingsWorkspaceIdentityComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: WorkspaceSettingsWorkspaceIdentityComponent,
                selectors: [ [ "tri-workspace-settings-workspace-identity" ] ],
                outputs: {
                    closeSettings: "closeSettings"
                },
                decls: 11,
                vars: 18,
                consts: [ [ 4, "ngIf" ], [ 3, "viewModel", "hideMessageBar", 4, "ngIf" ], [ 1, "tri-flex", "tri-items-center", "tri-justify-center", "tri-h-full" ], [ 3, "viewModel", "hideMessageBar" ], [ 1, "workspace-identity-settings-container", "tri-flex", "tri-flex-col" ], [ 1, "workspace-identity-settings-header" ], [ 1, "workspace-identity-settings-description" ], [ "href", "https://go.microsoft.com/fwlink/?linkid=2247909", "rel", "noopener noreferrer", "target", "_blank", 1, "learn-more-link", 3, "aria-label", "external" ], [ "class", "workspace-identity-loading-container", 4, "ngIf" ], [ "class", "workspace-identity-settings-container tri-flex tri-flex-col", 4, "ngIf" ], [ 1, "workspace-identity-loading-container" ], [ "role", "alert" ], [ 1, "create-identity-header" ], [ 1, "create-identity-description" ], [ "class", "create-identity-button", "tri-button", "", "appearance", "primary", 3, "disabled", "click", 4, "ngIf" ], [ "class", "create-workspace-identity-spinner", 4, "ngIf" ], [ "tri-button", "", "appearance", "primary", 1, "create-identity-button", 3, "disabled", "click" ], [ "name", "add_16_regular" ], [ 1, "create-workspace-identity-spinner" ], [ "class", "use-workspace-identity tri-flex", 4, "ngIf" ], [ 1, "identity-details" ], [ 1, "identity-details-item" ], [ 1, "identity-details-item-title" ], [ 1, "identity-details-item-value" ], [ 1, "identity-details-item-value-state" ], [ "class", "unusable-state", "name", "error_circle_12_filled", 4, "ngIf" ], [ 3, "ngClass" ], [ "class", "identity-details-item-value-descrption", 4, "ngIf" ], [ "class", "authorized-users", 4, "ngIf" ], [ 1, "delete-workspace-identity" ], [ 1, "delete-workspace-identity-description" ], [ 1, "delete-workspace-identity-button-container" ], [ "tri-button", "", "appearance", "primary", "data-testid", "delete-workspace-identity-btn", 1, "delete-workspace-identity-button", 3, "disabled", "click" ], [ "name", "delete_20_regular" ], [ 1, "use-workspace-identity", "tri-flex" ], [ "id", "use-workspace-identity-toggle-switch", 3, "disabled", "aria-label", "ngModel", "ngModelChange" ], [ "tri-switch-text", "" ], [ "name", "error_circle_12_filled", 1, "unusable-state" ], [ 1, "identity-details-item-value-descrption" ], [ 1, "authorized-users" ], [ "class", "authorized-users-buttons-container", 4, "ngIf" ], [ 1, "authorized-users-table" ], [ "role", "row" ], [ "class", "authorized-users-checkbox-column-header", "role", "columnheader", 4, "ngIf" ], [ "role", "columnheader", 1, "authorized-users-name-column-header" ], [ 1, "authorized-users-sort-button", 3, "click" ], [ "name", "arrow_down_20_regular", 4, "ngIf" ], [ "name", "arrow_up_20_regular", 4, "ngIf" ], [ "role", "columnheader", 1, "authorized-users-permissions-column-header" ], [ 4, "ngFor", "ngForOf" ], [ 1, "authorized-users-buttons-container" ], [ "tri-button", "", "appearance", "subtle", "data-testid", "delete-workspace-identity-btn", 1, "delete-workspace-identity-button", 3, "disabled", "click" ], [ "name", "dismiss_16_regular" ], [ "role", "columnheader", 1, "authorized-users-checkbox-column-header" ], [ 3, "checked", "disabled", "onChange" ], [ "name", "arrow_down_20_regular" ], [ "name", "arrow_up_20_regular" ], [ "role", "cell", 4, "ngIf" ], [ "role", "cell", 1, "authorized-users-name-cell", 3, "title" ], [ "name", "people_team_16_regular", 4, "ngIf" ], [ "name", "person_16_regular", 4, "ngIf" ], [ "role", "cell", 1, "authorized-users-permissions-cell", 3, "title" ], [ "role", "cell" ], [ 3, "name", "disabled", "ngModel", "onChange", "ngModelChange" ], [ "name", "people_team_16_regular" ], [ "name", "person_16_regular" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275template"](0, WorkspaceSettingsWorkspaceIdentityComponent_ng_container_0_Template, 2, 0, "ng-container", 0), 
                    core["\u0275\u0275pipe"](1, "async"), core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275template"](3, WorkspaceSettingsWorkspaceIdentityComponent_tri_message_bar_3_Template, 2, 3, "tri-message-bar", 1), 
                    core["\u0275\u0275pipe"](4, "async"), core["\u0275\u0275pipe"](5, "async"), core["\u0275\u0275template"](6, WorkspaceSettingsWorkspaceIdentityComponent_tri_message_bar_6_Template, 1, 1, "tri-message-bar", 1), 
                    core["\u0275\u0275pipe"](7, "async"), core["\u0275\u0275template"](8, WorkspaceSettingsWorkspaceIdentityComponent_ng_container_8_Template, 21, 27, "ng-container", 0), 
                    core["\u0275\u0275pipe"](9, "async"), core["\u0275\u0275pipe"](10, "async")), 2 & rf && (core["\u0275\u0275property"]("ngIf", !1 === core["\u0275\u0275pipeBind1"](1, 4, ctx.initialized$) || !ctx.workspaceIdentityDisableCapacityCheck && !1 === core["\u0275\u0275pipeBind1"](2, 6, ctx.capacitiesInitialized$)), 
                    core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngIf", !1 === core["\u0275\u0275pipeBind1"](4, 8, ctx.errorDismissed$) && core["\u0275\u0275pipeBind1"](5, 10, ctx.apiError$)), 
                    core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngIf", !1 === core["\u0275\u0275pipeBind1"](7, 12, ctx.fabricWarningDismissed$)), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", !0 === core["\u0275\u0275pipeBind1"](9, 14, ctx.initialized$) && (ctx.workspaceIdentityDisableCapacityCheck || !0 === core["\u0275\u0275pipeBind1"](10, 16, ctx.capacitiesInitialized$))));
                },
                dependencies: [ common.NgClass, common.NgForOf, common.NgIf, fesm2022_forms.JJ, fesm2022_forms.On, tri_svg_icon_component.M, tri_spinner_component.D, tri_message_bar_component.h, tri_checkbox_component.r, tri_switch_component.t, tri_link_component.v, common.AsyncPipe, localize_pipe.Y, localize_pipe.A ],
                styles: [ "[_nghost-%COMP%]{font-family:var(--fontFamilyBase);font-size:14px;line-height:20px}[_nghost-%COMP%]   .workspace-identity-loading-container[_ngcontent-%COMP%]{display:flex;justify-content:center;padding-top:50px}[_nghost-%COMP%]   .workspace-identity-settings-container[_ngcontent-%COMP%]   .workspace-identity-settings-header[_ngcontent-%COMP%]{font-size:var(--fontSizeBase600);line-height:var(--lineHeightBase600);font-weight:var(--fontWeightBold);margin-bottom:10px}[_nghost-%COMP%]   .workspace-identity-settings-container[_ngcontent-%COMP%]   h4[_ngcontent-%COMP%]{margin-bottom:10px}[_nghost-%COMP%]   .workspace-identity-settings-container[_ngcontent-%COMP%]   .create-identity-description[_ngcontent-%COMP%]{margin-bottom:20px}[_nghost-%COMP%]   .workspace-identity-settings-container[_ngcontent-%COMP%]   .create-workspace-identity-spinner[_ngcontent-%COMP%]{display:flex;justify-content:center}[_nghost-%COMP%]   .workspace-identity-settings-container[_ngcontent-%COMP%]   .create-workspace-identity-spinner[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{margin-inline-start:5px}[_nghost-%COMP%]   .workspace-identity-settings-container[_ngcontent-%COMP%]   .create-identity-button[_ngcontent-%COMP%]{width:fit-content}[_nghost-%COMP%]   .workspace-identity-settings-container[_ngcontent-%COMP%]   .identity-details[_ngcontent-%COMP%]   .identity-details-item[_ngcontent-%COMP%]   .identity-details-item-title[_ngcontent-%COMP%]{width:120px;display:flex}[_nghost-%COMP%]   .workspace-identity-settings-container[_ngcontent-%COMP%]   .identity-details[_ngcontent-%COMP%]   .identity-details-item[_ngcontent-%COMP%]   .identity-details-item-value[_ngcontent-%COMP%]{font-weight:600}[_nghost-%COMP%]   .workspace-identity-settings-container[_ngcontent-%COMP%]   .identity-details[_ngcontent-%COMP%]   .identity-details-item[_ngcontent-%COMP%]   .identity-details-item-value[_ngcontent-%COMP%]   .identity-details-item-value-state[_ngcontent-%COMP%]{display:flex;gap:5px}[_nghost-%COMP%]   .workspace-identity-settings-container[_ngcontent-%COMP%]   .identity-details[_ngcontent-%COMP%]   .identity-details-item[_ngcontent-%COMP%]   .identity-details-item-value[_ngcontent-%COMP%]   .identity-details-item-value-state[_ngcontent-%COMP%]   .unusable-state[_ngcontent-%COMP%]{color:var(--globalColorRedShade10);fill:var(--globalColorRedShade10)}[_nghost-%COMP%]   .workspace-identity-settings-container[_ngcontent-%COMP%]   .identity-details[_ngcontent-%COMP%]   .identity-details-item[_ngcontent-%COMP%]   .identity-details-item-value[_ngcontent-%COMP%]   .identity-details-item-value-descrption[_ngcontent-%COMP%]{font-weight:400}[_nghost-%COMP%]   .workspace-identity-settings-container[_ngcontent-%COMP%]   .authorized-users[_ngcontent-%COMP%]{margin-bottom:20px}[_nghost-%COMP%]   .workspace-identity-settings-container[_ngcontent-%COMP%]   .authorized-users[_ngcontent-%COMP%]   .authorized-users-table[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]{width:100%}[_nghost-%COMP%]   .workspace-identity-settings-container[_ngcontent-%COMP%]   .authorized-users[_ngcontent-%COMP%]   .authorized-users-table[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .authorized-users-checkbox-column-header[_ngcontent-%COMP%]{width:5%}[_nghost-%COMP%]   .workspace-identity-settings-container[_ngcontent-%COMP%]   .authorized-users[_ngcontent-%COMP%]   .authorized-users-table[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .authorized-users-name-column-header[_ngcontent-%COMP%]{width:40%}[_nghost-%COMP%]   .workspace-identity-settings-container[_ngcontent-%COMP%]   .authorized-users[_ngcontent-%COMP%]   .authorized-users-table[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .authorized-users-sort-button[_ngcontent-%COMP%]{padding-inline-start:0;border:0;background:transparent;display:flex;gap:10px}[_nghost-%COMP%]   .workspace-identity-settings-container[_ngcontent-%COMP%]   .authorized-users[_ngcontent-%COMP%]   .authorized-users-table[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .authorized-users-sort-button[_ngcontent-%COMP%]   tri-svg-icon[_ngcontent-%COMP%]{width:14px}[_nghost-%COMP%]   .workspace-identity-settings-container[_ngcontent-%COMP%]   .authorized-users[_ngcontent-%COMP%]   .authorized-users-table[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .authorized-users-name-cell[_ngcontent-%COMP%]{overflow:hidden;white-space:nowrap;max-width:300px;text-overflow:ellipsis}[_nghost-%COMP%]   .workspace-identity-settings-container[_ngcontent-%COMP%]   .authorized-users[_ngcontent-%COMP%]   .authorized-users-table[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .authorized-users-permissions-cell[_ngcontent-%COMP%], [_nghost-%COMP%]   .workspace-identity-settings-container[_ngcontent-%COMP%]   .authorized-users[_ngcontent-%COMP%]   .authorized-users-table[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .authorized-users-permissions-column-header[_ngcontent-%COMP%]{padding-inline-start:25px}[_nghost-%COMP%]   .workspace-identity-settings-container[_ngcontent-%COMP%]   .authorized-users[_ngcontent-%COMP%]   .authorized-users-table[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{padding-top:5px;padding-bottom:5px}[_nghost-%COMP%]   .workspace-identity-settings-container[_ngcontent-%COMP%]   .authorized-users[_ngcontent-%COMP%]   .authorized-users-table[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{border-bottom:1px solid var(--colorNeutralStroke2)}[_nghost-%COMP%]   .workspace-identity-settings-container[_ngcontent-%COMP%]   .delete-workspace-identity[_ngcontent-%COMP%]   .delete-workspace-identity-description[_ngcontent-%COMP%]{margin-bottom:10px}[_nghost-%COMP%]   .workspace-identity-settings-container[_ngcontent-%COMP%]   .delete-workspace-identity[_ngcontent-%COMP%]   .delete-workspace-identity-button-container[_ngcontent-%COMP%]{display:flex;gap:10px}" ],
                changeDetection: 0
            }), WorkspaceSettingsWorkspaceIdentityComponent;
        }();
        function WorkspaceSettingsNetworkComponent_ng_container_0_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275element"](1, "tri-spinner", 2), 
            core["\u0275\u0275elementContainerEnd"]());
        }
        function WorkspaceSettingsNetworkComponent_tri_message_bar_3_Template(rf, ctx) {
            if (1 & rf) {
                var _r5 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "tri-message-bar", 3), core["\u0275\u0275listener"]("hideMessageBar", function() {
                    core["\u0275\u0275restoreView"](_r5);
                    var ctx_r4 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r4.dismissError());
                }), core["\u0275\u0275pipe"](1, "async"), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var tmp_0_0, ctx_r1 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("viewModel", ctx_r1.getErrorMessageBarViewModel(null !== (tmp_0_0 = core["\u0275\u0275pipeBind1"](1, 1, ctx_r1.apiError$)) && void 0 !== tmp_0_0 ? tmp_0_0 : ""));
            }
        }
        function WorkspaceSettingsNetworkComponent_tri_message_bar_6_Template(rf, ctx) {
            if (1 & rf) {
                var _r7 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "tri-message-bar", 3), core["\u0275\u0275listener"]("hideMessageBar", function() {
                    core["\u0275\u0275restoreView"](_r7);
                    var ctx_r6 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r6.dismissFabricWarning());
                }), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r2 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("viewModel", ctx_r2.getFabricWarningMessageBarViewModel());
            }
        }
        function WorkspaceSettingsNetworkComponent_ng_container_8_tri_spinner_45_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "tri-spinner", 2);
        }
        function WorkspaceSettingsNetworkComponent_ng_container_8_ng_container_47_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275element"](1, "tri-empty-state", 18), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var ctx_r9 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("viewModel", ctx_r9.emptyStateModel);
            }
        }
        function WorkspaceSettingsNetworkComponent_ng_container_8_div_49_tri_svg_icon_14_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "tri-svg-icon", 29);
        }
        function WorkspaceSettingsNetworkComponent_ng_container_8_div_49_tri_svg_icon_15_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "tri-svg-icon", 30);
        }
        function WorkspaceSettingsNetworkComponent_ng_container_8_div_49_tri_svg_icon_22_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "tri-svg-icon", 29);
        }
        function WorkspaceSettingsNetworkComponent_ng_container_8_div_49_tri_svg_icon_23_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "tri-svg-icon", 30);
        }
        function WorkspaceSettingsNetworkComponent_ng_container_8_div_49_tri_svg_icon_30_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "tri-svg-icon", 29);
        }
        function WorkspaceSettingsNetworkComponent_ng_container_8_div_49_tri_svg_icon_31_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "tri-svg-icon", 30);
        }
        function WorkspaceSettingsNetworkComponent_ng_container_8_div_49_tr_33_tri_svg_icon_6_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "tri-svg-icon", 39), 2 & rf) {
                var endpoint_r18 = core["\u0275\u0275nextContext"]().$implicit, ctx_r20 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275propertyInterpolate"]("triTooltip", ctx_r20.getIconTooltipText(endpoint_r18));
            }
        }
        function WorkspaceSettingsNetworkComponent_ng_container_8_div_49_tr_33_tri_svg_icon_7_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "tri-svg-icon", 40), 2 & rf) {
                var endpoint_r18 = core["\u0275\u0275nextContext"]().$implicit, ctx_r21 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275propertyInterpolate"]("name", ctx_r21.getEndpointIcon(endpoint_r18.groupId)), 
                core["\u0275\u0275propertyInterpolate"]("triTooltip", ctx_r21.getIconTooltipText(endpoint_r18)), 
                core["\u0275\u0275property"]("sprite", "artifact-colored-icons");
            }
        }
        function WorkspaceSettingsNetworkComponent_ng_container_8_div_49_tr_33_Template(rf, ctx) {
            if (1 & rf) {
                var _r25 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "tr")(1, "td", 31)(2, "tri-checkbox", 32), core["\u0275\u0275listener"]("onChange", function($event) {
                    var endpoint_r18 = core["\u0275\u0275restoreView"](_r25).$implicit, ctx_r24 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r24.onEndpointSelected($event, endpoint_r18));
                })("ngModelChange", function($event) {
                    var restoredCtx = core["\u0275\u0275restoreView"](_r25);
                    return core["\u0275\u0275resetView"](restoredCtx.$implicit.selected = $event);
                }), core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275pipe"](4, "async"), 
                core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementStart"](5, "td", 33), 
                core["\u0275\u0275template"](6, WorkspaceSettingsNetworkComponent_ng_container_8_div_49_tr_33_tri_svg_icon_6_Template, 1, 1, "tri-svg-icon", 34), 
                core["\u0275\u0275template"](7, WorkspaceSettingsNetworkComponent_ng_container_8_div_49_tr_33_tri_svg_icon_7_Template, 1, 3, "tri-svg-icon", 35), 
                core["\u0275\u0275elementStart"](8, "span", 36), core["\u0275\u0275text"](9), core["\u0275\u0275elementEnd"]()(), 
                core["\u0275\u0275elementStart"](10, "td", 37), core["\u0275\u0275element"](11, "tri-svg-icon", 38), 
                core["\u0275\u0275text"](12), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](13, "td", 37), 
                core["\u0275\u0275element"](14, "tri-svg-icon", 38), core["\u0275\u0275text"](15), 
                core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var endpoint_r18 = ctx.$implicit, index_r19 = ctx.index, ctx_r17 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("name", "privateEndpoint_" + index_r19)("ariaLabel", core["\u0275\u0275pipeBind1"](3, 14, "Select"))("disabled", !!core["\u0275\u0275pipeBind1"](4, 16, ctx_r17.disablePrivateEndpoints$))("ngModel", endpoint_r18.selected), 
                core["\u0275\u0275advance"](4), core["\u0275\u0275property"]("ngIf", endpoint_r18.isSystemResource), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !endpoint_r18.isSystemResource), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275propertyInterpolate"]("title", endpoint_r18.name), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate"](endpoint_r18.name), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275propertyInterpolate"]("title", ctx_r17.getLocalizedProvisionState(endpoint_r18.provisioningState)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275propertyInterpolate"]("name", ctx_r17.getProvisioningStateIcon(endpoint_r18.provisioningState)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate1"](" ", ctx_r17.getLocalizedProvisionState(endpoint_r18.provisioningState), " "), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275propertyInterpolate"]("title", null == endpoint_r18.connectionState ? null : endpoint_r18.connectionState.status), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275propertyInterpolate"]("name", ctx_r17.getConnectionStateIcon(null == endpoint_r18.connectionState ? null : endpoint_r18.connectionState.status)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate1"](" ", ctx_r17.getLocalizedConnectionStateStatus(null == endpoint_r18.connectionState ? null : endpoint_r18.connectionState.status), " ");
            }
        }
        function WorkspaceSettingsNetworkComponent_ng_container_8_div_49_Template(rf, ctx) {
            if (1 & rf) {
                var _r28 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div", 19)(1, "table")(2, "thead")(3, "tr", 20)(4, "th", 21)(5, "tri-checkbox", 22), 
                core["\u0275\u0275listener"]("onChange", function() {
                    core["\u0275\u0275restoreView"](_r28);
                    var ctx_r27 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r27.selectAllPrivateEndpoints());
                }), core["\u0275\u0275pipe"](6, "localize"), core["\u0275\u0275pipe"](7, "async"), 
                core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementStart"](8, "th", 23)(9, "button", 24), 
                core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r28);
                    var ctx_r29 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r29.sortPrivateEndpoints(ctx_r29.privateEndpointsColumn.Name));
                }), core["\u0275\u0275pipe"](10, "localizeFormat"), core["\u0275\u0275pipe"](11, "localize"), 
                core["\u0275\u0275text"](12), core["\u0275\u0275pipe"](13, "localize"), core["\u0275\u0275template"](14, WorkspaceSettingsNetworkComponent_ng_container_8_div_49_tri_svg_icon_14_Template, 1, 0, "tri-svg-icon", 25), 
                core["\u0275\u0275template"](15, WorkspaceSettingsNetworkComponent_ng_container_8_div_49_tri_svg_icon_15_Template, 1, 0, "tri-svg-icon", 26), 
                core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementStart"](16, "th", 27)(17, "button", 24), 
                core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r28);
                    var ctx_r30 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r30.sortPrivateEndpoints(ctx_r30.privateEndpointsColumn.ProvisioningState));
                }), core["\u0275\u0275pipe"](18, "localizeFormat"), core["\u0275\u0275pipe"](19, "localize"), 
                core["\u0275\u0275text"](20), core["\u0275\u0275pipe"](21, "localize"), core["\u0275\u0275template"](22, WorkspaceSettingsNetworkComponent_ng_container_8_div_49_tri_svg_icon_22_Template, 1, 0, "tri-svg-icon", 25), 
                core["\u0275\u0275template"](23, WorkspaceSettingsNetworkComponent_ng_container_8_div_49_tri_svg_icon_23_Template, 1, 0, "tri-svg-icon", 26), 
                core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementStart"](24, "th", 27)(25, "button", 24), 
                core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r28);
                    var ctx_r31 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r31.sortPrivateEndpoints(ctx_r31.privateEndpointsColumn.ApprovalState));
                }), core["\u0275\u0275pipe"](26, "localizeFormat"), core["\u0275\u0275pipe"](27, "localize"), 
                core["\u0275\u0275text"](28), core["\u0275\u0275pipe"](29, "localize"), core["\u0275\u0275template"](30, WorkspaceSettingsNetworkComponent_ng_container_8_div_49_tri_svg_icon_30_Template, 1, 0, "tri-svg-icon", 25), 
                core["\u0275\u0275template"](31, WorkspaceSettingsNetworkComponent_ng_container_8_div_49_tri_svg_icon_31_Template, 1, 0, "tri-svg-icon", 26), 
                core["\u0275\u0275elementEnd"]()()()(), core["\u0275\u0275elementStart"](32, "tbody"), 
                core["\u0275\u0275template"](33, WorkspaceSettingsNetworkComponent_ng_container_8_div_49_tr_33_Template, 16, 18, "tr", 28), 
                core["\u0275\u0275elementEnd"]()()();
            }
            if (2 & rf) {
                var ctx_r10 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](5), core["\u0275\u0275property"]("checked", ctx_r10.isAllPrivateEndpointsSelected)("ariaLabel", core["\u0275\u0275pipeBind1"](6, 16, "SelectAllRows"))("disabled", !!core["\u0275\u0275pipeBind1"](7, 18, ctx_r10.disablePrivateEndpoints$)), 
                core["\u0275\u0275advance"](4), core["\u0275\u0275attribute"]("aria-label", core["\u0275\u0275pipeBind2"](10, 20, ctx_r10.sortColumnAscending ? "DataGrid_ColumnSortedAscending" : "DataGrid_ColumnSortedDescending", core["\u0275\u0275pipeBind1"](11, 23, "Name"))), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](13, 25, "Name"), " "), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", "Name" === ctx_r10.sortColumn && ctx_r10.sortColumnAscending), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", "Name" === ctx_r10.sortColumn && !ctx_r10.sortColumnAscending), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275attribute"]("aria-label", core["\u0275\u0275pipeBind2"](18, 27, ctx_r10.sortColumnAscending ? "DataGrid_ColumnSortedAscending" : "DataGrid_ColumnSortedDescending", core["\u0275\u0275pipeBind1"](19, 30, "Activation"))), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](21, 32, "Activation"), " "), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", "ProvisioningState" === ctx_r10.sortColumn && ctx_r10.sortColumnAscending), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", "ProvisioningState" === ctx_r10.sortColumn && !ctx_r10.sortColumnAscending), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275attribute"]("aria-label", core["\u0275\u0275pipeBind2"](26, 34, ctx_r10.sortColumnAscending ? "DataGrid_ColumnSortedAscending" : "DataGrid_ColumnSortedDescending", core["\u0275\u0275pipeBind1"](27, 37, "Approval"))), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](29, 39, "Approval"), " "), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", "ApprovalState" === ctx_r10.sortColumn && ctx_r10.sortColumnAscending), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", "ApprovalState" === ctx_r10.sortColumn && !ctx_r10.sortColumnAscending), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngForOf", ctx_r10.privateEndpoints);
            }
        }
        function WorkspaceSettingsNetworkComponent_ng_container_8_Template(rf, ctx) {
            if (1 & rf) {
                var _r33 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "div", 4)(2, "h2", 5), 
                core["\u0275\u0275text"](3), core["\u0275\u0275pipe"](4, "localize"), core["\u0275\u0275elementEnd"](), 
                core["\u0275\u0275elementStart"](5, "section", 6)(6, "span"), core["\u0275\u0275text"](7), 
                core["\u0275\u0275pipe"](8, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](9, "tri-link", 7), 
                core["\u0275\u0275pipe"](10, "localizeFormat"), core["\u0275\u0275pipe"](11, "localize"), 
                core["\u0275\u0275text"](12), core["\u0275\u0275pipe"](13, "localize"), core["\u0275\u0275elementEnd"]()(), 
                core["\u0275\u0275elementStart"](14, "section", 6)(15, "h4"), core["\u0275\u0275text"](16), 
                core["\u0275\u0275pipe"](17, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](18, "span"), 
                core["\u0275\u0275text"](19), core["\u0275\u0275pipe"](20, "localize"), core["\u0275\u0275elementEnd"](), 
                core["\u0275\u0275elementStart"](21, "tri-link", 8), core["\u0275\u0275pipe"](22, "localizeFormat"), 
                core["\u0275\u0275pipe"](23, "localize"), core["\u0275\u0275text"](24), core["\u0275\u0275pipe"](25, "localize"), 
                core["\u0275\u0275elementEnd"]()()(), core["\u0275\u0275elementStart"](26, "section", 4)(27, "section", 9)(28, "div", 10)(29, "button", 11), 
                core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r33);
                    var ctx_r32 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r32.addPrivateEndpoint());
                }), core["\u0275\u0275pipe"](30, "async"), core["\u0275\u0275element"](31, "tri-svg-icon", 12), 
                core["\u0275\u0275text"](32), core["\u0275\u0275pipe"](33, "localize"), core["\u0275\u0275elementEnd"](), 
                core["\u0275\u0275elementStart"](34, "button", 13), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r33);
                    var ctx_r34 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r34.getPrivateEndpoints());
                }), core["\u0275\u0275pipe"](35, "async"), core["\u0275\u0275pipe"](36, "async"), 
                core["\u0275\u0275element"](37, "tri-svg-icon", 14), core["\u0275\u0275text"](38), 
                core["\u0275\u0275pipe"](39, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](40, "button", 13), 
                core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r33);
                    var ctx_r35 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r35.deletePrivateEndpoints());
                }), core["\u0275\u0275pipe"](41, "async"), core["\u0275\u0275element"](42, "tri-svg-icon", 15), 
                core["\u0275\u0275text"](43), core["\u0275\u0275pipe"](44, "localize"), core["\u0275\u0275elementEnd"]()(), 
                core["\u0275\u0275template"](45, WorkspaceSettingsNetworkComponent_ng_container_8_tri_spinner_45_Template, 1, 0, "tri-spinner", 16), 
                core["\u0275\u0275pipe"](46, "async"), core["\u0275\u0275template"](47, WorkspaceSettingsNetworkComponent_ng_container_8_ng_container_47_Template, 2, 1, "ng-container", 0), 
                core["\u0275\u0275pipe"](48, "async"), core["\u0275\u0275template"](49, WorkspaceSettingsNetworkComponent_ng_container_8_div_49_Template, 34, 41, "div", 17), 
                core["\u0275\u0275pipe"](50, "async"), core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementContainerEnd"]();
            }
            if (2 & rf) {
                var ctx_r3 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](4, 19, "NetworkSecurity"), " "), 
                core["\u0275\u0275advance"](4), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](8, 21, "Trident_Workspace_Settings_Network_Description")), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("aria-label", core["\u0275\u0275pipeBind2"](10, 23, "LearnMore_About", core["\u0275\u0275pipeBind1"](11, 26, "NetworkSecurity")))("external", !0), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](13, 28, "LearnMore"), " "), 
                core["\u0275\u0275advance"](4), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](17, 30, "PrivateEndpoints")), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](20, 32, "PrivateEndpoints_Description")), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("aria-label", core["\u0275\u0275pipeBind2"](22, 34, "LearnMore_About", core["\u0275\u0275pipeBind1"](23, 37, "PrivateEndpoints")))("external", !0), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](25, 39, "LearnMore"), " "), 
                core["\u0275\u0275advance"](5), core["\u0275\u0275property"]("disabled", !!core["\u0275\u0275pipeBind1"](30, 41, ctx_r3.disablePrivateEndpoints$)), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](33, 43, "Create_ButtonText"), " "), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("disabled", !!core["\u0275\u0275pipeBind1"](35, 45, ctx_r3.disablePrivateEndpoints$) || !0 === core["\u0275\u0275pipeBind1"](36, 47, ctx_r3.isLoadingEndpoints$)), 
                core["\u0275\u0275advance"](4), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](39, 49, "Refresh"), " "), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("disabled", !!core["\u0275\u0275pipeBind1"](41, 51, ctx_r3.disablePrivateEndpoints$) || ctx_r3.isRemoveButtonDisabled()), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](44, 53, "Delete"), " "), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", !0 === core["\u0275\u0275pipeBind1"](46, 55, ctx_r3.isLoadingEndpoints$)), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", !1 === core["\u0275\u0275pipeBind1"](48, 57, ctx_r3.isLoadingEndpoints$) && (!ctx_r3.privateEndpoints || 0 === ctx_r3.privateEndpoints.length)), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", !1 === core["\u0275\u0275pipeBind1"](50, 59, ctx_r3.isLoadingEndpoints$) && ctx_r3.privateEndpoints && ctx_r3.privateEndpoints.length > 0);
            }
        }
        var WorkspaceSettingsNetworkComponent = function() {
            function WorkspaceSettingsNetworkComponent(workspaceSettingsService, changeDetectorRef, localizationService) {
                var _this = this;
                this.workspaceSettingsService = workspaceSettingsService, this.changeDetectorRef = changeDetectorRef, 
                this.localizationService = localizationService, this.closeSettings = new core.EventEmitter, 
                this.isWorkspaceAdmin = !1, this.initialized$ = this.workspaceSettingsService.initialized$, 
                this.capacitiesInitialized$ = this.workspaceSettingsService.capacitiesInitialized$, 
                this.privateEndpoints = [], this.isAllPrivateEndpointsSelected = !1, this.sortColumn = PrivateEndpointsColumn.Name, 
                this.sortColumnAscending = !0, this.disablePrivateEndpoints$ = new BehaviorSubject.X(!0), 
                this.isLoadingEndpoints$ = new BehaviorSubject.X(!1), this.privateEndpointsColumn = PrivateEndpointsColumn, 
                this.errorDismissed$ = new BehaviorSubject.X(!1), this.demoMode = !1, this.isFolderInF64orFTsku = !1, 
                this.fabricWarningDismissed$ = new BehaviorSubject.X(!0), this.RestrictOutBoundPEFromF64 = !0, 
                this.apiError$ = this.workspaceSettingsService.privateEndpointsErrorMessage$.pipe((0, 
                map.U)(function(error) {
                    return _this.errorDismissed$.next(!1), error;
                })), this.initialized$.subscribe(function(initialized) {
                    initialized && (_this.isWorkspaceAdmin = _this.workspaceSettingsService.isWorkspaceAdmin, 
                    _this.demoMode = _this.workspaceSettingsService.getFeatureSwitchState("privateEndpointsDemoMode"), 
                    _this.isWorkspaceAdmin && _this.disablePrivateEndpoints$.next(!1));
                }), this.capacitiesInitialized$.subscribe(function(initialized) {
                    var _a;
                    initialized && (_this.capacitySkuTier = null === (_a = _this.workspaceSettingsService.selectedCapacity) || void 0 === _a ? void 0 : _a.capacitySkuTier, 
                    _this.RestrictOutBoundPEFromF64 = !!_this.workspaceSettingsService.getFeatureSwitchState("RestrictOutBoundPEFromF64"), 
                    _this.isFolderInF64orFTsku = 8 === _this.capacitySkuTier || 7 === _this.capacitySkuTier, 
                    _this.RestrictOutBoundPEFromF64 || 8 !== _this.capacitySkuTier && 9 !== _this.capacitySkuTier && 7 !== _this.capacitySkuTier ? (_this.disablePrivateEndpoints$.next(!_this.isFolderInF64orFTsku), 
                    _this.fabricWarningDismissed$.next(_this.isFolderInF64orFTsku)) : (_this.disablePrivateEndpoints$.next(!1), 
                    _this.fabricWarningDismissed$.next(!0)), _this.changeDetectorRef.markForCheck());
                }), this.apiError$.subscribe(), this.emptyStateModel = {
                    emptyStateType: 1,
                    iconType: 1,
                    title: this.isFolderInF64orFTsku ? "" : this.localizationService.get("PrivateEndpoints_Empty"),
                    message: ""
                };
            }
            return WorkspaceSettingsNetworkComponent.prototype.ngOnInit = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.getPrivateEndpoints() ];

                          case 1:
                            return _a.sent(), [ 2 ];
                        }
                    });
                });
            }, WorkspaceSettingsNetworkComponent.prototype.getPrivateEndpoints = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var _a;
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return this.isLoadingEndpoints$.next(!0), this.demoMode ? [ 4, this.delay(5e3) ] : [ 3, 2 ];

                          case 1:
                            _b.sent(), _b.label = 2;

                          case 2:
                            return _b.trys.push([ 2, 4, 5, 6 ]), _a = this, [ 4, this.workspaceSettingsService.getPrivateEndpoints() ];

                          case 3:
                            return _a.privateEndpoints = _b.sent(), this.sortPrivateEndpoints(this.sortColumn, !1), 
                            [ 3, 6 ];

                          case 4:
                            return _b.sent(), this.privateEndpoints = [], [ 2, Promise.resolve() ];

                          case 5:
                            return this.isLoadingEndpoints$.next(!1), [ 7 ];

                          case 6:
                            return [ 2 ];
                        }
                    });
                });
            }, WorkspaceSettingsNetworkComponent.prototype.dismissError = function() {
                this.errorDismissed$.next(!0);
            }, WorkspaceSettingsNetworkComponent.prototype.getErrorMessageBarViewModel = function(message) {
                var _this = this;
                return {
                    bannerType: 1,
                    allowDismiss: !0,
                    iconName: "dismiss_circle_16_regular",
                    closeBarCallback: function() {
                        return _this.dismissError();
                    },
                    message
                };
            }, WorkspaceSettingsNetworkComponent.prototype.dismissFabricWarning = function() {
                this.fabricWarningDismissed$.next(!0);
            }, WorkspaceSettingsNetworkComponent.prototype.getFabricWarningMessageBarViewModel = function() {
                var _this = this;
                return {
                    bannerType: 1,
                    allowDismiss: !0,
                    closeBarCallback: function() {
                        return _this.dismissFabricWarning();
                    },
                    message: this.localizationService.get("PrivateEndpoints_FabricMessage"),
                    link: "https://go.microsoft.com/fwlink/?linkid=2259645",
                    linkDisplayName: this.localizationService.get("LearnMore")
                };
            }, WorkspaceSettingsNetworkComponent.prototype.getIconTooltipText = function(endpoint) {
                return this.localizationService.format("PrivateEndpoints_Tooltip", [ endpoint.privateLinkResourceId, endpoint.groupId ]);
            }, WorkspaceSettingsNetworkComponent.prototype.getLocalizedProvisionState = function(state) {
                switch (state) {
                  case PrivateEndpointProvisioningState.Provisioning:
                    return this.localizationService.get("Provisioning");

                  case PrivateEndpointProvisioningState.Updating:
                    return this.localizationService.get("Updating");

                  case PrivateEndpointProvisioningState.Failed:
                    return this.localizationService.get("Failed");

                  case PrivateEndpointProvisioningState.Succeeded:
                    return this.localizationService.get("Succeeded");

                  case PrivateEndpointProvisioningState.Deleting:
                    return this.localizationService.get("Deleting");

                  default:
                    return "-";
                }
            }, WorkspaceSettingsNetworkComponent.prototype.getLocalizedConnectionStateStatus = function(status) {
                switch (status) {
                  case PrivateEndpointConnectionStateStatus.Approved:
                    return this.localizationService.get("Approved");

                  case PrivateEndpointConnectionStateStatus.Disconnected:
                    return this.localizationService.get("Disconnected");

                  case PrivateEndpointConnectionStateStatus.Pending:
                    return this.localizationService.get("Pending");

                  case PrivateEndpointConnectionStateStatus.Rejected:
                    return this.localizationService.get("Rejected");

                  default:
                    return "-";
                }
            }, WorkspaceSettingsNetworkComponent.prototype.onEndpointSelected = function($event, endpoint) {
                endpoint.selected = $event, this.isAllPrivateEndpointsSelected = this.allSelected();
            }, WorkspaceSettingsNetworkComponent.prototype.selectAllPrivateEndpoints = function() {
                this.allSelected() ? (this.privateEndpoints.forEach(function(e) {
                    return e.selected = !1, !0;
                }), this.isAllPrivateEndpointsSelected = !1) : (this.privateEndpoints.forEach(function(e) {
                    return e.selected = !0, !0;
                }), this.isAllPrivateEndpointsSelected = !0);
            }, WorkspaceSettingsNetworkComponent.prototype.allSelected = function() {
                return _.every(this.privateEndpoints, function(pe) {
                    return pe.selected;
                });
            }, WorkspaceSettingsNetworkComponent.prototype.sortPrivateEndpoints = function(column, reverseSortOrder) {
                void 0 === reverseSortOrder && (reverseSortOrder = !0), this.privateEndpoints && 0 !== this.privateEndpoints.length && (reverseSortOrder && this.sortColumn === column ? this.sortColumnAscending = !this.sortColumnAscending : (this.sortColumn = column, 
                this.sortColumnAscending = !0), this.privateEndpoints = _.sortBy(this.privateEndpoints, function(endpoint) {
                    var _a;
                    switch (column) {
                      case PrivateEndpointsColumn.Name:
                        return endpoint.name;

                      case PrivateEndpointsColumn.ProvisioningState:
                        return endpoint.provisioningState;

                      case PrivateEndpointsColumn.ApprovalState:
                        return null === (_a = endpoint.connectionState) || void 0 === _a ? void 0 : _a.status;
                    }
                }), this.sortColumnAscending || (this.privateEndpoints = _.reverse(this.privateEndpoints)));
            }, WorkspaceSettingsNetworkComponent.prototype.addPrivateEndpoint = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var _a;
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return this.dismissError(), _a = this, [ 4, this.workspaceSettingsService.addPrivateEndpoint() ];

                          case 1:
                            return _a.privateEndpoints = _b.sent(), this.sortPrivateEndpoints(this.sortColumn, !1), 
                            this.changeDetectorRef.markForCheck(), [ 2 ];
                        }
                    });
                });
            }, WorkspaceSettingsNetworkComponent.prototype.deletePrivateEndpoints = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var _a;
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return this.dismissError(), _a = this, [ 4, this.workspaceSettingsService.removePrivateEndpoints(_(this.privateEndpoints).filter(function(pe) {
                                return pe.selected;
                            }).map(function(pe) {
                                return pe.name;
                            }).value()) ];

                          case 1:
                            return _a.privateEndpoints = _b.sent(), this.sortPrivateEndpoints(this.sortColumn, !1), 
                            this.changeDetectorRef.markForCheck(), [ 2 ];
                        }
                    });
                });
            }, WorkspaceSettingsNetworkComponent.prototype.getProvisioningStateIcon = function(provisioningState) {
                switch (provisioningState) {
                  case PrivateEndpointProvisioningState.Provisioning:
                  case PrivateEndpointProvisioningState.Updating:
                  case PrivateEndpointProvisioningState.Deleting:
                    return "inprogress_20_filled";

                  case PrivateEndpointProvisioningState.Failed:
                    return "failed_20_filled";

                  case PrivateEndpointProvisioningState.Succeeded:
                    return "completed_20_filled";

                  default:
                    return "nostatus_20_filled";
                }
            }, WorkspaceSettingsNetworkComponent.prototype.getConnectionStateIcon = function(connectionState) {
                switch (connectionState) {
                  case PrivateEndpointConnectionStateStatus.Approved:
                    return "completed_20_filled";

                  case PrivateEndpointConnectionStateStatus.Pending:
                    return "inprogress_20_filled";

                  case PrivateEndpointConnectionStateStatus.Disconnected:
                  case PrivateEndpointConnectionStateStatus.Rejected:
                    return "failed_20_filled";

                  default:
                    return "nostatus_20_filled";
                }
            }, WorkspaceSettingsNetworkComponent.prototype.isRemoveButtonDisabled = function() {
                var selectedEndpoints = _.filter(this.privateEndpoints, function(pe) {
                    return pe.selected;
                });
                return !selectedEndpoints || 0 === selectedEndpoints.length || !_.every(selectedEndpoints, function(pe) {
                    return !1 === pe.isSystemResource && pe.provisioningState !== PrivateEndpointProvisioningState.Provisioning;
                });
            }, WorkspaceSettingsNetworkComponent.prototype.getEndpointIcon = function(groupId) {
                switch (groupId) {
                  case "MongoDB":
                  case "Sql":
                    return "c_azure_cosmos_database_mounted_20";

                  case "postgresql":
                    return "c_azure_postgresql_db_mounted_20";

                  case "mysql":
                  case "sqlServer":
                  case "sqlManagedInstance":
                  case "sql":
                  case "dev":
                  case "sqlOnDemand":
                    return "c_azure_sql_database_mounted_20";

                  case "blob":
                  case "queue":
                  case "table":
                    return "c_data_warehouse_20";

                  case "dfs":
                    return "c_lakehouse_20";

                  case "file":
                    return "c_folder_20";

                  case "kusto":
                    return "c_kql_database_20";

                  default:
                    return "c_generic_database_mounted_20";
                }
            }, WorkspaceSettingsNetworkComponent.prototype.delay = function(ms) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        return [ 2, new Promise(function(resolve) {
                            return setTimeout(resolve, ms);
                        }) ];
                    });
                });
            }, WorkspaceSettingsNetworkComponent.\u0275fac = function(t) {
                return new (t || WorkspaceSettingsNetworkComponent)(core["\u0275\u0275directiveInject"](tri_workspace_settings.X), core["\u0275\u0275directiveInject"](core.ChangeDetectorRef), core["\u0275\u0275directiveInject"](localization_service.z));
            }, WorkspaceSettingsNetworkComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: WorkspaceSettingsNetworkComponent,
                selectors: [ [ "tri-workspace-settings-network" ] ],
                outputs: {
                    closeSettings: "closeSettings"
                },
                decls: 11,
                vars: 18,
                consts: [ [ 4, "ngIf" ], [ 3, "viewModel", "hideMessageBar", 4, "ngIf" ], [ 1, "tri-flex", "tri-items-center", "tri-justify-center", "tri-h-full" ], [ 3, "viewModel", "hideMessageBar" ], [ 1, "network-settings-container", "tri-flex", "tri-flex-col" ], [ 1, "network-settings-header" ], [ 1, "network-settings-description" ], [ "href", "https://go.microsoft.com/fwlink/?linkid=2252791", "rel", "noopener noreferrer", "target", "_blank", 1, "learn-more-link", 3, "aria-label", "external" ], [ "href", "https://go.microsoft.com/fwlink/?linkid=2258953", "rel", "noopener noreferrer", "target", "_blank", 1, "learn-more-link", 3, "aria-label", "external" ], [ 1, "private-endpoints" ], [ 1, "private-endpoints-buttons-container" ], [ "tri-button", "", "appearance", "subtle", "data-testid", "delete-network-btn", 1, "add-private-endpoint-button", 3, "disabled", "click" ], [ "name", "add_16_regular" ], [ "tri-button", "", "appearance", "subtle", "data-testid", "delete-network-btn", 1, "delete-private-endpoint-button", 3, "disabled", "click" ], [ "name", "arrow_sync_20_regular" ], [ "name", "delete_20_regular" ], [ "class", "tri-flex tri-items-center tri-justify-center tri-h-full", 4, "ngIf" ], [ "class", "private-endpoints-table", 4, "ngIf" ], [ 1, "private-endpoints-table-empty-state", 3, "viewModel" ], [ 1, "private-endpoints-table" ], [ "role", "row" ], [ "role", "columnheader", 1, "private-endpoints-checkbox-column-header" ], [ 3, "checked", "ariaLabel", "disabled", "onChange" ], [ "role", "columnheader", 1, "private-endpoints-name-column-header" ], [ 1, "private-endpoints-sort-button", 3, "click" ], [ "name", "arrow_down_20_regular", 4, "ngIf" ], [ "name", "arrow_up_20_regular", 4, "ngIf" ], [ "role", "columnheader", 1, "private-endpoints-state-column-header" ], [ 4, "ngFor", "ngForOf" ], [ "name", "arrow_down_20_regular" ], [ "name", "arrow_up_20_regular" ], [ "role", "cell" ], [ 3, "name", "ariaLabel", "disabled", "ngModel", "onChange", "ngModelChange" ], [ "role", "cell", 1, "private-endpoints-name-cell" ], [ "name", "lock_closed_20_filled", 3, "triTooltip", 4, "ngIf" ], [ 3, "sprite", "name", "triTooltip", 4, "ngIf" ], [ 3, "title" ], [ "role", "cell", 1, "private-endpoints-other-cell", 3, "title" ], [ "sprite", "status-color-icons", 3, "name" ], [ "name", "lock_closed_20_filled", 3, "triTooltip" ], [ 3, "sprite", "name", "triTooltip" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275template"](0, WorkspaceSettingsNetworkComponent_ng_container_0_Template, 2, 0, "ng-container", 0), 
                    core["\u0275\u0275pipe"](1, "async"), core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275template"](3, WorkspaceSettingsNetworkComponent_tri_message_bar_3_Template, 2, 3, "tri-message-bar", 1), 
                    core["\u0275\u0275pipe"](4, "async"), core["\u0275\u0275pipe"](5, "async"), core["\u0275\u0275template"](6, WorkspaceSettingsNetworkComponent_tri_message_bar_6_Template, 1, 1, "tri-message-bar", 1), 
                    core["\u0275\u0275pipe"](7, "async"), core["\u0275\u0275template"](8, WorkspaceSettingsNetworkComponent_ng_container_8_Template, 51, 61, "ng-container", 0), 
                    core["\u0275\u0275pipe"](9, "async"), core["\u0275\u0275pipe"](10, "async")), 2 & rf && (core["\u0275\u0275property"]("ngIf", !1 === core["\u0275\u0275pipeBind1"](1, 4, ctx.initialized$) || !1 === core["\u0275\u0275pipeBind1"](2, 6, ctx.capacitiesInitialized$)), 
                    core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngIf", !1 === core["\u0275\u0275pipeBind1"](4, 8, ctx.errorDismissed$) && core["\u0275\u0275pipeBind1"](5, 10, ctx.apiError$)), 
                    core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngIf", !1 === core["\u0275\u0275pipeBind1"](7, 12, ctx.fabricWarningDismissed$)), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", !0 === core["\u0275\u0275pipeBind1"](9, 14, ctx.initialized$) && !0 === core["\u0275\u0275pipeBind1"](10, 16, ctx.capacitiesInitialized$)));
                },
                dependencies: [ common.NgForOf, common.NgIf, fesm2022_forms.JJ, fesm2022_forms.On, tri_svg_icon_component.M, tri_spinner_component.D, tri_message_bar_component.h, tri_checkbox_component.r, tri_tooltip_directive.Z, tri_empty_state_component.v, tri_link_component.v, common.AsyncPipe, localize_pipe.Y, localize_pipe.A ],
                styles: [ "[_nghost-%COMP%]{font-family:var(--fontFamilyBase);font-size:14px;line-height:20px}[_nghost-%COMP%]   .network-loading-container[_ngcontent-%COMP%]{display:flex;justify-content:center;padding-top:50px}[_nghost-%COMP%]   .network-settings-container[_ngcontent-%COMP%]   .network-settings-header[_ngcontent-%COMP%]{font-size:var(--fontSizeBase600);line-height:var(--lineHeightBase600);font-weight:var(--fontWeightBold);margin-bottom:10px}[_nghost-%COMP%]   .network-settings-container[_ngcontent-%COMP%]   h4[_ngcontent-%COMP%]{margin-bottom:10px}[_nghost-%COMP%]   .network-settings-container[_ngcontent-%COMP%]   .network-settings-description[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{padding-inline-end:5px}[_nghost-%COMP%]   .network-settings-container[_ngcontent-%COMP%]   .private-endpoints[_ngcontent-%COMP%]{margin-bottom:20px;margin-top:20px}[_nghost-%COMP%]   .network-settings-container[_ngcontent-%COMP%]   .private-endpoints[_ngcontent-%COMP%]   .private-endpoints-buttons-container[_ngcontent-%COMP%]{margin-bottom:5px}[_nghost-%COMP%]   .network-settings-container[_ngcontent-%COMP%]   .private-endpoints[_ngcontent-%COMP%]   .private-endpoints-table-empty-state[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;margin-top:30px}[_nghost-%COMP%]   .network-settings-container[_ngcontent-%COMP%]   .private-endpoints[_ngcontent-%COMP%]   .private-endpoints-table[_ngcontent-%COMP%]   .private-endpoints-checkbox-column-header[_ngcontent-%COMP%]{width:5%}[_nghost-%COMP%]   .network-settings-container[_ngcontent-%COMP%]   .private-endpoints[_ngcontent-%COMP%]   .private-endpoints-table[_ngcontent-%COMP%]   .private-endpoints-name-column-header[_ngcontent-%COMP%]{width:40%}[_nghost-%COMP%]   .network-settings-container[_ngcontent-%COMP%]   .private-endpoints[_ngcontent-%COMP%]   .private-endpoints-table[_ngcontent-%COMP%]   .private-endpoints-sort-button[_ngcontent-%COMP%]{padding-inline-start:0;border:0;background:transparent;display:flex;gap:10px}[_nghost-%COMP%]   .network-settings-container[_ngcontent-%COMP%]   .private-endpoints[_ngcontent-%COMP%]   .private-endpoints-table[_ngcontent-%COMP%]   .private-endpoints-sort-button[_ngcontent-%COMP%]   tri-svg-icon[_ngcontent-%COMP%]{width:14px}[_nghost-%COMP%]   .network-settings-container[_ngcontent-%COMP%]   .private-endpoints[_ngcontent-%COMP%]   .private-endpoints-table[_ngcontent-%COMP%]   .private-endpoints-name-cell[_ngcontent-%COMP%]{overflow:hidden;white-space:nowrap;max-width:300px;text-overflow:ellipsis}[_nghost-%COMP%]   .network-settings-container[_ngcontent-%COMP%]   .private-endpoints[_ngcontent-%COMP%]   .private-endpoints-table[_ngcontent-%COMP%]   .private-endpoints-name-cell[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{margin-inline-start:5px}[_nghost-%COMP%]   .network-settings-container[_ngcontent-%COMP%]   .private-endpoints[_ngcontent-%COMP%]   .private-endpoints-table[_ngcontent-%COMP%]   .private-endpoints-other-cell[_ngcontent-%COMP%], [_nghost-%COMP%]   .network-settings-container[_ngcontent-%COMP%]   .private-endpoints[_ngcontent-%COMP%]   .private-endpoints-table[_ngcontent-%COMP%]   .private-endpoints-state-column-header[_ngcontent-%COMP%]{padding-inline-start:25px}[_nghost-%COMP%]   .network-settings-container[_ngcontent-%COMP%]   .private-endpoints[_ngcontent-%COMP%]   .private-endpoints-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{padding-top:5px;padding-bottom:5px;white-space:nowrap}[_nghost-%COMP%]   .network-settings-container[_ngcontent-%COMP%]   .private-endpoints[_ngcontent-%COMP%]   .private-endpoints-table[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{border-bottom:1px solid var(--colorNeutralStroke2)}" ],
                changeDetection: 0
            }), WorkspaceSettingsNetworkComponent;
        }();
        function ResourceConnectorComponent_tri_message_bar_4_Template(rf, ctx) {
            if (1 & rf) {
                var _r4 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "tri-message-bar", 6), core["\u0275\u0275listener"]("hideMessageBar", function() {
                    core["\u0275\u0275restoreView"](_r4);
                    var ctx_r3 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r3.dismissServerError());
                }), core["\u0275\u0275pipe"](1, "async"), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var tmp_0_0, ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("viewModel", ctx_r0.getErrorMessageBarViewModel(null !== (tmp_0_0 = core["\u0275\u0275pipeBind1"](1, 1, ctx_r0.serverError$)) && void 0 !== tmp_0_0 ? tmp_0_0 : "", "server"));
            }
        }
        function ResourceConnectorComponent_ng_container_13_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275element"](1, "tri-spinner", 7), 
            core["\u0275\u0275elementContainerEnd"]());
        }
        function ResourceConnectorComponent_ng_container_15_div_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r9 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div", 9)(1, "tri-checkbox", 10), core["\u0275\u0275listener"]("onChange", function() {
                    core["\u0275\u0275restoreView"](_r9);
                    var ctx_r8 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r8.selectTenantResource());
                }), core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275pipe"](3, "localize"), 
                core["\u0275\u0275elementStart"](4, "label", 11), core["\u0275\u0275text"](5), core["\u0275\u0275pipe"](6, "localize"), 
                core["\u0275\u0275elementEnd"]()()();
            }
            if (2 & rf) {
                var ctx_r5 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275classProp"]("is-disabled", !ctx_r5.tenantResource || !ctx_r5.isWorkspaceAdmin), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("id", "default-connection-checkbox-" + ctx_r5.resourceConnector.resourceType)("disabled", !ctx_r5.tenantResource || !0 === core["\u0275\u0275pipeBind1"](2, 7, ctx_r5.serverOperationInProgress$) || !ctx_r5.isWorkspaceAdmin)("label", core["\u0275\u0275pipeBind1"](3, 9, "BYOResources_Connect_Default"))("checked", ctx_r5.tenantResourceSelected), 
                core["\u0275\u0275advance"](4), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](6, 11, "BYOResources_Connect_Default"));
            }
        }
        function ResourceConnectorComponent_ng_container_15_ng_container_2_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "div", 12)(2, "div", 13), 
            core["\u0275\u0275element"](3, "tri-svg-icon", 14), core["\u0275\u0275elementStart"](4, "span", 15), 
            core["\u0275\u0275text"](5), core["\u0275\u0275pipe"](6, "localize"), core["\u0275\u0275elementEnd"]()(), 
            core["\u0275\u0275elementStart"](7, "div", 16)(8, "tri-link", 17), core["\u0275\u0275text"](9), 
            core["\u0275\u0275pipe"](10, "localize"), core["\u0275\u0275elementEnd"]()()(), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var ctx_r6 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](5), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](6, 4, ctx_r6.resourceConnector.notAllowedWarningMessage)), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("external", !0)("href", ctx_r6.resourceConnector.notAllowedLearnMoreLink), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](10, 6, "LearnMore"), " ");
            }
        }
        function ResourceConnectorComponent_ng_container_15_ng_container_3_tri_message_bar_4_Template(rf, ctx) {
            if (1 & rf) {
                var _r26 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "tri-message-bar", 6), core["\u0275\u0275listener"]("hideMessageBar", function() {
                    core["\u0275\u0275restoreView"](_r26);
                    var ctx_r25 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r25.dismissFetchError());
                }), core["\u0275\u0275pipe"](1, "async"), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var tmp_0_0, ctx_r10 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275property"]("viewModel", ctx_r10.getErrorMessageBarViewModel(null !== (tmp_0_0 = core["\u0275\u0275pipeBind1"](1, 1, ctx_r10.fetchErrors$)) && void 0 !== tmp_0_0 ? tmp_0_0 : "", "fetch"));
            }
        }
        function ResourceConnectorComponent_ng_container_15_ng_container_3_ng_container_10_tri_dropdown_item_11_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "tri-dropdown-item", 30), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var sub_r29 = ctx.$implicit;
                core["\u0275\u0275property"]("value", sub_r29), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275textInterpolate2"]("", sub_r29.text, " (", sub_r29.key, ") ");
            }
        }
        function ResourceConnectorComponent_ng_container_15_ng_container_3_ng_container_10_tri_spinner_12_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "tri-spinner");
        }
        function ResourceConnectorComponent_ng_container_15_ng_container_3_ng_container_10_Template(rf, ctx) {
            if (1 & rf) {
                var _r31 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "div")(2, "tri-dropdown", 26), 
                core["\u0275\u0275listener"]("ngModelChange", function($event) {
                    core["\u0275\u0275restoreView"](_r31);
                    var ctx_r30 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r30.selectedSubscriptionDropdownOption = $event);
                })("valueChange", function($event) {
                    core["\u0275\u0275restoreView"](_r31);
                    var ctx_r32 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r32.onSubscriptionChange($event));
                }), core["\u0275\u0275pipe"](3, "async"), core["\u0275\u0275pipe"](4, "async"), 
                core["\u0275\u0275elementStart"](5, "tri-dropdown-trigger")(6, "div", 27), core["\u0275\u0275pipe"](7, "localize"), 
                core["\u0275\u0275text"](8), core["\u0275\u0275pipe"](9, "localize"), core["\u0275\u0275elementEnd"]()(), 
                core["\u0275\u0275elementStart"](10, "tri-search-box", 28), core["\u0275\u0275listener"]("value", function($event) {
                    core["\u0275\u0275restoreView"](_r31);
                    var ctx_r33 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r33.onSubscriptionsSeached($event));
                }), core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](11, ResourceConnectorComponent_ng_container_15_ng_container_3_ng_container_10_tri_dropdown_item_11_Template, 2, 3, "tri-dropdown-item", 29), 
                core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](12, ResourceConnectorComponent_ng_container_15_ng_container_3_ng_container_10_tri_spinner_12_Template, 1, 0, "tri-spinner", 5), 
                core["\u0275\u0275pipe"](13, "async"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementContainerEnd"]();
            }
            if (2 & rf) {
                var tmp_1_0, ctx_r11 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("compact", !0)("options", ctx_r11.getDropdownOverlayOptions(null !== (tmp_1_0 = null == ctx_r11.allSubscriptionDropdownOptions ? null : ctx_r11.allSubscriptionDropdownOptions.length) && void 0 !== tmp_1_0 ? tmp_1_0 : 0))("ngModel", ctx_r11.selectedSubscriptionDropdownOption)("disabled", !0 === core["\u0275\u0275pipeBind1"](3, 8, ctx_r11.serverOperationInProgress$) || !0 === core["\u0275\u0275pipeBind1"](4, 10, ctx_r11.fetchResourceStatus.subscription.inProgress$) || !ctx_r11.isWorkspaceAdmin), 
                core["\u0275\u0275advance"](4), core["\u0275\u0275property"]("triTooltip", ctx_r11.selectedSubscriptionDropdownOption ? ctx_r11.selectedSubscriptionDropdownOption.text + " (" + (null == ctx_r11.selectedSubscriptionDropdownOption ? null : ctx_r11.selectedSubscriptionDropdownOption.key) + ")" : core["\u0275\u0275pipeBind1"](7, 12, "Trident_Workspace_Settings_Select_Subscription")), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", ctx_r11.selectedSubscriptionDropdownOption ? ctx_r11.selectedSubscriptionDropdownOption.text + " (" + (null == ctx_r11.selectedSubscriptionDropdownOption ? null : ctx_r11.selectedSubscriptionDropdownOption.key) + ")" : core["\u0275\u0275pipeBind1"](9, 14, "Trident_Workspace_Settings_Select_Subscription"), " "), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngForOf", ctx_r11.allSubscriptionDropdownOptions), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !0 === core["\u0275\u0275pipeBind1"](13, 16, ctx_r11.fetchResourceStatus.subscription.inProgress$));
            }
        }
        function ResourceConnectorComponent_ng_container_15_ng_container_3_ng_container_11_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "span"), 
            core["\u0275\u0275text"](2), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementContainerEnd"]()), 
            2 & rf) {
                var ctx_r12 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](ctx_r12.connectedResource.subscriptionId);
            }
        }
        function ResourceConnectorComponent_ng_container_15_ng_container_3_ng_container_12_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "span"), 
            core["\u0275\u0275text"](2), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementContainerEnd"]()), 
            2 & rf) {
                var ctx_r13 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](null == ctx_r13.tenantResource ? null : ctx_r13.tenantResource.subscriptionId);
            }
        }
        function ResourceConnectorComponent_ng_container_15_ng_container_3_div_13_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 31), core["\u0275\u0275element"](1, "tri-svg-icon", 32), 
            core["\u0275\u0275elementStart"](2, "span"), core["\u0275\u0275text"](3), core["\u0275\u0275pipe"](4, "localize"), 
            core["\u0275\u0275elementStart"](5, "tri-link", 17), core["\u0275\u0275text"](6), 
            core["\u0275\u0275pipe"](7, "localize"), core["\u0275\u0275elementEnd"]()()()), 
            2 & rf) {
                var ctx_r14 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"]("", core["\u0275\u0275pipeBind1"](4, 4, ctx_r14.resourceConnector.noSubscriptionsMessage), " "), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("external", !0)("href", ctx_r14.resourceConnector.noSubscriptionLearnMoreLink), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](7, 6, "LearnMore"), " ");
            }
        }
        function ResourceConnectorComponent_ng_container_15_ng_container_3_ng_container_19_tri_dropdown_item_11_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "tri-dropdown-item", 30), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var resGroup_r36 = ctx.$implicit;
                core["\u0275\u0275property"]("value", resGroup_r36), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275textInterpolate1"]("", resGroup_r36.text, " ");
            }
        }
        function ResourceConnectorComponent_ng_container_15_ng_container_3_ng_container_19_tri_spinner_12_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "tri-spinner", 34);
        }
        function ResourceConnectorComponent_ng_container_15_ng_container_3_ng_container_19_Template(rf, ctx) {
            if (1 & rf) {
                var _r38 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "div")(2, "tri-dropdown", 26), 
                core["\u0275\u0275listener"]("ngModelChange", function($event) {
                    core["\u0275\u0275restoreView"](_r38);
                    var ctx_r37 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r37.selectedResourceGroupDropdownOption = $event);
                })("valueChange", function($event) {
                    core["\u0275\u0275restoreView"](_r38);
                    var ctx_r39 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r39.onResourceGroupChange($event));
                }), core["\u0275\u0275pipe"](3, "async"), core["\u0275\u0275pipe"](4, "async"), 
                core["\u0275\u0275elementStart"](5, "tri-dropdown-trigger")(6, "div", 27), core["\u0275\u0275pipe"](7, "localize"), 
                core["\u0275\u0275text"](8), core["\u0275\u0275pipe"](9, "localize"), core["\u0275\u0275elementEnd"]()(), 
                core["\u0275\u0275elementStart"](10, "tri-search-box", 28), core["\u0275\u0275listener"]("value", function($event) {
                    core["\u0275\u0275restoreView"](_r38);
                    var ctx_r40 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r40.onResourceGroupsSeached($event));
                }), core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](11, ResourceConnectorComponent_ng_container_15_ng_container_3_ng_container_19_tri_dropdown_item_11_Template, 2, 2, "tri-dropdown-item", 29), 
                core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](12, ResourceConnectorComponent_ng_container_15_ng_container_3_ng_container_19_tri_spinner_12_Template, 1, 0, "tri-spinner", 33), 
                core["\u0275\u0275pipe"](13, "async"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementContainerEnd"]();
            }
            if (2 & rf) {
                var tmp_1_0, tmp_4_0, tmp_5_0, ctx_r15 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("compact", !0)("options", ctx_r15.getDropdownOverlayOptions(null !== (tmp_1_0 = null == ctx_r15.allResourceGroupsDropdownOptions ? null : ctx_r15.allResourceGroupsDropdownOptions.length) && void 0 !== tmp_1_0 ? tmp_1_0 : 0))("ngModel", ctx_r15.selectedResourceGroupDropdownOption)("disabled", !ctx_r15.selectedSubscription || !0 === core["\u0275\u0275pipeBind1"](3, 8, ctx_r15.serverOperationInProgress$) || !0 === core["\u0275\u0275pipeBind1"](4, 10, ctx_r15.fetchResourceStatus.resourceGroup.inProgress$) || !ctx_r15.isWorkspaceAdmin), 
                core["\u0275\u0275advance"](4), core["\u0275\u0275property"]("triTooltip", core["\u0275\u0275pipeBind1"](7, 12, null !== (tmp_4_0 = null == ctx_r15.selectedResourceGroupDropdownOption ? null : ctx_r15.selectedResourceGroupDropdownOption.text) && void 0 !== tmp_4_0 ? tmp_4_0 : "Trident_Workspace_Settings_Select_Resource_Group")), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](9, 14, null !== (tmp_5_0 = null == ctx_r15.selectedResourceGroupDropdownOption ? null : ctx_r15.selectedResourceGroupDropdownOption.text) && void 0 !== tmp_5_0 ? tmp_5_0 : "Trident_Workspace_Settings_Select_Resource_Group"), " "), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngForOf", ctx_r15.allResourceGroupsDropdownOptions), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !0 === core["\u0275\u0275pipeBind1"](13, 16, ctx_r15.fetchResourceStatus.resourceGroup.inProgress$));
            }
        }
        function ResourceConnectorComponent_ng_container_15_ng_container_3_ng_container_20_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "span"), 
            core["\u0275\u0275text"](2), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementContainerEnd"]()), 
            2 & rf) {
                var ctx_r16 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](ctx_r16.connectedResource.resourceGroup);
            }
        }
        function ResourceConnectorComponent_ng_container_15_ng_container_3_ng_container_21_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "span"), 
            core["\u0275\u0275text"](2), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementContainerEnd"]()), 
            2 & rf) {
                var ctx_r17 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](null == ctx_r17.tenantResource ? null : ctx_r17.tenantResource.resourceGroup);
            }
        }
        function ResourceConnectorComponent_ng_container_15_ng_container_3_div_22_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 31), core["\u0275\u0275element"](1, "tri-svg-icon", 32), 
            core["\u0275\u0275elementStart"](2, "span"), core["\u0275\u0275text"](3), core["\u0275\u0275pipe"](4, "localize"), 
            core["\u0275\u0275elementStart"](5, "tri-link", 17), core["\u0275\u0275text"](6), 
            core["\u0275\u0275pipe"](7, "localize"), core["\u0275\u0275elementEnd"]()()()), 
            2 & rf) {
                var ctx_r18 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"]("", core["\u0275\u0275pipeBind1"](4, 4, ctx_r18.resourceConnector.noResourceGroupMessage), " "), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("external", !0)("href", ctx_r18.resourceConnector.noResourceGroupLearnMoreLink), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](7, 6, "LearnMore"), " ");
            }
        }
        function ResourceConnectorComponent_ng_container_15_ng_container_3_ng_container_28_tri_dropdown_item_11_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "tri-dropdown-item", 30), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var res_r43 = ctx.$implicit;
                core["\u0275\u0275property"]("value", res_r43), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275textInterpolate1"]("", res_r43.text, " ");
            }
        }
        function ResourceConnectorComponent_ng_container_15_ng_container_3_ng_container_28_tri_spinner_12_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "tri-spinner");
        }
        function ResourceConnectorComponent_ng_container_15_ng_container_3_ng_container_28_Template(rf, ctx) {
            if (1 & rf) {
                var _r45 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "div")(2, "tri-dropdown", 26), 
                core["\u0275\u0275listener"]("ngModelChange", function($event) {
                    core["\u0275\u0275restoreView"](_r45);
                    var ctx_r44 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r44.selectedResourceDropdownOption = $event);
                })("valueChange", function($event) {
                    core["\u0275\u0275restoreView"](_r45);
                    var ctx_r46 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r46.onResourceChange($event));
                }), core["\u0275\u0275pipe"](3, "async"), core["\u0275\u0275pipe"](4, "async"), 
                core["\u0275\u0275elementStart"](5, "tri-dropdown-trigger")(6, "div", 27), core["\u0275\u0275pipe"](7, "localize"), 
                core["\u0275\u0275text"](8), core["\u0275\u0275pipe"](9, "localize"), core["\u0275\u0275elementEnd"]()(), 
                core["\u0275\u0275elementStart"](10, "tri-search-box", 28), core["\u0275\u0275listener"]("value", function($event) {
                    core["\u0275\u0275restoreView"](_r45);
                    var ctx_r47 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r47.onResourcesSeached($event));
                }), core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](11, ResourceConnectorComponent_ng_container_15_ng_container_3_ng_container_28_tri_dropdown_item_11_Template, 2, 2, "tri-dropdown-item", 29), 
                core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](12, ResourceConnectorComponent_ng_container_15_ng_container_3_ng_container_28_tri_spinner_12_Template, 1, 0, "tri-spinner", 5), 
                core["\u0275\u0275pipe"](13, "async"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementContainerEnd"]();
            }
            if (2 & rf) {
                var tmp_1_0, tmp_4_0, tmp_5_0, ctx_r19 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("compact", !0)("options", ctx_r19.getDropdownOverlayOptions(null !== (tmp_1_0 = null == ctx_r19.allResourcesDropdownOptions ? null : ctx_r19.allResourcesDropdownOptions.length) && void 0 !== tmp_1_0 ? tmp_1_0 : 0))("ngModel", ctx_r19.selectedResourceDropdownOption)("disabled", !ctx_r19.selectedSubscription || !ctx_r19.selectedResourceGroup || !0 === core["\u0275\u0275pipeBind1"](3, 8, ctx_r19.serverOperationInProgress$) || !0 === core["\u0275\u0275pipeBind1"](4, 10, ctx_r19.fetchResourceStatus.resource.inProgress$) || !ctx_r19.isWorkspaceAdmin), 
                core["\u0275\u0275advance"](4), core["\u0275\u0275property"]("triTooltip", core["\u0275\u0275pipeBind1"](7, 12, null !== (tmp_4_0 = null == ctx_r19.selectedResourceDropdownOption ? null : ctx_r19.selectedResourceDropdownOption.text) && void 0 !== tmp_4_0 ? tmp_4_0 : ctx_r19.resourceConnector.resourcePickerPlaceholder)), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](9, 14, null !== (tmp_5_0 = null == ctx_r19.selectedResourceDropdownOption ? null : ctx_r19.selectedResourceDropdownOption.text) && void 0 !== tmp_5_0 ? tmp_5_0 : ctx_r19.resourceConnector.resourcePickerPlaceholder), " "), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngForOf", ctx_r19.allResourcesDropdownOptions), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !0 === core["\u0275\u0275pipeBind1"](13, 16, ctx_r19.fetchResourceStatus.resource.inProgress$));
            }
        }
        function ResourceConnectorComponent_ng_container_15_ng_container_3_ng_container_29_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "span"), 
            core["\u0275\u0275text"](2), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementContainerEnd"]()), 
            2 & rf) {
                var ctx_r20 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](ctx_r20.connectedResource.resourceName);
            }
        }
        function ResourceConnectorComponent_ng_container_15_ng_container_3_ng_container_30_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "span"), 
            core["\u0275\u0275text"](2), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementContainerEnd"]()), 
            2 & rf) {
                var ctx_r21 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](null == ctx_r21.tenantResource ? null : ctx_r21.tenantResource.resourceName);
            }
        }
        function ResourceConnectorComponent_ng_container_15_ng_container_3_button_32_tri_spinner_3_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "tri-spinner");
        }
        function ResourceConnectorComponent_ng_container_15_ng_container_3_button_32_Template(rf, ctx) {
            if (1 & rf) {
                var _r50 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "button", 35), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r50);
                    var ctx_r49 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r49.connectResource());
                }), core["\u0275\u0275pipe"](1, "async"), core["\u0275\u0275pipe"](2, "async"), 
                core["\u0275\u0275template"](3, ResourceConnectorComponent_ng_container_15_ng_container_3_button_32_tri_spinner_3_Template, 1, 0, "tri-spinner", 5), 
                core["\u0275\u0275pipe"](4, "async"), core["\u0275\u0275text"](5), core["\u0275\u0275pipe"](6, "localize"), 
                core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r22 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275classProp"]("is-disabled", !((ctx_r22.selectedSubscription && ctx_r22.selectedResourceGroup && ctx_r22.selectedResource || ctx_r22.tenantResourceSelected) && !0 !== core["\u0275\u0275pipeBind1"](1, 5, ctx_r22.serverOperationInProgress$) && ctx_r22.isWorkspaceAdmin)), 
                core["\u0275\u0275property"]("disabled", !((ctx_r22.selectedSubscription && ctx_r22.selectedResourceGroup && ctx_r22.selectedResource || ctx_r22.tenantResourceSelected) && !0 !== core["\u0275\u0275pipeBind1"](2, 7, ctx_r22.serverOperationInProgress$) && ctx_r22.isWorkspaceAdmin)), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngIf", !0 === core["\u0275\u0275pipeBind1"](4, 9, ctx_r22.serverOperationInProgress$)), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](6, 11, "BYOResources_Connect"), " ");
            }
        }
        function ResourceConnectorComponent_ng_container_15_ng_container_3_button_33_Template(rf, ctx) {
            if (1 & rf) {
                var _r52 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "button", 36), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r52);
                    var ctx_r51 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r51.cancelConnect());
                }), core["\u0275\u0275pipe"](1, "async"), core["\u0275\u0275pipe"](2, "async"), 
                core["\u0275\u0275text"](3), core["\u0275\u0275pipe"](4, "localize"), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r23 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275classProp"]("is-disabled", !(ctx_r23.selectedSubscription && ctx_r23.selectedResourceGroup && ctx_r23.selectedResource && !0 !== core["\u0275\u0275pipeBind1"](1, 4, ctx_r23.serverOperationInProgress$) && ctx_r23.isWorkspaceAdmin)), 
                core["\u0275\u0275property"]("disabled", !(ctx_r23.selectedSubscription && ctx_r23.selectedResourceGroup && ctx_r23.selectedResource && !0 !== core["\u0275\u0275pipeBind1"](2, 6, ctx_r23.serverOperationInProgress$) && ctx_r23.isWorkspaceAdmin)), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](4, 8, "Cancel_ButtonText"), " ");
            }
        }
        function ResourceConnectorComponent_ng_container_15_ng_container_3_button_34_tri_spinner_3_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "tri-spinner");
        }
        function ResourceConnectorComponent_ng_container_15_ng_container_3_button_34_Template(rf, ctx) {
            if (1 & rf) {
                var _r55 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "button", 35), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r55);
                    var ctx_r54 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r54.disconnectResource());
                }), core["\u0275\u0275pipe"](1, "async"), core["\u0275\u0275pipe"](2, "async"), 
                core["\u0275\u0275template"](3, ResourceConnectorComponent_ng_container_15_ng_container_3_button_34_tri_spinner_3_Template, 1, 0, "tri-spinner", 5), 
                core["\u0275\u0275pipe"](4, "async"), core["\u0275\u0275text"](5), core["\u0275\u0275pipe"](6, "localize"), 
                core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r24 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275classProp"]("is-disabled", !0 === core["\u0275\u0275pipeBind1"](1, 5, ctx_r24.serverOperationInProgress$) || !ctx_r24.isWorkspaceAdmin), 
                core["\u0275\u0275property"]("disabled", !0 === core["\u0275\u0275pipeBind1"](2, 7, ctx_r24.serverOperationInProgress$) || !ctx_r24.isWorkspaceAdmin), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngIf", !0 === core["\u0275\u0275pipeBind1"](4, 9, ctx_r24.serverOperationInProgress$)), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](6, 11, "BYOResources_Disconnect_Button_Workspace"), " ");
            }
        }
        function ResourceConnectorComponent_ng_container_15_ng_container_3_Template(rf, ctx) {
            if (1 & rf) {
                var _r57 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "tri-collapsed-container", 18), 
                core["\u0275\u0275listener"]("collapseContainer", function() {
                    core["\u0275\u0275restoreView"](_r57);
                    var ctx_r56 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r56.onCollapseToggle());
                }), core["\u0275\u0275pipe"](2, "localize"), core["\u0275\u0275elementStart"](3, "div", 19), 
                core["\u0275\u0275template"](4, ResourceConnectorComponent_ng_container_15_ng_container_3_tri_message_bar_4_Template, 2, 3, "tri-message-bar", 2), 
                core["\u0275\u0275pipe"](5, "async"), core["\u0275\u0275pipe"](6, "async"), core["\u0275\u0275elementStart"](7, "label", 20), 
                core["\u0275\u0275text"](8), core["\u0275\u0275pipe"](9, "localize"), core["\u0275\u0275elementEnd"](), 
                core["\u0275\u0275template"](10, ResourceConnectorComponent_ng_container_15_ng_container_3_ng_container_10_Template, 14, 18, "ng-container", 5), 
                core["\u0275\u0275template"](11, ResourceConnectorComponent_ng_container_15_ng_container_3_ng_container_11_Template, 3, 1, "ng-container", 5), 
                core["\u0275\u0275template"](12, ResourceConnectorComponent_ng_container_15_ng_container_3_ng_container_12_Template, 3, 1, "ng-container", 5), 
                core["\u0275\u0275template"](13, ResourceConnectorComponent_ng_container_15_ng_container_3_div_13_Template, 8, 8, "div", 21), 
                core["\u0275\u0275pipe"](14, "async"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](15, "div", 22)(16, "label", 20), 
                core["\u0275\u0275text"](17), core["\u0275\u0275pipe"](18, "localize"), core["\u0275\u0275elementEnd"](), 
                core["\u0275\u0275template"](19, ResourceConnectorComponent_ng_container_15_ng_container_3_ng_container_19_Template, 14, 18, "ng-container", 5), 
                core["\u0275\u0275template"](20, ResourceConnectorComponent_ng_container_15_ng_container_3_ng_container_20_Template, 3, 1, "ng-container", 5), 
                core["\u0275\u0275template"](21, ResourceConnectorComponent_ng_container_15_ng_container_3_ng_container_21_Template, 3, 1, "ng-container", 5), 
                core["\u0275\u0275template"](22, ResourceConnectorComponent_ng_container_15_ng_container_3_div_22_Template, 8, 8, "div", 21), 
                core["\u0275\u0275pipe"](23, "async"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](24, "div", 22)(25, "label", 20), 
                core["\u0275\u0275text"](26), core["\u0275\u0275pipe"](27, "localize"), core["\u0275\u0275elementEnd"](), 
                core["\u0275\u0275template"](28, ResourceConnectorComponent_ng_container_15_ng_container_3_ng_container_28_Template, 14, 18, "ng-container", 5), 
                core["\u0275\u0275template"](29, ResourceConnectorComponent_ng_container_15_ng_container_3_ng_container_29_Template, 3, 1, "ng-container", 5), 
                core["\u0275\u0275template"](30, ResourceConnectorComponent_ng_container_15_ng_container_3_ng_container_30_Template, 3, 1, "ng-container", 5), 
                core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](31, "div", 23), 
                core["\u0275\u0275template"](32, ResourceConnectorComponent_ng_container_15_ng_container_3_button_32_Template, 7, 13, "button", 24), 
                core["\u0275\u0275template"](33, ResourceConnectorComponent_ng_container_15_ng_container_3_button_33_Template, 5, 10, "button", 25), 
                core["\u0275\u0275template"](34, ResourceConnectorComponent_ng_container_15_ng_container_3_button_34_Template, 7, 13, "button", 24), 
                core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementContainerEnd"]();
            }
            if (2 & rf) {
                var tmp_3_0, ctx_r7 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("headerText", core["\u0275\u0275pipeBind1"](2, 22, ctx_r7.resourceConnector.collapsibeSectionHeader))("iconName", ctx_r7.resourceConnector.icon.name)("iconSprite", ctx_r7.resourceConnector.icon.sprite)("collapsed", null !== (tmp_3_0 = ctx_r7.resourceConnector.collapsed) && void 0 !== tmp_3_0 ? tmp_3_0 : !!ctx_r7.connectedResource), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngIf", !1 === core["\u0275\u0275pipeBind1"](5, 24, ctx_r7.fetchErrorDismissed$) && core["\u0275\u0275pipeBind1"](6, 26, ctx_r7.fetchErrors$)), 
                core["\u0275\u0275advance"](4), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](9, 28, "Subscription")), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", !ctx_r7.connectedResource && !ctx_r7.tenantResourceSelected), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx_r7.connectedResource), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx_r7.tenantResourceSelected), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !ctx_r7.connectedResource && 0 === ctx_r7.allSubscriptions.length && !0 !== core["\u0275\u0275pipeBind1"](14, 30, ctx_r7.fetchResourceStatus.subscription.inProgress$)), 
                core["\u0275\u0275advance"](4), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](18, 32, "BYOResources_Connect_ResourceGroup")), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", !ctx_r7.connectedResource && !ctx_r7.tenantResourceSelected), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx_r7.connectedResource), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx_r7.tenantResourceSelected), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !ctx_r7.connectedResource && ctx_r7.selectedSubscription && 0 === ctx_r7.allResourceGroups.length && !0 !== core["\u0275\u0275pipeBind1"](23, 34, ctx_r7.fetchResourceStatus.resourceGroup.inProgress$)), 
                core["\u0275\u0275advance"](4), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](27, 36, ctx_r7.resourceConnector.resourceLabel)), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", !ctx_r7.connectedResource && !ctx_r7.tenantResourceSelected), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx_r7.connectedResource), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx_r7.tenantResourceSelected), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", !ctx_r7.connectedResource), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !ctx_r7.connectedResource), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx_r7.connectedResource);
            }
        }
        function ResourceConnectorComponent_ng_container_15_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, ResourceConnectorComponent_ng_container_15_div_1_Template, 7, 13, "div", 8), 
            core["\u0275\u0275template"](2, ResourceConnectorComponent_ng_container_15_ng_container_2_Template, 11, 8, "ng-container", 5), 
            core["\u0275\u0275template"](3, ResourceConnectorComponent_ng_container_15_ng_container_3_Template, 35, 38, "ng-container", 5), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var ctx_r2 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !ctx_r2.connectedResource && ctx_r2.resourceConnector.canSelectTenantResource), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !ctx_r2.isWorkspaceLevelConfigurationAllowed), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx_r2.isWorkspaceLevelConfigurationAllowed && !ctx_r2.connectedResourceFetchFailed);
            }
        }
        var ResourceConnectorComponent = function() {
            function ResourceConnectorComponent(workspaceSettingsService, telemetryService) {
                this.workspaceSettingsService = workspaceSettingsService, this.telemetryService = telemetryService, 
                this.resourceConnector = {}, this.allSubscriptions = [], this.allResourceGroups = [], 
                this.allResources = [], this.allSubscriptionDropdownOptions = [], this.allResourceGroupsDropdownOptions = [], 
                this.allResourcesDropdownOptions = [], this.subscriptionDropdownSearchText = "", 
                this.resourceGroupDropdownSearchText = "", this.resourceDropdownSearchText = "", 
                this.selectedSubscription = void 0, this.selectedResourceGroup = void 0, this.selectedResource = void 0, 
                this.selectedSubscriptionDropdownOption = void 0, this.selectedResourceGroupDropdownOption = void 0, 
                this.selectedResourceDropdownOption = void 0, this.connectedResource = void 0, this.tenantResource = void 0, 
                this.connectedResourceFetchFailed = !1, this.isWorkspaceLevelConfigurationAllowed = !1, 
                this.isInitialized$ = this.workspaceSettingsService.azureConnectionsInitialized$, 
                this.isWorkspaceAdmin = !1, this.initializationSubscription = void 0, this.serverError$ = new BehaviorSubject.X(""), 
                this.serverErrorDismissed$ = new BehaviorSubject.X(!1), this.serverOperationInProgress$ = new BehaviorSubject.X(!1), 
                this.fetchResourceStatus = {}, this.fetchErrors$ = new BehaviorSubject.X(""), this.fetchErrorDismissed$ = new BehaviorSubject.X(!1), 
                this.tenantResourceSelected = !1;
            }
            return ResourceConnectorComponent.prototype.ngOnInit = function() {
                var _this = this;
                this.initializationSubscription = this.isInitialized$.subscribe(function(initialized) {
                    _this.isWorkspaceAdmin = _this.workspaceSettingsService.isWorkspaceAdmin, _this.serverError$ = _this.workspaceSettingsService.azureConnectionsServiceErrorMessages[_this.resourceConnector.resourceType], 
                    _this.serverOperationInProgress$ = _this.workspaceSettingsService.azureResourceApiInProgress[_this.resourceConnector.resourceType], 
                    _this.fetchResourceStatus = _this.workspaceSettingsService.azureResourcesFetchStatus[_this.resourceConnector.resourceType], 
                    _this.fetchErrors$ = (0, merge.T)(_this.fetchResourceStatus.subscription.errorMessage$, _this.fetchResourceStatus.resourceGroup.errorMessage$, _this.fetchResourceStatus.resource.errorMessage$), 
                    _this.fetchErrors$.subscribe(function() {
                        return _this.fetchErrorDismissed$.next(!1);
                    }), initialized && (_this.connectedResource = _this.workspaceSettingsService.getLinkedResource(_this.resourceConnector.resourceType), 
                    _this.connectedResourceFetchFailed = !!_this.connectedResource && !_this.connectedResource.resourceName, 
                    _this.tenantResource = _this.workspaceSettingsService.getTenantResource(_this.resourceConnector.resourceType), 
                    _this.connectedResource || _this.initializePickerOptions(), _this.resourceConnector.collapsed = !_this.connectedResource, 
                    _this.isWorkspaceLevelConfigurationAllowed = !!_this.resourceConnector && _this.workspaceSettingsService.getFeatureSwitchState(_this.resourceConnector.featureFlagToAllowResource));
                });
            }, ResourceConnectorComponent.prototype.ngOnDestroy = function() {
                var _a;
                null === (_a = this.initializationSubscription) || void 0 === _a || _a.unsubscribe();
            }, ResourceConnectorComponent.prototype.onCollapseToggle = function() {
                var _a;
                this.resourceConnector && (this.resourceConnector.collapsed = !(null === (_a = this.resourceConnector) || void 0 === _a ? void 0 : _a.collapsed));
            }, ResourceConnectorComponent.prototype.onSubscriptionChange = function(subscriptionDropdownOption) {
                var _a, _b, _c, _this = this;
                this.selectedSubscription = this.allSubscriptions.find(function(sub) {
                    return sub.subscriptionId === (null == subscriptionDropdownOption ? void 0 : subscriptionDropdownOption.key);
                }), this.workspaceSettingsService.updateCurrentResource(this.resourceConnector.resourceType, {
                    azureTenantObjectId: null === (_a = this.selectedSubscription) || void 0 === _a ? void 0 : _a.azureTenantObjectId,
                    subscriptionId: null === (_b = this.selectedSubscription) || void 0 === _b ? void 0 : _b.subscriptionId
                }), this.selectedResourceGroup = void 0, this.selectedResource = void 0, this.selectedResourceGroupDropdownOption = void 0, 
                this.selectedResourceDropdownOption = void 0, this.selectedSubscription && this.workspaceSettingsService.getResourceGroupsWithResourceTypeForAzureSubscription(this.resourceConnector.resourceType, (null === (_c = this.selectedSubscription) || void 0 === _c ? void 0 : _c.subscriptionId) || "", !0).then(function(resourceGroups) {
                    _this.allResourceGroups = resourceGroups, _this.createResourceGroupDropdownOptions();
                });
            }, ResourceConnectorComponent.prototype.onResourceGroupChange = function(resourceGroupDropdownOption) {
                var _a, _b, _c, _d, _e, _this = this;
                this.selectedResourceGroup = this.allResourceGroups.find(function(rg) {
                    return rg.name === (null == resourceGroupDropdownOption ? void 0 : resourceGroupDropdownOption.text);
                }), this.workspaceSettingsService.updateCurrentResource(this.resourceConnector.resourceType, {
                    azureTenantObjectId: null === (_a = this.selectedSubscription) || void 0 === _a ? void 0 : _a.azureTenantObjectId,
                    subscriptionId: null === (_b = this.selectedSubscription) || void 0 === _b ? void 0 : _b.subscriptionId,
                    resourceGroup: null === (_c = this.selectedResourceGroup) || void 0 === _c ? void 0 : _c.name
                }), this.selectedResource = void 0, this.selectedResourceDropdownOption = void 0, 
                this.selectedSubscription && this.selectedResourceGroup && this.workspaceSettingsService.getAzureResources(this.resourceConnector.resourceType, (null === (_d = this.selectedSubscription) || void 0 === _d ? void 0 : _d.subscriptionId) || "", (null === (_e = this.selectedResourceGroup) || void 0 === _e ? void 0 : _e.name) || "").then(function(resources) {
                    _this.allResources = resources, _this.createResourcesDropdownOptions();
                });
            }, ResourceConnectorComponent.prototype.onResourceChange = function(resourceDropdownOption) {
                var _a, _b, _c, _d;
                this.selectedResource = this.allResources.find(function(res) {
                    return res.name === (null == resourceDropdownOption ? void 0 : resourceDropdownOption.text);
                }), this.workspaceSettingsService.updateCurrentResource(this.resourceConnector.resourceType, {
                    azureTenantObjectId: null === (_a = this.selectedSubscription) || void 0 === _a ? void 0 : _a.azureTenantObjectId,
                    subscriptionId: null === (_b = this.selectedSubscription) || void 0 === _b ? void 0 : _b.subscriptionId,
                    resourceGroup: null === (_c = this.selectedResourceGroup) || void 0 === _c ? void 0 : _c.name,
                    resourceName: null === (_d = this.selectedResource) || void 0 === _d ? void 0 : _d.name
                });
            }, ResourceConnectorComponent.prototype.connectResource = function() {
                var _this = this;
                this.tenantResourceSelected ? this.workspaceSettingsService.connectTenantResource(this.resourceConnector.resourceType).then(function() {
                    _this.connectedResource = _this.workspaceSettingsService.getLinkedResource(_this.resourceConnector.resourceType), 
                    _this.tenantResourceSelected = !1;
                }) : this.workspaceSettingsService.connectAzureResource(this.resourceConnector.resourceType).then(function() {
                    _this.connectedResource = _this.workspaceSettingsService.getLinkedResource(_this.resourceConnector.resourceType);
                });
                var onResourceConnect = {
                    originatingService: "DataCloudUX",
                    activityName: "Connect ".concat(this.resourceConnector.resourceType),
                    featureName: "Fabric Workspace Settings"
                };
                this.telemetryService.logStandardFeatureEvent(onResourceConnect);
            }, ResourceConnectorComponent.prototype.cancelConnect = function() {
                this.workspaceSettingsService.updateCurrentResource(this.resourceConnector.resourceType, {}), 
                this.selectedSubscription = void 0, this.selectedSubscriptionDropdownOption = void 0, 
                this.selectedResourceGroup = void 0, this.selectedResourceGroupDropdownOption = void 0, 
                this.selectedResource = void 0, this.selectedResourceDropdownOption = void 0, this.resourceConnector.collapsed = !0;
            }, ResourceConnectorComponent.prototype.disconnectResource = function() {
                var _this = this;
                this.workspaceSettingsService.disconnectAzureResource(this.resourceConnector.resourceType, this.resourceConnector.disconnectionPromptMessage).then(function(disconnected) {
                    disconnected && (_this.connectedResource = void 0, _this.initializePickerOptions());
                });
            }, ResourceConnectorComponent.prototype.selectTenantResource = function() {
                this.tenantResourceSelected = !this.tenantResourceSelected;
            }, ResourceConnectorComponent.prototype.dismissServerError = function() {
                this.serverErrorDismissed$.next(!0);
            }, ResourceConnectorComponent.prototype.dismissFetchError = function() {
                this.fetchErrorDismissed$.next(!0);
            }, ResourceConnectorComponent.prototype.onSubscriptionsSeached = function(searchText) {
                this.subscriptionDropdownSearchText = searchText, this.createSubscriptionDropdownOptions();
            }, ResourceConnectorComponent.prototype.onResourceGroupsSeached = function(searchText) {
                this.resourceGroupDropdownSearchText = searchText, this.createResourceGroupDropdownOptions();
            }, ResourceConnectorComponent.prototype.onResourcesSeached = function(searchText) {
                this.resourceDropdownSearchText = searchText, this.createResourcesDropdownOptions();
            }, ResourceConnectorComponent.prototype.getDropdownOverlayOptions = function(optionCount) {
                return {
                    dropdownHeight: 30 * Math.max(Math.min(optionCount, 12), 1) + 34
                };
            }, ResourceConnectorComponent.prototype.getErrorMessageBarViewModel = function(message, type) {
                var _this = this;
                return {
                    bannerType: 1,
                    allowDismiss: !0,
                    iconName: "dismiss_circle_16_regular",
                    closeBarCallback: function() {
                        return "server" === type ? _this.dismissServerError() : _this.dismissFetchError();
                    },
                    message
                };
            }, ResourceConnectorComponent.prototype.initializePickerOptions = function() {
                var _this = this, currentResource = this.workspaceSettingsService.getCurrentResource(this.resourceConnector.resourceType);
                this.workspaceSettingsService.getAzureSubscriptions().then(function(subs) {
                    if (_this.allSubscriptions = (0, tslib_es6.__spreadArray)([], subs, !0), _this.createSubscriptionDropdownOptions(), 
                    null == currentResource ? void 0 : currentResource.subscriptionId) {
                        var matchingSubIndex = _this.allSubscriptions.findIndex(function(sub) {
                            return sub.subscriptionId === currentResource.subscriptionId;
                        });
                        if (matchingSubIndex >= 0) {
                            var matchingSub = _this.allSubscriptions[matchingSubIndex];
                            _this.selectedSubscriptionDropdownOption = _this.allSubscriptionDropdownOptions[matchingSubIndex], 
                            _this.selectedSubscription = matchingSub, currentResource.resourceGroup && (_this.selectedResourceGroup = {
                                name: currentResource.resourceGroup,
                                subscriptionId: matchingSub.subscriptionId
                            }), currentResource.resourceName && (_this.selectedResource = {
                                id: currentResource.resourceName,
                                name: currentResource.resourceName,
                                subscriptionId: matchingSub.subscriptionId,
                                resourceGroup: currentResource.resourceGroup
                            });
                        }
                    }
                }), (null == currentResource ? void 0 : currentResource.subscriptionId) && (this.workspaceSettingsService.getResourceGroupsWithResourceTypeForAzureSubscription(this.resourceConnector.resourceType, currentResource.subscriptionId).then(function(resourceGroups) {
                    var _a;
                    _this.allResourceGroups = (0, tslib_es6.__spreadArray)([], resourceGroups, !0), 
                    _this.createResourceGroupDropdownOptions(), currentResource.resourceGroup && (_this.selectedResourceGroupDropdownOption = null === (_a = _this.allResourceGroupsDropdownOptions) || void 0 === _a ? void 0 : _a.find(function(opt) {
                        return opt.text === currentResource.resourceGroup;
                    }));
                }), currentResource.resourceGroup && this.workspaceSettingsService.getAzureResources(this.resourceConnector.resourceType, currentResource.subscriptionId, currentResource.resourceGroup).then(function(resources) {
                    var _a;
                    _this.allResources = (0, tslib_es6.__spreadArray)([], resources, !0), _this.createResourcesDropdownOptions(), 
                    currentResource.resourceName && (_this.selectedResourceDropdownOption = null === (_a = _this.allResourcesDropdownOptions) || void 0 === _a ? void 0 : _a.find(function(opt) {
                        return opt.text === currentResource.resourceName;
                    }));
                }));
            }, ResourceConnectorComponent.prototype.createSubscriptionDropdownOptions = function() {
                var _this = this;
                this.allSubscriptionDropdownOptions = this.allSubscriptions.map(function(sub) {
                    return {
                        key: sub.subscriptionId,
                        text: sub.name
                    };
                }).filter(function(opt) {
                    var _a, _b, _c, _d;
                    return !_this.subscriptionDropdownSearchText || (null === (_b = null === (_a = opt.text) || void 0 === _a ? void 0 : _a.toLowerCase()) || void 0 === _b ? void 0 : _b.indexOf(_this.subscriptionDropdownSearchText.toLowerCase())) >= 0 || (null === (_d = null === (_c = opt.key) || void 0 === _c ? void 0 : _c.toLowerCase()) || void 0 === _d ? void 0 : _d.indexOf(_this.subscriptionDropdownSearchText.toLowerCase())) >= 0;
                });
            }, ResourceConnectorComponent.prototype.createResourceGroupDropdownOptions = function() {
                var _this = this;
                this.allResourceGroupsDropdownOptions = this.allResourceGroups.map(function(rg) {
                    return {
                        key: rg.name,
                        text: rg.name
                    };
                }).filter(function(opt) {
                    var _a, _b;
                    return !_this.resourceGroupDropdownSearchText || (null === (_b = null === (_a = opt.text) || void 0 === _a ? void 0 : _a.toLowerCase()) || void 0 === _b ? void 0 : _b.indexOf(_this.resourceGroupDropdownSearchText.toLowerCase())) >= 0;
                });
            }, ResourceConnectorComponent.prototype.createResourcesDropdownOptions = function() {
                var _this = this;
                this.allResourcesDropdownOptions = this.allResources.map(function(res) {
                    return {
                        key: res.name,
                        text: res.name
                    };
                }).filter(function(opt) {
                    var _a, _b;
                    return !_this.resourceDropdownSearchText || (null === (_b = null === (_a = opt.text) || void 0 === _a ? void 0 : _a.toLowerCase()) || void 0 === _b ? void 0 : _b.indexOf(_this.resourceDropdownSearchText.toLowerCase())) >= 0;
                });
            }, ResourceConnectorComponent.\u0275fac = function(t) {
                return new (t || ResourceConnectorComponent)(core["\u0275\u0275directiveInject"](tri_workspace_settings.X), core["\u0275\u0275directiveInject"](telemetry_service.t));
            }, ResourceConnectorComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: ResourceConnectorComponent,
                selectors: [ [ "tri-workspace-settings-azure-resource-connector" ] ],
                inputs: {
                    resourceConnector: "resourceConnector"
                },
                decls: 17,
                vars: 22,
                consts: [ [ 1, "azure-resource-connect-container", "tri-flex", "tri-flex-col" ], [ 1, "resource-header" ], [ 3, "viewModel", "hideMessageBar", 4, "ngIf" ], [ 1, "resource-description" ], [ "target", "_blank", "rel", "noopener noreferrer", 3, "href", "external" ], [ 4, "ngIf" ], [ 3, "viewModel", "hideMessageBar" ], [ 1, "tri-flex", "tri-items-center", "tri-justify-center" ], [ "class", "tri-flex tri-flex-row default-connection", 3, "is-disabled", 4, "ngIf" ], [ 1, "tri-flex", "tri-flex-row", "default-connection" ], [ 1, "default-connection-checkbox", 3, "id", "disabled", "label", "checked", "onChange" ], [ "for", "'default-connection-checkbox-' + resourceConnector.resourceType" ], [ 1, "config-not-allowed" ], [ 1, "tri-flex" ], [ "name", "error_circle_12_filled", 1, "config-not-allowed-icon" ], [ 1, "config-not-allowed-message" ], [ 1, "config-not-allowed-link" ], [ "target", "_blank", "rel", "noopener noreferrer", 3, "external", "href" ], [ 3, "headerText", "iconName", "iconSprite", "collapsed", "collapseContainer" ], [ 1, "resource-picker-field", "sub-picker", "tri-flex", "tri-flex-col" ], [ 1, "picker-label" ], [ "class", "tri-flex error-message-container", 4, "ngIf" ], [ 1, "resource-picker-field", "tri-flex", "tri-flex-col" ], [ 1, "azure-resource-footer-buttons", "tri-flex" ], [ "tri-button", "", "appearance", "primary", 3, "is-disabled", "disabled", "click", 4, "ngIf" ], [ "tri-button", "", 3, "is-disabled", "disabled", "click", 4, "ngIf" ], [ 1, "azure-resource-dropdown", 3, "compact", "options", "ngModel", "disabled", "ngModelChange", "valueChange" ], [ 1, "dropdown-content", 3, "triTooltip" ], [ 1, "resource-setting-dropdown-search", 3, "value" ], [ "class", "resource-setting-dropdown-item", 3, "value", 4, "ngFor", "ngForOf" ], [ 1, "resource-setting-dropdown-item", 3, "value" ], [ 1, "tri-flex", "error-message-container" ], [ "name", "error_circle_12_filled", 1, "error-message-icon" ], [ "class", "fetch-progress-spinner", 4, "ngIf" ], [ 1, "fetch-progress-spinner" ], [ "tri-button", "", "appearance", "primary", 3, "disabled", "click" ], [ "tri-button", "", 3, "disabled", "click" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementStart"](0, "div", 0)(1, "h3", 1), core["\u0275\u0275text"](2), 
                    core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](4, ResourceConnectorComponent_tri_message_bar_4_Template, 2, 3, "tri-message-bar", 2), 
                    core["\u0275\u0275pipe"](5, "async"), core["\u0275\u0275pipe"](6, "async"), core["\u0275\u0275elementStart"](7, "div", 3), 
                    core["\u0275\u0275text"](8), core["\u0275\u0275pipe"](9, "localize"), core["\u0275\u0275elementStart"](10, "tri-link", 4), 
                    core["\u0275\u0275text"](11), core["\u0275\u0275pipe"](12, "localize"), core["\u0275\u0275elementEnd"]()(), 
                    core["\u0275\u0275template"](13, ResourceConnectorComponent_ng_container_13_Template, 2, 0, "ng-container", 5), 
                    core["\u0275\u0275pipe"](14, "async"), core["\u0275\u0275template"](15, ResourceConnectorComponent_ng_container_15_Template, 4, 3, "ng-container", 5), 
                    core["\u0275\u0275pipe"](16, "async"), core["\u0275\u0275elementEnd"]()), 2 & rf && (core["\u0275\u0275advance"](2), 
                    core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](3, 8, ctx.resourceConnector.headerText)), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", !1 === core["\u0275\u0275pipeBind1"](5, 10, ctx.serverErrorDismissed$) && core["\u0275\u0275pipeBind1"](6, 12, ctx.serverError$)), 
                    core["\u0275\u0275advance"](4), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](9, 14, ctx.resourceConnector.headerSubText), " "), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("href", ctx.resourceConnector.learnMoreLink)("external", !0), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](12, 16, ctx.resourceConnector.headerLearnMoreText), " "), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", !0 !== core["\u0275\u0275pipeBind1"](14, 18, ctx.isInitialized$)), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](16, 20, ctx.isInitialized$)));
                },
                dependencies: [ common.NgForOf, common.NgIf, fesm2022_forms.JJ, fesm2022_forms.On, tri_svg_icon_component.M, tri_spinner_component.D, tri_message_bar_component.h, tri_checkbox_component.r, tri_tooltip_directive.Z, tri_dropdown_component.M3, tri_dropdown_item_component.l, tri_dropdown_item_menu_directive.q, tri_dropdown_component.ii, tri_search_box_component.U, TriCollapsedContainerComponent, tri_link_component.v, common.AsyncPipe, localize_pipe.Y ],
                styles: [ '[_nghost-%COMP%]{font-family:var(--fontFamilyBase);font-size:13px;line-height:18px}[_nghost-%COMP%]   .picker-label[_ngcontent-%COMP%]{font-weight:600;margin-bottom:8px}[_nghost-%COMP%]   .config-not-allowed[_ngcontent-%COMP%]{margin-top:24px}[_nghost-%COMP%]   .config-not-allowed[_ngcontent-%COMP%]   .config-not-allowed-icon[_ngcontent-%COMP%]{margin-right:10px;fill:var(--globalColorBurgundyTint10)}[_nghost-%COMP%]   .config-not-allowed[_ngcontent-%COMP%]   .config-not-allowed-link[_ngcontent-%COMP%]{margin-top:7px;margin-left:30px}[_nghost-%COMP%]   .azure-resource-connect-container[_ngcontent-%COMP%]{margin-top:16px}[_nghost-%COMP%]   .azure-resource-connect-container[_ngcontent-%COMP%]   .resource-header[_ngcontent-%COMP%]{font-size:var(--fontSizeBase300);line-height:var(--lineHeightBase300);font-weight:var(--fontWeightSemibold)}[_nghost-%COMP%]   .azure-resource-connect-container[_ngcontent-%COMP%]   .resource-description[_ngcontent-%COMP%], [_nghost-%COMP%]   .azure-resource-connect-container[_ngcontent-%COMP%]   .default-connection[_ngcontent-%COMP%]{margin-bottom:8px}[_nghost-%COMP%]   .azure-resource-connect-container[_ngcontent-%COMP%]   .default-connection.is-disabled[_ngcontent-%COMP%]{color:var(--globalColorBlackAlpha50)}[_nghost-%COMP%]   .azure-resource-connect-container[_ngcontent-%COMP%]   .default-connection[_ngcontent-%COMP%]   .default-connection-checkbox[_ngcontent-%COMP%]{margin:0 0 0 -3px}[_nghost-%COMP%]   .azure-resource-connect-container[_ngcontent-%COMP%]   .resource-picker-field[_ngcontent-%COMP%]{margin-bottom:24px}[_nghost-%COMP%]   .azure-resource-dropdown[_ngcontent-%COMP%]{min-width:180px;max-width:360px}[_nghost-%COMP%]   .azure-resource-select-field[_ngcontent-%COMP%]{font-size:14px;line-height:20px;font-family:var(--fontFamilyBase)}[_nghost-%COMP%]   .azure-resource-select-field[_ngcontent-%COMP%]  .mat-form-field-underline{display:none}[_nghost-%COMP%]   .azure-resource-select-field[_ngcontent-%COMP%]  .mat-form-field-wrapper{padding-bottom:0}[_nghost-%COMP%]   .azure-resource-select-field[_ngcontent-%COMP%]  .mat-form-field-infix{height:32px;width:360px;border:1px solid #d1d1d1;border-radius:4px;box-sizing:border-box;padding:6px 12px}[_nghost-%COMP%]   .azure-resource-select-field[_ngcontent-%COMP%]  .mat-form-field-infix .mat-form-field-label-wrapper{left:12px;width:calc(100% - 24px)}[_nghost-%COMP%]   .azure-resource-select-field[_ngcontent-%COMP%]  .mat-form-field-infix .mat-form-field-label-wrapper .mat-form-field-label{color:var(--colorNeutralForeground1)}[_nghost-%COMP%]   .azure-resource-select-field[_ngcontent-%COMP%]  .mat-form-field-infix .mat-select-arrow{border:none;height:24px;width:8px}[_nghost-%COMP%]   .azure-resource-select-field[_ngcontent-%COMP%]  .mat-form-field-infix .mat-select-arrow:before{font-family:TriFabricMDL2Icons;content:"\\e70d"}[_nghost-%COMP%]   .azure-resource-select-field.mat-form-field-can-float.mat-form-field-should-float[_ngcontent-%COMP%]  .mat-form-field-label{display:none}[_nghost-%COMP%]   .azure-resource-select-field.mat-form-field-disabled[_ngcontent-%COMP%]  .mat-form-field-infix{background-color:var(--colorNeutralBackground4)}[_nghost-%COMP%]   .azure-resource-select-field.mat-form-field-disabled[_ngcontent-%COMP%]  .mat-form-field-infix .mat-form-field-label-wrapper .mat-form-field-label{color:var(--colorNeutralForegroundDisabled)}[_nghost-%COMP%]   .fetch-progress-spinner[_ngcontent-%COMP%]{flex-grow:1;margin-left:16px}[_nghost-%COMP%]   .azure-resource-footer-buttons[_ngcontent-%COMP%] > button[_ngcontent-%COMP%]{margin-right:8px}  .resource-setting-dropdown-search,   .resource-setting-dropdown-item{font-family:var(--fontFamilyBase);font-size:13px;line-height:18px;width:100%}  .dropdown-content{text-overflow:ellipsis;overflow:hidden}  .resource-setting-dropdown-search{margin:5px 8px;width:calc(100% - 16px);height:24px}  .resource-setting-dropdown-search   tri-svg-icon{margin:2px 6px!important}  .tri-dropdown-trigger-container>span,   .popout-button{width:100%}  .resource-picker-field   .popout-button{width:100%}  .box-header{height:unset!important;padding-bottom:12px;min-height:20px!important}  .is-collapsed .box-header{padding-bottom:0}' ],
                changeDetection: 0
            }), ResourceConnectorComponent;
        }();
        function WorkspaceSettingsAzureComponent_ng_container_0_ng_container_1_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275element"](1, "div", 3), 
            core["\u0275\u0275elementContainerEnd"]());
        }
        function WorkspaceSettingsAzureComponent_ng_container_0_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, WorkspaceSettingsAzureComponent_ng_container_0_ng_container_1_Template, 2, 0, "ng-container", 1), 
            core["\u0275\u0275element"](2, "tri-workspace-settings-azure-resource-connector", 2), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var resourceConnector_r1 = ctx.$implicit, index_r2 = ctx.index;
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", index_r2 > 0), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("resourceConnector", resourceConnector_r1);
            }
        }
        var WorkspaceSettingsAzureComponent = function() {
            function WorkspaceSettingsAzureComponent(workspaceSettingsService) {
                var _a, _this = this;
                this.workspaceSettingsService = workspaceSettingsService, this.resourceConnectors = ((_a = {})[AzureConnectionResourceType.AdlsStorage] = {
                    resourceType: AzureConnectionResourceType.AdlsStorage,
                    headerSubText: "BYOResources_Workspace_AdlsStorage_Description",
                    headerText: "Trident_Workspace_Settings_ADLS_header",
                    headerLearnMoreText: "Trident_Workspace_Settings_Learn_More_ADLS",
                    resourceLabel: "Trident_Workspace_Settings_Storage_Account",
                    resourcePickerPlaceholder: "Trident_Workspace_Settings_Select_Storage",
                    collapsibeSectionHeader: "AdminPortal_BYOTenantStorage_Description",
                    icon: {
                        name: "plug_connected_20_regular"
                    },
                    forPremiumOnly: !1,
                    canSelectTenantResource: !0,
                    learnMoreLink: "https://go.microsoft.com/fwlink/?linkid=2128745",
                    featureFlagToAllowResource: "storageAccountAttachForWorkspaceAdminsEnabled",
                    notAllowedWarningMessage: "Warning_BYOSA_Workspace_Not_Enabled",
                    notAllowedLearnMoreLink: "https://go.microsoft.com/fwlink/?linkid=2128134",
                    noSubscriptionsMessage: "Error_No_Azure_Subscriptions_Access",
                    noSubscriptionLearnMoreLink: "https://go.microsoft.com/fwlink/?linkid=2128263",
                    noResourceGroupMessage: "Error_No_Storage_Account_Access",
                    noResourceGroupLearnMoreLink: "https://go.microsoft.com/fwlink/?linkid=2128132",
                    disconnectionPromptMessage: "AdminPortal_DatapoolSettings_DialogWarningNote1"
                }, _a[AzureConnectionResourceType.LogAnalytics] = {
                    resourceType: AzureConnectionResourceType.LogAnalytics,
                    headerSubText: "BYOResources_Workspace_LogAnalytics_Description",
                    headerText: "Trident_Workspace_Settings_Log_Analytics_Header",
                    headerLearnMoreText: "Trident_Workspace_Settings_Learn_More_Log_Analytics",
                    resourceLabel: "BYOResources_Connect_LogAnalytics",
                    resourcePickerPlaceholder: "Trident_Workspace_Settings_Select_Log_Analytics",
                    collapsibeSectionHeader: "Trident_Workspace_Settings_Configure_Log_Analytics",
                    icon: {
                        name: "plug_connected_20_regular"
                    },
                    learnMoreLink: "https://go.microsoft.com/fwlink/?linkid=2128746",
                    forPremiumOnly: !0,
                    canSelectTenantResource: !1,
                    featureFlagToAllowResource: "logAnalyticsAttachForWorkspaceAdminsEnabled",
                    notAllowedWarningMessage: "Warning_BYOLA_Workspace_Not_Enabled",
                    notAllowedLearnMoreLink: "https://go.microsoft.com/fwlink/?linkid=2128744",
                    noSubscriptionsMessage: "Error_No_Azure_Subscriptions_Access",
                    noSubscriptionLearnMoreLink: "https://go.microsoft.com/fwlink/?linkid=2128742",
                    noResourceGroupMessage: "Error_No_Log_Analytics_Workspace_Access",
                    noResourceGroupLearnMoreLink: "https://go.microsoft.com/fwlink/?linkid=2128743",
                    disconnectionPromptMessage: "BYOResources_Workspace_Disconnect_LogAnalytics_Description"
                }, _a), this.resourceConnectorArray$ = new BehaviorSubject.X([]), this.initializedSubscription = void 0, 
                this.initializedSubscription = this.workspaceSettingsService.azureConnectionsInitialized$.subscribe(function(value) {
                    if (value) {
                        var isWorkspacePremium_1 = _this.workspaceSettingsService.isPremium;
                        _this.resourceConnectorArray$.next(Object.values(_this.resourceConnectors).filter(function(r) {
                            return !r.forPremiumOnly || isWorkspacePremium_1;
                        }));
                    }
                });
            }
            return WorkspaceSettingsAzureComponent.prototype.ngOnDestroy = function() {
                var _a;
                null === (_a = this.initializedSubscription) || void 0 === _a || _a.unsubscribe();
            }, WorkspaceSettingsAzureComponent.\u0275fac = function(t) {
                return new (t || WorkspaceSettingsAzureComponent)(core["\u0275\u0275directiveInject"](tri_workspace_settings.X));
            }, WorkspaceSettingsAzureComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: WorkspaceSettingsAzureComponent,
                selectors: [ [ "tri-workspace-settings-azure-connections" ] ],
                decls: 2,
                vars: 3,
                consts: [ [ 4, "ngFor", "ngForOf" ], [ 4, "ngIf" ], [ 3, "resourceConnector" ], [ 1, "resource-picker-section-seperator" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275template"](0, WorkspaceSettingsAzureComponent_ng_container_0_Template, 3, 2, "ng-container", 0), 
                    core["\u0275\u0275pipe"](1, "async")), 2 & rf && core["\u0275\u0275property"]("ngForOf", core["\u0275\u0275pipeBind1"](1, 1, ctx.resourceConnectorArray$));
                },
                dependencies: [ common.NgForOf, common.NgIf, ResourceConnectorComponent, common.AsyncPipe ],
                styles: [ "[_nghost-%COMP%]   .resource-picker-section-seperator[_ngcontent-%COMP%]{margin-top:16px;border-top:1px solid #edebe9}" ],
                changeDetection: 0
            }), WorkspaceSettingsAzureComponent;
        }();
        function WorkspaceSettingsOtherComponent_tri_message_bar_0_Template(rf, ctx) {
            if (1 & rf) {
                var _r5 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "tri-message-bar", 6), core["\u0275\u0275listener"]("hideMessageBar", function() {
                    core["\u0275\u0275restoreView"](_r5);
                    var ctx_r4 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r4.dismissError());
                }), core["\u0275\u0275pipe"](1, "async"), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var tmp_0_0, ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("viewModel", ctx_r0.getErrorMessageBarViewModel(null !== (tmp_0_0 = core["\u0275\u0275pipeBind1"](1, 1, ctx_r0.deleteWorkspaceErrorMessage$)) && void 0 !== tmp_0_0 ? tmp_0_0 : ""));
            }
        }
        function WorkspaceSettingsOtherComponent_div_3_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementStart"](0, "div", 7), core["\u0275\u0275element"](1, "tri-svg-icon", 8), 
            core["\u0275\u0275elementStart"](2, "div", 9), core["\u0275\u0275text"](3), core["\u0275\u0275pipe"](4, "localize"), 
            core["\u0275\u0275elementEnd"]()()), 2 & rf && (core["\u0275\u0275advance"](3), 
            core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](4, 1, "Trident_Workspace_Settings_Delete_Workspace_Banner")));
        }
        function WorkspaceSettingsOtherComponent_div_4_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 10)(1, "div", 11), core["\u0275\u0275text"](2), 
            core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](4, "div", 12), 
            core["\u0275\u0275text"](5), core["\u0275\u0275elementEnd"]()()), 2 & rf) {
                var ctx_r2 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](3, 2, "Trident_Workspace_Settings_Delete_Workspace_Title")), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"]("", ctx_r2.getDeleteWorkspaceRetentionPolicyText(), " ");
            }
        }
        function WorkspaceSettingsOtherComponent_tri_spinner_8_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "tri-spinner");
        }
        var WorkspaceSettingsOtherComponent = function() {
            function WorkspaceSettingsOtherComponent(workspaceSettingsService, triLocalizationService, telemetryService) {
                var _this = this;
                this.workspaceSettingsService = workspaceSettingsService, this.triLocalizationService = triLocalizationService, 
                this.telemetryService = telemetryService, this.disableDelete = !0, this.deleteWorkspaceInProgress$ = this.workspaceSettingsService.deleteWorkspaceInProgress$, 
                this.deleteWorkspaceErrorMessage$ = this.workspaceSettingsService.deleteWorkspaceErrorMessage$, 
                this.errorDismissed$ = new BehaviorSubject.X(!1), this.closeSettings = new core.EventEmitter, 
                this.workspaceSettingsService.initialized$.subscribe(function(initialized) {
                    initialized && (_this.disableDelete = !_this.workspaceSettingsService.canDeleteWorkspace);
                });
            }
            return WorkspaceSettingsOtherComponent.prototype.onDeleteClick = function() {
                var _this = this;
                this.workspaceSettingsService.deleteWorkspace().then(function(deleted) {
                    var _a;
                    deleted && (null === (_a = _this.closeSettings) || void 0 === _a || _a.emit());
                }), this.telemetryService.logStandardFeatureEvent({
                    originatingService: "DataCloudUX",
                    activityName: "delete workspace",
                    featureName: "Fabric Workspace Settings",
                    activityAttributes: {
                        selectedTab: "Other"
                    }
                }), this.telemetryService.logEvent({
                    name: "Delete workspace",
                    workspaceObjectId: this.workspaceSettingsService.workspaceObjectId,
                    properties: {
                        featureName: "Fabric Workspace Settings"
                    }
                });
            }, WorkspaceSettingsOtherComponent.prototype.dismissError = function() {
                this.errorDismissed$.next(!0);
            }, Object.defineProperty(WorkspaceSettingsOtherComponent.prototype, "workspaceRecoveryEnabled", {
                get: function() {
                    return this.workspaceSettingsService.workspaceRecoveryEnabled;
                },
                enumerable: !1,
                configurable: !0
            }), WorkspaceSettingsOtherComponent.prototype.getDeleteWorkspaceRetentionPolicyText = function() {
                return this.triLocalizationService.format("Trident_Workspace_Settings_Delete_Workspace_Configurable", this.workspaceSettingsService.retentionPeriodDays);
            }, WorkspaceSettingsOtherComponent.prototype.getErrorMessageBarViewModel = function(message) {
                var _this = this;
                return {
                    bannerType: 1,
                    allowDismiss: !0,
                    iconName: "dismiss_circle_16_regular",
                    closeBarCallback: function() {
                        return _this.dismissError();
                    },
                    message
                };
            }, WorkspaceSettingsOtherComponent.\u0275fac = function(t) {
                return new (t || WorkspaceSettingsOtherComponent)(core["\u0275\u0275directiveInject"](tri_workspace_settings.X), core["\u0275\u0275directiveInject"](localization_service.z), core["\u0275\u0275directiveInject"](telemetry_service.t));
            }, WorkspaceSettingsOtherComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: WorkspaceSettingsOtherComponent,
                selectors: [ [ "tri-workspace-settings-other" ] ],
                outputs: {
                    closeSettings: "closeSettings"
                },
                decls: 13,
                vars: 20,
                consts: [ [ 3, "viewModel", "hideMessageBar", 4, "ngIf" ], [ "class", "delete-workspace-message tri-flex", 4, "ngIf" ], [ "class", "delete-workspace-message-new", 4, "ngIf" ], [ "tri-button", "", "appearance", "primary", "data-testid", "delete-workspace-btn", 1, "delete-workspace-button", 3, "disabled", "click" ], [ 4, "ngIf" ], [ "name", "delete_20_regular" ], [ 3, "viewModel", "hideMessageBar" ], [ 1, "delete-workspace-message", "tri-flex" ], [ "name", "info_20_regular", 1, "banner-icon", "tri-shrink-0" ], [ 1, "banner-text" ], [ 1, "delete-workspace-message-new" ], [ 1, "delete-workspace-new-header" ], [ 1, "delete-workspace-new-body" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275template"](0, WorkspaceSettingsOtherComponent_tri_message_bar_0_Template, 2, 3, "tri-message-bar", 0), 
                    core["\u0275\u0275pipe"](1, "async"), core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275template"](3, WorkspaceSettingsOtherComponent_div_3_Template, 5, 3, "div", 1), 
                    core["\u0275\u0275template"](4, WorkspaceSettingsOtherComponent_div_4_Template, 6, 4, "div", 2), 
                    core["\u0275\u0275elementStart"](5, "button", 3), core["\u0275\u0275listener"]("click", function() {
                        return ctx.onDeleteClick();
                    }), core["\u0275\u0275pipe"](6, "async"), core["\u0275\u0275pipe"](7, "async"), 
                    core["\u0275\u0275template"](8, WorkspaceSettingsOtherComponent_tri_spinner_8_Template, 1, 0, "tri-spinner", 4), 
                    core["\u0275\u0275pipe"](9, "async"), core["\u0275\u0275element"](10, "tri-svg-icon", 5), 
                    core["\u0275\u0275text"](11), core["\u0275\u0275pipe"](12, "localize"), core["\u0275\u0275elementEnd"]()), 
                    2 & rf && (core["\u0275\u0275property"]("ngIf", !1 === core["\u0275\u0275pipeBind1"](1, 8, ctx.errorDismissed$) && core["\u0275\u0275pipeBind1"](2, 10, ctx.deleteWorkspaceErrorMessage$)), 
                    core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngIf", !ctx.workspaceRecoveryEnabled), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx.workspaceRecoveryEnabled), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275classProp"]("is-disabled", core["\u0275\u0275pipeBind1"](6, 12, ctx.deleteWorkspaceInProgress$)), 
                    core["\u0275\u0275property"]("disabled", core["\u0275\u0275pipeBind1"](7, 14, ctx.deleteWorkspaceInProgress$)), 
                    core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](9, 16, ctx.deleteWorkspaceInProgress$)), 
                    core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](12, 18, "Trident_Workspace_Settings_Delete_This_Workspace"), "\n"));
                },
                dependencies: [ common.NgIf, tri_svg_icon_component.M, tri_spinner_component.D, tri_message_bar_component.h, common.AsyncPipe, localize_pipe.Y ],
                styles: [ "[_nghost-%COMP%]   .delete-workspace-button[_ngcontent-%COMP%]{margin-top:16px}[_nghost-%COMP%]   .delete-workspace-message[_ngcontent-%COMP%]{font-size:12px;background-color:var(--colorNeutralBackground4);padding:6px 10px;box-sizing:border-box}[_nghost-%COMP%]   .delete-workspace-message[_ngcontent-%COMP%]   .banner-icon[_ngcontent-%COMP%]{height:16px;width:16px;margin-bottom:2px;margin-inline-end:8px}[_nghost-%COMP%]   .delete-workspace-message[_ngcontent-%COMP%]   .banner-text[_ngcontent-%COMP%]{line-height:16px}[_nghost-%COMP%]   .delete-workspace-message-new[_ngcontent-%COMP%]   .delete-workspace-new-header[_ngcontent-%COMP%]{font-weight:600;margin-bottom:10px;font-size:16px}[_nghost-%COMP%]   .delete-workspace-message-new[_ngcontent-%COMP%]   .delete-workspace-new-body[_ngcontent-%COMP%]{font-size:14px}" ],
                changeDetection: 0
            }), WorkspaceSettingsOtherComponent;
        }();
        function UniversalWorkspaceSettingsComponent_tri_workspace_settings_general_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r12 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "tri-workspace-settings-general", 7), core["\u0275\u0275listener"]("closeSettings", function() {
                    core["\u0275\u0275restoreView"](_r12);
                    var ctx_r11 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r11.onCloseSettings());
                }), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("userPicker", ctx_r0.userPicker), core["\u0275\u0275attribute"]("data-testid", "workspace-settings-general");
            }
        }
        function UniversalWorkspaceSettingsComponent_tri_workspace_settings_about_2_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "tri-workspace-settings-about", 8), 
            2 & rf) {
                var ctx_r1 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("userPicker", ctx_r1.userPicker), core["\u0275\u0275attribute"]("data-testid", "workspace-settings-about");
            }
        }
        function UniversalWorkspaceSettingsComponent_ng_container_3_tri_workspace_settings_premium_v2_1_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "tri-workspace-settings-premium-v2", 10);
        }
        function UniversalWorkspaceSettingsComponent_ng_container_3_tri_workspace_settings_premium_3_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "tri-workspace-settings-premium", 10);
        }
        function UniversalWorkspaceSettingsComponent_ng_container_3_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, UniversalWorkspaceSettingsComponent_ng_container_3_tri_workspace_settings_premium_v2_1_Template, 1, 0, "tri-workspace-settings-premium-v2", 9), 
            core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275template"](3, UniversalWorkspaceSettingsComponent_ng_container_3_tri_workspace_settings_premium_3_Template, 1, 0, "tri-workspace-settings-premium", 9), 
            core["\u0275\u0275pipe"](4, "async"), core["\u0275\u0275elementContainerEnd"]()), 
            2 & rf) {
                var ctx_r2 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](2, 2, ctx_r2.workspaceSettingsV3$)), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", !1 === core["\u0275\u0275pipeBind1"](4, 4, ctx_r2.workspaceSettingsV3$));
            }
        }
        function UniversalWorkspaceSettingsComponent_ng_container_4_tri_workspace_settings_azure_connections_v2_1_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "tri-workspace-settings-azure-connections-v2", 10);
        }
        function UniversalWorkspaceSettingsComponent_ng_container_4_ng_template_3_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "tri-workspace-settings-azure-connections", 10);
        }
        function UniversalWorkspaceSettingsComponent_ng_container_4_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, UniversalWorkspaceSettingsComponent_ng_container_4_tri_workspace_settings_azure_connections_v2_1_Template, 1, 0, "tri-workspace-settings-azure-connections-v2", 11), 
            core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275template"](3, UniversalWorkspaceSettingsComponent_ng_container_4_ng_template_3_Template, 1, 0, "ng-template", null, 12, core["\u0275\u0275templateRefExtractor"]), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var _r16 = core["\u0275\u0275reference"](4), ctx_r3 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](2, 2, ctx_r3.workspaceSettingsV3$))("ngIfElse", _r16);
            }
        }
        function UniversalWorkspaceSettingsComponent_tri_workspace_settings_storage_systems_5_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "tri-workspace-settings-storage-systems", 10);
        }
        function UniversalWorkspaceSettingsComponent_tri_workspace_settings_git_integration_6_Template(rf, ctx) {
            if (1 & rf) {
                var _r19 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "tri-workspace-settings-git-integration", 13), 
                core["\u0275\u0275listener"]("closeWorkspaceSettingsFromTab", function() {
                    core["\u0275\u0275restoreView"](_r19);
                    var ctx_r18 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r18.onCloseSettings());
                }), core["\u0275\u0275elementEnd"]();
            }
        }
        function UniversalWorkspaceSettingsComponent_tri_workspace_settings_onelake_7_Template(rf, ctx) {
            if (1 & rf) {
                var _r21 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "tri-workspace-settings-onelake", 14), core["\u0275\u0275listener"]("closeSettings", function() {
                    core["\u0275\u0275restoreView"](_r21);
                    var ctx_r20 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r20.onCloseSettings());
                }), core["\u0275\u0275elementEnd"]();
            }
        }
        function UniversalWorkspaceSettingsComponent_tri_workspace_settings_workspace_identity_8_Template(rf, ctx) {
            if (1 & rf) {
                var _r23 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "tri-workspace-settings-workspace-identity", 14), 
                core["\u0275\u0275listener"]("closeSettings", function() {
                    core["\u0275\u0275restoreView"](_r23);
                    var ctx_r22 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r22.onCloseSettings());
                }), core["\u0275\u0275elementEnd"]();
            }
        }
        function UniversalWorkspaceSettingsComponent_tri_workspace_settings_network_9_Template(rf, ctx) {
            if (1 & rf) {
                var _r25 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "tri-workspace-settings-network", 14), core["\u0275\u0275listener"]("closeSettings", function() {
                    core["\u0275\u0275restoreView"](_r25);
                    var ctx_r24 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r24.onCloseSettings());
                }), core["\u0275\u0275elementEnd"]();
            }
        }
        function UniversalWorkspaceSettingsComponent_tri_workspace_settings_platform_monitoring_10_Template(rf, ctx) {
            if (1 & rf) {
                var _r27 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "tri-workspace-settings-platform-monitoring", 14), 
                core["\u0275\u0275listener"]("closeSettings", function() {
                    core["\u0275\u0275restoreView"](_r27);
                    var ctx_r26 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r26.onCloseSettings());
                }), core["\u0275\u0275elementEnd"]();
            }
        }
        function UniversalWorkspaceSettingsComponent_tri_workspace_settings_other_11_Template(rf, ctx) {
            if (1 & rf) {
                var _r29 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "tri-workspace-settings-other", 14), core["\u0275\u0275listener"]("closeSettings", function() {
                    core["\u0275\u0275restoreView"](_r29);
                    var ctx_r28 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r28.onCloseSettings());
                }), core["\u0275\u0275elementEnd"]();
            }
        }
        var UniversalWorkspaceSettingsComponent = function() {
            function UniversalWorkspaceSettingsComponent(isTrident, featureSwitchService) {
                var _this = this;
                this.isTrident = isTrident, this.featureSwitchService = featureSwitchService, this.selectedGroup = "about", 
                this.closeSettings = new core.EventEmitter, this.workspaceSettingsV3$ = this.featureSwitchService.featureSwitches$.pipe((0, 
                skipWhile.n)(function(switches) {
                    return !switches;
                }), (0, take.q)(1), (0, map.U)(function(switches) {
                    return _this.isTrident && !!switches.workspaceSettingsV3;
                }));
            }
            return UniversalWorkspaceSettingsComponent.prototype.onCloseSettings = function() {
                this.closeSettings.emit();
            }, UniversalWorkspaceSettingsComponent.\u0275fac = function(t) {
                return new (t || UniversalWorkspaceSettingsComponent)(core["\u0275\u0275directiveInject"](trident_env.Y), core["\u0275\u0275directiveInject"](feature_switch_service.V$));
            }, UniversalWorkspaceSettingsComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: UniversalWorkspaceSettingsComponent,
                selectors: [ [ "tri-universal-workspace-settings" ] ],
                inputs: {
                    userPicker: "userPicker",
                    selectedGroup: "selectedGroup"
                },
                outputs: {
                    closeSettings: "closeSettings"
                },
                decls: 12,
                vars: 12,
                consts: [ [ 3, "ngSwitch" ], [ 3, "userPicker", "closeSettings", 4, "ngSwitchCase" ], [ "class", "full-setting universal-settings-page", 3, "userPicker", 4, "ngSwitchCase" ], [ 4, "ngSwitchCase" ], [ "class", "full-setting universal-settings-page", 4, "ngSwitchCase" ], [ "class", "full-setting universal-settings-page", 3, "closeWorkspaceSettingsFromTab", 4, "ngSwitchCase" ], [ "class", "full-setting universal-settings-page", 3, "closeSettings", 4, "ngSwitchCase" ], [ 3, "userPicker", "closeSettings" ], [ 1, "full-setting", "universal-settings-page", 3, "userPicker" ], [ "class", "full-setting universal-settings-page", 4, "ngIf" ], [ 1, "full-setting", "universal-settings-page" ], [ "class", "full-setting universal-settings-page", 4, "ngIf", "ngIfElse" ], [ "oldAzureConnections", "" ], [ 1, "full-setting", "universal-settings-page", 3, "closeWorkspaceSettingsFromTab" ], [ 1, "full-setting", "universal-settings-page", 3, "closeSettings" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementContainerStart"](0, 0), core["\u0275\u0275template"](1, UniversalWorkspaceSettingsComponent_tri_workspace_settings_general_1_Template, 1, 2, "tri-workspace-settings-general", 1), 
                    core["\u0275\u0275template"](2, UniversalWorkspaceSettingsComponent_tri_workspace_settings_about_2_Template, 1, 2, "tri-workspace-settings-about", 2), 
                    core["\u0275\u0275template"](3, UniversalWorkspaceSettingsComponent_ng_container_3_Template, 5, 6, "ng-container", 3), 
                    core["\u0275\u0275template"](4, UniversalWorkspaceSettingsComponent_ng_container_4_Template, 5, 4, "ng-container", 3), 
                    core["\u0275\u0275template"](5, UniversalWorkspaceSettingsComponent_tri_workspace_settings_storage_systems_5_Template, 1, 0, "tri-workspace-settings-storage-systems", 4), 
                    core["\u0275\u0275template"](6, UniversalWorkspaceSettingsComponent_tri_workspace_settings_git_integration_6_Template, 1, 0, "tri-workspace-settings-git-integration", 5), 
                    core["\u0275\u0275template"](7, UniversalWorkspaceSettingsComponent_tri_workspace_settings_onelake_7_Template, 1, 0, "tri-workspace-settings-onelake", 6), 
                    core["\u0275\u0275template"](8, UniversalWorkspaceSettingsComponent_tri_workspace_settings_workspace_identity_8_Template, 1, 0, "tri-workspace-settings-workspace-identity", 6), 
                    core["\u0275\u0275template"](9, UniversalWorkspaceSettingsComponent_tri_workspace_settings_network_9_Template, 1, 0, "tri-workspace-settings-network", 6), 
                    core["\u0275\u0275template"](10, UniversalWorkspaceSettingsComponent_tri_workspace_settings_platform_monitoring_10_Template, 1, 0, "tri-workspace-settings-platform-monitoring", 6), 
                    core["\u0275\u0275template"](11, UniversalWorkspaceSettingsComponent_tri_workspace_settings_other_11_Template, 1, 0, "tri-workspace-settings-other", 6), 
                    core["\u0275\u0275elementContainerEnd"]()), 2 & rf && (core["\u0275\u0275property"]("ngSwitch", ctx.selectedGroup), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", "general"), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", "about"), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", "premium"), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", "azureConnections"), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", "storageSystems"), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", "gitIntegration"), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", "oneLake"), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", "workspaceIdentity"), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", "network"), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", "platformMonitoring"), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", "other"));
                },
                dependencies: [ common.NgIf, common.NgSwitch, common.NgSwitchCase, WorkspaceSettingsGeneralComponent, WorkspaceSettingsAzureConnectionsComponent, WorkspaceSettingsPremiumComponent, WorkspaceSettingsPlatformMonitoringComponent, WorkspaceSettingsAboutComponent, workspace_settings_premium_component_WorkspaceSettingsPremiumComponent, WorkspaceSettingsStorageSystemsComponent, WorkspaceSettingsGitIntegrationComponent, WorkspaceSettingsOneLakeComponent, WorkspaceSettingsWorkspaceIdentityComponent, WorkspaceSettingsNetworkComponent, WorkspaceSettingsAzureComponent, WorkspaceSettingsOtherComponent, common.AsyncPipe ],
                styles: [ '[_nghost-%COMP%]{width:100%;max-width:580px}  a{color:var(--colorBrandForegroundLink)}  a:hover,   a:focus{text-decoration:underline}  a:active{color:var(--colorBrandForegroundLinkPressed)}  .workspace-settings-popup-dialog-container{background-color:var(--colorNeutralBackgroundOverlay)}  .workspace-settings-popup-dialog-container .workspace-settings-popup-dialog{width:560px}  .workspace-settings-popup-dialog-container .workspace-settings-popup-dialog .infonav-dialogContent{min-height:48px}  .workspace-settings-popup-dialog-container .workspace-settings-popup-dialog .infonav-dialogCloseIcon{display:none!important}  .workspace-settings-popup-dialog-container .workspace-settings-popup-dialog .infonav-dialogActions{margin-top:21px}  .workspace-settings-popup-dialog-container .workspace-settings-popup-dialog .infonav-dialogActions input[type=button]{background-color:var(--colorNeutralBackground1);border-radius:var(--borderRadiusMedium);border:1px solid var(--colorNeutralStroke1);color:var(--colorNeutralForeground1);fill:var(--colorNeutralForeground1);font-weight:var(--fontWeightSemibold);gap:6px;height:32px;padding:0 12px}  .workspace-settings-popup-dialog-container .workspace-settings-popup-dialog .infonav-dialogActions input[type=button]:active{background-color:var(--colorNeutralBackground1Pressed);border-color:var(--colorNeutralStroke1Pressed)}  .workspace-settings-popup-dialog-container .workspace-settings-popup-dialog .infonav-dialogActions input[type=button]:hover{background-color:var(--colorNeutralBackground1Hover);border-color:var(--colorNeutralStroke1Hover)}  .workspace-settings-popup-dialog-container .workspace-settings-popup-dialog .infonav-dialogActions input[type=button].primary{background-color:var(--colorBrandBackground);border:none;color:var(--colorNeutralBackground1);fill:var(--colorNeutralBackground1);position:relative}  .workspace-settings-popup-dialog-container .workspace-settings-popup-dialog .infonav-dialogActions input[type=button].primary:focus:after{border-radius:var(--borderRadiusSmall);border:1px solid var(--colorNeutralStrokeOnBrand);content:"";display:block;height:calc(100% - 6px);position:absolute;width:calc(100% - 6px)}  .workspace-settings-popup-dialog-container .workspace-settings-popup-dialog .infonav-dialogActions input[type=button].primary:active{background-color:var(--colorBrandBackgroundSelected)}  .workspace-settings-popup-dialog-container .workspace-settings-popup-dialog .infonav-dialogActions input[type=button].primary:active:focus:after{border:none}  .workspace-settings-popup-dialog-container .workspace-settings-popup-dialog .infonav-dialogActions input[type=button].primary:hover{background-color:var(--colorBrandBackgroundHover)}@media screen and (max-width: 544px){  .workspace-settings-popup-dialog-container .workspace-settings-popup-dialog{width:250px}  .workspace-settings-popup-dialog-container .workspace-settings-popup-dialog .infonav-dialogActions{margin-top:10px}  .workspace-settings-popup-dialog-container .workspace-settings-popup-dialog .infonav-modalContainer .infonav-dialogTitle{margin-right:0}}  .error-message-container{color:var(--colorPaletteRedForeground1);font-size:12px}  .error-message-container .error-message-icon{fill:var(--colorPaletteRedForeground1);height:12px;width:12px;margin-top:4px;margin-right:5px;flex-shrink:0}  .error-message-banner-container{padding:8px 12px;box-sizing:border-box;font-size:12px;background-color:var(--colorPaletteRedTintBackground1);color:var(--colorPaletteRedForeground1)}  .error-message-banner-container .error-message-banner-icon{margin-right:8px;fill:var(--colorPaletteRedForeground1);height:16px;width:16px}  .error-message-banner-container>div{line-height:16px}  .error-message-banner-container .error-message-banner-dismiss{height:16px;width:16px;display:flex}  .error-message-banner-container .error-message-banner-dismiss tri-svg-icon{height:16px;width:16px}  .universal-settings-page [tri-button]:focus-visible{border:2px solid var(--colorNeutralStrokeFocus2);outline:none;padding:0 11px}  .universal-settings-page [tri-button]:focus-visible[appearance=primary]{padding:0 10px}  .universal-settings-page [tri-button][appearance=subtle].is-disabled :hover{background-color:var(--colorTransparentStrokeDisabled)}  .universal-settings-page [tri-button][appearance=subtle][size=small]:hover{background-color:var(--colorSubtleBackgroundHover)}  .universal-settings-page [tri-button][appearance=subtle][size=small]:active{background-color:var(--colorSubtleBackgroundPressed)}  .universal-settings-page [tri-button].is-disabled{border:none}  .universal-settings-page [tri-button].is-disabled:hover{color:var(--colorNeutralForegroundDisabled)}' ]
            }), UniversalWorkspaceSettingsComponent;
        }();
        function PowerBIWorkspaceSettingsGeneralComponent_tri_spinner_20_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "tri-spinner", 18);
        }
        function PowerBIWorkspaceSettingsGeneralComponent_ng_container_44_tri_spinner_24_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "tri-spinner", 18);
        }
        function PowerBIWorkspaceSettingsGeneralComponent_ng_container_44_ng_container_26_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "div", 22), 
            core["\u0275\u0275element"](2, "tri-svg-icon", 23), core["\u0275\u0275elementStart"](3, "span", 24), 
            core["\u0275\u0275text"](4), core["\u0275\u0275pipe"](5, "localize"), core["\u0275\u0275elementStart"](6, "tri-link", 19), 
            core["\u0275\u0275text"](7), core["\u0275\u0275pipe"](8, "localize"), core["\u0275\u0275elementEnd"]()()(), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf && (core["\u0275\u0275advance"](4), 
            core["\u0275\u0275textInterpolate1"]("", core["\u0275\u0275pipeBind1"](5, 3, "Settings_DataModelEditing_InfoMessage"), " "), 
            core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("external", !0), core["\u0275\u0275advance"](1), 
            core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](8, 5, "LearnMore"), " "));
        }
        function PowerBIWorkspaceSettingsGeneralComponent_ng_container_44_Template(rf, ctx) {
            if (1 & rf) {
                var _r5 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "div", 0)(2, "div", 1), 
                core["\u0275\u0275element"](3, "div", 2), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](4, "h2", 3), 
                core["\u0275\u0275text"](5), core["\u0275\u0275pipe"](6, "localize"), core["\u0275\u0275elementEnd"](), 
                core["\u0275\u0275elementStart"](7, "div", 4), core["\u0275\u0275element"](8, "div", 2), 
                core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementStart"](9, "h3", 5), 
                core["\u0275\u0275text"](10), core["\u0275\u0275pipe"](11, "localize"), core["\u0275\u0275elementEnd"](), 
                core["\u0275\u0275elementStart"](12, "div", 12), core["\u0275\u0275text"](13), core["\u0275\u0275pipe"](14, "localize"), 
                core["\u0275\u0275elementStart"](15, "tri-link", 19), core["\u0275\u0275text"](16), 
                core["\u0275\u0275pipe"](17, "localize"), core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementStart"](18, "div", 7)(19, "input", 20), 
                core["\u0275\u0275listener"]("change", function() {
                    core["\u0275\u0275restoreView"](_r5);
                    var ctx_r4 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r4.onAllowWebModelingChanged());
                }), core["\u0275\u0275pipe"](20, "async"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](21, "label", 21), 
                core["\u0275\u0275text"](22), core["\u0275\u0275pipe"](23, "localize"), core["\u0275\u0275elementEnd"](), 
                core["\u0275\u0275template"](24, PowerBIWorkspaceSettingsGeneralComponent_ng_container_44_tri_spinner_24_Template, 1, 0, "tri-spinner", 10), 
                core["\u0275\u0275pipe"](25, "async"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](26, PowerBIWorkspaceSettingsGeneralComponent_ng_container_44_ng_container_26_Template, 9, 7, "ng-container", 17), 
                core["\u0275\u0275elementContainerEnd"]();
            }
            if (2 & rf) {
                var ctx_r1 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](5), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](6, 10, "DataModelSettingsHeader")), 
                core["\u0275\u0275advance"](5), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](11, 12, "DataModelSettingsHeader")), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"]("", core["\u0275\u0275pipeBind1"](14, 14, "AllowWebModelingDescription"), " "), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("external", !0), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](17, 16, "LearnMore"), " "), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("disabled", core["\u0275\u0275pipeBind1"](20, 18, ctx_r1.autoSaveInProgress.AllowWebModeling) || !ctx_r1.isWorkspaceAdmin || !ctx_r1.isPremiumOrSharedOnPremium)("checked", ctx_r1.allowWebModeling), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](23, 20, "AllowWebModelingLabel")), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](25, 22, ctx_r1.autoSaveInProgress.AllowWebModeling)), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", !ctx_r1.isWebModelingTenantSwitchEnabled);
            }
        }
        var PowerBIWorkspaceSettingsGeneralComponent = function() {
            function PowerBIWorkspaceSettingsGeneralComponent(workspaceSettingsService, featureSwitchService, changeDetection) {
                var _this = this;
                this.workspaceSettingsService = workspaceSettingsService, this.featureSwitchService = featureSwitchService, 
                this.changeDetection = changeDetection, this.contributorsAllowed = this.workspaceSettingsService.allowContributorUpdateApp, 
                this.autoSaveInProgress = this.workspaceSettingsService.autoSaveInProgress, this.initializedSubscription = void 0, 
                this.isWorkspaceAdmin = !1, this.isServiceAppsBuilderWorkspace = !1, this.allowWebModeling = this.workspaceSettingsService.allowWebModeling, 
                this.isPremiumOrSharedOnPremium = !1, this.isWebModelingAdminSettingsEnabled = void 0, 
                this.isWebModelingTenantSwitchEnabled = void 0, this.initializedSubscription = this.workspaceSettingsService.initialized$.subscribe(function(initialized) {
                    initialized && (_this.isWorkspaceAdmin = _this.workspaceSettingsService.isWorkspaceAdmin, 
                    _this.isPremiumOrSharedOnPremium = _this.workspaceSettingsService.isPremium || _this.workspaceSettingsService.isSharedOnPremium, 
                    _this.isWebModelingAdminSettingsEnabled = _this.featureSwitchService.featureSwitches.WebModelingAdminSettings, 
                    _this.isWebModelingTenantSwitchEnabled = _this.featureSwitchService.featureSwitches.webModelingTenantSwitchEnabled, 
                    _this.changeDetection.markForCheck());
                }), this.workspaceSettingsService.isServiceAppsBuilderWorkspace().pipe((0, first.P)()).subscribe(function(isServiceAppsBuilderWorkspace) {
                    _this.isServiceAppsBuilderWorkspace = isServiceAppsBuilderWorkspace;
                });
            }
            return PowerBIWorkspaceSettingsGeneralComponent.prototype.ngOnDestroy = function() {
                var _a;
                null === (_a = this.initializedSubscription) || void 0 === _a || _a.unsubscribe();
            }, PowerBIWorkspaceSettingsGeneralComponent.prototype.onContributorsAllowedChanged = function() {
                this.contributorsAllowed = !this.contributorsAllowed, this.workspaceSettingsService.allowContributorUpdateApp = this.contributorsAllowed;
            }, PowerBIWorkspaceSettingsGeneralComponent.prototype.onAllowWebModelingChanged = function() {
                this.allowWebModeling = !this.allowWebModeling, this.workspaceSettingsService.allowWebModeling = this.allowWebModeling;
            }, PowerBIWorkspaceSettingsGeneralComponent.\u0275fac = function(t) {
                return new (t || PowerBIWorkspaceSettingsGeneralComponent)(core["\u0275\u0275directiveInject"](tri_workspace_settings.X), core["\u0275\u0275directiveInject"](feature_switch_service.V$), core["\u0275\u0275directiveInject"](core.ChangeDetectorRef));
            }, PowerBIWorkspaceSettingsGeneralComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: PowerBIWorkspaceSettingsGeneralComponent,
                selectors: [ [ "tri-powerbi-workspace-settings-general" ] ],
                decls: 45,
                vars: 38,
                consts: [ [ 1, "header-with-line-decor", "tri-flex" ], [ 1, "section-header-line-container", "prefix-line" ], [ 1, "section-header-line" ], [ 1, "section-header-text" ], [ 1, "section-header-line-container", "postfix-line" ], [ 1, "organization-apps-sub-header" ], [ 1, "allow-contributor-description" ], [ 1, "tri-flex", "allow-contributor" ], [ "type", "checkbox", "id", "allow-contributor-checkbox", "data-testid", "allow-contributor-checkbox", 1, "allow-contributor-checkbox", 3, "disabled", "checked", "change" ], [ "for", "allow-contributor-checkbox", 1, "allow-contributor-label" ], [ "class", "inline-autosave-spinner tri-flex tri-items-center", 4, "ngIf" ], [ 1, "header-with-line-decor", "tri-flex", "service-apps-workspace-header" ], [ 1, "service-apps-workspace-description" ], [ "href", "http://aka.ms/powerbiapps", "target", "_blank", "rel", "noopener noreferrer", 1, "learn-more-link", 3, "external" ], [ 1, "tri-flex", "service-apps-workspace" ], [ "type", "checkbox", "id", "is-service-apps-workspace-checkbox", 1, "is-service-apps-workspace-checkbox", 3, "disabled", "checked" ], [ "for", "is-service-apps-workspace-checkbox", 1, "service-apps-workspace-label" ], [ 4, "ngIf" ], [ 1, "inline-autosave-spinner", "tri-flex", "tri-items-center" ], [ "href", "https://go.microsoft.com/fwlink/?linkid=2227332", "target", "_blank", "rel", "noopener noreferrer", 1, "learn-more-link", 3, "external" ], [ "type", "checkbox", "id", "allow-web-modeling", 1, "allow-contributor-checkbox", 3, "disabled", "checked", "change" ], [ "for", "allow-web-modeling", 1, "allow-contributor-label" ], [ 1, "web-modeling-tenant-setting-disabled-message", "tri-flex" ], [ "name", "info_20_regular", 1, "banner-icon", "tri-shrink-0" ], [ 1, "banner-text" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementStart"](0, "div", 0)(1, "div", 1), core["\u0275\u0275element"](2, "div", 2), 
                    core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](3, "h2", 3), 
                    core["\u0275\u0275text"](4), core["\u0275\u0275pipe"](5, "localize"), core["\u0275\u0275elementEnd"](), 
                    core["\u0275\u0275elementStart"](6, "div", 4), core["\u0275\u0275element"](7, "div", 2), 
                    core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementStart"](8, "h3", 5), 
                    core["\u0275\u0275text"](9), core["\u0275\u0275pipe"](10, "localize"), core["\u0275\u0275elementEnd"](), 
                    core["\u0275\u0275elementStart"](11, "div", 6), core["\u0275\u0275text"](12), core["\u0275\u0275pipe"](13, "localize"), 
                    core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](14, "div", 7)(15, "input", 8), 
                    core["\u0275\u0275listener"]("change", function() {
                        return ctx.onContributorsAllowedChanged();
                    }), core["\u0275\u0275pipe"](16, "async"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](17, "label", 9), 
                    core["\u0275\u0275text"](18), core["\u0275\u0275pipe"](19, "localize"), core["\u0275\u0275elementEnd"](), 
                    core["\u0275\u0275template"](20, PowerBIWorkspaceSettingsGeneralComponent_tri_spinner_20_Template, 1, 0, "tri-spinner", 10), 
                    core["\u0275\u0275pipe"](21, "async"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](22, "div", 11)(23, "div", 1), 
                    core["\u0275\u0275element"](24, "div", 2), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](25, "h2", 3), 
                    core["\u0275\u0275text"](26), core["\u0275\u0275pipe"](27, "localize"), core["\u0275\u0275elementEnd"](), 
                    core["\u0275\u0275elementStart"](28, "div", 4), core["\u0275\u0275element"](29, "div", 2), 
                    core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementStart"](30, "h3", 5), 
                    core["\u0275\u0275text"](31), core["\u0275\u0275pipe"](32, "localize"), core["\u0275\u0275elementEnd"](), 
                    core["\u0275\u0275elementStart"](33, "div", 12), core["\u0275\u0275text"](34), core["\u0275\u0275pipe"](35, "localize"), 
                    core["\u0275\u0275elementStart"](36, "tri-link", 13), core["\u0275\u0275text"](37), 
                    core["\u0275\u0275pipe"](38, "localize"), core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementStart"](39, "div", 14), 
                    core["\u0275\u0275element"](40, "input", 15), core["\u0275\u0275elementStart"](41, "label", 16), 
                    core["\u0275\u0275text"](42), core["\u0275\u0275pipe"](43, "localize"), core["\u0275\u0275elementEnd"]()(), 
                    core["\u0275\u0275template"](44, PowerBIWorkspaceSettingsGeneralComponent_ng_container_44_Template, 27, 24, "ng-container", 17)), 
                    2 & rf && (core["\u0275\u0275advance"](4), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](5, 16, "Trident_Workspace_Settings_Organization_Apps_Header")), 
                    core["\u0275\u0275advance"](5), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](10, 18, "Trident_Workspace_Settings_Secure_Update_Header")), 
                    core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](13, 20, "AllowContributorsUpdateAppForWorkspace")), 
                    core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("disabled", core["\u0275\u0275pipeBind1"](16, 22, ctx.autoSaveInProgress.AllowContributorApp) || !ctx.isWorkspaceAdmin)("checked", ctx.contributorsAllowed), 
                    core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](19, 24, "Trident_Workspace_Settings_Allow_Contributor_Label")), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](21, 26, ctx.autoSaveInProgress.AllowContributorApp)), 
                    core["\u0275\u0275advance"](6), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](27, 28, "TemplateApps")), 
                    core["\u0275\u0275advance"](5), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](32, 30, "TemplateApps")), 
                    core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"]("", core["\u0275\u0275pipeBind1"](35, 32, "GroupEditor_ServiceAppCreateInfo"), " "), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("external", !0), core["\u0275\u0275advance"](1), 
                    core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](38, 34, "Trident_GroupEditor_TemplateApps"), " "), 
                    core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("disabled", !0)("checked", ctx.isServiceAppsBuilderWorkspace), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"]("", core["\u0275\u0275pipeBind1"](43, 36, "Trident_GroupEditor_ServiceAppCheckbox"), " "), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", ctx.isWebModelingAdminSettingsEnabled));
                },
                dependencies: [ common.NgIf, tri_svg_icon_component.M, tri_spinner_component.D, tri_link_component.v, common.AsyncPipe, localize_pipe.Y ],
                styles: [ "[_nghost-%COMP%]{width:100%}[_nghost-%COMP%]   .header-with-line-decor[_ngcontent-%COMP%]   .section-header-line-container[_ngcontent-%COMP%]{align-items:flex-start;height:20px}[_nghost-%COMP%]   .header-with-line-decor[_ngcontent-%COMP%]   .section-header-line-container[_ngcontent-%COMP%]   .section-header-line[_ngcontent-%COMP%]{border-bottom:1px solid var(--colorNeutralStroke2);height:50%}[_nghost-%COMP%]   .header-with-line-decor[_ngcontent-%COMP%]   .section-header-line-container.prefix-line[_ngcontent-%COMP%]{width:8px}[_nghost-%COMP%]   .header-with-line-decor[_ngcontent-%COMP%]   .section-header-line-container.postfix-line[_ngcontent-%COMP%]{flex-grow:1}[_nghost-%COMP%]   .header-with-line-decor[_ngcontent-%COMP%]   .section-header-text[_ngcontent-%COMP%]{margin:0 12px;font-size:12px;font-weight:400;line-height:20px;color:var(--colorNeutralForeground2)}[_nghost-%COMP%]   .organization-apps-sub-header[_ngcontent-%COMP%]{margin:10px 0 0;font-size:14px;line-height:20px}[_nghost-%COMP%]   .allow-contributor-description[_ngcontent-%COMP%]{margin-top:8px;font-size:13px;line-height:18px}[_nghost-%COMP%]   .allow-contributor[_ngcontent-%COMP%]{margin:14px 0}[_nghost-%COMP%]   .allow-contributor[_ngcontent-%COMP%]   .allow-contributor-checkbox[_ngcontent-%COMP%]{height:18px;width:18px;margin:0 8px 0 0}[_nghost-%COMP%]   .allow-contributor[_ngcontent-%COMP%]   .allow-contributor-label[_ngcontent-%COMP%]{font-size:14px;line-height:20px}[_nghost-%COMP%]   .service-apps-workspace-description[_ngcontent-%COMP%]{margin-top:8px;font-size:13px;line-height:18px}[_nghost-%COMP%]   .service-apps-workspace[_ngcontent-%COMP%]{margin:14px 0}[_nghost-%COMP%]   .service-apps-workspace[_ngcontent-%COMP%]   .is-service-apps-workspace-checkbox[_ngcontent-%COMP%]{height:18px;width:18px;margin:0 8px 0 0}[_nghost-%COMP%]   .service-apps-workspace[_ngcontent-%COMP%]   .service-apps-workspace-label[_ngcontent-%COMP%]{font-size:14px;line-height:20px;color:var(--fluent-theme-neutral-tertia-color)}[_nghost-%COMP%]   .inline-autosave-spinner[_ngcontent-%COMP%]{margin-left:16px}[_nghost-%COMP%]   .web-modeling-tenant-setting-disabled-message[_ngcontent-%COMP%]{font-size:12px;background-color:var(--globalColorYellowTint50);padding:6px 10px;box-sizing:border-box}[_nghost-%COMP%]   .web-modeling-tenant-setting-disabled-message[_ngcontent-%COMP%]   .banner-icon[_ngcontent-%COMP%]{height:16px;width:16px;margin-bottom:2px;margin-right:8px}[_nghost-%COMP%]   .web-modeling-tenant-setting-disabled-message[_ngcontent-%COMP%]   .banner-text[_ngcontent-%COMP%]{line-height:16px}" ],
                changeDetection: 0
            }), PowerBIWorkspaceSettingsGeneralComponent;
        }();
        function PowerBIWorkspaceSettingsDataConnectionComponent_tri_message_bar_4_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "tri-message-bar", 8), 2 & rf) {
                var ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("viewModel", ctx_r0.securityModeOverriddenByHigherLevelMessageBannerModel);
            }
        }
        function PowerBIWorkspaceSettingsDataConnectionComponent_tri_spinner_14_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "tri-spinner", 9);
        }
        var powerbi_workspace_settings_dataconnection_component_c0 = function(a0) {
            return {
                disabledContainer: a0
            };
        }, PowerBIWorkspaceSettingsDataConnectionComponent = function() {
            function PowerBIWorkspaceSettingsDataConnectionComponent(workspaceSettingsService, localizationService) {
                var _this = this;
                this.workspaceSettingsService = workspaceSettingsService, this.localizationService = localizationService, 
                this.initialized$ = this.workspaceSettingsService.initialized$, this.datasourceBindingSecurityMode = this.workspaceSettingsService.datasourceBindingSecurityMode, 
                this.securityModeOverriddenByHigherLevel = this.workspaceSettingsService.securityModeOverriddenByHigherLevel, 
                this.autoSaveInProgress = this.workspaceSettingsService.autoSaveInProgress, this.initializedSubscription = void 0, 
                this.isWorkspaceAdmin = !1, this.DatasourceBindingSecurityMode = DatasourceBindingSecurityMode, 
                this.initializedSubscription = this.workspaceSettingsService.initialized$.subscribe(function(initialized) {
                    initialized && (_this.isWorkspaceAdmin = _this.workspaceSettingsService.isWorkspaceAdmin, 
                    _this.datasourceBindingSecurityMode = _this.workspaceSettingsService.datasourceBindingSecurityMode, 
                    _this.securityModeOverriddenByHigherLevel = _this.workspaceSettingsService.securityModeOverriddenByHigherLevel);
                }), this.securityModeOverriddenByHigherLevelMessageBannerModel = {
                    bannerType: 2,
                    allowDismiss: !1,
                    iconName: "info_20_regular",
                    message: this.localizationService.get("SettingsDataset_DataConnection_SecurityModeOverriddenByTenantLevel_BannerMessage")
                };
            }
            return PowerBIWorkspaceSettingsDataConnectionComponent.prototype.ngOnDestroy = function() {
                var _a;
                null === (_a = this.initializedSubscription) || void 0 === _a || _a.unsubscribe();
            }, PowerBIWorkspaceSettingsDataConnectionComponent.prototype.onSecurityModeChanged = function(event) {
                this.datasourceBindingSecurityMode = event.target.checked ? DatasourceBindingSecurityMode.Strict : DatasourceBindingSecurityMode.Origin, 
                this.workspaceSettingsService.datasourceBindingSecurityMode = this.datasourceBindingSecurityMode;
            }, PowerBIWorkspaceSettingsDataConnectionComponent.\u0275fac = function(t) {
                return new (t || PowerBIWorkspaceSettingsDataConnectionComponent)(core["\u0275\u0275directiveInject"](tri_workspace_settings.X), core["\u0275\u0275directiveInject"](localization_service.z));
            }, PowerBIWorkspaceSettingsDataConnectionComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: PowerBIWorkspaceSettingsDataConnectionComponent,
                selectors: [ [ "tri-powerbi-workspace-settings-dataconnection" ] ],
                decls: 16,
                vars: 21,
                consts: [ [ 1, "data-connection-sub-header" ], [ 1, "data-connection-sub-context" ], [ 3, "viewModel", 4, "ngIf" ], [ 1, "tri-flex", "enable-securitymode", 3, "ngClass" ], [ "type", "checkbox", "id", "enable-securitymode-checkbox", 1, "enable-securitymode-checkbox", 3, "disabled", "checked", "change" ], [ "for", "enable-securitymode-checkbox", 1, "enable-securitymode-label" ], [ "href", "https://go.microsoft.com/fwlink/?linkid=2277635", "rel", "noopener noreferrer", "target", "_blank", 3, "external" ], [ "class", "inline-autosave-spinner tri-flex tri-items-center", 4, "ngIf" ], [ 3, "viewModel" ], [ 1, "inline-autosave-spinner", "tri-flex", "tri-items-center" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementStart"](0, "h3", 0), core["\u0275\u0275text"](1), 
                    core["\u0275\u0275pipe"](2, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](3, "div", 1), 
                    core["\u0275\u0275template"](4, PowerBIWorkspaceSettingsDataConnectionComponent_tri_message_bar_4_Template, 1, 1, "tri-message-bar", 2), 
                    core["\u0275\u0275elementStart"](5, "div", 3)(6, "input", 4), core["\u0275\u0275listener"]("change", function($event) {
                        return ctx.onSecurityModeChanged($event);
                    }), core["\u0275\u0275pipe"](7, "async"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](8, "label", 5), 
                    core["\u0275\u0275text"](9), core["\u0275\u0275pipe"](10, "localize"), core["\u0275\u0275elementStart"](11, "tri-link", 6), 
                    core["\u0275\u0275text"](12), core["\u0275\u0275pipe"](13, "localize"), core["\u0275\u0275elementEnd"]()(), 
                    core["\u0275\u0275template"](14, PowerBIWorkspaceSettingsDataConnectionComponent_tri_spinner_14_Template, 1, 0, "tri-spinner", 7), 
                    core["\u0275\u0275pipe"](15, "async"), core["\u0275\u0275elementEnd"]()()), 2 & rf && (core["\u0275\u0275advance"](1), 
                    core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](2, 9, "Trident_Workspace_Settings_Data_Connection_Security_Mode_Header")), 
                    core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngIf", ctx.securityModeOverriddenByHigherLevel), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngClass", core["\u0275\u0275pureFunction1"](19, powerbi_workspace_settings_dataconnection_component_c0, !ctx.isWorkspaceAdmin || ctx.securityModeOverriddenByHigherLevel)), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("disabled", core["\u0275\u0275pipeBind1"](7, 11, ctx.autoSaveInProgress.DatasourceBindingSecurityMode) || !ctx.isWorkspaceAdmin || ctx.securityModeOverriddenByHigherLevel)("checked", ctx.datasourceBindingSecurityMode === ctx.DatasourceBindingSecurityMode.Strict || ctx.securityModeOverriddenByHigherLevel), 
                    core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"]("", core["\u0275\u0275pipeBind1"](10, 13, "Trident_Workspace_Settings_Data_Connection_Enable_Security_Mode_Label"), " "), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("external", !0), core["\u0275\u0275advance"](1), 
                    core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](13, 15, "Generic_LearnMore"), " "), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](15, 17, ctx.autoSaveInProgress.DatasourceBindingSecurityMode)));
                },
                dependencies: [ common.NgClass, common.NgIf, tri_spinner_component.D, tri_message_bar_component.h, tri_link_component.v, common.AsyncPipe, localize_pipe.Y ],
                styles: [ "[_nghost-%COMP%]{width:100%}[_nghost-%COMP%]   .disabledContainer[_ngcontent-%COMP%]{opacity:.5;pointer-events:none}[_nghost-%COMP%]   .enable-securitymode[_ngcontent-%COMP%]{margin:14px 0}[_nghost-%COMP%]   .enable-securitymode[_ngcontent-%COMP%]   .enable-securitymode-checkbox[_ngcontent-%COMP%]{height:18px;width:18px;margin:0 8px 0 0}[_nghost-%COMP%]   .enable-securitymode[_ngcontent-%COMP%]   .enable-securitymode-label[_ngcontent-%COMP%]{width:90%;font-size:14px;line-height:20px}[_nghost-%COMP%]   .inline-autosave-spinner[_ngcontent-%COMP%]{margin-inline-start:16px}[_nghost-%COMP%]   label[_ngcontent-%COMP%]{margin-bottom:8px}[_nghost-%COMP%]   .data-connection-sub-header[_ngcontent-%COMP%]{margin:10px 0 0;font-size:14px;line-height:20px}" ],
                changeDetection: 0
            }), PowerBIWorkspaceSettingsDataConnectionComponent;
        }();
        function PowerBIWorkspaceSettingsComponent_tri_powerbi_workspace_settings_general_1_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "tri-powerbi-workspace-settings-general");
        }
        function PowerBIWorkspaceSettingsComponent_tri_powerbi_workspace_settings_dataconnection_2_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "tri-powerbi-workspace-settings-dataconnection");
        }
        function PowerBIWorkspaceSettingsComponent_ng_container_3_ng_container_1_ng_container_1_ng_container_1_ng_container_1_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275elementContainer"](0);
        }
        function PowerBIWorkspaceSettingsComponent_ng_container_3_ng_container_1_ng_container_1_ng_container_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, PowerBIWorkspaceSettingsComponent_ng_container_3_ng_container_1_ng_container_1_ng_container_1_ng_container_1_Template, 1, 0, "ng-container", 4), 
            core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275pipe"](3, "settingsComponentPipe"), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var tab_r5 = core["\u0275\u0275nextContext"](2).$implicit;
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngComponentOutlet", core["\u0275\u0275pipeBind1"](2, 1, core["\u0275\u0275pipeBind1"](3, 3, tab_r5.component)));
            }
        }
        function PowerBIWorkspaceSettingsComponent_ng_container_3_ng_container_1_ng_container_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, PowerBIWorkspaceSettingsComponent_ng_container_3_ng_container_1_ng_container_1_ng_container_1_Template, 4, 5, "ng-container", 2), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var tab_r5 = core["\u0275\u0275nextContext"]().$implicit;
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", tab_r5.component);
            }
        }
        function PowerBIWorkspaceSettingsComponent_ng_container_3_ng_container_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, PowerBIWorkspaceSettingsComponent_ng_container_3_ng_container_1_ng_container_1_Template, 2, 1, "ng-container", 1), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var tab_r5 = ctx.$implicit;
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", tab_r5.name);
            }
        }
        function PowerBIWorkspaceSettingsComponent_ng_container_3_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, PowerBIWorkspaceSettingsComponent_ng_container_3_ng_container_1_Template, 2, 1, "ng-container", 3), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var tabs_r3 = ctx.ngIf;
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngForOf", tabs_r3);
            }
        }
        var SettingsComponentPipe = function() {
            function SettingsComponentPipe() {}
            return SettingsComponentPipe.prototype.transform = function(componentFunc) {
                return componentFunc();
            }, SettingsComponentPipe.\u0275fac = function(t) {
                return new (t || SettingsComponentPipe);
            }, SettingsComponentPipe.\u0275pipe = core["\u0275\u0275definePipe"]({
                name: "settingsComponentPipe",
                type: SettingsComponentPipe,
                pure: !0
            }), SettingsComponentPipe;
        }(), PowerBIWorkspaceSettingsComponent = function() {
            function PowerBIWorkspaceSettingsComponent(workspaceSettingsService) {
                this.workspaceSettingsService = workspaceSettingsService, this.tabs$ = this.workspaceSettingsService.pbiTabs$, 
                this.selectedTab = "";
            }
            return PowerBIWorkspaceSettingsComponent.\u0275fac = function(t) {
                return new (t || PowerBIWorkspaceSettingsComponent)(core["\u0275\u0275directiveInject"](tri_workspace_settings.X));
            }, PowerBIWorkspaceSettingsComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: PowerBIWorkspaceSettingsComponent,
                selectors: [ [ "tri-powerbi-workspace-settings" ] ],
                inputs: {
                    selectedTab: "selectedTab"
                },
                decls: 5,
                vars: 6,
                consts: [ [ 3, "ngSwitch" ], [ 4, "ngSwitchCase" ], [ 4, "ngIf" ], [ 4, "ngFor", "ngForOf" ], [ 4, "ngComponentOutlet" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementContainerStart"](0, 0), core["\u0275\u0275template"](1, PowerBIWorkspaceSettingsComponent_tri_powerbi_workspace_settings_general_1_Template, 1, 0, "tri-powerbi-workspace-settings-general", 1), 
                    core["\u0275\u0275template"](2, PowerBIWorkspaceSettingsComponent_tri_powerbi_workspace_settings_dataconnection_2_Template, 1, 0, "tri-powerbi-workspace-settings-dataconnection", 1), 
                    core["\u0275\u0275template"](3, PowerBIWorkspaceSettingsComponent_ng_container_3_Template, 2, 1, "ng-container", 2), 
                    core["\u0275\u0275pipe"](4, "async"), core["\u0275\u0275elementContainerEnd"]()), 
                    2 & rf && (core["\u0275\u0275property"]("ngSwitch", ctx.selectedTab), core["\u0275\u0275advance"](1), 
                    core["\u0275\u0275property"]("ngSwitchCase", "pbi-general"), core["\u0275\u0275advance"](1), 
                    core["\u0275\u0275property"]("ngSwitchCase", "pbi-dataconnection"), core["\u0275\u0275advance"](1), 
                    core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](4, 4, ctx.tabs$)));
                },
                dependencies: [ common.NgComponentOutlet, common.NgForOf, common.NgIf, common.NgSwitch, common.NgSwitchCase, PowerBIWorkspaceSettingsGeneralComponent, PowerBIWorkspaceSettingsDataConnectionComponent, common.AsyncPipe, SettingsComponentPipe ],
                styles: [ "[_nghost-%COMP%]{width:100%;max-width:580px;position:relative;flex-grow:1}" ],
                changeDetection: 0
            }), PowerBIWorkspaceSettingsComponent;
        }();
        function DelegatedWorkspaceSettingsComponent_section_12_label_1_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementStart"](0, "label", 10), core["\u0275\u0275text"](1), 
            core["\u0275\u0275pipe"](2, "localize"), core["\u0275\u0275elementEnd"]()), 2 & rf && (core["\u0275\u0275advance"](1), 
            core["\u0275\u0275textInterpolate1"]("> ", core["\u0275\u0275pipeBind1"](2, 1, "WorkspaceDelegatedSettings_ScopeEnabledForAllUsers"), " "));
        }
        function DelegatedWorkspaceSettingsComponent_section_12_label_2_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementStart"](0, "label", 10), core["\u0275\u0275text"](1), 
            core["\u0275\u0275pipe"](2, "localize"), core["\u0275\u0275elementEnd"]()), 2 & rf && (core["\u0275\u0275advance"](1), 
            core["\u0275\u0275textInterpolate1"]("> ", core["\u0275\u0275pipeBind1"](2, 1, "WorkspaceDelegatedSettings_ScopeEnabledForSpecificUsers"), " "));
        }
        function DelegatedWorkspaceSettingsComponent_section_12_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "section"), core["\u0275\u0275template"](1, DelegatedWorkspaceSettingsComponent_section_12_label_1_Template, 3, 3, "label", 9), 
            core["\u0275\u0275template"](2, DelegatedWorkspaceSettingsComponent_section_12_label_2_Template, 3, 3, "label", 9), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx_r0.isSettingEnabledForAllUsers()), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !ctx_r0.isSettingEnabledForAllUsers());
            }
        }
        function DelegatedWorkspaceSettingsComponent_section_13_Template(rf, ctx) {
            if (1 & rf) {
                var _r7 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "section", 11)(1, "button", 12), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r7);
                    var ctx_r6 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r6.onEditScope());
                }), core["\u0275\u0275text"](2), core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var ctx_r1 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("disabled", void 0 === (null == ctx_r1.setting ? null : ctx_r1.setting.enableDelegationControls)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](3, 2, "WorkspaceDelegatedSettings_ScopeEdit"), " ");
            }
        }
        function DelegatedWorkspaceSettingsComponent_button_15_Template(rf, ctx) {
            if (1 & rf) {
                var _r9 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "button", 13), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r9);
                    var ctx_r8 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r8.revertToOriginalConfig());
                }), core["\u0275\u0275element"](1, "tri-svg-icon", 14), core["\u0275\u0275text"](2), 
                core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r2 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("disabled", void 0 === (null == ctx_r2.setting ? null : ctx_r2.setting.enableDelegationControls)), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](3, 2, "ColorPicker_RevertToDefault"), " ");
            }
        }
        function DelegatedWorkspaceSettingsComponent_button_17_Template(rf, ctx) {
            if (1 & rf) {
                var _r11 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "button", 15), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r11);
                    var ctx_r10 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r10.revertToOriginalConfig());
                }), core["\u0275\u0275text"](1), core["\u0275\u0275pipe"](2, "localize"), core["\u0275\u0275elementEnd"]();
            }
            2 & rf && (core["\u0275\u0275property"]("disabled", !0), core["\u0275\u0275advance"](1), 
            core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](2, 2, "WorkspaceDelegatedSettings_ConfigurationDefault"), " "));
        }
        var DelegatedWorkspaceSettingsComponent = function() {
            function DelegatedWorkspaceSettingsComponent(workspaceSettingsService, errorService, triLocalizationService) {
                this.workspaceSettingsService = workspaceSettingsService, this.errorService = errorService, 
                this.triLocalizationService = triLocalizationService, this.editSettingEmitter = new core.EventEmitter, 
                this.isSettingEnabled = !1, this.isSettingOverridden$ = new BehaviorSubject.X(!1), 
                this.textPlaceholderRegex = /\{[0-9]\}/;
            }
            return DelegatedWorkspaceSettingsComponent.prototype.ngOnInit = function() {
                void 0 !== this.setting && (this.isSettingEnabled = null !== this.setting.isOverridden && this.setting.isOverridden ? this.setting.isEnabled : this.setting.upperLevelSelection.isEnabled, 
                this.isSettingOverridden$.next(void 0 !== this.setting.isOverridden && this.setting.isOverridden));
            }, DelegatedWorkspaceSettingsComponent.prototype.onEditScope = function() {
                this.editSettingEmitter.emit(this.setting);
            }, DelegatedWorkspaceSettingsComponent.prototype.revertToOriginalConfig = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return void 0 === this.setting ? [ 3, 2 ] : [ 4, this.workspaceSettingsService.revertDelegatedSettingToOriginalConfig(this.setting.switchName) ];

                          case 1:
                            _a.sent() ? (this.setting.isOverridden = !1, this.setting.isEnabled = this.setting.upperLevelSelection.isEnabled, 
                            this.isSettingEnabled = this.setting.isEnabled, this.isSettingOverridden$.next(this.setting.isOverridden)) : this.errorService.error(this.triLocalizationService.get("SettingsGeneral_Error_FailedToSave"), this.triLocalizationService.get("SettingsGeneral_Error_FailedToSave")), 
                            _a.label = 2;

                          case 2:
                            return [ 2 ];
                        }
                    });
                });
            }, DelegatedWorkspaceSettingsComponent.prototype.onToggle = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var contract;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return void 0 === this.setting ? [ 3, 3 ] : this.isSettingEnabled ? (this.onEditScope(), 
                            [ 3, 3 ]) : [ 3, 1 ];

                          case 1:
                            return contract = this.createUpdateContract(this.setting), [ 4, this.workspaceSettingsService.updateDelegatedSetting(contract) ];

                          case 2:
                            _a.sent() ? (this.setting.isOverridden = !0, this.setting.isEnabled = !1, this.isSettingOverridden$.next(this.setting.isOverridden)) : this.errorService.error(this.triLocalizationService.get("SettingsGeneral_Error_FailedToSave"), this.triLocalizationService.get("SettingsGeneral_Error_FailedToSave")), 
                            _a.label = 3;

                          case 3:
                            return [ 2 ];
                        }
                    });
                });
            }, DelegatedWorkspaceSettingsComponent.prototype.createUpdateContract = function(setting) {
                return {
                    featureSwitches: [ {
                        switchId: -1,
                        switchName: setting.switchName,
                        isEnabled: !1,
                        isGranular: setting.isGranular,
                        allowedSecurityGroups: [],
                        deniedSecurityGroups: []
                    } ],
                    properties: []
                };
            }, DelegatedWorkspaceSettingsComponent.prototype.getMultiParagraphDescription = function(multiParagraphDescription) {
                var localizedDescription = "";
                if (void 0 !== multiParagraphDescription) for (var i = 0; i < multiParagraphDescription.length; i++) {
                    var description = multiParagraphDescription[i], locDescription = description.content, hyperLinkCounter = 0, locDescriptionMatch = locDescription.match(this.textPlaceholderRegex);
                    if (null !== locDescriptionMatch) for (;locDescriptionMatch.length > 0 && null != description.hyperLinkList[hyperLinkCounter]; ) locDescription = locDescription.replace(this.textPlaceholderRegex, '&nbsp;<a href="' + description.hyperLinkList[hyperLinkCounter].url + '" target="_blank">' + description.hyperLinkList[hyperLinkCounter].displayText + "</a>"), 
                    hyperLinkCounter++;
                    if (hyperLinkCounter < description.hyperLinkList.length) for (var h = hyperLinkCounter; h < description.hyperLinkList.length; h++) locDescription = locDescription.concat('&nbsp;<a href="' + description.hyperLinkList[h].url + '" target="_blank">' + description.hyperLinkList[h].displayText + "</a>");
                    localizedDescription = 0 === i ? locDescription : localizedDescription + "<br><br>" + locDescription;
                }
                return "<span>" + localizedDescription + "</span>";
            }, DelegatedWorkspaceSettingsComponent.prototype.hasSettingScope = function() {
                return void 0 !== this.setting && (void 0 !== this.setting.isOverridden && this.setting.isOverridden ? this.setting.isEnabled : this.setting.upperLevelSelection.isEnabled);
            }, DelegatedWorkspaceSettingsComponent.prototype.isSettingEnabledForAllUsers = function() {
                return !(void 0 === this.setting || (void 0 !== this.setting.isOverridden && this.setting.isOverridden ? this.setting.allowedSecurityGroups.length > 0 || this.setting.deniedSecurityGroups.length > 0 : this.setting.upperLevelSelection.allowedSecurityGroups.length > 0 || this.setting.upperLevelSelection.deniedSecurityGroups.length > 0));
            }, DelegatedWorkspaceSettingsComponent.\u0275fac = function(t) {
                return new (t || DelegatedWorkspaceSettingsComponent)(core["\u0275\u0275directiveInject"](tri_workspace_settings.X), core["\u0275\u0275directiveInject"](errorService.g), core["\u0275\u0275directiveInject"](localization_service.z));
            }, DelegatedWorkspaceSettingsComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: DelegatedWorkspaceSettingsComponent,
                selectors: [ [ "tri-delegated-workspace-settings" ] ],
                inputs: {
                    setting: "setting"
                },
                outputs: {
                    editSettingEmitter: "editSettingEmitter"
                },
                decls: 19,
                vars: 19,
                consts: [ [ 1, "settingToggle" ], [ 1, "settingTitle", 3, "for" ], [ 3, "disabled", "id", "ngModel", "ngModelChange" ], [ "tri-switch-text", "" ], [ 1, "settingDescription", 3, "innerHtml" ], [ 4, "ngIf" ], [ "class", "editScope", 4, "ngIf" ], [ "class", "revertSettingConf", "tri-button", "", "appearance", "subtle", "size", "small", 3, "disabled", "click", 4, "ngIf" ], [ "class", "defaultSettingConf", "tri-button", "", "appearance", "subtle", "size", "small", 3, "disabled", "click", 4, "ngIf" ], [ "class", "settingScope", 4, "ngIf" ], [ 1, "settingScope" ], [ 1, "editScope" ], [ "tri-button", "", "appearance", "primary", 3, "disabled", "click" ], [ "tri-button", "", "appearance", "subtle", "size", "small", 1, "revertSettingConf", 3, "disabled", "click" ], [ "name", "arrow_undo_20_regular" ], [ "tri-button", "", "appearance", "subtle", "size", "small", 1, "defaultSettingConf", 3, "disabled", "click" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementStart"](0, "section")(1, "div", 0)(2, "label", 1), 
                    core["\u0275\u0275text"](3), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](4, "tri-switch", 2), 
                    core["\u0275\u0275listener"]("ngModelChange", function($event) {
                        return ctx.isSettingEnabled = $event;
                    })("ngModelChange", function() {
                        return ctx.onToggle();
                    }), core["\u0275\u0275elementStart"](5, "div", 3), core["\u0275\u0275text"](6), 
                    core["\u0275\u0275pipe"](7, "localize"), core["\u0275\u0275pipe"](8, "localize"), 
                    core["\u0275\u0275elementEnd"]()()()(), core["\u0275\u0275elementStart"](9, "section")(10, "div"), 
                    core["\u0275\u0275element"](11, "div", 4), core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275template"](12, DelegatedWorkspaceSettingsComponent_section_12_Template, 3, 2, "section", 5), 
                    core["\u0275\u0275template"](13, DelegatedWorkspaceSettingsComponent_section_13_Template, 4, 4, "section", 6), 
                    core["\u0275\u0275elementStart"](14, "section"), core["\u0275\u0275template"](15, DelegatedWorkspaceSettingsComponent_button_15_Template, 4, 4, "button", 7), 
                    core["\u0275\u0275pipe"](16, "async"), core["\u0275\u0275template"](17, DelegatedWorkspaceSettingsComponent_button_17_Template, 3, 4, "button", 8), 
                    core["\u0275\u0275pipe"](18, "async"), core["\u0275\u0275elementEnd"]()), 2 & rf && (core["\u0275\u0275advance"](2), 
                    core["\u0275\u0275propertyInterpolate1"]("for", "settingToggle_", null == ctx.setting ? null : ctx.setting.switchName, ""), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate"](null == ctx.setting ? null : ctx.setting.title), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275propertyInterpolate1"]("id", "settingToggle_", null == ctx.setting ? null : ctx.setting.switchName, ""), 
                    core["\u0275\u0275property"]("disabled", void 0 === (null == ctx.setting ? null : ctx.setting.enableDelegationControls))("ngModel", ctx.isSettingEnabled), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](ctx.isSettingEnabled ? core["\u0275\u0275pipeBind1"](7, 11, "ToggleSwitchOn") : core["\u0275\u0275pipeBind1"](8, 13, "ToggleSwitchOff")), 
                    core["\u0275\u0275advance"](5), core["\u0275\u0275property"]("innerHtml", ctx.getMultiParagraphDescription(null == ctx.setting ? null : ctx.setting.description), core["\u0275\u0275sanitizeHtml"]), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx.hasSettingScope()), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx.hasSettingScope() && (null == ctx.setting ? null : ctx.setting.isGranular)), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", !0 === core["\u0275\u0275pipeBind1"](16, 15, ctx.isSettingOverridden$)), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", !1 === core["\u0275\u0275pipeBind1"](18, 17, ctx.isSettingOverridden$)));
                },
                dependencies: [ common.NgIf, fesm2022_forms.JJ, fesm2022_forms.On, tri_svg_icon_component.M, tri_switch_component.t, common.AsyncPipe, localize_pipe.Y ],
                styles: [ "[_nghost-%COMP%]{width:100%;max-width:580px;position:relative;flex-grow:1}[_nghost-%COMP%]   .settingTitle[_ngcontent-%COMP%]{font-weight:var(--subheadline-font-weight);font-size:var(--body-font-size);line-height:40px}[_nghost-%COMP%]   .settingDescription[_ngcontent-%COMP%]{font-family:var(--fontFamilyBase);font-size:13px;line-height:18px;margin-top:8px;margin-bottom:8px}[_nghost-%COMP%]   .settingScope[_ngcontent-%COMP%]{margin-top:8px;margin-bottom:8px;font-family:var(--fontFamilyBase);font-size:13px;line-height:18px}[_nghost-%COMP%]   .editScope[_ngcontent-%COMP%]{margin-top:8px}[_nghost-%COMP%]   .settingToggle[_ngcontent-%COMP%]{display:flex;justify-content:space-between}[_nghost-%COMP%]   .revertSettingConf[_ngcontent-%COMP%]{margin-top:16px;padding:0}[_nghost-%COMP%]   .defaultSettingConf[_ngcontent-%COMP%]{margin-top:16px;padding:0}" ],
                changeDetection: 0
            }), DelegatedWorkspaceSettingsComponent;
        }();
        function DelegatedWorkspaceSettingsScopeComponent_tri_radio_button_14_Template(rf, ctx) {
            if (1 & rf) {
                var _r6 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "tri-radio-button", 4), core["\u0275\u0275listener"]("change", function($event) {
                    core["\u0275\u0275restoreView"](_r6);
                    var ctx_r5 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r5.onApplyToSpecificSG($event));
                }), core["\u0275\u0275text"](1), core["\u0275\u0275pipe"](2, "localize"), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("checked", ctx_r0.isGranular), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](2, 2, "WorkspaceDelegatedSettings_ApplyToSpecificSecurityGroups"), " ");
            }
        }
        function DelegatedWorkspaceSettingsScopeComponent_section_15_ng_container_6_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275elementContainer"](0);
        }
        var delegated_workspace_settings_scope_component_c0 = function(a0) {
            return {
                $implicit: a0
            };
        };
        function DelegatedWorkspaceSettingsScopeComponent_section_15_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "section")(1, "div", 11)(2, "label", 12), 
            core["\u0275\u0275text"](3), core["\u0275\u0275pipe"](4, "localize"), core["\u0275\u0275elementEnd"](), 
            core["\u0275\u0275elementStart"](5, "div", 13), core["\u0275\u0275template"](6, DelegatedWorkspaceSettingsScopeComponent_section_15_ng_container_6_Template, 1, 0, "ng-container", 14), 
            core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](7, "label"), 
            core["\u0275\u0275text"](8), core["\u0275\u0275pipe"](9, "localize"), core["\u0275\u0275elementEnd"]()()()), 
            2 & rf) {
                var ctx_r1 = core["\u0275\u0275nextContext"](), _r3 = core["\u0275\u0275reference"](26);
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](4, 7, "VisualContainer_ContextMenu_Include")), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngTemplateOutlet", ctx_r1.userPicker || _r3)("ngTemplateOutletContext", core["\u0275\u0275pureFunction1"](11, delegated_workspace_settings_scope_component_c0, ctx_r1.allowedSecurityGroupsContext)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275classMap"](ctx_r1.duplicatedGroupInAllowedSG ? "emailList-footer-error" : "emailList-footer"), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](9, 9, ctx_r1.duplicatedGroupInAllowedSG ? "WorkspaceDelegatedSettings_EmailList_DuplicatedSecurityGroups" : "WorkspaceDelegatedSettings_EmailList_AllowedSecurityGroups"), " ");
            }
        }
        function DelegatedWorkspaceSettingsScopeComponent_section_16_ng_container_6_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275elementContainer"](0);
        }
        function DelegatedWorkspaceSettingsScopeComponent_section_16_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "section")(1, "div", 11)(2, "label", 15), 
            core["\u0275\u0275text"](3), core["\u0275\u0275pipe"](4, "localize"), core["\u0275\u0275elementEnd"](), 
            core["\u0275\u0275elementStart"](5, "div", 13), core["\u0275\u0275template"](6, DelegatedWorkspaceSettingsScopeComponent_section_16_ng_container_6_Template, 1, 0, "ng-container", 14), 
            core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](7, "label"), 
            core["\u0275\u0275text"](8), core["\u0275\u0275pipe"](9, "localize"), core["\u0275\u0275elementEnd"]()()()), 
            2 & rf) {
                var ctx_r2 = core["\u0275\u0275nextContext"](), _r3 = core["\u0275\u0275reference"](26);
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](4, 7, "VisualContainer_ContextMenu_Exclude")), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngTemplateOutlet", ctx_r2.userPicker || _r3)("ngTemplateOutletContext", core["\u0275\u0275pureFunction1"](11, delegated_workspace_settings_scope_component_c0, ctx_r2.deniedSecurityGroupsContext)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275classMap"](ctx_r2.duplicatedGroupInDeniedSG ? "emailList-footer-error" : "emailList-footer"), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](9, 9, ctx_r2.duplicatedGroupInDeniedSG ? "WorkspaceDelegatedSettings_EmailList_DuplicatedSecurityGroups" : "WorkspaceDelegatedSettings_EmailList_DeniedSecurityGroups"), " ");
            }
        }
        var delegated_workspace_settings_scope_component_c1 = function() {
            return [];
        };
        function DelegatedWorkspaceSettingsScopeComponent_ng_template_25_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "input", 16), 2 & rf) {
                var tmp_1_0, model_r9 = ctx.$implicit;
                core["\u0275\u0275property"]("placeholder", null == model_r9 ? null : model_r9.inputPlaceholder)("value", (null !== (tmp_1_0 = null == model_r9 ? null : model_r9.identities) && void 0 !== tmp_1_0 ? tmp_1_0 : core["\u0275\u0275pureFunction0"](2, delegated_workspace_settings_scope_component_c1)).join(";"));
            }
        }
        var DelegatedWorkspaceSettingsScopeComponent = function() {
            function DelegatedWorkspaceSettingsScopeComponent(workspaceSettingsService, errorService, triLocalizationService) {
                var _this = this;
                this.workspaceSettingsService = workspaceSettingsService, this.errorService = errorService, 
                this.triLocalizationService = triLocalizationService, this.closeScopeEditEmitter = new core.EventEmitter, 
                this.isGranular = !1, this.duplicatedGroupInAllowedSG = !1, this.duplicatedGroupInDeniedSG = !1, 
                this.allowedSecurityGroupsContext = void 0, this.deniedSecurityGroupsContext = void 0, 
                this.onAllowedSecurityGroupsUpdated = function(allowedSecurityGroups) {
                    var _a;
                    _this.duplicatedGroupInAllowedSG = _this.verifyDuplicatedGroups(allowedSecurityGroups, null === (_a = _this.deniedSecurityGroupsContext) || void 0 === _a ? void 0 : _a.identities);
                }, this.onDeniedSecurityGroupsUpdated = function(deniedSecurityGroups) {
                    var _a;
                    _this.duplicatedGroupInDeniedSG = _this.verifyDuplicatedGroups(null === (_a = _this.allowedSecurityGroupsContext) || void 0 === _a ? void 0 : _a.identities, deniedSecurityGroups);
                };
            }
            return DelegatedWorkspaceSettingsScopeComponent.prototype.ngOnInit = function() {
                var _a, _b, _c, _d, _e, _f, allowedSecurityGroups = null !== (null === (_a = this.setting) || void 0 === _a ? void 0 : _a.isOverridden) && (null === (_b = this.setting) || void 0 === _b ? void 0 : _b.isOverridden) ? this.setting.allowedSecurityGroups : null === (_c = this.setting) || void 0 === _c ? void 0 : _c.upperLevelSelection.allowedSecurityGroups;
                this.allowedSecurityGroupsContext = {
                    identities: this.parseSecurityGroupsToUserMetadata(allowedSecurityGroups),
                    onIdentitiesUpdated: this.onAllowedSecurityGroupsUpdated,
                    allowSecurityGroups: !0,
                    allowObjectIds: !0,
                    blockUsers: !0,
                    allowDistributionLists: !1,
                    inputPlaceholder: void 0 !== allowedSecurityGroups && allowedSecurityGroups.length > 0 ? "" : this.triLocalizationService.get("SecurityGroupsListPlaceholder")
                };
                var deniedSecurityGroups = null !== (null === (_d = this.setting) || void 0 === _d ? void 0 : _d.isOverridden) && (null === (_e = this.setting) || void 0 === _e ? void 0 : _e.isOverridden) ? this.setting.deniedSecurityGroups : null === (_f = this.setting) || void 0 === _f ? void 0 : _f.upperLevelSelection.deniedSecurityGroups;
                this.deniedSecurityGroupsContext = {
                    identities: this.parseSecurityGroupsToUserMetadata(deniedSecurityGroups),
                    onIdentitiesUpdated: this.onDeniedSecurityGroupsUpdated,
                    allowSecurityGroups: !0,
                    allowObjectIds: !0,
                    blockUsers: !0,
                    allowDistributionLists: !1,
                    inputPlaceholder: void 0 !== deniedSecurityGroups && deniedSecurityGroups.length > 0 ? "" : this.triLocalizationService.get("SecurityGroupsListPlaceholder")
                }, this.setting && this.setting.isGranular && (this.isGranular = null !== this.setting.isOverridden && this.setting.isOverridden ? this.hasAllowedSecurityGroups(this.setting.allowedSecurityGroups) || this.hasDeniedSecurityGroups(this.setting.deniedSecurityGroups) : this.hasAllowedSecurityGroups(this.setting.upperLevelSelection.allowedSecurityGroups) || this.hasDeniedSecurityGroups(this.setting.upperLevelSelection.deniedSecurityGroups));
            }, DelegatedWorkspaceSettingsScopeComponent.prototype.confirmScope = function() {
                var _a, _b;
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var contract;
                    return (0, tslib_es6.__generator)(this, function(_c) {
                        switch (_c.label) {
                          case 0:
                            return void 0 === this.setting ? [ 3, 2 ] : (contract = this.createUpdateContract(this.setting), 
                            [ 4, this.workspaceSettingsService.updateDelegatedSetting(contract) ]);

                          case 1:
                            _c.sent() ? (this.setting.isOverridden = !0, this.setting.isEnabled = !0, this.isGranular ? (this.setting.allowedSecurityGroups = this.parseSecurityGroupsToTSSecurityGroup(null === (_a = this.allowedSecurityGroupsContext) || void 0 === _a ? void 0 : _a.identities), 
                            this.setting.deniedSecurityGroups = this.parseSecurityGroupsToTSSecurityGroup(null === (_b = this.deniedSecurityGroupsContext) || void 0 === _b ? void 0 : _b.identities)) : (this.setting.allowedSecurityGroups = [], 
                            this.setting.deniedSecurityGroups = []), this.closeScopeEditEmitter.emit(!1)) : this.errorService.error(this.triLocalizationService.get("SettingsGeneral_Error_FailedToSave"), this.triLocalizationService.get("SettingsGeneral_Error_FailedToSave")), 
                            _c.label = 2;

                          case 2:
                            return [ 2 ];
                        }
                    });
                });
            }, DelegatedWorkspaceSettingsScopeComponent.prototype.onApplyToAll = function(selected) {
                selected && (this.isGranular = !1);
            }, DelegatedWorkspaceSettingsScopeComponent.prototype.onApplyToSpecificSG = function(selected) {
                selected && (this.isGranular = !0);
            }, DelegatedWorkspaceSettingsScopeComponent.prototype.cancelScope = function() {
                void 0 !== this.setting && this.closeScopeEditEmitter.emit(!0);
            }, DelegatedWorkspaceSettingsScopeComponent.prototype.verifyDuplicatedGroups = function(allowedSecurityGroups, deniedSecurityGroups) {
                if (void 0 !== allowedSecurityGroups && void 0 !== deniedSecurityGroups && allowedSecurityGroups.length > 0 && deniedSecurityGroups.length > 0) for (var _i = 0, allowedSecurityGroups_1 = allowedSecurityGroups; _i < allowedSecurityGroups_1.length; _i++) for (var asg = allowedSecurityGroups_1[_i], _a = 0, deniedSecurityGroups_1 = deniedSecurityGroups; _a < deniedSecurityGroups_1.length; _a++) {
                    var dsg = deniedSecurityGroups_1[_a];
                    if (asg.displayName === dsg.displayName && asg.objectId === dsg.objectId) return !0;
                }
                return !1;
            }, DelegatedWorkspaceSettingsScopeComponent.prototype.createUpdateContract = function(setting) {
                var _a, _b;
                return this.isGranular ? {
                    featureSwitches: [ {
                        switchId: -1,
                        switchName: setting.switchName,
                        isEnabled: !0,
                        isGranular: setting.isGranular,
                        allowedSecurityGroups: this.parseSecurityGroupsToTSSecurityGroup(null === (_a = this.allowedSecurityGroupsContext) || void 0 === _a ? void 0 : _a.identities),
                        deniedSecurityGroups: this.parseSecurityGroupsToTSSecurityGroup(null === (_b = this.deniedSecurityGroupsContext) || void 0 === _b ? void 0 : _b.identities)
                    } ],
                    properties: []
                } : {
                    featureSwitches: [ {
                        switchId: -1,
                        switchName: setting.switchName,
                        isEnabled: !0,
                        isGranular: setting.isGranular,
                        allowedSecurityGroups: [],
                        deniedSecurityGroups: []
                    } ],
                    properties: []
                };
            }, DelegatedWorkspaceSettingsScopeComponent.prototype.parseSecurityGroupsToUserMetadata = function(securityGroups) {
                var parsedSecurityGroups = [];
                if (void 0 !== securityGroups && securityGroups.length > 0) for (var _i = 0, securityGroups_1 = securityGroups; _i < securityGroups_1.length; _i++) {
                    var sg = securityGroups_1[_i];
                    parsedSecurityGroups.push({
                        displayName: sg.name,
                        objectId: sg.id,
                        userPrincipalName: "",
                        isSecurityGroup: !0,
                        objectType: 2
                    });
                }
                return parsedSecurityGroups;
            }, DelegatedWorkspaceSettingsScopeComponent.prototype.parseSecurityGroupsToTSSecurityGroup = function(securityGroups) {
                var parsedSecurityGroups = [];
                if (void 0 !== securityGroups && securityGroups.length > 0) for (var _i = 0, securityGroups_2 = securityGroups; _i < securityGroups_2.length; _i++) {
                    var sg = securityGroups_2[_i];
                    sg.objectId && parsedSecurityGroups.push(sg.emailAddress || sg.userPrincipalName ? {
                        id: sg.objectId,
                        name: sg.displayName,
                        emailAddress: sg.emailAddress ? sg.emailAddress : sg.userPrincipalName,
                        isEmailEnabled: !0
                    } : {
                        id: sg.objectId,
                        name: sg.displayName,
                        isEmailEnabled: !1
                    });
                }
                return parsedSecurityGroups;
            }, DelegatedWorkspaceSettingsScopeComponent.prototype.hasAllowedSecurityGroups = function(securityGroups) {
                return !!securityGroups && securityGroups.length > 0;
            }, DelegatedWorkspaceSettingsScopeComponent.prototype.hasDeniedSecurityGroups = function(securityGroups) {
                return !!securityGroups && securityGroups.length > 0;
            }, DelegatedWorkspaceSettingsScopeComponent.\u0275fac = function(t) {
                return new (t || DelegatedWorkspaceSettingsScopeComponent)(core["\u0275\u0275directiveInject"](tri_workspace_settings.X), core["\u0275\u0275directiveInject"](errorService.g), core["\u0275\u0275directiveInject"](localization_service.z));
            }, DelegatedWorkspaceSettingsScopeComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: DelegatedWorkspaceSettingsScopeComponent,
                selectors: [ [ "tri-delegated-workspace-settings-scope" ] ],
                inputs: {
                    setting: "setting",
                    userPicker: "userPicker"
                },
                outputs: {
                    closeScopeEditEmitter: "closeScopeEditEmitter"
                },
                decls: 27,
                vars: 23,
                consts: [ [ 1, "settingTitle" ], [ 1, "scopeDescription" ], [ 1, "applyToScope", 3, "for" ], [ 3, "id" ], [ "type", "radio", 1, "radio-button-input", 3, "checked", "change" ], [ "type", "radio", "class", "radio-button-input", 3, "checked", "change", 4, "ngIf" ], [ 4, "ngIf" ], [ 1, "footer-button-container" ], [ "tri-button", "", "appearance", "primary", 1, "footer-button", 3, "disabled", "click" ], [ "tri-button", "", 1, "footer-button", 3, "click" ], [ "inputUserPicker", "" ], [ 1, "delegated-scope-input-container", "tri-flex", "tri-flex-col", "tri-relative" ], [ "id", "allowed-security-group-list-label", 1, "emailList" ], [ 1, "tri-flex" ], [ 4, "ngTemplateOutlet", "ngTemplateOutletContext" ], [ "id", "denied-security-group-list-setting-label", 1, "emailList" ], [ "aria-labelledby", "workspace-contact-list-setting-label", 1, "tri-flex-grow", "contact-list", 3, "placeholder", "value" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementStart"](0, "section")(1, "label", 0), core["\u0275\u0275text"](2), 
                    core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](3, "div", 1), 
                    core["\u0275\u0275text"](4), core["\u0275\u0275pipe"](5, "localize"), core["\u0275\u0275elementEnd"]()(), 
                    core["\u0275\u0275elementStart"](6, "section")(7, "label", 2), core["\u0275\u0275text"](8), 
                    core["\u0275\u0275pipe"](9, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](10, "tri-radio-group", 3)(11, "tri-radio-button", 4), 
                    core["\u0275\u0275listener"]("change", function($event) {
                        return ctx.onApplyToAll($event);
                    }), core["\u0275\u0275text"](12), core["\u0275\u0275pipe"](13, "localize"), core["\u0275\u0275elementEnd"](), 
                    core["\u0275\u0275template"](14, DelegatedWorkspaceSettingsScopeComponent_tri_radio_button_14_Template, 3, 4, "tri-radio-button", 5), 
                    core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275template"](15, DelegatedWorkspaceSettingsScopeComponent_section_15_Template, 10, 13, "section", 6), 
                    core["\u0275\u0275template"](16, DelegatedWorkspaceSettingsScopeComponent_section_16_Template, 10, 13, "section", 6), 
                    core["\u0275\u0275elementStart"](17, "section")(18, "div", 7)(19, "button", 8), 
                    core["\u0275\u0275listener"]("click", function() {
                        return ctx.confirmScope();
                    }), core["\u0275\u0275text"](20), core["\u0275\u0275pipe"](21, "localize"), core["\u0275\u0275elementEnd"](), 
                    core["\u0275\u0275elementStart"](22, "button", 9), core["\u0275\u0275listener"]("click", function() {
                        return ctx.cancelScope();
                    }), core["\u0275\u0275text"](23), core["\u0275\u0275pipe"](24, "localize"), core["\u0275\u0275elementEnd"]()()(), 
                    core["\u0275\u0275template"](25, DelegatedWorkspaceSettingsScopeComponent_ng_template_25_Template, 1, 3, "ng-template", null, 10, core["\u0275\u0275templateRefExtractor"])), 
                    2 & rf && (core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](null == ctx.setting ? null : ctx.setting.title), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](5, 13, "WorkspaceDelegatedSettings_ScopeDescription")), 
                    core["\u0275\u0275advance"](3), core["\u0275\u0275propertyInterpolate1"]("for", "applyTo_", null == ctx.setting ? null : ctx.setting.switchName, ""), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](9, 15, "ConditionalFormattingDialog_TotalMatching_Label")), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275propertyInterpolate1"]("id", "applyTo_", null == ctx.setting ? null : ctx.setting.switchName, ""), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("checked", !ctx.isGranular), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](13, 17, "WorkspaceDelegatedSettings_ApplyToEntireWorkspace"), " "), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", null == ctx.setting ? null : ctx.setting.isGranular), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx.isGranular), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx.isGranular), 
                    core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("disabled", ctx.duplicatedGroupInAllowedSG || ctx.duplicatedGroupInDeniedSG), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](21, 19, "Confirm")), 
                    core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](24, 21, "Cancel_ButtonText")));
                },
                dependencies: [ common.NgIf, common.NgTemplateOutlet, tri_radio_button_component.Y, tri_radio_group_component.Z, localize_pipe.Y ],
                styles: [ "[_nghost-%COMP%]{width:100%;max-width:580px;position:relative;flex-grow:1}[_nghost-%COMP%]   .delegated-scope-input-container[_ngcontent-%COMP%]{margin-top:16px}[_nghost-%COMP%]   .delegated-scope-input-container[_ngcontent-%COMP%]     .mat-form-field.emails-list{border-radius:4px;outline:none;border:1px solid var(--colorNeutralStroke1)}[_nghost-%COMP%]   .delegated-scope-input-container[_ngcontent-%COMP%]     emails-list-modern{flex-grow:1}[_nghost-%COMP%]   .delegated-scope-input-container[_ngcontent-%COMP%]     input, [_nghost-%COMP%]   .delegated-scope-input-container[_ngcontent-%COMP%]     .chip-list{padding:6px 10px}[_nghost-%COMP%]   .settingTitle[_ngcontent-%COMP%]{font-weight:var(--subheadline-font-weight);font-size:var(--body-font-size);line-height:18px}[_nghost-%COMP%]   .scopeDescription[_ngcontent-%COMP%]{font-family:var(--fontFamilyBase);font-size:13px;line-height:18px;margin-top:8px;margin-bottom:8px}[_nghost-%COMP%]   .applyToScope[_ngcontent-%COMP%]{font-weight:var(--subheadline-font-weight);font-size:var(--body-font-size);line-height:26px}[_nghost-%COMP%]   .radio-button-input[_ngcontent-%COMP%]{height:20px;width:20px;margin-top:0}[_nghost-%COMP%]   .radio-label[_ngcontent-%COMP%]{font-weight:400;margin-bottom:0;margin-inline-start:9px;-webkit-user-select:none;-ms-user-select:none;user-select:none}[_nghost-%COMP%]   .emailList[_ngcontent-%COMP%]{font-weight:var(--subheadline-font-weight);font-size:var(--body-font-size);line-height:26px}[_nghost-%COMP%]   .emailList-footer[_ngcontent-%COMP%]{font-size:12px}[_nghost-%COMP%]   .emailList-footer-error[_ngcontent-%COMP%]{font-size:12px;color:var(--fluent-theme-error-dark-color)}[_nghost-%COMP%]   .footer-button-container[_ngcontent-%COMP%]{float:right;margin-top:30px}[_nghost-%COMP%]   .footer-button[_ngcontent-%COMP%]{margin-inline-end:8px}" ],
                changeDetection: 0
            }), DelegatedWorkspaceSettingsScopeComponent;
        }();
        function DelegatedWorkspaceSettingsGroupComponent_div_0_section_4_ng_container_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r6 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "tri-delegated-workspace-settings", 2), 
                core["\u0275\u0275listener"]("editSettingEmitter", function($event) {
                    core["\u0275\u0275restoreView"](_r6);
                    var ctx_r5 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r5.onEditSetting($event));
                }), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementContainerEnd"]();
            }
            if (2 & rf) {
                var setting_r4 = ctx.$implicit;
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("setting", setting_r4);
            }
        }
        function DelegatedWorkspaceSettingsGroupComponent_div_0_section_4_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "section"), core["\u0275\u0275template"](1, DelegatedWorkspaceSettingsGroupComponent_div_0_section_4_ng_container_1_Template, 2, 1, "ng-container", 1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r1 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngForOf", ctx_r1.selectedGroup.settings);
            }
        }
        function DelegatedWorkspaceSettingsGroupComponent_div_0_section_5_Template(rf, ctx) {
            if (1 & rf) {
                var _r8 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "section")(1, "tri-delegated-workspace-settings-scope", 3), 
                core["\u0275\u0275listener"]("closeScopeEditEmitter", function($event) {
                    core["\u0275\u0275restoreView"](_r8);
                    var ctx_r7 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r7.onCloseScope($event));
                }), core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var ctx_r2 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("userPicker", ctx_r2.userPicker)("setting", ctx_r2.selectedSetting);
            }
        }
        function DelegatedWorkspaceSettingsGroupComponent_div_0_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div")(1, "h3"), core["\u0275\u0275text"](2), 
            core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](4, DelegatedWorkspaceSettingsGroupComponent_div_0_section_4_Template, 2, 1, "section", 0), 
            core["\u0275\u0275template"](5, DelegatedWorkspaceSettingsGroupComponent_div_0_section_5_Template, 2, 2, "section", 0), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](ctx_r0.inEditSettingScope ? core["\u0275\u0275pipeBind1"](3, 3, "WorkspaceDelegatedSettings_ScopeConfirm") : ctx_r0.selectedGroup.title), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", !ctx_r0.inEditSettingScope), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx_r0.inEditSettingScope);
            }
        }
        var DelegatedWorkspaceSettingsGroupComponent = function() {
            function DelegatedWorkspaceSettingsGroupComponent(workspaceSettingsService) {
                this.workspaceSettingsService = workspaceSettingsService, this.delegatedSettingsSubscription = void 0, 
                this.delegatedSettings$ = this.workspaceSettingsService.delegatedSettings$, this.selectedGroup = void 0, 
                this.selectedSetting = void 0, this.inEditSettingScope = !1;
            }
            return DelegatedWorkspaceSettingsGroupComponent.prototype.ngOnChanges = function() {
                var _this = this;
                this.delegatedSettingsSubscription = this.delegatedSettings$.subscribe(function(settings) {
                    var _a;
                    null === (_a = null == settings ? void 0 : settings.groups) || void 0 === _a || _a.forEach(function(group) {
                        group.name === _this.selectedTab && (_this.selectedGroup = group, _this.inEditSettingScope = !1, 
                        _this.selectedSetting = void 0);
                    });
                });
            }, DelegatedWorkspaceSettingsGroupComponent.prototype.ngOnDestroy = function() {
                var _a;
                null === (_a = this.delegatedSettingsSubscription) || void 0 === _a || _a.unsubscribe();
            }, DelegatedWorkspaceSettingsGroupComponent.prototype.onEditSetting = function(setting) {
                this.selectedSetting = setting, this.inEditSettingScope = !0;
            }, DelegatedWorkspaceSettingsGroupComponent.prototype.onCloseScope = function(cancel) {
                cancel && (this.selectedSetting = void 0), this.inEditSettingScope = !1;
            }, DelegatedWorkspaceSettingsGroupComponent.\u0275fac = function(t) {
                return new (t || DelegatedWorkspaceSettingsGroupComponent)(core["\u0275\u0275directiveInject"](tri_workspace_settings.X));
            }, DelegatedWorkspaceSettingsGroupComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: DelegatedWorkspaceSettingsGroupComponent,
                selectors: [ [ "tri-delegated-workspace-settings-group" ] ],
                inputs: {
                    selectedTab: "selectedTab",
                    userPicker: "userPicker"
                },
                features: [ core["\u0275\u0275NgOnChangesFeature"] ],
                decls: 1,
                vars: 1,
                consts: [ [ 4, "ngIf" ], [ 4, "ngFor", "ngForOf" ], [ 3, "setting", "editSettingEmitter" ], [ 3, "userPicker", "setting", "closeScopeEditEmitter" ] ],
                template: function(rf, ctx) {
                    1 & rf && core["\u0275\u0275template"](0, DelegatedWorkspaceSettingsGroupComponent_div_0_Template, 6, 5, "div", 0), 
                    2 & rf && core["\u0275\u0275property"]("ngIf", !!ctx.selectedGroup);
                },
                dependencies: [ common.NgForOf, common.NgIf, DelegatedWorkspaceSettingsComponent, DelegatedWorkspaceSettingsScopeComponent, localize_pipe.Y ],
                styles: [ "[_nghost-%COMP%]{width:100%;max-width:580px;position:relative;flex-grow:1}" ],
                changeDetection: 0
            }), DelegatedWorkspaceSettingsGroupComponent;
        }();
        function WorkspaceShellSettingsViewComponent_ng_container_0_Template(rf, ctx) {
            if (1 & rf) {
                var _r4 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "tri-universal-workspace-settings", 1), 
                core["\u0275\u0275listener"]("closeSettings", function() {
                    core["\u0275\u0275restoreView"](_r4);
                    var ctx_r3 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r3.onCloseSettings());
                }), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementContainerEnd"]();
            }
            if (2 & rf) {
                var ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("selectedGroup", ctx_r0.selectedUniversalSettingKey)("userPicker", ctx_r0.userPicker);
            }
        }
        function WorkspaceShellSettingsViewComponent_ng_container_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275element"](1, "tri-powerbi-workspace-settings", 2), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var ctx_r1 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("selectedTab", ctx_r1.selectedPBISettingKey);
            }
        }
        function WorkspaceShellSettingsViewComponent_ng_container_2_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275element"](1, "tri-delegated-workspace-settings-group", 3), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var ctx_r2 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("selectedTab", ctx_r2.selectedDelegatedSettingKey)("userPicker", ctx_r2.userPicker);
            }
        }
        var WorkspaceShellSettingsViewComponent = function() {
            function WorkspaceShellSettingsViewComponent(workspaceSettingsService, changeDetectorRef) {
                this.workspaceSettingsService = workspaceSettingsService, this.changeDetectorRef = changeDetectorRef, 
                this.selectedUniversalSettingKey = void 0, this.selectedPBISettingKey = void 0, 
                this.selectedDelegatedSettingKey = void 0, this.workspaceObjectId = "", this.closeSettings = new core.EventEmitter;
            }
            return WorkspaceShellSettingsViewComponent.prototype.ngOnChanges = function(changes) {
                var _a, _b;
                (null === (_a = null == changes ? void 0 : changes.workspaceObjectId) || void 0 === _a ? void 0 : _a.currentValue) && (null === (_b = changes.workspaceObjectId) || void 0 === _b ? void 0 : _b.previousValue) !== changes.workspaceObjectId.currentValue && this.workspaceSettingsService.initializeWorkspace(changes.workspaceObjectId.currentValue), 
                this.changeDetectorRef.detectChanges();
            }, WorkspaceShellSettingsViewComponent.prototype.onCloseSettings = function() {
                this.closeSettings.emit();
            }, WorkspaceShellSettingsViewComponent.\u0275fac = function(t) {
                return new (t || WorkspaceShellSettingsViewComponent)(core["\u0275\u0275directiveInject"](tri_workspace_settings.X), core["\u0275\u0275directiveInject"](core.ChangeDetectorRef));
            }, WorkspaceShellSettingsViewComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: WorkspaceShellSettingsViewComponent,
                selectors: [ [ "tri-workspace-shell-settings-view" ] ],
                inputs: {
                    selectedUniversalSettingKey: "selectedUniversalSettingKey",
                    selectedPBISettingKey: "selectedPBISettingKey",
                    selectedDelegatedSettingKey: "selectedDelegatedSettingKey",
                    workspaceObjectId: "workspaceObjectId",
                    userPicker: "userPicker"
                },
                outputs: {
                    closeSettings: "closeSettings"
                },
                features: [ core["\u0275\u0275NgOnChangesFeature"] ],
                decls: 3,
                vars: 3,
                consts: [ [ 4, "ngIf" ], [ 3, "selectedGroup", "userPicker", "closeSettings" ], [ 3, "selectedTab" ], [ 3, "selectedTab", "userPicker" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275template"](0, WorkspaceShellSettingsViewComponent_ng_container_0_Template, 2, 2, "ng-container", 0), 
                    core["\u0275\u0275template"](1, WorkspaceShellSettingsViewComponent_ng_container_1_Template, 2, 1, "ng-container", 0), 
                    core["\u0275\u0275template"](2, WorkspaceShellSettingsViewComponent_ng_container_2_Template, 2, 2, "ng-container", 0)), 
                    2 & rf && (core["\u0275\u0275property"]("ngIf", !!ctx.selectedUniversalSettingKey), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !!ctx.selectedPBISettingKey), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !!ctx.selectedDelegatedSettingKey));
                },
                dependencies: [ common.NgIf, UniversalWorkspaceSettingsComponent, PowerBIWorkspaceSettingsComponent, DelegatedWorkspaceSettingsGroupComponent ],
                styles: [ "[_nghost-%COMP%]{display:flex;width:100%}  .scroller{width:100%;overflow-x:auto;padding-right:32px}  .manageEmbedTrident{overflow:inherit;min-width:700px!important}@media screen and (max-width: 950px){  .manageEmbedTrident{min-width:calc(100% - 20px)!important}}  .fogofscroll{position:absolute;width:48px;height:100%;top:0;right:0;pointer-events:none;padding-bottom:24px;z-index:500}  .fogofscroll .fog{height:100%;width:100%;background:linear-gradient(90deg,rgba(255,255,255,0) 0%,rgb(255,255,255) 79%,rgb(255,255,255) 100%)}[_nghost-%COMP%]     .tab-title{margin-bottom:24px;display:flex;flex-direction:column;gap:4px}[_nghost-%COMP%]     .section-container{display:flex;flex-direction:column;gap:32px}[_nghost-%COMP%]     .section-title{margin-bottom:16px;display:flex;flex-direction:column;gap:4px}[_nghost-%COMP%]     .required-star{color:var(--globalColorRedShade10)}[_nghost-%COMP%]     .inline-autosave-spinner{margin-left:16px}[_nghost-%COMP%]     .configuration-container{padding:8px;border-radius:4px;border:1px solid var(--colorNeutralStroke2)}[_nghost-%COMP%]     .configuration-container .anchor-icon{display:flex;margin-right:8px;fill:var(--tridentColor80)}[_nghost-%COMP%]     .configuration-container .container-right-part{overflow:hidden}[_nghost-%COMP%]     .configuration-container .title{margin-bottom:3px}[_nghost-%COMP%]     .configuration-container .summary-title{display:flex;justify-content:space-between}[_nghost-%COMP%]     .configuration-container .content{margin:8px 8px 8px 0;display:flex;flex-direction:column;gap:16px}[_nghost-%COMP%]     .configuration-container .footer{padding:8px 0;margin-top:10px;gap:8px;display:flex}" ],
                changeDetection: 0
            }), WorkspaceShellSettingsViewComponent;
        }();
    }
} ]);