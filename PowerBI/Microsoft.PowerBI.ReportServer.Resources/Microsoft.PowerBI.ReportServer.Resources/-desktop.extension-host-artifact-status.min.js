"use strict";

(self.webpackChunkdesktop = self.webpackChunkdesktop || []).push([ [ "extension-host-artifact-status" ], {
    24208: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, {
            ExtensionHostArtifactStatusModule: function() {
                return ExtensionHostArtifactStatusModule;
            }
        });
        var common = __webpack_require__(77476), ngrx_effects = __webpack_require__(60756), tap = __webpack_require__(17653), src = __webpack_require__(76290), artifact_src = __webpack_require__(25082), index_core = __webpack_require__(73471), host_proxy_src = __webpack_require__(17899), extension_host_artifact_status_actions = __webpack_require__(37493), core = __webpack_require__(50423), ngrx_store = __webpack_require__(85732), ExtensionHostArtifactStatusEffects = function() {
            function ExtensionHostArtifactStatusEffects(actions$, store) {
                var _this = this;
                this.actions$ = actions$, this.store = store, this.onUpdateSelectedArtifactStateReceived$ = (0, 
                ngrx_effects.GW)(function() {
                    return _this.actions$.pipe((0, host_proxy_src.pR)(index_core.Vm.updateSelectedArtifactState), (0, 
                    tap.b)(function(_a) {
                        return _this.store.dispatch((0, artifact_src.pM)({
                            objectId: _a.artifactObjectId,
                            savingStatus: _a.savingStatus
                        }));
                    }));
                }, {
                    dispatch: !1
                }), this.selectArtifact$ = (0, ngrx_effects.GW)(function() {
                    return _this.actions$.pipe((0, host_proxy_src.UF)(extension_host_artifact_status_actions.A), (0, 
                    tap.b)(function(_a) {
                        var objectId = _a.objectId;
                        objectId && _this.store.dispatch(src.f9({
                            recentUpdate: {
                                objectId,
                                lastAccessedTime: new Date
                            }
                        })), _this.store.dispatch((0, artifact_src.AM)({
                            objectId
                        }));
                    }));
                }, {
                    dispatch: !1
                });
            }
            return ExtensionHostArtifactStatusEffects.\u0275fac = function(t) {
                return new (t || ExtensionHostArtifactStatusEffects)(core["\u0275\u0275inject"](ngrx_effects.eX), core["\u0275\u0275inject"](ngrx_store.yh));
            }, ExtensionHostArtifactStatusEffects.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: ExtensionHostArtifactStatusEffects,
                factory: ExtensionHostArtifactStatusEffects.\u0275fac
            }), ExtensionHostArtifactStatusEffects;
        }(), ExtensionHostArtifactStatusModule = function() {
            function ExtensionHostArtifactStatusModule() {}
            return ExtensionHostArtifactStatusModule.\u0275fac = function(t) {
                return new (t || ExtensionHostArtifactStatusModule);
            }, ExtensionHostArtifactStatusModule.\u0275mod = core["\u0275\u0275defineNgModule"]({
                type: ExtensionHostArtifactStatusModule
            }), ExtensionHostArtifactStatusModule.\u0275inj = core["\u0275\u0275defineInjector"]({
                imports: [ common.CommonModule, ngrx_effects.sQ.forFeature([ ExtensionHostArtifactStatusEffects ]) ]
            }), ExtensionHostArtifactStatusModule;
        }();
    }
} ]);