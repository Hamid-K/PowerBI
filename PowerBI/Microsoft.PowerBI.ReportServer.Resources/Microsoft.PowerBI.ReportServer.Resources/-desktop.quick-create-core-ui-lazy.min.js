"use strict";

(self.webpackChunkdesktop = self.webpackChunkdesktop || []).push([ [ "quick-create-core-ui-lazy" ], {
    76592: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            q: function() {
                return serialize;
            },
            v: function() {
                return deserialize;
            }
        });
        var _visitors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(29767), _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(3468), _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(62458);
        function serialize(analysisDefinition) {
            return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(analysisDefinition, "analysisDefinition"), 
            (0, _visitors__WEBPACK_IMPORTED_MODULE_1__.rL)(analysisDefinition, new AnalysisDefinitionSerializer);
        }
        function deserialize(analysisResult) {
            return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(analysisResult, "analysisResult"), 
            (0, _visitors__WEBPACK_IMPORTED_MODULE_1__.D$)(analysisResult, new AnalysisResultDeserializer);
        }
        var AnalysisDefinitionSerializer = function() {
            function AnalysisDefinitionSerializer() {}
            return AnalysisDefinitionSerializer.prototype.visitExplore = function(exploreDefinition) {
                return {
                    Explore: {
                        Options: exploreDefinition.options,
                        RequestedInsights: exploreDefinition.requestedInsights,
                        TimeoutInMS: exploreDefinition.timeoutInMS
                    }
                };
            }, AnalysisDefinitionSerializer.prototype.visitGetRelated = function(relatedInsightsDefinition) {
                return {
                    GetRelatedInsights: {
                        Options: relatedInsightsDefinition.options,
                        RequestedInsights: relatedInsightsDefinition.requestedInsights,
                        TimeoutInMS: relatedInsightsDefinition.timeoutInMS,
                        TopicQuery: _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.serializeQuery(relatedInsightsDefinition.topicQuery)
                    }
                };
            }, AnalysisDefinitionSerializer.prototype.visitExplainChange = function(changeAnalysisDefinition) {
                return {
                    ExplainChange: {
                        RequestedInsights: changeAnalysisDefinition.requestedInsights,
                        TimeoutInMS: changeAnalysisDefinition.timeoutInMS,
                        Measure: _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.serializeExpr(changeAnalysisDefinition.measure),
                        Reference: _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.serializeFilter(changeAnalysisDefinition.reference),
                        Target: _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.serializeFilter(changeAnalysisDefinition.target),
                        ParentSpace: changeAnalysisDefinition.parentSpace ? _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.serializeFilter(changeAnalysisDefinition.parentSpace) : void 0,
                        ContinuationToken: changeAnalysisDefinition.continuationToken ? {
                            Start: changeAnalysisDefinition.continuationToken.start,
                            Include: changeAnalysisDefinition.continuationToken.include
                        } : void 0
                    }
                };
            }, AnalysisDefinitionSerializer.prototype.visitFindDistributionFactors = function(findDistributionFactorsDefinition) {
                return {
                    FindDistributionFactors: {
                        RequestedInsights: findDistributionFactorsDefinition.requestedInsights,
                        TimeoutInMS: findDistributionFactorsDefinition.timeoutInMS,
                        Measure: _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.serializeExpr(findDistributionFactorsDefinition.measure),
                        ParentSpace: findDistributionFactorsDefinition.parentSpace ? _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.serializeFilter(findDistributionFactorsDefinition.parentSpace) : void 0,
                        Dimension: _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.serializeExpr(findDistributionFactorsDefinition.dimension),
                        Candidates: findDistributionFactorsDefinition.candidates ? _.map(findDistributionFactorsDefinition.candidates, function(c) {
                            return _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.serializeExpr(c);
                        }) : void 0,
                        ContinuationToken: findDistributionFactorsDefinition.continuationToken ? {
                            Start: findDistributionFactorsDefinition.continuationToken.start,
                            Include: findDistributionFactorsDefinition.continuationToken.include
                        } : void 0
                    }
                };
            }, AnalysisDefinitionSerializer.prototype.visitFindKeyDrivers = function(keyDriversDefinition) {
                return {
                    FindKeyDrivers: {
                        Target: keyDriversDefinition.target ? {
                            Categorical: keyDriversDefinition.target.categorical ? {
                                TargetValue: _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.serializeFilter(keyDriversDefinition.target.categorical.targetValue)
                            } : void 0,
                            Numeric: keyDriversDefinition.target.continuous ? {
                                Expression: _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.serializeExpr(keyDriversDefinition.target.continuous.expression),
                                Kind: keyDriversDefinition.target.continuous.kind
                            } : void 0
                        } : void 0,
                        Filters: keyDriversDefinition.filters ? _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.serializeFilter(keyDriversDefinition.filters) : void 0,
                        Predictors: keyDriversDefinition.predictors ? _.map(keyDriversDefinition.predictors, function(p) {
                            return _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.serializeExpr(p);
                        }) : void 0,
                        Details: keyDriversDefinition.details ? _.map(keyDriversDefinition.details, function(d) {
                            return _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.serializeExpr(d);
                        }) : void 0,
                        Options: keyDriversDefinition.options
                    }
                };
            }, AnalysisDefinitionSerializer.prototype.visitDecompositionTree = function(decompositionAnalysisDefinition) {
                return {
                    FindDecompositions: {
                        Value: _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.serializeExpr(decompositionAnalysisDefinition.target),
                        Dimensions: decompositionAnalysisDefinition.dimensions ? _.map(decompositionAnalysisDefinition.dimensions, function(dimension) {
                            return _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.serializeExpr(dimension);
                        }) : void 0,
                        Filters: decompositionAnalysisDefinition.filters ? _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.serializeFilter(decompositionAnalysisDefinition.filters) : void 0,
                        Path: decompositionAnalysisDefinition.path ? _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.serializeFilter(decompositionAnalysisDefinition.path) : void 0,
                        Methods: decompositionAnalysisDefinition.methods,
                        Strategy: decompositionAnalysisDefinition.strategy,
                        ContinuationToken: decompositionAnalysisDefinition.continuationToken ? {
                            Start: decompositionAnalysisDefinition.continuationToken.start,
                            Include: decompositionAnalysisDefinition.continuationToken.include
                        } : void 0
                    }
                };
            }, AnalysisDefinitionSerializer.prototype.visitGenerateSummaries = function(summaryAnalysisDefinition) {
                var _a;
                return {
                    GenerateSummaries: {
                        Subjects: summaryAnalysisDefinition.subjects ? _.map(summaryAnalysisDefinition.subjects, function(s) {
                            return {
                                Name: s.name,
                                Kind: s.kind,
                                Properties: s.properties ? _.map(s.properties, function(p) {
                                    return {
                                        DisplayName: p.displayName,
                                        Kind: p.kind,
                                        RoleKind: p.roleKind,
                                        Expression: _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.serializeExpr(p.expression),
                                        Id: p.id
                                    };
                                }) : void 0,
                                Weight: s.weight,
                                Filters: s.filters ? _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.serializeFilter(s.filters) : void 0
                            };
                        }) : void 0,
                        MaxTotalTemplates: summaryAnalysisDefinition.maxTotalTemplates,
                        MaxTemplatesPerSubject: summaryAnalysisDefinition.maxTemplatesPerSubject,
                        AllowedTemplates: summaryAnalysisDefinition.allowedTemplates ? _.map(summaryAnalysisDefinition.allowedTemplates, function(template) {
                            return {
                                Category: template.category,
                                SubCategory: template.subCategory
                            };
                        }) : void 0,
                        CultureName: null !== (_a = summaryAnalysisDefinition.cultureName) && void 0 !== _a ? _a : "en-US",
                        AllowTemplateReuse: !!summaryAnalysisDefinition.allowTemplateReuse
                    }
                };
            }, AnalysisDefinitionSerializer.prototype.visitExplainAnomalies = function(anomalyAnalysisDefinition) {
                return {
                    ExplainAnomalies: {
                        Measure: _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.serializeExpr(anomalyAnalysisDefinition.measure),
                        Filters: anomalyAnalysisDefinition.filters ? _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.serializeFilter(anomalyAnalysisDefinition.filters) : void 0,
                        MeasureGranularity: _.map(anomalyAnalysisDefinition.measureGranularity, function(expr) {
                            return _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.serializeExpr(expr);
                        }),
                        GranularityScalarKey: _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.serializeExpr(anomalyAnalysisDefinition.granularityScalarKey),
                        Anomalies: _.map(anomalyAnalysisDefinition.anomalies, function(anomaly) {
                            return {
                                Location: _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.serializeExpr(anomaly.location),
                                Value: _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.serializeExpr(anomaly.value),
                                ExpectedValue: _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.serializeExpr(anomaly.expectedValue),
                                ExplanationWindow: _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.serializeFilter(anomaly.explanationWindow)
                            };
                        }),
                        Predictors: _.map(anomalyAnalysisDefinition.predictors, function(expr) {
                            return _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.serializeExpr(expr);
                        }),
                        Sensitivity: anomalyAnalysisDefinition.sensitivity,
                        SeasonalityPeriod: anomalyAnalysisDefinition.seasonalityPeriod
                    }
                };
            }, AnalysisDefinitionSerializer.prototype.visitSuggestCompatibleFields = function(compatibleFieldsAnalysisDefinition) {
                return {
                    SuggestCompatibleFields: {
                        Measures: compatibleFieldsAnalysisDefinition.measures,
                        Dimensions: compatibleFieldsAnalysisDefinition.dimensions
                    }
                };
            }, AnalysisDefinitionSerializer.prototype.visitSuggestQueries = function(querySuggestionAnalysisDefinition) {
                return {
                    SuggestQueries: {
                        RequiredFields: _.map(querySuggestionAnalysisDefinition.requiredFields, function(expr) {
                            return _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.serializeExpr(expr);
                        }),
                        Options: querySuggestionAnalysisDefinition.options
                    }
                };
            }, AnalysisDefinitionSerializer.prototype.visitExplainVarianceToTarget = function(varianceToTargetAnalysisDefinition) {
                return {
                    ExplainVarianceToTarget: {
                        Value: _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.serializeExpr(varianceToTargetAnalysisDefinition.value),
                        Target: {
                            Direction: varianceToTargetAnalysisDefinition.target.direction,
                            Expression: varianceToTargetAnalysisDefinition.target.expr ? _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.serializeExpr(varianceToTargetAnalysisDefinition.target.expr) : void 0
                        },
                        Scope: _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.serializeFilter(varianceToTargetAnalysisDefinition.scope),
                        Filters: varianceToTargetAnalysisDefinition.filters ? _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.serializeFilter(varianceToTargetAnalysisDefinition.filters) : void 0,
                        Predictors: _.map(varianceToTargetAnalysisDefinition.predictors, function(expr) {
                            return _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.serializeExpr(expr);
                        })
                    }
                };
            }, AnalysisDefinitionSerializer;
        }(), AnalysisResultDeserializer = function() {
            function AnalysisResultDeserializer() {}
            return AnalysisResultDeserializer.prototype.visitExplore = function(exploreResult) {
                return {
                    explore: {
                        insights: deserializeMiningInsights(exploreResult.Insights),
                        warnings: exploreResult.Warnings
                    }
                };
            }, AnalysisResultDeserializer.prototype.visitGetRelated = function(relatedInsightsResult) {
                return {
                    getRelatedInsights: {
                        insights: deserializeMiningInsights(relatedInsightsResult.Insights),
                        warnings: relatedInsightsResult.Warnings
                    }
                };
            }, AnalysisResultDeserializer.prototype.visitDistributionFactors = function(distributionFactorsResult) {
                return {
                    findDistributionFactors: {
                        insights: deserializeMiningInsights(distributionFactorsResult.Insights),
                        warnings: distributionFactorsResult.Warnings,
                        continuationToken: deserializeContinuationToken(distributionFactorsResult.ContinuationToken),
                        executionStatistics: deserializeExecutionStatistics(distributionFactorsResult.ExecutionStatistics)
                    }
                };
            }, AnalysisResultDeserializer.prototype.visitChange = function(changeAnalysisResult) {
                return {
                    explainChange: {
                        insights: deserializeMiningInsights(changeAnalysisResult.Insights),
                        warnings: changeAnalysisResult.Warnings,
                        metadataWarnings: changeAnalysisResult.MetadataWarnings,
                        continuationToken: deserializeContinuationToken(changeAnalysisResult.ContinuationToken),
                        executionStatistics: deserializeExecutionStatistics(changeAnalysisResult.ExecutionStatistics)
                    }
                };
            }, AnalysisResultDeserializer.prototype.visitKeyDrivers = function(keyDriversResult) {
                return {
                    keyDrivers: {
                        drivers: _.map(keyDriversResult.Drivers, function(k) {
                            return {
                                field: _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.deserializeExpr(k.Field),
                                scale: k.Scale,
                                score: k.Score,
                                value: k.Value ? _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.deserializeFilter(k.Value) : void 0,
                                groupIndex: k.GroupIndex,
                                support: k.Support
                            };
                        }),
                        profiles: _.map(keyDriversResult.Profiles, function(p) {
                            return {
                                filters: _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.deserializeFilter(p.Filters)
                            };
                        }),
                        groups: keyDriversResult.Groups ? _.map(keyDriversResult.Groups, function(g) {
                            return {
                                expression: _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.deserializeExpr(g.Expression),
                                groups: _.map(g.Groups, function(group) {
                                    return _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.deserializeFilter(group);
                                })
                            };
                        }) : void 0,
                        simplifiedAggregates: keyDriversResult.SimplifiedAggregates ? _.map(keyDriversResult.SimplifiedAggregates, function(sa) {
                            return {
                                original: _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.deserializeExpr(sa.Original),
                                target: _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.deserializeExpr(sa.Target)
                            };
                        }) : void 0,
                        measureGranularity: keyDriversResult.MeasureGranularity ? _.map(keyDriversResult.MeasureGranularity, function(m) {
                            return _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.deserializeExpr(m);
                        }) : void 0,
                        warnings: keyDriversResult.Warnings
                    }
                };
            }, AnalysisResultDeserializer.prototype.visitDecompositionTree = function(decompositionAnalysisResult) {
                return {
                    findDecompositions: {
                        decompositions: _.map(decompositionAnalysisResult.Decompositions, function(decomposition) {
                            return {
                                dimension: decomposition.Dimension ? _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.deserializeExpr(decomposition.Dimension) : void 0,
                                value: decomposition.Value ? _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.deserializeFilter(decomposition.Value) : void 0,
                                score: decomposition.Score
                            };
                        }),
                        warnings: decompositionAnalysisResult.Warnings,
                        continuationToken: deserializeContinuationToken(decompositionAnalysisResult.ContinuationToken),
                        executionStatistics: deserializeExecutionStatistics(decompositionAnalysisResult.ExecutionStatistics)
                    }
                };
            }, AnalysisResultDeserializer.prototype.visitSummaries = function(summaryAnalysisResult) {
                return {
                    generateSummaries: {
                        values: summaryAnalysisResult.Values ? _.map(summaryAnalysisResult.Values, function(value) {
                            var _a, _b, valueQuery = summaryAnalysisResult.Queries[value.QueryIndex];
                            return {
                                name: value.Name,
                                selectName: value.SelectName,
                                sourceSubjectName: value.SourceSubjectName,
                                description: value.Description,
                                query: valueQuery ? _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.deserializeQuery(valueQuery) : void 0,
                                formatString: null !== (_b = null === (_a = value.Format) || void 0 === _a ? void 0 : _a.FormatString) && void 0 !== _b ? _b : void 0,
                                type: value.Type
                            };
                        }) : void 0,
                        summaries: summaryAnalysisResult.Summaries ? _.map(summaryAnalysisResult.Summaries, function(summary) {
                            return {
                                standardSummary: summary.StandardSummary ? (standardSummary = summary.StandardSummary, 
                                {
                                    sourceSubjectName: standardSummary.SourceSubjectName,
                                    description: standardSummary.Description,
                                    summaryElements: standardSummary.SummaryElements ? deserializeSummaryElements(standardSummary.SummaryElements) : void 0,
                                    properties: standardSummary.Properties ? deserializeSummaryProperties(standardSummary.Properties) : void 0,
                                    title: standardSummary.Title ? deserializeSummaryElementSequence(standardSummary.Title) : void 0
                                }) : void 0,
                                conditionalSummary: summary.ConditionalSummary ? (conditionalSummary = summary.ConditionalSummary, 
                                {
                                    sourceSubjectName: conditionalSummary.SourceSubjectName,
                                    description: conditionalSummary.Description,
                                    conditionValueName: conditionalSummary.ConditionValueName,
                                    cases: conditionalSummary.Cases ? _.map(conditionalSummary.Cases, function(conditionalCase) {
                                        return {
                                            condition: conditionalCase.Condition ? _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.deserializeExpr(conditionalCase.Condition) : void 0,
                                            summaryElements: conditionalCase.SummaryElements ? deserializeSummaryElements(conditionalCase.SummaryElements) : void 0
                                        };
                                    }) : void 0,
                                    defaultCase: conditionalSummary.DefaultCase ? deserializeSummaryElements(conditionalSummary.DefaultCase) : void 0,
                                    properties: conditionalSummary.Properties ? deserializeSummaryProperties(conditionalSummary.Properties) : void 0,
                                    title: conditionalSummary.Title ? deserializeSummaryElementSequence(conditionalSummary.Title) : void 0
                                }) : void 0
                            };
                            var conditionalSummary, standardSummary;
                        }) : void 0
                    }
                };
            }, AnalysisResultDeserializer.prototype.visitExplainAnomalies = function(anomalyAnalysisResult) {
                return {
                    explainAnomalies: {
                        explanations: _.map(anomalyAnalysisResult.Explanations, function(explanation) {
                            return {
                                anomalyIndex: explanation.AnomalyIndex,
                                factors: _.map(explanation.Factors, function(factor) {
                                    return {
                                        field: _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.deserializeExpr(factor.Field),
                                        value: _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.deserializeFilter(factor.Value)
                                    };
                                }),
                                value: _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.deserializeExpr(explanation.Value),
                                expectedValue: _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.deserializeExpr(explanation.ExpectedValue),
                                score: explanation.Score
                            };
                        })
                    }
                };
            }, AnalysisResultDeserializer.prototype.visitSuggestCompatibleFields = function(compatibleFieldsAnalysisResult) {
                return {
                    suggestCompatibleFields: {
                        dimensions: compatibleFieldsAnalysisResult.Dimensions ? _.map(compatibleFieldsAnalysisResult.Dimensions, function(d) {
                            return _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.deserializeExpr(d);
                        }) : void 0,
                        measures: compatibleFieldsAnalysisResult.Measures ? _.map(compatibleFieldsAnalysisResult.Measures, function(m) {
                            return _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.deserializeExpr(m);
                        }) : void 0
                    }
                };
            }, AnalysisResultDeserializer.prototype.visitSuggestQueries = function(querySuggestionAnalysisResult) {
                return {
                    suggestQueries: {
                        requiredFields: _.map(querySuggestionAnalysisResult.RequiredFields, function(field) {
                            return _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.deserializeExpr(field);
                        }),
                        queries: _.map(querySuggestionAnalysisResult.Queries, function(suggestion) {
                            return {
                                dataQuery: (dataQuerySuggestion = suggestion.DataQuery, {
                                    query: _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.deserializeQuery(dataQuerySuggestion.Query),
                                    score: {
                                        base: dataQuerySuggestion.Score.Base,
                                        fieldMatch: dataQuerySuggestion.Score.FieldMatch,
                                        overall: dataQuerySuggestion.Score.Overall
                                    },
                                    dimensionGroupings: _.map(dataQuerySuggestion.DimensionGroupings, function(d) {
                                        return {
                                            expressionNames: d.ExpressionNames
                                        };
                                    }),
                                    statistics: dataQuerySuggestion.Statistics ? {
                                        count: dataQuerySuggestion.Statistics.Count,
                                        groupingStatistics: _.map(dataQuerySuggestion.Statistics.GroupingStatistics, function(g) {
                                            return {
                                                count: g.count
                                            };
                                        })
                                    } : void 0
                                })
                            };
                            var dataQuerySuggestion;
                        })
                    }
                };
            }, AnalysisResultDeserializer.prototype.visitExplainVarianceToTarget = function(varianceToTargetAnalysisResult) {
                return {
                    explainVarianceToTarget: {
                        explanations: _.map(varianceToTargetAnalysisResult.Explanations, function(explanation) {
                            return {
                                explanation: _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.deserializeFilter(explanation.Explanation),
                                measureValue: _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.deserializeExpr(explanation.MeasureValue),
                                targetValue: {
                                    direction: explanation.TargetValue.Direction,
                                    expr: explanation.TargetValue.Expression ? _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.deserializeExpr(explanation.TargetValue.Expression) : void 0
                                },
                                score: explanation.Score
                            };
                        }),
                        warnings: varianceToTargetAnalysisResult.Warnings
                    }
                };
            }, AnalysisResultDeserializer;
        }();
        function deserializeMiningInsights(miningInsights, useTopicRelevance) {
            return _.map(miningInsights, function(i) {
                return {
                    type: i.Type,
                    visualConfiguration: i.VisualConfiguration,
                    score: useTopicRelevance ? i.TopicRelevance : i.Score,
                    structuredDescription: _.map(i.StructuredDescription, function(d) {
                        return {
                            text: d.Text,
                            type: d.Type,
                            hover: d.Hover
                        };
                    }),
                    statistics: i.Statistics
                };
            });
        }
        function deserializeExecutionStatistics(executionStatistics) {
            if (executionStatistics) return {
                completionPercentage: executionStatistics.CompletionPercentage,
                total: executionStatistics.Total
            };
        }
        function deserializeSummaryElements(summaryElements) {
            return _.map(summaryElements, function(summaryElement) {
                return {
                    staticText: summaryElement.StaticText,
                    valueName: summaryElement.ValueName
                };
            });
        }
        function deserializeSummaryProperties(summaryProperties) {
            _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(summaryProperties, "summaryProperties");
            var subCategory = "Unknown", category = summaryProperties.Category;
            switch (category) {
              case "Anomaly":
              case "Trend":
              case "KPI Insights":
                subCategory = summaryProperties.Subcategory;
            }
            var followUpAnalysesDeserializer = new AnalysisDefinitionDeserializer;
            return {
                category,
                subcategory: subCategory,
                priority: summaryProperties.Priority,
                scoreExpr: summaryProperties.Score ? _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.deserializeExpr(summaryProperties.Score) : void 0,
                followUpActions: summaryProperties.FollowUpActions ? _.map(summaryProperties.FollowUpActions, function(followUpAction) {
                    var analysis = (0, _visitors__WEBPACK_IMPORTED_MODULE_1__.dH)(followUpAction.Analysis, followUpAnalysesDeserializer);
                    return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(analysis, "Unsupported follow up analysis."), 
                    {
                        analysis,
                        title: followUpAction.Title ? deserializeSummaryElementSequence(followUpAction.Title) : void 0,
                        description: followUpAction.Description ? deserializeSummaryElementSequence(followUpAction.Description) : void 0
                    };
                }) : void 0
            };
        }
        function deserializeSummaryElementSequence(summaryElementSequence) {
            if (_powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(summaryElementSequence, "summaryElementSequence"), 
            summaryElementSequence.Standard) return {
                standard: {
                    summaryElements: deserializeSummaryElements(summaryElementSequence.Standard.SummaryElements)
                }
            };
            var conditionalElementSequence = summaryElementSequence.Conditional;
            return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(conditionalElementSequence, "conditionalElementSequence"), 
            {
                conditional: {
                    conditionValueName: conditionalElementSequence.ConditionValueName,
                    cases: conditionalElementSequence.Cases ? _.map(conditionalElementSequence.Cases, function(conditionalCase) {
                        return {
                            condition: conditionalCase.Condition ? _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.deserializeExpr(conditionalCase.Condition) : void 0,
                            summaryElements: conditionalCase.SummaryElements ? deserializeSummaryElements(conditionalCase.SummaryElements) : void 0
                        };
                    }) : void 0,
                    defaultCase: conditionalElementSequence.DefaultCase ? deserializeSummaryElements(conditionalElementSequence.DefaultCase) : void 0
                }
            };
        }
        function deserializeContinuationToken(token) {
            if (token) return {
                start: token.Start,
                include: _.clone(token.Include)
            };
        }
        var AnalysisDefinitionDeserializer = function() {
            function AnalysisDefinitionDeserializer() {}
            return AnalysisDefinitionDeserializer.prototype.visitExplore = function(_exploreDefinition) {}, 
            AnalysisDefinitionDeserializer.prototype.visitGetRelated = function(_relatedInsightsDefinition) {}, 
            AnalysisDefinitionDeserializer.prototype.visitExplainChange = function(changeAnalysisDefinition) {
                return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(changeAnalysisDefinition, "changeAnalysisDefinition"), 
                {
                    explainChange: {
                        timeoutInMS: changeAnalysisDefinition.TimeoutInMS,
                        requestedInsights: changeAnalysisDefinition.RequestedInsights,
                        measure: _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.deserializeExpr(changeAnalysisDefinition.Measure),
                        reference: _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.deserializeFilter(changeAnalysisDefinition.Reference),
                        target: _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.deserializeFilter(changeAnalysisDefinition.Target),
                        parentSpace: changeAnalysisDefinition.ParentSpace ? _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.deserializeFilter(changeAnalysisDefinition.ParentSpace) : void 0,
                        referenceDimensionValue: void 0,
                        referenceValue: void 0,
                        continuationToken: deserializeContinuationToken(changeAnalysisDefinition.ContinuationToken)
                    }
                };
            }, AnalysisDefinitionDeserializer.prototype.visitFindDistributionFactors = function(_distributionFactorsDefinition) {}, 
            AnalysisDefinitionDeserializer.prototype.visitFindKeyDrivers = function(_keyDriversDefinition) {}, 
            AnalysisDefinitionDeserializer.prototype.visitDecompositionTree = function(_decompositionAnalysisDefinition) {}, 
            AnalysisDefinitionDeserializer.prototype.visitGenerateSummaries = function(_summaryAnalysisDefinition) {}, 
            AnalysisDefinitionDeserializer.prototype.visitExplainAnomalies = function(anomalyAnalysisDefinition) {
                return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(anomalyAnalysisDefinition, "anomalyAnalysisDefinition"), 
                {
                    explainAnomalies: {
                        measure: _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.deserializeExpr(anomalyAnalysisDefinition.Measure),
                        filters: anomalyAnalysisDefinition.Filters ? _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.deserializeFilter(anomalyAnalysisDefinition.Filters) : void 0,
                        measureGranularity: _.map(anomalyAnalysisDefinition.MeasureGranularity, function(granularity) {
                            return _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.deserializeExpr(granularity);
                        }),
                        granularityScalarKey: _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.deserializeExpr(anomalyAnalysisDefinition.GranularityScalarKey),
                        anomalies: _.map(anomalyAnalysisDefinition.Anomalies, function(anomaly) {
                            return {
                                location: _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.deserializeExpr(anomaly.Location),
                                value: _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.deserializeExpr(anomaly.Value),
                                expectedValue: _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.deserializeExpr(anomaly.ExpectedValue),
                                explanationWindow: _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.deserializeFilter(anomaly.ExplanationWindow)
                            };
                        }),
                        predictors: anomalyAnalysisDefinition.Predictors ? _.map(anomalyAnalysisDefinition.Predictors, function(predictor) {
                            return _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.deserializeExpr(predictor);
                        }) : void 0,
                        sensitivity: anomalyAnalysisDefinition.Sensitivity,
                        seasonalityPeriod: anomalyAnalysisDefinition.SeasonalityPeriod
                    }
                };
            }, AnalysisDefinitionDeserializer.prototype.visitSuggestCompatibleFields = function(_compatibleFieldsAnalysisDefinition) {}, 
            AnalysisDefinitionDeserializer.prototype.visitSuggestQueries = function(_querySuggestionAnalysisDefinition) {}, 
            AnalysisDefinitionDeserializer.prototype.visitExplainVarianceToTarget = function(varianceToTargetAnalysisDefinition) {
                return {
                    explainVarianceToTarget: {
                        value: _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.deserializeExpr(varianceToTargetAnalysisDefinition.Value),
                        target: {
                            direction: varianceToTargetAnalysisDefinition.Target.Direction,
                            expr: varianceToTargetAnalysisDefinition.Target.Expression ? _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.deserializeExpr(varianceToTargetAnalysisDefinition.Target.Expression) : void 0
                        },
                        scope: _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.deserializeFilter(varianceToTargetAnalysisDefinition.Scope),
                        filters: varianceToTargetAnalysisDefinition.Filters ? _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.deserializeFilter(varianceToTargetAnalysisDefinition.Filters) : void 0,
                        predictors: varianceToTargetAnalysisDefinition.Predictors ? _.map(varianceToTargetAnalysisDefinition.Predictors, function(predictor) {
                            return _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.deserializeExpr(predictor);
                        }) : void 0
                    }
                };
            }, AnalysisDefinitionDeserializer;
        }();
    },
    36716: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, {
            QuickCreateCoreUILazyModule: function() {
                return QuickCreateCoreUILazyModule;
            }
        });
        var tslib_es6 = __webpack_require__(81337), map = __webpack_require__(14172), pbi_menu_contracts = __webpack_require__(64560), fieldWellMenuViewModelFactory = __webpack_require__(67290), debug = __webpack_require__(62458), enums = __webpack_require__(46135), fieldExprChangeAggregateRewriter = __webpack_require__(95862), fieldExprRemoveAggregateRewriter = __webpack_require__(68509), sqExpr = __webpack_require__(94419), sqExprStaticMembers = __webpack_require__(74082), sqExprUtils = __webpack_require__(45334), insightsProxyPath = __webpack_require__(84688), analysis_serializer = __webpack_require__(76592), Utility = __webpack_require__(38078), sqExprEqualityVisitor = __webpack_require__(45413), core = __webpack_require__(50423), data_sources_service = __webpack_require__(83008), lazy_provider = __webpack_require__(57786), QuerySuggestionsService = function() {
            function QuerySuggestionsService(dataSources, lazyProvider, insightsProxyPathToken) {
                this.dataSources = dataSources, this.lazyProvider = lazyProvider, this.insightsProxyPathToken = insightsProxyPathToken, 
                this.pendingRequestsMap = new Map, this.hostId = Utility.b$.generateGuid();
            }
            return QuerySuggestionsService.prototype.getSuggestedQueries = function(exprs, runToCompletion) {
                var _a;
                return void 0 === runToCompletion && (runToCompletion = !1), (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var dataSourceDefinition, analysisDefinition, analysisRequest, newAnalysisRequestKey, result, resultKey, resultIsStale, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return [ 4, this.ensureInsightsService() ];

                          case 1:
                            return _b.sent(), dataSourceDefinition = {
                                dataSource: _.find(this.dataSources.get(), function(d) {
                                    return d.dsr;
                                })
                            }, analysisDefinition = {
                                suggestQueries: {
                                    requiredFields: _.uniqWith(exprs, sqExprEqualityVisitor.fS)
                                }
                            }, newAnalysisRequestKey = this.serializeAnalysisDefinition((analysisRequest = {
                                dataSourceDefinition,
                                analysisDefinition
                            }).analysisDefinition), !this.pendingRequestsMap.has(newAnalysisRequestKey) && _.size(this.pendingRequestsMap) > 0 ? [ 4, this.cancelPendingRequests() ] : [ 3, 3 ];

                          case 2:
                            _b.sent(), _b.label = 3;

                          case 3:
                            return runToCompletion || this.pendingRequestsMap.set(newAnalysisRequestKey, {
                                analysisRequest,
                                isStale: !1
                            }), [ 4, this.insightsService.execute(analysisRequest, void 0, this.hostId).resultPromise ];

                          case 4:
                            return result = _b.sent(), runToCompletion ? [ 2, result ] : (resultKey = this.serializeAnalysisDefinition(result.analysisDefinition), 
                            debug.fF.assert(function() {
                                return _this.pendingRequestsMap.has(resultKey);
                            }, "pendingRequestMap should contain the request key"), resultIsStale = null === (_a = this.pendingRequestsMap.get(resultKey)) || void 0 === _a ? void 0 : _a.isStale, 
                            this.pendingRequestsMap.delete(resultKey), resultIsStale && !result.isCancelled ? [ 2, {
                                isCancelled: !0,
                                analysisDefinition,
                                telemetryId: void 0
                            } ] : [ 2, result ]);
                        }
                    });
                });
            }, QuerySuggestionsService.prototype.cancelPendingRequests = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var _this = this;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.ensureInsightsService() ];

                          case 1:
                            return _a.sent(), this.pendingRequestsMap.forEach(function(pendingRequestInfo, requestKey) {
                                pendingRequestInfo.isStale || (_this.pendingRequestsMap.set(requestKey, {
                                    analysisRequest: pendingRequestInfo.analysisRequest,
                                    isStale: !0
                                }), _this.insightsService.cancel(pendingRequestInfo.analysisRequest, _this.hostId));
                            }), [ 2 ];
                        }
                    });
                });
            }, QuerySuggestionsService.prototype.ensureInsightsService = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var _a;
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return this.insightsService ? [ 2 ] : (_a = this, [ 4, this.lazyProvider.get(this.insightsProxyPathToken || "@powerbi/Insights/insights-web.module#InsightsWebModule", "InsightsServiceModern") ]);

                          case 1:
                            return _a.insightsService = _b.sent(), [ 2 ];
                        }
                    });
                });
            }, QuerySuggestionsService.prototype.serializeAnalysisDefinition = function(analysisDefinition) {
                return JSON.stringify((0, analysis_serializer.q)(analysisDefinition));
            }, QuerySuggestionsService.\u0275fac = function(t) {
                return new (t || QuerySuggestionsService)(core["\u0275\u0275inject"](data_sources_service.D), core["\u0275\u0275inject"](lazy_provider.E), core["\u0275\u0275inject"](insightsProxyPath.e, 8));
            }, QuerySuggestionsService.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: QuerySuggestionsService,
                factory: QuerySuggestionsService.\u0275fac
            }), QuerySuggestionsService;
        }(), ngrx_component_store = __webpack_require__(95281), sq_aggregation_operations_service = __webpack_require__(28199), conceptual_schema_proxy_service = __webpack_require__(26898), event_bridge_service = __webpack_require__(11494), exploration_navigation_service = __webpack_require__(39503), panes_visibility_service = __webpack_require__(21024), visual_authoring_operations_service = __webpack_require__(27980), lazy_scoped_provider = __webpack_require__(28894), schemaChangeRewriter = __webpack_require__(3011), visualContainer1 = __webpack_require__(15580), events = __webpack_require__(8590), visualContainerUtils = __webpack_require__(60661), isMeasure = __webpack_require__(58295), Subject = __webpack_require__(30794), tap = __webpack_require__(17653), switchMap = __webpack_require__(81905), takeUntil = __webpack_require__(83317), AssistedCreationContentType = function(AssistedCreationContentType) {
            return AssistedCreationContentType[AssistedCreationContentType.Initial = 0] = "Initial", 
            AssistedCreationContentType[AssistedCreationContentType.Loading = 1] = "Loading", 
            AssistedCreationContentType[AssistedCreationContentType.Success = 2] = "Success", 
            AssistedCreationContentType[AssistedCreationContentType.Error = 3] = "Error", AssistedCreationContentType[AssistedCreationContentType.EmptyResult = 4] = "EmptyResult", 
            AssistedCreationContentType;
        }({}), AssistedCreationPaneStoreFactoryLazyProvider = {
            provide: "assistedCreationPaneStore",
            useFactory: function(aggrUtils, concetualSchemaProxy, dataSources, eventBridge, explorationNavigationService, lazyScoped, panesVisibilityService, querySuggestion, visualAuthoringOps) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        return [ 2, new AssistedCreationPaneStoreService(aggrUtils, concetualSchemaProxy, dataSources, eventBridge, explorationNavigationService, lazyScoped, panesVisibilityService, querySuggestion, visualAuthoringOps) ];
                    });
                });
            },
            deps: [ sq_aggregation_operations_service.C, conceptual_schema_proxy_service.i, data_sources_service.D, event_bridge_service.J, exploration_navigation_service.z, lazy_scoped_provider.H, panes_visibility_service.r, QuerySuggestionsService, visual_authoring_operations_service.Q ]
        }, AssistedCreationPaneStoreService = function(_super) {
            function AssistedCreationPaneStoreService(aggrUtils, conceptualSchemaProxy, dataSources, eventBridge, explorationNavigation, lazyScoped, panesVisibilityService, querySuggestionsService, visualAuthoringOps) {
                var _this = _super.call(this, {
                    content: {
                        type: AssistedCreationContentType.Initial
                    },
                    selectedExprs: void 0,
                    surrogateVisuals: void 0
                }) || this;
                return _this.aggrUtils = aggrUtils, _this.conceptualSchemaProxy = conceptualSchemaProxy, 
                _this.dataSources = dataSources, _this.eventBridge = eventBridge, _this.explorationNavigation = explorationNavigation, 
                _this.lazyScoped = lazyScoped, _this.panesVisibilityService = panesVisibilityService, 
                _this.querySuggestionsService = querySuggestionsService, _this.visualAuthoringOps = visualAuthoringOps, 
                _this.viewModel$ = _this.select(function(state) {
                    return state;
                }), _this.onDestroy$ = new Subject.xQ, _this.onSelectedExprsChanged = _this.effect(function(selectedExprs$) {
                    return selectedExprs$.pipe((0, tap.b)(function() {
                        return _this.upateContent({
                            type: AssistedCreationContentType.Loading
                        });
                    }), (0, tap.b)(function(selectedExprs) {
                        return _this.upateSelectedExprs(selectedExprs);
                    }), (0, switchMap.w)(function(selectedExprs) {
                        return (0, tslib_es6.__awaiter)(_this, void 0, void 0, function() {
                            var executionResult, analysis, suggestedVisuals, _a;
                            return (0, tslib_es6.__generator)(this, function(_b) {
                                switch (_b.label) {
                                  case 0:
                                    return _.isEmpty(selectedExprs) ? (this.resetState(), [ 2 ]) : (this.getVisualSuggestionsEventId = this.assistedCreationTelemetry.startGetSuggestedVisualsEvent(), 
                                    [ 4, this.querySuggestionsService.getSuggestedQueries(selectedExprs) ]);

                                  case 1:
                                    return (executionResult = _b.sent()) ? executionResult.isCancelled ? (this.resolveGetVisualSuggestionsEvent("cancelled"), 
                                    [ 2 ]) : executionResult.error ? (this.upateContent({
                                        type: AssistedCreationContentType.Error,
                                        error: executionResult.error
                                    }), this.resolveGetVisualSuggestionsEvent("failure"), [ 2 ]) : (analysis = null === (_a = executionResult.result) || void 0 === _a ? void 0 : _a.suggestQueries, 
                                    _.isEmpty(analysis.queries) ? (this.upateContent({
                                        type: AssistedCreationContentType.EmptyResult
                                    }), this.resolveGetVisualSuggestionsEvent("success", 0), [ 2 ]) : (suggestedVisuals = this.processInsightsResult(analysis, "suggestions"), 
                                    this.upateContent({
                                        type: AssistedCreationContentType.Success,
                                        suggestedVisuals
                                    }), [ 2 ])) : (this.resolveGetVisualSuggestionsEvent("failure"), [ 2 ]);
                                }
                            });
                        });
                    }));
                }), _this.fetchSurrogateVisuals = _this.effect(function(trigger$) {
                    return trigger$.pipe((0, switchMap.w)(function() {
                        return (0, tslib_es6.__awaiter)(_this, void 0, void 0, function() {
                            var executionResult, analysis, suggestedQueries, _a;
                            return (0, tslib_es6.__generator)(this, function(_b) {
                                switch (_b.label) {
                                  case 0:
                                    return this.getVisualSurrogatesEventId = this.assistedCreationTelemetry.startGetSuggestedVisualsEvent(), 
                                    [ 4, this.querySuggestionsService.getSuggestedQueries([], !0) ];

                                  case 1:
                                    return (executionResult = _b.sent()) ? executionResult.isCancelled ? (this.resolveGetVisualSuggestionsEvent("cancelled", 0, "surrogate"), 
                                    [ 2 ]) : executionResult.error ? (this.resolveGetVisualSuggestionsEvent("failure", 0, "surrogate"), 
                                    [ 2 ]) : (analysis = null === (_a = executionResult.result) || void 0 === _a ? void 0 : _a.suggestQueries, 
                                    _.isEmpty(analysis.queries) ? (this.resolveGetVisualSuggestionsEvent("success", 0, "surrogate"), 
                                    [ 2 ]) : (suggestedQueries = this.processSuggestedQueries(analysis.queries), this.updateSuggestedFields(suggestedQueries), 
                                    this.updateSurrogateVisuals(this.processInsightsResult(analysis, "surrogate")), 
                                    [ 2 ])) : (this.resolveGetVisualSuggestionsEvent("failure", 0, "surrogate"), [ 2 ]);
                                }
                            });
                        });
                    }));
                }), _this.upateSelectedExprs = _this.updater(function(state, selectedExprs) {
                    return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, state), {
                        selectedExprs
                    });
                }), _this.upateContent = _this.updater(function(state, content) {
                    return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, state), {
                        content
                    });
                }), _this.updateSurrogateVisuals = _this.updater(function(state, surrogateVisuals) {
                    return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, state), {
                        surrogateVisuals
                    });
                }), _this.updateAddedToReport = _this.updater(function(state, guid) {
                    var selectedVisual = _this.getVisualByGuid(state, guid);
                    return selectedVisual && (selectedVisual.addedToReport = !0), (0, tslib_es6.__assign)({}, state);
                }), _this.updateSuggestedFields = _this.updater(function(state, suggestedQuery) {
                    var suggestedFields = [];
                    return _.forEach(suggestedQuery, function(query) {
                        return _.forEach(query.select(), function(namedExpr) {
                            var expr = namedExpr.expr;
                            -1 === sqExprUtils.m.indexOfExpr(suggestedFields, expr) && suggestedFields.push(expr);
                        });
                    }), (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, state), {
                        suggestedFields: _.take(suggestedFields, 7)
                    });
                }), _this.resetState = _this.updater(function(state) {
                    return _this.querySuggestionsService.cancelPendingRequests(), (0, tslib_es6.__assign)((0, 
                    tslib_es6.__assign)({}, state), {
                        content: {
                            type: AssistedCreationContentType.Initial
                        },
                        selectedExprs: void 0,
                        surrogateVisuals: void 0
                    });
                }), _this.eventBridge.on(events.CCe).pipe((0, takeUntil.R)(_this.onDestroy$)).subscribe(function(modelChangedEventArgs) {
                    return (0, tslib_es6.__awaiter)(_this, void 0, void 0, function() {
                        return (0, tslib_es6.__generator)(this, function(_a) {
                            switch (_a.label) {
                              case 0:
                                return [ 4, this.onModelChanged(modelChangedEventArgs.result) ];

                              case 1:
                                return _a.sent(), [ 2 ];
                            }
                        });
                    });
                }), _this;
            }
            return (0, tslib_es6.__extends)(AssistedCreationPaneStoreService, _super), AssistedCreationPaneStoreService.prototype.initializeState = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var prevContent, prevExprs, prevSurrogateVisuals, content, exprs;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return prevContent = this.get().content, prevExprs = this.get().selectedExprs, prevSurrogateVisuals = this.get().surrogateVisuals, 
                            content = null != prevContent ? prevContent : {
                                type: AssistedCreationContentType.Initial
                            }, exprs = null != prevExprs ? prevExprs : void 0, [ 4, this.ensureTelemetryService() ];

                          case 1:
                            return _a.sent(), _.isEmpty(prevSurrogateVisuals) && this.fetchSurrogateVisuals(), 
                            this.setState({
                                content,
                                selectedExprs: exprs,
                                surrogateVisuals: prevSurrogateVisuals
                            }), [ 2 ];
                        }
                    });
                });
            }, AssistedCreationPaneStoreService.prototype.togglePaneVisibility = function(entryPoint) {
                return void 0 === entryPoint && (entryPoint = "Ribbon"), (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.ensureTelemetryService() ];

                          case 1:
                            return _a.sent(), this.panesVisibilityService.isPaneVisible("assistedCreation") ? (this.assistedCreationTelemetry.logClosePaneEvent(), 
                            this.resetState()) : this.assistedCreationTelemetry.logOpenPaneEvent(entryPoint), 
                            this.panesVisibilityService.togglePaneVisibility("assistedCreation"), [ 2 ];
                        }
                    });
                });
            }, AssistedCreationPaneStoreService.prototype.addVisualToCanvas = function(visualContainer, visualGuid, visualRank, exploreCanvas) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var position, sections, singleVisualConfig, clonedSingleVisualConfig, suggestedVisualToAdd;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        return position = visualContainer.layouts.withId(0).position, sections = this.explorationNavigation.getAllSections(), 
                        singleVisualConfig = (0, visualContainerUtils.PQ)(visualContainer), clonedSingleVisualConfig = (0, 
                        visualContainer1.d9)(singleVisualConfig), this.visualAuthoringOps.addVisualContainerFromConfig({
                            singleVisual: clonedSingleVisualConfig
                        }, void 0, sections, exploreCanvas, position, !0, "AssistedCreation", !0), this.updateAddedToReport(visualGuid), 
                        suggestedVisualToAdd = this.getVisualByGuid(this.get(), visualGuid), debug.fF.assertValue(suggestedVisualToAdd, "suggestedVisualToAdd"), 
                        this.assistedCreationTelemetry.logAddVisualToCanvasEvent({
                            visualType: clonedSingleVisualConfig.visualType,
                            rank: visualRank,
                            baseScore: suggestedVisualToAdd.score.base,
                            fieldMatchScore: suggestedVisualToAdd.score.fieldMatch,
                            overallScore: suggestedVisualToAdd.score.overall
                        }), [ 2 ];
                    });
                });
            }, AssistedCreationPaneStoreService.prototype.getSelectedExprs = function() {
                return this.get().selectedExprs;
            }, AssistedCreationPaneStoreService.prototype.ngOnDestroy = function() {
                this.onDestroy$.next(), this.onDestroy$.complete();
            }, AssistedCreationPaneStoreService.prototype.processSuggestedQueries = function(queries) {
                return _.chain(queries).orderBy(function(q) {
                    return q.dataQuery.score.overall;
                }, "desc").map(function(q) {
                    return q.dataQuery.query;
                }).value();
            }, AssistedCreationPaneStoreService.prototype.processInsightsResult = function(analysis, eventType) {
                var suggestedQueries = _.chain(analysis.queries).orderBy(function(q) {
                    return q.dataQuery.score.overall;
                }, "desc").map(function(q) {
                    return {
                        query: q.dataQuery.query,
                        score: q.dataQuery.score
                    };
                }).value();
                return this.resolveGetVisualSuggestionsEvent("success", _.size(suggestedQueries), eventType), 
                _.map(suggestedQueries, function(_a) {
                    return {
                        query: _a.query,
                        score: _a.score,
                        guid: Utility.b$.generateGuid(),
                        addedToReport: !1
                    };
                });
            }, AssistedCreationPaneStoreService.prototype.onModelChanged = function(schemaChanges) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var schema, updatedSelectedExprs;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return this.fetchSurrogateVisuals(), [ 4, this.conceptualSchemaProxy.get(this.dataSources.get()) ];

                          case 1:
                            return schema = _a.sent(), updatedSelectedExprs = this.updateSelectedFields(schemaChanges, schema), 
                            this.onSelectedExprsChanged(updatedSelectedExprs), [ 2 ];
                        }
                    });
                });
            }, AssistedCreationPaneStoreService.prototype.updateSelectedFields = function(modelChange, schema) {
                var _this = this, rewritternFields = [], selectedExprs = this.getSelectedExprs(), exprsRewriters = (0, 
                schemaChangeRewriter.vH)(modelChange.changes);
                return _.forEach(selectedExprs, function(expr, index) {
                    rewritternFields[index] = _this.rewriteField(expr, exprsRewriters, schema);
                }), rewritternFields = _.filter(rewritternFields, function(field) {
                    return void 0 !== field;
                });
            }, AssistedCreationPaneStoreService.prototype.rewriteField = function(expr, rewriters, schema) {
                var noRewriters = _.isEmpty(rewriters);
                if (_.isEmpty(null == expr ? void 0 : expr.validate(schema, this.aggrUtils)) || !noRewriters) {
                    if (noRewriters) return expr;
                    for (var rewrittenExpr, _i = 0, rewriters_1 = rewriters; _i < rewriters_1.length; _i++) rewrittenExpr = null == expr ? void 0 : expr.accept(rewriters_1[_i]);
                    return _.isEmpty(null == rewrittenExpr ? void 0 : rewrittenExpr.validate(schema, this.aggrUtils)) || (rewrittenExpr = void 0), 
                    rewrittenExpr;
                }
            }, AssistedCreationPaneStoreService.prototype.resolveGetVisualSuggestionsEvent = function(resultType, numOfSuggestedVisuals, eventType) {
                var _a, eventArgs;
                void 0 === eventType && (eventType = "suggestions");
                var dimensionsSelected = (_a = function(exprs) {
                    var dimensionsSelected = 0, measuresSelected = 0;
                    return _.forEach(exprs, function(expr) {
                        !function(expr) {
                            return !(0, isMeasure.k)(expr) && !(0, sqExprStaticMembers.iV)(expr);
                        }(expr) ? measuresSelected++ : dimensionsSelected++;
                    }), {
                        dimensionsSelected,
                        measuresSelected
                    };
                }(this.getSelectedExprs()), _a.dimensionsSelected), measuresSelected = _a.measuresSelected;
                switch (resultType) {
                  case "failure":
                    eventArgs = {
                        dimensionsSelected,
                        measuresSelected,
                        cancelled: !1,
                        visualSuggestions: 0
                    };
                    break;

                  case "cancelled":
                    eventArgs = {
                        dimensionsSelected,
                        measuresSelected,
                        cancelled: !0,
                        visualSuggestions: 0
                    };
                    break;

                  case "success":
                    eventArgs = {
                        dimensionsSelected,
                        measuresSelected,
                        cancelled: !1,
                        visualSuggestions: numOfSuggestedVisuals
                    };
                    break;

                  default:
                    debug.fF.assertNever(resultType);
                }
                this.assistedCreationTelemetry.resolveGetSuggestedVisualsEvent("suggestions" === eventType ? this.getVisualSuggestionsEventId : this.getVisualSurrogatesEventId, eventArgs), 
                "suggestions" === eventType ? this.getVisualSuggestionsEventId = void 0 : this.getVisualSurrogatesEventId = void 0;
            }, AssistedCreationPaneStoreService.prototype.ensureTelemetryService = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var _a;
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return this.assistedCreationTelemetry ? [ 3, 2 ] : (_a = this, [ 4, this.lazyScoped.get("assistedCreationTelemetry") ]);

                          case 1:
                            _a.assistedCreationTelemetry = _b.sent(), _b.label = 2;

                          case 2:
                            return debug.fF.assertValue(this.assistedCreationTelemetry, "assistedCreationTelemetry"), 
                            [ 2 ];
                        }
                    });
                });
            }, AssistedCreationPaneStoreService.prototype.getVisualByGuid = function(state, guid) {
                var suggestedVisual;
                switch (state.content.type) {
                  case AssistedCreationContentType.Success:
                    suggestedVisual = _.find(state.content.suggestedVisuals, function(suggestedVisual) {
                        return suggestedVisual.guid === guid;
                    });
                    break;

                  case AssistedCreationContentType.EmptyResult:
                  case AssistedCreationContentType.Error:
                    suggestedVisual = _.find(state.surrogateVisuals, function(surrogateVisual) {
                        return surrogateVisual.guid === guid;
                    });
                }
                return suggestedVisual;
            }, AssistedCreationPaneStoreService.\u0275fac = function(t) {
                return new (t || AssistedCreationPaneStoreService)(core["\u0275\u0275inject"](sq_aggregation_operations_service.C), core["\u0275\u0275inject"](conceptual_schema_proxy_service.i), core["\u0275\u0275inject"](data_sources_service.D), core["\u0275\u0275inject"](event_bridge_service.J), core["\u0275\u0275inject"](exploration_navigation_service.z), core["\u0275\u0275inject"](lazy_scoped_provider.H), core["\u0275\u0275inject"](panes_visibility_service.r), core["\u0275\u0275inject"](QuerySuggestionsService), core["\u0275\u0275inject"](visual_authoring_operations_service.Q));
            }, AssistedCreationPaneStoreService.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: AssistedCreationPaneStoreService,
                factory: AssistedCreationPaneStoreService.\u0275fac
            }), AssistedCreationPaneStoreService;
        }(ngrx_component_store.m1), error_service = __webpack_require__(81213), feature_switch_service = __webpack_require__(9380), localization_service = __webpack_require__(65181), common = __webpack_require__(77476), field_picker_modern_lazy_component = __webpack_require__(67930), localize_directive = __webpack_require__(59968), pbi_pane_component = __webpack_require__(21023), pbi_pane_section_component = __webpack_require__(24548), tri_spinner_component = __webpack_require__(54729), tri_svg_icon_component = __webpack_require__(74913), quick_create_core_visuals_utils = __webpack_require__(72941), Common = __webpack_require__(35911), promiseFactory = __webpack_require__(14463), filters_filterBuilder = __webpack_require__(11077), visualAuthoringCore = __webpack_require__(66794), visualHostService = __webpack_require__(47245), Prototype = __webpack_require__(39681), BehaviorSubject = __webpack_require__(35510), exploration_display_name_service = __webpack_require__(13702), azure_map_token_cache_service = __webpack_require__(80277), geo_tagging_analyzer_service = __webpack_require__(77435), visual_authoring_customize_operations_service = __webpack_require__(28107), geocoder_service = __webpack_require__(28505), azure_maps_endpoint_service = __webpack_require__(58991), module_loader_service = __webpack_require__(2330), visual_host_tooltip_service_factory_service = __webpack_require__(98136), visual_plugin_service = __webpack_require__(29866), geocoder_indexed_db_service = __webpack_require__(1599), single_visual_host_component = __webpack_require__(46101), on_resize_directive = __webpack_require__(698), _c0 = [ "singleVisualHost" ], _c1 = function(a0) {
            return {
                matchesSelectedExpr: a0
            };
        };
        function VisualSuggestionCardComponent_ng_container_0_span_4_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "span", 12), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var term_r4 = ctx.$implicit;
                core["\u0275\u0275property"]("ngClass", core["\u0275\u0275pureFunction1"](2, _c1, term_r4.matchesSelectedExpr)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate"](term_r4.content + " ");
            }
        }
        function VisualSuggestionCardComponent_ng_container_0_ng_container_13_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275element"](1, "tri-svg-icon", 13)(2, "span", 14), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf && (core["\u0275\u0275advance"](1), 
            core["\u0275\u0275property"]("name", "checkmark_circle_16_filled"));
        }
        function VisualSuggestionCardComponent_ng_container_0_Template(rf, ctx) {
            if (1 & rf) {
                var _r6 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "div", 1), 
                core["\u0275\u0275listener"]("on-resize", function($event) {
                    core["\u0275\u0275restoreView"](_r6);
                    var ctx_r5 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r5.onResize($event));
                }), core["\u0275\u0275elementStart"](2, "div", 2)(3, "h6", 3), core["\u0275\u0275template"](4, VisualSuggestionCardComponent_ng_container_0_span_4_Template, 2, 4, "span", 4), 
                core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementStart"](5, "div", 5, 6), 
                core["\u0275\u0275element"](7, "single-visual-host", 7), core["\u0275\u0275pipe"](8, "async"), 
                core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](9, "div", 8)(10, "button", 9), 
                core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r6);
                    var ctx_r7 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r7.addToReport());
                }), core["\u0275\u0275element"](11, "tri-svg-icon", 10)(12, "span", 11), core["\u0275\u0275elementEnd"](), 
                core["\u0275\u0275template"](13, VisualSuggestionCardComponent_ng_container_0_ng_container_13_Template, 3, 1, "ng-container", 0), 
                core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementContainerEnd"]();
            }
            if (2 & rf) {
                var ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](4), core["\u0275\u0275property"]("ngForOf", ctx_r0.title), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("visual", ctx_r0.visualContainer)("config", ctx_r0.singleVisualHostConfig)("themeCollection", ctx_r0.themeCollection)("visualViewport", core["\u0275\u0275pipeBind1"](8, 7, ctx_r0.viewport$)), 
                core["\u0275\u0275advance"](4), core["\u0275\u0275property"]("name", "add_16_regular"), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", ctx_r0.suggestedVisual.addedToReport);
            }
        }
        var VisualSuggestionCardComponent = function() {
            function VisualSuggestionCardComponent(conceptualSchemaProxy, dataSources, displayNameService, explorationNavigation, geocoder, geolocationService, localizationService, moduleLoader, visualHostTooltipServiceFactory, visualPluginService, azureMapTokenCache, azureMapsEndpoint, geocoderIndexedDB, aggrOps, featureSwitchService, geoTaggingAnalyzer, visualAuthoringCustomizeOperations, promiseFactory) {
                this.conceptualSchemaProxy = conceptualSchemaProxy, this.dataSources = dataSources, 
                this.displayNameService = displayNameService, this.explorationNavigation = explorationNavigation, 
                this.geocoder = geocoder, this.geolocationService = geolocationService, this.localizationService = localizationService, 
                this.moduleLoader = moduleLoader, this.visualHostTooltipServiceFactory = visualHostTooltipServiceFactory, 
                this.visualPluginService = visualPluginService, this.azureMapTokenCache = azureMapTokenCache, 
                this.azureMapsEndpoint = azureMapsEndpoint, this.geocoderIndexedDB = geocoderIndexedDB, 
                this.promiseFactory = promiseFactory, this.addVisualToCanvas = new core.EventEmitter, 
                this.viewport$ = new BehaviorSubject.X(void 0), this.title = [], this.visualWidth = 292, 
                this.visualHeight = 126, this.visualAuthoringCore = (0, visualAuthoringCore.Vz)(visualPluginService, geoTaggingAnalyzer, aggrOps, featureSwitchService, visualAuthoringCustomizeOperations, displayNameService);
            }
            return VisualSuggestionCardComponent.prototype.ngOnInit = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var _a, currentExploration, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return this.viewport$.next({
                                width: this.visualWidth,
                                height: this.visualHeight,
                                scale: 1
                            }), _a = this, [ 4, this.conceptualSchemaProxy.get(this.dataSources.get()) ];

                          case 1:
                            return _a.schema = _b.sent(), this.visualContainer = this.buildVisual(), this.title = this.getVisualTitle(), 
                            this.singleVisualHostConfig = {
                                notifyStart: _.noop,
                                notifyEnd: _.noop,
                                clearQueryErrors: _.noop,
                                handleQueryErrors: _.noop,
                                handleQueryWarnings: _.noop,
                                queryVisualHostServices: {
                                    getFilters: function() {
                                        for (var filters = _this.visualContainer && _this.visualContainer.filters || [], filterBuilder = new filters_filterBuilder.ME, _i = 0, filters_1 = filters; _i < filters_1.length; _i++) {
                                            var f = filters_1[_i];
                                            f && f.filter && filterBuilder.addVisualFilter({
                                                filter: f.filter
                                            });
                                        }
                                        return filterBuilder.getFilters(!1);
                                    },
                                    getDataSourceVariables: function() {
                                        var currentExploration = _this.explorationNavigation.getCurrentExploration();
                                        return null == currentExploration ? void 0 : currentExploration.dataSourceVariables;
                                    },
                                    disableAnchorTime: !0
                                },
                                visualHostServices: (0, Prototype.ED)((0, visualHostService.q)({
                                    geocoder: this.geocoder,
                                    geolocation: this.geolocationService,
                                    localizationService: this.localizationService,
                                    moduleLoader: this.moduleLoader,
                                    promiseFactory: this.promiseFactory,
                                    visualHostTooltipService: this.visualHostTooltipServiceFactory.create(),
                                    getAzureMapToken: function() {
                                        return _this.azureMapTokenCache.getAzureMapToken();
                                    },
                                    azureMapsEndpoint: this.azureMapsEndpoint,
                                    geocoderIndexedDB: this.geocoderIndexedDB
                                }), function(h) {
                                    h.getLocalizedString = function(stringId) {
                                        return _this.localizationService.get(stringId);
                                    };
                                }),
                                interactivityOptions: {
                                    selection: !0
                                },
                                additionalObjectUpdates: void 0,
                                disableQueryCacheUpdates: !1,
                                noLoadMore: !1
                            }, currentExploration = this.explorationNavigation.getCurrentExploration(), this.themeCollection = null == currentExploration ? void 0 : currentExploration.themeCollection, 
                            [ 2 ];
                        }
                    });
                });
            }, VisualSuggestionCardComponent.prototype.ngAfterViewChecked = function() {
                this.singleVisualHost && this.viewport$.next({
                    width: this.singleVisualHost.nativeElement.offsetWidth,
                    scale: 1,
                    height: this.singleVisualHost.nativeElement.offsetHeight
                });
            }, VisualSuggestionCardComponent.prototype.onResize = function(viewport) {
                debug.fF.assertValue(viewport, "viewport"), this.viewport$.next({
                    width: this.singleVisualHost.nativeElement.offsetWidth,
                    scale: 1,
                    height: this.singleVisualHost.nativeElement.offsetHeight
                });
            }, VisualSuggestionCardComponent.prototype.getVisualTitle = function() {
                var config = (0, visualContainerUtils.PQ)(this.visualContainer), visualCapabilities = this.visualPluginService.capabilities(config.visualType), titleText = this.displayNameService.getVisualTitle(config, this.schema, visualCapabilities, void 0, {
                    includeVariationSource: !0
                }).text.split(" ");
                return _.map(titleText, function(text) {
                    return {
                        content: text,
                        matchesSelectedExpr: !1
                    };
                });
            }, VisualSuggestionCardComponent.prototype.buildVisual = function() {
                var exprs = _.map(this.suggestedVisual.query.select(), function(namedExpr) {
                    return namedExpr.expr;
                }), visualType = quick_create_core_visuals_utils.s_(exprs, this.schema), sortDefinition = quick_create_core_visuals_utils.MR(exprs, visualType);
                return quick_create_core_visuals_utils.Xs(exprs, visualType, this.schema, this.visualAuthoringCore, !0, sortDefinition);
            }, VisualSuggestionCardComponent.prototype.addToReport = function() {
                this.addVisualToCanvas.emit({
                    visualContainer: this.visualContainer,
                    guid: this.suggestedVisual.guid
                });
            }, VisualSuggestionCardComponent.\u0275fac = function(t) {
                return new (t || VisualSuggestionCardComponent)(core["\u0275\u0275directiveInject"](conceptual_schema_proxy_service.i), core["\u0275\u0275directiveInject"](data_sources_service.D), core["\u0275\u0275directiveInject"](exploration_display_name_service.O), core["\u0275\u0275directiveInject"](exploration_navigation_service.z), core["\u0275\u0275directiveInject"](geocoder_service.i), core["\u0275\u0275directiveInject"](Common._1), core["\u0275\u0275directiveInject"](localization_service.o), core["\u0275\u0275directiveInject"](module_loader_service.m), core["\u0275\u0275directiveInject"](visual_host_tooltip_service_factory_service.q), core["\u0275\u0275directiveInject"](visual_plugin_service.D), core["\u0275\u0275directiveInject"](azure_map_token_cache_service.o), core["\u0275\u0275directiveInject"](azure_maps_endpoint_service.A), core["\u0275\u0275directiveInject"](geocoder_indexed_db_service.W), core["\u0275\u0275directiveInject"](sq_aggregation_operations_service.C), core["\u0275\u0275directiveInject"](feature_switch_service.vZ), core["\u0275\u0275directiveInject"](geo_tagging_analyzer_service.q), core["\u0275\u0275directiveInject"](visual_authoring_customize_operations_service.Q), core["\u0275\u0275directiveInject"](promiseFactory.t));
            }, VisualSuggestionCardComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: VisualSuggestionCardComponent,
                selectors: [ [ "visual-suggestion-card" ] ],
                viewQuery: function(rf, ctx) {
                    var _t;
                    1 & rf && core["\u0275\u0275viewQuery"](_c0, 5, core.ElementRef), 2 & rf && core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx.singleVisualHost = _t.first);
                },
                inputs: {
                    suggestedVisual: "suggestedVisual",
                    selectedExprs: "selectedExprs"
                },
                outputs: {
                    addVisualToCanvas: "addVisualToCanvas"
                },
                decls: 1,
                vars: 1,
                consts: [ [ 4, "ngIf" ], [ 1, "singleVisualHostContainer", 3, "on-resize" ], [ 1, "visualTitle", "themableBackgroundColor", "themableColor" ], [ 1, "trimmedTextWithEllipsis" ], [ 3, "ngClass", 4, "ngFor", "ngForOf" ], [ 1, "singleVisualHost" ], [ "singleVisualHost", "" ], [ 3, "visual", "config", "themeCollection", "visualViewport" ], [ 1, "addToReport" ], [ "type", "button", 1, "pbi-fluent-button", 3, "click" ], [ "display", "inline-block", 3, "name" ], [ "localize", "Insights_ExploreAddToReport" ], [ 3, "ngClass" ], [ "display", "inline-block", 1, "icon-filled", 3, "name" ], [ "localize", "Added" ] ],
                template: function(rf, ctx) {
                    1 & rf && core["\u0275\u0275template"](0, VisualSuggestionCardComponent_ng_container_0_Template, 14, 9, "ng-container", 0), 
                    2 & rf && core["\u0275\u0275property"]("ngIf", ctx.visualContainer);
                },
                dependencies: [ common.NgClass, common.NgForOf, common.NgIf, single_visual_host_component.v, on_resize_directive.O, localize_directive.X, tri_svg_icon_component.M, common.AsyncPipe ],
                styles: [ ".singleVisualHostContainer[_ngcontent-%COMP%]{margin-bottom:12px;box-shadow:0 1px 2px rgba(0,0,0,.14),0 0 2px rgba(0,0,0,.12);border-radius:4px;display:flex;flex-direction:column;position:relative;width:auto;min-height:198px;padding:8px;background-color:var(--white-color)}.singleVisualHostContainer[_ngcontent-%COMP%]   .visualTitle[_ngcontent-%COMP%]{width:auto}.singleVisualHostContainer[_ngcontent-%COMP%]   .visualTitle[_ngcontent-%COMP%]   .matchesSelectedExpr[_ngcontent-%COMP%]{padding-bottom:1px;border-bottom:solid 2px #0F6CBD}.singleVisualHostContainer[_ngcontent-%COMP%]   .visualTitle[_ngcontent-%COMP%]   h6[_ngcontent-%COMP%]{font-family:Segoe UI,wf_segoe-ui_normal,helvetica,arial,sans-serif;line-height:16px;font-weight:600}.singleVisualHostContainer[_ngcontent-%COMP%]   .singleVisualHost[_ngcontent-%COMP%]{flex:1}.singleVisualHostContainer[_ngcontent-%COMP%]   .addToReport[_ngcontent-%COMP%]{display:flex;flex-direction:row;align-items:center;gap:4px;margin-top:8px;bottom:8px}.singleVisualHostContainer[_ngcontent-%COMP%]   .addToReport[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{display:flex;flex-direction:row;align-items:center;gap:4px;height:24px;padding:0 8px;margin-right:6px;font-size:var(--sm-font-size, 12px);border-radius:4px;border-color:var(--fluent-theme-light-gray-color)}.singleVisualHostContainer[_ngcontent-%COMP%]   .addToReport[_ngcontent-%COMP%]   .icon-filled[_ngcontent-%COMP%]{fill:var(--globalColorGreenShade10)}" ]
            }), VisualSuggestionCardComponent;
        }(), pbi_tooltip_directive = __webpack_require__(36858), SuggestionFieldComponent = function() {
            function SuggestionFieldComponent(conceptualSchemaProxy, dataSources, displayNameService) {
                this.conceptualSchemaProxy = conceptualSchemaProxy, this.dataSources = dataSources, 
                this.displayNameService = displayNameService, this.addField = new core.EventEmitter;
            }
            return SuggestionFieldComponent.prototype.ngOnInit = function() {
                var _this = this;
                this.getDisplayName().then(function(name) {
                    _this.fieldName = name;
                });
            }, SuggestionFieldComponent.prototype.getDisplayName = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var schema;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.conceptualSchemaProxy.get(this.dataSources.get()) ];

                          case 1:
                            return schema = _a.sent(), [ 2, this.displayNameService.getDisplayName(this.suggestedExpr, schema, void 0, void 0, void 0, {
                                includeVariationSource: !0
                            }) ];
                        }
                    });
                });
            }, SuggestionFieldComponent.prototype.selectField = function() {
                this.addField.emit(this.suggestedExpr);
            }, SuggestionFieldComponent.\u0275fac = function(t) {
                return new (t || SuggestionFieldComponent)(core["\u0275\u0275directiveInject"](conceptual_schema_proxy_service.i), core["\u0275\u0275directiveInject"](data_sources_service.D), core["\u0275\u0275directiveInject"](exploration_display_name_service.O));
            }, SuggestionFieldComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: SuggestionFieldComponent,
                selectors: [ [ "suggestion-field" ] ],
                inputs: {
                    suggestedExpr: "suggestedExpr"
                },
                outputs: {
                    addField: "addField"
                },
                decls: 4,
                vars: 2,
                consts: [ [ "type", "button", 1, "pbi-fluent-button", 3, "pbiTooltip", "click" ], [ 1, "trimmedTextWithEllipsis" ], [ 1, "glyphicon", "pbi-glyph-add", "glyph-mini" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementStart"](0, "button", 0), core["\u0275\u0275listener"]("click", function() {
                        return ctx.selectField();
                    }), core["\u0275\u0275elementStart"](1, "span", 1), core["\u0275\u0275text"](2), 
                    core["\u0275\u0275elementEnd"](), core["\u0275\u0275element"](3, "i", 2), core["\u0275\u0275elementEnd"]()), 
                    2 & rf && (core["\u0275\u0275property"]("pbiTooltip", ctx.fieldName), core["\u0275\u0275advance"](2), 
                    core["\u0275\u0275textInterpolate"](ctx.fieldName));
                },
                dependencies: [ pbi_tooltip_directive.V ],
                styles: [ "button[_ngcontent-%COMP%]{margin:2px;padding:0 8px;height:28px;max-width:150px;border-radius:3px;border:1px solid var(--gray-130);background-color:var(--gray-30);font-size:var(--sm-font-size)}button[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{display:inline-block;margin-right:4px;max-width:116px}button[_ngcontent-%COMP%]   .glyphicon[_ngcontent-%COMP%]{vertical-align:text-top}" ]
            }), SuggestionFieldComponent;
        }();
        function AssistedCreationPaneComponent_ng_container_0_pbi_pane_1_div_2_section_4_ng_container_2_Template(rf, ctx) {
            if (1 & rf) {
                var _r13 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "suggestion-field", 12), 
                core["\u0275\u0275listener"]("addField", function($event) {
                    core["\u0275\u0275restoreView"](_r13);
                    var ctx_r12 = core["\u0275\u0275nextContext"](5);
                    return core["\u0275\u0275resetView"](ctx_r12.addField($event));
                }), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementContainerEnd"]();
            }
            if (2 & rf) {
                var suggestedField_r11 = ctx.$implicit;
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("suggestedExpr", suggestedField_r11);
            }
        }
        function AssistedCreationPaneComponent_ng_container_0_pbi_pane_1_div_2_section_4_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "section"), core["\u0275\u0275element"](1, "p", 10), 
            core["\u0275\u0275template"](2, AssistedCreationPaneComponent_ng_container_0_pbi_pane_1_div_2_section_4_ng_container_2_Template, 2, 1, "ng-container", 11), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var vm_r3 = core["\u0275\u0275nextContext"](2).ngIf;
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngForOf", vm_r3.suggestedFields);
            }
        }
        function AssistedCreationPaneComponent_ng_container_0_pbi_pane_1_div_2_hr_5_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "hr", 13);
        }
        function AssistedCreationPaneComponent_ng_container_0_pbi_pane_1_div_2_div_6_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementStart"](0, "div", 14), core["\u0275\u0275element"](1, "tri-spinner", 15)(2, "span", 16), 
            core["\u0275\u0275elementEnd"]());
        }
        function AssistedCreationPaneComponent_ng_container_0_pbi_pane_1_div_2_ng_container_7_ng_container_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r19 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "visual-suggestion-card", 17), 
                core["\u0275\u0275listener"]("addVisualToCanvas", function($event) {
                    var i_r17 = core["\u0275\u0275restoreView"](_r19).index, ctx_r18 = core["\u0275\u0275nextContext"](5);
                    return core["\u0275\u0275resetView"](ctx_r18.addVisualToCanvas($event, i_r17));
                }), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementContainerEnd"]();
            }
            if (2 & rf) {
                var suggestedVisual_r16 = ctx.$implicit, vm_r3 = core["\u0275\u0275nextContext"](3).ngIf;
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("suggestedVisual", suggestedVisual_r16)("selectedExprs", vm_r3.selectedExprs);
            }
        }
        function AssistedCreationPaneComponent_ng_container_0_pbi_pane_1_div_2_ng_container_7_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, AssistedCreationPaneComponent_ng_container_0_pbi_pane_1_div_2_ng_container_7_ng_container_1_Template, 2, 2, "ng-container", 11), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var vm_r3 = core["\u0275\u0275nextContext"](2).ngIf;
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngForOf", vm_r3.content.suggestedVisuals);
            }
        }
        function AssistedCreationPaneComponent_ng_container_0_pbi_pane_1_div_2_div_8_a_4_Template(rf, ctx) {
            if (1 & rf) {
                var _r26 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "a", 23), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r26);
                    var vm_r3 = core["\u0275\u0275nextContext"](3).ngIf, ctx_r24 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r24.onSeeErrorDetails(vm_r3.content.error));
                }), core["\u0275\u0275elementEnd"]();
            }
        }
        function AssistedCreationPaneComponent_ng_container_0_pbi_pane_1_div_2_div_8_ng_container_5_ng_container_4_Template(rf, ctx) {
            if (1 & rf) {
                var _r31 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "visual-suggestion-card", 17), 
                core["\u0275\u0275listener"]("addVisualToCanvas", function($event) {
                    var i_r29 = core["\u0275\u0275restoreView"](_r31).index, ctx_r30 = core["\u0275\u0275nextContext"](6);
                    return core["\u0275\u0275resetView"](ctx_r30.addVisualToCanvas($event, i_r29));
                }), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementContainerEnd"]();
            }
            if (2 & rf) {
                var surrogateVisual_r28 = ctx.$implicit, vm_r3 = core["\u0275\u0275nextContext"](4).ngIf;
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("suggestedVisual", surrogateVisual_r28)("selectedExprs", vm_r3.selectedExprs);
            }
        }
        function AssistedCreationPaneComponent_ng_container_0_pbi_pane_1_div_2_div_8_ng_container_5_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275element"](1, "hr", 13), 
            core["\u0275\u0275elementStart"](2, "section", 24), core["\u0275\u0275element"](3, "p", 25), 
            core["\u0275\u0275template"](4, AssistedCreationPaneComponent_ng_container_0_pbi_pane_1_div_2_div_8_ng_container_5_ng_container_4_Template, 2, 2, "ng-container", 11), 
            core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var vm_r3 = core["\u0275\u0275nextContext"](3).ngIf;
                core["\u0275\u0275advance"](4), core["\u0275\u0275property"]("ngForOf", vm_r3.surrogateVisuals);
            }
        }
        function AssistedCreationPaneComponent_ng_container_0_pbi_pane_1_div_2_div_8_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 18)(1, "section", 19), 
            core["\u0275\u0275element"](2, "tri-svg-icon", 20)(3, "p", 21), core["\u0275\u0275template"](4, AssistedCreationPaneComponent_ng_container_0_pbi_pane_1_div_2_div_8_a_4_Template, 1, 0, "a", 22), 
            core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](5, AssistedCreationPaneComponent_ng_container_0_pbi_pane_1_div_2_div_8_ng_container_5_Template, 5, 1, "ng-container", 0), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var vm_r3 = core["\u0275\u0275nextContext"](2).ngIf, ctx_r9 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("name", "info_20_filled"), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", vm_r3.content.type === ctx_r9.errorType && (null == vm_r3.content.error || null == vm_r3.content.error.details ? null : vm_r3.content.error.details.length) > 0), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", vm_r3.surrogateVisuals && vm_r3.surrogateVisuals.length > 0);
            }
        }
        function AssistedCreationPaneComponent_ng_container_0_pbi_pane_1_div_2_Template(rf, ctx) {
            if (1 & rf) {
                var _r36 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div", 4)(1, "section"), core["\u0275\u0275element"](2, "p", 5), 
                core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](3, "field-picker-modern-lazy", 6), 
                core["\u0275\u0275listener"]("onExprChange", function($event) {
                    core["\u0275\u0275restoreView"](_r36);
                    var ctx_r35 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r35.onExprChange($event));
                }), core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](4, AssistedCreationPaneComponent_ng_container_0_pbi_pane_1_div_2_section_4_Template, 3, 1, "section", 0), 
                core["\u0275\u0275template"](5, AssistedCreationPaneComponent_ng_container_0_pbi_pane_1_div_2_hr_5_Template, 1, 0, "hr", 7), 
                core["\u0275\u0275template"](6, AssistedCreationPaneComponent_ng_container_0_pbi_pane_1_div_2_div_6_Template, 3, 0, "div", 8), 
                core["\u0275\u0275template"](7, AssistedCreationPaneComponent_ng_container_0_pbi_pane_1_div_2_ng_container_7_Template, 2, 1, "ng-container", 0), 
                core["\u0275\u0275template"](8, AssistedCreationPaneComponent_ng_container_0_pbi_pane_1_div_2_div_8_Template, 6, 3, "div", 9), 
                core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var vm_r3 = core["\u0275\u0275nextContext"]().ngIf, paneViewModel_r1 = core["\u0275\u0275nextContext"]().ngIf, ctx_r4 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("hidden", paneViewModel_r1.isPaneExpanded), core["\u0275\u0275advance"](3), 
                core["\u0275\u0275property"]("initialExpr", vm_r3.selectedExprs)("allowMultipleValues", !0)("withFieldList", !0)("getDropExprStrategy", ctx_r4.getDropExprStrategy)("menuStrategy", ctx_r4.fieldMenuStrategy), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", vm_r3.suggestedFields), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", vm_r3.content.type === ctx_r4.loadingType || vm_r3.content.type === ctx_r4.successType), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", vm_r3.content.type === ctx_r4.loadingType), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", vm_r3.content.type === ctx_r4.successType), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", vm_r3.content.type === ctx_r4.errorType || vm_r3.content.type === ctx_r4.emptyType);
            }
        }
        function AssistedCreationPaneComponent_ng_container_0_pbi_pane_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r40 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "pbi-pane", 2), core["\u0275\u0275listener"]("onCollapse", function() {
                    core["\u0275\u0275restoreView"](_r40);
                    var ctx_r39 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r39.onPaneCollapsed());
                })("onToggle", function() {
                    core["\u0275\u0275restoreView"](_r40);
                    var ctx_r41 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r41.onPaneToggled());
                }), core["\u0275\u0275elementStart"](1, "pbi-pane-section"), core["\u0275\u0275template"](2, AssistedCreationPaneComponent_ng_container_0_pbi_pane_1_div_2_Template, 9, 11, "div", 3), 
                core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var paneViewModel_r1 = core["\u0275\u0275nextContext"]().ngIf, ctx_r2 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("expanded", paneViewModel_r1.isPaneExpanded)("title", paneViewModel_r1.title)("allowToggle", !ctx_r2.onObject)("optionsSetting", paneViewModel_r1.optionsSetting)("showCollapse", ctx_r2.onObject), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", paneViewModel_r1.isPaneVisible);
            }
        }
        function AssistedCreationPaneComponent_ng_container_0_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, AssistedCreationPaneComponent_ng_container_0_pbi_pane_1_Template, 3, 6, "pbi-pane", 1), 
            core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275elementContainerEnd"]()), 
            2 & rf) {
                var ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](2, 1, ctx_r0.viewModel$));
            }
        }
        var AssistedCreationPaneComponent = function() {
            function AssistedCreationPaneComponent(aggrOps, errorService, featureSwitchService, lazyScoped, panesVisibilityService, localizationService) {
                var _this = this;
                this.aggrOps = aggrOps, this.errorService = errorService, this.featureSwitchService = featureSwitchService, 
                this.lazyScoped = lazyScoped, this.panesVisibilityService = panesVisibilityService, 
                this.localizationService = localizationService, this.paneViewModel$ = this.panesVisibilityService.getPanes$().pipe((0, 
                map.U)(function(panes) {
                    return panes.assistedCreation;
                })), this.loadingType = AssistedCreationContentType.Loading, this.successType = AssistedCreationContentType.Success, 
                this.errorType = AssistedCreationContentType.Error, this.emptyType = AssistedCreationContentType.EmptyResult, 
                this.getDropExprStrategy = {
                    getDropExpr: function(originalPickerExpr, schema) {
                        if ((0, sqExprStaticMembers.y3)(originalPickerExpr)) return Promise.resolve(void 0);
                        var isDiscouragingAggregation = sqExprUtils.m.discourageAggregation(originalPickerExpr, schema);
                        return Promise.resolve(isDiscouragingAggregation ? {
                            expr: originalPickerExpr
                        } : {
                            expr: _this.aggrOps.createExprWithAggregate(originalPickerExpr, schema, !1, [ {
                                numeric: !0
                            } ])
                        });
                    },
                    getDroppedExprChildren: function(_droppedExpr, _position, _schema, _fromUpdate) {}
                }, this.fieldMenuStrategy = new AssistedCreationMenuStrategy(aggrOps, localizationService, function() {
                    return _this.assistedCreationPaneStore.getSelectedExprs();
                });
            }
            return Object.defineProperty(AssistedCreationPaneComponent.prototype, "onObject", {
                get: function() {
                    return this.featureSwitchService.featureSwitches.onObject;
                },
                enumerable: !1,
                configurable: !0
            }), AssistedCreationPaneComponent.prototype.ngOnInit = function() {
                var _this = this;
                this.lazyScoped.get("assistedCreationPaneStore").then(function(store) {
                    return (0, tslib_es6.__awaiter)(_this, void 0, void 0, function() {
                        return (0, tslib_es6.__generator)(this, function(_a) {
                            switch (_a.label) {
                              case 0:
                                return this.assistedCreationPaneStore = store, [ 4, this.assistedCreationPaneStore.initializeState() ];

                              case 1:
                                return _a.sent(), this.viewModel$ = this.assistedCreationPaneStore.viewModel$.pipe((0, 
                                map.U)(function(vm) {
                                    var fieldPickerExprs = _.map(vm.selectedExprs, function(e) {
                                        return {
                                            expr: e
                                        };
                                    });
                                    return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, vm), {
                                        selectedExprs: fieldPickerExprs
                                    });
                                })), [ 2 ];
                            }
                        });
                    });
                });
            }, AssistedCreationPaneComponent.prototype.onExprChange = function(change) {
                var newExpr = change.newExpr, selectedExprs = _.isArray(newExpr) ? _.map(newExpr, function(n) {
                    return n.expr;
                }) : [ newExpr.expr ];
                this.assistedCreationPaneStore.onSelectedExprsChanged(selectedExprs);
            }, AssistedCreationPaneComponent.prototype.onPaneToggled = function() {
                this.panesVisibilityService.togglePaneExpansion("assistedCreation");
            }, AssistedCreationPaneComponent.prototype.onPaneCollapsed = function() {
                this.panesVisibilityService.setPaneExpansion("assistedCreation", !1);
            }, AssistedCreationPaneComponent.prototype.addVisualToCanvas = function(visual, visualRank) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.assistedCreationPaneStore.addVisualToCanvas(visual.visualContainer, visual.guid, visualRank, this.exploreCanvas.value) ];

                          case 1:
                            return _a.sent(), [ 2 ];
                        }
                    });
                });
            }, AssistedCreationPaneComponent.prototype.addField = function(expr) {
                var _a, selectedExprs = null !== (_a = this.assistedCreationPaneStore.getSelectedExprs()) && void 0 !== _a ? _a : [];
                selectedExprs.push(expr), this.assistedCreationPaneStore.onSelectedExprsChanged(selectedExprs);
            }, AssistedCreationPaneComponent.prototype.onSeeErrorDetails = function(error) {
                if (_.isEmpty(null == error ? void 0 : error.details)) debug.fF.assertFail("analysis error details empty"); else {
                    var errorDetails = _.clone(error.details);
                    this.errorService.error("", error.errorCategory, {
                        source: error.source,
                        debugErrorInfo: errorDetails,
                        showAdditionalErrorInfo: !0,
                        title: this.localizationService.get("AssistedCreation_Pane_Error_Title")
                    });
                }
            }, AssistedCreationPaneComponent.\u0275fac = function(t) {
                return new (t || AssistedCreationPaneComponent)(core["\u0275\u0275directiveInject"](sq_aggregation_operations_service.C), core["\u0275\u0275directiveInject"](error_service.T), core["\u0275\u0275directiveInject"](feature_switch_service.vZ), core["\u0275\u0275directiveInject"](lazy_scoped_provider.H), core["\u0275\u0275directiveInject"](panes_visibility_service.r), core["\u0275\u0275directiveInject"](localization_service.o));
            }, AssistedCreationPaneComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: AssistedCreationPaneComponent,
                selectors: [ [ "assisted-creation-pane" ] ],
                inputs: {
                    exploreCanvas: "exploreCanvas"
                },
                decls: 2,
                vars: 3,
                consts: [ [ 4, "ngIf" ], [ "keyboard-shortcuts", "ctrl-F6", 3, "expanded", "title", "allowToggle", "optionsSetting", "showCollapse", "onCollapse", "onToggle", 4, "ngIf" ], [ "keyboard-shortcuts", "ctrl-F6", 3, "expanded", "title", "allowToggle", "optionsSetting", "showCollapse", "onCollapse", "onToggle" ], [ "class", "pane-contents", 3, "hidden", 4, "ngIf" ], [ 1, "pane-contents", 3, "hidden" ], [ "localize", "AssistedCreation_Pane_SubTitle" ], [ 3, "initialExpr", "allowMultipleValues", "withFieldList", "getDropExprStrategy", "menuStrategy", "onExprChange" ], [ "class", "divider", 4, "ngIf" ], [ "aria-live", "polite", "class", "loading", 4, "ngIf" ], [ "class", "errorContent", 4, "ngIf" ], [ "localize", "AssistedCreation_Pane_TryAdd" ], [ 4, "ngFor", "ngForOf" ], [ 3, "suggestedExpr", "addField" ], [ 1, "divider" ], [ "aria-live", "polite", 1, "loading" ], [ "size", "small" ], [ "localize", "DialogFooter_OKActionWorkingOnIt", 1, "workOnIt" ], [ 3, "suggestedVisual", "selectedExprs", "addVisualToCanvas" ], [ 1, "errorContent" ], [ 1, "errorMessage" ], [ 1, "icon-filled", 3, "name" ], [ "localize", "AssistedCreation_Pane_Error" ], [ "class", "pbi-internal-link", "localize", "ErrorPlaceHolder_SeeDetails", 3, "click", 4, "ngIf" ], [ "localize", "ErrorPlaceHolder_SeeDetails", 1, "pbi-internal-link", 3, "click" ], [ 1, "surrogateVisuals" ], [ "localize", "AssistedCreation_Pane_TryOptions" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275template"](0, AssistedCreationPaneComponent_ng_container_0_Template, 3, 3, "ng-container", 0), 
                    core["\u0275\u0275pipe"](1, "async")), 2 & rf && core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](1, 1, ctx.paneViewModel$));
                },
                dependencies: [ common.NgForOf, common.NgIf, field_picker_modern_lazy_component.m, localize_directive.X, pbi_pane_component.VO, pbi_pane_section_component.i, tri_spinner_component.D, tri_svg_icon_component.M, VisualSuggestionCardComponent, SuggestionFieldComponent, common.AsyncPipe ],
                styles: [ "[_nghost-%COMP%]   .pane-contents[_ngcontent-%COMP%]{display:flex;flex-direction:column;height:100%;width:100%;flex:1 0 0}[_nghost-%COMP%]   .pane-contents[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin-block-end:4px}[_nghost-%COMP%]   .pane-contents[_ngcontent-%COMP%]   .divider[_ngcontent-%COMP%]{margin:8px -8px;height:1px;background-color:var(--globalColorGrey88)}[_nghost-%COMP%]   .pane-contents[_ngcontent-%COMP%]   .loading[_ngcontent-%COMP%]{position:relative;top:129px}[_nghost-%COMP%]   .pane-contents[_ngcontent-%COMP%]   .loading[_ngcontent-%COMP%]   .workOnIt[_ngcontent-%COMP%]{display:block;top:9px;width:fit-content;margin:0 auto;font-size:14px;font-weight:400}[_nghost-%COMP%]   .pane-contents[_ngcontent-%COMP%]   .errorContent[_ngcontent-%COMP%]{display:flex;flex-direction:column;height:100%}[_nghost-%COMP%]   .pane-contents[_ngcontent-%COMP%]   .errorContent[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin-block-start:0;margin-block-end:8px}[_nghost-%COMP%]   .pane-contents[_ngcontent-%COMP%]   .errorContent[_ngcontent-%COMP%]   .errorMessage[_ngcontent-%COMP%]{min-height:274px;display:flex;flex-direction:column;align-items:center;justify-content:center;text-align:center;padding-left:30px;padding-right:30px}[_nghost-%COMP%]   .pane-contents[_ngcontent-%COMP%]   .errorContent[_ngcontent-%COMP%]   .errorMessage[_ngcontent-%COMP%]   .icon-filled[_ngcontent-%COMP%]{fill:var(--globalColorGrey38)}[_nghost-%COMP%]   .pane-contents[_ngcontent-%COMP%]   .errorContent[_ngcontent-%COMP%]   .surrogateVisuals[_ngcontent-%COMP%]{flex:1}[_nghost-%COMP%]     pbi-pane-section{height:100%}" ]
            }), AssistedCreationPaneComponent;
        }(), AssistedCreationMenuStrategy = function() {
            function AssistedCreationMenuStrategy(aggrOps, localizationService, getSelectedExprs) {
                this.aggrOps = aggrOps, this.localizationService = localizationService, this.getSelectedExprs = getSelectedExprs;
            }
            return AssistedCreationMenuStrategy.prototype.getMenu = function(droppedExpr, _fieldPosition, schema, _fromUpdate) {
                if (!(0, sqExprStaticMembers.kb)(droppedExpr) && !sqExprUtils.m.discourageAggregation(droppedExpr, schema)) {
                    var menu = {
                        items: []
                    }, droppedExprAggregate = (0, sqExpr._L)(droppedExpr), aggregateMenuItems = (0, 
                    fieldWellMenuViewModelFactory.Hh)(droppedExpr, schema, this.aggrOps, !1, enums.DW.GroupingOrMeasure, [ {
                        numeric: !0
                    } ], this.localizationService);
                    return menu.items = _.map(aggregateMenuItems, function(aggMenuItem) {
                        var _a, menuItemAggregate = null === (_a = aggMenuItem.key) || void 0 === _a ? void 0 : _a.aggregate;
                        return {
                            text: aggMenuItem.text,
                            type: pbi_menu_contracts.iB.Button,
                            data: menuItemAggregate,
                            checkable: !0,
                            checked: menuItemAggregate === droppedExprAggregate
                        };
                    }), menu;
                }
            }, AssistedCreationMenuStrategy.prototype.menuItemClickHandler = function(aggregateItem, position, schema) {
                debug.fF.assertValue(aggregateItem, "aggregateItem");
                var newExpr, selectedExprs = this.getSelectedExprs();
                debug.fF.assert(function() {
                    return !_.isEmpty(selectedExprs);
                }, "selectedExprs should not be empty on menu item click");
                var index = position[0], newAggregate = aggregateItem.data, currentSelectedExpr = selectedExprs[index];
                return newExpr = null == newAggregate ? (0, fieldExprRemoveAggregateRewriter.n)(currentSelectedExpr, schema) : (0, 
                fieldExprChangeAggregateRewriter.k)(currentSelectedExpr, newAggregate), selectedExprs[index] = newExpr, 
                {
                    newExpr: _.map(selectedExprs, function(expr) {
                        return {
                            expr
                        };
                    }),
                    fromUpdate: {
                        type: "replace",
                        replaced: {
                            position
                        }
                    }
                };
            }, AssistedCreationMenuStrategy;
        }(), data_model_utils = __webpack_require__(95867), AssistedCreationLauncherLazyProvider = {
            provide: "assistedCreationLauncher",
            useFactory: function(conceptualSchemaProxy, lazyScoped) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        return [ 2, new AssistedCreationLauncherService(conceptualSchemaProxy, lazyScoped) ];
                    });
                });
            },
            deps: [ conceptual_schema_proxy_service.i, lazy_scoped_provider.H ]
        }, AssistedCreationLauncherService = function() {
            function AssistedCreationLauncherService(conceptualSchemaProxy, lazyScoped) {
                this.conceptualSchemaProxy = conceptualSchemaProxy, this.lazyScoped = lazyScoped;
            }
            return AssistedCreationLauncherService.prototype.isAssistedCreationSupported = function(dataSource, dataModel) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var schema;
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            if (!dataSource) return [ 2, !1 ];
                            if (!data_model_utils.wh(dataModel)) return [ 2, !1 ];
                            _b.label = 1;

                          case 1:
                            return _b.trys.push([ 1, 3, , 4 ]), [ 4, this.conceptualSchemaProxy.get(dataSource) ];

                          case 2:
                            return schema = _b.sent(), [ 3, 4 ];

                          case 3:
                            return _b.sent(), [ 2, !1 ];

                          case 4:
                            return [ 2, this.supportsInsights(schema) ];
                        }
                    });
                });
            }, AssistedCreationLauncherService.prototype.toggleAssistedCreationPaneVisibility = function(entryPoint) {
                return void 0 === entryPoint && (entryPoint = "Ribbon"), (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.ensureStoreService() ];

                          case 1:
                            return _a.sent(), this.assistedCreationStore.togglePaneVisibility(entryPoint), [ 2 ];
                        }
                    });
                });
            }, AssistedCreationLauncherService.prototype.supportsInsights = function(schema) {
                var nonExtensionSchema = _.find(schema.schemas, function(s) {
                    return !s.isExtensionSchema;
                });
                if (!nonExtensionSchema) return !1;
                var insightCapabilities = nonExtensionSchema.capabilities.insights;
                return !!insightCapabilities && !!insightCapabilities.supportsQuerySuggestions;
            }, AssistedCreationLauncherService.prototype.ensureStoreService = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var _a;
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return this.assistedCreationStore ? [ 3, 2 ] : (_a = this, [ 4, this.lazyScoped.get("assistedCreationPaneStore") ]);

                          case 1:
                            _a.assistedCreationStore = _b.sent(), _b.label = 2;

                          case 2:
                            return debug.fF.assertValue(this.assistedCreationStore, "assistedCreationPaneStore"), 
                            [ 2 ];
                        }
                    });
                });
            }, AssistedCreationLauncherService;
        }(), telemetryHelpers = __webpack_require__(41114), AssistedCreationPaneOpenPane = telemetryHelpers.cx["PBI.AssistedCreationPane.OpenPane"] = (0, 
        telemetryHelpers.b1)("PBI.AssistedCreationPane.OpenPane"), AssistedCreationPaneGetSuggestedVisuals = telemetryHelpers.cx["PBI.AssistedCreationPane.GetSuggestedVisuals"] = (0, 
        telemetryHelpers.b1)("PBI.AssistedCreationPane.GetSuggestedVisuals"), AssistedCreationPaneAddVisualToCanvas = telemetryHelpers.cx["PBI.AssistedCreationPane.AddVisualToCanvas"] = (0, 
        telemetryHelpers.b1)("PBI.AssistedCreationPane.AddVisualToCanvas"), context_activity_service = __webpack_require__(22292), Telemetry = __webpack_require__(21617), AssistedCreationTelemetryFactoryProvider = {
            provide: "assistedCreationTelemetry",
            useFactory: function(certifiedEventsService, contextActivityService, telemetryService) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        return [ 2, new AssistedCreationTelemetryService(certifiedEventsService, contextActivityService, telemetryService) ];
                    });
                });
            },
            deps: [ Telemetry.ly, context_activity_service.r, Telemetry.y0 ]
        }, AssistedCreationTelemetryService = function() {
            function AssistedCreationTelemetryService(certifiedEventsService, contextActivityService, telemetryService) {
                this.certifiedEventsService = certifiedEventsService, this.contextActivityService = contextActivityService, 
                this.telemetryService = telemetryService, this.featureName = "AssistedCreationPane", 
                this.visualSuggestionsEventMap = new Map;
            }
            return AssistedCreationTelemetryService.prototype.logOpenPaneEvent = function(entryPoint) {
                this.openPaneEvent = this.telemetryService.logEvent(AssistedCreationPaneOpenPane, {
                    entryPoint
                }), this.logCertifiedEvent("PBI.AssistedCreationPane.OpenPane", {
                    entryPoint
                }, "Succeeded"), this.openPaneActivity = this.contextActivityService.createActivity({
                    name: "AssistedCreationOpenPane",
                    entryPoint
                });
            }, AssistedCreationTelemetryService.prototype.logClosePaneEvent = function() {
                this.isOpenPaneActivityRunning() && (this.openPaneActivity.resolve(), this.openPaneActivity = void 0, 
                this.openPaneEvent = void 0);
            }, AssistedCreationTelemetryService.prototype.startGetSuggestedVisualsEvent = function() {
                var visualSuggestionEvent = this.telemetryService.startChildEvent(this.openPaneEvent, AssistedCreationPaneGetSuggestedVisuals), runningTelemetryEvent = this.certifiedEventsService.startTimedStandardizedFeatureEvent(this.featureName, "PBI.AssistedCreationPane.GetSuggestedVisuals", this.telemetryService.root.id), visualSuggestionsActivity = this.openPaneActivity.createChildActivity({
                    name: "AssistedCreationVisualSuggestions"
                });
                return this.visualSuggestionsEventMap.set(visualSuggestionEvent.event.id, {
                    telemetryEvent: visualSuggestionEvent,
                    certifiedEvent: runningTelemetryEvent,
                    contextActivity: visualSuggestionsActivity
                }), visualSuggestionEvent.event.id;
            }, AssistedCreationTelemetryService.prototype.resolveGetSuggestedVisualsEvent = function(eventId, eventArgs) {
                var deferredEvent = this.visualSuggestionsEventMap.get(eventId);
                if (debug.fF.assertValue(deferredEvent, "Deferred GetSuggestedVisualsEvent"), deferredEvent) {
                    var telemetryEvent = deferredEvent.telemetryEvent, certifiedEvent = deferredEvent.certifiedEvent, contextActivity = deferredEvent.contextActivity, info = telemetryEvent.event.info;
                    info.dimensionsSelected = eventArgs.dimensionsSelected, info.measuresSelected = eventArgs.measuresSelected, 
                    info.visualSuggestions = eventArgs.visualSuggestions, info.isCancelled = eventArgs.isCancelled, 
                    telemetryEvent.resolve();
                    var activityStatus = "Succeeded";
                    eventArgs.isCancelled ? activityStatus = "Cancelled" : 0 === eventArgs.visualSuggestions && (activityStatus = "Failed"), 
                    certifiedEvent.complete(activityStatus), this.visualSuggestionsEventMap.delete(eventId), 
                    this.isOpenPaneActivityRunning() && (contextActivity.setProperty("dimensionsSelected", eventArgs.dimensionsSelected), 
                    contextActivity.setProperty("measuresSelected", eventArgs.measuresSelected), contextActivity.setProperty("cancelled", eventArgs.cancelled), 
                    contextActivity.setProperty("visualSuggestions", eventArgs.visualSuggestions), contextActivity.resolve());
                }
            }, AssistedCreationTelemetryService.prototype.logAddVisualToCanvasEvent = function(eventArgs) {
                debug.fF.assertValue(eventArgs, "eventArgs"), debug.fF.assertValue(this.openPaneEvent, "parentEvent"), 
                this.telemetryService.logChildEvent(this.openPaneEvent, AssistedCreationPaneAddVisualToCanvas, (0, 
                tslib_es6.__assign)({}, eventArgs)), this.logCertifiedEvent("PBI.AssistedCreationPane.AddVisualToCanvas", (0, 
                tslib_es6.__assign)({}, eventArgs), "Succeeded"), this.isOpenPaneActivityRunning() && this.openPaneActivity.createChildInstantActivity((0, 
                tslib_es6.__assign)({
                    name: "AssistedCreationAddVisualToCanvas"
                }, eventArgs)).resolve();
            }, AssistedCreationTelemetryService.prototype.logCertifiedEvent = function(activityName, activityAttributes, activityStatus) {
                this.certifiedEventsService.logStandardizedFeatureEvent({
                    correlationId: this.telemetryService.root.id,
                    activityName,
                    activityAttributes,
                    resultCode: "",
                    featureName: this.featureName,
                    activityStatus
                }, {
                    normalizeHierarchicalSeparators: !0
                });
            }, AssistedCreationTelemetryService.prototype.isOpenPaneActivityRunning = function() {
                var isOpenPaneActivityRunning = this.openPaneActivity && this.openPaneActivity.isRunning();
                return debug.fF.assert(function() {
                    return isOpenPaneActivityRunning;
                }, "parentActivity should be running"), isOpenPaneActivityRunning;
            }, AssistedCreationTelemetryService.\u0275fac = function(t) {
                return new (t || AssistedCreationTelemetryService)(core["\u0275\u0275inject"](Telemetry.ly), core["\u0275\u0275inject"](context_activity_service.r), core["\u0275\u0275inject"](Telemetry.y0));
            }, AssistedCreationTelemetryService.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: AssistedCreationTelemetryService,
                factory: AssistedCreationTelemetryService.\u0275fac
            }), AssistedCreationTelemetryService;
        }(), ExploreUI_module = __webpack_require__(87121), lazy_load_module = __webpack_require__(82156), localization_module = __webpack_require__(79061), UILibrary_module = __webpack_require__(94785), pbi_pane_module = __webpack_require__(13254), pbi_tooltip_module = __webpack_require__(16095), tri_spinner_module = __webpack_require__(5915), tri_svg_icon = __webpack_require__(17177), lazyManifests = [ {
            type: AssistedCreationPaneComponent,
            componentId: "AssistedCreationPaneComponentId"
        } ], providers = [ QuerySuggestionsService, AssistedCreationPaneStoreFactoryLazyProvider, AssistedCreationLauncherLazyProvider, AssistedCreationTelemetryFactoryProvider ], QuickCreateCoreUILazyModule = function() {
            function QuickCreateCoreUILazyModule() {}
            return QuickCreateCoreUILazyModule.\u0275fac = function(t) {
                return new (t || QuickCreateCoreUILazyModule);
            }, QuickCreateCoreUILazyModule.\u0275mod = core["\u0275\u0275defineNgModule"]({
                type: QuickCreateCoreUILazyModule
            }), QuickCreateCoreUILazyModule.\u0275inj = core["\u0275\u0275defineInjector"]({
                providers,
                imports: [ common.CommonModule, ExploreUI_module.J, lazy_load_module.N.withManifests(lazyManifests), localization_module.v, pbi_pane_module.x, pbi_tooltip_module.Z, tri_spinner_module.d, tri_svg_icon.T6, UILibrary_module.g ]
            }), QuickCreateCoreUILazyModule;
        }();
    },
    72941: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            MR: function() {
                return sortBy;
            },
            Xs: function() {
                return createPrototypeVisualContainer;
            },
            s_: function() {
                return getVisualType;
            }
        });
        var _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(47508), _powerbi_legacy_PowerBIVisuals_VisualsCommon_arrayExtensions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(50550), _powerbi_legacy_PowerBIVisuals_VisualsData_semanticQuery_sqExprUtils_isMeasure__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(58295), barName = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_0__.L.clusteredBarChart.name, columnName = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_0__.L.clusteredColumnChart.name, lineChartName = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_0__.L.lineChart.name, nlgName = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_0__.L.textbox.name, shapeName = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_0__.L.shape.name, tableName = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_0__.L.tableEx.name;
        function getVisualType(fields, schema) {
            var _a, dimensions = _.filter(fields, function(f) {
                return !(0, _powerbi_legacy_PowerBIVisuals_VisualsData_semanticQuery_sqExprUtils_isMeasure__WEBPACK_IMPORTED_MODULE_1__.k)(f);
            }), temporalField = _.find(dimensions, function(d) {
                var _a, type = null === (_a = d.getMetadata(schema)) || void 0 === _a ? void 0 : _a.type;
                return (null == type ? void 0 : type.temporal) || (null == type ? void 0 : type.dateTime);
            });
            if (!temporalField) return _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_0__.L.clusteredBarChart.name;
            var temporalType = null === (_a = temporalField.getMetadata(schema)) || void 0 === _a ? void 0 : _a.type;
            return (null == temporalType ? void 0 : temporalType.numeric) || (null == temporalType ? void 0 : temporalType.integer) || (null == temporalType ? void 0 : temporalType.dateTime) ? _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_0__.L.lineChart.name : _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_0__.L.clusteredColumnChart.name;
        }
        function sortBy(expr, visualType) {
            var sortBy, firstMeasure = _.find(expr, function(r) {
                return (0, _powerbi_legacy_PowerBIVisuals_VisualsData_semanticQuery_sqExprUtils_isMeasure__WEBPACK_IMPORTED_MODULE_1__.k)(r);
            }), firstDimension = _.find(expr, function(r) {
                return !(0, _powerbi_legacy_PowerBIVisuals_VisualsData_semanticQuery_sqExprUtils_isMeasure__WEBPACK_IMPORTED_MODULE_1__.k)(r);
            });
            return visualType === barName ? sortBy = {
                expr: firstMeasure,
                direction: 2
            } : visualType !== columnName && visualType !== lineChartName || (sortBy = {
                expr: firstDimension,
                direction: 1
            }), sortBy;
        }
        function createPrototypeVisualContainer(fields, visualType, schema, visualAuthoringCore, layouts, orderBy) {
            var _a, newConfig;
            if (visualType === shapeName || visualType === nlgName) newConfig = {
                singleVisual: {
                    visualType
                }
            }; else if (newConfig = visualAuthoringCore.create({
                schema,
                visualType,
                expr: fields
            }), visualType !== tableName) {
                var query = newConfig.singleVisual.query, projections = null === (_a = query.projections.Category) || void 0 === _a ? void 0 : _a.all();
                _.size(projections) > 1 && (query.projections.Category.activeProjectionRefs = _.map(projections, function(p) {
                    return p.queryRef;
                }));
            }
            return orderBy && newConfig.singleVisual.query.orderBy([ orderBy ]), {
                name: "protoName",
                config: newConfig,
                layouts: layouts ? (0, _powerbi_legacy_PowerBIVisuals_VisualsCommon_arrayExtensions__WEBPACK_IMPORTED_MODULE_2__.Br)([ {
                    id: 0,
                    position: void 0
                } ]) : void 0
            };
        }
    }
} ]);