"use strict";

(self.webpackChunkdesktop = self.webpackChunkdesktop || []).push([ [ "selection-pane" ], {
    78656: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, {
            SelectionPaneModule: function() {
                return SelectionPaneModule;
            }
        });
        var tslib_es6 = __webpack_require__(81337), selectionUtils = __webpack_require__(21728), core = __webpack_require__(50423), selection_service = __webpack_require__(72262), SelectionPaneClickStrategy = function() {
            function SelectionPaneClickStrategy(selectionService) {
                this.selectionService = selectionService;
            }
            return SelectionPaneClickStrategy.prototype.click = function(event) {
                var contract = event.flatNode.node.data.canvasItem.contract, flatNode = event.flatNode, sourceEvent = event.sourceEvent;
                sourceEvent.ctrlKey ? selectionUtils.UP.isCanvasItemSelected(contract, this.selectionService) ? selectionUtils.UP.unselectCanvasItem(contract, this.selectionService) : (selectionUtils.UP.selectCanvasItem(contract, this.selectionService, 1), 
                this.startRangeSelectionNode = flatNode.node) : sourceEvent.shiftKey && this.startRangeSelectionNode ? flatNode.node.parent === this.startRangeSelectionNode.parent ? (this.selectionService.clearSelection(), 
                this.selectNodesRange(this.startRangeSelectionNode, flatNode.node)) : this.singleSelection(flatNode.node, contract) : selectionUtils.UP.isCanvasItemSelected(contract, this.selectionService) ? (this.selectionService.clearSelection(), 
                this.startRangeSelectionNode = void 0) : this.singleSelection(flatNode.node, contract), 
                event.tree.renderNodeChanges();
            }, SelectionPaneClickStrategy.prototype.setTree = function(tree) {
                this.tree = tree;
            }, SelectionPaneClickStrategy.prototype.singleSelection = function(node, contract) {
                this.selectionService.clearSelection(), selectionUtils.UP.selectCanvasItem(contract, this.selectionService), 
                this.startRangeSelectionNode = node;
            }, SelectionPaneClickStrategy.prototype.selectNodesRange = function(startNode, endNode) {
                var startIndex, endIndex, siblingArray;
                startNode.parent && endNode.parent ? (startIndex = startNode.parent.children.findIndex(function(node) {
                    return startNode.data.canvasItem.name === node.data.canvasItem.name;
                }), endIndex = endNode.parent.children.findIndex(function(node) {
                    return endNode.data.canvasItem.name === node.data.canvasItem.name;
                }), siblingArray = endNode.parent.children) : (startIndex = this.tree.nodes.findIndex(function(node) {
                    return startNode.data.canvasItem.name === node.data.canvasItem.name;
                }), endIndex = this.tree.nodes.findIndex(function(node) {
                    return endNode.data.canvasItem.name === node.data.canvasItem.name;
                }), siblingArray = this.tree.nodes), selectionUtils.UP.selectCanvasItems(siblingArray.slice(Math.min(startIndex, endIndex), Math.max(startIndex, endIndex) + 1).map(function(item) {
                    return item.data.canvasItem.contract;
                }), this.selectionService);
            }, SelectionPaneClickStrategy.\u0275fac = function(t) {
                return new (t || SelectionPaneClickStrategy)(core["\u0275\u0275inject"](selection_service.z));
            }, SelectionPaneClickStrategy.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: SelectionPaneClickStrategy,
                factory: SelectionPaneClickStrategy.\u0275fac
            }), SelectionPaneClickStrategy;
        }(), visualContainerUtils = __webpack_require__(60661), event_bridge_service = __webpack_require__(11494), SelectionPaneHoverStrategy = function() {
            function SelectionPaneHoverStrategy(eventBridge) {
                this.eventBridge = eventBridge;
            }
            return SelectionPaneHoverStrategy.prototype.enter = function(event) {
                (0, visualContainerUtils.vz)(!0, event.flatNode.node.data.canvasItem.contract.name, this.eventBridge);
            }, SelectionPaneHoverStrategy.prototype.leave = function(event) {
                (0, visualContainerUtils.vz)(!1, event.flatNode.node.data.canvasItem.contract.name, this.eventBridge);
            }, SelectionPaneHoverStrategy.\u0275fac = function(t) {
                return new (t || SelectionPaneHoverStrategy)(core["\u0275\u0275inject"](event_bridge_service.J));
            }, SelectionPaneHoverStrategy.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: SelectionPaneHoverStrategy,
                factory: SelectionPaneHoverStrategy.\u0275fac
            }), SelectionPaneHoverStrategy;
        }(), visualContainerGroup = __webpack_require__(7077), StrategyUtils = function() {
            function StrategyUtils() {}
            return StrategyUtils.getFlattenedVisibleNodes = function(nodes) {
                for (var result = [], _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {
                    var node = nodes_1[_i];
                    result.push(node), node.expanded && (0, visualContainerGroup.q4)(node.data.canvasItem) && (result = result.concat(this.getFlattenedVisibleNodes(node.children)));
                }
                return result;
            }, StrategyUtils.isDroppedAtEndOfList = function(destinationIndex, flattenedVisibleNodes) {
                if (destinationIndex <= 0) return !1;
                var nodeBeforeDest = flattenedVisibleNodes[destinationIndex - 1];
                return this.isTheLastChild(nodeBeforeDest) && nodeBeforeDest && ((0, visualContainerGroup.Vz)(nodeBeforeDest.data.canvasItem) || !nodeBeforeDest.expanded);
            }, StrategyUtils.isTheLastChild = function(node) {
                return node.parent && node.data.canvasItem.name === node.parent.children[node.parent.children.length - 1].data.canvasItem.name;
            }, StrategyUtils.createNewNameChangeObject = function(value) {
                return [ {
                    merge: [ {
                        objectName: "title",
                        properties: {
                            text: value
                        },
                        selector: null
                    } ]
                } ];
            }, StrategyUtils;
        }(), itemGrouping = __webpack_require__(23306), pbi_tree_contracts = __webpack_require__(46015), Subject = __webpack_require__(30794), exploration_navigation_ex_service = __webpack_require__(59142), visual_container_group_authoring_service = __webpack_require__(62544), lazy_scoped_provider = __webpack_require__(28894), SelectionPaneLayerDragDropStrategy = function() {
            function SelectionPaneLayerDragDropStrategy(explorationNavigationService, lazyScoped, selectionService, visualContainerGroupAuthoringService) {
                this.explorationNavigationService = explorationNavigationService, this.lazyScoped = lazyScoped, 
                this.selectionService = selectionService, this.visualContainerGroupAuthoringService = visualContainerGroupAuthoringService, 
                this.dragDropChange$ = new Subject.xQ, this.zIndexPromise = this.lazyScoped.get("zIndexService");
            }
            return SelectionPaneLayerDragDropStrategy.prototype.dragStart = function(_a) {
                var sourceEvent = _a.sourceEvent, flatNode = _a.flatNode;
                this.dragSourceNode = flatNode.node, sourceEvent.dataTransfer.setData(pbi_tree_contracts.L$, JSON.stringify({
                    id: flatNode.node.id,
                    label: flatNode.node.displayName
                })), selectionUtils.UP.isCanvasItemSelected(flatNode.node.data.canvasItem.contract, this.selectionService) || selectionUtils.UP.selectCanvasItem(flatNode.node.data.canvasItem.contract, this.selectionService), 
                this.flattenedVisibleNodes = StrategyUtils.getFlattenedVisibleNodes(this.tree.nodes), 
                this.startIndex = this.flattenedVisibleNodes.findIndex(function(node) {
                    return node.data.canvasItem.name === flatNode.node.data.canvasItem.name;
                });
            }, SelectionPaneLayerDragDropStrategy.prototype.drop = function(_a) {
                var sourceEvent = _a.sourceEvent, flatNode = _a.flatNode;
                if (this.dragSourceNode && (flatNode.node.dragBorderTop = !1, flatNode.node.dragBorderBottom = !1, 
                sourceEvent.dataTransfer.getData(pbi_tree_contracts.L$) && !(this.dragSourceNode.data.canvasItem.name === flatNode.node.data.canvasItem.name || (0, 
                visualContainerGroup.q4)(this.dragSourceNode.data.canvasItem) && (0, itemGrouping.sE)(flatNode.node.data.canvasItem.name, this.dragSourceNode.data.canvasItem.children)))) {
                    var destinationIndex = this.flattenedVisibleNodes.findIndex(function(node) {
                        return node.data.canvasItem.name === flatNode.node.data.canvasItem.name;
                    });
                    sourceEvent.preventDefault(), this.dropHelper(flatNode, destinationIndex);
                }
            }, SelectionPaneLayerDragDropStrategy.prototype.dropHelper = function(flatNode, destinationIndex) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var zIndexService, destItem, draggedItemContract, siblings, isInsertingAtTheEnd, exploreCanvas;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.zIndexPromise ];

                          case 1:
                            return zIndexService = _a.sent(), draggedItemContract = this.dragSourceNode.data.canvasItem.contract, 
                            siblings = (destItem = flatNode.node.data.canvasItem).contract.parentGroup ? destItem.contract.parentGroup.children : this.tree.nodes.map(function(node) {
                                return node.data.canvasItem.contract;
                            }), isInsertingAtTheEnd = !1, destinationIndex < this.startIndex ? destinationIndex - 1 > 0 && StrategyUtils.isDroppedAtEndOfList(destinationIndex, this.flattenedVisibleNodes) ? (zIndexService.moveBefore((destItem = this.flattenedVisibleNodes[destinationIndex - 1].data.canvasItem).contract.parentGroup.children, destItem, [ draggedItemContract ]), 
                            isInsertingAtTheEnd = StrategyUtils.isDroppedAtEndOfList(destinationIndex, this.flattenedVisibleNodes)) : zIndexService.moveAfter(siblings, destItem, [ draggedItemContract ]) : (0, 
                            visualContainerGroup.q4)(flatNode.node.data.canvasItem) && flatNode.node.expanded ? zIndexService.moveAfter((destItem = this.flattenedVisibleNodes[destinationIndex + 1].data.canvasItem).contract.parentGroup.children, destItem, [ draggedItemContract ]) : (siblings.findIndex(function(item) {
                                return item.name === destItem.name;
                            }) === siblings.length - 1 && (isInsertingAtTheEnd = !0), zIndexService.moveBefore(siblings, destItem, [ draggedItemContract ])), 
                            destItem.contract.parentGroup === draggedItemContract.parentGroup || (exploreCanvas = this.explorationNavigationService.getCurrentExploreCanvas(), 
                            this.visualContainerGroupAuthoringService.moveCanvasItemInTree(exploreCanvas, draggedItemContract, destItem.contract, isInsertingAtTheEnd)), 
                            this.dragDropChange$.next(!0), [ 2 ];
                        }
                    });
                });
            }, SelectionPaneLayerDragDropStrategy.prototype.dragOver = function(_a) {
                this.dragSourceNode && _a.sourceEvent.preventDefault();
            }, SelectionPaneLayerDragDropStrategy.prototype.dragEnter = function(_a) {
                this.dragSourceNode && this.dragEnterHelper(_a.flatNode);
            }, SelectionPaneLayerDragDropStrategy.prototype.dragEnterHelper = function(flatNode) {
                if (!(this.dragSourceNode.data.canvasItem.name === flatNode.node.data.canvasItem.name || (0, 
                visualContainerGroup.q4)(this.dragSourceNode.data.canvasItem) && (0, itemGrouping.sE)(flatNode.node.data.canvasItem.name, this.dragSourceNode.data.canvasItem.children))) {
                    var destinationIndex = this.flattenedVisibleNodes.findIndex(function(node) {
                        return node.data.canvasItem.name === flatNode.node.data.canvasItem.name;
                    });
                    if (destinationIndex < this.startIndex) {
                        if (destinationIndex - 1 >= 0 && this.flattenedVisibleNodes[destinationIndex - 1].grayedOut) return;
                        flatNode.node.dragBorderTop = !0;
                    } else {
                        if (flatNode.node.grayedOut) return;
                        flatNode.node.dragBorderBottom = !0;
                    }
                }
            }, SelectionPaneLayerDragDropStrategy.prototype.dragLeave = function(_a) {
                var flatNode = _a.flatNode;
                flatNode.node.dragBorderTop = !1, flatNode.node.dragBorderBottom = !1;
            }, SelectionPaneLayerDragDropStrategy.prototype.dragEnd = function(_a) {
                var flatNode = _a.flatNode;
                this.dragSourceNode && (this.dragSourceNode = void 0, flatNode.node.dragBorderTop = !1, 
                flatNode.node.dragBorderBottom = !1, this.startIndex = void 0);
            }, SelectionPaneLayerDragDropStrategy.prototype.getDragDropChange$ = function() {
                return this.dragDropChange$.asObservable();
            }, SelectionPaneLayerDragDropStrategy.prototype.setTree = function(tree) {
                this.tree = tree;
            }, SelectionPaneLayerDragDropStrategy.\u0275fac = function(t) {
                return new (t || SelectionPaneLayerDragDropStrategy)(core["\u0275\u0275inject"](exploration_navigation_ex_service.I), core["\u0275\u0275inject"](lazy_scoped_provider.H), core["\u0275\u0275inject"](selection_service.z), core["\u0275\u0275inject"](visual_container_group_authoring_service.p));
            }, SelectionPaneLayerDragDropStrategy.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: SelectionPaneLayerDragDropStrategy,
                factory: SelectionPaneLayerDragDropStrategy.\u0275fac
            }), SelectionPaneLayerDragDropStrategy;
        }(), visual_authoring_service = __webpack_require__(66890), SelectionPaneLayerEditLabelStrategy = function() {
            function SelectionPaneLayerEditLabelStrategy(visualAuthoring) {
                this.visualAuthoring = visualAuthoring;
            }
            return SelectionPaneLayerEditLabelStrategy.prototype.beginEdit = function(event) {
                event.sourceEvent && event.sourceEvent.stopPropagation(), this.previousLabel = event.flatNode.node.displayName, 
                event.flatNode.node.editing = !0;
            }, SelectionPaneLayerEditLabelStrategy.prototype.edit = function(event) {
                event.flatNode.node.displayName = event.value;
            }, SelectionPaneLayerEditLabelStrategy.prototype.endEdit = function(event) {
                event.sourceEvent.stopPropagation();
                var node = event.flatNode.node;
                if (node.editing = !1, 0 !== node.displayName.length && this.previousLabel !== node.displayName) {
                    var newName = event.flatNode.node.displayName;
                    event.flatNode.node.displayName = newName, event.flatNode.node.ariaLabel = newName, 
                    (0, visualContainerGroup.Vz)(event.flatNode.node.data.canvasItem) ? this.visualAuthoring.persistVCProperties(StrategyUtils.createNewNameChangeObject(newName), event.flatNode.node.data.canvasItem.contract) : this.visualAuthoring.setVisualContainerGroupDisplayName(newName, [ event.flatNode.node.data.canvasItem.contract ]), 
                    event.tree.renderNodeChanges();
                } else event.flatNode.node.displayName = this.previousLabel;
            }, SelectionPaneLayerEditLabelStrategy.\u0275fac = function(t) {
                return new (t || SelectionPaneLayerEditLabelStrategy)(core["\u0275\u0275inject"](visual_authoring_service.$8));
            }, SelectionPaneLayerEditLabelStrategy.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: SelectionPaneLayerEditLabelStrategy,
                factory: SelectionPaneLayerEditLabelStrategy.\u0275fac
            }), SelectionPaneLayerEditLabelStrategy;
        }(), visualContainer2 = __webpack_require__(80981), visualContainerGroup1 = __webpack_require__(18659), visualContainerGroup2 = __webpack_require__(9215), debug = __webpack_require__(62458), icons = __webpack_require__(82332), conceptual_schema_proxy_service = __webpack_require__(26898), data_sources_service = __webpack_require__(83008), exploration_display_name_service = __webpack_require__(13702), feature_switch_service = __webpack_require__(9380), localization_service = __webpack_require__(65181), pause_queries_service = __webpack_require__(39631), screen_reader_service = __webpack_require__(83309), visual_plugin_service = __webpack_require__(29866), SelectionPaneLayerInlineItemStrategy = function() {
            function SelectionPaneLayerInlineItemStrategy(conceptualSchemaProxy, dataSources, displayNameService, featureSwitchService, localizationService, pauseQueriesService, screenReaderService, visualAuthoring, visualPlugin) {
                this.conceptualSchemaProxy = conceptualSchemaProxy, this.dataSources = dataSources, 
                this.displayNameService = displayNameService, this.featureSwitchService = featureSwitchService, 
                this.localizationService = localizationService, this.pauseQueriesService = pauseQueriesService, 
                this.screenReaderService = screenReaderService, this.visualAuthoring = visualAuthoring, 
                this.visualPlugin = visualPlugin, this.inlineItemChange$ = new Subject.xQ, this.inlineItemToggleVisibilityShown = {
                    type: pbi_tree_contracts.Q_.Button,
                    id: icons.SO,
                    icon: {
                        type: 0,
                        glyph: icons.qV
                    },
                    label: this.localizationService.get("ExplorationCanvasItemsPane_Hide")
                }, this.inlineItemToggleVisibilityHidden = {
                    type: pbi_tree_contracts.Q_.Button,
                    id: icons.zB,
                    icon: {
                        type: 0,
                        glyph: icons.cD
                    },
                    label: this.localizationService.get("ExplorationCanvasItemsPane_Show")
                }, this.inlineItemToggleVisibilityDisabled = {
                    type: pbi_tree_contracts.Q_.Icon,
                    id: icons.S6,
                    icon: {
                        type: 0,
                        glyph: icons.qV
                    },
                    label: this.localizationService.get("ExplorationCanvasItemsPane_Hide"),
                    disabled: !0
                }, this.inlineItemRefreshVisual = {
                    type: pbi_tree_contracts.Q_.Button,
                    id: icons.TV,
                    icon: {
                        type: 0,
                        glyph: icons.c5
                    },
                    label: this.localizationService.get("Refresh")
                };
            }
            return SelectionPaneLayerInlineItemStrategy.prototype.click = function(event) {
                var _a, _b, _c, _d, _e, _this = this, flatNode = event.flatNode, canvasItemContract = null === (_b = null === (_a = flatNode.node.data) || void 0 === _a ? void 0 : _a.canvasItem) || void 0 === _b ? void 0 : _b.contract, parentCanvasItemContract = null === (_e = null === (_d = null === (_c = flatNode.node.parent) || void 0 === _c ? void 0 : _c.data) || void 0 === _d ? void 0 : _d.canvasItem) || void 0 === _e ? void 0 : _e.contract;
                if (event.item.id === icons.SO) {
                    if (!flatNode.node.parent || parentCanvasItemContract && !this.isItemHidden(parentCanvasItemContract)) {
                        if (debug.fF.assert(function() {
                            return !_this.isItemHidden(canvasItemContract);
                        }, "Selection inline item strategy - item should not be hidden already"), this.isItemVisibilityDisabled(canvasItemContract)) return;
                        this.setVisibility(canvasItemContract, !1), this.readOutVisibilityChange(!0, canvasItemContract);
                    }
                } else if (event.item.id === icons.zB) (!flatNode.node.parent || flatNode.node.parent && !this.isItemHidden(parentCanvasItemContract)) && (debug.fF.assert(function() {
                    return _this.isItemHidden(canvasItemContract);
                }, "Selection inline item strategy - item should not be shown already"), this.setVisibility(canvasItemContract, !0), 
                this.readOutVisibilityChange(!1, canvasItemContract)); else {
                    if (event.item.id === icons.S6) return;
                    event.item.id === icons.TV ? this.pauseQueriesService.refreshVisuals(canvasItemContract.name) : debug.fF.assertFail("Selection inline item strategy - unexpected button id");
                }
                event.sourceEvent.stopPropagation(), this.inlineItemChange$.next(!0);
            }, SelectionPaneLayerInlineItemStrategy.prototype.setVisibility = function(canvasItem, visible) {
                this.setCanvasItemsVisibility(canvasItem, visible);
            }, SelectionPaneLayerInlineItemStrategy.prototype.setCanvasItemsVisibility = function(canvasItem, visible) {
                var hidden = !visible;
                (0, visualContainerGroup2.Vz)(canvasItem) ? this.visualAuthoring.setVisibility(hidden, [ canvasItem ]) : this.visualAuthoring.setVisualContainerGroupVisibility(hidden, [ canvasItem ]);
            }, SelectionPaneLayerInlineItemStrategy.prototype.isItemHidden = function(canvasItem) {
                return (0, visualContainerGroup2.Vz)(canvasItem) ? (0, visualContainer2.xj)(canvasItem.config.singleVisual) : (0, 
                visualContainerGroup1.xj)(canvasItem);
            }, SelectionPaneLayerInlineItemStrategy.prototype.isItemVisibilityDisabled = function(canvasItem) {
                for (var parentGroup = canvasItem.parentGroup; parentGroup; ) {
                    if (parentGroup.isHidden) return !0;
                    parentGroup = parentGroup.parentGroup;
                }
                return parentGroup && parentGroup.isHidden;
            }, SelectionPaneLayerInlineItemStrategy.prototype.getInlineItemChange$ = function() {
                return this.inlineItemChange$.asObservable();
            }, SelectionPaneLayerInlineItemStrategy.prototype.getInlineItems = function(canvasItem) {
                var inlineItems = [];
                return this.isItemInPausedState(canvasItem) && inlineItems.push(this.inlineItemRefreshVisual), 
                this.isItemHidden(canvasItem.contract) ? inlineItems.push(this.inlineItemToggleVisibilityHidden) : this.isItemVisibilityDisabled(canvasItem.contract) ? inlineItems.push(this.inlineItemToggleVisibilityDisabled) : inlineItems.push(this.inlineItemToggleVisibilityShown), 
                inlineItems;
            }, SelectionPaneLayerInlineItemStrategy.prototype.isItemInPausedState = function(canvasItem) {
                return !(!this.featureSwitchService.featureSwitches.optimizeTabRibbon || !(0, visualContainerGroup.Vz)(canvasItem) || !canvasItem.visualPausedWarning);
            }, SelectionPaneLayerInlineItemStrategy.prototype.readOutVisibilityChange = function(changeToHidden, canvasItemContract) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var alertString, canvasItemName, alertStringLocalized;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return alertString = changeToHidden ? "ExplorationCanvasItemsPane_Hidden" : "ExplorationCanvasItemsPane_Shown", 
                            (0, visualContainerGroup2.Vz)(canvasItemContract) ? [ 4, (0, visualContainerUtils.uo)(canvasItemContract, {
                                dataSources: this.dataSources,
                                conceptualSchemaProxy: this.conceptualSchemaProxy,
                                visualPlugin: this.visualPlugin,
                                displayNameService: this.displayNameService
                            }) ] : [ 3, 2 ];

                          case 1:
                            return canvasItemName = _a.sent(), [ 3, 3 ];

                          case 2:
                            canvasItemName = canvasItemContract.displayName, _a.label = 3;

                          case 3:
                            return alertStringLocalized = this.localizationService.format(alertString, canvasItemName), 
                            this.screenReaderService.alertPolite(alertStringLocalized), [ 2 ];
                        }
                    });
                });
            }, SelectionPaneLayerInlineItemStrategy.\u0275fac = function(t) {
                return new (t || SelectionPaneLayerInlineItemStrategy)(core["\u0275\u0275inject"](conceptual_schema_proxy_service.i), core["\u0275\u0275inject"](data_sources_service.D), core["\u0275\u0275inject"](exploration_display_name_service.O), core["\u0275\u0275inject"](feature_switch_service.vZ), core["\u0275\u0275inject"](localization_service.o), core["\u0275\u0275inject"](pause_queries_service.F), core["\u0275\u0275inject"](screen_reader_service.g), core["\u0275\u0275inject"](visual_authoring_service.$8), core["\u0275\u0275inject"](visual_plugin_service.D));
            }, SelectionPaneLayerInlineItemStrategy.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: SelectionPaneLayerInlineItemStrategy,
                factory: SelectionPaneLayerInlineItemStrategy.\u0275fac
            }), SelectionPaneLayerInlineItemStrategy;
        }(), SelectionPaneLayerKeyboardStrategy = function() {
            function SelectionPaneLayerKeyboardStrategy() {
                this.sendItemsDirectionKeyboard$ = new Subject.xQ, this.toggleItemsVisibilityKeyboard$ = new Subject.xQ;
            }
            return SelectionPaneLayerKeyboardStrategy.prototype.getSendItemsDirectionKeyboard$ = function() {
                return this.sendItemsDirectionKeyboard$;
            }, SelectionPaneLayerKeyboardStrategy.prototype.getToggleItemsVisibilityKeyboard$ = function() {
                return this.toggleItemsVisibilityKeyboard$;
            }, SelectionPaneLayerKeyboardStrategy.prototype.treeNodeKeyDown = function(_a) {
                var sourceEvent = _a.sourceEvent;
                if (_a.flatNode.node.editable && (sourceEvent.ctrlKey || sourceEvent.metaKey) && sourceEvent.shiftKey) switch (sourceEvent.key) {
                  case "B":
                    return this.sendItemsDirectionKeyboard$.next(!1), !0;

                  case "F":
                    return this.sendItemsDirectionKeyboard$.next(!0), !0;

                  case "S":
                    return this.toggleItemsVisibilityKeyboard$.next(), !0;

                  default:
                    return !1;
                }
                return !1;
            }, SelectionPaneLayerKeyboardStrategy.prototype.backgroundKeyDown = function(_event) {}, 
            SelectionPaneLayerKeyboardStrategy.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: SelectionPaneLayerKeyboardStrategy,
                factory: SelectionPaneLayerKeyboardStrategy.\u0275fac = function(t) {
                    return new (t || SelectionPaneLayerKeyboardStrategy);
                }
            }), SelectionPaneLayerKeyboardStrategy;
        }(), visual_container_menu_factory_service = __webpack_require__(72038), visualContainerContextMenu = __webpack_require__(66901), pbi_menu_contracts = __webpack_require__(64560), SelectionPaneLayerMenuStrategy = function() {
            function SelectionPaneLayerMenuStrategy(localizationService, visualContainerMenuFactoryService) {
                this.localizationService = localizationService, this.visualContainerMenuFactoryService = visualContainerMenuFactoryService, 
                this.menuMode = pbi_menu_contracts.Kb.Compact;
            }
            return SelectionPaneLayerMenuStrategy.prototype.getMenu = function(event) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var commands, menuItemCollection;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.visualContainerMenuFactoryService.createCommands(event.flatNode.node.data.canvasItem, {
                                data: void 0,
                                position: {
                                    x: 0,
                                    y: 0
                                }
                            }, void 0, void 0, !1, {}) ];

                          case 1:
                            return commands = _a.sent(), this.vcContextMenu = new visualContainerContextMenu.u(this.localizationService), 
                            [ 4, this.vcContextMenu.createItems(commands) ];

                          case 2:
                            return menuItemCollection = _a.sent(), [ 2, visual_container_menu_factory_service.p.createPbiMenu(menuItemCollection.items, !1) ];
                        }
                    });
                });
            }, SelectionPaneLayerMenuStrategy.prototype.menuItemClick = function(event) {
                var _this = this;
                debug.fF.assert(function() {
                    return !!_this.vcContextMenu;
                }, "SelectionPaneLayerMenuStrategy - Issue in state for commands"), visual_container_menu_factory_service.p.menuItemClick(event.menuItem.id, this.vcContextMenu);
            }, SelectionPaneLayerMenuStrategy.\u0275fac = function(t) {
                return new (t || SelectionPaneLayerMenuStrategy)(core["\u0275\u0275inject"](localization_service.o), core["\u0275\u0275inject"](visual_container_menu_factory_service.p));
            }, SelectionPaneLayerMenuStrategy.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: SelectionPaneLayerMenuStrategy,
                factory: SelectionPaneLayerMenuStrategy.\u0275fac
            }), SelectionPaneLayerMenuStrategy;
        }(), ReplaySubject = __webpack_require__(33554), BehaviorSubject = __webpack_require__(35510), SelectionPaneListOrderService = function() {
            function SelectionPaneListOrderService() {
                this.zSortedState$ = new BehaviorSubject.X(!1), this.tabSortedState$ = new BehaviorSubject.X(!1), 
                this.listRebuildData$ = new Subject.xQ, this.notifyUserLayerDataChanged$ = new Subject.xQ;
            }
            return SelectionPaneListOrderService.prototype.getZSortedState$ = function() {
                return this.zSortedState$;
            }, SelectionPaneListOrderService.prototype.getTabSortedState$ = function() {
                return this.tabSortedState$;
            }, SelectionPaneListOrderService.prototype.markTabSorted = function(sorted) {
                this.tabSortedState$.next(sorted);
            }, SelectionPaneListOrderService.prototype.markZSorted = function(sorted) {
                this.zSortedState$.next(sorted);
            }, SelectionPaneListOrderService.prototype.getListRebuildData$ = function() {
                return this.listRebuildData$;
            }, SelectionPaneListOrderService.prototype.rebuildListData = function() {
                this.listRebuildData$.next();
            }, SelectionPaneListOrderService.prototype.getNotifyUserLayerDataChanged$ = function() {
                return this.notifyUserLayerDataChanged$;
            }, SelectionPaneListOrderService.prototype.notifyUserLayerDataChanged = function(bringForward) {
                this.notifyUserLayerDataChanged$.next(bringForward);
            }, SelectionPaneListOrderService.prototype.sortItemsByProperty = function(items, lambdaFunctionToSortBy, itemsToCompare) {
                var sortedItems = _.orderBy(items, lambdaFunctionToSortBy, "desc"), sortingResult = {
                    sortedItems
                };
                itemsToCompare && (sortingResult.isDirty = !this.areCanvasItemsEqual(itemsToCompare, sortedItems));
                for (var i = 0; i < sortedItems.length; i++) {
                    var item = sortedItems[i], itemToCompare = itemsToCompare && itemsToCompare[i];
                    if ((0, visualContainerGroup.q4)(item)) {
                        var childrenItemToCompare = itemToCompare && (0, visualContainerGroup.q4)(itemToCompare) && itemToCompare.children || [], result = this.sortItemsByProperty(item.children, lambdaFunctionToSortBy, itemsToCompare ? childrenItemToCompare : void 0);
                        itemsToCompare && (sortingResult.isDirty = sortingResult.isDirty || result.isDirty), 
                        item.children = result.sortedItems;
                    }
                }
                return sortingResult;
            }, SelectionPaneListOrderService.prototype.areCanvasItemsEqual = function(oldData, newData) {
                if (oldData.length !== newData.length) return !1;
                for (var i = 0; i < oldData.length; i++) {
                    var item = oldData[i], newItem = newData[i];
                    if ((0, visualContainerGroup.Vz)(item) !== (0, visualContainerGroup.Vz)(newItem) || item.name !== newItem.name) return !1;
                }
                return !0;
            }, SelectionPaneListOrderService.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: SelectionPaneListOrderService,
                factory: SelectionPaneListOrderService.\u0275fac = function(t) {
                    return new (t || SelectionPaneListOrderService);
                },
                providedIn: "root"
            }), SelectionPaneListOrderService;
        }();
        function SelectionPaneListComponent_ng_container_20_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275element"](1, "tab-order-section", 9), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("groups", ctx_r0.groups)("visualContainers", ctx_r0.visualContainers);
            }
        }
        function SelectionPaneListComponent_ng_container_22_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275element"](1, "layer-order-section", 9), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var ctx_r1 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("groups", ctx_r1.groups)("visualContainers", ctx_r1.visualContainers);
            }
        }
        var _c0 = function(a0) {
            return {
                active: a0
            };
        }, _c1 = function(a0, a1) {
            return {
                sectionLength: a0,
                currentSection: a1
            };
        }, SelectionPaneListSection = function(SelectionPaneListSection) {
            return SelectionPaneListSection[SelectionPaneListSection.listOrderSection = 0] = "listOrderSection", 
            SelectionPaneListSection[SelectionPaneListSection.tabOrderSection = 1] = "tabOrderSection", 
            SelectionPaneListSection;
        }({}), OrderStrategy = function(OrderStrategy) {
            return OrderStrategy[OrderStrategy.grouping = 0] = "grouping", OrderStrategy[OrderStrategy.flatten = 1] = "flatten", 
            OrderStrategy;
        }({}), SelectionPaneListComponent = function() {
            function SelectionPaneListComponent(selectionPaneListOrderService) {
                this.selectionPaneListOrderService = selectionPaneListOrderService, this.SectionType = SelectionPaneListSection, 
                this.activeSection$ = new ReplaySubject.t(1), this.activeSection$.next(SelectionPaneListSection.listOrderSection);
            }
            return SelectionPaneListComponent.prototype.setActiveSection = function(sectionType) {
                sectionType === SelectionPaneListSection.listOrderSection ? (this.selectionPaneListOrderService.markZSorted(!1), 
                this.activeSection$.next(SelectionPaneListSection.listOrderSection), this.selectionPaneListOrderService.rebuildListData()) : (this.selectionPaneListOrderService.markTabSorted(!1), 
                this.activeSection$.next(SelectionPaneListSection.tabOrderSection));
            }, SelectionPaneListComponent.\u0275fac = function(t) {
                return new (t || SelectionPaneListComponent)(core["\u0275\u0275directiveInject"](SelectionPaneListOrderService));
            }, SelectionPaneListComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: SelectionPaneListComponent,
                selectors: [ [ "selection-pane-list" ] ],
                inputs: {
                    groups: "groups",
                    visualContainers: "visualContainers"
                },
                decls: 24,
                vars: 60,
                consts: [ [ 1, "sectionHeader", "item-auto", "pivotNav", "canvasItemsPane" ], [ "role", "tablist" ], [ "role", "tab", "attr.aria-controls", "section-layerOrder", "localize", "ExplorationCanvasItemsPane_LayerOrder", 1, "sectionTab", "trimmedTextWithEllipsis", "themeableElement", 3, "ngClass", "section-tab-key-handler", "aria-label", "aria-describedby", "pbiTooltip", "onActiveSection", "accessible-click" ], [ "role", "tab", "ariaControls", "section-tabOrder", "localize", "ExplorationCanvasItemsPane_TabOrder", 1, "sectionTab", "trimmedTextWithEllipsis", "themeableElement", 3, "ngClass", "section-tab-key-handler", "aria-label", "aria-describedby", "pbiTooltip", "onActiveSection", "accessible-click" ], [ "localize", "ExplorationCanvasItemsPane_LayerOrder_Tooltip", "id", "layerOrderTooltip", 1, "tooltip-description" ], [ "localize", "ExplorationCanvasItemsPane_TabOrder_Tooltip", "id", "tabOrderTooltip", 1, "tooltip-description" ], [ 1, "navMarker" ], [ "role", "tabpanel", "section-animation-slider", "", "autoWidth", "true", "navMarkerParent", "canvasItemsPane", "doNotAnimateSection", "true", 1, "sectionHost", "item-fill", "flex-grow-section", 3, "sectionNumber" ], [ 4, "ngIf" ], [ 3, "groups", "visualContainers" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementStart"](0, "nav", 0)(1, "ul", 1)(2, "li", 2), 
                    core["\u0275\u0275listener"]("onActiveSection", function($event) {
                        return ctx.setActiveSection($event.nextSection);
                    })("accessible-click", function() {
                        return ctx.setActiveSection(ctx.SectionType.listOrderSection);
                    }), core["\u0275\u0275pipe"](3, "async"), core["\u0275\u0275pipe"](4, "async"), 
                    core["\u0275\u0275pipe"](5, "async"), core["\u0275\u0275pipe"](6, "localize"), core["\u0275\u0275pipe"](7, "localize"), 
                    core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](8, "li", 3), 
                    core["\u0275\u0275listener"]("onActiveSection", function($event) {
                        return ctx.setActiveSection($event.nextSection);
                    })("accessible-click", function() {
                        return ctx.setActiveSection(ctx.SectionType.tabOrderSection);
                    }), core["\u0275\u0275pipe"](9, "async"), core["\u0275\u0275pipe"](10, "async"), 
                    core["\u0275\u0275pipe"](11, "async"), core["\u0275\u0275pipe"](12, "localize"), 
                    core["\u0275\u0275pipe"](13, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275element"](14, "p", 4)(15, "p", 5), 
                    core["\u0275\u0275elementEnd"](), core["\u0275\u0275element"](16, "div", 6), core["\u0275\u0275elementEnd"](), 
                    core["\u0275\u0275elementStart"](17, "section", 7), core["\u0275\u0275pipe"](18, "async"), 
                    core["\u0275\u0275pipe"](19, "async"), core["\u0275\u0275template"](20, SelectionPaneListComponent_ng_container_20_Template, 2, 2, "ng-container", 8), 
                    core["\u0275\u0275pipe"](21, "async"), core["\u0275\u0275template"](22, SelectionPaneListComponent_ng_container_22_Template, 2, 2, "ng-container", 8), 
                    core["\u0275\u0275pipe"](23, "async"), core["\u0275\u0275elementEnd"]()), 2 & rf && (core["\u0275\u0275advance"](2), 
                    core["\u0275\u0275property"]("ngClass", core["\u0275\u0275pureFunction1"](50, _c0, core["\u0275\u0275pipeBind1"](4, 24, ctx.activeSection$) === ctx.SectionType.listOrderSection))("section-tab-key-handler", core["\u0275\u0275pureFunction2"](52, _c1, ctx.SectionType.tabOrderSection + 1, ctx.SectionType.listOrderSection))("aria-label", core["\u0275\u0275pipeBind1"](6, 28, "ExplorationCanvasItemsPane_LayerOrder"))("aria-describedby", "layerOrderTooltip")("pbiTooltip", core["\u0275\u0275pipeBind1"](7, 30, "ExplorationCanvasItemsPane_LayerOrder_Tooltip")), 
                    core["\u0275\u0275attribute"]("tabindex", core["\u0275\u0275pipeBind1"](3, 22, ctx.activeSection$) === ctx.SectionType.listOrderSection ? 0 : -1)("aria-posinset", ctx.SectionType.listOrderSection + 1)("aria-setsize", ctx.SectionType.tabOrderSection + 1)("aria-selected", core["\u0275\u0275pipeBind1"](5, 26, ctx.activeSection$) === ctx.SectionType.listOrderSection), 
                    core["\u0275\u0275advance"](6), core["\u0275\u0275property"]("ngClass", core["\u0275\u0275pureFunction1"](55, _c0, core["\u0275\u0275pipeBind1"](10, 34, ctx.activeSection$) === ctx.SectionType.tabOrderSection))("section-tab-key-handler", core["\u0275\u0275pureFunction2"](57, _c1, ctx.SectionType.tabOrderSection + 1, ctx.SectionType.tabOrderSection))("aria-label", core["\u0275\u0275pipeBind1"](12, 38, "ExplorationCanvasItemsPane_TabOrder"))("aria-describedby", "tabOrderTooltip")("pbiTooltip", core["\u0275\u0275pipeBind1"](13, 40, "ExplorationCanvasItemsPane_TabOrder_Tooltip")), 
                    core["\u0275\u0275attribute"]("tabindex", core["\u0275\u0275pipeBind1"](9, 32, ctx.activeSection$) === ctx.SectionType.tabOrderSection ? 0 : -1)("aria-posinset", ctx.SectionType.tabOrderSection + 1)("aria-setsize", ctx.SectionType.tabOrderSection + 1)("aria-selected", core["\u0275\u0275pipeBind1"](11, 36, ctx.activeSection$) === ctx.SectionType.tabOrderSection), 
                    core["\u0275\u0275advance"](9), core["\u0275\u0275property"]("sectionNumber", core["\u0275\u0275pipeBind1"](19, 44, ctx.activeSection$) === ctx.SectionType.tabOrderSection ? ctx.SectionType.tabOrderSection : ctx.SectionType.listOrderSection), 
                    core["\u0275\u0275attribute"]("id", core["\u0275\u0275pipeBind1"](18, 42, ctx.activeSection$) === ctx.SectionType.tabOrderSection ? "section-tabOrder" : "section-layerOrder"), 
                    core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](21, 46, ctx.activeSection$) === ctx.SectionType.tabOrderSection), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](23, 48, ctx.activeSection$) === ctx.SectionType.listOrderSection));
                },
                styles: [ "[_nghost-%COMP%]{display:flex;flex-direction:column;flex:1 0 auto;text-align:left;width:100%;height:100%}[_nghost-%COMP%]:focus{outline:none}i.caret.glyphicon[_ngcontent-%COMP%]{margin:0 4px}.flex-grow-section[_ngcontent-%COMP%]{flex-grow:1;display:flex;flex-direction:column}.tooltip-description[_ngcontent-%COMP%]{display:none}" ]
            }), SelectionPaneListComponent;
        }(), events = __webpack_require__(8590), visualContainerUtilsHelper = __webpack_require__(3579), rx_component = __webpack_require__(73221), pbi_tree_component = __webpack_require__(37196), combineLatest = __webpack_require__(59017), takeUntil = __webpack_require__(83317), map = __webpack_require__(14172), skipWhile = __webpack_require__(41198), take = __webpack_require__(48787), withLatestFrom = __webpack_require__(23558), distinctUntilChanged = __webpack_require__(77526), form_factor_provider_service = __webpack_require__(17328), view_mode_state_service = __webpack_require__(77200), common = __webpack_require__(77476), localize_directive = __webpack_require__(59968), pbi_scrollbar_directive = __webpack_require__(80649), pbi_tooltip_directive = __webpack_require__(36858), tree = __webpack_require__(94585), fesm2022_tree = __webpack_require__(15015), promiseFactory = __webpack_require__(14463), canvasVisualsUtility = __webpack_require__(41887), dragDropUtils = __webpack_require__(42342), browserUtils = __webpack_require__(59107), Subscription = __webpack_require__(34763), of = __webpack_require__(11547), drag_data_service = __webpack_require__(50702), drag_drop = __webpack_require__(558), localize_tooltip_directive = __webpack_require__(50057), drag_directive = __webpack_require__(53267), drop_directive = __webpack_require__(82214), high_contrast_css_generation_service = __webpack_require__(64647), editable_label_component = __webpack_require__(37534), selection_pane_item_component_c0 = function(a0, a1) {
            return {
                showSkipIconAlways: a0,
                hiddenStyle: a1
            };
        };
        function SelectionPaneItemComponent_button_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r5 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "button", 6), core["\u0275\u0275listener"]("click", function($event) {
                    core["\u0275\u0275restoreView"](_r5);
                    var ctx_r4 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r4.toggleSkipped($event));
                }), core["\u0275\u0275element"](1, "div", 7), core["\u0275\u0275elementStart"](2, "div", 8), 
                core["\u0275\u0275text"](3), core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("ngClass", core["\u0275\u0275pureFunction2"](5, selection_pane_item_component_c0, ctx_r0.isSkipped, ctx_r0.isShowItemHiddenStyle))("disabled", !ctx_r0.isEditMode()), 
                core["\u0275\u0275attribute"]("title", ctx_r0.actionTitle), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275property"]("ngClass", ctx_r0.actionIconClass), core["\u0275\u0275advance"](2), 
                core["\u0275\u0275textInterpolate"](ctx_r0.order);
            }
        }
        function SelectionPaneItemComponent_button_3_Template(rf, ctx) {
            if (1 & rf) {
                var _r7 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "button", 9), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r7);
                    var ctx_r6 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r6.refreshVisual());
                }), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r1 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275attribute"]("title", ctx_r1.refreshTitle);
            }
        }
        function SelectionPaneItemComponent_button_4_Template(rf, ctx) {
            if (1 & rf) {
                var _r9 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "button", 10), core["\u0275\u0275listener"]("click", function($event) {
                    core["\u0275\u0275restoreView"](_r9);
                    var ctx_r8 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r8.toggleVisibility($event));
                }), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r2 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("ngClass", ctx_r2.actionIconClass)("disabled", ctx_r2.isDisabled()), 
                core["\u0275\u0275attribute"]("title", ctx_r2.actionTitle);
            }
        }
        function SelectionPaneItemComponent_button_5_Template(rf, ctx) {
            if (1 & rf) {
                var _r11 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "button", 11), core["\u0275\u0275listener"]("click", function($event) {
                    core["\u0275\u0275restoreView"](_r11);
                    var ctx_r10 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r10.showContextMenu($event));
                }), core["\u0275\u0275element"](1, "i", 12), core["\u0275\u0275elementEnd"]();
            }
        }
        var selection_pane_item_component_c1 = function(a0) {
            return {
                hiddenStyle: a0
            };
        }, SelectionPaneItemComponent = function() {
            function SelectionPaneItemComponent(conceptualSchemaProxy, dataSources, displayNameService, eventBridge, featureSwitchService, formFactor, highContrastCssGenerationService, localizationService, screenReaderService, viewModeState, visualAuthoring, visualContainerMenuFactory, visualPlugin, pauseQueriesService) {
                var _this = this;
                this.conceptualSchemaProxy = conceptualSchemaProxy, this.dataSources = dataSources, 
                this.displayNameService = displayNameService, this.eventBridge = eventBridge, this.featureSwitchService = featureSwitchService, 
                this.formFactor = formFactor, this.highContrastCssGenerationService = highContrastCssGenerationService, 
                this.localizationService = localizationService, this.screenReaderService = screenReaderService, 
                this.viewModeState = viewModeState, this.visualAuthoring = visualAuthoring, this.visualContainerMenuFactory = visualContainerMenuFactory, 
                this.visualPlugin = visualPlugin, this.pauseQueriesService = pauseQueriesService, 
                this.renameAction = new core.EventEmitter, this.isEditing = new core.EventEmitter, 
                this.skipFunction = new core.EventEmitter, this.editableTextLabelStyles = {
                    margin: "0 6px"
                }, this.editableTextLabelClasses = "trimmedTextWithEllipsis", this.refreshLabel = this.localizationService.get("Refresh"), 
                this.initializeHighContrastRules(), this.isListOrderSection = function() {
                    return void 0 === _this.isSkipped;
                }, this.isShowItemHiddenStyle = !1;
            }
            return SelectionPaneItemComponent.prototype.ngOnInit = function() {
                var _this = this;
                this.subscriptionManager = this.eventBridge.createChannelSubscriptionManager(), 
                (0, visualContainerGroup.Vz)(this.item) ? this.subscriptionManager.subscribe(events.jCS, function(e, args) {
                    return _this.onVisualContainerChanged(args);
                }) : this.subscriptionManager.subscribe(events.ICs, function(e, args) {
                    return _this.onVisualContainerGroupChanged(args);
                }), this.subscriptionManager.subscribe(events.D1A, function(e, visualContainer) {
                    return _this.onVisualContainerDataRendered(visualContainer);
                });
            }, SelectionPaneItemComponent.prototype.ngOnDestroy = function() {
                this.subscriptionManager.unsubscribeAll();
            }, SelectionPaneItemComponent.prototype.onMouseEnter = function(event) {
                this.onHover(!0);
            }, SelectionPaneItemComponent.prototype.onMouseLeave = function(event) {
                this.onHover(!1);
            }, SelectionPaneItemComponent.prototype.ngOnChanges = function(changes) {
                changes.item && (this.item = changes.item.currentValue, this.generateTitle(), this.isListOrderSection() ? this.updateVisibility() : (0, 
                visualContainerGroup.Vz)(this.item) && this.updateSkipped(this.item));
            }, SelectionPaneItemComponent.prototype.onContextMenu = function($event) {
                this.isEditable() && this.isListOrderSection() && ($event.preventDefault(), this.showContextMenu($event, !0));
            }, SelectionPaneItemComponent.prototype.onHover = function(isHover) {
                (0, visualContainerUtils.vz)(isHover, this.item.name, this.eventBridge);
            }, SelectionPaneItemComponent.prototype.refreshVisual = function() {
                this.pauseQueriesService.refreshVisuals(this.item.name);
            }, SelectionPaneItemComponent.prototype.isItemInPausedState = function() {
                return !(!this.featureSwitchService.featureSwitches.optimizeTabRibbon || !(0, visualContainerGroup.Vz)(this.item) || !this.item.visualPausedWarning);
            }, SelectionPaneItemComponent.prototype.toggleSkipped = function($event) {
                this.skipFunction && this.skipFunction.emit({
                    isSkippedSection: this.isSkipped,
                    visualContainer: this.item
                }), $event.stopPropagation();
            }, SelectionPaneItemComponent.prototype.toggleVisibility = function($event) {
                (0, visualContainerGroup.Vz)(this.item) ? this.toggleVisualContainerVisibility(this.item) : this.toggleVisualContainerGroupVisibility(this.item), 
                $event.stopPropagation();
            }, SelectionPaneItemComponent.prototype.toggleVisualContainerVisibility = function(visualContainer) {
                var hide = !(0, visualContainer2.xj)(visualContainer.contract.config.singleVisual);
                this.visualAuthoring.setVisibility(hide, [ visualContainer.contract ]);
            }, SelectionPaneItemComponent.prototype.toggleVisualContainerGroupVisibility = function(visualContainerGroup) {
                var hide = !(0, visualContainerGroup1.xj)(visualContainerGroup.contract);
                this.visualAuthoring.setVisualContainerGroupVisibility(hide, [ visualContainerGroup.contract ]), 
                this.updateVisibility();
            }, SelectionPaneItemComponent.prototype.onVisualContainerChanged = function(args) {
                (0, visualContainerGroup.Vz)(this.item) && (args && args.affectContainer(this.item.contract) || this.isPhoneLayout()) && (this.generateTitle(), 
                this.isListOrderSection() ? this.updateVisibility() : this.updateSkipped(this.item));
            }, SelectionPaneItemComponent.prototype.onVisualContainerGroupChanged = function(args) {
                (0, visualContainerGroup.q4)(this.item) && args && args.affectContainer(this.item.contract) && (this.generateTitle(), 
                this.isListOrderSection() && this.updateVisibility());
            }, SelectionPaneItemComponent.prototype.onVisualContainerDataRendered = function(visualContainer) {
                visualContainer.name === this.item.contract.name && this.generateTitle();
            }, SelectionPaneItemComponent.prototype.generateTitle = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var _a;
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return (0, visualContainerGroup.Vz)(this.item) ? (_a = this, [ 4, (0, visualContainerUtils.uo)(this.item.contract, {
                                dataSources: this.dataSources,
                                conceptualSchemaProxy: this.conceptualSchemaProxy,
                                visualPlugin: this.visualPlugin,
                                displayNameService: this.displayNameService
                            }) ]) : [ 3, 2 ];

                          case 1:
                            return _a.title = _b.sent(), [ 3, 3 ];

                          case 2:
                            this.title = this.item.contract.displayName, _b.label = 3;

                          case 3:
                            return [ 2 ];
                        }
                    });
                });
            }, SelectionPaneItemComponent.prototype.editLabel = function() {
                this.isEditable() && (this.isEditingLabel = !0, this.isEditing.emit(!0));
            }, SelectionPaneItemComponent.prototype.isDisabled = function() {
                if (this.isEditable()) {
                    for (var parentGroup = this.item.parentGroup; parentGroup; ) {
                        if (parentGroup.isHidden) return !0;
                        parentGroup = parentGroup.parentGroup;
                    }
                    return parentGroup && parentGroup.isHidden;
                }
                return !0;
            }, SelectionPaneItemComponent.prototype.isPhoneLayout = function() {
                return 1 === this.formFactor.getCurrentLayout();
            }, SelectionPaneItemComponent.prototype.rename = function(event) {
                var newName = event.newName;
                "" !== newName && null != newName ? (this.isEditing.emit(!1), (0, visualContainerGroup.Vz)(this.item) ? this.visualAuthoring.persistVCProperties(this.createNewNameChangeObject(newName), this.item.contract) : this.visualAuthoring.setVisualContainerGroupDisplayName(newName, [ this.item.contract ]), 
                this.title = newName, this.renameAction.emit(newName), this.isEditingLabel = !1) : this.cancelRename();
            }, SelectionPaneItemComponent.prototype.cancelRename = function() {
                this.isEditingLabel = !1, this.isEditing.emit(!1);
            }, SelectionPaneItemComponent.prototype.createNewNameChangeObject = function(value) {
                return [ {
                    merge: [ {
                        objectName: "title",
                        properties: {
                            text: value
                        },
                        selector: null
                    } ]
                } ];
            }, SelectionPaneItemComponent.prototype.isEditMode = function() {
                return 1 === this.viewModeState.getMode();
            }, SelectionPaneItemComponent.prototype.isEditable = function() {
                return this.isEditMode() && !this.isPhoneLayout();
            }, SelectionPaneItemComponent.prototype.showContextMenu = function($event, isDefaultPrevented) {
                void 0 === isDefaultPrevented && (isDefaultPrevented = !1), isDefaultPrevented || $event.stopPropagation(), 
                this.visualContainerMenuFactory.createMenu(this.item, {
                    data: void 0,
                    position: {
                        x: $event.pageX,
                        y: $event.pageY
                    }
                }, void 0, void 0, !1, {}, $event.target);
            }, SelectionPaneItemComponent.prototype.initializeHighContrastRules = function() {
                this.highContrastCssGenerationService.addRule(".themeableElement canvas-items-list .canvas-items-list.scroll-content li.append", "{ border-bottom-color: @selectedBackgroundColor !important; }");
            }, SelectionPaneItemComponent.prototype.updateSkipped = function(item) {
                this.actionIconClass = "glyphicon pbi-glyph-disable", this.isShowItemHiddenStyle = !!(0, 
                visualContainer2.xj)(item.contract.config.singleVisual);
            }, SelectionPaneItemComponent.prototype.isHidden = function() {
                return (0, visualContainerGroup2.Vz)(this.item.contract) ? this.isPhoneLayout() ? (0, 
                visualContainerUtils.Pu)(this.item.contract) : (0, visualContainer2.xj)(this.item.contract.config.singleVisual) : this.item.contract.isHidden;
            }, SelectionPaneItemComponent.prototype.updateVisibility = function() {
                var actionIconTitleKey, actionIconAlertKey, previousVisibility = this.actionIconClass;
                if (this.isHidden() ? (this.actionIconClass = "glyphicon pbi-glyph-hide3", actionIconTitleKey = this.isPhoneLayout() ? "ExplorationCanvasItemsPane_Hidden_Visual" : "ExplorationCanvasItemsPane_Show", 
                actionIconAlertKey = "ExplorationCanvasItemsPane_Hidden") : (this.actionIconClass = "glyphicon pbi-glyph-view", 
                actionIconTitleKey = this.isPhoneLayout() ? "ExplorationCanvasItemsPane_Shown_Visual" : "ExplorationCanvasItemsPane_Hide", 
                actionIconAlertKey = "ExplorationCanvasItemsPane_Shown"), this.actionTitle = this.localizationService.get(actionIconTitleKey), 
                previousVisibility && previousVisibility !== this.actionIconClass) {
                    var alertString = this.localizationService.format(actionIconAlertKey, [ this.title ]);
                    this.screenReaderService.alertWithDebounce("canvas-item-visibility-" + this.item.contract.name, alertString);
                }
            }, SelectionPaneItemComponent.\u0275fac = function(t) {
                return new (t || SelectionPaneItemComponent)(core["\u0275\u0275directiveInject"](conceptual_schema_proxy_service.i), core["\u0275\u0275directiveInject"](data_sources_service.D), core["\u0275\u0275directiveInject"](exploration_display_name_service.O), core["\u0275\u0275directiveInject"](event_bridge_service.J), core["\u0275\u0275directiveInject"](feature_switch_service.vZ), core["\u0275\u0275directiveInject"](form_factor_provider_service.F), core["\u0275\u0275directiveInject"](high_contrast_css_generation_service.g), core["\u0275\u0275directiveInject"](localization_service.o), core["\u0275\u0275directiveInject"](screen_reader_service.g), core["\u0275\u0275directiveInject"](view_mode_state_service.kc), core["\u0275\u0275directiveInject"](visual_authoring_service.$8), core["\u0275\u0275directiveInject"](visual_container_menu_factory_service.p), core["\u0275\u0275directiveInject"](visual_plugin_service.D), core["\u0275\u0275directiveInject"](pause_queries_service.F));
            }, SelectionPaneItemComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: SelectionPaneItemComponent,
                selectors: [ [ "selection-pane-item" ] ],
                hostBindings: function(rf, ctx) {
                    1 & rf && core["\u0275\u0275listener"]("mouseenter", function($event) {
                        return ctx.onMouseEnter($event);
                    })("mouseleave", function($event) {
                        return ctx.onMouseLeave($event);
                    });
                },
                inputs: {
                    isSkipped: "isSkipped",
                    item: "item",
                    order: "order"
                },
                outputs: {
                    renameAction: "renameAction",
                    isEditing: "isEditing",
                    skipFunction: "skipFunction"
                },
                features: [ core["\u0275\u0275NgOnChangesFeature"] ],
                decls: 6,
                vars: 14,
                consts: [ [ 1, "selectionPaneItem", 3, "contextmenu" ], [ "class", "actionIcon", "tabindex", "-1", 3, "ngClass", "disabled", "click", 4, "ngIf" ], [ 3, "textLabelClasses", "textLabelStyles", "ngClass", "displayName", "editable", "disableClick", "maxInputLength", "customTooltip", "dblclick", "onBlur", "cancel" ], [ "class", "refreshIcon glyphicon pbi-glyph-refresh", "tabindex", "-1", 3, "click", 4, "ngIf" ], [ "class", "actionIcon glyphicon", "tabindex", "-1", 3, "ngClass", "disabled", "click", 4, "ngIf" ], [ "class", "optionsMenu menuContainer item-auto", "tabindex", "-1", "localizeTooltip", "Options_Menu", 3, "click", 4, "ngIf" ], [ "tabindex", "-1", 1, "actionIcon", 3, "ngClass", "disabled", "click" ], [ 1, "glyphicon", "left", 3, "ngClass" ], [ 1, "tabOrderNumber" ], [ "tabindex", "-1", 1, "refreshIcon", "glyphicon", "pbi-glyph-refresh", 3, "click" ], [ "tabindex", "-1", 1, "actionIcon", "glyphicon", 3, "ngClass", "disabled", "click" ], [ "tabindex", "-1", "localizeTooltip", "Options_Menu", 1, "optionsMenu", "menuContainer", "item-auto", 3, "click" ], [ 1, "glyphicon", "pbi-glyph-more" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementStart"](0, "div", 0), core["\u0275\u0275listener"]("contextmenu", function($event) {
                        return ctx.onContextMenu($event);
                    }), core["\u0275\u0275template"](1, SelectionPaneItemComponent_button_1_Template, 4, 8, "button", 1), 
                    core["\u0275\u0275elementStart"](2, "editable-label", 2), core["\u0275\u0275listener"]("dblclick", function() {
                        return ctx.editLabel();
                    })("onBlur", function($event) {
                        return ctx.rename($event);
                    })("cancel", function() {
                        return ctx.cancelRename();
                    }), core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](3, SelectionPaneItemComponent_button_3_Template, 1, 1, "button", 3), 
                    core["\u0275\u0275template"](4, SelectionPaneItemComponent_button_4_Template, 1, 3, "button", 4), 
                    core["\u0275\u0275template"](5, SelectionPaneItemComponent_button_5_Template, 2, 0, "button", 5), 
                    core["\u0275\u0275elementEnd"]()), 2 & rf && (core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !ctx.isListOrderSection()), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("textLabelClasses", ctx.editableTextLabelClasses)("textLabelStyles", ctx.editableTextLabelStyles)("ngClass", core["\u0275\u0275pureFunction1"](12, selection_pane_item_component_c1, ctx.isShowItemHiddenStyle))("displayName", ctx.title)("editable", ctx.isEditingLabel)("disableClick", !0)("maxInputLength", 250)("customTooltip", !1), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx.isItemInPausedState()), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx.isListOrderSection()), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx.isEditable() && ctx.isListOrderSection()));
                },
                dependencies: [ common.NgClass, common.NgIf, editable_label_component.V, localize_tooltip_directive.r ],
                styles: [ "[_nghost-%COMP%]{width:100%}.selectionPaneItem[_ngcontent-%COMP%]{width:100%;display:flex;flex-direction:row;align-items:center;height:24px}.selectionPaneItem[_ngcontent-%COMP%]:focus{outline:none}.selectionPaneItem[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{background-color:transparent;border-color:inherit;color:inherit;border:none;padding:0 0 0 5px}.selectionPaneItem[_ngcontent-%COMP%]   button[_ngcontent-%COMP%], .selectionPaneItem[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{font-size:12px}.selectionPaneItem[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{margin:0}.selectionPaneItem[_ngcontent-%COMP%]   button[_ngcontent-%COMP%], .selectionPaneItem[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled, .selectionPaneItem[_ngcontent-%COMP%]   button[disabled][_ngcontent-%COMP%], .selectionPaneItem[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover, .selectionPaneItem[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled:hover, .selectionPaneItem[_ngcontent-%COMP%]   button[disabled][_ngcontent-%COMP%]:hover, .selectionPaneItem[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:focus, .selectionPaneItem[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled:focus, .selectionPaneItem[_ngcontent-%COMP%]   button[disabled][_ngcontent-%COMP%]:focus, .selectionPaneItem[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:active, .selectionPaneItem[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled:active, .selectionPaneItem[_ngcontent-%COMP%]   button[disabled][_ngcontent-%COMP%]:active, .selectionPaneItem[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:active:hover, .selectionPaneItem[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled:active:hover, .selectionPaneItem[_ngcontent-%COMP%]   button[disabled][_ngcontent-%COMP%]:active:hover, .selectionPaneItem[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:focus:hover, .selectionPaneItem[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled:focus:hover, .selectionPaneItem[_ngcontent-%COMP%]   button[disabled][_ngcontent-%COMP%]:focus:hover{background-color:transparent;border-color:inherit;color:var(--gray-80)}.selectionPaneItem[_ngcontent-%COMP%]   button[_ngcontent-%COMP%], .selectionPaneItem[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover, .selectionPaneItem[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:focus, .selectionPaneItem[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:active, .selectionPaneItem[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:active:hover, .selectionPaneItem[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:focus:hover{color:inherit}.selectionPaneItem[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled, .selectionPaneItem[_ngcontent-%COMP%]   button[disabled][_ngcontent-%COMP%], .selectionPaneItem[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled:hover, .selectionPaneItem[_ngcontent-%COMP%]   button[disabled][_ngcontent-%COMP%]:hover, .selectionPaneItem[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled:focus, .selectionPaneItem[_ngcontent-%COMP%]   button[disabled][_ngcontent-%COMP%]:focus, .selectionPaneItem[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled:active, .selectionPaneItem[_ngcontent-%COMP%]   button[disabled][_ngcontent-%COMP%]:active, .selectionPaneItem[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled:active:hover, .selectionPaneItem[_ngcontent-%COMP%]   button[disabled][_ngcontent-%COMP%]:active:hover, .selectionPaneItem[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled:focus:hover, .selectionPaneItem[_ngcontent-%COMP%]   button[disabled][_ngcontent-%COMP%]:focus:hover{color:var(--neutral-tertiary-color, #A6A6A6)}.selectionPaneItem[_ngcontent-%COMP%]   button.refreshIcon[_ngcontent-%COMP%]{padding-right:5px}.selectionPaneItem[_ngcontent-%COMP%]   button.actionIcon[_ngcontent-%COMP%]{padding:0}.selectionPaneItem[_ngcontent-%COMP%]   button.actionIcon[_ngcontent-%COMP%]   .left[_ngcontent-%COMP%]{padding-right:14px;display:none;font-size:12px}.selectionPaneItem[_ngcontent-%COMP%]   button.actionIcon.hiddenStyle[_ngcontent-%COMP%]{color:var(--gray-180, #252423)}.selectionPaneItem[_ngcontent-%COMP%]   button.actionIcon[_ngcontent-%COMP%]   .tabOrderNumber[_ngcontent-%COMP%]{padding-right:14px;min-width:12px;font-family:Segoe UI,wf_segoe-ui_normal,helvetica,arial,sans-serif;display:block}.selectionPaneItem[_ngcontent-%COMP%]   button.actionIcon.showSkipIconAlways[_ngcontent-%COMP%]   .left[_ngcontent-%COMP%]{display:block}.selectionPaneItem[_ngcontent-%COMP%]   button.actionIcon.showSkipIconAlways[_ngcontent-%COMP%]   .tabOrderNumber[_ngcontent-%COMP%]{display:none}.selectionPaneItem[_ngcontent-%COMP%]   button.actionIcon[_ngcontent-%COMP%]:not(.showSkipIconAlways):hover   .left[_ngcontent-%COMP%]{display:block}.selectionPaneItem[_ngcontent-%COMP%]   button.actionIcon[_ngcontent-%COMP%]:not(.showSkipIconAlways):hover   .tabOrderNumber[_ngcontent-%COMP%]{display:none}.selectionPaneItem[_ngcontent-%COMP%]   editable-label[_ngcontent-%COMP%]{flex-grow:1}.selectionPaneItem[_ngcontent-%COMP%]   .optionsMenu[_ngcontent-%COMP%]   .glyphicon[_ngcontent-%COMP%]{opacity:1}.selectionPaneItem[_ngcontent-%COMP%]   .optionsMenu[_ngcontent-%COMP%]   .glyphicon[_ngcontent-%COMP%]:focus{outline:none}" ]
            }), SelectionPaneItemComponent;
        }();
        function SelectionPaneListLegacyTreeComponent_ng_container_0_mat_tree_node_2_i_1_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "i", 6), 2 & rf) {
                var node_r3 = core["\u0275\u0275nextContext"]().$implicit, ctx_r4 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275property"]("ngClass", ctx_r4.treeControl.isExpanded(node_r3) ? "pbi-glyph-chevronupsmall" : "pbi-glyph-chevrondownsmall");
            }
        }
        var selection_pane_list_legacy_tree_component_c0 = function(a0, a1) {
            return {
                selected: a0,
                droppable: a1
            };
        }, selection_pane_list_legacy_tree_component_c1 = function(a0) {
            return {
                groupNode: a0
            };
        };
        function SelectionPaneListLegacyTreeComponent_ng_container_0_mat_tree_node_2_Template(rf, ctx) {
            if (1 & rf) {
                var _r7 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "mat-tree-node", 3), core["\u0275\u0275listener"]("keydown", function($event) {
                    var node_r3 = core["\u0275\u0275restoreView"](_r7).$implicit, ctx_r6 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r6.onKeyDown($event, null == node_r3 ? null : node_r3.canvasItem));
                })("click", function($event) {
                    var node_r3 = core["\u0275\u0275restoreView"](_r7).$implicit, ctx_r8 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r8.onItemClick($event, null == node_r3 ? null : node_r3.canvasItem));
                })("cdkDragStarted", function($event) {
                    core["\u0275\u0275restoreView"](_r7);
                    var ctx_r9 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r9.dragStarted($event));
                })("cdkDragReleased", function() {
                    core["\u0275\u0275restoreView"](_r7);
                    var ctx_r10 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r10.dragEnd());
                }), core["\u0275\u0275template"](1, SelectionPaneListLegacyTreeComponent_ng_container_0_mat_tree_node_2_i_1_Template, 1, 1, "i", 4), 
                core["\u0275\u0275elementStart"](2, "selection-pane-item", 5), core["\u0275\u0275listener"]("isEditing", function($event) {
                    core["\u0275\u0275restoreView"](_r7);
                    var ctx_r11 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r11.updateIsEditing($event));
                }), core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var node_r3 = ctx.$implicit, ctx_r2 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275property"]("cdkDragData", node_r3)("ngClass", core["\u0275\u0275pureFunction2"](6, selection_pane_list_legacy_tree_component_c0, ctx_r2.isSelected[null == node_r3 || null == node_r3.canvasItem ? null : node_r3.canvasItem.name], ctx_r2.isDroppable(null == node_r3 ? null : node_r3.canvasItem))), 
                core["\u0275\u0275attribute"]("tabindex", ctx_r2.getTabIndex(null == node_r3 || null == node_r3.canvasItem ? null : node_r3.canvasItem.name)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx_r2.treeControl.isExpandable(node_r3)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngClass", core["\u0275\u0275pureFunction1"](9, selection_pane_list_legacy_tree_component_c1, ctx_r2.treeControl.isExpandable(node_r3)))("item", null == node_r3 ? null : node_r3.canvasItem);
            }
        }
        function SelectionPaneListLegacyTreeComponent_ng_container_0_Template(rf, ctx) {
            if (1 & rf) {
                var _r13 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "mat-tree", 1), 
                core["\u0275\u0275listener"]("cdkDropListDropped", function($event) {
                    core["\u0275\u0275restoreView"](_r13);
                    var ctx_r12 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r12.drop($event));
                }), core["\u0275\u0275template"](2, SelectionPaneListLegacyTreeComponent_ng_container_0_mat_tree_node_2_Template, 3, 11, "mat-tree-node", 2), 
                core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementContainerEnd"]();
            }
            if (2 & rf) {
                var ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("dataSource", ctx_r0.dataSource)("treeControl", ctx_r0.treeControl)("cdkDropListDisabled", !ctx_r0.isEditable() || ctx_r0.isEditingLabel), 
                core["\u0275\u0275attribute"]("focus-nav-mode", ctx_r0.isListActive ? "Group" : void 0);
            }
        }
        function SelectionPaneListLegacyTreeComponent_ng_container_1_ng_container_2_li_1_selection_pane_item_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r22 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "selection-pane-item", 12), core["\u0275\u0275listener"]("skipFunction", function($event) {
                    core["\u0275\u0275restoreView"](_r22);
                    var ctx_r21 = core["\u0275\u0275nextContext"](4);
                    return core["\u0275\u0275resetView"](ctx_r21.toggleTabOrderSection($event));
                })("isEditing", function($event) {
                    core["\u0275\u0275restoreView"](_r22);
                    var ctx_r23 = core["\u0275\u0275nextContext"](4);
                    return core["\u0275\u0275resetView"](ctx_r23.updateIsEditing($event));
                }), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r24 = core["\u0275\u0275nextContext"](2), i_r17 = ctx_r24.index;
                core["\u0275\u0275property"]("item", ctx_r24.$implicit)("order", i_r17 + 1)("isSkipped", !1);
            }
        }
        function SelectionPaneListLegacyTreeComponent_ng_container_1_ng_container_2_li_1_selection_pane_item_2_Template(rf, ctx) {
            if (1 & rf) {
                var _r26 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "selection-pane-item", 13), core["\u0275\u0275listener"]("isEditing", function($event) {
                    core["\u0275\u0275restoreView"](_r26);
                    var ctx_r25 = core["\u0275\u0275nextContext"](4);
                    return core["\u0275\u0275resetView"](ctx_r25.updateIsEditing($event));
                }), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var visualContainer_r16 = core["\u0275\u0275nextContext"](2).$implicit;
                core["\u0275\u0275property"]("item", visualContainer_r16);
            }
        }
        var _c2 = function(a0) {
            return {
                selected: a0
            };
        };
        function SelectionPaneListLegacyTreeComponent_ng_container_1_ng_container_2_li_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r30 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "li", 9), core["\u0275\u0275listener"]("click", function($event) {
                    core["\u0275\u0275restoreView"](_r30);
                    var visualContainer_r16 = core["\u0275\u0275nextContext"]().$implicit, ctx_r28 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r28.onItemClick($event, visualContainer_r16));
                })("keydown", function($event) {
                    core["\u0275\u0275restoreView"](_r30);
                    var visualContainer_r16 = core["\u0275\u0275nextContext"]().$implicit, ctx_r31 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r31.onKeyDown($event, visualContainer_r16));
                })("dropHandler", function($event) {
                    core["\u0275\u0275restoreView"](_r30);
                    var ctx_r33 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r33.dropOntoSibling($event.event, $event.ui, $event.dropAction));
                }), core["\u0275\u0275template"](1, SelectionPaneListLegacyTreeComponent_ng_container_1_ng_container_2_li_1_selection_pane_item_1_Template, 1, 3, "selection-pane-item", 10), 
                core["\u0275\u0275template"](2, SelectionPaneListLegacyTreeComponent_ng_container_1_ng_container_2_li_1_selection_pane_item_2_Template, 1, 1, "selection-pane-item", 11), 
                core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r34 = core["\u0275\u0275nextContext"](), visualContainer_r16 = ctx_r34.$implicit, i_r17 = ctx_r34.index, ctx_r18 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275property"]("ngClass", core["\u0275\u0275pureFunction1"](9, _c2, ctx_r18.isSelected[null == visualContainer_r16 ? null : visualContainer_r16.name]))("drag", "visualContainer")("getDragContext", ctx_r18.getDragContext(visualContainer_r16))("drop", ctx_r18.dropConfig)("dropAction", ctx_r18.dropActionHandler), 
                core["\u0275\u0275attribute"]("tabindex", ctx_r18.getTabIndex(null == visualContainer_r16 ? null : visualContainer_r16.name, i_r17))("data-name", null == visualContainer_r16 ? null : visualContainer_r16.name), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx_r18.isActiveSection(ctx_r18.SectionType.tabOrderSection)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !ctx_r18.isActiveSection(ctx_r18.SectionType.tabOrderSection));
            }
        }
        function SelectionPaneListLegacyTreeComponent_ng_container_1_ng_container_2_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, SelectionPaneListLegacyTreeComponent_ng_container_1_ng_container_2_li_1_Template, 3, 11, "li", 8), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var visualContainer_r16 = ctx.$implicit, ctx_r14 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !ctx_r14.isShowingTabOrderSection() || ctx_r14.isPositiveTabOrder(visualContainer_r16));
            }
        }
        function SelectionPaneListLegacyTreeComponent_ng_container_1_ul_3_ng_container_1_li_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r41 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "li", 15), core["\u0275\u0275listener"]("click", function($event) {
                    core["\u0275\u0275restoreView"](_r41);
                    var visualContainer_r36 = core["\u0275\u0275nextContext"]().$implicit, ctx_r39 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r39.onItemClick($event, visualContainer_r36));
                })("keydown", function($event) {
                    core["\u0275\u0275restoreView"](_r41);
                    var visualContainer_r36 = core["\u0275\u0275nextContext"]().$implicit, ctx_r42 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r42.onKeyDown($event, visualContainer_r36, !1));
                }), core["\u0275\u0275elementStart"](1, "selection-pane-item", 16), core["\u0275\u0275listener"]("skipFunction", function($event) {
                    core["\u0275\u0275restoreView"](_r41);
                    var ctx_r44 = core["\u0275\u0275nextContext"](4);
                    return core["\u0275\u0275resetView"](ctx_r44.toggleTabOrderSection($event));
                }), core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var ctx_r45 = core["\u0275\u0275nextContext"](), visualContainer_r36 = ctx_r45.$implicit, i_r37 = ctx_r45.index, ctx_r38 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275property"]("ngClass", core["\u0275\u0275pureFunction1"](4, _c2, ctx_r38.isSelected[null == visualContainer_r36 ? null : visualContainer_r36.name])), 
                core["\u0275\u0275attribute"]("tabindex", ctx_r38.getTabIndex(null == visualContainer_r36 ? null : visualContainer_r36.name, i_r37)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("item", visualContainer_r36)("isSkipped", !0);
            }
        }
        function SelectionPaneListLegacyTreeComponent_ng_container_1_ul_3_ng_container_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, SelectionPaneListLegacyTreeComponent_ng_container_1_ul_3_ng_container_1_li_1_Template, 2, 6, "li", 14), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var visualContainer_r36 = ctx.$implicit, ctx_r35 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !ctx_r35.isPositiveTabOrder(visualContainer_r36));
            }
        }
        function SelectionPaneListLegacyTreeComponent_ng_container_1_ul_3_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "ul"), core["\u0275\u0275template"](1, SelectionPaneListLegacyTreeComponent_ng_container_1_ul_3_ng_container_1_Template, 2, 1, "ng-container", 7), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r15 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275attribute"]("focus-nav-mode", ctx_r15.isListActive ? "Group" : void 0), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngForOf", ctx_r15.getSortedVisualContainers(!1))("ngForTrackBy", null == ctx_r15.visualContainer ? null : ctx_r15.visualContainer.name);
            }
        }
        function SelectionPaneListLegacyTreeComponent_ng_container_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "ul"), 
            core["\u0275\u0275template"](2, SelectionPaneListLegacyTreeComponent_ng_container_1_ng_container_2_Template, 2, 1, "ng-container", 7), 
            core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](3, SelectionPaneListLegacyTreeComponent_ng_container_1_ul_3_Template, 2, 3, "ul", 0), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var ctx_r1 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275attribute"]("focus-nav-mode", ctx_r1.isListActive ? "Group" : void 0), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngForOf", ctx_r1.getSortedVisualContainers())("ngForTrackBy", null == ctx_r1.visualContainer ? null : ctx_r1.visualContainer.name), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx_r1.isShowingTabOrderSection());
            }
        }
        var selection_pane_list_legacy_tree_component_SelectionPaneListSection = function(SelectionPaneListSection) {
            return SelectionPaneListSection[SelectionPaneListSection.listOrderSection = 0] = "listOrderSection", 
            SelectionPaneListSection[SelectionPaneListSection.tabOrderSection = 1] = "tabOrderSection", 
            SelectionPaneListSection;
        }({}), selection_pane_list_legacy_tree_component_OrderStrategy = function(OrderStrategy) {
            return OrderStrategy[OrderStrategy.grouping = 0] = "grouping", OrderStrategy[OrderStrategy.flatten = 1] = "flatten", 
            OrderStrategy;
        }({}), SelectionPaneListLegacyTreeComponent = function() {
            function SelectionPaneListLegacyTreeComponent(conceptualSchemaProxy, dataSources, displayNameService, dragDataService, eventBridge, explorationNavigationService, featureSwitchService, formFactor, visualContainerGroupAuthoringService, lazyScoped, localizationService, promiseFactory, screenReaderService, selection, selectionPaneListOrderService, viewModeState, visualAuthoring, visualPlugin) {
                var _this = this;
                this.conceptualSchemaProxy = conceptualSchemaProxy, this.dataSources = dataSources, 
                this.displayNameService = displayNameService, this.dragDataService = dragDataService, 
                this.eventBridge = eventBridge, this.explorationNavigationService = explorationNavigationService, 
                this.featureSwitchService = featureSwitchService, this.formFactor = formFactor, 
                this.visualContainerGroupAuthoringService = visualContainerGroupAuthoringService, 
                this.lazyScoped = lazyScoped, this.localizationService = localizationService, this.promiseFactory = promiseFactory, 
                this.screenReaderService = screenReaderService, this.selection = selection, this.selectionPaneListOrderService = selectionPaneListOrderService, 
                this.viewModeState = viewModeState, this.visualAuthoring = visualAuthoring, this.visualPlugin = visualPlugin, 
                this.SectionType = selection_pane_list_legacy_tree_component_SelectionPaneListSection, 
                this.OrderStrategy = selection_pane_list_legacy_tree_component_OrderStrategy, this.getDragContext = function(viewModel) {
                    return function() {
                        return _this.getDragContextInternal(viewModel);
                    };
                }, this.isEditingLabel = !1, this.expandedNodeSet = {}, this.isDragging = !1, this.subscription = new Subscription.w, 
                this.bringForwardName = this.localizationService.get("ExplorationCanvasItemsPane_BringForward"), 
                this.sendBackwardName = this.localizationService.get("ExplorationCanvasItemsPane_SendBackward"), 
                this.orderTabsByPositionName = this.localizationService.get("Tab_Order_Reorder_Items"), 
                this.expandAllName = this.localizationService.get("FieldListMenuItem_ExpandAll"), 
                this.collapseAllName = this.localizationService.get("FieldListMenuItem_CollapseAll"), 
                this.moveUpName = this.localizationService.get("FieldListMenuItem_MoveUp"), this.moveDownName = this.localizationService.get("FieldListMenuItem_MoveDown"), 
                this.reorderItemsName = this.localizationService.get("Tab_Order_Reorder_Items_Hint"), 
                this.layerOrderName = this.localizationService.get("ExplorationCanvasItemsPane_LayerOrder_Tooltip"), 
                this.tabOrderName = this.localizationService.get("ExplorationCanvasItemsPane_TabOrder_Tooltip");
                var getLevel = function(node) {
                    return node.level;
                }, isExpandable = function(node) {
                    return node.expandable;
                };
                this.treeFlattener = new fesm2022_tree.JZ(function(node, level) {
                    return {
                        canvasItem: node,
                        expandable: (0, visualContainerGroup.q4)(node),
                        level
                    };
                }, getLevel, isExpandable, function(node) {
                    if ((0, visualContainerGroup.q4)(node)) return (0, of.of)(node.children);
                }), this.treeControl = new tree.C2(getLevel, isExpandable), this.dataSource = new fesm2022_tree.kc(this.treeControl, this.treeFlattener), 
                this.dropActionHandler = function(dropPosition) {
                    return _this.getDropAction(dropPosition);
                }, this.dropConfig = {
                    accept: "visualContainer"
                }, this.isSelected = {}, this.zIndexPromise = this.lazyScoped.get("zIndexService"), 
                this.tabOrderPromise = this.lazyScoped.get("tabOrderService"), this.isListActive = !1, 
                this.scrollbarsConfig = {
                    ignoreOverlay: !1,
                    ignoreMobile: !1
                }, this.activeSection = selection_pane_list_legacy_tree_component_SelectionPaneListSection.listOrderSection, 
                this.featureSwitches$ = this.featureSwitchService.featureSwitches$, this.listChangeObserver = new MutationObserver(function(mutations, observer) {
                    for (var _i = 0, mutations_1 = mutations; _i < mutations_1.length; _i++) if (_.indexOf(mutations_1[_i].addedNodes, _this.currentFocusElement) > -1) {
                        _this.currentFocusElement.focus(), _this.currentFocusElement = null;
                        break;
                    }
                    observer.disconnect();
                }), this.zSortedState$ = this.selectionPaneListOrderService.getZSortedState$(), 
                this.tabSortedState$ = this.selectionPaneListOrderService.getTabSortedState$(), 
                this.subscription.add(this.selectionPaneListOrderService.getListRebuildData$().subscribe(function() {
                    _this.rebuildTreeForData(_this.dataSource.data);
                })), this.subscription.add(this.selectionPaneListOrderService.getNotifyUserLayerDataChanged$().subscribe(function(value) {
                    return (0, tslib_es6.__awaiter)(_this, void 0, void 0, function() {
                        return (0, tslib_es6.__generator)(this, function(_a) {
                            switch (_a.label) {
                              case 0:
                                return [ 4, this.notifyUserLayerChanged(value) ];

                              case 1:
                                return _a.sent(), [ 2 ];
                            }
                        });
                    });
                }));
            }
            return SelectionPaneListLegacyTreeComponent.prototype.bringForwardTextTooltip = function() {
                return this.isShowingTabOrderSection() ? this.moveUpName : this.bringForwardName;
            }, SelectionPaneListLegacyTreeComponent.prototype.sendBackwardTextTooltip = function() {
                return this.isShowingTabOrderSection() ? this.moveDownName : this.sendBackwardName;
            }, SelectionPaneListLegacyTreeComponent.prototype.getFlattenedVisibleNodesInDOM = function(source) {
                for (var result = [], _i = 0, source_1 = source; _i < source_1.length; _i++) {
                    var node = source_1[_i];
                    result.push(node), _.has(this.expandedNodeSet, node.name) && (0, visualContainerGroup.q4)(node) && (result = result.concat(this.getFlattenedVisibleNodesInDOM(node.children)));
                }
                return result;
            }, SelectionPaneListLegacyTreeComponent.prototype.getExpandedNodeSet = function() {
                return this.expandedNodeSet;
            }, SelectionPaneListLegacyTreeComponent.prototype.rememberExpandedTreeNodes = function(treeControl) {
                var newExpandedNodeSet = {};
                return treeControl.dataNodes && treeControl.dataNodes.forEach(function(node) {
                    treeControl.isExpandable(node) && treeControl.isExpanded(node) && (newExpandedNodeSet[node.canvasItem.name] = !0);
                }), newExpandedNodeSet;
            }, SelectionPaneListLegacyTreeComponent.prototype.isDroppable = function(item) {
                return !(this.currentDraggingNode && !(0, visualContainerGroup.Vz)(this.currentDraggingNode) && this.currentDraggingNode !== item && (0, 
                itemGrouping.sE)(item.name, this.currentDraggingNode.children));
            }, SelectionPaneListLegacyTreeComponent.prototype.dragStarted = function(event) {
                this.isDragging = !0, debug.fF.assertValue(event && event.source, "No source for dragging");
                var viewModel = event.source.data.canvasItem;
                this.currentDraggingNode = viewModel, selectionUtils.UP.isCanvasItemSelected(viewModel.contract, this.selection) || selectionUtils.UP.selectCanvasItem(viewModel.contract, this.selection);
            }, SelectionPaneListLegacyTreeComponent.prototype.dragEnd = function() {
                this.currentDraggingNode = void 0;
            }, SelectionPaneListLegacyTreeComponent.prototype.isTheLastChild = function(nodeToCheck) {
                if (!nodeToCheck) return !1;
                var sortedNodeToCheckSiblings = this.sortItemsByProperty((0, itemGrouping.E8)(nodeToCheck, this.dataSource.data), function(item) {
                    return item.position.z;
                }).sortedItems;
                return sortedNodeToCheckSiblings && _.last(sortedNodeToCheckSiblings) === nodeToCheck;
            }, SelectionPaneListLegacyTreeComponent.prototype.isDroppedAtEndOfList = function(currentIndex, flattenedVisibleNodes) {
                var nodeBeforeDest = flattenedVisibleNodes[currentIndex - 1], nodeBeforeDestFlatNode = _.find(this.treeControl.dataNodes, function(node) {
                    return node.canvasItem === nodeBeforeDest;
                });
                return this.isTheLastChild(nodeBeforeDest) && nodeBeforeDest && ((0, visualContainerGroup.Vz)(nodeBeforeDest) || !this.treeControl.isExpanded(nodeBeforeDestFlatNode));
            }, SelectionPaneListLegacyTreeComponent.prototype.findRelativeIndex = function(currentIndex, nodeAtDestViewModel, nodeDroppedViewModel, flattenedVisibleNodes) {
                var relativeIndex = currentIndex, parentViewModelOfNodeAtDest = nodeAtDestViewModel.parentGroup;
                if (parentViewModelOfNodeAtDest) relativeIndex = currentIndex - (_.findIndex(flattenedVisibleNodes, function(n) {
                    return n.name === parentViewModelOfNodeAtDest.name;
                }) + 1); else for (var _i = 0, flattenedVisibleNodes_1 = flattenedVisibleNodes; _i < flattenedVisibleNodes_1.length; _i++) {
                    var nodeViewModel = flattenedVisibleNodes_1[_i];
                    if (nodeAtDestViewModel === nodeViewModel) break;
                    nodeViewModel.parentGroup && nodeDroppedViewModel !== nodeViewModel && relativeIndex--;
                }
                return relativeIndex;
            }, SelectionPaneListLegacyTreeComponent.prototype.dropAtZIndexOperation = function(siblingContracts, nodeAtDestViewModel, nodeDroppedViewModel, isMoveAfterOperation) {
                return void 0 === isMoveAfterOperation && (isMoveAfterOperation = !0), (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var zIndexService;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.zIndexPromise ];

                          case 1:
                            return zIndexService = _a.sent(), isMoveAfterOperation ? zIndexService.moveAfter(siblingContracts, nodeAtDestViewModel, [ nodeDroppedViewModel.contract ]) : zIndexService.moveBefore(siblingContracts, nodeAtDestViewModel, [ nodeDroppedViewModel.contract ]), 
                            [ 2 ];
                        }
                    });
                });
            }, SelectionPaneListLegacyTreeComponent.prototype.dropAtZIndexAndMoveGroup = function(currentIndex, isMoveFromTopToBottom, flattenedVisibleNodes, nodeAtDestViewModel, nodeDroppedViewModel, isMoveAfterOperation) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var isSameParent, relativeIndex, destinationSiblings, endOfSiblings, isInsertingAtTheEnd, exploreCanvas;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return isSameParent = nodeAtDestViewModel.parentGroup === nodeDroppedViewModel.parentGroup, 
                            relativeIndex = this.findRelativeIndex(currentIndex, nodeAtDestViewModel, nodeDroppedViewModel, flattenedVisibleNodes), 
                            destinationSiblings = (0, itemGrouping.E8)(nodeAtDestViewModel, this.dataSource.data), 
                            endOfSiblings = isSameParent ? destinationSiblings.length - 1 : destinationSiblings.length, 
                            isInsertingAtTheEnd = 0 !== relativeIndex && relativeIndex >= endOfSiblings, void 0 === isMoveAfterOperation && (isMoveAfterOperation = !isMoveFromTopToBottom && !isInsertingAtTheEnd), 
                            [ 4, this.dropAtZIndexOperation(_.map(destinationSiblings, function(item) {
                                return item.contract;
                            }), nodeAtDestViewModel, nodeDroppedViewModel, isMoveAfterOperation) ];

                          case 1:
                            return _a.sent(), isSameParent || (exploreCanvas = this.explorationNavigationService.getCurrentExploreCanvas(), 
                            this.visualContainerGroupAuthoringService.moveCanvasItemInTree(exploreCanvas, nodeDroppedViewModel.contract, nodeAtDestViewModel.contract, isInsertingAtTheEnd)), 
                            [ 2 ];
                        }
                    });
                });
            }, SelectionPaneListLegacyTreeComponent.prototype.drop = function(event) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var flattenedVisibleNodes, currentIndex, nodeDroppedViewModel, nodeAtDestViewModel, previousIndex, isMoveFromTopToBottom, isMoveAfterOperation, nodeAtDestFlatNode;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return this.expandedNodeSet = this.rememberExpandedTreeNodes(this.treeControl), 
                            flattenedVisibleNodes = this.getFlattenedVisibleNodesInDOM(this.dataSource.data), 
                            (nodeAtDestViewModel = flattenedVisibleNodes[currentIndex = event.currentIndex]).name === (nodeDroppedViewModel = event.item.data.canvasItem).name || (0, 
                            visualContainerGroup.q4)(nodeDroppedViewModel) && (0, itemGrouping.sE)(nodeAtDestViewModel.name, nodeDroppedViewModel.children) ? [ 2 ] : (previousIndex = _.findIndex(flattenedVisibleNodes, function(node) {
                                return node === nodeDroppedViewModel;
                            }), isMoveFromTopToBottom = currentIndex > previousIndex, nodeAtDestFlatNode = _.find(this.treeControl.dataNodes, function(node) {
                                return node.canvasItem === nodeAtDestViewModel;
                            }), isMoveFromTopToBottom && (0, visualContainerGroup.q4)(nodeAtDestViewModel) && this.treeControl.isExpanded(nodeAtDestFlatNode) ? (nodeAtDestViewModel = flattenedVisibleNodes[currentIndex + 1], 
                            isMoveAfterOperation = !0) : !isMoveFromTopToBottom && this.isDroppedAtEndOfList(currentIndex, flattenedVisibleNodes) && (nodeAtDestViewModel = flattenedVisibleNodes[currentIndex - 1], 
                            isMoveAfterOperation = !1), [ 4, this.dropAtZIndexAndMoveGroup(currentIndex, isMoveFromTopToBottom, flattenedVisibleNodes, nodeAtDestViewModel, nodeDroppedViewModel, isMoveAfterOperation) ]);

                          case 1:
                            return _a.sent(), this.rebuildTreeForData(this.groups), this.isDragging = !1, [ 2 ];
                        }
                    });
                });
            }, SelectionPaneListLegacyTreeComponent.prototype.areCanvasItemsEqual = function(oldData, newData) {
                if (oldData.length !== newData.length) return !1;
                for (var i = 0; i < oldData.length; i++) {
                    var item = oldData[i], newItem = newData[i];
                    if ((0, visualContainerGroup.Vz)(item) !== (0, visualContainerGroup.Vz)(newItem) || item.name !== newItem.name) return !1;
                }
                return !0;
            }, SelectionPaneListLegacyTreeComponent.prototype.sortItemsByProperty = function(items, lambdaFunctionToSortBy, itemsToCompare) {
                var sortedItems = _.orderBy(items, lambdaFunctionToSortBy, "desc"), sortingResult = {
                    sortedItems
                };
                itemsToCompare && (sortingResult.isDirty = !this.areCanvasItemsEqual(itemsToCompare, sortedItems));
                for (var i = 0; i < sortedItems.length; i++) {
                    var item = sortedItems[i], itemToCompare = itemsToCompare && itemsToCompare[i];
                    if ((0, visualContainerGroup.q4)(item)) {
                        var childrenItemToCompare = itemToCompare && (0, visualContainerGroup.q4)(itemToCompare) && itemToCompare.children || [], result = this.sortItemsByProperty(item.children, lambdaFunctionToSortBy, itemsToCompare ? childrenItemToCompare : void 0);
                        itemsToCompare && (sortingResult.isDirty = sortingResult.isDirty || result.isDirty), 
                        item.children = result.sortedItems;
                    }
                }
                return sortingResult;
            }, SelectionPaneListLegacyTreeComponent.prototype.getSortedVisualContainers = function(isPositiveTabOrder) {
                var _a;
                void 0 === isPositiveTabOrder && (isPositiveTabOrder = !0);
                var isShowingTabOrder = this.isShowingTabOrderSection(), propertyToSortBy = this.activePositionListOrder;
                if (!("z" === propertyToSortBy ? this.zSortedState$.value : this.tabSortedState$.value)) {
                    if (isShowingTabOrder) {
                        var sortedByTabOrders = this.sortItemsByProperty(this.visualContainers, function(item) {
                            return item.position[propertyToSortBy];
                        }).sortedItems, positive = (_a = _.partition(sortedByTabOrders, function(viewModel) {
                            return void 0 === viewModel.position.tabOrder || viewModel.position.tabOrder >= 0;
                        }))[0], negative = _a[1];
                        this.sortedVisualContainersByPositiveTabOrder = positive, this.sortedVisualContainersByNegativeTabOrder = negative;
                    } else this.sortedVisualContainersByZIndex = this.sortItemsByProperty(this.visualContainers, function(item) {
                        return item.position[propertyToSortBy];
                    }).sortedItems;
                    this.updateActiveListSortState(!0);
                }
                return isShowingTabOrder ? isPositiveTabOrder ? this.sortedVisualContainersByPositiveTabOrder : this.sortedVisualContainersByNegativeTabOrder : this.sortedVisualContainersByZIndex;
            }, SelectionPaneListLegacyTreeComponent.prototype.rebuildTreeForData = function(data, toCompare) {
                void 0 === toCompare && (toCompare = !1);
                var sortingResult = this.sortItemsByProperty(data, function(item) {
                    return item.position.z;
                }, toCompare ? this.dataSource.data : void 0);
                toCompare && !sortingResult.isDirty || (this.expandedNodeSet = this.rememberExpandedTreeNodes(this.treeControl), 
                this.dataSource.data = sortingResult.sortedItems, this.forgetMissingExpandedNodes(this.treeControl, this.expandedNodeSet), 
                this.expandNodesByName(this.treeControl.dataNodes));
            }, SelectionPaneListLegacyTreeComponent.prototype.forgetMissingExpandedNodes = function(treeControl, expandedNodeSet) {
                treeControl.dataNodes && _.keys(expandedNodeSet).forEach(function(itemName) {
                    treeControl.dataNodes.find(function(item) {
                        return item.canvasItem.name === itemName;
                    }) || _.unset(expandedNodeSet, itemName);
                });
            }, SelectionPaneListLegacyTreeComponent.prototype.expandNodesByName = function(flatItems) {
                var _this = this;
                flatItems && 0 !== flatItems.length && flatItems.forEach(function(node) {
                    _.has(_this.expandedNodeSet, node.canvasItem.name) && _this.treeControl.expand(node);
                });
            }, SelectionPaneListLegacyTreeComponent.prototype.ngOnInit = function() {
                var _this = this;
                this.subscriptionManager = this.eventBridge.createChannelSubscriptionManager(), 
                this.subscriptionManager.subscribe(events.tRg, function() {
                    return _this.updateSelection();
                }).subscribe(events.KD7, function() {
                    return _this.updateSelection();
                }).subscribe(events.gsv, function(e, args) {
                    return _this.selectionPaneListOrderService.markZSorted(!1);
                }).subscribe(events.jCS, function() {
                    return _this.updateZindexListOrder();
                }).subscribe(events.ICs, function() {
                    return _this.updateZindexListOrder();
                }), this.featureSwitchSubscription = this.featureSwitches$.pipe((0, skipWhile.n)(function(switches) {
                    return !switches;
                }), (0, take.q)(1)).subscribe(function(featureSwitches) {
                    return (0, tslib_es6.__awaiter)(_this, void 0, void 0, function() {
                        return (0, tslib_es6.__generator)(this, function(_a) {
                            return this.isNewPaneColorsEnabled = this.isNewPaneColorsEnabled || featureSwitches.paneColorRefresh, 
                            [ 2 ];
                        });
                    });
                });
            }, SelectionPaneListLegacyTreeComponent.prototype.updateZindexListOrder = function() {
                this.activeOrderStrategy === selection_pane_list_legacy_tree_component_OrderStrategy.grouping && (this.ensureNormalization(!0, !1), 
                this.rebuildTreeForData(this.groups, !0));
            }, SelectionPaneListLegacyTreeComponent.prototype.ngOnDestroy = function() {
                this.subscriptionManager.unsubscribeAll(), this.featureSwitchSubscription.unsubscribe(), 
                this.subscription.unsubscribe();
            }, SelectionPaneListLegacyTreeComponent.prototype.setActiveSection = function(sectionType) {
                this.activeSection = sectionType, sectionType === selection_pane_list_legacy_tree_component_SelectionPaneListSection.listOrderSection ? this.selectionPaneListOrderService.markZSorted(!1) : this.selectionPaneListOrderService.markTabSorted(!1), 
                this.setOrderStrategy(), this.rebuildTreeForData(this.groups);
            }, SelectionPaneListLegacyTreeComponent.prototype.setOrderStrategy = function() {
                this.activeOrderStrategy = !this.isPhoneLayout() && (this.activeSection === selection_pane_list_legacy_tree_component_SelectionPaneListSection.listOrderSection || this.activeSection === selection_pane_list_legacy_tree_component_SelectionPaneListSection.tabOrderSection && this.accessibilityTopLevelNavFS) ? selection_pane_list_legacy_tree_component_OrderStrategy.grouping : selection_pane_list_legacy_tree_component_OrderStrategy.flatten, 
                this.activePositionListOrder = this.isShowingTabOrderSection() ? "tabOrder" : "z";
            }, SelectionPaneListLegacyTreeComponent.prototype.isActiveSection = function(sectionType) {
                return this.activeSection === sectionType;
            }, SelectionPaneListLegacyTreeComponent.prototype.isActiveOrderStrategy = function(orderStrategy) {
                return this.activeOrderStrategy === orderStrategy;
            }, SelectionPaneListLegacyTreeComponent.prototype.isShowingTabOrderSection = function() {
                return this.isActiveSection(this.SectionType.tabOrderSection);
            }, SelectionPaneListLegacyTreeComponent.prototype.isPhoneLayout = function() {
                return 1 === this.formFactor.getCurrentLayout();
            }, SelectionPaneListLegacyTreeComponent.prototype.isZOrder = function() {
                return "z" === this.activePositionListOrder;
            }, SelectionPaneListLegacyTreeComponent.prototype.updateIsEditing = function(isEditing) {
                this.isEditingLabel = isEditing;
            }, SelectionPaneListLegacyTreeComponent.prototype.ngOnChanges = function(changes) {
                this.setOrderStrategy(), changes.groups && changes.groups.currentValue && (this.listContracts = _.map(this.groups, function(item) {
                    return item.contract;
                }), this.ensureNormalization(), this.updateSelection(), this.rebuildTreeForData(changes.groups.currentValue), 
                this.selectionPaneListOrderService.markZSorted(!1), this.selectionPaneListOrderService.markTabSorted(!1)), 
                changes.visualContainers && changes.visualContainers.currentValue && (this.selectionPaneListOrderService.markTabSorted(!1), 
                this.ensureNormalization(!1), this.updateSelection());
            }, SelectionPaneListLegacyTreeComponent.prototype.ensureNormalization = function(isZIndex, isTabOrder) {
                return void 0 === isZIndex && (isZIndex = !0), void 0 === isTabOrder && (isTabOrder = !0), 
                (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var zIndex, tabOrder;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return isZIndex ? [ 4, this.zIndexPromise ] : [ 3, 2 ];

                          case 1:
                            zIndex = _a.sent(), this.ensureNormalizedZIndex(zIndex), _a.label = 2;

                          case 2:
                            return isTabOrder ? [ 4, this.tabOrderPromise ] : [ 3, 4 ];

                          case 3:
                            tabOrder = _a.sent(), this.ensureNormalizedTabOrder(tabOrder), _a.label = 4;

                          case 4:
                            return [ 2 ];
                        }
                    });
                });
            }, SelectionPaneListLegacyTreeComponent.prototype.isPositiveTabOrder = function(visualContainer) {
                return visualContainer && (void 0 === visualContainer.position.tabOrder || visualContainer.position.tabOrder >= 0);
            }, SelectionPaneListLegacyTreeComponent.prototype.onItemClick = function($event, canvasItem) {
                var _this = this, selectionService = this.selection;
                if ($event && $event.shiftKey) {
                    var isEqualToPrevFocusItem = function(itemContract) {
                        return itemContract.name === _this.previousFocusedItem.name;
                    }, isEqualToCurrentItem = function(itemContract) {
                        return itemContract.name === canvasItem.name;
                    }, canvasItemsToSelect = [], isPrevFocusItemMet = void 0, isCurrentItemMet = void 0;
                    if (this.previousFocusedItem) for (var isSelectionStarted = !1, _i = 0, listToOrder_1 = this.activeOrderStrategy === selection_pane_list_legacy_tree_component_OrderStrategy.flatten ? this.isShowingTabOrderSection() ? (0, 
                    tslib_es6.__spreadArray)((0, tslib_es6.__spreadArray)([], this.sortedVisualContainersByPositiveTabOrder || [], !0), this.sortedVisualContainersByNegativeTabOrder || [], !0) : (0, 
                    tslib_es6.__spreadArray)([], this.sortedVisualContainersByZIndex || [], !0) : this.previousFocusedItem.parentGroup ? this.sortItemsByProperty(this.previousFocusedItem.parentGroup.children, function(item) {
                        return item.position.z;
                    }).sortedItems : this.dataSource.data; _i < listToOrder_1.length; _i++) {
                        var itemContract = listToOrder_1[_i].contract, isEqualPrev = isEqualToPrevFocusItem(itemContract), isEqualCurrent = isEqualToCurrentItem(itemContract);
                        if (isPrevFocusItemMet = isPrevFocusItemMet || isEqualPrev, isCurrentItemMet = isCurrentItemMet || isEqualCurrent, 
                        isEqualPrev || isEqualCurrent) {
                            if (canvasItemsToSelect.push(itemContract), isSelectionStarted) break;
                            isSelectionStarted = !0;
                        } else isSelectionStarted && canvasItemsToSelect.push(itemContract);
                    }
                    !_.isEmpty(canvasItemsToSelect) && isPrevFocusItemMet && isCurrentItemMet ? selectionUtils.UP.selectCanvasItems(canvasItemsToSelect, selectionService) : this.flipSelection(canvasItem, !1);
                } else this.flipSelection(canvasItem, browserUtils.M.isCtrlOrMeta($event)), this.previousFocusedItem = canvasItem;
            }, SelectionPaneListLegacyTreeComponent.prototype.flipSelection = function(canvasItem, isMultiSelect) {
                var selectionService = this.selection;
                this.isCanvasItemSelected(canvasItem) ? isMultiSelect ? selectionUtils.UP.unselectCanvasItem(canvasItem.contract, selectionService) : selectionService.clearSelection() : selectionUtils.UP.selectCanvasItem(canvasItem.contract, this.selection, isMultiSelect ? 3 : 0);
            }, SelectionPaneListLegacyTreeComponent.prototype.bringForward = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            switch (this.activeOrderStrategy) {
                              case selection_pane_list_legacy_tree_component_OrderStrategy.grouping:
                                return [ 3, 1 ];

                              case selection_pane_list_legacy_tree_component_OrderStrategy.flatten:
                                return [ 3, 3 ];
                            }
                            return [ 3, 5 ];

                          case 1:
                            return this.bringForwardGroupingOrder(), [ 4, this.notifyUserLayerChanged(!0) ];

                          case 2:
                          case 4:
                            return _b.sent(), [ 3, 6 ];

                          case 3:
                            return this.bringForwardFlattenOrder(), [ 4, this.notifyUserLayerChanged(!0) ];

                          case 5:
                            return debug.fF.assertNever(this.activeOrderStrategy), [ 3, 6 ];

                          case 6:
                            return [ 2 ];
                        }
                    });
                });
            }, SelectionPaneListLegacyTreeComponent.prototype.notifyUserLayerChanged = function(bringForward) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var labels, elementNames, message, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, Promise.all(this.dataSource.data.map(function(item) {
                                if (_this.isCanvasItemSelected(item)) return (0, visualContainerGroup.Vz)(item) ? (0, 
                                visualContainerUtils.uo)(item.contract, {
                                    dataSources: _this.dataSources,
                                    conceptualSchemaProxy: _this.conceptualSchemaProxy,
                                    visualPlugin: _this.visualPlugin,
                                    displayNameService: _this.displayNameService
                                }) : Promise.resolve(item.contract.displayName);
                            })) ];

                          case 1:
                            return labels = _a.sent(), (elementNames = labels.filter(function(label) {
                                return label;
                            }).join(", ")) && (message = this.localizationService.format(bringForward ? "ExplorationCanvasItemsPane_SentForward" : "ExplorationCanvasItemsPane_SentBackward", elementNames), 
                            this.screenReaderService.alertPolite(message)), [ 2 ];
                        }
                    });
                });
            }, SelectionPaneListLegacyTreeComponent.prototype.bringForwardFlattenOrder = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var isZOrder, service, list;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, (isZOrder = this.isZOrder()) ? this.zIndexPromise : this.tabOrderPromise ];

                          case 1:
                            return service = _a.sent(), this.ensureNormalization(isZOrder, !isZOrder), list = isZOrder ? this.listContracts : this.filterVisualContainersByTabOrderSign(!0), 
                            service.bringForward(list, selectionUtils.UP.getSelectedVisualContainers(this.selection), !0), 
                            this.updateActiveListSortState(!1), [ 2 ];
                        }
                    });
                });
            }, SelectionPaneListLegacyTreeComponent.prototype.bringForwardGroupingOrder = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var zIndexService;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.zIndexPromise ];

                          case 1:
                            return zIndexService = _a.sent(), this.ensureNormalizedZIndex(zIndexService), zIndexService.sendZIndexCommandsByLevel(this.selection, this.listContracts, 3), 
                            this.rebuildTreeForData(this.dataSource.data), [ 2 ];
                        }
                    });
                });
            }, SelectionPaneListLegacyTreeComponent.prototype.sendBackward = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            switch (this.activeOrderStrategy) {
                              case selection_pane_list_legacy_tree_component_OrderStrategy.grouping:
                                return [ 3, 1 ];

                              case selection_pane_list_legacy_tree_component_OrderStrategy.flatten:
                                return [ 3, 3 ];
                            }
                            return [ 3, 5 ];

                          case 1:
                            return this.sendBackwardGroupingOrder(), [ 4, this.notifyUserLayerChanged(!1) ];

                          case 2:
                          case 4:
                            return _b.sent(), [ 3, 6 ];

                          case 3:
                            return this.sendBackwardFlattenOrder(), [ 4, this.notifyUserLayerChanged(!1) ];

                          case 5:
                            return debug.fF.assertNever(this.activeOrderStrategy), [ 3, 6 ];

                          case 6:
                            return [ 2 ];
                        }
                    });
                });
            }, SelectionPaneListLegacyTreeComponent.prototype.sendBackwardFlattenOrder = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var isZOrder, service, list;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, (isZOrder = this.isZOrder()) ? this.zIndexPromise : this.tabOrderPromise ];

                          case 1:
                            return service = _a.sent(), this.ensureNormalization(isZOrder, !isZOrder), list = isZOrder ? this.listContracts : this.filterVisualContainersByTabOrderSign(!0), 
                            service.sendBackward(list, selectionUtils.UP.getSelectedVisualContainers(this.selection), !0), 
                            this.updateActiveListSortState(!1), [ 2 ];
                        }
                    });
                });
            }, SelectionPaneListLegacyTreeComponent.prototype.sendBackwardGroupingOrder = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var zIndexService;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.zIndexPromise ];

                          case 1:
                            return zIndexService = _a.sent(), this.ensureNormalizedZIndex(zIndexService), zIndexService.sendZIndexCommandsByLevel(this.selection, this.listContracts, 4), 
                            this.rebuildTreeForData(this.dataSource.data), [ 2 ];
                        }
                    });
                });
            }, SelectionPaneListLegacyTreeComponent.prototype.toggleTabOrderSection = function($event) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var tabOrderService;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.tabOrderPromise ];

                          case 1:
                            return tabOrderService = _a.sent(), this.ensureNormalizedTabOrder(tabOrderService), 
                            tabOrderService.changeSection(this.filterVisualContainersByTabOrderSign($event.isSkippedSection), [ $event.visualContainer.contract ], $event.isSkippedSection), 
                            this.selection.clearSelection(), selectionUtils.UP.selectCanvasItem($event.visualContainer.contract, this.selection), 
                            this.selectionPaneListOrderService.markTabSorted(!1), [ 2 ];
                        }
                    });
                });
            }, SelectionPaneListLegacyTreeComponent.prototype.isEditable = function() {
                return 1 === this.viewModeState.getMode();
            }, SelectionPaneListLegacyTreeComponent.prototype.getDragContextInternal = function(viewModel) {
                var modelsToMove;
                return selectionUtils.UP.isCanvasItemSelected(viewModel.contract, this.selection) ? modelsToMove = this.getSelectedViewModels() : (selectionUtils.UP.selectCanvasItem(viewModel.contract, this.selection), 
                modelsToMove = [ viewModel ]), {
                    visualContainers: modelsToMove
                };
            }, SelectionPaneListLegacyTreeComponent.prototype.getDropAction = function(dropPosition) {
                var deferred = this.promiseFactory.defer(), dragPayload = this.dragDataService.getDragContext();
                return dragPayload && !_.isEmpty(dragPayload.visualContainers) && this.isEditable() ? (0, 
                dragDropUtils.W6)(dropPosition) ? deferred.resolve(2) : deferred.resolve(3) : deferred.resolve(0), 
                deferred.promise;
            }, SelectionPaneListLegacyTreeComponent.prototype.dropOntoSibling = function(event, args, dropAction) {
                var dragPayload = this.dragDataService.getDragContext();
                if (dragPayload && !_.isEmpty(dragPayload.visualContainers) && this.isEditable()) {
                    var targetName = event.target.dataset.name, targetViewModel = _.find(this.visualContainers, function(visualContainer) {
                        return visualContainer.name === targetName;
                    });
                    switch (debug.fF.assertValue(targetViewModel, "Unable to get target view model"), 
                    this.activeOrderStrategy) {
                      case selection_pane_list_legacy_tree_component_OrderStrategy.grouping:
                        this.dropOntoSiblingHelper(this.listContracts, dropAction, dragPayload, targetViewModel);
                        break;

                      case selection_pane_list_legacy_tree_component_OrderStrategy.flatten:
                        var list = this.isZOrder() ? this.listContracts : this.filterVisualContainersByTabOrderSign(!0);
                        this.dropOntoSiblingHelper(list, dropAction, dragPayload, targetViewModel);
                        break;

                      default:
                        debug.fF.assertNever(this.activeOrderStrategy);
                    }
                }
            }, SelectionPaneListLegacyTreeComponent.prototype.dropOntoSiblingHelper = function(list, dropAction, dragPayload, targetViewModel) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var isZOrder, service;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, (isZOrder = this.isZOrder()) ? this.zIndexPromise : this.tabOrderPromise ];

                          case 1:
                            return service = _a.sent(), this.ensureNormalization(isZOrder, !isZOrder), 2 === dropAction ? service.moveAfter(list, targetViewModel, _.map(dragPayload.visualContainers, function(vc) {
                                return vc.contract;
                            }), !0) : 3 === dropAction && service.moveBefore(list, targetViewModel, _.map(dragPayload.visualContainers, function(vc) {
                                return vc.contract;
                            }), !0), this.updateActiveListSortState(!1), [ 2 ];
                        }
                    });
                });
            }, SelectionPaneListLegacyTreeComponent.prototype.getSelectedViewModels = function() {
                var selectedContracts = selectionUtils.UP.getSelectedVisualContainers(this.selection);
                return _.filter(this.visualContainers, function(viewModel) {
                    return _.some(selectedContracts, function(selectedContract) {
                        return viewModel.contract === selectedContract;
                    });
                });
            }, SelectionPaneListLegacyTreeComponent.prototype.onKeyDown = function(event, canvasItem, isUnskippedSection) {
                return void 0 === isUnskippedSection && (isUnskippedSection = !0), (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var nodeFlatNode;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return 117 === event.keyCode ? (this.isListActive = !0, event.stopPropagation(), 
                            event.preventDefault()) : 9 === event.keyCode && this.isListActive ? this.isListActive = !1 : 13 !== event.keyCode && 32 !== event.keyCode || !isUnskippedSection || this.onItemClick(event, canvasItem), 
                            this.isEditable() ? 70 === event.keyCode && browserUtils.M.isCtrlOrMeta(event) && event.shiftKey && isUnskippedSection ? (this.trackFocusElement(event.target), 
                            [ 4, this.bringForward() ]) : [ 3, 2 ] : [ 3, 5 ];

                          case 1:
                            return _a.sent(), [ 3, 5 ];

                          case 2:
                            return 66 === event.keyCode && browserUtils.M.isCtrlOrMeta(event) && event.shiftKey && isUnskippedSection ? (this.trackFocusElement(event.target), 
                            [ 4, this.sendBackward() ]) : [ 3, 4 ];

                          case 3:
                            return _a.sent(), [ 3, 5 ];

                          case 4:
                            if (this.isListActive && 37 === event.keyCode && isUnskippedSection) nodeFlatNode = _.find(this.treeControl.dataNodes, function(n) {
                                return canvasItem.name === n.canvasItem.name;
                            }), this.treeControl.isExpandable(nodeFlatNode) && this.treeControl.isExpanded(nodeFlatNode) && (this.treeControl.collapse(nodeFlatNode), 
                            event.stopPropagation()); else if (this.isListActive && 39 === event.keyCode && isUnskippedSection) nodeFlatNode = _.find(this.treeControl.dataNodes, function(n) {
                                return canvasItem.name === n.canvasItem.name;
                            }), this.treeControl.isExpandable(nodeFlatNode) && !this.treeControl.isExpanded(nodeFlatNode) && (this.treeControl.expand(nodeFlatNode), 
                            event.stopPropagation()); else if (57 === event.keyCode && event.shiftKey && event.altKey && isUnskippedSection) this.treeControl.expandAll(); else if (49 === event.keyCode && event.shiftKey && event.altKey && isUnskippedSection) this.treeControl.collapseAll(); else if (83 === event.keyCode && browserUtils.M.isCtrlOrMeta(event) && event.shiftKey) switch (this.activeSection) {
                              case selection_pane_list_legacy_tree_component_SelectionPaneListSection.listOrderSection:
                                this.toggleSelectedVisibility();
                                break;

                              case selection_pane_list_legacy_tree_component_SelectionPaneListSection.tabOrderSection:
                                this.toggleTabOrderSection({
                                    isSkippedSection: isUnskippedSection,
                                    visualContainer: canvasItem
                                });
                                break;

                              default:
                                debug.fF.assertNever(this.activeSection);
                            }
                            _a.label = 5;

                          case 5:
                            return [ 2 ];
                        }
                    });
                });
            }, SelectionPaneListLegacyTreeComponent.prototype.trackFocusElement = function(targetElement) {
                this.currentFocusElement = targetElement, this.listChangeObserver.observe(targetElement.parentElement, {
                    childList: !0,
                    subtree: !1,
                    attributes: !1
                });
            }, SelectionPaneListLegacyTreeComponent.prototype.getTabIndex = function(canvasItemName, index) {
                return this.isListActive ? 0 : _.isEmpty(this.isSelected) ? (void 0 === index && (index = this.treeControl.dataNodes.findIndex(function(node) {
                    return node.canvasItem.name === canvasItemName;
                })), 0 === index ? 0 : -1) : canvasItemName === _.last(Object.keys(this.isSelected)) ? 0 : -1;
            }, SelectionPaneListLegacyTreeComponent.prototype.toggleSelectedVisibility = function() {
                var _a, _b, _c, selectedContracts = this.getSelectedItems(), selectedGroups = (_a = _.partition(selectedContracts, function(contract) {
                    return (0, visualContainerGroup2.q4)(contract);
                }))[0], selectedVisualContainers = _a[1];
                if (!_.isEmpty(selectedGroups)) {
                    var groupsToShow = (_b = _.partition(selectedGroups, function(contract) {
                        return (0, visualContainerGroup1.xj)(contract);
                    }))[0], groupsToHide = _b[1];
                    _.isEmpty(groupsToShow) || this.visualAuthoring.setVisualContainerGroupVisibility(!1, groupsToShow), 
                    _.isEmpty(groupsToHide) || this.visualAuthoring.setVisualContainerGroupVisibility(!0, groupsToHide);
                }
                if (!_.isEmpty(selectedVisualContainers)) {
                    var visualContainersToShow = (_c = _.partition(selectedVisualContainers, function(contract) {
                        return (0, visualContainer2.xj)(contract.config.singleVisual);
                    }))[0], visualContainersToHide = _c[1];
                    _.isEmpty(visualContainersToShow) || this.visualAuthoring.setVisibility(!1, visualContainersToShow), 
                    _.isEmpty(visualContainersToHide) || this.visualAuthoring.setVisibility(!0, visualContainersToHide);
                }
            }, SelectionPaneListLegacyTreeComponent.prototype.isCanvasItemSelected = function(container) {
                return selectionUtils.UP.isCanvasItemSelected(container.contract, this.selection);
            }, SelectionPaneListLegacyTreeComponent.prototype.getSelectedItems = function() {
                return selectionUtils.UP.getSelectedCanvasItems(this.selection);
            }, SelectionPaneListLegacyTreeComponent.prototype.updateSelection = function() {
                _.isEmpty(this.visualContainers) && (this.isSelected = {});
                var selectedVisuals = this.getSelectedItems();
                _.isEmpty(selectedVisuals) && (this.isSelected = {}), this.isSelected = _.zipObject(_.map(selectedVisuals, function(container) {
                    return container.name;
                }), _.map(selectedVisuals, _.constant(!0)));
            }, SelectionPaneListLegacyTreeComponent.prototype.ensureNormalizedZIndex = function(zIndex) {
                var list = this.listContracts;
                zIndex.shouldNormalize(list) && (zIndex.normalize(list), this.selectionPaneListOrderService.markZSorted(!1));
            }, SelectionPaneListLegacyTreeComponent.prototype.filterVisualContainersByTabOrderSign = function(isUnskipped) {
                return this.visualContainers ? (0, canvasVisualsUtility.cV)(this.visualContainers.map(function(item) {
                    return item.contract;
                }), isUnskipped) : [];
            }, SelectionPaneListLegacyTreeComponent.prototype.ensureNormalizedTabOrder = function(tabOrder) {
                var visualContainersWithPositiveTabOrders = this.filterVisualContainersByTabOrderSign(!0);
                tabOrder.shouldNormalize(visualContainersWithPositiveTabOrders, !0) && (tabOrder.normalize(visualContainersWithPositiveTabOrders, !0), 
                this.selectionPaneListOrderService.markTabSorted(!1));
                var visualContainersWithNegativeTabOrders = this.filterVisualContainersByTabOrderSign(!1);
                tabOrder.shouldNormalize(visualContainersWithNegativeTabOrders, !1) && (tabOrder.normalize(visualContainersWithNegativeTabOrders, !1), 
                this.selectionPaneListOrderService.markTabSorted(!1));
            }, SelectionPaneListLegacyTreeComponent.prototype.updateActiveListSortState = function(value) {
                "tabOrder" === this.activePositionListOrder ? this.selectionPaneListOrderService.markTabSorted(value) : "z" === this.activePositionListOrder && this.selectionPaneListOrderService.markZSorted(value);
            }, SelectionPaneListLegacyTreeComponent.\u0275fac = function(t) {
                return new (t || SelectionPaneListLegacyTreeComponent)(core["\u0275\u0275directiveInject"](conceptual_schema_proxy_service.i), core["\u0275\u0275directiveInject"](data_sources_service.D), core["\u0275\u0275directiveInject"](exploration_display_name_service.O), core["\u0275\u0275directiveInject"](drag_data_service.x), core["\u0275\u0275directiveInject"](event_bridge_service.J), core["\u0275\u0275directiveInject"](exploration_navigation_ex_service.I), core["\u0275\u0275directiveInject"](feature_switch_service.vZ), core["\u0275\u0275directiveInject"](form_factor_provider_service.F), core["\u0275\u0275directiveInject"](visual_container_group_authoring_service.p), core["\u0275\u0275directiveInject"](lazy_scoped_provider.H), core["\u0275\u0275directiveInject"](localization_service.o), core["\u0275\u0275directiveInject"](promiseFactory.t), core["\u0275\u0275directiveInject"](screen_reader_service.g), core["\u0275\u0275directiveInject"](selection_service.z), core["\u0275\u0275directiveInject"](SelectionPaneListOrderService), core["\u0275\u0275directiveInject"](view_mode_state_service.kc), core["\u0275\u0275directiveInject"](visual_authoring_service.$8), core["\u0275\u0275directiveInject"](visual_plugin_service.D));
            }, SelectionPaneListLegacyTreeComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: SelectionPaneListLegacyTreeComponent,
                selectors: [ [ "selection-pane-list-legacy-tree" ] ],
                inputs: {
                    groups: "groups",
                    visualContainers: "visualContainers",
                    activeSection: "activeSection",
                    activePositionListOrder: "activePositionListOrder"
                },
                features: [ core["\u0275\u0275NgOnChangesFeature"] ],
                decls: 2,
                vars: 2,
                consts: [ [ 4, "ngIf" ], [ "cdkDropList", "", 3, "dataSource", "treeControl", "cdkDropListDisabled", "cdkDropListDropped" ], [ "matTreeNodePadding", "", "matTreeNodePaddingIndent", "20", "cdkDrag", "", "class", "selection-pane-item themeableElement", 3, "cdkDragData", "ngClass", "keydown", "click", "cdkDragStarted", "cdkDragReleased", 4, "matTreeNodeDef" ], [ "matTreeNodePadding", "", "matTreeNodePaddingIndent", "20", "cdkDrag", "", 1, "selection-pane-item", "themeableElement", 3, "cdkDragData", "ngClass", "keydown", "click", "cdkDragStarted", "cdkDragReleased" ], [ "matTreeNodeToggle", "", "class", "caret glyphicon glyph-mini smallFontSize item-auto", 3, "ngClass", 4, "ngIf" ], [ "tabindex", "-1", 3, "ngClass", "item", "isEditing" ], [ "matTreeNodeToggle", "", 1, "caret", "glyphicon", "glyph-mini", "smallFontSize", "item-auto", 3, "ngClass" ], [ 4, "ngFor", "ngForOf", "ngForTrackBy" ], [ "class", "ui-droppable dropzone selection-pane-item themeableElement", 3, "ngClass", "drag", "getDragContext", "drop", "dropAction", "click", "keydown", "dropHandler", 4, "ngIf" ], [ 1, "ui-droppable", "dropzone", "selection-pane-item", "themeableElement", 3, "ngClass", "drag", "getDragContext", "drop", "dropAction", "click", "keydown", "dropHandler" ], [ "tabindex", "-1", 3, "item", "order", "isSkipped", "skipFunction", "isEditing", 4, "ngIf" ], [ "tabindex", "-1", 3, "item", "isEditing", 4, "ngIf" ], [ "tabindex", "-1", 3, "item", "order", "isSkipped", "skipFunction", "isEditing" ], [ "tabindex", "-1", 3, "item", "isEditing" ], [ "class", "ui-droppable dropzone selection-pane-item themeableElement", "localizeTooltip", "ExplorationCanvasItemsPane_TabOrder_Element_Skipped_Tooltip", 3, "ngClass", "click", "keydown", 4, "ngIf" ], [ "localizeTooltip", "ExplorationCanvasItemsPane_TabOrder_Element_Skipped_Tooltip", 1, "ui-droppable", "dropzone", "selection-pane-item", "themeableElement", 3, "ngClass", "click", "keydown" ], [ "tabindex", "-1", 3, "item", "isSkipped", "skipFunction" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275template"](0, SelectionPaneListLegacyTreeComponent_ng_container_0_Template, 3, 4, "ng-container", 0), 
                    core["\u0275\u0275template"](1, SelectionPaneListLegacyTreeComponent_ng_container_1_Template, 4, 4, "ng-container", 0)), 
                    2 & rf && (core["\u0275\u0275property"]("ngIf", ctx.isActiveOrderStrategy(ctx.OrderStrategy.grouping) && ctx.isActiveSection(ctx.SectionType.listOrderSection)), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !ctx.isActiveOrderStrategy(ctx.OrderStrategy.grouping)));
                },
                dependencies: [ common.NgClass, common.NgForOf, common.NgIf, drag_drop.Wj, drag_drop.Zt, localize_tooltip_directive.r, fesm2022_tree.fQ, fesm2022_tree.ah, fesm2022_tree.eu, fesm2022_tree.gi, fesm2022_tree.uo, drag_directive.w, drop_directive.W, SelectionPaneItemComponent ],
                styles: [ '[_nghost-%COMP%]{--colorForeground: var(--gray-180, #252423);--colorSelectedBackground: var(--colorNeutralBackground3Selected);--colorBackgroundHover: var(--neutral-secondary-color, #666666);--colorBackgroundDisabledAndSelected: var(--neutral-primary-color-alt3, #515151);--colorDropBackground: var(--theme-primary-color, #F2C811);--colorDragging: var(--gray-20, #F3F2F1);--colorDragPreviewHover: var(--gray-30, #EDEBE9);--colorPaneFont: var(--neutral-lighter-color, #F4F4F4)}[data-legacy-theming=false]   [_nghost-%COMP%]{--colorForeground: var(--colorNeutralForeground1);--colorSelectedBackground: var(--colorNeutralBackground3Selected);--colorBackgroundHover: var(--colorNeutralBackground3Hover);--colorBackgroundDisabledAndSelected: var(--colorBackgroundHover);--colorDropBackground: var(--colorBrandBackground);--colorDragging: var(--colorBackgroundDisabledAndSelected);--colorDragPreviewHover: var(--colorBackgroundHover);--colorPaneFont: var(--colorForeground)}.mat-tree-node[_ngcontent-%COMP%], li[_ngcontent-%COMP%]{display:flex;margin:0 2px;align-items:center;justify-content:space-between;background-color:var(--colorSelectedBackground);color:var(--colorPaneFont);cursor:pointer;background-color:transparent;border:1px solid transparent;padding:0 6px}.mat-tree-node.append[_ngcontent-%COMP%], li.append[_ngcontent-%COMP%]{border-bottom-color:var(--colorDropBackground)!important}.mat-tree-node.prepend[_ngcontent-%COMP%], li.prepend[_ngcontent-%COMP%]{border-top-color:var(--colorDropBackground)!important}.mat-tree-node.droppable[_ngcontent-%COMP%]:hover, li.droppable[_ngcontent-%COMP%]:hover, .mat-tree-node.ui-droppable[_ngcontent-%COMP%]:hover, li.ui-droppable[_ngcontent-%COMP%]:hover{background-color:var(--colorBackgroundDisabledAndSelected);color:var(--colorForeground)}.mat-tree-node.selected[_ngcontent-%COMP%]   .menuContainer[_ngcontent-%COMP%]   .optionsMenu[_ngcontent-%COMP%]   .glyphicon[_ngcontent-%COMP%], li.selected[_ngcontent-%COMP%]   .menuContainer[_ngcontent-%COMP%]   .optionsMenu[_ngcontent-%COMP%]   .glyphicon[_ngcontent-%COMP%], .mat-tree-node[_ngcontent-%COMP%]:hover   .menuContainer[_ngcontent-%COMP%]   .optionsMenu[_ngcontent-%COMP%]   .glyphicon[_ngcontent-%COMP%], li[_ngcontent-%COMP%]:hover   .menuContainer[_ngcontent-%COMP%]   .optionsMenu[_ngcontent-%COMP%]   .glyphicon[_ngcontent-%COMP%]{opacity:1}.mat-tree-node[_ngcontent-%COMP%]:focus, li[_ngcontent-%COMP%]:focus{outline:none}.mat-tree-node[_ngcontent-%COMP%]{margin:0}i.caret.glyphicon[_ngcontent-%COMP%]{margin:0 4px}selection-pane-item.groupNode[_ngcontent-%COMP%]{width:calc(100% - 10px)}selection-pane-item[_ngcontent-%COMP%]:focus{outline:none}li.selection-pane-item.ui-draggable-dragging[_ngcontent-%COMP%], .mat-tree-node.cdk-drag-preview[_ngcontent-%COMP%]{display:flex;margin:0 2px;align-items:center;justify-content:space-between;background-color:var(--colorSelectedBackground);color:var(--colorPaneFont);padding:0 6px}.mat-tree-node.cdk-drag-preview[_ngcontent-%COMP%]{font-family:Segoe UI,wf_segoe-ui_normal,helvetica,arial,sans-serif;font-size:12px;background-color:var(--colorDragging);color:var(--colorForeground);border-radius:2px}.mat-tree-node[_ngcontent-%COMP%], li[_ngcontent-%COMP%]{background-color:transparent;color:var(--colorForeground);border-radius:2px}.mat-tree-node.selected[_ngcontent-%COMP%], li.selected[_ngcontent-%COMP%]{background-color:var(--colorSelectedBackground)}.mat-tree-node.droppable[_ngcontent-%COMP%]:hover, li.droppable[_ngcontent-%COMP%]:hover, .mat-tree-node.ui-droppable[_ngcontent-%COMP%]:hover, li.ui-droppable[_ngcontent-%COMP%]:hover{background-color:var(--colorDragPreviewHover);color:var(--colorForeground)}html[data-focus-source="key"][_nghost-%COMP%]   .mat-tree-node[_ngcontent-%COMP%]:focus, html[data-focus-source="key"]   [_nghost-%COMP%]   .mat-tree-node[_ngcontent-%COMP%]:focus, html[data-focus-source="key"][_nghost-%COMP%]   li[_ngcontent-%COMP%]:focus, html[data-focus-source="key"]   [_nghost-%COMP%]   li[_ngcontent-%COMP%]:focus{outline:var(--focus-two-tone-outline-definition, auto 1px);outline-color:var(--focus-two-tone-outline-color, -webkit-focus-ring-color)}.selection-pane-item.ui-draggable-dragging[_ngcontent-%COMP%]{background-color:var(--colorDragging);color:var(--colorForeground);border-radius:2px}', ".mat-tree[_ngcontent-%COMP%]{display:inherit;background:none}.mat-tree-node[_ngcontent-%COMP%]{font-weight:inherit;font-size:inherit;min-height:24px}.mat-tree-node[_ngcontent-%COMP%]{-webkit-user-select:none;-ms-user-select:none;user-select:none}.mat-tree-node.cdk-drag-preview[_ngcontent-%COMP%]{box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}.mat-tree-node.cdk-drag-placeholder[_ngcontent-%COMP%]{opacity:0}.cdk-drop-list-dragging[_ngcontent-%COMP%]   .mat-tree-node[_ngcontent-%COMP%]:not(.cdk-drag-placeholder).droppable{transition:transform .25s cubic-bezier(0,0,.2,1)}.cdk-drag-animating.droppable[_ngcontent-%COMP%]{transition:transform .2s cubic-bezier(0,0,.2,1)}" ]
            }), SelectionPaneListLegacyTreeComponent;
        }(), localize_pipe = __webpack_require__(85102);
        function LayerOrderSectionComponent_div_10_Template(rf, ctx) {
            if (1 & rf) {
                var _r5 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div", 10)(1, "button", 11), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r5);
                    var ctx_r4 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r4.setVisibilityButton.fn(!0));
                }), core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](3, "button", 12), 
                core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r5);
                    var ctx_r6 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r6.setVisibilityButton.fn(!1));
                }), core["\u0275\u0275pipe"](4, "async"), core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("disabled", !core["\u0275\u0275pipeBind1"](2, 2, ctx_r0.isEditable$)), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("disabled", !core["\u0275\u0275pipeBind1"](4, 4, ctx_r0.isEditable$));
            }
        }
        function LayerOrderSectionComponent_div_12_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementStart"](0, "div", 13), core["\u0275\u0275element"](1, "div", 14), 
            core["\u0275\u0275elementEnd"]());
        }
        function LayerOrderSectionComponent_ng_container_16_pbi_tree_1_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "pbi-tree", 16), 2 & rf) {
                var layerTree_r8 = ctx.ngIf, ctx_r7 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275property"]("tree", layerTree_r8)("options", ctx_r7.treeOptions);
            }
        }
        function LayerOrderSectionComponent_ng_container_16_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, LayerOrderSectionComponent_ng_container_16_pbi_tree_1_Template, 1, 2, "pbi-tree", 15), 
            core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275elementContainerEnd"]()), 
            2 & rf) {
                var ctx_r2 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](2, 1, ctx_r2.layerTree$));
            }
        }
        function LayerOrderSectionComponent_ng_container_18_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275element"](1, "selection-pane-list-legacy-tree", 17), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var ctx_r3 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("groups", ctx_r3.groups)("visualContainers", ctx_r3.visualContainers)("activeSection", ctx_r3.activeSection)("activePositionListOrder", ctx_r3.activePositionListOrder);
            }
        }
        var LayerOrderSectionComponent = function(_super) {
            function LayerOrderSectionComponent(clickStrategy, conceptualSchemaProxy, dataSources, displayNameService, dragDropStrategy, editLabelStrategy, eventBridge, featureSwitchService, formFactor, hoverStrategy, keyboardStrategy, layerInlineItemStrategy, layerMenuStrategy, lazyScoped, localizationService, pauseQueriesService, screenReaderService, selection, selectionPaneListOrderService, viewModeState, visualAuthoring, visualPlugin) {
                var _this = _super.call(this) || this;
                return _this.clickStrategy = clickStrategy, _this.conceptualSchemaProxy = conceptualSchemaProxy, 
                _this.dataSources = dataSources, _this.displayNameService = displayNameService, 
                _this.dragDropStrategy = dragDropStrategy, _this.editLabelStrategy = editLabelStrategy, 
                _this.eventBridge = eventBridge, _this.featureSwitchService = featureSwitchService, 
                _this.formFactor = formFactor, _this.hoverStrategy = hoverStrategy, _this.keyboardStrategy = keyboardStrategy, 
                _this.layerInlineItemStrategy = layerInlineItemStrategy, _this.layerMenuStrategy = layerMenuStrategy, 
                _this.lazyScoped = lazyScoped, _this.localizationService = localizationService, 
                _this.pauseQueriesService = pauseQueriesService, _this.screenReaderService = screenReaderService, 
                _this.selection = selection, _this.selectionPaneListOrderService = selectionPaneListOrderService, 
                _this.viewModeState = viewModeState, _this.visualAuthoring = visualAuthoring, _this.visualPlugin = visualPlugin, 
                _this.OrderStrategy = OrderStrategy, _this.activePositionListOrder = "z", _this.activeSection = SelectionPaneListSection.listOrderSection, 
                _this.activeOrderStrategy$ = new ReplaySubject.t(1), _this.isSelected = {}, _this.layerTree$ = new ReplaySubject.t(1), 
                _this.treeOptions = {
                    click: _this.clickStrategy,
                    dragDrop: _this.dragDropStrategy,
                    editLabel: _this.editLabelStrategy,
                    hover: _this.hoverStrategy,
                    inlineItem: _this.layerInlineItemStrategy,
                    keyboard: _this.keyboardStrategy,
                    menu: _this.layerMenuStrategy
                }, _this.zNodeSet = {}, _this.layerOrderPanePbiTreeFS$ = new ReplaySubject.t(1), 
                _this.showLayerOrderTree$ = new ReplaySubject.t(1), _this.zIndexPromise = _this.lazyScoped.get("zIndexService"), 
                _this.scrollbarsConfig = {
                    ignoreOverlay: !1,
                    ignoreMobile: !1
                }, _this;
            }
            return (0, tslib_es6.__extends)(LayerOrderSectionComponent, _super), LayerOrderSectionComponent.prototype.ngOnInit = function() {
                var _this = this;
                this.updateSelection(), this.changes$("groups").pipe((0, takeUntil.R)(this.onDestroy$)).subscribe(function(groups) {
                    _this.listContracts = _.map(groups, function(item) {
                        return item.contract;
                    });
                }), this.hasNoContent$ = this.changes$("groups").pipe((0, map.U)(function(groups) {
                    return !groups || 0 === groups.length;
                })), this.isEditable$ = this.viewModeState.getMode$().pipe((0, map.U)(function(viewMode) {
                    return 1 === viewMode;
                })), this.featureSwitchSubscription = this.featureSwitchService.featureSwitches$.pipe((0, 
                skipWhile.n)(function(switches) {
                    return !switches;
                }), (0, take.q)(1), (0, takeUntil.R)(this.onDestroy$)).subscribe(function(featureSwitches) {
                    return (0, tslib_es6.__awaiter)(_this, void 0, void 0, function() {
                        return (0, tslib_es6.__generator)(this, function(_a) {
                            return this.layerOrderPanePbiTreeFS$.next(featureSwitches.layerOrderPanePbiTree), 
                            [ 2 ];
                        });
                    });
                }), this.layerInlineItemStrategy.getInlineItemChange$().pipe((0, withLatestFrom.M)(this.isEditable$), (0, 
                takeUntil.R)(this.onDestroy$)).subscribe(function(_a) {
                    return _this.refreshTree(_this.groups, _a[1]);
                }), this.dragDropStrategy.getDragDropChange$().pipe((0, withLatestFrom.M)(this.isEditable$), (0, 
                takeUntil.R)(this.onDestroy$)).subscribe(function(_a) {
                    return _this.refreshTree(_this.groups, _a[1]);
                }), this.pauseQueriesService.getShowPausedQuery$().pipe((0, withLatestFrom.M)(this.isEditable$, this.pauseQueriesService.isReportPaused$()), (0, 
                takeUntil.R)(this.onDestroy$)).subscribe(function(_a) {
                    _a[2] && _this.refreshTreeNodesByName([ _a[0] ], _a[1]);
                }), this.keyboardStrategy.getSendItemsDirectionKeyboard$().pipe((0, takeUntil.R)(this.onDestroy$)).subscribe(function(direction) {
                    _this.sendDirectionGroupingOrder(direction), _this.selectionPaneListOrderService.notifyUserLayerDataChanged(direction);
                }), this.keyboardStrategy.getToggleItemsVisibilityKeyboard$().pipe((0, withLatestFrom.M)(this.isEditable$), (0, 
                takeUntil.R)(this.onDestroy$)).subscribe(function(_a) {
                    var editable = _a[1];
                    _this.toggleSelectedVisibility(), _this.refreshTree(_this.groups, editable);
                }), this.eventBridge.on(events.tRg).pipe((0, takeUntil.R)(this.onDestroy$)).subscribe(function() {
                    _this.setNodesSelectedState(_this.zNodeSet, _this.isSelected, !1), _this.updateSelection(), 
                    _this.setNodesSelectedState(_this.zNodeSet, _this.isSelected, !0);
                }), this.eventBridge.on(events.KD7).pipe((0, withLatestFrom.M)(this.isEditable$), (0, 
                takeUntil.R)(this.onDestroy$)).subscribe(function(_a) {
                    var editable = _a[1];
                    _this.updateSelection(), _this.refreshTreeNodesByName(Object.keys(_this.isSelected), editable);
                }), this.eventBridge.on(events.jCS).pipe((0, withLatestFrom.M)(this.isEditable$), (0, 
                takeUntil.R)(this.onDestroy$)).subscribe(function(_a) {
                    _this.refreshTree(_this.groups, _a[1]);
                }), this.eventBridge.on(events.ICs).pipe((0, withLatestFrom.M)(this.isEditable$), (0, 
                takeUntil.R)(this.onDestroy$)).subscribe(function(_a) {
                    var editable = _a[1];
                    _this.ensureNormalization(), _this.refreshTree(_this.groups, editable);
                }), this.eventBridge.on(events.D1A).pipe((0, withLatestFrom.M)(this.isEditable$), (0, 
                takeUntil.R)(this.onDestroy$)).subscribe(function(_a) {
                    _this.refreshTreeNodesByName([ _a[0].name ], _a[1]);
                }), this.formFactor.currentLayout$.pipe((0, takeUntil.R)(this.onDestroy$)).subscribe(function(currentLayout) {
                    _this.activeOrderStrategy$.next(1 !== currentLayout ? OrderStrategy.grouping : OrderStrategy.flatten);
                }), (0, combineLatest.aj)([ this.activeOrderStrategy$, this.layerOrderPanePbiTreeFS$ ]).pipe((0, 
                distinctUntilChanged.x)(), (0, takeUntil.R)(this.onDestroy$)).subscribe(function(_a) {
                    _this.showLayerOrderTree$.next(_a[0] === OrderStrategy.grouping && _a[1]);
                }), this.showLayerOrderTree$.pipe((0, withLatestFrom.M)(this.isEditable$), (0, takeUntil.R)(this.onDestroy$)).subscribe(function(_a) {
                    _a[0] && _this.refreshTree(_this.groups, _a[1]);
                }), this.onChanges$.pipe((0, withLatestFrom.M)(this.layerOrderPanePbiTreeFS$, this.isEditable$), (0, 
                takeUntil.R)(this.onDestroy$)).subscribe(function(_a) {
                    var changes = _a[0], layerOrderPanePbiTreeFS = _a[1], editable = _a[2];
                    layerOrderPanePbiTreeFS && changes.groups && changes.groups.currentValue && (_this.listContracts = _.map(_this.groups, function(item) {
                        return item.contract;
                    }), _this.updateSelection(), _this.refreshTree(changes.groups.currentValue, editable)), 
                    !layerOrderPanePbiTreeFS && changes.groups && changes.groups.currentValue && (_this.listContracts = _.map(_this.groups, function(item) {
                        return item.contract;
                    }), _this.ensureNormalization(), _this.updateSelection());
                }), this.bringForwardButton = this.createEventAdapter(), this.bringForwardButton.$.pipe((0, 
                withLatestFrom.M)(this.activeOrderStrategy$, this.showLayerOrderTree$)).subscribe(function(_a) {
                    var activeOrderStrategy = _a[1], showLayerOrderTree = _a[2];
                    switch (activeOrderStrategy) {
                      case OrderStrategy.grouping:
                        _this.sendDirectionGroupingOrder(!0), showLayerOrderTree ? _this.announceItemsZIndexChange(!0) : _this.selectionPaneListOrderService.notifyUserLayerDataChanged(!0);
                        break;

                      case OrderStrategy.flatten:
                        _this.sendDirectionFlattenOrder(!0), _this.selectionPaneListOrderService.notifyUserLayerDataChanged(!0);
                        break;

                      default:
                        debug.fF.assertNever(activeOrderStrategy);
                    }
                }), this.sendBackwardButton = this.createEventAdapter(), this.sendBackwardButton.$.pipe((0, 
                withLatestFrom.M)(this.activeOrderStrategy$, this.showLayerOrderTree$)).subscribe(function(_a) {
                    var activeOrderStrategy = _a[1], showLayerOrderTree = _a[2];
                    switch (activeOrderStrategy) {
                      case OrderStrategy.grouping:
                        _this.sendDirectionGroupingOrder(!1), showLayerOrderTree ? _this.announceItemsZIndexChange(!1) : _this.selectionPaneListOrderService.notifyUserLayerDataChanged(!1);
                        break;

                      case OrderStrategy.flatten:
                        _this.sendDirectionFlattenOrder(!1), _this.selectionPaneListOrderService.notifyUserLayerDataChanged(!1);
                        break;

                      default:
                        debug.fF.assertNever(activeOrderStrategy);
                    }
                }), this.setVisibilityButton = this.createEventAdapter(), this.setVisibilityButton.$.subscribe(function(visible) {
                    _this.setItemsVisibility(visible);
                });
            }, LayerOrderSectionComponent.prototype.setItemsVisibility = function(visible) {
                var selection = this.getSelectedItems(), isSetAll = _.isEmpty(selection), canvasItemsToChange = isSetAll ? this.listContracts : selection;
                this.setCanvasItemsVisibility(canvasItemsToChange, visible, isSetAll), this.readOutItemVisibilityChanges(canvasItemsToChange, visible);
            }, LayerOrderSectionComponent.prototype.readOutItemVisibilityChanges = function(canvasItemsToChange, visible) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var visualContainers, visualContainerGroups, elementNames, message;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return visualContainers = [], visualContainerGroups = [], canvasItemsToChange.map(function(canvasItem) {
                                (0, visualContainerGroup2.Vz)(canvasItem) ? visualContainers.push(canvasItem) : visualContainerGroups.push(canvasItem);
                            }), [ 4, this.joinVCandGroupNames(visualContainers, visualContainerGroups) ];

                          case 1:
                            return (elementNames = _a.sent()) && (message = this.localizationService.format(visible ? "ExplorationCanvasItemsPane_Shown" : "ExplorationCanvasItemsPane_Hidden", elementNames), 
                            this.screenReaderService.alertPolite(message)), [ 2 ];
                        }
                    });
                });
            }, LayerOrderSectionComponent.prototype.joinVCandGroupNames = function(visualContainers, visualContainerGroups) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var vcLabels, vcGroupLabels, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, Promise.all(visualContainers.map(function(item) {
                                return (0, visualContainerUtils.uo)(item, {
                                    dataSources: _this.dataSources,
                                    conceptualSchemaProxy: _this.conceptualSchemaProxy,
                                    visualPlugin: _this.visualPlugin,
                                    displayNameService: _this.displayNameService
                                });
                            })) ];

                          case 1:
                            return vcLabels = _a.sent(), vcGroupLabels = visualContainerGroups.map(function(group) {
                                return group.displayName;
                            }), [ 2, (0, tslib_es6.__spreadArray)((0, tslib_es6.__spreadArray)([], vcLabels, !0), vcGroupLabels, !0).filter(function(label) {
                                return label;
                            }).join(", ") ];
                        }
                    });
                });
            }, LayerOrderSectionComponent.prototype.toggleSelectedVisibility = function() {
                var _a, _b, _c, selectedContracts = this.getSelectedItems(), selectedGroups = (_a = _.partition(selectedContracts, function(contract) {
                    return (0, visualContainerGroup2.q4)(contract);
                }))[0], selectedVisualContainers = _a[1];
                if (!_.isEmpty(selectedGroups)) {
                    var groupsToShow = (_b = _.partition(selectedGroups, function(contract) {
                        return (0, visualContainerGroup1.xj)(contract);
                    }))[0], groupsToHide = _b[1];
                    _.isEmpty(groupsToShow) || this.visualAuthoring.setVisualContainerGroupVisibility(!1, groupsToShow), 
                    _.isEmpty(groupsToHide) || this.visualAuthoring.setVisualContainerGroupVisibility(!0, groupsToHide);
                }
                if (!_.isEmpty(selectedVisualContainers)) {
                    var visualContainersToShow = (_c = _.partition(selectedVisualContainers, function(contract) {
                        return (0, visualContainer2.xj)(contract.config.singleVisual);
                    }))[0], visualContainersToHide = _c[1];
                    _.isEmpty(visualContainersToShow) || this.visualAuthoring.setVisibility(!1, visualContainersToShow), 
                    _.isEmpty(visualContainersToHide) || this.visualAuthoring.setVisibility(!0, visualContainersToHide);
                }
            }, LayerOrderSectionComponent.prototype.refreshTree = function(canvasItems, editable) {
                var _a;
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var dataSources, schema, sortingResult, newTree, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return dataSources = this.dataSources.get(), [ 4, this.conceptualSchemaProxy.get(dataSources) ];

                          case 1:
                            return schema = _b.sent(), sortingResult = this.selectionPaneListOrderService.sortItemsByProperty(canvasItems, function(canvasItem) {
                                return canvasItem.position.z;
                            }), newTree = {
                                nodes: _.map(sortingResult.sortedItems, function(canvasItem, i) {
                                    return _this.refreshTreeNode(canvasItem, schema, editable);
                                })
                            }, this.clickStrategy.setTree(newTree), this.dragDropStrategy.setTree(newTree), 
                            null === (_a = this.layerTree) || void 0 === _a || _a.renderNodeChangesImmediate(), 
                            this.layerTree$.next(newTree), [ 2, newTree ];
                        }
                    });
                });
            }, LayerOrderSectionComponent.prototype.refreshTreeNode = function(canvasItem, schema, editable, parentNode, recursive) {
                var _this = this;
                void 0 === recursive && (recursive = !0);
                var canvasItemDisplayName = this.getCanvasItemDisplayName(canvasItem, schema), node = this.zNodeSet[canvasItem.name] = this.zNodeSet[canvasItem.name] || {
                    displayName: void 0
                };
                return node.displayName = canvasItemDisplayName, node.ariaLabel = canvasItemDisplayName, 
                node.data = {
                    canvasItem
                }, node.id = canvasItem.name, node.selected = this.isSelected[canvasItem.name], 
                node.editable = editable, node.inlineItems = (0, tslib_es6.__spreadArray)([], this.layerInlineItemStrategy.getInlineItems(canvasItem), !0), 
                node.alwaysShowInlineItems = !0, node.menu = !0, node.alwaysShowMenu = !0, node.draggable = !0, 
                node.parent = parentNode, node.children = [], (0, visualContainerGroup.q4)(canvasItem) && recursive && _.forEach(canvasItem.children, function(canvasItemChild, i) {
                    node.children.push(_this.refreshTreeNode(canvasItemChild, schema, editable, node));
                }), node;
            }, LayerOrderSectionComponent.prototype.refreshTreeNodesByName = function(nodeNames, editable) {
                var _a, _b;
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var dataSources, schema, _i, nodeNames_1, nodeName, node;
                    return (0, tslib_es6.__generator)(this, function(_c) {
                        switch (_c.label) {
                          case 0:
                            return dataSources = this.dataSources.get(), [ 4, this.conceptualSchemaProxy.get(dataSources) ];

                          case 1:
                            for (schema = _c.sent(), _i = 0, nodeNames_1 = nodeNames; _i < nodeNames_1.length; _i++) node = this.zNodeSet[nodeName = nodeNames_1[_i]] = this.zNodeSet[nodeName] || {
                                displayName: void 0
                            }, (null === (_a = node.data) || void 0 === _a ? void 0 : _a.canvasItem) && this.refreshTreeNode(node.data.canvasItem, schema, editable, node.parent, !1);
                            return null === (_b = this.layerTree) || void 0 === _b || _b.renderNodeChanges(), 
                            [ 2 ];
                        }
                    });
                });
            }, LayerOrderSectionComponent.prototype.getCanvasItemDisplayName = function(canvasItem, schema) {
                var _a;
                if ((0, visualContainerGroup.Vz)(canvasItem)) {
                    var visualConfig = (0, visualContainerUtils.PQ)(canvasItem.contract), capabilities = this.visualPlugin.capabilities((0, 
                    visualContainerUtilsHelper.s)(canvasItem.contract));
                    return null === (_a = this.displayNameService.getVisualTitle(visualConfig, schema, capabilities, void 0, void 0, !0)) || void 0 === _a ? void 0 : _a.text;
                }
                return canvasItem.contract.displayName;
            }, LayerOrderSectionComponent.prototype.setNodesSelectedState = function(nodeSet, selection, state) {
                for (var key in selection) nodeSet[key] && (nodeSet[key].selected = state);
                this.layerTree && this.layerTree.renderNodeChanges();
            }, LayerOrderSectionComponent.prototype.sendDirectionFlattenOrder = function(bringForward) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var service, list;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.zIndexPromise ];

                          case 1:
                            return service = _a.sent(), [ 4, this.ensureNormalization() ];

                          case 2:
                            return _a.sent(), list = this.listContracts, bringForward ? service.bringForward(list, selectionUtils.UP.getSelectedVisualContainers(this.selection), !0) : service.sendBackward(list, selectionUtils.UP.getSelectedVisualContainers(this.selection), !0), 
                            this.selectionPaneListOrderService.markZSorted(!1), [ 2 ];
                        }
                    });
                });
            }, LayerOrderSectionComponent.prototype.sendDirectionGroupingOrder = function(bringForward) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var zIndexService;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.zIndexPromise ];

                          case 1:
                            return zIndexService = _a.sent(), [ 4, this.ensureNormalization() ];

                          case 2:
                            return _a.sent(), zIndexService.sendZIndexCommandsByLevel(this.selection, this.listContracts, bringForward ? 3 : 4), 
                            this.selectionPaneListOrderService.rebuildListData(), [ 2 ];
                        }
                    });
                });
            }, LayerOrderSectionComponent.prototype.announceItemsZIndexChange = function(bringForward) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var selectedVisualContainers, selectedVisualContainersGroup, elementNames, message;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return selectedVisualContainers = selectionUtils.UP.getSelectedVisualContainers(this.selection), 
                            selectedVisualContainersGroup = selectionUtils.UP.getSelectedVisualContainerGroups(this.selection), 
                            [ 4, this.joinVCandGroupNames(selectedVisualContainers, selectedVisualContainersGroup) ];

                          case 1:
                            return (elementNames = _a.sent()) && (message = this.localizationService.format(bringForward ? "ExplorationCanvasItemsPane_SentForward" : "ExplorationCanvasItemsPane_SentBackward", elementNames), 
                            this.screenReaderService.alertPolite(message)), [ 2 ];
                        }
                    });
                });
            }, LayerOrderSectionComponent.prototype.ensureNormalization = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var zIndex, list;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.zIndexPromise ];

                          case 1:
                            return (zIndex = _a.sent()).shouldNormalize(list = this.listContracts) && (zIndex.normalize(list), 
                            this.selectionPaneListOrderService.markZSorted(!1)), [ 2 ];
                        }
                    });
                });
            }, LayerOrderSectionComponent.prototype.setCanvasItemsVisibility = function(canvasItems, visible, isSetAll) {
                for (var hidden = !visible, affectedContainers = [], affectedGroups = [], _i = 0, canvasItems_1 = canvasItems; _i < canvasItems_1.length; _i++) {
                    var canvasItem = canvasItems_1[_i];
                    (0, visualContainerGroup2.Vz)(canvasItem) ? (0, visualContainer2.xj)(canvasItem.config.singleVisual) !== hidden && affectedContainers.push(canvasItem) : ((0, 
                    visualContainerGroup1.xj)(canvasItem) !== hidden && affectedGroups.push(canvasItem), 
                    isSetAll && this.setCanvasItemsVisibility(canvasItem.children, visible, isSetAll));
                }
                _.isEmpty(affectedContainers) || this.visualAuthoring.setVisibility(hidden, affectedContainers), 
                _.isEmpty(affectedGroups) || this.visualAuthoring.setVisualContainerGroupVisibility(hidden, affectedGroups);
            }, LayerOrderSectionComponent.prototype.updateSelection = function() {
                _.isEmpty(this.groups) && (this.isSelected = {});
                var selectedVisuals = this.getSelectedItems();
                _.isEmpty(selectedVisuals) && (this.isSelected = {}), this.isSelected = _.zipObject(_.map(selectedVisuals, function(container) {
                    return container.name;
                }), _.map(selectedVisuals, _.constant(!0)));
            }, LayerOrderSectionComponent.prototype.getSelectedItems = function() {
                return selectionUtils.UP.getSelectedCanvasItems(this.selection);
            }, LayerOrderSectionComponent.\u0275fac = function(t) {
                return new (t || LayerOrderSectionComponent)(core["\u0275\u0275directiveInject"](SelectionPaneClickStrategy), core["\u0275\u0275directiveInject"](conceptual_schema_proxy_service.i), core["\u0275\u0275directiveInject"](data_sources_service.D), core["\u0275\u0275directiveInject"](exploration_display_name_service.O), core["\u0275\u0275directiveInject"](SelectionPaneLayerDragDropStrategy), core["\u0275\u0275directiveInject"](SelectionPaneLayerEditLabelStrategy), core["\u0275\u0275directiveInject"](event_bridge_service.J), core["\u0275\u0275directiveInject"](feature_switch_service.vZ), core["\u0275\u0275directiveInject"](form_factor_provider_service.F), core["\u0275\u0275directiveInject"](SelectionPaneHoverStrategy), core["\u0275\u0275directiveInject"](SelectionPaneLayerKeyboardStrategy), core["\u0275\u0275directiveInject"](SelectionPaneLayerInlineItemStrategy), core["\u0275\u0275directiveInject"](SelectionPaneLayerMenuStrategy), core["\u0275\u0275directiveInject"](lazy_scoped_provider.H), core["\u0275\u0275directiveInject"](localization_service.o), core["\u0275\u0275directiveInject"](pause_queries_service.F), core["\u0275\u0275directiveInject"](screen_reader_service.g), core["\u0275\u0275directiveInject"](selection_service.z), core["\u0275\u0275directiveInject"](SelectionPaneListOrderService), core["\u0275\u0275directiveInject"](view_mode_state_service.kc), core["\u0275\u0275directiveInject"](visual_authoring_service.$8), core["\u0275\u0275directiveInject"](visual_plugin_service.D));
            }, LayerOrderSectionComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: LayerOrderSectionComponent,
                selectors: [ [ "layer-order-section" ] ],
                viewQuery: function(rf, ctx) {
                    var _t;
                    1 & rf && core["\u0275\u0275viewQuery"](pbi_tree_component.u, 5), 2 & rf && core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx.layerTree = _t.first);
                },
                inputs: {
                    groups: "groups",
                    visualContainers: "visualContainers"
                },
                features: [ core["\u0275\u0275ProvidersFeature"]([ SelectionPaneClickStrategy, SelectionPaneLayerEditLabelStrategy, SelectionPaneHoverStrategy, SelectionPaneLayerDragDropStrategy, SelectionPaneLayerInlineItemStrategy, SelectionPaneLayerKeyboardStrategy, SelectionPaneLayerMenuStrategy ]), core["\u0275\u0275InheritDefinitionFeature"] ],
                decls: 20,
                vars: 25,
                consts: [ [ 1, "selection-pane-list-actions" ], [ 1, "selection-pane-list-actions-move" ], [ "id", "bringForward", 3, "disabled", "pbiTooltip", "click" ], [ 1, "glyphicon", "pbi-glyph-flickup", "glyph-small" ], [ "id", "sendBackward", 3, "disabled", "pbiTooltip", "click" ], [ "class", "selection-pane-list-actions-visibility", 4, "ngIf" ], [ "class", "no-content-container", "tabindex", "0", 4, "ngIf" ], [ 1, "scroll-container-flex-grow" ], [ 1, "selection-pane-list", 3, "pbiScrollbar" ], [ 4, "ngIf" ], [ 1, "selection-pane-list-actions-visibility" ], [ "id", "show", "localize", "Show", 3, "disabled", "click" ], [ "id", "hide", "localize", "Hide", 3, "disabled", "click" ], [ "tabindex", "0", 1, "no-content-container" ], [ "localize", "ExplorationCanvasItemsPane_NoCanvasItems" ], [ "disableIcons", "true", "focus-nav-mode", "Browser", 3, "tree", "options", 4, "ngIf" ], [ "disableIcons", "true", "focus-nav-mode", "Browser", 3, "tree", "options" ], [ 3, "groups", "visualContainers", "activeSection", "activePositionListOrder" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementStart"](0, "div", 0)(1, "div", 1)(2, "button", 2), 
                    core["\u0275\u0275listener"]("click", function() {
                        return ctx.bringForwardButton.fn();
                    }), core["\u0275\u0275pipe"](3, "async"), core["\u0275\u0275pipe"](4, "localize"), 
                    core["\u0275\u0275element"](5, "i", 3), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](6, "button", 4), 
                    core["\u0275\u0275listener"]("click", function() {
                        return ctx.sendBackwardButton.fn();
                    }), core["\u0275\u0275pipe"](7, "async"), core["\u0275\u0275pipe"](8, "localize"), 
                    core["\u0275\u0275element"](9, "i", 3), core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275template"](10, LayerOrderSectionComponent_div_10_Template, 5, 6, "div", 5), 
                    core["\u0275\u0275pipe"](11, "async"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](12, LayerOrderSectionComponent_div_12_Template, 2, 0, "div", 6), 
                    core["\u0275\u0275pipe"](13, "async"), core["\u0275\u0275elementStart"](14, "div", 7)(15, "div", 8), 
                    core["\u0275\u0275template"](16, LayerOrderSectionComponent_ng_container_16_Template, 3, 3, "ng-container", 9), 
                    core["\u0275\u0275pipe"](17, "async"), core["\u0275\u0275template"](18, LayerOrderSectionComponent_ng_container_18_Template, 2, 4, "ng-container", 9), 
                    core["\u0275\u0275pipe"](19, "async"), core["\u0275\u0275elementEnd"]()()), 2 & rf && (core["\u0275\u0275advance"](2), 
                    core["\u0275\u0275property"]("disabled", !core["\u0275\u0275pipeBind1"](3, 9, ctx.isEditable$))("pbiTooltip", core["\u0275\u0275pipeBind1"](4, 11, "ExplorationCanvasItemsPane_BringForward")), 
                    core["\u0275\u0275advance"](4), core["\u0275\u0275property"]("disabled", !core["\u0275\u0275pipeBind1"](7, 13, ctx.isEditable$))("pbiTooltip", core["\u0275\u0275pipeBind1"](8, 15, "ExplorationCanvasItemsPane_SendBackward")), 
                    core["\u0275\u0275advance"](4), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](11, 17, ctx.activeOrderStrategy$) === ctx.OrderStrategy.grouping), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](13, 19, ctx.hasNoContent$)), 
                    core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("pbiScrollbar", ctx.scrollbarsConfig), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](17, 21, ctx.showLayerOrderTree$)), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", !1 === core["\u0275\u0275pipeBind1"](19, 23, ctx.showLayerOrderTree$)));
                },
                dependencies: [ common.NgIf, localize_directive.X, pbi_scrollbar_directive.r, pbi_tooltip_directive.V, pbi_tree_component.u, SelectionPaneListLegacyTreeComponent, common.AsyncPipe, localize_pipe.F ],
                styles: [ '.selection-pane-list-actions[_ngcontent-%COMP%]{display:flex;flex-direction:row;padding:0 10px;height:32px;border-bottom:1px solid var(--neutral-primary-color);flex:none;border-color:var(--gray-40)}.selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{flex-grow:1;display:flex;align-items:center}.selection-pane-list-actions[_ngcontent-%COMP%] > div.selection-pane-list-actions-move[_ngcontent-%COMP%]{justify-content:flex-start;font-size:11px;margin-right:6px}.selection-pane-list-actions[_ngcontent-%COMP%] > div.selection-pane-list-actions-move[_ngcontent-%COMP%]   #bringForward[_ngcontent-%COMP%]{margin-right:6px}.selection-pane-list-actions[_ngcontent-%COMP%] > div.selection-pane-list-actions-move[_ngcontent-%COMP%]   #sendBackward[_ngcontent-%COMP%]{margin-left:6px}.selection-pane-list-actions[_ngcontent-%COMP%] > div.selection-pane-list-actions-visibility[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;font-size:11px;margin-left:6px;overflow:hidden}.selection-pane-list-actions[_ngcontent-%COMP%] > div.selection-pane-list-actions-visibility[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{overflow:hidden;text-overflow:ellipsis;min-width:25px}.selection-pane-list-actions[_ngcontent-%COMP%] > div.selection-pane-list-actions-visibility[_ngcontent-%COMP%]   button#show[_ngcontent-%COMP%]{margin-right:6px}.selection-pane-list-actions[_ngcontent-%COMP%] > div.selection-pane-list-actions-visibility[_ngcontent-%COMP%]   button#hide[_ngcontent-%COMP%]{margin-left:6px}.selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{background-color:transparent;border-color:inherit;color:inherit;font-size:12px}.selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%], .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled, .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[disabled][_ngcontent-%COMP%], .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover, .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled:hover, .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[disabled][_ngcontent-%COMP%]:hover, .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:focus, .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled:focus, .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[disabled][_ngcontent-%COMP%]:focus, .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:active, .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled:active, .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[disabled][_ngcontent-%COMP%]:active, .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:active:hover, .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled:active:hover, .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[disabled][_ngcontent-%COMP%]:active:hover, .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:focus:hover, .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled:focus:hover, .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[disabled][_ngcontent-%COMP%]:focus:hover{background-color:transparent;border-color:inherit}.selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%], .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover, .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:focus, .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:active, .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:active:hover, .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:focus:hover{color:inherit}.selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled, .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[disabled][_ngcontent-%COMP%], .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled:hover, .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[disabled][_ngcontent-%COMP%]:hover, .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled:focus, .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[disabled][_ngcontent-%COMP%]:focus, .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled:active, .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[disabled][_ngcontent-%COMP%]:active, .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled:active:hover, .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[disabled][_ngcontent-%COMP%]:active:hover, .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled:focus:hover, .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[disabled][_ngcontent-%COMP%]:focus:hover{color:var(--gray-80)}html[data-focus-source="key"][_nghost-%COMP%]   .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:focus, html[data-focus-source="key"]   [_nghost-%COMP%]   .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:focus{outline:var(--focus-two-tone-outline-definition, auto 1px);outline-color:var(--focus-two-tone-outline-color, -webkit-focus-ring-color)}.selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   .glyph-small[_ngcontent-%COMP%]{font-size:14px}.selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button#sendBackward[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{padding:10px 0 0;margin:0}.selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button#bringForward[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{padding:5px 0 0;margin:0;transform:scaleY(-1);-webkit-transform:scale(1,-1)}.no-content-container[_ngcontent-%COMP%]{--empty-container-text-color: var(--gray-180);display:flex;flex:1 0 auto;justify-content:center;align-items:start;color:var(--empty-container-text-color);padding-top:6px}  [data-legacy-theming=false] .no-content-container{--empty-container-text-color: var(--colorNeutralForeground1)}.scroll-container-flex-grow[_ngcontent-%COMP%]{flex:1 0 0px;overflow:hidden}.aria-hint[_ngcontent-%COMP%]{display:none}[_nghost-%COMP%]{display:flex;flex-direction:column;flex:1 0 auto;text-align:left}[_nghost-%COMP%]:focus{outline:none}' ]
            }), LayerOrderSectionComponent;
        }(rx_component.w), telemetry_events = __webpack_require__(10556), exploreUITelemetryUtil = __webpack_require__(9500), Telemetry = __webpack_require__(21617), panes_visibility_service = __webpack_require__(21024), pbi_auto_focus_directive = __webpack_require__(54932), keyboard_shortcuts_directive = __webpack_require__(35756), pbi_pane_component = __webpack_require__(21023), pbi_pane_section_component = __webpack_require__(24548);
        function SelectionPaneComponent_pbi_pane_0_div_2_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 4)(1, "section", 5), core["\u0275\u0275element"](2, "selection-pane-list", 6), 
            core["\u0275\u0275elementEnd"]()()), 2 & rf) {
                var viewModel_r1 = core["\u0275\u0275nextContext"]().ngIf, ctx_r2 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("hidden", !viewModel_r1.isPaneExpanded), core["\u0275\u0275advance"](2), 
                core["\u0275\u0275property"]("groups", ctx_r2.exploreCanvas.visualContainerGroups)("visualContainers", ctx_r2.exploreCanvas.visualContainers);
            }
        }
        function SelectionPaneComponent_pbi_pane_0_Template(rf, ctx) {
            if (1 & rf) {
                var _r5 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "pbi-pane", 1), core["\u0275\u0275listener"]("onToggle", function() {
                    core["\u0275\u0275restoreView"](_r5);
                    var ctx_r4 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r4.togglePane());
                })("onCollapse", function() {
                    core["\u0275\u0275restoreView"](_r5);
                    var ctx_r6 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r6.onPaneCollapsed());
                }), core["\u0275\u0275elementStart"](1, "pbi-pane-section", 2), core["\u0275\u0275template"](2, SelectionPaneComponent_pbi_pane_0_div_2_Template, 3, 3, "div", 3), 
                core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var viewModel_r1 = ctx.ngIf, ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("expanded", viewModel_r1.isPaneExpanded)("allowToggle", !ctx_r0.isPaneSwitcherSupported)("title", viewModel_r1.title)("optionsSetting", ctx_r0.isPaneSwitcherSupported ? viewModel_r1.optionsSetting : void 0)("showCollapse", ctx_r0.isPaneSwitcherSupported), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", viewModel_r1.isPaneVisible);
            }
        }
        var SelectionPaneComponent = function() {
            function SelectionPaneComponent(panesVisibility, telemetryService, viewModeState) {
                this.panesVisibility = panesVisibility, this.telemetryService = telemetryService, 
                this.viewModeState = viewModeState, this.viewModel$ = this.panesVisibility.getPanes$().pipe((0, 
                map.U)(function(panes) {
                    return panes.canvasItems;
                }));
            }
            return SelectionPaneComponent.prototype.ngOnInit = function() {
                this.core = new CanvasItemsPaneCore({
                    panesVisibility: this.panesVisibility,
                    telemetryService: this.telemetryService,
                    viewModeState: this.viewModeState
                }), this.core.exploreCanvas = this.exploreCanvas;
            }, SelectionPaneComponent.prototype.ngOnChanges = function(changes) {
                this.core && changes.exploreCanvas && (this.core.exploreCanvas = changes.exploreCanvas.currentValue);
            }, Object.defineProperty(SelectionPaneComponent.prototype, "isPaneSwitcherSupported", {
                get: function() {
                    return this.panesVisibility.isPaneSwitcherSupported();
                },
                enumerable: !1,
                configurable: !0
            }), SelectionPaneComponent.prototype.onPaneCollapsed = function() {
                this.core.onPaneCollapsed();
            }, SelectionPaneComponent.prototype.togglePane = function() {
                this.core.togglePane();
            }, SelectionPaneComponent.\u0275fac = function(t) {
                return new (t || SelectionPaneComponent)(core["\u0275\u0275directiveInject"](panes_visibility_service.r), core["\u0275\u0275directiveInject"](Telemetry.y0), core["\u0275\u0275directiveInject"](view_mode_state_service.kc));
            }, SelectionPaneComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: SelectionPaneComponent,
                selectors: [ [ "selection-pane" ] ],
                inputs: {
                    exploreCanvas: "exploreCanvas"
                },
                features: [ core["\u0275\u0275NgOnChangesFeature"] ],
                decls: 2,
                vars: 3,
                consts: [ [ "class", "selection-pane", "noPadding", "", "disableScroll", "", "pbiAutoFocus", "", "keyboard-shortcuts", "ctrl-F6", "focus-priority", "7", "focus-nav-mode", "Group", 3, "expanded", "allowToggle", "title", "optionsSetting", "showCollapse", "onToggle", "onCollapse", 4, "ngIf" ], [ "noPadding", "", "disableScroll", "", "pbiAutoFocus", "", "keyboard-shortcuts", "ctrl-F6", "focus-priority", "7", "focus-nav-mode", "Group", 1, "selection-pane", 3, "expanded", "allowToggle", "title", "optionsSetting", "showCollapse", "onToggle", "onCollapse" ], [ "noPadding", "", 1, "pane-section" ], [ "class", "paneContents", 3, "hidden", 4, "ngIf" ], [ 1, "paneContents", 3, "hidden" ], [ 1, "canvasItemsListSection" ], [ "tabindex", "-1", 3, "groups", "visualContainers" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275template"](0, SelectionPaneComponent_pbi_pane_0_Template, 3, 6, "pbi-pane", 0), 
                    core["\u0275\u0275pipe"](1, "async")), 2 & rf && core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](1, 1, ctx.viewModel$));
                },
                dependencies: [ common.NgIf, pbi_auto_focus_directive.r, keyboard_shortcuts_directive.q, pbi_pane_component.VO, pbi_pane_section_component.i, SelectionPaneListComponent, common.AsyncPipe ],
                styles: [ "[_nghost-%COMP%]   .paneContents[_ngcontent-%COMP%]{display:flex;flex:1 0 0;position:static;top:0;width:100%}[_nghost-%COMP%]   .canvasItemsListSection[_ngcontent-%COMP%]{display:flex;flex-direction:column;flex:1 0 0;height:100%}[_nghost-%COMP%]   .selection-pane[_ngcontent-%COMP%]   .pane-section[_ngcontent-%COMP%]{display:flex;flex-grow:1}" ]
            }), SelectionPaneComponent;
        }(), CanvasItemsPaneCore = function() {
            function CanvasItemsPaneCore(services) {
                this.services = services;
            }
            return CanvasItemsPaneCore.prototype.onPaneCollapsed = function() {
                this.services.panesVisibility.setPaneExpansion("canvasItems", !1), this.services.telemetryService.logEvent(telemetry_events.vLR, {
                    paneType: "CanvasItems",
                    expanded: !1,
                    viewMode: (0, exploreUITelemetryUtil.ku)(this.services.viewModeState.getMode())
                });
            }, CanvasItemsPaneCore.prototype.togglePane = function() {
                var expansionState = this.services.panesVisibility.togglePaneExpansion("canvasItems");
                this.services.telemetryService.logEvent(telemetry_events.vLR, {
                    paneType: "CanvasItems",
                    expanded: expansionState,
                    viewMode: (0, exploreUITelemetryUtil.ku)(this.services.viewModeState.getMode())
                });
            }, CanvasItemsPaneCore;
        }(), ExploreUIAuthoring_telemetry_events = __webpack_require__(40702), SelectionPaneTabDragDropStrategy = function() {
            function SelectionPaneTabDragDropStrategy(explorationNavigationService, lazyScoped, selectionService, visualContainerGroupAuthoringService) {
                this.explorationNavigationService = explorationNavigationService, this.lazyScoped = lazyScoped, 
                this.selectionService = selectionService, this.visualContainerGroupAuthoringService = visualContainerGroupAuthoringService, 
                this.dragDropChange$ = new Subject.xQ, this.tabOrderPromise = this.lazyScoped.get("tabOrderService");
            }
            return SelectionPaneTabDragDropStrategy.prototype.dragStart = function(_a) {
                var sourceEvent = _a.sourceEvent, flatNode = _a.flatNode;
                this.dragSourceNode = flatNode.node, sourceEvent.dataTransfer.setData(pbi_tree_contracts.L$, JSON.stringify({
                    id: flatNode.node.id,
                    label: flatNode.node.displayName
                })), selectionUtils.UP.isCanvasItemSelected(flatNode.node.data.canvasItem.contract, this.selectionService) || selectionUtils.UP.selectCanvasItem(flatNode.node.data.canvasItem.contract, this.selectionService), 
                this.flattenedVisibleNodes = StrategyUtils.getFlattenedVisibleNodes(this.tree.nodes), 
                this.startIndex = this.flattenedVisibleNodes.findIndex(function(node) {
                    return node.data.canvasItem.name === flatNode.node.data.canvasItem.name;
                });
            }, SelectionPaneTabDragDropStrategy.prototype.drop = function(_a) {
                var sourceEvent = _a.sourceEvent, flatNode = _a.flatNode;
                if (this.dragSourceNode && (flatNode.node.dragBorderTop = !1, flatNode.node.dragBorderBottom = !1, 
                sourceEvent.dataTransfer.getData(pbi_tree_contracts.L$) && !(this.dragSourceNode.data.canvasItem.name === flatNode.node.data.canvasItem.name || (0, 
                visualContainerGroup.q4)(this.dragSourceNode.data.canvasItem) && (0, itemGrouping.sE)(flatNode.node.data.canvasItem.name, this.dragSourceNode.data.canvasItem.children)))) {
                    var destinationIndex = this.flattenedVisibleNodes.findIndex(function(node) {
                        return node.data.canvasItem.name === flatNode.node.data.canvasItem.name;
                    });
                    destinationIndex > this.startIndex && flatNode.node.grayedOut || destinationIndex < this.startIndex && destinationIndex - 1 >= 0 && this.flattenedVisibleNodes[destinationIndex - 1].grayedOut || (sourceEvent.preventDefault(), 
                    this.dropHelper(flatNode, destinationIndex));
                }
            }, SelectionPaneTabDragDropStrategy.prototype.dropHelper = function(flatNode, destinationIndex) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var tabOrderService, destItem, draggedItemContract, siblings, filteredSiblingsBySign, isInsertingAtTheEnd, exploreCanvas;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.tabOrderPromise ];

                          case 1:
                            return tabOrderService = _a.sent(), draggedItemContract = this.dragSourceNode.data.canvasItem.contract, 
                            siblings = (destItem = flatNode.node.data.canvasItem).contract.parentGroup ? destItem.contract.parentGroup.children : this.tree.nodes.map(function(node) {
                                return node.data.canvasItem.contract;
                            }), filteredSiblingsBySign = (0, canvasVisualsUtility.cV)(siblings, !0), isInsertingAtTheEnd = !1, 
                            destinationIndex < this.startIndex ? flatNode.node.grayedOut && destinationIndex - 1 > 0 && !this.flattenedVisibleNodes[destinationIndex - 1].grayedOut && (0, 
                            visualContainerGroup.q4)(this.flattenedVisibleNodes[destinationIndex - 1].data.canvasItem) && flatNode.node.data.canvasItem.parentGroup === this.flattenedVisibleNodes[destinationIndex - 1].data.canvasItem ? (filteredSiblingsBySign = (0, 
                            canvasVisualsUtility.cV)(siblings, !1), tabOrderService.moveAfter(filteredSiblingsBySign, destItem, [ draggedItemContract ], !1), 
                            tabOrderService.changeSection([], [ draggedItemContract ], !0, !0, !1)) : flatNode.node.grayedOut && destinationIndex - 1 > 0 && !this.flattenedVisibleNodes[destinationIndex - 1].grayedOut || StrategyUtils.isDroppedAtEndOfList(destinationIndex, this.flattenedVisibleNodes) ? (filteredSiblingsBySign = (0, 
                            canvasVisualsUtility.cV)((destItem = this.flattenedVisibleNodes[destinationIndex - 1].data.canvasItem).contract.parentGroup.children, !0), 
                            tabOrderService.moveBefore(filteredSiblingsBySign, destItem, [ draggedItemContract ], !0), 
                            isInsertingAtTheEnd = StrategyUtils.isDroppedAtEndOfList(destinationIndex, this.flattenedVisibleNodes)) : tabOrderService.moveAfter(filteredSiblingsBySign, destItem, [ draggedItemContract ], !0) : (0, 
                            visualContainerGroup.q4)(flatNode.node.data.canvasItem) && flatNode.node.expanded ? (filteredSiblingsBySign = (0, 
                            canvasVisualsUtility.cV)((destItem = this.flattenedVisibleNodes[destinationIndex + 1].data.canvasItem).contract.parentGroup.children, !0), 
                            tabOrderService.moveAfter(filteredSiblingsBySign, destItem, [ draggedItemContract ], !0)) : (siblings.findIndex(function(item) {
                                return item.name === destItem.name;
                            }) === siblings.length - 1 && (isInsertingAtTheEnd = !0), tabOrderService.moveBefore(filteredSiblingsBySign, destItem, [ draggedItemContract ], !0)), 
                            destItem.contract.parentGroup === draggedItemContract.parentGroup || (exploreCanvas = this.explorationNavigationService.getCurrentExploreCanvas(), 
                            this.visualContainerGroupAuthoringService.moveCanvasItemInTree(exploreCanvas, draggedItemContract, destItem.contract, isInsertingAtTheEnd)), 
                            this.dragDropChange$.next(!0), [ 2 ];
                        }
                    });
                });
            }, SelectionPaneTabDragDropStrategy.prototype.dragOver = function(_a) {
                this.dragSourceNode && _a.sourceEvent.preventDefault();
            }, SelectionPaneTabDragDropStrategy.prototype.dragEnter = function(_a) {
                this.dragSourceNode && this.dragEnterHelper(_a.flatNode);
            }, SelectionPaneTabDragDropStrategy.prototype.dragEnterHelper = function(flatNode) {
                if (!(this.dragSourceNode.data.canvasItem.name === flatNode.node.data.canvasItem.name || (0, 
                visualContainerGroup.q4)(this.dragSourceNode.data.canvasItem) && (0, itemGrouping.sE)(flatNode.node.data.canvasItem.name, this.dragSourceNode.data.canvasItem.children))) {
                    var destinationIndex = this.flattenedVisibleNodes.findIndex(function(node) {
                        return node.data.canvasItem.name === flatNode.node.data.canvasItem.name;
                    });
                    if (destinationIndex < this.startIndex) {
                        if (destinationIndex - 1 >= 0 && this.flattenedVisibleNodes[destinationIndex - 1].grayedOut) return;
                        flatNode.node.dragBorderTop = !0;
                    } else {
                        if (flatNode.node.grayedOut) return;
                        flatNode.node.dragBorderBottom = !0;
                    }
                }
            }, SelectionPaneTabDragDropStrategy.prototype.dragLeave = function(_a) {
                var flatNode = _a.flatNode;
                flatNode.node.dragBorderTop = !1, flatNode.node.dragBorderBottom = !1;
            }, SelectionPaneTabDragDropStrategy.prototype.dragEnd = function(_a) {
                var flatNode = _a.flatNode;
                this.dragSourceNode && (this.dragSourceNode = void 0, flatNode.node.dragBorderTop = !1, 
                flatNode.node.dragBorderBottom = !1, this.startIndex = void 0);
            }, SelectionPaneTabDragDropStrategy.prototype.getDragDropChange$ = function() {
                return this.dragDropChange$.asObservable();
            }, SelectionPaneTabDragDropStrategy.prototype.setTree = function(tree) {
                this.tree = tree;
            }, SelectionPaneTabDragDropStrategy.\u0275fac = function(t) {
                return new (t || SelectionPaneTabDragDropStrategy)(core["\u0275\u0275inject"](exploration_navigation_ex_service.I), core["\u0275\u0275inject"](lazy_scoped_provider.H), core["\u0275\u0275inject"](selection_service.z), core["\u0275\u0275inject"](visual_container_group_authoring_service.p));
            }, SelectionPaneTabDragDropStrategy.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: SelectionPaneTabDragDropStrategy,
                factory: SelectionPaneTabDragDropStrategy.\u0275fac
            }), SelectionPaneTabDragDropStrategy;
        }(), SelectionPaneTabEditLabelStrategy = function() {
            function SelectionPaneTabEditLabelStrategy(visualAuthoring) {
                this.visualAuthoring = visualAuthoring;
            }
            return SelectionPaneTabEditLabelStrategy.prototype.beginEdit = function(event) {
                event.sourceEvent && event.sourceEvent.stopPropagation(), event.flatNode.node.grayedOut || (event.flatNode.node.displayName = event.flatNode.node.displayName.substr(event.flatNode.node.data.index.length + 1)), 
                this.previousLabel = event.flatNode.node.displayName, event.flatNode.node.editing = !0;
            }, SelectionPaneTabEditLabelStrategy.prototype.edit = function(event) {
                event.flatNode.node.displayName = event.value;
            }, SelectionPaneTabEditLabelStrategy.prototype.endEdit = function(event) {
                if (event.sourceEvent.stopPropagation(), event.flatNode.node.editing = !1, 0 !== event.flatNode.node.displayName.length && this.previousLabel !== event.flatNode.node.displayName) {
                    var newName = event.flatNode.node.displayName;
                    event.flatNode.node.displayName = event.flatNode.node.grayedOut ? "".concat(newName) : "".concat(event.flatNode.node.data.index, " ").concat(newName), 
                    event.flatNode.node.ariaLabel = newName, (0, visualContainerGroup.Vz)(event.flatNode.node.data.canvasItem) ? this.visualAuthoring.persistVCProperties(StrategyUtils.createNewNameChangeObject(newName), event.flatNode.node.data.canvasItem.contract) : this.visualAuthoring.setVisualContainerGroupDisplayName(newName, [ event.flatNode.node.data.canvasItem.contract ]), 
                    event.tree.renderNodeChanges();
                } else event.flatNode.node.displayName = event.flatNode.node.grayedOut ? "".concat(this.previousLabel) : "".concat(event.flatNode.node.data.index, " ").concat(this.previousLabel);
            }, SelectionPaneTabEditLabelStrategy.\u0275fac = function(t) {
                return new (t || SelectionPaneTabEditLabelStrategy)(core["\u0275\u0275inject"](visual_authoring_service.$8));
            }, SelectionPaneTabEditLabelStrategy.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: SelectionPaneTabEditLabelStrategy,
                factory: SelectionPaneTabEditLabelStrategy.\u0275fac
            }), SelectionPaneTabEditLabelStrategy;
        }(), undo_redo_service = __webpack_require__(84281), SelectionPaneTabInlineItemStrategy = function() {
            function SelectionPaneTabInlineItemStrategy(lazyScoped, selectionService, undoRedoService) {
                this.lazyScoped = lazyScoped, this.selectionService = selectionService, this.undoRedoService = undoRedoService, 
                this.inlineItemChange$ = new Subject.xQ, this.tabOrderPromise = this.lazyScoped.get("tabOrderService");
            }
            return SelectionPaneTabInlineItemStrategy.prototype.click = function(event) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var flatNode;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return flatNode = event.flatNode, event.item.id !== icons.Zw ? [ 3, 5 ] : !flatNode.node.parent || flatNode.node.parent && !this.isItemHidden(flatNode.node.parent.data.canvasItem) ? this.isItemHidden(flatNode.node.data.canvasItem) ? [ 4, this.setTabStateAwaitService([ flatNode.node ], !0) ] : [ 3, 2 ] : [ 3, 4 ];

                          case 1:
                            return _a.sent(), [ 3, 4 ];

                          case 2:
                            return [ 4, this.setTabStateAwaitService([ flatNode.node ], !1) ];

                          case 3:
                            _a.sent(), _a.label = 4;

                          case 4:
                            this.selectionService.clearSelection(), selectionUtils.UP.selectCanvasItem(flatNode.node.data.canvasItem.contract, this.selectionService), 
                            this.inlineItemChange$.next(!0), _a.label = 5;

                          case 5:
                            return [ 2 ];
                        }
                    });
                });
            }, SelectionPaneTabInlineItemStrategy.prototype.setTree = function(tree) {
                this.tree = tree;
            }, SelectionPaneTabInlineItemStrategy.prototype.isItemHidden = function(canvasItem) {
                var _a, _b;
                return !(void 0 === (null === (_a = canvasItem.position) || void 0 === _a ? void 0 : _a.tabOrder) || (null === (_b = canvasItem.position) || void 0 === _b ? void 0 : _b.tabOrder) >= 0);
            }, SelectionPaneTabInlineItemStrategy.prototype.getInlineItemChange$ = function() {
                return this.inlineItemChange$.asObservable();
            }, SelectionPaneTabInlineItemStrategy.prototype.setTabStateAwaitService = function(nodes, showTab) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var tabOrderService, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.tabOrderPromise ];

                          case 1:
                            return tabOrderService = _a.sent(), this.undoRedoService.register("Update Visual Containers for tabOrder - skipping items", function() {
                                _this.setTabState(nodes.map(function(node) {
                                    return node.data.canvasItem.contract;
                                }), showTab, tabOrderService);
                            }), [ 2 ];
                        }
                    });
                });
            }, SelectionPaneTabInlineItemStrategy.prototype.setTabState = function(nodes, showTab, tabOrderService) {
                if (nodes && 0 !== nodes.length) {
                    var siblings;
                    siblings = nodes[0].parentGroup ? nodes[0].parentGroup.children : this.tree.nodes.map(function(node) {
                        return node.data.canvasItem.contract;
                    });
                    var filteredSiblingsBySign = siblings.filter(function(canvasContract) {
                        var tabOrder = (0, canvasVisualsUtility.bt)(canvasContract, 0).tabOrder;
                        return showTab ? tabOrder >= 0 || void 0 === tabOrder : tabOrder && tabOrder < 0;
                    });
                    tabOrderService.changeSection(filteredSiblingsBySign, nodes, showTab, !0, !0);
                    for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {
                        var node = nodes_1[_i];
                        (0, visualContainerGroup2.q4)(node) && this.setTabState(node.children, showTab, tabOrderService);
                    }
                }
            }, SelectionPaneTabInlineItemStrategy.\u0275fac = function(t) {
                return new (t || SelectionPaneTabInlineItemStrategy)(core["\u0275\u0275inject"](lazy_scoped_provider.H), core["\u0275\u0275inject"](selection_service.z), core["\u0275\u0275inject"](undo_redo_service.z));
            }, SelectionPaneTabInlineItemStrategy.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: SelectionPaneTabInlineItemStrategy,
                factory: SelectionPaneTabInlineItemStrategy.\u0275fac
            }), SelectionPaneTabInlineItemStrategy;
        }(), merge = __webpack_require__(63057), skip = __webpack_require__(3307), accessible_click_directive = __webpack_require__(44581);
        function TabOrderSectionComponent_div_8_Template(rf, ctx) {
            if (1 & rf) {
                var _r5 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div", 10)(1, "button", 11), core["\u0275\u0275listener"]("accessible-click", function() {
                    core["\u0275\u0275restoreView"](_r5);
                    var ctx_r4 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r4.expandAllTree());
                }), core["\u0275\u0275pipe"](2, "localize"), core["\u0275\u0275element"](3, "i", 12), 
                core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](4, "button", 13), 
                core["\u0275\u0275listener"]("accessible-click", function() {
                    core["\u0275\u0275restoreView"](_r5);
                    var ctx_r6 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r6.collapseAllTree());
                }), core["\u0275\u0275pipe"](5, "localize"), core["\u0275\u0275element"](6, "i", 14), 
                core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](7, "button", 15), 
                core["\u0275\u0275listener"]("accessible-click", function() {
                    core["\u0275\u0275restoreView"](_r5);
                    var ctx_r7 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r7.orderTabsByPosition());
                }), core["\u0275\u0275pipe"](8, "localize"), core["\u0275\u0275element"](9, "i", 16), 
                core["\u0275\u0275elementEnd"](), core["\u0275\u0275element"](10, "div", 17), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("pbiTooltip", core["\u0275\u0275pipeBind1"](2, 4, "FieldListMenuItem_ExpandAll")), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("pbiTooltip", core["\u0275\u0275pipeBind1"](5, 6, "FieldListMenuItem_CollapseAll")), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("disabled", !ctx_r0.isEditable())("pbiTooltip", core["\u0275\u0275pipeBind1"](8, 8, "Tab_Order_Reorder_Items_Hint"));
            }
        }
        function TabOrderSectionComponent_div_9_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementStart"](0, "div", 18), core["\u0275\u0275element"](1, "div", 19), 
            core["\u0275\u0275elementEnd"]());
        }
        function TabOrderSectionComponent_ng_container_12_pbi_tree_1_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "pbi-tree", 21), 2 & rf) {
                var tabTree_r9 = ctx.ngIf, ctx_r8 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275property"]("tree", tabTree_r9)("options", ctx_r8.treeOptions);
            }
        }
        function TabOrderSectionComponent_ng_container_12_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, TabOrderSectionComponent_ng_container_12_pbi_tree_1_Template, 1, 2, "pbi-tree", 20), 
            core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275elementContainerEnd"]()), 
            2 & rf) {
                var ctx_r2 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](2, 1, ctx_r2.tabTree$));
            }
        }
        function TabOrderSectionComponent_ng_container_14_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275element"](1, "selection-pane-list-legacy-tree", 22), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var ctx_r3 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("groups", ctx_r3.groups)("visualContainers", ctx_r3.visualContainers)("activeSection", ctx_r3.activeSection)("activePositionListOrder", ctx_r3.activePositionListOrder);
            }
        }
        var inlineItemToggleTab = {
            type: pbi_tree_contracts.Q_.Button,
            id: icons.Zw,
            icon: {
                type: 0,
                glyph: icons.qV
            },
            label: "",
            displayOnHover: !0
        }, inlineItemToggleTabHidden = {
            type: pbi_tree_contracts.Q_.Button,
            id: icons.Zw,
            icon: {
                type: 0,
                glyph: icons.cD
            },
            label: "",
            displayOnHover: !1
        }, TabOrderSectionComponent = function() {
            function TabOrderSectionComponent(conceptualSchemaProxy, clickStrategy, dataSources, displayNameService, dragDropStrategy, editLabelStrategy, eventBridge, hoverStrategy, featureSwitchService, formFactor, lazyScoped, localizationService, screenReaderService, selection, selectionPaneListOrderService, tabInlineItemStrategy, telemetryService, viewModeState, visualPlugin) {
                this.conceptualSchemaProxy = conceptualSchemaProxy, this.clickStrategy = clickStrategy, 
                this.dataSources = dataSources, this.displayNameService = displayNameService, this.dragDropStrategy = dragDropStrategy, 
                this.editLabelStrategy = editLabelStrategy, this.eventBridge = eventBridge, this.hoverStrategy = hoverStrategy, 
                this.featureSwitchService = featureSwitchService, this.formFactor = formFactor, 
                this.lazyScoped = lazyScoped, this.localizationService = localizationService, this.screenReaderService = screenReaderService, 
                this.selection = selection, this.selectionPaneListOrderService = selectionPaneListOrderService, 
                this.tabInlineItemStrategy = tabInlineItemStrategy, this.telemetryService = telemetryService, 
                this.viewModeState = viewModeState, this.visualPlugin = visualPlugin, this.SectionType = SelectionPaneListSection, 
                this.OrderStrategy = OrderStrategy, this.activeSection = SelectionPaneListSection.tabOrderSection, 
                this.activePositionListOrder = "tabOrder", this.tabTree$ = new BehaviorSubject.X({
                    nodes: []
                }), this.treeOptions = {
                    click: this.clickStrategy,
                    dragDrop: this.dragDropStrategy,
                    editLabel: this.editLabelStrategy,
                    hover: this.hoverStrategy,
                    inlineItem: this.tabInlineItemStrategy
                }, this.tabNodeSet = {}, this.initialLoad$ = new ReplaySubject.t(1), this.tabOrderPromise = this.lazyScoped.get("tabOrderService"), 
                this.scrollbarsConfig = {
                    ignoreOverlay: !1,
                    ignoreMobile: !1
                };
            }
            return TabOrderSectionComponent.prototype.setOrderStrategy = function() {
                this.activeOrderStrategy = !this.isPhoneLayout() && this.accessibilityTopLevelNavFS ? OrderStrategy.grouping : OrderStrategy.flatten;
            }, TabOrderSectionComponent.prototype.isPhoneLayout = function() {
                return 1 === this.formFactor.getCurrentLayout();
            }, TabOrderSectionComponent.prototype.refreshTree = function(canvasItems) {
                var _a;
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var dataSources, schema, sortingResult, newTree, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return dataSources = this.dataSources.get(), [ 4, this.conceptualSchemaProxy.get(dataSources) ];

                          case 1:
                            return schema = _b.sent(), sortingResult = this.selectionPaneListOrderService.sortItemsByProperty(canvasItems, function(canvasItem) {
                                return canvasItem.position.tabOrder;
                            }), newTree = {
                                nodes: _.map(sortingResult.sortedItems, function(canvasItem, i) {
                                    return _this.refreshTreeNode(canvasItem, schema, "".concat(i + 1));
                                })
                            }, this.tabInlineItemStrategy.setTree(newTree), this.clickStrategy.setTree(newTree), 
                            this.dragDropStrategy.setTree(newTree), null === (_a = this.tabTree) || void 0 === _a || _a.renderNodeChangesImmediate(), 
                            this.tabTree$.next(newTree), [ 2, newTree ];
                        }
                    });
                });
            }, TabOrderSectionComponent.prototype.refreshTreeNode = function(canvasItem, schema, index, parentNode, recursive) {
                var _this = this;
                void 0 === recursive && (recursive = !0);
                var canvasItemDisplayName = this.getCanvasItemDisplayName(canvasItem, schema), isTabOrderHidden = canvasItem.position.tabOrder < 0, node = this.tabNodeSet[canvasItem.name] = this.tabNodeSet[canvasItem.name] || {
                    displayName: void 0
                };
                return node.displayName = isTabOrderHidden ? canvasItemDisplayName : "".concat(index, " ").concat(canvasItemDisplayName), 
                node.ariaLabel = canvasItemDisplayName, node.data = {
                    index,
                    canvasItem
                }, node.id = canvasItem.name, node.selected = this.isSelected[canvasItem.name], 
                node.editable = this.isEditable(), this.setNodeInlineItems(node, isTabOrderHidden, canvasItemDisplayName), 
                node.alwaysShowInlineItems = isTabOrderHidden, node.grayedOut = isTabOrderHidden, 
                node.parent = parentNode, node.children = [], (0, visualContainerGroup.q4)(canvasItem) && recursive && _.forEach(canvasItem.children, function(canvasItemChild, i) {
                    node.children.push(_this.refreshTreeNode(canvasItemChild, schema, "".concat(index, ".").concat(i + 1), node));
                }), node;
            }, TabOrderSectionComponent.prototype.refreshTreeNodesByName = function(nodeNames) {
                var _a;
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var dataSources, schema, _i, nodeNames_1, nodeName, node;
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return dataSources = this.dataSources.get(), [ 4, this.conceptualSchemaProxy.get(dataSources) ];

                          case 1:
                            for (schema = _b.sent(), _i = 0, nodeNames_1 = nodeNames; _i < nodeNames_1.length; _i++) node = this.tabNodeSet[nodeName = nodeNames_1[_i]] = this.tabNodeSet[nodeName] || {
                                displayName: void 0
                            }, this.refreshTreeNode(node.data.canvasItem, schema, node.data.index, node.parent, !1);
                            return null === (_a = this.tabTree) || void 0 === _a || _a.renderNodeChanges(), 
                            [ 2 ];
                        }
                    });
                });
            }, TabOrderSectionComponent.prototype.getCanvasItemDisplayName = function(canvasItem, schema) {
                var _a;
                if ((0, visualContainerGroup.Vz)(canvasItem)) {
                    var visualConfig = (0, visualContainerUtils.PQ)(canvasItem.contract), capabilities = this.visualPlugin.capabilities((0, 
                    visualContainerUtilsHelper.s)(canvasItem.contract));
                    return null === (_a = this.displayNameService.getVisualTitle(visualConfig, schema, capabilities, void 0, void 0, !0)) || void 0 === _a ? void 0 : _a.text;
                }
                return canvasItem.contract.displayName;
            }, TabOrderSectionComponent.prototype.setNodeInlineItems = function(node, isTabOrderHidden, canvasItemDisplayName) {
                _.isEmpty(node.inlineItems) && (node.inlineItems = [ {
                    type: void 0,
                    id: void 0,
                    icon: void 0,
                    label: void 0
                } ]);
                var toggleTabItem = node.inlineItems[0];
                isTabOrderHidden ? (Object.assign(toggleTabItem, inlineItemToggleTabHidden), (0, 
                pbi_tree_contracts.cW)(toggleTabItem) || (toggleTabItem.label = this.localizationService.format("ExplorationCanvasItemsPane_Hidden", canvasItemDisplayName)), 
                node.draggable = !1) : (Object.assign(toggleTabItem, inlineItemToggleTab), (0, pbi_tree_contracts.cW)(toggleTabItem) || (toggleTabItem.label = this.localizationService.format("ExplorationCanvasItemsPane_Shown_Hide", canvasItemDisplayName)), 
                node.draggable = !0);
            }, TabOrderSectionComponent.prototype.ngOnInit = function() {
                var _this = this;
                this.featureSwitchSubscription = this.featureSwitchService.featureSwitches$.pipe((0, 
                skipWhile.n)(function(switches) {
                    return !switches;
                }), (0, take.q)(1)).subscribe(function(featureSwitches) {
                    return (0, tslib_es6.__awaiter)(_this, void 0, void 0, function() {
                        var _this = this;
                        return (0, tslib_es6.__generator)(this, function(_a) {
                            return this.accessibilityTopLevelNavFS = featureSwitches.accessibilityTopLevelNav, 
                            this.setOrderStrategy(), this.initialLoad$.next(!0), this.accessibilityTopLevelNavFS && (this.shouldShowTabOrderTree() && this.refreshTree(this.groups), 
                            this.treeRebuildSubscription = (0, merge.T)(this.viewModeState.getMode$(), this.tabInlineItemStrategy.getInlineItemChange$()).subscribe(function() {
                                return _this.refreshTree(_this.groups);
                            })), [ 2 ];
                        });
                    });
                }), this.subscriptionManager = this.eventBridge.createChannelSubscriptionManager(), 
                this.subscriptionManager.subscribe(events.tRg, function() {
                    _this.setNodesSelectedState(_this.tabNodeSet, _this.isSelected, !1), _this.updateSelection(), 
                    _this.setNodesSelectedState(_this.tabNodeSet, _this.isSelected, !0);
                }).subscribe(events.KD7, function() {
                    _this.updateSelection(), _this.refreshTreeNodesByName(Object.keys(_this.isSelected));
                }).subscribe(events.jCS, function() {
                    _this.refreshTree(_this.groups);
                }).subscribe(events.ICs, function() {
                    _this.updateTabOrderTree();
                }).subscribe(events.D1A, function(e, visualContainer) {
                    _this.refreshTreeNodesByName([ visualContainer.name ]);
                }).subscribe(events.aco, function() {
                    _this.setOrderStrategy();
                }), this.treeRebuildSubscription = (0, merge.T)(this.viewModeState.getMode$(), this.tabInlineItemStrategy.getInlineItemChange$()).subscribe(function() {
                    return _this.refreshTree(_this.groups);
                });
            }, TabOrderSectionComponent.prototype.updateTabOrderTree = function() {
                this.ensureNormalization(), this.refreshTree(this.groups);
            }, TabOrderSectionComponent.prototype.ngOnDestroy = function() {
                this.featureSwitchSubscription.unsubscribe(), this.subscriptionManager.unsubscribeAll(), 
                this.treeRebuildSubscription.unsubscribe();
            }, TabOrderSectionComponent.prototype.ngOnChanges = function(changes) {
                changes.groups && changes.groups.currentValue && (this.listContracts = _.map(this.groups, function(item) {
                    return item.contract;
                }), this.ensureNormalization(), this.updateSelection(), this.refreshTree(changes.groups.currentValue), 
                this.selectionPaneListOrderService.markTabSorted(!1));
            }, TabOrderSectionComponent.prototype.ensureNormalization = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var tabOrder;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.tabOrderPromise ];

                          case 1:
                            return tabOrder = _a.sent(), this.ensureNormalizedTabOrder(tabOrder), [ 2 ];
                        }
                    });
                });
            }, TabOrderSectionComponent.prototype.updateSelection = function() {
                _.isEmpty(this.groups) && (this.isSelected = {});
                var selectedVisuals = this.getSelectedItems();
                _.isEmpty(selectedVisuals) && (this.isSelected = {}), this.isSelected = _.zipObject(_.map(selectedVisuals, function(container) {
                    return container.name;
                }), _.map(selectedVisuals, _.constant(!0)));
            }, TabOrderSectionComponent.prototype.ensureNormalizedTabOrder = function(tabOrder) {
                tabOrder.shouldNormalize(this.listContracts, !0) && (tabOrder.normalizeHierarchy(this.listContracts), 
                this.selectionPaneListOrderService.markTabSorted(!1));
            }, TabOrderSectionComponent.prototype.orderTabsByPosition = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return this.telemetryService.logEvent(ExploreUIAuthoring_telemetry_events.Y$), [ 4, this.tabOrderPromise ];

                          case 1:
                            return _a.sent().orderByPosition(this.listContracts), this.selectionPaneListOrderService.markTabSorted(!1), 
                            this.refreshTree(this.groups), [ 2 ];
                        }
                    });
                });
            }, TabOrderSectionComponent.prototype.expandAllTree = function() {
                this.tabTree && (this.tabTree.expandAll(), this.tabTree.renderNodeChanges());
            }, TabOrderSectionComponent.prototype.collapseAllTree = function() {
                this.tabTree && (this.tabTree.collapseAll(), this.tabTree.renderNodeChanges());
            }, TabOrderSectionComponent.prototype.setNodesSelectedState = function(nodeSet, selection, state) {
                for (var key in selection) nodeSet[key] && (nodeSet[key].selected = state);
                this.tabTree && this.tabTree.renderNodeChanges();
            }, TabOrderSectionComponent.prototype.shouldShowTabOrderTree = function() {
                return this.activeOrderStrategy === OrderStrategy.grouping;
            }, TabOrderSectionComponent.prototype.bringForward = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            switch (this.activeOrderStrategy) {
                              case OrderStrategy.grouping:
                                return [ 3, 1 ];

                              case OrderStrategy.flatten:
                                return [ 3, 3 ];
                            }
                            return [ 3, 4 ];

                          case 1:
                            return this.notifyTabOrderChanges(0), [ 4, this.sendTabChangeGroupingOrder(0) ];

                          case 2:
                            return _b.sent(), [ 3, 5 ];

                          case 3:
                            return this.sendDirectionFlattenOrder(!0), this.selectionPaneListOrderService.notifyUserLayerDataChanged(!0), 
                            [ 3, 5 ];

                          case 4:
                            return debug.fF.assertNever(this.activeOrderStrategy), [ 3, 5 ];

                          case 5:
                            return [ 2 ];
                        }
                    });
                });
            }, TabOrderSectionComponent.prototype.sendBackward = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            switch (this.activeOrderStrategy) {
                              case OrderStrategy.grouping:
                                return [ 3, 1 ];

                              case OrderStrategy.flatten:
                                return [ 3, 3 ];
                            }
                            return [ 3, 4 ];

                          case 1:
                            return this.notifyTabOrderChanges(1), [ 4, this.sendTabChangeGroupingOrder(1) ];

                          case 2:
                            return _b.sent(), [ 3, 5 ];

                          case 3:
                            return this.sendDirectionFlattenOrder(!1), this.selectionPaneListOrderService.notifyUserLayerDataChanged(!1), 
                            [ 3, 5 ];

                          case 4:
                            return debug.fF.assertNever(this.activeOrderStrategy), [ 3, 5 ];

                          case 5:
                            return [ 2 ];
                        }
                    });
                });
            }, TabOrderSectionComponent.prototype.sendDirectionFlattenOrder = function(bringForward) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var service, list;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.tabOrderPromise ];

                          case 1:
                            return service = _a.sent(), this.ensureNormalization(), list = this.filterVisualContainersByTabOrderSign(!0), 
                            bringForward ? service.bringForward(list, selectionUtils.UP.getSelectedVisualContainers(this.selection), !0) : service.sendBackward(list, selectionUtils.UP.getSelectedVisualContainers(this.selection), !0), 
                            this.selectionPaneListOrderService.markTabSorted(!1), [ 2 ];
                        }
                    });
                });
            }, TabOrderSectionComponent.prototype.filterVisualContainersByTabOrderSign = function(isUnskipped) {
                return this.visualContainers ? (0, canvasVisualsUtility.cV)(this.visualContainers.map(function(item) {
                    return item.contract;
                }), isUnskipped) : [];
            }, TabOrderSectionComponent.prototype.sendTabChangeGroupingOrder = function(tabOrderChange) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var tabOrderService;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.tabOrderPromise ];

                          case 1:
                            return tabOrderService = _a.sent(), this.ensureNormalizedTabOrder(tabOrderService), 
                            tabOrderService.sendTabOrderCommandsByLevel(this.selection, this.listContracts, tabOrderChange), 
                            [ 2 ];
                        }
                    });
                });
            }, TabOrderSectionComponent.prototype.notifyTabOrderChanges = function(tabOrderChange) {
                var subscriptionManager = this.eventBridge.createChannelSubscriptionManager(), selectedVisualContainers = selectionUtils.UP.getSelectedVisualContainers(this.selection), promises = [];
                selectedVisualContainers.length > 0 && promises.push(this.handleTabOrderChangesForContainer(subscriptionManager, events.jCS, selectedVisualContainers, tabOrderChange));
                var selectedVisualContainersGroup = selectionUtils.UP.getSelectedVisualContainerGroups(this.selection);
                selectedVisualContainersGroup.length > 0 && promises.push(this.handleTabOrderChangesForContainer(subscriptionManager, events.ICs, selectedVisualContainersGroup, tabOrderChange)), 
                Promise.all(promises).then(function() {
                    return subscriptionManager.unsubscribeAll();
                });
            }, TabOrderSectionComponent.prototype.handleTabOrderChangesForContainer = function(manager, event, selection, direction) {
                var _this = this;
                return new Promise(function(resolve) {
                    manager.subscribe(event, function(_e, args) {
                        return (0, tslib_es6.__awaiter)(_this, void 0, void 0, function() {
                            var subscription, _this = this;
                            return (0, tslib_es6.__generator)(this, function(_a) {
                                return subscription = this.tabTree$.pipe((0, skip.T)(1)).subscribe(function(tree) {
                                    selection.forEach(function(container) {
                                        if (args.affectContainer(container)) {
                                            var node = _this.findNode(container.name), message = _this.localizationService.format(1 === direction ? "ExplorationCanvasItemsPane_SentBackward" : "ExplorationCanvasItemsPane_SentForward", node.displayName);
                                            node && _this.screenReaderService.alertPolite(message);
                                        }
                                    }), subscription.unsubscribe(), resolve();
                                }), [ 2 ];
                            });
                        });
                    });
                });
            }, TabOrderSectionComponent.prototype.findNode = function(id) {
                return this.tabNodeSet[id];
            }, TabOrderSectionComponent.prototype.isContentPresent = function() {
                return this.isNoGroupsList();
            }, TabOrderSectionComponent.prototype.isNoGroupsList = function() {
                return !this.groups || 0 === this.groups.length;
            }, TabOrderSectionComponent.prototype.isEditable = function() {
                return 1 === this.viewModeState.getMode();
            }, TabOrderSectionComponent.prototype.getSelectedItems = function() {
                return selectionUtils.UP.getSelectedCanvasItems(this.selection);
            }, TabOrderSectionComponent.\u0275fac = function(t) {
                return new (t || TabOrderSectionComponent)(core["\u0275\u0275directiveInject"](conceptual_schema_proxy_service.i), core["\u0275\u0275directiveInject"](SelectionPaneClickStrategy), core["\u0275\u0275directiveInject"](data_sources_service.D), core["\u0275\u0275directiveInject"](exploration_display_name_service.O), core["\u0275\u0275directiveInject"](SelectionPaneTabDragDropStrategy), core["\u0275\u0275directiveInject"](SelectionPaneTabEditLabelStrategy), core["\u0275\u0275directiveInject"](event_bridge_service.J), core["\u0275\u0275directiveInject"](SelectionPaneHoverStrategy), core["\u0275\u0275directiveInject"](feature_switch_service.vZ), core["\u0275\u0275directiveInject"](form_factor_provider_service.F), core["\u0275\u0275directiveInject"](lazy_scoped_provider.H), core["\u0275\u0275directiveInject"](localization_service.o), core["\u0275\u0275directiveInject"](screen_reader_service.g), core["\u0275\u0275directiveInject"](selection_service.z), core["\u0275\u0275directiveInject"](SelectionPaneListOrderService), core["\u0275\u0275directiveInject"](SelectionPaneTabInlineItemStrategy), core["\u0275\u0275directiveInject"](Telemetry.y0), core["\u0275\u0275directiveInject"](view_mode_state_service.kc), core["\u0275\u0275directiveInject"](visual_plugin_service.D));
            }, TabOrderSectionComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: TabOrderSectionComponent,
                selectors: [ [ "tab-order-section" ] ],
                viewQuery: function(rf, ctx) {
                    var _t;
                    1 & rf && core["\u0275\u0275viewQuery"](pbi_tree_component.u, 5), 2 & rf && core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx.tabTree = _t.first);
                },
                inputs: {
                    groups: "groups",
                    visualContainers: "visualContainers"
                },
                features: [ core["\u0275\u0275ProvidersFeature"]([ SelectionPaneClickStrategy, SelectionPaneTabDragDropStrategy, SelectionPaneTabEditLabelStrategy, SelectionPaneHoverStrategy, SelectionPaneTabInlineItemStrategy ]), core["\u0275\u0275NgOnChangesFeature"] ],
                decls: 16,
                vars: 17,
                consts: [ [ 1, "selection-pane-list-actions" ], [ 1, "selection-pane-list-actions-move" ], [ "id", "bringForward", 3, "disabled", "pbiTooltip", "click" ], [ 1, "glyphicon", "pbi-glyph-flickup", "glyph-small" ], [ "id", "sendBackward", 3, "disabled", "pbiTooltip", "click" ], [ "class", "selection-pane-list-tab-actions", 4, "ngIf" ], [ "class", "no-content-container", "tabindex", "0", 4, "ngIf" ], [ 1, "scroll-container-flex-grow" ], [ 1, "selection-pane-list", 3, "pbiScrollbar" ], [ 4, "ngIf" ], [ 1, "selection-pane-list-tab-actions" ], [ "id", "expandAll", 3, "pbiTooltip", "accessible-click" ], [ 1, "glyphicon", "pbi-glyph-expand-all", "glyph-small" ], [ "id", "collapseAll", 3, "pbiTooltip", "accessible-click" ], [ 1, "glyphicon", "pbi-glyph-collapse-all", "glyph-small" ], [ "id", "orderTabsByPosition", "aria-describedby", "orderTabsByPositionDescription", 3, "disabled", "pbiTooltip", "accessible-click" ], [ 1, "glyphicon", "pbi-glyph-horizontal-tab-key", "glyph-small" ], [ "id", "orderTabsByPositionDescription", "localize", "Tab_Order_Reorder_Items_Hint", 1, "aria-hint" ], [ "tabindex", "0", 1, "no-content-container" ], [ "localize", "ExplorationCanvasItemsPane_NoCanvasItems" ], [ "disableIcons", "true", "focus-nav-mode", "Browser", 3, "tree", "options", 4, "ngIf" ], [ "disableIcons", "true", "focus-nav-mode", "Browser", 3, "tree", "options" ], [ 3, "groups", "visualContainers", "activeSection", "activePositionListOrder" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementStart"](0, "div", 0)(1, "div", 1)(2, "button", 2), 
                    core["\u0275\u0275listener"]("click", function() {
                        return ctx.bringForward();
                    }), core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275element"](4, "i", 3), 
                    core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](5, "button", 4), 
                    core["\u0275\u0275listener"]("click", function() {
                        return ctx.sendBackward();
                    }), core["\u0275\u0275pipe"](6, "localize"), core["\u0275\u0275element"](7, "i", 3), 
                    core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275template"](8, TabOrderSectionComponent_div_8_Template, 11, 10, "div", 5), 
                    core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](9, TabOrderSectionComponent_div_9_Template, 2, 0, "div", 6), 
                    core["\u0275\u0275elementStart"](10, "div", 7)(11, "div", 8), core["\u0275\u0275template"](12, TabOrderSectionComponent_ng_container_12_Template, 3, 3, "ng-container", 9), 
                    core["\u0275\u0275pipe"](13, "async"), core["\u0275\u0275template"](14, TabOrderSectionComponent_ng_container_14_Template, 2, 4, "ng-container", 9), 
                    core["\u0275\u0275pipe"](15, "async"), core["\u0275\u0275elementEnd"]()()), 2 & rf && (core["\u0275\u0275advance"](2), 
                    core["\u0275\u0275property"]("disabled", !ctx.isEditable())("pbiTooltip", core["\u0275\u0275pipeBind1"](3, 9, "FieldListMenuItem_MoveUp")), 
                    core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("disabled", !ctx.isEditable())("pbiTooltip", core["\u0275\u0275pipeBind1"](6, 11, "FieldListMenuItem_MoveDown")), 
                    core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngIf", ctx.shouldShowTabOrderTree()), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx.isContentPresent()), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("pbiScrollbar", ctx.scrollbarsConfig), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx.shouldShowTabOrderTree() && core["\u0275\u0275pipeBind1"](13, 13, ctx.initialLoad$)), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", !ctx.shouldShowTabOrderTree() && core["\u0275\u0275pipeBind1"](15, 15, ctx.initialLoad$)));
                },
                dependencies: [ common.NgIf, localize_directive.X, accessible_click_directive.t, pbi_scrollbar_directive.r, pbi_tooltip_directive.V, pbi_tree_component.u, SelectionPaneListLegacyTreeComponent, common.AsyncPipe, localize_pipe.F ],
                styles: [ '.selection-pane-list-actions[_ngcontent-%COMP%]{display:flex;flex-direction:row;padding:0 10px;height:32px;border-bottom:1px solid var(--neutral-primary-color);flex:none;border-color:var(--gray-40)}.selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{flex-grow:1;display:flex;align-items:center}.selection-pane-list-actions[_ngcontent-%COMP%] > div.selection-pane-list-actions-move[_ngcontent-%COMP%]{justify-content:flex-start;font-size:11px;margin-right:6px}.selection-pane-list-actions[_ngcontent-%COMP%] > div.selection-pane-list-actions-move[_ngcontent-%COMP%]   #bringForward[_ngcontent-%COMP%]{margin-right:6px}.selection-pane-list-actions[_ngcontent-%COMP%] > div.selection-pane-list-actions-move[_ngcontent-%COMP%]   #sendBackward[_ngcontent-%COMP%]{margin-left:6px}.selection-pane-list-actions[_ngcontent-%COMP%] > div.selection-pane-list-tab-actions[_ngcontent-%COMP%]{font-size:12px;justify-content:flex-end;margin-left:6px}.selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{background-color:transparent;border-color:inherit;color:inherit;font-size:12px}.selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%], .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled, .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[disabled][_ngcontent-%COMP%], .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover, .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled:hover, .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[disabled][_ngcontent-%COMP%]:hover, .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:focus, .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled:focus, .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[disabled][_ngcontent-%COMP%]:focus, .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:active, .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled:active, .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[disabled][_ngcontent-%COMP%]:active, .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:active:hover, .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled:active:hover, .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[disabled][_ngcontent-%COMP%]:active:hover, .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:focus:hover, .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled:focus:hover, .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[disabled][_ngcontent-%COMP%]:focus:hover{background-color:transparent;border-color:inherit}.selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%], .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover, .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:focus, .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:active, .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:active:hover, .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:focus:hover{color:inherit}.selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled, .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[disabled][_ngcontent-%COMP%], .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled:hover, .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[disabled][_ngcontent-%COMP%]:hover, .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled:focus, .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[disabled][_ngcontent-%COMP%]:focus, .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled:active, .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[disabled][_ngcontent-%COMP%]:active, .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled:active:hover, .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[disabled][_ngcontent-%COMP%]:active:hover, .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled:focus:hover, .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[disabled][_ngcontent-%COMP%]:focus:hover{color:var(--gray-80)}html[data-focus-source="key"][_nghost-%COMP%]   .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:focus, html[data-focus-source="key"]   [_nghost-%COMP%]   .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:focus{outline:var(--focus-two-tone-outline-definition, auto 1px);outline-color:var(--focus-two-tone-outline-color, -webkit-focus-ring-color)}.selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   .glyph-small[_ngcontent-%COMP%]{font-size:14px}.selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button#sendBackward[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{padding:10px 0 0;margin:0}.selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button#bringForward[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{padding:5px 0 0;margin:0;transform:scaleY(-1);-webkit-transform:scale(1,-1)}.selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button#orderTabsByPosition[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{padding:5px 0 0}.selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button#expandAll[_ngcontent-%COMP%], .selection-pane-list-actions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   button#collapseAll[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{padding:2px 12px 0 0;margin:0}.no-content-container[_ngcontent-%COMP%]{--empty-container-text-color: var(--gray-180);display:flex;flex:1 0 auto;justify-content:center;align-items:start;color:var(--empty-container-text-color);padding-top:6px}  [data-legacy-theming=false] .no-content-container{--empty-container-text-color: var(--colorNeutralForeground1)}.scroll-container-flex-grow[_ngcontent-%COMP%]{flex:1 0 0px;overflow:hidden}.aria-hint[_ngcontent-%COMP%]{display:none}[_nghost-%COMP%]{display:flex;flex-direction:column;flex:1 0 auto;text-align:left}[_nghost-%COMP%]:focus{outline:none}' ]
            }), TabOrderSectionComponent;
        }(), a11y_module = __webpack_require__(20914), ExploreUI_module = __webpack_require__(87121), lazy_load_module = __webpack_require__(82156), localization_module = __webpack_require__(79061), drag_drop_module = __webpack_require__(13316), editable_label_module = __webpack_require__(16987), pbi_pane_module = __webpack_require__(13254), pbi_scrollbar_module = __webpack_require__(72359), pbi_tooltip_module = __webpack_require__(16095), pbi_tree_module = __webpack_require__(35284), section_animation_slider = __webpack_require__(64824), CssConstants = __webpack_require__(79154), SectionTabKeyHandlerDirective = function() {
            function SectionTabKeyHandlerDirective() {
                this.onActiveSection = new core.EventEmitter;
            }
            return SectionTabKeyHandlerDirective.prototype.onKeyDown = function(event) {
                var length = this.sectionTabKeyHandler.sectionLength;
                switch (event.keyCode) {
                  case $.ui.keyCode.LEFT:
                  case $.ui.keyCode.UP:
                    var nextSection = (this.sectionTabKeyHandler.currentSection - 1 + length) % length;
                    this.focusOnSection(nextSection, event);
                    break;

                  case $.ui.keyCode.RIGHT:
                  case $.ui.keyCode.DOWN:
                    this.focusOnSection(nextSection = (this.sectionTabKeyHandler.currentSection + 1) % length, event);
                }
            }, SectionTabKeyHandlerDirective.prototype.focusOnSection = function(nextSection, event) {
                var sectionSelector = (0, CssConstants.CH)("sectionTab");
                this.onActiveSection.emit({
                    nextSection
                }), $(event.target).parent("ul").find(sectionSelector.selector).eq(nextSection).focus(), 
                event.stopPropagation();
            }, SectionTabKeyHandlerDirective.\u0275fac = function(t) {
                return new (t || SectionTabKeyHandlerDirective);
            }, SectionTabKeyHandlerDirective.\u0275dir = core["\u0275\u0275defineDirective"]({
                type: SectionTabKeyHandlerDirective,
                selectors: [ [ "", "section-tab-key-handler", "" ] ],
                hostBindings: function(rf, ctx) {
                    1 & rf && core["\u0275\u0275listener"]("keydown", function($event) {
                        return ctx.onKeyDown($event);
                    });
                },
                inputs: {
                    sectionTabKeyHandler: [ "section-tab-key-handler", "sectionTabKeyHandler" ]
                },
                outputs: {
                    onActiveSection: "onActiveSection"
                }
            }), SectionTabKeyHandlerDirective;
        }(), lazyLoadManifests = [ {
            componentId: "SelectionPaneComponentId",
            type: SelectionPaneComponent
        } ], SelectionPaneModule = function() {
            function SelectionPaneModule() {}
            return SelectionPaneModule.\u0275fac = function(t) {
                return new (t || SelectionPaneModule);
            }, SelectionPaneModule.\u0275mod = core["\u0275\u0275defineNgModule"]({
                type: SelectionPaneModule
            }), SelectionPaneModule.\u0275inj = core["\u0275\u0275defineInjector"]({
                imports: [ common.CommonModule, drag_drop._t, editable_label_module.w, ExploreUI_module.J, lazy_load_module.N.withManifests(lazyLoadManifests), localization_module.v, fesm2022_tree.dp, a11y_module._, drag_drop_module._, pbi_pane_module.x, pbi_scrollbar_module.K, pbi_tooltip_module.Z, pbi_tree_module.J ]
            }), SelectionPaneModule;
        }();
        core["\u0275\u0275setComponentScope"](SelectionPaneListComponent, [ common.NgClass, common.NgIf, section_animation_slider.R, SectionTabKeyHandlerDirective, localize_directive.X, accessible_click_directive.t, pbi_tooltip_directive.V, LayerOrderSectionComponent, TabOrderSectionComponent ], [ common.AsyncPipe, localize_pipe.F ]);
    },
    64824: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            R: function() {
                return SectionAnimationSliderDirective;
            }
        });
        var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(50423), SectionAnimationSliderDirective = function() {
            function SectionAnimationSliderDirective(elementRef) {
                this.elementRef = elementRef;
            }
            return SectionAnimationSliderDirective.prototype.ngOnChanges = function(changes) {
                if (changes.sectionNumber && !changes.sectionNumber.isFirstChange()) {
                    var newNumber = changes.sectionNumber.currentValue;
                    null != newNumber && this.animateSectionSlide(newNumber, changes.sectionNumber.previousValue);
                }
            }, SectionAnimationSliderDirective.prototype.animateElement = function(element, cssProperties, animateProperties) {
                element.css(cssProperties).animate(animateProperties, 200);
            }, SectionAnimationSliderDirective.prototype.animateSectionSlide = function(newIndex, oldIndex) {
                this.doNotAnimateSection || (newIndex < oldIndex ? this.animateElement($(this.elementRef.nativeElement), {
                    right: "200%"
                }, {
                    right: 0
                }) : newIndex > oldIndex && this.animateElement($(this.elementRef.nativeElement), {
                    "margin-left": "200%"
                }, {
                    "margin-left": 0
                }));
                var navMarker = $(".".concat(this.navMarkerParent, " .navMarker"));
                if (this.autoWidth) {
                    var marginToAnimate = 0 === newIndex ? "margin-left" : "margin-right", marginToReset = 0 === newIndex ? "margin-right" : "margin-left", cssProperties = {};
                    cssProperties[marginToAnimate] = "".concat(navMarker.width(), "px"), cssProperties[marginToReset] = "auto";
                    var animationProperties = {};
                    animationProperties[marginToAnimate] = "0", this.animateElement(navMarker, cssProperties, animationProperties);
                } else this.animateElement(navMarker, {}, {
                    "margin-left": navMarker.width() * newIndex + "px"
                });
            }, SectionAnimationSliderDirective.\u0275fac = function(t) {
                return new (t || SectionAnimationSliderDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275directiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef));
            }, SectionAnimationSliderDirective.\u0275dir = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275defineDirective"]({
                type: SectionAnimationSliderDirective,
                selectors: [ [ "", "section-animation-slider", "" ] ],
                inputs: {
                    sectionNumber: "sectionNumber",
                    navMarkerParent: "navMarkerParent",
                    autoWidth: "autoWidth",
                    doNotAnimateSection: "doNotAnimateSection"
                },
                features: [ _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275NgOnChangesFeature"] ]
            }), SectionAnimationSliderDirective;
        }();
    }
} ]);