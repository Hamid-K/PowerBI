"use strict";

(self.webpackChunkdesktop = self.webpackChunkdesktop || []).push([ [ "advancedSlicer" ], {
    1524: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, {
            ButtonSlicer: function() {
                return ButtonSlicer;
            },
            createAdvancedSlicer: function() {
                return createAdvancedSlicer;
            }
        });
        var tslib_es6 = __webpack_require__(81337), slicer_converter = __webpack_require__(87592), slicerSelectionHandler = __webpack_require__(83611), slicerUtil1 = __webpack_require__(68447), tileLibraryConverter = __webpack_require__(78558), advancedSlicer_capabilities = __webpack_require__(62283), buttonSlicerInstanceIds = [ advancedSlicer_capabilities.d1.default, advancedSlicer_capabilities.d1.hover, advancedSlicer_capabilities.d1.press, advancedSlicer_capabilities.d1.selected ], selectionState = {
            id: "selection",
            instances: [ advancedSlicer_capabilities.VD.mixed, advancedSlicer_capabilities.VD.selected, advancedSlicer_capabilities.VD.unselected ],
            displayName: "Visual_SelectionState_Label",
            child: {
                id: "interaction",
                instances: [ advancedSlicer_capabilities.P8.rest, advancedSlicer_capabilities.P8.disabled, advancedSlicer_capabilities.P8.hover, advancedSlicer_capabilities.P8.press ],
                displayName: "Visual_InteractionState_Label"
            }
        }, debug = __webpack_require__(62458), common_colorHelper = __webpack_require__(90120), imageScalingType = __webpack_require__(48966), dataViewObject2 = __webpack_require__(82755), tileLibrary_capabilities = __webpack_require__(93187), common_fontProperties = __webpack_require__(18664), units = __webpack_require__(32105), verticalPosition = __webpack_require__(18765), cardVisualPositioning = __webpack_require__(72704), legendPosition = __webpack_require__(70700), navigatorOrientation = __webpack_require__(51322), horizontalPosition = __webpack_require__(92374), paddingOptions = __webpack_require__(26570), shapeType = __webpack_require__(67741), speechBubbleTailPosition = __webpack_require__(18989), colorHelper = __webpack_require__(44783), fontUtils = __webpack_require__(38265), overFlowStyle = __webpack_require__(57695), overFlowDirection = __webpack_require__(5874), layoutStyleType = __webpack_require__(8054), strokePattern = __webpack_require__(47316), titleHeading = __webpack_require__(58505), imageType = __webpack_require__(49408), types_advancedSlicerType = __webpack_require__(41358);
        function getFillDefaults(style) {
            return {
                default: {
                    show: !0,
                    fillColor: style.colorPalette.background.value,
                    fillTransparency: 0,
                    fillImage: void 0,
                    fillImageTransparency: 0,
                    fillImageSplitTransparency: !0
                },
                hover: {
                    fillColor: style.colorPalette.backgroundLight.value
                },
                press: {
                    fillColor: style.colorPalette.backgroundNeutral.value
                },
                selected: {
                    fillColor: style.colorPalette.foreground.value
                }
            };
        }
        function getOutlineDefaults(style, layoutStyle) {
            return {
                default: {
                    strokeShow: layoutStyle !== layoutStyleType.i.Table,
                    strokeColor: style.colorPalette.foregroundNeutralTertiary.value,
                    strokeWidth: 1,
                    strokeTransparency: 0,
                    strokePattern: strokePattern.kY.solid
                },
                selected: {
                    strokeColor: style.colorPalette.foreground.value
                }
            };
        }
        function getShadowDefaults(style) {
            return {
                default: {
                    show: !1,
                    shadowColor: style.colorPalette.foreground.value,
                    shadowTransparency: 70,
                    shadowBlur: 20,
                    shadowPositionPreset: "bottomRight",
                    shadowAngle: 135,
                    shadowDistance: 10,
                    position: "Outer",
                    shadowSpread: 3
                }
            };
        }
        function getGlowDefaults(style) {
            return {
                default: {
                    show: !1,
                    glowColor: common_colorHelper.v.getDataColorByIndex(style, 0, colorHelper.fA),
                    glowTransparency: 70,
                    glowBlur: 40,
                    glowPositionPreset: "center",
                    glowAngle: 135,
                    glowDistance: 10,
                    position: "Outer",
                    glowSpread: 3
                }
            };
        }
        function getSelectionIconDefaults(style) {
            return {
                default: {
                    show: !0,
                    transparency: 0,
                    position: legendPosition.zw.left,
                    size: 20,
                    spacing: 6,
                    color: style.colorPalette.foreground.value
                }
            };
        }
        function getImageDefaults(type) {
            return {
                default: {
                    image: void 0,
                    padding: 4,
                    position: type === types_advancedSlicerType.z5 ? legendPosition.zw.left : legendPosition.zw.top,
                    transparency: 0,
                    ignorePadding: !0,
                    setAsBackground: !1,
                    imageFit: imageScalingType.C.fill,
                    imageAreaSize: 50,
                    saturation: 100,
                    blur: 0
                }
            };
        }
        function getBackgroundDefaults(style) {
            return {
                default: {
                    show: !1,
                    color: style.colorPalette.background.value,
                    wrapContent: !1,
                    transparency: 0
                }
            };
        }
        function getAccentBarDefaults(style) {
            return {
                default: {
                    show: !1,
                    position: legendPosition.zw.left,
                    color: style.colorPalette.foreground.value,
                    transparency: 0,
                    width: 2
                }
            };
        }
        function getValueDefaults(style, colorHelper, isImage) {
            var textDefaults = getTextDefaults(style, colorHelper, !isImage);
            return {
                default: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, textDefaults.default), {
                    labelDisplayUnits: 0,
                    labelPrecision: void 0,
                    customFormatString: void 0,
                    showBlankAs: "--",
                    fontProperties: (0, common_fontProperties.Zi)(void 0, {
                        color: advancedSlicer_capabilities.R9.fontColor,
                        size: advancedSlicer_capabilities.R9.fontSize,
                        family: advancedSlicer_capabilities.R9.fontFamily
                    }, colorHelper, style, "foreground", "title", {
                        color: common_colorHelper.v.getThemeColor(style, "foreground"),
                        size: units.B.createFromPx(10.5),
                        family: fontUtils.Wn.semibold.css
                    }, !0)
                }),
                selected: {
                    fontProperties: {
                        color: common_colorHelper.v.getThemeColor(style, "foregroundLight")
                    }
                }
            };
        }
        function getTextDefaults(style, colorHelper, show) {
            return void 0 === show && (show = !1), {
                default: {
                    show,
                    text: void 0,
                    heading: titleHeading.cm.Heading4,
                    verticalAlignment: verticalPosition.Q4.middle,
                    horizontalAlignment: horizontalPosition.D.left,
                    rotation: 0,
                    position: cardVisualPositioning.A.BelowValue,
                    transparency: 0,
                    textWrap: !1,
                    alignBaselines: !0,
                    fontProperties: (0, common_fontProperties.Zi)(void 0, {
                        color: advancedSlicer_capabilities.R9.fontColor,
                        size: advancedSlicer_capabilities.R9.fontSize,
                        family: advancedSlicer_capabilities.R9.fontFamily
                    }, colorHelper, style, "foregroundNeutralSecondary", "smallLightLabel", {
                        color: common_colorHelper.v.getThemeColor(style, "foregroundNeutralSecondary"),
                        size: units.B.createFromPx(9),
                        family: fontUtils.Wn.regular.css
                    }, !0)
                }
            };
        }
        function getColorDefaults(style, colorHelper) {
            var _a, _b, _c, _d, _e, _f, _g, _h, glowDefaults = getGlowDefaults(style), outlineDefaults = getOutlineDefaults(style), fillDefaults = getFillDefaults(style), shadowDefaults = getShadowDefaults(style), accentBarDefaults = getAccentBarDefaults(style), labelDefaults = getTextDefaults(style, colorHelper, !1), valueDefaults = getValueDefaults(style, colorHelper, !0), backgroundDefaults = getBackgroundDefaults(style), result = {
                default: {},
                selected: {},
                hover: {},
                press: {}
            };
            for (var instance in advancedSlicer_capabilities.d1) {
                var state = instance;
                (null === (_a = glowDefaults[state]) || void 0 === _a ? void 0 : _a.glowColor) && (result[state].glowColor = glowDefaults[state].glowColor), 
                (null === (_b = outlineDefaults[state]) || void 0 === _b ? void 0 : _b.strokeColor) && (result[state].outlineColor = outlineDefaults[state].strokeColor), 
                (null === (_c = fillDefaults[state]) || void 0 === _c ? void 0 : _c.fillColor) && (result[state].fillColor = fillDefaults[state].fillColor), 
                (null === (_d = shadowDefaults[state]) || void 0 === _d ? void 0 : _d.shadowColor) && (result[state].shadowColor = shadowDefaults[state].shadowColor), 
                (null === (_e = accentBarDefaults[state]) || void 0 === _e ? void 0 : _e.color) && (result[state].accentColor = accentBarDefaults[state].color), 
                (null === (_f = labelDefaults[state]) || void 0 === _f ? void 0 : _f.fontProperties.color) && (result[state].labelFontColor = labelDefaults[state].fontProperties.color), 
                (null === (_g = valueDefaults[state]) || void 0 === _g ? void 0 : _g.fontProperties.color) && (result[state].valueFontColor = valueDefaults[state].fontProperties.color), 
                (null === (_h = backgroundDefaults[state]) || void 0 === _h ? void 0 : _h.color) && (result[state].backgroundColor = backgroundDefaults[state].color);
            }
            return result;
        }
        function updateColorProperties(colorSettings, tileProps, buttonSlicerProps, defaultsByInstance) {
            var tilePropertiesPerInstance = _.cloneDeep(tileProps), buttonSlicerPropertiesPerInstance = _.cloneDeep(buttonSlicerProps);
            for (var instance in colorSettings) {
                var state = instance, defaults = defaultsByInstance[state], colorSetting = colorSettings[state];
                _.isEmpty(colorSetting) || (colorSetting.backgroundColor && colorSetting.backgroundColor !== defaults.backgroundColor && (buttonSlicerPropertiesPerInstance.background[state].color = colorSetting.backgroundColor), 
                colorSetting.accentColor && colorSetting.accentColor !== defaults.accentColor && (tilePropertiesPerInstance.accentBar[state].color = colorSetting.accentColor), 
                colorSetting.fillColor && colorSetting.fillColor !== defaults.fillColor && (tilePropertiesPerInstance.fill[state].fillColor = colorSetting.fillColor), 
                colorSetting.glowColor && colorSetting.glowColor !== defaults.glowColor && (tilePropertiesPerInstance.glow[state].glowColor = colorSetting.glowColor), 
                colorSetting.labelFontColor && colorSetting.labelFontColor !== defaults.labelFontColor && (tilePropertiesPerInstance.label[state].fontProperties = updateFontPropertiesColor(colorSetting.labelFontColor, tilePropertiesPerInstance.label[state].fontProperties)), 
                colorSetting.outlineColor && colorSetting.outlineColor !== defaults.outlineColor && (tilePropertiesPerInstance.outline[state].strokeColor = colorSetting.outlineColor), 
                colorSetting.shadowColor && colorSetting.shadowColor !== defaults.shadowColor && (tilePropertiesPerInstance.shadow[state].shadowColor = colorSetting.shadowColor), 
                colorSetting.valueFontColor && colorSetting.valueFontColor !== defaults.valueFontColor && (tilePropertiesPerInstance.text[state].fontProperties = updateFontPropertiesColor(colorSetting.valueFontColor, tilePropertiesPerInstance.text[state].fontProperties)));
            }
            return [ tilePropertiesPerInstance, buttonSlicerPropertiesPerInstance ];
        }
        function updateFontPropertiesColor(color, fontProperties) {
            return {
                size: fontProperties.size,
                lineHeight: fontProperties.lineHeight,
                family: fontProperties.family,
                style: fontProperties.style,
                weight: fontProperties.weight,
                variant: fontProperties.variant,
                color,
                whiteSpace: fontProperties.whiteSpace,
                textDecoration: fontProperties.textDecoration
            };
        }
        function readColorProperty(objects, colorHelper, instanceIds, defaults) {
            return (0, tileLibraryConverter.BE)(instanceIds, function(instanceid, defaultInstanceSettings) {
                var instanceDefaults = null == defaults ? void 0 : defaults[instanceid];
                return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, null == defaults ? void 0 : defaults.default), (0, 
                tileLibraryConverter.Cu)(objects, colorHelper, buttonSlicerColorProps.colorProps, instanceDefaults, defaultInstanceSettings, "".concat(instanceid)));
            });
        }
        var buttonSlicerColorProps = {
            colorProps: {
                labelFontColor: tileLibrary_capabilities.OV.label.fontColor,
                valueFontColor: tileLibrary_capabilities.OV.value.fontColor,
                outlineColor: tileLibrary_capabilities.OV.outline.lineColor,
                fillColor: tileLibrary_capabilities.OV.fillCustom.fillColor,
                accentColor: tileLibrary_capabilities.OV.accentBar.color,
                glowColor: tileLibrary_capabilities.OV.glow.color,
                shadowColor: tileLibrary_capabilities.OV.shadowCustom.color,
                backgroundColor: advancedSlicer_capabilities.yD.background.color
            }
        };
        function getContainerName(instance, localize) {
            switch (instance) {
              case advancedSlicer_capabilities.d1.default:
                instance = localize("Default");
                break;

              case advancedSlicer_capabilities.d1.hover:
                instance = localize("Navigator_Hover_State");
                break;

              case advancedSlicer_capabilities.d1.press:
                instance = localize("Navigator_Press_State");
                break;

              case advancedSlicer_capabilities.d1.selected:
                instance = localize("FieldListProperty_Selected");
                break;

              case advancedSlicer_capabilities.VD.unselected:
                instance = localize("FieldListProperty_Unselected");
                break;

              case advancedSlicer_capabilities.VD.mixed:
                instance = localize("Mixed");
                break;

              case advancedSlicer_capabilities.P8.disabled:
                instance = localize("Disabled");
                break;

              case advancedSlicer_capabilities.P8.rest:
                instance = localize("Rest");
            }
            return instance;
        }
        var dataRoleHelper = __webpack_require__(38958), slicer_capabilities = __webpack_require__(9434), iconProps = {
            props: {
                icon: advancedSlicer_capabilities.yD.icon.icon,
                iconType: advancedSlicer_capabilities.yD.icon.iconType,
                iconUrl: advancedSlicer_capabilities.yD.icon.iconUrl,
                altText: advancedSlicer_capabilities.yD.icon.altText,
                padding: advancedSlicer_capabilities.yD.icon.padding,
                position: advancedSlicer_capabilities.yD.icon.position,
                show: advancedSlicer_capabilities.yD.icon.show,
                size: advancedSlicer_capabilities.yD.icon.size,
                transparency: advancedSlicer_capabilities.yD.icon.transparency
            }
        }, imageProps = {
            props: {
                image: advancedSlicer_capabilities.yD.image.image,
                imageFit: advancedSlicer_capabilities.yD.image.imageFit,
                transparency: advancedSlicer_capabilities.yD.image.transparency,
                position: advancedSlicer_capabilities.yD.image.position,
                ignorePadding: advancedSlicer_capabilities.yD.image.ignorePadding,
                setAsBackground: advancedSlicer_capabilities.yD.image.setAsBackGround,
                padding: advancedSlicer_capabilities.yD.image.padding,
                imageAreaSize: advancedSlicer_capabilities.yD.image.imageAreaSize,
                blur: advancedSlicer_capabilities.yD.image.blur,
                saturation: advancedSlicer_capabilities.yD.image.saturation
            }
        }, backgroundProps = {
            props: {
                show: advancedSlicer_capabilities.yD.background.show,
                transparency: advancedSlicer_capabilities.yD.background.transparency,
                wrapContent: advancedSlicer_capabilities.yD.background.wrapContent
            },
            colorProps: {
                color: advancedSlicer_capabilities.yD.background.color
            }
        }, selectionIconProps = {
            props: {
                show: advancedSlicer_capabilities.yD.selectionIcon.show,
                spacing: advancedSlicer_capabilities.yD.selectionIcon.spacing,
                transparency: advancedSlicer_capabilities.yD.selectionIcon.transparency,
                position: advancedSlicer_capabilities.yD.selectionIcon.position,
                size: advancedSlicer_capabilities.yD.selectionIcon.size
            },
            colorProps: {
                color: advancedSlicer_capabilities.yD.selectionIcon.color
            }
        };
        function convertValue(dataView, colorHelper, instances, defaults, props, overrides) {
            return void 0 === props && (props = tileLibraryConverter.xN), (0, tileLibraryConverter.BE)(instances, function(instance, defaultInstanceSettings) {
                var _a, _b = (0, tileLibraryConverter.Vv)(dataView, instance, defaults, overrides), objects = _b.objects, instanceDefaults = _b.instanceDefaults, instanceOverrides = _b.instanceOverrides, objectInstance = _b.objectInstance;
                return (0, tslib_es6.__assign)((0, tslib_es6.__assign)((0, tslib_es6.__assign)((0, 
                tslib_es6.__assign)((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, defaults.default), (0, 
                tileLibraryConverter.Yb)(objects, props.props, instanceDefaults, defaultInstanceSettings, objectInstance)), (0, 
                tileLibraryConverter.zP)(objects, colorHelper, props.fontProps, instanceDefaults, defaultInstanceSettings, objectInstance)), {
                    show: (0, dataViewObject2.NA)(dataView.metadata.objects, advancedSlicer_capabilities.yD.value.show, null !== (_a = null == instanceDefaults ? void 0 : instanceDefaults.show) && void 0 !== _a ? _a : defaults.default.show)
                }), null == overrides ? void 0 : overrides.default), instanceOverrides);
            });
        }
        function convertLabel(dataView, colorHelper, instanceIds, defaults, props, overrides) {
            return (0, tileLibraryConverter.BE)(instanceIds, function(instance, defaultInstanceSettings) {
                var _a = (0, tileLibraryConverter.Vv)(dataView, instance, defaults, overrides), objects = _a.objects, instanceDefaults = _a.instanceDefaults, instanceOverrides = _a.instanceOverrides, objectInstance = _a.objectInstance;
                return (0, tslib_es6.__assign)((0, tslib_es6.__assign)((0, tslib_es6.__assign)((0, 
                tslib_es6.__assign)((0, tslib_es6.__assign)({}, defaults.default), (0, tileLibraryConverter.Yb)(objects, props.props, instanceDefaults, defaultInstanceSettings, objectInstance)), (0, 
                tileLibraryConverter.zP)(objects, colorHelper, props.fontProps, instanceDefaults, defaultInstanceSettings, objectInstance)), null == overrides ? void 0 : overrides.default), instanceOverrides);
            });
        }
        function convertIcon(dataView, instanceIds, defaults, props) {
            return void 0 === props && (props = iconProps), (0, tileLibraryConverter.BE)(instanceIds, function(instanceId, defaultInstanceSettings) {
                var _a, _b, _c = (0, tileLibraryConverter.Vv)(dataView, instanceId, defaults), objects = _c.objects, instanceDefaults = _c.instanceDefaults, objectInstance = _c.objectInstance, iconProperties = (0, 
                tslib_es6.__assign)((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, defaults.default), (0, 
                tileLibraryConverter.Yb)(objects, props.props, instanceDefaults, defaultInstanceSettings, objectInstance)), {
                    show: (0, dataViewObject2.NA)(dataView.metadata.objects, advancedSlicer_capabilities.yD.icon.show, null !== (_a = null == instanceDefaults ? void 0 : instanceDefaults.show) && void 0 !== _a ? _a : defaults.default.show)
                });
                return "image" !== iconProperties.iconType || _.isEmpty(null === (_b = iconProperties.icon) || void 0 === _b ? void 0 : _b.url) || iconProperties.icon.scaling === imageScalingType.C.normal || null != iconProperties.size || (iconProperties.size = 50), 
                iconProperties;
            });
        }
        function convertBackground(dataView, colorHelper, instanceIds, defaults) {
            return (0, tileLibraryConverter.BE)(instanceIds, function(instanceId, defaultInstanceSettings) {
                var _a = (0, tileLibraryConverter.Vv)(dataView, instanceId, defaults), objects = _a.objects, instanceDefaults = _a.instanceDefaults, objectInstance = _a.objectInstance;
                return (0, tslib_es6.__assign)((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, defaults.default), (0, 
                tileLibraryConverter.Yb)(objects, backgroundProps.props, instanceDefaults, defaultInstanceSettings, objectInstance)), (0, 
                tileLibraryConverter.Cu)(objects, colorHelper, backgroundProps.colorProps, instanceDefaults, defaultInstanceSettings, objectInstance));
            });
        }
        function convertImage(dataView, instanceIds, defaults, disableTopBottomPosition) {
            return (0, tileLibraryConverter.BE)(instanceIds, function(instanceId, defaultInstanceSettings) {
                var _a, _b = (0, tileLibraryConverter.Vv)(dataView, instanceId, defaults), objects = _b.objects, instanceDefaults = _b.instanceDefaults, objectInstance = _b.objectInstance, imageProperties = (0, 
                tslib_es6.__assign)((0, tslib_es6.__assign)({}, defaults.default), (0, tileLibraryConverter.Yb)(objects, imageProps.props, instanceDefaults, defaultInstanceSettings, objectInstance));
                return (disableTopBottomPosition && imageProperties.position === legendPosition.zw.top || imageProperties.position === legendPosition.zw.bottom) && (imageProperties.position = null !== (_a = null == defaultInstanceSettings ? void 0 : defaultInstanceSettings.position) && void 0 !== _a ? _a : instanceDefaults.position), 
                imageProperties;
            });
        }
        function convertSelectionIcon(dataView, colorHelper, instanceIds, defaults, props) {
            return void 0 === props && (props = selectionIconProps), (0, tileLibraryConverter.BE)(instanceIds, function(instanceId, defaultInstanceSettings) {
                var _a, _b = (0, tileLibraryConverter.Vv)(dataView, instanceId, defaults), objects = _b.objects, instanceDefaults = _b.instanceDefaults, objectInstance = _b.objectInstance;
                return (0, tslib_es6.__assign)((0, tslib_es6.__assign)((0, tslib_es6.__assign)((0, 
                tslib_es6.__assign)({}, defaults.default), (0, tileLibraryConverter.Yb)(objects, props.props, instanceDefaults, defaultInstanceSettings, objectInstance)), (0, 
                tileLibraryConverter.Cu)(objects, colorHelper, props.colorProps, instanceDefaults, defaultInstanceSettings, objectInstance)), {
                    show: (0, dataViewObject2.NA)(dataView.metadata.objects, advancedSlicer_capabilities.yD.selectionIcon.show, null !== (_a = null == instanceDefaults ? void 0 : instanceDefaults.show) && void 0 !== _a ? _a : defaults.default.show)
                });
            });
        }
        var tileLibraryEnumerationHelper = __webpack_require__(89088), CssConstants = __webpack_require__(79154), build_control_util = __webpack_require__(56578), loadMoreDataHandler = __webpack_require__(60810), enums = __webpack_require__(46135), tileLibraryTile = __webpack_require__(49366), htmlSubSelectionHelper = __webpack_require__(52287), color = __webpack_require__(64067), textMeasurementService = __webpack_require__(32041), urlUtils = __webpack_require__(48066), Utility = __webpack_require__(38078), wordBreaker = __webpack_require__(66001), ContentOuterContainerSelector = (0, 
        CssConstants.CH)("contentOuterContainer"), ContentTableSelector = (0, CssConstants.CH)("contentTable"), ContentTableCellSelector = (0, 
        CssConstants.CH)("contentTableCell"), ContentContainerSelector = (0, CssConstants.CH)("contentContainer"), ContentTextContainerSelector = (0, 
        CssConstants.CH)("contentTextContainer"), ContentImageContainerSelector = (0, CssConstants.CH)("contentImageContainer"), ContentImageBackgroundSelector = (0, 
        CssConstants.CH)("contentImageBackground"), ContentTextBackgroundSelector = (0, 
        CssConstants.CH)("contentTextBackground"), ContentIconContainerSelector = (0, CssConstants.CH)("contentIconContainer"), ContentSelector = (0, 
        CssConstants.CH)("content"), TextSelector = (0, CssConstants.CH)("text"), ButtonTextSelector = (0, 
        CssConstants.CH)("ui-role-button-text"), SelectedSelector = (0, CssConstants.CH)("selected"), ButtonSlicerContentRenderer = function() {
            function ButtonSlicerContentRenderer() {}
            return ButtonSlicerContentRenderer.renderButtonSlicerContent = function(element, textProps, isSelected, layoutProp, spacingProp, dimensions, paddingProps, iconProps, backgroundProps, imageProps, imageUrl, outlineProp, labelSettings, shapePath) {
                void 0 === isSelected && (isSelected = !1);
                var textPropsToShow = [];
                _.forEach(textProps, function(textProp) {
                    textProp.props.show && textPropsToShow.push(textProp);
                }), function(element, contents, isSelected) {
                    contents[0].shapePath && element.select(".background-image").style("clip-path", 'path("'.concat(contents[0].shapePath, '")')), 
                    element.selectAll(ContentOuterContainerSelector.selector).data(contents).join(function(enter) {
                        return function(element, isSelected) {
                            var contentOuterContainer = element.append("xhtml:div").classed(ContentOuterContainerSelector.class, !0);
                            return contentOuterContainer.append("xhtml:div").classed(ContentTableSelector.class, !0).append("xhtml:div").classed(ContentTableCellSelector.class, !0).append("xhtml:div").classed(ContentContainerSelector.class, !0).append("xhtml:div").classed(ContentTextContainerSelector.class, !0), 
                            updateButtonSlicerContents(contentOuterContainer, isSelected), contentOuterContainer;
                        }(enter, isSelected);
                    }, function(update) {
                        return updateButtonSlicerContents(update, isSelected);
                    });
                }(element, [ {
                    main: textPropsToShow,
                    layoutProp,
                    spacingProp,
                    dimensionsProps: dimensions,
                    paddingProps,
                    iconProps,
                    backgroundProps,
                    imageProps,
                    imageUrl,
                    textSettings: labelSettings,
                    outlineProp,
                    shapePath
                } ], isSelected);
            }, ButtonSlicerContentRenderer.alignBaselines = function(element) {
                return function(element) {
                    var buttonSliceContent = element.selectAll(ContentOuterContainerSelector.selector);
                    if (buttonSliceContent.empty()) return !1;
                    var buttonSliceDatum = buttonSliceContent.datum();
                    if (null == buttonSliceDatum) return !1;
                    var buttonSliceLabelData = _.find(buttonSliceDatum.main, function(textContent) {
                        return "label" === textContent.type;
                    }), textContainers = element.selectAll(ContentTextContainerSelector.selector);
                    if (null == buttonSliceLabelData ? void 0 : buttonSliceLabelData.props.alignBaselines) {
                        var topTextElements = textContainers.selectAll("".concat(TextSelector.selector, ".top")), maxHeight_1 = 0;
                        if (topTextElements.each(function(d) {
                            debug.fF.assertValue(d.estimatedHeight, "expected estimatedHeight to be set during rendering"), 
                            maxHeight_1 = Math.max(maxHeight_1, d.estimatedHeight);
                        }), maxHeight_1 > 0) return textContainers.style("grid-template-rows", "".concat(maxHeight_1, "px auto")), 
                        !0;
                        maxHeight_1 < 0 && debug.fF.assertFail("got a maximum estimated height that was not positive: " + maxHeight_1);
                    }
                    return textContainers.style("grid-template-rows", null), !1;
                }(element);
            }, ButtonSlicerContentRenderer;
        }();
        function updateButtonSlicerContents(contentOuterContainers, isSelected) {
            return contentOuterContainers.each(function(contents) {
                var image, backgroundImage, horizontalAlignment = "start", contentOuterContainer = d3.select(this), alignment = contents.layoutProp, dimensions = contents.dimensionsProps, verticalSpacing = contents.spacingProp.verticalSpacing, padding = contents.paddingProps, icon = contents.iconProps, outlineProp = contents.outlineProp;
                if (!_.isEmpty(contents.imageUrl)) {
                    var data = {
                        properties: contents.imageProps,
                        value: contents.imageUrl,
                        padding
                    };
                    icon = void 0, contents.imageProps.setAsBackground ? backgroundImage = data : image = data;
                }
                var valueProp = contents.main.find(function(type) {
                    return "value" === type.type;
                }), labelProp = contents.main.find(function(type) {
                    return "label" === type.type;
                }), hasText = !_.isEmpty(contents.main), hasTextWrapped = _.some(contents.main, function(text) {
                    return text.props.textWrap;
                });
                contentOuterContainer.styles({
                    left: "".concat(dimensions.left + outlineProp.strokeWidth, "px"),
                    top: "".concat(dimensions.top + outlineProp.strokeWidth, "px"),
                    width: "".concat(dimensions.width - 2 * outlineProp.strokeWidth, "px"),
                    height: "".concat(dimensions.height - 2 * outlineProp.strokeWidth, "px")
                }), contents.shapePath && contentOuterContainer.style("clip-path", 'path("'.concat(contents.shapePath, '")'));
                var imagePosition, contentTableCell = contentOuterContainer.select(ContentTableCellSelector.selector).styles({
                    "vertical-align": alignment.verticalAlignment,
                    "border-left": "",
                    "border-right": "",
                    "border-top": "",
                    "border-bottom": ""
                });
                valueProp && (horizontalAlignment = (horizontalAlignment = valueProp.props.horizontalAlignment) === horizontalPosition.D.left ? "start" : horizontalAlignment === horizontalPosition.D.right ? "end" : "center");
                var imagePadding = 0, contentContainer = contentTableCell.select(ContentContainerSelector.selector);
                _.isEmpty(contents.imageUrl) ? hasValidIcon(icon) && (imagePosition = icon.position, 
                imagePadding = icon.padding) : contents.imageProps.setAsBackground || (imagePosition = contents.imageProps.position, 
                imagePadding = contents.imageProps.padding);
                var verticalAlignment = function(alignment) {
                    switch (alignment) {
                      case verticalPosition.Q4.top:
                        return "start";

                      case verticalPosition.Q4.middle:
                        return "center";

                      case verticalPosition.Q4.bottom:
                        return "end";
                    }
                }(alignment.verticalAlignment);
                contentContainer.styles(function(valueProps, imagePosition, imagePadding, verticalAlignment) {
                    var alignment = function(horizontalAlignment, flip, iconPosition) {
                        switch (horizontalAlignment) {
                          case horizontalPosition.D.left:
                            return iconPosition === legendPosition.zw.right ? "space-between" : flip ? "flex-end" : "flex-start";

                          case horizontalPosition.D.center:
                            return "center";

                          case horizontalPosition.D.right:
                            return iconPosition === legendPosition.zw.left ? "space-between" : flip ? "flex-start" : "flex-end";
                        }
                        return "flex-start";
                    }, alignItems = verticalAlignment, flexDirection = "row", horizontalAlignment = (null == valueProps ? void 0 : valueProps.horizontalAlignment) || horizontalPosition.D.left, justifyContent = alignment(horizontalAlignment);
                    if (null != imagePosition) switch (imagePosition) {
                      case legendPosition.zw.left:
                        justifyContent = alignment(horizontalAlignment, !0, imagePosition), alignItems = verticalAlignment, 
                        flexDirection = "row-reverse";
                        break;

                      case legendPosition.zw.right:
                        justifyContent = alignment(horizontalAlignment, !1, imagePosition), alignItems = verticalAlignment, 
                        flexDirection = "row";
                        break;

                      case legendPosition.zw.top:
                        alignItems = alignment(horizontalAlignment), flexDirection = "column-reverse";
                        break;

                      case legendPosition.zw.bottom:
                        alignItems = alignment(horizontalAlignment), flexDirection = "column";
                        break;

                      default:
                        debug.fF.assertNever(imagePosition), justifyContent = "flex-start", flexDirection = "row";
                    }
                    return {
                        "justify-content": justifyContent,
                        "flex-direction": flexDirection,
                        "align-items": alignItems,
                        gap: "".concat(imagePadding, "px")
                    };
                }(null == valueProp ? void 0 : valueProp.props, imagePosition, imagePadding, verticalAlignment));
                var hasAreaSize = function(container, image, padding, hasText, hasTextWrapped) {
                    var hasAreaSize = !1, imageContainer = container.selectAll(ContentImageContainerSelector.selector).data(image ? [ image ] : [], function(d) {
                        return d.value;
                    });
                    if (imageContainer.exit().remove(), !image) return hasAreaSize;
                    hasAreaSize = image && (hasTextWrapped || hasText && ("Left" === (null == image ? void 0 : image.properties.position) || "Right" === (null == image ? void 0 : image.properties.position)));
                    var categoryImagePadding = padding;
                    return image.properties.ignorePadding && (categoryImagePadding = {
                        topMargin: 0,
                        leftMargin: 0,
                        bottomMargin: 0,
                        rightMargin: 0,
                        paddingSelection: null
                    }), imageContainer.enter().append("div").merge(imageContainer).attr("class", ContentImageContainerSelector.class).style("flex-grow", hasAreaSize ? "0" : "1").style("flex-basis", hasAreaSize ? "".concat(image.properties.imageAreaSize, "%") : "0").style("display", "flex").style("align-self", "stretch").call(styleButtonSlicerImage).call(function(element) {
                        return applyImagePaddings(element, null == image ? void 0 : image.properties.position, categoryImagePadding, hasText);
                    }), hasAreaSize;
                }(contentContainer, image, padding, hasText, hasTextWrapped);
                !function(container, icon, padding, hasText) {
                    var hasIcon = hasValidIcon(icon);
                    container.selectAll(ContentIconContainerSelector.selector).data(hasIcon ? [ icon ] : []).join("div").attr("class", ContentIconContainerSelector.class).call(styleButtonSlicerIcon).call(function(element) {
                        return hasIcon && applyImagePaddings(element, icon.position, padding, hasText);
                    });
                }(contentContainer, icon, padding, hasText), function(container, backgroundImage, padding) {
                    var data = backgroundImage ? [ backgroundImage ] : [];
                    container.selectAll(ContentImageBackgroundSelector.selector).data(data).join("div").attr("class", ContentImageBackgroundSelector.class).call(function(element) {
                        return backgroundImage && styleImageContainer(element, backgroundImage);
                    }).call(function(element) {
                        backgroundImage && !backgroundImage.properties.ignorePadding ? element.style("left", "".concat(padding.leftMargin, "px")).style("top", "".concat(padding.topMargin, "px")).style("height", "calc(100% - ".concat(padding.bottomMargin + padding.topMargin, "px)")).style("width", "calc(100% - ".concat(padding.rightMargin + padding.leftMargin, "px)")) : element.style("left", "0px").style("top", "0px").style("height", "100%").style("width", "100%");
                    });
                }(contentTableCell, backgroundImage, padding);
                var shouldStretchTextContainer = backgroundImage && contents.backgroundProps.show && !contents.backgroundProps.wrapContent, contentTextContainer = contentContainer.select(ContentTextContainerSelector.selector).styles({
                    "justify-content": hasAreaSize ? verticalAlignment : horizontalAlignment,
                    gap: "".concat(_.size(contents.main) > 1 ? verticalSpacing : 0, "px"),
                    "flex-basis": hasAreaSize ? "".concat(100 - image.properties.imageAreaSize, "%") : "content",
                    "flex-grow": shouldStretchTextContainer ? "1" : "0",
                    "align-items": horizontalAlignment
                }).style("margin-top", "Top" === imagePosition ? 0 : "".concat(padding.topMargin, "px")).style("margin-left", "Left" === imagePosition ? 0 : "".concat(padding.leftMargin, "px")).style("margin-right", "Right" === imagePosition ? 0 : "".concat(padding.rightMargin, "px")).style("margin-bottom", "Bottom" === imagePosition ? 0 : "".concat(padding.bottomMargin, "px")).classed("hidden", !hasText), textContents = _.reduce(contents.main, function(obj, content) {
                    if ("value" === content.type || "label" === content.type) {
                        var textContent = {
                            type: content.type,
                            props: content.props
                        };
                        "label" === content.type ? (textContent.value = contents.textSettings.labelText, 
                        textContent.fontColor = contents.textSettings.labelFontColor) : textContent.fontColor = contents.textSettings.valueFontColor, 
                        obj.textContents.push(textContent);
                    }
                    return obj;
                }, {
                    textContents: []
                }).textContents, effectiveWidth = dimensions.width - (padding.leftMargin + padding.rightMargin), effectiveHeight = dimensions.height - (padding.topMargin + padding.bottomMargin);
                !function(container, backgroundProperties, hasBackgroundImage) {
                    var data = hasBackgroundImage && backgroundProperties.show ? [ backgroundProperties ] : [];
                    container.selectAll(ContentTextBackgroundSelector.selector).data(data).join("div").classed(ContentTextBackgroundSelector.class, !0).classed("wrap", backgroundProperties.wrapContent).style("opacity", (0, 
                    color.TD)(backgroundProperties.transparency)).style("background-color", backgroundProperties.color);
                }(contentTextContainer, contents.backgroundProps, void 0 !== backgroundImage), contentTextContainer.selectAll(TextSelector.selector).data(textContents).join(function(enter) {
                    return function(element, isSelected, width, height, horizontalAlignment, labelPosition) {
                        var text = element.append("div").classed(ContentSelector.class, !0).classed(TextSelector.class, !0).classed(ButtonTextSelector.class, !0);
                        return updateButtonSlicerText(text, isSelected, width, height, horizontalAlignment, labelPosition), 
                        text;
                    }(enter, isSelected, effectiveWidth, effectiveHeight, null == valueProp ? void 0 : valueProp.props.horizontalAlignment, null == labelProp ? void 0 : labelProp.props.position);
                }, function(update) {
                    return updateButtonSlicerText(update, isSelected, effectiveWidth, effectiveHeight, null == valueProp ? void 0 : valueProp.props.horizontalAlignment, null == labelProp ? void 0 : labelProp.props.position);
                });
            }), contentOuterContainers;
        }
        function hasValidIcon(iconProps) {
            var _a;
            if (!iconProps) return !1;
            switch (iconProps.iconType) {
              case imageType._.image:
                return iconProps.show && !_.isEmpty(null === (_a = iconProps.icon) || void 0 === _a ? void 0 : _a.url);

              case imageType._.imageUrl:
                return iconProps.show && ((0, urlUtils.gU)(iconProps.iconUrl) || (0, urlUtils.pU)(iconProps.iconUrl));

              default:
                debug.fF.assertNever(iconProps.iconType);
            }
            return !1;
        }
        function styleButtonSlicerImage(element) {
            if (!element.empty()) {
                var imageContent = element.datum();
                styleImageContainer(element.selectAll("div").data(function(d) {
                    return [ d ];
                }).join("div"), imageContent);
            }
        }
        function applyImagePaddings(element, imagePosition, padding, hasText) {
            element.style("margin-top", hasText && "Bottom" === imagePosition ? 0 : "".concat(padding.topMargin, "px")).style("margin-left", hasText && "Right" === imagePosition ? 0 : "".concat(padding.leftMargin, "px")).style("margin-right", hasText && "Left" === imagePosition ? 0 : "".concat(padding.rightMargin, "px")).style("margin-bottom", hasText && "Top" === imagePosition ? 0 : "".concat(padding.bottomMargin, "px"));
        }
        function styleImageContainer(container, data) {
            var image;
            data && !_.isEmpty(data.value) && container.style("background-image", "url(".concat((image = data, 
            image && Utility.b$.encodeUriForImageDataSvg(image.value)), ")")).style("background-repeat", "no-repeat").style("background-position", "center").style("flex-grow", "1").style("background-size", function(d) {
                switch (data.properties.imageFit) {
                  case imageScalingType.C.fit:
                    return "100% 100%";

                  case imageScalingType.C.fill:
                    return "cover";

                  default:
                    return "contain";
                }
            }).style("opacity", (0, color.TD)(data.properties.transparency)).style("filter", "saturate(".concat(data.properties.saturation / 100, ") blur(").concat(data.properties.blur / 10, "px)"));
        }
        function styleButtonSlicerIcon(element) {
            var getIconSource = function(icon) {
                switch (icon.iconType) {
                  case imageType._.image:
                    return Utility.b$.encodeUriForImageDataSvg(icon.icon.url);

                  case imageType._.imageUrl:
                    return Utility.b$.encodeUriForImageDataSvg(icon.iconUrl);

                  default:
                    debug.fF.assertNever(icon.iconType);
                }
            }, imageIsStretched = function(image) {
                var _a;
                return "image" === image.iconType && (null === (_a = image.icon) || void 0 === _a ? void 0 : _a.scaling) !== imageScalingType.C.normal;
            };
            element.selectAll("img").data(function(d) {
                return imageIsStretched(d) ? [] : [ d ];
            }).join("img").attr("src", getIconSource).attr("referrerpolicy", "no-referrer").attr("alt-text", function(d) {
                return d.altText;
            }).style("max-width", function(d) {
                return null == d.size ? "calc(100% - ".concat(2 * d.padding, "px)") : null;
            }).style("width", function(d) {
                return null == d.size ? null : "".concat(d.size, "px");
            }).style("max-height", function(d) {
                return null == d.size ? null : "".concat(d.size, "px");
            }).style("height", function(d) {
                return null == d.size ? "auto" : null;
            }).style("opacity", function(d) {
                return (0, color.TD)(d.transparency);
            }), element.selectAll("div").data(function(d) {
                return imageIsStretched(d) ? [ d ] : [];
            }).join("div").style("height", function(d) {
                return null == d.size ? "50px" : "".concat(d.size, "px");
            }).style("width", function(d) {
                return null == d.size ? "50px" : "".concat(d.size, "px");
            }).style("background-image", function(d) {
                return "url(".concat(getIconSource(d), ")");
            }).style("background-size", function(d) {
                switch (d.icon.scaling) {
                  case imageScalingType.C.fit:
                    return "100% 100%";

                  case imageScalingType.C.fill:
                    return "cover";

                  default:
                    return "contain";
                }
            }).style("opacity", function(d) {
                return (0, color.TD)(d.transparency);
            });
        }
        function updateButtonSlicerText(textElement, isSelected, width, height, horizontalAlignment, labelPosition) {
            return textElement.attr("style", null), textElement.styles(function(d) {
                var _a = d.props, text = _a.text, fontProperties = _a.fontProperties, transparency = _a.transparency, textWrap = _a.textWrap;
                "label" === d.type && (text = d.value), d.fontColor && (fontProperties = {
                    color: d.fontColor,
                    family: fontProperties.family,
                    size: fontProperties.size,
                    style: fontProperties.style,
                    variant: fontProperties.variant,
                    weight: fontProperties.weight,
                    whiteSpace: fontProperties.whiteSpace,
                    textDecoration: fontProperties.textDecoration,
                    lineHeight: fontProperties.lineHeight
                });
                var textProperties = (0, common_fontProperties.qk)(fontProperties), textHeight = textMeasurementService.b.estimateSvgTextHeight(textProperties);
                textProperties.text = text;
                var linesBroken = 1;
                if (textWrap) {
                    var maxNumLines = Math.trunc(height / 2 / textHeight) || 1;
                    linesBroken = (0, wordBreaker.ql)(text, textProperties, textMeasurementService.b.measureSvgTextWidth, width, maxNumLines).length || 1;
                }
                return d.estimatedHeight = linesBroken * textHeight, (0, tslib_es6.__assign)((0, 
                tslib_es6.__assign)({}, (0, common_fontProperties.wB)(fontProperties)), {
                    opacity: (0, color.TD)(transparency),
                    "text-align": horizontalAlignment,
                    display: "-webkit-box",
                    "-webkit-line-clamp": linesBroken,
                    "-webkit-box-orient": "vertical",
                    overflow: "hidden"
                });
            }).classed(htmlSubSelectionHelper.cy, !0).attr(htmlSubSelectionHelper.Ez, function(d) {
                return "label" === d.type ? "".concat("callout-label", "_").concat(d.props.instanceId) : "".concat("callout-value", "_").concat(d.props.instanceId);
            }).attr(htmlSubSelectionHelper.CK, function(d) {
                return "label" === d.type ? "Visual_Gauge_CalloutLabel" : "Visual_Gauge_CalloutValue";
            }).attr(htmlSubSelectionHelper.QZ, function(d) {
                return "label" === d.type ? 1 : 2;
            }).classed(SelectedSelector.class, isSelected).classed("top", function(d) {
                return isTopClass(labelPosition, d.type);
            }).classed("bottom", function(d) {
                return !isTopClass(labelPosition, d.type);
            }).text(function(d) {
                return "label" === d.type ? d.value : d.props.text;
            }), textElement;
        }
        function isTopClass(labelPosition, type) {
            return "belowValue" === labelPosition && "value" === type || "aboveValue" === labelPosition && "label" === type;
        }
        var ButtonSlicerTile = function(_super) {
            function ButtonSlicerTile(hostServices, selectionHandler) {
                var _this = _super.call(this, !0) || this;
                return _this.hostServices = hostServices, _this.selectionHandler = selectionHandler, 
                _this.tiles = [], _this;
            }
            return (0, tslib_es6.__extends)(ButtonSlicerTile, _super), Object.defineProperty(ButtonSlicerTile.prototype, "cursor", {
                get: function() {
                    return "pointer";
                },
                enumerable: !1,
                configurable: !0
            }), ButtonSlicerTile.prototype.beforeRender = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var hasSelection, isInverted;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        return hasSelection = this.selectionHandler.hasSelection(), isInverted = this.selectionHandler.isSelectionModeInverted(), 
                        this.selected = !hasSelection && isInverted, this.buttonSlicerMetadata.isSelectAllDataPoint || (this.selected = this.selected || hasSelection && (0, 
                        slicerUtil1.OO)(this.buttonSlicerMetadata, isInverted)), this.selected ? this.state = advancedSlicer_capabilities.d1.selected : this.state !== advancedSlicer_capabilities.d1.selected && this.state || (this.state = advancedSlicer_capabilities.d1.default), 
                        [ 2 ];
                    });
                });
            }, ButtonSlicerTile.prototype.afterRender = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var state, valueProps, labelProps, colorsSettings, dimensions, spacingProps, paddingProps, iconProps, backgroundProps, outlineProps, imageProps, props;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        return (valueProps = this.contentProperties.text[state = this.state]).text = this.buttonSlicerMetadata.value, 
                        labelProps = (0, tslib_es6.__assign)({}, this.contentProperties.label[state]), _.isEmpty(labelProps.text) && (labelProps.text = this.displayName), 
                        labelProps.instanceId = valueProps.instanceId = state, colorsSettings = this.colorsByInstance[state], 
                        dimensions = this.getContentInscribedRectangle(valueProps.rotation), spacingProps = (0, 
                        tslib_es6.__assign)({}, this.spacingProperties[state]), paddingProps = (0, tslib_es6.__assign)({}, this.paddingProperties[state]), 
                        iconProps = (0, tslib_es6.__assign)({}, this.buttonSlicerProperties.icon[state]), 
                        backgroundProps = (0, tslib_es6.__assign)({}, this.buttonSlicerProperties.background[state]), 
                        outlineProps = (0, tslib_es6.__assign)({}, this.outlineProperties[state]), imageProps = (0, 
                        tslib_es6.__assign)({}, this.imageProperties.image[state]), (props = [ {
                            type: "value",
                            props: (0, tslib_es6.__assign)({}, valueProps)
                        } ]).push({
                            type: "label",
                            props: (0, tslib_es6.__assign)({}, labelProps)
                        }), ButtonSlicerContentRenderer.renderButtonSlicerContent(this.element, props, this.selected, this.layoutProperties, spacingProps, dimensions, paddingProps, iconProps, backgroundProps, imageProps, _.isEmpty(imageProps.image) ? this.buttonSlicerMetadata.imageUrl : imageProps.image, outlineProps, (0, 
                        tslib_es6.__assign)({
                            labelText: this.buttonSlicerMetadata.label
                        }, colorsSettings), this.getAdjustedShapePath()), [ 2 ];
                    });
                });
            }, ButtonSlicerTile.prototype.onTileKeydown = function() {
                var event = d3.event;
                " " !== event.key && "Enter" !== event.key || this.tileAction();
            }, ButtonSlicerTile.prototype.onTileClick = function() {
                var event = d3.event;
                this.tileAction(event);
            }, ButtonSlicerTile.prototype.tileAction = function(event) {
                if (!this.buttonSlicerMetadata.disabled) {
                    var position;
                    if (event) position = {
                        x: event.clientX,
                        y: event.clientY
                    }; else {
                        var rect = this.element.node().getBoundingClientRect();
                        position = {
                            x: rect.x,
                            y: rect.y
                        };
                    }
                    this.buttonSlicerMetadata.isSelectAllDataPoint ? (this.selectionHandler.toggleSelectionModeInversion(), 
                    this.selectionHandler.persistSelectionFilter(slicer_capabilities.gO.general.filter)) : this.selectionHandler.handleSelection(this.buttonSlicerMetadata, this.slicerSettings.selection.singleSelect ? 0 : 3, position) && this.selectionHandler.persistSelectionFilter(slicer_capabilities.gO.general.filter);
                }
            }, ButtonSlicerTile.prototype.onTilePointerover = function() {
                this.renderWithState(advancedSlicer_capabilities.d1.hover);
            }, ButtonSlicerTile.prototype.onTilePointerleave = function() {
                this.renderWithState(advancedSlicer_capabilities.d1.default);
            }, ButtonSlicerTile.prototype.onTilePointerdown = function() {
                this.renderWithState(advancedSlicer_capabilities.d1.press);
            }, ButtonSlicerTile.prototype.onTilePointerup = function() {
                this.renderWithState(advancedSlicer_capabilities.d1.hover);
            }, ButtonSlicerTile.prototype.renderWithState = function(state) {
                this.selected || (this.state = state, this.beforeRender(), this.renderWithoutLifecycleEvents(), 
                this.afterRender());
            }, ButtonSlicerTile;
        }(tileLibraryTile.n), ButtonSlicerTiles = function() {
            function ButtonSlicerTiles() {
                this.tiles = [];
            }
            return ButtonSlicerTiles.prototype.setBuildTile = function(buildTile) {
                this.buildTile = buildTile;
            }, ButtonSlicerTiles.prototype.get = function(index) {
                var tile = this.tiles[index];
                return tile || (tile = this.tiles[index] = this.buildTile()), tile;
            }, ButtonSlicerTiles.prototype.update = function() {
                for (var _i = 0, _a = this.tiles; _i < _a.length; _i++) {
                    var tile = _a[_i];
                    tile && tile.update();
                }
            }, ButtonSlicerTiles;
        }(), tooltipService = __webpack_require__(40739), gridLayout = __webpack_require__(32476), slicerSearchInput = __webpack_require__(82085), slicerBehaviors = __webpack_require__(62224), gridLineType = __webpack_require__(49511), ButtonSlicerTilesLayout = function() {
            function ButtonSlicerTilesLayout(container, loadMoreHandler, hostServices, featureSwitches) {
                this.container = container, this.featureSwitches = featureSwitches, this.searchComponent = new slicerSearchInput.v(hostServices);
                var layoutContainer = document.createElement("div");
                layoutContainer.className = "button-slicer-container", this.layoutContainer = jQuery(layoutContainer), 
                container.append(layoutContainer), this.searchComponent.create(d3.select(layoutContainer)), 
                this.gridLayout = new gridLayout.Me(this.layoutContainer, loadMoreHandler, !0, void 0, void 0, void 0, this.featureSwitches);
            }
            return ButtonSlicerTilesLayout.prototype.destroy = function() {
                this.gridLayout.destroy();
            }, ButtonSlicerTilesLayout.prototype.clear = function() {
                this.layoutContainer.hide();
            }, ButtonSlicerTilesLayout.prototype.clearSearch = function() {
                this.searchComponent.clearSearchText();
            }, ButtonSlicerTilesLayout.prototype.render = function(options, selectionHandler) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var _renderCell, layoutProps, layoutOptions, customizePadding, cellPadding, viewport, settings, emptyMargin, calculatedCellDimensions, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return this.layoutContainer.show(), _renderCell = function(data) {
                                return (0, tslib_es6.__awaiter)(_this, void 0, void 0, function() {
                                    return (0, tslib_es6.__generator)(this, function(_a) {
                                        switch (_a.label) {
                                          case 0:
                                            return [ 4, options.renderCell(data, options.buttonSlicerTilesFactory, options.cells[data.index]) ];

                                          case 1:
                                            return [ 2, _a.sent() ];
                                        }
                                    });
                                });
                            }, layoutProps = options.buttonSlicerVisualData.layout, layoutOptions = this.getButtonSlicerVisualLayoutOptions(options.buttonSlicerVisualData.layout, options.cells.length, options.layoutUpdate), 
                            cellPadding = this.createCellPadding((customizePadding = layoutProps.customizePadding) && layoutProps.orientation === navigatorOrientation.Bz.Grid ? layoutProps.columnPadding : layoutProps.cellPadding, customizePadding && layoutProps.orientation === navigatorOrientation.Bz.Grid ? layoutProps.rowPadding : layoutProps.cellPadding), 
                            viewport = this.updateSearchInput(options, selectionHandler, options.buttonSlicerVisualData.overFlow, cellPadding), 
                            settings = {
                                rowCount: layoutOptions.rowCount,
                                columnCount: layoutOptions.columnCount,
                                cellCount: options.cells.length,
                                renderCell: function(data) {
                                    return (0, tslib_es6.__awaiter)(_this, void 0, void 0, function() {
                                        return (0, tslib_es6.__generator)(this, function(_a) {
                                            switch (_a.label) {
                                              case 0:
                                                return [ 4, _renderCell(data) ];

                                              case 1:
                                                return _a.sent(), [ 2 ];
                                            }
                                        });
                                    });
                                },
                                renderCellSubheader: function() {
                                    return (0, tslib_es6.__awaiter)(_this, void 0, void 0, function() {
                                        return (0, tslib_es6.__generator)(this, function(_a) {
                                            return [ 2 ];
                                        });
                                    });
                                },
                                viewport,
                                headerMargins: ButtonSlicerTilesLayout.getEmptyMargins(),
                                renderHeader: function() {},
                                subheaderHeight: 0,
                                subheaderLineHeight: 0,
                                subheaderPosition: 0,
                                shouldResetScrollPosition: !1,
                                cellPadding,
                                outerPadding: ButtonSlicerTilesLayout.getEmptyMargins(),
                                scrollPadding: 5,
                                getCellBackgroundColor: function() {
                                    return null;
                                },
                                backgroundTransparency: 100,
                                subheaderShow: !1,
                                getAllCells: void 0,
                                manageTabIndexOnRowHeaderFooter: void 0,
                                boldedSubheaders: void 0,
                                isHorizontal: options.buttonSlicerVisualData.overFlow.overFlowDirection === overFlowDirection.m.Horizontal,
                                isPaginated: options.buttonSlicerVisualData.overFlow.overFlowStyle === overFlowStyle.a.Paginated
                            }, this.updateSettingsForTableLayout(settings, layoutOptions), this.gridLayout.update(settings), 
                            emptyMargin = this.createCellPadding(0, 0), calculatedCellDimensions = this.gridLayout.calculateCellDimensions(emptyMargin, void 0), 
                            [ 4, this.gridLayout.render({
                                calculatedCellDimensions
                            }) ];

                          case 1:
                            return _a.sent(), [ 2 ];
                        }
                    });
                });
            }, ButtonSlicerTilesLayout.prototype.updateSettingsForTableLayout = function(settings, layoutOptions) {
                var gridLineSettings, borderSettings, background;
                return layoutOptions.style === layoutStyleType.i.Table ? (gridLineSettings = (0, 
                tslib_es6.__assign)((0, tslib_es6.__assign)({}, layoutOptions.customizeLines ? layoutOptions.gridline : layoutOptions.line), {
                    region: gridLineType.o.inner
                }), borderSettings = (0, tslib_es6.__assign)({}, layoutOptions.customizeLines ? layoutOptions.border : layoutOptions.line), 
                layoutOptions.backgroundShow && (background = {
                    color: layoutOptions.backgroundFillColor,
                    colorTransparency: layoutOptions.backgroundTransparency,
                    image: layoutOptions.backgroundImage,
                    imageTransparency: layoutOptions.backgroundImageTransparency
                }), borderSettings.radius = layoutOptions.rectangleRoundedCurveCustomStyle ? {
                    topLeft: layoutOptions.rectangleRoundedCurveLeftTop,
                    topRight: layoutOptions.rectangleRoundedCurveRightTop,
                    bottomLeft: layoutOptions.rectangleRoundedCurveLeftBottom,
                    bottomRight: layoutOptions.rectangleRoundedCurveRightBottom
                } : {
                    topLeft: layoutOptions.rectangleRoundedCurve,
                    topRight: layoutOptions.rectangleRoundedCurve,
                    bottomLeft: layoutOptions.rectangleRoundedCurve,
                    bottomRight: layoutOptions.rectangleRoundedCurve
                }, settings.cellPadding = this.createCellPadding(0, 0)) : settings.noExtraPadding = !0, 
                settings.borderSettings = borderSettings, settings.background = background, settings.gridLineSettings = gridLineSettings, 
                settings;
            }, ButtonSlicerTilesLayout.prototype.updateSearchInput = function(options, selectionHandler, overFlow, cellPadding) {
                var _a, bottomMargin = 0;
                overFlow.overFlowDirection !== overFlowDirection.m.Horizontal && overFlow.overFlowStyle === overFlowStyle.a.Paginated || (bottomMargin = cellPadding.bottom);
                var viewport = options.viewport, data = options.data, slicerSettings = data.slicerSettings, searchEnabled = options.buttonSlicerVisualData.hasSearchableData && slicerSettings.search.enabled, searchSettings = slicerSearchInput.v.fromSlicerSettings(slicerSettings, data.searchKey || "", searchEnabled, !1, this.featureSwitches);
                return searchSettings && (searchSettings.bottomMargin = bottomMargin), this.searchComponent.update(searchSettings), 
                slicerBehaviors.wV.bindSlicerSearchEvent(this.searchComponent.input, this.searchComponent.clear, selectionHandler), 
                searchEnabled && (viewport = {
                    width: viewport.width,
                    scale: viewport.scale,
                    height: viewport.height - (null === (_a = this.searchComponent) || void 0 === _a ? void 0 : _a.getHeight(viewport.scale))
                }), viewport;
            }, ButtonSlicerTilesLayout.prototype.getButtonSlicerVisualLayoutOptions = function(buttonSlicerLayoutProperties, cellCount, layoutUpdate) {
                var _a;
                if (!layoutUpdate) return buttonSlicerLayoutProperties;
                var rowCount, columnCount, clampedSingleAxis = Math.max(1, Math.min(null !== (_a = buttonSlicerLayoutProperties.maxTiles) && void 0 !== _a ? _a : tileLibraryEnumerationHelper.W9, cellCount));
                switch (buttonSlicerLayoutProperties.orientation) {
                  case navigatorOrientation.Bz.Horizontal:
                    rowCount = 1, columnCount = clampedSingleAxis;
                    break;

                  case navigatorOrientation.Bz.Vertical:
                    rowCount = clampedSingleAxis, columnCount = 1;
                    break;

                  default:
                    rowCount = Math.max(1, Math.min(buttonSlicerLayoutProperties.rowCount, Math.ceil(cellCount / buttonSlicerLayoutProperties.columnCount))), 
                    columnCount = buttonSlicerLayoutProperties.columnCount;
                }
                return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, buttonSlicerLayoutProperties), {
                    rowCount,
                    columnCount
                });
            }, ButtonSlicerTilesLayout.prototype.alignBaselines = function() {
                return ButtonSlicerContentRenderer.alignBaselines(d3.select(this.container.get(0)));
            }, ButtonSlicerTilesLayout.prototype.createCellPadding = function(horizontalPadding, verticalPadding) {
                return {
                    top: Math.floor(verticalPadding) / 2,
                    bottom: 0,
                    left: Math.floor(horizontalPadding) / 2,
                    right: 0
                };
            }, ButtonSlicerTilesLayout.getEmptyMargins = function() {
                return {
                    top: 0,
                    bottom: 0,
                    left: 0,
                    right: 0
                };
            }, ButtonSlicerTilesLayout;
        }(), visualLocKeys = __webpack_require__(33024), dataViewWildcard = __webpack_require__(96915), dataLabelViewModel1Consts = __webpack_require__(56707), selectAllSeries = "default", validValuesForPadding = {
            unitSymbol: visualLocKeys.e_,
            numberRange: {
                min: 0,
                max: 10
            }
        }, spacingOptions = {
            minValue: {
                type: 0,
                value: 0
            },
            maxValue: {
                type: 1,
                value: 40
            },
            required: {
                type: 2
            },
            unitSymbol: visualLocKeys.e_
        };
        function generateFieldInstanceContainers(fieldInstances, containerBuilder, buttonSlicerUidBuilder, buttonSlicerVisualData, formattingCardUid, hostService) {
            return debug.fF.assert(function() {
                return function(state) {
                    for (var currentHierarchyLevel = 0, levelsTraversed = []; state; ) {
                        if (currentHierarchyLevel > 3 || levelsTraversed.includes(state.id)) return !1;
                        levelsTraversed.push(state.id), state = state.child, currentHierarchyLevel++;
                    }
                    return !0;
                }(selectionState);
            }, "Invalid state hierarchy: Either max hierarchy depth exceeded or circular reference detected."), 
            containerBuilder.withDisplayName("Series"), fieldInstances.forEach(function(fieldInstance) {
                containerBuilder.addContainerItem((0, tileLibraryConverter.s9)(fieldInstance) ? fieldInstance.id : fieldInstance, (0, 
                tileLibraryConverter.s9)(fieldInstance) ? fieldInstance.displayName : hostService.getLocalizedString("All"), function(containerItemBuilder) {
                    return generateFormattingSlicesByState(selectionState, hostService, formattingCardUid, buttonSlicerUidBuilder, containerItemBuilder, buttonSlicerVisualData, "");
                });
            }), containerBuilder;
        }
        function getImageGroupByInstance(imageSettingsByInstance, hostServices, instance, imageUIBuilder, buttonSlicerVisualData) {
            var _a, _b, _c, _d, localize = function(key) {
                return hostServices.getLocalizedString(key);
            }, state = instance, instanceId = (0, tileLibraryConverter.Sg)(instance), selector = (0, 
            tileLibraryConverter.$H)(instance), imageSettings = null !== (_a = imageSettingsByInstance[instanceId]) && void 0 !== _a ? _a : imageSettingsByInstance.default, imageProps = advancedSlicer_capabilities.yD.image, imageData = (0, 
            tslib_es6.__assign)({}, null !== (_b = buttonSlicerVisualData.imageProps.image[state]) && void 0 !== _b ? _b : buttonSlicerVisualData.imageProps.image.default), valueData = (0, 
            tslib_es6.__assign)({}, null !== (_c = buttonSlicerVisualData.tileProps.text[state]) && void 0 !== _c ? _c : buttonSlicerVisualData.tileProps.text.default), labelData = (0, 
            tslib_es6.__assign)({}, null !== (_d = buttonSlicerVisualData.tileProps.label[state]) && void 0 !== _d ? _d : buttonSlicerVisualData.tileProps.label.default), groupBuilder = new build_control_util.mQ(new build_control_util.SS(imageUIBuilder, "Image"), localize);
            return groupBuilder.withDisplayName("Image").addSimpleSlice("".concat(instanceId, "-image"), new build_control_util.k0({
                descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, imageProps.image), {
                    selector: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, selector), {
                        data: [ (0, dataViewWildcard.Ue)(1) ]
                    }),
                    instanceKind: 2,
                    propertyTypes: {
                        misc: {
                            imageUrl: !0
                        }
                    }
                }),
                allowMultipleValues: !1,
                value: void 0,
                unwrapExprOnGet: !0,
                validators: {
                    field: {
                        kind: 1,
                        type: {
                            misc: {
                                imageUrl: !0
                            }
                        }
                    }
                }
            }).build()).addSimpleSlice("".concat(instanceId, "-imageFit"), new build_control_util.uY({
                descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, imageProps.imageFit), {
                    selector
                }),
                value: imageSettings.imageFit
            }).build(), function(builder) {
                return builder.withDisabled(instanceId !== selectAllSeries);
            }).addSimpleSlice("".concat(instanceId, "-transparency"), build_control_util.JN.getTransparencySliderBuilder({
                descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, imageProps.transparency), {
                    selector
                }),
                value: imageSettings.transparency,
                localize
            }).build()).addSimpleSlice("".concat(instanceId, "-saturation"), build_control_util.JN.getTransparencySliderBuilder({
                descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, imageProps.saturation), {
                    selector
                }),
                value: imageSettings.saturation,
                localize
            }).build()).addSimpleSlice("".concat(instanceId, "-blur"), build_control_util.JN.getTransparencySliderBuilder({
                descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, imageProps.blur), {
                    selector
                }),
                value: imageSettings.blur,
                localize
            }).build()).addSimpleSlice(advancedSlicer_capabilities.R9.setAsBackGround, new build_control_util.bd({
                descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, imageProps.setAsBackGround), {
                    selector
                }),
                value: imageSettings.setAsBackground
            }).build()), imageSettings.setAsBackground || groupBuilder.addSimpleSlice("".concat(instanceId, "-position"), new build_control_util.uY({
                descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, imageProps.position), {
                    selector
                }),
                items: buttonSlicerVisualData.advancedSlicerType === types_advancedSlicerType.z5 ? legendPosition.CX.members([ legendPosition.zw.left, legendPosition.zw.right ]) : void 0,
                value: imageSettings.position
            }).build(), function(builder) {
                return builder.withDisabled(instanceId !== selectAllSeries);
            }).addSimpleSlice("".concat(instanceId, "-ignorePadding"), new build_control_util.JN({
                descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, imageProps.imageAreaSize), {
                    selector
                }),
                localize,
                value: imageSettings.imageAreaSize,
                options: {
                    minValue: {
                        type: 0,
                        value: 10
                    },
                    maxValue: {
                        type: 1,
                        value: 90
                    },
                    unitSymbol: "Slider_Percent"
                }
            }).build(), function(slider) {
                return slider.withDisabled((imagePosition = imageData.position, labelVisible = (labelProperties = labelData).show, 
                !(((textVisible = (valueProperties = valueData).show) || labelVisible) && ("Right" === imagePosition || "Left" === imagePosition || textVisible && valueProperties.textWrap || labelVisible && labelProperties.textWrap) && instanceId === selectAllSeries)));
                var valueProperties, labelProperties, imagePosition, textVisible, labelVisible;
            }).addSimpleSlice("".concat(instanceId, "-padding"), new build_control_util.mu({
                descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, imageProps.padding), {
                    selector
                }),
                value: imageSettings.padding,
                options: {
                    minValue: {
                        type: 0,
                        value: validValuesForPadding.numberRange.min
                    },
                    maxValue: {
                        type: 1,
                        value: validValuesForPadding.numberRange.max
                    },
                    unitSymbol: validValuesForPadding.unitSymbol
                }
            }).build(), function(builder) {
                return builder.withDisabled(instanceId !== selectAllSeries);
            }), groupBuilder.addSimpleSlice(advancedSlicer_capabilities.R9.ignorePadding, new build_control_util.bd({
                descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, imageProps.ignorePadding), {
                    selector
                }),
                value: imageSettings.ignorePadding
            }).build()), groupBuilder.build();
        }
        function getCallOutGroupsByInstance(instanceId, buttonSlicerUidBuilder, buttonSlicerVisualData, hostService) {
            var _a, groups = [], state = instanceId, imageData = (0, tslib_es6.__assign)({}, null !== (_a = buttonSlicerVisualData.imageProps.image[state]) && void 0 !== _a ? _a : buttonSlicerVisualData.imageProps.image.default), hasImage = buttonSlicerVisualData.hasImage[state] || buttonSlicerVisualData.hasImage[advancedSlicer_capabilities.d1.default];
            return groups.push(function(valueProperties, hostServices, instance, cardUidBuilder, textPropertiesByInstance) {
                var _a, _b, localize = function(key) {
                    return hostServices.getLocalizedString(key);
                }, valueProps = tileLibrary_capabilities.OV.value, instanceId = (0, tileLibraryConverter.Sg)(instance), textProperties = (0, 
                tslib_es6.__assign)({}, null !== (_a = textPropertiesByInstance[instance]) && void 0 !== _a ? _a : textPropertiesByInstance.default), valuePropertiesByInstance = null !== (_b = valueProperties[instanceId]) && void 0 !== _b ? _b : valueProperties.default, selector = (0, 
                tileLibraryConverter.$H)(instance), hasCustomDisplayUnits = -1 === valuePropertiesByInstance.labelDisplayUnits, valueGroupBuilder = new build_control_util.mQ(new build_control_util.SS(cardUidBuilder, "value"), localize);
                return valueGroupBuilder.withDisplayName("Role_DisplayName_Values").addTopLevelToggle("show", function() {
                    return new build_control_util.bd({
                        descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, valueProps.show), {
                            selector: null
                        }),
                        value: valueProperties.default.show
                    }).build();
                }), valueGroupBuilder.addCompositeSlice("font", "Font", (new build_control_util.UN).withFontFamily({
                    descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, valueProps.fontFamily), {
                        selector
                    }),
                    value: valuePropertiesByInstance.fontProperties.family
                }).withFontSizeProperties({
                    descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, valueProps.fontSize), {
                        selector
                    }),
                    value: valuePropertiesByInstance.fontProperties.size.pt
                }).withBold({
                    descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, valueProps.bold), {
                        selector
                    }),
                    value: valuePropertiesByInstance.fontProperties.weight === CssConstants.en
                }).withItalic({
                    descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, valueProps.italic), {
                        selector
                    }),
                    value: valuePropertiesByInstance.fontProperties.style === CssConstants.BF
                }).withUnderline({
                    descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, valueProps.underline), {
                        selector
                    }),
                    value: valuePropertiesByInstance.fontProperties.textDecoration === CssConstants.f0
                }).build()), valueGroupBuilder.addSimpleSlice("color", new build_control_util.BT({
                    descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, valueProps.fontColor), {
                        selector: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, selector), {
                            data: [ (0, dataViewWildcard.Ue)(1) ]
                        }),
                        instanceKind: 3
                    }),
                    value: {
                        value: textProperties.valueFontColor
                    }
                }).build(), function(sliceBuilder) {
                    return sliceBuilder.withCustomDisplayName("Generic_Color");
                }).addSimpleSlice("transparency", build_control_util.JN.getTransparencySliderBuilder({
                    descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, valueProps.transparency), {
                        selector
                    }),
                    value: valuePropertiesByInstance.transparency,
                    localize
                }).build()), (0, tileLibraryConverter.s9)(instance) || valueGroupBuilder.addSimpleSlice("horizontalalignment", new build_control_util.Gp({
                    descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, valueProps.horizontalAlignment), {
                        selector
                    }),
                    value: valuePropertiesByInstance.horizontalAlignment,
                    mode: "horizontalAlignment"
                }).build(), function(sliceBuilder) {
                    return sliceBuilder.withCustomDisplayName("Visual_Alignment_Horizontal");
                }), valueGroupBuilder.addSimpleSlice("textWrap", new build_control_util.bd({
                    descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, valueProps.textWrap), {
                        selector
                    }),
                    value: valuePropertiesByInstance.textWrap
                }).build()).addSimpleSlice("displayUnits", new build_control_util.uY({
                    descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, valueProps.labelDisplayUnits), {
                        selector
                    }),
                    value: valuePropertiesByInstance.labelDisplayUnits
                }).build()), hasCustomDisplayUnits ? valueGroupBuilder.addSimpleSlice("customFormatString", new build_control_util.fq({
                    descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, valueProps.customFormatString), {
                        selector,
                        instanceKind: 3
                    }),
                    value: valuePropertiesByInstance.customFormatString,
                    placeholder: "Auto"
                }).build()) : valueGroupBuilder.addSimpleSlice("precision", new build_control_util.mu({
                    descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, valueProps.labelPrecision), {
                        selector,
                        instanceKind: 3
                    }),
                    value: valuePropertiesByInstance.labelPrecision,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: dataLabelViewModel1Consts.vo
                        }
                    }
                }).build()), valueGroupBuilder.addSimpleSlice("showBlankAs", new build_control_util.fq({
                    descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, valueProps.showBlankAs), {
                        selector,
                        instanceKind: 3
                    }),
                    value: valuePropertiesByInstance.showBlankAs,
                    placeholder: ""
                }).build()), valueGroupBuilder.build();
            }(buttonSlicerVisualData.tileProps.text, hostService, instanceId, buttonSlicerUidBuilder, buttonSlicerVisualData.colorSettings)), 
            groups.push(function(labelPropertiesByInstance, spacingProperties, hostServices, instance, cardUidBuilder, textPropertiesByState) {
                var _a, _b, localize = function(key) {
                    return hostServices.getLocalizedString(key);
                }, labelProps = tileLibrary_capabilities.OV.label, instanceId = (0, tileLibraryConverter.Sg)(instance), labelProperties = null !== (_a = labelPropertiesByInstance[instanceId]) && void 0 !== _a ? _a : labelPropertiesByInstance.default, spacingPropertiesByInstance = null !== (_b = spacingProperties[instanceId]) && void 0 !== _b ? _b : spacingProperties.default, selector = (0, 
                tileLibraryConverter.$H)(instance), spacingProps = tileLibrary_capabilities.OV.spacing, textProperties = (0, 
                tslib_es6.__assign)({}, textPropertiesByState[instance]), valueGroupBuilder = new build_control_util.mQ(new build_control_util.SS(cardUidBuilder, "Role_DisplayName_Label"), localize);
                return valueGroupBuilder.withDisplayName("Role_DisplayName_Label").addTopLevelToggle("".concat(instanceId, "-show"), function() {
                    return new build_control_util.bd({
                        descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, labelProps.show), {
                            selector
                        }),
                        value: labelProperties.show
                    }).build();
                }).addSimpleSlice("".concat(instanceId, "-heading"), new build_control_util.k0({
                    descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, labelProps.field), {
                        selector: {
                            data: [ (0, dataViewWildcard.Ue)(1) ]
                        },
                        instanceKind: 2,
                        propertyTypes: {
                            text: !0,
                            dateTime: !0,
                            integer: !0
                        }
                    }),
                    value: void 0,
                    allowMultipleValues: !1,
                    unwrapExprOnGet: !0,
                    validators: {
                        field: {
                            kind: 1
                        }
                    }
                }).build(), function(builder) {
                    return builder.withDisabled(instanceId !== selectAllSeries);
                }).addCompositeSlice("".concat(instanceId, "-font"), "Font", (new build_control_util.UN).withFontFamily({
                    descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, labelProps.fontFamily), {
                        selector
                    }),
                    value: labelProperties.fontProperties.family
                }).withFontSizeProperties({
                    descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, labelProps.fontSize), {
                        selector
                    }),
                    value: labelProperties.fontProperties.size.pt
                }).withBold({
                    descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, labelProps.bold), {
                        selector
                    }),
                    value: labelProperties.fontProperties.weight === CssConstants.en
                }).withItalic({
                    descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, labelProps.italic), {
                        selector
                    }),
                    value: labelProperties.fontProperties.style === CssConstants.BF
                }).withUnderline({
                    descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, labelProps.underline), {
                        selector
                    }),
                    value: labelProperties.fontProperties.textDecoration === CssConstants.f0
                }).build()).addSimpleSlice("".concat(instanceId, "-color"), new build_control_util.BT({
                    descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, labelProps.fontColor), {
                        selector: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, selector), {
                            data: [ (0, dataViewWildcard.Ue)(1) ]
                        }),
                        instanceKind: 3
                    }),
                    value: {
                        value: null == textProperties ? void 0 : textProperties.labelFontColor
                    }
                }).build(), function(sliceBuilder) {
                    return sliceBuilder.withCustomDisplayName("Generic_Color");
                }).addSimpleSlice("".concat(instanceId, "-transparency"), build_control_util.JN.getTransparencySliderBuilder({
                    descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, labelProps.transparency), {
                        selector
                    }),
                    value: labelProperties.transparency,
                    localize
                }).build()).addSimpleSlice("".concat(instanceId, "-position"), new build_control_util.uY({
                    descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, labelProps.position), {
                        selector
                    }),
                    value: labelProperties.position
                }).build()).addSimpleSlice("".concat(instanceId, "-textWrap"), new build_control_util.bd({
                    descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, labelProps.textWrap), {
                        selector
                    }),
                    value: labelProperties.textWrap
                }).build()).addSimpleSlice("".concat(instanceId, "-alignBaselines"), new build_control_util.bd({
                    descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, labelProps.alignBaselines), {
                        selector
                    }),
                    value: labelProperties.alignBaselines
                }).build(), function(builder) {
                    return builder.withDisabled(instanceId !== selectAllSeries);
                }).addSimpleSlice("".concat(instanceId, "-verticalSpacing"), new build_control_util.mu({
                    descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, spacingProps.verticalSpacing), {
                        selector
                    }),
                    value: spacingPropertiesByInstance.verticalSpacing,
                    options: spacingOptions
                }).build(), function(builder) {
                    return builder.withDisabled(instanceId !== selectAllSeries);
                }), valueGroupBuilder.build();
            }(buttonSlicerVisualData.tileProps.label, buttonSlicerVisualData.tileProps.spacing, hostService, instanceId, buttonSlicerUidBuilder, buttonSlicerVisualData.colorSettings)), 
            groups.push(function(backgroundProperties, hostServices, instance, cardUidBuilder, hasBackgroundImage) {
                var _a, localize = function(key) {
                    return hostServices.getLocalizedString(key);
                }, backgroundProps = advancedSlicer_capabilities.yD.background, instanceId = (0, 
                tileLibraryConverter.Sg)(instance), selector = (0, tileLibraryConverter.$H)(instance), backgroundPropertiesByInstance = null !== (_a = backgroundProperties[instanceId]) && void 0 !== _a ? _a : backgroundProperties.default, groupBuilder = new build_control_util.mQ(new build_control_util.SS(cardUidBuilder, "Background"), localize);
                return groupBuilder.withDisplayName("Visual_Background").addTopLevelToggle("show", function() {
                    return new build_control_util.bd({
                        descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, backgroundProps.show), {
                            selector
                        }),
                        value: backgroundPropertiesByInstance.show
                    }).build();
                }), hasBackgroundImage || groupBuilder.withDisabled(!0, void 0), groupBuilder.addSimpleSlice("color", new build_control_util.BT({
                    descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, backgroundProps.color), {
                        selector: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, selector), {
                            data: [ (0, dataViewWildcard.Ue)(1) ]
                        }),
                        instanceKind: 3
                    }),
                    value: {
                        value: backgroundPropertiesByInstance.color
                    }
                }).build()).addSimpleSlice("transparency", build_control_util.JN.getTransparencySliderBuilder({
                    descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, backgroundProps.transparency), {
                        selector
                    }),
                    value: backgroundPropertiesByInstance.transparency,
                    localize
                }).build()).addSimpleSlice("wrapContent", new build_control_util.bd({
                    descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, backgroundProps.wrapContent), {
                        selector
                    }),
                    value: backgroundPropertiesByInstance.wrapContent
                }).build()), groupBuilder.build();
            }(buttonSlicerVisualData.buttonSlicerProps.background, hostService, instanceId, buttonSlicerUidBuilder, hasImage && imageData.setAsBackground)), 
            groups;
        }
        function generateFormattingSlicesByState(instanceType, hostService, formattingCardUid, cardUidBuilder, containerItemBuilder, buttonSlicerVisualData, selectorIdString) {
            var localize = function(key) {
                return hostService.getLocalizedString(key);
            };
            return containerItemBuilder.addContainer(selectorIdString, function(containerBuilder) {
                containerBuilder.withDisplayName(instanceType.displayName), instanceType.instances.map(function(instanceId) {
                    var currentSelectorId = selectorIdString + "".concat(instanceType.id, ":").concat((0, 
                    tileLibraryConverter.Sg)(instanceId)).concat(instanceType.child ? "-" : "");
                    containerBuilder.addContainerItem(currentSelectorId, getContainerName((0, tileLibraryConverter.Sg)(instanceId), localize), function(containerItemBuilder) {
                        if (!instanceType.child) return function(instanceId, cardUidBuilder, containerItemBuilder, formattingCardUid, buttonSlicerVisualData, hostService) {
                            switch (formattingCardUid) {
                              case "buttons":
                                containerItemBuilder.withGroups(getButtonsGroupsByInstance(instanceId, cardUidBuilder, buttonSlicerVisualData, hostService));
                                break;

                              case "calloutValue":
                                containerItemBuilder.withGroups(getCallOutGroupsByInstance(instanceId, cardUidBuilder, buttonSlicerVisualData, hostService));
                                break;

                              case "images":
                                containerItemBuilder.withGroups([ getImageGroupByInstance(buttonSlicerVisualData.imageProps.image, hostService, instanceId, cardUidBuilder, buttonSlicerVisualData) ]);
                                break;

                              default:
                                return void debug.fF.assertFail("Invalid formatting card uid: ".concat(formattingCardUid));
                            }
                            return containerItemBuilder;
                        }(currentSelectorId, cardUidBuilder, containerItemBuilder, formattingCardUid, buttonSlicerVisualData, hostService);
                        generateFormattingSlicesByState(instanceType.child, hostService, formattingCardUid, cardUidBuilder, containerItemBuilder, buttonSlicerVisualData, currentSelectorId);
                    });
                });
            }), containerItemBuilder;
        }
        function getButtonsGroupsByInstance(instanceId, cardUidBuilder, buttonSlicerVisualData, hostService) {
            var groups = [], selector = (0, tileLibraryConverter.$H)(instanceId), colorSelector = (0, 
            tslib_es6.__assign)((0, tslib_es6.__assign)({}, selector), {
                data: [ (0, dataViewWildcard.Ue)(1) ]
            });
            return groups.push((0, tileLibraryEnumerationHelper._6)(buttonSlicerVisualData.tileProps.padding, hostService, instanceId, cardUidBuilder)), 
            groups.push((0, tileLibraryEnumerationHelper.vU)(buttonSlicerVisualData.tileProps.outline, hostService, instanceId, cardUidBuilder, colorSelector)), 
            groups.push((0, tileLibraryEnumerationHelper.Gx)(!0, buttonSlicerVisualData.tileProps.fill, hostService, instanceId, cardUidBuilder, void 0, colorSelector)), 
            groups.push((0, tileLibraryEnumerationHelper.g_)(buttonSlicerVisualData.tileProps.shadow, hostService, instanceId, cardUidBuilder, colorSelector)), 
            groups.push((0, tileLibraryEnumerationHelper.$h)(buttonSlicerVisualData.tileProps.glow, hostService, instanceId, cardUidBuilder, colorSelector)), 
            groups.push((0, tileLibraryEnumerationHelper.E0)(buttonSlicerVisualData.tileProps.accentBar, hostService, instanceId, cardUidBuilder, colorSelector)), 
            groups;
        }
        var buttonSlicerSelector = (0, CssConstants.CH)("buttonSlicerVisual"), ButtonSlicer = function() {
            function ButtonSlicer(options) {
                options && (this.tooltipsEnabled = options.tooltipsEnabled);
            }
            return ButtonSlicer.prototype.init = function(options) {
                var _this = this;
                this.style = options.style, this.hostServices = options.host, this.featureSwitches = options.featureSwitches || {}, 
                this.buttonSlicerTile = new ButtonSlicerTiles, this.behavior = new ButtonSlicerBehavior(this.buttonSlicerTile), 
                this.selectionHandler = new slicerSelectionHandler.N(this.hostServices, this.behavior), 
                this.loadMoreHandler = new loadMoreDataHandler.J(this.hostServices), this.layout = new ButtonSlicerTilesLayout(options.element, function() {
                    return _this.loadMoreHandler.updateDataView(_this.dataView), _this.loadMoreHandler.loadMoreData();
                }, this.hostServices, this.featureSwitches), this.buttonSlicerTile.setBuildTile(function() {
                    return new ButtonSlicerTile(_this.hostServices, _this.selectionHandler);
                }), this.currentViewport = options.viewport, this.buttonSlicerMetadata = [], this.settings = (0, 
                slicer_converter.VT)(this.style), this.tooltipsEnabled && (this.tooltipService = (0, 
                tooltipService.r)(options.host));
            }, ButtonSlicer.prototype.destroy = function() {
                this.layout.destroy();
            }, ButtonSlicer.prototype.update = function(options) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return null == options.resizeMode ? [ 3, 2 ] : (this.currentViewport = options.viewport, 
                            [ 4, this.onDataChangedInternal(options, !1) ]);

                          case 1:
                            return _a.sent(), [ 3, 4 ];

                          case 2:
                            return !options.type || options.type & enums.EP.Data ? [ 4, this.onDataChangedInternal(options, !0) ] : [ 3, 4 ];

                          case 3:
                            _a.sent(), _a.label = 4;

                          case 4:
                            return [ 2 ];
                        }
                    });
                });
            }, ButtonSlicer.prototype.onDataViewObjectChanged = function(propertySaveObjects, sourceType) {
                var newPropertySaveObjects = (0, slicerUtil1.tm)(propertySaveObjects, sourceType);
                return debug.fF.assertNonEmpty(newPropertySaveObjects, "There should be at least one save object"), 
                newPropertySaveObjects;
            }, ButtonSlicer.prototype.onDataChangedInternal = function(options, stopWaitingForData) {
                var _a;
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var dataView, localizedSelectAllText, localizedDeselectAllText, colorHelper, valueSettings, data, advancedSlicerType, fieldsCount, hasImage, _loop_1, this_1, _i, _b;
                    return (0, tslib_es6.__generator)(this, function(_c) {
                        switch (_c.label) {
                          case 0:
                            if (this.dataView = dataView = options && options.dataViews && options.dataViews[0], 
                            !dataView) return [ 3, 2 ];
                            for (localizedSelectAllText = this.hostServices.getLocalizedString(slicerUtil1.vx), 
                            localizedDeselectAllText = this.hostServices.getLocalizedString(slicerUtil1.Qi), 
                            colorHelper = this.colorHelper = common_colorHelper.v.create(this.style), this.rules = dataView.metadata.objectsRules, 
                            valueSettings = convertValue(dataView, colorHelper, buttonSlicerInstanceIds, getValueDefaults(this.style, colorHelper, !1), tileLibraryConverter.xN), 
                            this.slicerData = (0, slicer_converter.OQ)({
                                dataView,
                                localizedSelectAllText,
                                localizedDeselectAllText,
                                selectionHandler: this.selectionHandler,
                                hostServices: this.hostServices,
                                style: this.style,
                                isSlicer: !0,
                                featureSwitches: this.featureSwitches,
                                slicerType: 1,
                                valueSettings: valueSettings.default,
                                hideRetainedDataPoints: !0
                            }), this.colorDefaults = getColorDefaults(this.style, colorHelper), this.buttonSlicerMetadata = this.slicerData.slicerDataPoints, 
                            data = _.find(this.buttonSlicerMetadata, function(dataPoint) {
                                return !dataPoint.isSelectAllDataPoint && null != dataPoint.objects;
                            }), this.colorObjects = data && data.objects, advancedSlicerType = types_advancedSlicerType.jk, 
                            fieldsCount = null === (_a = this.slicerData) || void 0 === _a ? void 0 : _a.queryNameByLevel.length, 
                            this.featureSwitches.advancedSlicerTypeList && (advancedSlicerType = fieldsCount && fieldsCount > 1 ? types_advancedSlicerType.z5 : (0, 
                            dataViewObject2.NA)(dataView.metadata.objects, advancedSlicer_capabilities.yD.selection.advancedSlicerType, types_advancedSlicerType.jk)), 
                            this.imageDefaults = getImageDefaults(advancedSlicerType), hasImage = {
                                default: !1,
                                hover: !1,
                                press: !1,
                                selected: !1
                            }, _loop_1 = function(instanceId) {
                                hasImage[instanceId] = _.some(this_1.buttonSlicerMetadata, function(dataPoint) {
                                    return dataPoint.isImage || !_.isEmpty((0, dataViewObject2.NA)(dataPoint.objects, advancedSlicer_capabilities.yD.image.image, void 0, instanceId));
                                });
                            }, this_1 = this, _i = 0, _b = buttonSlicerInstanceIds; _i < _b.length; _i++) _loop_1(_b[_i]);
                            return this.buttonSlicerVisualData = function(dataView, style, hasImage, isValueImage, colorObjects, featureSwitches, advancedSlicerType) {
                                var _a, buttonSlicerLayout, hasSearchableData = !1, colorHelper = common_colorHelper.v.create(style), dataViewObject = dataView.metadata.objects, fieldInstances = [];
                                if (debug.fF.assertValue(colorHelper, "colorHelper"), null === (_a = dataView.metadata) || void 0 === _a ? void 0 : _a.columns) {
                                    var columns = (0, slicerUtil1.zJ)(dataView.metadata.columns);
                                    hasSearchableData = !_.isEmpty(columns) && !_.some(columns, function(column) {
                                        return !0 !== column.type.text;
                                    }), (null == featureSwitches ? void 0 : featureSwitches.advancedSlicerTypeList) && (columns.map(function(column) {
                                        (0, dataRoleHelper.nu)(column, slicer_capabilities.CT.value) && fieldInstances.push({
                                            id: column.queryName,
                                            selector: {
                                                metadata: column.queryName
                                            },
                                            displayName: column.displayName
                                        });
                                    }), fieldInstances.length > 1 ? fieldInstances.unshift("default") : fieldInstances = [ "default" ]);
                                }
                                var layoutDefaults = function(style) {
                                    var defaultStrokeStyle = {
                                        strokeShow: !0,
                                        strokeColor: style.colorPalette.foregroundNeutralTertiary.value,
                                        strokeTransparency: 0,
                                        strokeWidth: 1,
                                        strokePattern: strokePattern.kY.solid
                                    };
                                    return {
                                        verticalAlignment: verticalPosition.Q4.middle,
                                        orientation: navigatorOrientation.Bz.Grid,
                                        hideOrientation: !0,
                                        rowCount: 3,
                                        columnCount: 3,
                                        maxTiles: void 0,
                                        cellPadding: 8,
                                        customizePadding: !1,
                                        rowPadding: 8,
                                        columnPadding: 8,
                                        isButtons: !0,
                                        style: layoutStyleType.i.Cards,
                                        backgroundShow: !1,
                                        backgroundTransparency: 0,
                                        backgroundImageTransparency: 0,
                                        backgroundImage: void 0,
                                        backgroundFillColor: style.colorPalette.background.value,
                                        rectangleRoundedCurveCustomStyle: !1,
                                        rectangleRoundedCurve: 0,
                                        rectangleRoundedCurveLeftTop: 0,
                                        rectangleRoundedCurveRightTop: 0,
                                        rectangleRoundedCurveLeftBottom: 0,
                                        rectangleRoundedCurveRightBottom: 0,
                                        customizeLines: !1,
                                        line: (0, tslib_es6.__assign)({}, defaultStrokeStyle),
                                        gridline: (0, tslib_es6.__assign)({}, defaultStrokeStyle),
                                        border: (0, tslib_es6.__assign)({}, defaultStrokeStyle)
                                    };
                                }(style);
                                buttonSlicerLayout = featureSwitches && featureSwitches.buttonSlicerTableLayout ? (0, 
                                tileLibraryConverter.Ao)(dataViewObject, colorHelper, layoutDefaults) : (0, tileLibraryConverter.Ge)(dataViewObject, layoutDefaults);
                                var colorDefaults = getColorDefaults(style, colorHelper);
                                buttonSlicerLayout.hideOrientation = !0;
                                var shapeDefaults = {
                                    default: {
                                        tileShape: shapeType.m.Rectangle,
                                        rotation: 0,
                                        shapeRounding: 0,
                                        linecapType: void 0,
                                        arrowheadSize: 50,
                                        arrowStemWidth: 25,
                                        chevronAngle: 90,
                                        isocelesTriangleTipPosition: 50,
                                        parallelogramSlant: 100 / 3,
                                        trapezoidSlant: 40,
                                        hexagonSlant: 200 / 3,
                                        octagonSnipSize: 100 / 3,
                                        speechBubbleHeight: 10,
                                        speechBubbleTailPosition: speechBubbleTailPosition.R5,
                                        speechBubbleTailAngle: 90,
                                        rectangleRoundedCurve: 25,
                                        rectangleRoundedCurveCustomStyle: !1,
                                        rectangleRoundedCurveLeftTop: 0,
                                        rectangleRoundedCurveRightTop: 0,
                                        rectangleRoundedCurveLeftBottom: 0,
                                        rectangleRoundedCurveRightBottom: 0,
                                        tabCutCornerSnipSizeTopRight: 25,
                                        tabCutCornerSnipSizeTop: 25,
                                        tabCutCornerSnipSizeBottom: 0,
                                        tabRoundCornerTopRight: 25,
                                        tabRoundCornerTop: 25,
                                        tabRoundCornerBottom: 0,
                                        tabCutCornerSnipSizeCustomStyle: !1,
                                        tabCutCornerSnipSizeLeftTop: 0,
                                        tabCutCornerSnipSizeRightTop: 0,
                                        tabCutCornerSnipSizeLeftBottom: 0,
                                        tabCutCornerSnipSizeRightBottom: 0
                                    }
                                }, data = {
                                    tileProps: {
                                        fill: (0, tileLibraryConverter.ur)(dataView, colorHelper, buttonSlicerInstanceIds, getFillDefaults(style)),
                                        outline: (0, tileLibraryConverter.Ou)(dataView, colorHelper, buttonSlicerInstanceIds, getOutlineDefaults(style, buttonSlicerLayout.style)),
                                        shape: (0, tileLibraryConverter.ZT)(dataView, buttonSlicerInstanceIds, shapeDefaults, void 0),
                                        shadow: (0, tileLibraryConverter.hn)(dataView, colorHelper, buttonSlicerInstanceIds, getShadowDefaults(style)),
                                        glow: (0, tileLibraryConverter.SB)(dataView, colorHelper, buttonSlicerInstanceIds, getGlowDefaults(style)),
                                        accentBar: (0, tileLibraryConverter.wp)(dataView, colorHelper, buttonSlicerInstanceIds, getAccentBarDefaults(style)),
                                        padding: (0, tileLibraryConverter.U6)(dataView, buttonSlicerInstanceIds, {
                                            default: {
                                                paddingSelection: paddingOptions.mJ,
                                                rightMargin: 4,
                                                leftMargin: 4,
                                                topMargin: 4,
                                                bottomMargin: 4
                                            }
                                        }),
                                        spacing: (0, tileLibraryConverter.iS)(dataView, buttonSlicerInstanceIds, {
                                            default: {
                                                verticalSpacing: 2
                                            }
                                        }),
                                        text: convertValue(dataView, colorHelper, buttonSlicerInstanceIds, getValueDefaults(style, colorHelper, isValueImage), tileLibraryConverter.xN),
                                        label: convertLabel(dataView, colorHelper, buttonSlicerInstanceIds, getTextDefaults(style, colorHelper), tileLibraryConverter.RA),
                                        selectionIcon: convertSelectionIcon(dataView, colorHelper, buttonSlicerInstanceIds, getSelectionIconDefaults(style))
                                    },
                                    buttonSlicerProps: {
                                        icon: convertIcon(dataView, buttonSlicerInstanceIds, {
                                            default: {
                                                show: !1,
                                                altText: "",
                                                iconType: imageType._.image,
                                                icon: void 0,
                                                iconUrl: void 0,
                                                padding: 4,
                                                size: void 0,
                                                position: legendPosition.zw.right,
                                                transparency: 0
                                            }
                                        }),
                                        background: convertBackground(dataView, colorHelper, buttonSlicerInstanceIds, getBackgroundDefaults(style))
                                    },
                                    layout: buttonSlicerLayout,
                                    hasSearchableData,
                                    overFlow: (0, tileLibraryConverter.nO)(dataViewObject, {
                                        overFlowStyle: overFlowStyle.a.Scroll,
                                        overFlowDirection: overFlowDirection.m.Vertical
                                    }),
                                    imageProps: {
                                        image: convertImage(dataView, buttonSlicerInstanceIds, getImageDefaults(advancedSlicerType), advancedSlicerType === types_advancedSlicerType.z5)
                                    },
                                    colorSettings: readColorProperty(colorObjects, colorHelper, buttonSlicerInstanceIds, getColorDefaults(style, colorHelper)),
                                    hasImage,
                                    fieldInstances,
                                    advancedSlicerType
                                };
                                advancedSlicerType === types_advancedSlicerType.z5 && (data.layout.orientation = navigatorOrientation.Bz.Vertical, 
                                data.layout.columnCount = 1), featureSwitches.buttonSlicerTableLayout && data.layout.style === layoutStyleType.i.Table && (data.tileProps.shape.default = shapeDefaults.default);
                                var dataWithInstanceColors = updateColorProperties(data.colorSettings, data.tileProps, data.buttonSlicerProps, colorDefaults);
                                return data.tileProps = dataWithInstanceColors[0], data.buttonSlicerProps = dataWithInstanceColors[1], 
                                data;
                            }(dataView, this.style, hasImage, this.buttonSlicerMetadata.some(function(d) {
                                return d.isImage;
                            }), this.colorObjects, this.featureSwitches, advancedSlicerType), [ 4, this.render() ];

                          case 1:
                            return _c.sent(), stopWaitingForData && this.loadMoreHandler.onLoadMoreDataCompleted(), 
                            [ 3, 3 ];

                          case 2:
                            this.layout.clear(), _c.label = 3;

                          case 3:
                            return [ 2 ];
                        }
                    });
                });
            }, ButtonSlicer.prototype.onClearSelection = function(isUserAction) {
                this.layout.clearSearch(), (0, slicerUtil1.K5)(this.selectionHandler, isUserAction, !0);
            }, ButtonSlicer.prototype.getFormattingModel = function() {
                var _this = this, buttonSlicerVisualData = this.buttonSlicerVisualData;
                if (buttonSlicerVisualData) {
                    var options = {};
                    this.featureSwitches.advancedSlicerTypeList && buttonSlicerVisualData.advancedSlicerType === types_advancedSlicerType.z5 && (options.skipArrangement = !0, 
                    options.skipColumns = !0, options.skipOrientation = !0);
                    var shape = buttonSlicerVisualData.tileProps.shape.default.tileShape, formattingModelBuilder = new build_control_util.Nq(function() {
                        return function(advancedSlicerType, dataView, settings, defaultSettings, hostServices, featureSwitches) {
                            var cardUidBuilder = new build_control_util.lg("slicerSettings"), revertDescriptors = [], selectionGroups = (0, 
                            slicerUtil1.PG)(settings, dataView, defaultSettings, hostServices, cardUidBuilder, revertDescriptors, !1);
                            if (null == featureSwitches ? void 0 : featureSwitches.advancedSlicerTypeList) {
                                var selectionGroupBuilder = new build_control_util.mQ(new build_control_util.SS(cardUidBuilder, "selection"), function(key) {
                                    return hostServices.getLocalizedString(key);
                                });
                                revertDescriptors.push(advancedSlicer_capabilities.yD.selection.advancedSlicerType), 
                                selectionGroupBuilder.addSimpleSlice("type", new build_control_util.uY({
                                    descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, advancedSlicer_capabilities.yD.selection.advancedSlicerType), {
                                        selector: null
                                    }),
                                    value: advancedSlicerType
                                }).build()), selectionGroups.slices.unshift(selectionGroupBuilder.build().slices[0]);
                            }
                            return new build_control_util.CQ(cardUidBuilder, "Slicer_Settings", revertDescriptors, function(key) {
                                return hostServices.getLocalizedString(key);
                            }).withGroups([ selectionGroups ]).build();
                        }(buttonSlicerVisualData.advancedSlicerType, _this.dataView, _this.slicerData.slicerSettings, _this.settings, _this.hostServices, _this.featureSwitches);
                    }, function() {
                        if (!_this.featureSwitches.buttonSlicerTableLayout || buttonSlicerVisualData.layout.style === layoutStyleType.i.Cards) return (0, 
                        tileLibraryEnumerationHelper.Ai)(buttonSlicerVisualData.tileProps.shape, _this.hostServices, _this.featureSwitches, "default", _this.getShapeExclusionList(shape));
                    }, function() {
                        return _this.featureSwitches.buttonSlicerTableLayout ? (0, tileLibraryEnumerationHelper.l6)(_this.hostServices, buttonSlicerVisualData.layout, buttonSlicerVisualData.overFlow, options) : _this.featureSwitches.cardVisualRefUpdate ? (0, 
                        tileLibraryEnumerationHelper.Cv)(_this.hostServices, buttonSlicerVisualData.layout, advancedSlicer_capabilities.yD, buttonSlicerVisualData.overFlow) : (0, 
                        tileLibraryEnumerationHelper.mT)(_this.hostServices, buttonSlicerVisualData.layout, advancedSlicer_capabilities.yD, buttonSlicerVisualData.overFlow);
                    }, function() {
                        return function(hostService, buttonSlicerVisualData, instanceids, featureSwitches) {
                            var valueProps = advancedSlicer_capabilities.yD.value, labelProps = advancedSlicer_capabilities.yD.label, spacingProps = advancedSlicer_capabilities.yD.spacing, iconProps = advancedSlicer_capabilities.yD.icon, backgroundProps = advancedSlicer_capabilities.yD.background, localize = function(key) {
                                return hostService.getLocalizedString(key);
                            }, buttonSlicerUidBuilder = new build_control_util.lg("Visual_CallOutValues"), calloutCardBuilder = new build_control_util.CQ(buttonSlicerUidBuilder, "Visual_CallOutValues", [ valueProps.show, valueProps.fontColor, valueProps.fontSize, valueProps.fontFamily, valueProps.italic, valueProps.bold, valueProps.underline, valueProps.text, valueProps.horizontalAlignment, valueProps.textWrap, valueProps.labelDisplayUnits, valueProps.labelPrecision, valueProps.customFormatString, valueProps.showBlankAs, valueProps.transparency, labelProps.show, labelProps.fontColor, labelProps.fontSize, labelProps.fontFamily, labelProps.italic, labelProps.bold, labelProps.underline, labelProps.field, labelProps.heading, labelProps.position, labelProps.transparency, labelProps.textWrap, labelProps.alignBaselines, spacingProps.verticalSpacing, iconProps.altText, iconProps.icon, iconProps.iconType, iconProps.iconUrl, iconProps.padding, iconProps.position, iconProps.show, iconProps.size, iconProps.transparency, backgroundProps.show, backgroundProps.color, backgroundProps.transparency, backgroundProps.wrapContent ], localize), calloutCardInstances = buttonSlicerVisualData.fieldInstances;
                            return featureSwitches.advancedSlicerTypeList && calloutCardInstances && !_.isEmpty(calloutCardInstances) && selectionState ? calloutCardBuilder.addGroup("applySettingsTo", function(groupBuilder) {
                                groupBuilder.withDisplayName("Apply_Settings_To").withCollapsible(!1).addContainer("series", function(containerBuilder) {
                                    return generateFieldInstanceContainers(calloutCardInstances, containerBuilder, buttonSlicerUidBuilder, buttonSlicerVisualData, "calloutValue", hostService);
                                });
                            }) : calloutCardBuilder.addGroup("applySettingsTo", function(groupBuilder) {
                                groupBuilder.withDisplayName("Apply_Settings_To").withCollapsible(!1).addContainer("state", function(containerBuilder) {
                                    containerBuilder.withDisplayName("State"), instanceids.forEach(function(instanceId) {
                                        containerBuilder.addContainerItem((0, tileLibraryConverter.s9)(instanceId) ? instanceId.id : instanceId, (0, 
                                        tileLibraryConverter.s9)(instanceId) ? instanceId.displayName : getContainerName(instanceId, localize), function(containerItemBuilder) {
                                            return containerItemBuilder.withGroups(getCallOutGroupsByInstance(instanceId, buttonSlicerUidBuilder, buttonSlicerVisualData, hostService));
                                        });
                                    });
                                });
                            }), calloutCardBuilder.build();
                        }(_this.hostServices, buttonSlicerVisualData, buttonSlicerInstanceIds, _this.featureSwitches);
                    }, function() {
                        return function(hostService, buttonSlicerVisualData, instanceids, featureSwitches) {
                            var imageProps = advancedSlicer_capabilities.yD.image, localize = function(key) {
                                return hostService.getLocalizedString(key);
                            }, buttonSlicerUidBuilder = new build_control_util.lg("Images"), imageCardBuilder = new build_control_util.CQ(buttonSlicerUidBuilder, "Images", [ imageProps.image, imageProps.imageFit, imageProps.transparency, imageProps.setAsBackGround, imageProps.position, imageProps.ignorePadding, imageProps.imageAreaSize, imageProps.padding, imageProps.saturation, imageProps.blur ], localize), imageInstances = buttonSlicerVisualData.fieldInstances;
                            return featureSwitches.advancedSlicerTypeList && imageInstances && !_.isEmpty(imageInstances) && selectionState ? imageCardBuilder.addGroup("applySettingsTo", function(groupBuilder) {
                                groupBuilder.withDisplayName("Apply_Settings_To").withCollapsible(!1).addContainer("series", function(containerBuilder) {
                                    return generateFieldInstanceContainers(imageInstances, containerBuilder, buttonSlicerUidBuilder, buttonSlicerVisualData, "images", hostService);
                                });
                            }) : imageCardBuilder.addGroup("applySettingsTo", function(groupBuilder) {
                                groupBuilder.withDisplayName("Apply_Settings_To").withCollapsible(!1).addContainer("state", function(containerBuilder) {
                                    containerBuilder.withDisplayName("State"), instanceids.forEach(function(instanceId) {
                                        containerBuilder.addContainerItem((0, tileLibraryConverter.s9)(instanceId) ? instanceId.id : instanceId, (0, 
                                        tileLibraryConverter.s9)(instanceId) ? instanceId.displayName : getContainerName(instanceId, localize), function(containerItemBuilder) {
                                            return containerItemBuilder.withGroups([ getImageGroupByInstance(buttonSlicerVisualData.imageProps.image, hostService, instanceId, buttonSlicerUidBuilder, buttonSlicerVisualData) ]);
                                        });
                                    });
                                });
                            }), imageCardBuilder.build();
                        }(_this.hostServices, buttonSlicerVisualData, buttonSlicerInstanceIds, _this.featureSwitches);
                    }, function() {
                        if (_this.featureSwitches.advancedSlicerTypeList) return function(hostService, buttonSlicerVisualData, instanceids) {
                            var selectionIconProps = advancedSlicer_capabilities.yD.selectionIcon, localize = function(key) {
                                return hostService.getLocalizedString(key);
                            }, cardUidBuilder = new build_control_util.lg("Selection_Icon"), selectionIconCardBuilder = new build_control_util.CQ(cardUidBuilder, "Visual_SelectionIcon_Label", [ selectionIconProps.color, selectionIconProps.position, selectionIconProps.size, selectionIconProps.show, selectionIconProps.spacing, selectionIconProps.transparency ], localize);
                            return selectionIconCardBuilder.addGroup("applySettingsTo", function(groupBuilder) {
                                groupBuilder.withDisplayName("Apply_Settings_To").withCollapsible(!1).addContainer("state", function(containerBuilder) {
                                    containerBuilder.withDisplayName("State"), instanceids.forEach(function(instanceId) {
                                        containerBuilder.addContainerItem((0, tileLibraryConverter.s9)(instanceId) ? instanceId.id : instanceId, (0, 
                                        tileLibraryConverter.s9)(instanceId) ? instanceId.displayName : getContainerName(instanceId, localize), function(containerItemBuilder) {
                                            return containerItemBuilder.withGroups(function(instanceId, cardUidBuilder, buttonSlicerVisualData, hostService) {
                                                var groups = [];
                                                return groups.push(function(selectionIconSettingsByInstance, hostServices, instance, cardUidBuilder) {
                                                    var _a, localize = function(key) {
                                                        return hostServices.getLocalizedString(key);
                                                    }, selectionIconProps = advancedSlicer_capabilities.yD.selectionIcon, selectionIconSettings = null !== (_a = selectionIconSettingsByInstance[(0, 
                                                    tileLibraryConverter.Sg)(instance)]) && void 0 !== _a ? _a : selectionIconSettingsByInstance.default, selector = (0, 
                                                    tileLibraryConverter.$H)(instance), groupBuilder = new build_control_util.mQ(new build_control_util.SS(cardUidBuilder, "SelectionGroup"), localize);
                                                    return groupBuilder.withDisplayName("Icon").addTopLevelToggle("show", function() {
                                                        return new build_control_util.bd({
                                                            descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, selectionIconProps.show), {
                                                                selector
                                                            }),
                                                            value: selectionIconSettings.show
                                                        }).build();
                                                    }).addSimpleSlice("color", new build_control_util.BT({
                                                        descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, selectionIconProps.color), {
                                                            selector: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, selector), {
                                                                data: [ (0, dataViewWildcard.Ue)(1) ]
                                                            }),
                                                            instanceKind: 3
                                                        }),
                                                        value: {
                                                            value: selectionIconSettings.color
                                                        }
                                                    }).build()).addSimpleSlice("transparency", build_control_util.JN.getTransparencySliderBuilder({
                                                        descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, selectionIconProps.transparency), {
                                                            selector
                                                        }),
                                                        value: selectionIconSettings.transparency,
                                                        localize
                                                    }).build(), function(sliceBuilder) {
                                                        return sliceBuilder.withCustomDisplayName("Transparency");
                                                    }), groupBuilder.build();
                                                }(buttonSlicerVisualData.tileProps.selectionIcon, hostService, instanceId, cardUidBuilder)), 
                                                groups.push(function(selectionIconSettingsByInstance, hostServices, instance, cardUidBuilder) {
                                                    var _a, selectionIconProps = advancedSlicer_capabilities.yD.selectionIcon, selectionIconSettings = null !== (_a = selectionIconSettingsByInstance[(0, 
                                                    tileLibraryConverter.Sg)(instance)]) && void 0 !== _a ? _a : selectionIconSettingsByInstance.default, selector = (0, 
                                                    tileLibraryConverter.$H)(instance), groupBuilder = new build_control_util.mQ(new build_control_util.SS(cardUidBuilder, "SelectionLabel"), function(key) {
                                                        return hostServices.getLocalizedString(key);
                                                    });
                                                    return groupBuilder.withDisplayName("Layout").addSimpleSlice("position", new build_control_util.uY({
                                                        descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, selectionIconProps.position), {
                                                            selector
                                                        }),
                                                        value: selectionIconSettings.position
                                                    }).build(), function(slicerBuilder) {
                                                        return slicerBuilder.withCustomDisplayName("Visual_Position");
                                                    }).addSimpleSlice("size", new build_control_util.mu({
                                                        descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, selectionIconProps.size), {
                                                            selector
                                                        }),
                                                        value: selectionIconSettings.size,
                                                        options: {
                                                            minValue: {
                                                                type: 0,
                                                                value: 0
                                                            },
                                                            maxValue: {
                                                                type: 1,
                                                                value: 999
                                                            },
                                                            unitSymbol: visualLocKeys.e_
                                                        }
                                                    }).build()).addSimpleSlice("spacing", new build_control_util.mu({
                                                        descriptor: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, selectionIconProps.spacing), {
                                                            selector
                                                        }),
                                                        value: selectionIconSettings.spacing,
                                                        options: {
                                                            minValue: {
                                                                type: 0,
                                                                value: 0
                                                            },
                                                            unitSymbol: visualLocKeys.e_
                                                        }
                                                    }).build()), groupBuilder.build();
                                                }(buttonSlicerVisualData.tileProps.selectionIcon, hostService, instanceId, cardUidBuilder)), 
                                                groups;
                                            }(instanceId, cardUidBuilder, buttonSlicerVisualData, hostService));
                                        });
                                    });
                                });
                            }), selectionIconCardBuilder.build();
                        }(_this.hostServices, buttonSlicerVisualData, buttonSlicerInstanceIds);
                    }, function() {
                        return function(hostService, buttonSlicerVisualData, instanceids, featureSwitches) {
                            var fillProps = advancedSlicer_capabilities.yD.fillCustom, outlineProps = advancedSlicer_capabilities.yD.outline, shadowProps = advancedSlicer_capabilities.yD.shadowCustom, glowProps = advancedSlicer_capabilities.yD.glowCustom, paddingProps = advancedSlicer_capabilities.yD.padding, accentBarProps = advancedSlicer_capabilities.yD.accentBar, localize = function(key) {
                                return hostService.getLocalizedString(key);
                            }, cardUidBuilder = new build_control_util.lg("Cards"), buttonsCardBuilder = new build_control_util.CQ(cardUidBuilder, "ReportAppBar_Buttons", [ fillProps.show, fillProps.fillColor, fillProps.transparency, fillProps.image, fillProps.imageTransparency, outlineProps.show, outlineProps.lineColor, outlineProps.weight, outlineProps.transparency, shadowProps.show, shadowProps.color, shadowProps.transparency, shadowProps.shadowBlur, shadowProps.shadowPositionPreset, shadowProps.angle, shadowProps.shadowDistance, shadowProps.position, shadowProps.shadowSpread, glowProps.show, glowProps.color, glowProps.transparency, glowProps.shadowBlur, glowProps.angle, glowProps.glowDistance, glowProps.glowPositionPreset, glowProps.glowSpread, glowProps.position, paddingProps.paddingSelection, paddingProps.bottomMargin, paddingProps.leftMargin, paddingProps.rightMargin, paddingProps.topMargin, accentBarProps.color, accentBarProps.position, accentBarProps.show, accentBarProps.transparency, accentBarProps.width ], localize), buttonsCardInstances = buttonSlicerVisualData.fieldInstances;
                            return featureSwitches.advancedSlicerTypeList && buttonsCardInstances && !_.isEmpty(buttonsCardInstances) && selectionState ? buttonsCardBuilder.addGroup("applySettingsTo", function(groupBuilder) {
                                groupBuilder.withDisplayName("Apply_Settings_To").withCollapsible(!1).addContainer("series", function(containerBuilder) {
                                    return generateFieldInstanceContainers(buttonsCardInstances, containerBuilder, cardUidBuilder, buttonSlicerVisualData, "buttons", hostService);
                                });
                            }) : buttonsCardBuilder.addGroup("applySettingsTo", function(groupBuilder) {
                                groupBuilder.withDisplayName("Apply_Settings_To").withCollapsible(!1).addContainer("state", function(containerBuilder) {
                                    containerBuilder.withDisplayName("State"), instanceids.forEach(function(instanceId) {
                                        containerBuilder.addContainerItem((0, tileLibraryConverter.s9)(instanceId) ? instanceId.id : instanceId, (0, 
                                        tileLibraryConverter.s9)(instanceId) ? instanceId.displayName : getContainerName(instanceId, localize), function(containerItemBuilder) {
                                            return containerItemBuilder.withGroups(getButtonsGroupsByInstance(instanceId, cardUidBuilder, buttonSlicerVisualData, hostService));
                                        });
                                    });
                                });
                            }), buttonsCardBuilder.build();
                        }(_this.hostServices, buttonSlicerVisualData, buttonSlicerInstanceIds, _this.featureSwitches);
                    });
                    return formattingModelBuilder.build();
                }
            }, ButtonSlicer.prototype.getShapeExclusionList = function(currentShape) {
                var _a, unsupportedShapes = ((_a = {})[shapeType.m.Arrow] = !0, _a[shapeType.m.ArrowChevron] = !0, 
                _a[shapeType.m.ArrowPentagon] = !0, _a[shapeType.m.Heart] = !0, _a[shapeType.m.Hexagon] = !0, 
                _a[shapeType.m.Line] = !0, _a[shapeType.m.Octagon] = !0, _a[shapeType.m.Oval] = !0, 
                _a[shapeType.m.Parallelogram] = !0, _a[shapeType.m.Pentagon] = !0, _a[shapeType.m.Pill] = !0, 
                _a[shapeType.m.Speechbubble] = !0, _a[shapeType.m.TabCutCorner] = !0, _a[shapeType.m.TabRoundTopCorners] = !0, 
                _a[shapeType.m.Trapezoid] = !0, _a[shapeType.m.TriangleIsoc] = !0, _a[shapeType.m.TriangleRight] = !0, 
                _a[shapeType.m.TabRoundCorner] = !0, _a[shapeType.m.RectangleRounded] = !0, _a[shapeType.m.TabCutTopCorners] = !0, 
                _a);
                return unsupportedShapes[currentShape] = !1, unsupportedShapes;
            }, ButtonSlicer.prototype.render = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var options;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return options = {
                                viewport: this.currentViewport,
                                buttonSlicerTilesFactory: this.buttonSlicerTile,
                                buttonSlicerVisualData: this.buttonSlicerVisualData,
                                renderCell: this.renderCell.bind(this),
                                cells: this.buttonSlicerMetadata,
                                data: this.slicerData,
                                layoutUpdate: !!this.featureSwitches.cardVisualRefUpdate
                            }, this.selectionHandler.setSelected(this.slicerData.retainedDataPoints), [ 4, this.layout.render(options, this.selectionHandler) ];

                          case 1:
                            return _a.sent(), this.layout.alignBaselines(), [ 2 ];
                        }
                    });
                });
            }, ButtonSlicer.prototype.renderCell = function(data, buttonSlicerTiles, buttonSlicerMetadata) {
                var _a, _b;
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var tile, colorProperty, objects, imageSettings, instanceSettings, tileOptions;
                    return (0, tslib_es6.__generator)(this, function(_c) {
                        switch (_c.label) {
                          case 0:
                            return (tile = buttonSlicerTiles.get(data.index)).contentProperties = {
                                text: this.buttonSlicerVisualData.tileProps.text,
                                label: this.buttonSlicerVisualData.tileProps.label
                            }, tile.displayName = this.slicerData.categorySourceName, tile.buttonSlicerMetadata = buttonSlicerMetadata, 
                            tile.spacingProperties = this.buttonSlicerVisualData.tileProps.spacing, tile.layoutProperties = this.buttonSlicerVisualData.layout, 
                            tile.buttonSlicerProperties = this.buttonSlicerVisualData.buttonSlicerProps, tile.paddingProperties = this.buttonSlicerVisualData.tileProps.padding, 
                            tile.outlineProperties = this.buttonSlicerVisualData.tileProps.outline, tile.slicerSettings = this.slicerData.slicerSettings, 
                            colorProperty = tileLibrary_capabilities.OV.value.fontColor, objects = buttonSlicerMetadata.isSelectAllDataPoint && !(null === (_b = null === (_a = this.rules) || void 0 === _a ? void 0 : _a[colorProperty.objectName]) || void 0 === _b ? void 0 : _b[colorProperty.propertyName]) ? this.colorObjects : buttonSlicerMetadata.objects, 
                            tile.colorsByInstance = readColorProperty(objects, this.colorHelper, buttonSlicerInstanceIds, this.colorDefaults), 
                            imageSettings = function(objects, instanceIds, defaults) {
                                return (0, tileLibraryConverter.BE)(instanceIds, function(instanceid, defaultInstanceSettings) {
                                    var instanceDefaults = null == defaults ? void 0 : defaults[instanceid];
                                    return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, null == defaults ? void 0 : defaults.default), (0, 
                                    tileLibraryConverter.Yb)(objects, advancedSlicer_capabilities.yD.image, instanceDefaults, defaultInstanceSettings, "".concat(instanceid)));
                                });
                            }(buttonSlicerMetadata.objects, buttonSlicerInstanceIds, this.imageDefaults), tile.imageProperties = function(imageSettings, imageProps) {
                                var imagePropertiesPerInstance = _.cloneDeep(imageProps);
                                for (var instance in imageSettings) {
                                    var imageSetting = imageSettings[instance];
                                    imageSetting.image && (imagePropertiesPerInstance.image[instance].image = imageSetting.image);
                                }
                                return imagePropertiesPerInstance;
                            }(imageSettings, this.buttonSlicerVisualData.imageProps), instanceSettings = updateColorProperties(tile.colorsByInstance, this.buttonSlicerVisualData.tileProps, this.buttonSlicerVisualData.buttonSlicerProps, this.colorDefaults), 
                            tile.buttonSlicerProperties = instanceSettings[1], gridCellRenderData = data, tileProps = instanceSettings[0], 
                            (tileOptions = {
                                element: d3.select(gridCellRenderData.element.get(0)),
                                width: gridCellRenderData.viewport.width,
                                height: gridCellRenderData.viewport.height,
                                properties: tileProps
                            }).element.classed(buttonSlicerSelector.class, !0).attr("role", "button").data([ buttonSlicerMetadata ]), 
                            this.addTooltip(tileOptions.element), [ 4, tile.update(tileOptions) ];

                          case 1:
                            return _c.sent(), [ 2 ];
                        }
                        var gridCellRenderData, tileProps;
                    });
                });
            }, ButtonSlicer.prototype.addTooltip = function(selection) {
                var hostTooltipService = this.hostServices.tooltips();
                this.tooltipsEnabled && hostTooltipService && hostTooltipService.enabled() ? this.tooltipService.addTooltip(selection, function(args) {
                    var data = args.data;
                    if (null != data) return data.tooltipInfo;
                }, function(args) {
                    return [ args.data.identity ];
                }) : this.tooltipService.removeTooltips(selection);
            }, ButtonSlicer;
        }(), ButtonSlicerBehavior = function() {
            function ButtonSlicerBehavior(tiles) {
                this.tiles = tiles;
            }
            return ButtonSlicerBehavior.prototype.bindEvents = function(options, selectionHandler) {}, 
            ButtonSlicerBehavior.prototype.renderSelection = function() {
                this.tiles.update();
            }, ButtonSlicerBehavior;
        }();
        function createAdvancedSlicer(options) {
            return new ButtonSlicer(options);
        }
    },
    87592: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            VT: function() {
                return DefaultSlicerProperties;
            },
            OQ: function() {
                return convert;
            }
        });
        var tslib_es6 = __webpack_require__(81337), slicer_capabilities = __webpack_require__(9434), common_colorHelper = __webpack_require__(90120), fontProperties = __webpack_require__(18664), units = __webpack_require__(32105), outline = __webpack_require__(40550), slicerExpandCollapseToggle = __webpack_require__(36265), visualWarnings = __webpack_require__(45296), debug = __webpack_require__(62458), fontUtils = __webpack_require__(38265), urlUtils = __webpack_require__(48066), formatUtil = __webpack_require__(59694), dataViewObject2 = __webpack_require__(82755), dataViewScopeIdentity = __webpack_require__(78843), valueFormatter = __webpack_require__(72489), selectionId = __webpack_require__(26543), filterScopeIdsCollector = __webpack_require__(1629), semanticQuery = __webpack_require__(95462), sqExpr = __webpack_require__(94419), sqExprVisitor = __webpack_require__(75074), sqExprEqualityVisitor = __webpack_require__(45413), slicerUtil1 = __webpack_require__(68447), converterHelper = __webpack_require__(54522), SlicerCategoricalDataReader = function() {
            function SlicerCategoricalDataReader(categorical, columns, selectedDataPoints) {
                this.columns = columns, this.selectedDataPoints = selectedDataPoints, this.column = categorical && !_.isEmpty(categorical.categories) ? categorical.categories[0] : null, 
                this.column && (this.objects = this.column.objects), this.count = this.column && this.column.values ? this.column.values.length : 0, 
                this.isImage = (0, converterHelper.pt)(this.columns[0]);
            }
            return SlicerCategoricalDataReader.prototype.getDataPointsCount = function() {
                return this.count;
            }, SlicerCategoricalDataReader.prototype.getMetadataColumn = function() {
                return this.column && this.column.source || this.columns[0];
            }, SlicerCategoricalDataReader.prototype.getDataViewDataPoint = function(index) {
                var count, _this = this;
                return debug.fF.assert(function() {
                    return index <= _this.count;
                }, ".getDataViewDataPoint index is out of bounds"), this.objects && (count = (0, 
                dataViewObject2.NA)(this.objects[index], slicer_capabilities.gO.general.count, count)), 
                {
                    scopeId: this.column.identity[index],
                    count,
                    value: this.column.values[index],
                    levelCount: this.count
                };
            }, SlicerCategoricalDataReader.prototype.isImageData = function() {
                return this.isImage;
            }, SlicerCategoricalDataReader.prototype.getLevel = function() {
                return 0;
            }, SlicerCategoricalDataReader.prototype.hasCount = function() {
                return !_.isEmpty(this.objects);
            }, SlicerCategoricalDataReader.prototype.getSelectedNodes = function() {
                return this.selectedDataPoints;
            }, SlicerCategoricalDataReader.prototype.getMetadataColumns = function() {
                return this.column && [ this.column.source ];
            }, SlicerCategoricalDataReader.prototype.getIdentityExprs = function() {
                return this.column && this.column.identityFields && [ this.column.identityFields ];
            }, SlicerCategoricalDataReader;
        }(), advancedSlicer_capabilities = __webpack_require__(62283), tileLibrary_capabilities = __webpack_require__(93187), SlicerMatrixDataReader = function() {
            function SlicerMatrixDataReader(matrix, metadataColumns, root, selectedDataPoints) {
                this.matrix = matrix, this.metadataColumns = metadataColumns, this.root = root, 
                this.selectedDataPoints = selectedDataPoints, this.root = root, this.level = root && root.level + 1 || 0, 
                this.root || (this.root = matrix && matrix.rows && matrix.rows.root, this.root && !_.isEmpty(matrix.rows.levels) && (this.metadata = matrix.rows.levels[this.level].sources[0], 
                this.metadata && (this.isImageUrlColumn = (0, converterHelper.pt)(this.metadata)))), 
                this.valueSources = null == matrix ? void 0 : matrix.valueSources, this.count = this.root && this.root.children && this.root.children.length || 0;
            }
            return SlicerMatrixDataReader.prototype.getDataPointsCount = function() {
                return this.count;
            }, SlicerMatrixDataReader.prototype.getMetadataColumn = function() {
                return this.metadata || this.metadataColumns[this.level];
            }, SlicerMatrixDataReader.prototype.getDataViewDataPoint = function(index) {
                var value, _this = this;
                debug.fF.assert(function() {
                    return index < _this.count && index >= 0;
                }, ".getDataViewDataPoint index is out of bounds");
                var node = this.root.children[index];
                if (!node.isSubtotal) {
                    var reader;
                    if (debug.fF.assert(function() {
                        return 1 === node.levelValues.length;
                    }, ".getDataViewDataPoint does not expect levelValues to have more than one value."), 
                    _.some(node.children, function(child) {
                        return !child.isSubtotal;
                    })) {
                        var filterNode = _.find(this.selectedDataPoints, function(selected) {
                            return (0, dataViewScopeIdentity.fS)(selected.identity, node.identity);
                        });
                        reader = new SlicerMatrixDataReader(this.matrix, this.metadataColumns, node, filterNode && filterNode.children);
                    }
                    value = node.levelValues[0].value;
                    var imageUrl, hasDefaultInstanceImage = !_.isEmpty((0, dataViewObject2.NA)(node.objects, advancedSlicer_capabilities.yD.image.image, void 0, "default"));
                    this.isImage = !hasDefaultInstanceImage && 1 === this.metadataColumns.length && this.isImageUrlColumn, 
                    this.isImage && (imageUrl = (0, valueFormatter.WU)(value));
                    var tooltipInfo = this.readTooltipInfo(node), levelCount = this.count;
                    return this.root && this.root.children && (levelCount = _.filter(this.root.children, function(child) {
                        return !child.isSubtotal && child.level === node.level;
                    }).length), {
                        scopeId: node.identity,
                        isCollapsed: node.isCollapsed,
                        value,
                        childrenReader: reader,
                        tooltipInfo,
                        imageUrl,
                        label: this.readLabelValue(node.objects),
                        objects: node.objects,
                        levelCount
                    };
                }
            }, SlicerMatrixDataReader.prototype.isImageData = function() {
                return this.isImage;
            }, SlicerMatrixDataReader.prototype.getLevel = function() {
                return this.level;
            }, SlicerMatrixDataReader.prototype.hasCount = function() {
                return !1;
            }, SlicerMatrixDataReader.prototype.getSelectedNodes = function() {
                return this.selectedDataPoints;
            }, SlicerMatrixDataReader.prototype.getMetadataColumns = function() {}, SlicerMatrixDataReader.prototype.getIdentityExprs = function() {
                return this.metadataColumns && _.map(this.metadataColumns, function(column) {
                    return column.identityExprs;
                });
            }, SlicerMatrixDataReader.prototype.readLabelValue = function(objects) {
                if (objects) return (0, dataViewObject2.NA)(objects, tileLibrary_capabilities.OV.label.field);
            }, SlicerMatrixDataReader.prototype.readTooltipInfo = function(node) {
                var _a, tooltipInfo;
                if (!_.isEmpty(node.values)) for (var valueIndex in node.values) {
                    var instanceValue = node.values[valueIndex], instanceIndex = null !== (_a = instanceValue.valueSourceIndex) && void 0 !== _a ? _a : 0, dynamicFormatString = (0, 
                    dataViewObject2.NA)(instanceValue.objects, advancedSlicer_capabilities.yD.general.formatString), valueSource = this.valueSources[instanceIndex];
                    (tooltipInfo = tooltipInfo || []).push({
                        displayName: valueSource.displayName,
                        value: (0, converterHelper.xq)(instanceValue.value, valueSource, advancedSlicer_capabilities.yD.general.formatString, !1, dynamicFormatString)
                    });
                }
                return tooltipInfo;
            }, SlicerMatrixDataReader;
        }(), SlicerDataViewReader = function() {
            function SlicerDataViewReader(dataView, listJoinSeparator, selectedDataPoints) {
                this.dataView = dataView, this.listJoinSeparator = listJoinSeparator, this.initMetadataColumns(), 
                this.reader = dataView.categorical ? new SlicerCategoricalDataReader(dataView.categorical, this.columns, selectedDataPoints) : new SlicerMatrixDataReader(dataView.matrix, this.columns, void 0, selectedDataPoints);
            }
            return SlicerDataViewReader.prototype.getIdentityFields = function() {
                var columns = this.getMetadataColumns();
                return this.reader.getIdentityExprs() || _.map(columns, function(column) {
                    return column.identityExprs;
                });
            }, SlicerDataViewReader.prototype.getDataPointsReader = function() {
                return this.reader;
            }, SlicerDataViewReader.prototype.hasGroupOnKeys = function() {
                var columns = this.getMetadataColumns();
                if (_.isEmpty(columns)) return !1;
                for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {
                    var column = columns_1[_i];
                    if (!_.isEmpty(column.identityExprs) && !_.isEmpty(column.expr) && (column.identityExprs.length > 1 || !(0, 
                    sqExprEqualityVisitor.fS)(column.identityExprs[0], column.expr))) return !0;
                }
                return !1;
            }, SlicerDataViewReader.prototype.getQueryNamePerLevel = function() {
                var columns = this.getMetadataColumns();
                return _.map(columns, function(column) {
                    return column.queryName;
                });
            }, SlicerDataViewReader.prototype.getDisplayNamePerLevel = function() {
                var columns = this.getMetadataColumns();
                return _.map(columns, function(column) {
                    return column.displayName;
                });
            }, SlicerDataViewReader.prototype.getDisplayName = function() {
                var displayNames = this.getDisplayNamePerLevel();
                return _.join(displayNames, this.listJoinSeparator);
            }, SlicerDataViewReader.prototype.getColumns = function() {
                return this.columns;
            }, SlicerDataViewReader.prototype.getMetadataColumnByLevel = function(index) {
                return this.columns[index];
            }, SlicerDataViewReader.prototype.getMetadataColumns = function() {
                return this.reader.getMetadataColumns() || this.columns;
            }, SlicerDataViewReader.prototype.initMetadataColumns = function() {
                this.columns = (0, slicerUtil1.zJ)(this.dataView.metadata.columns);
            }, SlicerDataViewReader;
        }(), sqExprStaticMembers = __webpack_require__(74082), getDataViewScopeIdentityComparisonExpr = __webpack_require__(3222), isDefaultValue = __webpack_require__(18885), slicerSelectionHandler = __webpack_require__(83611), SlicerFilterAnalyzer = function() {
            function SlicerFilterAnalyzer(options, avoidDefaultValue) {
                this.hasMappedColumn = !1, this.filter = options.filter, this.isNotFilter = !1, 
                this.analyze(options, avoidDefaultValue);
            }
            return SlicerFilterAnalyzer.prototype.analyze = function(options, avoidDefaultValue) {
                var _this = this;
                if (this.hasMappedColumn = (0, slicerUtil1.R6)({
                    columns: options.columns
                }), this.isAnyFilter = semanticQuery.yl.isAnyFilter(this.filter), !this.isAnyFilter) {
                    var fieldSQExprsPerLevel = options.fieldSQExprs;
                    if (this.filter) {
                        var filterNodes = (0, filterScopeIdsCollector.Gl)(this.filter, fieldSQExprsPerLevel);
                        if (filterNodes) {
                            if (this.isNotFilter = _.some(filterNodes, function(filterNode) {
                                return !filterNode.selected;
                            }), this.hasMappedColumn) {
                                var hasBlankFilter = _.some(filterNodes, function(filterNode) {
                                    return _this.isSQExprBlank(filterNode);
                                });
                                (this.isNotFilter || hasBlankFilter) && (this.isNotFilter = !1, this.filter = void 0);
                            }
                            this.selectedIdentities = filterNodes, this.isDefaultFilter = 1 === this.selectedIdentities.length && (0, 
                            isDefaultValue.F)(this.selectedIdentities[0].identity.expr);
                        }
                    }
                    if (this.defaultValueByLevel = this.getDataViewDefaultValuePerLevel(options.columns, options.defaultValuePropertyId), 
                    !_.isEmpty(_.compact(this.defaultValueByLevel)) && !avoidDefaultValue && (this.filter || (this.filter = slicerSelectionHandler.N.buildDefaultValueFilter(options.columns), 
                    this.selectedIdentities = (0, filterScopeIdsCollector.Gl)(this.filter, fieldSQExprsPerLevel), 
                    this.isDefaultFilter = !0), this.isDefaultFilter && !_.isEmpty(this.selectedIdentities))) for (var node_1 = this.selectedIdentities[0], level = 0; node_1; ) {
                        var defaultValueScopeIdentity = (0, dataViewScopeIdentity.TZ)((0, getDataViewScopeIdentityComparisonExpr.R)(fieldSQExprsPerLevel[level], this.defaultValueByLevel[level].identityFieldsValues));
                        this.isNotFilter = !1, node_1.identity = defaultValueScopeIdentity, debug.fF.assert(function() {
                            return _.isEmpty(node_1.children) || 1 === node_1.children.length;
                        }, "Default value filter can not have more than single node per level"), node_1 = _.isEmpty(node_1.children) ? void 0 : node_1.children[0], 
                        level++;
                    }
                }
            }, SlicerFilterAnalyzer.prototype.isSQExprBlank = function(filterNode) {
                var expr = filterNode.identity.expr;
                return !!(0, sqExprStaticMembers.$Q)(expr) && (0, sqExprStaticMembers.WC)(expr);
            }, SlicerFilterAnalyzer.prototype.getDataViewDefaultValuePerLevel = function(columns, defaultValueProperty) {
                if (!_.isEmpty(columns)) return _.map(columns, function(column) {
                    return (0, dataViewObject2.NA)(column.objects, defaultValueProperty);
                });
            }, SlicerFilterAnalyzer;
        }(), DefaultSlicerOutlineColorName = "foregroundNeutralSecondaryAlt2", DefaultSlicerTextColorName = "foregroundNeutralSecondary", DefaultSlicerBorderColorSearch = "#C8C8C8", DefaultBackgroundColorSearch = "#ffffff";
        function DefaultSlicerProperties(style) {
            return {
                general: {
                    outlineWeight: 1,
                    outlineColor: common_colorHelper.v.getThemeColor(style, DefaultSlicerOutlineColorName)
                },
                slicerText: {
                    color: common_colorHelper.v.getThemeColor(style, DefaultSlicerTextColorName),
                    outlineStyle: outline.$m.Nil,
                    textSize: 10,
                    fontFamily: fontUtils.Wn.regular.css,
                    labelBold: !1,
                    labelItalic: !1,
                    labelUnderline: !1
                },
                selection: (0, slicerUtil1.Cq)(),
                search: {
                    enabled: !1,
                    outlineStyle: outline.$m.Bottom,
                    borderColor: DefaultSlicerBorderColorSearch,
                    background: DefaultBackgroundColorSearch
                },
                expandCollapse: {
                    indentation: 15,
                    visible: !0,
                    toggleType: slicerExpandCollapseToggle.H.Chevron
                },
                items: {
                    padding: void 0,
                    accessibilityContrastProperties: !1
                }
            };
        }
        function convert(options) {
            var dataView = options.dataView, hostServices = options.hostServices, selectionHandler = options.selectionHandler;
            if (debug.fF.assertValue(hostServices, "hostServices"), dataView && dataView.metadata && !_.isEmpty(dataView.metadata.columns)) {
                var listSeparator = hostServices.getLocalizedString("ListJoin_Separator"), dataViewReader = new SlicerDataViewReader(dataView, hostServices.getLocalizedString("ListJoin_Separator")), identityFields = dataViewReader.getIdentityFields();
                if (!_.isEmpty(identityFields)) {
                    var filter = dataView.metadata && dataView.metadata.objects && (0, dataViewObject2.NA)(dataView.metadata.objects, slicer_capabilities.gO.general.filter), columns = dataViewReader.getColumns(), analyzer = new SlicerFilterAnalyzer({
                        columns,
                        defaultValuePropertyId: slicer_capabilities.gO.general.defaultValue,
                        filter,
                        fieldSQExprs: identityFields
                    }, hostServices.ignoreDefaultFilter());
                    _.isEmpty(analyzer.selectedIdentities) || (dataViewReader = new SlicerDataViewReader(dataView, listSeparator, analyzer.selectedIdentities));
                    var shouldDisableSelectAll = analyzer.hasMappedColumn && !(0, slicerUtil1.Wm)({
                        columns
                    });
                    !function(originalFilter, analyzer, selectionHandler, hostServices, shouldDisableSelectAll) {
                        var analyzedSemanticFilter = analyzer.filter, isInvertedSelectionMode = selectionHandler.isSelectionModeInverted();
                        if (analyzedSemanticFilter && !semanticQuery.yl.isSameFilter(analyzedSemanticFilter, originalFilter)) {
                            selectionHandler.handleClearSelection();
                            var filterPropertyIdentifier = slicer_capabilities.gO.general.filter, properties = {};
                            properties[filterPropertyIdentifier.propertyName] = analyzer.filter, hostServices.persistProperties({
                                merge: [ {
                                    objectName: filterPropertyIdentifier.objectName,
                                    selector: void 0,
                                    properties
                                } ]
                            });
                        }
                        !shouldDisableSelectAll || !isInvertedSelectionMode && semanticQuery.yl.isSameFilter(analyzedSemanticFilter, originalFilter) || (0, 
                        slicerUtil1.K5)(selectionHandler, !1);
                    }(filter, analyzer, selectionHandler, hostServices, shouldDisableSelectAll), selectionHandler.setColumns(dataViewReader.getColumns()), 
                    selectionHandler.setQueryNameByLevel(dataViewReader.getQueryNamePerLevel());
                    var slicerData = function(analyzer, dataViewMetadata, dataReader, options, shouldDisableSelectAll) {
                        var hostServices = options.hostServices, selectionHandler = options.selectionHandler, style = options.style, localizedSelectAllText = options.localizedSelectAllText, localizedDeselectAllText = options.localizedDeselectAllText, isSlicer = options.isSlicer ?? !1, isInvertedSelectionMode = null != selectionHandler && selectionHandler.isSelectionModeInverted();
                        isInvertedSelectionMode = analyzer.filter ? analyzer.isAnyFilter ? (0, dataViewObject2.NA)(dataViewMetadata.objects, slicer_capabilities.gO.data.isInvertedSelectionMode, isInvertedSelectionMode) : analyzer.isNotFilter : !analyzer.hasMappedColumn && (0, 
                        dataViewObject2.NA)(dataViewMetadata.objects, slicer_capabilities.gO.data.isInvertedSelectionMode, isInvertedSelectionMode);
                        var defaultSettings = function(dataViewMetadata, style, slicerType) {
                            var defaultSettings = DefaultSlicerProperties(style), objects = dataViewMetadata.objects, colorHelper = common_colorHelper.v.create(style);
                            if (objects) {
                                defaultSettings.items.accessibilityContrastProperties = (0, dataViewObject2.NA)(objects, slicer_capabilities.gO.items.accessibilityContrastProperties, !1);
                                var defaultTextClass = "lightLabel", defaultTextColor = "foregroundNeutralSecondary";
                                defaultSettings.items.accessibilityContrastProperties && 0 === slicerType && (defaultTextColor = "foreground", 
                                defaultTextClass = "largeLightLabel");
                                var slicerItemTextFontProperties = (0, fontProperties.Zi)((0, dataViewObject2.RK)(objects, "items"), {
                                    color: "fontColor",
                                    family: "fontFamily",
                                    size: "textSize"
                                }, colorHelper, style, defaultTextColor, defaultTextClass, {
                                    color: defaultSettings.slicerText.color,
                                    family: defaultSettings.slicerText.fontFamily,
                                    size: units.B.createFromPt(defaultSettings.slicerText.textSize)
                                }, !0);
                                defaultSettings.slicerText.color = slicerItemTextFontProperties.color, defaultSettings.slicerText.fontFamily = slicerItemTextFontProperties.family, 
                                defaultSettings.slicerText.textSize = slicerItemTextFontProperties.size.pt, defaultSettings.items.accessibilityContrastProperties && 1 === slicerType && (defaultSettings.slicerText.outlineStyle = outline.$m.Top | outline.$m.Bottom | outline.$m.Left | outline.$m.Right), 
                                defaultSettings.slicerText.outlineStyle = (0, dataViewObject2.NA)(objects, slicer_capabilities.gO.items.outlineStyle, defaultSettings.slicerText.outlineStyle);
                                var textBackground = colorHelper.getColorForProperty(objects, slicer_capabilities.gO.items.background, void 0);
                                textBackground && (defaultSettings.slicerText.background = textBackground), defaultSettings.search.enabled = (0, 
                                dataViewObject2.NA)(objects, slicer_capabilities.gO.general.selfFilterEnabled, defaultSettings.search.enabled), 
                                defaultSettings.search.outlineStyle = (0, dataViewObject2.NA)(objects, slicer_capabilities.gO.searchBox.outlineStyle, defaultSettings.search.outlineStyle), 
                                defaultSettings.search.borderColor = colorHelper.getColorForPropertyWithDefaultColor(objects, slicer_capabilities.gO.searchBox.borderColor, defaultSettings.search.borderColor);
                                var searchBackground = colorHelper.getColorForProperty(objects, slicer_capabilities.gO.searchBox.background, void 0);
                                defaultSettings.search.background = searchBackground || defaultSettings.slicerText.background || defaultSettings.search.background, 
                                defaultSettings.expandCollapse.toggleType = (0, dataViewObject2.NA)(objects, slicer_capabilities.gO.items.expandCollapseToggleType, defaultSettings.expandCollapse.toggleType), 
                                defaultSettings.expandCollapse.indentation = (0, dataViewObject2.NA)(objects, slicer_capabilities.gO.items.steppedLayoutIndentation, defaultSettings.expandCollapse.indentation), 
                                defaultSettings.general.outlineWeight = (0, dataViewObject2.NA)(objects, slicer_capabilities.gO.general.outlineWeight, defaultSettings.general.outlineWeight), 
                                defaultSettings.general.outlineColor = colorHelper.getColorForPropertyWithDefaultColor(objects, slicer_capabilities.gO.general.outlineColor, defaultSettings.general.outlineColor), 
                                defaultSettings.selection.selectAllCheckboxEnabled = (0, dataViewObject2.NA)(objects, slicer_capabilities.gO.selection.selectAllCheckboxEnabled, defaultSettings.selection.selectAllCheckboxEnabled), 
                                defaultSettings.selection.singleSelect = (0, dataViewObject2.NA)(objects, slicer_capabilities.gO.selection.singleSelect, defaultSettings.selection.singleSelect), 
                                defaultSettings.selection.strictSingleSelect = (0, dataViewObject2.NA)(objects, slicer_capabilities.gO.selection.strictSingleSelect, defaultSettings.selection.strictSingleSelect), 
                                defaultSettings.slicerText.labelBold = (0, dataViewObject2.NA)(objects, slicer_capabilities.gO.items.bold, !1), 
                                defaultSettings.slicerText.labelItalic = (0, dataViewObject2.NA)(objects, slicer_capabilities.gO.items.italic, !1), 
                                defaultSettings.slicerText.labelUnderline = (0, dataViewObject2.NA)(objects, slicer_capabilities.gO.items.underline, !1), 
                                defaultSettings.items.padding = (0, dataViewObject2.NA)(objects, slicer_capabilities.gO.items.padding, void 0);
                            }
                            return defaultSettings;
                        }(dataViewMetadata, style, options.slicerType);
                        selectionHandler && (selectionHandler.setSelectionModeInverted(isInvertedSelectionMode), 
                        selectionHandler.setDefaultValueMode(semanticQuery.yl.isDefaultFilter(analyzer.filter)));
                        var queryNamePerLevel = dataReader.getQueryNamePerLevel(), cache = hostServices.getFilterExpressionMetadata(), retainedDataPoints = [], sortableRetainedDataPoints = [], slicerDataPoints = readSlicerDataPoints(dataReader, dataReader.getDataPointsReader(), retainedDataPoints, sortableRetainedDataPoints, hostServices, queryNamePerLevel, cache, {
                            calculatedIndex: 0
                        }, void 0, analyzer, options.featureSwitches, options.valueSettings, options.hideRetainedDataPoints);
                        if (sortableRetainedDataPoints.length > 0) {
                            var sortedRetainedDataPoints = _.chain(sortableRetainedDataPoints).sort(compareSelectedDataPoints).map(function(d) {
                                return d.dataPoint;
                            }).value();
                            retainedDataPoints = retainedDataPoints.concat(sortedRetainedDataPoints);
                        }
                        var metadata = selectionHandler.toFilterExpressionMetadata(retainedDataPoints);
                        hostServices.setFilterExpressionMetadata(metadata);
                        var searchKey = function(dataViewMetadata) {
                            var selfFilter = (0, dataViewObject2.NA)(dataViewMetadata.objects, slicer_capabilities.gO.general.selfFilter, void 0);
                            if (!selfFilter) return "";
                            var filterItems = selfFilter.conditions();
                            debug.fF.assert(function() {
                                return 1 === filterItems.length;
                            }, "There should be exactly 1 filter expression.");
                            var containsFilter = filterItems[0];
                            if (containsFilter) {
                                var containsValueVisitor = new ConditionsFilterValueVisitor;
                                return containsFilter.accept(containsValueVisitor), containsValueVisitor.getValueForField();
                            }
                        }(dataViewMetadata), selection = defaultSettings.selection, strictSingleSelect = selection.strictSingleSelect;
                        if (!strictSingleSelect && isSlicer && selectionHandler.isDisableMultipleSelectForMappedColumn() && (strictSingleSelect = !0, 
                        defaultSettings.selection.strictSingleSelect = !0), selection.selectAllCheckboxEnabled && !strictSingleSelect && _.isEmpty(searchKey)) {
                            var tooltipValue = shouldDisableSelectAll ? hostServices.getLocalizedString("DQP_Disabled_SelectAll") : localizedSelectAllText;
                            slicerDataPoints.unshift({
                                value: isInvertedSelectionMode && localizedDeselectAllText ? localizedDeselectAllText : localizedSelectAllText,
                                tooltip: tooltipValue,
                                identity: selectionId.l0.createWithMeasure(localizedSelectAllText),
                                selected: !1,
                                isSelectAllDataPoint: !0,
                                partially: retainedDataPoints.length > 0,
                                count: void 0,
                                disabled: shouldDisableSelectAll,
                                levelIndex: 0,
                                levelCount: void 0,
                                index: 0,
                                id: "0:0"
                            });
                        }
                        return selectionHandler && selectionHandler.setStrictSingleSelect(strictSingleSelect, _.isEmpty(retainedDataPoints) ? slicerDataPoints : retainedDataPoints), 
                        {
                            categorySourceName: dataReader.getDisplayName(),
                            slicerSettings: defaultSettings,
                            slicerDataPoints,
                            defaultValueByLevel: analyzer.defaultValueByLevel,
                            searchKey,
                            restatement: getRestatement(hostServices, retainedDataPoints, isInvertedSelectionMode, dataReader.getColumns()),
                            warnings: new visualWarnings.tb,
                            retainedDataPoints,
                            queryNameByLevel: queryNamePerLevel,
                            hasGroupOnKeys: dataReader.hasGroupOnKeys()
                        };
                    }(analyzer, dataView.metadata, dataViewReader, options, shouldDisableSelectAll);
                    return slicerData.hasImages = _.some(slicerData.slicerDataPoints, function(slicerDatePoint) {
                        return slicerDatePoint.isImage;
                    }), slicerData;
                }
            }
        }
        function readSlicerDataPoints(dataReader, dataLevelReader, selectedDataPoints, sortableSelectedDataPoints, hostServices, queryNamePerLevel, cache, slicerIndex, parent, analyzer, featureSwitches, valueSettings, hideRetainedDataPoints) {
            for (var selectedFilterNodes = dataLevelReader.getSelectedNodes(), categoryValuesLen = dataLevelReader.getDataPointsCount(), slicerDataPoints = [], source = dataLevelReader.getMetadataColumn(), isFieldParameterAsData = Boolean(featureSwitches && featureSwitches.fieldParameters && source.parameter && 2 === source.parameter.kind), formatString = (0, 
            valueFormatter.EO)(source, slicer_capabilities.gO.general.formatString), level = dataLevelReader.getLevel(), levelIndex = 0, i = 0; i < categoryValuesLen; i++) {
                var dataPoint = dataLevelReader.getDataViewDataPoint(i);
                if (dataPoint) {
                    levelIndex++, slicerIndex.calculatedIndex++;
                    var label, selectedFilterNode = (0, slicerUtil1.X$)(dataPoint.scopeId, selectedFilterNodes);
                    label = valueSettings ? formatValue(dataPoint.value, valueSettings, source) : (0, 
                    valueFormatter.WU)(dataPoint.value, formatString);
                    var isImage = dataLevelReader.isImageData() && (0, urlUtils.gU)(label), tooltip = label, shouldDisable = !1, id = level + ":" + levelIndex;
                    (null == analyzer ? void 0 : analyzer.hasMappedColumn) && null == dataPoint.value && (shouldDisable = !0, 
                    tooltip = hostServices.getLocalizedString("DQP_Disabled_Blank"));
                    var slicerData = {
                        value: label,
                        tooltip,
                        identity: null,
                        selected: null != selectedFilterNode && selectedFilterNode.checked,
                        partially: selectedFilterNode && !_.isEmpty(selectedFilterNode.children),
                        count: dataPoint.count,
                        isImage,
                        level,
                        parent,
                        isCollapsed: dataPoint.isCollapsed,
                        scopeIdentity: dataPoint.scopeId,
                        levelIndex,
                        levelCount: dataPoint.levelCount,
                        disabled: shouldDisable,
                        index: slicerIndex.calculatedIndex,
                        id: parent ? parent.id + "," + id : id,
                        tooltipInfo: dataPoint.tooltipInfo,
                        imageUrl: dataPoint.imageUrl,
                        label: dataPoint.label,
                        objects: dataPoint.objects
                    };
                    if (selectedFilterNode && selectedFilterNode.checked && (isFieldParameterAsData ? sortableSelectedDataPoints.push({
                        dataPoint: slicerData,
                        selectionIndex: selectedFilterNode.index
                    }) : selectedDataPoints.push(slicerData)), slicerDataPoints.push(slicerData), parent && parent.children.push(slicerData), 
                    setIdentity(slicerData, queryNamePerLevel), !dataPoint.isCollapsed && dataPoint.childrenReader) slicerData.children = [], 
                    slicerDataPoints.push.apply(slicerDataPoints, readSlicerDataPoints(dataReader, dataPoint.childrenReader, selectedDataPoints, sortableSelectedDataPoints, hostServices, queryNamePerLevel, cache, slicerIndex, slicerData, void 0, featureSwitches, void 0, hideRetainedDataPoints) || []); else if (selectedFilterNode && !_.isEmpty(selectedFilterNode.children)) {
                        var nextLevel = level + 1, metadataColumn = dataReader.getMetadataColumnByLevel(nextLevel);
                        restoreFromSelection(nextLevel, analyzer, selectedFilterNode.children, queryNamePerLevel, cache && cache.cachedValueItems, metadataColumn, dataReader, dataLevelReader, slicerData, slicerDataPoints, selectedDataPoints, sortableSelectedDataPoints, !1, slicerIndex, featureSwitches);
                    }
                }
            }
            return _.isEmpty(selectedFilterNodes) || restoreFromSelection(level, analyzer, selectedFilterNodes, queryNamePerLevel, cache && cache.cachedValueItems, source, dataReader, dataLevelReader, parent, slicerDataPoints, selectedDataPoints, sortableSelectedDataPoints, !(hideRetainedDataPoints || parent && !1 !== parent.isCollapsed), slicerIndex, featureSwitches), 
            slicerDataPoints;
        }
        function restoreFromSelection(level, filter, nodes, queryNamePerLevel, valueMap, source, reader, levelReader, parent, dataPoints, selectedDataPoints, sortableSelectedDataPoints, shouldRender, slicerIndex, featureSwitches) {
            var isFieldParameterAsData = featureSwitches && featureSwitches.fieldParameters && source.parameter && 2 === source.parameter.kind, formatString = (0, 
            valueFormatter.EO)(source, slicer_capabilities.gO.general.formatString);
            parent && (parent.children = []);
            for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {
                var node = nodes_1[_i], isFilterIdentity = !1, value = void 0, cache = void 0;
                filter && filter.isDefaultFilter && !_.isEmpty(filter.defaultValueByLevel) && filter.defaultValueByLevel[level] ? value = sqExpr.jz.getTextValue(filter.defaultValueByLevel[level].value) : (cache = findValuesForFilterNode(level, node, valueMap), 
                _.isEmpty(cache) ? (value = (0, filterScopeIdsCollector.Xz)(node.identity), isFilterIdentity = !0) : value = cache[0].valueMap[level]), 
                slicerIndex.calculatedIndex++;
                var label = (0, valueFormatter.WU)(value, formatString), dataPoint = createRetainedSlicerDataPoint(node.checked, label, levelReader.hasCount(), levelReader.isImageData(), level, node.identity, parent, !_.isEmpty(node.children), queryNamePerLevel, slicerIndex.calculatedIndex);
                if (dataPoint.isFilterIdentity = isFilterIdentity, shouldRender && dataPoints.push(dataPoint), 
                dataPoint.selected && (isFieldParameterAsData ? sortableSelectedDataPoints.push({
                    dataPoint,
                    selectionIndex: node.index
                }) : selectedDataPoints.push(dataPoint)), !_.isEmpty(node.children)) {
                    var nextLevel = level + 1, source_1 = reader.getMetadataColumnByLevel(nextLevel);
                    restoreFromSelection(nextLevel, filter, node.children, queryNamePerLevel, cache, source_1, reader, levelReader, dataPoint, dataPoints, selectedDataPoints, sortableSelectedDataPoints, shouldRender, slicerIndex, featureSwitches);
                }
            }
        }
        function createRetainedSlicerDataPoint(selected, label, hasCount, isImage, level, identity, parent, partially, queryNamePerLevel, index) {
            var dataPoint = {
                value: label,
                tooltip: label,
                identity: null,
                selected,
                count: hasCount ? 0 : void 0,
                isImage,
                level,
                parent,
                scopeIdentity: identity,
                partially,
                disabled: !1,
                index
            };
            return setIdentity(dataPoint, queryNamePerLevel), parent && parent.children.push(dataPoint), 
            dataPoint;
        }
        function findValuesForFilterNode(level, node, values) {
            if (!_.isEmpty(values)) {
                for (var result = [], _i = 0, values_1 = values; _i < values_1.length; _i++) {
                    var map = values_1[_i];
                    (0, dataViewScopeIdentity.fS)(map.identities[level], node.identity) && result.push(map);
                }
                return result;
            }
        }
        function setIdentity(slicerData, queryNamesByLevel) {
            for (var builder = selectionId.dw.builder(), data = slicerData; data; ) builder.withColumnIdentity(data.scopeIdentity, queryNamesByLevel[slicerData.level]), 
            data = data.parent;
            slicerData.identity = builder.createSelectionId();
        }
        function getRestatement(hostServices, selected, isInverted, columnsByLevel) {
            if (_.isEmpty(selected)) return hostServices.getLocalizedString("All");
            if (1 === selected.length && !isInverted) {
                var dataPoint = selected[0];
                if (null == dataPoint.parent) return dataPoint.value;
                for (var values = [], MultiColumn_Join_Separator = hostServices.getLocalizedString("MultiColumn_Join_Separator"), NamePattern_Bracket = hostServices.getLocalizedString("NamePattern_Bracket"); dataPoint; ) values.unshift((0, 
                formatUtil.W)(NamePattern_Bracket, dataPoint.value, columnsByLevel[dataPoint.level].displayName)), 
                dataPoint = dataPoint.parent;
                return values.join(MultiColumn_Join_Separator);
            }
            return hostServices.getLocalizedString("Slicer_Restatement_Multiple");
        }
        function compareSelectedDataPoints(a, b) {
            debug.fF.assert(function() {
                return null != a.dataPoint.level && null != b.dataPoint.level;
            }, "level should not be nullish"), debug.fF.assert(function() {
                return null != a.selectionIndex && null != b.selectionIndex;
            }, "selectionIndex should not be nullish");
            var levelDiff = a.dataPoint.level - b.dataPoint.level;
            return 0 !== levelDiff ? levelDiff : (debug.fF.assert(function() {
                return a.selectionIndex !== b.selectionIndex;
            }), a.selectionIndex - b.selectionIndex);
        }
        var ConditionsFilterValueVisitor = function(_super) {
            function ConditionsFilterValueVisitor() {
                return null !== _super && _super.apply(this, arguments) || this;
            }
            return (0, tslib_es6.__extends)(ConditionsFilterValueVisitor, _super), ConditionsFilterValueVisitor.prototype.visitConstant = function(expr) {
                expr.type && expr.type.text && (this.value = expr.value);
            }, ConditionsFilterValueVisitor.prototype.visitContains = function(expr) {
                expr.left.accept(this), expr.right.accept(this);
            }, ConditionsFilterValueVisitor.prototype.visitOr = function(expr) {
                expr.left.accept(this), expr.right.accept(this);
            }, ConditionsFilterValueVisitor.prototype.visitColumnRef = function(expr) {
                this.fieldExpr = expr;
            }, ConditionsFilterValueVisitor.prototype.visitHierarchyLevel = function(expr) {
                this.fieldExpr = expr;
            }, ConditionsFilterValueVisitor.prototype.visitDefault = function(expr) {
                this.value = void 0, this.fieldExpr = void 0;
            }, ConditionsFilterValueVisitor.prototype.getValueForField = function() {
                return this.fieldExpr && this.value;
            }, ConditionsFilterValueVisitor;
        }(sqExprVisitor.vq);
        function formatValue(value, valueSettings, column) {
            if (null != value || _.isEmpty(valueSettings.showBlankAs)) {
                var labelDisplayUnits = valueSettings.labelDisplayUnits, isCustom = -1 === labelDisplayUnits, specificFormatString = void 0;
                isCustom && !_.isEmpty(valueSettings.customFormatString) && (specificFormatString = valueSettings.customFormatString);
                var objects = {};
                return null != specificFormatString && (objects = {
                    general: {
                        formatString: specificFormatString
                    }
                }), new valueFormatter.g({
                    column,
                    formatStringPropId: slicer_capabilities.gO.general.formatString,
                    nullsAreBlank: !0,
                    precision: isCustom ? void 0 : valueSettings.labelPrecision,
                    formatSingleValues: 0 === labelDisplayUnits,
                    defaultPrecisionForScaledValues: !0,
                    trailingZeroes: !0
                }).format(value, objects);
            }
            return valueSettings.showBlankAs;
        }
    },
    62224: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            wV: function() {
                return SlicerWebBehavior;
            }
        });
        var _Visuals_capabilities_slicer_capabilities__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(9434), _Visuals_common_colorHelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(90120), _Visuals_types_slicerOrientation__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(3212), _VisualsCommon_DOMConstants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(65195), _VisualsCommon_Utility_browserUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(59107), _VisualsCommon_Utility_keyUtils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(9795), _slicerUtil1__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(68447), SlicerWebBehavior = function() {
            function SlicerWebBehavior() {}
            return SlicerWebBehavior.prototype.bindEvents = function(options, selectionHandler) {
                this.behavior = this.createWebBehavior(options), this.behavior.bindEvents(options.behaviorOptions, selectionHandler);
            }, SlicerWebBehavior.prototype.renderSelection = function() {
                this.behavior && this.behavior.renderSelection();
            }, SlicerWebBehavior.bindSlicerEvents = function(behaviorOptions, slicers, selectionHandler, slicerSettings) {
                SlicerWebBehavior.bindSlicerItemSelectionEvent(slicers, selectionHandler, slicerSettings), 
                behaviorOptions.searchInput && SlicerWebBehavior.bindSlicerSearchEvent(behaviorOptions.searchInput, behaviorOptions.clearSearchTextButton, selectionHandler);
            }, SlicerWebBehavior.setSelectionOnSlicerItems = function(selectableItems, selectionHandler, style) {
                var isSelectionInverted = selectionHandler.isSelectionModeInverted(), hasSelection = selectionHandler.hasSelection();
                selectableItems.each(function(d, i) {
                    var partially = !!d.partially || d.isSelectAllDataPoint && hasSelection, shouldCheck = !hasSelection && isSelectionInverted || hasSelection && !partially && (0, 
                    _slicerUtil1__WEBPACK_IMPORTED_MODULE_0__.OO)(d, isSelectionInverted);
                    if ($(this).toggleClass("selected", shouldCheck), $(this).toggleClass("partiallySelected", !!partially), 
                    style.isHighContrast) {
                        var span = this.getElementsByTagName("span")[0];
                        if (shouldCheck) {
                            var selectedColor = _Visuals_common_colorHelper__WEBPACK_IMPORTED_MODULE_1__.v.getThemeColor(style, "foregroundSelected");
                            span && (span.style.backgroundColor = selectedColor, span.style.borderColor = selectedColor);
                        } else {
                            var borderColor = _Visuals_common_colorHelper__WEBPACK_IMPORTED_MODULE_1__.v.getThemeColor(style, "foreground");
                            span && (span.style.backgroundColor = "", span.style.borderColor = borderColor, 
                            span.style.boxShadow = "none");
                        }
                    }
                    var input = this.getElementsByTagName("input")[0];
                    input && (input.checked = shouldCheck);
                });
            }, SlicerWebBehavior.bindSlicerItemSelectionEvent = function(slicers, selectionHandler, slicerSettings) {
                var _this = this;
                slicers.on("keydown", function(d) {
                    var event = d3.event, keyCode = event.keyCode;
                    32 !== keyCode && 13 !== keyCode || (32 === keyCode && event.preventDefault(), _this.toggleItemSelection(d, selectionHandler, slicerSettings));
                }).on("click", function(d) {
                    $(d3.event.target).trigger("slicer.dataPointSelected"), _this.toggleItemSelection(d, selectionHandler, slicerSettings);
                });
            }, SlicerWebBehavior.toggleItemSelection = function(d, selectionHandler, slicerSettings, event) {
                if (!d.disabled) {
                    var d3Event = event || d3.event;
                    if (d.isSelectAllDataPoint) selectionHandler.toggleSelectionModeInversion(), selectionHandler.persistSelectionFilter(_Visuals_capabilities_slicer_capabilities__WEBPACK_IMPORTED_MODULE_2__.gO.general.filter); else {
                        var selectMode = SlicerWebBehavior.isMultiSelect(d, d3Event, slicerSettings, selectionHandler) ? 3 : 0;
                        selectionHandler.handleSelection(d, selectMode, {
                            x: d3Event.clientX,
                            y: d3Event.clientY
                        }) && selectionHandler.persistSelectionFilter(_Visuals_capabilities_slicer_capabilities__WEBPACK_IMPORTED_MODULE_2__.gO.general.filter);
                    }
                }
            }, SlicerWebBehavior.toggleItemSelectionFromExternal = function(event, d, selectionHandler, slicerSettings) {
                this.toggleItemSelection(d, selectionHandler, slicerSettings, event);
            }, SlicerWebBehavior.bindSlicerSearchEvent = function(slicerSearch, clearSearchTextButton, selectionHandler) {
                var _this = this;
                slicerSearch.empty() || (slicerSearch.on(_VisualsCommon_DOMConstants__WEBPACK_IMPORTED_MODULE_3__.n, function() {
                    var d3Event = d3.event;
                    _VisualsCommon_Utility_browserUtils__WEBPACK_IMPORTED_MODULE_4__.M.isCtrlOrMeta(d3Event) && (0, 
                    _VisualsCommon_Utility_keyUtils__WEBPACK_IMPORTED_MODULE_5__.iZ)(d3Event.keyCode) || (0, 
                    _VisualsCommon_Utility_keyUtils__WEBPACK_IMPORTED_MODULE_5__.Wl)(d3Event.keyCode) || (0, 
                    _VisualsCommon_Utility_keyUtils__WEBPACK_IMPORTED_MODULE_5__.rH)(d3Event.keyCode) ? d3Event.stopPropagation() : 27 === d3Event.keyCode ? (_this.clearSearch(selectionHandler, slicerSearch), 
                    d3Event.preventDefault()) : 13 === d3Event.keyCode && (SlicerWebBehavior.startSearch(slicerSearch, selectionHandler), 
                    d3Event.stopPropagation());
                }).on(_VisualsCommon_DOMConstants__WEBPACK_IMPORTED_MODULE_3__.cp, function() {
                    var d3Event = d3.event;
                    _.debounce(function() {
                        9 !== d3Event.keyCode && 16 !== d3Event.keyCode && SlicerWebBehavior.startSearch(slicerSearch, selectionHandler);
                    }, SlicerWebBehavior.searchInputTimeoutDuration)();
                }), clearSearchTextButton && !clearSearchTextButton.empty() && clearSearchTextButton.on(_VisualsCommon_DOMConstants__WEBPACK_IMPORTED_MODULE_3__.G6, function() {
                    _this.clearSearch(selectionHandler, slicerSearch), d3.event.stopPropagation();
                }));
            }, SlicerWebBehavior.clearSearch = function(selectionHandler, slicerSearch) {
                selectionHandler.setSearchMode(!0), selectionHandler.persistSelfFilter(_Visuals_capabilities_slicer_capabilities__WEBPACK_IMPORTED_MODULE_2__.gO.general.selfFilter, null), 
                slicerSearch.property("value", "");
                var headerContainer = d3.select(_slicerUtil1__WEBPACK_IMPORTED_MODULE_0__.s8.selector);
                (new _slicerUtil1__WEBPACK_IMPORTED_MODULE_0__.gy).configureSearchBoxIcon(headerContainer, void 0);
            }, SlicerWebBehavior.startSearch = function(slicerSearch, selectionHandler) {
                var element = slicerSearch.node(), searchKey = element && element.value;
                selectionHandler.setSearchMode(!0), selectionHandler.persistSelfFilter(_Visuals_capabilities_slicer_capabilities__WEBPACK_IMPORTED_MODULE_2__.gO.general.selfFilter, searchKey);
            }, SlicerWebBehavior.isMultiSelect = function(d, event, settings, selectionHandler) {
                return !settings.selection.strictSingleSelect && !selectionHandler.isDisableMultipleSelectForMappedColumn() && (selectionHandler.isSelectionModeInverted() || !settings.selection.singleSelect || _VisualsCommon_Utility_browserUtils__WEBPACK_IMPORTED_MODULE_4__.M.isCtrlOrMeta(event) || 1 === selectionHandler.getDataMultiSelectMode() || SlicerWebBehavior.hasParentSelected(d));
            }, SlicerWebBehavior.hasParentSelected = function(d) {
                for (;d.parent; ) {
                    if (d.parent.selected) return !0;
                    d = d.parent;
                }
            }, SlicerWebBehavior.prototype.createWebBehavior = function(options) {
                return options.orientation === _Visuals_types_slicerOrientation__WEBPACK_IMPORTED_MODULE_6__.i.Horizontal ? new HorizontalSlicerWebBehavior : new VerticalSlicerWebBehavior;
            }, SlicerWebBehavior.searchInputTimeoutDuration = 500, SlicerWebBehavior;
        }(), HorizontalSlicerWebBehavior = function() {
            function HorizontalSlicerWebBehavior() {}
            return HorizontalSlicerWebBehavior.prototype.bindEvents = function(options, selectionHandler) {
                this.selectionHandler = selectionHandler, this.slicerSettings = options.settings, 
                this.style = options.style, this.items = options.itemsContainer, SlicerWebBehavior.bindSlicerEvents(options, this.items, selectionHandler, this.slicerSettings);
            }, HorizontalSlicerWebBehavior.prototype.renderSelection = function() {
                SlicerWebBehavior.setSelectionOnSlicerItems(this.items, this.selectionHandler, this.style);
            }, HorizontalSlicerWebBehavior;
        }(), VerticalSlicerWebBehavior = function() {
            function VerticalSlicerWebBehavior() {}
            return VerticalSlicerWebBehavior.prototype.bindEvents = function(options, selectionHandler) {
                this.itemContainers = options.itemContainers, this.itemInputs = options.itemInputs, 
                this.selectionHandler = selectionHandler, this.settings = options.settings, this.style = options.style, 
                SlicerWebBehavior.bindSlicerEvents(options, this.itemContainers, selectionHandler, this.settings);
            }, VerticalSlicerWebBehavior.prototype.renderSelection = function() {
                SlicerWebBehavior.setSelectionOnSlicerItems(this.itemInputs, this.selectionHandler, this.style);
            }, VerticalSlicerWebBehavior;
        }();
    },
    82085: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            v: function() {
                return SlicerSearchInput;
            }
        });
        var _VisualsCommon_Utility_StandaloneUtility1__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(64329), _slicerUtil1__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(68447), SlicerSearchInput = function() {
            function SlicerSearchInput(hostServices) {
                this.hostServices = hostServices, this.domHelper = new _slicerUtil1__WEBPACK_IMPORTED_MODULE_0__.gy;
            }
            return SlicerSearchInput.fromSlicerSettings = function(settings, searchKey, isVisible, hasClearSearchButton, featureSwitches) {
                var _a, _b, _c, _d, _e, _f;
                if (settings) return {
                    isVisible,
                    hasClearSearchButton,
                    searchKey,
                    style: {
                        borderStyle: null === (_a = settings.search) || void 0 === _a ? void 0 : _a.outlineStyle,
                        borderColor: null === (_b = settings.search) || void 0 === _b ? void 0 : _b.borderColor,
                        background: null === (_c = settings.search) || void 0 === _c ? void 0 : _c.background,
                        color: null === (_d = settings.slicerText) || void 0 === _d ? void 0 : _d.color,
                        textSize: null === (_e = settings.slicerText) || void 0 === _e ? void 0 : _e.textSize,
                        fontFamily: null === (_f = settings.slicerText) || void 0 === _f ? void 0 : _f.fontFamily
                    }
                };
            }, SlicerSearchInput.prototype.create = function(container) {
                this.container = this.domHelper.addSearch(this.hostServices, container), this.input = this.container.select(_slicerUtil1__WEBPACK_IMPORTED_MODULE_0__.Mj.selector);
            }, SlicerSearchInput.prototype.addClearButton = function() {
                this.clear = this.domHelper.addClearSearchButton(this.hostServices, this.container);
            }, SlicerSearchInput.prototype.clearSearchText = function() {
                this.container.select(_slicerUtil1__WEBPACK_IMPORTED_MODULE_0__.Mj.selector).property("value", "");
            }, SlicerSearchInput.prototype.getHeight = function(scale) {
                var element = this.container.node();
                return $(element).outerHeight(!0);
            }, SlicerSearchInput.prototype.update = function(settings) {
                if (!settings || !settings.isVisible) return this.container.classed(_slicerUtil1__WEBPACK_IMPORTED_MODULE_0__.pD.class, !1), 
                void this.container.classed(_slicerUtil1__WEBPACK_IMPORTED_MODULE_0__.AM.class, !0);
                void 0 !== settings.bottomMargin && this.container.style("margin-bottom", settings.bottomMargin + "px");
                var wasShowingSearchHeader = this.container.classed(_slicerUtil1__WEBPACK_IMPORTED_MODULE_0__.pD.class);
                this.container.classed(_slicerUtil1__WEBPACK_IMPORTED_MODULE_0__.pD.class, settings.isVisible), 
                this.container.classed(_slicerUtil1__WEBPACK_IMPORTED_MODULE_0__.AM.class, !settings.isVisible);
                var style = settings.style, searchInput = this.container.select(_slicerUtil1__WEBPACK_IMPORTED_MODULE_0__.Mj.selector), searchIcon = this.container.select(_slicerUtil1__WEBPACK_IMPORTED_MODULE_0__.uN.selector);
                if (searchInput.empty()) settings.hasClearSearchButton && this.domHelper.configureSearchBoxIcon(this.container, void 0); else {
                    var element = searchInput.node(), existingSearchKey = element && element.value;
                    settings.hasClearSearchButton && this.domHelper.configureSearchBoxIcon(this.container, existingSearchKey), 
                    (_.isEmpty(existingSearchKey) || _.isEmpty(settings.searchKey) && settings.isVisible !== wasShowingSearchHeader) && searchInput.property("value", settings.searchKey);
                    var fontHeight = Math.ceil(_VisualsCommon_Utility_StandaloneUtility1__WEBPACK_IMPORTED_MODULE_1__.FP.fromPointToPixel(style.textSize));
                    this.height = fontHeight, this.container.styles({
                        color: style.color,
                        "border-style": style.borderStyle,
                        "border-color": style.borderColor,
                        background: style.background,
                        height: fontHeight + "px"
                    }), searchInput.styles({
                        background: style.background,
                        color: style.color,
                        "font-size": _VisualsCommon_Utility_StandaloneUtility1__WEBPACK_IMPORTED_MODULE_1__.FP.fromPoint(style.textSize),
                        "font-family": style.fontFamily
                    }), searchIcon.styles({
                        color: style.color
                    });
                }
            }, SlicerSearchInput;
        }();
    },
    78558: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            $H: function() {
                return getInstanceSelector;
            },
            AG: function() {
                return convertIcon;
            },
            Ao: function() {
                return convertTileLayoutExtended;
            },
            BE: function() {
                return convertTileSettingWithInstances;
            },
            Cu: function() {
                return getSettingColorProps;
            },
            E4: function() {
                return convertTileShapeWithoutInstances;
            },
            EI: function() {
                return convertTileGlow;
            },
            Ge: function() {
                return convertTileLayout;
            },
            Mu: function() {
                return getSettingFromRepetitionObject;
            },
            Ou: function() {
                return convertTileOutlineCustom;
            },
            P8: function() {
                return convertTileOutline;
            },
            P_: function() {
                return convertTileFill;
            },
            RA: function() {
                return labelProps;
            },
            Ro: function() {
                return getAccentBarDefaults;
            },
            SB: function() {
                return convertTileGlowCustom;
            },
            Sg: function() {
                return getInstanceId;
            },
            U6: function() {
                return convertTilePadding;
            },
            VG: function() {
                return applyRepetitionPriority;
            },
            Vv: function() {
                return getConversionContext;
            },
            Yb: function() {
                return getSettingProps;
            },
            ZT: function() {
                return convertTileShapeCustomRectangle;
            },
            gS: function() {
                return getContainerName;
            },
            hn: function() {
                return convertTileShadowCustom;
            },
            iS: function() {
                return convertTileSpacing;
            },
            nD: function() {
                return convertTileShape;
            },
            nO: function() {
                return convertTileOverFlow;
            },
            s8: function() {
                return convertText;
            },
            s9: function() {
                return isDetailedInstance;
            },
            t9: function() {
                return convertTileShadow;
            },
            ur: function() {
                return convertTileFillCustom;
            },
            wp: function() {
                return convertAccentBar;
            },
            xN: function() {
                return valueProps;
            },
            zP: function() {
                return getSettingFontProps;
            }
        });
        var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(81337), _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_navigator_capabilities__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(52157), _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(46673), _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(93187), _powerbi_legacy_PowerBIVisuals_Visuals_common_fontProperties__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(18664), _powerbi_legacy_PowerBIVisuals_Visuals_types_paddingOptions__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(26570), _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(62458), _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(82755), _Visuals_types_legendPosition__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(70700);
        function isDetailedInstance(instance) {
            return void 0 !== instance.id;
        }
        function getInstanceId(instance) {
            return isDetailedInstance(instance) ? instance.id : instance;
        }
        function getInstanceSelector(instance) {
            return isDetailedInstance(instance) ? instance.selector : {
                id: instance
            };
        }
        function convertTileSettingWithInstances(instances, convertTileSetting) {
            return instances.reduce(function(tileSetting, instance) {
                return isDetailedInstance(instance) ? (tileSetting[instance.id] = convertTileSetting(instance, tileSetting.default), 
                tileSetting) : (tileSetting[instance] = "default" !== instance ? convertTileSetting(instance, tileSetting.default) : tileSetting[instance], 
                tileSetting);
            }, {
                default: convertTileSetting("default")
            });
        }
        function getConversionContext(dataView, instanceId, defaults, overrides) {
            if (isDetailedInstance(instanceId)) {
                var column = _.find(dataView.metadata.columns, function(column) {
                    return column.queryName === instanceId.id;
                });
                return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(column, "expected to find column of requested data"), 
                {
                    column,
                    objects: null == column ? void 0 : column.objects,
                    instanceDefaults: null == defaults ? void 0 : defaults[instanceId.id],
                    instanceOverrides: null == overrides ? void 0 : overrides[instanceId.id]
                };
            }
            return {
                objectInstance: instanceId,
                objects: dataView.metadata.objects,
                instanceDefaults: null == defaults ? void 0 : defaults[instanceId],
                instanceOverrides: null == overrides ? void 0 : overrides[instanceId]
            };
        }
        function convertTileFill(dataView, colorHelper, instanceIds, defaults, props) {
            return void 0 === props && (props = fillProps), convertTileSettingWithInstances(instanceIds, function(instanceId, defaultInstanceSettings) {
                var _a, _b = getConversionContext(dataView, instanceId, defaults), objects = _b.objects, instanceDefaults = _b.instanceDefaults, objectInstance = _b.objectInstance;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, 
                tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, defaults.default), getSettingProps(objects, props.props, instanceDefaults, defaultInstanceSettings, objectInstance)), getSettingColorProps(objects, colorHelper, props.colorProps, instanceDefaults, defaultInstanceSettings, objectInstance)), {
                    show: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(dataView.metadata.objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.fill.show, null !== (_a = null == instanceDefaults ? void 0 : instanceDefaults.show) && void 0 !== _a ? _a : defaults.default.show)
                });
            });
        }
        var fillProps = {
            props: {
                fillTransparency: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.fill.transparency,
                fillImage: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.fill.image
            },
            colorProps: {
                fillColor: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.fill.fillColor
            }
        };
        function convertTileFillCustom(dataView, colorHelper, instanceIds, defaults, props) {
            return void 0 === props && (props = fillCustomProps), convertTileSettingWithInstances(instanceIds, function(instanceId, defaultInstanceSettings) {
                var _a, _b = getConversionContext(dataView, instanceId, defaults), objects = _b.objects, instanceDefaults = _b.instanceDefaults, objectInstance = _b.objectInstance;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, 
                tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, defaults.default), getSettingProps(objects, props.props, instanceDefaults, defaultInstanceSettings, objectInstance)), getSettingColorProps(objects, colorHelper, props.colorProps, instanceDefaults, defaultInstanceSettings, objectInstance)), {
                    show: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(dataView.metadata.objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.fillCustom.show, null !== (_a = null == instanceDefaults ? void 0 : instanceDefaults.show) && void 0 !== _a ? _a : defaults.default.show)
                });
            });
        }
        var fillCustomProps = {
            props: {
                fillTransparency: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.fillCustom.transparency,
                fillImage: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.fillCustom.image,
                fillImageTransparency: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.fillCustom.imageTransparency,
                fillImageSplitTransparency: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.fillCustom.imageSplitTransparency
            },
            colorProps: {
                fillColor: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.fillCustom.fillColor
            }
        };
        function convertTileOutline(dataView, colorHelper, instanceIds, defaults, props) {
            return void 0 === props && (props = outlineProps), convertTileSettingWithInstances(instanceIds, function(instanceId, defaultInstanceSettings) {
                var _a, _b = getConversionContext(dataView, instanceId, defaults), objects = _b.objects, instanceDefaults = _b.instanceDefaults, objectInstance = _b.objectInstance;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, 
                tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, defaults.default), getSettingProps(objects, props.props, instanceDefaults, defaultInstanceSettings, objectInstance)), getSettingColorProps(objects, colorHelper, props.colorProps, instanceDefaults, defaultInstanceSettings, objectInstance)), {
                    strokeShow: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(dataView.metadata.objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.outline.show, null !== (_a = null == instanceDefaults ? void 0 : instanceDefaults.strokeShow) && void 0 !== _a ? _a : defaults.default.strokeShow)
                });
            });
        }
        function convertTileOutlineCustom(dataView, colorHelper, instanceIds, defaults, props) {
            void 0 === props && (props = outlinePropsCustom);
            var fallbackDefault = {
                default: {
                    strokeShow: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(dataView.metadata.objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.outline.show)
                }
            };
            return convertTileSettingWithInstances(instanceIds, function(instanceId, defaultInstanceSettings) {
                var _a = getConversionContext(dataView, instanceId, defaults), objects = _a.objects, instanceDefaults = _a.instanceDefaults, objectInstance = _a.objectInstance;
                return instanceDefaults = (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, instanceDefaults), null == fallbackDefault ? void 0 : fallbackDefault[objectInstance]), 
                (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, 
                tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, defaults.default), getSettingProps(objects, props.props, instanceDefaults, defaultInstanceSettings, objectInstance)), getSettingColorProps(objects, colorHelper, props.colorProps, instanceDefaults, defaultInstanceSettings, objectInstance));
            });
        }
        var outlineProps = {
            props: {
                strokeWidth: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.outline.weight,
                strokeTransparency: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.outline.transparency
            },
            colorProps: {
                strokeColor: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.outline.lineColor
            }
        }, outlinePropsCustom = {
            props: {
                strokeWidth: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.outline.weight,
                strokeTransparency: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.outline.transparency,
                strokeShow: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.outline.show
            },
            colorProps: {
                strokeColor: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.outline.lineColor
            }
        };
        function convertTileShapeWithoutInstances(dataViewObject, defaults, props, overrides) {
            return void 0 === props && (props = shapeProps), (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, 
            tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, defaults), getSettingProps(dataViewObject, props.props)), overrides);
        }
        function convertTileShape(dataView, instanceIds, defaults, props, overrides) {
            return void 0 === props && (props = shapeProps), convertTileSettingWithInstances(instanceIds, function(instanceId, defaultInstanceSettings) {
                var _a = getConversionContext(dataView, instanceId, defaults), objects = _a.objects, instanceDefaults = _a.instanceDefaults, objectInstance = _a.objectInstance;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, 
                tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, defaults.default), getSettingProps(objects, props.props, instanceDefaults, defaultInstanceSettings, objectInstance)), overrides);
            });
        }
        function convertTileShapeCustomRectangle(dataView, instanceIds, defaults, props, overrides) {
            return void 0 === props && (props = shapeCustomRectangelProps), convertTileSettingWithInstances(instanceIds, function(instanceId, defaultInstanceSettings) {
                var _a = getConversionContext(dataView, instanceId, defaults), objects = _a.objects, instanceDefaults = _a.instanceDefaults, objectInstance = _a.objectInstance;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, 
                tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, defaults.default), getSettingProps(objects, props.props, instanceDefaults, defaultInstanceSettings, objectInstance)), overrides);
            });
        }
        var shapeCustomRectangelProps = {
            props: {
                tileShape: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shapeCustomRectangle.tileShape,
                shapeRounding: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.roundEdge,
                arrowheadSize: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.arrowheadSize,
                arrowStemWidth: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.arrowStemWidth,
                chevronAngle: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.chevronAngle,
                isocelesTriangleTipPosition: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.isocelesTriangleTipPosition,
                parallelogramSlant: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.parallelogramSlant,
                trapezoidSlant: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.trapezoidSlant,
                hexagonSlant: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.hexagonSlant,
                octagonSnipSize: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.octagonSnipSize,
                speechBubbleHeight: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.speechBubbleHeight,
                speechBubbleTailPosition: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.speechBubbleTailPosition,
                speechBubbleTailAngle: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.speechBubbleTailAngle,
                rectangleRoundedCurve: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shapeCustomRectangle.rectangleRoundedCurve,
                rectangleRoundedCurveCustomStyle: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shapeCustomRectangle.rectangleRoundedCurveCustomStyle,
                rectangleRoundedCurveLeftTop: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shapeCustomRectangle.rectangleRoundedCurveLeftTop,
                rectangleRoundedCurveRightTop: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shapeCustomRectangle.rectangleRoundedCurveRightTop,
                rectangleRoundedCurveLeftBottom: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shapeCustomRectangle.rectangleRoundedCurveLeftBottom,
                rectangleRoundedCurveRightBottom: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shapeCustomRectangle.rectangleRoundedCurveRightBottom,
                tabCutCornerSnipSizeTopRight: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.tabCutCornerSnipSizeTopRight,
                tabCutCornerSnipSizeTop: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shapeCustomRectangle.tabCutCornerSnipSizeTop,
                tabCutCornerSnipSizeCustomStyle: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shapeCustomRectangle.tabCutCornerSnipSizeCustomStyle,
                tabCutCornerSnipSizeLeftBottom: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shapeCustomRectangle.tabCutCornerSnipSizeLeftBottom,
                tabCutCornerSnipSizeLeftTop: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shapeCustomRectangle.tabCutCornerSnipSizeLeftTop,
                tabCutCornerSnipSizeRightBottom: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shapeCustomRectangle.tabCutCornerSnipSizeRightBottom,
                tabCutCornerSnipSizeRightTop: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shapeCustomRectangle.tabCutCornerSnipSizeRightTop,
                tabCutCornerSnipSizeBottom: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shapeCustomRectangle.tabCutCornerSnipSizeBottom,
                tabRoundCornerTopRight: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.tabRoundCornerTopRight,
                tabRoundCornerTop: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.tabRoundCornerTop,
                tabRoundCornerBottom: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.tabRoundCornerBottom
            }
        }, shapeProps = {
            props: {
                tileShape: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.tileShape,
                shapeRounding: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.roundEdge,
                arrowheadSize: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.arrowheadSize,
                arrowStemWidth: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.arrowStemWidth,
                chevronAngle: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.chevronAngle,
                isocelesTriangleTipPosition: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.isocelesTriangleTipPosition,
                parallelogramSlant: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.parallelogramSlant,
                trapezoidSlant: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.trapezoidSlant,
                hexagonSlant: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.hexagonSlant,
                octagonSnipSize: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.octagonSnipSize,
                speechBubbleHeight: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.speechBubbleHeight,
                speechBubbleTailPosition: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.speechBubbleTailPosition,
                speechBubbleTailAngle: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.speechBubbleTailAngle,
                rectangleRoundedCurve: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.rectangleRoundedCurve,
                rectangleRoundedCurveCustomStyle: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shapeCustomRectangle.rectangleRoundedCurveCustomStyle,
                rectangleRoundedCurveLeftTop: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shapeCustomRectangle.rectangleRoundedCurveLeftTop,
                rectangleRoundedCurveRightTop: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shapeCustomRectangle.rectangleRoundedCurveRightTop,
                rectangleRoundedCurveLeftBottom: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shapeCustomRectangle.rectangleRoundedCurveLeftBottom,
                rectangleRoundedCurveRightBottom: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shapeCustomRectangle.rectangleRoundedCurveRightBottom,
                tabCutCornerSnipSizeTopRight: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.tabCutCornerSnipSizeTopRight,
                tabCutCornerSnipSizeTop: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.tabCutCornerSnipSizeTop,
                tabCutCornerSnipSizeCustomStyle: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shapeCustomRectangle.tabCutCornerSnipSizeCustomStyle,
                tabCutCornerSnipSizeLeftBottom: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shapeCustomRectangle.tabCutCornerSnipSizeLeftBottom,
                tabCutCornerSnipSizeLeftTop: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shapeCustomRectangle.tabCutCornerSnipSizeLeftTop,
                tabCutCornerSnipSizeRightBottom: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shapeCustomRectangle.tabCutCornerSnipSizeRightBottom,
                tabCutCornerSnipSizeRightTop: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shapeCustomRectangle.tabCutCornerSnipSizeRightTop,
                tabCutCornerSnipSizeBottom: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.tabCutCornerSnipSizeBottom,
                tabRoundCornerTopRight: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.tabRoundCornerTopRight,
                tabRoundCornerTop: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.tabRoundCornerTop,
                tabRoundCornerBottom: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shape.tabRoundCornerBottom
            }
        };
        function convertTileShadow(dataView, colorHelper, instanceIds, defaults, props) {
            return void 0 === props && (props = shadowProps), convertTileSettingWithInstances(instanceIds, function(instanceId, defaultInstanceSettings) {
                var _a, _b = getConversionContext(dataView, instanceId, defaults), objects = _b.objects, instanceDefaults = _b.instanceDefaults, objectInstance = _b.objectInstance;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, 
                tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, defaults.default), getSettingProps(objects, props.props, instanceDefaults, defaultInstanceSettings, objectInstance)), getSettingColorProps(objects, colorHelper, props.colorProps, instanceDefaults, defaultInstanceSettings, objectInstance)), {
                    show: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(dataView.metadata.objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shadow.show, null !== (_a = null == instanceDefaults ? void 0 : instanceDefaults.show) && void 0 !== _a ? _a : defaults.default.show)
                });
            });
        }
        function convertTileShadowCustom(dataView, colorHelper, instanceIds, defaults, props) {
            void 0 === props && (props = shadowCustomProps);
            var fallbackDefault = {
                default: {
                    show: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(dataView.metadata.objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shadowCustom.show)
                }
            };
            return convertTileSettingWithInstances(instanceIds, function(instanceId, defaultInstanceSettings) {
                var _a = getConversionContext(dataView, instanceId, defaults), objects = _a.objects, instanceDefaults = _a.instanceDefaults, objectInstance = _a.objectInstance;
                return instanceDefaults = (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, instanceDefaults), null == fallbackDefault ? void 0 : fallbackDefault[objectInstance]), 
                (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, 
                tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, defaults.default), getSettingProps(objects, props.props, instanceDefaults, defaultInstanceSettings, objectInstance)), getSettingColorProps(objects, colorHelper, props.colorProps, instanceDefaults, defaultInstanceSettings, objectInstance));
            });
        }
        var shadowProps = {
            props: {
                shadowTransparency: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shadow.transparency,
                shadowBlur: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shadow.shadowBlur,
                shadowPositionPreset: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shadow.shadowPositionPreset,
                shadowAngle: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shadow.angle,
                shadowDistance: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shadow.shadowDistance
            },
            colorProps: {
                shadowColor: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shadow.color
            }
        }, shadowCustomProps = {
            props: {
                shadowTransparency: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shadowCustom.transparency,
                shadowBlur: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shadowCustom.shadowBlur,
                shadowPositionPreset: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shadowCustom.shadowPositionPreset,
                shadowAngle: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shadowCustom.angle,
                shadowDistance: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shadowCustom.shadowDistance,
                position: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shadowCustom.position,
                shadowSpread: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shadowCustom.shadowSpread,
                show: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shadowCustom.show
            },
            colorProps: {
                shadowColor: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.shadowCustom.color
            }
        };
        function convertTileGlow(dataView, colorHelper, instanceIds, defaults, props) {
            return void 0 === props && (props = glowProps), convertTileSettingWithInstances(instanceIds, function(instanceId, defaultInstanceSettings) {
                var _a, _b = getConversionContext(dataView, instanceId, defaults), objects = _b.objects, instanceDefaults = _b.instanceDefaults, objectInstance = _b.objectInstance;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, 
                tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, defaults.default), getSettingProps(objects, props.props, instanceDefaults, defaultInstanceSettings, objectInstance)), getSettingColorProps(objects, colorHelper, props.colorProps, instanceDefaults, defaultInstanceSettings, objectInstance)), {
                    show: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(dataView.metadata.objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.glow.show, null !== (_a = null == instanceDefaults ? void 0 : instanceDefaults.show) && void 0 !== _a ? _a : defaults.default.show)
                });
            });
        }
        function convertTileGlowCustom(dataView, colorHelper, instanceIds, defaults, props) {
            void 0 === props && (props = glowCustomProps);
            var fallbackDefault = {
                default: {
                    show: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(dataView.metadata.objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.glowCustom.show)
                }
            };
            return convertTileSettingWithInstances(instanceIds, function(instanceId, defaultInstanceSettings) {
                var _a = getConversionContext(dataView, instanceId, defaults), objects = _a.objects, instanceDefaults = _a.instanceDefaults, objectInstance = _a.objectInstance;
                return instanceDefaults = (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, instanceDefaults), null == fallbackDefault ? void 0 : fallbackDefault[objectInstance]), 
                (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, 
                tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, defaults.default), getSettingProps(objects, props.props, instanceDefaults, defaultInstanceSettings, objectInstance)), getSettingColorProps(objects, colorHelper, props.colorProps, instanceDefaults, defaultInstanceSettings, objectInstance));
            });
        }
        var glowProps = {
            props: {
                glowTransparency: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.glow.transparency,
                glowBlur: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.glow.shadowBlur
            },
            colorProps: {
                glowColor: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.glow.color
            }
        }, glowCustomProps = {
            props: {
                glowTransparency: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.glowCustom.transparency,
                glowBlur: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.glowCustom.shadowBlur,
                glowPositionPreset: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.glowCustom.glowPositionPreset,
                glowAngle: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.glowCustom.angle,
                glowDistance: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.glowCustom.glowDistance,
                position: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.glowCustom.position,
                glowSpread: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.glowCustom.glowSpread,
                show: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.glowCustom.show
            },
            colorProps: {
                glowColor: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.glowCustom.color
            }
        };
        function convertText(dataView, colorHelper, instanceIds, defaults, props, overrides) {
            return void 0 === props && (props = textProps), convertTileSettingWithInstances(instanceIds, function(instanceId, defaultInstanceSettings) {
                var _a, _b = getConversionContext(dataView, instanceId, defaults, overrides), objects = _b.objects, instanceDefaults = _b.instanceDefaults, instanceOverrides = _b.instanceOverrides, objectInstance = _b.objectInstance;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, 
                tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, 
                tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, defaults.default), getSettingProps(objects, props.props, instanceDefaults, defaultInstanceSettings, objectInstance)), getSettingFontProps(objects, colorHelper, props.fontProps, instanceDefaults, defaultInstanceSettings, objectInstance)), {
                    show: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(dataView.metadata.objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.nm.text.show, null !== (_a = null == instanceDefaults ? void 0 : instanceDefaults.show) && void 0 !== _a ? _a : defaults.default.show)
                }), null == overrides ? void 0 : overrides.default), instanceOverrides);
            });
        }
        var textProps = {
            props: {
                text: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.nm.text.text,
                verticalAlignment: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.nm.text.verticalAlignment,
                horizontalAlignment: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.nm.text.horizontalAlignment,
                rightMargin: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.nm.text.rightMargin,
                leftMargin: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.nm.text.leftMargin,
                topMargin: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.nm.text.topMargin,
                bottomMargin: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.nm.text.bottomMargin,
                rotation: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.nm.text.angle
            },
            fontProps: {
                fontProperties: {
                    objectName: "text",
                    propertyNames: {
                        color: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.WI.fontColor,
                        family: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.WI.fontFamily,
                        italic: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.WI.italic,
                        bold: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.WI.bold,
                        underline: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.WI.underline,
                        size: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.WI.fontSize
                    }
                }
            }
        };
        function convertIcon(dataViewObject, colorHelper, instanceIds, defaults, props) {
            return void 0 === props && (props = iconProps), convertTileSettingWithInstances(instanceIds, function(instanceId, defaultInstanceSettings) {
                if (!isDetailedInstance(instanceId)) return (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, 
                tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, 
                tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, defaults.default), getSettingProps(dataViewObject, props.props, defaults[instanceId], defaultInstanceSettings, instanceId)), getSettingColorProps(dataViewObject, colorHelper, props.colorProps, defaults[instanceId], defaultInstanceSettings, instanceId)), {
                    show: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(dataViewObject, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.nm.icon.show, defaults.default.show)
                });
                _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertFail("tileLibraryConverter: convertIcon not implemented for complex instance");
            });
        }
        var iconProps = {
            props: {
                shapeType: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.nm.icon.shapeType,
                iconImage: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.nm.icon.image,
                placement: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.nm.icon.placement,
                lineTransparency: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.nm.icon.lineTransparency,
                lineWeight: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.nm.icon.lineWeight,
                verticalAlignment: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.nm.icon.verticalAlignment,
                horizontalAlignment: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.nm.icon.horizontalAlignment,
                rightMargin: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.nm.icon.rightMargin,
                leftMargin: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.nm.icon.leftMargin,
                topMargin: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.nm.icon.topMargin,
                bottomMargin: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.nm.icon.bottomMargin,
                iconSize: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.nm.icon.iconSize
            },
            colorProps: {
                lineColor: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.nm.icon.lineColor
            }
        };
        function getContainerName(instance, localize) {
            switch (instance) {
              case _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_navigator_capabilities__WEBPACK_IMPORTED_MODULE_5__.LU.default:
                instance = localize("Default");
                break;

              case _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_navigator_capabilities__WEBPACK_IMPORTED_MODULE_5__.LU.hover:
                instance = localize("Navigator_Hover_State");
                break;

              case _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_navigator_capabilities__WEBPACK_IMPORTED_MODULE_5__.LU.press:
                instance = localize("Navigator_Press_State");
                break;

              case _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_navigator_capabilities__WEBPACK_IMPORTED_MODULE_5__.LU.selected:
                instance = localize("FieldListProperty_Selected");
            }
            return instance;
        }
        var valueProps = {
            props: {
                horizontalAlignment: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.value.horizontalAlignment,
                labelDisplayUnits: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.value.labelDisplayUnits,
                labelPrecision: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.value.labelPrecision,
                customFormatString: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.value.customFormatString,
                showBlankAs: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.value.showBlankAs,
                transparency: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.value.transparency,
                textWrap: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.value.textWrap
            },
            fontProps: {
                fontProperties: {
                    objectName: "value",
                    propertyNames: {
                        color: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.WI.fontColor,
                        family: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.WI.fontFamily,
                        size: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.WI.fontSize,
                        italic: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.WI.italic,
                        bold: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.WI.bold,
                        underline: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.WI.underline
                    }
                }
            }
        }, labelProps = {
            props: {
                show: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.label.show,
                text: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.label.text,
                heading: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.label.heading,
                position: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.label.position,
                transparency: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.label.transparency,
                textWrap: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.label.textWrap,
                alignBaselines: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.label.alignBaselines,
                matchValueAlignment: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.label.matchValueAlignment,
                horizontalAlignment: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.label.horizontalAlignment
            },
            fontProps: {
                fontProperties: {
                    objectName: "label",
                    propertyNames: {
                        color: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.WI.fontColor,
                        family: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.WI.fontFamily,
                        size: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.WI.fontSize,
                        italic: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.WI.italic,
                        bold: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.WI.bold,
                        underline: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_4__.WI.underline
                    }
                }
            }
        }, accentBarProps = {
            props: {
                position: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.accentBar.position,
                show: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.accentBar.show,
                transparency: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.accentBar.transparency,
                width: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.accentBar.width
            },
            colorProps: {
                color: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.accentBar.color
            }
        };
        function getAccentBarDefaults(style) {
            return {
                default: {
                    show: !1,
                    position: _Visuals_types_legendPosition__WEBPACK_IMPORTED_MODULE_6__.zw.left,
                    color: style.colorPalette.foreground.value,
                    transparency: 0,
                    width: 2
                }
            };
        }
        function convertAccentBar(dataView, colorHelper, instanceIds, defaults, props) {
            void 0 === props && (props = accentBarProps);
            var fallbackDefault = {
                default: {
                    show: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(dataView.metadata.objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.accentBar.show)
                }
            };
            return convertTileSettingWithInstances(instanceIds, function(instanceId, defaultInstanceSettings) {
                var _a, _b = getConversionContext(dataView, instanceId, defaults), objects = _b.objects, instanceDefaults = _b.instanceDefaults, objectInstance = _b.objectInstance;
                return instanceDefaults = (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, instanceDefaults), null == fallbackDefault ? void 0 : fallbackDefault[objectInstance]), 
                (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, 
                tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, defaults.default), {
                    show: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(dataView.metadata.objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.accentBar.show, null !== (_a = null == instanceDefaults ? void 0 : instanceDefaults.show) && void 0 !== _a ? _a : defaults.default.show)
                }), getSettingProps(objects, props.props, instanceDefaults, defaultInstanceSettings, objectInstance)), getSettingColorProps(objects, colorHelper, props.colorProps, instanceDefaults, defaultInstanceSettings, objectInstance));
            });
        }
        var paddingProps = {
            props: {
                paddingSelection: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.padding.paddingSelection,
                leftMargin: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.padding.leftMargin,
                rightMargin: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.padding.rightMargin,
                bottomMargin: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.padding.bottomMargin,
                topMargin: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.padding.topMargin
            }
        };
        function convertTilePadding(dataView, instanceIds, defaults, props) {
            return void 0 === props && (props = paddingProps), convertTileSettingWithInstances(instanceIds, function(instanceId, defaultInstanceSettings) {
                var _a = getConversionContext(dataView, instanceId, defaults), objects = _a.objects, instanceDefaults = _a.instanceDefaults, objectInstance = _a.objectInstance;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, defaults.default), function(dataViewObject, props, instanceDefaults, defaultInstanceSettings, instanceId) {
                    return _.entries(props).reduce(function(settings, _a) {
                        var _b, key = _a[0], value = (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(dataViewObject, _a[1], null !== (_b = null == instanceDefaults ? void 0 : instanceDefaults[key]) && void 0 !== _b ? _b : null == defaultInstanceSettings ? void 0 : defaultInstanceSettings[key], instanceId);
                        if (null != value && (settings[key] = value), Object.keys(settings).includes("paddingSelection")) {
                            var paddingAdjustment = void 0;
                            if (settings.paddingSelection === _powerbi_legacy_PowerBIVisuals_Visuals_types_paddingOptions__WEBPACK_IMPORTED_MODULE_7__.PG) return settings;
                            settings.paddingSelection === _powerbi_legacy_PowerBIVisuals_Visuals_types_paddingOptions__WEBPACK_IMPORTED_MODULE_7__.EY ? paddingAdjustment = _powerbi_legacy_PowerBIVisuals_Visuals_types_paddingOptions__WEBPACK_IMPORTED_MODULE_7__.YP : settings.paddingSelection === _powerbi_legacy_PowerBIVisuals_Visuals_types_paddingOptions__WEBPACK_IMPORTED_MODULE_7__.Ln ? paddingAdjustment = _powerbi_legacy_PowerBIVisuals_Visuals_types_paddingOptions__WEBPACK_IMPORTED_MODULE_7__.uz : settings.paddingSelection === _powerbi_legacy_PowerBIVisuals_Visuals_types_paddingOptions__WEBPACK_IMPORTED_MODULE_7__.mJ && (paddingAdjustment = _powerbi_legacy_PowerBIVisuals_Visuals_types_paddingOptions__WEBPACK_IMPORTED_MODULE_7__.cO), 
                            settings.leftMargin = settings.rightMargin = settings.topMargin = settings.bottomMargin = paddingAdjustment;
                        }
                        return settings;
                    }, {});
                }(objects, props.props, instanceDefaults, defaultInstanceSettings, objectInstance));
            });
        }
        var tileLayoutProps = {
            props: {
                verticalAlignment: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.alignment,
                orientation: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.orientation,
                rowCount: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.rowCount,
                columnCount: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.columnCount,
                maxTiles: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.maxTiles,
                cellPadding: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.cellPadding,
                customizePadding: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.customizePadding,
                rowPadding: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.rowPadding,
                columnPadding: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.columnPadding,
                calloutSize: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.calloutSize
            }
        };
        function convertTileLayout(dataViewObject, layoutDefaults) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, layoutDefaults), getSettingProps(dataViewObject, tileLayoutProps.props));
        }
        function convertTileLayoutExtended(objects, colorHelper, defaults) {
            var _a, _b, _c, _d;
            return (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, 
            tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, defaults), getSettingProps(objects, tileLayoutProps.props)), {
                style: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.style, defaults.style),
                customizeLines: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.customizeLines, defaults.customizeLines),
                line: {
                    strokeShow: !0,
                    strokeColor: null !== (_a = colorHelper.getColorForProperty(objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.lineColor, void 0)) && void 0 !== _a ? _a : defaults.line.strokeColor,
                    strokePattern: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.lineStyle, defaults.line.strokePattern),
                    strokeTransparency: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.lineTransparency, defaults.line.strokeTransparency),
                    strokeWidth: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.lineWidth, defaults.line.strokeWidth)
                },
                gridline: {
                    strokeShow: !0,
                    strokeColor: null !== (_b = colorHelper.getColorForProperty(objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.gridlineColor, void 0)) && void 0 !== _b ? _b : defaults.gridline.strokeColor,
                    strokePattern: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.gridlineStyle, defaults.gridline.strokePattern),
                    strokeTransparency: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.gridlineTransparency, defaults.gridline.strokeTransparency),
                    strokeWidth: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.gridlineWidth, defaults.gridline.strokeWidth)
                },
                border: {
                    strokeShow: !0,
                    strokeColor: null !== (_c = colorHelper.getColorForProperty(objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.borderColor, void 0)) && void 0 !== _c ? _c : defaults.border.strokeColor,
                    strokePattern: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.borderStyle, defaults.border.strokePattern),
                    strokeTransparency: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.borderTransparency, defaults.border.strokeTransparency),
                    strokeWidth: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.borderWidth, defaults.border.strokeWidth)
                },
                backgroundFillColor: null !== (_d = colorHelper.getColorForProperty(objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.backgroundFillColor, void 0)) && void 0 !== _d ? _d : defaults.backgroundFillColor,
                backgroundShow: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.backgroundShow, defaults.backgroundShow),
                backgroundTransparency: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.backgroundTransparency, defaults.backgroundTransparency),
                backgroundImage: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.backgroundImage, defaults.backgroundImage),
                backgroundImageTransparency: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.backgroundImageTransparency, defaults.backgroundImageTransparency),
                rectangleRoundedCurveCustomStyle: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.rectangleRoundedCurveCustomStyle, defaults.rectangleRoundedCurveCustomStyle),
                rectangleRoundedCurve: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.rectangleRoundedCurve, defaults.rectangleRoundedCurve),
                rectangleRoundedCurveLeftTop: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.rectangleRoundedCurveLeftTop, defaults.rectangleRoundedCurveLeftTop),
                rectangleRoundedCurveRightTop: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.rectangleRoundedCurveRightTop, defaults.rectangleRoundedCurveRightTop),
                rectangleRoundedCurveLeftBottom: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.rectangleRoundedCurveLeftBottom, defaults.rectangleRoundedCurveLeftBottom),
                rectangleRoundedCurveRightBottom: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(objects, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.layout.rectangleRoundedCurveRightBottom, defaults.rectangleRoundedCurveRightBottom)
            });
        }
        var overFlowProps = {
            props: {
                overFlowDirection: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.overFlow.overFlowDirection,
                overFlowStyle: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.overFlow.overFlowStyle
            }
        };
        function convertTileOverFlow(dataViewObject, overFlowDefaults) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, overFlowDefaults), getSettingProps(dataViewObject, overFlowProps.props));
        }
        var spacingProps = {
            props: {
                verticalSpacing: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_3__.OV.spacing.verticalSpacing
            }
        };
        function convertTileSpacing(dataView, instanceIds, defaults, props) {
            return void 0 === props && (props = spacingProps), convertTileSettingWithInstances(instanceIds, function(instanceId, defaultInstanceSettings) {
                var _a = getConversionContext(dataView, instanceId, defaults), objects = _a.objects, instanceDefaults = _a.instanceDefaults, objectInstance = _a.objectInstance;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, defaults.default), getSettingProps(objects, props.props, instanceDefaults, defaultInstanceSettings, objectInstance));
            });
        }
        function getSettingProps(dataViewObject, props, instanceDefaults, defaultInstanceSettings, instanceId) {
            return _.entries(props).reduce(function(settings, _a) {
                var _b, key = _a[0], value = (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.NA)(dataViewObject, _a[1], null !== (_b = null == instanceDefaults ? void 0 : instanceDefaults[key]) && void 0 !== _b ? _b : null == defaultInstanceSettings ? void 0 : defaultInstanceSettings[key], instanceId);
                return null != value && (settings[key] = value), settings;
            }, {});
        }
        function getSettingColorProps(dataViewObject, colorHelper, props, instanceDefaults, defaultInstanceSettings, instanceId) {
            return _.entries(props).reduce(function(settings, _a) {
                var _b, key = _a[0], colorForProperty = colorHelper.getColorForProperty(dataViewObject, _a[1], void 0, instanceId), color = null !== (_b = null != colorForProperty ? colorForProperty : null == instanceDefaults ? void 0 : instanceDefaults[key]) && void 0 !== _b ? _b : null == defaultInstanceSettings ? void 0 : defaultInstanceSettings[key];
                return null != color && (settings[key] = color), settings;
            }, {});
        }
        function getSettingFontProps(dataViewObject, colorHelper, fontProps, instanceDefaults, defaultInstanceSettings, instanceId) {
            return _.entries(fontProps).reduce(function(fontSettings, _a) {
                var _b, dataViewObjectProperties, key = _a[0], fontProp = _a[1];
                if (null == instanceId) dataViewObjectProperties = (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.RK)(dataViewObject, fontProp.objectName); else {
                    var userDefinedObjects = (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.AO)(dataViewObject, fontProp.objectName);
                    dataViewObjectProperties = (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_2__.RK)(userDefinedObjects, instanceId);
                }
                var defaultFontProperties = (0, _powerbi_legacy_PowerBIVisuals_Visuals_common_fontProperties__WEBPACK_IMPORTED_MODULE_8__.ED)(null !== (_b = null == defaultInstanceSettings ? void 0 : defaultInstanceSettings[key]) && void 0 !== _b ? _b : {}, null == instanceDefaults ? void 0 : instanceDefaults[key]), fontProperties = (0, 
                _powerbi_legacy_PowerBIVisuals_Visuals_common_fontProperties__WEBPACK_IMPORTED_MODULE_8__.XH)(dataViewObjectProperties, fontProp.propertyNames, colorHelper, void 0, defaultFontProperties);
                return null != fontSettings && (fontSettings[key] = fontProperties), fontSettings;
            }, {});
        }
        function getSettingFromRepetitionObject(dataViewObject, props, colorHelper, instanceId) {
            if (props.repetitionProps) return (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, 
            tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, getSettingProps(dataViewObject, props.repetitionProps.props, void 0, void 0, instanceId)), getSettingColorProps(dataViewObject, colorHelper, props.repetitionProps.colorProps, void 0, void 0, instanceId)), _.pickBy(getSettingFontProps(dataViewObject, colorHelper, props.repetitionProps.fontProps, void 0, void 0, instanceId), function(fontSetting) {
                return Object.keys(fontSetting).length;
            }));
        }
        function applyRepetitionPriority(metadataSettings, repetitionSettings) {
            for (var prop in repetitionSettings) {
                var value = repetitionSettings[prop];
                null != value && (metadataSettings[prop] = null != value.color ? (0, _powerbi_legacy_PowerBIVisuals_Visuals_common_fontProperties__WEBPACK_IMPORTED_MODULE_8__.ED)(metadataSettings[prop], value) : value);
            }
        }
    },
    89088: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            $h: function() {
                return getCustomizableGlowGroupByInstance;
            },
            Ai: function() {
                return getCustomizableRectangleShapeCard;
            },
            Cv: function() {
                return getNewLayoutCardWithOverflow;
            },
            D9: function() {
                return getShadowGroupByInstance;
            },
            DD: function() {
                return enumerateTextProperties;
            },
            E0: function() {
                return getAccentBarGroupByInstance;
            },
            Gx: function() {
                return getFillCustomGroupByInstance;
            },
            JO: function() {
                return enumerateFillProperties;
            },
            LY: function() {
                return enumerateShapeProperties;
            },
            Oj: function() {
                return getIconGroupByInstance;
            },
            UW: function() {
                return enumerateShadowProperties;
            },
            W$: function() {
                return getAlignmentGroup;
            },
            W9: function() {
                return MaxTilesCount;
            },
            YC: function() {
                return getShapeGroup;
            },
            _6: function() {
                return getPaddingGroupByInstance;
            },
            _u: function() {
                return enumerateIconProperties;
            },
            br: function() {
                return enumerateShapePropertiesInstance;
            },
            cg: function() {
                return isNumericCompatible;
            },
            fy: function() {
                return getCustomizableRectangleShapeGroup;
            },
            gQ: function() {
                return enumerateGlowProperties;
            },
            g_: function() {
                return getCustomizableShadowGroupByInstance;
            },
            i7: function() {
                return getGlowGroupByInstance;
            },
            jf: function() {
                return getShapeGroupByInstance;
            },
            l5: function() {
                return isDateTimeCompatible;
            },
            l6: function() {
                return getNewLayoutCard;
            },
            mT: function() {
                return getLayoutCardWithOverflow;
            },
            nT: function() {
                return enumerateOutlineProperties;
            },
            oy: function() {
                return getTextGroupByInstance;
            },
            sZ: function() {
                return getOutlineGroupByInstance;
            },
            sc: function() {
                return getValueGroupByInstance;
            },
            uT: function() {
                return getShapeCard;
            },
            v6: function() {
                return getCalloutLayoutByInstance;
            },
            v9: function() {
                return getLabelGroupByInstance;
            },
            vU: function() {
                return getCustomizableOutlineGroupByInstance;
            },
            w: function() {
                return getLayoutCard;
            },
            wH: function() {
                return getFillGroupByInstance;
            }
        });
        var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(81337), _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(78558), _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_cardVisual_capabilities__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(44364), _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_navigator_capabilities__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(52157), _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_shape_capabilities__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(86998), _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(46673), _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(93187), _powerbi_legacy_PowerBIVisuals_Visuals_common_consts_dataLabelViewModel1Consts__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(56707), _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(33024), _powerbi_legacy_PowerBIVisuals_Visuals_types_actionButtonType__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(2764), _powerbi_legacy_PowerBIVisuals_Visuals_types_iconPlacementType__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(67922), _powerbi_legacy_PowerBIVisuals_Visuals_types_navigatorOrientation__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(51322), _powerbi_legacy_PowerBIVisuals_Visuals_types_paddingOptions__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(26570), _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(67741), _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(79154), _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(56578), _Visuals_types_layoutStyleType__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(8054), MaxRoundEdgeValue = 100, MaxLineStrokeWidth = 12, MaxBlurValue = 100, MaxShadowDistancevalue = 100, MaxShadowAngle = 360, MaxMarginValue = 999, MaxLineWeightValue = 50, MaxIconSizeValue = 999, MaxArrowheadSize = 100, MaxArrowStemWidth = 50, MaxChevronAngle = 180, MaxTriangleTipPosition = 100, MaxSlantSize = 100, MaxSnipSize = 50, MaxBubbleHeight = 50, MaxBubbleTailAngle = 180, MaxRoundCornerSize = 50, marginOptions = {
            minValue: {
                type: 0,
                value: 0
            },
            maxValue: {
                type: 1,
                value: MaxMarginValue
            },
            unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
        }, MaxTilesCount = 99, selectAllSeries = "default", spacingOptions = {
            minValue: {
                type: 0,
                value: 0
            },
            maxValue: {
                type: 1,
                value: 40
            },
            required: {
                type: 2
            },
            unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
        };
        function enumerateFillProperties(enumeration, properties, displayedInstanceIds, getInstanceDisplayName) {
            var _a, _b;
            if (0 !== displayedInstanceIds.length) {
                enumeration.pushInstance({
                    objectName: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.eM.fill,
                    selector: null,
                    properties: {
                        show: properties.default.show
                    }
                });
                for (var _i = 0, displayedInstanceIds_1 = displayedInstanceIds; _i < displayedInstanceIds_1.length; _i++) {
                    var instance = displayedInstanceIds_1[_i], instanceId = (0, _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.Sg)(instance);
                    1 !== displayedInstanceIds.length && enumeration.pushContainer({
                        displayName: getInstanceDisplayName(instanceId)
                    });
                    var fillPropertiesInstance = properties[instanceId], enumerationProperties = ((_a = {})[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.fillColor] = fillPropertiesInstance.fillColor, 
                    _a[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.fillTransparency] = fillPropertiesInstance.fillTransparency, 
                    _a[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.fillImage] = fillPropertiesInstance.fillImage, 
                    _a);
                    enumeration.pushInstance({
                        objectName: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.eM.fill,
                        selector: (0, _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.$H)(instance),
                        properties: enumerationProperties,
                        propertyInstanceKind: (_b = {}, _b[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.fillColor] = 3, 
                        _b)
                    }), 1 !== displayedInstanceIds.length && enumeration.popContainer();
                }
            }
        }
        function getFillGroupByInstance(showImageUpload, fillProperties, hostServices, instance, cardUidBuilder) {
            var localize = function(key) {
                return hostServices.getLocalizedString(key);
            }, fillProps = _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.fill, instanceId = (0, 
            _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.Sg)(instance), fillPropertiesByInstance = fillProperties[instanceId], selector = (0, 
            _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.$H)(instance), fillGroupBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mQ(new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.SS(cardUidBuilder, "fill"), localize);
            return fillGroupBuilder.withDisplayName("Visual_Fill").addTopLevelToggle("show", function() {
                return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.bd({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, fillProps.show), {
                        selector: null
                    }),
                    value: fillProperties.default.show
                }).build();
            }).addSimpleSlice("color", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.BT({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, fillProps.fillColor), {
                    selector,
                    instanceKind: 3
                }),
                value: {
                    value: fillPropertiesByInstance.fillColor
                }
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Generic_Color");
            }), showImageUpload && fillGroupBuilder.addSimpleSlice("image", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.bD({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, fillProps.image), {
                    selector
                }),
                value: fillPropertiesByInstance.fillImage
            }).build()), fillGroupBuilder.addSimpleSlice("transparency", _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN.getTransparencySliderBuilder({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, fillProps.transparency), {
                    selector
                }),
                value: fillPropertiesByInstance.fillTransparency,
                localize
            }).build()), fillGroupBuilder.build();
        }
        function getFillCustomGroupByInstance(showImageUpload, fillProperties, hostServices, instance, cardUidBuilder, groupDisplayName, colorSelector) {
            var _a, localize = function(key) {
                return hostServices.getLocalizedString(key);
            }, fillProps = _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.fillCustom, instanceId = (0, 
            _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.Sg)(instance), fillPropertiesByInstance = null !== (_a = fillProperties[instanceId]) && void 0 !== _a ? _a : fillProperties.default, selector = (0, 
            _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.$H)(instance), fillGroupBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mQ(new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.SS(cardUidBuilder, "fill"), localize);
            return fillGroupBuilder.withDisplayName(groupDisplayName || "Visual_Fill").addTopLevelToggle("show", function() {
                return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.bd({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, fillProps.show), {
                        selector: null
                    }),
                    value: fillProperties.default.show
                }).build();
            }).addSimpleSlice("color", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.BT({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, fillProps.fillColor), {
                    selector: colorSelector || selector,
                    instanceKind: 3
                }),
                value: {
                    value: fillPropertiesByInstance.fillColor
                }
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Generic_Color");
            }).addSimpleSlice("transparency", _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN.getTransparencySliderBuilder({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, fillProps.transparency), {
                    selector
                }),
                value: fillPropertiesByInstance.fillTransparency,
                localize
            }).build()), showImageUpload && (fillGroupBuilder.addSimpleSlice("image", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.bD({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, fillProps.image), {
                    selector
                }),
                value: fillPropertiesByInstance.fillImage
            }).build(), function(builder) {
                return builder.withCustomDisplayName("Dashboard_Theme_Background_Image");
            }), fillGroupBuilder.addSimpleSlice("imageTransparency", _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN.getTransparencySliderBuilder({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, fillProps.imageTransparency), {
                    selector
                }),
                value: fillPropertiesByInstance.fillImageTransparency,
                localize
            }).build(), function(builder) {
                return builder.withDisabled(void 0 === fillPropertiesByInstance.fillImage || _.isEmpty(fillPropertiesByInstance.fillImage.name) && _.isEmpty(fillPropertiesByInstance.fillImage.url));
            })), fillGroupBuilder.build();
        }
        function enumerateOutlineProperties(enumeration, properties, displayedInstanceIds, getInstanceDisplayName) {
            var _a, _b;
            if (0 !== displayedInstanceIds.length) {
                enumeration.pushInstance({
                    objectName: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.eM.outline,
                    selector: null,
                    properties: {
                        show: properties.default.strokeShow
                    }
                });
                for (var _i = 0, displayedInstanceIds_2 = displayedInstanceIds; _i < displayedInstanceIds_2.length; _i++) {
                    var instance = displayedInstanceIds_2[_i], instanceId = (0, _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.Sg)(instance);
                    1 !== displayedInstanceIds.length && enumeration.pushContainer({
                        displayName: getInstanceDisplayName(instanceId)
                    });
                    var outlinePropertiesInstance = properties[instanceId], enumerationProperties = ((_a = {})[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.outlineColor] = outlinePropertiesInstance.strokeColor, 
                    _a[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.outlineWeight] = outlinePropertiesInstance.strokeWidth, 
                    _a[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.outlineTransparency] = outlinePropertiesInstance.strokeTransparency, 
                    _a);
                    enumeration.pushInstance({
                        objectName: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.eM.outline,
                        selector: (0, _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.$H)(instance),
                        properties: enumerationProperties,
                        propertyInstanceKind: (_b = {}, _b[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.outlineColor] = 3, 
                        _b)
                    }), 1 !== displayedInstanceIds.length && enumeration.popContainer();
                }
            }
        }
        function getOutlineGroupByInstance(outlineProperties, hostServices, instance, cardUidBuilder) {
            var localize = function(key) {
                return hostServices.getLocalizedString(key);
            }, outlineProps = _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.outline, instanceId = (0, 
            _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.Sg)(instance), outlinePropertiesByInstance = outlineProperties[instanceId], selector = (0, 
            _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.$H)(instance), borderGroupBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mQ(new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.SS(cardUidBuilder, "outline"), localize);
            return borderGroupBuilder.withDisplayName("Visual_Border").addTopLevelToggle("show", function() {
                return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.bd({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, outlineProps.show), {
                        selector: null
                    }),
                    value: outlineProperties.default.strokeShow
                }).build();
            }).addSimpleSlice("color", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.BT({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, outlineProps.lineColor), {
                    selector,
                    instanceKind: 3
                }),
                value: {
                    value: outlinePropertiesByInstance.strokeColor
                }
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Generic_Color");
            }).addSimpleSlice("width", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mu({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, outlineProps.weight), {
                    selector
                }),
                value: outlinePropertiesByInstance.strokeWidth,
                options: {
                    minValue: {
                        type: 0,
                        value: 0
                    },
                    maxValue: {
                        type: 1,
                        value: MaxLineWeightValue
                    },
                    unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
                }
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Visual_General_Properties_Width");
            }).addSimpleSlice("transparency", _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN.getTransparencySliderBuilder({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, outlineProps.transparency), {
                    selector
                }),
                value: outlinePropertiesByInstance.strokeTransparency,
                localize
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Transparency");
            }), borderGroupBuilder.build();
        }
        function getCustomizableOutlineGroupByInstance(outlineProperties, hostServices, instance, cardUidBuilder, colorSelector) {
            var _a, localize = function(key) {
                return hostServices.getLocalizedString(key);
            }, outlineProps = _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.outline, outlinePropertiesByInstance = null !== (_a = outlineProperties[(0, 
            _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.Sg)(instance)]) && void 0 !== _a ? _a : outlineProperties.default, selector = (0, 
            _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.$H)(instance), borderGroupBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mQ(new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.SS(cardUidBuilder, "outline"), localize);
            return borderGroupBuilder.withDisplayName("Visual_Border").addTopLevelToggle("show", function() {
                return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.bd({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, outlineProps.show), {
                        selector
                    }),
                    value: outlinePropertiesByInstance.strokeShow
                }).build();
            }).addSimpleSlice("color", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.BT({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, outlineProps.lineColor), {
                    selector: colorSelector || selector,
                    instanceKind: 3
                }),
                value: {
                    value: outlinePropertiesByInstance.strokeColor
                }
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Generic_Color");
            }).addSimpleSlice("width", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mu({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, outlineProps.weight), {
                    selector
                }),
                value: outlinePropertiesByInstance.strokeWidth,
                options: {
                    minValue: {
                        type: 0,
                        value: 0
                    },
                    maxValue: {
                        type: 1,
                        value: MaxLineWeightValue
                    },
                    unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
                }
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Visual_General_Properties_Width");
            }).addSimpleSlice("transparency", _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN.getTransparencySliderBuilder({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, outlineProps.transparency), {
                    selector
                }),
                value: outlinePropertiesByInstance.strokeTransparency,
                localize
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Transparency");
            }), borderGroupBuilder.build();
        }
        function enumerateShapePropertiesInstance(enumeration, properties, featureSwitches, selector, excludeShape) {
            var _a, _b, enumerationProperties = ((_a = {})[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.tileShape] = properties.tileShape, 
            _a);
            switch (-1 === [ _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.Heart, _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.Line, _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.Oval, _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.Pill, _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.RectangleRounded ].indexOf(properties.tileShape) && (enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.shapeRounding] = properties.shapeRounding), 
            properties.tileShape === _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.Line && (enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_shape_capabilities__WEBPACK_IMPORTED_MODULE_6__.B3.linecapType] = properties.linecapType), 
            properties.tileShape) {
              case _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.Arrow:
                enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_shape_capabilities__WEBPACK_IMPORTED_MODULE_6__.B3.arrowheadSize] = properties.arrowheadSize, 
                enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_shape_capabilities__WEBPACK_IMPORTED_MODULE_6__.B3.arrowStemWidth] = properties.arrowStemWidth;
                break;

              case _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.ArrowChevron:
                enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_shape_capabilities__WEBPACK_IMPORTED_MODULE_6__.B3.chevronAngle] = properties.chevronAngle;
                break;

              case _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.ArrowPentagon:
                enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_shape_capabilities__WEBPACK_IMPORTED_MODULE_6__.B3.arrowheadSize] = properties.arrowheadSize;
                break;

              case _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.TriangleIsoc:
                enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_shape_capabilities__WEBPACK_IMPORTED_MODULE_6__.B3.isocelesTriangleTipPosition] = properties.isocelesTriangleTipPosition;
                break;

              case _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.Parallelogram:
                enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_shape_capabilities__WEBPACK_IMPORTED_MODULE_6__.B3.parallelogramSlant] = properties.parallelogramSlant;
                break;

              case _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.Trapezoid:
                enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_shape_capabilities__WEBPACK_IMPORTED_MODULE_6__.B3.trapezoidSlant] = properties.trapezoidSlant;
                break;

              case _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.Hexagon:
                enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_shape_capabilities__WEBPACK_IMPORTED_MODULE_6__.B3.hexagonSlant] = properties.hexagonSlant;
                break;

              case _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.Octagon:
                enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_shape_capabilities__WEBPACK_IMPORTED_MODULE_6__.B3.octagonSnipSize] = properties.octagonSnipSize;
                break;

              case _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.Speechbubble:
                enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_shape_capabilities__WEBPACK_IMPORTED_MODULE_6__.B3.speechBubbleHeight] = properties.speechBubbleHeight, 
                enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_shape_capabilities__WEBPACK_IMPORTED_MODULE_6__.B3.speechBubbleTailPosition] = properties.speechBubbleTailPosition, 
                enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_shape_capabilities__WEBPACK_IMPORTED_MODULE_6__.B3.speechBubbleTailAngle] = properties.speechBubbleTailAngle;
                break;

              case _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.RectangleRounded:
                enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_shape_capabilities__WEBPACK_IMPORTED_MODULE_6__.B3.rectangleRoundedCurve] = properties.rectangleRoundedCurve;
                break;

              case _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.TabCutCorner:
                enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_shape_capabilities__WEBPACK_IMPORTED_MODULE_6__.B3.tabCutCornerSnipSizeTopRight] = properties.tabCutCornerSnipSizeTopRight;
                break;

              case _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.TabCutTopCorners:
                enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_shape_capabilities__WEBPACK_IMPORTED_MODULE_6__.B3.tabCutCornerSnipSizeTop] = properties.tabCutCornerSnipSizeTop, 
                enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_shape_capabilities__WEBPACK_IMPORTED_MODULE_6__.B3.tabCutCornerSnipSizeBottom] = properties.tabCutCornerSnipSizeBottom;
                break;

              case _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.TabRoundCorner:
                enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_shape_capabilities__WEBPACK_IMPORTED_MODULE_6__.B3.tabRoundCornerTopRight] = properties.tabRoundCornerTopRight;
                break;

              case _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.TabRoundTopCorners:
                enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_shape_capabilities__WEBPACK_IMPORTED_MODULE_6__.B3.tabRoundCornerTop] = properties.tabRoundCornerTop, 
                enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_shape_capabilities__WEBPACK_IMPORTED_MODULE_6__.B3.tabRoundCornerBottom] = properties.tabRoundCornerBottom;
            }
            var validValues = ((_b = {})[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.shapeRounding] = {
                unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_,
                numberRange: {
                    min: 0,
                    max: MaxRoundEdgeValue
                }
            }, _b[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.arrowheadSize] = {
                unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2,
                numberRange: {
                    min: 0,
                    max: 100
                }
            }, _b[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.arrowStemWidth] = {
                unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2,
                numberRange: {
                    min: 0,
                    max: 50
                }
            }, _b[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.chevronAngle] = {
                unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.g,
                numberRange: {
                    min: 0,
                    max: 180
                }
            }, _b[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.isocelesTriangleTipPosition] = {
                unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2,
                numberRange: {
                    min: 0,
                    max: 100
                }
            }, _b[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.parallelogramSlant] = {
                unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2,
                numberRange: {
                    min: 0,
                    max: 100
                }
            }, _b[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.trapezoidSlant] = {
                unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2,
                numberRange: {
                    min: 0,
                    max: 100
                }
            }, _b[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.hexagonSlant] = {
                unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2,
                numberRange: {
                    min: 0,
                    max: 100
                }
            }, _b[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.octagonSnipSize] = {
                unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2,
                numberRange: {
                    min: 0,
                    max: 50
                }
            }, _b[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.speechBubbleHeight] = {
                unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2,
                numberRange: {
                    min: 0,
                    max: 50
                }
            }, _b[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.speechBubbleTailAngle] = {
                unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.g,
                numberRange: {
                    min: 0,
                    max: 180
                }
            }, _b[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.rectangleRoundedCurve] = {
                unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2,
                numberRange: {
                    min: 0,
                    max: 50
                }
            }, _b[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.tabCutCornerSnipSizeTopRight] = {
                unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2,
                numberRange: {
                    min: 0,
                    max: 50
                }
            }, _b[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.tabRoundCornerTop] = {
                unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2,
                numberRange: {
                    min: 0,
                    max: 50
                }
            }, _b[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.tabCutCornerSnipSizeBottom] = {
                unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2,
                numberRange: {
                    min: 0,
                    max: 50
                }
            }, _b[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.tabRoundCornerTopRight] = {
                unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2,
                numberRange: {
                    min: 0,
                    max: 50
                }
            }, _b);
            excludeShape && (validValues[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.tileShape] = {
                filterValues: _.filter(_.values(_powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m), function(s) {
                    return !excludeShape[s];
                })
            }), enumeration.pushInstance({
                objectName: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.eM.shape,
                selector,
                properties: enumerationProperties,
                validValues
            });
        }
        function enumerateShapeProperties(enumeration, properties, displayedInstanceIds, getInstanceDisplayName, featureSwitches, excludeShape) {
            for (var _i = 0, displayedInstanceIds_3 = displayedInstanceIds; _i < displayedInstanceIds_3.length; _i++) {
                var instance = displayedInstanceIds_3[_i], instanceId = (0, _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.Sg)(instance);
                1 !== displayedInstanceIds.length && enumeration.pushContainer({
                    displayName: getInstanceDisplayName(instanceId)
                }), enumerateShapePropertiesInstance(enumeration, properties[instanceId], 0, (0, 
                _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.$H)(instance), excludeShape), 
                1 !== displayedInstanceIds.length && enumeration.popContainer();
            }
        }
        function getShapeGroupByInstance(shapeProperties, hostServices, featureSwitches, instance, cardUidBuilder, excludeShape) {
            return getShapeGroup(shapeProperties[(0, _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.Sg)(instance)], hostServices, featureSwitches, (0, 
            _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.$H)(instance), cardUidBuilder, excludeShape);
        }
        function getShapeGroup(shapeProperties, hostServices, featureSwitches, selector, cardUidBuilder, excludeShape) {
            var excludeFromRounding = [ _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.Heart, _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.Line, _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.Oval, _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.Pill, _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.RectangleRounded ], localize = function(key) {
                return hostServices.getLocalizedString(key);
            }, shapeProps = _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.shape, shapeGroupBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mQ(new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.SS(cardUidBuilder, "shape"), localize);
            if ((null == featureSwitches ? void 0 : featureSwitches.onObject) && shapeGroupBuilder.withDisplayName("Visual_Shape"), 
            excludeShape) {
                var filterValues = _.filter(_.values(_powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m), function(s) {
                    return !excludeShape[s];
                });
                shapeGroupBuilder.addSimpleSlice("shape", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.uY({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.tileShape), {
                        selector
                    }),
                    value: shapeProperties.tileShape,
                    filterValues
                }).build(), function(sliceBuilder) {
                    return sliceBuilder.withCustomDisplayName("Visual_Shape");
                });
            } else shapeGroupBuilder.addSimpleSlice("shape", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.uY({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.tileShape), {
                    selector
                }),
                value: shapeProperties.tileShape
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Visual_Shape");
            });
            switch (-1 === excludeFromRounding.indexOf(shapeProperties.tileShape) && shapeGroupBuilder.addSimpleSlice("roundEdge", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.roundEdge), {
                    selector
                }),
                value: shapeProperties.shapeRounding,
                localize,
                options: {
                    minValue: {
                        type: 0,
                        value: 0
                    },
                    maxValue: {
                        type: 1,
                        value: MaxRoundEdgeValue
                    },
                    unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
                }
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("VisualContainer_Border_RoundedCorners");
            }), shapeProperties.tileShape) {
              case _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.Line:
                shapeGroupBuilder.addSimpleSlice("cap type", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.uY({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_shape_capabilities__WEBPACK_IMPORTED_MODULE_6__.WO.shape.linecapType), {
                        selector
                    }),
                    value: shapeProperties.linecapType
                }).build());
                break;

              case _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.Arrow:
                shapeGroupBuilder.addSimpleSlice("arrowheadSize", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.arrowheadSize), {
                        selector
                    }),
                    value: shapeProperties.arrowheadSize,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxArrowheadSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2
                    }
                }).build(), function(sliceBuilder) {
                    return sliceBuilder.withCustomDisplayName("Visual_Shape_ArrowheadSize");
                }).addSimpleSlice("arrowStemWidth", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.arrowStemWidth), {
                        selector
                    }),
                    value: shapeProperties.arrowStemWidth,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxArrowStemWidth
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2
                    }
                }).build(), function(sliceBuilder) {
                    return sliceBuilder.withCustomDisplayName("Visual_Shape_ArrowStemWidth");
                });
                break;

              case _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.ArrowChevron:
                shapeGroupBuilder.addSimpleSlice("chevronAngle", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.chevronAngle), {
                        selector
                    }),
                    value: shapeProperties.chevronAngle,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxChevronAngle
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.g
                    }
                }).build(), function(sliceBuilder) {
                    return sliceBuilder.withCustomDisplayName("Visual_Angle");
                });
                break;

              case _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.ArrowPentagon:
                shapeGroupBuilder.addSimpleSlice("arrowheadSize", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.arrowheadSize), {
                        selector
                    }),
                    value: shapeProperties.arrowheadSize,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxArrowheadSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2
                    }
                }).build(), function(sliceBuilder) {
                    return sliceBuilder.withCustomDisplayName("Visual_Shape_ArrowheadSize");
                });
                break;

              case _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.TriangleIsoc:
                shapeGroupBuilder.addSimpleSlice("isocelesTriangleTipPosition", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.isocelesTriangleTipPosition), {
                        selector
                    }),
                    value: shapeProperties.isocelesTriangleTipPosition,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxTriangleTipPosition
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2
                    }
                }).build(), function(sliceBuilder) {
                    return sliceBuilder.withCustomDisplayName("Visual_Shape_TriangleTipPosition");
                });
                break;

              case _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.Parallelogram:
                shapeGroupBuilder.addSimpleSlice("parallelogramSlant", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.parallelogramSlant), {
                        selector
                    }),
                    value: shapeProperties.parallelogramSlant,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxSlantSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2
                    }
                }).build(), function(sliceBuilder) {
                    return sliceBuilder.withCustomDisplayName("Visual_Shape_Slant");
                });
                break;

              case _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.Trapezoid:
                shapeGroupBuilder.addSimpleSlice("trapezoidSlant", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.trapezoidSlant), {
                        selector
                    }),
                    value: shapeProperties.trapezoidSlant,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxSlantSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2
                    }
                }).build(), function(sliceBuilder) {
                    return sliceBuilder.withCustomDisplayName("Visual_Shape_Slant");
                });
                break;

              case _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.Hexagon:
                shapeGroupBuilder.addSimpleSlice("hexagonSlant", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.hexagonSlant), {
                        selector
                    }),
                    value: shapeProperties.hexagonSlant,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxSlantSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2
                    }
                }).build(), function(sliceBuilder) {
                    return sliceBuilder.withCustomDisplayName("Visual_Shape_Slant");
                });
                break;

              case _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.Octagon:
                shapeGroupBuilder.addSimpleSlice("octagonSnipSize", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.octagonSnipSize), {
                        selector
                    }),
                    value: shapeProperties.octagonSnipSize,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxSnipSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2
                    }
                }).build(), function(sliceBuilder) {
                    return sliceBuilder.withCustomDisplayName("Visual_Shape_OctagonSnipSize");
                });
                break;

              case _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.Speechbubble:
                shapeGroupBuilder.addSimpleSlice("speechBubbleHeight", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.speechBubbleHeight), {
                        selector
                    }),
                    value: shapeProperties.speechBubbleHeight,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxBubbleHeight
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2
                    }
                }).build(), function(sliceBuilder) {
                    return sliceBuilder.withCustomDisplayName("Visual_Shape_ChatBubbleHeight");
                }).addSimpleSlice("speechBubbleTailPosition", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.uY({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.speechBubbleTailPosition), {
                        selector
                    }),
                    value: shapeProperties.speechBubbleTailPosition
                }).build(), function(sliceBuilder) {
                    return sliceBuilder.withCustomDisplayName("Visual_Shape_ChatTailPosition");
                }).addSimpleSlice("speechBubbleTailAngle", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.speechBubbleTailAngle), {
                        selector
                    }),
                    value: shapeProperties.speechBubbleTailAngle,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxBubbleTailAngle
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.g
                    }
                }).build(), function(sliceBuilder) {
                    return sliceBuilder.withCustomDisplayName("Visual_Shape_ChatTailAngle");
                });
                break;

              case _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.RectangleRounded:
                shapeGroupBuilder.addSimpleSlice("rectangleRoundedCurve", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.rectangleRoundedCurve), {
                        selector
                    }),
                    value: shapeProperties.rectangleRoundedCurve,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2
                    }
                }).build(), function(sliceBuilder) {
                    return sliceBuilder.withCustomDisplayName("Visual_Shape_RectangleRoundedCurve");
                });
                break;

              case _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.TabCutCorner:
                shapeGroupBuilder.addSimpleSlice("tabCutCornerSnipSizeTopRight", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.tabCutCornerSnipSizeTopRight), {
                        selector
                    }),
                    value: shapeProperties.tabCutCornerSnipSizeTopRight,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2
                    }
                }).build(), function(sliceBuilder) {
                    return sliceBuilder.withCustomDisplayName("Visual_Shape_TabSnipSizeTopRight");
                });
                break;

              case _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.TabCutTopCorners:
                shapeGroupBuilder.addSimpleSlice("tabCutCornerSnipSizeTop", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.tabCutCornerSnipSizeTop), {
                        selector
                    }),
                    value: shapeProperties.tabCutCornerSnipSizeTop,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2
                    }
                }).build(), function(sliceBuilder) {
                    return sliceBuilder.withCustomDisplayName("Visual_Shape_TabSnipSizeTop");
                }).addSimpleSlice("tabCutCornerSnipSizeBottom", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.tabCutCornerSnipSizeBottom), {
                        selector
                    }),
                    value: shapeProperties.tabCutCornerSnipSizeBottom,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2
                    }
                }).build(), function(sliceBuilder) {
                    return sliceBuilder.withCustomDisplayName("Visual_Shape_TabSnipSizeBottom");
                });
                break;

              case _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.TabRoundCorner:
                shapeGroupBuilder.addSimpleSlice("tabRoundCornerTopRight", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.tabRoundCornerTopRight), {
                        selector
                    }),
                    value: shapeProperties.tabRoundCornerTopRight,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2
                    }
                }).build(), function(sliceBuilder) {
                    return sliceBuilder.withCustomDisplayName("Visual_Shape_TabRoundingTopRight");
                });
                break;

              case _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.TabRoundTopCorners:
                shapeGroupBuilder.addSimpleSlice("tabRoundCornerTop", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.tabRoundCornerTop), {
                        selector
                    }),
                    value: shapeProperties.tabRoundCornerTop,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2
                    }
                }).build(), function(sliceBuilder) {
                    return sliceBuilder.withCustomDisplayName("Visual_Shape_TabRoundingTop");
                }).addSimpleSlice("tabRoundCornerBottom", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.tabRoundCornerBottom), {
                        selector
                    }),
                    value: shapeProperties.tabRoundCornerBottom,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2
                    }
                }).build(), function(sliceBuilder) {
                    return sliceBuilder.withCustomDisplayName("Visual_Shape_TabRoundingBottom");
                });
            }
            return shapeGroupBuilder.build();
        }
        function getCustomizableRectangleShapeGroup(shapeProperties, hostServices, featureSwitches, selector, cardUidBuilder, excludeShape, disabledReason) {
            var localize = function(key) {
                return hostServices.getLocalizedString(key);
            }, shapeProps = _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.shapeCustomRectangle, shapeGroupBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mQ(new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.SS(cardUidBuilder, "shape"), localize);
            if ((null == featureSwitches ? void 0 : featureSwitches.onObject) && shapeGroupBuilder.withDisplayName("Visual_Shape"), 
            excludeShape) {
                var filterValues = _.filter(_.values(_powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m), function(s) {
                    return !excludeShape[s];
                });
                shapeGroupBuilder.addSimpleSlice("shape", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.uY({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.tileShape), {
                        selector
                    }),
                    value: shapeProperties.tileShape,
                    filterValues
                }).build(), function(sliceBuilder) {
                    return sliceBuilder.withCustomDisplayName("Visual_Shape");
                });
            } else shapeGroupBuilder.addSimpleSlice("shape", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.uY({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.tileShape), {
                    selector
                }),
                value: shapeProperties.tileShape
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Visual_Shape");
            });
            switch (shapeProperties.tileShape) {
              case _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.RectangleRounded:
                shapeProperties.rectangleRoundedCurveCustomStyle || shapeGroupBuilder.addSimpleSlice("rectangleRoundedCurve", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.rectangleRoundedCurve), {
                        selector
                    }),
                    value: shapeProperties.rectangleRoundedCurve,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2
                    }
                }).build(), function(sliceBuilder) {
                    return sliceBuilder.withCustomDisplayName("Visual_Shape_RectangleRoundedCurve");
                }), shapeProperties.rectangleRoundedCurveCustomStyle && shapeGroupBuilder.addSimpleSlice("rectangleRoundedCurveLeftTop", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.rectangleRoundedCurveLeftTop), {
                        selector
                    }),
                    value: shapeProperties.rectangleRoundedCurveLeftTop,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2
                    }
                }).build()).addSimpleSlice("rectangleRoundedCurveRightTop", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.rectangleRoundedCurveRightTop), {
                        selector
                    }),
                    value: shapeProperties.rectangleRoundedCurveRightTop,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2
                    }
                }).build()).addSimpleSlice("rectangleRoundedCurveLeftBottom", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.rectangleRoundedCurveLeftBottom), {
                        selector
                    }),
                    value: shapeProperties.rectangleRoundedCurveLeftBottom,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2
                    }
                }).build()).addSimpleSlice("rectangleRoundedCurveRightBottom", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.rectangleRoundedCurveRightBottom), {
                        selector
                    }),
                    value: shapeProperties.rectangleRoundedCurveRightBottom,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2
                    }
                }).build()), shapeGroupBuilder.addSimpleSlice("rectangleRoundedCurveCustomStyle", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.bd({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.rectangleRoundedCurveCustomStyle), {
                        selector
                    }),
                    value: shapeProperties.rectangleRoundedCurveCustomStyle
                }).build());
                break;

              case _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.RectangleRoundedByPixel:
                shapeProperties.rectangleRoundedCurveCustomStyle || shapeGroupBuilder.addSimpleSlice("rectangleRoundedCurve", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.rectangleRoundedCurve), {
                        selector
                    }),
                    value: shapeProperties.rectangleRoundedCurve,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
                    }
                }).build(), function(sliceBuilder) {
                    return sliceBuilder.withCustomDisplayName("Visual_Shape_RectangleRoundedCurve");
                }), shapeProperties.rectangleRoundedCurveCustomStyle && shapeGroupBuilder.addSimpleSlice("rectangleRoundedCurveLeftTop", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.rectangleRoundedCurveLeftTop), {
                        selector
                    }),
                    value: shapeProperties.rectangleRoundedCurveLeftTop,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
                    }
                }).build()).addSimpleSlice("rectangleRoundedCurveRightTop", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.rectangleRoundedCurveRightTop), {
                        selector
                    }),
                    value: shapeProperties.rectangleRoundedCurveRightTop,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
                    }
                }).build()).addSimpleSlice("rectangleRoundedCurveLeftBottom", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.rectangleRoundedCurveLeftBottom), {
                        selector
                    }),
                    value: shapeProperties.rectangleRoundedCurveLeftBottom,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
                    }
                }).build()).addSimpleSlice("rectangleRoundedCurveRightBottom", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.rectangleRoundedCurveRightBottom), {
                        selector
                    }),
                    value: shapeProperties.rectangleRoundedCurveRightBottom,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
                    }
                }).build()), shapeGroupBuilder.addSimpleSlice("rectangleRoundedCurveCustomStyle", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.bd({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.rectangleRoundedCurveCustomStyle), {
                        selector
                    }),
                    value: shapeProperties.rectangleRoundedCurveCustomStyle
                }).build());
                break;

              case _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.TabCutTopCorners:
                shapeProperties.tabCutCornerSnipSizeCustomStyle || shapeGroupBuilder.addSimpleSlice("tabCutCornerSnipSizeTop", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.tabCutCornerSnipSizeTop), {
                        selector
                    }),
                    value: shapeProperties.tabCutCornerSnipSizeTop,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2
                    }
                }).build(), function(sliceBuilder) {
                    return sliceBuilder.withCustomDisplayName("Visual_Shape_TabSnipSizeTop");
                }).addSimpleSlice("tabCutCornerSnipSizeBottom", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.tabCutCornerSnipSizeBottom), {
                        selector
                    }),
                    value: shapeProperties.tabCutCornerSnipSizeBottom,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2
                    }
                }).build(), function(sliceBuilder) {
                    return sliceBuilder.withCustomDisplayName("Visual_Shape_TabSnipSizeBottom");
                }), shapeProperties.tabCutCornerSnipSizeCustomStyle && shapeGroupBuilder.addSimpleSlice("tabCutCornerSnipSizeLeftTop", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.tabCutCornerSnipSizeLeftTop), {
                        selector
                    }),
                    value: shapeProperties.tabCutCornerSnipSizeLeftTop,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2
                    }
                }).build()).addSimpleSlice("tabCutCornerSnipSizeRightTop", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.tabCutCornerSnipSizeRightTop), {
                        selector
                    }),
                    value: shapeProperties.tabCutCornerSnipSizeRightTop,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2
                    }
                }).build()).addSimpleSlice("tabCutCornerSnipSizeLeftBottom", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.tabCutCornerSnipSizeLeftBottom), {
                        selector
                    }),
                    value: shapeProperties.tabCutCornerSnipSizeLeftBottom,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2
                    }
                }).build()).addSimpleSlice("rectangleRoundedCurveRightBottom", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.tabCutCornerSnipSizeRightBottom), {
                        selector
                    }),
                    value: shapeProperties.tabCutCornerSnipSizeRightBottom,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2
                    }
                }).build()), shapeGroupBuilder.addSimpleSlice("tabCutCornerSnipSizeCustomStyle", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.bd({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.tabCutCornerSnipSizeCustomStyle), {
                        selector
                    }),
                    value: shapeProperties.tabCutCornerSnipSizeCustomStyle
                }).build());
                break;

              case _powerbi_legacy_PowerBIVisuals_Visuals_types_shapeType__WEBPACK_IMPORTED_MODULE_5__.m.TabCutTopCornersByPixel:
                shapeProperties.tabCutCornerSnipSizeCustomStyle || shapeGroupBuilder.addSimpleSlice("tabCutCornerSnipSizeTop", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.tabCutCornerSnipSizeTop), {
                        selector
                    }),
                    value: shapeProperties.tabCutCornerSnipSizeTop,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
                    }
                }).build(), function(sliceBuilder) {
                    return sliceBuilder.withCustomDisplayName("Visual_Shape_TabSnipSizeTop");
                }).addSimpleSlice("tabCutCornerSnipSizeBottom", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.tabCutCornerSnipSizeBottom), {
                        selector
                    }),
                    value: shapeProperties.tabCutCornerSnipSizeBottom,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
                    }
                }).build(), function(sliceBuilder) {
                    return sliceBuilder.withCustomDisplayName("Visual_Shape_TabSnipSizeBottom");
                }), shapeProperties.tabCutCornerSnipSizeCustomStyle && shapeGroupBuilder.addSimpleSlice("tabCutCornerSnipSizeLeftTop", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.tabCutCornerSnipSizeLeftTop), {
                        selector
                    }),
                    value: shapeProperties.tabCutCornerSnipSizeLeftTop,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
                    }
                }).build()).addSimpleSlice("tabCutCornerSnipSizeRightTop", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.tabCutCornerSnipSizeRightTop), {
                        selector
                    }),
                    value: shapeProperties.tabCutCornerSnipSizeRightTop,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
                    }
                }).build()).addSimpleSlice("tabCutCornerSnipSizeLeftBottom", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.tabCutCornerSnipSizeLeftBottom), {
                        selector
                    }),
                    value: shapeProperties.tabCutCornerSnipSizeLeftBottom,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
                    }
                }).build()).addSimpleSlice("rectangleRoundedCurveRightBottom", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.tabCutCornerSnipSizeRightBottom), {
                        selector
                    }),
                    value: shapeProperties.tabCutCornerSnipSizeRightBottom,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
                    }
                }).build()), shapeGroupBuilder.addSimpleSlice("tabCutCornerSnipSizeCustomStyle", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.bd({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shapeProps.tabCutCornerSnipSizeCustomStyle), {
                        selector
                    }),
                    value: shapeProperties.tabCutCornerSnipSizeCustomStyle
                }).build());
            }
            return disabledReason && shapeGroupBuilder.withDisabled(!0, disabledReason), shapeGroupBuilder.build();
        }
        function getShapeCard(shapeProperties, hostServices, featureSwitches, instanceId, excludeShape) {
            var shapeProps = _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_navigator_capabilities__WEBPACK_IMPORTED_MODULE_7__.tp.shape, cardUidBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.lg("shape"), cardBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.CQ(cardUidBuilder, "Visual_Shape", [ shapeProps.tileShape, shapeProps.roundEdge, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_shape_capabilities__WEBPACK_IMPORTED_MODULE_6__.WO.shape.linecapType, shapeProps.arrowheadSize, shapeProps.arrowStemWidth, shapeProps.chevronAngle, shapeProps.isocelesTriangleTipPosition, shapeProps.parallelogramSlant, shapeProps.trapezoidSlant, shapeProps.hexagonSlant, shapeProps.octagonSnipSize, shapeProps.speechBubbleHeight, shapeProps.speechBubbleTailPosition, shapeProps.speechBubbleTailAngle, shapeProps.rectangleRoundedCurve, shapeProps.tabCutCornerSnipSizeTopRight, shapeProps.tabCutCornerSnipSizeTop, shapeProps.tabCutCornerSnipSizeBottom, shapeProps.tabRoundCornerTopRight, shapeProps.tabRoundCornerTop, shapeProps.tabRoundCornerBottom ], function(key) {
                return hostServices.getLocalizedString(key);
            }), groups = [], shapeGroupByInstance = getShapeGroupByInstance(shapeProperties, hostServices, featureSwitches, instanceId, cardUidBuilder, excludeShape);
            return groups.push(shapeGroupByInstance), cardBuilder.withGroups(groups), cardBuilder.build();
        }
        function getCustomizableRectangleShapeCard(shapeProperties, hostServices, featureSwitches, instanceId, excludeShape) {
            var shapeProps = _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_cardVisual_capabilities__WEBPACK_IMPORTED_MODULE_8__.L$.shapeCustomRectangle, cardUidBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.lg("shape"), cardBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.CQ(cardUidBuilder, "Visual_Shape", [ shapeProps.tileShape, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_shape_capabilities__WEBPACK_IMPORTED_MODULE_6__.WO.shape.linecapType, shapeProps.rectangleRoundedCurve, shapeProps.rectangleRoundedCurveCustomStyle, shapeProps.rectangleRoundedCurveLeftTop, shapeProps.rectangleRoundedCurveRightTop, shapeProps.rectangleRoundedCurveLeftBottom, shapeProps.rectangleRoundedCurveRightBottom, shapeProps.tabCutCornerSnipSizeCustomStyle, shapeProps.tabCutCornerSnipSizeLeftBottom, shapeProps.tabCutCornerSnipSizeTop, shapeProps.tabCutCornerSnipSizeBottom, shapeProps.tabCutCornerSnipSizeLeftTop, shapeProps.tabCutCornerSnipSizeRightBottom, shapeProps.tabCutCornerSnipSizeRightTop ], function(key) {
                return hostServices.getLocalizedString(key);
            }), groups = [], shapeGroupByInstance = function(shapeProperties, hostServices, featureSwitches, instance, cardUidBuilder, excludeShape) {
                return getCustomizableRectangleShapeGroup(shapeProperties[(0, _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.Sg)(instance)], hostServices, featureSwitches, (0, 
                _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.$H)(instance), cardUidBuilder, excludeShape);
            }(shapeProperties, hostServices, featureSwitches, instanceId, cardUidBuilder, excludeShape);
            return groups.push(shapeGroupByInstance), cardBuilder.withGroups(groups), cardBuilder.build();
        }
        function enumerateShadowProperties(enumeration, properties, displayedInstanceIds, getInstanceDisplayName) {
            var _a, _b;
            if (0 !== displayedInstanceIds.length) {
                enumeration.pushInstance({
                    objectName: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.eM.shadow,
                    selector: null,
                    properties: {
                        show: properties.default.show
                    }
                });
                for (var _i = 0, displayedInstanceIds_4 = displayedInstanceIds; _i < displayedInstanceIds_4.length; _i++) {
                    var instance = displayedInstanceIds_4[_i], instanceId = (0, _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.Sg)(instance);
                    1 !== displayedInstanceIds.length && enumeration.pushContainer({
                        displayName: getInstanceDisplayName(instanceId)
                    });
                    var shadowPropertiesInstance = properties[instanceId], enumerationProperties = ((_a = {})[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.shadowColor] = shadowPropertiesInstance.shadowColor, 
                    _a[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.shadowTransparency] = shadowPropertiesInstance.shadowTransparency, 
                    _a[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.shadowBlur] = shadowPropertiesInstance.shadowBlur, 
                    _a[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.shadowPositionPreset] = shadowPropertiesInstance.shadowPositionPreset, 
                    _a);
                    "custom" === shadowPropertiesInstance.shadowPositionPreset && (enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.shadowAngle] = shadowPropertiesInstance.shadowAngle, 
                    enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.shadowDistance] = shadowPropertiesInstance.shadowDistance), 
                    enumeration.pushInstance({
                        objectName: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.eM.shadow,
                        selector: (0, _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.$H)(instance),
                        properties: enumerationProperties,
                        propertyInstanceKind: (_b = {}, _b[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.shadowColor] = 3, 
                        _b)
                    }), 1 !== displayedInstanceIds.length && enumeration.popContainer();
                }
            }
        }
        function getShadowGroupByInstance(shadowProperties, hostServices, instance, cardUidBuilder) {
            var localize = function(key) {
                return hostServices.getLocalizedString(key);
            }, shadowProps = _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.shadow, instanceId = (0, 
            _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.Sg)(instance), shadowPropertiesByInstance = shadowProperties[instanceId], selector = (0, 
            _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.$H)(instance), shadowGroupBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mQ(new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.SS(cardUidBuilder, "shadow"), localize);
            return shadowGroupBuilder.withDisplayName("Visual_DropShadow").addTopLevelToggle("show", function() {
                return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.bd({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shadowProps.show), {
                        selector: null
                    }),
                    value: shadowProperties.default.show
                }).build();
            }).addSimpleSlice("color", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.BT({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shadowProps.color), {
                    selector,
                    instanceKind: 3
                }),
                value: {
                    value: shadowPropertiesByInstance.shadowColor
                }
            }).build()).addSimpleSlice("transparency", _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN.getTransparencySliderBuilder({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shadowProps.transparency), {
                    selector
                }),
                value: shadowPropertiesByInstance.shadowTransparency,
                localize
            }).build()).addSimpleSlice("blur", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shadowProps.shadowBlur), {
                    selector
                }),
                value: shadowPropertiesByInstance.shadowBlur,
                localize,
                options: {
                    minValue: {
                        type: 0,
                        value: 0
                    },
                    maxValue: {
                        type: 1,
                        value: MaxBlurValue
                    },
                    unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
                }
            }).build()).addSimpleSlice("position", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.uY({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shadowProps.shadowPositionPreset), {
                    selector
                }),
                value: shadowPropertiesByInstance.shadowPositionPreset
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Visual_Position");
            }), "custom" === shadowPropertiesByInstance.shadowPositionPreset && shadowGroupBuilder.addSimpleSlice("angle", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shadowProps.angle), {
                    selector
                }),
                value: shadowPropertiesByInstance.shadowAngle,
                localize,
                options: {
                    minValue: {
                        type: 0,
                        value: 0
                    },
                    maxValue: {
                        type: 1,
                        value: MaxShadowAngle
                    },
                    unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.g
                }
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Visual_Angle");
            }).addSimpleSlice("shadowDistance", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shadowProps.shadowDistance), {
                    selector
                }),
                value: shadowPropertiesByInstance.shadowDistance,
                localize,
                options: {
                    minValue: {
                        type: 0,
                        value: 0
                    },
                    maxValue: {
                        type: 1,
                        value: MaxShadowDistancevalue
                    },
                    unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
                }
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Distance");
            }), shadowGroupBuilder.build();
        }
        function getCustomizableShadowGroupByInstance(shadowProperties, hostServices, instance, cardUidBuilder, colorSelector) {
            var _a, localize = function(key) {
                return hostServices.getLocalizedString(key);
            }, shadowProps = _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.shadowCustom, shadowPropertiesByInstance = null !== (_a = shadowProperties[(0, 
            _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.Sg)(instance)]) && void 0 !== _a ? _a : shadowProperties.default, selector = (0, 
            _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.$H)(instance), shadowGroupBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mQ(new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.SS(cardUidBuilder, "shadow"), localize);
            return shadowGroupBuilder.withDisplayName("Visual_DropShadow").addTopLevelToggle("show", function() {
                return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.bd({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shadowProps.show), {
                        selector
                    }),
                    value: shadowPropertiesByInstance.show
                }).build();
            }), shadowGroupBuilder.addSimpleSlice("color", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.BT({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shadowProps.color), {
                    selector: colorSelector || selector,
                    instanceKind: 3
                }),
                value: {
                    value: shadowPropertiesByInstance.shadowColor
                }
            }).build()), shadowGroupBuilder.addSimpleSlice("offset", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.uY({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shadowProps.position), {
                    selector
                }),
                value: shadowPropertiesByInstance.position
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Offset");
            }), shadowGroupBuilder.addSimpleSlice("position", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.uY({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shadowProps.shadowPositionPreset), {
                    selector
                }),
                value: shadowPropertiesByInstance.shadowPositionPreset
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Visual_Position");
            }), "custom" === shadowPropertiesByInstance.shadowPositionPreset && (shadowGroupBuilder.addSimpleSlice("size", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shadowProps.shadowSpread), {
                    selector
                }),
                value: shadowPropertiesByInstance.shadowSpread,
                options: {
                    minValue: {
                        type: 0,
                        value: 0
                    },
                    maxValue: {
                        type: 1,
                        value: 10
                    },
                    unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
                },
                localize
            }).build()), shadowGroupBuilder.addSimpleSlice("blur", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shadowProps.shadowBlur), {
                    selector
                }),
                value: shadowPropertiesByInstance.shadowBlur,
                localize,
                options: {
                    minValue: {
                        type: 0,
                        value: 0
                    },
                    maxValue: {
                        type: 1,
                        value: MaxBlurValue
                    },
                    unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
                }
            }).build()), shadowGroupBuilder.addSimpleSlice("angle", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shadowProps.angle), {
                    selector
                }),
                value: shadowPropertiesByInstance.shadowAngle,
                localize,
                options: {
                    minValue: {
                        type: 0,
                        value: 0
                    },
                    maxValue: {
                        type: 1,
                        value: MaxShadowAngle
                    },
                    unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.g
                }
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Visual_Angle");
            }), shadowGroupBuilder.addSimpleSlice("shadowDistance", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shadowProps.shadowDistance), {
                    selector
                }),
                value: shadowPropertiesByInstance.shadowDistance,
                localize,
                options: {
                    minValue: {
                        type: 0,
                        value: 0
                    },
                    maxValue: {
                        type: 1,
                        value: MaxShadowDistancevalue
                    },
                    unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
                }
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Distance");
            }), shadowGroupBuilder.addSimpleSlice("transparency", _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN.getTransparencySliderBuilder({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, shadowProps.transparency), {
                    selector
                }),
                value: shadowPropertiesByInstance.shadowTransparency,
                localize
            }).build())), shadowGroupBuilder.build();
        }
        function enumerateGlowProperties(enumeration, properties, displayedInstanceIds, getInstanceDisplayName) {
            var _a, _b;
            if (0 !== displayedInstanceIds.length) {
                enumeration.pushInstance({
                    objectName: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.eM.glow,
                    selector: null,
                    properties: {
                        show: properties.default.show
                    }
                });
                for (var _i = 0, displayedInstanceIds_5 = displayedInstanceIds; _i < displayedInstanceIds_5.length; _i++) {
                    var instance = displayedInstanceIds_5[_i], instanceId = (0, _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.Sg)(instance);
                    1 !== displayedInstanceIds.length && enumeration.pushContainer({
                        displayName: getInstanceDisplayName(instanceId)
                    });
                    var glowPropertiesInstance = properties[instanceId], enumerationProperties = ((_a = {})[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.glowColor] = glowPropertiesInstance.glowColor, 
                    _a[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.glowTransparency] = glowPropertiesInstance.glowTransparency, 
                    _a[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.shadowBlur] = glowPropertiesInstance.glowBlur, 
                    _a);
                    enumeration.pushInstance({
                        objectName: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.eM.glow,
                        selector: (0, _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.$H)(instance),
                        properties: enumerationProperties,
                        propertyInstanceKind: (_b = {}, _b[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.glowColor] = 3, 
                        _b)
                    }), 1 !== displayedInstanceIds.length && enumeration.popContainer();
                }
            }
        }
        function getGlowGroupByInstance(glowProperties, hostServices, instance, cardUidBuilder) {
            var localize = function(key) {
                return hostServices.getLocalizedString(key);
            }, glowProps = _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.glow, instanceId = (0, 
            _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.Sg)(instance), glowPropertiesByInstance = glowProperties[instanceId], selector = (0, 
            _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.$H)(instance), glowGroupBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mQ(new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.SS(cardUidBuilder, "glow"), localize);
            return glowGroupBuilder.withDisplayName("Visual_Glow").addTopLevelToggle("show", function() {
                return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.bd({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, glowProps.show), {
                        selector: null
                    }),
                    value: glowProperties.default.show
                }).build();
            }).addSimpleSlice("color", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.BT({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, glowProps.color), {
                    selector,
                    instanceKind: 3
                }),
                value: {
                    value: glowPropertiesByInstance.glowColor
                }
            }).build()).addSimpleSlice("transparency", _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN.getTransparencySliderBuilder({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, glowProps.transparency), {
                    selector
                }),
                value: glowPropertiesByInstance.glowTransparency,
                localize
            }).build()).addSimpleSlice("blur", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, glowProps.shadowBlur), {
                    selector
                }),
                value: glowPropertiesByInstance.glowBlur,
                localize,
                options: {
                    minValue: {
                        type: 0,
                        value: 0
                    },
                    maxValue: {
                        type: 1,
                        value: 100
                    },
                    unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
                }
            }).build()), glowGroupBuilder.build();
        }
        function getCustomizableGlowGroupByInstance(glowProperties, hostServices, instance, cardUidBuilder, colorSelector) {
            var _a, localize = function(key) {
                return hostServices.getLocalizedString(key);
            }, glowProps = _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.glowCustom, glowPropertiesByInstance = null !== (_a = glowProperties[(0, 
            _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.Sg)(instance)]) && void 0 !== _a ? _a : glowProperties.default, selector = (0, 
            _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.$H)(instance), glowGroupBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mQ(new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.SS(cardUidBuilder, "glow"), localize);
            return glowGroupBuilder.withDisplayName("Visual_Glow").addTopLevelToggle("show", function() {
                return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.bd({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, glowProps.show), {
                        selector
                    }),
                    value: glowPropertiesByInstance.show
                }).build();
            }).addSimpleSlice("color", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.BT({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, glowProps.color), {
                    selector: colorSelector || selector,
                    instanceKind: 3
                }),
                value: {
                    value: glowPropertiesByInstance.glowColor
                }
            }).build()).addSimpleSlice("offset", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.uY({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, glowProps.position), {
                    selector
                }),
                value: glowPropertiesByInstance.position
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Offset");
            }).addSimpleSlice("position", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.uY({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, glowProps.glowPositionPreset), {
                    selector
                }),
                value: glowPropertiesByInstance.glowPositionPreset
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Visual_Position");
            }), "custom" === glowPropertiesByInstance.glowPositionPreset && glowGroupBuilder.addSimpleSlice("size", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, glowProps.glowSpread), {
                    selector
                }),
                value: glowPropertiesByInstance.glowSpread,
                options: {
                    minValue: {
                        type: 0,
                        value: 0
                    },
                    maxValue: {
                        type: 1,
                        value: 10
                    },
                    unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
                },
                localize
            }).build()).addSimpleSlice("blur", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, glowProps.shadowBlur), {
                    selector
                }),
                value: glowPropertiesByInstance.glowBlur,
                localize,
                options: {
                    minValue: {
                        type: 0,
                        value: 0
                    },
                    maxValue: {
                        type: 1,
                        value: 100
                    },
                    unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
                }
            }).build()).addSimpleSlice("angle", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, glowProps.angle), {
                    selector
                }),
                value: glowPropertiesByInstance.glowAngle,
                localize,
                options: {
                    minValue: {
                        type: 0,
                        value: 0
                    },
                    maxValue: {
                        type: 1,
                        value: MaxShadowAngle
                    },
                    unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.g
                }
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Visual_Angle");
            }).addSimpleSlice("shadowDistance", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, glowProps.glowDistance), {
                    selector
                }),
                value: glowPropertiesByInstance.glowDistance,
                localize,
                options: {
                    minValue: {
                        type: 0,
                        value: 0
                    },
                    maxValue: {
                        type: 1,
                        value: MaxShadowDistancevalue
                    },
                    unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
                }
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Distance");
            }).addSimpleSlice("transparency", _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN.getTransparencySliderBuilder({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, glowProps.transparency), {
                    selector
                }),
                value: glowPropertiesByInstance.glowTransparency,
                localize
            }).build()), glowGroupBuilder.build();
        }
        function enumerateTextProperties(enumeration, properties, displayedInstanceIds, getInstanceDisplayName) {
            var _a, _b, _c;
            if (0 !== displayedInstanceIds.length) {
                var validNumberRangeForMargin = {
                    unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_,
                    numberRange: {
                        min: 0,
                        max: MaxMarginValue
                    }
                };
                enumeration.pushInstance({
                    objectName: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.Vz.text,
                    selector: null,
                    properties: {
                        show: properties.default.show
                    }
                });
                for (var _i = 0, displayedInstanceIds_6 = displayedInstanceIds; _i < displayedInstanceIds_6.length; _i++) {
                    var instance = displayedInstanceIds_6[_i], instanceId = (0, _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.Sg)(instance);
                    1 !== displayedInstanceIds.length && enumeration.pushContainer({
                        displayName: getInstanceDisplayName(instanceId)
                    });
                    var textPropertiesInstance = properties[instanceId], enumerationProperties = {}, propertyInstanceKind = {};
                    void 0 !== textPropertiesInstance.text && (enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.text] = textPropertiesInstance.text, 
                    propertyInstanceKind[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.text] = 3), 
                    enumerationProperties = (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, enumerationProperties), ((_a = {})[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.fontColor] = textPropertiesInstance.fontProperties.color, 
                    _a[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.fontSize] = textPropertiesInstance.fontProperties.size.pt, 
                    _a[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.fontFamily] = textPropertiesInstance.fontProperties.family, 
                    _a[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.italic] = textPropertiesInstance.fontProperties.style, 
                    _a[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.bold] = textPropertiesInstance.fontProperties.weight, 
                    _a[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.underline] = textPropertiesInstance.fontProperties.textDecoration, 
                    _a[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.textVerticalAlignment] = textPropertiesInstance.verticalAlignment, 
                    _a[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.textHorizontalAlignment] = textPropertiesInstance.horizontalAlignment, 
                    _a[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.textRightMargin] = textPropertiesInstance.rightMargin, 
                    _a[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.textLeftMargin] = textPropertiesInstance.leftMargin, 
                    _a[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.textTopMargin] = textPropertiesInstance.topMargin, 
                    _a[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.textBottomMargin] = textPropertiesInstance.bottomMargin, 
                    _a)), propertyInstanceKind = (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, 
                    tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, propertyInstanceKind), ((_b = {})[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.fontColor] = 3, 
                    _b)), enumeration.pushInstance({
                        objectName: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.Vz.text,
                        selector: (0, _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.$H)(instance),
                        properties: enumerationProperties,
                        validValues: (_c = {}, _c[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.textRightMargin] = validNumberRangeForMargin, 
                        _c[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.textLeftMargin] = validNumberRangeForMargin, 
                        _c[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.textTopMargin] = validNumberRangeForMargin, 
                        _c[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.textBottomMargin] = validNumberRangeForMargin, 
                        _c),
                        propertyInstanceKind
                    }), 1 !== displayedInstanceIds.length && enumeration.popContainer();
                }
            }
        }
        function getTextGroupByInstance(textProperties, hostServices, instance, cardUidBuilder) {
            var textProps = _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.nm.text, instanceId = (0, 
            _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.Sg)(instance), textPropertiesByInstance = textProperties[instanceId], selector = (0, 
            _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.$H)(instance), textGroupBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mQ(new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.SS(cardUidBuilder, "text"), function(key) {
                return hostServices.getLocalizedString(key);
            });
            return textGroupBuilder.withDisplayName("Text").addTopLevelToggle("show", function() {
                return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.bd({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, textProps.show), {
                        selector: null
                    }),
                    value: textProperties.default.show
                }).build();
            }), void 0 !== textPropertiesByInstance.text && textGroupBuilder.addSimpleSlice("text", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.fq({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, textProps.text), {
                    selector,
                    instanceKind: 3
                }),
                placeholder: "",
                value: textPropertiesByInstance.text
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Text");
            }), textGroupBuilder.addCompositeSlice("font", "Font", (new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.UN).withFontFamily({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, textProps.fontFamily), {
                    selector
                }),
                value: textPropertiesByInstance.fontProperties.family
            }).withFontSizeProperties({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, textProps.fontSize), {
                    selector
                }),
                value: textPropertiesByInstance.fontProperties.size.pt
            }).withBold({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, textProps.bold), {
                    selector
                }),
                value: textPropertiesByInstance.fontProperties.weight === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_10__.en
            }).withItalic({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, textProps.italic), {
                    selector
                }),
                value: textPropertiesByInstance.fontProperties.style === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_10__.BF
            }).withUnderline({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, textProps.underline), {
                    selector
                }),
                value: textPropertiesByInstance.fontProperties.textDecoration === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_10__.f0
            }).build()).addSimpleSlice("color", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.BT({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, textProps.fontColor), {
                    selector,
                    instanceKind: 3
                }),
                value: {
                    value: textPropertiesByInstance.fontProperties.color
                }
            }).build()).addSimpleSlice("horizontalalignment", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.Gp({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, textProps.horizontalAlignment), {
                    selector
                }),
                value: textPropertiesByInstance.horizontalAlignment,
                mode: "horizontalAlignment"
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Visual_Alignment_Horizontal");
            }).addSimpleSlice("verticalalignment", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.Gp({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, textProps.verticalAlignment), {
                    selector
                }),
                value: textPropertiesByInstance.verticalAlignment,
                mode: "verticalAlignment"
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Visual_Alignment_Vertical");
            }).addCompositeSlice("padding", "Visual_Padding", (new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.uM).withLeft({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, textProps.leftMargin), {
                    selector
                }),
                value: textPropertiesByInstance.leftMargin,
                options: marginOptions
            }).withRight({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, textProps.rightMargin), {
                    selector
                }),
                value: textPropertiesByInstance.rightMargin,
                options: marginOptions
            }).withTop({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, textProps.topMargin), {
                    selector
                }),
                value: textPropertiesByInstance.topMargin,
                options: marginOptions
            }).withBottom({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, textProps.bottomMargin), {
                    selector
                }),
                value: textPropertiesByInstance.bottomMargin,
                options: marginOptions
            }).build()), textGroupBuilder.build();
        }
        function enumerateIconProperties(enumeration, properties, displayedInstanceIds, getInstanceDisplayName) {
            var _a, _b, _c;
            if (0 !== displayedInstanceIds.length) {
                var validNumberRangeForLineWeight = {
                    unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.tQ,
                    numberRange: {
                        min: 0,
                        max: MaxLineWeightValue
                    }
                }, validNumberRangeForMargin = {
                    unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_,
                    numberRange: {
                        min: 0,
                        max: MaxMarginValue
                    }
                }, validNumberRangeForIconSize = {
                    numberRange: {
                        min: 0,
                        max: MaxIconSizeValue
                    }
                };
                enumeration.pushInstance({
                    objectName: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.Vz.icon,
                    selector: null,
                    properties: {
                        show: properties.default.show
                    }
                });
                for (var _i = 0, displayedInstanceIds_7 = displayedInstanceIds; _i < displayedInstanceIds_7.length; _i++) {
                    var instance = displayedInstanceIds_7[_i], instanceId = (0, _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.Sg)(instance);
                    1 !== displayedInstanceIds.length && enumeration.pushContainer({
                        displayName: getInstanceDisplayName(instanceId)
                    });
                    var iconPropertiesInstance = properties[instanceId], enumerationProperties = ((_a = {})[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.shapeType] = iconPropertiesInstance.shapeType, 
                    _a);
                    iconPropertiesInstance.shapeType === _powerbi_legacy_PowerBIVisuals_Visuals_types_actionButtonType__WEBPACK_IMPORTED_MODULE_11__.W.custom ? enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.iconImage] = iconPropertiesInstance.iconImage : (enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.iconColor] = iconPropertiesInstance.lineColor, 
                    enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.iconTransparency] = iconPropertiesInstance.lineTransparency, 
                    enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.iconWeight] = iconPropertiesInstance.lineWeight), 
                    enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.iconPlacement] = iconPropertiesInstance.placement, 
                    iconPropertiesInstance.placement === _powerbi_legacy_PowerBIVisuals_Visuals_types_iconPlacementType__WEBPACK_IMPORTED_MODULE_12__.PG && (enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.iconVerticalAlignment] = iconPropertiesInstance.verticalAlignment, 
                    enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.iconHorizontalAlignment] = iconPropertiesInstance.horizontalAlignment), 
                    enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.iconLeftMargin] = iconPropertiesInstance.leftMargin, 
                    enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.iconRightMargin] = iconPropertiesInstance.rightMargin, 
                    enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.iconTopMargin] = iconPropertiesInstance.topMargin, 
                    enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.iconBottomMargin] = iconPropertiesInstance.bottomMargin, 
                    enumerationProperties[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.iconSize] = iconPropertiesInstance.iconSize, 
                    enumeration.pushInstance({
                        selector: (0, _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.$H)(instance),
                        properties: enumerationProperties,
                        objectName: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.Vz.icon,
                        validValues: (_b = {}, _b[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.iconWeight] = validNumberRangeForLineWeight, 
                        _b[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.iconLeftMargin] = validNumberRangeForMargin, 
                        _b[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.iconRightMargin] = validNumberRangeForMargin, 
                        _b[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.iconTopMargin] = validNumberRangeForMargin, 
                        _b[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.iconBottomMargin] = validNumberRangeForMargin, 
                        _b[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.iconSize] = validNumberRangeForIconSize, 
                        _b),
                        propertyInstanceKind: (_c = {}, _c[_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.WI.iconColor] = 3, 
                        _c)
                    }), 1 !== displayedInstanceIds.length && enumeration.popContainer();
                }
            }
        }
        function getIconGroupByInstance(iconProperties, hostServices, instance, cardUidBuilder, featureSwitches) {
            var localize = function(key) {
                return hostServices.getLocalizedString(key);
            }, iconProps = _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileContent_capabilities__WEBPACK_IMPORTED_MODULE_9__.nm.icon, instanceId = (0, 
            _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.Sg)(instance), iconPropertiesByInstance = iconProperties[instanceId], selector = (0, 
            _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.$H)(instance), iconGroupBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mQ(new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.SS(cardUidBuilder, "icon"), localize);
            iconGroupBuilder.withDisplayName("Icon").addTopLevelToggle("show", function() {
                return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.bd({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, iconProps.show), {
                        selector: null
                    }),
                    value: iconProperties.default.show
                }).build();
            });
            var validIconTypes = _powerbi_legacy_PowerBIVisuals_Visuals_types_actionButtonType__WEBPACK_IMPORTED_MODULE_11__.i.members().map(function(member) {
                return member.value;
            });
            return featureSwitches.applyAllSlicersButton || (_.remove(validIconTypes, function(type) {
                return type === _powerbi_legacy_PowerBIVisuals_Visuals_types_actionButtonType__WEBPACK_IMPORTED_MODULE_11__.W.applyAllSlicers;
            }), _.remove(validIconTypes, function(type) {
                return type === _powerbi_legacy_PowerBIVisuals_Visuals_types_actionButtonType__WEBPACK_IMPORTED_MODULE_11__.W.clearAllSlicers;
            })), iconGroupBuilder.addSimpleSlice("icon type", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.uY({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, iconProps.shapeType), {
                    selector
                }),
                value: iconPropertiesByInstance.shapeType,
                filterValues: validIconTypes
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Button_Icon_Type");
            }), iconPropertiesByInstance.shapeType === _powerbi_legacy_PowerBIVisuals_Visuals_types_actionButtonType__WEBPACK_IMPORTED_MODULE_11__.W.custom ? iconGroupBuilder.addSimpleSlice("image", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.bD({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, iconProps.image), {
                    selector
                }),
                value: iconPropertiesByInstance.iconImage
            }).build()) : iconGroupBuilder.addSimpleSlice("color", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.BT({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, iconProps.lineColor), {
                    selector,
                    instanceKind: 3
                }),
                value: {
                    value: iconPropertiesByInstance.lineColor
                }
            }).build()).addSimpleSlice("width", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mu({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, iconProps.lineWeight), {
                    selector
                }),
                value: iconPropertiesByInstance.lineWeight,
                options: {
                    minValue: {
                        type: 0,
                        value: 0
                    },
                    maxValue: {
                        type: 1,
                        value: MaxLineWeightValue
                    },
                    unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
                }
            }).build()).addSimpleSlice("transparency", _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN.getTransparencySliderBuilder({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, iconProps.lineTransparency), {
                    selector
                }),
                value: iconPropertiesByInstance.lineTransparency,
                localize
            }).build()), iconGroupBuilder.addSimpleSlice("iconplacement", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.uY({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, iconProps.placement), {
                    selector
                }),
                value: iconPropertiesByInstance.placement
            }).build()), iconPropertiesByInstance.placement === _powerbi_legacy_PowerBIVisuals_Visuals_types_iconPlacementType__WEBPACK_IMPORTED_MODULE_12__.PG && (iconGroupBuilder.addSimpleSlice("horizontalalignment", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.Gp({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, iconProps.horizontalAlignment), {
                    selector
                }),
                value: iconPropertiesByInstance.horizontalAlignment,
                mode: "horizontalAlignment"
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Visual_Alignment_Horizontal");
            }), iconGroupBuilder.addSimpleSlice("verticalalignment", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.Gp({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, iconProps.verticalAlignment), {
                    selector
                }),
                value: iconPropertiesByInstance.verticalAlignment,
                mode: "verticalAlignment"
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Visual_Alignment_Vertical");
            })), iconGroupBuilder.addCompositeSlice("padding", "Visual_Padding", (new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.uM).withLeft({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, iconProps.leftMargin), {
                    selector
                }),
                value: iconPropertiesByInstance.leftMargin,
                options: marginOptions
            }).withRight({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, iconProps.rightMargin), {
                    selector
                }),
                value: iconPropertiesByInstance.rightMargin,
                options: marginOptions
            }).withTop({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, iconProps.topMargin), {
                    selector
                }),
                value: iconPropertiesByInstance.topMargin,
                options: marginOptions
            }).withBottom({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, iconProps.bottomMargin), {
                    selector
                }),
                value: iconPropertiesByInstance.bottomMargin,
                options: marginOptions
            }).build()).addSimpleSlice("iconsize", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mu({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, iconProps.iconSize), {
                    selector
                }),
                value: iconPropertiesByInstance.iconSize,
                options: {
                    minValue: {
                        type: 0,
                        value: 0
                    },
                    maxValue: {
                        type: 1,
                        value: MaxIconSizeValue
                    }
                }
            }).build()), iconGroupBuilder.build();
        }
        function getAccentBarGroupByInstance(accentBarProperties, hostServices, instance, cardUidBuilder, colorSelector) {
            var _a, localize = function(key) {
                return hostServices.getLocalizedString(key);
            }, accentBarProps = _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.accentBar, accentBarPropertiesByInstance = null !== (_a = accentBarProperties[(0, 
            _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.Sg)(instance)]) && void 0 !== _a ? _a : accentBarProperties.default, selector = (0, 
            _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.$H)(instance);
            return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mQ(new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.SS(cardUidBuilder, "bar"), localize).withDisplayName("Visual_Outline_AccentBar").addTopLevelToggle("show", function() {
                return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.bd({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, accentBarProps.show), {
                        selector
                    }),
                    value: accentBarPropertiesByInstance.show
                }).build();
            }).addSimpleSlice("position", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.uY({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, accentBarProps.position), {
                    selector
                }),
                value: accentBarPropertiesByInstance.position
            }).build()).addSimpleSlice("color", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.BT({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, accentBarProps.color), {
                    selector: colorSelector || selector,
                    instanceKind: 3
                }),
                value: {
                    value: accentBarPropertiesByInstance.color
                }
            }).build()).addSimpleSlice("transparency", _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN.getTransparencySliderBuilder({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, accentBarProps.transparency), {
                    selector
                }),
                value: accentBarPropertiesByInstance.transparency,
                localize
            }).build()).addSimpleSlice("accentBarWidth", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mu({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, accentBarProps.width), {
                    selector
                }),
                value: accentBarPropertiesByInstance.width,
                options: spacingOptions
            }).build()).build();
        }
        function getPaddingGroupByInstance(paddingProperties, hostServices, instance, cardUidBuilder, disabledReason) {
            var _a, paddingProps = _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.padding, paddingPropertiesByInstance = null !== (_a = paddingProperties[(0, 
            _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.Sg)(instance)]) && void 0 !== _a ? _a : paddingProperties.default, selector = (0, 
            _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.$H)(instance), paddingGroupBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mQ(new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.SS(cardUidBuilder, "padding"), function(key) {
                return hostServices.getLocalizedString(key);
            });
            return paddingGroupBuilder.withDisplayName("Visual_Padding").addSimpleSlice("paddingSelection", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.uY({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, paddingProps.paddingSelection), {
                    selector
                }),
                value: paddingPropertiesByInstance.paddingSelection
            }).build()), paddingPropertiesByInstance.paddingSelection === _powerbi_legacy_PowerBIVisuals_Visuals_types_paddingOptions__WEBPACK_IMPORTED_MODULE_13__.PG && paddingGroupBuilder.addCompositeSlice("padding", "Visual_Padding", (new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.uM).withLeft({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, paddingProps.leftMargin), {
                    selector
                }),
                value: paddingPropertiesByInstance.leftMargin,
                options: marginOptions
            }).withRight({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, paddingProps.rightMargin), {
                    selector
                }),
                value: paddingPropertiesByInstance.rightMargin,
                options: marginOptions
            }).withTop({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, paddingProps.topMargin), {
                    selector
                }),
                value: paddingPropertiesByInstance.topMargin,
                options: marginOptions
            }).withBottom({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, paddingProps.bottomMargin), {
                    selector
                }),
                value: paddingPropertiesByInstance.bottomMargin,
                options: marginOptions
            }).build()), disabledReason && paddingGroupBuilder.withDisabled(!0, disabledReason), 
            paddingGroupBuilder.build();
        }
        function getLabelGroupByInstance(labelProperties, spacingProperties, valueProperties, hostServices, instance, cardUidBuilder, featureSwitches) {
            var localize = function(key) {
                return hostServices.getLocalizedString(key);
            }, labelProps = _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.label, instanceId = (0, 
            _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.Sg)(instance), labelPropertiesByInstance = labelProperties[instanceId], selector = (0, 
            _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.$H)(instance), spacingPropertiesByInstance = spacingProperties[instanceId], spacingProps = _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.spacing, valueGroupBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mQ(new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.SS(cardUidBuilder, "Role_DisplayName_Label"), localize);
            return valueGroupBuilder.withDisplayName("Role_DisplayName_Label").addTopLevelToggle("show", function() {
                return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.bd({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, labelProps.show), {
                        selector
                    }),
                    value: labelPropertiesByInstance.show
                }).build();
            }).addSimpleSlice("".concat(instanceId, "text"), new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.fq({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, labelProps.text), {
                    selector,
                    instanceKind: 3
                }),
                placeholder: localize("Visual_Auto"),
                value: labelPropertiesByInstance.text
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Text").withDisabled("default" === instanceId);
            }).addSimpleSlice("heading", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.uY({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, labelProps.heading), {
                    selector
                }),
                value: labelPropertiesByInstance.heading
            }).build()).addCompositeSlice("font", "Font", (new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.UN).withFontFamily({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, labelProps.fontFamily), {
                    selector
                }),
                value: labelPropertiesByInstance.fontProperties.family
            }).withFontSizeProperties({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, labelProps.fontSize), {
                    selector
                }),
                value: labelPropertiesByInstance.fontProperties.size.pt
            }).withBold({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, labelProps.bold), {
                    selector
                }),
                value: labelPropertiesByInstance.fontProperties.weight === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_10__.en
            }).withItalic({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, labelProps.italic), {
                    selector
                }),
                value: labelPropertiesByInstance.fontProperties.style === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_10__.BF
            }).withUnderline({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, labelProps.underline), {
                    selector
                }),
                value: labelPropertiesByInstance.fontProperties.textDecoration === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_10__.f0
            }).build()).addSimpleSlice("color", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.BT({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, labelProps.fontColor), {
                    selector,
                    instanceKind: 3
                }),
                value: {
                    value: labelPropertiesByInstance.fontProperties.color
                }
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Generic_Color");
            }).addSimpleSlice("transparency", _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN.getTransparencySliderBuilder({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, labelProps.transparency), {
                    selector
                }),
                value: labelPropertiesByInstance.transparency,
                localize
            }).build()), valueGroupBuilder.addSimpleSlice("position", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.uY({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, labelProps.position), {
                    selector
                }),
                value: labelPropertiesByInstance.position
            }).build()), (null == featureSwitches ? void 0 : featureSwitches.cardVisualRefUpdate) && valueGroupBuilder.addSimpleSlice("verticalSpacing", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mu({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, spacingProps.verticalSpacing), {
                    selector
                }),
                value: spacingPropertiesByInstance.verticalSpacing,
                options: spacingOptions
            }).build()), valueGroupBuilder.addSimpleSlice("textWrap", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.bd({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, labelProps.textWrap), {
                    selector
                }),
                value: labelPropertiesByInstance.textWrap
            }).build()), (null == featureSwitches ? void 0 : featureSwitches.cardVisualRefUpdate) && (valueGroupBuilder.addSimpleSlice("matchValueAlignment", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.bd({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, labelProps.matchValueAlignment), {
                    selector
                }),
                value: labelPropertiesByInstance.matchValueAlignment
            }).build()), labelPropertiesByInstance.matchValueAlignment || valueGroupBuilder.addSimpleSlice("horizontalalignment", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.Gp({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, labelProps.horizontalAlignment), {
                    selector
                }),
                value: labelPropertiesByInstance.horizontalAlignment,
                mode: "horizontalAlignment"
            }).build())), valueGroupBuilder.addSimpleSlice("alignBaselines", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.bd({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, labelProps.alignBaselines), {
                    selector
                }),
                value: labelProperties.default.alignBaselines
            }).build(), function(builder) {
                return builder.withDisabled(instanceId !== selectAllSeries);
            }), valueGroupBuilder.build();
        }
        function getValueGroupByInstance(valueProperties, hostServices, instance, cardUidBuilder, featureSwitches) {
            var localize = function(key) {
                return hostServices.getLocalizedString(key);
            }, valueProps = _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.value, instanceId = (0, 
            _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.Sg)(instance), valuePropertiesByInstance = valueProperties[instanceId], selector = (0, 
            _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.$H)(instance), hasCustomDisplayUnits = -1 === valuePropertiesByInstance.labelDisplayUnits, valueGroupBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mQ(new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.SS(cardUidBuilder, "value"), localize);
            if (valueGroupBuilder.withDisplayName("Role_DisplayName_Values").addTopLevelToggle("show", function() {
                return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.bd({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, valueProps.show), {
                        selector: null
                    }),
                    value: valueProperties.default.show
                }).build();
            }), valueGroupBuilder.addCompositeSlice("font", "Font", (new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.UN).withFontFamily({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, valueProps.fontFamily), {
                    selector
                }),
                value: valuePropertiesByInstance.fontProperties.family
            }).withFontSizeProperties({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, valueProps.fontSize), {
                    selector
                }),
                value: valuePropertiesByInstance.fontProperties.size.pt
            }).withBold({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, valueProps.bold), {
                    selector
                }),
                value: valuePropertiesByInstance.fontProperties.weight === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_10__.en
            }).withItalic({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, valueProps.italic), {
                    selector
                }),
                value: valuePropertiesByInstance.fontProperties.style === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_10__.BF
            }).withUnderline({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, valueProps.underline), {
                    selector
                }),
                value: valuePropertiesByInstance.fontProperties.textDecoration === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_10__.f0
            }).build()), valueGroupBuilder.addSimpleSlice("color", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.BT({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, valueProps.fontColor), {
                    selector,
                    instanceKind: 3
                }),
                value: {
                    value: valuePropertiesByInstance.fontProperties.color
                }
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Generic_Color");
            }).addSimpleSlice("transparency", _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN.getTransparencySliderBuilder({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, valueProps.transparency), {
                    selector
                }),
                value: valuePropertiesByInstance.transparency,
                localize
            }).build()), valueGroupBuilder.addSimpleSlice("horizontalalignment", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.Gp({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, valueProps.horizontalAlignment), {
                    selector
                }),
                value: valuePropertiesByInstance.horizontalAlignment,
                mode: "horizontalAlignment"
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Visual_Alignment_Horizontal");
            }), valueGroupBuilder.addSimpleSlice("textWrap", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.bd({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, valueProps.textWrap), {
                    selector
                }),
                value: valuePropertiesByInstance.textWrap
            }).build()), null == featureSwitches ? void 0 : featureSwitches.cardVisualRefUpdate) {
                if (isNumericCompatible(valuePropertiesByInstance.valueType)) valueGroupBuilder.addSimpleSlice("displayUnits", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.uY({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, valueProps.labelDisplayUnits), {
                        selector
                    }),
                    value: valuePropertiesByInstance.labelDisplayUnits
                }).build()), hasCustomDisplayUnits && valueGroupBuilder.addSimpleSlice("".concat(instanceId, "customFormatString"), new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.fq({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, valueProps.customFormatString), {
                        selector,
                        instanceKind: 3
                    }),
                    value: valuePropertiesByInstance.customFormatString,
                    placeholder: "Auto"
                }).build()), valueGroupBuilder.addSimpleSlice("precision", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mu({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, valueProps.labelPrecision), {
                        selector,
                        instanceKind: 3
                    }),
                    value: valuePropertiesByInstance.labelPrecision,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: _powerbi_legacy_PowerBIVisuals_Visuals_common_consts_dataLabelViewModel1Consts__WEBPACK_IMPORTED_MODULE_14__.vo
                        }
                    }
                }).build()); else if (isDateTimeCompatible(valuePropertiesByInstance.valueType)) {
                    var dateTimeItems = hostServices.dateTimeFormatService().getCommonFormats().map(function(dateTimeFormat) {
                        return {
                            displayName: dateTimeFormat.displayLabel,
                            value: dateTimeFormat.formatString
                        };
                    });
                    valueGroupBuilder.addSimpleSlice("".concat(instanceId, "calloutCustomFormatStringDateFormat"), new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.uY({
                        descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, valueProps.customFormatString), {
                            selector
                        }),
                        items: dateTimeItems,
                        value: _.find(dateTimeItems, function(dateTimeItem) {
                            return dateTimeItem.value === valuePropertiesByInstance.customFormatString;
                        })
                    }).build());
                }
            } else valueGroupBuilder.addSimpleSlice("".concat(instanceId, "displayUnits"), new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.uY({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, valueProps.labelDisplayUnits), {
                    selector
                }),
                value: valuePropertiesByInstance.labelDisplayUnits
            }).build(), function(builder) {
                return builder.withDisabled(!!featureSwitches.cardVisualRefUpdate && (0, _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.s9)(instance));
            }), hasCustomDisplayUnits && valueGroupBuilder.addSimpleSlice("".concat(instanceId, "customFormatString"), new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.fq({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, valueProps.customFormatString), {
                    selector,
                    instanceKind: 3
                }),
                value: valuePropertiesByInstance.customFormatString,
                placeholder: "Auto"
            }).build(), function(builder) {
                return builder.withDisabled(!!featureSwitches.cardVisualRefUpdate && (0, _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.s9)(instance));
            }), valueGroupBuilder.addSimpleSlice("".concat(instanceId, "precision"), new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mu({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, valueProps.labelPrecision), {
                    selector,
                    instanceKind: 3
                }),
                value: valuePropertiesByInstance.labelPrecision,
                options: {
                    minValue: {
                        type: 0,
                        value: 0
                    },
                    maxValue: {
                        type: 1,
                        value: _powerbi_legacy_PowerBIVisuals_Visuals_common_consts_dataLabelViewModel1Consts__WEBPACK_IMPORTED_MODULE_14__.vo
                    }
                }
            }).build(), function(builder) {
                return builder.withDisabled(!!featureSwitches.cardVisualRefUpdate && (0, _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.s9)(instance));
            });
            return valueGroupBuilder.addSimpleSlice("showBlankAs", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.fq({
                descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, valueProps.showBlankAs), {
                    selector,
                    instanceKind: 3
                }),
                value: valuePropertiesByInstance.showBlankAs,
                placeholder: ""
            }).build()), valueGroupBuilder.build();
        }
        function getLayoutCard(hostService, properties, tileProps) {
            var cardBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.CQ(new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.lg(_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.eM.layout), "Layout", [ tileProps.layout.alignment, tileProps.layout.orientation, tileProps.layout.rowCount, tileProps.layout.columnCount, tileProps.layout.cellPadding ], function(key) {
                return hostService.getLocalizedString(key);
            });
            return cardBuilder.addGroup(_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.eM.layout, function(groupBuilder) {
                addLayoutProperties(properties, tileProps, groupBuilder);
            }).build(), cardBuilder.build();
        }
        function addLayoutProperties(properties, tileProps, groupBuilder) {
            var validValuesForCellPadding = {
                unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_,
                numberRange: {
                    min: -50,
                    max: 100
                }
            };
            groupBuilder.addSimpleSlice("verticalAlignment", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.Gp({
                descriptor: tileProps.layout.alignment,
                value: properties.verticalAlignment,
                mode: "verticalAlignment"
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Visual_Alignment_Vertical");
            }), properties.hideOrientation || groupBuilder.addSimpleSlice("orientation", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.uY({
                descriptor: tileProps.layout.orientation,
                value: properties.orientation
            }).build()), properties.orientation === _powerbi_legacy_PowerBIVisuals_Visuals_types_navigatorOrientation__WEBPACK_IMPORTED_MODULE_15__.Bz.Grid && groupBuilder.addSimpleSlice("rowCount", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mu({
                descriptor: tileProps.layout.rowCount,
                value: properties.rowCount,
                options: {
                    minValue: {
                        type: 0,
                        value: 1
                    },
                    maxValue: {
                        type: 1,
                        value: MaxTilesCount
                    },
                    required: {
                        type: 2
                    }
                }
            }).build()).addSimpleSlice("columnCount", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mu({
                descriptor: tileProps.layout.columnCount,
                value: properties.columnCount,
                options: {
                    minValue: {
                        type: 0,
                        value: 1
                    },
                    maxValue: {
                        type: 1,
                        value: MaxTilesCount
                    },
                    required: {
                        type: 2
                    }
                }
            }).build()), groupBuilder.addSimpleSlice("cellPadding", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mu({
                descriptor: tileProps.layout.cellPadding,
                value: properties.cellPadding,
                options: {
                    minValue: {
                        type: 0,
                        value: validValuesForCellPadding.numberRange.min
                    },
                    maxValue: {
                        type: 1,
                        value: validValuesForCellPadding.numberRange.max
                    },
                    unitSymbol: validValuesForCellPadding.unitSymbol
                }
            }).build());
        }
        function getLayoutCardWithOverflow(hostService, properties, tileProps, overFlowSettings) {
            var localize = function(key) {
                return hostService.getLocalizedString(key);
            }, cardUidBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.lg(_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.eM.layout), cardBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.CQ(cardUidBuilder, "Layout", [ tileProps.layout.alignment, tileProps.layout.orientation, tileProps.layout.rowCount, tileProps.layout.columnCount, tileProps.layout.cellPadding, tileProps.overFlow.overFlowStyle, tileProps.overFlow.overFlowDirection ], localize), layoutGroup = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mQ(new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.SS(cardUidBuilder, "layout"), localize);
            layoutGroup.withDisplayName("Layout"), addLayoutProperties(properties, tileProps, layoutGroup);
            var overflowGroup = getOverFlowCard(hostService, overFlowSettings, cardUidBuilder);
            return cardBuilder.withGroups([ layoutGroup.build(), overflowGroup.build() ]), cardBuilder.build();
        }
        function getNewLayoutCardWithOverflow(hostService, properties, tileProps, overFlowSettings) {
            var localize = function(key) {
                return hostService.getLocalizedString(key);
            }, cardUidBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.lg(_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.eM.layout), cardBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.CQ(cardUidBuilder, "Layout", [ tileProps.layout.orientation, tileProps.layout.rowCount, tileProps.layout.columnCount, tileProps.layout.maxTiles, tileProps.layout.cellPadding, tileProps.layout.customizePadding, tileProps.layout.rowPadding, tileProps.layout.columnPadding, tileProps.overFlow.overFlowStyle, tileProps.overFlow.overFlowDirection ], localize), layoutGroup = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mQ(new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.SS(cardUidBuilder, "layout"), localize).withDisplayName("Layout").addSimpleSlice("arrangement", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.uY({
                descriptor: tileProps.layout.orientation,
                value: properties.orientation
            }).build());
            if (properties.orientation === _powerbi_legacy_PowerBIVisuals_Visuals_types_navigatorOrientation__WEBPACK_IMPORTED_MODULE_15__.Bz.Grid) if (layoutGroup.addSimpleSlice("rowCount", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mu({
                descriptor: tileProps.layout.rowCount,
                value: properties.rowCount,
                options: {
                    minValue: {
                        type: 0,
                        value: 1
                    },
                    maxValue: {
                        type: 1,
                        value: MaxTilesCount
                    },
                    required: {
                        type: 2
                    }
                }
            }).build(), function(builder) {
                return builder.withCustomDisplayName("Visual_Arrangement_RowsShownMax");
            }).addSimpleSlice("columnCount", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mu({
                descriptor: tileProps.layout.columnCount,
                value: properties.columnCount,
                options: {
                    minValue: {
                        type: 0,
                        value: 1
                    },
                    maxValue: {
                        type: 1,
                        value: MaxTilesCount
                    },
                    required: {
                        type: 2
                    }
                }
            }).build(), function(builder) {
                return builder.withCustomDisplayName("Visual_Arrangement_ColumnsShown");
            }).addSimpleSlice("customizeSpacing", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.bd({
                descriptor: tileProps.layout.customizePadding,
                value: !!properties.customizePadding
            }).build()), properties.customizePadding) {
                var spacingOptions_1 = {
                    unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_,
                    minValue: {
                        type: 0,
                        value: -50
                    },
                    maxValue: {
                        type: 1,
                        value: 100
                    }
                };
                layoutGroup.addSimpleSlice("rowSpacing", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mu({
                    descriptor: tileProps.layout.rowPadding,
                    value: properties.rowPadding,
                    options: spacingOptions_1
                }).build()).addSimpleSlice("columnSpacing", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mu({
                    descriptor: tileProps.layout.columnPadding,
                    value: properties.columnPadding,
                    options: spacingOptions_1
                }).build());
            } else {
                var spaceDisplayName_1 = properties.isButtons ? "Visual_Spacing_Between_Buttons" : "Visual_Spacing_Between_Cards";
                layoutGroup.addSimpleSlice("cellPadding", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mu({
                    descriptor: tileProps.layout.cellPadding,
                    value: properties.cellPadding,
                    options: spacingOptions
                }).build(), function(builder) {
                    return builder.withCustomDisplayName(spaceDisplayName_1);
                });
            } else {
                var displayName_1 = properties.isButtons ? "Visual_Arrangement_ButtonsShown" : "Visual_Arrangement_CardsShown";
                layoutGroup.addSimpleSlice("cardCount", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mu({
                    descriptor: tileProps.layout.maxTiles,
                    value: properties.maxTiles,
                    placeholderText: localize("Visual_Auto"),
                    options: {
                        minValue: {
                            type: 0,
                            value: 1
                        },
                        maxValue: {
                            type: 1,
                            value: MaxTilesCount
                        }
                    }
                }).build(), function(builder) {
                    return builder.withCustomDisplayName(displayName_1);
                });
                var spaceDisplayName_2 = properties.isButtons ? "Visual_Spacing_Between_Buttons" : "Visual_Spacing_Between_Cards";
                layoutGroup.addSimpleSlice("cellPadding", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mu({
                    descriptor: tileProps.layout.cellPadding,
                    value: properties.cellPadding,
                    options: spacingOptions
                }).build(), function(builder) {
                    return builder.withCustomDisplayName(spaceDisplayName_2);
                });
            }
            var overflowGroup = getOverFlowCard(hostService, overFlowSettings, cardUidBuilder);
            return cardBuilder.withGroups([ layoutGroup.build(), overflowGroup.build() ]), cardBuilder.build();
        }
        function getOverFlowCard(hostService, data, cardUidBuilder, options) {
            var overFlowProps = _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.overFlow, overflowBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mQ(new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.SS(cardUidBuilder, "overFlow"), function(key) {
                return hostService.getLocalizedString(key);
            });
            return overflowBuilder.withDisplayName("Visual_OverFlow"), overflowBuilder.addSimpleSlice(_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.OverFlowStyle, new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.uY({
                descriptor: overFlowProps.overFlowStyle,
                value: data.overFlowStyle
            }).build()), (null == options ? void 0 : options.skipOrientation) || overflowBuilder.addSimpleSlice(_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.Mn.OverFlowDirection, new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.uY({
                descriptor: overFlowProps.overFlowDirection,
                value: data.overFlowDirection
            }).build()), overflowBuilder;
        }
        function getAlignmentGroup(properties, hostServices, instance, cardUidBuilder, disabledReason) {
            var instanceId = (0, _tileLibraryConverter__WEBPACK_IMPORTED_MODULE_2__.Sg)(instance), layoutProps = _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout, alignmentGroup = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mQ(new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.SS(cardUidBuilder, "alignment".concat(instance)), function(key) {
                return hostServices.getLocalizedString(key);
            });
            return alignmentGroup.withDisplayName("Visual_TextAlignment").addSimpleSlice("".concat(instanceId, "vertAlign"), new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.Gp({
                descriptor: layoutProps.alignment,
                value: properties.verticalAlignment,
                mode: "verticalAlignment"
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Visual_Alignment_Vertical");
            }), disabledReason && alignmentGroup.withDisabled(!0, disabledReason), alignmentGroup.build();
        }
        function getCalloutLayoutByInstance(layoutProperties, hostService, cardUidBuilder, calloutSizeDisabledReason, isDetailedInstance) {
            var localize = function(key) {
                return hostService.getLocalizedString(key);
            }, layoutProps = _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout, calloutLayoutGroupBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mQ(new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.SS(cardUidBuilder, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.eM.calloutLayout), localize);
            return isDetailedInstance ? calloutLayoutGroupBuilder.withDisplayName("Layout").withDisabled(!0, "Visual_DisabledReason_AllSeriesOnly_Plural") : calloutLayoutGroupBuilder.withDisplayName("Layout").addSimpleSlice("verticalalignment", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.Gp({
                descriptor: layoutProps.alignment,
                value: layoutProperties.verticalAlignment,
                mode: "verticalAlignment"
            }).build(), function(sliceBuilder) {
                return sliceBuilder.withCustomDisplayName("Visual_Alignment_Vertical");
            }).addSimpleSlice("Visual_CallOutSize", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                descriptor: layoutProps.calloutSize,
                value: layoutProperties.calloutSize,
                localize,
                options: {
                    unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.t2
                }
            }).build(), function(builder) {
                return builder.withDisabled(void 0 !== calloutSizeDisabledReason, calloutSizeDisabledReason);
            }), calloutLayoutGroupBuilder.build();
        }
        function getNewLayoutCard(hostService, properties, overFlowSettings, options) {
            var localize = function(key) {
                return hostService.getLocalizedString(key);
            }, cardUidBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.lg(_powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.eM.layout), cardBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.CQ(cardUidBuilder, "Layout", [ _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.orientation, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.rowCount, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.columnCount, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.maxTiles, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.cellPadding, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.rowPadding, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.columnPadding, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.customizePadding, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.backgroundShow, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.backgroundFillColor, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.backgroundTransparency, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.backgroundImage, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.backgroundImageTransparency, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.rectangleRoundedCurveCustomStyle, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.rectangleRoundedCurve, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.rectangleRoundedCurveLeftTop, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.rectangleRoundedCurveRightTop, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.rectangleRoundedCurveLeftBottom, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.rectangleRoundedCurveRightBottom, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.customizeLines, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.lineStyle, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.lineTransparency, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.lineWidth, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.lineColor, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.gridlineStyle, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.gridlineTransparency, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.gridlineWidth, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.gridlineColor, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.borderStyle, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.borderTransparency, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.borderWidth, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.borderColor, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.overFlow.overFlowStyle, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.overFlow.overFlowDirection, _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.style ], localize), layoutGroup = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mQ(new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.SS(cardUidBuilder, "layout"), localize).withDisplayName("Layout");
            (null == options ? void 0 : options.skipArrangement) || layoutGroup.addSimpleSlice("arrangement", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.uY({
                descriptor: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.orientation,
                value: properties.orientation
            }).build()), layoutGroup.addSimpleSlice("style", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.uY({
                descriptor: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.style,
                value: properties.style
            }).build());
            var layoutFormattingGroups = [ layoutGroup ];
            if (properties.orientation === _powerbi_legacy_PowerBIVisuals_Visuals_types_navigatorOrientation__WEBPACK_IMPORTED_MODULE_15__.Bz.Grid) {
                if (layoutGroup.addSimpleSlice("rowCount", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mu({
                    descriptor: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.rowCount,
                    value: properties.rowCount,
                    options: {
                        minValue: {
                            type: 0,
                            value: 1
                        },
                        maxValue: {
                            type: 1,
                            value: MaxTilesCount
                        },
                        required: {
                            type: 2
                        }
                    }
                }).build(), function(builder) {
                    return builder.withCustomDisplayName("Visual_Arrangement_RowsShownMax");
                }), (null == options ? void 0 : options.skipColumns) || layoutGroup.addSimpleSlice("columnCount", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mu({
                    descriptor: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.columnCount,
                    value: properties.columnCount,
                    options: {
                        minValue: {
                            type: 0,
                            value: 1
                        },
                        maxValue: {
                            type: 1,
                            value: MaxTilesCount
                        },
                        required: {
                            type: 2
                        }
                    }
                }).build(), function(builder) {
                    return builder.withCustomDisplayName("Visual_Arrangement_ColumnsShown");
                }), properties.style === _Visuals_types_layoutStyleType__WEBPACK_IMPORTED_MODULE_16__.i.Cards) if (layoutGroup.addSimpleSlice("customizeSpacing", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.bd({
                    descriptor: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.customizePadding,
                    value: !!properties.customizePadding
                }).build()), properties.customizePadding) {
                    var spacingOptions_2 = {
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_,
                        minValue: {
                            type: 0,
                            value: -50
                        },
                        maxValue: {
                            type: 1,
                            value: 100
                        }
                    };
                    layoutGroup.addSimpleSlice("rowSpacing", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mu({
                        descriptor: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.rowPadding,
                        value: properties.rowPadding,
                        options: spacingOptions_2
                    }).build()), (null == options ? void 0 : options.skipColumns) || layoutGroup.addSimpleSlice("columnSpacing", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mu({
                        descriptor: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.columnPadding,
                        options: spacingOptions_2,
                        value: properties.columnPadding
                    }).build());
                } else {
                    var spaceDisplayName_3 = properties.isButtons ? "Visual_Spacing_Between_Buttons" : "Visual_Spacing_Between_Cards";
                    layoutGroup.addSimpleSlice("cellPadding", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mu({
                        descriptor: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.cellPadding,
                        value: properties.cellPadding,
                        options: spacingOptions
                    }).build(), function(builder) {
                        return builder.withCustomDisplayName(spaceDisplayName_3);
                    });
                }
            } else {
                var displayName_2 = properties.isButtons ? "Visual_Arrangement_ButtonsShown" : "Visual_Arrangement_CardsShown";
                layoutGroup.addSimpleSlice("cardCount", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mu({
                    descriptor: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.maxTiles,
                    value: properties.maxTiles,
                    placeholderText: localize("Visual_Auto"),
                    options: {
                        minValue: {
                            type: 0,
                            value: 1
                        },
                        maxValue: {
                            type: 1,
                            value: MaxTilesCount
                        }
                    }
                }).build(), function(builder) {
                    return builder.withCustomDisplayName(displayName_2);
                });
                var spaceDisplayName_4 = properties.isButtons ? "Visual_Spacing_Between_Buttons" : "Visual_Spacing_Between_Cards";
                layoutGroup.addSimpleSlice("cellPadding", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mu({
                    descriptor: _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout.cellPadding,
                    value: properties.cellPadding,
                    options: spacingOptions
                }).build(), function(builder) {
                    return builder.withCustomDisplayName(spaceDisplayName_4);
                });
            }
            return properties.style === _Visuals_types_layoutStyleType__WEBPACK_IMPORTED_MODULE_16__.i.Table && layoutFormattingGroups.push(function(properties, cardUidBuilder, localize) {
                var layoutProps = _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout, shapeGroupBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mQ(new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.SS(cardUidBuilder, "shape"), localize);
                return shapeGroupBuilder.withDisplayName("Visual_Shape").addSimpleSlice("rectangleRoundedCurveCustomStyle", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.bd({
                    descriptor: layoutProps.rectangleRoundedCurveCustomStyle,
                    value: properties.rectangleRoundedCurveCustomStyle
                }).build()), properties.rectangleRoundedCurveCustomStyle ? shapeGroupBuilder.addSimpleSlice("rectangleRoundedCurveLeftTop", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: layoutProps.rectangleRoundedCurveLeftTop,
                    value: properties.rectangleRoundedCurveLeftTop,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
                    }
                }).build()).addSimpleSlice("rectangleRoundedCurveRightTop", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: layoutProps.rectangleRoundedCurveRightTop,
                    value: properties.rectangleRoundedCurveRightTop,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
                    }
                }).build()).addSimpleSlice("rectangleRoundedCurveLeftBottom", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: layoutProps.rectangleRoundedCurveLeftBottom,
                    value: properties.rectangleRoundedCurveLeftBottom,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
                    }
                }).build()).addSimpleSlice("rectangleRoundedCurveRightBottom", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: layoutProps.rectangleRoundedCurveRightBottom,
                    value: properties.rectangleRoundedCurveRightBottom,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
                    }
                }).build()) : shapeGroupBuilder.addSimpleSlice("rectangleRoundedCurve", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN({
                    descriptor: layoutProps.rectangleRoundedCurve,
                    value: properties.rectangleRoundedCurve,
                    localize,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxRoundCornerSize
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
                    }
                }).build()), shapeGroupBuilder;
            }(properties, cardUidBuilder, localize), function(properties, cardUidBuilder, localize) {
                var layoutProps = _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout, backgroundGroupBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mQ(new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.SS(cardUidBuilder, "background"), localize);
                return backgroundGroupBuilder.withDisplayName("Visual_Background").addTopLevelToggle("show", function() {
                    return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.bd({
                        descriptor: layoutProps.backgroundShow,
                        value: properties.backgroundShow
                    }).build();
                }).addSimpleSlice("backgroundColor", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.BT({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, layoutProps.backgroundFillColor), {
                        instanceKind: 3
                    }),
                    value: {
                        value: properties.backgroundFillColor
                    }
                }).build()).addSimpleSlice("transparency", _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN.getTransparencySliderBuilder({
                    descriptor: layoutProps.backgroundTransparency,
                    value: properties.backgroundTransparency,
                    localize
                }).build()).addSimpleSlice("image", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.bD({
                    descriptor: layoutProps.backgroundImage,
                    value: properties.backgroundImage
                }).build(), function(builder) {
                    return builder.withCustomDisplayName("Dashboard_Theme_Background_Image");
                }).addSimpleSlice("imageTransparency", _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN.getTransparencySliderBuilder({
                    descriptor: layoutProps.backgroundImageTransparency,
                    value: properties.backgroundImageTransparency,
                    localize
                }).build()), backgroundGroupBuilder;
            }(properties, cardUidBuilder, localize), function(properties, cardUidBuilder, localize) {
                var layoutProps = _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_tileLibrary_capabilities__WEBPACK_IMPORTED_MODULE_1__.OV.layout, borderGridlinesGroupBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mQ(new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.SS(cardUidBuilder, "bordersGridlines"), localize);
                return borderGridlinesGroupBuilder.withDisplayName("Small_Multiples_Layout_Grid_Line_Type_All").addSimpleSlice("customizeLines", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.bd({
                    descriptor: layoutProps.customizeLines,
                    value: properties.customizeLines
                }).build()), properties.customizeLines ? borderGridlinesGroupBuilder.addSimpleSlice("borderStyle", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.uY({
                    descriptor: layoutProps.borderStyle,
                    value: properties.border.strokePattern
                }).build()).addSimpleSlice("borderColor", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.BT({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, layoutProps.borderColor), {
                        instanceKind: 3
                    }),
                    value: {
                        value: properties.border.strokeColor
                    }
                }).build()).addSimpleSlice("borderTransparency", _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN.getTransparencySliderBuilder({
                    descriptor: layoutProps.borderTransparency,
                    value: properties.border.strokeTransparency,
                    localize
                }).build()).addSimpleSlice("borderWidth", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mu({
                    descriptor: layoutProps.borderWidth,
                    value: properties.border.strokeWidth,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxLineStrokeWidth
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
                    }
                }).build()).addSimpleSlice("gridlineStyle", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.uY({
                    descriptor: layoutProps.gridlineStyle,
                    value: properties.gridline.strokePattern
                }).build()).addSimpleSlice("gridlineColor", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.BT({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, layoutProps.gridlineColor), {
                        instanceKind: 3
                    }),
                    value: {
                        value: properties.gridline.strokeColor
                    }
                }).build()).addSimpleSlice("gridlineTransparency", _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN.getTransparencySliderBuilder({
                    descriptor: layoutProps.gridlineTransparency,
                    value: properties.gridline.strokeTransparency,
                    localize
                }).build()).addSimpleSlice("gridlineWidth", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mu({
                    descriptor: layoutProps.gridlineWidth,
                    value: properties.gridline.strokeWidth,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxLineStrokeWidth
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
                    }
                }).build()) : borderGridlinesGroupBuilder.addSimpleSlice("lineStyle", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.uY({
                    descriptor: layoutProps.lineStyle,
                    value: properties.line.strokePattern
                }).build()).addSimpleSlice("lineColor", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.BT({
                    descriptor: (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, layoutProps.lineColor), {
                        instanceKind: 3
                    }),
                    value: {
                        value: properties.line.strokeColor
                    }
                }).build()).addSimpleSlice("lineTransparency", _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.JN.getTransparencySliderBuilder({
                    descriptor: layoutProps.lineTransparency,
                    value: properties.line.strokeTransparency,
                    localize
                }).build()).addSimpleSlice("lineWidth", new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_3__.mu({
                    descriptor: layoutProps.lineWidth,
                    value: properties.line.strokeWidth,
                    options: {
                        minValue: {
                            type: 0,
                            value: 0
                        },
                        maxValue: {
                            type: 1,
                            value: MaxLineStrokeWidth
                        },
                        unitSymbol: _powerbi_legacy_PowerBIVisuals_Visuals_common_visualLocKeys__WEBPACK_IMPORTED_MODULE_0__.e_
                    }
                }).build(), function(sliceBuilder) {
                    return sliceBuilder.withCustomDisplayName("Visual_General_Properties_Width");
                }), borderGridlinesGroupBuilder;
            }(properties, cardUidBuilder, localize)), layoutFormattingGroups.push(getOverFlowCard(hostService, overFlowSettings, cardUidBuilder, options)), 
            cardBuilder.withGroups(layoutFormattingGroups.map(function(group) {
                return group.build();
            })), cardBuilder.build();
        }
        function isNumericCompatible(descriptor) {
            return !!((null == descriptor ? void 0 : descriptor.variant) || (null == descriptor ? void 0 : descriptor.bool) || (null == descriptor ? void 0 : descriptor.numeric));
        }
        function isDateTimeCompatible(descriptor) {
            return !!(null == descriptor ? void 0 : descriptor.dateTime);
        }
    },
    49366: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            n: function() {
                return Tile;
            }
        });
        var tslib_es6 = __webpack_require__(81337), tileLibraryConverter = __webpack_require__(78558), legendPosition = __webpack_require__(70700), shapeType = __webpack_require__(67741), speechBubbleTailPosition = __webpack_require__(18989), debug = __webpack_require__(62458), sign = function(x) {
            return x > 0 ? 1 : x < 0 ? -1 : 0;
        }, distBetween = function(p1, p2) {
            return Math.sqrt(Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2));
        }, angleBetween = function(p1, p2, p3) {
            var ab_x = p2.x - p1.x, ab_y = p2.y - p1.y, cb_x = p2.x - p3.x, cb_y = p2.y - p3.y;
            return Math.atan2(ab_x * cb_y - ab_y * cb_x, ab_x * cb_x + ab_y * cb_y);
        }, Path = function() {
            function Path(pathCommands) {
                this._pathCommands = pathCommands;
            }
            return Object.defineProperty(Path.prototype, "pathCommands", {
                get: function() {
                    return this._pathCommands;
                },
                enumerable: !1,
                configurable: !0
            }), Path.prototype.getCommandEndPosition = function(command) {
                switch (command[0]) {
                  case "M":
                  case "L":
                    return {
                        x: command[1],
                        y: command[2]
                    };

                  case "C":
                    return {
                        x: command[5],
                        y: command[6]
                    };

                  case "A":
                    return {
                        x: command[6],
                        y: command[7]
                    };

                  case "Z":
                    return null;
                }
                debug.fF.assertNever(command[0]);
            }, Path.prototype.toString = function() {
                return this.pathCommands.map(function(e) {
                    return e.join(" ");
                }).join(" ");
            }, Path.prototype.getBoundingBox = function() {
                for (var point, pathCommands = this.pathCommands, startPosition = this.getCommandEndPosition(pathCommands[0]), boundingBox = {
                    minX: startPosition.x,
                    maxX: startPosition.x,
                    minY: startPosition.y,
                    maxY: startPosition.y
                }, _i = 0, pathCommands_1 = pathCommands; _i < pathCommands_1.length; _i++) (point = this.getCommandEndPosition(pathCommands_1[_i])) && (boundingBox.minX = Math.min(boundingBox.minX, point.x), 
                boundingBox.maxX = Math.max(boundingBox.maxX, point.x), boundingBox.minY = Math.min(boundingBox.minY, point.y), 
                boundingBox.maxY = Math.max(boundingBox.maxY, point.y));
                return boundingBox;
            }, Path.prototype.applyOperation = function(applyToPoint, applyToRelative) {
                for (var _i = 0, _a = this.pathCommands; _i < _a.length; _i++) {
                    var command = _a[_i];
                    switch (command[0]) {
                      case "Z":
                        break;

                      case "C":
                        var newControlPoint1 = applyToPoint({
                            x: command[1],
                            y: command[2]
                        });
                        command[1] = newControlPoint1.x, command[2] = newControlPoint1.y;
                        var newControlPoint2 = applyToPoint({
                            x: command[3],
                            y: command[4]
                        });
                        command[3] = newControlPoint2.x, command[4] = newControlPoint2.y;
                        var newPoint = applyToPoint({
                            x: command[5],
                            y: command[6]
                        });
                        command[5] = newPoint.x, command[6] = newPoint.y;
                        break;

                      case "A":
                        if (applyToRelative) {
                            var newRadius = applyToPoint({
                                x: command[1],
                                y: command[2]
                            });
                            command[1] = newRadius.x, command[2] = newRadius.y;
                        }
                        newPoint = applyToPoint({
                            x: command[6],
                            y: command[7]
                        }), command[6] = newPoint.x, command[7] = newPoint.y;
                        break;

                      case "M":
                      case "L":
                        newPoint = applyToPoint({
                            x: command[1],
                            y: command[2]
                        }), command[1] = newPoint.x, command[2] = newPoint.y;
                    }
                }
                return this;
            }, Path.prototype.rotate = function(rads, xCenter, yCenter) {
                void 0 === xCenter && (xCenter = 0), void 0 === yCenter && (yCenter = 0);
                var cosTheta = Math.cos(rads), sinTheta = Math.sin(rads);
                return this.applyOperation(function(point) {
                    return {
                        x: cosTheta * (point.x - xCenter) - sinTheta * (point.y - yCenter) + xCenter,
                        y: sinTheta * (point.x - xCenter) + cosTheta * (point.y - yCenter) + yCenter
                    };
                });
            }, Path.prototype.translate = function(xDist, yDist) {
                return void 0 === yDist && (yDist = 0), this.applyOperation(function(point) {
                    return {
                        x: point.x + xDist,
                        y: point.y + yDist
                    };
                });
            }, Path.prototype.scale = function(xScale, yScale) {
                return this.applyOperation(function(point) {
                    return {
                        x: point.x * xScale,
                        y: point.y * (null != yScale ? yScale : xScale)
                    };
                }, !0);
            }, Path.prototype.transformToFit = function(rads, scaleFactor, boundingBox, scaledWidth, scaledHeight, containerWidth, containerHeight) {
                var centerX = scaledWidth * scaleFactor / 2, centerY = scaledHeight * scaleFactor / 2;
                return this.scale(scaleFactor).rotate(rads, centerX, centerY).translate(containerWidth / 2 - centerX, containerHeight / 2 - centerY).translate(containerWidth / 2 - (boundingBox.minX + boundingBox.maxX) / 2, containerHeight / 2 - (boundingBox.minY + boundingBox.maxY) / 2);
            }, Path.prototype.roundCorners = function(radius) {
                var _a;
                if (radius <= 0) return this;
                var endsWithPathClose = "Z" === this.pathCommands[this.pathCommands.length - 1][0];
                if (endsWithPathClose) {
                    var start = this.getCommandEndPosition(this.pathCommands[0]), end = this.getCommandEndPosition(this.pathCommands[this.pathCommands.length - 2]);
                    start.x === end.x && start.y === end.y || (this.pathCommands[this.pathCommands.length - 1] = [ "L", start.x, start.y ]);
                }
                for (var latestCurveIndex, latestCurvePosition, firstDrawCommand = _.cloneDeep(endsWithPathClose ? this.pathCommands[1] : this.pathCommands[0]), i = 1; i < this.pathCommands.length; i++) {
                    var currCommand = this.pathCommands[i], nextCommand = null !== (_a = this.pathCommands[i + 1]) && void 0 !== _a ? _a : firstDrawCommand;
                    if (("M" === currCommand[0] || "L" === currCommand[0]) && "L" === nextCommand[0]) {
                        var prevPosition = latestCurveIndex + 1 === i ? latestCurvePosition : this.getCommandEndPosition(this.pathCommands[i - 1]), currPosition = this.getCommandEndPosition(currCommand), nextPosition = this.getCommandEndPosition(nextCommand), prevXDist = currPosition.x - prevPosition.x, prevYDist = currPosition.y - prevPosition.y, prevAngle = Math.atan(prevYDist / prevXDist), prevDist = Math.sqrt(Math.pow(prevXDist, 2) + Math.pow(prevYDist, 2)), nextXDist = nextPosition.x - currPosition.x, nextYDist = nextPosition.y - currPosition.y, nextAngle = Math.atan(nextYDist / nextXDist), nextDist = Math.sqrt(Math.pow(nextXDist, 2) + Math.pow(nextYDist, 2)), r = Math.min(radius, prevDist / 2, nextDist / 2), prevDeltaX = Math.abs(Math.cos(prevAngle)) * sign(prevXDist) * r, prevDeltaY = Math.abs(Math.sin(prevAngle)) * sign(prevYDist) * r, nextDeltaX = Math.abs(Math.cos(nextAngle)) * sign(nextXDist) * r, nextDeltaY = Math.abs(Math.sin(nextAngle)) * sign(nextYDist) * r;
                        currCommand[1] -= prevDeltaX, currCommand[2] -= prevDeltaY;
                        var degs = Math.abs(Math.floor(180 * angleBetween(prevPosition, currPosition, nextPosition) / Math.PI + .5));
                        this.pathCommands.splice(i + 1, 0, 90 === degs || 270 === degs ? [ "A", r, r, 0, 0, angleBetween(nextPosition, prevPosition, currPosition) > 0 ? 0 : 1, currPosition.x + nextDeltaX, currPosition.y + nextDeltaY ] : [ "C", currPosition.x - prevDeltaX / 2, currPosition.y - prevDeltaY / 2, currPosition.x + nextDeltaX / 2, currPosition.y + nextDeltaY / 2, currPosition.x + nextDeltaX, currPosition.y + nextDeltaY ]), 
                        latestCurveIndex = ++i, latestCurvePosition = currPosition;
                    }
                }
                return this;
            }, Path;
        }(), ContentBox = function(_super) {
            function ContentBox(x, y, width, height) {
                return _super.call(this, [ [ "M", x, y ], [ "M", x + width, y ], [ "M", x + width, y + height ], [ "M", x, y + height ] ]) || this;
            }
            return (0, tslib_es6.__extends)(ContentBox, _super), Object.defineProperty(ContentBox.prototype, "rectangleDimensions", {
                get: function() {
                    return {
                        width: distBetween(this.points[0], this.points[1]),
                        height: distBetween(this.points[1], this.points[2])
                    };
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(ContentBox.prototype, "points", {
                get: function() {
                    var c = this.pathCommands;
                    return [ {
                        x: c[0][1],
                        y: c[0][2]
                    }, {
                        x: c[1][1],
                        y: c[1][2]
                    }, {
                        x: c[2][1],
                        y: c[2][2]
                    }, {
                        x: c[3][1],
                        y: c[3][2]
                    } ];
                },
                enumerable: !1,
                configurable: !0
            }), ContentBox.prototype.getLargestInscribedRectangle = function(contentRads) {
                void 0 === contentRads && (contentRads = 0);
                var rectangleDimensions = this.rectangleDimensions, originalRectangleHeight = rectangleDimensions.height, originalRectangleWidth = rectangleDimensions.width, diffs = [ this.points[0].x - this.points[3].x, -this.points[0].y + this.points[3].y ], rads = Math.atan(diffs[0] / diffs[1]);
                diffs[1] < 0 ? rads += Math.PI : diffs[0] < 0 && (rads += 2 * Math.PI), rads -= contentRads;
                var boundingBox = this.getBoundingBox(), boundingBoxWidth = boundingBox.maxX - boundingBox.minX, boundingBoxHeight = boundingBox.maxY - boundingBox.minY, w0 = originalRectangleWidth <= originalRectangleHeight ? originalRectangleWidth : originalRectangleHeight, h0 = originalRectangleWidth <= originalRectangleHeight ? originalRectangleHeight : originalRectangleWidth, ang = Math.abs(rads - 2 * Math.floor((rads + Math.PI) / (2 * Math.PI)) * Math.PI);
                ang > Math.PI / 2 && (ang = Math.PI - ang);
                var sina = Math.sin(ang), cosa = Math.cos(ang), sinAcosA = sina * cosa, w1 = w0 * cosa + h0 * sina, h1 = w0 * sina + h0 * cosa, c = h0 * sinAcosA / (2 * h0 * sinAcosA + w0), x = w1 * c, y = h1 * c, w = originalRectangleWidth <= originalRectangleHeight ? w1 - 2 * x : h1 - 2 * y, h = originalRectangleWidth <= originalRectangleHeight ? h1 - 2 * y : w1 - 2 * x;
                return {
                    x: boundingBox.minX + (boundingBoxWidth - w) / 2,
                    y: boundingBox.minY + (boundingBoxHeight - h) / 2,
                    width: w,
                    height: h
                };
            }, ContentBox.prototype.getLargestRectangleSpace = function() {
                var rectangleDimensions = this.rectangleDimensions;
                return {
                    x: 0,
                    y: 0,
                    width: rectangleDimensions.width,
                    height: rectangleDimensions.height
                };
            }, ContentBox;
        }(Path), Shape = function() {
            function Shape(containerWidth, containerHeight, rads, rounding) {
                void 0 === containerWidth && (containerWidth = 0), void 0 === containerHeight && (containerHeight = 0), 
                void 0 === rads && (rads = 0), void 0 === rounding && (rounding = 0), this.containerWidth = containerWidth, 
                this.containerHeight = containerHeight, this.rads = rads, this.rounding = rounding, 
                this.scaledWidth = Math.abs(Math.cos(this.rads) * this.containerWidth) + Math.abs(Math.sin(this.rads) * this.containerHeight), 
                this.scaledHeight = Math.abs(Math.cos(this.rads) * this.containerHeight) + Math.abs(Math.sin(this.rads) * this.containerWidth);
            }
            return Object.defineProperty(Shape.prototype, "normalizedShapePath", {
                get: function() {
                    return new Path([ [ "M", 0, 0 ], [ "L", 1, 0 ], [ "L", 1, 1 ], [ "L", 0, 1 ], [ "Z" ] ]);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Shape.prototype, "scaledShapePath", {
                get: function() {
                    return this.normalizedShapePath.scale(this.scaledWidth, this.scaledHeight);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Shape.prototype, "transformedShapePath", {
                get: function() {
                    return this.scaledShapePath.transformToFit(this.rads, this.scaleFactor, this.boundingBox, this.scaledWidth, this.scaledHeight, this.containerWidth, this.containerHeight);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Shape.prototype, "roundedTransformedShapePath", {
                get: function() {
                    return this.transformedShapePath.roundCorners(this.rounding);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Shape.prototype, "shapePathString", {
                get: function() {
                    return this._shapePathString || (this._shapePathString = this.roundedTransformedShapePath.toString()), 
                    this._shapePathString;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Shape.prototype, "accentBarPathString", {
                get: function() {
                    return this._shapePathString || (this._shapePathString = this.scaledShapePath.toString()), 
                    this._shapePathString;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Shape.prototype, "normalizedContentBox", {
                get: function() {
                    return new ContentBox(0, 0, 1, 1);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Shape.prototype, "scaledContentBox", {
                get: function() {
                    return this.normalizedContentBox.scale(this.scaledWidth, this.scaledHeight);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Shape.prototype, "transformedContentBox", {
                get: function() {
                    return this.scaledContentBox.transformToFit(this.rads, this.scaleFactor, this.boundingBox, this.scaledWidth, this.scaledHeight, this.containerWidth, this.containerHeight);
                },
                enumerable: !1,
                configurable: !0
            }), Shape.prototype.getContentBoundingBox = function(contentRads) {
                return this.transformedContentBox.getLargestInscribedRectangle(contentRads);
            }, Shape.prototype.getContentBoundingBoxMaxRectangle = function() {
                return this.transformedContentBox.getLargestRectangleSpace();
            }, Object.defineProperty(Shape.prototype, "normalizedBoundingBoxPath", {
                get: function() {
                    return null;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Shape.prototype, "scaledBoundingBoxPath", {
                get: function() {
                    return this.normalizedBoundingBoxPath ? this.normalizedBoundingBoxPath.scale(this.scaledWidth, this.scaledHeight) : this.scaledShapePath;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Shape.prototype, "scaleFactor", {
                get: function() {
                    return null == this._scaleFactor && this.setBoundingBoxProperties(), this._scaleFactor;
                },
                set: function(scaleFactor) {
                    this._scaleFactor = scaleFactor;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Shape.prototype, "boundingBox", {
                get: function() {
                    return null == this._boundingBox && this.setBoundingBoxProperties(), this._boundingBox;
                },
                set: function(boundingBox) {
                    this._boundingBox = boundingBox;
                },
                enumerable: !1,
                configurable: !0
            }), Shape.prototype.setBoundingBoxProperties = function() {
                var scaledBoundingBoxPath = this.scaledBoundingBoxPath;
                scaledBoundingBoxPath.rotate(this.rads, this.scaledWidth / 2, this.scaledHeight / 2);
                var boundingBox = scaledBoundingBoxPath.getBoundingBox(), totalWidth = boundingBox.maxX - boundingBox.minX, totalHeight = boundingBox.maxY - boundingBox.minY;
                this.scaleFactor = 0 === totalHeight || 0 === totalWidth ? 1 : Math.min(this.containerHeight / totalHeight, this.containerWidth / totalWidth);
                var centerX = this.scaledWidth * this.scaleFactor / 2, centerY = this.scaledHeight * this.scaleFactor / 2;
                this.boundingBox = scaledBoundingBoxPath.scale(this.scaleFactor).translate(this.containerWidth / 2 - centerX, this.containerHeight / 2 - centerY).getBoundingBox();
            }, Shape.prototype.getScaledSideLength = function(topLeft, topRight, bottomLeft, bottomRight, scaledWidth, scaledHeight) {
                var topSideCutWidth = topLeft + topRight, bottomSideCutWidth = bottomLeft + bottomRight, leftSideCutWidth = topLeft + bottomLeft, rightSideCutWidth = topRight + bottomRight;
                return {
                    topLeftWidth: scaledWidth < topSideCutWidth ? topLeft / topSideCutWidth * scaledWidth : topLeft,
                    topRightWidth: scaledWidth < topSideCutWidth ? topRight / topSideCutWidth * scaledWidth : topRight,
                    bottomLeftWidth: scaledWidth < bottomSideCutWidth ? bottomLeft / bottomSideCutWidth * scaledWidth : bottomLeft,
                    bottomRightWidth: scaledWidth < bottomSideCutWidth ? bottomRight / bottomSideCutWidth * scaledWidth : bottomRight,
                    leftTopWidth: scaledHeight < leftSideCutWidth ? topLeft / leftSideCutWidth * scaledHeight : topLeft,
                    lefBottomWidth: scaledHeight < leftSideCutWidth ? bottomLeft / leftSideCutWidth * scaledHeight : bottomLeft,
                    rightTopWidth: scaledHeight < rightSideCutWidth ? topRight / rightSideCutWidth * scaledHeight : topRight,
                    rightBottomWidth: scaledHeight < rightSideCutWidth ? bottomRight / rightSideCutWidth * scaledHeight : bottomRight
                };
            }, Shape;
        }(), Arrow = function(_super) {
            function Arrow(containerWidth, containerHeight, rads, rounding, arrowheadSize, stemWidth) {
                var _this = _super.call(this, containerWidth, containerHeight, rads, rounding) || this;
                _this.normalBoxHeight = .5;
                var angle = arrowheadSize * Math.PI / 200;
                return _this.triangleWidth = Math.min(Math.min(_this.scaledWidth / 2, _this.scaledHeight / 2) / Math.tan(angle), _this.scaledWidth), 
                _this.normalCutout = .5 - stemWidth / 100, _this.normalBoxHeight = stemWidth / 50, 
                _this;
            }
            return (0, tslib_es6.__extends)(Arrow, _super), Object.defineProperty(Arrow.prototype, "scaledShapePath", {
                get: function() {
                    return new Path(cleanDuplicates([ [ "M", 0, this.normalCutout * this.scaledHeight ], [ "L", this.scaledWidth - this.triangleWidth, this.normalCutout * this.scaledHeight ], [ "L", this.scaledWidth - this.triangleWidth, 0 ], [ "L", this.scaledWidth, this.scaledHeight / 2 ], [ "L", this.scaledWidth - this.triangleWidth, this.scaledHeight ], [ "L", this.scaledWidth - this.triangleWidth, this.scaledHeight - this.normalCutout * this.scaledHeight ], [ "L", 0, this.scaledHeight - this.normalCutout * this.scaledHeight ], [ "Z" ] ]));
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Arrow.prototype, "scaledContentBox", {
                get: function() {
                    return new ContentBox(0, this.normalCutout * this.scaledHeight, this.scaledWidth - this.triangleWidth * this.normalBoxHeight, this.normalBoxHeight * this.scaledHeight);
                },
                enumerable: !1,
                configurable: !0
            }), Arrow;
        }(Shape), ArrowChevron = function(_super) {
            function ArrowChevron(containerWidth, containerHeight, rads, rounding, arrowheadAngle) {
                var _this = _super.call(this, containerWidth, containerHeight, rads, rounding) || this, angle = arrowheadAngle * Math.PI / 180;
                return _this.triangleWidth = Math.min(Math.min(_this.scaledWidth / 2, _this.scaledHeight / 2) / Math.tan(angle / 2), _this.scaledWidth), 
                _this.scaledWidth === _this.triangleWidth && (_this.scaledWidth = 2 * Math.tan(angle / 2) * _this.scaledWidth), 
                _this;
            }
            return (0, tslib_es6.__extends)(ArrowChevron, _super), Object.defineProperty(ArrowChevron.prototype, "scaledShapePath", {
                get: function() {
                    return new Path([ [ "M", 0, 0 ], [ "L", this.scaledWidth - this.triangleWidth, 0 ], [ "L", this.scaledWidth, .5 * this.scaledHeight ], [ "L", this.scaledWidth - this.triangleWidth, this.scaledHeight ], [ "L", 0, this.scaledHeight ], [ "L", this.triangleWidth, .5 * this.scaledHeight ], [ "Z" ] ]);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(ArrowChevron.prototype, "scaledContentBox", {
                get: function() {
                    return this.scaledWidth > 2 * this.triangleWidth ? new ContentBox(this.triangleWidth, 0, this.scaledWidth - 2 * this.triangleWidth, this.scaledHeight) : new ContentBox(0, 0, this.scaledWidth, this.scaledHeight);
                },
                enumerable: !1,
                configurable: !0
            }), ArrowChevron;
        }(Shape), ArrowPentagon = function(_super) {
            function ArrowPentagon(containerWidth, containerHeight, rads, rounding, arrowheadSize) {
                var _this = _super.call(this, containerWidth, containerHeight, rads, rounding) || this, angle = arrowheadSize * Math.PI / 100;
                return _this.triangleWidth = Math.min(Math.min(_this.scaledWidth / 2, _this.scaledHeight / 2) / Math.tan(angle / 2), _this.scaledWidth), 
                _this;
            }
            return (0, tslib_es6.__extends)(ArrowPentagon, _super), Object.defineProperty(ArrowPentagon.prototype, "scaledShapePath", {
                get: function() {
                    return new Path(cleanDuplicates([ [ "M", 0, 0 ], [ "L", this.scaledWidth - this.triangleWidth, 0 ], [ "L", this.scaledWidth, .5 * this.scaledHeight ], [ "L", this.scaledWidth - this.triangleWidth, this.scaledHeight ], [ "L", 0, this.scaledHeight ], [ "Z" ] ]));
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(ArrowPentagon.prototype, "scaledContentBox", {
                get: function() {
                    return new ContentBox(0, 0, this.scaledWidth - this.triangleWidth, this.scaledHeight);
                },
                enumerable: !1,
                configurable: !0
            }), ArrowPentagon;
        }(Shape), Heart = function(_super) {
            function Heart(containerWidth, containerHeight, rads, rounding) {
                return _super.call(this, containerWidth, containerHeight, rads, rounding) || this;
            }
            return (0, tslib_es6.__extends)(Heart, _super), Object.defineProperty(Heart.prototype, "normalizedShapePath", {
                get: function() {
                    return new Path([ [ "M", .501465, 1 ], [ "L", .467285, .9812533333333333 ], [ "C", .319173125, .8687466666666667, .206055, .75972, .12793, .6541666666666667 ], [ "C", .0498046875, .5486113333333333, .0071614375, .44739599999999996, 0, .35052066666666665 ], [ "L", 0, .29010400000000003 ], [ "C", .00358073125, .24427066666666666, .0126953125, .20399333333333333, .02734375, .16927066666666668 ], [ "C", .0419921875, .13420133333333334, .060058625, .10486133333333333, .081543125, .08125 ], [ "C", .102701875, .057291666666666664, .12597625, .03888886666666667, .1513675, .026041666666666668 ], [ "C", .1767575, .0128472, .201823125, .0050347199999999995, .2265625, .0026041666666666665 ], [ "C", .23502625, .00190972, .24316375, .0013888866666666665, .25097625, .0010416666666666667 ], [ "C", .25878875, 347222e-9, .26643875, 0, .273925625, 0 ], [ "C", .300293125, 0, .323893125, .00277778, .34472625, .008333333333333333 ], [ "C", .365234375, .013541666666666667, .3842775, .0215278, .401855625, .03229166666666666 ], [ "C", .419108125, .042708333333333334, .435709375, .0559028, .45166, .07187466666666667 ], [ "C", .467285, .08784733333333333, .48339875, .10625, .5, .12708333333333333 ], [ "C", .51660125, .10625, .5328775, .08784733333333333, .548828125, .07187466666666667 ], [ "C", .564453125, .0559028, .581055, .042708333333333334, .5986325, .03229166666666666 ], [ "C", .615885625, .0215278, .63493125, .013541666666666667, .6557625, .008333333333333333 ], [ "C", .67626875, .00277778, .69970625, 0, .726075, 0 ], [ "C", .7335625, 0, .7412125, 347222e-9, .749025, .0010416666666666667 ], [ "C", .7565125, .0013888866666666665, .7644875, .00190972, .77295, .0026041666666666665 ], [ "C", .7976875, .0050347199999999995, .82291875, .0128472, .84863125, .026041666666666668 ], [ "C", .874025, .03888886666666667, .8974625, .057291666666666664, .91894375, .08125 ], [ "C", .94010625, .105208, .95800625, .13454866666666665, .97265625, .16927066666666668 ], [ "C", .98730625, .20399333333333333, .99641875, .24427066666666666, 1, .29010400000000003 ], [ "L", 1, .35052066666666665 ], [ "C", .9925125, .44843733333333335, .95003125, .5501733333333333, .87255625, .6557293333333334 ], [ "C", .79475625, .76094, .68245625, .8694466666666667, .535644375, .9812533333333333 ], [ "L", .501465, 1 ], [ "Z" ] ]);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Heart.prototype, "normalizedBoundingBoxPath", {
                get: function() {
                    return new Path([ [ "M", .1, 0 ], [ "L", .9, 0 ], [ "L", 1, .1 ], [ "L", 1, .6 ], [ "L", .5, 1 ], [ "L", 0, .6 ], [ "L", 0, .1 ], [ "Z" ] ]);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Heart.prototype, "normalizedContentBox", {
                get: function() {
                    return new ContentBox(.2, .12708333333333333, .6, .61875);
                },
                enumerable: !1,
                configurable: !0
            }), Heart;
        }(Shape), Hexagon = function(_super) {
            function Hexagon(containerWidth, containerHeight, rads, rounding, hexagonSlant) {
                var _this = _super.call(this, containerWidth, containerHeight, rads, rounding) || this, angle = (180 - .9 * hexagonSlant) * Math.PI / 360;
                return _this.triangleWidth = Math.min(Math.min(_this.scaledWidth / 2, _this.scaledHeight / 2) / Math.tan(angle), _this.scaledWidth / 2), 
                _this;
            }
            return (0, tslib_es6.__extends)(Hexagon, _super), Object.defineProperty(Hexagon.prototype, "scaledShapePath", {
                get: function() {
                    return new Path([ [ "M", this.triangleWidth, 0 ], [ "L", this.scaledWidth - this.triangleWidth, 0 ], [ "L", this.scaledWidth, .5 * this.scaledHeight ], [ "L", this.scaledWidth - this.triangleWidth, this.scaledHeight ], [ "L", this.triangleWidth, this.scaledHeight ], [ "L", 0, .5 * this.scaledHeight ], [ "Z" ] ]);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Hexagon.prototype, "scaledContentBox", {
                get: function() {
                    return new ContentBox(2 * this.triangleWidth / 3, this.scaledHeight / 6, this.scaledWidth - 4 * this.triangleWidth / 3, 2 * this.scaledHeight / 3);
                },
                enumerable: !1,
                configurable: !0
            }), Hexagon;
        }(Shape), Line = function(_super) {
            function Line(containerWidth, containerHeight, rads) {
                return _super.call(this, containerWidth, containerHeight, rads) || this;
            }
            return (0, tslib_es6.__extends)(Line, _super), Object.defineProperty(Line.prototype, "normalizedShapePath", {
                get: function() {
                    return new Path([ [ "M", 0, .5 ], [ "L", 1, .5 ] ]);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Line.prototype, "transformedContentBox", {
                get: function() {
                    return new ContentBox(0, 0, this.containerWidth, this.containerHeight);
                },
                enumerable: !1,
                configurable: !0
            }), Line;
        }(Shape), Octagon = function(_super) {
            function Octagon(containerWidth, containerHeight, rads, rounding, octagonCutout) {
                var _this = _super.call(this, containerWidth, containerHeight, rads, rounding) || this, cutout = octagonCutout / 100;
                return _this.triangleWidth = Math.min(_this.scaledWidth * cutout, _this.scaledHeight * cutout, _this.scaledHeight, _this.scaledWidth), 
                _this;
            }
            return (0, tslib_es6.__extends)(Octagon, _super), Object.defineProperty(Octagon.prototype, "scaledShapePath", {
                get: function() {
                    return new Path(cleanDuplicates([ [ "M", this.triangleWidth, 0 ], [ "L", this.scaledWidth - this.triangleWidth, 0 ], [ "L", this.scaledWidth, this.triangleWidth ], [ "L", this.scaledWidth, this.scaledHeight - this.triangleWidth ], [ "L", this.scaledWidth - this.triangleWidth, this.scaledHeight ], [ "L", this.triangleWidth, this.scaledHeight ], [ "L", 0, this.scaledHeight - this.triangleWidth ], [ "L", 0, this.triangleWidth ], [ "Z" ] ]));
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Octagon.prototype, "scaledContentBox", {
                get: function() {
                    return new ContentBox(this.triangleWidth / 2, this.triangleWidth / 2, this.scaledWidth - this.triangleWidth, this.scaledHeight - this.triangleWidth);
                },
                enumerable: !1,
                configurable: !0
            }), Octagon;
        }(Shape), Oval = function(_super) {
            function Oval(containerWidth, containerHeight, rads) {
                return _super.call(this, containerWidth, containerHeight, rads) || this;
            }
            return (0, tslib_es6.__extends)(Oval, _super), Object.defineProperty(Oval.prototype, "normalizedShapePath", {
                get: function() {
                    return new Path([ [ "M", .5, 0 ], [ "A", .5, .5, 180 * this.rads / Math.PI, 0, 0, .5, 1 ], [ "A", .5, .5, 180 * this.rads / Math.PI, 0, 0, .5, 0 ], [ "Z" ] ]);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Oval.prototype, "normalizedBoundingBoxPath", {
                get: function() {
                    return new Path([ [ "M", 0, 0 ], [ "L", 1, 0 ], [ "L", 1, 1 ], [ "L", 0, 1 ], [ "Z" ] ]);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Oval.prototype, "normalizedContentBox", {
                get: function() {
                    var p = .5 - Math.sqrt(2) / 4, d = Math.sqrt(2) / 2;
                    return new ContentBox(p, p, d, d);
                },
                enumerable: !1,
                configurable: !0
            }), Oval;
        }(Shape), Parallelogram = function(_super) {
            function Parallelogram(containerWidth, containerHeight, rads, rounding, parallelogramSkew) {
                var _this = _super.call(this, containerWidth, containerHeight, rads, rounding) || this, angle = Math.PI / 2 - .9 * parallelogramSkew * Math.PI / 180;
                return _this.triangleWidth = Math.min(_this.scaledWidth / 2, _this.scaledHeight / 2) / Math.tan(angle), 
                _this.triangleWidth >= _this.scaledWidth && (_this.triangleWidth = 0), _this;
            }
            return (0, tslib_es6.__extends)(Parallelogram, _super), Object.defineProperty(Parallelogram.prototype, "scaledShapePath", {
                get: function() {
                    return new Path([ [ "M", this.triangleWidth, 0 ], [ "L", this.scaledWidth, 0 ], [ "L", this.scaledWidth - this.triangleWidth, this.scaledHeight ], [ "L", 0, this.scaledHeight ], [ "Z" ] ]);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Parallelogram.prototype, "scaledContentBox", {
                get: function() {
                    return this.scaledWidth > 2 * this.triangleWidth ? new ContentBox(this.triangleWidth, 0, this.scaledWidth - 2 * this.triangleWidth, this.scaledHeight) : new ContentBox(0, 0, this.scaledWidth, this.scaledHeight);
                },
                enumerable: !1,
                configurable: !0
            }), Parallelogram;
        }(Shape), Pentagon = function(_super) {
            function Pentagon(containerWidth, containerHeight, rads, rounding) {
                var _this = _super.call(this, containerWidth, containerHeight, rads, rounding) || this;
                return _this.dy = .5 - .125 * (Math.sqrt(5) - 1), _this.dx = .5 - .125 * Math.sqrt(10 - 2 * Math.sqrt(5)), 
                _this;
            }
            return (0, tslib_es6.__extends)(Pentagon, _super), Object.defineProperty(Pentagon.prototype, "normalizedShapePath", {
                get: function() {
                    return new Path([ [ "M", .5, 0 ], [ "L", 1, this.dy ], [ "L", 1 - this.dx, 1 ], [ "L", this.dx, 1 ], [ "L", 0, this.dy ], [ "Z" ] ]);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Pentagon.prototype, "normalizedContentBox", {
                get: function() {
                    return new ContentBox(this.dx, 5 * this.dy / 8, 1 - 2 * this.dx, 1 - 5 * this.dy / 8);
                },
                enumerable: !1,
                configurable: !0
            }), Pentagon;
        }(Shape), Pill = function(_super) {
            function Pill(containerWidth, containerHeight, rads, rounding) {
                var _this = _super.call(this, containerWidth, containerHeight, rads, rounding) || this;
                return _this.radius = Math.min(_this.scaledHeight, _this.scaledWidth) / 2, _this;
            }
            return (0, tslib_es6.__extends)(Pill, _super), Object.defineProperty(Pill.prototype, "scaledShapePath", {
                get: function() {
                    return new Path([ [ "M", 0, this.radius ], [ "A", this.radius, this.radius, 0, 0, 1, this.radius, 0 ], [ "L", this.scaledWidth - this.radius, 0 ], [ "A", this.radius, this.radius, 0, 0, 1, this.scaledWidth, this.radius ], [ "L", this.scaledWidth, this.scaledHeight - this.radius ], [ "A", this.radius, this.radius, 0, 0, 1, this.scaledWidth - this.radius, this.scaledHeight ], [ "L", this.radius, this.scaledHeight ], [ "A", this.radius, this.radius, 0, 0, 1, 0, this.scaledHeight - this.radius ], [ "Z" ] ]);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Pill.prototype, "normalizedBoundingBoxPath", {
                get: function() {
                    return new Path([ [ "M", 0, 0 ], [ "L", 1, 0 ], [ "L", 1, 1 ], [ "L", 0, 1 ], [ "Z" ] ]);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Pill.prototype, "scaledContentBox", {
                get: function() {
                    var dist = 1 - Math.sqrt(2) / 2;
                    return new ContentBox(this.radius * dist, this.radius * dist, this.scaledWidth - this.radius * dist * 2, this.scaledHeight - this.radius * dist * 2);
                },
                enumerable: !1,
                configurable: !0
            }), Pill;
        }(Shape), Rectangle = function(_super) {
            function Rectangle(containerWidth, containerHeight, rads, rounding) {
                return _super.call(this, containerWidth, containerHeight, rads, rounding) || this;
            }
            return (0, tslib_es6.__extends)(Rectangle, _super), Object.defineProperty(Rectangle.prototype, "normalizedShapePath", {
                get: function() {
                    return new Path([ [ "M", 0, 0 ], [ "L", 1, 0 ], [ "L", 1, 1 ], [ "L", 0, 1 ], [ "Z" ] ]);
                },
                enumerable: !1,
                configurable: !0
            }), Rectangle;
        }(Shape), AccentBar = function(_super) {
            function AccentBar(containerWidth, containerHeight, rads, rounding, accentBarPosition, accentBarWidth) {
                var _this = this;
                return accentBarPosition === legendPosition.zw.left ? containerWidth = accentBarWidth : accentBarPosition === legendPosition.zw.top && (containerHeight = accentBarWidth), 
                (_this = _super.call(this, containerWidth, containerHeight, rads, rounding) || this).accentBarPosition = accentBarPosition, 
                _this.accentBarWidth = accentBarWidth, _this;
            }
            return (0, tslib_es6.__extends)(AccentBar, _super), Object.defineProperty(AccentBar.prototype, "normalizedShapePath", {
                get: function() {
                    return this.accentBarPosition === legendPosition.zw.left || this.accentBarPosition === legendPosition.zw.top ? new Path([ [ "M", 0, 0 ], [ "L", 0, 1 ], [ "L", 1, 1 ], [ "L", 1, 0 ], [ "Z" ] ]) : this.accentBarPosition === legendPosition.zw.right ? new Path([ [ "M", 1, 1 ], [ "L", 1 - this.accentBarWidth / this.containerWidth, 1 ], [ "L", 1 - this.accentBarWidth / this.containerWidth, 0 ], [ "L", 1, 0 ], [ "Z" ] ]) : this.accentBarPosition === legendPosition.zw.bottom ? new Path([ [ "M", 1, 1 ], [ "L", 1, 1 - this.accentBarWidth / this.containerHeight ], [ "L", 0, 1 - this.accentBarWidth / this.containerHeight ], [ "L", 0, 1 ], [ "Z" ] ]) : void 0;
                },
                enumerable: !1,
                configurable: !0
            }), AccentBar;
        }(Shape), RectangleRounded = function(_super) {
            function RectangleRounded(containerWidth, containerHeight, rads, rounding, edgeCurve) {
                var _this = _super.call(this, containerWidth, containerHeight, rads, rounding) || this;
                return _this.radius = Math.min(_this.scaledHeight, _this.scaledWidth) * edgeCurve / 100, 
                _this;
            }
            return (0, tslib_es6.__extends)(RectangleRounded, _super), Object.defineProperty(RectangleRounded.prototype, "scaledShapePath", {
                get: function() {
                    return new Path([ [ "M", 0, this.radius ], [ "A", this.radius, this.radius, 0, 0, 1, this.radius, 0 ], [ "L", this.scaledWidth - this.radius, 0 ], [ "A", this.radius, this.radius, 0, 0, 1, this.scaledWidth, this.radius ], [ "L", this.scaledWidth, this.scaledHeight - this.radius ], [ "A", this.radius, this.radius, 0, 0, 1, this.scaledWidth - this.radius, this.scaledHeight ], [ "L", this.radius, this.scaledHeight ], [ "A", this.radius, this.radius, 0, 0, 1, 0, this.scaledHeight - this.radius ], [ "Z" ] ]);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(RectangleRounded.prototype, "normalizedBoundingBoxPath", {
                get: function() {
                    return new Path([ [ "M", 0, 0 ], [ "L", 1, 0 ], [ "L", 1, 1 ], [ "L", 0, 1 ], [ "Z" ] ]);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(RectangleRounded.prototype, "scaledContentBox", {
                get: function() {
                    var dist = 1 - Math.sqrt(2) / 2;
                    return new ContentBox(this.radius * dist, this.radius * dist, this.scaledWidth - this.radius * dist * 2, this.scaledHeight - this.radius * dist * 2);
                },
                enumerable: !1,
                configurable: !0
            }), RectangleRounded;
        }(Shape), RectangleCustomRounded = function(_super) {
            function RectangleCustomRounded(containerWidth, containerHeight, rads, rounding, topLeft, topRight, bottomLeft, bottomRight) {
                var _this = _super.call(this, containerWidth, containerHeight, rads, rounding) || this;
                return _this.radiusTopLeft = Math.min(_this.scaledHeight, _this.scaledWidth) * topLeft / 100, 
                _this.radiusTopRight = Math.min(_this.scaledHeight, _this.scaledWidth) * topRight / 100, 
                _this.radiusBottomLeft = Math.min(_this.scaledHeight, _this.scaledWidth) * bottomLeft / 100, 
                _this.radiusBottomRight = Math.min(_this.scaledHeight, _this.scaledWidth) * bottomRight / 100, 
                _this;
            }
            return (0, tslib_es6.__extends)(RectangleCustomRounded, _super), Object.defineProperty(RectangleCustomRounded.prototype, "scaledShapePath", {
                get: function() {
                    return new Path([ [ "M", 0, this.radiusTopLeft ], [ "A", this.radiusTopLeft, this.radiusTopLeft, 0, 0, 1, this.radiusTopLeft, 0 ], [ "L", this.scaledWidth - this.radiusTopRight, 0 ], [ "A", this.radiusTopRight, this.radiusTopRight, 0, 0, 1, this.scaledWidth, this.radiusTopRight ], [ "L", this.scaledWidth, this.scaledHeight - this.radiusBottomRight ], [ "A", this.radiusBottomRight, this.radiusBottomRight, 0, 0, 1, this.scaledWidth - this.radiusBottomRight, this.scaledHeight ], [ "L", this.radiusBottomLeft, this.scaledHeight ], [ "A", this.radiusBottomLeft, this.radiusBottomLeft, 0, 0, 1, 0, this.scaledHeight - this.radiusBottomLeft ], [ "Z" ] ]);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(RectangleCustomRounded.prototype, "normalizedBoundingBoxPath", {
                get: function() {
                    return new Path([ [ "M", 0, 0 ], [ "L", 1, 0 ], [ "L", 1, 1 ], [ "L", 0, 1 ], [ "Z" ] ]);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(RectangleCustomRounded.prototype, "scaledContentBox", {
                get: function() {
                    var dist = 1 - Math.sqrt(2) / 2;
                    return new ContentBox((this.radiusTopLeft + this.radiusTopRight) * dist, (this.radiusTopLeft + this.radiusBottomLeft) * dist, this.scaledWidth - (this.radiusTopLeft + this.radiusTopRight) * dist * 2, this.scaledHeight - (this.radiusTopLeft + this.radiusBottomLeft) * dist * 2);
                },
                enumerable: !1,
                configurable: !0
            }), RectangleCustomRounded;
        }(Shape), RectangleCustomRoundedByPixel = function(_super) {
            function RectangleCustomRoundedByPixel(containerWidth, containerHeight, rads, rounding, topLeft, topRight, bottomLeft, bottomRight) {
                var _this = _super.call(this, containerWidth, containerHeight, rads, rounding) || this;
                return _this.scaleSideWidth = _this.getScaledSideLength(topLeft, topRight, bottomLeft, bottomRight, _this.scaledWidth, _this.scaledHeight), 
                _this;
            }
            return (0, tslib_es6.__extends)(RectangleCustomRoundedByPixel, _super), Object.defineProperty(RectangleCustomRoundedByPixel.prototype, "scaledShapePath", {
                get: function() {
                    return new Path([ [ "M", 0, this.scaleSideWidth.leftTopWidth ], [ "C", 0, this.scaleSideWidth.leftTopWidth / 2, this.scaleSideWidth.topLeftWidth / 2, 0, this.scaleSideWidth.topLeftWidth, 0 ], [ "L", this.scaledWidth - this.scaleSideWidth.topRightWidth, 0 ], [ "C", this.scaledWidth - this.scaleSideWidth.topRightWidth / 2, 0, this.scaledWidth, this.scaleSideWidth.rightTopWidth / 2, this.scaledWidth, this.scaleSideWidth.rightTopWidth ], [ "L", this.scaledWidth, this.scaledHeight - this.scaleSideWidth.rightBottomWidth ], [ "C", this.scaledWidth, this.scaledHeight - this.scaleSideWidth.rightBottomWidth / 2, this.scaledWidth - this.scaleSideWidth.bottomRightWidth / 2, this.scaledHeight, this.scaledWidth - this.scaleSideWidth.bottomRightWidth, this.scaledHeight ], [ "L", this.scaleSideWidth.bottomLeftWidth, this.scaledHeight ], [ "C", this.scaleSideWidth.bottomLeftWidth / 2, this.scaledHeight, 0, this.scaledHeight - this.scaleSideWidth.lefBottomWidth / 2, 0, this.scaledHeight - this.scaleSideWidth.lefBottomWidth ], [ "Z" ] ]);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(RectangleCustomRoundedByPixel.prototype, "normalizedBoundingBoxPath", {
                get: function() {
                    return new Path([ [ "M", 0, 0 ], [ "L", 1, 0 ], [ "L", 1, 1 ], [ "L", 0, 1 ], [ "Z" ] ]);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(RectangleCustomRoundedByPixel.prototype, "scaledContentBox", {
                get: function() {
                    return new ContentBox(0, 0, this.scaledWidth, this.scaledHeight);
                },
                enumerable: !1,
                configurable: !0
            }), RectangleCustomRoundedByPixel;
        }(Shape), Speechbubble = function(_super) {
            function Speechbubble(containerWidth, containerHeight, rads, rounding, speechBubbleHeight, tailPosition, tailAngle) {
                var _this = _super.call(this, containerWidth, containerHeight, rads, rounding) || this;
                return _this.cutout = .1, _this.cutout = speechBubbleHeight / 100, _this.tailStartPoint = Math.max(Math.min(.125 - Math.tan((90 - tailAngle) * Math.PI / 180) * _this.cutout, .5), 0), 
                _this.tailPosition = tailPosition, _this;
            }
            return (0, tslib_es6.__extends)(Speechbubble, _super), Object.defineProperty(Speechbubble.prototype, "normalizedShapePath", {
                get: function() {
                    switch (this.tailPosition) {
                      case speechBubbleTailPosition.R5:
                        return new Path(cleanDuplicates([ [ "M", 0, 0 ], [ "L", 1, 0 ], [ "L", 1, 1 - this.cutout ], [ "L", .25, 1 - this.cutout ], [ "L", this.tailStartPoint, 1 ], [ "L", .125, 1 - this.cutout ], [ "L", 0, 1 - this.cutout ], [ "Z" ] ]));

                      case speechBubbleTailPosition.TB:
                        return new Path(cleanDuplicates([ [ "M", 0, 0 ], [ "L", 1, 0 ], [ "L", 1, 1 - this.cutout ], [ "L", .875, 1 - this.cutout ], [ "L", 1 - this.tailStartPoint, 1 ], [ "L", .75, 1 - this.cutout ], [ "L", 0, 1 - this.cutout ], [ "Z" ] ]));

                      case speechBubbleTailPosition.Ai:
                        return new Path(cleanDuplicates([ [ "M", 0, 0 ], [ "L", 1 - this.cutout, 0 ], [ "L", 1 - this.cutout, .75 ], [ "L", 1, 1 - this.tailStartPoint ], [ "L", 1 - this.cutout, .875 ], [ "L", 1 - this.cutout, 1 ], [ "L", 0, 1 ], [ "Z" ] ]));

                      case speechBubbleTailPosition.UQ:
                        return new Path(cleanDuplicates([ [ "M", 0, 0 ], [ "L", 1 - this.cutout, 0 ], [ "L", 1 - this.cutout, .125 ], [ "L", 1, this.tailStartPoint ], [ "L", 1 - this.cutout, .25 ], [ "L", 1 - this.cutout, 1 ], [ "L", 0, 1 ], [ "Z" ] ]));

                      case speechBubbleTailPosition.K2:
                        return new Path(cleanDuplicates([ [ "M", 0, this.cutout ], [ "L", .75, this.cutout ], [ "L", 1 - this.tailStartPoint, 0 ], [ "L", .875, this.cutout ], [ "L", 1, this.cutout ], [ "L", 1, 1 ], [ "L", 0, 1 ], [ "Z" ] ]));

                      case speechBubbleTailPosition.tY:
                        return new Path(cleanDuplicates([ [ "M", 0, this.cutout ], [ "L", .125, this.cutout ], [ "L", this.tailStartPoint, 0 ], [ "L", .25, this.cutout ], [ "L", 1, this.cutout ], [ "L", 1, 1 ], [ "L", 0, 1 ], [ "Z" ] ]));

                      case speechBubbleTailPosition.mH:
                        return new Path(cleanDuplicates([ [ "M", this.cutout, 0 ], [ "L", 1, 0 ], [ "L", 1, 1 ], [ "L", this.cutout, 1 ], [ "L", this.cutout, .25 ], [ "L", 0, this.tailStartPoint ], [ "L", this.cutout, .125 ], [ "Z" ] ]));

                      case speechBubbleTailPosition.GA:
                        return new Path(cleanDuplicates([ [ "M", this.cutout, 0 ], [ "L", 1, 0 ], [ "L", 1, 1 ], [ "L", this.cutout, 1 ], [ "L", this.cutout, .875 ], [ "L", 0, 1 - this.tailStartPoint ], [ "L", this.cutout, .75 ], [ "Z" ] ]));
                    }
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Speechbubble.prototype, "normalizedContentBox", {
                get: function() {
                    return new ContentBox(0, 0, 1, 1 - this.cutout);
                },
                enumerable: !1,
                configurable: !0
            }), Speechbubble;
        }(Shape), TabCutCorner = function(_super) {
            function TabCutCorner(containerWidth, containerHeight, rads, rounding, cutoutSize) {
                var _this = _super.call(this, containerWidth, containerHeight, rads, rounding) || this, cutout = cutoutSize / 100;
                return _this.triangleWidth = Math.min(_this.scaledWidth * cutout, _this.scaledHeight * cutout), 
                _this;
            }
            return (0, tslib_es6.__extends)(TabCutCorner, _super), Object.defineProperty(TabCutCorner.prototype, "scaledShapePath", {
                get: function() {
                    return new Path(cleanDuplicates([ [ "M", 0, 0 ], [ "L", this.scaledWidth - this.triangleWidth, 0 ], [ "L", this.scaledWidth, this.triangleWidth ], [ "L", this.scaledWidth, this.scaledHeight ], [ "L", 0, this.scaledHeight ], [ "Z" ] ]));
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(TabCutCorner.prototype, "scaledContentBox", {
                get: function() {
                    return new ContentBox(0, this.triangleWidth / 2, this.scaledWidth - this.triangleWidth / 2, this.scaledHeight - this.triangleWidth / 2);
                },
                enumerable: !1,
                configurable: !0
            }), TabCutCorner;
        }(Shape), TabCutTopCorners = function(_super) {
            function TabCutTopCorners(containerWidth, containerHeight, rads, rounding, cutoutSizeTop, cutoutSizeBottom) {
                var _this = _super.call(this, containerWidth, containerHeight, rads, rounding) || this, topCutout = cutoutSizeTop / 100, bottomCutout = cutoutSizeBottom / 100;
                return _this.topTriangleWidth = Math.min(_this.scaledWidth * topCutout, _this.scaledHeight * topCutout), 
                _this.bottomTriangleWidth = Math.min(_this.scaledWidth * bottomCutout, _this.scaledHeight * bottomCutout), 
                _this;
            }
            return (0, tslib_es6.__extends)(TabCutTopCorners, _super), Object.defineProperty(TabCutTopCorners.prototype, "scaledShapePath", {
                get: function() {
                    return new Path(cleanDuplicates([ [ "M", this.topTriangleWidth, 0 ], [ "L", this.scaledWidth - this.topTriangleWidth, 0 ], [ "L", this.scaledWidth, this.topTriangleWidth ], [ "L", this.scaledWidth, this.scaledHeight - this.bottomTriangleWidth ], [ "L", this.scaledWidth - this.bottomTriangleWidth, this.scaledHeight ], [ "L", this.bottomTriangleWidth, this.scaledHeight ], [ "L", 0, this.scaledHeight - this.bottomTriangleWidth ], [ "L", 0, this.topTriangleWidth ], [ "Z" ] ]));
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(TabCutTopCorners.prototype, "scaledContentBox", {
                get: function() {
                    return new ContentBox(this.topTriangleWidth / 2, this.topTriangleWidth / 2, this.scaledWidth - this.topTriangleWidth, this.scaledHeight - this.topTriangleWidth / 2 - Math.max(0, this.bottomTriangleWidth - this.topTriangleWidth / 2));
                },
                enumerable: !1,
                configurable: !0
            }), TabCutTopCorners;
        }(Shape), TabCutTopCustomCorners = function(_super) {
            function TabCutTopCustomCorners(containerWidth, containerHeight, rads, rounding, topLeft, topRight, bottomLeft, bottomRight) {
                var _this = _super.call(this, containerWidth, containerHeight, rads, rounding) || this, topLeftCutout = topLeft / 100, topRightCutout = topRight / 100, bottomLeftCutout = bottomLeft / 100, bottomRightCutout = bottomRight / 100;
                return _this.topLeftTriangleWidth = Math.min(_this.scaledWidth * topLeftCutout, _this.scaledHeight * topLeftCutout), 
                _this.topRighttTriangleWidth = Math.min(_this.scaledWidth * topRightCutout, _this.scaledHeight * topRightCutout), 
                _this.bottomLeftTriangleWidth = Math.min(_this.scaledWidth * bottomLeftCutout, _this.scaledHeight * bottomLeftCutout), 
                _this.bottomRightTriangleWidth = Math.min(_this.scaledWidth * bottomRightCutout, _this.scaledHeight * bottomRightCutout), 
                _this;
            }
            return (0, tslib_es6.__extends)(TabCutTopCustomCorners, _super), Object.defineProperty(TabCutTopCustomCorners.prototype, "scaledShapePath", {
                get: function() {
                    return new Path(cleanDuplicates([ [ "M", this.topLeftTriangleWidth, 0 ], [ "L", this.scaledWidth - this.topLeftTriangleWidth, 0 ], [ "L", this.scaledWidth, this.topRighttTriangleWidth ], [ "L", this.scaledWidth, this.scaledHeight - this.bottomRightTriangleWidth ], [ "L", this.scaledWidth - this.bottomRightTriangleWidth, this.scaledHeight ], [ "L", this.bottomLeftTriangleWidth, this.scaledHeight ], [ "L", 0, this.scaledHeight - this.bottomLeftTriangleWidth ], [ "L", 0, this.topLeftTriangleWidth ], [ "Z" ] ]));
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(TabCutTopCustomCorners.prototype, "scaledContentBox", {
                get: function() {
                    return new ContentBox((this.topRighttTriangleWidth + this.topLeftTriangleWidth) / 2, (this.topLeftTriangleWidth + this.topRighttTriangleWidth) / 2, this.scaledWidth - (this.topRighttTriangleWidth + this.topLeftTriangleWidth), this.scaledHeight - (this.topLeftTriangleWidth + this.topRighttTriangleWidth) / 2 - Math.max(0, this.bottomLeftTriangleWidth + this.bottomRightTriangleWidth - (this.topLeftTriangleWidth + this.bottomLeftTriangleWidth) / 2));
                },
                enumerable: !1,
                configurable: !0
            }), TabCutTopCustomCorners;
        }(Shape), TabCutTopCustomCornersByPixel = function(_super) {
            function TabCutTopCustomCornersByPixel(containerWidth, containerHeight, rads, rounding, topLeft, topRight, bottomLeft, bottomRight) {
                var _this = _super.call(this, containerWidth, containerHeight, rads, rounding) || this;
                return _this.scaleSideWidth = _this.getScaledSideLength(topLeft, topRight, bottomLeft, bottomRight, _this.scaledWidth, _this.scaledHeight), 
                _this;
            }
            return (0, tslib_es6.__extends)(TabCutTopCustomCornersByPixel, _super), Object.defineProperty(TabCutTopCustomCornersByPixel.prototype, "scaledShapePath", {
                get: function() {
                    return new Path(cleanDuplicates([ [ "M", this.scaleSideWidth.topLeftWidth, 0 ], [ "L", this.scaledWidth - this.scaleSideWidth.topRightWidth, 0 ], [ "L", this.scaledWidth, this.scaleSideWidth.rightTopWidth ], [ "L", this.scaledWidth, this.scaledHeight - this.scaleSideWidth.rightBottomWidth ], [ "L", this.scaledWidth - this.scaleSideWidth.bottomRightWidth, this.scaledHeight ], [ "L", this.scaleSideWidth.bottomLeftWidth, this.scaledHeight ], [ "L", 0, this.scaledHeight - this.scaleSideWidth.lefBottomWidth ], [ "L", 0, this.scaleSideWidth.leftTopWidth ], [ "Z" ] ]));
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(TabCutTopCustomCornersByPixel.prototype, "scaledContentBox", {
                get: function() {
                    return new ContentBox(0, 0, this.scaledWidth, this.scaledHeight);
                },
                enumerable: !1,
                configurable: !0
            }), TabCutTopCustomCornersByPixel;
        }(Shape), TabRoundCorner = function(_super) {
            function TabRoundCorner(containerWidth, containerHeight, rads, rounding, cutoutSize) {
                var _this = _super.call(this, containerWidth, containerHeight, rads, rounding) || this;
                return _this.radius = Math.min(_this.scaledHeight, _this.scaledWidth) * cutoutSize / 100, 
                _this;
            }
            return (0, tslib_es6.__extends)(TabRoundCorner, _super), Object.defineProperty(TabRoundCorner.prototype, "scaledShapePath", {
                get: function() {
                    return new Path(cleanDuplicates([ [ "M", 0, 0 ], [ "L", this.scaledWidth - this.radius, 0 ], [ "A", this.radius, this.radius, 0, 0, 1, this.scaledWidth, this.radius ], [ "L", this.scaledWidth, this.scaledHeight ], [ "L", 0, this.scaledHeight ], [ "Z" ] ]));
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(TabRoundCorner.prototype, "normalizedBoundingBoxPath", {
                get: function() {
                    return new Path([ [ "M", 0, 0 ], [ "L", 1, 0 ], [ "L", 1, 1 ], [ "L", 0, 1 ], [ "Z" ] ]);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(TabRoundCorner.prototype, "scaledContentBox", {
                get: function() {
                    var dist = 1 - Math.sqrt(2) / 2;
                    return new ContentBox(0, this.radius * dist, this.scaledWidth - this.radius * dist, this.scaledHeight - this.radius * dist);
                },
                enumerable: !1,
                configurable: !0
            }), TabRoundCorner;
        }(Shape), TabRoundTopCorners = function(_super) {
            function TabRoundTopCorners(containerWidth, containerHeight, rads, rounding, cutoutSizeTop, cutoutSizeBottom) {
                var _this = _super.call(this, containerWidth, containerHeight, rads, rounding) || this;
                return _this.topRadius = Math.min(_this.scaledHeight, _this.scaledWidth) * cutoutSizeTop / 100, 
                _this.bottomRadius = Math.min(_this.scaledHeight, _this.scaledWidth) * cutoutSizeBottom / 100, 
                _this;
            }
            return (0, tslib_es6.__extends)(TabRoundTopCorners, _super), Object.defineProperty(TabRoundTopCorners.prototype, "scaledShapePath", {
                get: function() {
                    return new Path(cleanDuplicates([ [ "M", 0, this.topRadius ], [ "A", this.topRadius, this.topRadius, 0, 0, 1, this.topRadius, 0 ], [ "L", this.scaledWidth - this.topRadius, 0 ], [ "A", this.topRadius, this.topRadius, 0, 0, 1, this.scaledWidth, this.topRadius ], [ "L", this.scaledWidth, this.scaledHeight - this.bottomRadius ], [ "A", this.bottomRadius, this.bottomRadius, 0, 0, 1, this.scaledWidth - this.bottomRadius, this.scaledHeight ], [ "L", this.bottomRadius, this.scaledHeight ], [ "A", this.bottomRadius, this.bottomRadius, 0, 0, 1, 0, this.scaledHeight - this.bottomRadius ], [ "L", 0, this.scaledHeight ], [ "Z" ] ]));
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(TabRoundTopCorners.prototype, "normalizedBoundingBoxPath", {
                get: function() {
                    return new Path([ [ "M", 0, 0 ], [ "L", 1, 0 ], [ "L", 1, 1 ], [ "L", 0, 1 ], [ "Z" ] ]);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(TabRoundTopCorners.prototype, "scaledContentBox", {
                get: function() {
                    var dist = 1 - Math.sqrt(2) / 2;
                    return new ContentBox(this.topRadius * dist, this.topRadius * dist, this.scaledWidth - this.topRadius * dist * 2, this.scaledHeight - this.topRadius * dist - Math.max(this.bottomRadius - this.topRadius * dist, 0));
                },
                enumerable: !1,
                configurable: !0
            }), TabRoundTopCorners;
        }(Shape), Trapezoid = function(_super) {
            function Trapezoid(containerWidth, containerHeight, rads, rounding, trapezoidSlant) {
                var _this = _super.call(this, containerWidth, containerHeight, rads, rounding) || this, angle = (90 - .45 * trapezoidSlant) * Math.PI / 180;
                return _this.triangleWidth = Math.min(_this.scaledWidth / 4, _this.scaledHeight / Math.tan(angle)), 
                _this;
            }
            return (0, tslib_es6.__extends)(Trapezoid, _super), Object.defineProperty(Trapezoid.prototype, "scaledShapePath", {
                get: function() {
                    return new Path([ [ "M", this.triangleWidth, 0 ], [ "L", this.scaledWidth - this.triangleWidth, 0 ], [ "L", this.scaledWidth, this.scaledHeight ], [ "L", 0, this.scaledHeight ], [ "Z" ] ]);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Trapezoid.prototype, "scaledContentBox", {
                get: function() {
                    return new ContentBox(this.triangleWidth, 0, this.scaledWidth - 2 * this.triangleWidth, this.scaledHeight);
                },
                enumerable: !1,
                configurable: !0
            }), Trapezoid;
        }(Shape), TriangleIsoc = function(_super) {
            function TriangleIsoc(containerWidth, containerHeight, rads, rounding, triangleTipPosition) {
                var _this = _super.call(this, containerWidth, containerHeight, rads, rounding) || this;
                return _this.triangleTipPosition = triangleTipPosition / 100, _this;
            }
            return (0, tslib_es6.__extends)(TriangleIsoc, _super), Object.defineProperty(TriangleIsoc.prototype, "normalizedShapePath", {
                get: function() {
                    return new Path([ [ "M", this.triangleTipPosition, 0 ], [ "L", 1, 1 ], [ "L", 0, 1 ], [ "Z" ] ]);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(TriangleIsoc.prototype, "normalizedContentBox", {
                get: function() {
                    return new ContentBox(this.triangleTipPosition / 2, .5, .5, .5);
                },
                enumerable: !1,
                configurable: !0
            }), TriangleIsoc;
        }(Shape), TriangleRight = function(_super) {
            function TriangleRight(containerWidth, containerHeight, rads, rounding) {
                return _super.call(this, containerWidth, containerHeight, rads, rounding) || this;
            }
            return (0, tslib_es6.__extends)(TriangleRight, _super), Object.defineProperty(TriangleRight.prototype, "normalizedShapePath", {
                get: function() {
                    return new Path([ [ "M", 0, 0 ], [ "L", 1, 1 ], [ "L", 0, 1 ], [ "Z" ] ]);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(TriangleRight.prototype, "normalizedContentBox", {
                get: function() {
                    return new ContentBox(0, .5, .5, .5);
                },
                enumerable: !1,
                configurable: !0
            }), TriangleRight;
        }(Shape);
        function cleanDuplicates(pathCommands) {
            for (var i = 0; i < pathCommands.length - 1; i++) {
                var currCommand = pathCommands[i], nextCommand = pathCommands[i + 1];
                if ("M" !== currCommand[0] && "L" !== currCommand[0] || "L" !== nextCommand[0]) {
                    if ("Z" === nextCommand[0] && "L" === currCommand[0]) {
                        var firstCommandPosition = {
                            x: pathCommands[0][1],
                            y: pathCommands[0][2]
                        }, lastCommandPosition = {
                            x: pathCommands[i][1],
                            y: pathCommands[i][2]
                        };
                        firstCommandPosition.x === lastCommandPosition.x && firstCommandPosition.y === lastCommandPosition.y && pathCommands.splice(i, 1);
                    }
                } else {
                    var currPosition = {
                        x: currCommand[1],
                        y: currCommand[2]
                    }, nextPosition = {
                        x: nextCommand[1],
                        y: nextCommand[2]
                    };
                    currPosition.x === nextPosition.x && currPosition.y === nextPosition.y && pathCommands.splice(i + 1, 1);
                }
            }
            return pathCommands;
        }
        function createShape(width, height, shapeProperties, accentBarPosition, accentBarWidth) {
            var shapeRounding = shapeProperties.shapeRounding, tileShape = shapeProperties.tileShape, rotationInRads = shapeProperties.rotation * Math.PI / 180;
            switch (tileShape) {
              case shapeType.m.Arrow:
                return new Arrow(width, height, rotationInRads, shapeRounding, shapeProperties.arrowheadSize, shapeProperties.arrowStemWidth);

              case shapeType.m.ArrowChevron:
                return new ArrowChevron(width, height, rotationInRads, shapeRounding, shapeProperties.chevronAngle);

              case shapeType.m.ArrowPentagon:
                return new ArrowPentagon(width, height, rotationInRads, shapeRounding, shapeProperties.arrowheadSize);

              case shapeType.m.Heart:
                return new Heart(width, height, rotationInRads, shapeRounding);

              case shapeType.m.Hexagon:
                return new Hexagon(width, height, rotationInRads, shapeRounding, shapeProperties.hexagonSlant);

              case shapeType.m.Line:
                return new Line(width, height, rotationInRads);

              case shapeType.m.Octagon:
                return new Octagon(width, height, rotationInRads, shapeRounding, shapeProperties.octagonSnipSize);

              case shapeType.m.Oval:
                return new Oval(width, height, rotationInRads);

              case shapeType.m.Parallelogram:
                return new Parallelogram(width, height, rotationInRads, shapeRounding, shapeProperties.parallelogramSlant);

              case shapeType.m.Pentagon:
                return new Pentagon(width, height, rotationInRads, shapeRounding);

              case shapeType.m.Pill:
                return new Pill(width, height, rotationInRads, shapeRounding);

              case shapeType.m.Rectangle:
                return new Rectangle(width, height, rotationInRads, shapeRounding);

              case shapeType.m.RectangleRounded:
                return shapeProperties.rectangleRoundedCurveCustomStyle ? new RectangleCustomRounded(width, height, rotationInRads, shapeRounding, shapeProperties.rectangleRoundedCurveLeftTop, shapeProperties.rectangleRoundedCurveRightTop, shapeProperties.rectangleRoundedCurveLeftBottom, shapeProperties.rectangleRoundedCurveRightBottom) : new RectangleRounded(width, height, rotationInRads, shapeRounding, shapeProperties.rectangleRoundedCurve);

              case shapeType.m.Speechbubble:
                return new Speechbubble(width, height, rotationInRads, shapeRounding, shapeProperties.speechBubbleHeight, shapeProperties.speechBubbleTailPosition, shapeProperties.speechBubbleTailAngle);

              case shapeType.m.TabCutCorner:
                return new TabCutCorner(width, height, rotationInRads, shapeRounding, shapeProperties.tabCutCornerSnipSizeTopRight);

              case shapeType.m.TabCutTopCorners:
                return shapeProperties.tabCutCornerSnipSizeCustomStyle ? new TabCutTopCustomCorners(width, height, rotationInRads, shapeRounding, shapeProperties.tabCutCornerSnipSizeLeftTop, shapeProperties.tabCutCornerSnipSizeRightTop, shapeProperties.tabCutCornerSnipSizeLeftBottom, shapeProperties.tabCutCornerSnipSizeRightBottom) : new TabCutTopCorners(width, height, rotationInRads, shapeRounding, shapeProperties.tabCutCornerSnipSizeTop, shapeProperties.tabCutCornerSnipSizeBottom);

              case shapeType.m.TabRoundCorner:
                return new TabRoundCorner(width, height, rotationInRads, shapeRounding, shapeProperties.tabRoundCornerTopRight);

              case shapeType.m.TabRoundTopCorners:
                return new TabRoundTopCorners(width, height, rotationInRads, shapeRounding, shapeProperties.tabRoundCornerTop, shapeProperties.tabRoundCornerBottom);

              case shapeType.m.Trapezoid:
                return new Trapezoid(width, height, rotationInRads, shapeRounding, shapeProperties.trapezoidSlant);

              case shapeType.m.TriangleIsoc:
                return new TriangleIsoc(width, height, rotationInRads, shapeRounding, shapeProperties.isocelesTriangleTipPosition);

              case shapeType.m.TriangleRight:
                return new TriangleRight(width, height, rotationInRads, shapeRounding);

              case shapeType.m.AccentBar:
                return new AccentBar(width, height, rotationInRads, shapeRounding, accentBarPosition, accentBarWidth);

              case shapeType.m.TabCutTopCornersByPixel:
                return shapeProperties.tabCutCornerSnipSizeCustomStyle ? new TabCutTopCustomCornersByPixel(width, height, rotationInRads, shapeRounding, shapeProperties.tabCutCornerSnipSizeLeftTop, shapeProperties.tabCutCornerSnipSizeRightTop, shapeProperties.tabCutCornerSnipSizeLeftBottom, shapeProperties.tabCutCornerSnipSizeRightBottom) : new TabCutTopCustomCornersByPixel(width, height, rotationInRads, shapeRounding, shapeProperties.tabCutCornerSnipSizeTop, shapeProperties.tabCutCornerSnipSizeTop, shapeProperties.tabCutCornerSnipSizeBottom, shapeProperties.tabCutCornerSnipSizeBottom);

              case shapeType.m.RectangleRoundedByPixel:
                return shapeProperties.rectangleRoundedCurveCustomStyle ? new RectangleCustomRoundedByPixel(width, height, rotationInRads, shapeRounding, shapeProperties.rectangleRoundedCurveLeftTop, shapeProperties.rectangleRoundedCurveRightTop, shapeProperties.rectangleRoundedCurveLeftBottom, shapeProperties.rectangleRoundedCurveRightBottom) : new RectangleCustomRoundedByPixel(width, height, rotationInRads, shapeRounding, shapeProperties.rectangleRoundedCurve, shapeProperties.rectangleRoundedCurve, shapeProperties.rectangleRoundedCurve, shapeProperties.rectangleRoundedCurve);
            }
            debug.fF.assertNever(tileShape);
        }
        var htmlSubSelectionHelper = __webpack_require__(52287), visualBackgroundHelper = __webpack_require__(45545), linecapType = __webpack_require__(39107), browserUtils = __webpack_require__(59107), Utility = __webpack_require__(38078), color = __webpack_require__(64067), Tile = function() {
            function Tile(supportsKeyboard) {
                void 0 === supportsKeyboard && (supportsKeyboard = !1), this.supportsKeyboard = supportsKeyboard, 
                this.state = "default", this.width = 0, this.height = 0, this.selected = !1, this.id = Utility.b$.generateGuid();
            }
            return Tile.prototype.getState = function(propertySet) {
                var instance = this.state;
                if (this.properties[propertySet]) return (0, tileLibraryConverter.s9)(instance) ? this.properties[propertySet][instance.id] : this.properties[propertySet][instance];
            }, Object.defineProperty(Tile.prototype, "shapeWidth", {
                get: function() {
                    return Math.max(this.width - 2 * this.outsidePadding, 0);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "shapeHeight", {
                get: function() {
                    return Math.max(this.height - 2 * this.outsidePadding, 0);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "shapeType", {
                get: function() {
                    return this.getState("shape").tileShape;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "shapePath", {
                get: function() {
                    return this.shape.shapePathString;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "shapeRounding", {
                get: function() {
                    return this.getState("shape").shapeRounding;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "shapeLinecap", {
                get: function() {
                    return this.getState("shape").linecapType;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "shapeProperties", {
                get: function() {
                    return this.getState("shape");
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "shapePadding", {
                get: function() {
                    return this.shapeType === shapeType.m.Line ? this.shapeLinecap === linecapType.C.Flat ? this.outlineWeight / 2 * Math.abs(Math.sin(this.rotation * Math.PI / 90)) : this.outlineWeight / 2 : 0;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "outsidePadding", {
                get: function() {
                    return this.effectPadding + this.shapePadding;
                },
                enumerable: !1,
                configurable: !0
            }), Tile.prototype.getContentInscribedRectangle = function(contentRads) {
                var boundingBox = this.shape.getContentBoundingBox(contentRads * Math.PI / 180);
                return {
                    left: boundingBox.x + this.outsidePadding,
                    top: boundingBox.y + this.outsidePadding,
                    width: boundingBox.width,
                    height: boundingBox.height
                };
            }, Tile.prototype.getContentInscribedRectangleWithoutBorder = function(contentRads, cardVisualRefUpdate) {
                var boundingBox = cardVisualRefUpdate ? this.shape.getContentBoundingBoxMaxRectangle() : this.shape.getContentBoundingBox(contentRads * Math.PI / 180);
                return {
                    left: boundingBox.x + (this.outlineShow ? this.outlineWeight / 2 : 0) + this.outsidePadding,
                    top: boundingBox.y + (this.outlineShow ? this.outlineWeight / 2 : 0) + this.outsidePadding,
                    width: boundingBox.width,
                    height: boundingBox.height
                };
            }, Object.defineProperty(Tile.prototype, "fillShow", {
                get: function() {
                    return this.getState("fill").show;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "fillColor", {
                get: function() {
                    return this.getState("fill").fillColor;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "fillOpacity", {
                get: function() {
                    return (0, color.TD)(this.getState("fill").fillTransparency);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "fillTransparency", {
                get: function() {
                    return this.getState("fill").fillTransparency;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "fillImage", {
                get: function() {
                    return this.getState("fill").fillImage;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "fillImageAspectRatio", {
                get: function() {
                    switch (this.fillImage && this.fillImage.scaling) {
                      case "Fill":
                        return "xMidYMid slice";

                      case "Fit":
                        return "none";

                      default:
                        return "xMidYMid";
                    }
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "fillImageTransparency", {
                get: function() {
                    return this.getState("fill").fillImageTransparency;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "fillImageSplitTransparency", {
                get: function() {
                    return this.getState("fill").fillImageSplitTransparency;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "hasOutline", {
                get: function() {
                    return !(!this.getState("outline").strokeShow || 0 === this.getState("outline").strokeWidth);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "outlineShow", {
                get: function() {
                    return this.getState("outline").strokeShow;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "outlineColor", {
                get: function() {
                    return this.hasOutline ? this.getState("outline").strokeColor : this.fillColor;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "outlineWeight", {
                get: function() {
                    return Math.max(2 * this.getState("outline").strokeWidth, 1e-6);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "outlineOpacity", {
                get: function() {
                    return this.hasOutline ? (0, color.TD)(this.getState("outline").strokeTransparency) : this.fillOpacity;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "shadowShow", {
                get: function() {
                    return this.getState("shadow").show;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "shadowAnglePreset", {
                get: function() {
                    return this.getState("shadow").shadowPositionPreset;
                },
                enumerable: !1,
                configurable: !0
            }), Tile.prototype.getAngle = function(options) {
                if ("Outer" === options.position) switch (options.anglePreset) {
                  case "centerRight":
                    return 0;

                  case "bottomRight":
                    return 45;

                  case "bottom":
                    return 90;

                  case "bottomLeft":
                    return 135;

                  case "centerLeft":
                    return 180;

                  case "topLeft":
                    return 225;

                  case "top":
                    return 270;

                  case "topRight":
                    return 315;

                  default:
                    return "glow" === options.state ? this.getState("glow").glowAngle : this.getState("shadow").shadowAngle;
                } else if ("Inner" === options.position) switch (options.anglePreset) {
                  case "centerLeft":
                    return 0;

                  case "topLeft":
                    return 45;

                  case "top":
                    return 90;

                  case "topRight":
                    return 135;

                  case "centerRight":
                    return 180;

                  case "bottomRight":
                    return 225;

                  case "bottom":
                    return 270;

                  case "bottomLeft":
                    return 315;

                  default:
                    return "glow" === options.state ? this.getState("glow").glowAngle : this.getState("shadow").shadowAngle;
                }
            }, Object.defineProperty(Tile.prototype, "shadowDistance", {
                get: function() {
                    switch (this.shadowAnglePreset) {
                      case "center":
                        return 0;

                      case "custom":
                        return this.getState("shadow").shadowDistance / 10;

                      default:
                        return 5;
                    }
                },
                enumerable: !1,
                configurable: !0
            }), Tile.prototype.getShadowAngleOptions = function() {
                return {
                    anglePreset: this.shadowAnglePreset,
                    position: this.shadowPosition,
                    state: "shadow"
                };
            }, Object.defineProperty(Tile.prototype, "shadowDx", {
                get: function() {
                    var shadowAngleOptions = this.getShadowAngleOptions();
                    return Math.cos(this.getAngle(shadowAngleOptions) * (Math.PI / 180)) * (this.shadowDistance + ("custom" === this.shadowAnglePreset ? this.shadowSize : 0));
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "shadowDy", {
                get: function() {
                    var shadowAngleOptions = this.getShadowAngleOptions();
                    return Math.sin(this.getAngle(shadowAngleOptions) * (Math.PI / 180)) * (this.shadowDistance + ("custom" === this.shadowAnglePreset ? this.shadowSize : 0));
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "shadowBlur", {
                get: function() {
                    return this.getState("shadow").shadowBlur / 10;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "shadowOpacity", {
                get: function() {
                    return (0, color.TD)(this.getState("shadow").shadowTransparency);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "shadowColor", {
                get: function() {
                    return this.getState("shadow").shadowColor;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "shadowSize", {
                get: function() {
                    return this.getState("shadow").shadowSpread;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "glowShow", {
                get: function() {
                    return this.getState("glow").show;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "glowAnglePreset", {
                get: function() {
                    return this.getState("glow").glowPositionPreset;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "shadowPosition", {
                get: function() {
                    return this.getState("shadow").position;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "glowDistance", {
                get: function() {
                    switch (this.glowAnglePreset) {
                      case "center":
                        return 0;

                      case "custom":
                        return this.getState("glow").glowDistance / 10;

                      default:
                        return 5;
                    }
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "glowSize", {
                get: function() {
                    return this.getState("glow").glowSpread;
                },
                enumerable: !1,
                configurable: !0
            }), Tile.prototype.getGlowAngleOptions = function() {
                return {
                    anglePreset: this.glowAnglePreset,
                    position: this.glowPosition,
                    state: "glow"
                };
            }, Object.defineProperty(Tile.prototype, "glowDx", {
                get: function() {
                    var glowAngleOptions = this.getGlowAngleOptions();
                    return Math.cos(this.getAngle(glowAngleOptions) * (Math.PI / 180)) * (this.glowDistance + ("custom" === this.glowAnglePreset ? this.glowSize : 0));
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "glowDy", {
                get: function() {
                    var glowAngleOptions = this.getGlowAngleOptions();
                    return Math.sin(this.getAngle(glowAngleOptions) * (Math.PI / 180)) * (this.glowDistance + ("custom" === this.glowAnglePreset ? this.glowSize : 0));
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "glowBlur", {
                get: function() {
                    return this.getState("glow").glowBlur / 10;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "glowOpacity", {
                get: function() {
                    return (0, color.TD)(this.getState("glow").glowTransparency);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "glowColor", {
                get: function() {
                    return this.getState("glow").glowColor;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "glowPosition", {
                get: function() {
                    return this.getState("glow").position;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "effectPadding", {
                get: function() {
                    return Math.max(this.shadowShow ? "Inner" === this.shadowPosition ? 0 : 2 * this.shadowBlur + (this.shadowDistance + this.shadowSize) : 0, this.glowShow ? "Inner" === this.glowPosition ? 0 : 2 * this.glowBlur + (this.glowDistance + this.glowSize) : 0);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "rotation", {
                get: function() {
                    return this.getState("shape").rotation;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "cursor", {
                get: function() {
                    return "inherit";
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "accentBarShow", {
                get: function() {
                    var _a;
                    return null === (_a = this.getState("accentBar")) || void 0 === _a ? void 0 : _a.show;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "accentBarPosition", {
                get: function() {
                    var _a;
                    return null === (_a = this.getState("accentBar")) || void 0 === _a ? void 0 : _a.position;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "accentBarColor", {
                get: function() {
                    var _a;
                    return null === (_a = this.getState("accentBar")) || void 0 === _a ? void 0 : _a.color;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "accentBarOpacity", {
                get: function() {
                    var _a;
                    return (0, color.TD)(null === (_a = this.getState("accentBar")) || void 0 === _a ? void 0 : _a.transparency);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "accentBarWidth", {
                get: function() {
                    var _a;
                    return null === (_a = this.getState("accentBar")) || void 0 === _a ? void 0 : _a.width;
                },
                enumerable: !1,
                configurable: !0
            }), Tile.prototype.update = function(options) {
                var _a, _b, _c, _d, _e, _f;
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_g) {
                        switch (_g.label) {
                          case 0:
                            return options && (this.element = null !== (_a = options.element) && void 0 !== _a ? _a : this.element, 
                            this.width = null !== (_b = options.width) && void 0 !== _b ? _b : this.width, this.height = null !== (_c = options.height) && void 0 !== _c ? _c : this.height, 
                            this.properties = null !== (_d = options.properties) && void 0 !== _d ? _d : this.properties, 
                            this.index = null !== (_e = options.cardIndex) && void 0 !== _e ? _e : this.index, 
                            this.ariaLabel = null !== (_f = options.ariaLabel) && void 0 !== _f ? _f : this.ariaLabel), 
                            debug.fF.assertValue(this.element, "tile element"), debug.fF.assertValue(this.width, "tile width"), 
                            debug.fF.assertValue(this.height, "tile height"), debug.fF.assertValue(this.properties, "tile properties"), 
                            this.updateShape(), 0 !== this.element.select("svg.tileSVG").size() ? [ 3, 2 ] : (this.init(), 
                            [ 4, this.afterInit() ]);

                          case 1:
                            _g.sent(), _g.label = 2;

                          case 2:
                            return void 0 === this.selection && this.updateIds(), [ 4, this.beforeRender() ];

                          case 3:
                            return _g.sent(), this.render(), [ 4, this.afterRender() ];

                          case 4:
                            return _g.sent(), [ 2 ];
                        }
                    });
                });
            }, Tile.prototype.init = function() {
                this.selection = this.element.append("svg").attr("class", "tileSVG"), this.accentBarLayer = new AccentBarLayer("front", this.element, this.id);
                var container = this.selection.append("g").attr("id", "container".concat(this.id)), tile = container.append("g").attrs({
                    class: "tile"
                });
                tile.append("path").attr("class", "fill ui-role-button-fill"), tile.append("clipPath").attr("id", "clipPath".concat(this.id)).append("path").attr("class", "clipPathpath"), 
                this.contentSelection = container.append("g").attr("class", "tileContentContainer");
                var defs = container.append("defs");
                defs.append("filter").attrs({
                    class: "invertedShadowFilters",
                    id: "invertedShadowFilters".concat(this.id),
                    filterUnits: "userSpaceOnUse"
                }), defs.append("filter").attrs({
                    class: "invertedGlowFilters",
                    id: "invertedGlowFilters".concat(this.id),
                    filterUnits: "userSpaceOnUse"
                }), defs.append("filter").attrs({
                    class: "shadowFilters",
                    id: "shadowFilters".concat(this.id),
                    filterUnits: "userSpaceOnUse"
                });
            }, Tile.prototype.updateIds = function() {
                this.selection = this.element.select("svg.tileSVG"), this.selection.selectAll("g[id^=container]").attr("id", "container".concat(this.id)), 
                this.selection.select(".invertedShadowFilters").attr("id", "invertedShadowFilters".concat(this.id)), 
                this.selection.select(".invertedGlowFilters").attr("id", "invertedGlowFilters".concat(this.id)), 
                this.selection.select(".shadowFilters").attr("id", "shadowFilters".concat(this.id)), 
                this.selection.select("clipPath").attr("id", "clipPath".concat(this.id)), this.accentBarLayer = new AccentBarLayer("front", this.element, this.id), 
                this.accentBarLayer.restore();
            }, Tile.prototype.render = function() {
                var _this = this;
                this.selection.attrs({
                    width: this.width,
                    height: this.height
                });
                var transform = "translate(".concat(this.outsidePadding, ", ").concat(this.outsidePadding, ")"), filterUrl = this.getFilterUrl(), tile = this.selection.select(".tile").attrs({
                    transform,
                    cursor: this.cursor,
                    filter: filterUrl
                }), fill = tile.select(".fill").classed("selected", this.selected).classed(htmlSubSelectionHelper.cy, !0).attrs({
                    d: this.shapePath,
                    fill: this.fillColor,
                    "fill-opacity": this.fillShow ? this.fillOpacity : 0,
                    stroke: this.outlineShow ? this.outlineColor : "transparent",
                    "stroke-width": this.outlineShow ? this.outlineWeight : 1e-6,
                    "stroke-opacity": this.outlineOpacity,
                    "stroke-linecap": this.shapeLinecap,
                    "clip-path": this.shapeType !== shapeType.m.Line ? "url(#clipPath".concat(this.id, ")") : null
                });
                if (fill.attr(htmlSubSelectionHelper.Ez, "".concat("tile", "_default")), fill.attr(htmlSubSelectionHelper.CK, "Card_Background_Color"), 
                fill.attr(htmlSubSelectionHelper.QZ, 3), this.accentBarShow) {
                    var shapePathString, accentBarProperties = _.clone(this.shapeProperties);
                    accentBarProperties.tileShape = shapeType.m.AccentBar, shapePathString = createShape(this.shapeWidth, this.shapeHeight, accentBarProperties, this.accentBarPosition, this.accentBarWidth).accentBarPathString.toString(), 
                    this.accentBarLayer.render({
                        width: this.width,
                        height: this.height,
                        cursor: this.cursor,
                        transform,
                        filterUrl: "",
                        shapePath: this.shapePath,
                        accentBar: {
                            shape: shapePathString,
                            opacity: this.accentBarOpacity,
                            clipPath: this.shapeType !== shapeType.m.Line ? "url(#clipPath".concat(this.id, ")") : null,
                            color: this.accentBarColor
                        }
                    });
                } else this.accentBarLayer.hide();
                tile.select(".clipPathpath").attr("d", this.shapePath);
                var invertedShadowFilters = this.selection.select(".invertedShadowFilters"), invertedGlowFilters = this.selection.select(".invertedGlowFilters"), shadowFilters = this.selection.select(".shadowFilters");
                invertedShadowFilters.selectAll("*").remove(), invertedGlowFilters.selectAll("*").remove(), 
                shadowFilters.selectAll("*").remove(), "Inner" === this.shadowPosition ? (this.getInvertedFilter(invertedShadowFilters), 
                this.setFilters({
                    dx: this.shadowDx,
                    dy: this.shadowDy,
                    blur: this.shadowBlur,
                    color: this.shadowColor,
                    opacity: this.shadowOpacity,
                    show: this.shadowShow
                }, invertedShadowFilters)) : shadowFilters.append("feDropShadow").attrs({
                    class: "dropshadow",
                    dx: this.shadowDx,
                    dy: this.shadowDy,
                    stdDeviation: this.shadowBlur,
                    "flood-color": this.shadowColor,
                    "flood-opacity": this.shadowShow ? this.shadowOpacity : 0,
                    result: "dropshadow"
                }), "Inner" === this.glowPosition ? (this.getInvertedFilter(invertedGlowFilters), 
                this.setFilters({
                    dx: this.glowDx,
                    dy: this.glowDy,
                    blur: this.glowBlur,
                    color: this.glowColor,
                    opacity: this.glowOpacity,
                    show: this.glowShow
                }, invertedGlowFilters)) : shadowFilters.append("feDropShadow").attrs({
                    class: "glow",
                    dx: this.glowDx,
                    dy: this.glowDy,
                    stdDeviation: this.glowBlur,
                    "flood-color": this.glowColor,
                    "flood-opacity": this.glowShow ? this.glowOpacity : 0,
                    result: "glow"
                });
                var outlineWidth = this.outlineShow ? this.outlineWeight : 0;
                (0, visualBackgroundHelper.Re)({
                    image: this.fillShow ? this.fillImage : void 0,
                    transparency: this.fillImageSplitTransparency ? this.fillImageTransparency : this.fillTransparency
                }, $(this.element.node()), {
                    left: 0 + outlineWidth / 2,
                    top: 0 + outlineWidth / 2,
                    width: this.width - outlineWidth,
                    height: this.height - outlineWidth
                });
                var imageRectangle = this.getContentInscribedRectangle(this.rotation);
                this.element.select(".background-image").style("top", "".concat(imageRectangle.top, "px")).style("left", "".concat(imageRectangle.left, "px")).style("width", "".concat(imageRectangle.width - outlineWidth, "px")).style("height", "".concat(imageRectangle.height - outlineWidth, "px")).style("transform", "rotate(".concat(this.rotation, "deg)")).style("pointer-events", "none"), 
                fill.on("click", function() {
                    return _this.onTileClick();
                }).on("contextmenu", function() {
                    return _this.onTileContextMenu();
                }).on("pointerover", function() {
                    return _this.onPointerOver();
                }).on("pointerleave", function() {
                    return _this.onTilePointerleave();
                }).on("pointerdown", function() {
                    return _this.onTilePointerdown();
                }).on("pointerup", function() {
                    return _this.onTilePointerup();
                }), this.supportsKeyboard && (this.element.attr("tabindex", 0).attr("focusable", !0).attr("aria-pressed", this.selected).on("keydown", function() {
                    return _this.onTileKeydown();
                }), null != this.index && (this.element.attr("aria-posinset", this.index + 1).attr("role", "listitem"), 
                null != this.ariaLabel && this.element.attr("aria-label", this.ariaLabel)));
            }, Tile.prototype.getFilterUrl = function() {
                if (browserUtils.M.isInternetExplorer11() || browserUtils.M.isEdgeLegacy() || !this.shadowShow && !this.glowShow) return null;
                var innerShadow = "Inner" === this.shadowPosition, innerGlow = "Inner" === this.glowPosition, innerShadowUrl = innerShadow ? "url(#invertedShadowFilters".concat(this.id, ")") : "", innerGlowUrl = innerGlow ? "url(#invertedGlowFilters".concat(this.id, ")") : "", shadowUrl = innerShadow && innerGlow ? "" : "url(#shadowFilters".concat(this.id, ")");
                return "".concat(innerShadowUrl, " ").concat(innerGlowUrl, " ").concat(shadowUrl);
            }, Tile.prototype.getInvertedFilter = function(filter) {
                filter.append("feOffset").attr("class", "feOffset"), filter.append("feGaussianBlur").attr("class", "feGaussianBlur"), 
                filter.append("feComposite").attr("class", "feCompositeInvertShadow"), filter.append("feFlood").attr("class", "feFlood"), 
                filter.append("feComposite").attr("class", "feCompositeCutColor"), filter.append("feComposite").attr("class", "feCompositeOverElement");
            }, Tile.prototype.setFilters = function(options, filter) {
                filter.select(".feOffset").attrs({
                    in: "SourceGraphic",
                    dx: options.dx,
                    dy: options.dy,
                    result: "feOffset"
                }), filter.select(".feGaussianBlur").attrs({
                    in: "feOffset",
                    stdDeviation: options.blur,
                    result: "offset-blur"
                }), filter.select(".feCompositeInvertShadow").attrs({
                    operator: "out",
                    in: "SourceGraphic",
                    in2: "offset-blur",
                    result: "inverse"
                }), filter.select(".feFlood").attrs({
                    in: "SourceGraphic",
                    "flood-color": options.color,
                    "flood-opacity": options.show ? options.opacity : 0,
                    result: "color"
                }), filter.select(".feCompositeCutColor").attrs({
                    operator: "in",
                    in: "color",
                    in2: "inverse",
                    result: "shadow"
                }), filter.select(".feCompositeOverElement").attrs({
                    operator: "over",
                    in: "shadow",
                    in2: "SourceGraphic"
                });
            }, Tile.prototype.renderWithoutLifecycleEvents = function() {
                var _this = this;
                browserUtils.M.isPointerTypeTouch(d3.event) ? window.requestAnimationFrame(function() {
                    return _this.render();
                }) : this.render();
            }, Tile.prototype.onPointerOver = function() {
                browserUtils.M.isPointerTypeTouch(d3.event) || this.onTilePointerover();
            }, Tile.prototype.createNewShape = function() {
                return createShape(this.shapeWidth, this.shapeHeight, this.shapeProperties);
            }, Tile.prototype.getAdjustedShapePath = function() {
                var adjustedShapeProperties = _.clone(this.shapeProperties);
                if (this.outlineShow && this.outlineWeight > 0) {
                    var adjustedOutlineWeight = this.outlineWeight / 2;
                    adjustedShapeProperties.rectangleRoundedCurve = adjustedShapeProperties.rectangleRoundedCurve > adjustedOutlineWeight ? adjustedShapeProperties.rectangleRoundedCurve - adjustedOutlineWeight : 0, 
                    adjustedShapeProperties.rectangleRoundedCurveLeftTop = adjustedShapeProperties.rectangleRoundedCurveLeftTop > adjustedOutlineWeight ? adjustedShapeProperties.rectangleRoundedCurveLeftTop - adjustedOutlineWeight : 0, 
                    adjustedShapeProperties.rectangleRoundedCurveRightTop = adjustedShapeProperties.rectangleRoundedCurveRightTop > adjustedOutlineWeight ? adjustedShapeProperties.rectangleRoundedCurveRightTop - adjustedOutlineWeight : 0, 
                    adjustedShapeProperties.rectangleRoundedCurveLeftBottom = adjustedShapeProperties.rectangleRoundedCurveLeftBottom > adjustedOutlineWeight ? adjustedShapeProperties.rectangleRoundedCurveLeftBottom - adjustedOutlineWeight : 0, 
                    adjustedShapeProperties.rectangleRoundedCurveRightBottom = adjustedShapeProperties.rectangleRoundedCurveRightBottom > adjustedOutlineWeight ? adjustedShapeProperties.rectangleRoundedCurveRightBottom - adjustedOutlineWeight : 0, 
                    adjustedShapeProperties.tabCutCornerSnipSizeBottom = adjustedShapeProperties.tabCutCornerSnipSizeBottom > .6 * adjustedOutlineWeight ? adjustedShapeProperties.tabCutCornerSnipSizeBottom - .6 * adjustedOutlineWeight : 0, 
                    adjustedShapeProperties.tabCutCornerSnipSizeTop = adjustedShapeProperties.tabCutCornerSnipSizeTop > .6 * adjustedOutlineWeight ? adjustedShapeProperties.tabCutCornerSnipSizeTop - .6 * adjustedOutlineWeight : 0, 
                    adjustedShapeProperties.tabCutCornerSnipSizeLeftTop = adjustedShapeProperties.tabCutCornerSnipSizeLeftTop > .6 * adjustedOutlineWeight ? adjustedShapeProperties.tabCutCornerSnipSizeLeftTop - .6 * adjustedOutlineWeight : 0, 
                    adjustedShapeProperties.tabCutCornerSnipSizeRightTop = adjustedShapeProperties.tabCutCornerSnipSizeRightTop > .6 * adjustedOutlineWeight ? adjustedShapeProperties.tabCutCornerSnipSizeRightTop - .6 * adjustedOutlineWeight : 0, 
                    adjustedShapeProperties.tabCutCornerSnipSizeLeftBottom = adjustedShapeProperties.tabCutCornerSnipSizeLeftBottom > .6 * adjustedOutlineWeight ? adjustedShapeProperties.tabCutCornerSnipSizeLeftBottom - .6 * adjustedOutlineWeight : 0, 
                    adjustedShapeProperties.tabCutCornerSnipSizeRightBottom = adjustedShapeProperties.tabCutCornerSnipSizeRightBottom > .6 * adjustedOutlineWeight ? adjustedShapeProperties.tabCutCornerSnipSizeRightBottom - .6 * adjustedOutlineWeight : 0;
                }
                return createShape(this.shapeWidth - (this.outlineShow ? this.outlineWeight : 0), this.shapeHeight - (this.outlineShow ? this.outlineWeight : 0), adjustedShapeProperties).shapePathString.toString();
            }, Tile.prototype.updateShape = function() {
                this.shape = this.createNewShape();
            }, Tile.prototype.onTileClick = function() {}, Tile.prototype.onTileContextMenu = function() {}, 
            Tile.prototype.onTileKeydown = function() {}, Tile.prototype.onTilePointerover = function() {}, 
            Tile.prototype.onTilePointerleave = function() {}, Tile.prototype.onTilePointerdown = function() {}, 
            Tile.prototype.onTilePointerup = function() {}, Tile.prototype.afterInit = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        return [ 2 ];
                    });
                });
            }, Tile.prototype.beforeRender = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        return [ 2 ];
                    });
                });
            }, Tile.prototype.afterRender = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        return [ 2 ];
                    });
                });
            }, Tile;
        }(), AccentBarLayer = function() {
            function AccentBarLayer(classPrefix, element, id) {
                this.classPrefix = classPrefix, this.element = element, this.id = id;
            }
            return AccentBarLayer.prototype.init = function() {
                this.svgContaienr = this.element.append("svg").style("position", "absolute").style("z-index", 2).style("pointer-events", "none").attr("class", "".concat(this.classPrefix, "-tile-svg")), 
                this.container = this.svgContaienr.append("g").attr("id", "".concat(this.classPrefix, "Container").concat(this.id)), 
                this.tile = this.container.append("g").attrs({
                    class: "tile"
                }), this.tile.append("clipPath").attr("id", "clipPath".concat(this.id)).append("path").attr("class", "clipPathpath"), 
                this.tile.append("path").attr("class", "accentBar");
            }, AccentBarLayer.prototype.restore = function() {
                this.svgContaienr = this.element.select("svg.".concat(this.classPrefix, "-tile-svg")), 
                this.svgContaienr.empty() || (this.container = this.svgContaienr.select("g[id^=".concat(this.classPrefix, "Container]")).attr("id", "".concat(this.classPrefix, "Container").concat(this.id)), 
                this.tile = this.container.select("g.tile"), this.tile.select("clipPath").attr("id", "clipPathFront".concat(this.id)));
            }, AccentBarLayer.prototype.render = function(parameters) {
                void 0 === this.container && this.init(), this.svgContaienr.style("display", "block"), 
                parameters.accentBar ? (this.svgContaienr.attrs({
                    width: parameters.width,
                    height: parameters.height
                }), this.tile.attrs({
                    transform: parameters.transform,
                    cursor: parameters.cursor,
                    filter: parameters.filterUrl
                }), this.tile.select(".clipPathpath").attr("d", parameters.shapePath), this.tile.select(".accentBar").attrs({
                    d: parameters.accentBar.shape,
                    "fill-opacity": parameters.accentBar.opacity,
                    "clip-path": parameters.accentBar.clipPath,
                    fill: parameters.accentBar.color
                })) : this.svgContaienr.style("display", "none");
            }, AccentBarLayer.prototype.hide = function() {
                this.svgContaienr && this.svgContaienr.style("display", "none");
            }, AccentBarLayer;
        }();
    },
    60810: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            G: function() {
                return LoadMoreDataStatus;
            },
            J: function() {
                return SimpleLoadMoreDataHandler;
            }
        });
        var LoadMoreDataStatus = function(LoadMoreDataStatus) {
            return LoadMoreDataStatus[LoadMoreDataStatus.NoOperation = 0] = "NoOperation", LoadMoreDataStatus[LoadMoreDataStatus.WaitingForData = 1] = "WaitingForData", 
            LoadMoreDataStatus[LoadMoreDataStatus.TriggeredLoadMore = 2] = "TriggeredLoadMore", 
            LoadMoreDataStatus;
        }({}), SimpleLoadMoreDataHandler = function() {
            function SimpleLoadMoreDataHandler(hostServices) {
                this.hostServices = hostServices, this.waitingForData = !1;
            }
            return SimpleLoadMoreDataHandler.prototype.shouldLoadMoreData = function() {
                return this.shouldLoadMoreDataInternal() === LoadMoreDataStatus.TriggeredLoadMore;
            }, SimpleLoadMoreDataHandler.prototype.isLoadingMoreData = function() {
                return this.waitingForData;
            }, SimpleLoadMoreDataHandler.prototype.updateDataView = function(dataView) {
                this.dataView = dataView;
            }, SimpleLoadMoreDataHandler.prototype.loadMoreData = function() {
                var status = this.shouldLoadMoreDataInternal();
                return status === LoadMoreDataStatus.TriggeredLoadMore && (this.hostServices.loadMoreData(), 
                this.waitingForData = !0), status;
            }, SimpleLoadMoreDataHandler.prototype.onLoadMoreDataCompleted = function() {
                this.waitingForData = !1;
            }, SimpleLoadMoreDataHandler.prototype.shouldLoadMoreDataInternal = function() {
                if (!this.dataView) return LoadMoreDataStatus.NoOperation;
                var dataViewMetadata = this.dataView.metadata;
                return this.waitingForData ? LoadMoreDataStatus.WaitingForData : dataViewMetadata && dataViewMetadata.segment ? LoadMoreDataStatus.TriggeredLoadMore : LoadMoreDataStatus.NoOperation;
            }, SimpleLoadMoreDataHandler;
        }();
    }
} ]);