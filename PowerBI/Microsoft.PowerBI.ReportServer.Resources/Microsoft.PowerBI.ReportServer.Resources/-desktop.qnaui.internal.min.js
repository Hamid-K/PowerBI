"use strict";

(self.webpackChunkdesktop = self.webpackChunkdesktop || []).push([ [ "qnaui.internal" ], {
    70940: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            s: function() {
                return getPlugin;
            }
        });
        var _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(47508), _powerbi_legacy_PowerBIVisuals_VisualsCommon_Lazy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(45034), typeToPluginMap = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Lazy__WEBPACK_IMPORTED_MODULE_0__.o(function() {
            var result = {};
            return result[3] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.card, 
            result[13] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.lineClusteredColumnComboChart, 
            result[29] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.multiRowCard, 
            result[7] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.clusteredBarChart, 
            result[10] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.clusteredColumnChart, 
            result[20] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.donutChart, 
            result[16] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.funnel, 
            result[30] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.gauge, 
            result[22] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.heatMap, 
            result[9] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.hundredPercentStackedBarChart, 
            result[12] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.hundredPercentStackedColumnChart, 
            result[4] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.lineChart, 
            result[1] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.map, 
            result[19] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.filledMap, 
            result[2] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.pivotTable, 
            result[5] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.pieChart, 
            result[6] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.scatterChart, 
            result[8] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.barChart, 
            result[11] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.columnChart, 
            result[0] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.tableEx, 
            result[17] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.treemap, 
            result[23] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.waterfallChart, 
            result[26] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.stackedAreaChart, 
            result[27] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.hundredPercentStackedAreaChart, 
            result[32] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.areaChart, 
            result[33] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.ribbonChart, 
            result[34] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.kpi, 
            result[35] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.decompositionTreeVisual, 
            result;
        });
        function getPlugin(type) {
            return typeToPluginMap.getValue()[type];
        }
        new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Lazy__WEBPACK_IMPORTED_MODULE_0__.o(function() {
            var result = {};
            return result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.card.name] = 3, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.lineClusteredColumnComboChart.name] = 13, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.multiRowCard.name] = 29, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.clusteredBarChart.name] = 7, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.clusteredColumnChart.name] = 10, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.donutChart.name] = 20, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.funnel.name] = 16, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.gauge.name] = 30, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.heatMap.name] = 22, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.hundredPercentStackedBarChart.name] = 9, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.hundredPercentStackedColumnChart.name] = 12, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.lineChart.name] = 4, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.map.name] = 1, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.filledMap.name] = 19, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.matrix.name] = 2, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.pivotTable.name] = 2, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.pieChart.name] = 5, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.scatterChart.name] = 6, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.barChart.name] = 8, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.columnChart.name] = 11, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.table.name] = 0, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.tableEx.name] = 0, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.treemap.name] = 17, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.waterfallChart.name] = 23, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.stackedAreaChart.name] = 26, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.hundredPercentStackedAreaChart.name] = 27, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.areaChart.name] = 32, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.ribbonChart.name] = 33, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.kpi.name] = 34, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.decompositionTreeVisual.name] = 35, 
            result;
        });
    },
    75432: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, {
            QnaUIInternalModule: function() {
                return QnaUIInternalModule;
            }
        });
        var common = __webpack_require__(77476), Data_module = __webpack_require__(52910), dialogs_module = __webpack_require__(76966), drag_drop = __webpack_require__(558), ExploreUI_module = __webpack_require__(87121), feature_switch_module = __webpack_require__(76521), lazy_load_module = __webpack_require__(82156), localization_module = __webpack_require__(79061), a11y_module = __webpack_require__(20914), Common = __webpack_require__(35911), pbi_tooltip_module = __webpack_require__(16095), portal = __webpack_require__(22760), Qna_module = __webpack_require__(1931), Telemetry = __webpack_require__(21617), tri_message_bar = __webpack_require__(47768), UILibrary_module = __webpack_require__(94785), VisualHostCore_module = __webpack_require__(3176), tslib_es6 = __webpack_require__(81337), map = __webpack_require__(14172), takeUntil = __webpack_require__(83317), Subject = __webpack_require__(30794), tooltip_theme_service = __webpack_require__(73446), debug = __webpack_require__(62458), fesm2022_core = __webpack_require__(50423), StandaloneUtility3 = __webpack_require__(43286), interpret_listener_service = __webpack_require__(37320), BrowserUtility = __webpack_require__(16808), qna_component_core_utils = __webpack_require__(72129), qna_component_core_service = __webpack_require__(7124), take = __webpack_require__(48787), tap = __webpack_require__(17653), shareReplay = __webpack_require__(57243), distinctUntilChanged = __webpack_require__(77526), share = __webpack_require__(83495), scan = __webpack_require__(18353), filter = __webpack_require__(59973), switchMap = __webpack_require__(81905), debounce = __webpack_require__(46358), withLatestFrom = __webpack_require__(23558), BehaviorSubject = __webpack_require__(35510), fromEvent = __webpack_require__(59787), of = __webpack_require__(11547), combineLatest = __webpack_require__(59017), timer = __webpack_require__(40133), from = __webpack_require__(82762), merge = __webpack_require__(63057), wireClientContractsConversion_util = __webpack_require__(35988), colorUtility = __webpack_require__(1521), constants = __webpack_require__(87632), browserUtils = __webpack_require__(59107), units = __webpack_require__(32105), qna_correctionInfo_util = __webpack_require__(31982), qnaModelUtilsPath = __webpack_require__(65947), qnaProxyPath = __webpack_require__(12123), qna_model_util = __webpack_require__(87974), Utility = __webpack_require__(38078);
        function removeNode(node) {
            node.remove ? node.remove() : node.parentNode && node.parentNode.removeChild ? node.parentNode.removeChild(node) : debug.fF.assertFail("No remove element API found");
        }
        function isComposing(event) {
            return event.isComposing || 229 === event.keyCode;
        }
        function generateUtteranceTextFullCoverageSpans(response) {
            if (debug.fF.assertValue(response, "response"), !_.isEmpty(response.utterance)) {
                for (var utterance = response.utterance, allSpans = [], currentIndex = 0, result = _.first(response.results), _i = 0, resultSpans_1 = result && result.spans || []; _i < resultSpans_1.length; _i++) {
                    var span = resultSpans_1[_i];
                    if (currentIndex < span.startIndex) {
                        var spansBefore = generateFillerTextSpans(utterance, currentIndex, span.startIndex);
                        allSpans.push.apply(allSpans, spansBefore || []);
                    }
                    allSpans.push(span), currentIndex = span.endExcludingIndex;
                }
                if (currentIndex < utterance.length) {
                    var uiSpansAfter = generateFillerTextSpans(utterance, currentIndex, utterance.length);
                    allSpans.push.apply(allSpans, uiSpansAfter || []);
                }
                return allSpans;
            }
        }
        function getSpaceNormalizedString(originalString) {
            return originalString ? originalString.replace(/\s/g, " ") : originalString;
        }
        function findFirstOrLastTextNode(node, findFirst) {
            if (node) {
                if (node.nodeType === Node.TEXT_NODE) return node;
                for (var childNodes = node.childNodes, childNodesCount = _.size(childNodes), _i = 0, orderedChildNodeIndices_1 = findFirst ? _.range(0, childNodesCount) : _.range(childNodesCount - 1, -1, -1); _i < orderedChildNodeIndices_1.length; _i++) {
                    var textNode = findFirstOrLastTextNode(childNodes[orderedChildNodeIndices_1[_i]], findFirst);
                    if (textNode) return textNode;
                }
            }
        }
        function generateFillerTextSpans(utterance, startIndex, endExcludingIndex) {
            for (var spans = [], currentIndex = startIndex; currentIndex < endExcludingIndex; ) {
                var spanStartIndex = currentIndex, spanEndExcludingIndex = void 0, isWhiteSpace = void 0;
                if (/\s/.test(utterance.charAt(currentIndex))) isWhiteSpace = !0, spanEndExcludingIndex = spanStartIndex + 1, 
                currentIndex++; else {
                    isWhiteSpace = !1;
                    var nextSpaceIndex = utterance.indexOf(" ", currentIndex);
                    spanEndExcludingIndex = nextSpaceIndex = nextSpaceIndex > -1 ? Math.min(nextSpaceIndex, endExcludingIndex) : endExcludingIndex, 
                    currentIndex = nextSpaceIndex;
                }
                var spanText = utterance.substring(spanStartIndex, spanEndExcludingIndex);
                spans.push({
                    startIndex: spanStartIndex,
                    endExcludingIndex: spanEndExcludingIndex,
                    text: spanText,
                    isWhiteSpace,
                    isOverlapping: !1,
                    isCorrected: !1,
                    isUnknown: !1,
                    isUsed: !1,
                    state: "none"
                });
            }
            return spans;
        }
        function tryGetAnchorNodeAndOffset(node, nodeTextContentOffset) {
            if (debug.fF.assertValue(node, "The given node must be defined"), debug.fF.assertValue(nodeTextContentOffset >= 0, "The given nodeTextContentOffset must be >= 0"), 
            debug.fF.assert(function() {
                return node.nodeType !== Node.COMMENT_NODE;
            }, "Expect the given node is NOT a comment node"), 0 === nodeTextContentOffset) return {
                node: findFirstOrLastTextNode(node, !0) || node,
                textOrChildNodesOffset: 0
            };
            if (nodeTextContentOffset > node.textContent.length) return {
                node: void 0,
                textOrChildNodesOffset: -1
            };
            if (_.isEmpty(node.childNodes)) return debug.fF.assert(function() {
                return node.nodeType === Node.TEXT_NODE;
            }, "0 < nodeTextContentOffset <= node.textContent.length, and node has no childNodes, then node should be a TEXT_NODE"), 
            {
                node,
                textOrChildNodesOffset: nodeTextContentOffset
            };
            for (var currentPosition = nodeTextContentOffset, index = 0; index < node.childNodes.length; index++) {
                var childNode = node.childNodes.item(index);
                if (childNode.nodeType !== Node.COMMENT_NODE) {
                    var childNodeTextContentLength = childNode.textContent.length;
                    if (!(currentPosition > childNodeTextContentLength)) {
                        if (childNode.nodeType === Node.TEXT_NODE) return {
                            node: childNode,
                            textOrChildNodesOffset: currentPosition
                        };
                        if (currentPosition === childNodeTextContentLength) {
                            var lastTextNode = findFirstOrLastTextNode(childNode, !1);
                            return lastTextNode ? {
                                node: lastTextNode,
                                textOrChildNodesOffset: lastTextNode.textContent.length
                            } : {
                                node,
                                textOrChildNodesOffset: index + 1
                            };
                        }
                        return tryGetAnchorNodeAndOffset(childNode, currentPosition);
                    }
                    currentPosition -= childNodeTextContentLength;
                }
            }
            debug.fF.assertFail("nodeTextContentOffset <= node.textContent.length, there should be a descendant (or same) Node that the given position lands on");
        }
        function ieProofNodeContains(containerNode, node) {
            return !(!containerNode || !node) && (containerNode === node || (node.nodeType === Node.ELEMENT_NODE ? containerNode.contains(node) : ieProofNodeContains(containerNode, node.parentNode)));
        }
        var events = __webpack_require__(35691), autocomplete_utility = __webpack_require__(76598), qnaUnknownTermService = __webpack_require__(63377), high_contrast_css_generation_service = __webpack_require__(64647), screen_reader_service = __webpack_require__(83309), localization_service = __webpack_require__(65181), localize_directive = __webpack_require__(59968), accessible_click_directive = __webpack_require__(44581), _c0 = function(a0, a1, a2, a3, a4) {
            return {
                "font-size": a0,
                "font-family": a1,
                "font-weight": a2,
                "font-style": a3,
                "text-decoration": a4
            };
        };
        function QnaAutocompleteComponent_ul_0_li_1_h4_1_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "h4", 7), fesm2022_core["\u0275\u0275text"](1), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var dropdownGroup_r3 = fesm2022_core["\u0275\u0275nextContext"]().$implicit, ctx_r5 = fesm2022_core["\u0275\u0275nextContext"](2);
                fesm2022_core["\u0275\u0275property"]("ngStyle", fesm2022_core["\u0275\u0275pureFunction5"](2, _c0, ctx_r5.presentation.value.questionFontProperties.size.px + "px", ctx_r5.presentation.value.questionFontProperties.family, ctx_r5.presentation.value.questionFontProperties.bold, ctx_r5.presentation.value.questionFontProperties.italic, ctx_r5.presentation.value.questionFontProperties.underline)), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275textInterpolate"](dropdownGroup_r3.title);
            }
        }
        var _c1 = function(a0) {
            return {
                matchedSegment: a0
            };
        };
        function QnaAutocompleteComponent_ul_0_li_1_ul_2_li_1_div_1_span_1_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "span", 15), fesm2022_core["\u0275\u0275text"](1), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var segment_r14 = ctx.$implicit;
                fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction1"](3, _c1, !segment_r14.isMatched)), 
                fesm2022_core["\u0275\u0275attribute"]("aria-hidden", !0), fesm2022_core["\u0275\u0275advance"](1), 
                fesm2022_core["\u0275\u0275textInterpolate"](segment_r14.text);
            }
        }
        function QnaAutocompleteComponent_ul_0_li_1_ul_2_li_1_div_1_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 13), fesm2022_core["\u0275\u0275template"](1, QnaAutocompleteComponent_ul_0_li_1_ul_2_li_1_div_1_span_1_Template, 2, 5, "span", 14), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var dropdownItem_r9 = fesm2022_core["\u0275\u0275nextContext"]().$implicit;
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngForOf", dropdownItem_r9.textSegments);
            }
        }
        function QnaAutocompleteComponent_ul_0_li_1_ul_2_li_1_div_2_Template(rf, ctx) {
            1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 16), fesm2022_core["\u0275\u0275element"](1, "span", 17), 
            fesm2022_core["\u0275\u0275elementEnd"]());
        }
        var _c2 = function(a0, a1, a2, a3, a4, a5) {
            return {
                backgroundColor: a0,
                "font-size": a1,
                "font-family": a2,
                "font-weight": a3,
                "font-style": a4,
                "text-decoration": a5
            };
        }, _c3 = function(a0, a1, a2, a3) {
            return {
                selected: a0,
                themableBackgroundColorSelected: a1,
                showMoreItem: a2,
                showAsGroupTitle: a3
            };
        };
        function QnaAutocompleteComponent_ul_0_li_1_ul_2_li_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r18 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "li", 10), fesm2022_core["\u0275\u0275listener"]("mouseenter", function() {
                    var i_r10 = fesm2022_core["\u0275\u0275restoreView"](_r18).index, groupIndex_r4 = fesm2022_core["\u0275\u0275nextContext"](2).index, ctx_r16 = fesm2022_core["\u0275\u0275nextContext"](2);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r16.updateHoverItemIndex(groupIndex_r4, i_r10));
                })("accessible-click", function() {
                    var dropdownItem_r9 = fesm2022_core["\u0275\u0275restoreView"](_r18).$implicit, ctx_r19 = fesm2022_core["\u0275\u0275nextContext"](4);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r19.selectDropdownItem(dropdownItem_r9));
                }), fesm2022_core["\u0275\u0275template"](1, QnaAutocompleteComponent_ul_0_li_1_ul_2_li_1_div_1_Template, 2, 1, "div", 11), 
                fesm2022_core["\u0275\u0275template"](2, QnaAutocompleteComponent_ul_0_li_1_ul_2_li_1_div_2_Template, 2, 0, "div", 12), 
                fesm2022_core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var dropdownItem_r9 = ctx.$implicit, i_r10 = ctx.index, groupIndex_r4 = fesm2022_core["\u0275\u0275nextContext"](2).index, ctx_r8 = fesm2022_core["\u0275\u0275nextContext"](2);
                fesm2022_core["\u0275\u0275property"]("ngStyle", fesm2022_core["\u0275\u0275pureFunction6"](5, _c2, ctx_r8.presentation.value.useShellTheme ? "" : i_r10 === ctx_r8.selectedSpanIndex && groupIndex_r4 === ctx_r8.selectedGroupIndex || i_r10 === ctx_r8.hoverSpanIndex && groupIndex_r4 === ctx_r8.hoverGroupIndex ? ctx_r8.presentation.value.hoverColor : ctx_r8.presentation.value.backgroundColor, ctx_r8.presentation.value.questionFontProperties.size.px + "px", ctx_r8.presentation.value.questionFontProperties.family, ctx_r8.presentation.value.questionFontProperties.bold, ctx_r8.presentation.value.questionFontProperties.italic, ctx_r8.presentation.value.questionFontProperties.underline))("ngClass", fesm2022_core["\u0275\u0275pureFunction4"](12, _c3, i_r10 === ctx_r8.selectedSpanIndex && groupIndex_r4 === ctx_r8.selectedGroupIndex || i_r10 === ctx_r8.hoverSpanIndex && groupIndex_r4 === ctx_r8.hoverGroupIndex, i_r10 === ctx_r8.selectedSpanIndex && groupIndex_r4 === ctx_r8.selectedGroupIndex || i_r10 === ctx_r8.hoverSpanIndex && groupIndex_r4 === ctx_r8.hoverGroupIndex, dropdownItem_r9.isShowMore, dropdownItem_r9.isShowMore && ctx_r8.hasGroupTitle)), 
                fesm2022_core["\u0275\u0275attribute"]("aria-selected", i_r10 === ctx_r8.selectedSpanIndex && groupIndex_r4 === ctx_r8.selectedGroupIndex ? "true" : "false"), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", !dropdownItem_r9.isShowMore), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", dropdownItem_r9.isShowMore);
            }
        }
        function QnaAutocompleteComponent_ul_0_li_1_ul_2_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "ul", 8), fesm2022_core["\u0275\u0275template"](1, QnaAutocompleteComponent_ul_0_li_1_ul_2_li_1_Template, 3, 17, "li", 9), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var dropdownGroup_r3 = fesm2022_core["\u0275\u0275nextContext"]().$implicit;
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngForOf", dropdownGroup_r3.groupItems);
            }
        }
        function QnaAutocompleteComponent_ul_0_li_1_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "li", 4), fesm2022_core["\u0275\u0275template"](1, QnaAutocompleteComponent_ul_0_li_1_h4_1_Template, 2, 8, "h4", 5), 
            fesm2022_core["\u0275\u0275template"](2, QnaAutocompleteComponent_ul_0_li_1_ul_2_Template, 2, 1, "ul", 6), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var dropdownGroup_r3 = ctx.$implicit, ctx_r1 = fesm2022_core["\u0275\u0275nextContext"](2);
                fesm2022_core["\u0275\u0275property"]("ngStyle", fesm2022_core["\u0275\u0275pureFunction5"](3, _c0, ctx_r1.presentation.value.questionFontProperties.size.px + "px", ctx_r1.presentation.value.questionFontProperties.family, ctx_r1.presentation.value.questionFontProperties.bold, ctx_r1.presentation.value.questionFontProperties.italic, ctx_r1.presentation.value.questionFontProperties.underline)), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", dropdownGroup_r3.title && (null == dropdownGroup_r3.groupItems ? null : dropdownGroup_r3.groupItems.length) > 0), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", dropdownGroup_r3.groupItems);
            }
        }
        var _c4 = function(a0, a1) {
            return {
                link: a0,
                fixRequestedText: a1
            };
        }, _c5 = function(a0) {
            return {
                "border-top-color": a0
            };
        };
        function QnaAutocompleteComponent_ul_0_h4_2_span_3_Template(rf, ctx) {
            if (1 & rf) {
                var _r24 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "span", 20), fesm2022_core["\u0275\u0275listener"]("accessible-click", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r24);
                    var ctx_r23 = fesm2022_core["\u0275\u0275nextContext"](3);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r23.performActionsInUnknownSpanHeader());
                }), fesm2022_core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r22 = fesm2022_core["\u0275\u0275nextContext"](3);
                fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction2"](3, _c4, !ctx_r22.disableUnknownSpanHeaderSubtitleAction, ctx_r22.isUnknownSpanHeaderForFixRequested))("innerHTML", ctx_r22.unknownSpanHeaderSubtitle, fesm2022_core["\u0275\u0275sanitizeHtml"])("ngStyle", fesm2022_core["\u0275\u0275pureFunction1"](6, _c5, ctx_r22.presentation.value.useShellTheme ? "" : ctx_r22.presentation.value.questionFontProperties.color));
            }
        }
        function QnaAutocompleteComponent_ul_0_h4_2_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "h4", 18)(1, "span"), 
            fesm2022_core["\u0275\u0275text"](2), fesm2022_core["\u0275\u0275elementEnd"](), 
            fesm2022_core["\u0275\u0275template"](3, QnaAutocompleteComponent_ul_0_h4_2_span_3_Template, 1, 8, "span", 19), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r2 = fesm2022_core["\u0275\u0275nextContext"](2);
                fesm2022_core["\u0275\u0275property"]("ngStyle", fesm2022_core["\u0275\u0275pureFunction5"](3, _c0, ctx_r2.presentation.value.questionFontProperties.size.px + "px", ctx_r2.presentation.value.questionFontProperties.family, ctx_r2.presentation.value.questionFontProperties.bold, ctx_r2.presentation.value.questionFontProperties.italic, ctx_r2.presentation.value.questionFontProperties.underline)), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275textInterpolate"](ctx_r2.unknownSpanHeaderTitle), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", ctx_r2.unknownSpanHeaderSubtitle);
            }
        }
        var _c6 = function(a0, a1) {
            return {
                backgroundColor: a0,
                color: a1
            };
        };
        function QnaAutocompleteComponent_ul_0_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "ul", 1), fesm2022_core["\u0275\u0275template"](1, QnaAutocompleteComponent_ul_0_li_1_Template, 3, 9, "li", 2), 
            fesm2022_core["\u0275\u0275template"](2, QnaAutocompleteComponent_ul_0_h4_2_Template, 4, 9, "h4", 3), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r0 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275property"]("ngStyle", fesm2022_core["\u0275\u0275pureFunction2"](3, _c6, ctx_r0.presentation.value.useShellTheme ? "" : ctx_r0.presentation.value.backgroundColor, ctx_r0.presentation.value.useShellTheme ? "" : ctx_r0.presentation.value.questionFontProperties.color)), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngForOf", ctx_r0.autoCompleteViewModel.dropdownGroups), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", ctx_r0.showUnknownSpanHeader);
            }
        }
        var nonBreakingSpace = /\u00a0/g, QnaAutocompleteComponent = function() {
            function QnaAutocompleteComponent(highContrastCssGenerationService, localizationService, screenReaderService, telemetryService, unknownTermService) {
                this.highContrastCssGenerationService = highContrastCssGenerationService, this.localizationService = localizationService, 
                this.screenReaderService = screenReaderService, this.telemetryService = telemetryService, 
                this.unknownTermService = unknownTermService, this.utteranceSelected = new fesm2022_core.EventEmitter, 
                this.fullyExpanded = new fesm2022_core.EventEmitter, this.destroy$ = new Subject.xQ, 
                this.resetSelectedIndices(), this.resetHoverIndices(), this.initializeHighContrastRules();
            }
            return QnaAutocompleteComponent.prototype.ngOnInit = function() {
                var _this = this;
                this.maxItemCountInFullExpansion = this.maxItemCountInFullExpansion > 0 ? this.maxItemCountInFullExpansion : 10, 
                this.maxItemCountInPartialExpansion = this.maxItemCountInPartialExpansion > 0 ? this.maxItemCountInPartialExpansion : 4, 
                debug.fF.assert(function() {
                    return _this.maxItemCountInFullExpansion >= _this.maxItemCountInPartialExpansion;
                }, "maxItemCountInFullExpansion is less than maxItemCountInPartialExpansion. It does not make sense so we are setting maxItemCountInFullExpansion to be maxItemCountInPartialExpansion now."), 
                this.maxItemCountInFullExpansion = Math.max(this.maxItemCountInFullExpansion, this.maxItemCountInPartialExpansion), 
                this.params.pipe((0, takeUntil.R)(this.destroy$)).subscribe(function(paramUpdates) {
                    return _this.generateDropdownItems(paramUpdates);
                }), this.selectPrevious.pipe((0, takeUntil.R)(this.destroy$)).subscribe(function() {
                    return _this.moveSelectionUp();
                }), this.selectNext.pipe((0, takeUntil.R)(this.destroy$)).subscribe(function() {
                    return _this.moveSelectionDown();
                }), this.confirmSelection.pipe((0, takeUntil.R)(this.destroy$)).subscribe(function() {
                    return _this.selectCurrentDropdownItem();
                }), this.initializedTelemetryEvent = this.telemetryService.logEvent(events.dY), 
                this.isInitialized = !0;
            }, QnaAutocompleteComponent.prototype.ngOnDestroy = function() {
                this.destroy$.next(), this.destroy$.complete(), this.screenReaderService.cancelDebounce("qna_autocomplete_item");
            }, QnaAutocompleteComponent.prototype.updateHoverItemIndex = function(groupIndex, index) {
                this.resetSelectedIndices(), this.hoverGroupIndex = groupIndex, this.hoverSpanIndex = index, 
                this.screenReaderCurrentDropdownSelection(groupIndex, index);
            }, QnaAutocompleteComponent.prototype.selectDropdownItem = function(dropdownItem) {
                this.isInitialized && (dropdownItem.isShowMore ? this.expandAllItems() : dropdownItem && dropdownItem.textSegments && (this.utteranceSelected.emit({
                    utterance: dropdownItem.text,
                    tags: [ "Dropdown", "Committed" ]
                }), this.telemetryService.logChildEvent(this.initializedTelemetryEvent, events.$g, {
                    spanState: this.selectedSpan.state
                })));
            }, QnaAutocompleteComponent.prototype.performActionsInUnknownSpanHeader = function() {
                var _a, _b;
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var currentUtterance, resultAction;
                    return (0, tslib_es6.__generator)(this, function(_c) {
                        switch (_c.label) {
                          case 0:
                            return this.disableUnknownSpanHeaderSubtitleAction ? [ 2 ] : (currentUtterance = _.map(this.params.value.spans, function(span) {
                                return span.text;
                            }).join(""), [ 4, this.unknownTermService.handleUnknownTerm(currentUtterance, this.selectedSpan.text, this.params.value.dataSourceArray, this.params.value.exploration, null === (_b = null === (_a = this.params.value.config.header) || void 0 === _a ? void 0 : _a.unknownSpanHeaderConfig) || void 0 === _b ? void 0 : _b.actionType) ]);

                          case 1:
                            return 0 === (resultAction = _c.sent()) ? (this.unknownSpanHeaderSubtitle = this.localizationService.get("Qna_AutoComplete_FixRequestedLabelText"), 
                            this.disableUnknownSpanHeaderSubtitleAction = !0, this.isUnknownSpanHeaderForFixRequested = !0, 
                            this.utteranceSelected.emit({
                                utterance: currentUtterance,
                                tags: [ "Dropdown", "AskToAdd", "Committed" ],
                                showDropdown: !0,
                                action: resultAction
                            })) : this.utteranceSelected.emit({
                                utterance: void 0,
                                action: resultAction
                            }), [ 2 ];
                        }
                    });
                });
            }, Object.defineProperty(QnaAutocompleteComponent.prototype, "hasGroupTitle", {
                get: function() {
                    var _a;
                    return _.some(null === (_a = this.autoCompleteViewModel) || void 0 === _a ? void 0 : _a.dropdownGroups, function(group) {
                        return !_.isEmpty(group.title);
                    });
                },
                enumerable: !1,
                configurable: !0
            }), QnaAutocompleteComponent.prototype.expandAllItems = function() {
                var _this = this;
                debug.fF.assertValue(this.shouldDisplayShowMore, "Expect this be called only when this.shouldDisplayShowMore is true"), 
                debug.fF.assertValue(this.autoCompleteViewModel, "Expect this.autoCompleteViewModel to be defined"), 
                this.shouldDisplayShowMore = !1, debug.fF.assert(function() {
                    return _.last(_.last(_this.autoCompleteViewModel.dropdownGroups).groupItems).isShowMore;
                }, "last group should be for showMore item");
                var lastVisibleGroupIndex = _.size(this.autoCompleteViewModel.dropdownGroups) - 2;
                debug.fF.assert(function() {
                    return lastVisibleGroupIndex >= 0;
                }, "expect lastVisibleGroupIndex>=0 before click ShowMore");
                var lastVisiableItemIndex = _.size(this.autoCompleteViewModel.dropdownGroups[lastVisibleGroupIndex].groupItems) - 1;
                debug.fF.assert(function() {
                    return lastVisiableItemIndex >= 0;
                }, "expect lastVisiableItemIndex>=0 before click ShowMore"), this.autoCompleteViewModel.dropdownGroups = this.allDropdownGroups;
                var newSelectionIndices = getSelectNextIndices(this.autoCompleteViewModel.dropdownGroups, {
                    groupIndex: lastVisibleGroupIndex,
                    itemIndex: lastVisiableItemIndex
                });
                this.selectedGroupIndex = newSelectionIndices.groupIndex, this.selectedSpanIndex = newSelectionIndices.itemIndex, 
                this.screenReaderCurrentDropdownSelection(this.selectedGroupIndex, this.selectedSpanIndex), 
                this.fullyExpanded.emit();
            }, QnaAutocompleteComponent.prototype.moveSelectionUp = function() {
                var _a, _b, _this = this;
                if (this.isInitialized && (!this.selectPrevious || void 0 !== this.selectPrevious.value) && (null === (_a = this.autoCompleteViewModel) || void 0 === _a ? void 0 : _a.dropdownGroups)) {
                    if (debug.fF.assert(function() {
                        return _this.selectedSpanIndex >= 0;
                    }, "Expect selectedSpanIndex >= 0"), this.selectedSpanIndex > 0) this.selectedSpanIndex--; else if (0 === this.selectedSpanIndex) if (this.selectedGroupIndex > 0) this.selectedGroupIndex--, 
                    this.selectedSpanIndex = this.autoCompleteViewModel.dropdownGroups[this.selectedGroupIndex].groupItems.length - 1; else if (0 === this.selectedGroupIndex) this.selectedGroupIndex--; else {
                        this.selectedGroupIndex = this.autoCompleteViewModel.dropdownGroups.length - 1;
                        var lastGroupItems = null === (_b = this.autoCompleteViewModel.dropdownGroups[this.selectedGroupIndex]) || void 0 === _b ? void 0 : _b.groupItems;
                        _.isEmpty(lastGroupItems) || (this.selectedSpanIndex = lastGroupItems.length - 1);
                    }
                    this.resetHoverIndices(), this.screenReaderCurrentDropdownSelection(this.selectedGroupIndex, this.selectedSpanIndex);
                }
            }, QnaAutocompleteComponent.prototype.moveSelectionDown = function() {
                var _a;
                if (this.isInitialized && (!this.selectNext || void 0 !== this.selectNext.value) && (null === (_a = this.autoCompleteViewModel) || void 0 === _a ? void 0 : _a.dropdownGroups)) {
                    var selectNextIndices = getSelectNextIndices(this.autoCompleteViewModel.dropdownGroups, {
                        groupIndex: this.selectedGroupIndex,
                        itemIndex: this.selectedSpanIndex
                    });
                    this.selectedGroupIndex = selectNextIndices.groupIndex, this.selectedSpanIndex = selectNextIndices.itemIndex, 
                    this.resetHoverIndices(), this.screenReaderCurrentDropdownSelection(this.selectedGroupIndex, this.selectedSpanIndex);
                }
            }, QnaAutocompleteComponent.prototype.selectCurrentDropdownItem = function() {
                var _a, _b;
                if (this.isInitialized && (!this.confirmSelection || void 0 !== this.confirmSelection.value)) {
                    var dropdownGroups = null === (_a = this.autoCompleteViewModel) || void 0 === _a ? void 0 : _a.dropdownGroups, selectedGroupItems = dropdownGroups && (null === (_b = dropdownGroups[this.selectedGroupIndex]) || void 0 === _b ? void 0 : _b.groupItems);
                    selectedGroupItems && selectedGroupItems[this.selectedSpanIndex] ? this.selectDropdownItem(selectedGroupItems[this.selectedSpanIndex]) : this.utteranceSelected.emit({
                        utterance: void 0
                    });
                }
            }, QnaAutocompleteComponent.prototype.currentDropdownString = function(groupIndex, itemIndex) {
                var _a, selectedGroupItems = null === (_a = this.autoCompleteViewModel.dropdownGroups[groupIndex]) || void 0 === _a ? void 0 : _a.groupItems, currentDropdownItem = selectedGroupItems && selectedGroupItems[itemIndex];
                if (currentDropdownItem) return currentDropdownItem.isShowMore ? currentDropdownItem.text : _.map(currentDropdownItem.textSegments, function(segment) {
                    return segment.text;
                }).join("").replace(nonBreakingSpace, " ");
            }, QnaAutocompleteComponent.prototype.screenReaderCurrentDropdownSelection = function(selectedGroupIndex, selectedSpanIndex) {
                var dropdownString = this.currentDropdownString(selectedGroupIndex, selectedSpanIndex);
                if (dropdownString) {
                    var title = this.autoCompleteViewModel.dropdownGroups[selectedGroupIndex].title;
                    this.screenReaderService.alertWithDebounce("qna_autocomplete_item", title ? title + " " + dropdownString : dropdownString);
                }
            }, QnaAutocompleteComponent.prototype.generateDropdownItems = function(params) {
                if (params) {
                    var spans = params.spans, position = params.cursorPosition;
                    this.resetSelectedIndices(), this.resetHoverIndices();
                    var spanIndex = (0, autocomplete_utility._6)(spans, position);
                    if (-1 !== spanIndex) {
                        this.unknownSpanHeaderTitle = void 0, this.unknownSpanHeaderSubtitle = void 0, this.selectedSpan = spans[spanIndex], 
                        this.showUnknownSpanHeader = !1, this.disableUnknownSpanHeaderSubtitleAction = !1, 
                        this.isUnknownSpanHeaderForFixRequested = !1;
                        var viewModel = (0, autocomplete_utility.d0)(params, spanIndex, this.localizationService);
                        if (this.allDropdownGroups = (0, autocomplete_utility.$v)(viewModel.dropdownGroups, this.maxItemCountInFullExpansion), 
                        this.autoCompleteViewModel = _.merge({}, viewModel, {
                            dropdownGroups: this.allDropdownGroups
                        }), this.showAutoCompleteDropdown = !_.isEmpty(this.allDropdownGroups), this.generateUnknownSpanTitle(params, spanIndex), 
                        this.resetExpansionState(), this.showAutoCompleteDropdown) {
                            var visibleItemsCount = _.sum(this.autoCompleteViewModel.dropdownGroups.map(function(g) {
                                return _.size(g.groupItems);
                            }));
                            this.shouldDisplayShowMore && visibleItemsCount--;
                            var readerContent = this.localizationService.format("Qna_ScreenReader_SuggestionsOpened_NoTerm", [ "".concat(visibleItemsCount) ]);
                            this.screenReaderService.alertWithDebounce("qna_autocomplete_open", readerContent);
                        } else this.screenReaderService.cancelDebounce("qna_autocomplete_open");
                    } else this.showAutoCompleteDropdown = !1;
                }
            }, QnaAutocompleteComponent.prototype.generateUnknownSpanTitle = function(params, selectSpanIndex) {
                var _a, _b, _c, _d, _this = this;
                if ("none" === (null === (_b = null === (_a = params.config.header) || void 0 === _a ? void 0 : _a.unknownSpanHeaderConfig) || void 0 === _b ? void 0 : _b.actionType)) return this.showUnknownSpanHeader = !1, 
                this.unknownSpanHeaderTitle = void 0, void (this.unknownSpanHeaderSubtitle = void 0);
                var spans = params.spans, lastDropdownGroup = _.last(this.allDropdownGroups);
                if ((null == lastDropdownGroup ? void 0 : lastDropdownGroup.title) && this.unknownTermService) {
                    var currentUtterance = _.map(spans, function(span) {
                        return span.text;
                    }).join(""), unknownSpanHeaderActionType_1 = null === (_d = null === (_c = params.config.header) || void 0 === _c ? void 0 : _c.unknownSpanHeaderConfig) || void 0 === _d ? void 0 : _d.actionType;
                    if (lastDropdownGroup.title === this.localizationService.get("Qna_DidYouMean_LabelTextWithColon")) debug.fF.assert(function() {
                        var _a;
                        return null === (_a = params.config.header) || void 0 === _a ? void 0 : _a.show;
                    }, "Expect params.config.header?.show to be true when lastDropdownGroup.title is not empty"), 
                    "textOnlyHeader" === unknownSpanHeaderActionType_1 || this.unknownTermService.wasUtteranceAdded(currentUtterance, this.selectedSpan.text) || (this.unknownSpanHeaderTitle = this.localizationService.get("Qna_AutoComplete_UnusedTermWithAlternatesTitle"), 
                    this.unknownSpanHeaderSubtitle = this.unknownTermService.getLabel(spans[selectSpanIndex], unknownSpanHeaderActionType_1, params.modelOwner), 
                    this.showUnknownSpanHeader = !0); else if (lastDropdownGroup.title === this.localizationService.get("Qna_AutoComplete_UnknowTermWithNoAlternatesTitle")) if (debug.fF.assert(function() {
                        var _a;
                        return null === (_a = params.config.header) || void 0 === _a ? void 0 : _a.show;
                    }, "Expect params.config.header?.show to be true when lastDropdownGroup.title is not empty"), 
                    this.showUnknownSpanHeader = !0, "textOnlyHeader" === unknownSpanHeaderActionType_1) {
                        this.unknownSpanHeaderTitle = void 0;
                        var customizeTitle = params.config.header.unknownSpanHeaderConfig.textOnlyTemplate;
                        if (customizeTitle) {
                            var convertedVariables = _.map(customizeTitle.variables, function(variable) {
                                var result = 1 === variable.type ? _this.selectedSpan.text : variable.text;
                                return variable.isBold ? (0, autocomplete_utility.Je)(result) : result;
                            });
                            this.unknownSpanHeaderSubtitle = this.localizationService.format(customizeTitle.template, convertedVariables);
                        } else this.unknownSpanHeaderSubtitle = this.localizationService.get("Qna_AutoComplete_UnknowTermWithNoAlternatesTitle");
                        this.disableUnknownSpanHeaderSubtitleAction = !0;
                    } else this.unknownTermService.wasUtteranceAdded(currentUtterance, this.selectedSpan.text) ? (this.unknownSpanHeaderTitle = this.localizationService.get("Qna_AutoComplete_UnknowTermHasAlreadyBeenAdded"), 
                    this.disableUnknownSpanHeaderSubtitleAction = !0, this.isUnknownSpanHeaderForFixRequested = !0) : (debug.fF.assert(function() {
                        return "askToAdd" === unknownSpanHeaderActionType_1 || "defineInTooling" === unknownSpanHeaderActionType_1;
                    }, "Expect the actionType is either AskToAdd or DefineInTooling"), this.unknownSpanHeaderTitle = this.localizationService.get("Qna_AutoComplete_UnknowTermWithNoAlternatesTitle"), 
                    this.unknownSpanHeaderSubtitle = this.unknownTermService.getLabel(spans[selectSpanIndex], unknownSpanHeaderActionType_1, params.modelOwner));
                }
            }, QnaAutocompleteComponent.prototype.resetExpansionState = function() {
                var _a, _b;
                debug.fF.assertValue(this.autoCompleteViewModel, "Expect this.autoCompleteViewModel to be defined"), 
                this.autoCompleteViewModel.dropdownGroups = (0, autocomplete_utility.$v)(this.allDropdownGroups, this.showUnknownSpanHeader ? this.maxItemCountInPartialExpansion - 1 : this.maxItemCountInPartialExpansion), 
                this.shouldDisplayShowMore = _.size(this.autoCompleteViewModel.dropdownGroups) < _.size(this.allDropdownGroups) || _.size(null === (_a = _.last(this.autoCompleteViewModel.dropdownGroups)) || void 0 === _a ? void 0 : _a.groupItems) < _.size(null === (_b = _.last(this.allDropdownGroups)) || void 0 === _b ? void 0 : _b.groupItems), 
                this.shouldDisplayShowMore && this.autoCompleteViewModel.dropdownGroups.push({
                    groupItems: [ {
                        isShowMore: !0,
                        text: this.localizationService.get("ShowMore"),
                        textSegments: [],
                        score: 0
                    } ]
                });
            }, QnaAutocompleteComponent.prototype.initializeHighContrastRules = function() {
                this.highContrastCssGenerationService.addRule(".themeableElement .link", "{ color: var(--link-color) !important; opacity: 1 !important; }");
            }, QnaAutocompleteComponent.prototype.resetHoverIndices = function() {
                this.hoverGroupIndex = -1, this.hoverSpanIndex = 0;
            }, QnaAutocompleteComponent.prototype.resetSelectedIndices = function() {
                this.selectedGroupIndex = -1, this.selectedSpanIndex = 0;
            }, QnaAutocompleteComponent.\u0275fac = function(t) {
                return new (t || QnaAutocompleteComponent)(fesm2022_core["\u0275\u0275directiveInject"](high_contrast_css_generation_service.g), fesm2022_core["\u0275\u0275directiveInject"](localization_service.o), fesm2022_core["\u0275\u0275directiveInject"](screen_reader_service.g), fesm2022_core["\u0275\u0275directiveInject"](Telemetry.y0), fesm2022_core["\u0275\u0275directiveInject"](qnaUnknownTermService.U, 8));
            }, QnaAutocompleteComponent.\u0275cmp = fesm2022_core["\u0275\u0275defineComponent"]({
                type: QnaAutocompleteComponent,
                selectors: [ [ "qna-autocomplete" ] ],
                inputs: {
                    maxItemCountInFullExpansion: "maxItemCountInFullExpansion",
                    maxItemCountInPartialExpansion: "maxItemCountInPartialExpansion",
                    params: "params",
                    presentation: "presentation",
                    selectPrevious: "selectPrevious",
                    selectNext: "selectNext",
                    confirmSelection: "confirmSelection"
                },
                outputs: {
                    utteranceSelected: "utteranceSelected",
                    fullyExpanded: "fullyExpanded"
                },
                decls: 1,
                vars: 1,
                consts: [ [ "id", "qnaAutoComplete", "role", "listbox", "class", "qnaAutoComplete themeableElement highContrastBorder", 3, "ngStyle", 4, "ngIf" ], [ "id", "qnaAutoComplete", "role", "listbox", 1, "qnaAutoComplete", "themeableElement", "highContrastBorder", 3, "ngStyle" ], [ "class", "groupItem", "drag-resize-disabled", "true", 3, "ngStyle", 4, "ngFor", "ngForOf" ], [ "class", "unknownTermTitle", 3, "ngStyle", 4, "ngIf" ], [ "drag-resize-disabled", "true", 1, "groupItem", 3, "ngStyle" ], [ "class", "dropdownGroupTitle", 3, "ngStyle", 4, "ngIf" ], [ "class", "dropdownGroupItems", 4, "ngIf" ], [ 1, "dropdownGroupTitle", 3, "ngStyle" ], [ 1, "dropdownGroupItems" ], [ "class", "singleDropdownItem", "role", "option", "data-testid", "single-dropdown-item", 3, "ngStyle", "ngClass", "mouseenter", "accessible-click", 4, "ngFor", "ngForOf" ], [ "role", "option", "data-testid", "single-dropdown-item", 1, "singleDropdownItem", 3, "ngStyle", "ngClass", "mouseenter", "accessible-click" ], [ "class", "singleDropdownItemTextContainer", 4, "ngIf" ], [ "class", "singleDropdownItemTextContainer showMoreItem", 4, "ngIf" ], [ 1, "singleDropdownItemTextContainer" ], [ 3, "ngClass", 4, "ngFor", "ngForOf" ], [ 3, "ngClass" ], [ 1, "singleDropdownItemTextContainer", "showMoreItem" ], [ "localize", "ShowMore" ], [ 1, "unknownTermTitle", 3, "ngStyle" ], [ "tabindex", "0", "drag-resize-disabled", "true", 3, "ngClass", "innerHTML", "ngStyle", "accessible-click", 4, "ngIf" ], [ "tabindex", "0", "drag-resize-disabled", "true", 3, "ngClass", "innerHTML", "ngStyle", "accessible-click" ] ],
                template: function(rf, ctx) {
                    1 & rf && fesm2022_core["\u0275\u0275template"](0, QnaAutocompleteComponent_ul_0_Template, 3, 6, "ul", 0), 
                    2 & rf && fesm2022_core["\u0275\u0275property"]("ngIf", ctx.showAutoCompleteDropdown);
                },
                dependencies: [ common.NgClass, common.NgForOf, common.NgIf, common.NgStyle, localize_directive.X, accessible_click_directive.t ],
                styles: [ '.qnaAutoComplete[_ngcontent-%COMP%]{display:block;position:absolute;left:0;width:100%;border-radius:2px;box-shadow:0 1.2px 3.6px rgba(0,0,0,.11),0 6.4px 14.4px rgba(0,0,0,.13);background-color:var(--colorNeutralBackground1);color:var(--colorNeutralForeground1)}.qnaAutoComplete[_ngcontent-%COMP%]   .dropdownGroupTitle[_ngcontent-%COMP%], .qnaAutoComplete[_ngcontent-%COMP%]   .unknownTermTitle[_ngcontent-%COMP%], .qnaAutoComplete[_ngcontent-%COMP%]   .dropdownGroupItems[_ngcontent-%COMP%]   .singleDropdownItem.showMoreItem.showAsGroupTitle[_ngcontent-%COMP%]{font-family:Segoe UI Semibold,wf_segoe-ui_semibold,helvetica,arial,sans-serif;background-color:transparent;margin:0;white-space:pre-wrap}html:not([dir="rtl"])[_nghost-%COMP%]   .qnaAutoComplete[_ngcontent-%COMP%]   .dropdownGroupTitle[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .qnaAutoComplete[_ngcontent-%COMP%]   .dropdownGroupTitle[_ngcontent-%COMP%], html:not([dir="rtl"])[_nghost-%COMP%]   .qnaAutoComplete[_ngcontent-%COMP%]   .unknownTermTitle[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .qnaAutoComplete[_ngcontent-%COMP%]   .unknownTermTitle[_ngcontent-%COMP%], html:not([dir="rtl"])[_nghost-%COMP%]   .qnaAutoComplete[_ngcontent-%COMP%]   .dropdownGroupItems[_ngcontent-%COMP%]   .singleDropdownItem.showMoreItem.showAsGroupTitle[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .qnaAutoComplete[_ngcontent-%COMP%]   .dropdownGroupItems[_ngcontent-%COMP%]   .singleDropdownItem.showMoreItem.showAsGroupTitle[_ngcontent-%COMP%]{padding:4px 8px 8px}html[dir="rtl"][_nghost-%COMP%]   .qnaAutoComplete[_ngcontent-%COMP%]   .dropdownGroupTitle[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .qnaAutoComplete[_ngcontent-%COMP%]   .dropdownGroupTitle[_ngcontent-%COMP%], html[dir="rtl"][_nghost-%COMP%]   .qnaAutoComplete[_ngcontent-%COMP%]   .unknownTermTitle[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .qnaAutoComplete[_ngcontent-%COMP%]   .unknownTermTitle[_ngcontent-%COMP%], html[dir="rtl"][_nghost-%COMP%]   .qnaAutoComplete[_ngcontent-%COMP%]   .dropdownGroupItems[_ngcontent-%COMP%]   .singleDropdownItem.showMoreItem.showAsGroupTitle[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .qnaAutoComplete[_ngcontent-%COMP%]   .dropdownGroupItems[_ngcontent-%COMP%]   .singleDropdownItem.showMoreItem.showAsGroupTitle[_ngcontent-%COMP%]{padding:4px 8px 8px}.qnaAutoComplete[_ngcontent-%COMP%]   .dropdownGroupItems[_ngcontent-%COMP%]   .singleDropdownItem[_ngcontent-%COMP%]{background-color:var(--colorNeutralBackground1)}.qnaAutoComplete[_ngcontent-%COMP%]   .dropdownGroupItems[_ngcontent-%COMP%]   .singleDropdownItem.selected[_ngcontent-%COMP%]{background-color:var(--colorNeutralBackground1Hover)}.qnaAutoComplete[_ngcontent-%COMP%]   .unknownTermTitle[_ngcontent-%COMP%]{font-weight:400!important;border-top-color:var(--colorNeutralForeground1)}.qnaAutoComplete[_ngcontent-%COMP%]   .unknownTermTitle[_ngcontent-%COMP%]   .link[_ngcontent-%COMP%]{color:var(--colorBrandForegroundLink);text-decoration:none;cursor:pointer!important}.qnaAutoComplete[_ngcontent-%COMP%]   .unknownTermTitle[_ngcontent-%COMP%]   .fixRequestedText[_ngcontent-%COMP%]{font-weight:700!important}.qnaAutoComplete[_ngcontent-%COMP%]   .groupItem[_ngcontent-%COMP%]{display:block;text-decoration:none}.qnaAutoComplete[_ngcontent-%COMP%]   .groupItem[_ngcontent-%COMP%]   .dropdownGroupItems[_ngcontent-%COMP%]{list-style:none;z-index:2;cursor:pointer;display:block;position:relative;margin-top:0!important;overflow:visible;white-space:pre-wrap}.qnaAutoComplete[_ngcontent-%COMP%]   .dropdownGroupItems[_ngcontent-%COMP%]   .singleDropdownItem[_ngcontent-%COMP%]{display:flex;flex-direction:row;margin:0;background-color:transparent;overflow-wrap:break-word}html:not([dir="rtl"])[_nghost-%COMP%]   .qnaAutoComplete[_ngcontent-%COMP%]   .dropdownGroupItems[_ngcontent-%COMP%]   .singleDropdownItem[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .qnaAutoComplete[_ngcontent-%COMP%]   .dropdownGroupItems[_ngcontent-%COMP%]   .singleDropdownItem[_ngcontent-%COMP%]{padding:4px 0 8px 16px}html[dir="rtl"][_nghost-%COMP%]   .qnaAutoComplete[_ngcontent-%COMP%]   .dropdownGroupItems[_ngcontent-%COMP%]   .singleDropdownItem[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .qnaAutoComplete[_ngcontent-%COMP%]   .dropdownGroupItems[_ngcontent-%COMP%]   .singleDropdownItem[_ngcontent-%COMP%]{padding:4px 16px 8px 0}.qnaAutoComplete[_ngcontent-%COMP%]   .dropdownGroupItems[_ngcontent-%COMP%]   .singleDropdownItem[_ngcontent-%COMP%]:focus{outline:var(--focus-two-tone-outline-definition, auto 1px);outline-color:var(--focus-two-tone-outline-color, -webkit-focus-ring-color);outline-offset:-1px}.qnaAutoComplete[_ngcontent-%COMP%]   .dropdownGroupItems[_ngcontent-%COMP%]   .singleDropdownItem[_ngcontent-%COMP%]   .singleDropdownItemTextContainer[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{display:inline}.qnaAutoComplete[_ngcontent-%COMP%]   .dropdownGroupItems[_ngcontent-%COMP%]   .singleDropdownItem.showMoreItem[_ngcontent-%COMP%]{color:var(--colorBrandForegroundLink)}.qnaAutoComplete[_ngcontent-%COMP%]   .matchedSegment[_ngcontent-%COMP%]{font-weight:700}' ]
            }), QnaAutocompleteComponent;
        }();
        function getSelectNextIndices(dropdownGroups, currentIndices) {
            var _a;
            debug.fF.assertValue(dropdownGroups, "Expect dropdownGroups to be defined"), debug.fF.assert(function() {
                return currentIndices.itemIndex >= 0;
            }, "Expect currentIndices.itemIndex >= 0");
            var currentGroupIndex = currentIndices.groupIndex, currentItemIndex = currentIndices.itemIndex, selectedGroupItems = null === (_a = dropdownGroups[currentGroupIndex]) || void 0 === _a ? void 0 : _a.groupItems;
            return selectedGroupItems && currentItemIndex === selectedGroupItems.length - 1 ? currentGroupIndex >= dropdownGroups.length - 1 ? {
                groupIndex: -1,
                itemIndex: 0
            } : {
                groupIndex: currentGroupIndex + 1,
                itemIndex: 0
            } : currentGroupIndex < 0 ? {
                groupIndex: 0,
                itemIndex: 0
            } : {
                groupIndex: currentGroupIndex,
                itemIndex: currentItemIndex + 1
            };
        }
        var conceptual_schema_proxy_service = __webpack_require__(26898), data_sources_service = __webpack_require__(83008), exploration_navigation_service = __webpack_require__(39503), feature_switch_service = __webpack_require__(9380), lazy_provider = __webpack_require__(57786), undo_redo_service = __webpack_require__(84281), linguistic_schema_proxy_service = __webpack_require__(52298), localize_attr_directive = __webpack_require__(22844), tooltip_directive = __webpack_require__(1240), qna_input_v2_component_c0 = [ "contentElementExtraContainer" ], qna_input_v2_component_c1 = [ "deleteButton" ], qna_input_v2_component_c2 = [ "commitButton" ], qna_input_v2_component_c3 = [ "autoComplete" ], qna_input_v2_component_c4 = [ "contentElement" ], qna_input_v2_component_c5 = [ "qnaInputContainer" ], qna_input_v2_component_c6 = [ "beginGripper" ], _c7 = [ "endGripper" ], _c8 = [ "spanElement" ], _c9 = function(a0, a1, a2, a3) {
            return {
                width: a0,
                height: a1,
                right: a2,
                top: a3
            };
        }, _c10 = function(a0) {
            return {
                "stroke-width": a0
            };
        };
        function QnaInputV2Component_ng_container_0_div_1_ng_container_1_span_4__svg_svg_1_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275namespaceSVG"](), fesm2022_core["\u0275\u0275elementStart"](0, "svg", 19), 
            fesm2022_core["\u0275\u0275element"](1, "circle", 20), fesm2022_core["\u0275\u0275elementEnd"]()), 
            2 & rf) {
                var questionIconProps_r13 = fesm2022_core["\u0275\u0275nextContext"]().ngIf, presentation_r1 = fesm2022_core["\u0275\u0275nextContext"](3).ngIf;
                fesm2022_core["\u0275\u0275property"]("ngStyle", fesm2022_core["\u0275\u0275pureFunction4"](7, _c9, questionIconProps_r13.meatball.width + "px", questionIconProps_r13.meatball.height + "px", questionIconProps_r13.meatball.right + "px", questionIconProps_r13.meatball.top + "px")), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngStyle", fesm2022_core["\u0275\u0275pureFunction1"](12, _c10, questionIconProps_r13.meatball.strokeWidth + "px")), 
                fesm2022_core["\u0275\u0275attribute"]("stroke", questionIconProps_r13.meatball.strokeColor)("fill", presentation_r1.useShellTheme ? "" : questionIconProps_r13.meatball.fillColor)("r", questionIconProps_r13.meatball.r)("cx", questionIconProps_r13.meatball.cx)("cy", questionIconProps_r13.meatball.cy);
            }
        }
        var _c11 = function(a0, a1, a2) {
            return {
                notClickable: a0,
                loadingIcon: a1,
                warningIcon: a2
            };
        }, _c12 = function(a0, a1) {
            return {
                color: a0,
                "font-size": a1
            };
        };
        function QnaInputV2Component_ng_container_0_div_1_ng_container_1_span_4_Template(rf, ctx) {
            if (1 & rf) {
                var _r18 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "span", 17), fesm2022_core["\u0275\u0275listener"]("accessible-click", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r18);
                    var ctx_r17 = fesm2022_core["\u0275\u0275nextContext"](4);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r17.resetAllState());
                }), fesm2022_core["\u0275\u0275template"](1, QnaInputV2Component_ng_container_0_div_1_ng_container_1_span_4__svg_svg_1_Template, 2, 14, "svg", 18), 
                fesm2022_core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var questionIconProps_r13 = ctx.ngIf, inputBoxInfo_r4 = fesm2022_core["\u0275\u0275nextContext"](2).ngIf, presentation_r1 = fesm2022_core["\u0275\u0275nextContext"]().ngIf, ctx_r12 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction3"](6, _c11, ctx_r12.noResetAllActionIndication, "loading" === questionIconProps_r13.state, "warning" === questionIconProps_r13.state))("ngStyle", fesm2022_core["\u0275\u0275pureFunction2"](10, _c12, presentation_r1.useShellTheme ? "" : presentation_r1.questionFontProperties.color, inputBoxInfo_r4.iconFontSize + "px"))("pbi-tooltip", questionIconProps_r13.tooltipConfig), 
                fesm2022_core["\u0275\u0275attribute"]("aria-label", questionIconProps_r13.ariaLabel)("role", "normal" !== questionIconProps_r13.state ? "alert" : "button"), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", "normal" !== questionIconProps_r13.state);
            }
        }
        var _c13 = function(a0) {
            return {
                width: a0
            };
        }, _c14 = function(a0) {
            return {
                "font-size": a0
            };
        }, _c15 = function(a0, a1, a2, a3) {
            return {
                state: a0,
                ariaLabel: a1,
                tooltipConfig: a2,
                meatball: a3
            };
        };
        function QnaInputV2Component_ng_container_0_div_1_ng_container_1_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275elementStart"](1, "div", 14)(2, "span", 15), 
            fesm2022_core["\u0275\u0275text"](3, "\xa0"), fesm2022_core["\u0275\u0275elementEnd"](), 
            fesm2022_core["\u0275\u0275template"](4, QnaInputV2Component_ng_container_0_div_1_ng_container_1_span_4_Template, 2, 13, "span", 16), 
            fesm2022_core["\u0275\u0275pipe"](5, "async"), fesm2022_core["\u0275\u0275pipe"](6, "async"), 
            fesm2022_core["\u0275\u0275pipe"](7, "async"), fesm2022_core["\u0275\u0275pipe"](8, "async"), 
            fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275elementContainerEnd"]()), 
            2 & rf) {
                var inputBoxInfo_r4 = fesm2022_core["\u0275\u0275nextContext"]().ngIf, presentation_r1 = fesm2022_core["\u0275\u0275nextContext"]().ngIf, ctx_r5 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngStyle", fesm2022_core["\u0275\u0275pureFunction1"](11, _c13, null != ctx_r5.fullConfig && ctx_r5.fullConfig.showQuestionIcon ? inputBoxInfo_r4.iconFontSize + "px" : 0)), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngStyle", fesm2022_core["\u0275\u0275pureFunction1"](13, _c14, presentation_r1.questionFontProperties.size.px + "px")), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("ngIf", fesm2022_core["\u0275\u0275pureFunction4"](15, _c15, fesm2022_core["\u0275\u0275pipeBind1"](5, 3, ctx_r5.questionIconProperties.state$), fesm2022_core["\u0275\u0275pipeBind1"](6, 5, ctx_r5.questionIconProperties.ariaLabel$), fesm2022_core["\u0275\u0275pipeBind1"](7, 7, ctx_r5.questionIconProperties.tooltipConfig$), fesm2022_core["\u0275\u0275pipeBind1"](8, 9, ctx_r5.questionIconProperties.loadingWarningPresentation$)));
            }
        }
        function QnaInputV2Component_ng_container_0_div_1_span_11_span_3_ng_container_2_ng_container_1_div_1_div_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r39 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "div", 32, 33), fesm2022_core["\u0275\u0275listener"]("keyup", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r39);
                    var tokenZoneInfo_r32 = fesm2022_core["\u0275\u0275nextContext"](2).$implicit, ctx_r37 = fesm2022_core["\u0275\u0275nextContext"](6);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r37.gripperKeyUp($event, tokenZoneInfo_r32, "beginGripper"));
                })("cdkDragStarted", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r39);
                    var ctx_r40 = fesm2022_core["\u0275\u0275nextContext"](8);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r40.beginGripperDragStarted());
                }), fesm2022_core["\u0275\u0275namespaceSVG"](), fesm2022_core["\u0275\u0275elementStart"](2, "svg", 34), 
                fesm2022_core["\u0275\u0275element"](3, "rect"), fesm2022_core["\u0275\u0275elementEnd"](), 
                fesm2022_core["\u0275\u0275elementStart"](4, "svg", 35), fesm2022_core["\u0275\u0275element"](5, "circle"), 
                fesm2022_core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var presentation_r1 = fesm2022_core["\u0275\u0275nextContext"](7).ngIf;
                fesm2022_core["\u0275\u0275property"]("cdkDragData", "beginGripper"), fesm2022_core["\u0275\u0275advance"](3), 
                fesm2022_core["\u0275\u0275attribute"]("fill", presentation_r1.errorUnderlineColor), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275attribute"]("stroke", presentation_r1.errorUnderlineColor)("fill", presentation_r1.backgroundColor);
            }
        }
        function QnaInputV2Component_ng_container_0_div_1_span_11_span_3_ng_container_2_ng_container_1_div_1_div_2_Template(rf, ctx) {
            if (1 & rf) {
                var _r45 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "div", 36, 37), fesm2022_core["\u0275\u0275listener"]("keyup", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r45);
                    var tokenZoneInfo_r32 = fesm2022_core["\u0275\u0275nextContext"](2).$implicit, ctx_r43 = fesm2022_core["\u0275\u0275nextContext"](6);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r43.gripperKeyUp($event, tokenZoneInfo_r32, "endGripper"));
                })("cdkDragStarted", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r45);
                    var ctx_r46 = fesm2022_core["\u0275\u0275nextContext"](8);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r46.endGripperDragStarted());
                }), fesm2022_core["\u0275\u0275namespaceSVG"](), fesm2022_core["\u0275\u0275elementStart"](2, "svg", 38), 
                fesm2022_core["\u0275\u0275element"](3, "rect"), fesm2022_core["\u0275\u0275elementEnd"](), 
                fesm2022_core["\u0275\u0275elementStart"](4, "svg", 35), fesm2022_core["\u0275\u0275element"](5, "circle"), 
                fesm2022_core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var presentation_r1 = fesm2022_core["\u0275\u0275nextContext"](7).ngIf;
                fesm2022_core["\u0275\u0275property"]("cdkDragData", "endGripper"), fesm2022_core["\u0275\u0275advance"](3), 
                fesm2022_core["\u0275\u0275attribute"]("fill", presentation_r1.errorUnderlineColor), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275attribute"]("stroke", presentation_r1.errorUnderlineColor)("fill", presentation_r1.backgroundColor);
            }
        }
        var _c16 = function(a0, a1, a2, a3, a4, a5, a6, a7, a8) {
            return {
                dropZoneLocatedBeforeToken: a0,
                dropZoneLocatedAfterToken: a1,
                noGripperOnDragging: a2,
                beginGripperOnDragging: a3,
                endGripperOnDragging: a4,
                serveBeginGripper: a5,
                serveEndGripper: a6,
                hasBeginGripper: a7,
                hasEndGripper: a8
            };
        };
        function QnaInputV2Component_ng_container_0_div_1_span_11_span_3_ng_container_2_ng_container_1_div_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r49 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "div", 29), fesm2022_core["\u0275\u0275listener"]("cdkDropListEntered", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r49);
                    var ctx_r48 = fesm2022_core["\u0275\u0275nextContext"](7);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r48.gripperEnter($event));
                })("cdkDropListDropped", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r49);
                    var ctx_r50 = fesm2022_core["\u0275\u0275nextContext"](7);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r50.dropGripper($event));
                }), fesm2022_core["\u0275\u0275template"](1, QnaInputV2Component_ng_container_0_div_1_span_11_span_3_ng_container_2_ng_container_1_div_1_div_1_Template, 6, 4, "div", 30), 
                fesm2022_core["\u0275\u0275template"](2, QnaInputV2Component_ng_container_0_div_1_span_11_span_3_ng_container_2_ng_container_1_div_1_div_2_Template, 6, 4, "div", 31), 
                fesm2022_core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var tokenZoneInfo_r32 = fesm2022_core["\u0275\u0275nextContext"]().$implicit, token_r28 = fesm2022_core["\u0275\u0275nextContext"](2).$implicit, inputBoxInfo_r4 = fesm2022_core["\u0275\u0275nextContext"](2).ngIf, ctx_r33 = fesm2022_core["\u0275\u0275nextContext"](2);
                fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunctionV"](5, _c16, [ tokenZoneInfo_r32 === (null == token_r28.dropZonesInfo ? null : token_r28.dropZonesInfo.zoneLocatedBeforeInfo), tokenZoneInfo_r32 === (null == token_r28.dropZonesInfo ? null : token_r28.dropZonesInfo.zoneLocatedAfterInfo), "none" === inputBoxInfo_r4.gripperOnDragging, "beginGripper" === inputBoxInfo_r4.gripperOnDragging, "endGripper" === inputBoxInfo_r4.gripperOnDragging, !!tokenZoneInfo_r32.beginGripperOf, !!tokenZoneInfo_r32.endGripperOf, !!tokenZoneInfo_r32.hasBeginGripper, !!tokenZoneInfo_r32.hasEndGripper ]))("cdkDropListData", tokenZoneInfo_r32)("cdkDropListEnterPredicate", ctx_r33.dropZonePredicate), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", tokenZoneInfo_r32.hasBeginGripper), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", tokenZoneInfo_r32.hasEndGripper);
            }
        }
        function QnaInputV2Component_ng_container_0_div_1_span_11_span_3_ng_container_2_ng_container_1_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275template"](1, QnaInputV2Component_ng_container_0_div_1_span_11_span_3_ng_container_2_ng_container_1_div_1_Template, 3, 15, "div", 28), 
            fesm2022_core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var tokenZoneInfo_r32 = ctx.$implicit;
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", tokenZoneInfo_r32);
            }
        }
        var _c17 = function(a0, a1) {
            return [ a0, a1 ];
        };
        function QnaInputV2Component_ng_container_0_div_1_span_11_span_3_ng_container_2_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275template"](1, QnaInputV2Component_ng_container_0_div_1_span_11_span_3_ng_container_2_ng_container_1_Template, 2, 1, "ng-container", 27), 
            fesm2022_core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var token_r28 = fesm2022_core["\u0275\u0275nextContext"]().$implicit;
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngForOf", fesm2022_core["\u0275\u0275pureFunction2"](1, _c17, null == token_r28.dropZonesInfo ? null : token_r28.dropZonesInfo.zoneLocatedBeforeInfo, null == token_r28.dropZonesInfo ? null : token_r28.dropZonesInfo.zoneLocatedAfterInfo));
            }
        }
        var _c18 = function(a0, a1, a2, a3) {
            return {
                space: a0,
                filler: a1,
                isBetweenDroppedGrippers: a2,
                isBetweenOnDraggingGrippers: a3
            };
        };
        function QnaInputV2Component_ng_container_0_div_1_span_11_span_3_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "span", 26), fesm2022_core["\u0275\u0275text"](1), 
            fesm2022_core["\u0275\u0275template"](2, QnaInputV2Component_ng_container_0_div_1_span_11_span_3_ng_container_2_Template, 2, 4, "ng-container", 0), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var token_r28 = ctx.$implicit, ctx_r26 = fesm2022_core["\u0275\u0275nextContext"](4);
                fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction4"](4, _c18, token_r28.isWhiteSpace, token_r28.isFillerText, token_r28.isBetweenDroppedGrippers, token_r28.isBetweenOnDraggingGrippers)), 
                fesm2022_core["\u0275\u0275attribute"]("aria-hidden", token_r28.isWhiteSpace), fesm2022_core["\u0275\u0275advance"](1), 
                fesm2022_core["\u0275\u0275textInterpolate"](token_r28.text), fesm2022_core["\u0275\u0275advance"](1), 
                fesm2022_core["\u0275\u0275property"]("ngIf", null == ctx_r26.fullConfig ? null : ctx_r26.fullConfig.supportTokenGrippers);
            }
        }
        var _c19 = function(a0, a1) {
            return {
                height: a0,
                bottom: a1,
                left: 0
            };
        };
        function QnaInputV2Component_ng_container_0_div_1_span_11__svg_svg_4_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275namespaceSVG"](), fesm2022_core["\u0275\u0275elementStart"](0, "svg", 39), 
            fesm2022_core["\u0275\u0275element"](1, "line", 40), fesm2022_core["\u0275\u0275elementEnd"]()), 
            2 & rf) {
                var presentation_r1 = fesm2022_core["\u0275\u0275nextContext"](3).ngIf;
                fesm2022_core["\u0275\u0275property"]("ngStyle", fesm2022_core["\u0275\u0275pureFunction2"](7, _c19, 2 * presentation_r1.singleUnderlineThickness + "px", -.5 * presentation_r1.singleUnderlineSpace + -1.5 * presentation_r1.singleUnderlineThickness + "px")), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275attribute"]("x1", presentation_r1.singleUnderlineThickness)("y1", presentation_r1.singleUnderlineThickness)("y2", presentation_r1.singleUnderlineThickness)("stroke-width", presentation_r1.singleUnderlineThickness)("stroke-dasharray", "1 " + (presentation_r1.singleUnderlineThickness + 2))("stroke", presentation_r1.warningUnderlineColor);
            }
        }
        var _c20 = function(a0, a1, a2, a3, a4, a5) {
            return {
                unused: a0,
                space: a1,
                corrected: a2,
                showAcceptedUnderline: a3,
                showErrorUnderline: a4,
                showWarningUnderline: a5
            };
        }, _c21 = function(a0) {
            return {
                "background-color": a0
            };
        }, _c22 = function(a0, a1) {
            return {
                hasMultipleTokens: a0,
                unused: a1
            };
        }, _c23 = function(a0, a1, a2, a3) {
            return {
                color: a0,
                "border-bottom-color": a1,
                "border-bottom-style": a2,
                "border-bottom-width": a3
            };
        };
        function QnaInputV2Component_ng_container_0_div_1_span_11_Template(rf, ctx) {
            if (1 & rf) {
                var _r57 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "span", 21, 22), fesm2022_core["\u0275\u0275listener"]("mouseover", function() {
                    var span_r23 = fesm2022_core["\u0275\u0275restoreView"](_r57).$implicit, ctx_r56 = fesm2022_core["\u0275\u0275nextContext"](3);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r56.onSpanMouseEnter(span_r23));
                })("mouseleave", function() {
                    var span_r23 = fesm2022_core["\u0275\u0275restoreView"](_r57).$implicit, ctx_r58 = fesm2022_core["\u0275\u0275nextContext"](3);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r58.onSpanMouseLeave(span_r23));
                }), fesm2022_core["\u0275\u0275elementStart"](2, "span", 23), fesm2022_core["\u0275\u0275template"](3, QnaInputV2Component_ng_container_0_div_1_span_11_span_3_Template, 3, 9, "span", 24), 
                fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275template"](4, QnaInputV2Component_ng_container_0_div_1_span_11__svg_svg_4_Template, 2, 10, "svg", 25), 
                fesm2022_core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var span_r23 = ctx.$implicit, presentation_r1 = fesm2022_core["\u0275\u0275nextContext"](2).ngIf;
                fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction6"](7, _c20, span_r23.isUnused, span_r23.isWhiteSpace, span_r23.isCorrected, span_r23.shouldShowAcceptedUnderline, span_r23.shouldShowErrorUnderline, span_r23.shouldShowWarningUnderline))("ngStyle", fesm2022_core["\u0275\u0275pureFunction1"](14, _c21, presentation_r1.useShellTheme ? "" : span_r23.backgroundColor)), 
                fesm2022_core["\u0275\u0275attribute"]("aria-hidden", span_r23.isWhiteSpace), fesm2022_core["\u0275\u0275advance"](2), 
                fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction2"](16, _c22, (null == span_r23.tokens ? null : span_r23.tokens.length) > 1, span_r23.isUnused))("ngStyle", fesm2022_core["\u0275\u0275pureFunction4"](19, _c23, presentation_r1.useShellTheme ? "" : span_r23.isUnused ? presentation_r1.droppedFontColor : presentation_r1.questionFontProperties.color, presentation_r1.useShellTheme ? "" : span_r23.shouldShowAcceptedUnderline ? presentation_r1.acceptedUnderlineColor : span_r23.shouldShowErrorUnderline ? presentation_r1.errorUnderlineColor : presentation_r1.warningUnderlineColor, span_r23.shouldShowAcceptedUnderline ? "solid" : span_r23.shouldShowErrorUnderline ? "double" : "unset", (span_r23.shouldShowAcceptedUnderline ? presentation_r1.singleUnderlineThickness : span_r23.shouldShowErrorUnderline ? 2 * presentation_r1.singleUnderlineThickness : 0) + "px")), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngForOf", null == span_r23 ? null : span_r23.tokens), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", span_r23.shouldShowWarningUnderline);
            }
        }
        var _c24 = function(a0, a1) {
            return {
                disabled: a0,
                usingShellTheme: a1
            };
        }, _c25 = function() {
            return {
                tooltipLocalizeDescription: "Clear",
                tooltipShowOnFocus: !0
            };
        }, _c26 = function(a0, a1) {
            return {
                "font-size": a0,
                color: a1
            };
        };
        function QnaInputV2Component_ng_container_0_div_1_ng_container_13_ng_container_1_ng_container_1_div_2_Template(rf, ctx) {
            if (1 & rf) {
                var _r67 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "div", 43)(1, "button", 44, 45), fesm2022_core["\u0275\u0275listener"]("accessible-click", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r67);
                    var ctx_r66 = fesm2022_core["\u0275\u0275nextContext"](6);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r66.clearButtonClicked($event));
                }), fesm2022_core["\u0275\u0275elementStart"](3, "div", 46)(4, "span", 20), fesm2022_core["\u0275\u0275text"](5, "\xa0"), 
                fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275elementStart"](6, "div", 47), 
                fesm2022_core["\u0275\u0275element"](7, "i", 48), fesm2022_core["\u0275\u0275elementEnd"]()()()();
            }
            if (2 & rf) {
                var inputBoxInfo_r4 = fesm2022_core["\u0275\u0275nextContext"](4).ngIf, presentation_r1 = fesm2022_core["\u0275\u0275nextContext"]().ngIf;
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction2"](6, _c24, inputBoxInfo_r4.isUtteranceEmpty, presentation_r1.useShellTheme))("pbi-tooltip", fesm2022_core["\u0275\u0275pureFunction0"](9, _c25))("ngStyle", fesm2022_core["\u0275\u0275pureFunction1"](10, _c21, presentation_r1.useShellTheme ? "" : presentation_r1.backgroundColor)), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("ngStyle", fesm2022_core["\u0275\u0275pureFunction1"](12, _c14, presentation_r1.questionFontProperties.size.px + "px")), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngStyle", fesm2022_core["\u0275\u0275pureFunction1"](14, _c14, presentation_r1.questionFontProperties.size.px + "px")), 
                fesm2022_core["\u0275\u0275advance"](3), fesm2022_core["\u0275\u0275property"]("ngStyle", fesm2022_core["\u0275\u0275pureFunction2"](16, _c26, inputBoxInfo_r4.iconFontSize + "px", presentation_r1.useShellTheme ? "" : presentation_r1.questionFontProperties.color));
            }
        }
        var _c27 = function(a0) {
            return {
                "aria-label": a0
            };
        }, _c28 = function(a0) {
            return {
                tooltipLocalizeDescription: a0,
                tooltipShowOnFocus: !0
            };
        };
        function QnaInputV2Component_ng_container_0_div_1_ng_container_13_ng_container_1_ng_container_1_ng_container_3_div_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r74 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "div", 43)(1, "button", 49, 50), fesm2022_core["\u0275\u0275listener"]("accessible-click", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r74);
                    var ctx_r73 = fesm2022_core["\u0275\u0275nextContext"](7);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r73.commitButtonClicked($event));
                }), fesm2022_core["\u0275\u0275elementStart"](3, "div", 46)(4, "span", 20), fesm2022_core["\u0275\u0275text"](5, "\xa0"), 
                fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275elementStart"](6, "div", 47), 
                fesm2022_core["\u0275\u0275element"](7, "i", 51), fesm2022_core["\u0275\u0275elementEnd"]()()()();
            }
            if (2 & rf) {
                var notCommited_r70 = fesm2022_core["\u0275\u0275nextContext"]().ngIf, inputBoxInfo_r4 = fesm2022_core["\u0275\u0275nextContext"](4).ngIf, presentation_r1 = fesm2022_core["\u0275\u0275nextContext"]().ngIf;
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction2"](7, _c24, !notCommited_r70.isTrue, presentation_r1.useShellTheme))("localizeAttr", fesm2022_core["\u0275\u0275pureFunction1"](10, _c27, notCommited_r70.isTrue ? "Submit" : "Qna_Input_SubmitQuestion_Disabled_Description"))("pbi-tooltip", fesm2022_core["\u0275\u0275pureFunction1"](12, _c28, notCommited_r70.isTrue ? "Submit" : "Qna_Input_SubmitQuestion_Disabled_Description"))("ngStyle", fesm2022_core["\u0275\u0275pureFunction1"](14, _c21, presentation_r1.useShellTheme ? "" : presentation_r1.commitButtonBackgroundColor)), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("ngStyle", fesm2022_core["\u0275\u0275pureFunction1"](16, _c14, presentation_r1.questionFontProperties.size.px + "px")), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngStyle", fesm2022_core["\u0275\u0275pureFunction1"](18, _c14, presentation_r1.questionFontProperties.size.px + "px")), 
                fesm2022_core["\u0275\u0275advance"](3), fesm2022_core["\u0275\u0275property"]("ngStyle", fesm2022_core["\u0275\u0275pureFunction2"](20, _c26, inputBoxInfo_r4.iconFontSize + "px", presentation_r1.useShellTheme ? "" : presentation_r1.commitButtonForegroundColor));
            }
        }
        function QnaInputV2Component_ng_container_0_div_1_ng_container_13_ng_container_1_ng_container_1_ng_container_3_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275template"](1, QnaInputV2Component_ng_container_0_div_1_ng_container_13_ng_container_1_ng_container_1_ng_container_3_div_1_Template, 8, 23, "div", 42), 
            fesm2022_core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var actionsInfo_r61 = fesm2022_core["\u0275\u0275nextContext"](2).ngIf;
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", actionsInfo_r61.commitVisible);
            }
        }
        var _c29 = function(a0) {
            return {
                isTrue: a0
            };
        };
        function QnaInputV2Component_ng_container_0_div_1_ng_container_13_ng_container_1_ng_container_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r80 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275elementStart"](1, "div", 41), 
                fesm2022_core["\u0275\u0275listener"]("click", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r80);
                    var ctx_r79 = fesm2022_core["\u0275\u0275nextContext"](5);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r79.actionButtonsContainerClicked($event));
                }), fesm2022_core["\u0275\u0275template"](2, QnaInputV2Component_ng_container_0_div_1_ng_container_13_ng_container_1_ng_container_1_div_2_Template, 8, 19, "div", 42), 
                fesm2022_core["\u0275\u0275template"](3, QnaInputV2Component_ng_container_0_div_1_ng_container_13_ng_container_1_ng_container_1_ng_container_3_Template, 2, 1, "ng-container", 0), 
                fesm2022_core["\u0275\u0275pipe"](4, "async"), fesm2022_core["\u0275\u0275elementEnd"](), 
                fesm2022_core["\u0275\u0275elementContainerEnd"]();
            }
            if (2 & rf) {
                var actionsInfo_r61 = fesm2022_core["\u0275\u0275nextContext"]().ngIf, inputBoxInfo_r4 = fesm2022_core["\u0275\u0275nextContext"](2).ngIf, ctx_r62 = fesm2022_core["\u0275\u0275nextContext"](2);
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngStyle", fesm2022_core["\u0275\u0275pureFunction1"](5, _c13, (inputBoxInfo_r4.iconFontSize + 16) * (!ctx_r62.inCommitOnDemandMode || null != ctx_r62.fullConfig.commitOnDemandConfigs && ctx_r62.fullConfig.commitOnDemandConfigs.hideCommitActionUI ? 1 : 2) + "px")), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", actionsInfo_r61.deleteVisible), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", fesm2022_core["\u0275\u0275pureFunction1"](7, _c29, fesm2022_core["\u0275\u0275pipeBind1"](4, 3, ctx_r62.hasUncommittedQuestion$)));
            }
        }
        function QnaInputV2Component_ng_container_0_div_1_ng_container_13_ng_container_1_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275template"](1, QnaInputV2Component_ng_container_0_div_1_ng_container_13_ng_container_1_ng_container_1_Template, 5, 9, "ng-container", 0), 
            fesm2022_core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var actionsInfo_r61 = ctx.ngIf, inputBoxInfo_r4 = fesm2022_core["\u0275\u0275nextContext"](2).ngIf;
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", !inputBoxInfo_r4.isUtteranceEmpty || actionsInfo_r61.commitVisible || actionsInfo_r61.deleteVisible);
            }
        }
        var _c30 = function(a0, a1) {
            return {
                commitVisible: a0,
                deleteVisible: a1
            };
        };
        function QnaInputV2Component_ng_container_0_div_1_ng_container_13_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275template"](1, QnaInputV2Component_ng_container_0_div_1_ng_container_13_ng_container_1_Template, 2, 1, "ng-container", 0), 
            fesm2022_core["\u0275\u0275pipe"](2, "async"), fesm2022_core["\u0275\u0275pipe"](3, "async"), 
            fesm2022_core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var ctx_r10 = fesm2022_core["\u0275\u0275nextContext"](3);
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", fesm2022_core["\u0275\u0275pureFunction2"](5, _c30, fesm2022_core["\u0275\u0275pipeBind1"](2, 1, ctx_r10.commitActionVisible$), fesm2022_core["\u0275\u0275pipeBind1"](3, 3, ctx_r10.clearActionVisible$)));
            }
        }
        function QnaInputV2Component_ng_container_0_div_1_qna_autocomplete_14_Template(rf, ctx) {
            if (1 & rf) {
                var _r86 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "qna-autocomplete", 52, 53), fesm2022_core["\u0275\u0275listener"]("utteranceSelected", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r86);
                    var ctx_r85 = fesm2022_core["\u0275\u0275nextContext"](3);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r85.autoCompleteDropdownItemSelected($event));
                })("fullyExpanded", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r86);
                    var ctx_r87 = fesm2022_core["\u0275\u0275nextContext"](3);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r87.autoCompleteFullyExpanded());
                }), fesm2022_core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var presentation_r1 = fesm2022_core["\u0275\u0275nextContext"](2).ngIf, ctx_r11 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275classProp"]("withTopSeparator", presentation_r1.height), 
                fesm2022_core["\u0275\u0275property"]("params", ctx_r11.autoCompleteInputArgs.params)("presentation", ctx_r11.autoCompleteInputArgs.presentation)("selectPrevious", ctx_r11.autoCompleteInputArgs.selectPrevious)("selectNext", ctx_r11.autoCompleteInputArgs.selectNext)("confirmSelection", ctx_r11.autoCompleteInputArgs.confirmSelection);
            }
        }
        var _c31 = function(a0, a1, a2, a3) {
            return {
                withBorder: a0,
                withShadow: a1,
                authoringDisabled: a2,
                showDisabled: a3
            };
        }, _c32 = function(a0, a1, a2, a3, a4, a5, a6, a7, a8) {
            return {
                "background-color": a0,
                color: a1,
                "font-size": a2,
                "font-family": a3,
                "border-color": a4,
                "font-weight": a5,
                "font-style": a6,
                "text-decoration": a7,
                height: a8
            };
        }, _c33 = function(a0) {
            return {
                height: a0
            };
        }, _c34 = function(a0, a1) {
            return {
                withFixedHeight: a0,
                allowContentHorizontalScroll: a1
            };
        }, _c35 = function(a0) {
            return {
                "max-height": a0
            };
        }, _c36 = function(a0) {
            return {
                withMaxHeight: a0
            };
        }, _c37 = function(a0) {
            return {
                isGripperOnDragging: a0
            };
        };
        function QnaInputV2Component_ng_container_0_div_1_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 3), fesm2022_core["\u0275\u0275template"](1, QnaInputV2Component_ng_container_0_div_1_ng_container_1_Template, 9, 20, "ng-container", 0), 
            fesm2022_core["\u0275\u0275elementStart"](2, "div", 4, 5)(4, "div", 6)(5, "div", 7)(6, "div", 8, 9)(8, "div", 10, 11), 
            fesm2022_core["\u0275\u0275pipe"](10, "async"), fesm2022_core["\u0275\u0275template"](11, QnaInputV2Component_ng_container_0_div_1_span_11_Template, 5, 24, "span", 12), 
            fesm2022_core["\u0275\u0275pipe"](12, "async"), fesm2022_core["\u0275\u0275elementEnd"](), 
            fesm2022_core["\u0275\u0275template"](13, QnaInputV2Component_ng_container_0_div_1_ng_container_13_Template, 4, 8, "ng-container", 0), 
            fesm2022_core["\u0275\u0275elementEnd"]()(), fesm2022_core["\u0275\u0275template"](14, QnaInputV2Component_ng_container_0_div_1_qna_autocomplete_14_Template, 2, 7, "qna-autocomplete", 13), 
            fesm2022_core["\u0275\u0275pipe"](15, "async"), fesm2022_core["\u0275\u0275elementEnd"]()()()), 
            2 & rf) {
                var inputBoxInfo_r4 = ctx.ngIf, presentation_r1 = fesm2022_core["\u0275\u0275nextContext"]().ngIf, ctx_r2 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", null == ctx_r2.fullConfig ? null : ctx_r2.fullConfig.showQuestionIcon), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction4"](20, _c31, presentation_r1.withBorder, presentation_r1.withShadow, null == ctx_r2.fullConfig ? null : ctx_r2.fullConfig.disableAuthoring, null == ctx_r2.fullConfig ? null : ctx_r2.fullConfig.displayDisabledStateVisually))("ngStyle", fesm2022_core["\u0275\u0275pureFunctionV"](25, _c32, [ presentation_r1.useShellTheme ? "" : presentation_r1.backgroundColor, presentation_r1.useShellTheme ? "" : presentation_r1.questionFontProperties.color, presentation_r1.questionFontProperties.size.px + "px", presentation_r1.questionFontProperties.family, presentation_r1.useShellTheme ? "" : presentation_r1.borderColor, presentation_r1.questionFontProperties.weight, presentation_r1.questionFontProperties.style, presentation_r1.questionFontProperties.textDecoration, presentation_r1.height ? presentation_r1.height + "px" : "auto" ])), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("ngStyle", fesm2022_core["\u0275\u0275pureFunction1"](35, _c33, presentation_r1.height ? presentation_r1.height + "px" : "auto"))("ngClass", fesm2022_core["\u0275\u0275pureFunction2"](37, _c34, presentation_r1.height, presentation_r1.allowContentHorizontalScroll)), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngStyle", fesm2022_core["\u0275\u0275pureFunction1"](40, _c35, presentation_r1.height ? presentation_r1.height + "px" : "unset"))("ngClass", fesm2022_core["\u0275\u0275pureFunction1"](42, _c36, presentation_r1.height)), 
                fesm2022_core["\u0275\u0275advance"](3), fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction1"](44, _c37, "none" !== inputBoxInfo_r4.gripperOnDragging)), 
                fesm2022_core["\u0275\u0275attribute"]("contenteditable", ctx_r2.isEditable())("placeholder", fesm2022_core["\u0275\u0275pipeBind1"](10, 14, ctx_r2.placeholder$))("aria-label", ctx_r2.ariaLabel), 
                fesm2022_core["\u0275\u0275advance"](3), fesm2022_core["\u0275\u0275property"]("ngForOf", fesm2022_core["\u0275\u0275pipeBind1"](12, 16, ctx_r2.uiSpans$)), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("ngIf", null == ctx_r2.fullConfig ? null : ctx_r2.fullConfig.showActionButtons), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", fesm2022_core["\u0275\u0275pipeBind1"](15, 18, ctx_r2.shouldShowAutoComplete$));
            }
        }
        var _c38 = function(a0) {
            return {
                corrected: a0
            };
        };
        function QnaInputV2Component_ng_container_0_div_5_span_4_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "span", 58), fesm2022_core["\u0275\u0275text"](1), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var span_r92 = ctx.$implicit;
                fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction1"](2, _c38, span_r92.isCorrected)), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275textInterpolate"](span_r92.text);
            }
        }
        var _c39 = function(a0, a1, a2) {
            return {
                color: a0,
                "font-size": a1,
                "font-family": a2
            };
        };
        function QnaInputV2Component_ng_container_0_div_5_Template(rf, ctx) {
            if (1 & rf) {
                var _r94 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "div", 54)(1, "span", 55), fesm2022_core["\u0275\u0275text"](2), 
                fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275elementStart"](3, "div", 56), 
                fesm2022_core["\u0275\u0275listener"]("accessible-click", function() {
                    var correctionInfo_r90 = fesm2022_core["\u0275\u0275restoreView"](_r94).ngIf, ctx_r93 = fesm2022_core["\u0275\u0275nextContext"](2);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r93.replaceWithCorrectedUtterance(correctionInfo_r90.replacementUtterance, correctionInfo_r90.state));
                }), fesm2022_core["\u0275\u0275template"](4, QnaInputV2Component_ng_container_0_div_5_span_4_Template, 2, 4, "span", 57), 
                fesm2022_core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var correctionInfo_r90 = ctx.ngIf, presentation_r1 = fesm2022_core["\u0275\u0275nextContext"]().ngIf;
                fesm2022_core["\u0275\u0275property"]("ngStyle", fesm2022_core["\u0275\u0275pureFunction3"](4, _c39, presentation_r1.restatementFontProperties.color, presentation_r1.restatementFontProperties.size.px + "px", presentation_r1.restatementFontProperties.family)), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275textInterpolate"](correctionInfo_r90.label), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275attribute"]("aria-label", correctionInfo_r90.replacementUtterance), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngForOf", correctionInfo_r90.spans);
            }
        }
        var _c40 = function(a0, a1, a2) {
            return {
                gripperOnDragging: a0,
                isUtteranceEmpty: a1,
                iconFontSize: a2
            };
        };
        function QnaInputV2Component_ng_container_0_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275template"](1, QnaInputV2Component_ng_container_0_div_1_Template, 16, 46, "div", 1), 
            fesm2022_core["\u0275\u0275pipe"](2, "async"), fesm2022_core["\u0275\u0275pipe"](3, "async"), 
            fesm2022_core["\u0275\u0275pipe"](4, "async"), fesm2022_core["\u0275\u0275template"](5, QnaInputV2Component_ng_container_0_div_5_Template, 5, 8, "div", 2), 
            fesm2022_core["\u0275\u0275pipe"](6, "async"), fesm2022_core["\u0275\u0275elementContainerEnd"]()), 
            2 & rf) {
                var ctx_r0 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", fesm2022_core["\u0275\u0275pureFunction3"](10, _c40, fesm2022_core["\u0275\u0275pipeBind1"](2, 2, null == ctx_r0.grippersInfo ? null : ctx_r0.grippersInfo.gripperOnDragging$), fesm2022_core["\u0275\u0275pipeBind1"](3, 4, ctx_r0.isDisplayedUtteranceEmpty$), fesm2022_core["\u0275\u0275pipeBind1"](4, 6, ctx_r0.iconFontSize$))), 
                fesm2022_core["\u0275\u0275advance"](4), fesm2022_core["\u0275\u0275property"]("ngIf", fesm2022_core["\u0275\u0275pipeBind1"](6, 8, ctx_r0.currentUtteranceAutoCorrectionInfo$));
            }
        }
        var defaultPresentation = {
            withBorder: !1,
            withShadow: !1,
            backgroundColor: "#FFFFFF",
            borderColor: "#A19F9D",
            questionFontProperties: {
                color: "#323130",
                size: units.B.createFromPt(10),
                family: "'Segoe UI', wf_segoe- ui_normal, helvetica, arial, sans- serif"
            },
            acceptedUnderlineColor: "#0078D4",
            errorUnderlineColor: "#FF0000",
            warningUnderlineColor: "#0078D4",
            singleUnderlineThickness: 2,
            singleUnderlineSpace: 1,
            droppedFontColor: "#A19F9D",
            hoverColor: "#EEEEEE",
            restatementFontProperties: {
                color: "#323130",
                size: units.B.createFromPt(9),
                family: "'Segoe UI', wf_segoe- ui_normal, helvetica, arial, sans- serif"
            },
            commitButtonBackgroundColor: "#F3F2F1",
            commitButtonForegroundColor: "#323130",
            allowContentHorizontalScroll: !1
        }, defaultConfig = {
            sendPausedTagTimeout: 3e3,
            showErrorWarningUnderlineTimeout: 1500,
            showActionButtons: !0,
            showPlaceholderText: !0,
            showQuestionIcon: !0,
            showWarningIcon: !0,
            showLoadingIcon: !0,
            showCorrectedUtterance: !0,
            customPlaceholderText: "",
            autoFocusOnInit: !1,
            disableAuthoring: !1,
            disableAuthoringMessage: "",
            displayDisabledStateVisually: !0,
            disableSendingServiceTags: !1,
            supportTokenGrippers: !1,
            supportsPodQueries: !1,
            supportsInsightsQueries: !1,
            inferUnknownModelTerms: !1,
            singleAnswerBias: !1,
            hostSupportsUndo: !1,
            spanDropdownHeaderConfig: {
                show: !0,
                unknownSpanHeaderConfig: {
                    actionType: "none"
                }
            },
            calculation: void 0,
            considerDroppedSpans: !0,
            considerErrorSpans: !0,
            considerWarningSpans: !0,
            commitOnDemandForcedMode: void 0,
            commitOnDemandConfigs: {
                hideCommitActionUI: !1,
                noCommitOnDropdownSelection: !1,
                noCommitOnInitialUtterance: !1
            }
        }, qna_input_v2_component_nonBreakingSpace = "\xa0", QnaInputV2Component = function() {
            function QnaInputV2Component(changeDetectorRef, conceptualSchemaProxy, dataSourcesService, explorationNavigationService, featureSwitchService, highContrastCssGenerationService, lazyProvider, localizationService, screenReaderService, undoRedoService, linguisticSchemaProxy, qnaProxyPathToken, qnaModelUtilsPathToken) {
                this.changeDetectorRef = changeDetectorRef, this.conceptualSchemaProxy = conceptualSchemaProxy, 
                this.dataSourcesService = dataSourcesService, this.explorationNavigationService = explorationNavigationService, 
                this.featureSwitchService = featureSwitchService, this.highContrastCssGenerationService = highContrastCssGenerationService, 
                this.lazyProvider = lazyProvider, this.localizationService = localizationService, 
                this.screenReaderService = screenReaderService, this.undoRedoService = undoRedoService, 
                this.linguisticSchemaProxy = linguisticSchemaProxy, this.qnaProxyPathToken = qnaProxyPathToken, 
                this.qnaModelUtilsPathToken = qnaModelUtilsPathToken, this.grippersDefinedTextRangeChanged = new fesm2022_core.EventEmitter, 
                this.enterKeyPressed = new fesm2022_core.EventEmitter, this.initialized = new fesm2022_core.EventEmitter, 
                this.toolingLaunched = new fesm2022_core.EventEmitter, this.inputBoxFocused = new fesm2022_core.EventEmitter, 
                this.displayedUtteranceInternal$ = new BehaviorSubject.X(void 0), this.distinctDisplayedUtterance$ = new BehaviorSubject.X(void 0), 
                this.hasUncommittedQuestion$ = new BehaviorSubject.X(!1), this.loadingStateTooltipConfig$ = new BehaviorSubject.X(void 0), 
                this.warningStateTooltipConfig$ = new BehaviorSubject.X(void 0), this.hasFocus$ = new BehaviorSubject.X(void 0), 
                this.cursorLocation$ = new BehaviorSubject.X(-1), this.uiSpanWithMouseHover$ = new BehaviorSubject.X(void 0), 
                this.tokensGripperLocInfoUpdated$ = new BehaviorSubject.X(void 0), this.delayedSpanUnderlineStyleUpdated$ = new BehaviorSubject.X(void 0), 
                this.contentElementAngularCommentNodes = [], this.destroy$ = new Subject.xQ, this.firstTimeLoad = !0, 
                this.componentUniqueId = Utility.b$.generateGuid(), this.interpretRequestSequenceNumber = -1, 
                this.initializeHighContrastRules(), debug.fF.assert(function() {
                    return !(0, BrowserUtility.rO)();
                }, "Expect input box never get created if it is in IE browser.");
            }
            return Object.defineProperty(QnaInputV2Component.prototype, "autoCompleteElementRef", {
                set: function(elementRef) {
                    elementRef && (this.autoCompleteElement = elementRef.nativeElement);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(QnaInputV2Component.prototype, "contentElementRef", {
                set: function(elementRef) {
                    var _this = this;
                    if (elementRef && (this.contentElement = elementRef.nativeElement, this.firstTimeLoad)) {
                        this.firstTimeLoad = !1;
                        var shouldSetFocus_1 = !1;
                        this.contentElement && this.isEditable() && this.fullConfig.autoFocusOnInit && (shouldSetFocus_1 = !0), 
                        this.contentElementAngularCommentNodes = _.takeWhile(this.contentElement.childNodes, function(childNode) {
                            return childNode.nodeType === Node.COMMENT_NODE;
                        }), _.isEmpty(this.contentElementAngularCommentNodes) && (this.contentElementAngularCommentNodes = _.takeRightWhile(this.contentElement.childNodes, function(childNode) {
                            return childNode.nodeType === Node.COMMENT_NODE;
                        })), this.addEventListeners(), debug.fF.assert(function() {
                            return !_this.initialUtteranceFromSaved || !_.isEmpty(_this.initialUtterance);
                        }, "initialUtteranceFromSaved is true, then there must be an initialUtterance"), 
                        _.isEmpty(this.initialUtterance) ? shouldSetFocus_1 && setTimeout(function() {
                            _this.contentElement.focus();
                        }) : setTimeout(function() {
                            var _a, _b;
                            debug.fF.assertValue(_this.fullConfig, "this.fullConfig should already been set"), 
                            _this.interpretUtteranceRequest$.next({
                                utterance: _this.initialUtterance,
                                uniqueId: Utility.b$.generateGuid(),
                                utteranceUITextAlreadyEnsured: !1,
                                suppressSuggestions: !0,
                                requireCursorAtEndIfFocused: !0,
                                enforceFocus: shouldSetFocus_1,
                                delayError: !1,
                                linguisticSchemaJson: _this.linguisticInfo && _this.linguisticInfo.linguisticSchemaJson,
                                inferredTermBinding: _this.linguisticInfo && _this.linguisticInfo.inferredTermBinding,
                                incomingTags: _this.initialUtteranceFromSaved ? [ "SavedQuestion" ] : void 0,
                                specifiedSpans: void 0,
                                isCommitInCommitQuestionOnDemandMode: !(null === (_b = null === (_a = _this.fullConfig) || void 0 === _a ? void 0 : _a.commitOnDemandConfigs) || void 0 === _b ? void 0 : _b.noCommitOnInitialUtterance)
                            });
                        });
                    }
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(QnaInputV2Component.prototype, "spanElementRefs", {
                set: function(elementRefs) {
                    var _this = this;
                    _.forEach(elementRefs.toArray(), function(elementRef) {
                        (0, fromEvent.R)(elementRef.nativeElement, "click").pipe((0, takeUntil.R)(_this.destroy$)).subscribe(function(event) {
                            var selection = _this.getUtteranceSelection();
                            _this.cursorLocation$.next(getUtteranceSelectionPosition(1, selection)), _this.flushUnderlineDelayApply(), 
                            stopPropagation(event);
                            var selectionAnchor = getUtteranceSelectionPosition(0, selection);
                            -1 !== selectionAnchor && _this.showDropdownAtPosition(1, selectionAnchor);
                        });
                    });
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(QnaInputV2Component.prototype, "qnaInputContainerElementRef", {
                set: function(elementRef) {
                    var _this = this;
                    elementRef && (this.qnaInputContainerElement = elementRef.nativeElement, (0, fromEvent.R)(elementRef.nativeElement, "focusout").pipe((0, 
                    takeUntil.R)(this.destroy$)).subscribe(function(event) {
                        var eventRelatedTargetElement = event.relatedTarget, srcElement = event.target, srcFromAutoComplete = !!srcElement && ieProofNodeContains(_this.autoCompleteElement, srcElement), dismissDropdown = !1;
                        eventRelatedTargetElement || srcFromAutoComplete ? eventRelatedTargetElement && !ieProofNodeContains(_this.qnaInputContainerElement, eventRelatedTargetElement) && (dismissDropdown = !0) : dismissDropdown = !0, 
                        dismissDropdown && _this.showHideDropdown(!1, {
                            utterance: _this.getCurrentUtteranceSpaceNormalized()
                        });
                    }));
                },
                enumerable: !1,
                configurable: !0
            }), QnaInputV2Component.prototype.ngOnInit = function() {
                var _a;
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var _b, _c, clearCommitActionsVisible$, initialFullPresentation, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_d) {
                        switch (_d.label) {
                          case 0:
                            return this.qnaProxyPath = this.qnaProxyPathToken || "@powerbi/Qna/qnaweb.module#QnaWebModule", 
                            _b = this, [ 4, this.lazyProvider.get(this.qnaProxyPath, "InterpretServiceModern") ];

                          case 1:
                            return _b.interpretService = _d.sent(), _c = this, [ 4, this.lazyProvider.get(this.qnaModelUtilsPathToken || "@powerbi/Qna/qnaweb.module#QnaWebModule", "qnaModelUtilsService") ];

                          case 2:
                            return _c.qnaModelUtils = _d.sent(), this.fullConfig = _.merge({}, defaultConfig, this.configs), 
                            [ 4, this.updateCommitOnDemandMode() ];

                          case 3:
                            return _d.sent(), this.placeholder$ = this.fullConfig.showPlaceholderText ? _.isEmpty(this.fullConfig.customPlaceholderText) ? this.interpretService.getPlaceholderText(this.qnaSupportedScopes).pipe((0, 
                            take.q)(1), (0, map.U)(function(result) {
                                return result.result;
                            })) : (0, of.of)(this.fullConfig.customPlaceholderText) : (0, of.of)(""), this.fullConfig.showLoadingIcon && this.interpretListener.getObservable().subscribe(function(result) {
                                if (result && 1 === result.resultType && null != result.retryWarning) {
                                    var retryMessage_1 = getWarningMessage([ result.retryWarning ], _this.qnaProxyPath, _this.localizationService);
                                    if (debug.fF.assert(function() {
                                        return !_.isEmpty(retryMessage_1);
                                    }, "Unmapped retry warning"), !_.isEmpty(retryMessage_1)) {
                                        var tooltipConfig = {
                                            tooltipShowOnFocus: !0,
                                            tooltipDescription: retryMessage_1,
                                            tooltipDelay: 0,
                                            tooltipHideDelay: 0,
                                            tooltipArrowPosition: _this.getWarningLoadingIconTooltipArrowPosition()
                                        };
                                        _this.loadingStateTooltipConfig$.next(tooltipConfig);
                                    }
                                }
                            }), this.ariaLabel = this.screenReaderService.concatMessages([ this.fullConfig.customAriaLabel ? this.fullConfig.customAriaLabel : this.localizationService.get("Qna_ScreenReader_TextboxLabel"), this.localizationService.get("Qna_ScreenReader_InitialInstruction") ]), 
                            this.resetTags(), this.presentationSubject$ = new BehaviorSubject.X(this.presentationArgs), 
                            this.interpretUtteranceRequest$ = new BehaviorSubject.X(void 0), this.fullPresentation$ = this.presentationSubject$.pipe((0, 
                            map.U)(function(newPresentation) {
                                var newValue = _.merge({}, defaultPresentation, newPresentation);
                                return newValue.singleUnderlineThickness = 2 + Math.floor(newValue.questionFontProperties.size.px / 20), 
                                newValue;
                            }), (0, tap.b)(function(newFullPresentation) {
                                _this.autoCompleteInputArgs.presentation.next(newFullPresentation), _this.errorBackgroundColorString = (0, 
                                colorUtility.Et)(newFullPresentation.errorUnderlineColor, .15), _this.warningBackgroundColorString = (0, 
                                colorUtility.Et)(newFullPresentation.warningUnderlineColor, .15), _this.acceptedBackgroundColorString = (0, 
                                colorUtility.Et)(newFullPresentation.acceptedUnderlineColor, .15);
                            }), (0, shareReplay.d)()), this.fullConfig.showWarningIcon && this.fullConfig.disableAuthoring && !_.isEmpty(this.fullConfig.disableAuthoringMessage) && this.warningStateTooltipConfig$.next({
                                tooltipShowOnFocus: !0,
                                tooltipDescription: this.fullConfig.disableAuthoringMessage,
                                tooltipDelay: 0,
                                tooltipHideDelay: 0,
                                tooltipArrowPosition: this.getWarningLoadingIconTooltipArrowPosition()
                            }), this.displayedUtteranceInternal$.pipe((0, takeUntil.R)(this.destroy$), (0, distinctUntilChanged.x)()).subscribe(function(value) {
                                _this.distinctDisplayedUtterance$.next(value);
                            }), this.isDisplayedUtteranceEmpty$ = this.distinctDisplayedUtterance$.pipe((0, 
                            takeUntil.R)(this.destroy$), (0, map.U)(function(utterance) {
                                return _.isEmpty(utterance);
                            }), (0, distinctUntilChanged.x)(), (0, shareReplay.d)(1)), this.fullConfig.showActionButtons ? this.inCommitOnDemandMode ? (this.interpretUtteranceRequest$.pipe((0, 
                            takeUntil.R)(this.destroy$), (0, map.U)(function(request) {
                                return null != request && !request.isCommitInCommitQuestionOnDemandMode;
                            }), (0, distinctUntilChanged.x)()).subscribe(function(requestUncommitted) {
                                _this.hasUncommittedQuestion$.next(requestUncommitted);
                            }), clearCommitActionsVisible$ = (0, combineLatest.aj)([ this.hasFocus$, this.isDisplayedUtteranceEmpty$, this.hasUncommittedQuestion$ ]).pipe((0, 
                            takeUntil.R)(this.destroy$), (0, map.U)(function(_a) {
                                return !!_a[2] || _a[0] && !_a[1];
                            }), (0, distinctUntilChanged.x)(), (0, share.B)()), this.commitActionVisible$ = (null === (_a = this.fullConfig.commitOnDemandConfigs) || void 0 === _a ? void 0 : _a.hideCommitActionUI) ? (0, 
                            of.of)(!1) : clearCommitActionsVisible$.pipe((0, takeUntil.R)(this.destroy$)), this.clearActionVisible$ = clearCommitActionsVisible$.pipe((0, 
                            takeUntil.R)(this.destroy$))) : (this.commitActionVisible$ = (0, of.of)(!1), this.clearActionVisible$ = (0, 
                            combineLatest.aj)([ this.hasFocus$, this.isDisplayedUtteranceEmpty$ ]).pipe((0, 
                            takeUntil.R)(this.destroy$), (0, map.U)(function(_a) {
                                return _a[0] && !_a[1];
                            }), (0, distinctUntilChanged.x)())) : (this.commitActionVisible$ = (0, of.of)(!1), 
                            this.clearActionVisible$ = (0, of.of)(!1), this.noResetAllActionIndication = !0), 
                            this.isDisplayedUtteranceEmpty$.pipe((0, takeUntil.R)(this.destroy$)).subscribe(function(isEmpty) {
                                isEmpty && (!_.isEmpty(_this.utteranceSuggestions) && _this.isInputBoxFocused() ? _this.showUtteranceSuggestions() : _this.contentElement && (_this.updateAutoCompleteArgsCommand$.next(void 0), 
                                _this.showHideDropdown(!1), _this.resetPausedTagTimeoutHandler(!1)));
                            }), this.interpretResponse$ = this.interpretUtteranceRequest$.pipe((0, scan.R)(function(accumulator, current) {
                                return accumulator.push(current), accumulator.slice(-2);
                            }, []), (0, filter.h)(function(upToLast2Requests) {
                                var _a, _b, lastRequest = _.last(upToLast2Requests);
                                if (!lastRequest) return !1;
                                var lastRequestUtterance = null !== (_a = getSpaceNormalizedString(lastRequest.utterance)) && void 0 !== _a ? _a : "", initialUtteranceToCompare = null !== (_b = _this.initialUtterance) && void 0 !== _b ? _b : "";
                                return debug.fF.assert(function() {
                                    return null != _this.contentElement || initialUtteranceToCompare === lastRequestUtterance;
                                }, "If an interpret request sent in before this.contentElement is even initialized, we expect its utterance to be the same as 'initialUtterance' but now it's not. Re-check this assumption and fix accordingly."), 
                                null != _this.contentElement || initialUtteranceToCompare !== lastRequestUtterance;
                            }), (0, tap.b)(function(upToLast2Requests) {
                                _.nth(upToLast2Requests, 0) && _.nth(upToLast2Requests, 1) && !utterancesEqualAfterNormalizeSpace(upToLast2Requests[0].utterance, upToLast2Requests[1].utterance) && _this.showGrippersAroundTextRangeRequest$.next(void 0);
                            }), (0, map.U)(function(upToLast2Requests) {
                                var request = _.last(upToLast2Requests);
                                if (!request.utteranceUITextAlreadyEnsured) {
                                    var newUtterance = getSpaceNormalizedString(request.utterance), currentSelection = _this.getUtteranceSelection(), contentElementUpdated = _this.ensureContentElementUtteranceText(newUtterance);
                                    _this.displayedUtteranceInternal$.next(newUtterance);
                                    var focusEnd = !1;
                                    if (contentElementUpdated ? (currentSelection || request.enforceFocus) && (currentSelection && _this.isValidRange(currentSelection) ? _this.setUtteranceSelection(currentSelection) : focusEnd = !0) : !currentSelection && request.enforceFocus && (focusEnd = !0), 
                                    focusEnd) {
                                        var utteranceLength = request.utterance.length;
                                        _this.setUtteranceSelection({
                                            normalizedAnchor: utteranceLength,
                                            normalizedFocus: utteranceLength
                                        });
                                    }
                                }
                                return request;
                            }), (0, filter.h)(function(request) {
                                return !!request;
                            }), (0, tap.b)(function(request) {
                                _this.displayedUtteranceInternal$.next(getSpaceNormalizedString(request.utterance));
                            }), (0, switchMap.w)(function(request) {
                                return _this.interpretInternal(request);
                            })), this.currentUtteranceInterpretResponse$ = (0, combineLatest.aj)([ this.interpretUtteranceRequest$, this.interpretResponse$ ]).pipe((0, 
                            map.U)(function(_a) {
                                var newRequest = _a[0], newResponse = _a[1];
                                if (newResponse && newRequest && newResponse.interpretRequestId === newRequest.uniqueId && getSpaceNormalizedString(newRequest.utterance) === _this.getCurrentUtteranceSpaceNormalized()) return (0, 
                                tslib_es6.__assign)((0, tslib_es6.__assign)({}, newResponse), {
                                    suppressSuggestions: newRequest.suppressSuggestions,
                                    requireCursorAtEndIfFocused: newRequest.requireCursorAtEndIfFocused,
                                    enforceFocus: newRequest.enforceFocus,
                                    delayError: newRequest.delayError,
                                    isFromInputEvent: newRequest.isFromInputEvent
                                });
                            }), (0, filter.h)(function(response) {
                                return !!response;
                            }), (0, takeUntil.R)(this.destroy$), (0, share.B)()), this.currentUtteranceInterpretResponseProcessed$ = this.currentUtteranceInterpretResponse$.pipe((0, 
                            tap.b)(function(response) {
                                if (_this.loadingStateTooltipConfig$.next(void 0), _this.fullConfig.showWarningIcon) {
                                    var messageToDisplay = getWarningMessage(null == response ? void 0 : response.warnings, _this.qnaProxyPath, _this.localizationService);
                                    if (!_.isEmpty(messageToDisplay)) {
                                        var warningTooltip = {
                                            tooltipShowOnFocus: !0,
                                            tooltipDescription: _.isEmpty(_this.fullConfig.disableAuthoringMessage) ? messageToDisplay : _this.localizationService.format("Qna_Input_Warning_AuthoringDisabled_Plus_AnotherWarning", [ _this.fullConfig.disableAuthoringMessage, messageToDisplay ]),
                                            tooltipDelay: 0,
                                            tooltipHideDelay: 0,
                                            tooltipArrowPosition: _this.getWarningLoadingIconTooltipArrowPosition()
                                        };
                                        _this.warningStateTooltipConfig$.next(warningTooltip);
                                    }
                                }
                            }), (0, filter.h)(function(response) {
                                return response && !(_.isEmpty(response.utterance) && !response.results);
                            }), (0, map.U)(function(response) {
                                var _a;
                                return {
                                    utterance: response.utterance,
                                    fullCoverageSpans: generateUtteranceTextFullCoverageSpans(response),
                                    modelOwner: null === (_a = _.first(response.results)) || void 0 === _a ? void 0 : _a.modelOwner,
                                    suppressSuggestions: response.suppressSuggestions,
                                    requireCursorAtEndIfFocused: response.requireCursorAtEndIfFocused,
                                    enforceFocus: response.enforceFocus,
                                    delayError: response.delayError,
                                    isFromInputEvent: response.isFromInputEvent
                                };
                            }), (0, tap.b)(function(response) {
                                var selectionAnchor = _this.getUtteranceSelectionAnchor();
                                response.suppressSuggestions ? _this.showHideDropdown(!1) : _this.updateAutoCompleteArgsCommand$.next({
                                    matchingUtterance: response.utterance,
                                    cursorPosition: Math.max(selectionAnchor, 0),
                                    triggerSource: 0,
                                    spans: response.fullCoverageSpans
                                });
                            }), (0, share.B)()), initialFullPresentation = _.merge({}, defaultPresentation, this.presentationArgs), 
                            this.setupAutoCompleteRelatedPipes(initialFullPresentation), this.uiSpans$ = this.currentUtteranceInterpretResponseProcessed$.pipe((0, 
                            debounce.D)(function(response) {
                                return (0, timer.H)(response.isFromInputEvent ? 200 : 0);
                            }), (0, filter.h)(function(response) {
                                return getSpaceNormalizedString(response.utterance) === _this.getCurrentUtteranceSpaceNormalized();
                            }), (0, map.U)(function(response) {
                                return {
                                    response,
                                    currentSelection: _this.contentElement ? _this.getUtteranceSelection() : void 0
                                };
                            }), (0, tap.b)(function(responseAndSelection) {
                                var originalUtteranceNormalized = getSpaceNormalizedString(responseAndSelection.response && responseAndSelection.response.utterance), originalSelection = responseAndSelection.currentSelection;
                                _this.cleanContentElement(), _this.cursorLocation$.next(-1), _this.ensureAngularCommentNodes(), 
                                _this.contentElement.contentEditable = "false";
                                var response = responseAndSelection.response;
                                setTimeout(function() {
                                    _this.changeDetectorRef.detectChanges();
                                    var currentUtteranceNormalized = _this.getCurrentUtteranceSpaceNormalized();
                                    if (originalSelection) {
                                        var restoreSelection = !1;
                                        response.requireCursorAtEndIfFocused || originalUtteranceNormalized === currentUtteranceNormalized && (restoreSelection = !0), 
                                        _this.setUtteranceSelection(restoreSelection ? originalSelection : {
                                            normalizedAnchor: utteranceLength = currentUtteranceNormalized.length,
                                            normalizedFocus: utteranceLength
                                        });
                                    } else if (_this.isInputBoxFocused() || response.enforceFocus) {
                                        var utteranceLength;
                                        _this.setUtteranceSelection({
                                            normalizedAnchor: utteranceLength = currentUtteranceNormalized.length,
                                            normalizedFocus: utteranceLength
                                        });
                                    }
                                    _this.isInputBoxFocused() && _this.cursorLocation$.next(_this.getUtteranceCursorPosition()), 
                                    _this.contentElement.contentEditable = "true";
                                }, 1);
                            }), (0, map.U)(function(responseAndSelection) {
                                var response = responseAndSelection.response;
                                return {
                                    uiSpans: convertToUISpans(response.fullCoverageSpans, _this.fullConfig),
                                    delayError: response.delayError,
                                    cursorPosition: responseAndSelection.currentSelection ? responseAndSelection.currentSelection.normalizedFocus : -1
                                };
                            }), (0, tap.b)(function(result) {
                                if (_this.cancelUnderlineDelayApply(), result.delayError) {
                                    var targetSpan, applyUnderline_1, cursorPosition = result.cursorPosition;
                                    -1 !== cursorPosition && (targetSpan = _.find(result.uiSpans, function(uiSpan) {
                                        return !uiSpan.isWhiteSpace && cursorPosition >= uiSpan.startIndex && cursorPosition <= uiSpan.endExcludingIndex;
                                    })), targetSpan || (targetSpan = _.last(result.uiSpans)), targetSpan && (targetSpan.shouldShowErrorUnderline || targetSpan.shouldShowWarningUnderline) && (targetSpan.shouldShowErrorUnderline ? (targetSpan.shouldShowErrorUnderline = !1, 
                                    applyUnderline_1 = function() {
                                        targetSpan.shouldShowErrorUnderline = !0;
                                    }) : (targetSpan.shouldShowWarningUnderline = !1, applyUnderline_1 = function() {
                                        targetSpan.shouldShowWarningUnderline = !0;
                                    }), _this.underlineDelayApplyInfo = {
                                        timeoutHandler: setTimeout(function() {
                                            applyUnderline_1(), _this.delayedSpanUnderlineStyleUpdated$.next(!0);
                                        }, _this.fullConfig.showErrorWarningUnderlineTimeout),
                                        apply: applyUnderline_1
                                    });
                                }
                            }), (0, map.U)(function(result) {
                                return result.uiSpans;
                            }), (0, share.B)()), this.uiSpanWithCursor$ = (0, combineLatest.aj)([ this.uiSpans$, this.cursorLocation$ ]).pipe((0, 
                            takeUntil.R)(this.destroy$), (0, map.U)(function(_a) {
                                var cursorLocation = _a[1];
                                if (!(cursorLocation < 0)) for (var _i = 0, _b = _a[0] || []; _i < _b.length; _i++) {
                                    var uiSpan = _b[_i];
                                    if (!uiSpan.isWhiteSpace && uiSpan.text.length > 0 && cursorLocation >= uiSpan.startIndex && cursorLocation <= uiSpan.endExcludingIndex) return uiSpan;
                                }
                            }), (0, share.B)()), this.uiSpanWithCursor$.pipe((0, takeUntil.R)(this.destroy$), (0, 
                            filter.h)(function(uiSpan) {
                                return !!uiSpan;
                            })).subscribe(function(uiSpan) {
                                uiSpan.shouldShowErrorUnderline && _this.showGrippersAroundTextRangeRequest$.next({
                                    startIndex: uiSpan.startIndex,
                                    endExcludingIndex: uiSpan.endExcludingIndex
                                });
                            }), this.setupCorrectionRelatedPipes(), this.setupGrippersRelatedPipes(), (0, combineLatest.aj)([ this.uiSpans$, this.uiSpanWithCursor$, this.uiSpanWithMouseHover$, this.grippersInfo.grippersLocationDuringDragging$, this.tokensGripperLocInfoUpdated$, this.delayedSpanUnderlineStyleUpdated$ ]).pipe((0, 
                            takeUntil.R)(this.destroy$)).subscribe(function(_a) {
                                var uiSpans = _a[0], uiSpanWithCursor = _a[1], uiSpanWithMouseHover = _a[2], grippersLocationDuringDragging = _a[3], isSomeGripperOnDragging = (null == grippersLocationDuringDragging ? void 0 : grippersLocationDuringDragging.associatedUISpans) === uiSpans && !!(null == grippersLocationDuringDragging ? void 0 : grippersLocationDuringDragging.begin) && !!(null == grippersLocationDuringDragging ? void 0 : grippersLocationDuringDragging.end);
                                _.forEach(uiSpans, function(uiSpan) {
                                    var backgroundState = _this.getUISpanBackgroundState(uiSpan, uiSpan === uiSpanWithCursor, uiSpan === uiSpanWithMouseHover, isSomeGripperOnDragging);
                                    uiSpan.backgroundColor = "error" === backgroundState ? _this.errorBackgroundColorString : "warning" === backgroundState ? _this.warningBackgroundColorString : "accepted" === backgroundState ? _this.acceptedBackgroundColorString : "transparent";
                                });
                            }), this.iconFontSize$ = this.fullPresentation$.pipe((0, map.U)(function(presentation) {
                                return _this.getIconFontSizePx(presentation);
                            })), this.questionIconProperties = {
                                state$: new BehaviorSubject.X("normal"),
                                ariaLabel$: new BehaviorSubject.X(this.localizationService.get("Qna_ScreenReader_TextboxIcon")),
                                tooltipConfig$: new BehaviorSubject.X(void 0),
                                loadingWarningPresentation$: new BehaviorSubject.X(void 0)
                            }, (0, combineLatest.aj)([ this.loadingStateTooltipConfig$, this.warningStateTooltipConfig$ ]).pipe((0, 
                            takeUntil.R)(this.destroy$)).subscribe(function(_a) {
                                var loadingTooltipConfig = _a[0], warningTooltipConfig = _a[1], tooltipConfig = null != loadingTooltipConfig ? loadingTooltipConfig : warningTooltipConfig;
                                _this.questionIconProperties.state$.next(loadingTooltipConfig ? "loading" : warningTooltipConfig ? "warning" : "normal");
                                var displayToolTipMessages = [ _this.localizationService.get("Qna_ResetAllStates_Tooltip") ];
                                (null == tooltipConfig ? void 0 : tooltipConfig.tooltipDescription) && displayToolTipMessages.push(null == tooltipConfig ? void 0 : tooltipConfig.tooltipDescription);
                                var displayToolTipMessage = displayToolTipMessages.join("\n\n"), displayToolTipConfig = (0, 
                                tslib_es6.__assign)({}, null != tooltipConfig ? tooltipConfig : {
                                    tooltipShowOnFocus: !0,
                                    tooltipDescription: "",
                                    tooltipDelay: 0,
                                    tooltipHideDelay: 0,
                                    tooltipArrowPosition: _this.getWarningLoadingIconTooltipArrowPosition()
                                });
                                displayToolTipConfig.tooltipDescription = displayToolTipMessage, _this.questionIconProperties.tooltipConfig$.next(displayToolTipConfig), 
                                _this.questionIconProperties.ariaLabel$.next(displayToolTipConfig.tooltipDescription);
                            }), this.fullPresentation$.pipe((0, takeUntil.R)(this.destroy$)).subscribe(function(presentation) {
                                var questionIconBallRadius = _this.getQuestionIconWarningCirleRadius(presentation);
                                _this.questionIconProperties.loadingWarningPresentation$.next({
                                    width: 2 * questionIconBallRadius,
                                    height: 2 * questionIconBallRadius,
                                    right: 1 - questionIconBallRadius + 1,
                                    top: 1 - questionIconBallRadius + 1,
                                    r: questionIconBallRadius,
                                    cx: questionIconBallRadius,
                                    cy: questionIconBallRadius,
                                    strokeColor: presentation.backgroundColor,
                                    strokeWidth: 1,
                                    fillColor: presentation.commitButtonBackgroundColor
                                });
                            }), this.hasInitialized = !0, this.initialized && this.initialized.emit(), [ 2 ];
                        }
                    });
                });
            }, QnaInputV2Component.prototype.ngOnChanges = function(changes) {
                if (this.hasInitialized) {
                    var currentPresentationArgs = changes.presentationArgs && changes.presentationArgs.currentValue;
                    if (currentPresentationArgs) {
                        var previousPresentationArgs = changes.presentationArgs.previousValue, newValue = previousPresentationArgs ? _.merge({}, previousPresentationArgs, currentPresentationArgs) : currentPresentationArgs;
                        this.presentationSubject$.next(newValue);
                    }
                    var currentConfigs = changes.configs && changes.configs.currentValue;
                    if (currentConfigs) {
                        var previousConfigs = changes.configs.previousValue;
                        newValue = previousConfigs ? _.merge({}, previousConfigs, currentConfigs) : currentConfigs, 
                        debug.fF.assertValue(this.fullConfig, "this.fullConfig should have been initialized inside ngOnInit, since it comes here only if this.hasInitialized."), 
                        this.fullConfig = _.merge({}, this.fullConfig, newValue);
                    }
                }
            }, QnaInputV2Component.prototype.ngOnDestroy = function() {
                this.destroy$.next(), this.destroy$.complete();
            }, Object.defineProperty(QnaInputV2Component.prototype, "currentDisplayedUtterance", {
                get: function() {
                    return this.distinctDisplayedUtterance$.value;
                },
                enumerable: !1,
                configurable: !0
            }), QnaInputV2Component.prototype.isEditable = function() {
                return !this.fullConfig.disableAuthoring;
            }, QnaInputV2Component.prototype.focus = function() {
                var _a;
                if (this.contentElement && !(null === (_a = this.fullConfig) || void 0 === _a ? void 0 : _a.disableAuthoring)) return this.contentElement.focus(), 
                !0;
            }, QnaInputV2Component.prototype.actionButtonsContainerClicked = function() {
                this.focus();
            }, QnaInputV2Component.prototype.clearButtonClicked = function(event) {
                stopPropagation(event), this.clearUtterance(!0);
            }, QnaInputV2Component.prototype.commitButtonClicked = function(event) {
                stopPropagation(event), this.hasUncommittedQuestion$.value && this.commitUtterance();
            }, QnaInputV2Component.prototype.showGrippersAroundTextRange = function(textRange) {
                var _this = this;
                debug.fF.assert(function() {
                    return _this.fullConfig.supportTokenGrippers;
                }, "this should be called only when this.fullConfig.supportTokenGrippers is true"), 
                this.showGrippersAroundTextRangeRequest$.next(textRange);
            }, QnaInputV2Component.prototype.interpretUtterance = function(incomingRequest) {
                var utterance = incomingRequest.utterance, isCommitInCommitQuestionOnDemandMode = incomingRequest.isCommitInCommitQuestionOnDemandMode, specifiedSpans = incomingRequest.specifiedSpans;
                if (this.inCommitOnDemandMode) if (incomingRequest.useUncommittedUtterance && this.hasUncommittedQuestion$.value) {
                    var uncommittedUtterance = this.getCurrentUtteranceSpaceNormalized();
                    uncommittedUtterance !== utterance && (utterance = uncommittedUtterance, isCommitInCommitQuestionOnDemandMode = !0, 
                    specifiedSpans = void 0);
                } else this.hasUncommittedQuestion$.value || incomingRequest.utterance !== this.getCurrentUtteranceSpaceNormalized() || (isCommitInCommitQuestionOnDemandMode = !0);
                this.interpretUtteranceRequest$.next({
                    utterance,
                    uniqueId: Utility.b$.generateGuid(),
                    isCommitInCommitQuestionOnDemandMode,
                    utteranceUITextAlreadyEnsured: !1,
                    delayError: !1,
                    enforceFocus: incomingRequest.enforceFocus,
                    requireCursorAtEndIfFocused: incomingRequest.requireCursorAtEndIfFocused,
                    suppressSuggestions: incomingRequest.suppressSuggestions,
                    incomingTags: incomingRequest.incomingTags,
                    linguisticSchemaJson: this.linguisticInfo && this.linguisticInfo.linguisticSchemaJson,
                    inferredTermBinding: this.linguisticInfo && this.linguisticInfo.inferredTermBinding,
                    specifiedSpans
                });
            }, QnaInputV2Component.prototype.clearUtterance = function(enforceInputboxFocus, commitIfCommitOnDemandMode) {
                var _this = this;
                void 0 === commitIfCommitOnDemandMode && (commitIfCommitOnDemandMode = !1), this.undoRedoService.register(this.inCommitOnDemandMode && commitIfCommitOnDemandMode ? "Reset Qna state" : "Clear QnA utterance", function() {
                    var inCommitOnDemandModeAndIsCommit = !!_this.inCommitOnDemandMode && commitIfCommitOnDemandMode;
                    _this.interpretUtteranceRequest$.next({
                        uniqueId: Utility.b$.generateGuid(),
                        utterance: "",
                        utteranceUITextAlreadyEnsured: !1,
                        delayError: !1,
                        enforceFocus: !!enforceInputboxFocus,
                        requireCursorAtEndIfFocused: !1,
                        suppressSuggestions: !0,
                        linguisticSchemaJson: void 0,
                        inferredTermBinding: void 0,
                        incomingTags: void 0,
                        specifiedSpans: void 0,
                        isCommitInCommitQuestionOnDemandMode: inCommitOnDemandModeAndIsCommit
                    });
                });
            }, QnaInputV2Component.prototype.commitUtterance = function() {
                var _this = this;
                debug.fF.assert(function() {
                    return _this.inCommitOnDemandMode;
                }, "expect this.inCommitOnDemandMode to be true"), this.undoRedoService.register("Commit QnA utterance", function() {
                    _this.interpretUtteranceRequest$.next({
                        uniqueId: Utility.b$.generateGuid(),
                        utterance: _this.displayedUtteranceInternal$.value,
                        isCommitInCommitQuestionOnDemandMode: !0,
                        utteranceUITextAlreadyEnsured: !0,
                        delayError: !1,
                        enforceFocus: !0,
                        requireCursorAtEndIfFocused: !1,
                        suppressSuggestions: !0,
                        linguisticSchemaJson: void 0,
                        inferredTermBinding: void 0,
                        incomingTags: [ "Committed" ],
                        specifiedSpans: void 0
                    });
                });
            }, QnaInputV2Component.prototype.resetAllState = function() {
                this.clearUtterance(!0, !0);
            }, QnaInputV2Component.prototype.replaceWithCorrectedUtterance = function(utterance, correctionState) {
                if (1 === correctionState || 2 === correctionState) {
                    var additionalTags = 1 === correctionState ? [ "DidYouMean" ] : [ "ShowingResultsFor" ];
                    return additionalTags.push("Committed"), void this.replaceWithUtterance(utterance, !0, !0, !0, additionalTags);
                }
                debug.fF.assertFail("this should only be called for didYouMean or showingResultsFor");
            }, QnaInputV2Component.prototype.onSpanMouseEnter = function(span) {
                this.uiSpanWithMouseHover$.next(span);
            }, QnaInputV2Component.prototype.onSpanMouseLeave = function(span) {
                this.uiSpanWithMouseHover$.value === span && this.uiSpanWithMouseHover$.next(void 0);
            }, QnaInputV2Component.prototype.gripperKeyUp = function(event, currentDropZoneInfo, gripper) {
                var _this = this, isBeginGripper = "beginGripper" === gripper;
                if (isBeginGripper || "endGripper" === gripper) {
                    if ("Escape" === event.key) return stopPropagation(event), preventDefault(event), 
                    this.setUtteranceSelection({
                        normalizedAnchor: currentDropZoneInfo.position,
                        normalizedFocus: currentDropZoneInfo.position
                    }), void this.updateAutoCompleteArgsCommand$.next({
                        matchingUtterance: this.getCurrentUtteranceSpaceNormalized(),
                        cursorPosition: currentDropZoneInfo.position,
                        triggerSource: 2,
                        spans: void 0
                    });
                    if ("ArrowDown" === event.key) return stopPropagation(event), preventDefault(event), 
                    this.setUtteranceSelection({
                        normalizedAnchor: currentDropZoneInfo.position,
                        normalizedFocus: currentDropZoneInfo.position
                    }), void this.arrowDownOnInputboxHanlder();
                    var movePrevious = "ArrowLeft" === event.key;
                    (movePrevious || "ArrowRight" === event.key) && (stopPropagation(event), preventDefault(event), 
                    this.showHideDropdown(!1), this.tryDropGripperInZone(gripper, isBeginGripper ? movePrevious ? currentDropZoneInfo.previousBeginGripperZoneInfo : currentDropZoneInfo.nextBeginGripperZoneInfo : movePrevious ? currentDropZoneInfo.previousEndGripperZoneInfo : currentDropZoneInfo.nextEndGripperZoneInfo) && setTimeout(function() {
                        var _a, _b, gripperElement = isBeginGripper ? null === (_a = _this.beginGripperElementRef) || void 0 === _a ? void 0 : _a.nativeElement : null === (_b = _this.endGripperElementRef) || void 0 === _b ? void 0 : _b.nativeElement;
                        gripperElement && gripperElement.focus();
                    }));
                }
            }, QnaInputV2Component.prototype.getWarningLoadingIconTooltipArrowPosition = function() {
                return constants.xI.arrowBottomLeft;
            }, QnaInputV2Component.prototype.getIconFontSizePx = function(presentation) {
                return Math.max(presentation.questionFontProperties.size.px, 14);
            }, QnaInputV2Component.prototype.getQuestionIconWarningCirleRadius = function(presentation) {
                var iconFontSizePx = this.getIconFontSizePx(presentation);
                return 3 + .5 * (Math.floor(iconFontSizePx / 4) - 4) + 1;
            }, QnaInputV2Component.prototype.updateCommitOnDemandMode = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var commitOnDemandForcedMode, models, _a;
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return debug.fF.assertValue(this.fullConfig, "this.fullConfig should already been set"), 
                            null != (commitOnDemandForcedMode = this.fullConfig.commitOnDemandForcedMode) ? (this.inCommitOnDemandMode = "AlwaysOn" === commitOnDemandForcedMode, 
                            [ 2 ]) : (this.inCommitOnDemandMode = !1, models = _.map(this.qnaSupportedScopes, function(scope) {
                                return scope.model;
                            }), _a = this, [ 4, (0, qna_model_util.U)(_.map(models, function(m) {
                                return {
                                    datasetName: m.dbName,
                                    datasetId: m.id
                                };
                            }), this.qnaModelUtils, this.featureSwitchService) ]);

                          case 1:
                            return _a.inCommitOnDemandMode = _b.sent(), [ 2 ];
                        }
                    });
                });
            }, QnaInputV2Component.prototype.getCurrentUtteranceSpaceNormalized = function() {
                return this.contentElement ? getSpaceNormalizedString(this.contentElement.textContent) : void 0;
            }, QnaInputV2Component.prototype.getUISpanBackgroundState = function(span, isCursorAtSpan, isMouseHoverSpan, isGripperOnDragging) {
                return span.shouldShowAcceptedUnderline || span.shouldShowErrorUnderline || span.shouldShowWarningUnderline ? ((isCursorAtSpan || isMouseHoverSpan) && (showSpecialState = !isGripperOnDragging && !_.some(span.tokens, function(token) {
                    return token.isBetweenOnDraggingGrippers || token.isBetweenDroppedGrippers;
                })), showSpecialState ? span.shouldShowErrorUnderline ? "error" : span.shouldShowWarningUnderline ? "warning" : "accepted" : "normal") : "normal";
                var showSpecialState;
            }, QnaInputV2Component.prototype.replaceWithUtterance = function(utterance, suppressSuggestions, enforceFocus, isCommitInCommitQuestionOnDemandMode, incomingTags) {
                var _this = this;
                this.undoRedoService.register("Replace QnA utterance", function() {
                    var _a, _b;
                    _this.interpretUtteranceRequest$.next({
                        uniqueId: Utility.b$.generateGuid(),
                        utterance,
                        utteranceUITextAlreadyEnsured: !1,
                        suppressSuggestions,
                        requireCursorAtEndIfFocused: !0,
                        enforceFocus,
                        delayError: !1,
                        linguisticSchemaJson: null === (_a = _this.linguisticInfo) || void 0 === _a ? void 0 : _a.linguisticSchemaJson,
                        inferredTermBinding: null === (_b = _this.linguisticInfo) || void 0 === _b ? void 0 : _b.inferredTermBinding,
                        incomingTags,
                        specifiedSpans: void 0,
                        isCommitInCommitQuestionOnDemandMode
                    });
                });
            }, QnaInputV2Component.prototype.autoCompleteDropdownItemSelected = function(dropdownSelection) {
                var _a, currentUtteranceNormalized = this.getCurrentUtteranceSpaceNormalized();
                1 === dropdownSelection.action && this.toolingLaunched.emit();
                var isCommitInCommitQuestionOnDemandMode = !(null === (_a = this.fullConfig.commitOnDemandConfigs) || void 0 === _a ? void 0 : _a.noCommitOnDropdownSelection);
                _.isEmpty(dropdownSelection.utterance) || getSpaceNormalizedString(dropdownSelection.utterance) === currentUtteranceNormalized ? this.showHideDropdown(!!dropdownSelection.showDropdown, {
                    incomingTags: dropdownSelection.tags,
                    utterance: currentUtteranceNormalized
                }) : (this.resetPausedTagTimeoutHandler(!1), this.replaceWithUtterance(getSpaceNormalizedString(dropdownSelection.utterance), !0, !0, isCommitInCommitQuestionOnDemandMode, dropdownSelection.tags), 
                this.showHideDropdown(!1)), this.inCommitOnDemandMode && isCommitInCommitQuestionOnDemandMode && this.hasUncommittedQuestion$.value && this.commitUtterance();
            }, QnaInputV2Component.prototype.autoCompleteFullyExpanded = function() {
                debug.fF.assertValue(this.utteranceSelectionAtLastAutoCompleteInputUpdate, "autocomplete fully expanded, this.utteranceSelectionAtLastAutoCompleteInputUpdate should be defined"), 
                this.utteranceSelectionAtLastAutoCompleteInputUpdate ? this.setUtteranceSelection(this.utteranceSelectionAtLastAutoCompleteInputUpdate) : this.focus();
            }, QnaInputV2Component.prototype.getTokenZoneInfo = function(token, isZoneLocatedBefore) {
                var zones = token.dropZonesInfo;
                if (zones) return isZoneLocatedBefore ? zones.zoneLocatedBeforeInfo : zones.zoneLocatedAfterInfo;
            }, QnaInputV2Component.prototype.dropZonePredicate = function(draggedItem, dropList) {
                return "beginGripper" === draggedItem.data ? !!dropList.data.beginGripperOf : !!dropList.data.endGripperOf;
            }, QnaInputV2Component.prototype.beginGripperDragStarted = function() {
                this.oneGripperDragStarted("beginGripper");
            }, QnaInputV2Component.prototype.endGripperDragStarted = function() {
                this.oneGripperDragStarted("endGripper");
            }, QnaInputV2Component.prototype.gripperEnter = function($event) {
                var _a, _b;
                checkToUpdateGripperLocationOnDragDrop(null === (_a = $event.item) || void 0 === _a ? void 0 : _a.data, null === (_b = $event.container) || void 0 === _b ? void 0 : _b.data, this.grippersInfo.grippersLocationDuringDragging$);
            }, QnaInputV2Component.prototype.dropGripper = function($event) {
                var _a, _b, gripper = null === (_a = $event.item) || void 0 === _a ? void 0 : _a.data, dropZoneInfo = null === (_b = $event.container) || void 0 === _b ? void 0 : _b.data;
                this.tryDropGripperInZone(gripper, dropZoneInfo);
            }, QnaInputV2Component.prototype.tryDropGripperInZone = function(gripper, zoneToDrop) {
                var _a;
                return this.grippersInfo.gripperOnDragging$.next("none"), debug.fF.assertValue(null === (_a = this.grippersInfo.grippersLocationDuringDragging$.value) || void 0 === _a ? void 0 : _a.associatedUISpans, "this.grippersInfo.grippersLocationDuringDragging$.value.associatedUISpans should be defined"), 
                this.grippersInfo.grippersLocationDuringDragging$.next({
                    associatedUISpans: this.grippersInfo.grippersLocationDuringDragging$.value.associatedUISpans,
                    begin: void 0,
                    end: void 0
                }), checkToUpdateGripperLocationOnDragDrop(gripper, zoneToDrop, this.grippersInfo.grippersLocationDropped$);
            }, QnaInputV2Component.prototype.sendFeedback = function(feedback, utterance) {
                return debug.fF.assertValue(feedback, "invalid feedback"), debug.fF.assertValue(utterance, "invalid feedback utterance"), 
                this.interpretService.sendFeedback(feedback, utterance, this.qnaSupportedScopes, this.tags);
            }, QnaInputV2Component.prototype.initializeHighContrastRules = function() {
                this.highContrastCssGenerationService.addRule(".qnaInputV2Container svg *", "{ stroke: @foregroundColor !important; fill: @foregroundColor !important; opacity: 1 !important; }"), 
                this.highContrastCssGenerationService.addRule(".themeableElement .qnaInputV2Container *.disabled, .themeableElement .qnaInputV2Container *.disabled *", "{ color: @disabledTextColor !important; border-color: @disabledTextColor !important; opacity: 1 !important; }"), 
                this.highContrastCssGenerationService.addRule(".themeableElement .inputBox .qnaInputV2Container .inputWithoutAutoCompleteContainer button.actionButton.disabled:hover, .themeableElement .inputBox .qnaInputV2Container .inputWithoutAutoCompleteContainer button.actionButton.disabled:hover * ", "{ background-color: transparent !important; color: @disabledTextColor !important; }"), 
                this.highContrastCssGenerationService.addRule('html[data-focus-source="key"] .inputBox .qnaInputV2Container .beginGripper:focus, html[data-focus-source="key"] .inputBox .qnaInputV2Container .endGripper:focus', "{ outline-color: @foregroundColor; outline-offset: 4px; outline-style: dashed }");
            }, QnaInputV2Component.prototype.showUtteranceSuggestions = function() {
                if (!_.isEmpty(this.utteranceSuggestions)) {
                    var span = {
                        startIndex: 0,
                        endExcludingIndex: 0,
                        text: "",
                        isUnknown: !1,
                        isCorrected: !1,
                        state: "accepted",
                        isOverlapping: !1,
                        isWhiteSpace: !1,
                        isUsed: !1,
                        replacementBindings: {
                            alternates: _.map(this.utteranceSuggestions, function(utteranceSuggestion) {
                                return {
                                    type: 10,
                                    text: utteranceSuggestion,
                                    textSegmentsWithMatchInfo: [ {
                                        text: utteranceSuggestion,
                                        isMatched: !1
                                    } ],
                                    score: 0
                                };
                            })
                        }
                    };
                    this.showHideDropdown(!0), this.autoCompleteInputArgs.params.next({
                        spans: [ span ],
                        cursorPosition: 0,
                        config: {
                            header: {
                                show: !1
                            }
                        }
                    }), this.resetPausedTagTimeoutHandler(!1);
                }
            }, QnaInputV2Component.prototype.resetTags = function() {
                this.tags = [ this.entryPoint ];
            }, QnaInputV2Component.prototype.flushUnderlineDelayApply = function() {
                if (this.underlineDelayApplyInfo) {
                    var applyFunction = this.underlineDelayApplyInfo.apply;
                    this.cancelUnderlineDelayApply(), applyFunction();
                }
            }, QnaInputV2Component.prototype.cancelUnderlineDelayApply = function() {
                this.underlineDelayApplyInfo && (clearTimeout(this.underlineDelayApplyInfo.timeoutHandler), 
                this.underlineDelayApplyInfo.timeoutHandler = void 0, this.underlineDelayApplyInfo = void 0);
            }, QnaInputV2Component.prototype.showDropdownAtCurrentPosition = function(triggerSource) {
                var selectionAnchor = this.getUtteranceSelectionAnchor();
                this.showDropdownAtPosition(triggerSource, selectionAnchor);
            }, QnaInputV2Component.prototype.showDropdownAtPosition = function(triggerSource, cursorPosition) {
                debug.fF.assert(function() {
                    return -1 !== cursorPosition;
                }, "the given cursorPosition should not be -1.");
                var currentDisplayedUtterance = this.getCurrentUtteranceSpaceNormalized();
                debug.fF.assert(function() {
                    return cursorPosition <= _.size(currentDisplayedUtterance);
                }, "the given cursorPosition should not be > current displayed utterance's length."), 
                -1 !== cursorPosition && this.updateAutoCompleteArgsCommand$.next({
                    matchingUtterance: currentDisplayedUtterance,
                    cursorPosition,
                    triggerSource,
                    spans: void 0
                }), this.showHideDropdown(!0);
            }, QnaInputV2Component.prototype.setupAutoCompleteRelatedPipes = function(initialInputFullPresentation) {
                var _this = this;
                this.isDropdownOn$ = new BehaviorSubject.X(!1), this.updateAutoCompleteArgsCommand$ = new BehaviorSubject.X(void 0), 
                this.autoCompleteInputArgs = {
                    params: new BehaviorSubject.X(void 0),
                    presentation: new BehaviorSubject.X(initialInputFullPresentation),
                    selectPrevious: new BehaviorSubject.X(void 0),
                    selectNext: new BehaviorSubject.X(void 0),
                    confirmSelection: new BehaviorSubject.X(void 0)
                }, this.fullConfig.disableAuthoring ? this.shouldShowAutoComplete$ = (0, of.of)(!1) : ((0, 
                combineLatest.aj)([ this.updateAutoCompleteArgsCommand$, this.currentUtteranceInterpretResponseProcessed$ ]).pipe((0, 
                map.U)(function(_a) {
                    var command = _a[0], response = _a[1];
                    if (command && response && utterancesEqualAfterNormalizeSpace(command.matchingUtterance, response.utterance)) return {
                        command,
                        response
                    };
                }), (0, filter.h)(function(value) {
                    return !!value;
                }), (0, distinctUntilChanged.x)(function(prev, curr) {
                    if (prev.command.matchingUtterance === curr.command.matchingUtterance && prev.command.cursorPosition === curr.command.cursorPosition) return !0;
                }), (0, map.U)(function(value) {
                    var _a, _b, autoCompleteCommand = value.command, response = value.response, utterance = _this.getCurrentUtteranceSpaceNormalized(), newParams = {
                        spans: autoCompleteCommand.spans || response.fullCoverageSpans,
                        cursorPosition: autoCompleteCommand.cursorPosition,
                        config: {
                            header: {
                                show: (null === (_a = _this.fullConfig.spanDropdownHeaderConfig) || void 0 === _a ? void 0 : _a.show) && 0 !== autoCompleteCommand.triggerSource && autoCompleteCommand.cursorPosition < utterance.length
                            }
                        },
                        modelOwner: response.modelOwner,
                        dataSourceArray: _this.dataSourcesService.get(),
                        exploration: _this.explorationNavigationService.getCurrentExploration()
                    };
                    return newParams.config.header.show && (newParams.config.header.unknownSpanHeaderConfig = null === (_b = _this.fullConfig.spanDropdownHeaderConfig) || void 0 === _b ? void 0 : _b.unknownSpanHeaderConfig), 
                    {
                        params: newParams,
                        utterance: autoCompleteCommand.matchingUtterance
                    };
                }), (0, takeUntil.R)(this.destroy$)).subscribe(function(result) {
                    _this.autoCompleteInputArgs.params.next(result.params);
                    var toRestartTimer = !_.isEmpty(result.utterance) && !!result.params;
                    _this.resetPausedTagTimeoutHandler(toRestartTimer, result.utterance);
                    var toShowAutocomplete = !_.isEmpty(result.utterance) && !_this.escapedDropdown;
                    _this.showHideDropdown(toShowAutocomplete);
                }), this.shouldShowAutoComplete$ = (0, combineLatest.aj)([ this.isDropdownOn$, this.autoCompleteInputArgs.params ]).pipe((0, 
                map.U)(function(_a) {
                    return !!_a[1] && !!_a[0];
                }), (0, tap.b)(function(shouldShow) {
                    _this.utteranceSelectionAtLastAutoCompleteInputUpdate = shouldShow ? _this.getUtteranceSelection() : void 0;
                }), (0, distinctUntilChanged.x)(), (0, takeUntil.R)(this.destroy$)));
            }, QnaInputV2Component.prototype.setupCorrectionRelatedPipes = function() {
                var _this = this;
                this.currentUtteranceAutoCorrectionInfo$ = this.fullConfig.showCorrectedUtterance ? this.currentUtteranceInterpretResponse$.pipe((0, 
                filter.h)(function(response) {
                    return !response.isQuestionUnCommitted;
                }), (0, map.U)(function(response) {
                    var replacementUtterance, spans, result = _.first(null == response ? void 0 : response.results), correctionInfo = null == result ? void 0 : result.correctionInfo;
                    if (correctionInfo && 0 !== correctionInfo.state) return (0, qna_correctionInfo_util.Gd)(correctionInfo) ? (replacementUtterance = correctionInfo.correctedUtterance, 
                    spans = (0, qna_correctionInfo_util.zM)(correctionInfo)) : (replacementUtterance = correctionInfo.replacementUtterance, 
                    spans = (0, qna_correctionInfo_util.Yi)(result.spans, correctionInfo)), {
                        label: getCorrectedUtteranceLabel(correctionInfo.state, _this.localizationService),
                        spans,
                        replacementUtterance,
                        state: correctionInfo.state
                    };
                })) : (0, of.of)(void 0);
            }, QnaInputV2Component.prototype.setupGrippersRelatedPipes = function() {
                var _this = this;
                this.grippersInfo = {
                    grippersLocationDropped$: new BehaviorSubject.X(void 0),
                    grippersLocationDuringDragging$: new BehaviorSubject.X(void 0),
                    gripperOnDragging$: new BehaviorSubject.X("none")
                }, this.showGrippersAroundTextRangeRequest$ = new BehaviorSubject.X(void 0), this.fullConfig.supportTokenGrippers && ((0, 
                combineLatest.aj)([ this.uiSpans$, this.showGrippersAroundTextRangeRequest$ ]).pipe((0, 
                takeUntil.R)(this.destroy$)).subscribe(function(_a) {
                    var uiSpans = _a[0], textRange = _a[1], targetSpanIndex = -1;
                    textRange && (targetSpanIndex = _.findIndex(uiSpans, function(uiSpan) {
                        return uiSpan.startIndex === textRange.startIndex && uiSpan.endExcludingIndex === textRange.endExcludingIndex;
                    })), _this.grippersInfo.grippersLocationDropped$.next(-1 === targetSpanIndex ? {
                        associatedUISpans: uiSpans,
                        begin: void 0,
                        end: void 0
                    } : {
                        associatedUISpans: uiSpans,
                        begin: {
                            spanIndex: targetSpanIndex,
                            tokenIndex: 0
                        },
                        end: {
                            spanIndex: targetSpanIndex,
                            tokenIndex: _.size(uiSpans[targetSpanIndex].tokens) - 1
                        }
                    }), _this.grippersInfo.grippersLocationDuringDragging$.next({
                        associatedUISpans: uiSpans,
                        begin: void 0,
                        end: void 0
                    }), _this.grippersInfo.gripperOnDragging$.next("none");
                }), (0, combineLatest.aj)([ this.uiSpans$, this.grippersInfo.grippersLocationDuringDragging$ ]).pipe((0, 
                takeUntil.R)(this.destroy$), (0, distinctUntilChanged.x)(function(prev, curr) {
                    return prev[0] === curr[0] && _.isEqual(prev[1], curr[1]);
                })).subscribe(function(_a) {
                    var uiSpans = _a[0], grippersLocationOnDragging = _a[1];
                    grippersLocationOnDragging && grippersLocationOnDragging.associatedUISpans !== uiSpans || (_.forEach(uiSpans, function(span, spanIndex) {
                        _.forEach(span.tokens, function(token, tokenIndex) {
                            token.isBetweenOnDraggingGrippers = !!grippersLocationOnDragging && isBetweenGrippers(spanIndex, tokenIndex, _this.grippersInfo.grippersLocationDuringDragging$.value);
                        });
                    }), _this.tokensGripperLocInfoUpdated$.next(!0));
                }), (0, combineLatest.aj)([ this.uiSpans$, this.grippersInfo.grippersLocationDropped$ ]).pipe((0, 
                takeUntil.R)(this.destroy$), (0, distinctUntilChanged.x)(function(prev, curr) {
                    return prev[0] === curr[0] && _.isEqual(prev[1], curr[1]);
                })).subscribe(function(_a) {
                    var uiSpans = _a[0], grippersLocationDropped = _a[1];
                    if (!grippersLocationDropped || grippersLocationDropped.associatedUISpans === uiSpans) if (_.forEach(uiSpans, function(span, spanIndex) {
                        _.forEach(span.tokens, function(token, tokenIndex) {
                            var tokenDropzones = token.dropZonesInfo;
                            if ((null == grippersLocationDropped ? void 0 : grippersLocationDropped.begin) && (null == grippersLocationDropped ? void 0 : grippersLocationDropped.end)) {
                                if (tokenDropzones) {
                                    var zoneBefore = tokenDropzones.zoneLocatedBeforeInfo;
                                    zoneBefore.hasBeginGripper = hasGripper(token, !0, "beginGripper", grippersLocationDropped), 
                                    zoneBefore.hasEndGripper = hasGripper(token, !0, "endGripper", grippersLocationDropped);
                                    var zoneAfter = tokenDropzones.zoneLocatedAfterInfo;
                                    zoneAfter.hasBeginGripper = hasGripper(token, !1, "beginGripper", grippersLocationDropped), 
                                    zoneAfter.hasEndGripper = hasGripper(token, !1, "endGripper", grippersLocationDropped);
                                }
                                token.isBetweenDroppedGrippers = isBetweenGrippers(spanIndex, tokenIndex, _this.grippersInfo.grippersLocationDropped$.value);
                            } else tokenDropzones && (tokenDropzones.zoneLocatedBeforeInfo.hasBeginGripper = !1, 
                            tokenDropzones.zoneLocatedBeforeInfo.hasEndGripper = !1, tokenDropzones.zoneLocatedAfterInfo.hasBeginGripper = !1, 
                            tokenDropzones.zoneLocatedAfterInfo.hasEndGripper = !1), token.isBetweenDroppedGrippers = !1;
                        });
                    }), _this.tokensGripperLocInfoUpdated$.next(!0), (null == grippersLocationDropped ? void 0 : grippersLocationDropped.begin) && (null == grippersLocationDropped ? void 0 : grippersLocationDropped.end)) {
                        var beginGripper = grippersLocationDropped.begin, endGripper = grippersLocationDropped.end, endToken = uiSpans[endGripper.spanIndex].tokens[endGripper.tokenIndex];
                        _this.grippersDefinedTextRangeChanged.emit({
                            startIndex: uiSpans[beginGripper.spanIndex].tokens[beginGripper.tokenIndex].startIndex,
                            endExcludingIndex: endToken.startIndex + endToken.text.length
                        });
                    } else _this.grippersDefinedTextRangeChanged.emit(void 0);
                }));
            }, QnaInputV2Component.prototype.interpretInternal = function(request) {
                var _this = this;
                this.fullConfig.showWarningIcon && !_.isEmpty(this.fullConfig.disableAuthoringMessage) ? this.warningStateTooltipConfig$.next({
                    tooltipShowOnFocus: !0,
                    tooltipDescription: this.fullConfig.disableAuthoringMessage,
                    tooltipDelay: 0,
                    tooltipHideDelay: 0
                }) : this.warningStateTooltipConfig$.next(void 0), this.loadingStateTooltipConfig$.next(void 0);
                var isQuestionCommitted = !0;
                this.inCommitOnDemandMode && (isQuestionCommitted = !!request.isCommitInCommitQuestionOnDemandMode), 
                this.escapedDropdown = !1;
                var emptyResponse = {
                    utterance: "",
                    interpretRequestId: request.uniqueId,
                    isQuestionCommitted: !0
                };
                if (_.isEmpty(request.utterance)) return isQuestionCommitted && this.interpretListener.onInterpretResultCleared(), 
                this.resetTags(), (0, of.of)(emptyResponse);
                var tagsToSend = _.union(this.tags, request.incomingTags);
                this.resetTags();
                var calculation = this.fullConfig.calculation;
                return calculation && isQuestionCommitted && (calculation = (0, tslib_es6.__assign)((0, 
                tslib_es6.__assign)({}, calculation), {
                    isCommitted: !0
                })), this.interpretRequestSequenceNumber++, this.getReportMetadata().pipe((0, switchMap.w)(function(reportMetadata) {
                    return _this.interpretService.interpret({
                        groupId: _this.componentUniqueId,
                        groupSequenceNumber: _this.interpretRequestSequenceNumber
                    }, request.utterance, _this.entryPoint, _this.qnaSupportedScopes, _this.interpretListener, {
                        supportsPodQueries: _this.fullConfig.supportsPodQueries,
                        supportsInsightsQueries: _this.fullConfig.supportsInsightsQueries,
                        inferUnknownModelTerms: _this.fullConfig.inferUnknownModelTerms,
                        singleAnswerBias: _this.fullConfig.singleAnswerBias,
                        supportsCalculation: !!calculation
                    }, {
                        isQuestionNotCommitted: !isQuestionCommitted,
                        specifiedSpans: request.specifiedSpans,
                        linguisticSchemaJson: request.linguisticSchemaJson,
                        inferredTermBinding: request.inferredTermBinding,
                        tags: tagsToSend,
                        calculation
                    }, reportMetadata).pipe((0, take.q)(1), (0, map.U)(function(response) {
                        return _.merge({}, response, {
                            interpretRequestId: request.uniqueId,
                            isQuestionUnCommitted: !isQuestionCommitted
                        });
                    }));
                }));
            }, QnaInputV2Component.prototype.getReportMetadata = function() {
                var _this = this;
                if ("@powerbi/Qna/qnadesktop.module#QnaDesktopModule" !== this.qnaProxyPath || !this.fullConfig.supportsPodQueries || !this.linguisticSchemaProxy) return (0, 
                of.of)(void 0);
                var exploration = this.explorationNavigationService.getCurrentExploration();
                return exploration ? (0, from.D)(this.conceptualSchemaProxy.get(this.dataSourcesService.get())).pipe((0, 
                map.U)(function(schema) {
                    var linguisticSchema = _this.linguisticSchemaProxy.getSchema(-1);
                    if (null == linguisticSchema ? void 0 : linguisticSchema.content) return {
                        linguisticSchema: linguisticSchema.content,
                        pods: _.map(exploration.pods, function(p) {
                            return {
                                name: p.name,
                                parameters: _.chain(p.parameters).map(function(param) {
                                    var resolvedFilter = function(boundFilter, boundSection, exploration, schema) {
                                        var section = _.find(exploration.sections, function(s) {
                                            return s.name === boundSection;
                                        });
                                        if (section) {
                                            var filter = _.find(section.filters, function(f) {
                                                return f.name === boundFilter;
                                            });
                                            if (null == filter ? void 0 : filter.expression) {
                                                var column = filter.expression.getConceptualProperty(schema);
                                                if (column) return {
                                                    column: column.name,
                                                    entity: filter.expression.getTargetEntity().entity
                                                };
                                            } else debug.fF.assertFail("filter should be part of the section and have an expression");
                                        } else debug.fF.assertFail("pod section should be part of the exploration");
                                    }(param.boundFilter, p.boundSection, exploration, schema);
                                    if (resolvedFilter) return {
                                        name: param.name,
                                        targetColumn: resolvedFilter.column,
                                        targetEntity: resolvedFilter.entity
                                    };
                                }).filter(function(param) {
                                    return !!param;
                                }).value(),
                                cortanaEnabled: p.cortanaEnabled
                            };
                        })
                    };
                })) : (0, of.of)(void 0);
            }, QnaInputV2Component.prototype.resetPausedTagTimeoutHandler = function(restartTimer, utteranceIfRestart) {
                var _this = this;
                this.fullConfig.disableSendingServiceTags || (null != this.pausedTagTimeoutHandler && (clearTimeout(this.pausedTagTimeoutHandler), 
                this.pausedTagTimeoutHandler = null), restartTimer && (debug.fF.assert(function() {
                    return !_.isEmpty(utteranceIfRestart);
                }, "Expect the given utteranceIfRestart not to be empty."), this.pausedTagTimeoutHandler = setTimeout(function() {
                    _this.sendTags([ "Paused" ], utteranceIfRestart), _this.pausedTagTimeoutHandler = void 0;
                }, this.fullConfig.sendPausedTagTimeout)));
            }, QnaInputV2Component.prototype.showHideDropdown = function(show, sendTagsForDropdownCommitInfo) {
                if (!this.fullConfig.disableAuthoring) {
                    var wasShown = this.isDropdownOn$.value;
                    if (this.escapedDropdown = !show, (wasShown !== show || show) && (this.isDropdownOn$.next(show), 
                    sendTagsForDropdownCommitInfo)) {
                        var additionalTags = void 0;
                        _.isEmpty(this.getCurrentUtteranceSpaceNormalized()) ? additionalTags = _.union(sendTagsForDropdownCommitInfo.incomingTags, [ "Dropdown:Suggested", "Committed" ]) : (debug.fF.assert(function() {
                            return !_.isEmpty(sendTagsForDropdownCommitInfo.utterance);
                        }, "Going to send tags for dropdown commit, expect its associated utterance not empty"), 
                        additionalTags = _.union(sendTagsForDropdownCommitInfo.incomingTags, [ "Committed" ])), 
                        this.resetPausedTagTimeoutHandler(!1), this.sendTags(additionalTags, sendTagsForDropdownCommitInfo.utterance);
                    }
                }
            }, QnaInputV2Component.prototype.sendTags = function(incomingTags, utterance) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var tagsToSend;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return tagsToSend = _.union(this.tags, incomingTags), this.resetTags(), _.isEmpty(tagsToSend) ? [ 2 ] : [ 4, this.interpretService.sendTags(tagsToSend, utterance, this.entryPoint, this.qnaSupportedScopes, {
                                supportsPodQueries: this.fullConfig.supportsPodQueries,
                                supportsInsightsQueries: this.fullConfig.supportsInsightsQueries,
                                inferUnknownModelTerms: this.fullConfig.inferUnknownModelTerms,
                                singleAnswerBias: this.fullConfig.singleAnswerBias
                            }) ];

                          case 1:
                            return _a.sent(), [ 2 ];
                        }
                    });
                });
            }, QnaInputV2Component.prototype.isInputBoxFocused = function() {
                return this.contentElement && ieProofNodeContains(this.contentElement, document.activeElement);
            }, QnaInputV2Component.prototype.getUtteranceSelection = function() {
                if (debug.fF.assertValue(this.contentElement, "this.contentElement"), this.isInputBoxFocused()) return function(containerNode) {
                    if (containerNode && window.getSelection) {
                        var selection = window.getSelection();
                        if (selection.rangeCount && ieProofNodeContains(containerNode, selection.anchorNode) && ieProofNodeContains(containerNode, selection.focusNode)) {
                            var selectionRange = selection.getRangeAt(0), selectionRangeClone = selectionRange.cloneRange();
                            selectionRangeClone.selectNodeContents(containerNode), selectionRangeClone.setEnd(selectionRange.startContainer, selectionRange.startOffset);
                            var selectionRangeStart = selectionRangeClone.toString().length;
                            if (selection.isCollapsed) return {
                                normalizedAnchor: selectionRangeStart,
                                normalizedFocus: selectionRangeStart
                            };
                            selectionRangeClone.setEnd(selectionRange.endContainer, selectionRange.endOffset);
                            var selectionRangeEnd = selectionRangeClone.toString().length, isSelectionRangeStartAnchor = selection.anchorNode === selectionRange.startContainer;
                            return {
                                normalizedAnchor: isSelectionRangeStartAnchor ? selectionRangeStart : selectionRangeEnd,
                                normalizedFocus: isSelectionRangeStartAnchor ? selectionRangeEnd : selectionRangeStart
                            };
                        }
                    }
                }(this.contentElement);
            }, QnaInputV2Component.prototype.isValidRange = function(selection) {
                var currentTextLength = _.size(this.contentElement.textContent);
                return _.inRange(selection.normalizedAnchor, 0, currentTextLength + 1) && _.inRange(selection.normalizedFocus, 0, currentTextLength + 1);
            }, QnaInputV2Component.prototype.setUtteranceSelection = function(selection) {
                debug.fF.assertValue(selection, "selection"), debug.fF.assertValue(this.contentElement, "this.contentElement"), 
                function(node, selectionRange) {
                    debug.fF.assertValue(node, "Expect the given node to be defined."), debug.fF.assertValue(selectionRange, "Expect the given selectionRange to be defined."), 
                    debug.fF.assert(function() {
                        return _.inRange(selectionRange.normalizedAnchor, 0, _.size(node.textContent) + 1);
                    }, "Expect the given selectionRange.anchor is a valid position inside the given node"), 
                    debug.fF.assert(function() {
                        return _.inRange(selectionRange.normalizedFocus, 0, _.size(node.textContent) + 1);
                    }, "Expect the given selectionRange.focus is a valid position inside the given node");
                    var nodeTextLength = _.size(node.textContent);
                    if (node && selectionRange && _.inRange(selectionRange.normalizedAnchor, 0, nodeTextLength + 1) && _.inRange(selectionRange.normalizedFocus, 0, nodeTextLength + 1)) {
                        var currentSelection = window.getSelection && window.getSelection();
                        if (currentSelection) {
                            var selectionAnchor = selectionRange.normalizedAnchor, selectionFocus = selectionRange.normalizedFocus, targetAnchorAndOffset = tryGetAnchorNodeAndOffset(node, selectionAnchor);
                            if (debug.fF.assertValue(targetAnchorAndOffset, "Expect to find the NodeAndOffset for character position " + selectionAnchor + " inside the node"), 
                            targetAnchorAndOffset) {
                                var targetFocusAndOffset = selectionFocus === selectionAnchor ? targetAnchorAndOffset : tryGetAnchorNodeAndOffset(node, selectionFocus);
                                if (debug.fF.assertValue(targetAnchorAndOffset, "Expect to find the NodeAndOffset for character position " + selectionFocus + " inside the node"), 
                                targetFocusAndOffset) {
                                    var targetAnchorNode = targetAnchorAndOffset.node, targetAnchorOffset = targetAnchorAndOffset.textOrChildNodesOffset, targetFocusNode = targetFocusAndOffset.node, targetFocusOffset = targetFocusAndOffset.textOrChildNodesOffset;
                                    if (currentSelection.anchorNode !== targetAnchorNode || currentSelection.focusNode !== targetFocusNode || currentSelection.anchorOffset !== targetAnchorOffset || currentSelection.focusOffset !== targetFocusOffset) {
                                        node instanceof HTMLElement && node.focus();
                                        var range = document.createRange();
                                        range.setStart(targetAnchorNode, targetAnchorOffset), range.setEnd(targetFocusNode, targetFocusOffset), 
                                        currentSelection.removeAllRanges(), currentSelection.addRange(range);
                                    }
                                }
                            }
                        }
                    }
                }(this.contentElement, selection);
            }, QnaInputV2Component.prototype.getUtteranceCursorPosition = function() {
                var currentSelection = this.getUtteranceSelection();
                return currentSelection ? currentSelection.normalizedFocus : -1;
            }, QnaInputV2Component.prototype.getUtteranceSelectionAnchor = function() {
                return getUtteranceSelectionPosition(0, this.getUtteranceSelection());
            }, QnaInputV2Component.prototype.addEventListeners = function() {
                var _this = this;
                (0, fromEvent.R)(this.contentElement, "click").pipe((0, takeUntil.R)(this.destroy$), (0, 
                share.B)()).subscribe(function(event) {
                    var currentSelection = _this.getUtteranceSelection(), currentCursorPosition = getUtteranceSelectionPosition(1, currentSelection);
                    _this.cursorLocation$.next(currentCursorPosition), _this.flushUnderlineDelayApply(), 
                    stopPropagation(event);
                    var currentDisplayedUtterance = _this.getCurrentUtteranceSpaceNormalized(), selectionAnchor = getUtteranceSelectionPosition(0, currentSelection);
                    _.isEmpty(currentDisplayedUtterance) || -1 !== selectionAnchor && _this.updateAutoCompleteArgsCommand$.next({
                        matchingUtterance: currentDisplayedUtterance,
                        cursorPosition: selectionAnchor,
                        triggerSource: 1,
                        spans: void 0
                    });
                });
                var pasteEvent$ = (0, fromEvent.R)(this.contentElement, "paste").pipe((0, map.U)(function(event) {
                    return {
                        event,
                        beforePastedContentElementText: _this.contentElement.textContent
                    };
                }), (0, tap.b)(function(info) {
                    if (preventDefault(info.event), stopPropagation(info.event), window.getSelection) {
                        var originalTextLength = (_this.getCurrentUtteranceSpaceNormalized() || "").length, currentSelection = _this.getUtteranceSelection();
                        currentSelection && (originalTextLength -= Math.abs(currentSelection.normalizedAnchor - currentSelection.normalizedFocus)), 
                        function(text) {
                            debug.fF.assertValue(window.getSelection, "Expecting window.getSelection is defined");
                            var selection = window.getSelection();
                            if (selection.rangeCount) {
                                var selectedRange = selection.getRangeAt(0);
                                if (selectedRange.deleteContents(), text) {
                                    var textNode = document.createTextNode(text);
                                    selectedRange.insertNode(textNode), selectedRange.setStart(textNode, text.length), 
                                    selectedRange.collapse(!0);
                                }
                            }
                        }((pasteEvent = info.event, event = pasteEvent.originalEvent || pasteEvent, (event.clipboardData && event.clipboardData.getData ? event.clipboardData.getData("text/plain") : window.clipboardData && window.clipboardData.getData ? window.clipboardData.getData("Text") : void 0) || "").substr(0, 200 - originalTextLength));
                    }
                    var pasteEvent, event;
                }), (0, filter.h)(function(info) {
                    return info.beforePastedContentElementText !== _this.contentElement.textContent;
                })), compositionendEvent$ = (0, fromEvent.R)(this.contentElement, "compositionend").pipe((0, 
                share.B)()), keyupEvent$ = (0, fromEvent.R)(this.contentElement, "keyup").pipe((0, 
                takeUntil.R)(this.destroy$), (0, filter.h)(function(event) {
                    return !isComposing(event);
                }), (0, share.B)());
                keyupEvent$.pipe((0, takeUntil.R)(this.destroy$), (0, filter.h)(function(event) {
                    return "Backspace" === event.key || "Delete" === event.key;
                })).subscribe(function(_event) {
                    _.isEmpty(_this.getCurrentUtteranceSpaceNormalized()) && _this.cleanContentElement();
                }), keyupEvent$.pipe((0, takeUntil.R)(this.destroy$), (0, filter.h)(function(event) {
                    return _.includes([ "Home", "End", "ArrowLeft", "ArrowRight" ], event.key);
                })).subscribe(function(event) {
                    isEventFromGripper(event) || _this.cursorLocation$.next(_this.getUtteranceCursorPosition());
                });
                var skipLengthCheckKeys = [ "ArrowLeft", "ArrowRight", "ArrowUp", "ArrowDown", "Backspace", "Delete", "Home", "End", "Enter", "Escape", "Tab" ], skipLengthCheckWithCtrlKeys = [ "A", "X", "C", "Z", "a", "x", "c", "z" ], keydownEvent$ = (0, 
                fromEvent.R)(this.contentElement, "keydown").pipe((0, takeUntil.R)(this.destroy$), (0, 
                filter.h)(function(event) {
                    return !isComposing(event);
                }), (0, tap.b)(function(event) {
                    isEventFromGripper(event) || _.includes(skipLengthCheckKeys, event.key) || event.ctrlKey && _.includes(skipLengthCheckWithCtrlKeys, event.key) || !(_this.getCurrentUtteranceSpaceNormalized().length >= 200) || preventDefault(event);
                }), (0, share.B)());
                (0, fromEvent.R)(this.contentElement, "focus").pipe((0, takeUntil.R)(this.destroy$), (0, 
                withLatestFrom.M)(this.distinctDisplayedUtterance$)).subscribe(function(_a) {
                    var utterance = _a[1];
                    _this.inputBoxFocused.emit(_a[0]), _this.hasFocus$.next(!0), _this.cursorLocation$.next(_this.getUtteranceCursorPosition()), 
                    !_this.isAutoCompleteDropdownShown() && _.isEmpty(utterance) && _this.showUtteranceSuggestions();
                }), (0, fromEvent.R)(this.contentElement, "blur").pipe((0, takeUntil.R)(this.destroy$)).subscribe(function(event) {
                    var eventRelatedTargetElement = event.relatedTarget;
                    _this.deleteButtonElementRef && _this.deleteButtonElementRef.nativeElement.contains(eventRelatedTargetElement) || _this.commitButtonElementRef && _this.commitButtonElementRef.nativeElement.contains(eventRelatedTargetElement) || _this.hasFocus$.next(!1), 
                    _this.cursorLocation$.next(-1), _this.flushUnderlineDelayApply();
                    var selection = window.getSelection ? window.getSelection() : void 0;
                    selection && selection.removeAllRanges();
                });
                var inputEvent$ = (0, fromEvent.R)(this.contentElement, "input").pipe((0, filter.h)(function(event) {
                    return !event.isComposing;
                }));
                (0, merge.T)(inputEvent$, compositionendEvent$, pasteEvent$).pipe((0, takeUntil.R)(this.destroy$), (0, 
                map.U)(function(_event) {
                    return _this.getCurrentUtteranceSpaceNormalized();
                }), (0, tap.b)(function(newUtterance) {
                    _this.displayedUtteranceInternal$.next(newUtterance);
                })).subscribe(function(newUtterance) {
                    _this.interpretUtteranceRequest$.next({
                        uniqueId: Utility.b$.generateGuid(),
                        utterance: newUtterance,
                        utteranceUITextAlreadyEnsured: !0,
                        delayError: !0,
                        enforceFocus: !1,
                        suppressSuggestions: !1,
                        requireCursorAtEndIfFocused: !1,
                        linguisticSchemaJson: _this.linguisticInfo && _this.linguisticInfo.linguisticSchemaJson,
                        inferredTermBinding: _this.linguisticInfo && _this.linguisticInfo.inferredTermBinding,
                        incomingTags: void 0,
                        specifiedSpans: void 0,
                        isFromInputEvent: !0
                    });
                }), keydownEvent$.pipe((0, takeUntil.R)(this.destroy$), (0, filter.h)(function(event) {
                    return !isComposing(event);
                })).subscribe(function(event) {
                    if (isEventFromGripper(event) && !_.includes([ "Tab", "Enter" ], event.key)) return _.includes([ "ArrowLeft", "ArrowRight", "Escape", "ArrowDown" ], event.key) ? (stopPropagation(event), 
                    void preventDefault(event)) : void 0;
                    var currentDisplayedUtterance = _this.getCurrentUtteranceSpaceNormalized();
                    switch (event.key) {
                      case "z":
                      case "Z":
                        browserUtils.M.isCtrlOrMeta(event) && (preventDefault(event), _this.fullConfig.hostSupportsUndo ? _this.contentElement.blur() : stopPropagation(event));
                        break;

                      case "ArrowLeft":
                        _this.flushUnderlineDelayApply(), stopPropagation(event), _.isEmpty(currentDisplayedUtterance) || -1 !== (cursorPosition = getUtteranceSelectionPosition(0, selection = _this.getUtteranceSelection())) && _this.updateAutoCompleteArgsCommand$.next({
                            matchingUtterance: currentDisplayedUtterance,
                            cursorPosition: selection.normalizedAnchor !== selection.normalizedFocus ? cursorPosition : Math.max(0, cursorPosition - 1),
                            triggerSource: 2,
                            spans: void 0
                        });
                        break;

                      case "ArrowRight":
                      case "Right":
                        var selection, cursorPosition;
                        _this.flushUnderlineDelayApply(), stopPropagation(event), _.isEmpty(currentDisplayedUtterance) || -1 !== (cursorPosition = getUtteranceSelectionPosition(0, selection = _this.getUtteranceSelection())) && _this.updateAutoCompleteArgsCommand$.next({
                            matchingUtterance: currentDisplayedUtterance,
                            cursorPosition: selection.normalizedAnchor !== selection.normalizedFocus ? cursorPosition : Math.min(cursorPosition + 1, currentDisplayedUtterance.length),
                            triggerSource: 2,
                            spans: void 0
                        });
                        break;

                      case "ArrowUp":
                        _this.flushUnderlineDelayApply(), stopPropagation(event), preventDefault(event), 
                        _this.autoCompleteInputArgs.selectPrevious.next(!0);
                        break;

                      case "ArrowDown":
                        _this.flushUnderlineDelayApply(), stopPropagation(event), preventDefault(event), 
                        _this.arrowDownOnInputboxHanlder();
                        break;

                      case "Enter":
                        _this.flushUnderlineDelayApply(), stopPropagation(event), _this.isAutoCompleteDropdownShown() ? _this.autoCompleteInputArgs.confirmSelection.next(!0) : (_this.enterKeyPressed && _this.enterKeyPressed.emit(), 
                        _this.inCommitOnDemandMode && _this.hasUncommittedQuestion$.value && _this.commitUtterance()), 
                        preventDefault(event);
                        break;

                      case "Backspace":
                        "false" === _this.contentElement.contentEditable && preventDefault(event);

                      case "Delete":
                        stopPropagation(event);
                        break;

                      case "Escape":
                        _this.flushUnderlineDelayApply();
                        var wasAutoCompleteShown = _this.isAutoCompleteDropdownShown();
                        _this.showHideDropdown(!1, {
                            utterance: currentDisplayedUtterance
                        }), wasAutoCompleteShown && (preventDefault(event), stopPropagation(event));
                        break;

                      case "Home":
                        _.isEmpty(currentDisplayedUtterance) || _this.updateAutoCompleteArgsCommand$.next({
                            matchingUtterance: currentDisplayedUtterance,
                            cursorPosition: 0,
                            triggerSource: 2,
                            spans: void 0
                        });
                        break;

                      case "End":
                        _.isEmpty(currentDisplayedUtterance) || _this.updateAutoCompleteArgsCommand$.next({
                            matchingUtterance: currentDisplayedUtterance,
                            cursorPosition: currentDisplayedUtterance.length,
                            triggerSource: 2,
                            spans: void 0
                        });
                    }
                });
            }, QnaInputV2Component.prototype.cleanContentElement = function() {
                this.contentElement && _.filter(this.contentElement.childNodes, function(childNode) {
                    return childNode.nodeType !== Node.COMMENT_NODE;
                }).forEach(function(node) {
                    removeNode(node);
                });
            }, QnaInputV2Component.prototype.isAutoCompleteDropdownShown = function() {
                var _a;
                return null === (_a = this.autoCompleteComponent) || void 0 === _a ? void 0 : _a.showAutoCompleteDropdown;
            }, QnaInputV2Component.prototype.ensureAngularCommentNodes = function() {
                var _this = this;
                "" === this.contentElement.textContent && (this.contentElement.innerHTML = "");
                var stillExistCommentNodes = [];
                _.forEach(this.contentElement.childNodes, function(childNode) {
                    childNode.nodeType === Node.COMMENT_NODE && _.includes(_this.contentElementAngularCommentNodes, childNode) && stillExistCommentNodes.push(childNode);
                });
                var toEnsureCommentNodesCount = _.size(this.contentElementAngularCommentNodes);
                if (_.size(stillExistCommentNodes) !== toEnsureCommentNodesCount) {
                    _.forEach(stillExistCommentNodes, function(commentNode) {
                        return removeNode(commentNode);
                    });
                    var firstChildNode = _.first(this.contentElement.childNodes);
                    if (firstChildNode) for (var insertionRefNode = firstChildNode, insertNode = void 0, index = toEnsureCommentNodesCount - 1; index >= 0; index--) this.contentElement.insertBefore(insertNode = this.contentElementAngularCommentNodes[index], insertionRefNode), 
                    insertionRefNode = insertNode; else _.forEach(this.contentElementAngularCommentNodes, function(childNode) {
                        _this.contentElement.appendChild(childNode);
                    });
                }
            }, QnaInputV2Component.prototype.ensureContentElementUtteranceText = function(text) {
                return getSpaceNormalizedString(text) !== this.getCurrentUtteranceSpaceNormalized() && (this.cleanContentElement(), 
                text && this.contentElement.appendChild(document.createTextNode(text)), !0);
            }, QnaInputV2Component.prototype.oneGripperDragStarted = function(gripper) {
                debug.fF.assert(function() {
                    return "none" !== gripper;
                }, "Expect this not to be called with GripperIdentifier.None");
                var currentGrippersLocationDropped = this.grippersInfo.grippersLocationDropped$.value;
                debug.fF.assertValue(currentGrippersLocationDropped, "this.grippersInfo.grippersLocationDropped$.value should be defined"), 
                this.grippersInfo.grippersLocationDuringDragging$.next({
                    associatedUISpans: currentGrippersLocationDropped.associatedUISpans,
                    begin: currentGrippersLocationDropped.begin,
                    end: currentGrippersLocationDropped.end
                }), this.grippersInfo.gripperOnDragging$.next(gripper);
            }, QnaInputV2Component.prototype.arrowDownOnInputboxHanlder = function() {
                this.showDropdownAtCurrentPosition(2), this.autoCompleteInputArgs.selectNext.next(!0);
            }, QnaInputV2Component.\u0275fac = function(t) {
                return new (t || QnaInputV2Component)(fesm2022_core["\u0275\u0275directiveInject"](fesm2022_core.ChangeDetectorRef), fesm2022_core["\u0275\u0275directiveInject"](conceptual_schema_proxy_service.i), fesm2022_core["\u0275\u0275directiveInject"](data_sources_service.D), fesm2022_core["\u0275\u0275directiveInject"](exploration_navigation_service.z), fesm2022_core["\u0275\u0275directiveInject"](feature_switch_service.vZ), fesm2022_core["\u0275\u0275directiveInject"](high_contrast_css_generation_service.g), fesm2022_core["\u0275\u0275directiveInject"](lazy_provider.E), fesm2022_core["\u0275\u0275directiveInject"](localization_service.o), fesm2022_core["\u0275\u0275directiveInject"](screen_reader_service.g), fesm2022_core["\u0275\u0275directiveInject"](undo_redo_service.z), fesm2022_core["\u0275\u0275directiveInject"](linguistic_schema_proxy_service.e, 8), fesm2022_core["\u0275\u0275directiveInject"](qnaProxyPath.n, 8), fesm2022_core["\u0275\u0275directiveInject"](qnaModelUtilsPath.z, 8));
            }, QnaInputV2Component.\u0275cmp = fesm2022_core["\u0275\u0275defineComponent"]({
                type: QnaInputV2Component,
                selectors: [ [ "qna-input-v2" ] ],
                viewQuery: function(rf, ctx) {
                    if (1 & rf && (fesm2022_core["\u0275\u0275viewQuery"](qna_input_v2_component_c0, 5, fesm2022_core.ElementRef), 
                    fesm2022_core["\u0275\u0275viewQuery"](qna_input_v2_component_c1, 5, fesm2022_core.ElementRef), 
                    fesm2022_core["\u0275\u0275viewQuery"](qna_input_v2_component_c2, 5, fesm2022_core.ElementRef), 
                    fesm2022_core["\u0275\u0275viewQuery"](qna_input_v2_component_c3, 5, fesm2022_core.ElementRef), 
                    fesm2022_core["\u0275\u0275viewQuery"](qna_input_v2_component_c4, 5, fesm2022_core.ElementRef), 
                    fesm2022_core["\u0275\u0275viewQuery"](QnaAutocompleteComponent, 5), fesm2022_core["\u0275\u0275viewQuery"](qna_input_v2_component_c5, 5, fesm2022_core.ElementRef), 
                    fesm2022_core["\u0275\u0275viewQuery"](qna_input_v2_component_c6, 5, fesm2022_core.ElementRef), 
                    fesm2022_core["\u0275\u0275viewQuery"](_c7, 5, fesm2022_core.ElementRef), fesm2022_core["\u0275\u0275viewQuery"](_c8, 5, fesm2022_core.ElementRef)), 
                    2 & rf) {
                        var _t = void 0;
                        fesm2022_core["\u0275\u0275queryRefresh"](_t = fesm2022_core["\u0275\u0275loadQuery"]()) && (ctx.contentElementExtraContainer = _t.first), 
                        fesm2022_core["\u0275\u0275queryRefresh"](_t = fesm2022_core["\u0275\u0275loadQuery"]()) && (ctx.deleteButtonElementRef = _t.first), 
                        fesm2022_core["\u0275\u0275queryRefresh"](_t = fesm2022_core["\u0275\u0275loadQuery"]()) && (ctx.commitButtonElementRef = _t.first), 
                        fesm2022_core["\u0275\u0275queryRefresh"](_t = fesm2022_core["\u0275\u0275loadQuery"]()) && (ctx.autoCompleteElementRef = _t.first), 
                        fesm2022_core["\u0275\u0275queryRefresh"](_t = fesm2022_core["\u0275\u0275loadQuery"]()) && (ctx.contentElementRef = _t.first), 
                        fesm2022_core["\u0275\u0275queryRefresh"](_t = fesm2022_core["\u0275\u0275loadQuery"]()) && (ctx.autoCompleteComponent = _t.first), 
                        fesm2022_core["\u0275\u0275queryRefresh"](_t = fesm2022_core["\u0275\u0275loadQuery"]()) && (ctx.qnaInputContainerElementRef = _t.first), 
                        fesm2022_core["\u0275\u0275queryRefresh"](_t = fesm2022_core["\u0275\u0275loadQuery"]()) && (ctx.beginGripperElementRef = _t.first), 
                        fesm2022_core["\u0275\u0275queryRefresh"](_t = fesm2022_core["\u0275\u0275loadQuery"]()) && (ctx.endGripperElementRef = _t.first), 
                        fesm2022_core["\u0275\u0275queryRefresh"](_t = fesm2022_core["\u0275\u0275loadQuery"]()) && (ctx.spanElementRefs = _t);
                    }
                },
                hostVars: 1,
                hostBindings: function(rf, ctx) {
                    2 & rf && fesm2022_core["\u0275\u0275attribute"]("tabindex", null != ctx.fullConfig && ctx.fullConfig.disableAuthoring ? null : -1);
                },
                inputs: {
                    entryPoint: "entryPoint",
                    presentationArgs: "presentationArgs",
                    configs: "configs",
                    qnaSupportedScopes: "qnaSupportedScopes",
                    interpretListener: "interpretListener",
                    linguisticInfo: "linguisticInfo",
                    initialUtterance: "initialUtterance",
                    initialUtteranceFromSaved: "initialUtteranceFromSaved",
                    utteranceSuggestions: "utteranceSuggestions"
                },
                outputs: {
                    grippersDefinedTextRangeChanged: "grippersDefinedTextRangeChanged",
                    enterKeyPressed: "enterKeyPressed",
                    initialized: "initialized",
                    toolingLaunched: "toolingLaunched",
                    inputBoxFocused: "inputBoxFocused"
                },
                features: [ fesm2022_core["\u0275\u0275NgOnChangesFeature"] ],
                decls: 2,
                vars: 3,
                consts: [ [ 4, "ngIf" ], [ "class", "resetButtonAndInputV2Container", 4, "ngIf" ], [ "class", "qnaAutoCorrection", 3, "ngStyle", 4, "ngIf" ], [ 1, "resetButtonAndInputV2Container" ], [ "data-testId", "qna-input-v2-container", "role", "application", 1, "qnaInputV2Container", 3, "ngClass", "ngStyle" ], [ "qnaInputContainer", "" ], [ 1, "inputAndAutoCompleteContainer", 3, "ngStyle", "ngClass" ], [ 1, "inputWithoutAutoCompleteContainer", 3, "ngStyle", "ngClass" ], [ "contenteditable", "false", "tabindex", "-1", 1, "utteranceContentExtraContainer" ], [ "contentElementExtraContainer", "" ], [ "data-testId", "qna-input-box", "tabindex", "0", "cdkDropListGroup", "", "role", "textbox", "aria-autocomplete", "list", "spellcheck", "false", 1, "utteranceContent", 3, "ngClass" ], [ "contentElement", "" ], [ "class", "term", 3, "ngClass", "ngStyle", "mouseover", "mouseleave", 4, "ngFor", "ngForOf" ], [ 3, "withTopSeparator", "params", "presentation", "selectPrevious", "selectNext", "confirmSelection", "utteranceSelected", "fullyExpanded", 4, "ngIf" ], [ 1, "beforeUtteranceOneLineHeightContainer", 3, "ngStyle" ], [ "aria-hidden", "true", 2, "width", "1px", 3, "ngStyle" ], [ "class", "questionIcon glyphicon pbi-glyph-qna", 3, "ngClass", "ngStyle", "pbi-tooltip", "accessible-click", 4, "ngIf" ], [ 1, "questionIcon", "glyphicon", "pbi-glyph-qna", 3, "ngClass", "ngStyle", "pbi-tooltip", "accessible-click" ], [ "class", "questionIconWarningLoadingCircle", "preserveAspectRatio", "none", "style", "position: absolute;", 3, "ngStyle", 4, "ngIf" ], [ "preserveAspectRatio", "none", 1, "questionIconWarningLoadingCircle", 2, "position", "absolute", 3, "ngStyle" ], [ 3, "ngStyle" ], [ 1, "term", 3, "ngClass", "ngStyle", "mouseover", "mouseleave" ], [ "spanElement", "" ], [ 1, "term-main", 3, "ngClass", "ngStyle" ], [ "class", "token", 3, "ngClass", 4, "ngFor", "ngForOf" ], [ "style", "position: absolute;", 3, "ngStyle", 4, "ngIf" ], [ 1, "token", 3, "ngClass" ], [ 4, "ngFor", "ngForOf" ], [ "cdkDropList", "", "class", "dropZone", "contenteditable", "false", 3, "ngClass", "cdkDropListData", "cdkDropListEnterPredicate", "cdkDropListEntered", "cdkDropListDropped", 4, "ngIf" ], [ "cdkDropList", "", "contenteditable", "false", 1, "dropZone", 3, "ngClass", "cdkDropListData", "cdkDropListEnterPredicate", "cdkDropListEntered", "cdkDropListDropped" ], [ "cdkDrag", "", "class", "beginGripper", "cdkDragBoundary", ".utteranceContent", "tabindex", "0", 3, "cdkDragData", "keyup", "cdkDragStarted", 4, "ngIf" ], [ "cdkDrag", "", "class", "endGripper", "cdkDragBoundary", ".utteranceContent", "tabindex", "0", 3, "cdkDragData", "keyup", "cdkDragStarted", 4, "ngIf" ], [ "cdkDrag", "", "cdkDragBoundary", ".utteranceContent", "tabindex", "0", 1, "beginGripper", 3, "cdkDragData", "keyup", "cdkDragStarted" ], [ "beginGripper", "" ], [ "preserveAspectRatio", "none", 1, "line" ], [ "preserveAspectRatio", "none", 1, "circle" ], [ "cdkDrag", "", "cdkDragBoundary", ".utteranceContent", "tabindex", "0", 1, "endGripper", 3, "cdkDragData", "keyup", "cdkDragStarted" ], [ "endGripper", "" ], [ 1, "line" ], [ 2, "position", "absolute", 3, "ngStyle" ], [ "x2", "100%", "stroke-linecap", "round" ], [ 1, "actionButtonsInputBoxFullHeightContainer", 3, "ngStyle", "click" ], [ "class", "singleButtonContainer", 4, "ngIf" ], [ 1, "singleButtonContainer" ], [ "role", "button", 1, "actionButton", "deleteButton", 3, "ngClass", "pbi-tooltip", "ngStyle", "accessible-click" ], [ "deleteButton", "" ], [ 1, "actionButtonsInputBoxOneLineHeightContainer", 3, "ngStyle" ], [ 1, "buttonIconContainer" ], [ 1, "glyphicon", "pbi-glyph-exit", 3, "ngStyle" ], [ "role", "button", "data-testId", "qna-submit-button", 1, "actionButton", "commitButton", 3, "ngClass", "localizeAttr", "pbi-tooltip", "ngStyle", "accessible-click" ], [ "commitButton", "" ], [ 1, "glyphicon", "pbi-glyph-rightarrow", 3, "ngStyle" ], [ 3, "params", "presentation", "selectPrevious", "selectNext", "confirmSelection", "utteranceSelected", "fullyExpanded" ], [ "autoComplete", "" ], [ 1, "qnaAutoCorrection", 3, "ngStyle" ], [ 1, "correctedUtteranceLabel" ], [ "tabindex", "0", 1, "correctedUtteranceContentContainer", 3, "accessible-click" ], [ 3, "ngClass", 4, "ngFor", "ngForOf" ], [ 3, "ngClass" ] ],
                template: function(rf, ctx) {
                    1 & rf && (fesm2022_core["\u0275\u0275template"](0, QnaInputV2Component_ng_container_0_Template, 7, 14, "ng-container", 0), 
                    fesm2022_core["\u0275\u0275pipe"](1, "async")), 2 & rf && fesm2022_core["\u0275\u0275property"]("ngIf", fesm2022_core["\u0275\u0275pipeBind1"](1, 1, ctx.fullPresentation$));
                },
                dependencies: [ common.NgClass, common.NgForOf, common.NgIf, common.NgStyle, drag_drop.Wj, drag_drop.Fd, drag_drop.Zt, localize_attr_directive.b, tooltip_directive.i, accessible_click_directive.t, QnaAutocompleteComponent, common.AsyncPipe ],
                styles: [ "@keyframes _ngcontent-%COMP%_pulse{0%{opacity:.2}50%{opacity:1}to{opacity:.2}}html[data-focus-source=key][_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContent[_ngcontent-%COMP%]:focus{outline:none}.resetButtonAndInputV2Container[_ngcontent-%COMP%]{display:flex}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .beforeUtteranceOneLineHeightContainer[_ngcontent-%COMP%]{margin-right:8px;padding:6px 0;background-color:transparent;position:relative;height:fit-content}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .beforeUtteranceOneLineHeightContainer[_ngcontent-%COMP%]   .glyphicon[_ngcontent-%COMP%]{position:absolute;left:0;top:50%;transform:translateY(-40%)}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .beforeUtteranceOneLineHeightContainer[_ngcontent-%COMP%]   .questionIcon[_ngcontent-%COMP%]{cursor:pointer;color:var(--colorNeutralForeground1)}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .beforeUtteranceOneLineHeightContainer[_ngcontent-%COMP%]   .questionIcon[_ngcontent-%COMP%]   .questionIconWarningLoadingCircle[_ngcontent-%COMP%]   circle[_ngcontent-%COMP%]{fill:var(--colorBrandBackground)}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .beforeUtteranceOneLineHeightContainer[_ngcontent-%COMP%]   .questionIcon.notClickable[_ngcontent-%COMP%]{cursor:default;pointer-events:none}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .beforeUtteranceOneLineHeightContainer[_ngcontent-%COMP%]   .loadingIcon[_ngcontent-%COMP%]{animation:_ngcontent-%COMP%_pulse 1s linear .5s infinite}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]{flex:1;display:flex;display:-ms-flexbox;flex-flow:column;align-items:flex-start;position:relative;cursor:text;margin:0;background-color:var(--colorNeutralBackground1);color:var(--colorNeutralForeground1);border-color:var(--colorNeutralStrokeAccessible);--inputContainerBackgroundColor: inherit;--inputContainerColor: inherit}[data-legacy-theming=false][_ngcontent-%COMP%]   .resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]{--inputContainerBackgroundColor: var(--colorNeutralForegroundInverted);--inputContainerColor: var(--colorNeutralForeground1)}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container.authoringDisabled[_ngcontent-%COMP%]{pointer-events:none}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .inputAndAutoCompleteContainer[_ngcontent-%COMP%]{width:100%;overflow-y:hidden}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .inputAndAutoCompleteContainer.withFixedHeight[_ngcontent-%COMP%]{overflow-y:auto}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .inputAndAutoCompleteContainer[_ngcontent-%COMP%]   .inputWithoutAutoCompleteContainer[_ngcontent-%COMP%]{width:100%;overflow-y:visible;display:flex;display:-ms-flexbox;flex-direction:column}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .inputAndAutoCompleteContainer.allowContentHorizontalScroll[_ngcontent-%COMP%]{overflow-x:auto}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .inputAndAutoCompleteContainer.allowContentHorizontalScroll[_ngcontent-%COMP%]   .inputWithoutAutoCompleteContainer[_ngcontent-%COMP%]{min-width:100%;width:fit-content}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container.withBorder[_ngcontent-%COMP%]{border:1px solid;border-radius:2px}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container.withShadow[_ngcontent-%COMP%]{box-shadow:var(--fluent-shadow-depth4, 0px 0px 2px var(--colorNeutralShadowAmbient), 0px 2px 4px var(--colorNeutralShadowKey))}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]{flex:1;-ms-flex:1 1 auto;position:relative;display:inline-flex;display:-ms-inline-flexbox;background-color:var(--inputContainerBackgroundColor)}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .utteranceContent[_ngcontent-%COMP%]{flex:1;-ms-flex:1 1 0px;margin-left:10px;display:block;padding:6px;outline:none;box-sizing:border-box;white-space:pre-wrap;pointer-events:auto;-ms-user-select:text;user-select:text;-webkit-user-select:text;color:var(--inputContainerColor)}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .utteranceContent[_ngcontent-%COMP%]   [_ngcontent-%COMP%]::-moz-selection, .resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .utteranceContent[_ngcontent-%COMP%]   [_ngcontent-%COMP%]::selection{background:var(--fluent-theme-neutral-lighter-secondary-color, #E5E5E5)}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .utteranceContent[_ngcontent-%COMP%]:empty:before{content:attr(placeholder);color:var(--fluent-theme-neutral-tertiary-alt-color, #C8C6C4)}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .utteranceContent.isGripperOnDragging[_ngcontent-%COMP%], .resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .utteranceContent.isGripperOnDragging[_ngcontent-%COMP%]   .term[_ngcontent-%COMP%], .resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .utteranceContent.isGripperOnDragging[_ngcontent-%COMP%]   .term-main[_ngcontent-%COMP%], .resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .utteranceContent.isGripperOnDragging[_ngcontent-%COMP%]   .token[_ngcontent-%COMP%], .resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .utteranceContent.isGripperOnDragging[_ngcontent-%COMP%]   .dropZone[_ngcontent-%COMP%], .resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .utteranceContent.isGripperOnDragging[_ngcontent-%COMP%]   .beginGripper[_ngcontent-%COMP%], .resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .utteranceContent.isGripperOnDragging[_ngcontent-%COMP%]   .endGripper[_ngcontent-%COMP%]{cursor:grabbing!important}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .utteranceContent[_ngcontent-%COMP%]   .term[_ngcontent-%COMP%]{display:inline}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .utteranceContent[_ngcontent-%COMP%]   .term[_ngcontent-%COMP%]   .term-main[_ngcontent-%COMP%]{position:static;display:inline;cursor:text;margin:0;min-height:6px;color:var(--inputContainerColor)}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .utteranceContent[_ngcontent-%COMP%]   .term[_ngcontent-%COMP%]   .term-main.hasMultipleTokens[_ngcontent-%COMP%]{white-space:nowrap}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .utteranceContent[_ngcontent-%COMP%]   .term[_ngcontent-%COMP%]   .term-main.unused[_ngcontent-%COMP%]{color:var(--colorNeutralForegroundDisabled)}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .utteranceContent[_ngcontent-%COMP%]   .term[_ngcontent-%COMP%]   .term-main[_ngcontent-%COMP%]   .token[_ngcontent-%COMP%]{position:relative;display:inline}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .utteranceContent[_ngcontent-%COMP%]   .term[_ngcontent-%COMP%]   .term-main[_ngcontent-%COMP%]   .token.space[_ngcontent-%COMP%], .resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .utteranceContent[_ngcontent-%COMP%]   .term[_ngcontent-%COMP%]   .term-main[_ngcontent-%COMP%]   .token.filler[_ngcontent-%COMP%]{pointer-events:none}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .utteranceContent[_ngcontent-%COMP%]   .term[_ngcontent-%COMP%]   .term-main[_ngcontent-%COMP%]   .token.isBetweenDroppedGrippers[_ngcontent-%COMP%], .resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .utteranceContent[_ngcontent-%COMP%]   .term[_ngcontent-%COMP%]   .term-main[_ngcontent-%COMP%]   .token.isBetweenOnDraggingGrippers[_ngcontent-%COMP%]{background-color:rgba(254,217,204,.5)}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .utteranceContent[_ngcontent-%COMP%]   .term[_ngcontent-%COMP%]   .term-main[_ngcontent-%COMP%]   .token[_ngcontent-%COMP%]   .beginGripper[_ngcontent-%COMP%], .resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .utteranceContent[_ngcontent-%COMP%]   .term[_ngcontent-%COMP%]   .term-main[_ngcontent-%COMP%]   .token[_ngcontent-%COMP%]   .endGripper[_ngcontent-%COMP%]{pointer-events:auto;cursor:grab;width:6px;height:100%;box-sizing:border-box;background:transparent}  html[data-focus-source=key] .resetButtonAndInputV2Container .qnaInputV2Container .utteranceContentExtraContainer .utteranceContent .term .term-main .token .beginGripper:focus,   html[data-focus-source=key] .resetButtonAndInputV2Container .qnaInputV2Container .utteranceContentExtraContainer .utteranceContent .term .term-main .token .endGripper:focus{outline-offset:2px;outline-style:dashed}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .utteranceContent[_ngcontent-%COMP%]   .term[_ngcontent-%COMP%]   .term-main[_ngcontent-%COMP%]   .token[_ngcontent-%COMP%]   .beginGripper[_ngcontent-%COMP%]   svg.line[_ngcontent-%COMP%], .resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .utteranceContent[_ngcontent-%COMP%]   .term[_ngcontent-%COMP%]   .term-main[_ngcontent-%COMP%]   .token[_ngcontent-%COMP%]   .endGripper[_ngcontent-%COMP%]   svg.line[_ngcontent-%COMP%]{width:2px;height:calc(100% - 12px)}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .utteranceContent[_ngcontent-%COMP%]   .term[_ngcontent-%COMP%]   .term-main[_ngcontent-%COMP%]   .token[_ngcontent-%COMP%]   .beginGripper[_ngcontent-%COMP%]   svg.line[_ngcontent-%COMP%]   rect[_ngcontent-%COMP%], .resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .utteranceContent[_ngcontent-%COMP%]   .term[_ngcontent-%COMP%]   .term-main[_ngcontent-%COMP%]   .token[_ngcontent-%COMP%]   .endGripper[_ngcontent-%COMP%]   svg.line[_ngcontent-%COMP%]   rect[_ngcontent-%COMP%]{width:100%;height:100%}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .utteranceContent[_ngcontent-%COMP%]   .term[_ngcontent-%COMP%]   .term-main[_ngcontent-%COMP%]   .token[_ngcontent-%COMP%]   .beginGripper[_ngcontent-%COMP%]   svg.circle[_ngcontent-%COMP%], .resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .utteranceContent[_ngcontent-%COMP%]   .term[_ngcontent-%COMP%]   .term-main[_ngcontent-%COMP%]   .token[_ngcontent-%COMP%]   .endGripper[_ngcontent-%COMP%]   svg.circle[_ngcontent-%COMP%]{width:8px;height:8px}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .utteranceContent[_ngcontent-%COMP%]   .term[_ngcontent-%COMP%]   .term-main[_ngcontent-%COMP%]   .token[_ngcontent-%COMP%]   .beginGripper[_ngcontent-%COMP%]   svg.circle[_ngcontent-%COMP%]   circle[_ngcontent-%COMP%], .resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .utteranceContent[_ngcontent-%COMP%]   .term[_ngcontent-%COMP%]   .term-main[_ngcontent-%COMP%]   .token[_ngcontent-%COMP%]   .endGripper[_ngcontent-%COMP%]   svg.circle[_ngcontent-%COMP%]   circle[_ngcontent-%COMP%]{cx:4px;cy:4px;r:3px;stroke-width:2px}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .utteranceContent[_ngcontent-%COMP%]   .term[_ngcontent-%COMP%]   .term-main[_ngcontent-%COMP%]   .token[_ngcontent-%COMP%]   .dropZone[_ngcontent-%COMP%]{pointer-events:auto;cursor:default;background-color:transparent;position:absolute}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .utteranceContent[_ngcontent-%COMP%]   .term[_ngcontent-%COMP%]   .term-main[_ngcontent-%COMP%]   .token[_ngcontent-%COMP%]   .dropZone.noGripperOnDragging[_ngcontent-%COMP%]{pointer-events:none}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .utteranceContent[_ngcontent-%COMP%]   .term[_ngcontent-%COMP%]   .term-main[_ngcontent-%COMP%]   .token[_ngcontent-%COMP%]   .dropZone.endGripperOnDragging[_ngcontent-%COMP%]:not(.serveEndGripper):not(.hasBeginGripper), .resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .utteranceContent[_ngcontent-%COMP%]   .term[_ngcontent-%COMP%]   .term-main[_ngcontent-%COMP%]   .token[_ngcontent-%COMP%]   .dropZone.beginGripperOnDragging[_ngcontent-%COMP%]:not(.serveBeginGripper):not(.hasEndGripper){visibility:hidden;width:0;height:0}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .utteranceContent[_ngcontent-%COMP%]   .term[_ngcontent-%COMP%]   .term-main[_ngcontent-%COMP%]   .token[_ngcontent-%COMP%]   .dropZoneLocatedBeforeToken[_ngcontent-%COMP%]{position:absolute;width:calc(50% + 2px);left:-2px;height:calc(100% + 14px);top:unset;bottom:-2px}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .utteranceContent[_ngcontent-%COMP%]   .term[_ngcontent-%COMP%]   .term-main[_ngcontent-%COMP%]   .token[_ngcontent-%COMP%]   .dropZoneLocatedBeforeToken[_ngcontent-%COMP%]   .beginGripper[_ngcontent-%COMP%]{position:absolute;left:0}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .utteranceContent[_ngcontent-%COMP%]   .term[_ngcontent-%COMP%]   .term-main[_ngcontent-%COMP%]   .token[_ngcontent-%COMP%]   .dropZoneLocatedBeforeToken[_ngcontent-%COMP%]   .beginGripper[_ngcontent-%COMP%]   svg.line[_ngcontent-%COMP%]{position:absolute;left:0;bottom:2px}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .utteranceContent[_ngcontent-%COMP%]   .term[_ngcontent-%COMP%]   .term-main[_ngcontent-%COMP%]   .token[_ngcontent-%COMP%]   .dropZoneLocatedBeforeToken[_ngcontent-%COMP%]   .beginGripper[_ngcontent-%COMP%]   svg.circle[_ngcontent-%COMP%]{position:absolute;left:-3px;top:2px}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .utteranceContent[_ngcontent-%COMP%]   .term[_ngcontent-%COMP%]   .term-main[_ngcontent-%COMP%]   .token[_ngcontent-%COMP%]   .dropZoneLocatedAfterToken[_ngcontent-%COMP%]{position:absolute;right:-2px;height:calc(100% + 16px);width:calc(50% + 2px);top:-2px;bottom:unset}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .utteranceContent[_ngcontent-%COMP%]   .term[_ngcontent-%COMP%]   .term-main[_ngcontent-%COMP%]   .token[_ngcontent-%COMP%]   .dropZoneLocatedAfterToken[_ngcontent-%COMP%]   .endGripper[_ngcontent-%COMP%]{position:absolute;right:0}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .utteranceContent[_ngcontent-%COMP%]   .term[_ngcontent-%COMP%]   .term-main[_ngcontent-%COMP%]   .token[_ngcontent-%COMP%]   .dropZoneLocatedAfterToken[_ngcontent-%COMP%]   .endGripper[_ngcontent-%COMP%]   svg.line[_ngcontent-%COMP%]{position:absolute;right:0;top:2px}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .utteranceContent[_ngcontent-%COMP%]   .term[_ngcontent-%COMP%]   .term-main[_ngcontent-%COMP%]   .token[_ngcontent-%COMP%]   .dropZoneLocatedAfterToken[_ngcontent-%COMP%]   .endGripper[_ngcontent-%COMP%]   svg.circle[_ngcontent-%COMP%]{position:absolute;right:-3px;bottom:2px}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .utteranceContent[_ngcontent-%COMP%]   .term.unused[_ngcontent-%COMP%]   .term-main[_ngcontent-%COMP%]{color:var(--fluent-theme-neutral-tertiary-color, #A19F9D)}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .utteranceContent[_ngcontent-%COMP%]   .term.showAcceptedUnderline[_ngcontent-%COMP%]   .term-main[_ngcontent-%COMP%]{cursor:pointer;padding-bottom:1px;border-bottom-color:var(--colorSuccessForeground1)}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .utteranceContent[_ngcontent-%COMP%]   .term.showAcceptedUnderline[_ngcontent-%COMP%]   .term-main[_ngcontent-%COMP%]:hover{background-color:color-mix(in srgb,var(--colorSuccessForeground1) 15%,transparent)}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .utteranceContent[_ngcontent-%COMP%]   .term.showWarningUnderline[_ngcontent-%COMP%]{position:relative}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .utteranceContent[_ngcontent-%COMP%]   .term.showWarningUnderline[_ngcontent-%COMP%]   .term-main[_ngcontent-%COMP%]{cursor:pointer;border-bottom-color:var(--colorSuccessForeground1)}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .utteranceContent[_ngcontent-%COMP%]   .term.showWarningUnderline[_ngcontent-%COMP%]   .term-main[_ngcontent-%COMP%]:hover{background-color:color-mix(in srgb,var(--colorSuccessForeground1) 15%,transparent)}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .utteranceContent[_ngcontent-%COMP%]   .term.showWarningUnderline[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{position:absolute;width:100%}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .utteranceContent[_ngcontent-%COMP%]   .term.showErrorUnderline[_ngcontent-%COMP%]   .term-main[_ngcontent-%COMP%]{cursor:pointer;padding-bottom:1px;border-bottom-color:var(--colorDangerForeground1)}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .utteranceContent[_ngcontent-%COMP%]   .term.showErrorUnderline[_ngcontent-%COMP%]   .term-main[_ngcontent-%COMP%]:hover{background-color:color-mix(in srgb,var(--colorDangerForeground1) 15%,transparent)}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .actionButtonsInputBoxFullHeightContainer[_ngcontent-%COMP%]{display:flex;display:-ms-flexbox;position:relative;margin-left:2px;padding:1px 0}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .actionButtonsInputBoxFullHeightContainer[_ngcontent-%COMP%]   .singleButtonContainer[_ngcontent-%COMP%]{flex:1;-ms-flex:1 1 auto;position:relative}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .actionButtonsInputBoxFullHeightContainer[_ngcontent-%COMP%]   .singleButtonContainer[_ngcontent-%COMP%]   .actionButton[_ngcontent-%COMP%]{width:100%;position:absolute;top:0;padding:0;margin:0;border:none}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .actionButtonsInputBoxFullHeightContainer[_ngcontent-%COMP%]   .singleButtonContainer[_ngcontent-%COMP%]   .actionButton.deleteButton[_ngcontent-%COMP%]{left:0}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .actionButtonsInputBoxFullHeightContainer[_ngcontent-%COMP%]   .singleButtonContainer[_ngcontent-%COMP%]   .actionButton.commitButton[_ngcontent-%COMP%]{right:0}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .actionButtonsInputBoxFullHeightContainer[_ngcontent-%COMP%]   .singleButtonContainer[_ngcontent-%COMP%]   .actionButton.deleteButton[_ngcontent-%COMP%]:not(.usingShellTheme).disabled, .resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .actionButtonsInputBoxFullHeightContainer[_ngcontent-%COMP%]   .singleButtonContainer[_ngcontent-%COMP%]   .actionButton.commitButton[_ngcontent-%COMP%]:not(.usingShellTheme).disabled{opacity:.5;cursor:default}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .actionButtonsInputBoxFullHeightContainer[_ngcontent-%COMP%]   .singleButtonContainer[_ngcontent-%COMP%]   .actionButton.deleteButton[_ngcontent-%COMP%]:not(.usingShellTheme):hover:not(.disabled), .resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .actionButtonsInputBoxFullHeightContainer[_ngcontent-%COMP%]   .singleButtonContainer[_ngcontent-%COMP%]   .actionButton.commitButton[_ngcontent-%COMP%]:not(.usingShellTheme):hover:not(.disabled){filter:brightness(90%)}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .actionButtonsInputBoxFullHeightContainer[_ngcontent-%COMP%]   .singleButtonContainer[_ngcontent-%COMP%]   .actionButton.deleteButton[_ngcontent-%COMP%]:not(.usingShellTheme):active:not(.disabled), .resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .actionButtonsInputBoxFullHeightContainer[_ngcontent-%COMP%]   .singleButtonContainer[_ngcontent-%COMP%]   .actionButton.commitButton[_ngcontent-%COMP%]:not(.usingShellTheme):active:not(.disabled){filter:brightness(80%)}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .actionButtonsInputBoxFullHeightContainer[_ngcontent-%COMP%]   .singleButtonContainer[_ngcontent-%COMP%]   .actionButton.deleteButton.usingShellTheme[_ngcontent-%COMP%]{background-color:var(--colorNeutralBackground1);color:var(--colorNeutralForeground1)}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .actionButtonsInputBoxFullHeightContainer[_ngcontent-%COMP%]   .singleButtonContainer[_ngcontent-%COMP%]   .actionButton.deleteButton.usingShellTheme.disabled[_ngcontent-%COMP%]{color:var(--colorNeutralForegroundDisabled);cursor:default}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .actionButtonsInputBoxFullHeightContainer[_ngcontent-%COMP%]   .singleButtonContainer[_ngcontent-%COMP%]   .actionButton.deleteButton.usingShellTheme[_ngcontent-%COMP%]:hover:not(.disabled){background-color:var(--colorNeutralBackground1Hover)}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .actionButtonsInputBoxFullHeightContainer[_ngcontent-%COMP%]   .singleButtonContainer[_ngcontent-%COMP%]   .actionButton.deleteButton.usingShellTheme[_ngcontent-%COMP%]:active:not(.disabled){background-color:var(--colorNeutralBackground1Pressed)}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .actionButtonsInputBoxFullHeightContainer[_ngcontent-%COMP%]   .singleButtonContainer[_ngcontent-%COMP%]   .actionButton.commitButton.usingShellTheme[_ngcontent-%COMP%]{background-color:var(--colorBrandBackground);color:var(--colorNeutralForegroundOnBrand)}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .actionButtonsInputBoxFullHeightContainer[_ngcontent-%COMP%]   .singleButtonContainer[_ngcontent-%COMP%]   .actionButton.commitButton.usingShellTheme.disabled[_ngcontent-%COMP%]{background-color:var(--colorNeutralBackgroundDisabled);color:var(--colorNeutralForegroundDisabled);cursor:default}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .actionButtonsInputBoxFullHeightContainer[_ngcontent-%COMP%]   .singleButtonContainer[_ngcontent-%COMP%]   .actionButton.commitButton.usingShellTheme[_ngcontent-%COMP%]:hover:not(.disabled){background-color:var(--colorBrandBackgroundHover)}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .actionButtonsInputBoxFullHeightContainer[_ngcontent-%COMP%]   .singleButtonContainer[_ngcontent-%COMP%]   .actionButton.commitButton.usingShellTheme[_ngcontent-%COMP%]:active:not(.disabled){background-color:var(--colorBrandBackgroundPressed)}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .actionButtonsInputBoxFullHeightContainer[_ngcontent-%COMP%]   .singleButtonContainer[_ngcontent-%COMP%]   .actionButton[_ngcontent-%COMP%]   .actionButtonsInputBoxOneLineHeightContainer[_ngcontent-%COMP%]{padding:5px 0;width:100%}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .actionButtonsInputBoxFullHeightContainer[_ngcontent-%COMP%]   .singleButtonContainer[_ngcontent-%COMP%]   .actionButton[_ngcontent-%COMP%]   .actionButtonsInputBoxOneLineHeightContainer[_ngcontent-%COMP%]   .buttonIconContainer[_ngcontent-%COMP%]{position:absolute;top:0;width:100%;height:100%;display:flex;display:-ms-flexbox;align-items:center;justify-content:center}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container.authoringDisabled[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .utteranceContent[_ngcontent-%COMP%], .resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container.authoringDisabled[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .utteranceContent[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{pointer-events:none}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container.authoringDisabled[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .utteranceContent[_ngcontent-%COMP%]   .token.space[_ngcontent-%COMP%], .resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container.authoringDisabled[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .utteranceContent[_ngcontent-%COMP%]   .token.filler[_ngcontent-%COMP%], .resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container.authoringDisabled[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .utteranceContent[_ngcontent-%COMP%]   .token[_ngcontent-%COMP%]   .beginGripper[_ngcontent-%COMP%], .resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container.authoringDisabled[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .utteranceContent[_ngcontent-%COMP%]   .token[_ngcontent-%COMP%]   .endGripper[_ngcontent-%COMP%], .resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container.authoringDisabled[_ngcontent-%COMP%]   .utteranceContentExtraContainer[_ngcontent-%COMP%]   .utteranceContent[_ngcontent-%COMP%]   .token[_ngcontent-%COMP%]   .dropZone[_ngcontent-%COMP%]{pointer-events:none!important}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container.authoringDisabled.showDisabled[_ngcontent-%COMP%]   .questionIcon[_ngcontent-%COMP%], .resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container.authoringDisabled.showDisabled[_ngcontent-%COMP%]   .utteranceContent[_ngcontent-%COMP%]{opacity:.6}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]     ul.qnaAutoComplete, .resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]     .qnaAutoComplete ul{text-decoration:none;list-style:none;margin-top:4px!important;z-index:101;white-space:pre;max-height:400px;overflow-y:auto;padding:0}.resetButtonAndInputV2Container[_ngcontent-%COMP%]   .qnaInputV2Container[_ngcontent-%COMP%]     .withTopSeparator ul.qnaAutoComplete{border-top:solid 1px var(--fluent-theme-neutral-tertiary-alt-color, #C8C6C4)}.qnaAutoCorrection[_ngcontent-%COMP%]{margin-top:8px;display:flex;display:-ms-flexbox}.qnaAutoCorrection[_ngcontent-%COMP%]   .correctedUtteranceContentContainer[_ngcontent-%COMP%]{margin-left:4px;cursor:pointer;font-style:italic;text-decoration:underline}.qnaAutoCorrection[_ngcontent-%COMP%]   .correctedUtteranceContentContainer[_ngcontent-%COMP%]   .corrected[_ngcontent-%COMP%]{font-weight:600}" ]
            }), QnaInputV2Component;
        }();
        function convertToUISpans(spans, config) {
            if (spans) {
                var uiSpans = _.map(spans, function(span) {
                    if (!_.isEmpty(span.text)) return {
                        text: span.isWhiteSpace ? span.text : span.text.replace(" ", qna_input_v2_component_nonBreakingSpace),
                        startIndex: span.startIndex,
                        endExcludingIndex: span.endExcludingIndex,
                        tokens: generateUITokens(span),
                        isCorrected: span.isCorrected,
                        isUnused: !span.isUsed && config.considerDroppedSpans,
                        isWhiteSpace: span.isWhiteSpace,
                        shouldShowAcceptedUnderline: "accepted" === span.state,
                        shouldShowErrorUnderline: "error" === span.state && config.considerErrorSpans,
                        shouldShowWarningUnderline: "warning" === span.state && config.considerWarningSpans
                    };
                }).filter(function(uiSpan) {
                    return !!uiSpan;
                });
                return config.supportTokenGrippers && function(uiSpans) {
                    var previousBeginGripperZone, previousEndGripperZone;
                    _.forEach(uiSpans, function(uiSpan, spanIndex) {
                        _.forEach(uiSpan.tokens, function(uiToken, tokenIndex) {
                            var targetToken = uiSpans[spanIndex].tokens[tokenIndex];
                            if (!_.isEmpty(targetToken.text) && !targetToken.isWhiteSpace) {
                                var beforeDropZone = {
                                    position: uiToken.startIndex,
                                    beginGripperOf: {
                                        spanIndex,
                                        tokenIndex
                                    },
                                    hasBeginGripper: !1,
                                    hasEndGripper: !1,
                                    previousBeginGripperZoneInfo: previousBeginGripperZone,
                                    previousEndGripperZoneInfo: previousEndGripperZone
                                }, afterDropZone = {
                                    position: uiToken.endExcludingIndex,
                                    endGripperOf: {
                                        spanIndex,
                                        tokenIndex
                                    },
                                    hasBeginGripper: !1,
                                    hasEndGripper: !1,
                                    previousBeginGripperZoneInfo: previousBeginGripperZone,
                                    previousEndGripperZoneInfo: previousEndGripperZone
                                };
                                previousBeginGripperZone && (previousBeginGripperZone.nextBeginGripperZoneInfo = beforeDropZone, 
                                previousBeginGripperZone.nextEndGripperZoneInfo = afterDropZone), previousEndGripperZone && (previousEndGripperZone.nextBeginGripperZoneInfo = beforeDropZone, 
                                previousEndGripperZone.nextEndGripperZoneInfo = afterDropZone), previousBeginGripperZone = beforeDropZone, 
                                previousEndGripperZone = afterDropZone, uiToken.dropZonesInfo = {
                                    zoneLocatedBeforeInfo: beforeDropZone,
                                    zoneLocatedAfterInfo: afterDropZone
                                };
                            }
                        });
                    });
                }(uiSpans), uiSpans;
            }
        }
        function generateUITokens(span) {
            for (var uiTokens = [], currentIndexInSpan = 0, _loop_1 = function(token) {
                var tokenStartIndexInSpan = token.startIndex - span.startIndex, tokenLength = token.endExcludingIndex - token.startIndex;
                if (debug.fF.assert(function() {
                    return _.inRange(tokenStartIndexInSpan, 0, _.size(span.text));
                }, "Expect each token.startIndex is a valid index with the given spanText and spanStartIndex"), 
                debug.fF.assert(function() {
                    return !_.isEmpty(_.trim(span.text.substr(tokenStartIndexInSpan, tokenLength)));
                }, "Expect no Token being pure space"), currentIndexInSpan < tokenStartIndexInSpan) {
                    var beforeUITokens = generateFillerTextUITokens(span.startIndex, span.text, currentIndexInSpan, tokenStartIndexInSpan, span.isWhiteSpace);
                    uiTokens.push.apply(uiTokens, beforeUITokens || []);
                }
                uiTokens.push({
                    text: token.text.replace(" ", qna_input_v2_component_nonBreakingSpace),
                    startIndex: token.startIndex,
                    endExcludingIndex: token.endExcludingIndex,
                    isFillerText: !1,
                    isWhiteSpace: !1
                }), currentIndexInSpan = tokenStartIndexInSpan + tokenLength;
            }, _i = 0, _a = span.tokens || []; _i < _a.length; _i++) _loop_1(_a[_i]);
            var spanLength = _.size(span.text);
            if (currentIndexInSpan < spanLength) {
                var remainingFillerUITokens = generateFillerTextUITokens(span.startIndex, span.text, currentIndexInSpan, spanLength, span.isWhiteSpace);
                uiTokens.push.apply(uiTokens, remainingFillerUITokens || []);
            }
            return uiTokens;
        }
        function generateFillerTextUITokens(spanStartIndexInUtterance, spanText, startIndexInSpan, excludingEndIndexInSpan, isOwnerSpanWhiteSpace) {
            debug.fF.assert(function() {
                return _.inRange(startIndexInSpan, 0, _.size(spanText));
            }, "Expect the given startIndexInSpan is a valid index in the given spanText"), 
            debug.fF.assert(function() {
                return _.inRange(excludingEndIndexInSpan, 0, _.size(spanText) + 1);
            }, "Expect the given notIncludingEndIndexInSpan is a valid index in the given spanText or equals to spanText.length+1");
            for (var uiTokens = [], isFillerSegmentWhiteSpace = /\s/.test(spanText.charAt(startIndexInSpan)), currentTokenFillerStartIndex = startIndexInSpan, index = startIndexInSpan + 1; index <= excludingEndIndexInSpan; index++) {
                var isCurrentCharSpace = /\s/.test(spanText.charAt(index));
                if (index === excludingEndIndexInSpan || isFillerSegmentWhiteSpace !== isCurrentCharSpace) {
                    var fillerTextLength = index - currentTokenFillerStartIndex, fillerText = isFillerSegmentWhiteSpace && !isOwnerSpanWhiteSpace ? _.repeat(qna_input_v2_component_nonBreakingSpace, fillerTextLength) : spanText.substr(currentTokenFillerStartIndex, fillerTextLength);
                    uiTokens.push({
                        text: fillerText,
                        startIndex: spanStartIndexInUtterance + currentTokenFillerStartIndex,
                        endExcludingIndex: spanStartIndexInUtterance + currentTokenFillerStartIndex + fillerTextLength,
                        isFillerText: !0,
                        isWhiteSpace: isFillerSegmentWhiteSpace
                    }), isFillerSegmentWhiteSpace = isCurrentCharSpace, currentTokenFillerStartIndex = index;
                }
            }
            return uiTokens;
        }
        function getCorrectedUtteranceLabel(correctionInfoState, localizationService) {
            if (correctionInfoState) return 1 === correctionInfoState ? localizationService.get("Qna_DidYouMean_LabelText") : 2 === correctionInfoState ? localizationService.get("Qna_ShowingResultsFor_LabelText") : void 0;
        }
        function preventDefault(event) {
            event.preventDefault && event.preventDefault();
        }
        function stopPropagation(event) {
            event.stopPropagation && event.stopPropagation();
        }
        function utterancesEqualAfterNormalizeSpace(utterance1, utterance2) {
            return null == utterance1 ? null == utterance2 : null == utterance2 ? null == utterance1 : getSpaceNormalizedString(utterance1) === getSpaceNormalizedString(utterance2);
        }
        function checkToUpdateGripperLocationOnDragDrop(gripperData, dropZoneInfo, grippersPairLocation$) {
            var _a, _b, _c, _d;
            if (!dropZoneInfo) return !1;
            if ("beginGripper" === gripperData && dropZoneInfo.beginGripperOf) {
                var originalEnd = _.cloneDeep(grippersPairLocation$.value.end);
                if (dropZoneInfo.beginGripperOf.spanIndex < originalEnd.spanIndex || dropZoneInfo.beginGripperOf.spanIndex === originalEnd.spanIndex && dropZoneInfo.beginGripperOf.tokenIndex <= originalEnd.tokenIndex) {
                    var newBegin = dropZoneInfo.beginGripperOf;
                    return debug.fF.assertValue(null === (_a = grippersPairLocation$.value) || void 0 === _a ? void 0 : _a.associatedUISpans, "grippersPairLocation$.value.associatedUISpans should be defined"), 
                    grippersPairLocation$.next({
                        associatedUISpans: null === (_b = grippersPairLocation$.value) || void 0 === _b ? void 0 : _b.associatedUISpans,
                        begin: newBegin,
                        end: originalEnd
                    }), !0;
                }
            } else if ("endGripper" === gripperData && dropZoneInfo.endGripperOf) {
                var originalBegin = _.cloneDeep(grippersPairLocation$.value.begin);
                if (dropZoneInfo.endGripperOf.spanIndex > originalBegin.spanIndex || dropZoneInfo.endGripperOf.spanIndex === originalBegin.spanIndex && dropZoneInfo.endGripperOf.tokenIndex >= originalBegin.tokenIndex) {
                    var newEnd = dropZoneInfo.endGripperOf;
                    return debug.fF.assertValue(null === (_c = grippersPairLocation$.value) || void 0 === _c ? void 0 : _c.associatedUISpans, "grippersPairLocation$.value.associatedUISpans should be defined"), 
                    grippersPairLocation$.next({
                        associatedUISpans: null === (_d = grippersPairLocation$.value) || void 0 === _d ? void 0 : _d.associatedUISpans,
                        begin: originalBegin,
                        end: newEnd
                    }), !0;
                }
            }
            return !1;
        }
        function hasGripper(token, forZoneLocatedBeforeToken, gripper, currentDroppedGrippersLocation) {
            if (!(null == currentDroppedGrippersLocation ? void 0 : currentDroppedGrippersLocation.begin) || !(null == currentDroppedGrippersLocation ? void 0 : currentDroppedGrippersLocation.end) || !token.dropZonesInfo) return !1;
            var targetDropZoneInfo = forZoneLocatedBeforeToken ? token.dropZonesInfo.zoneLocatedBeforeInfo : token.dropZonesInfo.zoneLocatedAfterInfo;
            debug.fF.assert(function() {
                return "none" !== gripper;
            }, "The given gripper should not be GripperIdentifier.None");
            var targetGripperLocation = "beginGripper" === gripper ? currentDroppedGrippersLocation.begin : currentDroppedGrippersLocation.end, compareToGripperLocation = "beginGripper" === gripper ? targetDropZoneInfo.beginGripperOf : targetDropZoneInfo.endGripperOf;
            return targetGripperLocation.spanIndex === (compareToGripperLocation && compareToGripperLocation.spanIndex) && targetGripperLocation.tokenIndex === (compareToGripperLocation && compareToGripperLocation.tokenIndex);
        }
        function isBetweenGrippers(spanIndex, tokenIndex, grippersPairLocation) {
            if (!(null == grippersPairLocation ? void 0 : grippersPairLocation.begin) || !(null == grippersPairLocation ? void 0 : grippersPairLocation.end)) return !1;
            var begin = grippersPairLocation.begin, end = grippersPairLocation.end;
            return (spanIndex !== begin.spanIndex ? spanIndex > begin.spanIndex : tokenIndex >= begin.tokenIndex) && (spanIndex !== end.spanIndex ? spanIndex < end.spanIndex : tokenIndex <= end.tokenIndex);
        }
        function isEventFromGripper(event) {
            var _a;
            return _.some(null === (_a = null == event ? void 0 : event.target) || void 0 === _a ? void 0 : _a.classList, function(className) {
                return "beginGripper" === className || "endGripper" === className;
            });
        }
        function getWarningMessage(warnings, qnaProxyPath, localizationService) {
            var userMessageKeys = wireClientContractsConversion_util.Tm(warnings, qnaProxyPath);
            return _.map(userMessageKeys, function(messageKey) {
                return localizationService.get(messageKey);
            }).join("\n\n");
        }
        function getUtteranceSelectionPosition(position, selectionRange) {
            return selectionRange ? 0 === position ? selectionRange.normalizedAnchor : selectionRange.normalizedFocus : -1;
        }
        var qnaToolingDialogLauncher = __webpack_require__(71148), enums = __webpack_require__(46135), visual_host_tooltip_service_factory_service = __webpack_require__(98136), view_mode_state_service = __webpack_require__(77200), settings_service = __webpack_require__(55232), lazy_scoped_provider = __webpack_require__(28894), spinner_component = __webpack_require__(73425), canvas_visual_error_overlay_component = __webpack_require__(98885), single_visual_host_component = __webpack_require__(46101), pbi_tooltip_directive = __webpack_require__(36858), qna_feedback_state_service = __webpack_require__(21548), qna_feedback_component_c0 = function(a0) {
            return {
                color: a0
            };
        }, qna_feedback_component_c1 = function() {
            return {
                "aria-label": "Qna_FeedbackDialog_ThumbsUp"
            };
        }, qna_feedback_component_c2 = function() {
            return {
                "aria-label": "Qna_FeedbackDialog_ThumbsDown"
            };
        };
        function QnaFeedbackComponent_div_2_Template(rf, ctx) {
            if (1 & rf) {
                var _r6 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "div", 3), fesm2022_core["\u0275\u0275element"](1, "span", 4), 
                fesm2022_core["\u0275\u0275elementStart"](2, "button", 5), fesm2022_core["\u0275\u0275listener"]("accessible-click", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r6);
                    var ctx_r5 = fesm2022_core["\u0275\u0275nextContext"]();
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r5.feedbackIconClick(!0));
                }), fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275elementStart"](3, "button", 6), 
                fesm2022_core["\u0275\u0275listener"]("accessible-click", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r6);
                    var ctx_r7 = fesm2022_core["\u0275\u0275nextContext"]();
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r7.feedbackIconClick(!1));
                }), fesm2022_core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var ctx_r0 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngStyle", fesm2022_core["\u0275\u0275pureFunction1"](5, qna_feedback_component_c0, ctx_r0.fontColor)), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngStyle", fesm2022_core["\u0275\u0275pureFunction1"](7, qna_feedback_component_c0, ctx_r0.fontColor))("localizeAttr", fesm2022_core["\u0275\u0275pureFunction0"](9, qna_feedback_component_c1)), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngStyle", fesm2022_core["\u0275\u0275pureFunction1"](10, qna_feedback_component_c0, ctx_r0.fontColor))("localizeAttr", fesm2022_core["\u0275\u0275pureFunction0"](12, qna_feedback_component_c2));
            }
        }
        function QnaFeedbackComponent_div_3_Template(rf, ctx) {
            if (1 & rf) {
                var _r9 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "div", 3)(1, "a", 7), fesm2022_core["\u0275\u0275listener"]("accessible-click", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r9);
                    var ctx_r8 = fesm2022_core["\u0275\u0275nextContext"]();
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r8.launchFeedbackDialog(!0));
                }), fesm2022_core["\u0275\u0275element"](2, "span", 8), fesm2022_core["\u0275\u0275elementEnd"](), 
                fesm2022_core["\u0275\u0275element"](3, "button", 9), fesm2022_core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r1 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngStyle", fesm2022_core["\u0275\u0275pureFunction1"](3, qna_feedback_component_c0, ctx_r1.fontColor)), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("localizeAttr", fesm2022_core["\u0275\u0275pureFunction0"](5, qna_feedback_component_c1))("ngStyle", fesm2022_core["\u0275\u0275pureFunction1"](6, qna_feedback_component_c0, ctx_r1.fontColor));
            }
        }
        function QnaFeedbackComponent_div_4_Template(rf, ctx) {
            if (1 & rf) {
                var _r11 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "div", 3)(1, "a", 10), fesm2022_core["\u0275\u0275listener"]("accessible-click", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r11);
                    var ctx_r10 = fesm2022_core["\u0275\u0275nextContext"]();
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r10.launchFeedbackDialog(!1));
                }), fesm2022_core["\u0275\u0275element"](2, "span", 11), fesm2022_core["\u0275\u0275elementEnd"](), 
                fesm2022_core["\u0275\u0275element"](3, "button", 12), fesm2022_core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r2 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("ngStyle", fesm2022_core["\u0275\u0275pureFunction1"](3, qna_feedback_component_c0, ctx_r2.fontColor)), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngStyle", fesm2022_core["\u0275\u0275pureFunction1"](5, qna_feedback_component_c0, ctx_r2.fontColor))("localizeAttr", fesm2022_core["\u0275\u0275pureFunction0"](7, qna_feedback_component_c2));
            }
        }
        function QnaFeedbackComponent_div_5_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 3), fesm2022_core["\u0275\u0275element"](1, "span", 13)(2, "button", 9), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r3 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngStyle", fesm2022_core["\u0275\u0275pureFunction1"](3, qna_feedback_component_c0, ctx_r3.fontColor)), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("localizeAttr", fesm2022_core["\u0275\u0275pureFunction0"](5, qna_feedback_component_c1))("ngStyle", fesm2022_core["\u0275\u0275pureFunction1"](6, qna_feedback_component_c0, ctx_r3.fontColor));
            }
        }
        function QnaFeedbackComponent_div_6_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 3), fesm2022_core["\u0275\u0275element"](1, "span", 13)(2, "button", 14), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r4 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngStyle", fesm2022_core["\u0275\u0275pureFunction1"](3, qna_feedback_component_c0, ctx_r4.fontColor)), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("localizeAttr", fesm2022_core["\u0275\u0275pureFunction0"](5, qna_feedback_component_c2))("ngStyle", fesm2022_core["\u0275\u0275pureFunction1"](6, qna_feedback_component_c0, ctx_r4.fontColor));
            }
        }
        var QnaFeedbackComponent = function() {
            function QnaFeedbackComponent(core, localizationService, qnaFeedbackStateService, screenReaderService) {
                this.core = core, this.localizationService = localizationService, this.qnaFeedbackStateService = qnaFeedbackStateService, 
                this.screenReaderService = screenReaderService;
            }
            return QnaFeedbackComponent.prototype.ngOnInit = function() {
                this.utterance = this.core.getCurrentUtteranceTrimmed();
            }, QnaFeedbackComponent.prototype.feedbackIconClick = function(isPositive) {
                var feedback = {
                    sentiment: isPositive ? 1 : -1,
                    reason: void 0,
                    comment: void 0
                };
                this.updateState(isPositive ? "PositiveChecked" : "NegativeChecked"), this.sendFeedbackInterpretRequest(feedback);
            }, QnaFeedbackComponent.prototype.getState = function() {
                return this.qnaFeedbackStateService.getState(this.utterance);
            }, QnaFeedbackComponent.prototype.announceDescription = function() {
                var currentState = this.getState(), description = this.localizationService.get("Qna_FeedbackState_" + currentState);
                debug.fF.assertValue(description, "no strings for current feedback state"), this.screenReaderService.alert(description);
            }, QnaFeedbackComponent.prototype.launchFeedbackDialog = function(isPositive) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        return this.core.launchFeedbackDialog(isPositive ? 1 : -1, !0), [ 2 ];
                    });
                });
            }, QnaFeedbackComponent.prototype.sendFeedbackInterpretRequest = function(feedback) {
                return debug.fF.assertValue(feedback, "invalid feedback"), this.core.sendFeedback(feedback);
            }, QnaFeedbackComponent.prototype.updateState = function(newState) {
                this.qnaFeedbackStateService.updateState(this.utterance, newState);
            }, QnaFeedbackComponent.\u0275fac = function(t) {
                return new (t || QnaFeedbackComponent)(fesm2022_core["\u0275\u0275directiveInject"](qna_component_core_service.D), fesm2022_core["\u0275\u0275directiveInject"](localization_service.o), fesm2022_core["\u0275\u0275directiveInject"](qna_feedback_state_service.B), fesm2022_core["\u0275\u0275directiveInject"](screen_reader_service.g));
            }, QnaFeedbackComponent.\u0275cmp = fesm2022_core["\u0275\u0275defineComponent"]({
                type: QnaFeedbackComponent,
                selectors: [ [ "qna-feedback" ] ],
                inputs: {
                    fontColor: "fontColor"
                },
                features: [ fesm2022_core["\u0275\u0275ProvidersFeature"]([ tooltip_theme_service.Q, visual_host_tooltip_service_factory_service.Z ]) ],
                decls: 7,
                vars: 6,
                consts: [ [ "focus-nav-mode", "Hierarchy", 1, "qnnFeedback", 3, "focusin" ], [ 3, "ngSwitch" ], [ "class", "textAndIcons", 4, "ngSwitchCase" ], [ 1, "textAndIcons" ], [ "localize", "Qna_FeedbackState_Unchosen", 1, "descriptionText", 3, "ngStyle" ], [ 1, "feedbackIcon", "glyphicon", "glyph-small", "pbi-glyph-like", 3, "ngStyle", "localizeAttr", "accessible-click" ], [ 1, "feedbackIcon", "glyphicon", "glyph-small", "pbi-glyph-dislike", 3, "ngStyle", "localizeAttr", "accessible-click" ], [ "href", "javascript:void(0);", 1, "descriptionText", 3, "ngStyle", "accessible-click" ], [ "localize", "Qna_FeedbackState_PositiveChecked" ], [ 1, "feedbackIcon", "glyphicon", "glyph-small", "pbi-glyph-likesolid", 3, "localizeAttr", "ngStyle" ], [ "href", "javascript:void(0);", 1, "descriptionText", 3, "accessible-click" ], [ "localize", "Qna_FeedbackState_NegativeChecked", 3, "ngStyle" ], [ 1, "feedbackIcon", "glyphicon", "glyph-small", "pbi-glyph-dislikesolid", 3, "ngStyle", "localizeAttr" ], [ "localize", "Qna_FeedbackState_FeedbackDetailSubmitted", 1, "descriptionText", 3, "ngStyle" ], [ 1, "feedbackIcon", "glyphicon", "glyph-small", "pbi-glyph-dislikesolid", 3, "localizeAttr", "ngStyle" ] ],
                template: function(rf, ctx) {
                    1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 0), fesm2022_core["\u0275\u0275listener"]("focusin", function() {
                        return ctx.announceDescription();
                    }), fesm2022_core["\u0275\u0275elementStart"](1, "div", 1), fesm2022_core["\u0275\u0275template"](2, QnaFeedbackComponent_div_2_Template, 4, 13, "div", 2), 
                    fesm2022_core["\u0275\u0275template"](3, QnaFeedbackComponent_div_3_Template, 4, 8, "div", 2), 
                    fesm2022_core["\u0275\u0275template"](4, QnaFeedbackComponent_div_4_Template, 4, 8, "div", 2), 
                    fesm2022_core["\u0275\u0275template"](5, QnaFeedbackComponent_div_5_Template, 3, 8, "div", 2), 
                    fesm2022_core["\u0275\u0275template"](6, QnaFeedbackComponent_div_6_Template, 3, 8, "div", 2), 
                    fesm2022_core["\u0275\u0275elementEnd"]()()), 2 & rf && (fesm2022_core["\u0275\u0275advance"](1), 
                    fesm2022_core["\u0275\u0275property"]("ngSwitch", ctx.getState()), fesm2022_core["\u0275\u0275advance"](1), 
                    fesm2022_core["\u0275\u0275property"]("ngSwitchCase", "Unchosen"), fesm2022_core["\u0275\u0275advance"](1), 
                    fesm2022_core["\u0275\u0275property"]("ngSwitchCase", "PositiveChecked"), fesm2022_core["\u0275\u0275advance"](1), 
                    fesm2022_core["\u0275\u0275property"]("ngSwitchCase", "NegativeChecked"), fesm2022_core["\u0275\u0275advance"](1), 
                    fesm2022_core["\u0275\u0275property"]("ngSwitchCase", "PositiveDetailSubmitted"), 
                    fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngSwitchCase", "NegativeDetailSubmitted"));
                },
                dependencies: [ common.NgStyle, common.NgSwitch, common.NgSwitchCase, localize_directive.X, localize_attr_directive.b, accessible_click_directive.t ],
                styles: [ '.qnnFeedback[_ngcontent-%COMP%]{height:100%}.qnnFeedback[_ngcontent-%COMP%]   .textAndIcons[_ngcontent-%COMP%]{display:flex;flex-direction:row}html:not([dir="rtl"])[_nghost-%COMP%]   .qnnFeedback[_ngcontent-%COMP%]   .textAndIcons[_ngcontent-%COMP%]   .descriptionText[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .qnnFeedback[_ngcontent-%COMP%]   .textAndIcons[_ngcontent-%COMP%]   .descriptionText[_ngcontent-%COMP%]{margin-right:10px}html[dir="rtl"][_nghost-%COMP%]   .qnnFeedback[_ngcontent-%COMP%]   .textAndIcons[_ngcontent-%COMP%]   .descriptionText[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .qnnFeedback[_ngcontent-%COMP%]   .textAndIcons[_ngcontent-%COMP%]   .descriptionText[_ngcontent-%COMP%]{margin-left:10px}.qnnFeedback[_ngcontent-%COMP%]   .textAndIcons[_ngcontent-%COMP%]   .feedbackIcon[_ngcontent-%COMP%]{background-color:transparent}html:not([dir="rtl"])[_nghost-%COMP%]   .qnnFeedback[_ngcontent-%COMP%]   .textAndIcons[_ngcontent-%COMP%]   .feedbackIcon[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .qnnFeedback[_ngcontent-%COMP%]   .textAndIcons[_ngcontent-%COMP%]   .feedbackIcon[_ngcontent-%COMP%]{margin-left:2px;margin-right:2px}html[dir="rtl"][_nghost-%COMP%]   .qnnFeedback[_ngcontent-%COMP%]   .textAndIcons[_ngcontent-%COMP%]   .feedbackIcon[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .qnnFeedback[_ngcontent-%COMP%]   .textAndIcons[_ngcontent-%COMP%]   .feedbackIcon[_ngcontent-%COMP%]{margin-left:2px;margin-right:2px}.qnnFeedback[_ngcontent-%COMP%]   .textAndIcons[_ngcontent-%COMP%]   .feedbackIcon.pbi-glyph-likesolid[_ngcontent-%COMP%], .qnnFeedback[_ngcontent-%COMP%]   .textAndIcons[_ngcontent-%COMP%]   .feedbackIcon.pbi-glyph-dislikesolid[_ngcontent-%COMP%]{cursor:default}' ]
            }), QnaFeedbackComponent;
        }(), formatUtil = __webpack_require__(59694), rx_component = __webpack_require__(73221), tri_message_bar_component = __webpack_require__(45769);
        function QnaBannerComponent_ng_container_0_ng_container_1_tri_message_bar_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r6 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "tri-message-bar", 2), fesm2022_core["\u0275\u0275listener"]("hideMessageBar", function() {
                    var messageBarModel_r4 = fesm2022_core["\u0275\u0275restoreView"](_r6).$implicit, ctx_r5 = fesm2022_core["\u0275\u0275nextContext"](3);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r5.onDismissBanner(messageBarModel_r4.id));
                }), fesm2022_core["\u0275\u0275elementEnd"]();
            }
            2 & rf && fesm2022_core["\u0275\u0275property"]("viewModel", ctx.$implicit);
        }
        function QnaBannerComponent_ng_container_0_ng_container_1_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275template"](1, QnaBannerComponent_ng_container_0_ng_container_1_tri_message_bar_1_Template, 1, 1, "tri-message-bar", 1), 
            fesm2022_core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var messageBarModels_r1 = fesm2022_core["\u0275\u0275nextContext"]().ngIf;
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngForOf", messageBarModels_r1);
            }
        }
        function QnaBannerComponent_ng_container_0_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275template"](1, QnaBannerComponent_ng_container_0_ng_container_1_Template, 2, 1, "ng-container", 0), 
            fesm2022_core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var messageBarModels_r1 = ctx.ngIf;
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", messageBarModels_r1.length > 0);
            }
        }
        var QnaBannerComponent = function(_super) {
            function QnaBannerComponent() {
                var _this = _super.call(this) || this;
                return _this.onDismiss = new fesm2022_core.EventEmitter, _this;
            }
            return (0, tslib_es6.__extends)(QnaBannerComponent, _super), QnaBannerComponent.prototype.ngOnInit = function() {
                var _this = this;
                this.messageBarModels$ = this.changes$("bannerContent").pipe((0, map.U)(function(_a) {
                    return _.chain(_a.banners).filter(function(banner) {
                        return banner.isVisible;
                    }).map(function(banner) {
                        var _a, _b;
                        return {
                            id: banner.id,
                            bannerType: _this.mapToMessageBarType(banner.bannerType),
                            message: _this.mapToMessageBarText(banner.message),
                            barButtons: _.chain(banner.actions).map(function(action) {
                                return _this.mapToMessageBarAction(action, banner.data);
                            }).filter(function(button) {
                                return !!button;
                            }).value(),
                            allowDismiss: banner.allowDismiss,
                            isRoundedCorners: !0,
                            isMultiline: !0,
                            link: null === (_a = banner.link) || void 0 === _a ? void 0 : _a.href,
                            linkDisplayName: null === (_b = banner.link) || void 0 === _b ? void 0 : _b.text
                        };
                    }).value();
                }));
            }, QnaBannerComponent.prototype.onDismissBanner = function(bannerId) {
                debug.fF.assertValue(bannerId, "bannerId"), this.onDismiss.emit(bannerId);
            }, QnaBannerComponent.prototype.mapToMessageBarType = function(bannerType) {
                switch (bannerType) {
                  case "copilot":
                    return 6;

                  case "error":
                    return 1;

                  case "info":
                    return 0;

                  case "warning":
                    return 2;

                  default:
                    debug.fF.assertFail("unknown bannerType ".concat(bannerType));
                }
            }, QnaBannerComponent.prototype.mapToMessageBarText = function(message) {
                return debug.fF.assert(function() {
                    return !(0, formatUtil.g)(message.text);
                }, "banner message should be defined and non empty"), message.emphasis ? "<b>".concat(message.emphasis, "</b> ").concat(message.text) : message.text;
            }, QnaBannerComponent.prototype.mapToMessageBarAction = function(action, data) {
                var _this = this, isEmptyOrNullText = (0, formatUtil.g)(action.text);
                if (debug.fF.assert(function() {
                    return !isEmptyOrNullText;
                }, "banner action text should be defined and non empty"), !isEmptyOrNullText) return {
                    buttonText: action.text,
                    buttonAction: function() {
                        return function(actionId) {
                            if ("noop" !== actionId) {
                                var handler = _this.bannerContent.actionHandlers.get(actionId);
                                debug.fF.assertValue(handler, "handler with actionId ".concat(actionId)), null != data ? handler(data) : handler();
                            }
                        }(action.id);
                    },
                    buttonAppearance: "primary" === action.actionAppearance ? "primary" : void 0,
                    isLoading: "loading" === action.actionAppearance,
                    isDisabled: "loading" === action.actionAppearance
                };
            }, QnaBannerComponent.\u0275fac = function(t) {
                return new (t || QnaBannerComponent);
            }, QnaBannerComponent.\u0275cmp = fesm2022_core["\u0275\u0275defineComponent"]({
                type: QnaBannerComponent,
                selectors: [ [ "qna-banner" ] ],
                inputs: {
                    bannerContent: "bannerContent"
                },
                outputs: {
                    onDismiss: "onDismiss"
                },
                features: [ fesm2022_core["\u0275\u0275InheritDefinitionFeature"] ],
                decls: 2,
                vars: 3,
                consts: [ [ 4, "ngIf" ], [ "style", "margin-bottom: 4px;", 3, "viewModel", "hideMessageBar", 4, "ngFor", "ngForOf" ], [ 2, "margin-bottom", "4px", 3, "viewModel", "hideMessageBar" ] ],
                template: function(rf, ctx) {
                    1 & rf && (fesm2022_core["\u0275\u0275template"](0, QnaBannerComponent_ng_container_0_Template, 2, 1, "ng-container", 0), 
                    fesm2022_core["\u0275\u0275pipe"](1, "async")), 2 & rf && fesm2022_core["\u0275\u0275property"]("ngIf", fesm2022_core["\u0275\u0275pipeBind1"](1, 1, ctx.messageBarModels$));
                },
                dependencies: [ common.NgForOf, common.NgIf, tri_message_bar_component.h, common.AsyncPipe ],
                styles: [ "[_nghost-%COMP%]     tri-message-bar .message-banner{border-top-color:transparent;border-right-color:transparent;border-left-color:transparent}" ]
            }), QnaBannerComponent;
        }(rx_component.w), localize_pipe = __webpack_require__(85102), qna_component_c0 = [ "bannerMainMessageTextContainer" ], qna_component_c1 = [ "contentContainer" ];
        function QnaComponent_div_1_Template(rf, ctx) {
            1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 8)(1, "div", 9), 
            fesm2022_core["\u0275\u0275element"](2, "spinner", 10)(3, "span", 11), fesm2022_core["\u0275\u0275elementEnd"]()()), 
            2 & rf && (fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("delay", 0));
        }
        function QnaComponent_div_2_Template(rf, ctx) {
            if (1 & rf) {
                var _r8 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "div")(1, "canvas-visual-error-overlay", 12), 
                fesm2022_core["\u0275\u0275listener"]("showErrorDetails", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r8);
                    var ctx_r7 = fesm2022_core["\u0275\u0275nextContext"]();
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r7.showQnaVisualErrorDetails());
                }), fesm2022_core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var ctx_r1 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("errorInfo", ctx_r1.viewModel.error)("viewport", ctx_r1.viewModel.viewport);
            }
        }
        function QnaComponent_ng_container_3_ng_container_1_ng_container_1_ng_container_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r18 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275elementStart"](1, "qna-banner", 20), 
                fesm2022_core["\u0275\u0275listener"]("onDismiss", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r18);
                    var ctx_r17 = fesm2022_core["\u0275\u0275nextContext"](4);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r17.onBannerDismiss($event));
                }), fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275elementContainerEnd"]();
            }
            if (2 & rf) {
                var bannerContent_r15 = fesm2022_core["\u0275\u0275nextContext"]().ngIf;
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("bannerContent", bannerContent_r15);
            }
        }
        function QnaComponent_ng_container_3_ng_container_1_ng_container_1_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275template"](1, QnaComponent_ng_container_3_ng_container_1_ng_container_1_ng_container_1_Template, 2, 1, "ng-container", 19), 
            fesm2022_core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var bannerContent_r15 = ctx.ngIf;
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", bannerContent_r15.showBanners);
            }
        }
        function QnaComponent_ng_container_3_ng_container_1_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275template"](1, QnaComponent_ng_container_3_ng_container_1_ng_container_1_Template, 2, 1, "ng-container", 19), 
            fesm2022_core["\u0275\u0275pipe"](2, "async"), fesm2022_core["\u0275\u0275elementContainerEnd"]()), 
            2 & rf) {
                var ctx_r9 = fesm2022_core["\u0275\u0275nextContext"](2);
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", fesm2022_core["\u0275\u0275pipeBind1"](2, 1, ctx_r9.bannerContent$));
            }
        }
        var qna_component_c2 = function() {
            return {
                "aria-label": "VisualContainer_QnaVisual_Promotion_HideAction"
            };
        };
        function QnaComponent_ng_container_3_ng_template_3_div_0_Template(rf, ctx) {
            if (1 & rf) {
                var _r23 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "div", 22), fesm2022_core["\u0275\u0275element"](1, "i", 23)(2, "span", 24, 25), 
                fesm2022_core["\u0275\u0275elementStart"](4, "button", 26), fesm2022_core["\u0275\u0275listener"]("accessible-click", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r23);
                    var ctx_r22 = fesm2022_core["\u0275\u0275nextContext"](3);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r22.performBannerMainAction());
                }), fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275elementStart"](5, "button", 27), 
                fesm2022_core["\u0275\u0275listener"]("accessible-click", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r23);
                    var ctx_r24 = fesm2022_core["\u0275\u0275nextContext"](3);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r24.dismissBanner());
                }), fesm2022_core["\u0275\u0275pipe"](6, "localize"), fesm2022_core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var ctx_r20 = fesm2022_core["\u0275\u0275nextContext"](3);
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("pbiTooltip", ctx_r20.bannerMainMessageTooltip)("localize", "VisualContainer_QnaVisual_Promotion_MainMessage"), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("localize", "VisualContainer_QnaVisual_Promotion_ActionText"), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("pbiTooltip", fesm2022_core["\u0275\u0275pipeBind1"](6, 5, "VisualContainer_QnaVisual_Promotion_HideAction"))("localizeAttr", fesm2022_core["\u0275\u0275pureFunction0"](7, qna_component_c2));
            }
        }
        function QnaComponent_ng_container_3_ng_template_3_Template(rf, ctx) {
            if (1 & rf && fesm2022_core["\u0275\u0275template"](0, QnaComponent_ng_container_3_ng_template_3_div_0_Template, 7, 8, "div", 21), 
            2 & rf) {
                var ctx_r11 = fesm2022_core["\u0275\u0275nextContext"](2);
                fesm2022_core["\u0275\u0275property"]("ngIf", ctx_r11.showLegacyBanner);
            }
        }
        var qna_component_c3 = function(a0) {
            return {
                disabled: a0
            };
        }, qna_component_c4 = function() {
            return {
                "aria-label": "Qna_ConvertDescription"
            };
        }, qna_component_c5 = function(a0, a1) {
            return {
                color: a0,
                "font-size": a1
            };
        };
        function QnaComponent_ng_container_3_i_7_Template(rf, ctx) {
            if (1 & rf) {
                var _r26 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "i", 28), fesm2022_core["\u0275\u0275listener"]("accessible-click", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r26);
                    var ctx_r25 = fesm2022_core["\u0275\u0275nextContext"](2);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r25.convertVisualClicked());
                }), fesm2022_core["\u0275\u0275pipe"](1, "localize"), fesm2022_core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r12 = fesm2022_core["\u0275\u0275nextContext"](2);
                fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction1"](6, qna_component_c3, !ctx_r12.viewModel.result || "Visual" !== ctx_r12.viewModel.result.type && "QueryError" !== ctx_r12.viewModel.result.type))("pbiTooltip", fesm2022_core["\u0275\u0275pipeBind1"](1, 4, "Qna_ConvertDescription"))("localizeAttr", fesm2022_core["\u0275\u0275pureFunction0"](8, qna_component_c4))("ngStyle", fesm2022_core["\u0275\u0275pureFunction2"](9, qna_component_c5, null == ctx_r12.inputPresentation || null == ctx_r12.inputPresentation.restatementFontProperties ? null : ctx_r12.inputPresentation.restatementFontProperties.color, (null == ctx_r12.inputPresentation || null == ctx_r12.inputPresentation.questionFontProperties ? null : ctx_r12.inputPresentation.questionFontProperties.size.px) + "px"));
            }
        }
        var qna_component_c6 = function() {
            return {
                "aria-label": "Qna_ToolingDescription"
            };
        };
        function QnaComponent_ng_container_3_i_8_Template(rf, ctx) {
            if (1 & rf) {
                var _r28 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "i", 29), fesm2022_core["\u0275\u0275listener"]("accessible-click", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r28);
                    var ctx_r27 = fesm2022_core["\u0275\u0275nextContext"](2);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r27.showTooling("VisualTooling"));
                }), fesm2022_core["\u0275\u0275pipe"](1, "localize"), fesm2022_core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r13 = fesm2022_core["\u0275\u0275nextContext"](2);
                fesm2022_core["\u0275\u0275property"]("pbiTooltip", fesm2022_core["\u0275\u0275pipeBind1"](1, 3, "Qna_ToolingDescription"))("localizeAttr", fesm2022_core["\u0275\u0275pureFunction0"](5, qna_component_c6))("ngStyle", fesm2022_core["\u0275\u0275pureFunction2"](6, qna_component_c5, null == ctx_r13.inputPresentation || null == ctx_r13.inputPresentation.restatementFontProperties ? null : ctx_r13.inputPresentation.restatementFontProperties.color, (null == ctx_r13.inputPresentation || null == ctx_r13.inputPresentation.questionFontProperties ? null : ctx_r13.inputPresentation.questionFontProperties.size.px) + "px"));
            }
        }
        var qna_component_c7 = function(a0) {
            return {
                hasBanner: a0
            };
        };
        function QnaComponent_ng_container_3_Template(rf, ctx) {
            if (1 & rf) {
                var _r30 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275template"](1, QnaComponent_ng_container_3_ng_container_1_Template, 3, 3, "ng-container", 13), 
                fesm2022_core["\u0275\u0275pipe"](2, "async"), fesm2022_core["\u0275\u0275template"](3, QnaComponent_ng_container_3_ng_template_3_Template, 1, 1, "ng-template", null, 14, fesm2022_core["\u0275\u0275templateRefExtractor"]), 
                fesm2022_core["\u0275\u0275elementStart"](5, "div", 15)(6, "qna-input-v2", 16), 
                fesm2022_core["\u0275\u0275listener"]("inputBoxFocused", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r30);
                    var ctx_r29 = fesm2022_core["\u0275\u0275nextContext"]();
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r29.onInputBoxFocused($event));
                }), fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275template"](7, QnaComponent_ng_container_3_i_7_Template, 2, 12, "i", 17), 
                fesm2022_core["\u0275\u0275template"](8, QnaComponent_ng_container_3_i_8_Template, 2, 9, "i", 18), 
                fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275elementContainerEnd"]();
            }
            if (2 & rf) {
                var _r10 = fesm2022_core["\u0275\u0275reference"](4), ctx_r2 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", fesm2022_core["\u0275\u0275pipeBind1"](2, 12, ctx_r2.allowTooling && ctx_r2.isCopilotSynonymsEnabled$))("ngIfElse", _r10), 
                fesm2022_core["\u0275\u0275advance"](4), fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction1"](14, qna_component_c7, ctx_r2.showLegacyBanner)), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("entryPoint", ctx_r2.viewModel.qnaInputConfiguration.entryPoint)("qnaSupportedScopes", ctx_r2.viewModel.qnaInputConfiguration.qnaSupportedScopes)("interpretListener", ctx_r2.viewModel.qnaInputConfiguration.interpretListener)("presentationArgs", ctx_r2.inputPresentation)("configs", ctx_r2.viewModel.qnaInputConfiguration.configs)("initialUtterance", ctx_r2.viewModel.qnaInputConfiguration.initialUtterance)("initialUtteranceFromSaved", ctx_r2.viewModel.qnaInputConfiguration.initialUtteranceFromSaved), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", ctx_r2.config.canEdit), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", ctx_r2.allowTooling);
            }
        }
        var qna_component_c8 = function(a0) {
            return {
                color: a0
            };
        };
        function QnaComponent_i_4_Template(rf, ctx) {
            if (1 & rf && fesm2022_core["\u0275\u0275element"](0, "i", 30), 2 & rf) {
                var ctx_r3 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275property"]("ngStyle", fesm2022_core["\u0275\u0275pureFunction1"](3, qna_component_c8, null == ctx_r3.inputPresentation || null == ctx_r3.inputPresentation.restatementFontProperties ? null : ctx_r3.inputPresentation.restatementFontProperties.color))("pbiTooltip", ctx_r3.displayedRestatement), 
                fesm2022_core["\u0275\u0275attribute"]("aria-label", ctx_r3.displayedRestatement.tooltipDescription);
            }
        }
        var qna_component_c9 = function(a0, a1, a2, a3, a4, a5, a6) {
            return {
                "background-color": a0,
                color: a1,
                "font-size": a2,
                "font-family": a3,
                "font-weight": a4,
                "font-style": a5,
                "text-decoration": a6
            };
        };
        function QnaComponent_ng_container_7_div_1_div_1_div_3_Template(rf, ctx) {
            if (1 & rf) {
                var _r43 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "div", 45), fesm2022_core["\u0275\u0275listener"]("accessible-click", function() {
                    var suggestion_r41 = fesm2022_core["\u0275\u0275restoreView"](_r43).$implicit, ctx_r42 = fesm2022_core["\u0275\u0275nextContext"](4);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r42.interpretSuggestedQuestion(suggestion_r41.content));
                }), fesm2022_core["\u0275\u0275text"](1), fesm2022_core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var suggestion_r41 = ctx.$implicit, ctx_r40 = fesm2022_core["\u0275\u0275nextContext"](4);
                fesm2022_core["\u0275\u0275property"]("ngStyle", fesm2022_core["\u0275\u0275pureFunction7"](3, qna_component_c9, null == ctx_r40.suggestionsPresentation ? null : ctx_r40.suggestionsPresentation.backgroundColor, null == ctx_r40.suggestionsPresentation || null == ctx_r40.suggestionsPresentation.cardFontProperties ? null : ctx_r40.suggestionsPresentation.cardFontProperties.color, (null == ctx_r40.suggestionsPresentation || null == ctx_r40.suggestionsPresentation.cardFontProperties || null == ctx_r40.suggestionsPresentation.cardFontProperties.size ? null : ctx_r40.suggestionsPresentation.cardFontProperties.size.px) + "px", null == ctx_r40.suggestionsPresentation || null == ctx_r40.suggestionsPresentation.cardFontProperties ? null : ctx_r40.suggestionsPresentation.cardFontProperties.family, null == ctx_r40.suggestionsPresentation || null == ctx_r40.suggestionsPresentation.cardFontProperties ? null : ctx_r40.suggestionsPresentation.cardFontProperties.weight, null == ctx_r40.suggestionsPresentation || null == ctx_r40.suggestionsPresentation.cardFontProperties ? null : ctx_r40.suggestionsPresentation.cardFontProperties.style, null == ctx_r40.suggestionsPresentation || null == ctx_r40.suggestionsPresentation.cardFontProperties ? null : ctx_r40.suggestionsPresentation.cardFontProperties.textDecoration)), 
                fesm2022_core["\u0275\u0275attribute"]("aria-label", suggestion_r41.accessibilityLabel), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275textInterpolate1"](" ", suggestion_r41.content, " ");
            }
        }
        var qna_component_c10 = function(a0, a1, a2, a3, a4, a5) {
            return {
                color: a0,
                "font-size": a1,
                "font-family": a2,
                "font-weight": a3,
                "font-style": a4,
                "text-decoration": a5
            };
        }, qna_component_c11 = function(a0) {
            return {
                "aria-label": a0
            };
        };
        function QnaComponent_ng_container_7_div_1_div_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r45 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "div", 40), fesm2022_core["\u0275\u0275element"](1, "div", 41), 
                fesm2022_core["\u0275\u0275elementStart"](2, "div", 42), fesm2022_core["\u0275\u0275template"](3, QnaComponent_ng_container_7_div_1_div_1_div_3_Template, 2, 11, "div", 43), 
                fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275elementStart"](4, "div", 44), 
                fesm2022_core["\u0275\u0275listener"]("accessible-click", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r45);
                    var ctx_r44 = fesm2022_core["\u0275\u0275nextContext"](3);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r44.toggleShowAllSuggestions());
                }), fesm2022_core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var ctx_r38 = fesm2022_core["\u0275\u0275nextContext"](3);
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngStyle", fesm2022_core["\u0275\u0275pureFunction6"](4, qna_component_c10, null == ctx_r38.suggestionsPresentation || null == ctx_r38.suggestionsPresentation.headerFontProperties ? null : ctx_r38.suggestionsPresentation.headerFontProperties.color, (null == ctx_r38.suggestionsPresentation || null == ctx_r38.suggestionsPresentation.headerFontProperties || null == ctx_r38.suggestionsPresentation.headerFontProperties.size ? null : ctx_r38.suggestionsPresentation.headerFontProperties.size.px) + "px", null == ctx_r38.suggestionsPresentation || null == ctx_r38.suggestionsPresentation.headerFontProperties ? null : ctx_r38.suggestionsPresentation.headerFontProperties.family, null == ctx_r38.suggestionsPresentation || null == ctx_r38.suggestionsPresentation.headerFontProperties ? null : ctx_r38.suggestionsPresentation.headerFontProperties.weight, null == ctx_r38.suggestionsPresentation || null == ctx_r38.suggestionsPresentation.headerFontProperties ? null : ctx_r38.suggestionsPresentation.headerFontProperties.style, null == ctx_r38.suggestionsPresentation || null == ctx_r38.suggestionsPresentation.headerFontProperties ? null : ctx_r38.suggestionsPresentation.headerFontProperties.textDecoration)), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("ngForOf", ctx_r38.viewModel.result.suggestions), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275propertyInterpolate"]("localize", ctx_r38.viewModel.result.showAllSuggestions ? "Visual_Qna_SuggestionsLess" : "Visual_Qna_SuggestionsAll"), 
                fesm2022_core["\u0275\u0275property"]("localizeAttr", fesm2022_core["\u0275\u0275pureFunction1"](11, qna_component_c11, ctx_r38.viewModel.result.showAllSuggestions ? "Visual_Qna_SuggestionsLess" : "Visual_Qna_SuggestionsAll"));
            }
        }
        var qna_component_c12 = function(a0, a1, a2, a3, a4) {
            return {
                color: a0,
                "font-family": a1,
                "font-weight": a2,
                "font-style": a3,
                "text-decoration": a4
            };
        };
        function QnaComponent_ng_container_7_div_1_span_2_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "span", 46), fesm2022_core["\u0275\u0275text"](1), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r39 = fesm2022_core["\u0275\u0275nextContext"](3);
                fesm2022_core["\u0275\u0275property"]("ngStyle", fesm2022_core["\u0275\u0275pureFunction5"](2, qna_component_c12, null == ctx_r39.inputPresentation || null == ctx_r39.inputPresentation.restatementFontProperties ? null : ctx_r39.inputPresentation.restatementFontProperties.color, null == ctx_r39.inputPresentation || null == ctx_r39.inputPresentation.restatementFontProperties ? null : ctx_r39.inputPresentation.restatementFontProperties.family, null == ctx_r39.suggestionsPresentation || null == ctx_r39.suggestionsPresentation.restatementFontProperties ? null : ctx_r39.suggestionsPresentation.restatementFontProperties.weight, null == ctx_r39.suggestionsPresentation || null == ctx_r39.suggestionsPresentation.restatementFontProperties ? null : ctx_r39.suggestionsPresentation.restatementFontProperties.style, null == ctx_r39.suggestionsPresentation || null == ctx_r39.suggestionsPresentation.restatementFontProperties ? null : ctx_r39.suggestionsPresentation.restatementFontProperties.textDecoration)), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275textInterpolate1"](" ", ctx_r39.viewModel.result.failedToLoadSuggestionsMessage, " ");
            }
        }
        function QnaComponent_ng_container_7_div_1_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 37), fesm2022_core["\u0275\u0275template"](1, QnaComponent_ng_container_7_div_1_div_1_Template, 5, 13, "div", 38), 
            fesm2022_core["\u0275\u0275template"](2, QnaComponent_ng_container_7_div_1_span_2_Template, 2, 8, "span", 39), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r31 = fesm2022_core["\u0275\u0275nextContext"](2);
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", ctx_r31.viewModel.result.suggestions.length > 0 && ctx_r31.suggestionsPresentation.show), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", ctx_r31.viewModel.result.failedToLoadSuggestionsMessage && ctx_r31.suggestionsPresentation.show);
            }
        }
        function QnaComponent_ng_container_7_div_2_div_1_spinner_1_Template(rf, ctx) {
            1 & rf && fesm2022_core["\u0275\u0275element"](0, "spinner", 52), 2 & rf && fesm2022_core["\u0275\u0275property"]("delay", 0);
        }
        function QnaComponent_ng_container_7_div_2_div_1_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 49), fesm2022_core["\u0275\u0275template"](1, QnaComponent_ng_container_7_div_2_div_1_spinner_1_Template, 1, 1, "spinner", 50), 
            fesm2022_core["\u0275\u0275element"](2, "single-visual-host", 51), fesm2022_core["\u0275\u0275elementEnd"]()), 
            2 & rf) {
                var ctx_r46 = fesm2022_core["\u0275\u0275nextContext"](3);
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", ctx_r46.viewModel.result.isLoading), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("visual", ctx_r46.viewModel.result.visual)("visualViewport", ctx_r46.viewModel.viewport)("themeCollection", ctx_r46.viewModel.themeCollection)("config", ctx_r46.core.singleVisualHostConfig);
            }
        }
        function QnaComponent_ng_container_7_div_2_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 47), fesm2022_core["\u0275\u0275template"](1, QnaComponent_ng_container_7_div_2_div_1_Template, 3, 5, "div", 48), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r32 = fesm2022_core["\u0275\u0275nextContext"](2);
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", ctx_r32.viewModel.result.visual && ctx_r32.core.singleVisualHostConfig);
            }
        }
        function QnaComponent_ng_container_7_div_3_a_5_Template(rf, ctx) {
            if (1 & rf) {
                var _r50 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "a", 57), fesm2022_core["\u0275\u0275listener"]("accessible-click", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r50);
                    var ctx_r49 = fesm2022_core["\u0275\u0275nextContext"](3);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r49.launchFeedbackDialog(-1, !1));
                }), fesm2022_core["\u0275\u0275element"](1, "span", 58), fesm2022_core["\u0275\u0275elementEnd"]();
            }
        }
        function QnaComponent_ng_container_7_div_3_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 53)(1, "div", 54)(2, "div")(3, "span", 55), 
            fesm2022_core["\u0275\u0275text"](4), fesm2022_core["\u0275\u0275elementEnd"](), 
            fesm2022_core["\u0275\u0275template"](5, QnaComponent_ng_container_7_div_3_a_5_Template, 2, 0, "a", 56), 
            fesm2022_core["\u0275\u0275elementEnd"]()()()), 2 & rf) {
                var ctx_r33 = fesm2022_core["\u0275\u0275nextContext"](2);
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngStyle", fesm2022_core["\u0275\u0275pureFunction5"](3, qna_component_c12, null == ctx_r33.inputPresentation || null == ctx_r33.inputPresentation.restatementFontProperties ? null : ctx_r33.inputPresentation.restatementFontProperties.color, null == ctx_r33.inputPresentation || null == ctx_r33.inputPresentation.restatementFontProperties ? null : ctx_r33.inputPresentation.restatementFontProperties.family, null == ctx_r33.suggestionsPresentation || null == ctx_r33.suggestionsPresentation.restatementFontProperties ? null : ctx_r33.suggestionsPresentation.restatementFontProperties.weight, null == ctx_r33.suggestionsPresentation || null == ctx_r33.suggestionsPresentation.restatementFontProperties ? null : ctx_r33.suggestionsPresentation.restatementFontProperties.style, null == ctx_r33.suggestionsPresentation || null == ctx_r33.suggestionsPresentation.restatementFontProperties ? null : ctx_r33.suggestionsPresentation.restatementFontProperties.textDecoration)), 
                fesm2022_core["\u0275\u0275advance"](3), fesm2022_core["\u0275\u0275textInterpolate"](ctx_r33.viewModel.result.message), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", ctx_r33.allowFeedback && ctx_r33.core.shouldShowdoNotUnderstandMessageFeedbackLink());
            }
        }
        function QnaComponent_ng_container_7_div_4_ng_container_1_Template(rf, ctx) {
            1 & rf && fesm2022_core["\u0275\u0275elementContainer"](0);
        }
        function QnaComponent_ng_container_7_div_4_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 59), fesm2022_core["\u0275\u0275template"](1, QnaComponent_ng_container_7_div_4_ng_container_1_Template, 1, 0, "ng-container", 60), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                fesm2022_core["\u0275\u0275nextContext"]();
                var _r36 = fesm2022_core["\u0275\u0275reference"](7);
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngTemplateOutlet", _r36);
            }
        }
        function QnaComponent_ng_container_7_div_5_ng_container_1_Template(rf, ctx) {
            1 & rf && fesm2022_core["\u0275\u0275elementContainer"](0);
        }
        function QnaComponent_ng_container_7_div_5_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 59), fesm2022_core["\u0275\u0275template"](1, QnaComponent_ng_container_7_div_5_ng_container_1_Template, 1, 0, "ng-container", 60), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                fesm2022_core["\u0275\u0275nextContext"]();
                var _r36 = fesm2022_core["\u0275\u0275reference"](7);
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngTemplateOutlet", _r36);
            }
        }
        function QnaComponent_ng_container_7_ng_template_6_a_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r55 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "a", 57), fesm2022_core["\u0275\u0275listener"]("accessible-click", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r55);
                    var ctx_r54 = fesm2022_core["\u0275\u0275nextContext"](3);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r54.launchFeedbackDialog(-1, !1));
                }), fesm2022_core["\u0275\u0275element"](1, "span", 58), fesm2022_core["\u0275\u0275elementEnd"]();
            }
        }
        function QnaComponent_ng_container_7_ng_template_6_Template(rf, ctx) {
            if (1 & rf) {
                var _r57 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "canvas-visual-error-overlay", 12), 
                fesm2022_core["\u0275\u0275listener"]("showErrorDetails", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r57);
                    var ctx_r56 = fesm2022_core["\u0275\u0275nextContext"](2);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r56.showResultErrorDetails());
                }), fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275template"](1, QnaComponent_ng_container_7_ng_template_6_a_1_Template, 2, 0, "a", 56);
            }
            if (2 & rf) {
                var ctx_r37 = fesm2022_core["\u0275\u0275nextContext"](2);
                fesm2022_core["\u0275\u0275property"]("errorInfo", ctx_r37.viewModel.result)("viewport", ctx_r37.viewModel.viewport), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", ctx_r37.allowFeedback && ctx_r37.core.shouldShowdoNotUnderstandMessageFeedbackLink());
            }
        }
        function QnaComponent_ng_container_7_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0, 31), fesm2022_core["\u0275\u0275template"](1, QnaComponent_ng_container_7_div_1_Template, 3, 2, "div", 32), 
            fesm2022_core["\u0275\u0275template"](2, QnaComponent_ng_container_7_div_2_Template, 2, 1, "div", 33), 
            fesm2022_core["\u0275\u0275template"](3, QnaComponent_ng_container_7_div_3_Template, 6, 9, "div", 34), 
            fesm2022_core["\u0275\u0275template"](4, QnaComponent_ng_container_7_div_4_Template, 2, 1, "div", 35), 
            fesm2022_core["\u0275\u0275template"](5, QnaComponent_ng_container_7_div_5_Template, 2, 1, "div", 35), 
            fesm2022_core["\u0275\u0275template"](6, QnaComponent_ng_container_7_ng_template_6_Template, 2, 3, "ng-template", null, 36, fesm2022_core["\u0275\u0275templateRefExtractor"]), 
            fesm2022_core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var ctx_r5 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275property"]("ngSwitch", ctx_r5.viewModel.result.type), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngSwitchCase", "Suggestions"), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngSwitchCase", "Visual"), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngSwitchCase", "DoNotUnderstand"), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngSwitchCase", "Error"), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngSwitchCase", "QueryError");
            }
        }
        function QnaComponent_div_8_div_1_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 64), fesm2022_core["\u0275\u0275element"](1, "qna-feedback", 65), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r58 = fesm2022_core["\u0275\u0275nextContext"](2);
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("fontColor", null == ctx_r58.inputPresentation || null == ctx_r58.inputPresentation.restatementFontProperties ? null : ctx_r58.inputPresentation.restatementFontProperties.color);
            }
        }
        function QnaComponent_div_8_div_2_Template(rf, ctx) {
            1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 66), fesm2022_core["\u0275\u0275element"](1, "span", 67)(2, "a", 68), 
            fesm2022_core["\u0275\u0275elementEnd"]());
        }
        function QnaComponent_div_8_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 61), fesm2022_core["\u0275\u0275template"](1, QnaComponent_div_8_div_1_Template, 2, 1, "div", 62), 
            fesm2022_core["\u0275\u0275template"](2, QnaComponent_div_8_div_2_Template, 3, 0, "div", 63), 
            fesm2022_core["\u0275\u0275pipe"](3, "async"), fesm2022_core["\u0275\u0275elementEnd"]()), 
            2 & rf) {
                var ctx_r6 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", ctx_r6.allowFeedback && ctx_r6.core.showFeedbackForCurrentQuestion()), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", fesm2022_core["\u0275\u0275pipeBind1"](3, 2, ctx_r6.isCopilotSynonymsEnabled$) && "Visual" === (null == ctx_r6.viewModel.result ? null : ctx_r6.viewModel.result.type));
            }
        }
        var qna_component_c13 = function(a0, a1) {
            return {
                contentReady: a0,
                suggestionContent: a1
            };
        }, QnaComponent = function() {
            function QnaComponent(dataSources, explorationNavigation, featureSwitchService, lazyScoped, viewModeState, telemetryService, core, highContrastCssGenerationService, settingsService, qnaToolingDialogLauncher) {
                this.dataSources = dataSources, this.explorationNavigation = explorationNavigation, 
                this.featureSwitchService = featureSwitchService, this.lazyScoped = lazyScoped, 
                this.viewModeState = viewModeState, this.telemetryService = telemetryService, this.core = core, 
                this.highContrastCssGenerationService = highContrastCssGenerationService, this.settingsService = settingsService, 
                this.qnaToolingDialogLauncher = qnaToolingDialogLauncher, this.inputBoxFocused = new fesm2022_core.EventEmitter, 
                this.utteranceUpdated = new fesm2022_core.EventEmitter, this.convertVisual = new fesm2022_core.EventEmitter, 
                this.destroy$ = new Subject.xQ, this.viewModel = this.core.viewModel, debug.fF.assert(function() {
                    return !(0, BrowserUtility.rO)();
                }, "Expect qna.component never get created if it is in IE browser."), this.highContrastCssGenerationService.addRule('html[data-focus-source="key"] .themeableElement .qnaVisual *:focus', "{ outline: 2px solid @selectedBackgroundColor; }");
            }
            return Object.defineProperty(QnaComponent.prototype, "inputComponent", {
                set: function(component) {
                    var _this = this;
                    this.qnaInputComponent = component, this.core.setGetQnaInputComponentFunc(function() {
                        return _this.qnaInputComponent;
                    });
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(QnaComponent.prototype, "_bannerMessageElementRef", {
                set: function(elementRef) {
                    this.bannerMainMessageTextContainerElementRef = elementRef, elementRef && this.updateBannerMainMessageTooltipConfig();
                },
                enumerable: !1,
                configurable: !0
            }), QnaComponent.prototype.ngOnInit = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var isAuthoring, configClone, _a, _b, _c, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_d) {
                        switch (_d.label) {
                          case 0:
                            return isAuthoring = 0 !== this.viewModeState.getMode(), this.initializedTelemetryEvent = this.telemetryService.logEvent(events.dZ, {
                                isAuthoring,
                                entryPoint: this.entryPoint
                            }), debug.fF.assertValue(this.config, "Expect this.config to be defined"), configClone = _.cloneDeep(this.config), 
                            configClone = _.merge({}, configClone, {
                                hostHandlesUndo: !0
                            }), [ 4, this.core.initialize(this.models, configClone, this.hostServices, this.entryPoint, this.utteranceUpdated, this.convertVisual, this.initializedTelemetryEvent, this.contentContainerElement, void 0) ];

                          case 1:
                            return _d.sent(), this.isCopilotSynonymsEnabled$ = this.featureSwitchService.featureSwitches$.pipe((0, 
                            map.U)(function(fs) {
                                return fs.qnaImproveLsdlCopilot;
                            })), _a = this, [ 4, this.core.shouldShowThumbsUpDown() ];

                          case 2:
                            return _a.allowFeedback = _d.sent(), _b = this, [ 4, this.core.allowTooling() ];

                          case 3:
                            return _b.allowTooling = _d.sent(), this.allowTooling ? [ 4, this.lazyScoped.get("improveLsdlBackgroundService") ] : [ 3, 7 ];

                          case 4:
                            return [ 4, _d.sent().tryImproveLsdl("qnaVisual") ];

                          case 5:
                            return _d.sent(), _c = this, [ 4, this.lazyScoped.get("qnaBannerService") ];

                          case 6:
                            _c.qnaBannerService = _d.sent(), this.bannerContent$ = this.qnaBannerService.getBannerContent("Visual"), 
                            _d.label = 7;

                          case 7:
                            return this.showLegacyBanner = this.shouldShowBanner(), this.settingsService.settingChanged$.pipe((0, 
                            takeUntil.R)(this.destroy$)).subscribe(function(settingName) {
                                "ShowQnaVisualBanner" === settingName && (_this.showLegacyBanner = _this.shouldShowBanner());
                            }), [ 2 ];
                        }
                    });
                });
            }, QnaComponent.prototype.ngAfterViewInit = function() {
                this.core.updateViewport();
            }, QnaComponent.prototype.ngOnDestroy = function() {
                this.destroy$.next(), this.destroy$.complete();
            }, QnaComponent.prototype.onBannerDismiss = function(bannerId) {
                var _a;
                null === (_a = this.qnaBannerService) || void 0 === _a || _a.dismissBanner("Visual", bannerId);
            }, QnaComponent.prototype.update = function(options) {
                (0, StandaloneUtility3.yE)(options.type, enums.EP.Resize) && this.updateBannerMainMessageTooltipConfig(), 
                this.core.update(options);
            }, QnaComponent.prototype.enumerateObjectInstances = function(options) {
                return this.core.enumerateObjectInstances(options);
            }, QnaComponent.prototype.getFormattingModel = function() {
                return this.core.getFormattingModel();
            }, QnaComponent.prototype.focus = function() {
                if (this.qnaInputComponent) return this.qnaInputComponent.focus(), !0;
            }, QnaComponent.prototype.onInputBoxFocused = function($event) {
                this.inputBoxFocused.emit($event);
            }, QnaComponent.prototype.getCurrentVisual = function() {
                return this.core.getCurrentVisual();
            }, QnaComponent.prototype.convertVisualClicked = function() {
                this.core.convertVisualClicked();
            }, QnaComponent.prototype.dismissBanner = function() {
                this.settingsService.setShowQnaVisualBanner(!1), this.showLegacyBanner = !1;
            }, QnaComponent.prototype.performBannerMainAction = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var _this = this;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return debug.fF.assert(function() {
                                return _this.showLegacyBanner;
                            }, "This should only be called when showBanner is true"), [ 4, this.showTooling("VisualBanner", "bulkEditing") ];

                          case 1:
                            return _a.sent(), [ 2 ];
                        }
                    });
                });
            }, Object.defineProperty(QnaComponent.prototype, "inputPresentation", {
                get: function() {
                    if (this.viewModel) return this.viewModel.presentationViewModel.inputBox;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(QnaComponent.prototype, "suggestionsPresentation", {
                get: function() {
                    if (this.viewModel) return this.viewModel.presentationViewModel.suggestions;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(QnaComponent.prototype, "displayedRestatement", {
                get: function() {
                    if ("Ready" !== this.viewModel.state) return null;
                    var content = this.viewModel.result;
                    return content ? (0, qna_component_core_utils.mn)(content) || (0, qna_component_core_utils.fU)(content) || (0, 
                    qna_component_core_utils.lP)(content) ? content.restatement : void 0 : null;
                },
                enumerable: !1,
                configurable: !0
            }), QnaComponent.prototype.showTooling = function(entryPoint, entryContentType) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var dataSources, currentExploration, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return debug.fF.assert(function() {
                                return _this.allowTooling;
                            }, "this should be called only when this.allowTooling is true"), this.allowTooling ? (dataSources = this.dataSources.get(), 
                            currentExploration = this.explorationNavigation.getCurrentExploration(), [ 4, this.qnaToolingDialogLauncher.showToolingDialog({
                                dataSources,
                                exploration: currentExploration,
                                entryPoint,
                                entryContentType,
                                entryQuestion: this.core.getCurrentUtteranceTrimmed()
                            }) ]) : [ 2 ];

                          case 1:
                            return _a.sent(), [ 2 ];
                        }
                    });
                });
            }, QnaComponent.prototype.interpretSuggestedQuestion = function(suggestion) {
                this.core.interpretSuggestedQuestion(suggestion);
            }, QnaComponent.prototype.toggleShowAllSuggestions = function() {
                this.core.toggleShowAllSuggestions();
            }, QnaComponent.prototype.showQnaVisualErrorDetails = function() {
                this.core.showQnaVisualErrorDetails();
            }, QnaComponent.prototype.showResultErrorDetails = function() {
                this.core.showResultErrorDetails();
            }, QnaComponent.prototype.launchFeedbackDialog = function(sentiment, showOptions) {
                this.core.launchFeedbackDialog(sentiment, showOptions);
            }, QnaComponent.prototype.shouldShowBanner = function() {
                var _this = this;
                return debug.fF.assert(function() {
                    return null != _this.allowTooling;
                }, "this.allowTooling value should already been set to be true or false"), this.allowTooling && this.settingsService.getShowQnaVisualBanner();
            }, QnaComponent.prototype.updateBannerMainMessageTooltipConfig = function() {
                if (this.bannerMainMessageTextContainerElementRef) {
                    var element = this.bannerMainMessageTextContainerElementRef.nativeElement, ellipsisShown = element && element.offsetWidth < element.scrollWidth;
                    !this.bannerMainMessage != !ellipsisShown && (this.bannerMainMessage = ellipsisShown ? element.textContent : null);
                }
            }, QnaComponent.\u0275fac = function(t) {
                return new (t || QnaComponent)(fesm2022_core["\u0275\u0275directiveInject"](data_sources_service.D), fesm2022_core["\u0275\u0275directiveInject"](exploration_navigation_service.z), fesm2022_core["\u0275\u0275directiveInject"](feature_switch_service.vZ), fesm2022_core["\u0275\u0275directiveInject"](lazy_scoped_provider.H), fesm2022_core["\u0275\u0275directiveInject"](view_mode_state_service.kc), fesm2022_core["\u0275\u0275directiveInject"](Telemetry.y0), fesm2022_core["\u0275\u0275directiveInject"](qna_component_core_service.D), fesm2022_core["\u0275\u0275directiveInject"](high_contrast_css_generation_service.g), fesm2022_core["\u0275\u0275directiveInject"](settings_service.g), fesm2022_core["\u0275\u0275directiveInject"](qnaToolingDialogLauncher.b, 8));
            }, QnaComponent.\u0275cmp = fesm2022_core["\u0275\u0275defineComponent"]({
                type: QnaComponent,
                selectors: [ [ "qna-host" ] ],
                viewQuery: function(rf, ctx) {
                    if (1 & rf && (fesm2022_core["\u0275\u0275viewQuery"](QnaInputV2Component, 5), fesm2022_core["\u0275\u0275viewQuery"](qna_component_c0, 5, fesm2022_core.ElementRef), 
                    fesm2022_core["\u0275\u0275viewQuery"](qna_component_c1, 7, fesm2022_core.ElementRef)), 
                    2 & rf) {
                        var _t = void 0;
                        fesm2022_core["\u0275\u0275queryRefresh"](_t = fesm2022_core["\u0275\u0275loadQuery"]()) && (ctx.inputComponent = _t.first), 
                        fesm2022_core["\u0275\u0275queryRefresh"](_t = fesm2022_core["\u0275\u0275loadQuery"]()) && (ctx._bannerMessageElementRef = _t.first), 
                        fesm2022_core["\u0275\u0275queryRefresh"](_t = fesm2022_core["\u0275\u0275loadQuery"]()) && (ctx.contentContainerElement = _t.first);
                    }
                },
                inputs: {
                    models: "models",
                    config: "config",
                    hostServices: "hostServices",
                    entryPoint: "entryPoint"
                },
                outputs: {
                    inputBoxFocused: "inputBoxFocused",
                    utteranceUpdated: "utteranceUpdated",
                    convertVisual: "convertVisual"
                },
                features: [ fesm2022_core["\u0275\u0275ProvidersFeature"]([ interpret_listener_service.y, tooltip_theme_service.Q, visual_host_tooltip_service_factory_service.Z, qna_component_core_service.D ]) ],
                decls: 9,
                vars: 11,
                consts: [ [ 1, "qnaVisual", 3, "ngSwitch" ], [ "class", "loadingContainer", 4, "ngSwitchCase" ], [ 4, "ngSwitchCase" ], [ "class", "glyphicon icon glyph-small pbi-glyph-info restatementIcon", "tabindex", "0", 3, "ngStyle", "pbiTooltip", 4, "ngIf" ], [ 1, "content", 3, "ngClass" ], [ "contentContainer", "" ], [ 3, "ngSwitch", 4, "ngIf" ], [ "class", "footer", 4, "ngIf" ], [ 1, "loadingContainer" ], [ 1, "loading" ], [ "size", "large", 3, "delay" ], [ "localize", "Qna_InitialLoading" ], [ 3, "errorInfo", "viewport", "showErrorDetails" ], [ 4, "ngIf", "ngIfElse" ], [ "legacyBanner", "" ], [ 1, "header", 3, "ngClass" ], [ "drag-resize-disabled", "true", "tabindex", "-1", 1, "inputBox", 3, "entryPoint", "qnaSupportedScopes", "interpretListener", "presentationArgs", "configs", "initialUtterance", "initialUtteranceFromSaved", "inputBoxFocused" ], [ "class", "glyphicon icon glyph-small pbi-glyph-dependencyadd qnaAction", "role", "button", 3, "ngClass", "pbiTooltip", "localizeAttr", "ngStyle", "accessible-click", 4, "ngIf" ], [ "class", "glyphicon icon glyph-small pbi-glyph-settings qnaAction", "role", "button", 3, "pbiTooltip", "localizeAttr", "ngStyle", "accessible-click", 4, "ngIf" ], [ 4, "ngIf" ], [ 3, "bannerContent", "onDismiss" ], [ "class", "banner", 4, "ngIf" ], [ 1, "banner" ], [ 1, "glyphicon", "glyph-small", "pbi-glyph-info" ], [ 1, "mainMessage", 3, "pbiTooltip", "localize" ], [ "bannerMainMessageTextContainer", "" ], [ "mat-button", "", 1, "mainAction", 3, "localize", "accessible-click" ], [ "mat-button", "", 1, "dismiss", "glyphicon", "pbi-glyph-close", "glyph-mini", 3, "pbiTooltip", "localizeAttr", "accessible-click" ], [ "role", "button", 1, "glyphicon", "icon", "glyph-small", "pbi-glyph-dependencyadd", "qnaAction", 3, "ngClass", "pbiTooltip", "localizeAttr", "ngStyle", "accessible-click" ], [ "role", "button", 1, "glyphicon", "icon", "glyph-small", "pbi-glyph-settings", "qnaAction", 3, "pbiTooltip", "localizeAttr", "ngStyle", "accessible-click" ], [ "tabindex", "0", 1, "glyphicon", "icon", "glyph-small", "pbi-glyph-info", "restatementIcon", 3, "ngStyle", "pbiTooltip" ], [ 3, "ngSwitch" ], [ "class", "suggestionsContainer", 4, "ngSwitchCase" ], [ "class", "visualResultContainer", 4, "ngSwitchCase" ], [ "class", "doNotUnderstandContainer", 4, "ngSwitchCase" ], [ "class", "resultErrorContainer", 4, "ngSwitchCase" ], [ "errorOverlayTemplate", "" ], [ 1, "suggestionsContainer" ], [ "class", "suggestions", 4, "ngIf" ], [ "class", "suggestionsWarning", 3, "ngStyle", 4, "ngIf" ], [ 1, "suggestions" ], [ "localize", "Visual_Qna_SuggestionsHeader", 1, "suggestionTitle", 3, "ngStyle" ], [ "data-testid", "qna-suggestions", 1, "suggestionsList" ], [ "class", "suggestion themeableElement", "tabindex", "0", "role", "button", "data-testid", "qna-suggestion", 3, "ngStyle", "accessible-click", 4, "ngFor", "ngForOf" ], [ "tabindex", "0", "role", "button", "data-testid", "qna-show-all-suggestions-btn", 1, "showAllToggle", 3, "localize", "localizeAttr", "accessible-click" ], [ "tabindex", "0", "role", "button", "data-testid", "qna-suggestion", 1, "suggestion", "themeableElement", 3, "ngStyle", "accessible-click" ], [ 1, "suggestionsWarning", 3, "ngStyle" ], [ 1, "visualResultContainer" ], [ "class", "singleVisualHostContainer", 4, "ngIf" ], [ 1, "singleVisualHostContainer" ], [ "class", "loadingSpinner", "size", "small", 3, "delay", 4, "ngIf" ], [ "tabindex", "0", "focus-nav-mode", "Hierarchy", "data-testid", "qna-visual", 3, "visual", "visualViewport", "themeCollection", "config" ], [ "size", "small", 1, "loadingSpinner", 3, "delay" ], [ 1, "doNotUnderstandContainer" ], [ 1, "showDoNotUnderstandMessage", 3, "ngStyle" ], [ 1, "message" ], [ "class", "tellUsMore", "href", "javascript:void(0);", 3, "accessible-click", 4, "ngIf" ], [ "href", "javascript:void(0);", 1, "tellUsMore", 3, "accessible-click" ], [ "localize", "Qna_Feedback_TellUsMore" ], [ 1, "resultErrorContainer" ], [ 4, "ngTemplateOutlet" ], [ 1, "footer" ], [ "class", "feedback", 4, "ngIf" ], [ "class", "disclaimer", 4, "ngIf" ], [ 1, "feedback" ], [ 3, "fontColor" ], [ 1, "disclaimer" ], [ "localize", "Copilot_Disclaimer_Short" ], [ "href", "https://go.microsoft.com/fwlink/?linkid=2243166", "localize", "CopilotInline_PreviewLink", "target", "_blank", 1, "pbi-external-link", "fluentTheme-sm-reg" ] ],
                template: function(rf, ctx) {
                    1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 0), fesm2022_core["\u0275\u0275template"](1, QnaComponent_div_1_Template, 4, 1, "div", 1), 
                    fesm2022_core["\u0275\u0275template"](2, QnaComponent_div_2_Template, 2, 2, "div", 2), 
                    fesm2022_core["\u0275\u0275template"](3, QnaComponent_ng_container_3_Template, 9, 16, "ng-container", 2), 
                    fesm2022_core["\u0275\u0275template"](4, QnaComponent_i_4_Template, 1, 5, "i", 3), 
                    fesm2022_core["\u0275\u0275elementStart"](5, "div", 4, 5), fesm2022_core["\u0275\u0275template"](7, QnaComponent_ng_container_7_Template, 8, 6, "ng-container", 6), 
                    fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275template"](8, QnaComponent_div_8_Template, 4, 4, "div", 7), 
                    fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf && (fesm2022_core["\u0275\u0275property"]("ngSwitch", ctx.viewModel.state), 
                    fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngSwitchCase", "Loading"), 
                    fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngSwitchCase", "Error"), 
                    fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngSwitchCase", "Ready"), 
                    fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", ctx.displayedRestatement), 
                    fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction2"](8, qna_component_c13, "Ready" === ctx.viewModel.state, ctx.viewModel.result && "Suggestions" === ctx.viewModel.result.type)), 
                    fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("ngIf", ctx.viewModel.result), 
                    fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", "Ready" === ctx.viewModel.state));
                },
                dependencies: [ common.NgClass, common.NgForOf, common.NgIf, common.NgTemplateOutlet, common.NgStyle, common.NgSwitch, common.NgSwitchCase, localize_directive.X, localize_attr_directive.b, spinner_component.O, canvas_visual_error_overlay_component.f, single_visual_host_component.v, accessible_click_directive.t, pbi_tooltip_directive.V, QnaInputV2Component, QnaFeedbackComponent, QnaBannerComponent, common.AsyncPipe, localize_pipe.F ],
                styles: [ '.qnaVisual[_ngcontent-%COMP%]{font-size:12px;height:100%;display:flex;flex-direction:column}  html[data-focus-source=key] .qnaVisual:focus,   html[data-focus-source=key] .qnaVisual *:focus{outline:var(--focus-two-tone-outline-definition, auto 1px);outline-color:var(--focus-two-tone-outline-color, -webkit-focus-ring-color)}  html[data-focus-source=mouse] .qnaVisual:focus,   html[data-focus-source=mouse] .qnaVisual *:focus,   html[data-focus-source=program] .qnaVisual:focus,   html[data-focus-source=program] .qnaVisual *:focus{outline:none}.qnaVisual[_ngcontent-%COMP%]     .powerbi-spinner{position:unset!important;margin-right:12px}.qnaVisual[_ngcontent-%COMP%]   .pbi-glyph-info[_ngcontent-%COMP%]:before{content:"\\e946"!important}.qnaVisual[_ngcontent-%COMP%]   .loadingContainer[_ngcontent-%COMP%]{display:flex;flex:1;align-items:center;justify-content:center}.qnaVisual[_ngcontent-%COMP%]   .loadingContainer[_ngcontent-%COMP%]   .loading[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center}.qnaVisual[_ngcontent-%COMP%]   .loadingContainer[_ngcontent-%COMP%]   .loading[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{font-size:14px;text-align:center;margin:12px}.qnaVisual[_ngcontent-%COMP%]   .banner[_ngcontent-%COMP%]{display:flex;flex-direction:row;background-color:var(--gray-20, #F3F2F1);padding:0 12px;margin:8px 4px 4px;color:var(--gray-160, #323130);align-items:center}.qnaVisual[_ngcontent-%COMP%]   .banner[_ngcontent-%COMP%]   .glyphicon[_ngcontent-%COMP%]{margin:8px 0}.qnaVisual[_ngcontent-%COMP%]   .banner[_ngcontent-%COMP%]   .mainMessage[_ngcontent-%COMP%]{margin:4px 8px;flex:1;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.qnaVisual[_ngcontent-%COMP%]   .banner[_ngcontent-%COMP%]   .mainAction[_ngcontent-%COMP%]{margin:0;padding:2px 20px;background:var(--white-color, #FFF);font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-semi-bold, 600);border:1px solid var(--gray-110, #8A8886);box-sizing:border-box;border-radius:2px;height:fit-content}.qnaVisual[_ngcontent-%COMP%]   .banner[_ngcontent-%COMP%]   .glyphicon.dismiss[_ngcontent-%COMP%]{padding:0}html:not([dir="rtl"])[_nghost-%COMP%]   .qnaVisual[_ngcontent-%COMP%]   .banner[_ngcontent-%COMP%]   .glyphicon.dismiss[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .qnaVisual[_ngcontent-%COMP%]   .banner[_ngcontent-%COMP%]   .glyphicon.dismiss[_ngcontent-%COMP%]{margin:0 0 0 12px}html[dir="rtl"][_nghost-%COMP%]   .qnaVisual[_ngcontent-%COMP%]   .banner[_ngcontent-%COMP%]   .glyphicon.dismiss[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .qnaVisual[_ngcontent-%COMP%]   .banner[_ngcontent-%COMP%]   .glyphicon.dismiss[_ngcontent-%COMP%]{margin:0 12px 0 0}.qnaVisual[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]{display:flex;flex-direction:row;min-height:44px;position:relative;margin-top:16px}.qnaVisual[_ngcontent-%COMP%]   .header.hasBanner[_ngcontent-%COMP%]{margin-top:0}.qnaVisual[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .inputBox[_ngcontent-%COMP%]{flex:1;margin:4px}.qnaVisual[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .qnaAction[_ngcontent-%COMP%]{margin:12px 4px 0;cursor:pointer;height:16px}.qnaVisual[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .qnaAction.disabled[_ngcontent-%COMP%]{color:var(--fluent-theme-neutral-tertiary-color, #A19F9D)!important;cursor:default}.qnaVisual[_ngcontent-%COMP%]   .restatementIcon[_ngcontent-%COMP%]{align-self:flex-end;cursor:default}.qnaVisual[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]{margin:4px;flex:0}.qnaVisual[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .suggestions[_ngcontent-%COMP%]{display:flex;flex-direction:column;flex:1}.qnaVisual[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .suggestions[_ngcontent-%COMP%]   .suggestionTitle[_ngcontent-%COMP%]{margin:1px 1px 12px 4px}.qnaVisual[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .suggestions[_ngcontent-%COMP%]   .suggestionsList[_ngcontent-%COMP%]{padding:0 4px;display:grid;grid-template-columns:repeat(auto-fit,minmax(180px,1fr));grid-template-rows:repeat(auto-fit,minmax(32px,1fr))}.qnaVisual[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .suggestions[_ngcontent-%COMP%]   .suggestionsList[_ngcontent-%COMP%]   .suggestion[_ngcontent-%COMP%]{font-size:14px;padding:12px 20px;border-radius:2px;box-shadow:var(--fluent-shadow-depth4, 0px 0px 2px var(--colorNeutralShadowAmbient), 0px 2px 4px var(--colorNeutralShadowKey));border:1px solid transparent;box-sizing:border-box;cursor:pointer;margin:0 12px 12px 0}.qnaVisual[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .suggestions[_ngcontent-%COMP%]   .showAllToggle[_ngcontent-%COMP%]{font-size:14px;color:var(--fluent-theme-link-color, #0078D4);margin:12px 4px;cursor:pointer;align-self:flex-end}.qnaVisual[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .visualResultContainer[_ngcontent-%COMP%]{position:relative;height:100%}.qnaVisual[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .visualResultContainer[_ngcontent-%COMP%]   .singleVisualHostContainer[_ngcontent-%COMP%]{height:100%}.qnaVisual[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .visualResultContainer[_ngcontent-%COMP%]   .singleVisualHostContainer[_ngcontent-%COMP%]   spinner[_ngcontent-%COMP%]{position:absolute;top:50%;left:50%}.qnaVisual[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .visualResultContainer[_ngcontent-%COMP%]   .singleVisualHostContainer[_ngcontent-%COMP%]   single-visual-host[_ngcontent-%COMP%]{position:relative;display:block;height:100%;background-color:transparent}.qnaVisual[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .visualResultContainer[_ngcontent-%COMP%]   .singleVisualHostContainer[_ngcontent-%COMP%]   single-visual-host[_ngcontent-%COMP%]     .visual{height:100%}.qnaVisual[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .doNotUnderstandContainer[_ngcontent-%COMP%]{display:flex;justify-content:center;height:100%}.qnaVisual[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .doNotUnderstandContainer[_ngcontent-%COMP%]   .message[_ngcontent-%COMP%]{margin-right:4px}.qnaVisual[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .doNotUnderstandContainer[_ngcontent-%COMP%]   .showDoNotUnderstandMessage[_ngcontent-%COMP%], .qnaVisual[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .suggestionsContainer[_ngcontent-%COMP%]   .suggestionsWarning[_ngcontent-%COMP%]{display:flex;text-align:center;align-items:center;font-size:14px;max-width:450px;padding:20px;width:100%;box-sizing:border-box}.qnaVisual[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .resultErrorContainer[_ngcontent-%COMP%]{height:100%;position:relative;background-color:var(--neutral-lighter-color, #F4F4F4);display:flex;flex-direction:column;justify-content:center}.qnaVisual[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .resultErrorContainer[_ngcontent-%COMP%]   canvas-visual-error-overlay[_ngcontent-%COMP%]{position:relative;height:auto}.qnaVisual[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .resultErrorContainer[_ngcontent-%COMP%]   .tellUsMore[_ngcontent-%COMP%]{text-align:center;font-size:14px}.qnaVisual[_ngcontent-%COMP%]   .content.contentReady[_ngcontent-%COMP%]{flex:1;overflow:hidden}.qnaVisual[_ngcontent-%COMP%]   .content.suggestionContent[_ngcontent-%COMP%]{overflow-y:auto}.qnaVisual[_ngcontent-%COMP%]   .footer[_ngcontent-%COMP%]   .feedback[_ngcontent-%COMP%]{flex:0;padding-top:2px}.qnaVisual[_ngcontent-%COMP%]   .footer[_ngcontent-%COMP%]   .feedback[_ngcontent-%COMP%]   qna-feedback[_ngcontent-%COMP%]{float:right}' ]
            }), QnaComponent;
        }(), eventAggregationService = __webpack_require__(97999), InjectionTokens_eventAggregationService = __webpack_require__(8898), promiseFactory = __webpack_require__(14463), services_events = __webpack_require__(8590), visualContainerUtilsHelper = __webpack_require__(3579), visualContainerUtils = __webpack_require__(60661), JsCommon_events = __webpack_require__(91615), PowerBIContracts_constants = __webpack_require__(2142), qnaVisual_capabilities = __webpack_require__(32640), dataViewObject2 = __webpack_require__(82755), dataViewObjectDefinition1 = __webpack_require__(5265), dataViewObjectEvaluationUtils = __webpack_require__(99917), dataViewObjectEvaluator = __webpack_require__(4541), rules_evalContext = __webpack_require__(69838), VisualApiAdapter = __webpack_require__(64546), visual_util = __webpack_require__(74857), qna_supportability_util = __webpack_require__(91592), event_bridge_service = __webpack_require__(11494), exploration_capabilities_service = __webpack_require__(48145), filter_generator_service = __webpack_require__(94717), pause_queries_service = __webpack_require__(39631), visual_authoring_service = __webpack_require__(66890), error_service = __webpack_require__(81213), visual_plugin_service = __webpack_require__(29866), selection_service = __webpack_require__(72262), visual_authoring_customize_operations_service = __webpack_require__(28107), theme_service = __webpack_require__(67660), keyboard_shortcuts_directive = __webpack_require__(35756), qna_visual_host_component_c0 = [ "qnaVisual" ], qna_visual_host_component_c1 = function() {
            return {
                "aria-label": "Qna_MessageDialog_EnableQnaButtonText"
            };
        };
        function QnaVisualHostComponent_ng_container_2_ng_container_1_div_1_button_4_Template(rf, ctx) {
            if (1 & rf) {
                var _r9 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "button", 11), fesm2022_core["\u0275\u0275listener"]("accessible-click", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r9);
                    var ctx_r8 = fesm2022_core["\u0275\u0275nextContext"](4);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r8.enableQna());
                }), fesm2022_core["\u0275\u0275elementEnd"]();
            }
            2 & rf && fesm2022_core["\u0275\u0275property"]("localizeAttr", fesm2022_core["\u0275\u0275pureFunction0"](2, qna_visual_host_component_c1))("localize", "Qna_MessageDialog_EnableQnaButtonText");
        }
        function QnaVisualHostComponent_ng_container_2_ng_container_1_div_1_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 7), fesm2022_core["\u0275\u0275element"](1, "div", 8), 
            fesm2022_core["\u0275\u0275elementStart"](2, "span", 9), fesm2022_core["\u0275\u0275text"](3), 
            fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275template"](4, QnaVisualHostComponent_ng_container_2_ng_container_1_div_1_button_4_Template, 1, 3, "button", 10), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r5 = fesm2022_core["\u0275\u0275nextContext"](3);
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275attribute"]("aria-label", ctx_r5.disallowQnaDetails.notEnabledDetails.message), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275textInterpolate"](ctx_r5.disallowQnaDetails.notEnabledDetails.message), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", ctx_r5.disallowQnaDetails.notEnabledDetails.canEnable);
            }
        }
        function QnaVisualHostComponent_ng_container_2_ng_container_1_canvas_visual_error_overlay_2_Template(rf, ctx) {
            if (1 & rf) {
                var _r11 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "canvas-visual-error-overlay", 12), 
                fesm2022_core["\u0275\u0275listener"]("showErrorDetails", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r11);
                    var ctx_r10 = fesm2022_core["\u0275\u0275nextContext"](3);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r10.showVisualErrorDetails());
                }), fesm2022_core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r6 = fesm2022_core["\u0275\u0275nextContext"](3);
                fesm2022_core["\u0275\u0275property"]("errorInfo", ctx_r6.disallowQnaDetails.otherReasonErrorDetails)("viewport", ctx_r6.currentViewport);
            }
        }
        function QnaVisualHostComponent_ng_container_2_ng_container_1_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275template"](1, QnaVisualHostComponent_ng_container_2_ng_container_1_div_1_Template, 5, 3, "div", 5), 
            fesm2022_core["\u0275\u0275template"](2, QnaVisualHostComponent_ng_container_2_ng_container_1_canvas_visual_error_overlay_2_Template, 1, 2, "canvas-visual-error-overlay", 6), 
            fesm2022_core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var ctx_r4 = fesm2022_core["\u0275\u0275nextContext"](2);
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", "qnaNotEnabled" === ctx_r4.disallowQnaDetails.reason), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", "qnaNotEnabled" !== ctx_r4.disallowQnaDetails.reason);
            }
        }
        function QnaVisualHostComponent_ng_container_2_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275template"](1, QnaVisualHostComponent_ng_container_2_ng_container_1_Template, 3, 2, "ng-container", 4), 
            fesm2022_core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var ctx_r1 = fesm2022_core["\u0275\u0275nextContext"](), _r2 = fesm2022_core["\u0275\u0275reference"](4);
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", ctx_r1.disallowQna)("ngIfElse", _r2);
            }
        }
        function QnaVisualHostComponent_ng_template_3_Template(rf, ctx) {
            if (1 & rf) {
                var _r14 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "div", 13)(1, "qna-host", 14, 15), 
                fesm2022_core["\u0275\u0275listener"]("utteranceUpdated", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r14);
                    var ctx_r13 = fesm2022_core["\u0275\u0275nextContext"]();
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r13.utteranceUpdated($event));
                })("convertVisual", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r14);
                    var ctx_r15 = fesm2022_core["\u0275\u0275nextContext"]();
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r15.convertVisual($event));
                })("inputBoxFocused", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r14);
                    var ctx_r16 = fesm2022_core["\u0275\u0275nextContext"]();
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r16.onInputBoxFocused($event));
                }), fesm2022_core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var ctx_r3 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("config", ctx_r3.config)("models", ctx_r3.models)("hostServices", ctx_r3.hostServices)("entryPoint", ctx_r3.entryPoint);
            }
        }
        var qna_visual_host_component_c2 = function(a0, a1) {
            return {
                hasDisallowQnaContent: a0,
                customPadding: a1
            };
        }, QnaVisualHostComponent = function() {
            function QnaVisualHostComponent(changeDetectorRef, conceptualSchemaProxy, dataSources, errorService, eventBridge, explorationCapabilitiesService, explorationNavigation, filterGenerator, lazyProvider, localizationService, pauseQueriesService, visualPlugin, featureSwitchService, selection, telemetryService, themeService, viewModeState, visualAuthoring, visualAuthoringCustomizeOperations, promiseFactory, eventAggregation, qnaProxyPath) {
                var _this = this;
                this.changeDetectorRef = changeDetectorRef, this.conceptualSchemaProxy = conceptualSchemaProxy, 
                this.dataSources = dataSources, this.errorService = errorService, this.eventBridge = eventBridge, 
                this.explorationCapabilitiesService = explorationCapabilitiesService, this.explorationNavigation = explorationNavigation, 
                this.filterGenerator = filterGenerator, this.lazyProvider = lazyProvider, this.localizationService = localizationService, 
                this.pauseQueriesService = pauseQueriesService, this.visualPlugin = visualPlugin, 
                this.featureSwitchService = featureSwitchService, this.selection = selection, this.telemetryService = telemetryService, 
                this.themeService = themeService, this.viewModeState = viewModeState, this.visualAuthoring = visualAuthoring, 
                this.visualAuthoringCustomizeOperations = visualAuthoringCustomizeOperations, this.promiseFactory = promiseFactory, 
                this.qnaProxyPath = qnaProxyPath, this.visualReady = new fesm2022_core.EventEmitter, 
                this.inputBoxFocused = new fesm2022_core.EventEmitter, this.subscriptionManager = this.eventBridge.createChannelSubscriptionManager().subscribe(services_events.CCe, function() {
                    return (0, tslib_es6.__awaiter)(_this, void 0, void 0, function() {
                        return (0, tslib_es6.__generator)(this, function(_a) {
                            switch (_a.label) {
                              case 0:
                                return [ 4, this.onModelChanged() ];

                              case 1:
                                return _a.sent(), [ 2 ];
                            }
                        });
                    });
                }), this.subscriptions = new eventAggregationService.g4(eventAggregation), this.isReportPausedSubscription = this.pauseQueriesService.isReportPaused$().subscribe(function() {
                    _this.visualContainer && _this.reInitializeComponent();
                });
            }
            return QnaVisualHostComponent.prototype.ngOnInit = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        return this.reInitializeComponent(), [ 2 ];
                    });
                });
            }, QnaVisualHostComponent.prototype.ngOnDestroy = function() {
                this.subscriptionManager.unsubscribeAll(), this.subscriptions.unsubscribeAll(), 
                this.settingsChangedSubscription && this.settingsChangedSubscription.unsubscribe(), 
                this.isReportPausedSubscription && this.isReportPausedSubscription.unsubscribe(), 
                this.visualAuthoringCustomizeOperations.requiresCustomizeConvert(this.visualContainer) && this.visualAuthoringCustomizeOperations.removeCustomizeFrom(this.visualContainer);
            }, QnaVisualHostComponent.prototype.ngDoCheck = function() {
                var newViewport = this.visualDefinition.viewport;
                this.currentViewport && newViewport.height === this.currentViewport.height && newViewport.width === this.currentViewport.width && newViewport.scale === this.currentViewport.scale || (this.currentViewport = {
                    width: newViewport.width,
                    height: newViewport.height,
                    scale: newViewport.scale
                }, this.setNewViewport(newViewport), this.qnaHost && !this.disallowQna && this.qnaHost.update({
                    type: enums.EP.Resize,
                    viewport: this.currentViewport
                }));
            }, QnaVisualHostComponent.prototype.init = function(options) {
                var _this = this, objects = this.extractObjects(this.visualContainer), utterance = (0, 
                dataViewObject2.NA)(objects, {
                    objectName: "hiddenProperties",
                    propertyName: "savedUtterance"
                }, "");
                this.config = {
                    canEdit: this.getCanEdit(),
                    canShowPods: !1,
                    canShowVisuals: !0,
                    canShowDidYouMean: !0,
                    initialUtterance: utterance,
                    initialUtteranceFromSaved: !_.isEmpty(utterance)
                };
                var dataSource = _.find(this.dataSources.get(), function(d) {
                    return d.type === PowerBIContracts_constants.nKy;
                });
                this.models = [ {
                    vsName: dataSource.dsr.vsName,
                    dbName: dataSource.dsr.dbName,
                    qnaSupported: !0,
                    id: dataSource.id
                } ], this.entryPoint = "Visual", this.hostServices = options.host, this.isLoading = !1, 
                this.setNewViewport(options.viewport), this.changeDetectorRef.detectChanges(), this.onVisualContainerUpdate(!0), 
                this.visualAuthoringCustomizeOperations.registerCustomizeFrom(this.visualContainer, function(vc) {
                    return _this.customizeConvertFrom(vc);
                });
            }, QnaVisualHostComponent.prototype.update = function(options) {
                (0, StandaloneUtility3.yE)(options.type, enums.EP.Resize) && this.qnaHost && (this.setNewViewport(options.viewport), 
                this.qnaHost.update({
                    type: enums.EP.Resize,
                    viewport: options.viewport
                }));
            }, QnaVisualHostComponent.prototype.onViewModeChanged = function(_viewMode) {
                this.config.canEdit = this.getCanEdit();
            }, QnaVisualHostComponent.prototype.enumerateObjectInstances = function(options) {
                if (this.qnaHost) return this.qnaHost.enumerateObjectInstances(options);
            }, QnaVisualHostComponent.prototype.getFormattingModel = function() {
                if (this.qnaHost) return this.qnaHost.getFormattingModel();
            }, Object.defineProperty(QnaVisualHostComponent.prototype, "supportsCustomPadding", {
                get: function() {
                    var _a;
                    return null === (_a = this.featureSwitchService) || void 0 === _a ? void 0 : _a.featureSwitches.vcPadding;
                },
                enumerable: !1,
                configurable: !0
            }), QnaVisualHostComponent.prototype.focus = function() {
                if (this.qnaHost) return this.qnaHost.focus();
            }, QnaVisualHostComponent.prototype.utteranceUpdated = function(utterance) {
                var _a;
                if (null != utterance) {
                    var changes = {
                        merge: [ {
                            objectName: "hiddenProperties",
                            selector: void 0,
                            properties: (_a = {}, _a.savedUtterance = utterance, _a)
                        } ]
                    };
                    this.hostServices.persistProperties(changes, !0);
                }
            }, QnaVisualHostComponent.prototype.convertVisual = function(visualContainer) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var visualType, currentVisualIsSelected_1, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return visualType = (0, visualContainerUtilsHelper.s)(visualContainer), [ 4, this.visualAuthoring.convert(this.visualContainer, this.dataSources.get(), visualType, void 0) ];

                          case 1:
                            return _a.sent() && (currentVisualIsSelected_1 = this.selection.getSelectedElements().find(function(item) {
                                return item.canvasItem.name === _this.visualContainer.name;
                            })) && this.eventBridge.publishToChannel(services_events.MEZ, {
                                affectContainer: function(canvasItem) {
                                    return canvasItem === currentVisualIsSelected_1.canvasItem;
                                },
                                preventScroll: !0
                            }), [ 2 ];
                        }
                    });
                });
            }, QnaVisualHostComponent.prototype.onInputBoxFocused = function($event) {
                this.inputBoxFocused.emit($event);
            }, QnaVisualHostComponent.prototype.customizeConvertFrom = function(visualContainer) {
                debug.fF.assertValue(visualContainer, "visualContainer");
                var currentVisual = this.qnaHost && this.qnaHost.getCurrentVisual();
                currentVisual && (visualContainer.config.singleVisual.query = currentVisual.config.singleVisual.query, 
                visualContainer.config.singleVisual.visualType = currentVisual.config.singleVisual.visualType, 
                visualContainer.config.singleVisual.objects = (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, visualContainer.config.singleVisual.objects || {}), currentVisual.config.singleVisual.objects || {}), 
                visualContainer.filters = currentVisual.filters, visualContainer.config.singleVisual.conversionSourceContext = void 0);
            }, QnaVisualHostComponent.prototype.enableQna = function() {
                var _this = this;
                debug.fF.assert(function() {
                    var _a, _b;
                    return _this.disallowQna && (null === (_b = null === (_a = _this.disallowQnaDetails) || void 0 === _a ? void 0 : _a.notEnabledDetails) || void 0 === _b ? void 0 : _b.canEnable);
                }, "Expect this is called only when this.disallowQna && this.disallowQnaDetails.becauseNotEnabledDetails.canEnable is true"), 
                this.qnaSupportabilityService.enableQna();
            }, QnaVisualHostComponent.prototype.showVisualErrorDetails = function() {
                var _this = this;
                debug.fF.assert(function() {
                    var _a;
                    return _this.disallowQna && !!(null === (_a = _this.disallowQnaDetails) || void 0 === _a ? void 0 : _a.otherReasonErrorDetails);
                }, "Expect this to be called only when this.disallowQna && this.disallowQnaDetails.becauseOtherReasonErrorDetails is defined"), 
                (0, visual_util.aZ)(this.disallowQnaDetails.otherReasonErrorDetails, this.errorService, this.localizationService);
            }, QnaVisualHostComponent.prototype.reInitializeComponent = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var plugin, themeCollection, initOptions, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return this.isLoading = !0, this.visualContainer.filters = void 0, [ 4, this.ensureQnaSupportabilityService() ];

                          case 1:
                            return _a.sent(), this.settingsChangedSubscription || (this.settingsChangedSubscription = this.qnaSupportabilityService.qnaSettingsChanged$.subscribe(function() {
                                return _this.reInitializeComponent();
                            })), [ 4, this.checkIsQnaAllowed() ];

                          case 2:
                            return _a.sent(), this.disallowQna ? (this.isLoading = !1, [ 2 ]) : (this.wasQnaAllowedBefore ? this.visualDefinition.visual.destroy() : (this.currentViewport = this.visualDefinition.viewport, 
                            plugin = this.visualPlugin.getPlugin(this.visualDefinition.type), this.visualDefinition.visual = (0, 
                            VisualApiAdapter.nm)(plugin, plugin.create, this.promiseFactory, this.telemetryService, {
                                createQnaVisual: function() {
                                    return _this;
                                }
                            }), this.subscriptionManager.subscribe(services_events.jCS, function(_e, args) {
                                args && args.affectContainer(_this.visualContainer) && _this.onVisualContainerUpdate();
                            }).subscribe(JsCommon_events.kx, function() {
                                return (0, tslib_es6.__awaiter)(_this, void 0, void 0, function() {
                                    return (0, tslib_es6.__generator)(this, function(_a) {
                                        switch (_a.label) {
                                          case 0:
                                            return [ 4, this.onVisualContainerUpdate() ];

                                          case 1:
                                            return [ 2, _a.sent() ];
                                        }
                                    });
                                });
                            }).subscribe(services_events.Tuj, function() {
                                return (0, tslib_es6.__awaiter)(_this, void 0, void 0, function() {
                                    return (0, tslib_es6.__generator)(this, function(_a) {
                                        switch (_a.label) {
                                          case 0:
                                            return [ 4, this.onVisualContainerUpdate() ];

                                          case 1:
                                            return [ 2, _a.sent() ];
                                        }
                                    });
                                });
                            }), this.subscriptions.subscribe("LuciaDomainModelChangedEvent", function() {
                                return _this.onVisualContainerUpdate();
                            })), this.wasQnaAllowedBefore = !0, themeCollection = (0, visual_util.Su)(this.explorationNavigation, this.featureSwitchService), 
                            initOptions = {
                                element: {
                                    empty: function() {},
                                    get: function() {}
                                },
                                host: this.visualDefinition.hostServices,
                                visualAdapterHostServices: this.visualDefinition.visualAdapterHostServices,
                                style: this.themeService && this.themeService.getVisualStyle(themeCollection),
                                viewport: this.visualDefinition.viewport,
                                animation: {
                                    transitionImmediate: !1
                                },
                                featureSwitches: (0, tslib_es6.__assign)({}, this.featureSwitchService.featureSwitches)
                            }, [ 2, this.visualDefinition.visual.init(initOptions) ]);
                        }
                    });
                });
            }, QnaVisualHostComponent.prototype.getCanEdit = function() {
                return 0 !== this.viewModeState.getMode();
            }, QnaVisualHostComponent.prototype.onModelChanged = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.reInitializeComponent() ];

                          case 1:
                            return _a.sent(), [ 2 ];
                        }
                    });
                });
            }, QnaVisualHostComponent.prototype.checkIsQnaAllowed = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var schema, explorationCapabilities, isQnaAllowedInfo;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            if (this.pauseQueriesService.isReportPaused()) return this.disallowQna = !0, this.disallowQnaDetails = {
                                reason: "qnaNotSupported",
                                otherReasonErrorDetails: (localizationService = this.localizationService, result = {
                                    code: "qnaNotSupported",
                                    fixableError: 0,
                                    hideSeeDetails: !0,
                                    details: {
                                        message: localizationService.get("Qna_NotAllowedForReport_Paused"),
                                        displayableErrorInfo: void 0
                                    },
                                    source: "User"
                                }, result)
                            }, [ 2 ];
                            _a.label = 1;

                          case 1:
                            return _a.trys.push([ 1, 3, , 4 ]), [ 4, this.conceptualSchemaProxy.get(this.dataSources.get()) ];

                          case 2:
                            return schema = _a.sent(), [ 3, 4 ];

                          case 3:
                            return _a.sent(), [ 2 ];

                          case 4:
                            if (explorationCapabilities = this.explorationCapabilitiesService.getCapabilities(), 
                            isQnaAllowedInfo = (0, qna_supportability_util.H)(explorationCapabilities, schema, this.qnaSupportabilityService), 
                            this.disallowQna = !isQnaAllowedInfo.isAllowed, isQnaAllowedInfo.isAllowed) return [ 2 ];
                            switch (isQnaAllowedInfo.disallowedReason) {
                              case "featureDisabledInIE":
                                this.disallowQnaDetails = {
                                    reason: "featureDisabledInIE",
                                    otherReasonErrorDetails: (0, visual_util.ET)(this.localizationService)
                                };
                                break;

                              case "featureDisabledInApp":
                                debug.fF.assertFail("Expect the code of generating a qna visual never be called if app doesn't allow qna feature");
                                break;

                              case "noModel":
                                this.disallowQnaDetails = {
                                    reason: "noModel",
                                    otherReasonErrorDetails: createQnaNotAllowedWithoutModelError(this.localizationService)
                                };
                                break;

                              case "qnaNotSupported":
                                this.disallowQnaDetails = {
                                    reason: "qnaNotSupported",
                                    otherReasonErrorDetails: createQnaNotSupportedError(this.localizationService)
                                };
                                break;

                              case "qnaNotEnabled":
                                this.disallowQnaDetails = {
                                    reason: "qnaNotEnabled",
                                    notEnabledDetails: {
                                        message: this.qnaSupportabilityService.modelHasQnaDisabledMessage,
                                        canEnable: this.qnaSupportabilityService.canAnyUserEnableQna()
                                    }
                                };
                                break;

                              default:
                                debug.fF.assertNever(isQnaAllowedInfo.disallowedReason);
                            }
                            return [ 2 ];
                        }
                        var localizationService, result;
                    });
                });
            }, QnaVisualHostComponent.prototype.onVisualContainerUpdate = function(firstUpdate) {
                return void 0 === firstUpdate && (firstUpdate = !1), (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var schema, visualContainerFilters, objects, updateType, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return this.isLoading ? [ 2 ] : [ 4, this.conceptualSchemaProxy.get(this.dataSources.get()) ];

                          case 1:
                            return schema = _a.sent(), visualContainerFilters = this.filterGenerator.calculateVisualContainerFilter(this.explorationNavigation.getCurrentExploration(), this.explorationNavigation.getCurrentSection(), this.visualContainer, schema), 
                            objects = this.extractObjects(this.visualContainer), updateType = enums.EP.Style | enums.EP.Data, 
                            firstUpdate && (updateType |= enums.EP.Resize), this.qnaHost && (this.qnaHost.update({
                                type: updateType,
                                filters: visualContainerFilters,
                                objects,
                                firstUpdate,
                                viewport: this.currentViewport
                            }), this.visualAuthoringCustomizeOperations.registerCustomizeFrom(this.visualContainer, function(vc) {
                                return _this.customizeConvertFrom(vc);
                            })), this.eventBridge.publishToChannel(services_events.D1A, this.visualContainer), 
                            this.visualReady.emit(), [ 2 ];
                        }
                    });
                });
            }, QnaVisualHostComponent.prototype.extractObjects = function(visualContainer) {
                var objectDefinitions = (0, visualContainerUtils.GQ)(visualContainer);
                objectDefinitions || (objectDefinitions = {}), objectDefinitions = (0, dataViewObjectDefinition1.d9)(objectDefinitions);
                var themeCollection = (0, visual_util.Su)(this.explorationNavigation, this.featureSwitchService), themeObjectDefinitions = this.themeService.getVisualObjects(themeCollection, (0, 
                visualContainerUtilsHelper.s)(visualContainer), void 0, qnaVisual_capabilities.OF.objects, !1);
                (0, dataViewObjectDefinition1.l7)(objectDefinitions, themeObjectDefinitions);
                var namedObjectDefinitions = [];
                for (var key in objectDefinitions) namedObjectDefinitions.push({
                    name: key,
                    properties: objectDefinitions[key][0].properties
                });
                var visualCapabilities = (0, visualContainerUtils.cj)(visualContainer, this.visualPlugin), objectDescriptors = null == visualCapabilities ? void 0 : visualCapabilities.objects;
                if (objectDescriptors) {
                    var visualStyle = this.themeService.getVisualStyle(themeCollection), evalContext = (0, 
                    rules_evalContext.X)(), evaluator = new dataViewObjectEvaluator.Q(this.featureSwitchService.featureSwitches, visualStyle);
                    return (0, dataViewObjectEvaluationUtils.PJ)(evaluator, evalContext, objectDescriptors, namedObjectDefinitions);
                }
            }, QnaVisualHostComponent.prototype.setNewViewport = function(newViewport) {
                var nativeElement = this.qnaVisualElement.nativeElement;
                $(nativeElement).height(newViewport.height), $(nativeElement).width(newViewport.width);
            }, QnaVisualHostComponent.prototype.ensureQnaSupportabilityService = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var _a;
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return this.qnaSupportabilityService ? [ 2 ] : (_a = this, [ 4, this.lazyProvider.get(this.qnaProxyPath || "@powerbi/Qna/qnaweb.module#QnaWebModule", "qnaSupportabilityService") ]);

                          case 1:
                            return _a.qnaSupportabilityService = _b.sent(), [ 2 ];
                        }
                    });
                });
            }, QnaVisualHostComponent.\u0275fac = function(t) {
                return new (t || QnaVisualHostComponent)(fesm2022_core["\u0275\u0275directiveInject"](fesm2022_core.ChangeDetectorRef), fesm2022_core["\u0275\u0275directiveInject"](conceptual_schema_proxy_service.i), fesm2022_core["\u0275\u0275directiveInject"](data_sources_service.D), fesm2022_core["\u0275\u0275directiveInject"](error_service.T), fesm2022_core["\u0275\u0275directiveInject"](event_bridge_service.J), fesm2022_core["\u0275\u0275directiveInject"](exploration_capabilities_service.U), fesm2022_core["\u0275\u0275directiveInject"](exploration_navigation_service.z), fesm2022_core["\u0275\u0275directiveInject"](filter_generator_service.r), fesm2022_core["\u0275\u0275directiveInject"](lazy_provider.E), fesm2022_core["\u0275\u0275directiveInject"](localization_service.o), fesm2022_core["\u0275\u0275directiveInject"](pause_queries_service.F), fesm2022_core["\u0275\u0275directiveInject"](visual_plugin_service.D), fesm2022_core["\u0275\u0275directiveInject"](feature_switch_service.vZ), fesm2022_core["\u0275\u0275directiveInject"](selection_service.z), fesm2022_core["\u0275\u0275directiveInject"](Telemetry.y0), fesm2022_core["\u0275\u0275directiveInject"](theme_service.f), fesm2022_core["\u0275\u0275directiveInject"](view_mode_state_service.kc), fesm2022_core["\u0275\u0275directiveInject"](visual_authoring_service.$8), fesm2022_core["\u0275\u0275directiveInject"](visual_authoring_customize_operations_service.Q), fesm2022_core["\u0275\u0275directiveInject"](promiseFactory.t), fesm2022_core["\u0275\u0275directiveInject"](InjectionTokens_eventAggregationService.x, 8), fesm2022_core["\u0275\u0275directiveInject"](qnaProxyPath.n, 8));
            }, QnaVisualHostComponent.\u0275cmp = fesm2022_core["\u0275\u0275defineComponent"]({
                type: QnaVisualHostComponent,
                selectors: [ [ "qna-visual-host" ] ],
                viewQuery: function(rf, ctx) {
                    if (1 & rf && (fesm2022_core["\u0275\u0275viewQuery"](qna_visual_host_component_c0, 7, fesm2022_core.ElementRef), 
                    fesm2022_core["\u0275\u0275viewQuery"](portal.Pl, 7), fesm2022_core["\u0275\u0275viewQuery"](QnaComponent, 5)), 
                    2 & rf) {
                        var _t = void 0;
                        fesm2022_core["\u0275\u0275queryRefresh"](_t = fesm2022_core["\u0275\u0275loadQuery"]()) && (ctx.qnaVisualElement = _t.first), 
                        fesm2022_core["\u0275\u0275queryRefresh"](_t = fesm2022_core["\u0275\u0275loadQuery"]()) && (ctx.portalOutlet = _t.first), 
                        fesm2022_core["\u0275\u0275queryRefresh"](_t = fesm2022_core["\u0275\u0275loadQuery"]()) && (ctx.qnaHost = _t.first);
                    }
                },
                inputs: {
                    visualDefinition: "visualDefinition",
                    visualContainer: "visualContainer"
                },
                outputs: {
                    visualReady: "visualReady",
                    inputBoxFocused: "inputBoxFocused"
                },
                decls: 5,
                vars: 6,
                consts: [ [ "keyboard-shortcuts", "ctrl-ArrowRight scoped", 1, "visual", "visual-qnaVisual", 3, "ngClass" ], [ "qnaVisual", "" ], [ 4, "ngIf" ], [ "showQna", "" ], [ 4, "ngIf", "ngIfElse" ], [ "class", "qnaNotEnabledContainer", 4, "ngIf" ], [ 3, "errorInfo", "viewport", "showErrorDetails", 4, "ngIf" ], [ 1, "qnaNotEnabledContainer" ], [ 1, "glyphicon", "pbi-glyph-blocked2", "glyph-med" ], [ "tabindex", "0", 1, "message" ], [ "class", "btn primary", 3, "localizeAttr", "localize", "accessible-click", 4, "ngIf" ], [ 1, "btn", "primary", 3, "localizeAttr", "localize", "accessible-click" ], [ 3, "errorInfo", "viewport", "showErrorDetails" ], [ 1, "qnaVisualContent" ], [ 3, "config", "models", "hostServices", "entryPoint", "utteranceUpdated", "convertVisual", "inputBoxFocused" ], [ "qnaHost", "" ] ],
                template: function(rf, ctx) {
                    1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 0, 1), fesm2022_core["\u0275\u0275template"](2, QnaVisualHostComponent_ng_container_2_Template, 2, 2, "ng-container", 2), 
                    fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275template"](3, QnaVisualHostComponent_ng_template_3_Template, 3, 4, "ng-template", null, 3, fesm2022_core["\u0275\u0275templateRefExtractor"])), 
                    2 & rf && (fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction2"](3, qna_visual_host_component_c2, ctx.disallowQna, ctx.supportsCustomPadding)), 
                    fesm2022_core["\u0275\u0275attribute"]("focus-nav-mode", "Group"), fesm2022_core["\u0275\u0275advance"](2), 
                    fesm2022_core["\u0275\u0275property"]("ngIf", !ctx.isLoading));
                },
                dependencies: [ common.NgClass, common.NgIf, localize_directive.X, localize_attr_directive.b, canvas_visual_error_overlay_component.f, accessible_click_directive.t, keyboard_shortcuts_directive.q, QnaComponent ],
                styles: [ ".visual-qnaVisual.hasDisallowQnaContent[_ngcontent-%COMP%]{width:100%!important;height:100%!important}  html[data-focus-source=key] .visual-qnaVisual:focus,   html[data-focus-source=key] .visual-qnaVisual *:focus{outline:var(--focus-two-tone-outline-definition, auto 1px);outline-color:var(--focus-two-tone-outline-color, -webkit-focus-ring-color)}  html[data-focus-source=mouse] .visual-qnaVisual:focus,   html[data-focus-source=mouse] .visual-qnaVisual *:focus,   html[data-focus-source=program] .visual-qnaVisual:focus,   html[data-focus-source=program] .visual-qnaVisual *:focus{outline:none}.visual-qnaVisual[_ngcontent-%COMP%]   .qnaNotEnabledContainer[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;justify-content:center;height:100%;box-sizing:border-box;padding:20px;background-color:var(--fluent-theme-neutral-lighter-color, #F3F2F1);font-size:14px;text-align:center}.visual-qnaVisual[_ngcontent-%COMP%]   .qnaNotEnabledContainer[_ngcontent-%COMP%]   .message[_ngcontent-%COMP%]{margin-top:12px;max-width:300px}.visual-qnaVisual[_ngcontent-%COMP%]   .qnaNotEnabledContainer[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{margin-top:12px}.visual-qnaVisual[_ngcontent-%COMP%]   .qnaVisualContent[_ngcontent-%COMP%]{height:100%}" ]
            }), QnaVisualHostComponent;
        }();
        function createQnaNotAllowedWithoutModelError(localizationService) {
            return {
                code: "qnaNotAllowedWithoutModel",
                fixableError: 0,
                hideSeeDetails: !0,
                details: {
                    message: localizationService.get("Qna_NotAllowedForReport_WithoutModel"),
                    displayableErrorInfo: void 0
                },
                source: "User"
            };
        }
        function createQnaNotSupportedError(localizationService) {
            var seeDetailsErrorInfo = [ {
                errorInfoKey: localizationService.get("VisualContainer_QnaVisual_NotSupportedTitle"),
                errorInfoValue: localizationService.get("VisualContainer_QnaVisual_NotSupportedMessage")
            } ];
            return {
                code: "qnaNotSupported",
                fixableError: 0,
                hideSeeDetails: !1,
                details: {
                    message: localizationService.get("Qna_NotAllowedForReport_QnaNotSupported"),
                    displayableErrorInfo: seeDetailsErrorInfo
                },
                source: "User"
            };
        }
        var template_dialog_payload_service = __webpack_require__(67489), template_dialog_component = __webpack_require__(96777), QnaDiagnosticDialogComponent = function() {
            function QnaDiagnosticDialogComponent(templateDialogPayload) {
                this.templateDialogPayload = templateDialogPayload;
            }
            return QnaDiagnosticDialogComponent.prototype.ngOnInit = function() {
                var _a, errorCode = (_a = this.templateDialogPayload.input).errorCode, errorMessage = _a.errorMessage;
                debug.fF.assertValue(errorCode, "diagnostic dialog error code"), this.diagnosticMessage = (0, 
                formatUtil.g)(errorMessage) ? errorCode : "".concat(errorCode, " ").concat(errorMessage);
            }, QnaDiagnosticDialogComponent.\u0275fac = function(t) {
                return new (t || QnaDiagnosticDialogComponent)(fesm2022_core["\u0275\u0275directiveInject"](template_dialog_payload_service.x));
            }, QnaDiagnosticDialogComponent.\u0275cmp = fesm2022_core["\u0275\u0275defineComponent"]({
                type: QnaDiagnosticDialogComponent,
                selectors: [ [ "qna-diagnostic-dialog" ] ],
                features: [ fesm2022_core["\u0275\u0275ProvidersFeature"]([ template_dialog_payload_service.x ]) ],
                decls: 3,
                vars: 1,
                consts: [ [ 2, "min-width", "400px" ] ],
                template: function(rf, ctx) {
                    1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "template-dialog")(1, "p", 0), 
                    fesm2022_core["\u0275\u0275text"](2), fesm2022_core["\u0275\u0275elementEnd"]()()), 
                    2 & rf && (fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275textInterpolate"](ctx.diagnosticMessage));
                },
                dependencies: [ template_dialog_component.J ],
                encapsulation: 2,
                changeDetection: 0
            }), QnaDiagnosticDialogComponent;
        }(), token = __webpack_require__(92060), copilot_interactive_requirements_service = __webpack_require__(96278), injection_tokens = __webpack_require__(14714), data_model_service_token = __webpack_require__(68082), promise = __webpack_require__(65966), dialog_service = __webpack_require__(58938), improve_lsdl_util = __webpack_require__(34100), lsdl_document_model = __webpack_require__(55461), banner_tree_base_handler = __webpack_require__(10693), banner_handler_util = __webpack_require__(87413), ImproveLsdlPhrasingsSupportabilityHandler = function(_super) {
            function ImproveLsdlPhrasingsSupportabilityHandler(featureSwitchService, conceptualSchemaProxy, dataModelService, dataSourcesService, explorationCapabilitiesService, qnaSupportabilityService, deferredCompletion) {
                var _this = _super.call(this, deferredCompletion) || this;
                return _this.featureSwitchService = featureSwitchService, _this.conceptualSchemaProxy = conceptualSchemaProxy, 
                _this.dataModelService = dataModelService, _this.dataSourcesService = dataSourcesService, 
                _this.explorationCapabilitiesService = explorationCapabilitiesService, _this.qnaSupportabilityService = qnaSupportabilityService, 
                _this;
            }
            return (0, tslib_es6.__extends)(ImproveLsdlPhrasingsSupportabilityHandler, _super), 
            ImproveLsdlPhrasingsSupportabilityHandler.prototype.execute = function() {
                var _a;
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var lsdl, lsdlDocumentModel, requestableAgents;
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return [ 4, this.featureSwitchService.getFeatureSwitches() ];

                          case 1:
                            return _b.sent().qnaCopilotPhrasings ? [ 4, this.dataModelService.getLinguisticSchema() ] : (this.signalCompletion(), 
                            [ 2, this.getDeferredPromise() ]);

                          case 2:
                            return lsdl = _b.sent(), [ 4, (0, improve_lsdl_util.NP)(this.conceptualSchemaProxy, this.dataSourcesService, this.explorationCapabilitiesService, this.qnaSupportabilityService, lsdl) ];

                          case 3:
                            return _b.sent() ? (lsdlDocumentModel = new lsdl_document_model.X(lsdl), requestableAgents = (0, 
                            banner_handler_util.TD)("oaiPhrasings", lsdlDocumentModel), _.includes(requestableAgents, "PowerBI.AzureOpenAIPhrasings") && this.doneOAISynonyms(lsdlDocumentModel) && this.hasAuthoredTerm(lsdlDocumentModel) ? (null === (_a = this.next) || void 0 === _a || _a.execute(requestableAgents), 
                            [ 2, this.getDeferredPromise() ]) : (this.signalCompletion(), [ 2, this.getDeferredPromise() ])) : (this.signalCompletion(), 
                            [ 2, this.getDeferredPromise() ]);
                        }
                    });
                });
            }, ImproveLsdlPhrasingsSupportabilityHandler.prototype.doneOAISynonyms = function(lsdlDocumentModel) {
                var requestableAgents = (0, banner_handler_util.TD)("externalSynonyms", lsdlDocumentModel);
                return !_.includes(requestableAgents, "PowerBI.AzureOpenAISynonyms");
            }, ImproveLsdlPhrasingsSupportabilityHandler.prototype.hasAuthoredTerm = function(lsdlDocumentModel) {
                var entities = lsdlDocumentModel.getEntities();
                return _.some(entities, function(entity) {
                    return _.some(entity.terms, function(term) {
                        return term.isAuthored;
                    });
                });
            }, ImproveLsdlPhrasingsSupportabilityHandler;
        }(banner_tree_base_handler.R), ImproveLsdlSynonymsSupportabilityHandler = function(_super) {
            function ImproveLsdlSynonymsSupportabilityHandler(conceptualSchemaProxy, dataModelService, dataSourcesService, explorationCapabilitiesService, qnaSupportabilityService, deferredCompletion) {
                var _this = _super.call(this, deferredCompletion) || this;
                return _this.conceptualSchemaProxy = conceptualSchemaProxy, _this.dataModelService = dataModelService, 
                _this.dataSourcesService = dataSourcesService, _this.explorationCapabilitiesService = explorationCapabilitiesService, 
                _this.qnaSupportabilityService = qnaSupportabilityService, _this;
            }
            return (0, tslib_es6.__extends)(ImproveLsdlSynonymsSupportabilityHandler, _super), 
            ImproveLsdlSynonymsSupportabilityHandler.prototype.execute = function() {
                var _a;
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var lsdl, lsdlDocumentModel, requestableAgents;
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return [ 4, this.dataModelService.getLinguisticSchema() ];

                          case 1:
                            return lsdl = _b.sent(), [ 4, (0, improve_lsdl_util.NP)(this.conceptualSchemaProxy, this.dataSourcesService, this.explorationCapabilitiesService, this.qnaSupportabilityService, lsdl) ];

                          case 2:
                            return _b.sent() ? (lsdlDocumentModel = new lsdl_document_model.X(lsdl), requestableAgents = (0, 
                            banner_handler_util.TD)("externalSynonyms", lsdlDocumentModel), _.isEmpty(requestableAgents) ? this.signalCompletion() : null === (_a = this.next) || void 0 === _a || _a.execute(requestableAgents), 
                            [ 2, this.getDeferredPromise() ]) : (this.signalCompletion(), [ 2, this.getDeferredPromise() ]);
                        }
                    });
                });
            }, ImproveLsdlSynonymsSupportabilityHandler;
        }(banner_tree_base_handler.R), qna_banner_service = __webpack_require__(40978), LoginHandler = function(_super) {
            function LoginHandler(accountService, dataSourcesService, explorationNavigationService, qnaBannerService, qnaToolingLauncher, localizationService, improveLsdlBackgroundTelemetry, target, deferredCompletion) {
                var _this = _super.call(this, deferredCompletion) || this;
                return _this.accountService = accountService, _this.dataSourcesService = dataSourcesService, 
                _this.explorationNavigationService = explorationNavigationService, _this.qnaBannerService = qnaBannerService, 
                _this.qnaToolingLauncher = qnaToolingLauncher, _this.localizationService = localizationService, 
                _this.improveLsdlBackgroundTelemetry = improveLsdlBackgroundTelemetry, _this.target = target, 
                _this;
            }
            return (0, tslib_es6.__extends)(LoginHandler, _super), LoginHandler.prototype.execute = function(requestableAgents) {
                var _a;
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var loginMessage, loginBannerMessage, signInText, addYourOwnText, getLoginHandler, _b, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_c) {
                        switch (_c.label) {
                          case 0:
                            return [ 4, this.accountService.isSignedInAsync() ];

                          case 1:
                            return _c.sent() ? (this.clearBannerContent(), null === (_a = this.next) || void 0 === _a || _a.execute(requestableAgents), 
                            [ 2, this.getDeferredPromise() ]) : (loginMessage = this.localizationService.get("Synonyms" === this.target ? "Qna_ImproveLsdl_Synonyms_LoginMessage" : "Qna_ImproveLsdl_Phrasings_LoginMessage"), 
                            loginBannerMessage = {
                                emphasis: this.localizationService.get("Qna_ImproveLsdl_Login"),
                                text: loginMessage
                            }, signInText = this.localizationService.get("SignInButton"), addYourOwnText = this.localizationService.get("Synonyms" === this.target ? "Qna_ImproveLsdl_Synonyms_AddYourOwnButton" : "Qna_ImproveLsdl_Phrasings_AddYourOwnButton"), 
                            getLoginHandler = function(surface) {
                                _this.improveLsdlBackgroundTelemetry.logSigninEvent({
                                    surface,
                                    type: _this.target,
                                    action: "Login"
                                }), _this.accountService.trySignInAsync();
                            }, this.qnaBannerService.setContent(((_b = {}).Visual = {
                                showBanners: !0,
                                banners: [ {
                                    id: Utility.b$.generateGuid(),
                                    message: loginBannerMessage,
                                    isVisible: !0,
                                    allowDismiss: !0,
                                    bannerType: "copilot",
                                    actions: [ {
                                        id: "login",
                                        text: signInText,
                                        actionAppearance: "primary"
                                    }, {
                                        id: "launchTooling",
                                        text: addYourOwnText,
                                        actionAppearance: "secondary"
                                    } ]
                                } ],
                                actionHandlers: new Map([ [ "login", function() {
                                    return getLoginHandler("Visual");
                                } ], [ "launchTooling", function() {
                                    _this.improveLsdlBackgroundTelemetry.logSigninEvent({
                                        surface: "Visual",
                                        type: _this.target,
                                        action: "AddYourOwn"
                                    }), _this.qnaToolingLauncher.showToolingDialog({
                                        dataSources: _this.dataSourcesService.get(),
                                        exploration: _this.explorationNavigationService.getCurrentExploration(),
                                        entryPoint: "VisualBanner",
                                        entryContentType: "Synonyms" === _this.target ? "bulkEditing" : "managePhrasings"
                                    });
                                } ] ])
                            }, _b.ToolingHome = {
                                showBanners: !0,
                                banners: [ {
                                    id: Utility.b$.generateGuid(),
                                    message: loginBannerMessage,
                                    isVisible: !0,
                                    allowDismiss: !0,
                                    bannerType: "copilot",
                                    actions: [ {
                                        id: "login",
                                        text: signInText,
                                        actionAppearance: "primary"
                                    }, {
                                        id: "Synonyms" === this.target ? "switchToSynonymsPage" : "switchToPhrasingsPage",
                                        text: addYourOwnText,
                                        actionAppearance: "secondary"
                                    } ]
                                } ],
                                actionHandlers: new Map([ [ "login", function() {
                                    return getLoginHandler("ToolingHome");
                                } ], [ "switchToSynonymsPage", void 0 ], [ "switchToPhrasingsPage", void 0 ] ])
                            }, _b.ToolingSynonyms = "Synonyms" === this.target ? {
                                showBanners: !0,
                                banners: [ {
                                    id: Utility.b$.generateGuid(),
                                    message: loginBannerMessage,
                                    isVisible: !0,
                                    allowDismiss: !0,
                                    bannerType: "copilot",
                                    actions: [ {
                                        id: "login",
                                        text: signInText,
                                        actionAppearance: "primary"
                                    } ]
                                } ],
                                actionHandlers: new Map([ [ "login", function() {
                                    return getLoginHandler("ToolingSynonyms");
                                } ] ])
                            } : qna_banner_service.me, _b.ToolingPhrasings = "Phrasings" === this.target ? {
                                showBanners: !0,
                                banners: [ {
                                    id: Utility.b$.generateGuid(),
                                    message: loginBannerMessage,
                                    isVisible: !0,
                                    allowDismiss: !0,
                                    bannerType: "copilot",
                                    actions: [ {
                                        id: "login",
                                        text: signInText,
                                        actionAppearance: "primary"
                                    } ]
                                } ],
                                actionHandlers: new Map([ [ "login", function() {
                                    return getLoginHandler("ToolingPhrasings");
                                } ] ])
                            } : qna_banner_service.me, _b)), [ 2, this.getDeferredPromise() ]);
                        }
                    });
                });
            }, LoginHandler.prototype.clearBannerContent = function() {
                var _a;
                this.qnaBannerService.setContent(((_a = {}).Visual = qna_banner_service.me, _a.ToolingHome = qna_banner_service.me, 
                _a.ToolingSynonyms = qna_banner_service.me, _a.ToolingPhrasings = qna_banner_service.me, 
                _a));
            }, LoginHandler;
        }(banner_tree_base_handler.R), modelAuthoringService = __webpack_require__(53439), src = __webpack_require__(62345), banner_constants = __webpack_require__(67412), improve_lsdl_result_handler = __webpack_require__(85726), FuzzyMatchingWorkspacePickerHandler = function(_super) {
            function FuzzyMatchingWorkspacePickerHandler(copilotRequirementsService, localizationService, modelAuthoringService, qnaBannerService, deferredCompletion) {
                var _this = _super.call(this, deferredCompletion) || this;
                return _this.copilotRequirementsService = copilotRequirementsService, _this.localizationService = localizationService, 
                _this.modelAuthoringService = modelAuthoringService, _this.qnaBannerService = qnaBannerService, 
                _this;
            }
            return (0, tslib_es6.__extends)(FuzzyMatchingWorkspacePickerHandler, _super), FuzzyMatchingWorkspacePickerHandler.prototype.execute = function(lsdl) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var _a, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        return this.qnaBannerService.setContent(((_a = {}).Visual = {
                            showBanners: !0,
                            banners: [ {
                                id: Utility.b$.generateGuid(),
                                message: {
                                    text: _this.localizationService.get("Qna_Enhance_WithCopilot_FromSelectWorkspace_Disclaminer"),
                                    emphasis: _this.localizationService.get("Qna_Enhance_WithCopilot")
                                },
                                link: {
                                    href: banner_constants.y,
                                    text: _this.localizationService.get("LearnMore")
                                },
                                isVisible: !0,
                                allowDismiss: !0,
                                bannerType: "copilot",
                                actions: [ {
                                    id: "pickWorkspace",
                                    text: _this.localizationService.get("WorkspacesSelect_Label_Text"),
                                    actionAppearance: "primary"
                                } ]
                            } ],
                            onDismissAllBanners: function() {
                                return _this.signalCompletion();
                            },
                            actionHandlers: new Map([ [ "pickWorkspace", _this.pickWorkspace(lsdl) ] ])
                        }, _a.ToolingHome = qna_banner_service.me, _a.ToolingSynonyms = qna_banner_service.me, 
                        _a.ToolingPhrasings = qna_banner_service.me, _a)), [ 2, this.getDeferredPromise() ];
                    });
                });
            }, FuzzyMatchingWorkspacePickerHandler.prototype.pickWorkspace = function(lsdl) {
                var _this = this;
                return function() {
                    return (0, tslib_es6.__awaiter)(_this, void 0, void 0, function() {
                        var copilotReq, lsdlCopy, lsdlDocumentModelNew, exception_1, errorBanners, _a;
                        return (0, tslib_es6.__generator)(this, function(_b) {
                            switch (_b.label) {
                              case 0:
                                return [ 4, this.copilotRequirementsService.validateRequirements({
                                    showLoadingDialog: !1
                                }) ];

                              case 1:
                                if (!(copilotReq = _b.sent()).copilotStatus.enabled || _.isEmpty(copilotReq.copilotRequirements.workspaceId)) return [ 3, 6 ];
                                if (lsdlCopy = JSON.parse(JSON.stringify(lsdl)), (lsdlDocumentModelNew = new lsdl_document_model.X(lsdlCopy)).setRuntimeUnderstanding("Full"), 
                                !lsdlDocumentModelNew.commit()) return [ 3, 5 ];
                                _b.label = 2;

                              case 2:
                                return _b.trys.push([ 2, 4, , 5 ]), [ 4, this.modelAuthoringService.apply({
                                    changes: [ {
                                        updateLinguisticMetadata: {
                                            linguisticSchemaJson: lsdlDocumentModelNew.toJsonString()
                                        }
                                    } ]
                                }) ];

                              case 3:
                                return _b.sent(), [ 3, 5 ];

                              case 4:
                                return exception_1 = _b.sent(), debug.fF.assertFail(exception_1), [ 3, 5 ];

                              case 5:
                                return this.qnaBannerService.setContent(((_a = {}).Visual = qna_banner_service.me, 
                                _a.ToolingHome = qna_banner_service.me, _a.ToolingSynonyms = qna_banner_service.me, 
                                _a.ToolingPhrasings = qna_banner_service.me, _a)), this.signalCompletion(), [ 3, 7 ];

                              case 6:
                                if (copilotReq.copilotStatus.reason === src.Hm.NoWorkspaceId) return [ 2 ];
                                errorBanners = improve_lsdl_result_handler.G.getErrorBanners([ {
                                    category: "powerbi",
                                    code: "UnsupportedUser"
                                } ], this.localizationService, "fuzzyMatchWorkspace"), this.qnaBannerService.updateContent("Visual", {
                                    showBanners: !0,
                                    banners: errorBanners
                                }), _b.label = 7;

                              case 7:
                                return [ 2 ];
                            }
                        });
                    });
                };
            }, FuzzyMatchingWorkspacePickerHandler;
        }(banner_tree_base_handler.R), FuzzyMatchingWorkspacePickerSupportabilityHandler = function(_super) {
            function FuzzyMatchingWorkspacePickerSupportabilityHandler(qnaProxyPath, conceptualSchemaProxy, copilotCapabilityService, dataModelService, dataSourcesService, explorationCapabilitiesService, featureSwitchService, qnaSupportabilityService, deferredCompletion) {
                var _this = _super.call(this, deferredCompletion) || this;
                return _this.qnaProxyPath = qnaProxyPath, _this.conceptualSchemaProxy = conceptualSchemaProxy, 
                _this.copilotCapabilityService = copilotCapabilityService, _this.dataModelService = dataModelService, 
                _this.dataSourcesService = dataSourcesService, _this.explorationCapabilitiesService = explorationCapabilitiesService, 
                _this.featureSwitchService = featureSwitchService, _this.qnaSupportabilityService = qnaSupportabilityService, 
                _this;
            }
            return (0, tslib_es6.__extends)(FuzzyMatchingWorkspacePickerSupportabilityHandler, _super), 
            FuzzyMatchingWorkspacePickerSupportabilityHandler.prototype.execute = function() {
                var _a, _b;
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var featureSwitches, schema, capabilities, enablementStatus, noAppropriateWorkspace, lsdl, runtimeUnderstanding, fuzzyMatchingAllowed;
                    return (0, tslib_es6.__generator)(this, function(_c) {
                        switch (_c.label) {
                          case 0:
                            return "@powerbi/Qna/qnadesktop.module#QnaDesktopModule" !== this.qnaProxyPath ? (this.signalCompletion(), 
                            [ 2, this.getDeferredPromise() ]) : [ 4, this.featureSwitchService.getFeatureSwitches() ];

                          case 1:
                            return featureSwitches = _c.sent(), (0, improve_lsdl_util.J8)(featureSwitches) ? [ 4, this.conceptualSchemaProxy.get(this.dataSourcesService.get()) ] : (this.signalCompletion(), 
                            [ 2, this.getDeferredPromise() ]);

                          case 2:
                            return schema = _c.sent(), capabilities = this.explorationCapabilitiesService.getCapabilities(), 
                            (0, qna_supportability_util.H)(capabilities, schema, this.qnaSupportabilityService).isAllowed && this.qnaSupportabilityService.allowsLinguisticSchemaEdit() ? [ 4, this.copilotCapabilityService.getCopilotEnablementStatus() ] : (this.signalCompletion(), 
                            [ 2, this.getDeferredPromise() ]);

                          case 3:
                            return enablementStatus = _c.sent(), noAppropriateWorkspace = _.includes([ src.Hm.NoWorkspaceId, src.Hm.WorkspaceNotFound, src.Hm.UserNotSignedIn ], enablementStatus.copilotStatus.reason), 
                            [ 4, this.dataModelService.getLinguisticSchema() ];

                          case 4:
                            return lsdl = _c.sent(), runtimeUnderstanding = null === (_a = lsdl.DynamicImprovement) || void 0 === _a ? void 0 : _a.RuntimeUnderstanding, 
                            fuzzyMatchingAllowed = null == runtimeUnderstanding || "Default" === runtimeUnderstanding || "Full" === runtimeUnderstanding, 
                            noAppropriateWorkspace && fuzzyMatchingAllowed ? [ 2, null === (_b = this.next) || void 0 === _b ? void 0 : _b.execute(lsdl) ] : [ 2 ];
                        }
                    });
                });
            }, FuzzyMatchingWorkspacePickerSupportabilityHandler;
        }(banner_tree_base_handler.R), certified_events_service = __webpack_require__(40682), ImproveLsdlBackgroundTelemetryService = function() {
            function ImproveLsdlBackgroundTelemetryService(certifiedEventsService, telemetryService) {
                this.certifiedEventsService = certifiedEventsService, this.telemetryService = telemetryService, 
                this.featureName = "Qna - Improve LSDL Feature";
            }
            return ImproveLsdlBackgroundTelemetryService.prototype.logSigninEvent = function(args) {
                this.telemetryService.logEvent(events.AM, args), this.logCertifiedEvent(events.gk, (0, 
                tslib_es6.__assign)({}, args));
            }, ImproveLsdlBackgroundTelemetryService.prototype.logPromptEvent = function(args) {
                this.telemetryService.logEvent(events.UV, args), this.logCertifiedEvent(events.Zg, (0, 
                tslib_es6.__assign)({}, args));
            }, ImproveLsdlBackgroundTelemetryService.prototype.logResultEvent = function(args) {
                this.telemetryService.logEvent(events.S4, args), this.logCertifiedEvent(events.F2, (0, 
                tslib_es6.__assign)({}, args));
            }, ImproveLsdlBackgroundTelemetryService.prototype.logCertifiedEvent = function(activityName, activityAttributes) {
                this.certifiedEventsService.logStandardizedFeatureEvent({
                    correlationId: this.telemetryService.root.id,
                    activityName,
                    activityAttributes,
                    resultCode: "",
                    featureName: this.featureName,
                    activityStatus: "Succeeded"
                }, {
                    normalizeHierarchicalSeparators: !0
                });
            }, ImproveLsdlBackgroundTelemetryService.\u0275fac = function(t) {
                return new (t || ImproveLsdlBackgroundTelemetryService)(fesm2022_core["\u0275\u0275inject"](certified_events_service.l), fesm2022_core["\u0275\u0275inject"](Telemetry.y0));
            }, ImproveLsdlBackgroundTelemetryService.\u0275prov = fesm2022_core["\u0275\u0275defineInjectable"]({
                token: ImproveLsdlBackgroundTelemetryService,
                factory: ImproveLsdlBackgroundTelemetryService.\u0275fac
            }), ImproveLsdlBackgroundTelemetryService;
        }(), ImproveLsdlExecutionHandler = function(_super) {
            function ImproveLsdlExecutionHandler(improveLsdlService, dataModelService, localizationService, qnaBannerService, target, deferredCompletion) {
                var _this = _super.call(this, deferredCompletion) || this;
                return _this.improveLsdlService = improveLsdlService, _this.dataModelService = dataModelService, 
                _this.localizationService = localizationService, _this.qnaBannerService = qnaBannerService, 
                _this.target = target, _this;
            }
            return (0, tslib_es6.__extends)(ImproveLsdlExecutionHandler, _super), ImproveLsdlExecutionHandler.prototype.execute = function(_a) {
                var requestedAgents = _a.requestedAgents, copilotWorkspaceId = _a.copilotWorkspaceId;
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var lsdl, lsdlDocumentModel, response;
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return _.isEmpty(requestedAgents) ? (debug.fF.assertFail("requestable agents should be defined and non empty"), 
                            this.signalCompletion(), [ 2, this.getDeferredPromise() ]) : (0, improve_lsdl_util.J_)(requestedAgents) && _.isEmpty(copilotWorkspaceId) ? (debug.fF.assertFail("copilotWorkspaceId should be defined for copilot agents"), 
                            this.signalCompletion(), [ 2, this.getDeferredPromise() ]) : [ 4, this.dataModelService.getLinguisticSchema() ];

                          case 1:
                            return lsdl = _b.sent(), lsdlDocumentModel = new lsdl_document_model.X(lsdl), this.setLoadingBanner(requestedAgents), 
                            [ 4, this.improveLsdlService.improveLinguisticSchema({
                                requestedAgents,
                                requestPriority: "Background",
                                lsdlJson: lsdlDocumentModel.toJsonString(),
                                copilotWorkspaceId
                            }) ];

                          case 2:
                            return response = _b.sent(), [ 4, this.next.execute({
                                response,
                                requestedAgents
                            }) ];

                          case 3:
                            return _b.sent(), [ 2, this.getDeferredPromise() ];
                        }
                    });
                });
            }, ImproveLsdlExecutionHandler.prototype.setLoadingBanner = function(requestedAgents) {
                var _a, _this = this, loadingBannerMessage = (0, banner_handler_util.QH)(requestedAgents, this.localizationService, this.target), cancelHandler = function(bannerId, surface) {
                    _this.improveLsdlService.cancelImproveLinguisticSchema(), _this.qnaBannerService.dismissBanner(surface, bannerId);
                }, loadingSuggestionsText = this.localizationService.get("Synonyms" === this.target ? "Qna_ImproveLsdl_Loading_Synonyms" : "Qna_ImproveLsdl_Loading_Relationships"), cancelText = this.localizationService.get("PBI_Button_Label_Cancel"), bannerType = (0, 
                improve_lsdl_util.J_)(requestedAgents) ? "copilot" : "info", visualBannerId = Utility.b$.generateGuid(), toolingHomeBannerId = Utility.b$.generateGuid(), toolingSpecificBannerId = Utility.b$.generateGuid(), toolingSpecificContent = {
                    showBanners: !0,
                    banners: [ {
                        id: toolingSpecificBannerId,
                        message: loadingBannerMessage,
                        isVisible: !0,
                        allowDismiss: !1,
                        bannerType,
                        actions: [ {
                            id: "noop",
                            text: loadingSuggestionsText,
                            actionAppearance: "loading"
                        }, {
                            id: "cancelImproveLsdl",
                            text: cancelText,
                            actionAppearance: "secondary"
                        } ]
                    } ],
                    actionHandlers: new Map([ [ "noop", void 0 ], [ "cancelImproveLsdl", "Synonyms" === this.target ? function() {
                        return cancelHandler(toolingSpecificBannerId, "ToolingSynonyms");
                    } : function() {
                        return cancelHandler(toolingSpecificBannerId, "ToolingPhrasings");
                    } ] ])
                };
                this.qnaBannerService.setContent(((_a = {}).Visual = {
                    showBanners: !0,
                    banners: [ {
                        id: visualBannerId,
                        message: loadingBannerMessage,
                        link: {
                            href: banner_constants.c,
                            text: this.localizationService.get("CopilotInline_PreviewLink")
                        },
                        isVisible: !0,
                        allowDismiss: !0,
                        bannerType,
                        actions: [ {
                            id: "noop",
                            text: loadingSuggestionsText,
                            actionAppearance: "loading"
                        }, {
                            id: "cancelImproveLsdl",
                            text: cancelText,
                            actionAppearance: "secondary"
                        } ]
                    } ],
                    actionHandlers: new Map([ [ "noop", void 0 ], [ "cancelImproveLsdl", function() {
                        return cancelHandler(visualBannerId, "Visual");
                    } ] ])
                }, _a.ToolingHome = {
                    showBanners: !0,
                    banners: [ {
                        id: toolingHomeBannerId,
                        message: loadingBannerMessage,
                        isVisible: !0,
                        allowDismiss: !0,
                        bannerType,
                        actions: [ {
                            id: "noop",
                            text: loadingSuggestionsText,
                            actionAppearance: "loading"
                        }, {
                            id: "cancelImproveLsdl",
                            text: cancelText,
                            actionAppearance: "secondary"
                        } ]
                    } ],
                    actionHandlers: new Map([ [ "noop", void 0 ], [ "cancelImproveLsdl", function() {
                        return cancelHandler(toolingHomeBannerId, "ToolingHome");
                    } ] ])
                }, _a.ToolingSynonyms = "Synonyms" === this.target ? toolingSpecificContent : qna_banner_service.me, 
                _a.ToolingPhrasings = "Phrasings" === this.target ? toolingSpecificContent : qna_banner_service.me, 
                _a));
            }, ImproveLsdlExecutionHandler;
        }(banner_tree_base_handler.R), ImproveLsdlPromptHandler = function(_super) {
            function ImproveLsdlPromptHandler(qnaBannerService, localizationService, improveLsdlBackgroundTelemetry, copilotRequirementsService, target, deferredCompletion) {
                var _this = _super.call(this, deferredCompletion) || this;
                return _this.qnaBannerService = qnaBannerService, _this.localizationService = localizationService, 
                _this.improveLsdlBackgroundTelemetry = improveLsdlBackgroundTelemetry, _this.copilotRequirementsService = copilotRequirementsService, 
                _this.target = target, _this.underExecution = !1, _this;
            }
            return (0, tslib_es6.__extends)(ImproveLsdlPromptHandler, _super), ImproveLsdlPromptHandler.prototype.execute = function(requestableAgents) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var generateActionId, getBannerContent, _a, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        return debug.fF.assertNonEmpty(requestableAgents, "requestableAgents"), generateActionId = "Synonyms" === this.target ? "generateSynonyms" : "generatePhrasings", 
                        this.qnaBannerService.setContent(((_a = {}).Visual = (getBannerContent = function(surface) {
                            return {
                                showBanners: !0,
                                banners: [ {
                                    id: Utility.b$.generateGuid(),
                                    message: (0, banner_handler_util.QH)(requestableAgents, _this.localizationService, _this.target),
                                    link: {
                                        href: banner_constants.c,
                                        text: _this.localizationService.get("CopilotInline_PreviewLink")
                                    },
                                    isVisible: !0,
                                    allowDismiss: !0,
                                    bannerType: (0, improve_lsdl_util.J_)(requestableAgents) ? "copilot" : "info",
                                    actions: [ {
                                        id: generateActionId,
                                        text: _this.localizationService.get("Synonyms" === _this.target ? "Add_Synonyms" : "Add_Relationships"),
                                        actionAppearance: "primary"
                                    } ]
                                } ],
                                actionHandlers: new Map([ [ generateActionId, _this.getGenerationHandler(requestableAgents, _this.target, surface) ] ])
                            };
                        })("Visual"), _a.ToolingHome = getBannerContent("ToolingHome"), _a.ToolingSynonyms = "Synonyms" === this.target ? getBannerContent("ToolingSynonyms") : qna_banner_service.me, 
                        _a.ToolingPhrasings = "Phrasings" === this.target ? getBannerContent("ToolingPhrasings") : qna_banner_service.me, 
                        _a)), [ 2, this.getDeferredPromise() ];
                    });
                });
            }, ImproveLsdlPromptHandler.prototype.getGenerationHandler = function(requestedAgents, target, surface) {
                var _this = this;
                return function() {
                    return (0, tslib_es6.__awaiter)(_this, void 0, void 0, function() {
                        var copilotReq, nonCopilotAgents, errorBanners;
                        return (0, tslib_es6.__generator)(this, function(_a) {
                            switch (_a.label) {
                              case 0:
                                return this.underExecution ? [ 2 ] : (this.underExecution = !0, this.improveLsdlBackgroundTelemetry.logPromptEvent({
                                    surface,
                                    type: target
                                }), (0, improve_lsdl_util.J_)(requestedAgents) ? [ 3, 2 ] : [ 4, this.next.execute({
                                    requestedAgents
                                }) ]);

                              case 1:
                                return _a.sent(), this.underExecution = !1, [ 2 ];

                              case 2:
                                return [ 4, this.copilotRequirementsService.validateRequirements({
                                    showLoadingDialog: !1
                                }) ];

                              case 3:
                                return !(copilotReq = _a.sent()).copilotStatus.enabled || _.isEmpty(copilotReq.copilotRequirements.workspaceId) ? [ 3, 5 ] : [ 4, this.next.execute({
                                    requestedAgents,
                                    copilotWorkspaceId: copilotReq.copilotRequirements.workspaceId
                                }) ];

                              case 4:
                                return _a.sent(), this.underExecution = !1, [ 2 ];

                              case 5:
                                if (copilotReq.copilotStatus.reason === src.Hm.NoWorkspaceId) return this.underExecution = !1, 
                                [ 2 ];
                                _a.label = 6;

                              case 6:
                                return nonCopilotAgents = _.filter(requestedAgents, function(a) {
                                    return "PowerBI.AzureOpenAISynonyms" !== a && "PowerBI.AzureOpenAIPhrasings" !== a;
                                }), _.isEmpty(nonCopilotAgents) ? [ 3, 8 ] : [ 4, this.next.execute({
                                    requestedAgents: nonCopilotAgents
                                }) ];

                              case 7:
                                return _a.sent(), this.underExecution = !1, [ 2 ];

                              case 8:
                                return errorBanners = improve_lsdl_result_handler.G.getErrorBanners([ {
                                    category: "powerbi",
                                    code: copilotReq.copilotStatus.reason === src.Hm.DisabledForCrossGeo ? "DisallowedForCrossGeo" : "UnsupportedUser",
                                    agent: "Synonyms" === target ? "PowerBI.AzureOpenAISynonyms" : "PowerBI.AzureOpenAIPhrasings"
                                } ], this.localizationService, target), this.qnaBannerService.updateContent(surface, {
                                    showBanners: !0,
                                    banners: errorBanners
                                }), this.underExecution = !1, [ 2 ];
                            }
                        });
                    });
                };
            }, ImproveLsdlPromptHandler;
        }(banner_tree_base_handler.R), ImproveLsdlBackgroundServiceProvider = {
            provide: "improveLsdlBackgroundService",
            useFactory: function(conceptualSchemaProxy, dataSourcesService, lazyScoped, lazyProvider, localizationService, explorationCapabilities, explorationNavigation, featureSwitchService, qnaProxyPath, dialogService, improveLsdlBackgroundTelemetry, copilotInteractiveRequirementsService, copilotCapabilityService, accountService, qnaToolingDialogLauncher, dataModelService, modelAuthoringService) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var qnaSupportabilityService;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, lazyProvider.get(qnaProxyPath || "@powerbi/Qna/qnadesktop.module#QnaDesktopModule", "qnaSupportabilityService") ];

                          case 1:
                            return qnaSupportabilityService = _a.sent(), debug.fF.assertValue(qnaSupportabilityService, "qna supportability service should be provided"), 
                            [ 2, new ImproveLsdlBackgroundService(conceptualSchemaProxy, dataSourcesService, lazyScoped, localizationService, explorationCapabilities, explorationNavigation, featureSwitchService, qnaSupportabilityService, dialogService, improveLsdlBackgroundTelemetry, copilotInteractiveRequirementsService, copilotCapabilityService, qnaProxyPath, accountService, qnaToolingDialogLauncher, dataModelService, modelAuthoringService) ];
                        }
                    });
                });
            },
            deps: [ conceptual_schema_proxy_service.i, data_sources_service.D, lazy_scoped_provider.H, lazy_provider.E, localization_service.o, exploration_capabilities_service.U, exploration_navigation_service.z, feature_switch_service.vZ, qnaProxyPath.n, dialog_service.x, ImproveLsdlBackgroundTelemetryService, copilot_interactive_requirements_service.g, injection_tokens.I_, token.F, qnaToolingDialogLauncher.b, data_model_service_token.n, modelAuthoringService.S, injection_tokens.Dt, injection_tokens.vb ]
        }, ImproveLsdlBackgroundService = function() {
            function ImproveLsdlBackgroundService(conceptualSchemaProxy, dataSourcesService, lazyScoped, localizationService, explorationCapabilities, explorationNavigation, featureSwitchService, qnaSupportabilityService, dialogService, improveLsdlBackgroundTelemetry, copilotRequirementsService, copilotCapabilityService, qnaProxyPath, accountService, qnaToolingDialogLauncher, dataModelService, modelAuthoringService) {
                var _this = this;
                this.conceptualSchemaProxy = conceptualSchemaProxy, this.dataSourcesService = dataSourcesService, 
                this.lazyScoped = lazyScoped, this.localizationService = localizationService, this.explorationCapabilities = explorationCapabilities, 
                this.explorationNavigation = explorationNavigation, this.featureSwitchService = featureSwitchService, 
                this.qnaSupportabilityService = qnaSupportabilityService, this.dialogService = dialogService, 
                this.improveLsdlBackgroundTelemetry = improveLsdlBackgroundTelemetry, this.copilotRequirementsService = copilotRequirementsService, 
                this.copilotCapabilityService = copilotCapabilityService, this.qnaProxyPath = qnaProxyPath, 
                this.accountService = accountService, this.qnaToolingDialogLauncher = qnaToolingDialogLauncher, 
                this.dataModelService = dataModelService, this.modelAuthoringService = modelAuthoringService, 
                this.manualImproveLsdlTriggered$ = new Subject.xQ, this.improveLsdlBackground$ = (0, 
                merge.T)(this.qnaSupportabilityService.qnaSettingsChanged$.asObservable(), this.manualImproveLsdlTriggered$.asObservable()).pipe((0, 
                switchMap.w)(function() {
                    return _this.tryImproveLsdlCore();
                }));
            }
            return ImproveLsdlBackgroundService.prototype.tryImproveLsdl = function(origin) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.featureSwitchService.getFeatureSwitches() ];

                          case 1:
                            return _a.sent().qnaImproveLsdlCopilot && null == this.improveLsdlBackgroundSub ? (this.improveLsdlBackgroundSub = this.improveLsdlBackground$.subscribe(), 
                            this.manualImproveLsdlTriggered$.next(origin), [ 2 ]) : [ 2 ];
                        }
                    });
                });
            }, ImproveLsdlBackgroundService.prototype.ngOnDestroy = function() {
                var _a;
                null === (_a = this.improveLsdlBackgroundSub) || void 0 === _a || _a.unsubscribe();
            }, ImproveLsdlBackgroundService.prototype.tryImproveLsdlCore = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var deferredCompletionSynonyms, deferredCompletionPhrasings, deferredCompletionWorkspacePicker;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.ensureLazyScopedServices() ];

                          case 1:
                            return _a.sent(), deferredCompletionSynonyms = new promise.B, this.constructSynonymsBannerTree(deferredCompletionSynonyms), 
                            [ 4, this.improveSynonymsBannerTree.execute() ];

                          case 2:
                            return _a.sent(), deferredCompletionPhrasings = new promise.B, this.constructPhrasingsBannerTree(deferredCompletionPhrasings), 
                            [ 4, this.improvePhrasingsBannerTree.execute() ];

                          case 3:
                            return _a.sent(), deferredCompletionWorkspacePicker = new promise.B, this.constructWorkspacePickerBannerTree(deferredCompletionWorkspacePicker), 
                            [ 2, this.workspacePickerBannerTree.execute() ];
                        }
                    });
                });
            }, ImproveLsdlBackgroundService.prototype.constructSynonymsBannerTree = function(deferredCompletion) {
                this.improveSynonymsBannerTree = new ImproveLsdlSynonymsSupportabilityHandler(this.conceptualSchemaProxy, this.dataModelService, this.dataSourcesService, this.explorationCapabilities, this.qnaSupportabilityService, deferredCompletion);
                var loginHandlerForSynonyms = new LoginHandler(this.accountService, this.dataSourcesService, this.explorationNavigation, this.qnaBannerService, this.qnaToolingDialogLauncher, this.localizationService, this.improveLsdlBackgroundTelemetry, "Synonyms", deferredCompletion), improveLsdlSynonymPromptHandler = new ImproveLsdlPromptHandler(this.qnaBannerService, this.localizationService, this.improveLsdlBackgroundTelemetry, this.copilotRequirementsService, "Synonyms", deferredCompletion), improveLsdlSynonymnExecutionHandler = new ImproveLsdlExecutionHandler(this.improveLsdlService, this.dataModelService, this.localizationService, this.qnaBannerService, "Synonyms", deferredCompletion), improveLsdlSynonymResultHandler = new improve_lsdl_result_handler.G(this.dataModelService, this.dataSourcesService, this.explorationNavigation, this.featureSwitchService, this.qnaBannerService, this.qnaToolingDialogLauncher, this.modelAuthoringService, this.localizationService, this.dialogService, improveLsdlSynonymnExecutionHandler, this.improveLsdlBackgroundTelemetry, "Synonyms", deferredCompletion);
                this.improveSynonymsBannerTree.next = loginHandlerForSynonyms, loginHandlerForSynonyms.next = improveLsdlSynonymPromptHandler, 
                improveLsdlSynonymPromptHandler.next = improveLsdlSynonymnExecutionHandler, improveLsdlSynonymnExecutionHandler.next = improveLsdlSynonymResultHandler;
            }, ImproveLsdlBackgroundService.prototype.constructPhrasingsBannerTree = function(deferredCompletion) {
                this.improvePhrasingsBannerTree = new ImproveLsdlPhrasingsSupportabilityHandler(this.featureSwitchService, this.conceptualSchemaProxy, this.dataModelService, this.dataSourcesService, this.explorationCapabilities, this.qnaSupportabilityService, deferredCompletion);
                var loginHandlerForPhrasings = new LoginHandler(this.accountService, this.dataSourcesService, this.explorationNavigation, this.qnaBannerService, this.qnaToolingDialogLauncher, this.localizationService, this.improveLsdlBackgroundTelemetry, "Phrasings", deferredCompletion), improveLsdlPhrasingPromptHandler = new ImproveLsdlPromptHandler(this.qnaBannerService, this.localizationService, this.improveLsdlBackgroundTelemetry, this.copilotRequirementsService, "Phrasings", deferredCompletion), improveLsdlPhrasingExecutionHandler = new ImproveLsdlExecutionHandler(this.improveLsdlService, this.dataModelService, this.localizationService, this.qnaBannerService, "Phrasings", deferredCompletion), improveLsdlPhrasingResultHandler = new improve_lsdl_result_handler.G(this.dataModelService, this.dataSourcesService, this.explorationNavigation, this.featureSwitchService, this.qnaBannerService, this.qnaToolingDialogLauncher, this.modelAuthoringService, this.localizationService, this.dialogService, improveLsdlPhrasingExecutionHandler, this.improveLsdlBackgroundTelemetry, "Phrasings", deferredCompletion);
                this.improvePhrasingsBannerTree.next = loginHandlerForPhrasings, loginHandlerForPhrasings.next = improveLsdlPhrasingPromptHandler, 
                improveLsdlPhrasingPromptHandler.next = improveLsdlPhrasingExecutionHandler, improveLsdlPhrasingExecutionHandler.next = improveLsdlPhrasingResultHandler;
            }, ImproveLsdlBackgroundService.prototype.constructWorkspacePickerBannerTree = function(deferredCompletion) {
                this.workspacePickerBannerTree = new FuzzyMatchingWorkspacePickerSupportabilityHandler(this.qnaProxyPath, this.conceptualSchemaProxy, this.copilotCapabilityService, this.dataModelService, this.dataSourcesService, this.explorationCapabilities, this.featureSwitchService, this.qnaSupportabilityService, deferredCompletion);
                var actionHandler = new FuzzyMatchingWorkspacePickerHandler(this.copilotRequirementsService, this.localizationService, this.modelAuthoringService, this.qnaBannerService, deferredCompletion);
                this.workspacePickerBannerTree.next = actionHandler;
            }, ImproveLsdlBackgroundService.prototype.ensureLazyScopedServices = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var _a, _b;
                    return (0, tslib_es6.__generator)(this, function(_c) {
                        switch (_c.label) {
                          case 0:
                            return this.qnaBannerService ? [ 3, 2 ] : (_a = this, [ 4, this.lazyScoped.get("qnaBannerService") ]);

                          case 1:
                            _a.qnaBannerService = _c.sent(), debug.fF.assertValue(this.qnaBannerService, "qna banner service should be provided"), 
                            _c.label = 2;

                          case 2:
                            return this.improveLsdlService ? [ 3, 4 ] : (_b = this, [ 4, this.lazyScoped.get("improveLsdlService") ]);

                          case 3:
                            _b.improveLsdlService = _c.sent(), debug.fF.assertValue(this.improveLsdlService, "improve lsdl service should be provided"), 
                            _c.label = 4;

                          case 4:
                            return [ 2 ];
                        }
                    });
                });
            }, ImproveLsdlBackgroundService.\u0275fac = function(t) {
                fesm2022_core["\u0275\u0275invalidFactory"]();
            }, ImproveLsdlBackgroundService.\u0275prov = fesm2022_core["\u0275\u0275defineInjectable"]({
                token: ImproveLsdlBackgroundService,
                factory: ImproveLsdlBackgroundService.\u0275fac
            }), ImproveLsdlBackgroundService;
        }(), manifests = [ {
            type: QnaVisualHostComponent,
            componentId: "QnaVisualHostComponentId"
        }, {
            type: QnaAutocompleteComponent,
            componentId: "QnaAutocompleteComponentId"
        }, {
            type: QnaInputV2Component,
            componentId: "QnaInputV2ComponentId"
        }, {
            type: QnaFeedbackComponent,
            componentId: "QnaFeedbackComponentId"
        }, {
            type: QnaBannerComponent,
            componentId: "QnaBannerComponentId"
        } ], QnaUIInternalModule = function() {
            function QnaUIInternalModule() {}
            return QnaUIInternalModule.\u0275fac = function(t) {
                return new (t || QnaUIInternalModule);
            }, QnaUIInternalModule.\u0275mod = fesm2022_core["\u0275\u0275defineNgModule"]({
                type: QnaUIInternalModule
            }), QnaUIInternalModule.\u0275inj = fesm2022_core["\u0275\u0275defineInjector"]({
                providers: [ ImproveLsdlBackgroundServiceProvider, qna_banner_service.Do, ImproveLsdlBackgroundTelemetryService ],
                imports: [ lazy_load_module.N.withManifests(manifests), dialogs_module.c.withManifest([ {
                    componentIdentifier: "QnaDiagnosticDialogComponentId",
                    componentType: QnaDiagnosticDialogComponent
                } ]), common.CommonModule, drag_drop._t, localization_module.v, UILibrary_module.g, Common.gd, portal.eL, ExploreUI_module.J, VisualHostCore_module.c, feature_switch_module.A3, Data_module.O, Telemetry.e3, a11y_module._, Qna_module.T, pbi_tooltip_module.Z, tri_message_bar.I ]
            }), QnaUIInternalModule;
        }();
    },
    67412: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            c: function() {
                return CopilotPreviewTermsLink;
            },
            y: function() {
                return LearnMoreCopilotWorkspacePickerLink;
            }
        });
        var CopilotPreviewTermsLink = "https://go.microsoft.com/fwlink/?linkid=2243166", LearnMoreCopilotWorkspacePickerLink = "https://go.microsoft.com/fwlink/?linkid=2258254";
    },
    87413: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            QH: function() {
                return getBannerMessage;
            },
            TD: function() {
                return getFirstRunRequestableAgents;
            },
            od: function() {
                return getSynonymsBannerMessage;
            },
            x6: function() {
                return getPhrasingsBannerMessage;
            }
        });
        var _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(62458), _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_Utility__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(59694);
        function getBannerMessage(lsdlAgents, localizationService, target) {
            var bannerMessage;
            switch (_powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assert(function() {
                return !_.isEmpty(lsdlAgents);
            }, "lsdlAgents should be defined and non empty"), _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(localizationService, "localizationService"), 
            _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(target, "target should be defined"), 
            target) {
              case "Synonyms":
                var utilizingCopilot_1 = _.includes(lsdlAgents, "PowerBI.AzureOpenAISynonyms"), utilizingOrg_1 = _.includes(lsdlAgents, "PowerBI.OrganizationLsdlSharing");
                _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assert(function() {
                    return utilizingCopilot_1 || utilizingOrg_1;
                }, "target: Synonyms should contain AzureOpenAISynonyms or OrganizationLsdlSharing agent or both in the improve lsdl flow"), 
                bannerMessage = getSynonymsBannerMessage(utilizingCopilot_1, utilizingOrg_1, localizationService);
                break;

              case "Phrasings":
                _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assert(function() {
                    return _.includes(lsdlAgents, "PowerBI.AzureOpenAIPhrasings");
                }, "target: Phrasings should contain AzureOpenAIPhrasings agent in the improve lsdl flow"), 
                bannerMessage = getPhrasingsBannerMessage(localizationService);
                break;

              default:
                _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertFail("target should be synonyms or phrasings");
            }
            return bannerMessage;
        }
        function getSynonymsBannerMessage(utilizingCopilot, utilizingOrg, localizationService) {
            return {
                emphasis: localizationService.get(utilizingCopilot && utilizingOrg ? "Qna_ImproveLsdl_Synonyms_Copilot_Org" : utilizingCopilot ? "Qna_ImproveLsdl_Synonyms_Copilot" : "Qna_ImproveLsdl_Synonyms_Org"),
                text: localizationService.get(utilizingCopilot ? "Qna_ImproveLsdl_Copilot_Disclaimer" : "Qna_ImproveLsdl_Synonyms_Org_Message")
            };
        }
        function getPhrasingsBannerMessage(localizationService) {
            var textMessage = localizationService.format("Qna_ImproveLsdl_Copilot_Phrasings_Prompt", [ localizationService.get("Qna_ImproveLsdl_Copilot_Disclaimer") ]);
            return {
                emphasis: localizationService.get("Qna_ImproveLsdl_Phrasings_Copilot"),
                text: textMessage
            };
        }
        function getFirstRunRequestableAgents(target, lsdlDocumentModel, isRetry) {
            void 0 === isRetry && (isRetry = !1);
            var agents = lsdlDocumentModel.getAgents(target), firstRunRequestableAgents = _.chain(agents).filter(function(a) {
                var isEnabled = "Enabled" === a.state, isUnmodified = (0, _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_Utility__WEBPACK_IMPORTED_MODULE_1__.g)(a.lastModified);
                return isRetry ? isEnabled : isEnabled && isUnmodified;
            }).map(function(a) {
                return a.name;
            }).value();
            return "oaiPhrasings" !== target || _.find(agents, function(agent) {
                return "PowerBI.AzureOpenAIPhrasings" === agent.name;
            }) ? "externalSynonyms" === target && (_.find(agents, function(agent) {
                return "PowerBI.AzureOpenAISynonyms" === agent.name;
            }) || firstRunRequestableAgents.push("PowerBI.AzureOpenAISynonyms"), _.find(agents, function(agent) {
                return "PowerBI.OrganizationLsdlSharing" === agent.name;
            }) || firstRunRequestableAgents.push("PowerBI.OrganizationLsdlSharing")) : firstRunRequestableAgents.push("PowerBI.AzureOpenAIPhrasings"), 
            firstRunRequestableAgents;
        }
    },
    10693: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            R: function() {
                return BannerTreeBaseHandler;
            }
        });
        var BannerTreeBaseHandler = function() {
            function BannerTreeBaseHandler(deferredPromise) {
                this.deferredPromise = deferredPromise;
            }
            return BannerTreeBaseHandler.prototype.signalCompletion = function() {
                this.deferredPromise.resolve();
            }, BannerTreeBaseHandler.prototype.getDeferredPromise = function() {
                return this.deferredPromise.promise;
            }, BannerTreeBaseHandler;
        }();
    },
    85726: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            G: function() {
                return ImproveLsdlResultHandler;
            }
        });
        var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(81337), _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(62458), _powerbi_Qna_utils_improve_lsdl_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(34100), _powerbi_LsdlDocumentModel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(55461), _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_Utility__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(38078), _banner_tree_base_handler__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(10693), _banner_constants__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(67412), _qna_banner_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(40978), _banner_handler_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(87413), ImproveLsdlResultHandler = function(_super) {
            function ImproveLsdlResultHandler(dataModelService, dataSourcesService, explorationNavigationService, featureSwitchService, qnaBannerService, qnaToolingLauncher, modelAuthoringService, localizationService, dialogService, improveLsdlExecutionHandler, improveLsdlBackgroundTelemetry, target, deferredCompletion) {
                var _this = _super.call(this, deferredCompletion) || this;
                return _this.dataModelService = dataModelService, _this.dataSourcesService = dataSourcesService, 
                _this.explorationNavigationService = explorationNavigationService, _this.featureSwitchService = featureSwitchService, 
                _this.qnaBannerService = qnaBannerService, _this.qnaToolingLauncher = qnaToolingLauncher, 
                _this.modelAuthoringService = modelAuthoringService, _this.localizationService = localizationService, 
                _this.dialogService = dialogService, _this.improveLsdlExecutionHandler = improveLsdlExecutionHandler, 
                _this.improveLsdlBackgroundTelemetry = improveLsdlBackgroundTelemetry, _this.target = target, 
                _this.underExecution = !1, _this;
            }
            return (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__extends)(ImproveLsdlResultHandler, _super), 
            ImproveLsdlResultHandler.prototype.execute = function(_a) {
                var response = _a.response, requestedAgents = _a.requestedAgents, copilotWorkspaceId = _a.copilotWorkspaceId;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__awaiter)(this, void 0, void 0, function() {
                    var lsdlDocumentModel, lsdl, featureSwitches, isFuzzyMatchFeatureEnabled, moreUpdate, exception_1, successBanners, errorBanners, _b, _c, _this = this;
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__generator)(this, function(_d) {
                        switch (_d.label) {
                          case 0:
                            return null == response.result ? [ 3, 1 ] : (lsdlDocumentModel = new _powerbi_LsdlDocumentModel__WEBPACK_IMPORTED_MODULE_1__.X(response.result.lsdlObject), 
                            [ 3, 3 ]);

                          case 1:
                            return [ 4, this.dataModelService.getLinguisticSchema() ];

                          case 2:
                            lsdl = _d.sent(), lsdlDocumentModel = new _powerbi_LsdlDocumentModel__WEBPACK_IMPORTED_MODULE_1__.X(lsdl), 
                            _d.label = 3;

                          case 3:
                            return [ 4, this.featureSwitchService.getFeatureSwitches() ];

                          case 4:
                            if (featureSwitches = _d.sent(), isFuzzyMatchFeatureEnabled = (0, _powerbi_Qna_utils_improve_lsdl_util__WEBPACK_IMPORTED_MODULE_2__.J8)(featureSwitches), 
                            moreUpdate = !1, isFuzzyMatchFeatureEnabled && (lsdlDocumentModel.setRuntimeUnderstanding("Full"), 
                            moreUpdate = lsdlDocumentModel.commit()), null == response.result && !moreUpdate) return [ 3, 8 ];
                            _d.label = 5;

                          case 5:
                            return _d.trys.push([ 5, 7, , 8 ]), [ 4, this.modelAuthoringService.apply({
                                changes: [ {
                                    updateLinguisticMetadata: {
                                        linguisticSchemaJson: lsdlDocumentModel.toJsonString()
                                    }
                                } ]
                            }) ];

                          case 6:
                            return _d.sent(), [ 3, 8 ];

                          case 7:
                            return exception_1 = _d.sent(), _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_3__.fF.assertFail(exception_1), 
                            [ 3, 8 ];

                          case 8:
                            return (_b = {}).Visual = [], _b.ToolingHome = [], _b.ToolingSynonyms = [], _b.ToolingPhrasings = [], 
                            successBanners = _b, null != response.result && (successBanners = this.getSuccessBanners(lsdlDocumentModel, requestedAgents)), 
                            errorBanners = [], _.isEmpty(response.errors) || null != _.find(response.errors, function(e) {
                                return "OperationCancelled" === e.code;
                            }) || (errorBanners = ImproveLsdlResultHandler.getErrorBanners(response.errors, this.localizationService, this.target)), 
                            this.qnaBannerService.setContent(((_c = {}).Visual = {
                                showBanners: !0,
                                banners: (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_0__.__spreadArray)([], successBanners.Visual, !0), errorBanners, !0),
                                onDismissAllBanners: function() {
                                    return _this.signalCompletion();
                                },
                                actionHandlers: new Map([ [ "launchTooling", function() {
                                    var bannerToRemove = _.first(successBanners.Visual);
                                    _this.qnaBannerService.dismissBanner("Visual", bannerToRemove.id), _this.improveLsdlBackgroundTelemetry.logResultEvent({
                                        surface: "Visual",
                                        type: _this.target,
                                        action: "ReviewResults",
                                        resultType: "Success"
                                    }), _this.qnaToolingLauncher.showToolingDialog({
                                        dataSources: _this.dataSourcesService.get(),
                                        exploration: _this.explorationNavigationService.getCurrentExploration(),
                                        entryPoint: "VisualBanner",
                                        entryContentType: "Synonyms" === _this.target ? "bulkEditing" : "managePhrasings"
                                    }), _this.signalCompletion();
                                } ], [ "errorDetails", this.getErrorDetailsHandler("Visual") ], [ "retry", this.getRetryHandler("Visual", requestedAgents, copilotWorkspaceId) ] ])
                            }, _c.ToolingHome = {
                                showBanners: !0,
                                banners: (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_0__.__spreadArray)([], successBanners.ToolingHome, !0), errorBanners, !0),
                                onDismissAllBanners: function() {
                                    return _this.signalCompletion();
                                },
                                actionHandlers: "Synonyms" === this.target ? new Map([ [ "switchToSynonymsPage", void 0 ], [ "errorDetails", this.getErrorDetailsHandler("ToolingHome") ], [ "retry", this.getRetryHandler("ToolingHome", requestedAgents, copilotWorkspaceId) ] ]) : new Map([ [ "switchToPhrasingsPage", void 0 ], [ "errorDetails", this.getErrorDetailsHandler("ToolingHome") ], [ "retry", this.getRetryHandler("ToolingHome", requestedAgents, copilotWorkspaceId) ] ])
                            }, _c.ToolingSynonyms = "Synonyms" === this.target ? {
                                showBanners: !0,
                                banners: errorBanners,
                                onDismissAllBanners: function() {
                                    return _this.signalCompletion();
                                },
                                actionHandlers: new Map([ [ "errorDetails", this.getErrorDetailsHandler("ToolingSynonyms") ], [ "retry", void 0 ] ])
                            } : _qna_banner_service__WEBPACK_IMPORTED_MODULE_4__.me, _c.ToolingPhrasings = "Phrasings" === this.target ? {
                                showBanners: !0,
                                banners: errorBanners,
                                onDismissAllBanners: function() {
                                    return _this.signalCompletion();
                                },
                                actionHandlers: new Map([ [ "errorDetails", this.getErrorDetailsHandler("ToolingPhrasings") ], [ "retry", void 0 ] ])
                            } : _qna_banner_service__WEBPACK_IMPORTED_MODULE_4__.me, _c)), [ 2, this.getDeferredPromise() ];
                        }
                    });
                });
            }, ImproveLsdlResultHandler.getErrorBanners = function(errors, localizationService, target) {
                var _this = this, agentErrors = _.filter(errors, function(e) {
                    return null != e.agent;
                }), nonAgentErrors = _.filter(errors, function(e) {
                    return null == e.agent;
                }), agentErrorMap = new Map;
                _.forEach(agentErrors, function(error) {
                    if (agentErrorMap.has(error.code)) {
                        var errorInfo = agentErrorMap.get(error.code);
                        errorInfo.agents.push(error.agent), agentErrorMap.set(error.code, errorInfo);
                    } else agentErrorMap.set(error.code, {
                        agents: [ error.agent ],
                        originalError: error
                    });
                });
                var banners = [];
                return agentErrorMap.forEach(function(_a) {
                    var errorBanner = _this.generateErrorBanner(_a.originalError, localizationService, target, _a.agents);
                    banners.push(errorBanner);
                }), _.forEach(nonAgentErrors, function(error) {
                    var errorBanner = _this.generateErrorBanner(error, localizationService, target);
                    banners.push(errorBanner);
                }), banners;
            }, ImproveLsdlResultHandler.generateErrorBanner = function(error, localizationService, target, agents) {
                void 0 === agents && (agents = []);
                var _a = this.getErrorConfig(error.code, localizationService, target, agents), text = _a.text, bannerType = _a.bannerType, actions = _a.actions;
                return {
                    id: _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_Utility__WEBPACK_IMPORTED_MODULE_5__.b$.generateGuid(),
                    message: {
                        text
                    },
                    isVisible: !0,
                    allowDismiss: !0,
                    bannerType,
                    data: error,
                    actions
                };
            }, ImproveLsdlResultHandler.prototype.getSuccessBanners = function(lsdlDocumentModel, requestedAgents) {
                var _a, successBannerMessage, lsdlAgents = lsdlDocumentModel.getAgents("Synonyms" === this.target ? "externalSynonyms" : "oaiPhrasings"), modifiedAgents = _.chain(lsdlAgents).filter(function(a) {
                    return null != a.lastModified;
                }).map(function(a) {
                    return a.name;
                }).value();
                if ("Synonyms" === this.target) {
                    var utilizingCopilot = _.includes(modifiedAgents, "PowerBI.AzureOpenAISynonyms") && _.includes(requestedAgents, "PowerBI.AzureOpenAISynonyms"), utilizingOrganization = _.includes(modifiedAgents, "PowerBI.OrganizationLsdlSharing") && _.includes(requestedAgents, "PowerBI.OrganizationLsdlSharing");
                    successBannerMessage = (0, _banner_handler_util__WEBPACK_IMPORTED_MODULE_6__.od)(utilizingCopilot, utilizingOrganization, this.localizationService);
                } else successBannerMessage = (0, _banner_handler_util__WEBPACK_IMPORTED_MODULE_6__.x6)(this.localizationService);
                var reviewSuggestionsText = this.localizationService.get("Synonyms" === this.target ? "Qna_ImproveLsdl_Synonyms_Review" : "Qna_ImproveLsdl_Phrasings_Review");
                return (_a = {}).Visual = [ {
                    id: _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_Utility__WEBPACK_IMPORTED_MODULE_5__.b$.generateGuid(),
                    message: successBannerMessage,
                    link: {
                        href: _banner_constants__WEBPACK_IMPORTED_MODULE_7__.c,
                        text: this.localizationService.get("CopilotInline_PreviewLink")
                    },
                    isVisible: !0,
                    allowDismiss: !0,
                    bannerType: "copilot",
                    actions: [ {
                        id: "launchTooling",
                        text: reviewSuggestionsText,
                        actionAppearance: "primary"
                    } ]
                } ], _a.ToolingHome = [ {
                    id: _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_Utility__WEBPACK_IMPORTED_MODULE_5__.b$.generateGuid(),
                    message: successBannerMessage,
                    link: {
                        href: _banner_constants__WEBPACK_IMPORTED_MODULE_7__.c,
                        text: this.localizationService.get("CopilotInline_PreviewLink")
                    },
                    isVisible: !0,
                    allowDismiss: !0,
                    bannerType: "copilot",
                    actions: [ {
                        id: "Synonyms" === this.target ? "switchToSynonymsPage" : "switchToPhrasingsPage",
                        text: reviewSuggestionsText,
                        actionAppearance: "primary"
                    } ]
                } ], _a.ToolingSynonyms = [], _a.ToolingPhrasings = [], _a;
            }, ImproveLsdlResultHandler.getErrorConfig = function(code, localizationService, target, lsdlAgents) {
                var _a, textKey;
                void 0 === lsdlAgents && (lsdlAgents = []);
                var bannerType, errorMessageConfig = ImproveLsdlResultHandler.getErrorMessageConfig(code, localizationService, target);
                if ("copilotAndOrg" === errorMessageConfig.possibleSources) {
                    _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_3__.fF.assert(function() {
                        return "Synonyms" === target;
                    }, "target can only be synonyms when the sources are copilot and org");
                    var utilizingCopilotForSynonyms = _.includes(lsdlAgents, "PowerBI.AzureOpenAISynonyms"), utilizingOrg = _.includes(lsdlAgents, "PowerBI.OrganizationLsdlSharing");
                    textKey = utilizingCopilotForSynonyms && utilizingOrg ? errorMessageConfig.copilotAndOrg : utilizingCopilotForSynonyms ? errorMessageConfig.copilot : errorMessageConfig.org;
                } else "copilotOnly" === errorMessageConfig.possibleSources ? textKey = errorMessageConfig.copilot : "orgOnly" === errorMessageConfig.possibleSources ? (_powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_3__.fF.assert(function() {
                    return "Synonyms" === target;
                }, "target can only be synonyms when the source is org"), textKey = errorMessageConfig.org) : "agnostic" === errorMessageConfig.possibleSources ? textKey = errorMessageConfig.agnostic : _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_3__.fF.assertFail("possibleSources not handled");
                switch (code) {
                  case "NoLsdlIndexAvailable":
                  case "NoLsdlSharingModelsAvailable":
                    bannerType = "info";
                    break;

                  case "RequestThrottled":
                  case "RequestTimeOut":
                    bannerType = "blocked";
                    break;

                  case "UnsafeContentDetectedInRequest":
                  case "UnsafeContentDetectedInResponse":
                  case "PartiallySuccessful":
                    bannerType = "warning";
                    break;

                  case "FeatureNotAvailable":
                    bannerType = "info";
                    break;

                  case "FailedToOpenLsdlIndexSearcher":
                    bannerType = "info";

                  case "UnsupportedLanguage":
                    _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_3__.fF.assertFail("Unexpected improve lsdl error ".concat("UnsupportedLanguage"));

                  default:
                    bannerType = "error";
                }
                return {
                    text: localizationService.get(textKey),
                    bannerType,
                    actions: null !== (_a = errorMessageConfig.availableActions) && void 0 !== _a ? _a : []
                };
            }, ImproveLsdlResultHandler.getErrorMessageConfig = function(errorCode, localizationService, target) {
                var retry = {
                    id: "retry",
                    text: localizationService.get("IntermittentFailureRetryButton"),
                    actionAppearance: "primary"
                }, viewDetails = {
                    id: "errorDetails",
                    text: localizationService.get("View_Details"),
                    actionAppearance: "secondary"
                }, forSynonyms = "Synonyms" === target, genericErrorConfig = forSynonyms ? {
                    possibleSources: "copilotAndOrg",
                    copilotAndOrg: "Qna_ImproveLsdl_Synonyms_Error_Generic_Copilot_Org",
                    copilot: "Qna_ImproveLsdl_Synonyms_Error_Generic_Copilot",
                    org: "Qna_ImproveLsdl_Synonyms_Error_Generic_Org",
                    availableActions: [ viewDetails ]
                } : "Phrasings" === target ? {
                    possibleSources: "copilotOnly",
                    copilot: "Qna_ImproveLsdl_Phrasings_Error_Generic_Copilot",
                    availableActions: [ viewDetails ]
                } : {
                    possibleSources: "copilotOnly",
                    copilot: "Qna_FuzzyMatching_PickWorkspace_Error_Generic",
                    availableActions: [ viewDetails ]
                };
                switch (errorCode) {
                  case "GenericError":
                  case "FailedToParseLsdlFromRequest":
                  case "FailedToParseLsdlFromRequest":
                  case "UnsupportedLanguage":
                  case "NoKnownAgentsRequested":
                  case "GenericFailure":
                    return genericErrorConfig;

                  case "NetworkConnectionIssue":
                    return {
                        possibleSources: "agnostic",
                        agnostic: forSynonyms ? "Qna_ImproveLsdl_Error_NetworkIssue_Synonyms" : "Qna_ImproveLsdl_Error_NetworkIssue_Phrasings",
                        availableActions: [ retry ]
                    };

                  case "NoLsdlIndexAvailable":
                    return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_3__.fF.assert(function() {
                        return forSynonyms;
                    }, "NoLsdlIndexAvailable error code is only applicable to synonyms"), {
                        possibleSources: "orgOnly",
                        org: "Qna_ImproveLsdl_Error_NoLsdlIndexAvailable"
                    };

                  case "NoLsdlSharingModelsAvailable":
                    return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_3__.fF.assert(function() {
                        return forSynonyms;
                    }, "NoLsdlSharingModelsAvailable error code is only applicable to synonyms"), {
                        possibleSources: "orgOnly",
                        org: "Qna_ImproveLsdl_Error_NoLsdlSharingModelsAvailable"
                    };

                  case "InvalidRequestVersion":
                  case "RequiresNewerVersion":
                    return {
                        possibleSources: "agnostic",
                        agnostic: "Qna_ImproveLsdl_Error_RequiresNewerVersion"
                    };

                  case "FailedToOpenLsdlIndexSearcher":
                    return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_3__.fF.assert(function() {
                        return forSynonyms;
                    }, "FailedToOpenLsdlIndexSearcher error code is only applicable to synonyms"), {
                        possibleSources: "orgOnly",
                        org: "Qna_ImproveLsdl_Error_FailedToOpenLsdlIndexSearcher"
                    };

                  case "FeatureNotAvailable":
                  case "FeatureNotAvailable":
                    return {
                        possibleSources: "copilotOnly",
                        copilot: forSynonyms ? "Qna_ImproveLsdl_Error_Copilot_Tenant_Disabled_Synonyms" : "Qna_ImproveLsdl_Error_Copilot_Tenant_Disabled_Phrasings"
                    };

                  case "UnsupportedUser":
                    return {
                        possibleSources: "copilotOnly",
                        copilot: "CopilotCapability_NoEligibleWorkspace_Message"
                    };

                  case "PartiallySuccessful":
                    return forSynonyms ? {
                        possibleSources: "copilotAndOrg",
                        copilotAndOrg: "Qna_ImproveLsdl_Error_PartialSuccess_Copilot_Org_Synonyms",
                        copilot: "Qna_ImproveLsdl_Error_PartialSuccess_Copilot_Synonyms",
                        org: "Qna_ImproveLsdl_Error_PartialSuccess_Org_Synonyms",
                        availableActions: [ retry ]
                    } : {
                        possibleSources: "copilotOnly",
                        copilot: "Qna_ImproveLsdl_Error_PartialSuccess_Copilot_Phrasings",
                        availableActions: [ retry ]
                    };

                  case "UnsafeContentDetectedInRequest":
                  case "UnsafeContentDetectedInResponse":
                    return forSynonyms ? {
                        possibleSources: "copilotAndOrg",
                        copilotAndOrg: "Qna_ImproveLsdl_Error_PartialSuccess_Copilot_Org_Synonyms",
                        copilot: "Qna_ImproveLsdl_Error_PartialSuccess_Copilot_Synonyms",
                        org: "Qna_ImproveLsdl_Error_PartialSuccess_Org_Synonyms",
                        availableActions: [ retry ]
                    } : {
                        possibleSources: "copilotOnly",
                        copilot: "Qna_ImproveLsdl_Error_Unsafe_Content_Copilot",
                        availableActions: [ viewDetails ]
                    };

                  case "RequestThrottled":
                    return forSynonyms ? {
                        possibleSources: "copilotAndOrg",
                        copilotAndOrg: "Qna_ImproveLsdl_Error_Throttle_Copilot_Org_Synonyms",
                        copilot: "Qna_ImproveLsdl_Error_Throttle_Copilot_Synonyms",
                        org: "Qna_ImproveLsdl_Error_Throttle_Org_Synonyms",
                        availableActions: [ retry ]
                    } : {
                        possibleSources: "copilotOnly",
                        copilot: "Qna_ImproveLsdl_Error_Throttle_Copilot_Phrasings",
                        availableActions: [ retry ]
                    };

                  case "RequestTimeOut":
                    return forSynonyms ? {
                        possibleSources: "copilotAndOrg",
                        copilotAndOrg: "Qna_ImproveLsdl_Error_Timeout_Copilot_Org_Synonyms",
                        copilot: "Qna_ImproveLsdl_Error_Timeout_Copilot_Synonyms",
                        org: "Qna_ImproveLsdl_Error_Timeout_Org_Synonyms",
                        availableActions: [ retry ]
                    } : {
                        possibleSources: "copilotOnly",
                        copilot: "Qna_ImproveLsdl_Error_Timeout_Copilot_Phrasings",
                        availableActions: [ retry ]
                    };

                  case "DisallowedForCrossGeo":
                    return {
                        possibleSources: "copilotOnly",
                        copilot: forSynonyms ? "Qna_ImproveLsdl_Error_Copilot_CrossGeo_Disallowed_Synonyms" : "Qna_ImproveLsdl_Error_Copilot_CrossGeo_Disallowed_Phrasings"
                    };

                  default:
                    return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_3__.fF.assertFail("unhandled improveLsdlErrorCode ".concat(errorCode)), 
                    genericErrorConfig;
                }
            }, ImproveLsdlResultHandler.prototype.getRetryHandler = function(surface, requestedAgents, copilotWorkspaceId) {
                var _this = this;
                return function() {
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__awaiter)(_this, void 0, void 0, function() {
                        return (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__generator)(this, function(_a) {
                            switch (_a.label) {
                              case 0:
                                return this.underExecution ? [ 2 ] : (this.underExecution = !0, this.improveLsdlBackgroundTelemetry.logResultEvent({
                                    surface,
                                    type: this.target,
                                    action: "Retry",
                                    resultType: "Failure"
                                }), [ 4, this.improveLsdlExecutionHandler.execute({
                                    requestedAgents,
                                    copilotWorkspaceId
                                }) ]);

                              case 1:
                                return _a.sent(), this.underExecution = !1, [ 2 ];
                            }
                        });
                    });
                };
            }, ImproveLsdlResultHandler.prototype.getErrorDetailsHandler = function(surface) {
                var _this = this;
                return function(error) {
                    _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_3__.fF.assertValue(error, "improve lsdl error"), 
                    _this.improveLsdlBackgroundTelemetry.logResultEvent({
                        surface,
                        type: _this.target,
                        action: "ShowErrorDetails",
                        resultType: "Failure"
                    }), _this.dialogService.showTemplateDialog("QnaDiagnosticDialogComponentId", {
                        title: _this.localizationService.get("Qna_Explore_ErrorMessage"),
                        hideCancelButton: !0,
                        input: {
                            errorCode: error.code,
                            errorMessage: error.diagnosticMessage
                        }
                    });
                };
            }, ImproveLsdlResultHandler;
        }(_banner_tree_base_handler__WEBPACK_IMPORTED_MODULE_8__.R);
    },
    40978: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            Do: function() {
                return QnaBannerServiceProvider;
            },
            me: function() {
                return emptyBannerContent;
            }
        });
        var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(81337), rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(35510), rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(14172), _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(62458), _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(50423), QnaBannerServiceProvider = {
            provide: "qnaBannerService",
            useFactory: function() {
                return (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__generator)(this, function(_a) {
                        return [ 2, new QnaBannerService ];
                    });
                });
            },
            deps: []
        }, emptyBannerContent = {
            showBanners: !1,
            banners: []
        }, QnaBannerService = function() {
            function QnaBannerService() {
                var _a;
                this.bannerContent$ = new rxjs__WEBPACK_IMPORTED_MODULE_1__.X(((_a = {}).ToolingHome = emptyBannerContent, 
                _a.ToolingSynonyms = emptyBannerContent, _a.ToolingPhrasings = emptyBannerContent, 
                _a.Visual = emptyBannerContent, _a));
            }
            return QnaBannerService.prototype.setContent = function(bannersBySurface) {
                _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_2__.fF.assertValue(bannersBySurface, "bannersBySurface"), 
                _.forEach(bannersBySurface, function(content) {
                    _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_2__.fF.assertValue(content, "banner content should not be null");
                }), this.bannerContent$.next(bannersBySurface);
            }, QnaBannerService.prototype.updateContent = function(surface, updatedContent) {
                _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_2__.fF.assertValue(surface, "qnaBannerSurface"), 
                _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_2__.fF.assertValue(updatedContent, "updatedContent");
                var bannerContentBySurface = this.bannerContent$.value;
                bannerContentBySurface[surface] = updatedContent, this.bannerContent$.next(bannerContentBySurface);
            }, QnaBannerService.prototype.getBannerContent = function(surface) {
                return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_2__.fF.assertValue(surface, "qnaBannerSurface"), 
                this.bannerContent$.asObservable().pipe((0, rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.U)(function(content) {
                    return content[surface];
                }));
            }, QnaBannerService.prototype.dismissBanner = function(surface, bannerId) {
                _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_2__.fF.assertValue(surface, "qnaBannerSurface"), 
                _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_2__.fF.assertValue(bannerId, "qnaBannerId");
                var bannerContent = (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, this.bannerContent$.value[surface]), bannerToUpdate = _.find(bannerContent.banners, function(b) {
                    return b.id === bannerId;
                });
                null != bannerToUpdate ? (bannerToUpdate.isVisible = !1, bannerContent.banners = (0, 
                tslib__WEBPACK_IMPORTED_MODULE_0__.__spreadArray)([], bannerContent.banners, !0), 
                this.updateContent(surface, bannerContent), 1 === _.size(bannerContent.banners) && bannerContent.onDismissAllBanners && bannerContent.onDismissAllBanners()) : _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_2__.fF.assertFail("banner with id: ".concat(bannerId, " not found"));
            }, QnaBannerService.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_4__["\u0275\u0275defineInjectable"]({
                token: QnaBannerService,
                factory: QnaBannerService.\u0275fac = function(t) {
                    return new (t || QnaBannerService);
                }
            }), QnaBannerService;
        }();
    },
    35691: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            $g: function() {
                return QnaAutoCompleteDropdownSelected;
            },
            AM: function() {
                return ImproveLsdlBackgroundLogin;
            },
            F2: function() {
                return ImproveLsdlBackgroundResultEventName;
            },
            S4: function() {
                return ImproveLsdlBackgroundResult;
            },
            UV: function() {
                return ImproveLsdlBackgroundPrompt;
            },
            Zg: function() {
                return ImproveLsdlBackgroundPromptEventName;
            },
            dY: function() {
                return QnaAutoCompleteInitialized;
            },
            dZ: function() {
                return QnaVisualInitialized;
            },
            gk: function() {
                return ImproveLsdlBackgroundLoginEventName;
            }
        });
        var _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(41114), QnaVisualInitialized = _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.cx["PBI.QnaVisual.Initialized"] = (0, 
        _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.b1)("PBI.QnaVisual.Initialized", {
            logExpAssignment: !0
        }), QnaAutoCompleteInitialized = _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.cx["PBI.QnaAutoComplete.Initialized"] = (0, 
        _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.b1)("PBI.QnaAutoComplete.Initialized"), QnaAutoCompleteDropdownSelected = _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.cx["PBI.QnaAutoComplete.DropdownSelected"] = (0, 
        _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.b1)("PBI.QnaAutoComplete.DropdownSelected"), ImproveLsdlBackgroundLoginEventName = "PBI.ImproveLsdlBackground.Login", ImproveLsdlBackgroundLogin = _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.cx[ImproveLsdlBackgroundLoginEventName] = (0, 
        _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.b1)(ImproveLsdlBackgroundLoginEventName), ImproveLsdlBackgroundPromptEventName = "PBI.ImproveLsdlBackground.Prompt", ImproveLsdlBackgroundPrompt = _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.cx[ImproveLsdlBackgroundPromptEventName] = (0, 
        _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.b1)(ImproveLsdlBackgroundPromptEventName), ImproveLsdlBackgroundResultEventName = "PBI.ImproveLsdlBackground.Result", ImproveLsdlBackgroundResult = _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.cx[ImproveLsdlBackgroundResultEventName] = (0, 
        _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.b1)(ImproveLsdlBackgroundResultEventName);
    },
    1931: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            T: function() {
                return QnaModule;
            }
        });
        var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(77476), _powerbi_Data__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(52910), _powerbi_ErrorService__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(13052), _powerbi_Explore__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(31109), _powerbi_ExploreUI__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(87121), _powerbi_FeatureSwitch__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(76521), _powerbi_GeocoderIndexedDB__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(40516), _powerbi_Geocoding__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(84497), _powerbi_Localization__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(79061), _powerbi_Telemetry__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(21617), _powerbi_UILibrary_UILibrary_module__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(94785), _powerbi_VisualHostCore__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(3176), _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(50423), QnaModule = function() {
            function QnaModule() {}
            return QnaModule.\u0275fac = function(t) {
                return new (t || QnaModule);
            }, QnaModule.\u0275mod = _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275defineNgModule"]({
                type: QnaModule
            }), QnaModule.\u0275inj = _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275defineInjector"]({
                imports: [ _angular_common__WEBPACK_IMPORTED_MODULE_2__.CommonModule, _powerbi_Data__WEBPACK_IMPORTED_MODULE_3__.O, _powerbi_ErrorService__WEBPACK_IMPORTED_MODULE_4__.T, _powerbi_Explore__WEBPACK_IMPORTED_MODULE_5__.F, _powerbi_ExploreUI__WEBPACK_IMPORTED_MODULE_6__.J, _powerbi_FeatureSwitch__WEBPACK_IMPORTED_MODULE_7__.A3, _powerbi_GeocoderIndexedDB__WEBPACK_IMPORTED_MODULE_8__.h, _powerbi_Geocoding__WEBPACK_IMPORTED_MODULE_9__.L, _powerbi_Localization__WEBPACK_IMPORTED_MODULE_10__.v, _powerbi_Telemetry__WEBPACK_IMPORTED_MODULE_0__.e3, _powerbi_UILibrary_UILibrary_module__WEBPACK_IMPORTED_MODULE_11__.g, _powerbi_VisualHostCore__WEBPACK_IMPORTED_MODULE_12__.c ]
            }), QnaModule;
        }();
    },
    37320: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            y: function() {
                return InterpretListenerFactory;
            }
        });
        var tslib__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(81337), rxjs__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(35510), _powerbi_legacy_Explore_contracts_dataSource__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(74804), _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(62458), _powerbi_Typings_Modern_Shared_Explore_typings__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(58291), _powerbi_legacy_Explore_constants__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(57871), _powerbi_legacy_Explore_util_filterUtils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(42614), _powerbi_legacy_Explore_util_visualContainerUtils__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(3579), _powerbi_legacy_PowerBIVisuals_VisualsData_semanticQuery_sqFrom__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(38953), _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(3468), _utils_wireClientContractsConversion_util__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(35988), _utils_visual_util__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(74857), _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(50423), _powerbi_Data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(26898), _powerbi_Explore__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(83008), _powerbi_Explore__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(81986), _powerbi_Explore__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(21436), _powerbi_LazyLoad__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(28894), _powerbi_VisualHostCore__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(84916), _powerbi_VisualHostCore__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(29866), InterpretListenerFactory = function() {
            function InterpretListenerFactory(conceptualSchemaProxy, dataSources, explorationSerializer, lazyScoped, podExplorationResolver, resourcePackage, visualPlugin) {
                this.conceptualSchemaProxy = conceptualSchemaProxy, this.dataSources = dataSources, 
                this.explorationSerializer = explorationSerializer, this.lazyScoped = lazyScoped, 
                this.podExplorationResolver = podExplorationResolver, this.resourcePackage = resourcePackage, 
                this.visualPlugin = visualPlugin;
            }
            return InterpretListenerFactory.prototype.createInterpretListener = function(setupParams, timeout) {
                return void 0 === timeout && (timeout = 500), new InterpretListener(this.conceptualSchemaProxy, this.dataSources, this.explorationSerializer, this.lazyScoped, this.podExplorationResolver, this.resourcePackage, this.visualPlugin, setupParams, timeout);
            }, InterpretListenerFactory.\u0275fac = function(t) {
                return new (t || InterpretListenerFactory)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275inject"](_powerbi_Data__WEBPACK_IMPORTED_MODULE_1__.i), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275inject"](_powerbi_Explore__WEBPACK_IMPORTED_MODULE_2__.D), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275inject"](_powerbi_Explore__WEBPACK_IMPORTED_MODULE_3__.L), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275inject"](_powerbi_LazyLoad__WEBPACK_IMPORTED_MODULE_4__.H), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275inject"](_powerbi_Explore__WEBPACK_IMPORTED_MODULE_5__.Bl), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275inject"](_powerbi_VisualHostCore__WEBPACK_IMPORTED_MODULE_6__.o), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275inject"](_powerbi_VisualHostCore__WEBPACK_IMPORTED_MODULE_7__.D));
            }, InterpretListenerFactory.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275defineInjectable"]({
                token: InterpretListenerFactory,
                factory: InterpretListenerFactory.\u0275fac
            }), InterpretListenerFactory;
        }(), InterpretListener = function() {
            function InterpretListener(conceptualSchemaProxy, dataSources, explorationSerializer, lazyScoped, podExplorationResolver, resourcePackage, visualPlugin, setupParams, timeout) {
                this.conceptualSchemaProxy = conceptualSchemaProxy, this.dataSources = dataSources, 
                this.explorationSerializer = explorationSerializer, this.lazyScoped = lazyScoped, 
                this.podExplorationResolver = podExplorationResolver, this.resourcePackage = resourcePackage, 
                this.visualPlugin = visualPlugin, this.setupParams = setupParams, this.timeout = timeout, 
                _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_8__.fF.assertValue(setupParams, "setupParams"), 
                this.updateManager = new ObservableUpdateManager(this.timeout), this.setupParams = setupParams;
            }
            return InterpretListener.prototype.getObservable = function() {
                return this.updateManager.getObservable();
            }, InterpretListener.prototype.onInterpretIssued = function() {
                this.cancelErrorThrottler(), this.updateManager.pushUpdate({
                    resultType: 0
                });
            }, InterpretListener.prototype.onInterpretRetry = function(warning) {
                this.updateManager.pushUpdate({
                    resultType: 1,
                    retryWarning: warning
                });
            }, InterpretListener.prototype.onInterpretResultCleared = function() {
                this.cancelErrorThrottler(), this.updateManager.pushUpdate({
                    resultType: 4,
                    utterance: ""
                });
            }, InterpretListener.prototype.onInterpretResult = function(request, response) {
                var _a;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__awaiter)(this, void 0, void 0, function() {
                    var firstResult;
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__generator)(this, function(_b) {
                        var warnings;
                        return response.error || !this.setupParams.forTrainingTermBinding && _.isEmpty(response.results) || this.setupParams.forTrainingTermBinding && _.every(response.results, function(r) {
                            return !r.command;
                        }) && (warnings = response.warnings) && !_.find(warnings, function(warning) {
                            return 2 === warning || 8 === warning || 11 === warning || 12 === warning || 9 === warning || 10 === warning || 24 === warning;
                        }) ? (firstResult = _.first(response.results), this.onInterpretErrorV2(response.utterance, request, response.error, null == firstResult ? void 0 : firstResult.spans, null === (_a = null == firstResult ? void 0 : firstResult.correctionInfo) || void 0 === _a ? void 0 : _a.correctedUtterance), 
                        [ 2 ]) : [ 2, this.onInterpretSuccessV2(response, request) ];
                    });
                });
            }, InterpretListener.prototype.onInterpretSuccessV2 = function(interpretResponse, request) {
                var _a, _b;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__awaiter)(this, void 0, void 0, function() {
                    var firstResult, semanticQuery;
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__generator)(this, function(_c) {
                        switch (_c.label) {
                          case 0:
                            return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_8__.fF.assertValue(interpretResponse, "interpretResponse"), 
                            this.cancelErrorThrottler(), (null === (_a = null == request ? void 0 : request.intent) || void 0 === _a ? void 0 : _a.defineCalculation) ? [ 4, this.handleCalculationResult(interpretResponse, request) ] : [ 3, 2 ];

                          case 1:
                            return _c.sent(), [ 3, 6 ];

                          case 2:
                            return firstResult = _.first(interpretResponse.results), (semanticQuery = null === (_b = null == firstResult ? void 0 : firstResult.command) || void 0 === _b ? void 0 : _b.query) && _.find(semanticQuery.from().sources(), function(fromSource) {
                                return (0, _powerbi_legacy_PowerBIVisuals_VisualsData_semanticQuery_sqFrom__WEBPACK_IMPORTED_MODULE_10__.Yg)(fromSource);
                            }) ? [ 4, this.handlePodPageResult(interpretResponse, request) ] : [ 3, 4 ];

                          case 3:
                            return _c.sent(), [ 3, 6 ];

                          case 4:
                            return [ 4, this.handleVisualResult(interpretResponse, request) ];

                          case 5:
                            _c.sent(), _c.label = 6;

                          case 6:
                            return [ 2 ];
                        }
                    });
                });
            }, InterpretListener.prototype.onInterpretErrorV2 = function(utterance, request, error, spans, correctedUtterance) {
                var _this = this;
                _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_8__.fF.assertValue(utterance, "utterance"), 
                this.cancelErrorThrottler();
                var termBindingsTrainingInfo = this.setupParams.forTrainingTermBinding ? {
                    spans,
                    correctedUtterance
                } : void 0;
                this.errorThrottler = setTimeout(function() {
                    _this.updateManager.pushThrottledUpdate({
                        request,
                        resultType: 3,
                        interpretError: error,
                        utterance,
                        termBindingsTrainingInfo,
                        doNotShowResult: !0
                    }), _this.errorThrottler = void 0;
                }, this.timeout);
            }, InterpretListener.prototype.cancelErrorThrottler = function() {
                this.errorThrottler && clearTimeout(this.errorThrottler), this.errorThrottler = void 0;
            }, InterpretListener.prototype.handlePodPageResult = function(interpretResponse, request) {
                return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__awaiter)(this, void 0, void 0, function() {
                    var interpretResult, utterance, termBindingsTrainingInfo, command, semanticQuery, podFromSource, reportId, exploration, _a, _b, pod, sectionName_1, section_1, queryMetadata, queryDefinition, parameterFilters, resourcePackages, model, modelId, hideLowConfidenceResult;
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__generator)(this, function(_d) {
                        switch (_d.label) {
                          case 0:
                            if (interpretResult = _.first(null == interpretResponse ? void 0 : interpretResponse.results), 
                            _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_8__.fF.assertValue(interpretResult, "query interpretResult must be defined for handling pod result"), 
                            utterance = interpretResponse.utterance, termBindingsTrainingInfo = getTermsBindingTrainingInfo(interpretResult), 
                            this.setupParams.forTrainingTermBinding) return this.updateManager.pushThrottledUpdate({
                                request,
                                resultType: 2,
                                utterance,
                                termBindingsTrainingInfo,
                                doNotShowResult: !1
                            }), [ 2 ];
                            if (!this.setupParams.canShowPods) return this.updateManager.pushThrottledUpdate({
                                request,
                                resultType: 5,
                                utterance
                            }), [ 2 ];
                            _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_8__.fF.assertValue(semanticQuery = null == (command = null == interpretResult ? void 0 : interpretResult.command) ? void 0 : command.query, "interpretResult command must have a defined query for handling pod result"), 
                            podFromSource = _.find(semanticQuery.from().sources(), function(fromSource) {
                                return (0, _powerbi_legacy_PowerBIVisuals_VisualsData_semanticQuery_sqFrom__WEBPACK_IMPORTED_MODULE_10__.Yg)(fromSource);
                            }), _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_8__.fF.assertValue(podFromSource, "expect there is a pod entity"), 
                            reportId = this.podExplorationResolver.getReportId(podFromSource.schema), _d.label = 1;

                          case 1:
                            return _d.trys.push([ 1, 3, , 4 ]), _b = (_a = this.explorationSerializer).deepCopyExploration, 
                            [ 4, this.podExplorationResolver.getExploration(reportId) ];

                          case 2:
                            return exploration = _b.apply(_a, [ _d.sent() ]), pod = _.find(exploration.pods, function(p) {
                                return p.name === podFromSource.pod;
                            }), sectionName_1 = pod && pod.boundSection, section_1 = _.find(exploration.sections, function(s) {
                                return sectionName_1 === s.name;
                            }), pod && sectionName_1 && section_1 ? (_powerbi_legacy_Explore_util_filterUtils__WEBPACK_IMPORTED_MODULE_11__.l.mergeExplorationSectionFilters(exploration, section_1), 
                            queryMetadata = (0, _utils_visual_util__WEBPACK_IMPORTED_MODULE_12__.Nj)(null == command ? void 0 : command.queryMetadata), 
                            queryDefinition = _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_13__.ib.serializeQuery(semanticQuery), 
                            _.isEmpty(queryDefinition.Where) || (parameterFilters = _powerbi_legacy_Explore_util_filterUtils__WEBPACK_IMPORTED_MODULE_11__.l.extractParameterFilters(queryDefinition, queryMetadata), 
                            _powerbi_legacy_Explore_util_filterUtils__WEBPACK_IMPORTED_MODULE_11__.l.applySectionParameterFilters(section_1, pod, void 0, parameterFilters)), 
                            resourcePackages = _.filter(exploration.resourcePackages, function(rp) {
                                return _.some(section_1.visualContainers, function(vc) {
                                    return (0, _powerbi_legacy_Explore_util_visualContainerUtils__WEBPACK_IMPORTED_MODULE_14__.s)(vc) === rp.name;
                                });
                            }), _.isEmpty(resourcePackages) || (this.resourcePackage.registerPackages(resourcePackages), 
                            this.visualPlugin.ensurePlugins(resourcePackages)), section_1.size.displayOption = 1, 
                            exploration.activeSectionIndex = _.findIndex(exploration.sections, function(s) {
                                return s.name === section_1.name;
                            }), model = this.getModelFromResult(interpretResult), this.ensureDataSources(model, exploration), 
                            modelId = model.id, hideLowConfidenceResult = this.getNotShowLowConfidenceResult(interpretResult), 
                            this.updateManager.pushThrottledUpdate({
                                request,
                                resultType: 2,
                                modelId,
                                utterance,
                                exploration,
                                restatement: interpretResult.restatement,
                                doNotShowResult: hideLowConfidenceResult,
                                usedAgents: null == interpretResult ? void 0 : interpretResult.usedAgents
                            }), [ 3, 4 ]) : (this.updateManager.pushThrottledUpdate({
                                request,
                                resultType: 6,
                                utterance
                            }), [ 2 ]);

                          case 3:
                            return _d.sent(), this.updateManager.pushThrottledUpdate({
                                request,
                                resultType: 6,
                                utterance
                            }), [ 3, 4 ];

                          case 4:
                            return [ 2 ];
                        }
                    });
                });
            }, InterpretListener.prototype.handleVisualResult = function(interpretResponse, request) {
                return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__awaiter)(this, void 0, void 0, function() {
                    var utterance, interpretResult, returnTermBindingsTrainingInfo, queryUnSupportedLevelWarningsInfo, queryUnSupportedLevelWarningMessageKeys, hasUnsupportedWarnings, visualContainer, command, model, visualRecommendation, notShowLowConfidenceResult;
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            if (_powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_8__.fF.assertValue(interpretResponse, "interpretResponse"), 
                            utterance = interpretResponse.utterance, interpretResult = _.first(null == interpretResponse ? void 0 : interpretResponse.results), 
                            !this.setupParams.canShowVisuals) return this.updateManager.pushThrottledUpdate(this.setupParams.forTrainingTermBinding ? {
                                request,
                                resultType: 2,
                                utterance,
                                termBindingsTrainingInfo: getTermsBindingTrainingInfo(interpretResult),
                                doNotShowResult: !1
                            } : {
                                request,
                                resultType: 5,
                                utterance
                            }), [ 2 ];
                            returnTermBindingsTrainingInfo = this.setupParams.forTrainingTermBinding ? getTermsBindingTrainingInfo(interpretResult) : void 0, 
                            _b.label = 1;

                          case 1:
                            return _b.trys.push([ 1, 4, , 5 ]), queryUnSupportedLevelWarningsInfo = (0, _utils_wireClientContractsConversion_util__WEBPACK_IMPORTED_MODULE_15__.vr)(null == interpretResponse ? void 0 : interpretResponse.warnings), 
                            queryUnSupportedLevelWarningMessageKeys = _.uniq(_.map(queryUnSupportedLevelWarningsInfo, function(info) {
                                return info.messageKey;
                            })), hasUnsupportedWarnings = !_.isEmpty(queryUnSupportedLevelWarningsInfo), visualContainer = void 0, 
                            (command = interpretResult && interpretResult.command) && command.query ? _.isEmpty(queryUnSupportedLevelWarningsInfo) ? (model = this.getModelFromResult(interpretResult), 
                            this.ensureDataSources(model, void 0), [ 4, this.lazyScoped.get("visualRecommendationService") ]) : (this.updateManager.pushThrottledUpdate({
                                request,
                                resultType: 2,
                                utterance,
                                termBindingsTrainingInfo: returnTermBindingsTrainingInfo,
                                doNotShowResult: !0,
                                doNotShowResultCustomMessageKeys: queryUnSupportedLevelWarningMessageKeys
                            }), [ 2 ]) : (this.updateManager.pushThrottledUpdate({
                                request,
                                resultType: this.setupParams.forTrainingTermBinding ? 2 : 3,
                                utterance,
                                termBindingsTrainingInfo: returnTermBindingsTrainingInfo,
                                doNotShowResult: !this.setupParams.forTrainingTermBinding || hasUnsupportedWarnings,
                                doNotShowResultCustomMessageKeys: hasUnsupportedWarnings ? queryUnSupportedLevelWarningMessageKeys : void 0
                            }), [ 2 ]);

                          case 2:
                            return visualRecommendation = _b.sent(), [ 4, (0, _utils_visual_util__WEBPACK_IMPORTED_MODULE_12__.y_)(interpretResult, this.conceptualSchemaProxy, this.dataSources, visualRecommendation) ];

                          case 3:
                            return (visualContainer = _b.sent()) ? (notShowLowConfidenceResult = this.getNotShowLowConfidenceResult(interpretResult), 
                            this.updateManager.pushThrottledUpdate({
                                request,
                                resultType: 2,
                                modelId: model.id,
                                utterance,
                                restatement: interpretResult && interpretResult.restatement,
                                termBindingsTrainingInfo: returnTermBindingsTrainingInfo,
                                visualContainer,
                                doNotShowResult: notShowLowConfidenceResult,
                                usedAgents: null == interpretResult ? void 0 : interpretResult.usedAgents
                            })) : this.updateManager.pushThrottledUpdate({
                                request,
                                resultType: 6,
                                utterance,
                                termBindingsTrainingInfo: returnTermBindingsTrainingInfo
                            }), [ 3, 5 ];

                          case 4:
                            return _b.sent(), this.updateManager.pushThrottledUpdate({
                                request,
                                resultType: 6,
                                utterance,
                                termBindingsTrainingInfo: returnTermBindingsTrainingInfo
                            }), [ 3, 5 ];

                          case 5:
                            return [ 2 ];
                        }
                    });
                });
            }, InterpretListener.prototype.handleCalculationResult = function(interpretResponse, request) {
                var _a;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__awaiter)(this, void 0, void 0, function() {
                    var utterance, calculations, _i, result_1, r;
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__generator)(this, function(_b) {
                        for (utterance = interpretResponse.utterance, this.setupParams.canShowCalculations || this.updateManager.pushThrottledUpdate({
                            request,
                            resultType: 5,
                            utterance
                        }), calculations = [], _i = 0, result_1 = interpretResponse.results; _i < result_1.length; _i++) (null === (_a = (r = result_1[_i]).command) || void 0 === _a ? void 0 : _a.defineCalculation) && !this.getNotShowLowConfidenceResult(r) && calculations.push((0, 
                        tslib__WEBPACK_IMPORTED_MODULE_9__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_9__.__assign)({}, r.command.defineCalculation), {
                            restatement: r.restatement
                        }));
                        return _.isEmpty(calculations) ? this.updateManager.pushThrottledUpdate({
                            request,
                            resultType: 3,
                            utterance
                        }) : this.updateManager.pushThrottledUpdate({
                            request,
                            resultType: 2,
                            utterance,
                            restatement: void 0,
                            doNotShowResult: !1,
                            calculations
                        }), [ 2 ];
                    });
                });
            }, InterpretListener.prototype.getNotShowLowConfidenceResult = function(interpretResult) {
                if (!(null == interpretResult ? void 0 : interpretResult.command)) return !0;
                var correctionState = interpretResult.correctionInfo && interpretResult.correctionInfo.state;
                return 0 === correctionState || 1 === correctionState && this.setupParams.canShowDidYouMean;
            }, InterpretListener.prototype.getModelFromResult = function(interpretResult) {
                var model = 1 === _.size(this.setupParams.models) ? this.setupParams.models[0] : _.find(this.setupParams.models, function(m) {
                    return m.dbName === interpretResult.databaseName && m.vsName === interpretResult.virtualServerName;
                });
                return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_8__.fF.assertValue(model, "There are multiple models for interpret, one of them should match the model that the interpret result is from"), 
                model;
            }, InterpretListener.prototype.ensureDataSources = function(model, exploration) {
                if (model && this.setupParams.resetDataSources) {
                    var dsrDataSource = (0, _powerbi_legacy_Explore_contracts_dataSource__WEBPACK_IMPORTED_MODULE_16__.CD)(model), modelDataSourcesArray = (0, 
                    _powerbi_legacy_Explore_contracts_dataSource__WEBPACK_IMPORTED_MODULE_16__.yd)([ dsrDataSource ]);
                    if (!_.isEmpty(null == exploration ? void 0 : exploration.modelExtensions)) {
                        var schemaName = _powerbi_legacy_Explore_constants__WEBPACK_IMPORTED_MODULE_17__.eM, dataSourceName = dsrDataSource.name;
                        modelDataSourcesArray.push({
                            type: _powerbi_Typings_Modern_Shared_Explore_typings__WEBPACK_IMPORTED_MODULE_18__.K,
                            id: void 0,
                            name: schemaName,
                            extends: dataSourceName,
                            exploration: {
                                schemaName,
                                extends: dataSourceName,
                                getModelExtensions: function() {
                                    return exploration.modelExtensions;
                                },
                                getDataSourceVariables: function() {
                                    return exploration.dataSourceVariables;
                                }
                            }
                        });
                    }
                    this.dataSources.set(modelDataSourcesArray);
                }
            }, InterpretListener;
        }();
        function getTermsBindingTrainingInfo(interpretResult) {
            if (interpretResult) {
                var command = interpretResult.command;
                return {
                    spans: interpretResult.spans,
                    correctedUtterance: interpretResult.correctionInfo && interpretResult.correctionInfo.correctedUtterance,
                    linguisticSchemaJson: command && command.linguisticSchemaJson,
                    linguisticSchemaItems: command && command.linguisticSchemaItems,
                    inferredTermMetadata: command && command.inferredTermMetadata
                };
            }
        }
        var ObservableUpdateManager = function() {
            function ObservableUpdateManager(timeout) {
                this.timeout = timeout, this.interpretResult$ = new rxjs__WEBPACK_IMPORTED_MODULE_19__.X(void 0);
            }
            return ObservableUpdateManager.prototype.getObservable = function() {
                return this.interpretResult$.asObservable();
            }, ObservableUpdateManager.prototype.pushUpdate = function(update) {
                this.throttler && clearTimeout(this.throttler), this.throttler = void 0, this.throttledUpdate = void 0, 
                this.interpretResult$.next(update), this.throttler = this.startThrottler();
            }, ObservableUpdateManager.prototype.pushThrottledUpdate = function(update) {
                this.throttler ? this.throttledUpdate = update : (this.interpretResult$.next(update), 
                this.throttler = this.startThrottler());
            }, ObservableUpdateManager.prototype.startThrottler = function() {
                var _this = this;
                return setTimeout(function() {
                    _this.throttledUpdate ? (_this.interpretResult$.next(_this.throttledUpdate), _this.throttledUpdate = void 0, 
                    _this.throttler = _this.startThrottler()) : _this.throttler = void 0;
                }, this.timeout);
            }, ObservableUpdateManager;
        }();
    },
    72129: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        function isSuggestedQuestionContent(content) {
            return "Suggestions" === (null == content ? void 0 : content.type);
        }
        function isQnaVisualContent(content) {
            return "Visual" === (null == content ? void 0 : content.type);
        }
        function isQnaVisualAsExplorationContent(content) {
            return "VisualAsExploration" === (null == content ? void 0 : content.type);
        }
        function isPodContent(content) {
            return "Pod" === (null == content ? void 0 : content.type);
        }
        function isErrorContent(content) {
            return "Error" === (null == content ? void 0 : content.type);
        }
        function isQueryErrorContent(content) {
            return "QueryError" === (null == content ? void 0 : content.type);
        }
        __webpack_require__.d(__webpack_exports__, {
            Ew: function() {
                return isSuggestedQuestionContent;
            },
            fU: function() {
                return isQnaVisualAsExplorationContent;
            },
            lP: function() {
                return isPodContent;
            },
            mn: function() {
                return isQnaVisualContent;
            },
            uT: function() {
                return isErrorContent;
            },
            wp: function() {
                return isQueryErrorContent;
            }
        });
    },
    7124: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            D: function() {
                return QnaComponentCoreService;
            }
        });
        var tslib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(81337), _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(50423), rxjs_operators__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(48787), _powerbi_InjectionTokens_account_service_token__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(92060), _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(79154), _powerbi_legacy_PowerBIVisuals_VisualsData_semanticQuery_sqExpr__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(94419), _powerbi_legacy_Explore_contracts_visualContainer2__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(80981), _powerbi_legacy_PowerBIVisuals_Visuals_common_colorHelper__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(90120), _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(56578), _powerbi_legacy_PowerBICommon_utils_colorUtility__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(1521), _powerbi_legacy_ExploreUI_viewModels_viewModelFactory__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(26982), _powerbi_legacy_PowerBIVisuals_Visuals_common_fontProperties__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(18664), _powerbi_legacy_ExploreUI_services_visualHostService__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(47245), _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(62458), _powerbi_legacy_PowerBIContracts_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(2142), _powerbi_legacy_PowerBIVisuals_VisualsCommon_clientError__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(2931), _powerbi_legacy_PowerBIVisuals_VisualsCommon_arrayExtensions__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(50550), _powerbi_legacy_Explore_services_filters_filterBuilder__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(11077), _powerbi_legacy_PowerBIVisuals_Visuals_common_units__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(32105), _powerbi_Common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(35911), _powerbi_legacy_ExploreUI_utils_errorDetailsUtility__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(18503), _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(82755), _powerbi_legacy_Explore_util_visualContainerUtils__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(3579), _powerbi_legacy_Explore_util_visualContainerUtils__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(60661), _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject3__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(76045), _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_StandaloneUtility3__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(43286), _powerbi_legacy_PowerBIVisuals_VisualsCommon_Prototype__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(39681), _powerbi_legacy_JsCommon_Utility_BrowserUtility__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(16808), _powerbi_legacy_PowerBIVisuals_Visuals_common_objectEnumerationBuilder__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(28579), _powerbi_InjectionTokens_promiseFactory__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(14463), _powerbi_ExploreUI_explore_ui_dialogs_identifiers__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(78778), _powerbi_InjectionTokens_qnaLiveConnectService__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(64491), _powerbi_InjectionTokens_qnaModelUtilsPath__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(65947), _powerbi_InjectionTokens_qnaProxyPath__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(12123), _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_qnaVisual_capabilities__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(32640), _powerbi_legacy_Explore_services_selectionUtils__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(21728), _powerbi_legacy_PowerBIVisuals_VisualsCommon_serviceError__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(80952), _powerbi_Telemetry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(21617), _powerbi_legacy_VisualHostUI_utils_themeUtils__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(4954), _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_Utility__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(38078), _powerbi_legacy_PowerBIVisuals_VisualsContracts_common_enums__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(46135), _powerbi_legacy_Explore_services_events__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(8590), _powerbi_InjectionTokens_tooltips_visualHostTooltipServiceFactory__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(80318), _telemetry_events__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(5894), _qna_component_core_utils__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(72129), _utils_visual_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(74857), _utils_wireClientContractsConversion_util__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(35988), _utils_qna_model_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(87974), _powerbi_VisualHostCore__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(29866), _powerbi_VisualHostCore__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(52121), _powerbi_Data__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(26898), _powerbi_ExploreUI__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(83008), _powerbi_ExploreUI__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(48145), _powerbi_ExploreUI__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(39503), _powerbi_ExploreUI__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(11494), _powerbi_ExploreUI__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(77200), _powerbi_ExploreUI__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(27980), _powerbi_UILibrary__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(58938), _powerbi_UILibrary__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(67660), _powerbi_Explore__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(69474), _powerbi_Explore__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(81986), _powerbi_Explore__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(79006), _powerbi_Explore__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(72262), _powerbi_Explore__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(906), _powerbi_Explore__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(84281), _powerbi_Explore__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(80277), _powerbi_FeatureSwitch__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(9380), _qna_feedback_state_qna_feedback_state_service__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(21548), _powerbi_LazyLoad__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(57786), _powerbi_LazyLoad__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(2330), _powerbi_Geocoding__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(28505), _powerbi_Geocoding__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(58991), _powerbi_Localization__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(65181), _powerbi_ErrorService__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(81213), _powerbi_A11y__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(83309), _interpret_listener_interpret_listener_service__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(37320), _powerbi_GeocoderIndexedDB__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(1599), presentationDefaults = {
            withBorder: !0,
            showSuggestions: !0,
            acceptedColor: "#0078D4",
            errorColor: "#FF0000",
            warningColor: "#0078D4",
            borderColor: "#A19F9D",
            fontColor: "#323130",
            darkFontColor: "#252423",
            lightFontColor: "#FFFFFF",
            inputBoxBackgroundColor: "#FFFFFF",
            suggestionBackgroundColor: "#F3F2F1",
            hoverColor: "#EEEEEE",
            semiboldFont: "'Segoe UI Semibold', wf_segoe-ui_semibold, helvetica, arial, sans-serif",
            regularFont: "'Segoe UI', wf_segoe-ui_normal, helvetica, arial, sans-serif",
            smallFontSize: _powerbi_legacy_PowerBIVisuals_Visuals_common_units__WEBPACK_IMPORTED_MODULE_2__.B.createFromPt(9),
            mediumFontSize: _powerbi_legacy_PowerBIVisuals_Visuals_common_units__WEBPACK_IMPORTED_MODULE_2__.B.createFromPt(10),
            largeFontSize: _powerbi_legacy_PowerBIVisuals_Visuals_common_units__WEBPACK_IMPORTED_MODULE_2__.B.createFromPt(12),
            defaultBIUValue: !1
        }, defaultInputConfig = {
            spanDropdownHeaderConfig: {
                show: !0,
                unknownSpanHeaderConfig: {
                    actionType: "none"
                }
            }
        }, QnaComponentCoreService = function() {
            function QnaComponentCoreService(visualPlugin, changeDetectorRef, conceptualSchemaProxy, dataSources, dialogService, explorationActivity, explorationCapabilities, explorationNavigation, explorationSerializer, eventBridge, featureSwitchService, qnaFeedbackStateService, lazyProvider, themeService, expandCollapse, geocoder, geolocationService, moduleLoader, localizationService, errorService, telemetryService, resourceLoader, screenReaderService, interpretListenerFactory, selectionService, sortService, undoRedoService, viewModeState, visualAuthoringOpService, azureMapTokenCache, azureMapsEndpoint, geocoderIndexedDB, visualHostTooltipServiceFactory, promiseFactory, accountService, qnaProxyPathToken, qnaModelUtilsPathToken, qnaLiveConnectService) {
                if (this.visualPlugin = visualPlugin, this.changeDetectorRef = changeDetectorRef, 
                this.conceptualSchemaProxy = conceptualSchemaProxy, this.dataSources = dataSources, 
                this.dialogService = dialogService, this.explorationActivity = explorationActivity, 
                this.explorationCapabilities = explorationCapabilities, this.explorationNavigation = explorationNavigation, 
                this.explorationSerializer = explorationSerializer, this.eventBridge = eventBridge, 
                this.featureSwitchService = featureSwitchService, this.qnaFeedbackStateService = qnaFeedbackStateService, 
                this.lazyProvider = lazyProvider, this.themeService = themeService, this.expandCollapse = expandCollapse, 
                this.geocoder = geocoder, this.geolocationService = geolocationService, this.moduleLoader = moduleLoader, 
                this.localizationService = localizationService, this.errorService = errorService, 
                this.telemetryService = telemetryService, this.resourceLoader = resourceLoader, 
                this.screenReaderService = screenReaderService, this.interpretListenerFactory = interpretListenerFactory, 
                this.selectionService = selectionService, this.sortService = sortService, this.undoRedoService = undoRedoService, 
                this.viewModeState = viewModeState, this.visualAuthoringOpService = visualAuthoringOpService, 
                this.azureMapTokenCache = azureMapTokenCache, this.azureMapsEndpoint = azureMapsEndpoint, 
                this.geocoderIndexedDB = geocoderIndexedDB, this.visualHostTooltipServiceFactory = visualHostTooltipServiceFactory, 
                this.promiseFactory = promiseFactory, this.accountService = accountService, this.qnaProxyPathToken = qnaProxyPathToken, 
                this.qnaModelUtilsPathToken = qnaModelUtilsPathToken, this.qnaLiveConnectService = qnaLiveConnectService, 
                this.utteranceUpdated = new _angular_core__WEBPACK_IMPORTED_MODULE_3__.EventEmitter, 
                this.pinnableContentDefinitionUpdated = new _angular_core__WEBPACK_IMPORTED_MODULE_3__.EventEmitter, 
                this.convertVisual = new _angular_core__WEBPACK_IMPORTED_MODULE_3__.EventEmitter, 
                this.utteranceRestated = new _angular_core__WEBPACK_IMPORTED_MODULE_3__.EventEmitter, 
                this.interpretationError = new _angular_core__WEBPACK_IMPORTED_MODULE_3__.EventEmitter, 
                this.isBrowserIE = (0, _powerbi_legacy_JsCommon_Utility_BrowserUtility__WEBPACK_IMPORTED_MODULE_4__.rO)(), 
                this.isBrowserIE) this.viewModel = {
                    state: "Error",
                    error: (0, _utils_visual_util__WEBPACK_IMPORTED_MODULE_5__.ET)(localizationService),
                    qnaInputConfiguration: void 0,
                    themeCollection: void 0,
                    viewport: void 0,
                    presentationViewModel: void 0
                }; else {
                    this.pendingSuggestedQuestionsRequests = 0;
                    var themeCollection = (0, _utils_visual_util__WEBPACK_IMPORTED_MODULE_5__.Su)(this.explorationNavigation, this.featureSwitchService), dataColor = this.themeService.getVisualStyle(themeCollection).colorPalette.dataColors.getColorByIndex(0).value, presentation = {
                        withBorder: presentationDefaults.withBorder,
                        borderColor: presentationDefaults.borderColor,
                        backgroundColor: presentationDefaults.inputBoxBackgroundColor,
                        questionFontProperties: {
                            color: presentationDefaults.fontColor,
                            size: presentationDefaults.mediumFontSize,
                            family: presentationDefaults.regularFont
                        },
                        acceptedUnderlineColor: presentationDefaults.acceptedColor,
                        errorUnderlineColor: presentationDefaults.errorColor,
                        warningUnderlineColor: presentationDefaults.warningColor,
                        hoverColor: presentationDefaults.hoverColor,
                        restatementFontProperties: {
                            color: presentationDefaults.fontColor,
                            size: presentationDefaults.smallFontSize,
                            family: presentationDefaults.regularFont
                        },
                        commitButtonBackgroundColor: dataColor,
                        commitButtonForegroundColor: getContrastForegroundColor(dataColor)
                    };
                    this.viewModel = {
                        state: "Loading",
                        qnaInputConfiguration: void 0,
                        themeCollection,
                        viewport: void 0,
                        presentationViewModel: {
                            inputBox: presentation,
                            suggestions: {
                                backgroundColor: presentationDefaults.suggestionBackgroundColor,
                                show: presentationDefaults.showSuggestions,
                                cardFontProperties: {
                                    color: presentationDefaults.fontColor,
                                    size: presentationDefaults.mediumFontSize,
                                    family: presentationDefaults.regularFont
                                },
                                headerFontProperties: {
                                    color: presentationDefaults.fontColor,
                                    size: presentationDefaults.largeFontSize,
                                    family: presentationDefaults.semiboldFont
                                }
                            }
                        }
                    };
                }
            }
            return QnaComponentCoreService.prototype.initialize = function(models, config, hostServices, entryPoint, utteranceUpdated, convertVisual, initializedTelemetryEvent, contentElement, pinnableContentDefinitionUpdated, utteranceRestated, interpretationError, additionalSourceFilters, useShellTheme) {
                var _a;
                return void 0 === useShellTheme && (useShellTheme = !1), (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function() {
                    var _b, _c, modelsInfo, _d, dataSource, schema, capabilities, inputConfigs, _e, additionalSourceFilterContainers, visualContainerContract, visualHostServices, _this = this;
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__generator)(this, function(_f) {
                        switch (_f.label) {
                          case 0:
                            return this.isBrowserIE ? [ 2 ] : (this.models = models, this.config = config, this.hostServices = hostServices, 
                            this.entryPoint = entryPoint, this.utteranceUpdated = utteranceUpdated, this.convertVisual = convertVisual, 
                            this.utteranceRestated = utteranceRestated, this.interpretationError = interpretationError, 
                            this.initializedTelemetryEvent = initializedTelemetryEvent, this.contentElement = contentElement, 
                            pinnableContentDefinitionUpdated && (this.pinnableContentDefinitionUpdated = pinnableContentDefinitionUpdated), 
                            _b = this, [ 4, this.lazyProvider.get(this.qnaProxyPathToken || "@powerbi/Qna/qnaweb.module#QnaWebModule", "InterpretServiceModern") ]);

                          case 1:
                            return _b.interpretService = _f.sent(), _c = this, [ 4, this.lazyProvider.get(this.qnaModelUtilsPathToken || "@powerbi/Qna/qnaweb.module#QnaWebModule", "qnaModelUtilsService") ];

                          case 2:
                            return _c.qnaModelUtils = _f.sent(), modelsInfo = _.map(this.models, function(m) {
                                return {
                                    datasetName: m.dbName,
                                    datasetId: m.id
                                };
                            }), _d = this, [ 4, (0, _utils_qna_model_util__WEBPACK_IMPORTED_MODULE_7__.U)(modelsInfo, this.qnaModelUtils, this.featureSwitchService) ];

                          case 3:
                            return _d.inCommitQuestionOnDemandMode = _f.sent(), this.interpretListener = this.interpretListenerFactory.createInterpretListener({
                                forTrainingTermBinding: !1,
                                canShowPods: this.config.canShowPods,
                                canShowVisuals: this.config.canShowVisuals,
                                canShowDidYouMean: this.config.canShowDidYouMean,
                                models: this.models,
                                resetDataSources: this.config.resetDataSources
                            }), this.interpretListener.getObservable().subscribe(function(result) {
                                return _this.onResultAvailable(result);
                            }), dataSource = _.find(this.dataSources.get(), function(d) {
                                return d.type === _powerbi_legacy_PowerBIContracts_constants__WEBPACK_IMPORTED_MODULE_8__.nKy;
                            }), [ 4, this.conceptualSchemaProxy.get(this.dataSources.get()) ];

                          case 4:
                            return schema = _f.sent(), capabilities = dataSource && schema && schema.schema(dataSource.name).capabilities, 
                            (inputConfigs = (null === (_a = this.viewModel.qnaInputConfiguration) || void 0 === _a ? void 0 : _a.configs) || {}).supportsPodQueries = !!config.canShowPods, 
                            null != config.focusOnInit && (inputConfigs.autoFocusOnInit = config.focusOnInit), 
                            null != config.disableQnaInputAuthoring && (inputConfigs.disableAuthoring = config.disableQnaInputAuthoring, 
                            inputConfigs.displayDisabledStateVisually = config.disableQnaInputAuthoring), null != config.disableQnaInputAuthoringMessage && (inputConfigs.disableAuthoringMessage = config.disableQnaInputAuthoringMessage), 
                            null != config.hostHandlesUndo && (inputConfigs.hostSupportsUndo = config.hostHandlesUndo), 
                            null != config.showTermDropdownHeader && (inputConfigs.spanDropdownHeaderConfig = {
                                show: config.showTermDropdownHeader
                            }), config.showUnknownTermDropdownHeaderTextOnly && (inputConfigs.spanDropdownHeaderConfig || (inputConfigs.spanDropdownHeaderConfig = {
                                show: void 0
                            }), inputConfigs.spanDropdownHeaderConfig.unknownSpanHeaderConfig = {
                                actionType: "textOnlyHeader",
                                textOnlyTemplate: config.unknownTermDropdownHeaderTextOnlyTemplate
                            }), this.viewModel.themeCollection = (0, _utils_visual_util__WEBPACK_IMPORTED_MODULE_5__.Su)(this.explorationNavigation, this.featureSwitchService), 
                            this.viewModel.qnaInputConfiguration = {
                                entryPoint: this.entryPoint,
                                interpretListener: this.interpretListener,
                                qnaSupportedScopes: _.map(this.models, function(m) {
                                    return {
                                        model: m
                                    };
                                }),
                                configs: inputConfigs,
                                presentation: this.viewModel.presentationViewModel.inputBox,
                                initialUtterance: this.config.initialUtterance || "",
                                initialUtteranceFromSaved: this.config.initialUtteranceFromSaved
                            }, this.viewModel.presentationViewModel.inputBox.useShellTheme = useShellTheme, 
                            _e = this, [ 4, this.getIsModelEditable() ];

                          case 5:
                            return _e.isModelEditable = _f.sent(), [ 4, this.updateUnknownSpanHeaderConfig() ];

                          case 6:
                            return _f.sent(), additionalSourceFilterContainers = _.map(additionalSourceFilters, function(filter, index) {
                                return {
                                    name: "TempFilter" + index,
                                    filter
                                };
                            }), visualContainerContract = this.getCurrentVisual(), visualHostServices = (0, 
                            _powerbi_legacy_PowerBIVisuals_VisualsCommon_Prototype__WEBPACK_IMPORTED_MODULE_9__.ED)((0, 
                            _powerbi_legacy_ExploreUI_services_visualHostService__WEBPACK_IMPORTED_MODULE_10__.q)({
                                geocoder: this.geocoder,
                                geolocation: this.geolocationService,
                                localizationService: this.localizationService,
                                moduleLoader: this.moduleLoader,
                                promiseFactory: this.promiseFactory,
                                visualHostTooltipService: this.visualHostTooltipServiceFactory.createFromVisualContract(visualContainerContract),
                                getAzureMapToken: function() {
                                    return _this.azureMapTokenCache.getAzureMapToken();
                                },
                                azureMapsEndpoint: this.azureMapsEndpoint,
                                geocoderIndexedDB: this.geocoderIndexedDB
                            }), function(h) {
                                h.getLocalizedString = _this.hostServices.getLocalizedString, h.tooltips = _this.hostServices.tooltips, 
                                h.canSelect = _this.hostServices.canSelect, h.onSelecting = _this.hostServices.onSelecting, 
                                h.onSelect = _this.hostServices.onSelect, h.onCustomSort = function(args) {
                                    return _this.onCustomSort(args.sortDescriptors);
                                }, h.geocoder = _this.hostServices.geocoder, h.launchUrl = _this.hostServices.launchUrl, 
                                h.canExpandCollapse = function(_roles) {
                                    return capabilities && capabilities.supportsInstanceFilters;
                                }, h.setNodeExpansionState = function(args) {
                                    var currentVisual = _this.getCurrentVisual();
                                    currentVisual && (args.isCollapse ? _this.expandCollapse.collapseNode(currentVisual, args.dataRoles, args.data) : _this.expandCollapse.expandNode(currentVisual, args.dataRoles, args.data), 
                                    _this.eventBridge.publishToChannel(_powerbi_legacy_Explore_services_events__WEBPACK_IMPORTED_MODULE_11__.jCS, {
                                        affectContainer: function(vc) {
                                            return "qnaVisualContainer" === vc.name;
                                        }
                                    }));
                                }, h.telemetry = _this.hostServices.telemetry;
                            }), Object.defineProperty(visualHostServices, "instanceId", {
                                value: _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_Utility__WEBPACK_IMPORTED_MODULE_12__.b$.generateGuid()
                            }), this.singleVisualHostConfig = {
                                notifyStart: _.noop,
                                notifyEnd: function() {
                                    var _a;
                                    _qna_component_core_utils__WEBPACK_IMPORTED_MODULE_13__.mn(null === (_a = _this.viewModel) || void 0 === _a ? void 0 : _a.result) && (_this.viewModel.result.isLoading = !1);
                                },
                                clearQueryErrors: _.noop,
                                handleQueryErrors: function(error) {
                                    return _this.handleQueryErrors(error);
                                },
                                handleQueryWarnings: _.noop,
                                queryVisualHostServices: {
                                    getFilters: function() {
                                        var visual = _this.getCurrentVisual();
                                        if (visual) {
                                            var filters = _.union(visual && visual.filters, additionalSourceFilterContainers);
                                            return _this.createVisualContainerFilters(visual, filters);
                                        }
                                    },
                                    getDataSourceVariables: function() {
                                        var currentExploration = _this.explorationNavigation.getCurrentExploration();
                                        return currentExploration && currentExploration.dataSourceVariables;
                                    },
                                    disableAnchorTime: !0
                                },
                                visualHostServices,
                                interactivityOptions: {
                                    selection: !0
                                },
                                additionalObjectUpdates: void 0,
                                disableQueryCacheUpdates: !1,
                                noLoadMore: !1
                            }, [ 4, this.setSuggestedQuestions() ];

                          case 7:
                            return _f.sent(), _.isEmpty(this.config.initialUtterance) && this.setSuggestionsViewModel(), 
                            [ 2 ];
                        }
                    });
                });
            }, QnaComponentCoreService.prototype.onCustomSort = function(sortDescriptors) {
                var currentVisual = this.getCurrentVisual();
                (0, _utils_visual_util__WEBPACK_IMPORTED_MODULE_5__.fI)(currentVisual, this.sortHelper, sortDescriptors);
            }, QnaComponentCoreService.prototype.ngAfterViewInit = function() {
                this.updateViewport();
            }, QnaComponentCoreService.prototype.update = function(options) {
                var _a;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function() {
                    var _b, themeCollection, style, themeBackgroundColor, defaultHoverColor, acceptedColor, errorColor, warningColor, colorHelper, dataColor, contrastFontToDataColor, inputBackgroundColor, questionFontProperties, commitButtonBackgroundColor, inputPresentation, cardFontProperties, suggestionsPresentation, utterance;
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__generator)(this, function(_c) {
                        switch (_c.label) {
                          case 0:
                            return _b = this, [ 4, this.getIsModelEditable() ];

                          case 1:
                            return _b.isModelEditable = _c.sent(), !(0, _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_StandaloneUtility3__WEBPACK_IMPORTED_MODULE_14__.yE)(options.type, _powerbi_legacy_PowerBIVisuals_VisualsContracts_common_enums__WEBPACK_IMPORTED_MODULE_15__.EP.Style) || this.isBrowserIE ? [ 3, 3 ] : (_powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_16__.fF.assertValue(this.viewModel, "viewModel should be defined"), 
                            themeCollection = (0, _utils_visual_util__WEBPACK_IMPORTED_MODULE_5__.Su)(this.explorationNavigation, this.featureSwitchService), 
                            this.viewModel.themeCollection = themeCollection, style = themeCollection && this.themeService.getVisualStyle(themeCollection), 
                            themeBackgroundColor = style && style.colorPalette.background.value || presentationDefaults.inputBoxBackgroundColor, 
                            defaultHoverColor = style && style.colorPalette.backgroundNeutral.value || presentationDefaults.hoverColor, 
                            acceptedColor = presentationDefaults.acceptedColor, errorColor = presentationDefaults.errorColor, 
                            warningColor = presentationDefaults.warningColor, colorHelper = style && _powerbi_legacy_PowerBIVisuals_Visuals_common_colorHelper__WEBPACK_IMPORTED_MODULE_17__.v.create(style), 
                            dataColor = this.themeService.getVisualStyle(this.viewModel.themeCollection).colorPalette.dataColors.getColorByIndex(0).value, 
                            contrastFontToDataColor = (0, _powerbi_legacy_PowerBICommon_utils_colorUtility__WEBPACK_IMPORTED_MODULE_18__.um)(dataColor) > .6 ? presentationDefaults.darkFontColor : presentationDefaults.lightFontColor, 
                            inputBackgroundColor = (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_19__.W7)(options.objects, {
                                objectName: "inputBox",
                                propertyName: "background"
                            }, themeBackgroundColor), questionFontProperties = this.createFontProperties(options.objects, "inputBox", "question", "label", presentationDefaults.mediumFontSize, !1, colorHelper, style), 
                            commitButtonBackgroundColor = (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_19__.W7)(options.objects, {
                                objectName: "inputBox",
                                propertyName: "commitButtonBackgroundColor"
                            }, dataColor), inputPresentation = {
                                withBorder: presentationDefaults.withBorder,
                                borderColor: presentationDefaults.borderColor,
                                backgroundColor: inputBackgroundColor,
                                questionFontProperties,
                                acceptedUnderlineColor: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_19__.W7)(options.objects, {
                                    objectName: "inputBox",
                                    propertyName: "acceptedColor"
                                }, acceptedColor),
                                errorUnderlineColor: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_19__.W7)(options.objects, {
                                    objectName: "inputBox",
                                    propertyName: "errorColor"
                                }, errorColor),
                                warningUnderlineColor: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_19__.W7)(options.objects, {
                                    objectName: "inputBox",
                                    propertyName: "warningColor"
                                }, warningColor),
                                hoverColor: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_19__.W7)(options.objects, {
                                    objectName: "inputBox",
                                    propertyName: "hoverColor"
                                }, defaultHoverColor),
                                restatementFontProperties: this.createFontProperties(options.objects, "inputBox", "restatement", "smallLabel", presentationDefaults.smallFontSize, !1, colorHelper, style),
                                commitButtonBackgroundColor,
                                commitButtonForegroundColor: getContrastForegroundColor(commitButtonBackgroundColor)
                            }, this.viewModel.presentationViewModel.inputBox = inputPresentation, cardFontProperties = this.createFontProperties(options.objects, "suggestions", "card", "label", presentationDefaults.mediumFontSize, !1, colorHelper, style), 
                            options.objects && options.objects.suggestions && options.objects.suggestions.cardFontColor || (cardFontProperties.color = contrastFontToDataColor), 
                            suggestionsPresentation = {
                                show: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_19__.NA)(options.objects, {
                                    objectName: "suggestions",
                                    propertyName: "show"
                                }, !0),
                                backgroundColor: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_19__.W7)(options.objects, {
                                    objectName: "suggestions",
                                    propertyName: "cardBackground"
                                }, dataColor),
                                cardFontProperties,
                                headerFontProperties: this.createFontProperties(options.objects, "suggestions", "header", "largeLabel", presentationDefaults.largeFontSize, !1, colorHelper, style)
                            }, this.viewModel.presentationViewModel.suggestions = suggestionsPresentation, this.viewModel.qnaInputConfiguration || (this.viewModel.qnaInputConfiguration = {
                                entryPoint: this.entryPoint,
                                qnaSupportedScopes: void 0,
                                configs: defaultInputConfig
                            }), [ 4, this.updateUnknownSpanHeaderConfig() ]);

                          case 2:
                            _c.sent(), _c.label = 3;

                          case 3:
                            return (0, _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_StandaloneUtility3__WEBPACK_IMPORTED_MODULE_14__.yE)(options.type, _powerbi_legacy_PowerBIVisuals_VisualsContracts_common_enums__WEBPACK_IMPORTED_MODULE_15__.EP.Data) ? (this.inheritedFilters = options.filters, 
                            (null === (_a = this.viewModel.qnaInputConfiguration) || void 0 === _a ? void 0 : _a.qnaSupportedScopes) ? [ 4, this.setSuggestedQuestions() ] : [ 3, 6 ]) : [ 3, 7 ];

                          case 4:
                            return _c.sent(), _qna_component_core_utils__WEBPACK_IMPORTED_MODULE_13__.Ew(this.viewModel.result) && this.setSuggestionsViewModel(), 
                            [ 4, this.updateUnknownSpanHeaderConfig() ];

                          case 5:
                            _c.sent(), _c.label = 6;

                          case 6:
                            this.eventBridge.publishToChannel(_powerbi_legacy_Explore_services_events__WEBPACK_IMPORTED_MODULE_11__.jCS, {
                                affectContainer: function(vc) {
                                    return "qnaVisualContainer" === vc.name;
                                }
                            }), _c.label = 7;

                          case 7:
                            return (0, _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_StandaloneUtility3__WEBPACK_IMPORTED_MODULE_14__.yE)(options.type, _powerbi_legacy_PowerBIVisuals_VisualsContracts_common_enums__WEBPACK_IMPORTED_MODULE_15__.EP.Resize) && (this.visualContainerViewport = options.viewport, 
                            this.updateViewport(), !this.isBrowserIE && _qna_component_core_utils__WEBPACK_IMPORTED_MODULE_13__.Ew(this.viewModel.result) && this.setSuggestionsViewModel()), 
                            this.isBrowserIE || options.firstUpdate || options.objects && options.objects.hiddenProperties && (utterance = (0, 
                            _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_19__.NA)(options.objects, {
                                objectName: "hiddenProperties",
                                propertyName: "savedUtterance"
                            }, ""), this.qnaInputComponent && this.qnaInputComponent.interpretUtterance({
                                utterance,
                                suppressSuggestions: !0,
                                incomingTags: [ "Committed" ],
                                useUncommittedUtterance: !0
                            })), [ 2 ];
                        }
                    });
                });
            }, QnaComponentCoreService.prototype.enumerateObjectInstances = function(options) {
                var _a, _b, _this = this;
                if (_powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_16__.fF.assert(function() {
                    return !_this.isBrowserIE;
                }, "Expect this not to be called if it is inside IE browser"), !this.isBrowserIE) {
                    var enumeration = new _powerbi_legacy_PowerBIVisuals_Visuals_common_objectEnumerationBuilder__WEBPACK_IMPORTED_MODULE_20__.G, presentationVM = this.viewModel.presentationViewModel;
                    switch (options.objectName) {
                      case "inputBox":
                        var properties = ((_a = {}).background = presentationVM.inputBox.backgroundColor, 
                        _a.questionFontColor = presentationVM.inputBox.questionFontProperties.color, _a.questionFontSize = presentationVM.inputBox.questionFontProperties.size.pt, 
                        _a);
                        properties.questionBold = presentationVM.inputBox.questionFontProperties.weight === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_21__.en, 
                        properties.questionItalic = presentationVM.inputBox.questionFontProperties.style === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_21__.BF, 
                        properties.questionUnderline = presentationVM.inputBox.questionFontProperties.textDecoration === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_21__.f0, 
                        properties.questionFontFamily = presentationVM.inputBox.questionFontProperties.family, 
                        properties.acceptedColor = presentationVM.inputBox.acceptedUnderlineColor, properties.errorColor = presentationVM.inputBox.errorUnderlineColor, 
                        properties.warningColor = presentationVM.inputBox.warningUnderlineColor, properties.hoverColor = presentationVM.inputBox.hoverColor, 
                        properties.restatementFontColor = presentationVM.inputBox.restatementFontProperties.color, 
                        properties.restatementFontSize = presentationVM.inputBox.restatementFontProperties.size.pt, 
                        properties.restatementFontFamily = presentationVM.inputBox.restatementFontProperties.family, 
                        this.inCommitQuestionOnDemandMode && (properties.commitButtonBackgroundColor = presentationVM.inputBox.commitButtonBackgroundColor), 
                        enumeration.pushInstance({
                            selector: null,
                            properties,
                            objectName: "inputBox"
                        });
                        break;

                      case "suggestions":
                        var suggestionProperties = ((_b = {}).show = presentationVM.suggestions.show, _b.headerFontColor = presentationVM.suggestions.headerFontProperties.color, 
                        _b.headerFontSize = presentationVM.suggestions.headerFontProperties.size.pt, _b);
                        suggestionProperties.headerBold = presentationVM.suggestions.headerFontProperties.weight === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_21__.en, 
                        suggestionProperties.headerItalic = presentationVM.suggestions.headerFontProperties.style === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_21__.BF, 
                        suggestionProperties.headerUnderline = presentationVM.suggestions.headerFontProperties.textDecoration === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_21__.f0, 
                        suggestionProperties.headerFontFamily = presentationVM.suggestions.headerFontProperties.family, 
                        suggestionProperties.cardBackground = presentationVM.suggestions.backgroundColor, 
                        suggestionProperties.cardFontColor = presentationVM.suggestions.cardFontProperties.color, 
                        suggestionProperties.cardFontSize = presentationVM.suggestions.cardFontProperties.size.pt, 
                        suggestionProperties.cardBold = presentationVM.suggestions.cardFontProperties.weight === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_21__.en, 
                        suggestionProperties.cardItalic = presentationVM.suggestions.cardFontProperties.style === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_21__.BF, 
                        suggestionProperties.cardUnderline = presentationVM.suggestions.cardFontProperties.textDecoration === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_21__.f0, 
                        suggestionProperties.cardFontFamily = presentationVM.suggestions.cardFontProperties.family, 
                        enumeration.pushInstance({
                            selector: null,
                            properties: suggestionProperties,
                            objectName: "suggestions"
                        });
                    }
                    return enumeration.complete();
                }
            }, QnaComponentCoreService.prototype.getFormattingModel = function() {
                var _this = this;
                if (_powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_16__.fF.assert(function() {
                    return !_this.isBrowserIE;
                }, "Expect this not to be called if it is inside IE browser"), !this.isBrowserIE) {
                    var presentationVM = this.viewModel.presentationViewModel;
                    return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.Nq(function() {
                        return _this.buildInputBoxFormattingCard(presentationVM);
                    }, function() {
                        return _this.buildRestatementFormattingCard(presentationVM);
                    }, function() {
                        return _this.buildSuggestionsFormattingCard(presentationVM);
                    }).build();
                }
            }, QnaComponentCoreService.prototype.getCurrentVisual = function() {
                var _a, content = null === (_a = this.viewModel) || void 0 === _a ? void 0 : _a.result;
                return _qna_component_core_utils__WEBPACK_IMPORTED_MODULE_13__.mn(content) ? content.visual : _qna_component_core_utils__WEBPACK_IMPORTED_MODULE_13__.fU(content) ? _.first(content.exploreCanvas.contract.visualContainers) : _qna_component_core_utils__WEBPACK_IMPORTED_MODULE_13__.wp(content) ? content.visualWithError : void 0;
            }, QnaComponentCoreService.prototype.getCurrentUtteranceTrimmed = function() {
                return _.trim(this.getCurrentUtteranceUntrimmed());
            }, QnaComponentCoreService.prototype.setGetQnaInputComponentFunc = function(getQnaInputComponent) {
                _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_16__.fF.assertValue(getQnaInputComponent, "getQnaInputComponent must be defined."), 
                this.getQnaInputComponent = getQnaInputComponent;
            }, QnaComponentCoreService.prototype.convertVisualClicked = function() {
                var currentVisual = this.getCurrentVisual();
                if (currentVisual) {
                    var visualType = (0, _powerbi_legacy_Explore_util_visualContainerUtils__WEBPACK_IMPORTED_MODULE_23__.s)(currentVisual);
                    this.telemetryService.logChildEvent(this.initializedTelemetryEvent, _telemetry_events__WEBPACK_IMPORTED_MODULE_24__.dN, {
                        visualType
                    }), this.convertVisual.emit(currentVisual);
                }
            }, QnaComponentCoreService.prototype.interpretSuggestedQuestion = function(suggestion) {
                var _this = this;
                this.telemetryService.logChildEvent(this.initializedTelemetryEvent, _telemetry_events__WEBPACK_IMPORTED_MODULE_24__.WW, {
                    isAutoSuggestion: !0
                }), this.qnaInputComponent && this.undoRedoService.register("Commit suggested QnA utterance", function() {
                    _this.qnaInputComponent.interpretUtterance({
                        utterance: suggestion,
                        suppressSuggestions: !0,
                        incomingTags: [ "SuggestedUtterance", "Committed" ],
                        requireCursorAtEndIfFocused: !0,
                        enforceFocus: !0,
                        isCommitInCommitQuestionOnDemandMode: !0
                    });
                });
            }, QnaComponentCoreService.prototype.toggleShowAllSuggestions = function() {
                if (_qna_component_core_utils__WEBPACK_IMPORTED_MODULE_13__.Ew(this.viewModel.result)) {
                    var suggestionsContent = this.viewModel.result;
                    suggestionsContent.showAllSuggestions = !suggestionsContent.showAllSuggestions, 
                    this.setSuggestionsViewModel();
                }
            }, QnaComponentCoreService.prototype.showQnaVisualErrorDetails = function() {
                (0, _utils_visual_util__WEBPACK_IMPORTED_MODULE_5__.aZ)(this.viewModel.error, this.errorService, this.localizationService);
            }, QnaComponentCoreService.prototype.showResultErrorDetails = function() {
                (_qna_component_core_utils__WEBPACK_IMPORTED_MODULE_13__.uT(this.viewModel.result) || _qna_component_core_utils__WEBPACK_IMPORTED_MODULE_13__.wp(this.viewModel.result)) && (0, 
                _utils_visual_util__WEBPACK_IMPORTED_MODULE_5__.aZ)(this.viewModel.result, this.errorService, this.localizationService);
            }, QnaComponentCoreService.prototype.updateViewport = function() {
                if (!this.isBrowserIE) {
                    var visualOrReportOuterContainerElement = this.contentElement.nativeElement;
                    this.viewport = {
                        scale: 1,
                        height: visualOrReportOuterContainerElement.clientHeight - 10,
                        width: visualOrReportOuterContainerElement.clientWidth - 10
                    }, this.viewModel.viewport = this.viewport;
                }
            }, QnaComponentCoreService.prototype.getUnknownSpanDropdownHeaderActionType = function() {
                return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return this.qnaLiveConnectService ? this.qnaLiveConnectService.allowsLinguisticSchemaFeedback() ? [ 2, "askToAdd" ] : [ 3, 1 ] : [ 2, "askToAdd" ];

                          case 1:
                            return [ 4, this.allowTooling() ];

                          case 2:
                            return _a.sent() ? [ 2, "defineInTooling" ] : [ 2, "none" ];

                          case 3:
                            return [ 2 ];
                        }
                    });
                });
            }, QnaComponentCoreService.prototype.allowTooling = function() {
                var _a;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function() {
                    var canEdit, explorationCapabilities, _b;
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__generator)(this, function(_c) {
                        switch (_c.label) {
                          case 0:
                            return null == (canEdit = null === (_a = this.config) || void 0 === _a ? void 0 : _a.canEdit) && (canEdit = 0 !== this.viewModeState.getMode()), 
                            canEdit && (null == (explorationCapabilities = this.explorationCapabilities.getCapabilities()) ? void 0 : explorationCapabilities.allowQnaTooling) ? null != this.isModelEditable ? [ 3, 2 ] : (_b = this, 
                            [ 4, this.getIsModelEditable() ]) : [ 2, !1 ];

                          case 1:
                            _b.isModelEditable = _c.sent(), _c.label = 2;

                          case 2:
                            return this.isModelEditable ? [ 2, !0 ] : [ 2, !1 ];
                        }
                    });
                });
            }, QnaComponentCoreService.prototype.shouldShowThumbsUpDown = function() {
                return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return this.isBrowserIE ? [ 2, !1 ] : this.featureSwitchService.featureSwitches.qnaThumbsUpDown ? [ 4, this.getIsModelEditable() ] : [ 2, !1 ];

                          case 1:
                            return [ 2, !_a.sent() ];
                        }
                    });
                });
            }, QnaComponentCoreService.prototype.showFeedbackForCurrentQuestion = function() {
                var _a, _this = this;
                if (_powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_16__.fF.assert(function() {
                    return !_this.isBrowserIE;
                }, "Expect this never get called if it is inside IE browser"), this.isBrowserIE) return !1;
                var content = null === (_a = this.viewModel) || void 0 === _a ? void 0 : _a.result;
                return !!content && (_qna_component_core_utils__WEBPACK_IMPORTED_MODULE_13__.mn(content) || _qna_component_core_utils__WEBPACK_IMPORTED_MODULE_13__.lP(content) || _qna_component_core_utils__WEBPACK_IMPORTED_MODULE_13__.fU(content));
            }, QnaComponentCoreService.prototype.sendFeedback = function(feedback) {
                return this.logFeedbackTelemetry(feedback), this.qnaInputComponent.sendFeedback(feedback, this.getCurrentUtteranceTrimmed());
            }, QnaComponentCoreService.prototype.launchFeedbackDialog = function(sentiment, showOptions) {
                return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function() {
                    var e_1, _this = this;
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return _a.trys.push([ 0, 2, , 3 ]), [ 4, this.dialogService.openHostDialog({
                                bindings: {
                                    sentiment,
                                    showOptions
                                },
                                componentName: _powerbi_ExploreUI_explore_ui_dialogs_identifiers__WEBPACK_IMPORTED_MODULE_25__.Xr,
                                config: {
                                    minWidth: "600px",
                                    panelClass: [ "no-padding" ]
                                },
                                dialogName: "QnaFeedbackDialog"
                            }) ];

                          case 1:
                            return _a.sent().afterClosed().pipe((0, rxjs_operators__WEBPACK_IMPORTED_MODULE_26__.q)(1)).subscribe(function(feedback) {
                                if (feedback && (!_.isEmpty(feedback.reason) || !_.isEmpty(feedback.comment))) {
                                    _this.sendFeedback(feedback);
                                    var state = 1 === sentiment ? "PositiveDetailSubmitted" : "NegativeDetailSubmitted";
                                    _this.qnaFeedbackStateService.updateState(_this.getCurrentUtteranceTrimmed(), state);
                                }
                            }), [ 3, 3 ];

                          case 2:
                            return e_1 = _a.sent(), _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_16__.fF.assertFail("Qna Feedback dialog failed to open"), 
                            _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_16__.fF.log(e_1), 
                            [ 3, 3 ];

                          case 3:
                            return [ 2 ];
                        }
                    });
                });
            }, QnaComponentCoreService.prototype.updateUnknownSpanHeaderConfig = function() {
                var _a;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function() {
                    var inputSpanDropdownHeaderConfig, _b, _c;
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__generator)(this, function(_d) {
                        switch (_d.label) {
                          case 0:
                            return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_16__.fF.assertValue(this.viewModel.qnaInputConfiguration.configs, "Expect this.viewModel.qnaInputConfiguration.configs has already been defined"), 
                            "textOnlyHeader" === (null === (_a = null == (inputSpanDropdownHeaderConfig = this.viewModel.qnaInputConfiguration.configs.spanDropdownHeaderConfig) ? void 0 : inputSpanDropdownHeaderConfig.unknownSpanHeaderConfig) || void 0 === _a ? void 0 : _a.actionType) ? [ 3, 2 ] : (this.viewModel.qnaInputConfiguration.configs.spanDropdownHeaderConfig || (this.viewModel.qnaInputConfiguration.configs.spanDropdownHeaderConfig = {
                                show: void 0
                            }), _b = this.viewModel.qnaInputConfiguration.configs.spanDropdownHeaderConfig, 
                            _c = {}, [ 4, this.getUnknownSpanDropdownHeaderActionType() ]);

                          case 1:
                            _b.unknownSpanHeaderConfig = (_c.actionType = _d.sent(), _c), _d.label = 2;

                          case 2:
                            return [ 2 ];
                        }
                    });
                });
            }, QnaComponentCoreService.prototype.logFeedbackTelemetry = function(feedback) {
                this.telemetryService.logChildEvent(this.initializedTelemetryEvent, _telemetry_events__WEBPACK_IMPORTED_MODULE_24__.v5, {
                    senitment: this.mapToTelemetryFeedbackSentiment(feedback.sentiment),
                    reason: feedback.reason
                });
            }, QnaComponentCoreService.prototype.mapToTelemetryFeedbackSentiment = function(sentiment) {
                return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_16__.fF.assert(function() {
                    return 1 === sentiment || -1 === sentiment;
                }, "unexpected telemetry sentiment"), 1 === sentiment ? "Positive" : "Negative";
            }, QnaComponentCoreService.prototype.shouldShowdoNotUnderstandMessageFeedbackLink = function() {
                var utterance = this.getCurrentUtteranceTrimmed();
                return "NegativeDetailSubmitted" !== this.qnaFeedbackStateService.getState(utterance);
            }, Object.defineProperty(QnaComponentCoreService.prototype, "qnaInputComponent", {
                get: function() {
                    return this.getQnaInputComponent && this.getQnaInputComponent();
                },
                enumerable: !1,
                configurable: !0
            }), QnaComponentCoreService.prototype.getIsModelEditable = function() {
                return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function() {
                    var dataSource, schema, capabilities;
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return dataSource = _.find(this.dataSources.get(), function(d) {
                                return d.type === _powerbi_legacy_PowerBIContracts_constants__WEBPACK_IMPORTED_MODULE_8__.nKy;
                            }), [ 4, this.conceptualSchemaProxy.get(this.dataSources.get()) ];

                          case 1:
                            return schema = _a.sent(), [ 2, null == (capabilities = dataSource && (null == schema ? void 0 : schema.schema(dataSource.name).capabilities)) ? void 0 : capabilities.canEdit ];
                        }
                    });
                });
            }, QnaComponentCoreService.prototype.getCurrentUtteranceUntrimmed = function() {
                return this.qnaInputComponent && this.qnaInputComponent.currentDisplayedUtterance;
            }, QnaComponentCoreService.prototype.setSuggestedQuestions = function() {
                return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function() {
                    var resultResponse, result, suggestedQuestions, _i, _a, _this = this;
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_16__.fF.assert(function() {
                                return !!_this.interpretService;
                            }, "interpretService should be defined"), this.pendingSuggestedQuestionsRequests++, 
                            [ 4, this.interpretService.getSuggestedQuestions(this.convertRequestScopes(this.viewModel.qnaInputConfiguration.qnaSupportedScopes)).toPromise() ];

                          case 1:
                            if (resultResponse = _b.sent(), this.pendingSuggestedQuestionsRequests--, result = resultResponse.result, 
                            "Loading" === this.viewModel.state && this.pendingSuggestedQuestionsRequests > 0 && !resultResponse.error && _.isEmpty(null == result ? void 0 : result.utterances)) return [ 2 ];
                            if (resultResponse.error) return this.viewModel.error = this.getErrorDetailsFromError(resultResponse.error), 
                            this.viewModel.state = "Error", [ 2 ];
                            if (suggestedQuestions = _.chain(this.models).map(function(model) {
                                return _.map(model.featuredQuestions, function(f) {
                                    return f.utterance;
                                });
                            }).flatten().value(), _.isEmpty(suggestedQuestions)) for (suggestedQuestions = [], 
                            _i = 0, _a = result.utterances; _i < _a.length; _i++) suggestedQuestions.push(_a[_i].text);
                            return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_16__.fF.assert(function() {
                                return !_.isEmpty(result.utterances) || !_.isEmpty(result.warnings);
                            }, "No suggested question but no warning? something is wrong."), this.suggestions = {
                                questions: suggestedQuestions,
                                hasWarnings: !_.isEmpty(result.warnings)
                            }, this.viewModel.state = "Ready", [ 2 ];
                        }
                    });
                });
            }, QnaComponentCoreService.prototype.getErrorDetailsFromError = function(error) {
                _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_16__.fF.assertValue(error, "Expect the given error to be defined.");
                var hideSeeDetails, mainMessage = (0, _utils_wireClientContractsConversion_util__WEBPACK_IMPORTED_MODULE_27__.AU)(error.errorCode, this.localizationService), telemetryCode = error.errorCode, displayableErrorInfo = [], debugErrorInfo = [];
                if ("SchemaLanguageNotSupported" === error.errorCode) hideSeeDetails = !1, displayableErrorInfo = [ {
                    errorInfoKey: this.localizationService.get("VisualContainer_QnaVisual_NotSupportedTitle"),
                    errorInfoValue: this.localizationService.get("VisualContainer_QnaVisual_NotSupportedMessage")
                } ]; else if (!(hideSeeDetails = "GenericRequestFailure" !== telemetryCode)) if (error.sourceServiceError) {
                    var errorDetails = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_serviceError__WEBPACK_IMPORTED_MODULE_28__.sI(error.sourceServiceError).getDetails(this.localizationService);
                    displayableErrorInfo = errorDetails.displayableErrorInfo, debugErrorInfo = errorDetails.debugErrorInfo;
                } else _.isEmpty(error.message) || debugErrorInfo.push({
                    errorInfoKey: _powerbi_legacy_PowerBIVisuals_VisualsCommon_clientError__WEBPACK_IMPORTED_MODULE_29__.Bm,
                    errorInfoValue: error.message
                }), _.isEmpty(error.stackTrace) || debugErrorInfo.push({
                    errorInfoKey: _powerbi_legacy_PowerBIVisuals_VisualsCommon_clientError__WEBPACK_IMPORTED_MODULE_29__.RU,
                    errorInfoValue: error.stackTrace
                });
                var result = {
                    code: telemetryCode,
                    fixableError: 0,
                    hideSeeDetails,
                    details: {
                        message: mainMessage,
                        displayableErrorInfo,
                        debugErrorInfo
                    },
                    source: error.source
                };
                return "DataIndexMissingAllStatistics" === error.errorCode && (result.details.helpLink = "https://go.microsoft.com/fwlink/?LinkId=786785", 
                result.details.helpLinkType = 1, result.details.errorType = 1), _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_16__.fF.assert(function() {
                    return !_.isEmpty(result.code);
                }, "telemetryCode should not be empty"), _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_16__.fF.assert(function() {
                    return null != result.hideSeeDetails;
                }, "hideSeeDetails should not be null"), _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_16__.fF.assert(function() {
                    return !_.isEmpty(result.details.message);
                }, "mainMessage should not be empty"), _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_16__.fF.assert(function() {
                    return null != result.source;
                }, "errorSource should not be null"), result;
            }, QnaComponentCoreService.prototype.setSuggestionsViewModel = function() {
                var _a, _b, _c, _this = this;
                _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_16__.fF.assert(function() {
                    return !_this.isBrowserIE;
                }, "Expect this never get called if it is inside IE browser");
                var numberOfSuggestions = _.size(null === (_a = this.suggestions) || void 0 === _a ? void 0 : _a.questions), content = this.viewModel.result, showAllSuggestions = !!_qna_component_core_utils__WEBPACK_IMPORTED_MODULE_13__.Ew(content) && content.showAllSuggestions;
                numberOfSuggestions > 0 && !showAllSuggestions && (numberOfSuggestions = Math.floor(this.contentElement.nativeElement.clientWidth / 200)) <= 1 && (numberOfSuggestions = 5);
                var takenQuestions = _.take(null === (_b = this.suggestions) || void 0 === _b ? void 0 : _b.questions, numberOfSuggestions), takenQuestionsCount = _.size(takenQuestions);
                this.viewModel.result = {
                    type: "Suggestions",
                    suggestions: _.map(takenQuestions, function(question, index) {
                        return {
                            content: question,
                            accessibilityLabel: _this.localizationService.format("Visual_Qna_SuggestedQuestion_AccessibilityLabel", index + 1, takenQuestionsCount, question)
                        };
                    }),
                    showAllSuggestions,
                    failedToLoadSuggestionsMessage: 0 === numberOfSuggestions && (null === (_c = this.suggestions) || void 0 === _c ? void 0 : _c.hasWarnings) ? this.localizationService.get("QnaStart_ErrorLoadingSuggestions") : void 0
                };
            }, QnaComponentCoreService.prototype.onResultAvailable = function(result) {
                var _a, _b, _c;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function() {
                    var restatement, modelId, vcObjects, section, clonedVisual, exploration, activeSection_1, model, _this = this;
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__generator)(this, function(_d) {
                        switch (_d.label) {
                          case 0:
                            return result && 1 === result.resultType ? [ 2 ] : result ? (this.showQuestionProblematicResultTimeout && (clearTimeout(this.showQuestionProblematicResultTimeout), 
                            this.showQuestionProblematicResultTimeout = void 0), _.includes(result.usedAgents, "PowerBI.AzureOpenAISynonyms") ? [ 4, this.logInterpretCopilotTelemetry() ] : [ 3, 2 ]) : (this.pinnableContentDefinitionUpdated.emit(void 0), 
                            this.viewModel.result = void 0, [ 2 ]);

                          case 1:
                            _d.sent(), _d.label = 2;

                          case 2:
                            return null != result.utterance && this.utteranceUpdated.emit(result.utterance), 
                            this.updateViewport(), 4 === result.resultType && this.setSuggestionsViewModel(), 
                            4 !== result.resultType && 6 !== result.resultType && 0 !== result.resultType && result.doNotShowResult && (this.showQuestionProblematicResultTimeout = setTimeout(function() {
                                var interpretError = result.interpretError;
                                if (interpretError) _this.interpretationError && _this.interpretationError.emit(), 
                                _this.viewModel.result = (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__assign)({
                                    type: "Error"
                                }, _this.getErrorDetailsFromError(interpretError)); else {
                                    var noVisualMessage = _this.localizationService.get("Qna_NoVisual_Message");
                                    _this.viewModel.result = {
                                        type: "DoNotUnderstand",
                                        message: _.isEmpty(result.doNotShowResultCustomMessageKeys) ? noVisualMessage : _.map(result.doNotShowResultCustomMessageKeys, function(key) {
                                            return _this.localizationService.get(key);
                                        }).join("\n\n")
                                    }, _this.screenReaderService.alert(noVisualMessage);
                                }
                            }, 1500)), 4 === result.resultType || 6 === result.resultType || result.doNotShowResult || 2 !== result.resultType || !result.visualContainer && !result.exploration ? (this.pinnableContentDefinitionUpdated.emit(void 0), 
                            this.cancelVisualUpdateAlert(), [ 2 ]) : (this.utteranceRestated && this.utteranceRestated.emit(result.restatement), 
                            _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_16__.fF.assertValue(result.visualContainer || result.exploration, "result should contain either visualContainer or exploration"), 
                            result.visualContainer && (result.visualContainer.name = "qnaVisualContainer"), 
                            restatement = result.restatement, _.startsWith(restatement, "Show ") && (restatement = _.replace(restatement, "Show ", result.visualContainer ? "This visual is showing " : "Showing ")), 
                            modelId = result.modelId, result.visualContainer ? (_powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_16__.fF.assert(function() {
                                var _a;
                                return !!(null === (_a = result.visualContainer.config) || void 0 === _a ? void 0 : _a.singleVisual);
                            }, "single visual is not defined"), this.config.showVisualsAsExploration ? (result.visualContainer.layouts = (0, 
                            _powerbi_legacy_PowerBIVisuals_VisualsCommon_arrayExtensions__WEBPACK_IMPORTED_MODULE_30__.Br)([ {
                                id: 0,
                                position: {
                                    x: 0,
                                    y: 0,
                                    height: this.viewport.height,
                                    width: this.viewport.width
                                }
                            } ]), (vcObjects = null !== (_a = (0, _powerbi_legacy_Explore_util_visualContainerUtils__WEBPACK_IMPORTED_MODULE_31__.PQ)(result.visualContainer).vcObjects) && void 0 !== _a ? _a : {}).title = [ {
                                properties: {
                                    show: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_semanticQuery_sqExpr__WEBPACK_IMPORTED_MODULE_32__.O7)(!1)
                                }
                            } ], result.visualContainer.config.singleVisual.vcObjects = vcObjects, section = {
                                name: "QnaSection",
                                displayName: "QnaSection",
                                size: {
                                    displayOption: 0,
                                    width: this.viewport.width,
                                    height: this.viewport.height
                                },
                                visualContainers: [ result.visualContainer ],
                                visualContainerGroups: [ result.visualContainer ],
                                filters: []
                            }, exploration = {
                                themeCollection: (0, _utils_visual_util__WEBPACK_IMPORTED_MODULE_5__.D4)(this.featureSwitchService),
                                dataSources: this.dataSources.get(),
                                sections: [ section ],
                                settings: {
                                    useNewFilterPaneExperience: !0,
                                    allowChangeFilterTypes: !0
                                }
                            }, this.explorationNavigation.loadExploration(exploration), this.explorationNavigation.goto(section), 
                            this.viewModel.result = {
                                type: "VisualAsExploration",
                                restatement,
                                exploreCanvas: (0, _powerbi_legacy_ExploreUI_viewModels_viewModelFactory__WEBPACK_IMPORTED_MODULE_33__.T8)(exploration, section, 0),
                                modelId
                            }, _powerbi_legacy_Explore_services_selectionUtils__WEBPACK_IMPORTED_MODULE_34__.UP.selectCanvasItem(result.visualContainer, this.selectionService), 
                            this.explorationActivity.sendExplorationContainerReady({
                                parentActivity: void 0
                            })) : (this.viewModel.result = void 0, setTimeout(function() {
                                return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(_this, void 0, void 0, function() {
                                    var selectExprs, _this = this;
                                    return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__generator)(this, function(_a) {
                                        switch (_a.label) {
                                          case 0:
                                            return this.viewModel.result = {
                                                type: "Visual",
                                                restatement,
                                                visual: result.visualContainer,
                                                modelId,
                                                isLoading: !0
                                            }, selectExprs = (0, _powerbi_legacy_Explore_util_visualContainerUtils__WEBPACK_IMPORTED_MODULE_31__.oJ)(result.visualContainer), 
                                            _.isEmpty(selectExprs) ? [ 3, 2 ] : [ 4, this.createSortHelper(result.visualContainer) ];

                                          case 1:
                                            _a.sent(), _a.label = 2;

                                          case 2:
                                            return this.changeDetectorRef.detectChanges(), this.eventBridge.publishToChannel(_powerbi_legacy_Explore_services_events__WEBPACK_IMPORTED_MODULE_11__.jCS, {
                                                affectContainer: function(vc) {
                                                    return vc.name === result.visualContainer.name;
                                                }
                                            }), setTimeout(function() {
                                                return _this.updateViewport();
                                            }), [ 2 ];
                                        }
                                    });
                                });
                            })), clonedVisual = (0, _powerbi_legacy_Explore_contracts_visualContainer2__WEBPACK_IMPORTED_MODULE_35__.d9)(result.visualContainer, this.explorationSerializer), 
                            null != (null === (_c = null === (_b = null == clonedVisual ? void 0 : clonedVisual.config) || void 0 === _b ? void 0 : _b.singleVisual) || void 0 === _c ? void 0 : _c.vcObjects) && (clonedVisual.config.singleVisual.vcObjects = void 0), 
                            this.pinnableContentDefinitionUpdated.emit({
                                pinVisualArgs: {
                                    dataSources: this.dataSources.get(),
                                    filters: this.createVisualContainerFilters(result.visualContainer, result.visualContainer.filters),
                                    modelId,
                                    resourcePackages: void 0,
                                    themeCollection: this.viewModel.themeCollection,
                                    utterance: result.utterance,
                                    visualContainer: clonedVisual
                                }
                            }), this.alertVisualUpdate(this.getCurrentUtteranceTrimmed(), (0, _powerbi_legacy_Explore_util_visualContainerUtils__WEBPACK_IMPORTED_MODULE_23__.s)(result.visualContainer)), 
                            [ 3, 6 ]) : [ 3, 3 ]);

                          case 3:
                            return result.exploration ? (this.updateViewport(), result.exploration.themeCollection ? [ 4, _powerbi_legacy_VisualHostUI_utils_themeUtils__WEBPACK_IMPORTED_MODULE_36__.P.loadThemeAndBaseTheme(this.promiseFactory, this.resourceLoader, this.themeService, result.exploration.resourcePackages, result.exploration.themeCollection) ] : [ 3, 5 ]) : [ 3, 6 ];

                          case 4:
                            _d.sent(), _d.label = 5;

                          case 5:
                            activeSection_1 = (exploration = result.exploration).sections[exploration.activeSectionIndex], 
                            this.explorationNavigation.loadExploration(exploration), this.explorationNavigation.goto(activeSection_1), 
                            this.viewModel.result = {
                                type: "Pod",
                                restatement,
                                exploreCanvas: (0, _powerbi_legacy_ExploreUI_viewModels_viewModelFactory__WEBPACK_IMPORTED_MODULE_33__.T8)(exploration, activeSection_1, 0),
                                modelId
                            }, model = _.find(this.models, function(m) {
                                return m.id === modelId;
                            }), this.pinnableContentDefinitionUpdated.emit({
                                pinReportPageArgs: {
                                    exploration: (0, _powerbi_legacy_ExploreUI_viewModels_viewModelFactory__WEBPACK_IMPORTED_MODULE_33__.vi)(exploration, 0, exploration.activeSectionIndex, void 0, this.localizationService),
                                    section: activeSection_1,
                                    reportId: exploration.reportId,
                                    modelId,
                                    packageId: model && model.packageId,
                                    action: {
                                        action: _powerbi_legacy_PowerBIContracts_constants__WEBPACK_IMPORTED_MODULE_8__.RCq
                                    },
                                    utterance: result.utterance,
                                    pod: _.find(result.exploration.pods, function(p) {
                                        return p.boundSection === activeSection_1.name;
                                    }).name,
                                    filters: activeSection_1.filters
                                }
                            }), this.cancelVisualUpdateAlert(), _d.label = 6;

                          case 6:
                            return [ 2 ];
                        }
                    });
                });
            }, QnaComponentCoreService.prototype.createSortHelper = function(visualContainer) {
                return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function() {
                    var _a;
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return _a = this, [ 4, (0, _utils_visual_util__WEBPACK_IMPORTED_MODULE_5__.Vq)(visualContainer, this.conceptualSchemaProxy, this.dataSources, this.sortService, this.undoRedoService, this.visualAuthoringOpService, this.visualPlugin) ];

                          case 1:
                            return _a.sortHelper = _b.sent(), [ 2 ];
                        }
                    });
                });
            }, QnaComponentCoreService.prototype.createFontProperties = function(objects, objectName, fontComponentName, textClass, defaultSize, isSemibold, colorHelper, style) {
                var properties = objects && objects[objectName], boldPropertyNameValue = "".concat(fontComponentName).concat("Bold"), italicPropertyNameValue = "".concat(fontComponentName).concat("Italic"), underlinePropertyNameValue = "".concat(fontComponentName).concat("Underline"), boldPropValue = (0, 
                _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject3__WEBPACK_IMPORTED_MODULE_37__.N)(properties, boldPropertyNameValue), italicPropValue = (0, 
                _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject3__WEBPACK_IMPORTED_MODULE_37__.N)(properties, italicPropertyNameValue), underlinePropValue = (0, 
                _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject3__WEBPACK_IMPORTED_MODULE_37__.N)(properties, underlinePropertyNameValue), propertyNames = {
                    color: "".concat(fontComponentName).concat("FontColor"),
                    family: "".concat(fontComponentName).concat("FontFamily"),
                    size: "".concat(fontComponentName).concat("FontSize")
                };
                return boldPropValue && (propertyNames.bold = "".concat(fontComponentName).concat("Bold")), 
                italicPropValue && (propertyNames.italic = "".concat(fontComponentName).concat("Italic")), 
                underlinePropValue && (propertyNames.underline = "".concat(fontComponentName).concat("Underline")), 
                (0, _powerbi_legacy_PowerBIVisuals_Visuals_common_fontProperties__WEBPACK_IMPORTED_MODULE_38__.Zi)(objects && objects[objectName], propertyNames, colorHelper, style, "foreground", textClass, {
                    color: presentationDefaults.fontColor,
                    family: isSemibold ? presentationDefaults.semiboldFont : presentationDefaults.regularFont,
                    size: defaultSize,
                    weight: _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_21__.AI,
                    style: _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_21__.AI,
                    textDecoration: _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_21__.zu
                });
            }, QnaComponentCoreService.prototype.createVisualContainerFilters = function(visualContainer, filters) {
                var dataFilters = _.isEmpty(filters) ? [] : _.chain(filters).filter(function(f) {
                    return f.filter;
                }).map(function(f) {
                    return f.filter;
                }).value();
                this.inheritedFilters && this.inheritedFilters.dataFilter && dataFilters.push.apply(dataFilters, _.map(this.inheritedFilters.dataFiltersUnmerged, function(f) {
                    return f.filter;
                }));
                for (var filterBuilder = new _powerbi_legacy_Explore_services_filters_filterBuilder__WEBPACK_IMPORTED_MODULE_39__.ME, _i = 0, dataFilters_1 = dataFilters; _i < dataFilters_1.length; _i++) filterBuilder.addVisualFilter({
                    filter: dataFilters_1[_i]
                });
                var visualType = (0, _powerbi_legacy_Explore_util_visualContainerUtils__WEBPACK_IMPORTED_MODULE_23__.s)(visualContainer), capabilities = visualType && this.visualPlugin.capabilities(visualType), supportsHighlights = capabilities && capabilities.supportsHighlight;
                !supportsHighlights && this.inheritedFilters && this.inheritedFilters.highlightFilter && filterBuilder.addVisualFilter({
                    filter: this.inheritedFilters.highlightFilter
                });
                var newFilters = filterBuilder.getFilters(!1);
                return {
                    dataFilter: newFilters.dataFilter,
                    dataFiltersUnmerged: newFilters.dataFiltersUnmerged,
                    highlightFilter: supportsHighlights && this.inheritedFilters ? this.inheritedFilters.highlightFilter : void 0,
                    highlightFiltersUnmerged: supportsHighlights && this.inheritedFilters ? this.inheritedFilters.highlightFiltersUnmerged : void 0
                };
            }, QnaComponentCoreService.prototype.handleQueryErrors = function(error) {
                if (!error.ignorable) {
                    var details = error.getDetails(this.localizationService), overlayType = (0, _powerbi_legacy_ExploreUI_utils_errorDetailsUtility__WEBPACK_IMPORTED_MODULE_40__.fe)(error.code);
                    this.viewModel.result = {
                        type: "QueryError",
                        visualWithError: this.getCurrentVisual(),
                        details,
                        code: error.code,
                        fixableError: 0,
                        hideSeeDetails: (0, _powerbi_legacy_ExploreUI_utils_errorDetailsUtility__WEBPACK_IMPORTED_MODULE_40__.O6)(error.code),
                        overlayType,
                        requestId: error.requestId,
                        source: details.source || error.source || "PowerBI"
                    }, this.cancelVisualUpdateAlert();
                }
            }, QnaComponentCoreService.prototype.alertVisualUpdate = function(restatement, visualType) {
                if (restatement) {
                    var message = visualType ? this.localizationService.format("Qna_ScreenReader_VisualUpdatedWithChartType", [ restatement, visualType ]) : this.localizationService.format("Qna_ScreenReader_VisualUpdated", [ restatement ]);
                    this.screenReaderService.alertWithDebounce("qna_visual_update", message);
                }
            }, QnaComponentCoreService.prototype.cancelVisualUpdateAlert = function() {
                this.screenReaderService.cancelDebounce("qna_visual_update");
            }, QnaComponentCoreService.prototype.logInterpretCopilotTelemetry = function() {
                var _a;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function() {
                    var interpretCopilotTelemetryPath, isSignedIn, viewMode;
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return interpretCopilotTelemetryPath = null !== (_a = this.qnaProxyPathToken) && void 0 !== _a ? _a : "@powerbi/Qna/qnaweb.module#QnaWebModule", 
                            [ 4, this.ensureInterpretCopilotTelemetry(interpretCopilotTelemetryPath) ];

                          case 1:
                            return _b.sent(), [ 4, this.accountService.isSignedInAsync() ];

                          case 2:
                            return isSignedIn = _b.sent(), viewMode = this.viewModeState.getMode(), this.interpretCopilotTelemetry.logInterpretWithCopilotEvent("@powerbi/Qna/qnaweb.module#QnaWebModule" === this.qnaProxyPathToken ? "service" : "desktop", isSignedIn, viewMode), 
                            [ 2 ];
                        }
                    });
                });
            }, QnaComponentCoreService.prototype.ensureInterpretCopilotTelemetry = function(path) {
                return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function() {
                    var _a;
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return null != this.interpretCopilotTelemetry ? [ 2 ] : (_a = this, [ 4, this.lazyProvider.get(path, "interpretCopilotTelemetryService") ]);

                          case 1:
                            return _a.interpretCopilotTelemetry = _b.sent(), [ 2 ];
                        }
                    });
                });
            }, QnaComponentCoreService.prototype.convertRequestScopes = function(scopes) {
                return _.map(scopes, function(scope) {
                    return {
                        model: scope.model,
                        reportIds: scope.reportIds
                    };
                });
            }, QnaComponentCoreService.prototype.buildInputBoxFormattingCard = function(presentationVM) {
                var _this = this, inputBoxProps = _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_qnaVisual_capabilities__WEBPACK_IMPORTED_MODULE_41__.Fp.inputBox, inputBoxCardBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.CQ(new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.lg("inputBox"), "Visual_Qna_QuestionBox", inputBoxProps, function(key) {
                    return _this.localizationService.get(key);
                }), boldPropValue = presentationVM.inputBox.questionFontProperties.weight === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_21__.en, italicPropValue = presentationVM.inputBox.questionFontProperties.style === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_21__.BF, underlinePropValue = presentationVM.inputBox.questionFontProperties.textDecoration === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_21__.f0, fontControl = (new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.UN).withFontFamily({
                    descriptor: inputBoxProps.questionFontFamily,
                    value: presentationVM.inputBox.questionFontProperties.family
                }).withFontSizeProperties({
                    descriptor: inputBoxProps.questionFontSize,
                    value: presentationVM.inputBox.questionFontProperties.size.pt
                }).withBold({
                    descriptor: inputBoxProps.questionBold,
                    value: boldPropValue
                }).withItalic({
                    descriptor: inputBoxProps.questionItalic,
                    value: italicPropValue
                }).withUnderline({
                    descriptor: inputBoxProps.questionUnderline,
                    value: underlinePropValue
                }).build();
                return inputBoxCardBuilder.addGroup("text", function(groupBuilder) {
                    groupBuilder.withDisplayName("Text").addCompositeSlice("fontselector", "Font", fontControl).addSimpleSlice("color", function() {
                        return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.BT({
                            descriptor: inputBoxProps.questionFontColor,
                            value: {
                                value: presentationVM.inputBox.questionFontProperties.color
                            }
                        }).build();
                    }, function(builder) {
                        return builder.withCustomDisplayName("Generic_Color");
                    });
                }), inputBoxCardBuilder.addGroup("background", function(groupBuilder) {
                    groupBuilder.withDisplayName("Visual_Background").addSimpleSlice("defaultColor", function() {
                        return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.BT({
                            descriptor: inputBoxProps.background,
                            value: {
                                value: presentationVM.inputBox.backgroundColor
                            }
                        }).build();
                    }, function(builder) {
                        return builder.withCustomDisplayName("Visual_Qna_QuestionBackgroundColor");
                    }).addSimpleSlice("hoverColor", function() {
                        return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.BT({
                            descriptor: inputBoxProps.hoverColor,
                            value: {
                                value: presentationVM.inputBox.hoverColor
                            }
                        }).build();
                    }, function(builder) {
                        return builder.withCustomDisplayName("Visual_Qna_QuestionBackgroundHoverColor");
                    });
                }), inputBoxCardBuilder.addGroup("underlines", function(groupBuilder) {
                    groupBuilder.withDisplayName("Underline").addSimpleSlice("acceptedColor", function() {
                        return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.BT({
                            descriptor: inputBoxProps.acceptedColor,
                            value: {
                                value: presentationVM.inputBox.acceptedUnderlineColor
                            }
                        }).build();
                    }, function(builder) {
                        return builder.withCustomDisplayName("AcceptedColor");
                    }).addSimpleSlice("errorColor", function() {
                        return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.BT({
                            descriptor: inputBoxProps.errorColor,
                            value: {
                                value: presentationVM.inputBox.errorUnderlineColor
                            }
                        }).build();
                    }, function(builder) {
                        return builder.withCustomDisplayName("Error_Color");
                    }).addSimpleSlice("warningColor", function() {
                        return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.BT({
                            descriptor: inputBoxProps.warningColor,
                            value: {
                                value: presentationVM.inputBox.warningUnderlineColor
                            }
                        }).build();
                    }, function(builder) {
                        return builder.withCustomDisplayName("Warning_TitleColor");
                    });
                }), inputBoxCardBuilder.addGroup("submitButton", function(groupBuilder) {
                    groupBuilder.withDisplayName("Visual_Qna_CommitButtonBackground").addSimpleSlice("submitButtonColor", function() {
                        return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.BT({
                            descriptor: inputBoxProps.commitButtonBackgroundColor,
                            value: {
                                value: presentationVM.inputBox.commitButtonBackgroundColor
                            }
                        }).build();
                    }, function(builder) {
                        return builder.withCustomDisplayName("Background_Color");
                    });
                }), inputBoxCardBuilder.build();
            }, QnaComponentCoreService.prototype.buildRestatementFormattingCard = function(presentationVM) {
                var _this = this, restatementProps = _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_qnaVisual_capabilities__WEBPACK_IMPORTED_MODULE_41__.Fp.inputBox, restatementCardBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.CQ(new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.lg("restatement"), "Visual_Qna_Restatement", restatementProps, function(key) {
                    return _this.localizationService.get(key);
                }), fontControl = (new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.UN).withFontFamily({
                    descriptor: restatementProps.restatementFontFamily,
                    value: presentationVM.inputBox.restatementFontProperties.family
                }).withFontSizeProperties({
                    descriptor: restatementProps.restatementFontSize,
                    value: presentationVM.inputBox.restatementFontProperties.size.pt
                }).build();
                return restatementCardBuilder.addGroup("text", function(groupBuilder) {
                    groupBuilder.addCompositeSlice("fontselector", "Font", fontControl).addSimpleSlice("color", function() {
                        return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.BT({
                            descriptor: restatementProps.restatementFontColor,
                            value: {
                                value: presentationVM.inputBox.restatementFontProperties.color
                            }
                        }).build();
                    }, function(builder) {
                        return builder.withCustomDisplayName("Generic_Color");
                    });
                }), restatementCardBuilder.build();
            }, QnaComponentCoreService.prototype.buildSuggestionsFormattingCard = function(presentationVM) {
                var _this = this, suggestionsProps = _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_qnaVisual_capabilities__WEBPACK_IMPORTED_MODULE_41__.Fp.suggestions, suggestionsCardBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.CQ(new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.lg("suggestions"), "Suggestions", suggestionsProps, function(key) {
                    return _this.localizationService.get(key);
                });
                suggestionsCardBuilder.addTopLevelToggle("show", function() {
                    return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.bd({
                        descriptor: suggestionsProps.show,
                        value: presentationVM.suggestions.show
                    }).build();
                });
                var boldPropValue = presentationVM.suggestions.headerFontProperties.weight === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_21__.en, italicPropValue = presentationVM.suggestions.headerFontProperties.style === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_21__.BF, underlinePropValue = presentationVM.suggestions.headerFontProperties.textDecoration === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_21__.f0, fontControl = (new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.UN).withFontFamily({
                    descriptor: suggestionsProps.headerFontFamily,
                    value: presentationVM.suggestions.headerFontProperties.family
                }).withFontSizeProperties({
                    descriptor: suggestionsProps.headerFontSize,
                    value: presentationVM.suggestions.headerFontProperties.size.pt
                }).withBold({
                    descriptor: suggestionsProps.headerBold,
                    value: boldPropValue
                }).withItalic({
                    descriptor: suggestionsProps.headerItalic,
                    value: italicPropValue
                }).withUnderline({
                    descriptor: suggestionsProps.headerUnderline,
                    value: underlinePropValue
                }).build();
                suggestionsCardBuilder.addGroup("header", function(groupBuilder) {
                    groupBuilder.withDisplayName("Visual_Qna_SuggestionsCardHeader").addCompositeSlice("fontselector", "Font", fontControl).addSimpleSlice("color", function() {
                        return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.BT({
                            descriptor: suggestionsProps.headerFontColor,
                            value: {
                                value: presentationVM.suggestions.headerFontProperties.color
                            }
                        }).build();
                    }, function(builder) {
                        return builder.withCustomDisplayName("Generic_Color");
                    });
                }), boldPropValue = presentationVM.suggestions.cardFontProperties.weight === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_21__.en, 
                italicPropValue = presentationVM.suggestions.cardFontProperties.style === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_21__.BF, 
                underlinePropValue = presentationVM.suggestions.cardFontProperties.textDecoration === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_21__.f0;
                var fontSuggestionControl = (new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.UN).withFontFamily({
                    descriptor: suggestionsProps.cardFontFamily,
                    value: presentationVM.suggestions.cardFontProperties.family
                }).withFontSizeProperties({
                    descriptor: suggestionsProps.cardFontSize,
                    value: presentationVM.suggestions.cardFontProperties.size.pt
                }).withBold({
                    descriptor: suggestionsProps.cardBold,
                    value: boldPropValue
                }).withItalic({
                    descriptor: suggestionsProps.cardItalic,
                    value: italicPropValue
                }).withUnderline({
                    descriptor: suggestionsProps.cardUnderline,
                    value: underlinePropValue
                }).build();
                return suggestionsCardBuilder.addGroup("cards", function(groupBuilder) {
                    groupBuilder.withDisplayName("Cards").addCompositeSlice("fontselector", "Font", fontSuggestionControl).addSimpleSlice("text", function() {
                        return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.BT({
                            descriptor: suggestionsProps.cardFontColor,
                            value: {
                                value: presentationVM.suggestions.cardFontProperties.color
                            }
                        }).build();
                    }, function(builder) {
                        return builder.withCustomDisplayName("Text_Color");
                    }).addSimpleSlice("background", function() {
                        return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.BT({
                            descriptor: suggestionsProps.cardBackground,
                            value: {
                                value: presentationVM.suggestions.backgroundColor
                            }
                        }).build();
                    }, function(builder) {
                        return builder.withCustomDisplayName("Background_Color");
                    });
                }), suggestionsCardBuilder.build();
            }, QnaComponentCoreService.\u0275fac = function(t) {
                return new (t || QnaComponentCoreService)(_angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_VisualHostCore__WEBPACK_IMPORTED_MODULE_42__.D), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_angular_core__WEBPACK_IMPORTED_MODULE_3__.ChangeDetectorRef), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_Data__WEBPACK_IMPORTED_MODULE_43__.i), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_ExploreUI__WEBPACK_IMPORTED_MODULE_44__.D), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_UILibrary__WEBPACK_IMPORTED_MODULE_45__.x), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_Explore__WEBPACK_IMPORTED_MODULE_46__.Z), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_ExploreUI__WEBPACK_IMPORTED_MODULE_47__.U), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_ExploreUI__WEBPACK_IMPORTED_MODULE_48__.z), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_Explore__WEBPACK_IMPORTED_MODULE_49__.L), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_ExploreUI__WEBPACK_IMPORTED_MODULE_50__.J), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_FeatureSwitch__WEBPACK_IMPORTED_MODULE_51__.vZ), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_qna_feedback_state_qna_feedback_state_service__WEBPACK_IMPORTED_MODULE_52__.B), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_LazyLoad__WEBPACK_IMPORTED_MODULE_53__.E), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_UILibrary__WEBPACK_IMPORTED_MODULE_54__.f), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_Explore__WEBPACK_IMPORTED_MODULE_55__.v), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_Geocoding__WEBPACK_IMPORTED_MODULE_56__.i), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_Common__WEBPACK_IMPORTED_MODULE_0__._1), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_LazyLoad__WEBPACK_IMPORTED_MODULE_57__.m), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_Localization__WEBPACK_IMPORTED_MODULE_58__.o), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_ErrorService__WEBPACK_IMPORTED_MODULE_59__.T), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_Telemetry__WEBPACK_IMPORTED_MODULE_1__.y0), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_VisualHostCore__WEBPACK_IMPORTED_MODULE_60__.l6), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_A11y__WEBPACK_IMPORTED_MODULE_61__.g), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_interpret_listener_interpret_listener_service__WEBPACK_IMPORTED_MODULE_62__.y), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_Explore__WEBPACK_IMPORTED_MODULE_63__.z), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_Explore__WEBPACK_IMPORTED_MODULE_64__.K), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_Explore__WEBPACK_IMPORTED_MODULE_65__.z), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_ExploreUI__WEBPACK_IMPORTED_MODULE_66__.kc), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_ExploreUI__WEBPACK_IMPORTED_MODULE_67__.Q), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_Explore__WEBPACK_IMPORTED_MODULE_68__.o), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_Geocoding__WEBPACK_IMPORTED_MODULE_69__.A), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_GeocoderIndexedDB__WEBPACK_IMPORTED_MODULE_70__.W), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_InjectionTokens_tooltips_visualHostTooltipServiceFactory__WEBPACK_IMPORTED_MODULE_71__.A), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_InjectionTokens_promiseFactory__WEBPACK_IMPORTED_MODULE_72__.t), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_InjectionTokens_account_service_token__WEBPACK_IMPORTED_MODULE_73__.F), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_InjectionTokens_qnaProxyPath__WEBPACK_IMPORTED_MODULE_74__.n, 8), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_InjectionTokens_qnaModelUtilsPath__WEBPACK_IMPORTED_MODULE_75__.z, 8), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_InjectionTokens_qnaLiveConnectService__WEBPACK_IMPORTED_MODULE_76__.U, 8));
            }, QnaComponentCoreService.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275defineInjectable"]({
                token: QnaComponentCoreService,
                factory: QnaComponentCoreService.\u0275fac
            }), QnaComponentCoreService;
        }();
        function getContrastForegroundColor(backgroundColor) {
            return (0, _powerbi_legacy_PowerBICommon_utils_colorUtility__WEBPACK_IMPORTED_MODULE_18__.um)(backgroundColor) > .6 ? presentationDefaults.darkFontColor : presentationDefaults.lightFontColor;
        }
    },
    21548: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            B: function() {
                return QnaFeedbackStateService;
            }
        });
        var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(50423), QnaFeedbackStateService = function() {
            function QnaFeedbackStateService() {
                this.states = {};
            }
            return QnaFeedbackStateService.prototype.updateState = function(utterance, state) {
                this.states[utterance.toLocaleLowerCase()] = state;
            }, QnaFeedbackStateService.prototype.getState = function(utterance) {
                var _a;
                return null !== (_a = this.states[utterance.toLocaleLowerCase()]) && void 0 !== _a ? _a : "Unchosen";
            }, QnaFeedbackStateService.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275defineInjectable"]({
                token: QnaFeedbackStateService,
                factory: QnaFeedbackStateService.\u0275fac = function(t) {
                    return new (t || QnaFeedbackStateService);
                },
                providedIn: "root"
            }), QnaFeedbackStateService;
        }();
    },
    5894: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            Nt: function() {
                return ImproveLsdlRequestEventName;
            },
            WW: function() {
                return QnaVisualSuggestionCardClicked;
            },
            dN: function() {
                return QnaVisualVisualConverted;
            },
            eV: function() {
                return QnAUpdateLsdlSharingPermission;
            },
            v5: function() {
                return QnAFeedback;
            },
            yP: function() {
                return QnAINAQ;
            },
            yp: function() {
                return ImproveLsdlRequestEvent;
            }
        });
        var _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(41114), QnaVisualSuggestionCardClicked = _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.cx["PBI.QnaVisual.SuggestionCardClicked"] = (0, 
        _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.b1)("PBI.QnaVisual.SuggestionCardClicked"), QnaVisualVisualConverted = _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.cx["PBI.QnaVisual.VisualConverted"] = (0, 
        _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.b1)("PBI.QnaVisual.VisualConverted"), QnAINAQ = _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.cx["PBI.QnA.INAQ"] = (0, 
        _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.b1)("PBI.QnA.INAQ", {
            logExpAssignment: !0
        }), QnAFeedback = _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.cx["PBI.QnA.Feedback"] = (0, 
        _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.b1)("PBI.QnA.Feedback"), QnAUpdateLsdlSharingPermission = _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.cx["PBI.QnA.UpdateLsdlSharingPermission"] = (0, 
        _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.b1)("PBI.QnA.UpdateLsdlSharingPermission"), ImproveLsdlRequestEventName = "PBI.QnaTooling.ImproveLsdlRequest", ImproveLsdlRequestEvent = _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.cx[ImproveLsdlRequestEventName] = (0, 
        _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.b1)(ImproveLsdlRequestEventName);
    },
    34100: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            J8: function() {
                return isFuzzyMatchingFeatureEnabled;
            },
            J_: function() {
                return isCopilotImprovelLsdlAgent;
            },
            NP: function() {
                return checkBaseSupportability;
            }
        });
        var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(81337), _qna_supportability_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(91592);
        function checkBaseSupportability(conceptualSchemaProxy, dataSourcesService, explorationCapabilitiesService, qnaSupportabilityService, lsdl) {
            var _a;
            return (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__awaiter)(this, void 0, void 0, function() {
                var schema, capabilities;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__generator)(this, function(_b) {
                    switch (_b.label) {
                      case 0:
                        return [ 4, conceptualSchemaProxy.get(dataSourcesService.get()) ];

                      case 1:
                        return schema = _b.sent(), capabilities = explorationCapabilitiesService.getCapabilities(), 
                        (0, _qna_supportability_util__WEBPACK_IMPORTED_MODULE_1__.H)(capabilities, schema, qnaSupportabilityService).isAllowed && qnaSupportabilityService.allowsLinguisticSchemaEdit() && "None" !== (null === (_a = lsdl.DynamicImprovement) || void 0 === _a ? void 0 : _a.Schema) ? [ 2, !0 ] : [ 2, !1 ];
                    }
                });
            });
        }
        function isCopilotImprovelLsdlAgent(agents) {
            return _.includes(agents, "PowerBI.AzureOpenAISynonyms") || _.includes(agents, "PowerBI.AzureOpenAIPhrasings");
        }
        function isFuzzyMatchingFeatureEnabled(featureSwitches) {
            return featureSwitches.qnaImproveLsdlCopilot && featureSwitches.qnaSupportCommitQuestionOnDemandForAll && featureSwitches.qnaFuzzyMatch;
        }
    },
    31982: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        function generateCorrectedUtteranceUISpansWithTextSegments(correctionInfo) {
            if (correctionInfo) {
                var correctedUtterance = correctionInfo.correctedUtterance, correctedTextSegments = correctionInfo.correctedTextSegments, correctedUtteranceSpans = [];
                if (!_.isEmpty(correctedTextSegments)) {
                    var originalSegmentStart_1 = 0;
                    return _.forEach(correctedTextSegments, function(textSegment) {
                        originalSegmentStart_1 < textSegment.startIndex && correctedUtteranceSpans.push({
                            text: correctedUtterance.substring(originalSegmentStart_1, textSegment.startIndex),
                            isCorrected: !1
                        }), correctedUtteranceSpans.push({
                            text: correctedUtterance.substring(textSegment.startIndex, textSegment.endExcludingIndex),
                            isCorrected: !0
                        }), originalSegmentStart_1 = textSegment.endExcludingIndex;
                    }), originalSegmentStart_1 < correctedUtterance.length && correctedUtteranceSpans.push({
                        text: correctedUtterance.substring(originalSegmentStart_1),
                        isCorrected: !1
                    }), correctedUtteranceSpans;
                }
            }
        }
        function generateCorrectedUtteranceUISpans(responseOriginalSpans, correctionInfo) {
            if (correctionInfo) {
                for (var correctedUtterance = correctionInfo.correctedUtterance, correctedUtteranceSpans = [], searchStart = 0, matchStartInCorrectedUtterance = 0, matchExcludingEndInCorrectedUtterance = 0, _i = 0, responseOriginalSpans_1 = responseOriginalSpans; _i < responseOriginalSpans_1.length; _i++) {
                    var span = responseOriginalSpans_1[_i];
                    if (!_.isEmpty(span.text) && (searchStart = matchExcludingEndInCorrectedUtterance, 
                    null != span.correctedStartIndex && null != span.correctedEndExcludingIndex ? (matchStartInCorrectedUtterance = span.correctedStartIndex, 
                    matchExcludingEndInCorrectedUtterance = span.correctedEndExcludingIndex) : matchExcludingEndInCorrectedUtterance = (matchStartInCorrectedUtterance = correctedUtterance.indexOf(span.text, searchStart)) + (span.endExcludingIndex - span.startIndex), 
                    span.isUsed)) {
                        if (searchStart !== matchStartInCorrectedUtterance) {
                            var partialText = correctedUtterance.substring(searchStart, matchStartInCorrectedUtterance);
                            _.isEmpty(_.trim(partialText)) && _.isEmpty(correctedUtteranceSpans) || correctedUtteranceSpans.push({
                                text: correctedUtterance.substring(searchStart, matchStartInCorrectedUtterance),
                                isCorrected: !1
                            });
                        }
                        correctedUtteranceSpans.push({
                            text: correctedUtterance.substring(matchStartInCorrectedUtterance, matchExcludingEndInCorrectedUtterance),
                            isCorrected: span.isCorrected
                        });
                    }
                }
                return correctedUtteranceSpans;
            }
        }
        function isCorrectionInfoWithCorrectedTextSegments(correctionInfo) {
            return "correctedTextSegments" in correctionInfo;
        }
        __webpack_require__.d(__webpack_exports__, {
            Gd: function() {
                return isCorrectionInfoWithCorrectedTextSegments;
            },
            Yi: function() {
                return generateCorrectedUtteranceUISpans;
            },
            zM: function() {
                return generateCorrectedUtteranceUISpansWithTextSegments;
            }
        });
    },
    87974: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            U: function() {
                return shouldCommitQuestionOnDemand;
            }
        });
        var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(81337);
        function shouldCommitQuestionOnDemand(modelsInfo, qnaModelUtils, featureSwitchService) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__awaiter)(this, void 0, void 0, function() {
                var _i, _a;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__generator)(this, function(_b) {
                    switch (_b.label) {
                      case 0:
                        if (featureSwitchService.featureSwitches.qnaSupportCommitQuestionOnDemandForAll) return [ 2, !0 ];
                        _i = 0, _a = null != modelsInfo ? modelsInfo : [], _b.label = 1;

                      case 1:
                        return _i < _a.length ? [ 4, qnaModelUtils.isDQOrLiveConnectToOnPrem(_a[_i]) ] : [ 3, 4 ];

                      case 2:
                        if (_b.sent()) return [ 2, !0 ];
                        _b.label = 3;

                      case 3:
                        return _i++, [ 3, 1 ];

                      case 4:
                        return [ 2, !1 ];
                    }
                });
            });
        }
    },
    91592: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            H: function() {
                return getIsQnaAllowedInfo;
            }
        });
        var _powerbi_legacy_JsCommon_Utility_BrowserUtility__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(16808);
        function getIsQnaAllowedInfo(explorationCapabilities, modelSchema, qnaSupportabilityService) {
            return (0, _powerbi_legacy_JsCommon_Utility_BrowserUtility__WEBPACK_IMPORTED_MODULE_0__.rO)() ? {
                isAllowed: !1,
                disallowedReason: "featureDisabledInIE"
            } : qnaSupportabilityService.appShouldHideQnaFeature() ? {
                isAllowed: !1,
                disallowedReason: "featureDisabledInApp"
            } : _.some(null == modelSchema ? void 0 : modelSchema.schemas, function(schema) {
                return !schema.isExtensionSchema && !_.isEmpty(schema.entities);
            }) ? qnaSupportabilityService.modelSupportsQna(modelSchema, explorationCapabilities) ? qnaSupportabilityService.modelHasQnaEnabled(modelSchema, explorationCapabilities) ? {
                isAllowed: !0
            } : {
                isAllowed: !1,
                disallowedReason: "qnaNotEnabled"
            } : {
                isAllowed: !1,
                disallowedReason: "qnaNotSupported"
            } : {
                isAllowed: !1,
                disallowedReason: "noModel"
            };
        }
    },
    74857: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            D4: function() {
                return getBaseThemeCollection;
            },
            ET: function() {
                return getQnaNotAllowedInIEError;
            },
            Kt: function() {
                return getVisualTitle;
            },
            Nj: function() {
                return qnaQueryMetadataToQueryMetadata;
            },
            Su: function() {
                return getThemeCollection;
            },
            Vq: function() {
                return getInterpretResultVisualSortHelper;
            },
            aZ: function() {
                return showVisualErrorDetails;
            },
            fI: function() {
                return customSortInterpretResultVisual;
            },
            y_: function() {
                return getInterpretResultVisual;
            }
        });
        var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(81337), _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(62458), _powerbi_legacy_Explore_util_themeUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(38701), _powerbi_legacy_Explore_util_visualContainerUtils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(60661), _powerbi_legacy_ExploreUI_utils_errorDetailsUtility__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(18503), _powerbi_legacy_PowerBIVisuals_VisualsCommon_tracing_traceType__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(50547), _powerbi_ExploreUI__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(2240);
        function getQnaNotAllowedInIEError(localizationService) {
            return {
                code: "qnaNotAllowedInIE",
                fixableError: 0,
                hideSeeDetails: !0,
                details: {
                    message: localizationService.get("Qna_NotSupportedInIE"),
                    displayableErrorInfo: void 0
                },
                source: "User"
            };
        }
        function qnaQueryMetadataToQueryMetadata(qnaQueryMetadata) {
            if (qnaQueryMetadata) return {
                Filters: _.map(qnaQueryMetadata.filters, function(f) {
                    return {
                        Restatement: f.Restatement,
                        type: void 0
                    };
                }),
                Select: _.map(qnaQueryMetadata.selects, function(s) {
                    return {
                        Restatement: s.restatement
                    };
                })
            };
        }
        function showVisualErrorDetails(error, errorService, localizationService) {
            _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(error, "Expect this to be called only when the given error is defined.");
            var errorDetails = error.details;
            if (errorDetails) {
                var hasAddtionalErrorInfo = (0, _powerbi_legacy_ExploreUI_utils_errorDetailsUtility__WEBPACK_IMPORTED_MODULE_1__.jx)(errorDetails), title = localizationService.get("ServiceError_CannotLoadVisual"), message = errorDetails.message, additionalErrors = [];
                if (hasAddtionalErrorInfo && (title = errorDetails.displayableErrorInfo[0].errorInfoKey, 
                message = errorDetails.displayableErrorInfo[0].errorInfoValue, errorDetails.displayableErrorInfo.length > 1)) for (var i = 1; i < errorDetails.displayableErrorInfo.length; i++) additionalErrors.push(errorDetails.displayableErrorInfo[i]);
                _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assert(function() {
                    return null != error.source;
                }, "Expect error.source is not null."), errorService.error(message, error.code, {
                    debugErrorInfo: errorDetails.debugErrorInfo,
                    displayableErrorInfo: additionalErrors,
                    title,
                    source: error.source,
                    level: _powerbi_legacy_PowerBIVisuals_VisualsCommon_tracing_traceType__WEBPACK_IMPORTED_MODULE_2__.U.Error
                });
            }
        }
        function getThemeCollection(explorationNavigation, featureSwitchService) {
            var currentExploration = explorationNavigation.getCurrentExploration(), themeCollection = null == currentExploration ? void 0 : currentExploration.themeCollection;
            return _.isEmpty(themeCollection) ? getBaseThemeCollection(featureSwitchService) : themeCollection;
        }
        function getBaseThemeCollection(featureSwitchService) {
            return {
                baseTheme: (0, _powerbi_legacy_Explore_util_themeUtils__WEBPACK_IMPORTED_MODULE_3__.DC)(featureSwitchService)
            };
        }
        function getInterpretResultVisual(interpretResult, conceptualSchemaProxy, dataSourcesService, visualRecommendationService) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(this, void 0, void 0, function() {
                var command, query, selects, queryMetadata, exprMetadata, filterMetadata, schema, result;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function(_a) {
                    switch (_a.label) {
                      case 0:
                        return (query = null == (command = null == interpretResult ? void 0 : interpretResult.command) ? void 0 : command.query) ? (selects = query.select(), 
                        queryMetadata = command.queryMetadata, exprMetadata = _.map(null == queryMetadata ? void 0 : queryMetadata.selects, function(selectMetadata, index) {
                            return {
                                expression: selects[index].expr,
                                type: selectMetadata.type,
                                isGroup: selectMetadata.isGroup,
                                defaultLabel: selectMetadata.defaultLabel,
                                isExplicitSortBy: selectMetadata.isExplicitSortBy
                            };
                        }), filterMetadata = null == queryMetadata ? void 0 : queryMetadata.filters, [ 4, conceptualSchemaProxy.get(dataSourcesService.get()) ]) : [ 2 ];

                      case 1:
                        return schema = _a.sent(), (result = visualRecommendationService.recommendVisuals(query, schema, {
                            numberOfResults: 1,
                            visualType: _.first(command.suggestedVisualTypes),
                            filterMetadata,
                            exprMetadata,
                            addDefaultFormatting: !0,
                            allowTooltipMeasures: !0
                        })) ? (_powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assert(function() {
                            return 1 === _.size(result.visualContainers);
                        }, "Expected 1 result"), [ 2, result.visualContainers[0] ]) : [ 2 ];
                    }
                });
            });
        }
        function getVisualTitle(visualContainer, conceptualSchemaProxy, dataSourcesService, displayNameService, visualPlugin, forceGenerateTitle, displayIndividualValuesLimit) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(this, void 0, void 0, function() {
                var schema, singleVisualConfig, displayNameOptions;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function(_a) {
                    switch (_a.label) {
                      case 0:
                        return [ 4, conceptualSchemaProxy.get(dataSourcesService.get()) ];

                      case 1:
                        return schema = _a.sent(), singleVisualConfig = (0, _powerbi_legacy_Explore_util_visualContainerUtils__WEBPACK_IMPORTED_MODULE_5__.PQ)(visualContainer), 
                        displayNameOptions = {
                            multiAndLastValueConnectorSpecialResourceKey: "AndConjunction_MultiItemsAndOne",
                            displayIndividualValuesLimitSetting: null != displayIndividualValuesLimit ? {
                                limit: displayIndividualValuesLimit,
                                limitedValueShownResourceKey: "AndOthers_SingleItem",
                                multiLimitedValuesShownResourceKey: "AndOthers_MultipleItem"
                            } : void 0
                        }, [ 2, displayNameService.getVisualTitle(singleVisualConfig, schema, visualPlugin.capabilities(singleVisualConfig.visualType), void 0, displayNameOptions, forceGenerateTitle) ];
                    }
                });
            });
        }
        function getInterpretResultVisualSortHelper(visualContainer, conceptualSchemaProxy, dataSourcesService, sortService, undoRedoService, visualAuthoringOpService, visualPlugin) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(this, void 0, void 0, function() {
                var sortableFieldsResult, sortSetting;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function(_a) {
                    switch (_a.label) {
                      case 0:
                        return [ 4, getSortableFields(visualContainer, conceptualSchemaProxy, dataSourcesService, sortService) ];

                      case 1:
                        return sortableFieldsResult = _a.sent(), sortSetting = {
                            defaultSortBehavior: getDefaultSortBehavior(visualContainer, visualPlugin),
                            sortableFields: null == sortableFieldsResult ? void 0 : sortableFieldsResult.sortableFields,
                            sortGroups: null == sortableFieldsResult ? void 0 : sortableFieldsResult.sortGroups
                        }, [ 2, new _powerbi_ExploreUI__WEBPACK_IMPORTED_MODULE_6__.B(sortSetting, visualContainer, sortService, undoRedoService, visualAuthoringOpService) ];
                    }
                });
            });
        }
        function customSortInterpretResultVisual(visualContainer, sortHelper, sortDescriptors) {
            if (!_.isEmpty(sortDescriptors)) {
                var selectExprs = (0, _powerbi_legacy_Explore_util_visualContainerUtils__WEBPACK_IMPORTED_MODULE_5__.oJ)(visualContainer);
                _.isEmpty(selectExprs) || sortHelper.applySortByFields(sortDescriptors);
            }
        }
        function getDefaultSortBehavior(visualContainer, visualPlugin) {
            var _a, visualCapabilities = (0, _powerbi_legacy_Explore_util_visualContainerUtils__WEBPACK_IMPORTED_MODULE_5__.cj)(visualContainer, visualPlugin);
            return !!visualCapabilities && !!(null === (_a = visualCapabilities.sorting) || void 0 === _a ? void 0 : _a.default);
        }
        function getSortableFields(visualContainer, conceptualSchemaProxy, dataSourcesService, sortService) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(this, void 0, void 0, function() {
                var dataSourcesArray, singleVisualConfig, query, schema;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function(_b) {
                    switch (_b.label) {
                      case 0:
                        if (!(dataSourcesArray = dataSourcesService.get())) return [ 2 ];
                        _b.label = 1;

                      case 1:
                        return _b.trys.push([ 1, 3, , 4 ]), singleVisualConfig = (0, _powerbi_legacy_Explore_util_visualContainerUtils__WEBPACK_IMPORTED_MODULE_5__.PQ)(visualContainer), 
                        query = (0, _powerbi_legacy_Explore_util_visualContainerUtils__WEBPACK_IMPORTED_MODULE_5__.Xf)(visualContainer), 
                        [ 4, conceptualSchemaProxy.get(dataSourcesArray) ];

                      case 2:
                        return schema = _b.sent(), [ 2, sortService.getSortableFields({
                            query,
                            schema,
                            visualType: singleVisualConfig.visualType,
                            columnProperties: singleVisualConfig.columnProperties,
                            compiledMappings: []
                        }) ];

                      case 3:
                        return _b.sent(), [ 3, 4 ];

                      case 4:
                        return [ 2 ];
                    }
                });
            });
        }
    },
    35988: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            AU: function() {
                return getUserErrorMessage;
            },
            B4: function() {
                return wireV3ResponseToClientSuggestedQuestionsResponse;
            },
            C2: function() {
                return clientToWireModelScopes;
            },
            Cb: function() {
                return wireV3ResponseToClientProbeResponse;
            },
            Fm: function() {
                return getRetriableClientWarningDesktop;
            },
            NG: function() {
                return clientToWireInterpretRequestDesktop;
            },
            R1: function() {
                return wireV3ResponseToClientInterpretResponse;
            },
            Tm: function() {
                return getUserWarningMessageKeys;
            },
            hj: function() {
                return hostServiceErrorCodeToQnaErrorCode;
            },
            qV: function() {
                return getRetriableClientWarningDesktopToWeb;
            },
            tc: function() {
                return clientToWireInterpretRequestDesktopToWeb;
            },
            vr: function() {
                return getQueryUnSupportedLevelWarningsInfo;
            }
        });
        var _a, _b, _c, _d, _e, _f, _powerbi_Insights__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(70940), _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(3468), _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(62458), _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_StandaloneUtility3__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(43286), _powerbi_legacy_PowerBIVisuals_VisualsData_types_valueType__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(80777), interpretDiagnosticCodeToInterpretWarningMappings = ((_a = {}).GeneratedLinguisticSchema = 0, 
        _a.DataIndexBuildingCancelled = 16, _a.DataIndexMissingStatistics = 17, _a.DataIndexNotReady = 8, 
        _a.DataIndexSizeLimitReached = 15, _a.DataIndexUpdateFailure = 10, _a.DomainModelNotReady = 2, 
        _a.DomainModelPartialLoad = 3, _a.DomainModelUpdateFailure = 9, _a.EmptyLinguisticSchema = 1, 
        _a.InterpretationSemanticError = 4, _a.InterpretationSemanticWarning = 5, _a.InterpretCancelled = 18, 
        _a.InvalidTextualEntity = 6, _a.LinguisticSchemaTruncated = 14, _a.MissingOrInvalidPodParameters = 13, 
        _a.QueryAggregateNotSupported = 19, _a.QueryMedianNotSupported = 20, _a.QueryPercentileNotSupported = 21, 
        _a.QueryScopedEvalNotSupported = 22, _a.QuerySubqueryRegroupingNotSupported = 23, 
        _a.StaleDataIndex = 12, _a.StaleDomainModel = 11, _a.RequiresNewerVersion = 7, _a.DataIndexVersionIsOld = 24, 
        _a.QueryGroupByTableNotSupported = 25, _a.QueryNotSupported = 26, _a.NextBestInterpretation = 27, 
        _a), interpretDiagnosticCodeToQnaErrorCodeMappings = ((_b = {}).ActivationFailure = "ActivationFailure", 
        _b.CloudRlsModelAccessDenied = "CloudRlsModelAccessDenied", _b.DataIndexBuildFailure = "DataIndexBuildFailure", 
        _b.DomainModelLoadFailure = "DomainModelLoadFailure", _b.ExternalModelAccessDenied = "ExternalModelAccessDenied", 
        _b.GenericRequestFailure = "GenericRequestFailure", _b.LinguisticSchemaLoadFailure = "LinguisticSchemaLoadFailure", 
        _b.ModelNotFound = "ModelNotFound", _b.ModelQnaNotEnabled = "ModelQnaNotEnabled", 
        _b.ModelQnaNotSupported = "ModelQnaNotSupported", _b.RequiresNewerVersion = "RequiresNewerVersion", 
        _b.SchemaLanguageNotSupported = "SchemaLanguageNotSupported", _b.MissingRuntimeModule = "MissingRuntimeModule", 
        _b.VerifyRuntimeFailure = "VerifyRuntimeFailure", _b.DataIndexMissingAllStatistics = "DataIndexMissingAllStatistics", 
        _b), hostSpecificInterpretWarningToUserMessageKeyMappings_Desktop = ((_c = {})[16] = "Qna_Warning_DataIndexIncomplete_Desktop", 
        _c[15] = "Qna_Warning_DataIndexIncomplete_Desktop", _c[14] = "Qna_Warning_LinguisticSchemaTruncated_Desktop", 
        _c), hostSpecificInterpretWarningToUserMessageKeyMappings_Service = ((_d = {})[16] = "Qna_Warning_DataIndexIncomplete_Service", 
        _d[15] = "Qna_Warning_DataIndexIncomplete_Service", _d[14] = "Qna_Warning_LinguisticSchemaTruncated_Service", 
        _d), retriableClientWarnings_Desktop = [ 2, 8, 11, 12, 24 ], retriableClientWarnings_Service = [ 2, 8 ], interpretWarningToUserMessageKeyMappings = ((_e = {})[1] = "Qna_NotAllowedForReport_WithoutModel", 
        _e[2] = "Qna_Explore_WarningBuildingLanguageModel", _e[7] = "Qna_Warning_RequiresNewerVersion", 
        _e[8] = "Qna_Explore_WarningIndexing", _e[9] = "Qna_Warning_ModelUpdateFailure", 
        _e[10] = "Qna_Warning_DataIndexUpdateFailure", _e[11] = "Qna_Warning_StaleModel", 
        _e[12] = "Qna_Warning_StaleIndex", _e[17] = "Qna_Warning_DataIndexMissingStatistics", 
        _e[19] = "Qna_Warning_UnsupportedFunction", _e[20] = "Qna_Warning_UnsupportedFunction", 
        _e[21] = "Qna_Warning_UnsupportedFunction", _e[22] = "Qna_Warning_UnsupportedFunction", 
        _e[23] = "Qna_Warning_UnsupportedFunction", _e[25] = "Qna_Warning_QueryGroupByTableNotSupported", 
        _e[26] = "Qna_Warning_QueryNotSupported", _e[27] = "Qna_Warning_NextBestInterpretation", 
        _e), qnaErrorCodeToUserMessageKeyMappings = ((_f = {}).FeatureNotAvailable = "Qna_Error_GenericRequestFailure", 
        _f.NetworkConnectionIssue = "Qna_Error_NetworkIssue", _f.RequiresNewerVersion = "Qna_Error_RequiresNewerVersion", 
        _f.ModelNotFound = "Qna_Error_ModelNotFound", _f.ModelQnaNotEnabled = "Qna_Error_ModelQnaNotEnabled", 
        _f.ModelQnaNotSupported = "Qna_Error_ModelQnaNotSupported", _f.MissingRuntimeModule = "Qna_Explore_MissingBinaries", 
        _f.VerifyRuntimeFailure = "Qna_Explore_MissingBinaries", _f.SchemaLanguageNotSupported = "Qna_NotAllowedForReport_QnaNotSupported", 
        _f.SessionIsInactive = "Qna_Error_GenericRequestFailure", _f.GenericRequestFailure = "Qna_Error_GenericRequestFailure", 
        _f.DataIndexBuildFailure = "Qna_Explore_WarningFailedIndexing", _f.CloudRlsModelAccessDenied = "Tile_RLS_NoAccess", 
        _f.ExternalModelAccessDenied = "Qna_Explore_ModelAccessDenied_WithoutSpecifyOwner", 
        _f.DataIndexMissingAllStatistics = "Qna_Error_DataIndexMissingAllStatistics", _f), queryUnSupportedLevelWarnings = [ 19, 20, 22, 21, 23, 25, 26 ];
        function wireV3ResponseToClientSuggestedQuestionsResponse(wireV3Response) {
            _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(wireV3Response, "Expect the given wireV3Response to be defined");
            var clientError = getClientErrorFromWireV3Response(wireV3Response);
            if (clientError) return {
                error: clientError
            };
            var wireResult = _.first(wireV3Response.Results), interpretation = _.first(null == wireResult ? void 0 : wireResult.Interpretations);
            return {
                result: {
                    utterances: _.map(null == interpretation ? void 0 : interpretation.SuggestedUtterances, function(utterance) {
                        return {
                            text: utterance.Text,
                            source: utterance.Source
                        };
                    }),
                    warnings: wireV3InterpretDiagnosticMessageToClientWarnings(null == wireResult ? void 0 : wireResult.DiagnosticMessages)
                }
            };
        }
        function wireV3ResponseToClientInterpretResponse(utterance, desiredInterpretationsCount, requestId, wireV3Response) {
            _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(wireV3Response, "Expect the given wireV3Response to be defined");
            var clientResult, warnings, clientError = getClientErrorFromWireV3Response(wireV3Response);
            if (!clientError) {
                var firstWireResult_1 = _.first(wireV3Response.Results);
                warnings = wireV3InterpretDiagnosticMessageToClientWarnings(null == firstWireResult_1 ? void 0 : firstWireResult_1.DiagnosticMessages);
                var interpretations = _.take(null == firstWireResult_1 ? void 0 : firstWireResult_1.Interpretations, null != desiredInterpretationsCount ? desiredInterpretationsCount : 1);
                _.isEmpty(interpretations) || (clientResult = _.map(interpretations, function(interpretation) {
                    var _a, _b, _c;
                    return {
                        restatement: interpretation.Restatement,
                        databaseName: null === (_a = firstWireResult_1.Context) || void 0 === _a ? void 0 : _a.DatabaseName,
                        virtualServerName: null === (_b = firstWireResult_1.Context) || void 0 === _b ? void 0 : _b.VirtualServerName,
                        command: wireToClientCommand(interpretation.Command),
                        correctionInfo: generateUtteranceCorrectionInfo(interpretation),
                        spans: wireToClientSpanCollection(utterance, interpretation.Spans),
                        language: firstWireResult_1.Language,
                        modelLanguage: firstWireResult_1.ModelLanguage,
                        modelOwner: null === (_c = firstWireResult_1.Context) || void 0 === _c ? void 0 : _c.ModelOwner,
                        usedAgents: _.map(interpretation.UsedAgents, function(a) {
                            return a;
                        }),
                        score: interpretation.Score,
                        relevantSchemaElements: convertWireSchemaElementsToClientSchemaElements(firstWireResult_1.RelevantSchemaElements)
                    };
                }));
            }
            return {
                utterance,
                requestId,
                error: clientError,
                results: clientResult,
                warnings
            };
        }
        function convertWireSchemaElementsToClientSchemaElements(wireSchemaElements) {
            if (null != wireSchemaElements && (null != wireSchemaElements.Entities || null != wireSchemaElements.Relationships)) {
                var converter = function(wire) {
                    return {
                        description: wire.Description,
                        score: wire.Score
                    };
                };
                return {
                    entities: _.map(wireSchemaElements.Entities, converter),
                    relationships: _.map(wireSchemaElements.Relationships, converter)
                };
            }
        }
        function wireV3ResponseToClientProbeResponse(wireV3Response) {
            _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(wireV3Response, "Expect the given wireV3Response to be defined");
            var clientError = getClientErrorFromWireV3Response(wireV3Response);
            if (clientError) return {
                error: clientError
            };
            var firstWireResult = _.first(wireV3Response.Results);
            return {
                results: _.map(null == firstWireResult ? void 0 : firstWireResult.Interpretations, function(_interpretation) {
                    return {
                        language: firstWireResult.Language
                    };
                })
            };
        }
        function getWireV3ResponseClientWarnings(wireV3Response) {
            _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(wireV3Response, "Expect the given wireV3Response to be defined");
            var firstWireResult = _.first(wireV3Response.Results);
            return wireV3InterpretDiagnosticMessageToClientWarnings(null == firstWireResult ? void 0 : firstWireResult.DiagnosticMessages);
        }
        function getRetriableClientWarningDesktop(wireResponse) {
            _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(wireResponse, "Expect the given wireResponse to be defined");
            var warnings = getWireV3ResponseClientWarnings(wireResponse);
            return _.find(retriableClientWarnings_Desktop, function(retryClientWarning) {
                return _.includes(warnings, retryClientWarning);
            });
        }
        function getRetriableClientWarningDesktopToWeb(wireResponse) {
            return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(wireResponse, "Expect the given wireResponse to be defined"), 
            function(wireResponse) {
                _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(wireResponse, "Expect the given wireResponse to be defined");
                var warnings = getWireV3ResponseClientWarnings(wireResponse);
                return _.find(retriableClientWarnings_Service, function(retryClientWarning) {
                    return _.includes(warnings, retryClientWarning);
                });
            }(wireResponse);
        }
        function wireToClientSpanCollection(utterance, wireSpans) {
            if (_powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(utterance, "utterance"), 
            _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertAnyValue(wireSpans, "wireSpans"), 
            wireSpans) {
                _.isEmpty(utterance) && _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assert(function() {
                    return _.every(wireSpans, function(wireSpan) {
                        return 0 === wireSpan.Length;
                    });
                }, "utterance is empty, every span should have zero length");
                var baseSpans = [], overlapSpans = [];
                return _.forEach(wireSpans, function(wireSpan) {
                    5 !== wireSpan.Resolution || wireSpan.Binding ? baseSpans.push(new SpanInternal(utterance, wireSpan, !1)) : overlapSpans.push(new SpanInternal(utterance, wireSpan, !0));
                }), _.isEmpty(overlapSpans) || _.forEach(overlapSpans, function(overlapSpan) {
                    _.forEach(baseSpans, function(baseSpan) {
                        if (function(span, overlapSpan) {
                            return overlapSpan.startIndex <= span.startIndex && overlapSpan.endExcludingIndex > span.startIndex || overlapSpan.startIndex < span.endExcludingIndex && overlapSpan.endExcludingIndex > span.endExcludingIndex || span.startIndex <= overlapSpan.startIndex && span.endExcludingIndex >= overlapSpan.endExcludingIndex || overlapSpan.startIndex <= span.startIndex && overlapSpan.endExcludingIndex >= span.endExcludingIndex;
                        }(baseSpan, overlapSpan)) baseSpan.overlapSpans.push(overlapSpan); else if (overlapSpan.endExcludingIndex < baseSpan.startIndex) return;
                    });
                }), baseSpans;
            }
        }
        function hostServiceErrorCodeToQnaErrorCode(errorCode) {
            return "BadGateway" === errorCode || "ConnectFailure" === errorCode || "ConnectionClosed" === errorCode || "GatewayTimeout" === errorCode || "KeepAliveFailure" === errorCode || "NameResolutionFailure" === errorCode || "NetworkUnavailable" === errorCode || "ProxyAuthenticationRequired" === errorCode || "ProxyNameResolutionFailure" === errorCode || "RequestTimeout" === errorCode || "ServiceUnvailable" === errorCode || "Timeout" === errorCode || "AccessDenied" === errorCode ? "NetworkConnectionIssue" : "FeatureNotAvailableError" === errorCode ? "FeatureNotAvailable" : "GenericRequestFailure";
        }
        function clientToWireInterpretRequestDesktop(request) {
            var clientContract, wireRequest = clientToWireInterpretRequestCommon(request);
            return request && (wireRequest.Context = {
                ReportMetadata: (clientContract = request.reportMetadata, clientContract ? {
                    LinguisticSchema: clientContract.linguisticSchema,
                    Pods: _.map(clientContract.pods, function(p) {
                        return {
                            Name: p.name,
                            CortanaEnabled: p.cortanaEnabled,
                            Parameters: _.map(p.parameters, function(param) {
                                return {
                                    Name: param.name,
                                    TargetColumn: param.targetColumn,
                                    TargetEntity: param.targetEntity
                                };
                            })
                        };
                    })
                } : void 0)
            }), wireRequest;
        }
        function clientToWireInterpretRequestDesktopToWeb(request, virtualServerName, databaseName) {
            var feedback, wireRequest = clientToWireInterpretRequestCommon(request);
            return wireRequest.Context = {
                ModelScopes: [ {
                    VirtualServerName: virtualServerName,
                    DatabaseName: databaseName
                } ],
                Tags: null == request ? void 0 : request.tags,
                ImpersonatedUserPrincipalName: null == request ? void 0 : request.impersonatedUserPrincipalName,
                ImpersonatedRoles: null == request ? void 0 : request.impersonatedRoles,
                Feedback: (feedback = null == request ? void 0 : request.feedback, feedback ? {
                    Sentiment: feedback.sentiment,
                    Reason: feedback.reason,
                    Comment: feedback.comment
                } : void 0)
            }, wireRequest.Options || (wireRequest.Options = {}), wireRequest;
        }
        function clientToWireInterpretRequestCommon(request) {
            return request ? {
                Version: "3.3.0",
                Utterance: request.utterance,
                Spans: _.map(request.spans, function(span) {
                    var wireSpan = {
                        StartIndex: span.startIndex,
                        Length: span.endExcludingIndex - span.startIndex
                    };
                    return span.inferredTerm && (wireSpan.Binding = {
                        InferredTerm: clientToWireInferredTermBinding(span.inferredTerm)
                    }), wireSpan;
                }),
                Options: clientToWireInterpretRequestOptions(request),
                LinguisticSchemaJson: request.linguisticSchemaJson,
                InferredTermBinding: clientToWireInferredTermBinding(request.inferredTermBinding),
                Intent: clientToWireIntent(request.intent),
                IsCommitted: request.isCommitted,
                DesiredInterpretationsCount: request.desiredInterpretationsCount,
                GroupId: request.groupId,
                GroupSequenceNumber: request.groupSequenceNumber
            } : {
                Version: "3.3.0",
                Utterance: ""
            };
        }
        function clientToWireIntent(intentContainer) {
            if (null == intentContainer ? void 0 : intentContainer.defineCalculation) return {
                DefineCalculation: {
                    Language: intentContainer.defineCalculation.language,
                    Options: intentContainer.defineCalculation.options
                }
            };
        }
        function clientToWireInterpretRequestOptions(request) {
            return null == (null == request ? void 0 : request.options) ? {} : {
                QueryMetadata: (0, _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_StandaloneUtility3__WEBPACK_IMPORTED_MODULE_1__.yE)(request.options, 2),
                VisualConfiguration: (0, _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_StandaloneUtility3__WEBPACK_IMPORTED_MODULE_1__.yE)(request.options, 4),
                SupportPodQueries: (0, _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_StandaloneUtility3__WEBPACK_IMPORTED_MODULE_1__.yE)(request.options, 8),
                IncludeRelevantSchemaElements: (0, _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_StandaloneUtility3__WEBPACK_IMPORTED_MODULE_1__.yE)(request.options, 32),
                Spans: (0, _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_StandaloneUtility3__WEBPACK_IMPORTED_MODULE_1__.yE)(request.options, 64),
                Diagnostics: (0, _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_StandaloneUtility3__WEBPACK_IMPORTED_MODULE_1__.yE)(request.options, 128),
                FrameTree: !1,
                AllowFollowUpQuestion: !1,
                AllowInsightQueries: (0, _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_StandaloneUtility3__WEBPACK_IMPORTED_MODULE_1__.yE)(request.options, 512),
                InferUnknownModelTerms: (0, _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_StandaloneUtility3__WEBPACK_IMPORTED_MODULE_1__.yE)(request.options, 4096),
                AllowPlaceholderSuggestions: !1,
                SuggestFollowUp: !1,
                SuggestedUtterances: (0, _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_StandaloneUtility3__WEBPACK_IMPORTED_MODULE_1__.yE)(request.options, 2048),
                SkipCompletion: request.skipCompletion,
                SingleAnswerBias: (0, _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_StandaloneUtility3__WEBPACK_IMPORTED_MODULE_1__.yE)(request.options, 8192),
                SuggestedDefineCalculationUtterances: (0, _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_StandaloneUtility3__WEBPACK_IMPORTED_MODULE_1__.yE)(request.options, 16384),
                UseLlmParser: (0, _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_StandaloneUtility3__WEBPACK_IMPORTED_MODULE_1__.yE)(request.options, 65536)
            };
        }
        function clientToWireModelScopes(scopes) {
            return _.map(scopes, function(scope) {
                var _a, _b;
                return {
                    VirtualServerName: null === (_a = scope.model) || void 0 === _a ? void 0 : _a.vsName,
                    DatabaseName: null === (_b = scope.model) || void 0 === _b ? void 0 : _b.dbName,
                    ReportIds: scope.reportIds
                };
            });
        }
        function getQueryUnSupportedLevelWarningsInfo(warnings) {
            if (_.indexOf(warnings, 27) >= 0) return [];
            var specialWarnings = _.intersection(warnings, queryUnSupportedLevelWarnings);
            return _.map(specialWarnings, function(specialWarning) {
                return {
                    warning: specialWarning,
                    messageKey: interpretWarningToUserMessageKeyMappings[specialWarning]
                };
            });
        }
        function getUserWarningMessageKeys(warnings, qnaProxyPath) {
            if (!_.isEmpty(warnings)) {
                _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assert(function() {
                    return !_.isEmpty(qnaProxyPath);
                }, "Must provide a valid qnaProxyPath");
                for (var userMessages = [], hostSpecificWarningToUserMessageMappings = "@powerbi/Qna/qnadesktop.module#QnaDesktopModule" === qnaProxyPath ? hostSpecificInterpretWarningToUserMessageKeyMappings_Desktop : hostSpecificInterpretWarningToUserMessageKeyMappings_Service, _i = 0, warnings_1 = warnings; _i < warnings_1.length; _i++) {
                    var warning = warnings_1[_i];
                    if (hostSpecificWarningToUserMessageMappings) {
                        var hostSpecificUserMessage = hostSpecificWarningToUserMessageMappings[warning];
                        if (hostSpecificUserMessage) {
                            userMessages.push(hostSpecificUserMessage);
                            continue;
                        }
                    }
                    var hostIndependantUserMessage = interpretWarningToUserMessageKeyMappings[warning];
                    hostIndependantUserMessage && userMessages.push(hostIndependantUserMessage);
                }
                return _.uniq(userMessages);
            }
        }
        function getUserErrorMessage(errorCode, localizationService) {
            return localizationService.get(qnaErrorCodeToUserMessageKeyMappings[errorCode] || "Qna_Error_GenericRequestFailure");
        }
        function getClientErrorFromWireV3Response(wireV3Response) {
            var errorLevelDiagnosticCode, errorLevelDiagnosticMessage;
            if (_powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(wireV3Response, "Expect the given wireV3Response to be defined"), 
            "3.3.0" !== wireV3Response.Version) errorLevelDiagnosticCode = "RequiresNewerVersion"; else {
                var firstWireResult = _.first(wireV3Response.Results);
                if (!firstWireResult) return;
                errorLevelDiagnosticCode = null == (errorLevelDiagnosticMessage = _.find(firstWireResult.DiagnosticMessages, function(msg) {
                    return 1 === msg.Severity;
                })) ? void 0 : errorLevelDiagnosticMessage.Code;
            }
            if (null != errorLevelDiagnosticCode) {
                var qnaErrorCode = function(diagnosticCode) {
                    var qnaErrorCode = interpretDiagnosticCodeToQnaErrorCodeMappings[diagnosticCode];
                    return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assert(function() {
                        return null != qnaErrorCode;
                    }, "InterpretDiagnosticCodeToQnaErrorCodeMappings should contain key " + diagnosticCode), 
                    qnaErrorCode || (qnaErrorCode = "NoClientHandling"), qnaErrorCode;
                }(errorLevelDiagnosticCode), qnaError = {
                    errorCode: qnaErrorCode,
                    source: "GenericRequestFailure" === qnaErrorCode ? "PowerBI" : "User",
                    message: null == errorLevelDiagnosticMessage ? void 0 : errorLevelDiagnosticMessage.Message,
                    stackTrace: null == errorLevelDiagnosticMessage ? void 0 : errorLevelDiagnosticMessage.StackTrace
                };
                return "NoClientHandling" === qnaError.errorCode && (qnaError.message = _.isEmpty(qnaError.message) ? errorLevelDiagnosticCode + "." : errorLevelDiagnosticCode + ". " + qnaError.message), 
                qnaError;
            }
        }
        function wireV3InterpretDiagnosticMessageToClientWarnings(diagnosticMessages) {
            if (!_.isEmpty(diagnosticMessages)) {
                for (var warningsResult = [], _loop_1 = function(warning) {
                    _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assert(function() {
                        return null != interpretDiagnosticCodeToInterpretWarningMappings[warning.Code];
                    }, 'unknown mapping to convert InterpretDiagnosticMessage "' + warning.Code + '" to client interpret warning code'), 
                    interpretDiagnosticCodeToInterpretWarningMappings[warning.Code] && warningsResult.push(interpretDiagnosticCodeToInterpretWarningMappings[warning.Code]);
                }, _i = 0, warnings_2 = diagnosticMessages.filter(function(m) {
                    return 2 === m.Severity;
                }); _i < warnings_2.length; _i++) _loop_1(warnings_2[_i]);
                return warningsResult;
            }
        }
        var SpanInternal = function() {
            return function(utterance, wireSpan, isOverlappingSpan) {
                var spanText, spanStartIndex;
                this.utterance = utterance, this.wireSpan = wireSpan, this.isOverlappingSpan = isOverlappingSpan, 
                this.startIndex = wireSpan.StartIndex, this.endExcludingIndex = wireSpan.StartIndex + wireSpan.Length, 
                this.text = utterance.substr(wireSpan.StartIndex, wireSpan.Length), this.correctedStartIndex = wireSpan.CorrectedStartIndex, 
                this.correctedEndExcludingIndex = null != wireSpan.CorrectedStartIndex ? wireSpan.CorrectedStartIndex + wireSpan.CorrectedLength : void 0, 
                this.resolution = wireSpan.Resolution, this.isOverlapping = isOverlappingSpan, this.tokens = (spanText = this.text, 
                spanStartIndex = this.startIndex, _.map(wireSpan.Tokens, function(wireToken) {
                    var tokenStartIndexInSpan = wireToken.StartIndex - spanStartIndex;
                    return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assert(function() {
                        return _.inRange(tokenStartIndexInSpan, 0, _.size(spanText));
                    }, "Expect each token.StartIndex is a valid index with the given spanText and spanStartIndex"), 
                    _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assert(function() {
                        return !_.isEmpty(_.trim(spanText.substr(tokenStartIndexInSpan, wireToken.Length)));
                    }, "Expect no WireToken being pure space"), {
                        startIndex: wireToken.StartIndex,
                        endExcludingIndex: wireToken.StartIndex + wireToken.Length,
                        text: spanText.substr(tokenStartIndexInSpan, wireToken.Length)
                    };
                }));
                var bindingWithCorrected = wireToClientBindingInfo(this.text, wireSpan.Binding);
                this.binding = bindingWithCorrected && bindingWithCorrected.bindingInfo, this.isCorrected = !(!this.binding || !bindingWithCorrected.isCorrected);
                var alternateBindings = wireToClientBindingInfoCollection(this.text, wireSpan.AlternateBindings), phraseCompletions = wireToClientBindingInfoCollection(this.text, wireSpan.PhraseCompletions), phraseExtensions = wireToClientBindingInfoCollection(this.text, wireSpan.PhraseExtensions), suggestedReplacements = wireToClientBindingInfoCollection(this.text, wireSpan.SuggestedReplacements);
                _.isEmpty(alternateBindings) && _.isEmpty(phraseCompletions) && _.isEmpty(phraseExtensions) && _.isEmpty(suggestedReplacements) || (this.replacementBindings = {
                    alternates: alternateBindings,
                    phraseCompletions,
                    phraseExtensions,
                    suggestedReplacements
                }), this.inferredTermBindings = _.map(wireSpan.InferredTermBindings, function(wireContractInferredBinding) {
                    return {
                        inferredBindingType: (wireContract = wireContractInferredBinding.InferredTerm).Type,
                        definitionPrompt: wireContract.DefinitionPrompt,
                        definitionText: wireContract.DefinitionText,
                        prefixText: wireContract.PrefixText,
                        suffixText: wireContract.SuffixText,
                        hintText: wireContract.HintText,
                        alternateDefinitionTexts: wireContract.AlternateDefinitionTexts,
                        linguisticSchemaItems: wireContract.LinguisticSchemaItems,
                        definedTerm: wireContract.DefinedTerm,
                        targetRole: wireContract.TargetRole,
                        metadata: wireContract.Metadata
                    };
                    var wireContract;
                }), this.inferredTermBindingsUnsupported = wireSpan.InferredTermBindingsUnsupported, 
                this.hasBinding = null != this.binding || null != this.replacementBindings || !_.isEmpty(this.inferredTermBindings), 
                this.isWhiteSpace = !_.isEmpty(this.text) && _.isEmpty(_.trim(this.text)), this.isUsed = !this.isOverlapping && (null == this.resolution || 0 === this.resolution || 4 === this.resolution), 
                this.isUnknown = 3 === this.resolution, this.isInferred = 4 === this.resolution, 
                this.overlapSpans = [];
                var definedWithOptions = !this.isOverlapping && !_.isEmpty(this.text) && !isCoreTermAndShouldNotIndicateOptions(this) && !isPhrasingBindingAndShouldNotIndicateOptions(this) && !isSpanUndefinedWithOptions(this) && this.hasBinding && this.isUsed, undefinedWithOptions = isSpanUndefinedWithOptions(this);
                _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assert(function() {
                    return !(definedWithOptions && undefinedWithOptions);
                }, "A span can not be definedWithOptions and undefinedWithOptions at the same time."), 
                this.state = definedWithOptions ? "accepted" : undefinedWithOptions && this.isUsed ? "warning" : undefinedWithOptions ? "error" : "none";
            };
        }();
        function wireToClientCommand(wireCommand) {
            if (wireCommand) {
                var commandSemanticQuery = wireCommand.Query ? _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.deserializeQuery(wireCommand.Query) : void 0;
                return {
                    query: commandSemanticQuery,
                    queryMetadata: wireToClientQueryMetaData(commandSemanticQuery, wireCommand.QueryMetadata),
                    data: wireCommand.Data,
                    binding: wireCommand.Binding,
                    visualConfigurations: _.map(wireCommand.VisualConfigurations, function(visualConfig) {
                        var visualConfigSemanticQuery = visualConfig.Query ? _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.deserializeQuery(visualConfig.Query) : void 0;
                        return {
                            visualizationType: visualConfig.VisualizationType,
                            dataShapeBinding: visualConfig.DataShapeBinding,
                            visualElements: visualConfig.VisualElements,
                            query: visualConfigSemanticQuery,
                            queryMetadata: wireToClientQueryMetaData(commandSemanticQuery, visualConfig.QueryMetadata)
                        };
                    }),
                    suggestedVisualTypes: _.map(wireCommand.SuggestedVisualizations, function(suggestedVisual) {
                        return (0, _powerbi_Insights__WEBPACK_IMPORTED_MODULE_3__.s)(suggestedVisual.VisualizationType).name;
                    }),
                    linguisticSchemaJson: wireCommand.LinguisticSchemaJson,
                    linguisticSchemaItems: wireCommand.LinguisticSchemaItems,
                    inferredTermMetadata: wireCommand.InferredTermMetadata,
                    defineCalculation: wireToClientDefineCalculation(wireCommand.DefineCalculation)
                };
            }
        }
        function wireToClientDefineCalculation(wireDefineCalculation) {
            if (wireDefineCalculation) return {
                expression: wireDefineCalculation.Expression,
                homeTable: wireDefineCalculation.HomeTable,
                format: wireDefineCalculation.Format
            };
        }
        function wireToClientQueryMetaData(query, wireQnaQueryMetadata) {
            if (query && wireQnaQueryMetadata) {
                var wireFilters = _.filter(wireQnaQueryMetadata.Filters, function(f) {
                    return !!f;
                }), wireSelects = _.filter(wireQnaQueryMetadata.Select, function(s) {
                    return !!s;
                });
                return {
                    filters: _.map(wireFilters, function(f) {
                        return {
                            Restatement: f.Restatement,
                            type: void 0
                        };
                    }),
                    selects: _.map(wireSelects, function(s) {
                        return {
                            restatement: s.Restatement,
                            valueType: convertSemanticTypeToValueType(s.DefaultLabel ? s.DefaultLabel.SemanticType : s.SemanticType),
                            isGroup: s.IsGroup,
                            defaultLabel: s.DefaultLabel ? createStandaloneDefaultLabel(s.DefaultLabel.Expression, query) : void 0,
                            isExplicitSortBy: s.IsExplicitSortBy
                        };
                    })
                };
            }
        }
        function isCoreTermAndShouldNotIndicateOptions(span) {
            var _a, _b;
            return 7 === (null === (_a = span.binding) || void 0 === _a ? void 0 : _a.type) && !span.isCorrected && _.isEmpty(null === (_b = span.replacementBindings) || void 0 === _b ? void 0 : _b.suggestedReplacements) && _.isEmpty(span.inferredTermBindings);
        }
        function isPhrasingBindingAndShouldNotIndicateOptions(span) {
            var _a, _b;
            return 8 === (null === (_a = span.binding) || void 0 === _a ? void 0 : _a.type) && !span.isCorrected && 2 === span.resolution && _.isEmpty(null === (_b = span.replacementBindings) || void 0 === _b ? void 0 : _b.suggestedReplacements) && _.isEmpty(span.inferredTermBindings);
        }
        function isSpanUndefinedWithOptions(span) {
            return !(span.isOverlapping || _.isEmpty(span.text) || isCoreTermAndShouldNotIndicateOptions(span) || isPhrasingBindingAndShouldNotIndicateOptions(span) || !span.isCorrected && 3 !== span.resolution && (!span.hasBinding || span.isUsed));
        }
        function wireToClientBindingInfo(spanText, wireBindingContainer) {
            if (wireBindingContainer && !wireBindingContainer.InferredTerm) {
                var wireBinding, bindingType;
                if (wireBindingContainer.Table) wireBinding = wireBindingContainer.Table, bindingType = 0; else if (wireBindingContainer.Pod) wireBinding = wireBindingContainer.Pod, 
                bindingType = 1; else if (wireBindingContainer.Property) wireBinding = wireBindingContainer.Property, 
                bindingType = 2; else if (wireBindingContainer.Value) wireBinding = wireBindingContainer.Value, 
                bindingType = 3; else if (wireBindingContainer.Range) wireBinding = wireBindingContainer.Range, 
                bindingType = 4; else if (wireBindingContainer.VisType) wireBinding = wireBindingContainer.VisType, 
                bindingType = 5; else if (wireBindingContainer.Composite) wireBinding = wireBindingContainer.Composite, 
                bindingType = 6; else if (wireBindingContainer.Core) wireBinding = wireBindingContainer.Core, 
                bindingType = 7; else if (wireBindingContainer.Phrasing) wireBinding = wireBindingContainer.Phrasing, 
                bindingType = 8; else if (wireBindingContainer.TextualEntity) wireBinding = wireBindingContainer.TextualEntity, 
                bindingType = 9; else {
                    if (!wireBindingContainer.AnyEntity) {
                        var unhandledBindingAny_1 = wireBindingContainer;
                        return void _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assert(function() {
                            return !!unhandledBindingAny_1.Literal;
                        }, "Has binding type that is unhandled by client right now. Known unhandled types are: [Literal] and this is not a known type. Check to either update the known unhandled type list, or handle it on the client side.");
                    }
                    wireBinding = wireBindingContainer.AnyEntity, bindingType = 10;
                }
                return {
                    bindingInfo: {
                        type: bindingType,
                        text: wireBinding.Text,
                        textSegmentsWithMatchInfo: generateTextSegmentsWithMatchInfo(spanText, wireBinding.Text, wireBinding.MatchedSegments),
                        matchType: wireBinding.MatchType,
                        score: wireBinding.Score
                    },
                    isCorrected: wireBinding.Corrected
                };
            }
        }
        function generateTextSegmentsWithMatchInfo(spanText, bindingText, matchedSegments) {
            if (_.isEmpty(spanText) || _.isEmpty(matchedSegments)) return [ {
                text: bindingText,
                isMatched: !1
            } ];
            for (var resultSegments = [], currentIndex = 0, _i = 0, matchedSegments_1 = matchedSegments; _i < matchedSegments_1.length; _i++) {
                var segment = matchedSegments_1[_i];
                currentIndex < segment.StartIndex && resultSegments.push({
                    text: bindingText.substring(currentIndex, segment.StartIndex),
                    isMatched: !1
                }), resultSegments.push({
                    text: bindingText.substr(segment.StartIndex, segment.Length),
                    isMatched: !0
                }), currentIndex = segment.StartIndex + segment.Length;
            }
            return currentIndex < _.size(bindingText) && resultSegments.push({
                text: bindingText.substring(currentIndex),
                isMatched: !1
            }), resultSegments;
        }
        function wireToClientBindingInfoCollection(spanText, wireContractBindingContainers) {
            if (wireContractBindingContainers) {
                for (var convertedCollection = [], _i = 0, wireContractBindingContainers_1 = wireContractBindingContainers; _i < wireContractBindingContainers_1.length; _i++) {
                    var bindingInfoWithCorrected = wireToClientBindingInfo(spanText, wireContractBindingContainers_1[_i]);
                    bindingInfoWithCorrected && convertedCollection.push(bindingInfoWithCorrected.bindingInfo);
                }
                return convertedCollection;
            }
        }
        function clientToWireInferredTermBinding(clientContract) {
            return null == clientContract ? void 0 : {
                Type: clientContract.inferredBindingType,
                DefinitionPrompt: clientContract.definitionPrompt,
                DefinitionText: clientContract.definitionText,
                PrefixText: clientContract.prefixText,
                SuffixText: clientContract.suffixText,
                HintText: clientContract.hintText,
                AlternateDefinitionTexts: clientContract.alternateDefinitionTexts,
                LinguisticSchemaItems: clientContract.linguisticSchemaItems,
                DefinedTerm: clientContract.definedTerm,
                TargetRole: clientContract.targetRole,
                Metadata: clientContract.metadata
            };
        }
        function generateUtteranceCorrectionInfo(result) {
            _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(result, "result");
            var wireCorrectedTextSegments, correctedUtterance = result.CorrectedUtterance;
            if (!_.isEmpty(correctedUtterance)) {
                var replacement = result.ReplacementUtterance, state = 2;
                return !!result.Command || (result.ConfidenceLevel <= 5 ? state = 0 : result.ConfidenceLevel <= 20 && (state = 1)), 
                _.isEmpty(result.CorrectedUtteranceTextSegments) ? {
                    correctedUtterance,
                    replacementUtterance: replacement || correctedUtterance,
                    state
                } : {
                    correctedUtterance,
                    correctedTextSegments: (wireCorrectedTextSegments = result.CorrectedUtteranceTextSegments, 
                    _.map(wireCorrectedTextSegments, function(textSegment) {
                        return {
                            startIndex: textSegment.StartIndex,
                            endExcludingIndex: textSegment.StartIndex + textSegment.Length
                        };
                    })),
                    state
                };
            }
        }
        function convertSemanticTypeToValueType(semanticType) {
            switch (semanticType) {
              case 0:
              case 1:
              case 2:
              case 3:
                return;

              case 4:
                return _powerbi_legacy_PowerBIVisuals_VisualsData_types_valueType__WEBPACK_IMPORTED_MODULE_4__.Ge.fromExtendedType(7078913);

              case 5:
                return _powerbi_legacy_PowerBIVisuals_VisualsData_types_valueType__WEBPACK_IMPORTED_MODULE_4__.Ge.fromDescriptor({
                    dateTime: !0
                });

              case 6:
                return _powerbi_legacy_PowerBIVisuals_VisualsData_types_valueType__WEBPACK_IMPORTED_MODULE_4__.Ge.fromDescriptor({
                    numeric: !0
                });
            }
        }
        function createStandaloneDefaultLabel(expression, query) {
            var queryDef = _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.serializeQuery(query);
            queryDef.Select.push(expression);
            var deserializeQuery = _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.deserializeQuery(queryDef);
            return _.last(deserializeQuery.select()).expr;
        }
    }
} ]);