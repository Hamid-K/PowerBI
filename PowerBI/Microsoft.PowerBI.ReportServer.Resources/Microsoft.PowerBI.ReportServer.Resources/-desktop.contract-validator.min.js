"use strict";

(self.webpackChunkdesktop = self.webpackChunkdesktop || []).push([ [ "contract-validator" ], {
    73566: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            E: function() {
                return JsonSchemaValidationEagerModule;
            }
        });
        var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(77476), _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(9398), _powerbi_LazyLoad__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(82156), _lazy_load_routes__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(8483), _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(50423), JsonSchemaValidationEagerModule = function() {
            function JsonSchemaValidationEagerModule() {}
            return JsonSchemaValidationEagerModule.\u0275fac = function(t) {
                return new (t || JsonSchemaValidationEagerModule);
            }, JsonSchemaValidationEagerModule.\u0275mod = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275defineNgModule"]({
                type: JsonSchemaValidationEagerModule
            }), JsonSchemaValidationEagerModule.\u0275inj = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275defineInjector"]({
                imports: [ _angular_common__WEBPACK_IMPORTED_MODULE_1__.CommonModule, _powerbi_LazyLoad__WEBPACK_IMPORTED_MODULE_2__.N, _angular_router__WEBPACK_IMPORTED_MODULE_3__.Bz.forChild(_lazy_load_routes__WEBPACK_IMPORTED_MODULE_4__.Vc) ]
            }), JsonSchemaValidationEagerModule;
        }();
    },
    8483: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            Vc: function() {
                return LazyLoadRoutes;
            },
            yO: function() {
                return JsonSchemaValidationServiceInjectionToken;
            }
        });
        var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(50423), _powerbi_LazyLoad__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(57786), JsonSchemaValidationServiceInjectionToken = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.InjectionToken("JsonSchemaValidationService"), lazyLoadJsonSchemaValidation = {
            loadChildren: function() {
                return __webpack_require__.e("json-schema-validation-lazy").then(__webpack_require__.bind(__webpack_require__, 98909)).then(function(m) {
                    return m.JsonSchemaValidationLazyModule;
                });
            }
        };
        _powerbi_LazyLoad__WEBPACK_IMPORTED_MODULE_1__.E.addLazyLoadForLegacyMapping("@powerbi/JsonSchemaValidation/lazy/json-schema-validation-lazy-module#JsonSchemaValidationLazyModule", lazyLoadJsonSchemaValidation.loadChildren);
        var LazyLoadRoutes = [ {
            path: "dummy-json-schema-validation-lazy",
            loadChildren: lazyLoadJsonSchemaValidation.loadChildren
        } ];
    },
    35924: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, {
            ReportDefinitionContractValidatorModule: function() {
                return ReportDefinitionContractValidatorModule;
            }
        });
        var common = __webpack_require__(77476), json_schema_validation_eager_module = __webpack_require__(73566), lazy_load_module = __webpack_require__(82156), visualContainerGroup2 = __webpack_require__(9215), serializer_utils = __webpack_require__(68859), validation_typings = __webpack_require__(38504);
        function validateName(name, errorCode, localizationArgs, maxLength) {
            void 0 === maxLength && (maxLength = 50);
            var validations = [];
            return (null == name || 0 === name.length || name.length > maxLength) && validations.push({
                type: validation_typings.sw,
                level: validation_typings.qB.Error,
                code: null != errorCode ? errorCode : validation_typings.GS.GenericHasInvalidName,
                localizationArgs
            }), validations;
        }
        var tslib_es6 = __webpack_require__(81337);
        function validateUniqueNames(names, errorCode, localizationArgs) {
            if (null == names) return [];
            for (var validations = [], namesSet = new Set, errorsSet = new Set, _i = 0, names_1 = names; _i < names_1.length; _i++) {
                var name_1 = names_1[_i];
                void 0 !== name_1 && (!namesSet.has(name_1) || errorsSet.has(name_1) ? namesSet.add(name_1) : (validations.push({
                    type: validation_typings.sw,
                    level: validation_typings.qB.Error,
                    code: null != errorCode ? errorCode : validation_typings.GS.GenericHasDuplicateNames,
                    localizationArgs: (0, tslib_es6.__assign)({
                        fieldName: name_1
                    }, localizationArgs)
                }), errorsSet.add(name_1)));
            }
            return validations;
        }
        var visualContainerUtils = __webpack_require__(60661), core = __webpack_require__(50423), visual_plugin_service = __webpack_require__(29866), ContractValidatorService = function() {
            function ContractValidatorService(visualPluginService) {
                this.visualPluginService = visualPluginService;
            }
            return ContractValidatorService.prototype.validate = function(exploration, autoFix, parentActivity) {
                void 0 === autoFix && (autoFix = !0);
                var activity = null == parentActivity ? void 0 : parentActivity.createChildActivity({
                    name: "ReportContractValidationStep"
                }), validations = [];
                if (validations.push.apply(validations, function(exploration, autoFix) {
                    return void 0 === autoFix && (autoFix = !0), null == exploration.activeSectionIndex || exploration.activeSectionIndex < 0 || exploration.activeSectionIndex >= exploration.sections.length ? (autoFix && (exploration.activeSectionIndex = 0), 
                    [ {
                        type: validation_typings.sw,
                        level: validation_typings.qB.Warning,
                        code: validation_typings.GS.ReportHasInvalidActiveSectionIndex
                    } ]) : [];
                }(exploration)), validations.push.apply(validations, function(sections) {
                    var validations = [];
                    return _.isEmpty(sections) && validations.push({
                        type: validation_typings.sw,
                        level: validation_typings.qB.Error,
                        code: validation_typings.GS.ReportHasNoPages
                    }), validations;
                }(exploration.sections)), !_.isEmpty(exploration.filters)) {
                    for (var _i = 0, _a = exploration.filters; _i < _a.length; _i++) {
                        var filter = _a[_i];
                        validations.push.apply(validations, validateName(filter.name, validation_typings.GS.ReportHasInvalidFilterName, {
                            fieldName: filter.name
                        }));
                    }
                    validations.push.apply(validations, validateUniqueNames(_.map(exploration.filters, function(filter) {
                        return filter.name;
                    }), validation_typings.GS.ReportHasDuplicateFilterNames));
                }
                validations.push.apply(validations, validateUniqueNames(_.map(exploration.pods, function(pod) {
                    return pod.name;
                }), validation_typings.GS.ReportHasDuplicatePageBindingNames)), validations.push.apply(validations, validateUniqueNames(_.map(exploration.sections, function(section) {
                    return section.name;
                }), validation_typings.GS.ReportHasDuplicateSectionNames));
                for (var _b = 0, _c = exploration.sections; _b < _c.length; _b++) {
                    var pageValidations = this.validatePage(_c[_b], autoFix);
                    null != pageValidations && validations.push.apply(validations, pageValidations);
                }
                if (null == activity || activity.setProperty("errorCodes", _.map(validations, function(v) {
                    return v.code;
                })), null == activity || activity.resolve(), 0 !== validations.length) return validations;
            }, ContractValidatorService.prototype.validatePage = function(section, autoFix) {
                void 0 === autoFix && (autoFix = !0);
                var validations = [];
                if (validations.push.apply(validations, validateName(section.name, validation_typings.GS.PageHasInvalidName, {
                    pageName: section.name
                })), !_.isEmpty(section.filters)) {
                    for (var _i = 0, _a = section.filters; _i < _a.length; _i++) {
                        var filter = _a[_i];
                        validations.push.apply(validations, validateName(filter.name, validation_typings.GS.PageHasInvalidFilterName, {
                            fieldName: filter.name,
                            pageName: section.name
                        }));
                    }
                    validations.push.apply(validations, validateUniqueNames(_.map(section.filters, function(filter) {
                        return filter.name;
                    }), validation_typings.GS.PageHasDuplicateFilterNames, {
                        pageName: section.name
                    }));
                }
                validations.push.apply(validations, function(section) {
                    if (null == section.relationships) return [];
                    for (var validations = [], validatedNames = new Set, visualNames = new Set, _i = 0, _a = section.visualContainers; _i < _a.length; _i++) visualNames.add(_a[_i].name);
                    for (var _b = 0, _c = section.relationships; _b < _c.length; _b++) {
                        var relationship = _c[_b];
                        validatedNames.has(relationship.source.name) || visualNames.has(relationship.source.name) || (validatedNames.add(relationship.source.name), 
                        validations.push({
                            type: validation_typings.sw,
                            level: validation_typings.qB.Warning,
                            code: validation_typings.GS.PageHasInvalidVisualInteractions,
                            localizationArgs: {
                                fieldName: relationship.source.name,
                                pageName: section.name
                            }
                        })), validatedNames.has(relationship.target.name) || visualNames.has(relationship.target.name) || (validatedNames.add(relationship.target.name), 
                        validations.push({
                            type: validation_typings.sw,
                            level: validation_typings.qB.Warning,
                            code: validation_typings.GS.PageHasInvalidVisualInteractions,
                            localizationArgs: {
                                fieldName: relationship.target.name,
                                pageName: section.name
                            }
                        }));
                    }
                    return validations;
                }(section)), validations.push.apply(validations, function(section) {
                    return 0 === section.size.displayOption ? [] : null == section.size.height || null == section.size.width ? [ {
                        type: validation_typings.sw,
                        level: validation_typings.qB.Error,
                        code: validation_typings.GS.PageHasInvalidPageDisplayOption,
                        localizationArgs: {
                            pageName: section.name
                        }
                    } ] : [];
                }(section));
                var allContainers = (0, serializer_utils.qH)(section);
                validations.push.apply(validations, validateUniqueNames(_.map(allContainers, function(container) {
                    return container.name;
                }), validation_typings.GS.PageHasDuplicateVisualNames, {
                    pageName: section.name
                }));
                for (var _b = 0, allContainers_1 = allContainers; _b < allContainers_1.length; _b++) {
                    var visualValidations = this.validateCanvasItem(allContainers_1[_b], section.name);
                    null != visualValidations && validations.push.apply(validations, visualValidations);
                }
                if (0 !== validations.length) return validations;
            }, ContractValidatorService.prototype.validateCanvasItem = function(canvasItemContainer, sectionName) {
                var validations = [];
                if (validations.push.apply(validations, validateName(canvasItemContainer.name, validation_typings.GS.VisualHasInvalidName, {
                    visualName: canvasItemContainer.name,
                    pageName: sectionName
                })), (0, visualContainerGroup2.Vz)(canvasItemContainer)) {
                    if (!_.isEmpty(canvasItemContainer.filters)) {
                        for (var _i = 0, _a = canvasItemContainer.filters; _i < _a.length; _i++) {
                            var filter = _a[_i];
                            validations.push.apply(validations, validateName(filter.name, validation_typings.GS.VisualHasInvalidFilterName, {
                                fieldName: filter.name,
                                visualName: canvasItemContainer.name,
                                pageName: sectionName
                            }));
                        }
                        validations.push.apply(validations, validateUniqueNames(_.map(canvasItemContainer.filters, function(filter) {
                            return filter.name;
                        }), validation_typings.GS.VisualHasDuplicateFilterNames, {
                            pageName: sectionName,
                            visualName: canvasItemContainer.name
                        }));
                    }
                    validations.push.apply(validations, function(visualContainer, localizationArgs) {
                        var selects = (0, visualContainerUtils.oJ)(visualContainer);
                        if (_.isEmpty(selects)) return [];
                        var queryRefs = _.map(selects, function(s) {
                            return s.name;
                        });
                        return localizationArgs.visualName = visualContainer.name, validateUniqueNames(queryRefs, validation_typings.GS.VisualHasDuplicateQueryRefs, localizationArgs);
                    }(canvasItemContainer, {
                        pageName: sectionName
                    })), validations.push.apply(validations, function(visualPluginService, visualContainer, localizationArgs) {
                        var _a, _b, _c, validations = [];
                        if (null == (null === (_a = visualContainer.config.singleVisual.query) || void 0 === _a ? void 0 : _a.expansionStates)) return validations;
                        var capabilities = visualPluginService.capabilities(visualContainer.config.singleVisual.visualType);
                        if (null == capabilities) return validations;
                        for (var _i = 0, _d = null === (_b = visualContainer.config.singleVisual.query) || void 0 === _b ? void 0 : _b.expansionStates; _i < _d.length; _i++) for (var _loop_1 = function(role) {
                            null == (null === (_c = capabilities.dataRoles) || void 0 === _c ? void 0 : _c.find(function(dataRole) {
                                return dataRole.name === role;
                            })) && validations.push({
                                type: validation_typings.sw,
                                level: validation_typings.qB.Error,
                                code: validation_typings.GS.VisualHasInvalidExpansionStateRole,
                                localizationArgs: (0, tslib_es6.__assign)({
                                    fieldName: role,
                                    visualName: visualContainer.name
                                }, localizationArgs)
                            });
                        }, _e = 0, roles_1 = _d[_i].roles; _e < roles_1.length; _e++) _loop_1(roles_1[_e]);
                        return validations;
                    }(this.visualPluginService, canvasItemContainer, {
                        pageName: sectionName
                    })), validations.push.apply(validations, function(visualContainer, localizationArgs) {
                        var _a, _b, validations = [];
                        if (null == (null === (_a = visualContainer.config.singleVisual.query) || void 0 === _a ? void 0 : _a.expansionStates)) return validations;
                        var fields = [];
                        for (var projection in visualContainer.config.singleVisual.query.projections) fields.push.apply(fields, null !== (_b = visualContainer.config.singleVisual.query.projections[projection].getQueryRefs()) && void 0 !== _b ? _b : []);
                        for (var _i = 0, _c = visualContainer.config.singleVisual.query.expansionStates; _i < _c.length; _i++) for (var _d = 0, _e = _c[_i].levels; _d < _e.length; _d++) {
                            var level = _e[_d];
                            fields.includes(level.queryRefs[0]) || validations.push({
                                type: validation_typings.sw,
                                level: validation_typings.qB.Error,
                                code: validation_typings.GS.VisualHasInvalidExpansionStateField,
                                localizationArgs: (0, tslib_es6.__assign)({
                                    fieldName: level.queryRefs[0],
                                    visualName: visualContainer.name
                                }, localizationArgs)
                            });
                        }
                        return validations;
                    }(canvasItemContainer, {
                        pageName: sectionName
                    }));
                }
                if (0 !== validations.length) return validations;
            }, ContractValidatorService.prototype.isContractValidationResult = function(validation) {
                return validation.type === validation_typings.sw;
            }, ContractValidatorService.\u0275fac = function(t) {
                return new (t || ContractValidatorService)(core["\u0275\u0275inject"](visual_plugin_service.D));
            }, ContractValidatorService.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: ContractValidatorService,
                factory: ContractValidatorService.\u0275fac,
                providedIn: "root"
            }), ContractValidatorService;
        }(), lazy_load_routes = __webpack_require__(61032), ReportDefinitionContractValidatorModule = function() {
            function ReportDefinitionContractValidatorModule() {}
            return ReportDefinitionContractValidatorModule.\u0275fac = function(t) {
                return new (t || ReportDefinitionContractValidatorModule);
            }, ReportDefinitionContractValidatorModule.\u0275mod = core["\u0275\u0275defineNgModule"]({
                type: ReportDefinitionContractValidatorModule
            }), ReportDefinitionContractValidatorModule.\u0275inj = core["\u0275\u0275defineInjector"]({
                providers: [ lazy_load_module.N.withLazyService(lazy_load_routes.ig, ContractValidatorService) ],
                imports: [ common.CommonModule, lazy_load_module.N, json_schema_validation_eager_module.E ]
            }), ReportDefinitionContractValidatorModule;
        }();
    }
} ]);