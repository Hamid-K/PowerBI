"use strict";

(self.webpackChunkdesktop = self.webpackChunkdesktop || []).push([ [ "multiRowCardBehavior" ], {
    46126: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, {
            MultiRowCardBehavior: function() {
                return MultiRowCardBehavior;
            }
        });
        var _Visuals_common_renderUtil__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60066), _Visuals_common_eventBubblingUtil__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(66232), _Visuals_common_interactivityUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(30237), _VisualsCommon_Utility_browserUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(59107), MultiRowCardBehavior = function() {
            function MultiRowCardBehavior() {}
            return MultiRowCardBehavior.prototype.bindEvents = function(behaviorOptions, selectionHandler, dataPointNavigationManagerWithKey) {
                var _this = this;
                this.cardItems = behaviorOptions.cardItems, this.cardItems.style("pointer-events", "visible").on("click", function(d) {
                    return _this.handleClick(d, selectionHandler);
                }).on("contextmenu", function(d) {
                    return _this.handleContextMenu(d, selectionHandler);
                }), this.titles = behaviorOptions.titles, this.titles.style("pointer-events", "visible").on("click", function(d) {
                    return _this.handleClick(_.first(d.cardItemsData), selectionHandler);
                }), this.rows = behaviorOptions.rows, this.rows.on("keydown", function(d) {
                    return _this.handleKeyDown(_.first(d.cardItemsData), selectionHandler);
                }), this.renderSelection(behaviorOptions.hasSelection);
            }, MultiRowCardBehavior.prototype.renderSelection = function(hasSelection) {
                this.cardItems.style("opacity", function(d) {
                    return (0, _Visuals_common_renderUtil__WEBPACK_IMPORTED_MODULE_0__.eR)(d.selected, !1, hasSelection, !1);
                }), this.titles.style("opacity", function(d) {
                    var _a;
                    return (0, _Visuals_common_renderUtil__WEBPACK_IMPORTED_MODULE_0__.eR)(null === (_a = _.first(d.cardItemsData)) || void 0 === _a ? void 0 : _a.selected, !1, hasSelection, !1);
                });
            }, MultiRowCardBehavior.prototype.handleClick = function(d, selectionHandler) {
                var position = (0, _Visuals_common_interactivityUtils__WEBPACK_IMPORTED_MODULE_1__.bt)(), selectionMode = (0, 
                _VisualsCommon_Utility_browserUtils__WEBPACK_IMPORTED_MODULE_2__.D)(d3.event);
                selectionHandler.handleSelection(d, selectionMode, position);
            }, MultiRowCardBehavior.prototype.handleKeyDown = function(d, selectionHandler) {
                var d3Event = d3.event;
                if (13 === d3Event.keyCode) {
                    d3Event.preventDefault(), d3Event.stopPropagation();
                    var position = (0, _Visuals_common_interactivityUtils__WEBPACK_IMPORTED_MODULE_1__.bt)(), selectionMode = (0, 
                    _VisualsCommon_Utility_browserUtils__WEBPACK_IMPORTED_MODULE_2__.D)(d3.event);
                    selectionHandler.handleSelection(d, selectionMode, position);
                }
            }, MultiRowCardBehavior.prototype.handleContextMenu = function(d, selectionHandler) {
                if (!_VisualsCommon_Utility_browserUtils__WEBPACK_IMPORTED_MODULE_2__.M.isCtrlOrMeta(d3.event)) {
                    d3.event.preventDefault(), (0, _Visuals_common_eventBubblingUtil__WEBPACK_IMPORTED_MODULE_3__.n)(d3.event);
                    var position = (0, _Visuals_common_interactivityUtils__WEBPACK_IMPORTED_MODULE_1__.bt)();
                    selectionHandler.handleContextMenu(d, position);
                }
            }, MultiRowCardBehavior;
        }();
    }
} ]);