"use strict";

(self.webpackChunkdesktop = self.webpackChunkdesktop || []).push([ [ "visual-container-skittles-ui" ], {
    41606: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            x: function() {
                return FieldWellUtility;
            }
        });
        var _PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(47508), FieldWellUtility = function() {
            function FieldWellUtility() {}
            return FieldWellUtility.getDefaultVisualPlugin = function(featureSwitchService) {
                return featureSwitchService && featureSwitchService.featureSwitches && featureSwitchService.featureSwitches.pivotTableVisualEnabled ? _PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_0__.L.tableEx : _PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_0__.L.table;
            }, FieldWellUtility;
        }();
    },
    32441: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            u: function() {
                return FormattingPaneLazyComponent;
            }
        });
        var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(50423), _LazyLoad_components_pbi_lazy_load_pbi_lazy_load_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(18460), _c0 = function(a0, a1, a2, a3, a4) {
            return {
                formattingSources: a0,
                indicatorEnabled: a1,
                mobileFormatting: a2,
                disabledCards: a3,
                disabledSlices: a4
            };
        }, FormattingPaneLazyComponent = function() {
            function FormattingPaneLazyComponent() {
                var _this = this;
                this.mobileFormatting = !1, this.propertyChanged = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, 
                this.outputArgs = {
                    propertyChanged: function(args) {
                        return _this.propertyChanged.emit(args);
                    }
                }, this.modulePath = "@powerbi/ExploreUIAuthoring/lazy-modules/pane-formatting/pane-formatting.module#PaneFormattingModule", 
                this.componentId = "FormattingPaneComponentId";
            }
            return FormattingPaneLazyComponent.\u0275fac = function(t) {
                return new (t || FormattingPaneLazyComponent);
            }, FormattingPaneLazyComponent.\u0275cmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275defineComponent"]({
                type: FormattingPaneLazyComponent,
                selectors: [ [ "formatting-pane-lazy" ] ],
                inputs: {
                    formattingSources: "formattingSources",
                    indicatorEnabled: "indicatorEnabled",
                    mobileFormatting: "mobileFormatting",
                    disabledCards: "disabledCards",
                    disabledSlices: "disabledSlices"
                },
                outputs: {
                    propertyChanged: "propertyChanged"
                },
                decls: 1,
                vars: 10,
                consts: [ [ 3, "inputArgs", "modulePath", "outputArgs", "componentId" ] ],
                template: function(rf, ctx) {
                    1 & rf && _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275element"](0, "pbi-lazy-load", 0), 
                    2 & rf && _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275property"]("inputArgs", _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275pureFunction5"](4, _c0, ctx.formattingSources, ctx.indicatorEnabled, ctx.mobileFormatting, ctx.disabledCards, ctx.disabledSlices))("modulePath", ctx.modulePath)("outputArgs", ctx.outputArgs)("componentId", ctx.componentId);
                },
                dependencies: [ _LazyLoad_components_pbi_lazy_load_pbi_lazy_load_component__WEBPACK_IMPORTED_MODULE_1__.R ],
                encapsulation: 2,
                changeDetection: 0
            }), FormattingPaneLazyComponent;
        }();
    },
    78633: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            a: function() {
                return GradientBarLazyComponent;
            }
        });
        var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(50423), _LazyLoad_components_pbi_lazy_load_pbi_lazy_load_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(18460), _c0 = function(a0) {
            return {
                colors: a0
            };
        }, GradientBarLazyComponent = function() {
            function GradientBarLazyComponent() {
                this.modulePath = "@powerbi/ExploreUIAuthoring/lazy-modules/pane-formatting/pane-formatting.module#PaneFormattingModule", 
                this.componentId = "GradientBarComponentId";
            }
            return GradientBarLazyComponent.\u0275fac = function(t) {
                return new (t || GradientBarLazyComponent);
            }, GradientBarLazyComponent.\u0275cmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275defineComponent"]({
                type: GradientBarLazyComponent,
                selectors: [ [ "gradient-bar-lazy" ] ],
                inputs: {
                    colors: "colors"
                },
                decls: 1,
                vars: 5,
                consts: [ [ 3, "inputArgs", "modulePath", "componentId" ] ],
                template: function(rf, ctx) {
                    1 & rf && _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275element"](0, "pbi-lazy-load", 0), 
                    2 & rf && _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275property"]("inputArgs", _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275pureFunction1"](3, _c0, ctx.colors))("modulePath", ctx.modulePath)("componentId", ctx.componentId);
                },
                dependencies: [ _LazyLoad_components_pbi_lazy_load_pbi_lazy_load_component__WEBPACK_IMPORTED_MODULE_1__.R ],
                encapsulation: 2,
                changeDetection: 0
            }), GradientBarLazyComponent;
        }();
    },
    71707: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            I: function() {
                return ToggleSwitchModernLazyComponent;
            }
        });
        var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(50423), _LazyLoad_components_pbi_lazy_load_pbi_lazy_load_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(18460), _c0 = function(a0, a1, a2, a3, a4) {
            return {
                toggle: a0,
                ariaLabelledby: a1,
                ariaDescribedby: a2,
                toggleLabel: a3,
                isDisabled: a4
            };
        }, ToggleSwitchModernLazyComponent = function() {
            function ToggleSwitchModernLazyComponent() {
                var _this = this;
                this.onToggleChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, 
                this.modulePath = "@powerbi/ExploreUIAuthoring/lazy-modules/pane-formatting/pane-formatting.module#PaneFormattingModule", 
                this.componentId = "ToggleSwitchModernComponentId", this.outputArgs = {
                    onToggleChange: function(args) {
                        return _this.onToggleChange.emit(args);
                    }
                };
            }
            return ToggleSwitchModernLazyComponent.\u0275fac = function(t) {
                return new (t || ToggleSwitchModernLazyComponent);
            }, ToggleSwitchModernLazyComponent.\u0275cmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275defineComponent"]({
                type: ToggleSwitchModernLazyComponent,
                selectors: [ [ "toggle-switch-modern-lazy" ] ],
                inputs: {
                    toggle: "toggle",
                    ariaLabelledby: "ariaLabelledby",
                    ariaDescribedby: "ariaDescribedby",
                    toggleLabel: "toggleLabel",
                    isDisabled: "isDisabled"
                },
                outputs: {
                    onToggleChange: "onToggleChange"
                },
                decls: 1,
                vars: 10,
                consts: [ [ 3, "inputArgs", "modulePath", "outputArgs", "componentId" ] ],
                template: function(rf, ctx) {
                    1 & rf && _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275element"](0, "pbi-lazy-load", 0), 
                    2 & rf && _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275property"]("inputArgs", _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275pureFunction5"](4, _c0, ctx.toggle, ctx.ariaLabelledby, ctx.ariaDescribedby, ctx.toggleLabel, ctx.isDisabled))("modulePath", ctx.modulePath)("outputArgs", ctx.outputArgs)("componentId", ctx.componentId);
                },
                dependencies: [ _LazyLoad_components_pbi_lazy_load_pbi_lazy_load_component__WEBPACK_IMPORTED_MODULE_1__.R ],
                encapsulation: 2,
                changeDetection: 0
            }), ToggleSwitchModernLazyComponent;
        }();
    },
    90094: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            l: function() {
                return WarningEagerComponent;
            }
        });
        var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(50423), _LazyLoad_components_pbi_lazy_load_pbi_lazy_load_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(18460), _c0 = function(a0) {
            return {
                warningMessage: a0
            };
        }, WarningEagerComponent = function() {
            function WarningEagerComponent() {
                this.modulePath = "@powerbi/ExploreUIAuthoring/lazy-modules/pane-formatting/pane-formatting.module#PaneFormattingModule", 
                this.componentId = "WarningComponentId";
            }
            return WarningEagerComponent.\u0275fac = function(t) {
                return new (t || WarningEagerComponent);
            }, WarningEagerComponent.\u0275cmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275defineComponent"]({
                type: WarningEagerComponent,
                selectors: [ [ "warning-eager" ] ],
                inputs: {
                    warningMessage: "warningMessage"
                },
                decls: 1,
                vars: 5,
                consts: [ [ 3, "inputArgs", "modulePath", "componentId" ] ],
                template: function(rf, ctx) {
                    1 & rf && _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275element"](0, "pbi-lazy-load", 0), 
                    2 & rf && _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275property"]("inputArgs", _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275pureFunction1"](3, _c0, ctx.warningMessage))("modulePath", ctx.modulePath)("componentId", ctx.componentId);
                },
                dependencies: [ _LazyLoad_components_pbi_lazy_load_pbi_lazy_load_component__WEBPACK_IMPORTED_MODULE_1__.R ],
                encapsulation: 2,
                changeDetection: 0
            }), WarningEagerComponent;
        }();
    },
    42101: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            p: function() {
                return PaneFormattingEagerModule;
            }
        });
        var _format_mode__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(9844), _angular_common__WEBPACK_IMPORTED_MODULE_6__ = (__webpack_require__(32441), 
        __webpack_require__(78633), __webpack_require__(71707), __webpack_require__(90094), 
        __webpack_require__(77476)), _angular_router__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(9398), _powerbi_LazyLoad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(57786), _powerbi_LazyLoad__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(82156), _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(50423), lazyLoadPaneFormatting = {
            loadChildren: function() {
                return Promise.all([ __webpack_require__.e(4), __webpack_require__.e("pane-formatting") ]).then(__webpack_require__.bind(__webpack_require__, 71980)).then(function(m) {
                    return m.PaneFormattingModule;
                });
            }
        };
        _powerbi_LazyLoad__WEBPACK_IMPORTED_MODULE_0__.E.addLazyLoadForLegacyMapping("@powerbi/ExploreUIAuthoring/lazy-modules/pane-formatting/pane-formatting.module#PaneFormattingModule", lazyLoadPaneFormatting.loadChildren);
        var LazyLoadRoutes = [ {
            path: "dummy-pane-formatting-lazy",
            loadChildren: lazyLoadPaneFormatting.loadChildren
        } ], PaneFormattingEagerModule = function() {
            function PaneFormattingEagerModule() {}
            return PaneFormattingEagerModule.\u0275fac = function(t) {
                return new (t || PaneFormattingEagerModule);
            }, PaneFormattingEagerModule.\u0275mod = _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275defineNgModule"]({
                type: PaneFormattingEagerModule
            }), PaneFormattingEagerModule.\u0275inj = _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275defineInjector"]({
                imports: [ _angular_common__WEBPACK_IMPORTED_MODULE_6__.CommonModule, _format_mode__WEBPACK_IMPORTED_MODULE_7__.j, _powerbi_LazyLoad__WEBPACK_IMPORTED_MODULE_8__.N, _angular_router__WEBPACK_IMPORTED_MODULE_9__.Bz.forChild(LazyLoadRoutes) ]
            }), PaneFormattingEagerModule;
        }();
    },
    79930: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            EY: function() {
                return ConditionalFormattingDialogLauncherServiceLazyProvider;
            },
            Wg: function() {
                return ConditionalFormattingDialogLauncherService;
            }
        });
        var tslib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(81337), _powerbi_Explore__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(8082), _powerbi_Explore__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(40823), _powerbi_ExploreUI__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(83008), _powerbi_legacy_Data_services_serialization_dataViewObjectDescriptorSerializer__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(77616), _powerbi_legacy_Data_services_serialization_dataViewObjectSerializer__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(54766), _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(3468), _powerbi_legacy_PowerBIVisuals_VisualsData_semanticQuery_sqExprStaticMembers__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(74082), _powerbi_legacy_VisualHostCore_services_serializers_visualStyleSerializer__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(25740), _powerbi_Localization__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(65181), _powerbi_UILibrary__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(58938), _powerbi_UILibrary__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(4877), _angular_core__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(50423), ConditionalFormattingDialogLauncherServiceLazyProvider = {
            provide: "conditionalFormattingDialogLauncherService",
            useFactory: function(localizationService, dialogService, itemPickerService, dataSourcesService, runningVisuals, dataSourcesSerializer) {
                return new ConditionalFormattingDialogLauncherService(localizationService, dialogService, itemPickerService, dataSourcesService, runningVisuals, dataSourcesSerializer);
            },
            deps: [ _powerbi_Localization__WEBPACK_IMPORTED_MODULE_0__.o, _powerbi_UILibrary__WEBPACK_IMPORTED_MODULE_1__.x, _powerbi_UILibrary__WEBPACK_IMPORTED_MODULE_2__.a, _powerbi_ExploreUI__WEBPACK_IMPORTED_MODULE_3__.D, _powerbi_Explore__WEBPACK_IMPORTED_MODULE_4__.s, _powerbi_Explore__WEBPACK_IMPORTED_MODULE_5__._ ]
        }, ConditionalFormattingDialogLauncherService = function() {
            function ConditionalFormattingDialogLauncherService(localizationService, dialogService, itemPickerService, dataSourcesService, runningVisuals, dataSourcesSerializer) {
                this.localizationService = localizationService, this.dialogService = dialogService, 
                this.itemPickerService = itemPickerService, this.dataSourcesService = dataSourcesService, 
                this.runningVisuals = runningVisuals, this.dataSourcesSerializer = dataSourcesSerializer;
            }
            return ConditionalFormattingDialogLauncherService.prototype.show = function(visualContainer, exprDisplayName, targetFieldExpr, repetition, propertyDefinition, visualStyle) {
                return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function() {
                    var exprToUse;
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return exprToUse = targetFieldExpr && (0, _powerbi_legacy_PowerBIVisuals_VisualsData_semanticQuery_sqExprStaticMembers__WEBPACK_IMPORTED_MODULE_7__.tO)(targetFieldExpr) ? targetFieldExpr.measure : targetFieldExpr, 
                            [ 4, this.showModernConditionaFormattingDialog(visualContainer, exprDisplayName, exprToUse, repetition, propertyDefinition, visualStyle) ];

                          case 1:
                            return [ 2, _a.sent().afterClosed().toPromise() ];
                        }
                    });
                });
            }, ConditionalFormattingDialogLauncherService.prototype.showModernConditionaFormattingDialog = function(visualContainer, exprDisplayName, targetFieldExpr, repetition, propertyDefinition, visualStyle) {
                var _a, _b;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function() {
                    var dataSources, propertyDescriptor, runningVisual, inputArgs, bindings;
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__generator)(this, function(_c) {
                        return dataSources = this.dataSourcesSerializer.serializeDataSources(this.dataSourcesService.get()), 
                        propertyDescriptor = repetition.propertyDescriptor, runningVisual = this.runningVisuals.getVisual(visualContainer), 
                        inputArgs = {
                            colorPalette: (0, _powerbi_legacy_VisualHostCore_services_serializers_visualStyleSerializer__WEBPACK_IMPORTED_MODULE_8__.NO)(visualStyle.colorPalette),
                            icons: null === (_a = this.itemPickerService) || void 0 === _a ? void 0 : _a.getIcons(),
                            iconSets: null === (_b = this.itemPickerService) || void 0 === _b ? void 0 : _b.getIconSets(),
                            inDataSources: dataSources,
                            propertySelector: repetition.selector && (0, _powerbi_legacy_Data_services_serialization_dataViewObjectSerializer__WEBPACK_IMPORTED_MODULE_9__.UZ)(repetition.selector),
                            allowOverrideTotalMatching: repetition.allowOverrideSubtotalMatching,
                            propertyDefinition: propertyDefinition && (0, _powerbi_legacy_Data_services_serialization_dataViewObjectSerializer__WEBPACK_IMPORTED_MODULE_9__.W7)(propertyDefinition, propertyDescriptor),
                            propertyDescriptor: (0, _powerbi_legacy_Data_services_serialization_dataViewObjectDescriptorSerializer__WEBPACK_IMPORTED_MODULE_10__.m8)(propertyDescriptor, this.localizationService),
                            targetFieldDisplayName: exprDisplayName,
                            targetFieldExpr: targetFieldExpr && _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_11__.ib.serializeExpr(targetFieldExpr),
                            visualType: runningVisual.getType(),
                            hasGrouping: !!repetition.selector && this.hasGroupingColumn(runningVisual)
                        }, bindings = {
                            title: "".concat(inputArgs.propertyDescriptor.displayName, " - ").concat(inputArgs.targetFieldDisplayName),
                            input: inputArgs,
                            hideOkButton: !1,
                            hideCancelButton: !1,
                            focusInitialCloseButton: !0,
                            footerLink: {
                                text: this.localizationService.get("ConditionalFormattingDialog_LearnMore"),
                                url: "https://go.microsoft.com/fwlink/?linkid=874399",
                                type: "external"
                            }
                        }, [ 2, this.dialogService.showTemplateDialog("ConditionalFormattingDialog", bindings, {
                            minWidth: "940px",
                            height: "665px",
                            autoFocus: !0
                        }) ];
                    });
                });
            }, ConditionalFormattingDialogLauncherService.prototype.hasGroupingColumn = function(runningVisual) {
                if (!runningVisual) return !1;
                var dataView = runningVisual.getDataViews()[0];
                if (dataView.metadata && dataView.metadata.columns) for (var _i = 0, _a = dataView.metadata.columns; _i < _a.length; _i++) if (!_a[_i].isMeasure) return !0;
                return !1;
            }, ConditionalFormattingDialogLauncherService.\u0275fac = function(t) {
                return new (t || ConditionalFormattingDialogLauncherService)(_angular_core__WEBPACK_IMPORTED_MODULE_12__["\u0275\u0275inject"](_powerbi_Localization__WEBPACK_IMPORTED_MODULE_0__.o), _angular_core__WEBPACK_IMPORTED_MODULE_12__["\u0275\u0275inject"](_powerbi_UILibrary__WEBPACK_IMPORTED_MODULE_1__.x), _angular_core__WEBPACK_IMPORTED_MODULE_12__["\u0275\u0275inject"](_powerbi_UILibrary__WEBPACK_IMPORTED_MODULE_2__.a), _angular_core__WEBPACK_IMPORTED_MODULE_12__["\u0275\u0275inject"](_powerbi_ExploreUI__WEBPACK_IMPORTED_MODULE_3__.D), _angular_core__WEBPACK_IMPORTED_MODULE_12__["\u0275\u0275inject"](_powerbi_Explore__WEBPACK_IMPORTED_MODULE_4__.s), _angular_core__WEBPACK_IMPORTED_MODULE_12__["\u0275\u0275inject"](_powerbi_Explore__WEBPACK_IMPORTED_MODULE_5__._));
            }, ConditionalFormattingDialogLauncherService.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_12__["\u0275\u0275defineInjectable"]({
                token: ConditionalFormattingDialogLauncherService,
                factory: ConditionalFormattingDialogLauncherService.\u0275fac
            }), ConditionalFormattingDialogLauncherService;
        }();
    },
    51576: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, {
            VisualContainerSkittlesUIModule: function() {
                return VisualContainerSkittlesUIModule;
            }
        });
        var common = __webpack_require__(77476), ExploreUI_module = __webpack_require__(87121), visual_types_container_modern_module = __webpack_require__(91280), pane_formatting_eager_module = __webpack_require__(42101), lazy_load_module = __webpack_require__(82156), localization_module = __webpack_require__(79061), pbi_checkbox_module = __webpack_require__(47913), pbi_field_list_module = __webpack_require__(63654), pbi_office_icon_module = __webpack_require__(45411), pbi_overlay_module = __webpack_require__(66972), pbi_pane_module = __webpack_require__(13254), pbi_scrollbar_module = __webpack_require__(72359), pbi_tooltip_module = __webpack_require__(16095), tri_svg_icon = __webpack_require__(17177), core = __webpack_require__(50423), pbi_tooltip_directive = __webpack_require__(36858), tri_svg_icon_component = __webpack_require__(74913), BuildFieldWellInfoComponent = function() {
            function BuildFieldWellInfoComponent() {}
            return BuildFieldWellInfoComponent.prototype.ngOnInit = function() {
                this.infoIconName = this.mouseOutIcon;
            }, BuildFieldWellInfoComponent.\u0275fac = function(t) {
                return new (t || BuildFieldWellInfoComponent);
            }, BuildFieldWellInfoComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: BuildFieldWellInfoComponent,
                selectors: [ [ "build-field-well-info" ] ],
                inputs: {
                    iconSprite: "iconSprite",
                    mouseInIcon: "mouseInIcon",
                    mouseOutIcon: "mouseOutIcon",
                    tooltip: "tooltip"
                },
                decls: 1,
                vars: 4,
                consts: [ [ "role", "tooltip", "tri-svg-icon-16", "", "tabIndex", "0", 2, "margin-left", "4px", "margin-top", "6px", "fill", "currentColor", 3, "name", "sprite", "pbiTooltip", "mouseenter", "mouseleave" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementStart"](0, "tri-svg-icon", 0), core["\u0275\u0275listener"]("mouseenter", function() {
                        return ctx.infoIconName = ctx.mouseInIcon;
                    })("mouseleave", function() {
                        return ctx.infoIconName = ctx.mouseOutIcon;
                    }), core["\u0275\u0275elementEnd"]()), 2 & rf && (core["\u0275\u0275property"]("name", ctx.infoIconName)("sprite", ctx.iconSprite)("pbiTooltip", ctx.tooltip), 
                    core["\u0275\u0275attribute"]("aria-label", ctx.tooltip));
                },
                dependencies: [ pbi_tooltip_directive.V, tri_svg_icon_component.M ],
                encapsulation: 2
            }), BuildFieldWellInfoComponent;
        }(), tslib_es6 = __webpack_require__(81337), BehaviorSubject = __webpack_require__(35510), Subject = __webpack_require__(30794), combineLatest = __webpack_require__(59017), merge = __webpack_require__(63057), empty = __webpack_require__(37272), filter = __webpack_require__(59973), switchMap = __webpack_require__(81905), startWith = __webpack_require__(22318), takeUntil = __webpack_require__(83317), field_picker_modern_contracts = __webpack_require__(13941), field_picker_util = __webpack_require__(98476), lazy_load_routes = __webpack_require__(96127), rx_component = __webpack_require__(73221), pbi_menu_converter = __webpack_require__(96883), VisualCalcEditorEager_lazy_load_routes = __webpack_require__(61561), events = __webpack_require__(8590), visualContainerUtils = __webpack_require__(60661), fieldWellUtility = __webpack_require__(41606), Utility = __webpack_require__(38078), asyncSerializer = __webpack_require__(57419), debug = __webpack_require__(62458), sqExprEqualityVisitor = __webpack_require__(45413), sqExprStaticMembers = __webpack_require__(74082), isMeasure = __webpack_require__(58295), sqHierarchyExprUtils1 = __webpack_require__(45551), context_activity_utils = __webpack_require__(58609), ExploreUIAuthoring_lazy_load_routes = __webpack_require__(43626), conditional_formatting_dialog_launcher_service = __webpack_require__(79930), conceptual_schema_proxy_service = __webpack_require__(26898), context_activity_service = __webpack_require__(22292), data_sources_service = __webpack_require__(83008), show_value_as_service = __webpack_require__(85677), visual_authoring_service = __webpack_require__(66890), exploration_capabilities_service = __webpack_require__(48145), event_bridge_service = __webpack_require__(11494), exploration_display_name_service = __webpack_require__(13702), running_visual_service = __webpack_require__(8082), visibility_service = __webpack_require__(15393), feature_switch_service = __webpack_require__(9380), grouping_design_state_service = __webpack_require__(23983), lazy_scoped_provider = __webpack_require__(28894), localization_service = __webpack_require__(65181), visual_calc_eager_service = __webpack_require__(88409), visual_plugin_service = __webpack_require__(29866), field_picker_modern_lazy_component = __webpack_require__(67930);
        function BuildFieldWellComponent_ng_container_1_build_field_well_info_4_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "build-field-well-info", 6), 2 & rf) {
                var ctx_r2 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275property"]("tooltip", ctx_r2.bucketInfTooltip);
            }
        }
        function BuildFieldWellComponent_ng_container_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r4 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "div", 2)(2, "h2", 3), 
                core["\u0275\u0275text"](3), core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](4, BuildFieldWellComponent_ng_container_1_build_field_well_info_4_Template, 1, 1, "build-field-well-info", 4), 
                core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](5, "field-picker-modern-lazy", 5), 
                core["\u0275\u0275listener"]("onExprChange", function($event) {
                    var bucket_r1 = core["\u0275\u0275restoreView"](_r4).$implicit, ctx_r3 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r3.onFieldsChange($event, bucket_r1));
                })("onCrossPickerDrop", function($event) {
                    core["\u0275\u0275restoreView"](_r4);
                    var ctx_r5 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r5.onCrossBucketFieldDrop($event));
                }), core["\u0275\u0275pipe"](6, "async"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementContainerEnd"]();
            }
            if (2 & rf) {
                var tmp_7_0, bucket_r1 = ctx.$implicit, ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](bucket_r1.displayName), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", bucket_r1.hasHiddenFieldsInVisual), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ariaLabelledby", ctx_r0.bucketTitle)("disabled", bucket_r1.disabled)("initialExpr", bucket_r1.exprs)("withFieldList", !0)("allowMultipleValues", bucket_r1.supportsMultipleItems)("allowReorderItems", null === (tmp_7_0 = ctx_r0.allowReorderFields) || void 0 === tmp_7_0 || tmp_7_0)("promotedActionStrategy", bucket_r1.showHideProjectionStrategy)("getDropExprStrategy", bucket_r1.getDropExprStrategy)("menuStrategy", bucket_r1.menuStrategy)("displayNameStrategy", bucket_r1.displayNameStrategy)("flyoutFieldsStrategy", bucket_r1.fieldFlyoutFieldsStrategy)("visualCalcFieldsStrategy", bucket_r1.visualCalcFlyoutFieldsStrategy)("directEditStrategy", bucket_r1.directEditStrategy)("enterExitFieldRename", core["\u0275\u0275pipeBind1"](6, 24, bucket_r1.enterExitFieldRename$))("externalCrossPickerDragDropMonitor", bucket_r1.crossBucketDragDropMonitor)("perspectiveDisplayName", ctx_r0.perspectiveDisplayName)("tooltipWithFlexiblePositions", !1)("parameterPickerDataFormat", ctx_r0.parameterPickerDataFormat)("visualCapabilities", ctx_r0.visualCapabilities)("addDataAriaLabelKey", bucket_r1.addDataAriaLabelKey)("emptyFieldSetsDefaultLabel", !ctx_r0.isVisualCalc)("role", bucket_r1.role);
            }
        }
        var BuildFieldWellComponent = function(_super) {
            function BuildFieldWellComponent(changeDetectorRef, conceptualSchemaProxy, contextActivityService, dataSourcesService, eventBridge, explorationDisplayNameService, featureSwitchService, groupingDesignStateService, lazyScoped, localizationService, runningVisualService, showValueAsService, visibilityService, visualAuthoring, visualCalcEagerService, visualPlugin, explorationCapabilitiesService, visualActionContext) {
                var visualInLastUpdate, _this = _super.call(this) || this;
                _this.changeDetectorRef = changeDetectorRef, _this.conceptualSchemaProxy = conceptualSchemaProxy, 
                _this.contextActivityService = contextActivityService, _this.dataSourcesService = dataSourcesService, 
                _this.eventBridge = eventBridge, _this.explorationDisplayNameService = explorationDisplayNameService, 
                _this.featureSwitchService = featureSwitchService, _this.groupingDesignStateService = groupingDesignStateService, 
                _this.lazyScoped = lazyScoped, _this.localizationService = localizationService, 
                _this.runningVisualService = runningVisualService, _this.showValueAsService = showValueAsService, 
                _this.visibilityService = visibilityService, _this.visualAuthoring = visualAuthoring, 
                _this.visualCalcEagerService = visualCalcEagerService, _this.visualPlugin = visualPlugin, 
                _this.explorationCapabilitiesService = explorationCapabilitiesService, _this.visualActionContext = visualActionContext, 
                _this.contentUpdate = new core.EventEmitter, _this.parameterPickerDataFormat = "buildfieldwell", 
                _this.fieldBucketsInternal$ = new BehaviorSubject.X(void 0), _this.uid = Utility.b$.generateGuid(), 
                _this.manualUpdate$ = new Subject.xQ, _this.fieldBuckets$ = _this.fieldBucketsInternal$.asObservable();
                var updateSerializer = new asyncSerializer.W, ngChangeVisualContainer = _this.changes$("visualContainer");
                return (0, combineLatest.aj)([ ngChangeVisualContainer.pipe(), (0, merge.T)(_this.manualUpdate$, _this.visualCalcEagerService.onContextChange$(), _this.visibilityService.get$(16), _this.eventBridge.on(events.CCe), _this.eventBridge.on(events.KD7), _this.eventBridge.on(events.jCS), ngChangeVisualContainer.pipe((0, 
                filter.h)(function(visualContainer) {
                    return !!visualContainer;
                }), (0, switchMap.w)(function(visualContainer) {
                    return _this.runningVisualService.getVisual$(visualContainer);
                }), (0, switchMap.w)(function(visual) {
                    return visual ? visual.getErrorInfo$() : empty.E;
                })), _this.eventBridge.on(events.D1A)).pipe((0, startWith.O)(void 0)) ]).pipe((0, 
                takeUntil.R)(_this.onDestroy$)).subscribe(function(_a) {
                    var visualContainer = _a[0];
                    return (0, tslib_es6.__awaiter)(_this, void 0, void 0, function() {
                        var _this = this;
                        return (0, tslib_es6.__generator)(this, function(_b) {
                            switch (_b.label) {
                              case 0:
                                return [ 4, updateSerializer.enqueue(function() {
                                    return (0, tslib_es6.__awaiter)(_this, void 0, void 0, function() {
                                        var forADifferentVisual, _this = this;
                                        return (0, tslib_es6.__generator)(this, function(_a) {
                                            switch (_a.label) {
                                              case 0:
                                                return this.visualCapabilities = (0, visualContainerUtils.cj)(visualContainer, this.visualPlugin), 
                                                this.contentUpdate.emit({
                                                    type: "start",
                                                    forVisualContainerChange: forADifferentVisual = visualContainer !== visualInLastUpdate
                                                }), [ 4, this.updateFieldBuckets(visualContainer) ];

                                              case 1:
                                                return _a.sent(), this.changeDetectorRef.detectChanges(), setTimeout(function() {
                                                    _this.contentUpdate.emit({
                                                        type: "end",
                                                        forVisualContainerChange: forADifferentVisual
                                                    });
                                                }), visualInLastUpdate = visualContainer, [ 2 ];
                                            }
                                        });
                                    });
                                }) ];

                              case 1:
                                return _b.sent(), [ 2 ];
                            }
                        });
                    });
                }), _this.showFieldTooltip = _this.localizationService.get("Visual_Calculation_Field_Well_Show_In_Visual"), 
                _this.hideFieldTooltip = _this.localizationService.get("Visual_Calculation_Field_Well_Hide_From_Visual"), 
                _this.bucketInfTooltip = _this.localizationService.get("Visual_Calculation_Field_Bucket_Tooltip"), 
                _this;
            }
            return (0, tslib_es6.__extends)(BuildFieldWellComponent, _super), BuildFieldWellComponent.prototype.onFieldsChange = function(change, bucket) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var fromUpdate, success;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return success = !0, (0, field_picker_modern_contracts.JB)(fromUpdate = change.fromUpdate) ? [ 4, this.handleAdd(bucket, fromUpdate, change.newExpr) ] : [ 3, 2 ];

                          case 1:
                            return success = _a.sent(), [ 3, 9 ];

                          case 2:
                            return (0, field_picker_modern_contracts.H2)(fromUpdate) ? [ 4, this.handleDelete(bucket, fromUpdate) ] : [ 3, 4 ];

                          case 3:
                            return _a.sent(), [ 3, 9 ];

                          case 4:
                            return (0, field_picker_modern_contracts.cA)(fromUpdate) ? [ 4, this.handleReplace(bucket, fromUpdate, change.newExpr) ] : [ 3, 6 ];

                          case 5:
                            return success = _a.sent(), [ 3, 9 ];

                          case 6:
                            return (0, field_picker_modern_contracts.cS)(fromUpdate) ? (debug.fF.assert(function() {
                                return _.isArray(change.newExpr);
                            }, "there must be multiple fields when reoreder udpate happpens"), [ 4, this.handleReorder(bucket, fromUpdate, change.newExpr) ]) : [ 3, 8 ];

                          case 7:
                            return success = _a.sent(), [ 3, 9 ];

                          case 8:
                            (0, field_picker_modern_contracts.y$)(fromUpdate) && this.handleRename(bucket, fromUpdate), 
                            _a.label = 9;

                          case 9:
                            return success || this.manualUpdate$.next(), [ 2 ];
                        }
                    });
                });
            }, BuildFieldWellComponent.prototype.onCrossBucketFieldDrop = function(eventArgs) {
                if (eventArgs.fromGroupId === this.uid && eventArgs.toGroupId === this.uid) {
                    var fromComponentId = eventArgs.fromComponentId, toComponentId = eventArgs.toComponentId;
                    if (fromComponentId !== toComponentId) {
                        var allBuckets = this.fieldBucketsInternal$.value, fromBucket = _.find(allBuckets, function(bucket) {
                            return bucket.bucketUid === fromComponentId;
                        });
                        if (fromBucket) {
                            var toBucket = _.find(allBuckets, function(bucket) {
                                return bucket.bucketUid === toComponentId;
                            });
                            if (toBucket) {
                                var fromPosition = eventArgs.fromPosition, toPosition = eventArgs.toPosition;
                                debug.fF.assert(function() {
                                    return 1 === _.size(fromPosition) && ("end" === toPosition || 1 === _.size(toPosition));
                                }, "build-field-well supports cross-bucket drag-drop of first-level items only. Add your implementation for new scenario.");
                                var toIndex = "end" === toPosition ? "end" : toPosition[0], fromProperty = fromBucket.properties[fromPosition[0]], dragPayload = {
                                    sourceRole: fromBucket.role,
                                    sourceIndex: fromProperty.startIndex,
                                    hierarchyLevelCount: _.size(fromProperty.hierarchyLevels)
                                };
                                "end" === toIndex ? toBucket.core.dropWithPayload(dragPayload) : toBucket.properties[toIndex].core.dropWithPayloadAndAction(dragPayload, 2);
                            }
                        }
                    } else debug.fF.assertFail("Expect this only be called when field is moved between different buckets");
                }
            }, BuildFieldWellComponent.prototype.updateFieldBuckets = function(targetVisualContainer) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var _a, _b, _c, roles, emptyBuckets_1, emptyBucket, newDisplayName, buildFieldWellBucket, schema, buckets, extendedBuckets, _loop_1, this_1, i, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_d) {
                        switch (_d.label) {
                          case 0:
                            return this.fieldWellViewModelService ? [ 3, 2 ] : (_a = this, [ 4, this.lazyScoped.get(lazy_load_routes.A) ]);

                          case 1:
                            _a.fieldWellViewModelService = _d.sent(), _d.label = 2;

                          case 2:
                            return this.fieldWellBucketService ? [ 3, 4 ] : (_b = this, [ 4, this.lazyScoped.get(ExploreUIAuthoring_lazy_load_routes.fI) ]);

                          case 3:
                            _b.fieldWellBucketService = _d.sent(), _d.label = 4;

                          case 4:
                            return this.fieldWellFieldService ? [ 3, 6 ] : (_c = this, [ 4, this.lazyScoped.get(ExploreUIAuthoring_lazy_load_routes.tE) ]);

                          case 5:
                            _c.fieldWellFieldService = _d.sent(), _d.label = 6;

                          case 6:
                            return targetVisualContainer ? [ 4, this.conceptualSchemaProxy.get(this.dataSourcesService.get()) ] : (roles = (0, 
                            visualContainerUtils.x3)(fieldWellUtility.x.getDefaultVisualPlugin(this.featureSwitchService)), 
                            emptyBuckets_1 = this.fieldWellViewModelService.createEmptyBuckets(roles, []), debug.fF.assert(function() {
                                return 1 === _.size(emptyBuckets_1);
                            }, "build-field-well should show only one empty bucket when no visual is selected"), 
                            emptyBucket = emptyBuckets_1[0], newDisplayName = this.localizationService.get("Data"), 
                            (buildFieldWellBucket = (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, emptyBucket), {
                                core: this.getFieldWellBucketCore(emptyBucket),
                                displayName: newDisplayName,
                                addDataAriaLabelKey: this.localizationService.format("Skittles_Build_AddData", newDisplayName)
                            })).fieldFlyoutFieldsStrategy = this.getFieldFlyoutFieldsStrategy(buildFieldWellBucket, 0, targetVisualContainer), 
                            this.fieldBucketsInternal$.next([ buildFieldWellBucket ]), [ 2 ]);

                          case 7:
                            return schema = _d.sent(), this.isVisualCalc = 16 === targetVisualContainer.visibility, 
                            [ 4, this.fieldWellViewModelService.createBuckets(this.runningVisualService.getVisual(targetVisualContainer), targetVisualContainer, schema, this.groupingDesignStateService, this.showValueAsService, this.visualPlugin, this.explorationDisplayNameService, [], !1, this.isVisualCalc, !0, this.overrideSingleBucketForAutoVisual).promise ];

                          case 8:
                            for (buckets = _d.sent(), extendedBuckets = _.map(buckets, function(bucket) {
                                var filteredProperties = _this.isVisualCalc ? bucket.properties : _.filter(bucket.properties, function(p) {
                                    return !p.isHiddenInVisual;
                                }), hasHiddenFieldsInVisual = bucket.properties.length > filteredProperties.length;
                                bucket.properties = filteredProperties, bucket.supportsMultipleItems = _this.isVisualCalc || bucket.supportsMultipleItems;
                                var simpleGetDropExprStrategy = {
                                    getDropExpr: function(originalPickerExpr, _schema) {
                                        return Promise.resolve({
                                            expr: originalPickerExpr
                                        });
                                    },
                                    getDroppedExprChildren: function(_droppedExpr, position, schema, fromUpdate) {
                                        return _this.getChildExprs(bucket, position, schema, fromUpdate);
                                    }
                                }, fieldMenuStrategy = {
                                    getMenu: function(droppedExpr, fieldPosition, _schema, fromUpdate) {
                                        return void 0 === fromUpdate && (fromUpdate = void 0), _this.getMenu(bucket, droppedExpr, fieldPosition, fromUpdate);
                                    },
                                    menuItemClickHandler: function(item, fieldPosition, _schema) {
                                        debug.fF.assert(function() {
                                            return 1 === _.size(fieldPosition);
                                        }, "build-field-well supports menu on first-level items, i.e., non hierarchy-levels only. Add your implementation for new scenario."), 
                                        extendedProperties[fieldPosition[0]].core.selectFieldMenuItem(item.data);
                                    }
                                }, fieldRenameStrategy = {
                                    getDisplayName: function(_droppedExpr, fieldPosition, _schema, fromUpdate) {
                                        return _this.getFieldDisplayName(bucket, fieldPosition, fromUpdate);
                                    },
                                    isRenameAllowed: function(fieldPosition, fromUpdate) {
                                        return _this.getIsRenameAllowed(bucket, fieldPosition, fromUpdate);
                                    },
                                    getCustomTooltipContent: function(_droppedExpr, _schema, fieldPosition, fromUpdate) {
                                        return _this.getCustomTooltipContent(bucket, fieldPosition, fromUpdate);
                                    },
                                    isFieldInvalid: function(fieldPosition, fromUpdate) {
                                        return _this.getIsFieldInvalid(bucket, fieldPosition, fromUpdate);
                                    },
                                    getDisplayNameStyle: function(fieldPosition, fromUpdate) {
                                        return _this.getFieldDisplayNameStyle(bucket, fieldPosition, fromUpdate);
                                    }
                                }, propertyExprs = _.map(bucket.properties, function(prop) {
                                    return prop.expr;
                                }), enterExitFieldRenameInternal$ = new BehaviorSubject.X(void 0), extendedBucket = (0, 
                                tslib_es6.__assign)((0, tslib_es6.__assign)({}, bucket), {
                                    bucketUid: Utility.b$.generateGuid(),
                                    exprs: bucket.supportsMultipleItems ? _.map(propertyExprs, function(propertyExpr) {
                                        return {
                                            expr: propertyExpr
                                        };
                                    }) : propertyExprs[0] ? {
                                        expr: propertyExprs[0]
                                    } : void 0,
                                    core: _this.getFieldWellBucketCore(bucket),
                                    getDropExprStrategy: simpleGetDropExprStrategy,
                                    menuStrategy: fieldMenuStrategy,
                                    displayNameStrategy: fieldRenameStrategy,
                                    enterExitFieldRename$: enterExitFieldRenameInternal$,
                                    addDataAriaLabelKey: _this.localizationService.format("Skittles_Build_AddData", bucket.displayName)
                                }), extendedProperties = _.map(bucket.properties, function(prop, index) {
                                    return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, prop), {
                                        core: _this.getFieldWellFieldCore(extendedBucket, index, prop),
                                        showHideFieldAction$: new BehaviorSubject.X(_this.generateFieldAction(targetVisualContainer, prop))
                                    });
                                });
                                return extendedBucket.properties = extendedProperties, extendedBucket.showHideProjectionStrategy = {
                                    getAction: function(fieldPosition, fromUpdate) {
                                        if (_this.isShowHideActionInfoReady(fromUpdate)) return 1 === _.size(fieldPosition) ? extendedBucket.properties[fieldPosition[0]].showHideFieldAction$.asObservable() : void 0;
                                    }
                                }, extendedBucket.hasHiddenFieldsInVisual = hasHiddenFieldsInVisual, extendedBucket;
                            }), _loop_1 = function(i) {
                                var extendedBucket = extendedBuckets[i];
                                extendedBucket.crossBucketDragDropMonitor = {
                                    groupId: this_1.uid,
                                    componentId: extendedBucket.bucketUid
                                }, extendedBucket.fieldFlyoutFieldsStrategy = this_1.getFieldFlyoutFieldsStrategy(extendedBucket, i, targetVisualContainer), 
                                this_1.featureSwitchService.featureSwitches.visualCalculationPencilIcon ? extendedBucket.directEditStrategy = {
                                    onEdit: function(position) {
                                        return (0, tslib_es6.__awaiter)(_this, void 0, void 0, function() {
                                            var fieldWell, queryName;
                                            return (0, tslib_es6.__generator)(this, function(_a) {
                                                switch (_a.label) {
                                                  case 0:
                                                    return null == (fieldWell = extendedBucket.properties[position[0]]) ? [ 2 ] : (queryName = (0, 
                                                    visualContainerUtils.$Z)(targetVisualContainer, fieldWell.role, fieldWell.startIndex), 
                                                    [ 4, this.enterVisualCalcMode(targetVisualContainer, queryName) ]);

                                                  case 1:
                                                    return _a.sent(), [ 2 ];
                                                }
                                            });
                                        });
                                    },
                                    isDisabled: function(position) {
                                        if (!_this.visualCalcEagerService.isVisualCalcAuthoringEnabled() || _this.explorationCapabilitiesService.getCapabilities().disableVisualCalcAuthoring) return !0;
                                        var fieldWell = extendedBucket.properties[position[0]];
                                        if (null == fieldWell) return !0;
                                        debug.fF.assert(function() {
                                            return (0, sqExprStaticMembers.jX)(fieldWell.expr);
                                        }, "Expect only native visual calc fields to be editable");
                                        var visualCalcExpr = fieldWell.expr, visualCalcSelectName = _.find((0, visualContainerUtils.oJ)(targetVisualContainer), function(s) {
                                            return s.nativeReferenceName === visualCalcExpr.name;
                                        });
                                        return null == visualCalcSelectName || _this.visualCalcEagerService.shouldDisableEditing(visualCalcSelectName.name, targetVisualContainer);
                                    },
                                    getActionTooltip: function() {
                                        return _this.visualCalcEagerService.isVisualCalcAuthoringEnabled() ? _this.explorationCapabilitiesService.getCapabilities().disableVisualCalcAuthoring ? _this.localizationService.get("FieldWell_EditVisualCalculation_Disabled_From_Explore") : _this.localizationService.get("Calculation_Options_Pencil") : _this.localizationService.get("Calculation_Options_NoFS");
                                    },
                                    shouldAllowDirectEdit: function(position) {
                                        var _a, fieldExpr = null === (_a = extendedBucket.properties[position[0]]) || void 0 === _a ? void 0 : _a.expr;
                                        return null != fieldExpr && (0, sqExprStaticMembers.jX)(fieldExpr);
                                    }
                                } : extendedBucket.visualCalcFlyoutFieldsStrategy = {
                                    onEditVisualCalc: function(queryName) {
                                        return (0, tslib_es6.__awaiter)(_this, void 0, void 0, function() {
                                            return (0, tslib_es6.__generator)(this, function(_a) {
                                                switch (_a.label) {
                                                  case 0:
                                                    return [ 4, this.enterVisualCalcMode(targetVisualContainer, queryName) ];

                                                  case 1:
                                                    return _a.sent(), [ 2 ];
                                                }
                                            });
                                        });
                                    },
                                    getQueryName: function(flyoutOpenFromPosition) {
                                        var fieldWell = extendedBucket.properties[flyoutOpenFromPosition[0]];
                                        if (null != fieldWell) return (0, visualContainerUtils.$Z)(targetVisualContainer, fieldWell.role, fieldWell.startIndex);
                                    },
                                    isEditableVisualCalc: function(fieldExpr) {
                                        return !!_this.visualCalcEagerService.isVisualCalcAuthoringEnabled() && null != fieldExpr && (0, 
                                        sqExprStaticMembers.jX)(fieldExpr);
                                    }
                                };
                            }, this_1 = this, i = 0; i < extendedBuckets.length; i++) _loop_1(i);
                            return this.fieldBucketsInternal$.next(extendedBuckets), [ 2 ];
                        }
                    });
                });
            }, BuildFieldWellComponent.prototype.enterVisualCalcMode = function(targetVisualContainer, queryName) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var activity;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return activity = (0, context_activity_utils.hF)(this.contextActivityService, {
                                name: "VisualAction",
                                visualName: this.visualContainer.name,
                                data: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, this.visualActionContext), {
                                    action: "EditVisualCalculation"
                                })
                            }), [ 4, this.visualCalcEagerService.enterVisualCalcMode(targetVisualContainer, queryName, activity) ];

                          case 1:
                            return _a.sent(), [ 2 ];
                        }
                    });
                });
            }, BuildFieldWellComponent.prototype.getFieldFlyoutFieldsStrategy = function(extendedBucket, bucketIndex, targetVisualContainer) {
                var _this = this;
                return {
                    getFieldsToSelectOnOpen: function(flyoutOpenFromPosition, flyoutOpenFromField) {
                        return _this.getInitialFlyoutFieldsToSelect(extendedBucket, flyoutOpenFromPosition, flyoutOpenFromField);
                    },
                    getFieldsToDisableOnOpen: function(flyoutOpenFromPosition, _flyoutOpenFromField, _allFields, schema) {
                        return _this.getInitialFlyoutFieldsToDisable(extendedBucket, flyoutOpenFromPosition, schema);
                    },
                    handleSelectedField: function(field, flyoutOpenFromPosition) {
                        return (0, tslib_es6.__awaiter)(_this, void 0, void 0, function() {
                            return (0, tslib_es6.__generator)(this, function(_a) {
                                switch (_a.label) {
                                  case 0:
                                    return [ 4, this.handleSelectedField(extendedBucket, field, flyoutOpenFromPosition) ];

                                  case 1:
                                    return _a.sent(), [ 2 ];
                                }
                            });
                        });
                    },
                    handleDeselectedField: function(deselectedField) {
                        return _this.handleDeselectedField(_this.fieldBucketsInternal$.value[bucketIndex], deselectedField);
                    },
                    onCloseWithCreateVisualCalc: function(roleName) {
                        return (0, tslib_es6.__awaiter)(_this, void 0, void 0, function() {
                            return (0, tslib_es6.__generator)(this, function(_a) {
                                switch (_a.label) {
                                  case 0:
                                    return [ 4, this.onCloseFlyoutWithCreateVisualCalc(targetVisualContainer, roleName) ];

                                  case 1:
                                    return _a.sent(), [ 2 ];
                                }
                            });
                        });
                    },
                    getVisualCalcCreationInfo: function(roleName) {
                        return (0, tslib_es6.__awaiter)(_this, void 0, void 0, function() {
                            return (0, tslib_es6.__generator)(this, function(_a) {
                                switch (_a.label) {
                                  case 0:
                                    return [ 4, this.getVisualCalcCreationInfo(targetVisualContainer, roleName) ];

                                  case 1:
                                    return [ 2, _a.sent() ];
                                }
                            });
                        });
                    },
                    canOpenFlyout: function(flyoutOpenFromPosition) {
                        var _a;
                        if (null == flyoutOpenFromPosition) return !1;
                        if (!_this.featureSwitchService.featureSwitches.visualCalculationPencilIcon) return !0;
                        var fieldExpr = null === (_a = extendedBucket.properties[flyoutOpenFromPosition[0]]) || void 0 === _a ? void 0 : _a.expr;
                        return null == fieldExpr || !(0, sqExprStaticMembers.jX)(fieldExpr);
                    }
                };
            }, BuildFieldWellComponent.prototype.generateFieldAction = function(targetVisualContainer, property) {
                var _this = this;
                if (16 === targetVisualContainer.visibility) {
                    var fieldExpr = property.expr;
                    if (null != fieldExpr && ((0, isMeasure.k)(fieldExpr) || (0, sqExprStaticMembers.jX)(fieldExpr))) {
                        var hidden = property.isHiddenInVisual, role = property.role, index = property.startIndex;
                        return {
                            tooltip: hidden ? this.showFieldTooltip : this.hideFieldTooltip,
                            svgIconName: hidden ? "eye_off_16_regular" : "eye_16_regular",
                            svgIconSpriteName: "fluentui-icons",
                            handler: function() {
                                _this.visualAuthoring.toggleFieldHidden(role, index, targetVisualContainer, _this.dataSourcesService.get());
                            }
                        };
                    }
                }
            }, BuildFieldWellComponent.prototype.getCustomTooltipContent = function(bucket, fieldPosition, fromUpdate) {
                if (this.isNameInfoReadyAtUpdate(fromUpdate)) {
                    var fieldLevels = _.size(fieldPosition);
                    debug.fF.assert(function() {
                        return 1 === fieldLevels || 2 === fieldLevels;
                    }, "fields in build-field-well has either 1 or 2 levels");
                    var property = _.nth(bucket.properties, fieldPosition[0]);
                    return 1 === fieldLevels ? {
                        title: property.displayOptions.tooltipTitle,
                        description: property.displayOptions.tooltipDescription
                    } : {
                        title: property.hierarchyLevels[fieldPosition[1]].tooltipTitle
                    };
                }
            }, BuildFieldWellComponent.prototype.getFieldDisplayName = function(bucket, fieldPosition, fromUpdate) {
                if (this.isNameInfoReadyAtUpdate(fromUpdate)) {
                    var fieldLevels = _.size(fieldPosition);
                    debug.fF.assert(function() {
                        return 1 === fieldLevels || 2 === fieldLevels;
                    }, "fields in build-field-well has either 1 or 2 levels");
                    var property = _.nth(bucket.properties, fieldPosition[0]);
                    return 1 === fieldLevels ? property.displayOptions.displayName : property.hierarchyLevels[fieldPosition[1]].displayName;
                }
            }, BuildFieldWellComponent.prototype.getFieldDisplayNameStyle = function(bucket, fieldPosition, fromUpdate) {
                var style = {};
                if (!this.isNameInfoReadyAtUpdate(fromUpdate)) return style;
                var fieldLevels = _.size(fieldPosition);
                debug.fF.assert(function() {
                    return 1 === fieldLevels || 2 === fieldLevels;
                }, "fields in build-field-well has either 1 or 2 levels");
                var property = _.nth(bucket.properties, fieldPosition[0]);
                return null != (null == property ? void 0 : property.displayOptions.pbiStyle) ? property.displayOptions.pbiStyle : style;
            }, BuildFieldWellComponent.prototype.getIsFieldInvalid = function(bucket, fieldPosition, fromUpdate) {
                if (this.isNameInfoReadyAtUpdate(fromUpdate)) {
                    var fieldLevels = _.size(fieldPosition);
                    debug.fF.assert(function() {
                        return 1 === fieldLevels || 2 === fieldLevels;
                    }, "fields in build-field-well has either 1 or 2 levels");
                    var property = _.nth(bucket.properties, fieldPosition[0]);
                    return 1 === fieldLevels && !property.valid;
                }
            }, BuildFieldWellComponent.prototype.isNameInfoReadyAtUpdate = function(fromUpdate) {
                var updateType = fromUpdate.type;
                switch (updateType) {
                  case "delete":
                  case "add":
                  case "reorder":
                  case "replace":
                    return !1;

                  case "rename":
                    debug.fF.assertFail("Expect this NOT to be called for update type Rename");

                  case "initialize":
                    return !0;

                  default:
                    return void debug.fF.assertNever(updateType);
                }
            }, BuildFieldWellComponent.prototype.isShowHideActionInfoReady = function(fromUpdate) {
                var updateType = fromUpdate.type;
                switch (updateType) {
                  case "add":
                  case "replace":
                  case "delete":
                    return !1;

                  case "initialize":
                  case "rename":
                  case "reorder":
                    return !0;

                  default:
                    return void debug.fF.assertNever(updateType);
                }
            }, BuildFieldWellComponent.prototype.getMenu = function(bucket, droppedExpr, fieldPosition, fromUpdate) {
                var _a, menuReady, updateType = fromUpdate.type;
                switch (updateType) {
                  case "delete":
                    debug.fF.assertFail("Expect this NOT to be called for update type Delete");

                  case "add":
                  case "rename":
                  case "reorder":
                  case "replace":
                    menuReady = !1;
                    break;

                  case "initialize":
                    menuReady = !0;
                    break;

                  default:
                    debug.fF.assertNever(updateType);
                }
                if (menuReady) {
                    var fieldLevels = _.size(fieldPosition);
                    if (debug.fF.assert(function() {
                        return 1 === fieldLevels || 2 === fieldLevels;
                    }, "fields in build-field-well has either 1 or 2 levels"), 1 === fieldLevels) {
                        var property = _.nth(bucket.properties, fieldPosition[0]);
                        if (property && (0, sqExprEqualityVisitor.fS)(property.expr, droppedExpr)) {
                            var menuItems = null === (_a = property.interactivityOptions) || void 0 === _a ? void 0 : _a.dropDownItems;
                            return _.isEmpty(menuItems) ? void 0 : (0, pbi_menu_converter.m)(menuItems);
                        }
                        debug.fF.assertFail("expression (after drop) of property at index " + fieldPosition[0] + " does not match expected");
                    }
                }
            }, BuildFieldWellComponent.prototype.getIsRenameAllowed = function(bucket, fieldPosition, fromUpdate) {
                var _a, infoReady, updateType = fromUpdate.type;
                switch (updateType) {
                  case "delete":
                    debug.fF.assertFail("Expect this NOT to be called for update type Delete");

                  case "add":
                  case "reorder":
                  case "replace":
                    infoReady = !1;
                    break;

                  case "rename":
                    debug.fF.assertFail("Expect this NOT to be called for update type Rename");

                  case "initialize":
                    infoReady = !0;
                    break;

                  default:
                    debug.fF.assertNever(updateType);
                }
                if (infoReady) {
                    var fieldLevels = _.size(fieldPosition);
                    if (debug.fF.assert(function() {
                        return 1 === fieldLevels || 2 === fieldLevels;
                    }, "fields in build-field-well has either 1 or 2 levels"), 1 === fieldLevels) return null === (_a = _.nth(bucket.properties, fieldPosition[0]).interactivityOptions) || void 0 === _a ? void 0 : _a.isEditableField;
                }
            }, BuildFieldWellComponent.prototype.getChildExprs = function(bucket, fieldPosition, schema, fromUpdate) {
                var infoReady, updateType = fromUpdate.type;
                switch (updateType) {
                  case "delete":
                    debug.fF.assertFail("Expect this NOT to be called for update type Delete");

                  case "add":
                  case "reorder":
                  case "replace":
                    infoReady = !1;
                    break;

                  case "rename":
                    debug.fF.assertFail("Expect this NOT to be called for update type Rename");

                  case "initialize":
                    infoReady = !0;
                    break;

                  default:
                    debug.fF.assertNever(updateType);
                }
                if (infoReady && 1 === _.size(fieldPosition)) {
                    var hierarchyLevelExprs = getPropertyIncludedHierarchyLevels(bucket, fieldPosition[0], schema);
                    return _.map(hierarchyLevelExprs, function(levelExpr) {
                        return {
                            expr: levelExpr
                        };
                    });
                }
            }, BuildFieldWellComponent.prototype.getInitialFlyoutFieldsToSelect = function(bucket, flyoutOpenFromPosition, flyoutOpenFromField) {
                if (debug.fF.assert(function() {
                    return !!flyoutOpenFromField == !!flyoutOpenFromPosition;
                }, "flyoutOpenFromPosition and flyoutOpenFromField should be both undefined or defined"), 
                flyoutOpenFromField) {
                    debug.fF.assert(function() {
                        return _.size(flyoutOpenFromPosition) <= 2;
                    }, "build-field-well have maximum 2 levels of fiels");
                    var targetProperty = _.nth(bucket.properties, flyoutOpenFromPosition[0]), targetExpr = targetProperty.expr;
                    if (debug.fF && 2 === _.size(flyoutOpenFromPosition)) if ((0, sqExprStaticMembers.ez)(flyoutOpenFromField)) {
                        var isParentMatchingVariationSource_1 = (0, sqExprStaticMembers.t3)(targetExpr) && (0, 
                        sqExprEqualityVisitor.fS)((0, sqHierarchyExprUtils1.ZB)(flyoutOpenFromField), targetExpr), isParentMatchingHierarchy_1 = (0, 
                        sqExprStaticMembers.y3)(targetExpr) && (0, sqExprEqualityVisitor.fS)(targetExpr, flyoutOpenFromField.arg);
                        debug.fF.assert(function() {
                            return isParentMatchingVariationSource_1 || isParentMatchingHierarchy_1;
                        }, "in build-field-well, a hierarchy-level field's parent should be its variation source or owning hierarchy");
                    } else debug.fF.assertFail("second level fields of build-field-well should be hierarchy levels");
                    return _.isEmpty(targetProperty.hierarchyLevels) ? [ targetExpr ] : [ targetProperty.hierarchyLevels[0].expr.arg ];
                }
            }, BuildFieldWellComponent.prototype.getInitialFlyoutFieldsToDisable = function(bucket, flyoutOpenFromPosition, schema) {
                if (flyoutOpenFromPosition) return debug.fF.assert(function() {
                    return _.size(flyoutOpenFromPosition) <= 2;
                }, "build-field-well have maximum 2 levels of fiels"), getPropertyIncludedHierarchyLevels(bucket, flyoutOpenFromPosition[0], schema);
            }, BuildFieldWellComponent.prototype.handleDeselectedField = function(bucket, deselectedField) {
                var position = (0, field_picker_util.f)(deselectedField, bucket.properties);
                _.isEmpty(position) || this.handleDelete(bucket, {
                    type: "delete",
                    deleted: {
                        position,
                        expr: deselectedField
                    }
                });
            }, BuildFieldWellComponent.prototype.handleSelectedField = function(bucket, selectedField, flyoutOpenFromPosition) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return flyoutOpenFromPosition ? (debug.fF.assert(function() {
                                return _.size(flyoutOpenFromPosition) <= 2;
                            }, "field-picker-modern right now only supports maximum 2-levels of fields."), debug.fF.assert(function() {
                                return 1 === _.size(flyoutOpenFromPosition) || !!_.nth(bucket.properties[flyoutOpenFromPosition[0]].hierarchyLevels, flyoutOpenFromPosition[1]);
                            }, "build-field-well flyout opened from second-level field should correspond to a hierarchy level"), 
                            [ 4, bucket.properties[flyoutOpenFromPosition[0]].core.dropField(selectedField, 1) ]) : [ 3, 2 ];

                          case 1:
                            return _a.sent(), [ 3, 3 ];

                          case 2:
                            bucket.core.dropField(selectedField), _a.label = 3;

                          case 3:
                            return [ 2 ];
                        }
                    });
                });
            }, BuildFieldWellComponent.prototype.onCloseFlyoutWithCreateVisualCalc = function(targetVisualContainer, roleName) {
                var _a, _b;
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var activity, _c, isSuggestTypeOn, error_1;
                    return (0, tslib_es6.__generator)(this, function(_d) {
                        switch (_d.label) {
                          case 0:
                            activity = (0, context_activity_utils.hF)(this.contextActivityService, {
                                name: "VisualAction",
                                visualName: this.visualContainer.name,
                                data: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, this.visualActionContext), {
                                    action: "CreateVisualCalculation"
                                })
                            }), _d.label = 1;

                          case 1:
                            return _d.trys.push([ 1, 5, , 6 ]), null != this.visualCalcService ? [ 3, 3 ] : (_c = this, 
                            [ 4, this.lazyScoped.get(VisualCalcEditorEager_lazy_load_routes.w) ]);

                          case 2:
                            _c.visualCalcService = _d.sent(), _d.label = 3;

                          case 3:
                            return isSuggestTypeOn = null === (_b = null === (_a = null == targetVisualContainer ? void 0 : targetVisualContainer.config) || void 0 === _a ? void 0 : _a.singleVisual) || void 0 === _b ? void 0 : _b.autoSelectVisualType, 
                            [ 4, this.visualCalcService.enterVisualCalcMode(targetVisualContainer, void 0, isSuggestTypeOn ? void 0 : roleName, activity) ];

                          case 4:
                            return _d.sent(), activity.resolve(), [ 3, 6 ];

                          case 5:
                            throw error_1 = _d.sent(), activity.reject(error_1), error_1;

                          case 6:
                            return [ 2 ];
                        }
                    });
                });
            }, BuildFieldWellComponent.prototype.getVisualCalcCreationInfo = function(targetVisualContainer, roleName) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var _a;
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return null != this.visualCalcService ? [ 3, 2 ] : (_a = this, [ 4, this.lazyScoped.get(VisualCalcEditorEager_lazy_load_routes.w) ]);

                          case 1:
                            _a.visualCalcService = _b.sent(), _b.label = 2;

                          case 2:
                            return [ 4, this.visualCalcService.getVisualCalcCreationInfo(targetVisualContainer, this.visualCapabilities, roleName) ];

                          case 3:
                            return [ 2, _b.sent() ];
                        }
                    });
                });
            }, BuildFieldWellComponent.prototype.handleAdd = function(bucket, addUpdate, newExprsAfterUpdate) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var normalizedAfterAdd, positionToAdd, indexToAdd;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        return normalizedAfterAdd = _.isArray(newExprsAfterUpdate) ? newExprsAfterUpdate : newExprsAfterUpdate ? [ newExprsAfterUpdate ] : [], 
                        1 === _.size(normalizedAfterAdd) ? [ 2, bucket.core.dropField(normalizedAfterAdd[0].expr) ] : (positionToAdd = addUpdate.added.position, 
                        debug.fF.assert(function() {
                            return "end" === positionToAdd || 1 === _.size(positionToAdd);
                        }, "build-field-well only allows add into first-level fields."), (indexToAdd = "end" === positionToAdd ? _.size(normalizedAfterAdd) - 1 : positionToAdd[0]) === _.size(normalizedAfterAdd) - 1 ? [ 2, bucket.core.dropField(_.last(normalizedAfterAdd).expr) ] : [ 2, bucket.properties[indexToAdd].core.dropWithPayloadAndAction({
                            field: addUpdate.added.pickerOriginalExpr
                        }, 2) ]);
                    });
                });
            }, BuildFieldWellComponent.prototype.handleDelete = function(bucket, deleteUpdate) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var positionOfFieldToDelete, firstLevelFieldIndex, targetProperty, childLevelFieldIndex;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return positionOfFieldToDelete = deleteUpdate.deleted.position, debug.fF.assert(function() {
                                return 1 === _.size(positionOfFieldToDelete) || 2 === _.size(positionOfFieldToDelete);
                            }, "build-field-well supports maximum 2-levels of fields"), firstLevelFieldIndex = _.first(positionOfFieldToDelete), 
                            debug.fF.assert(function() {
                                return _.inRange(firstLevelFieldIndex, 0, _.size(bucket.properties));
                            }, "first level fieldindex to delete is not in valid range"), targetProperty = bucket.properties[firstLevelFieldIndex], 
                            childLevelFieldIndex = _.nth(positionOfFieldToDelete, 1), debug.fF.assert(function() {
                                return null == childLevelFieldIndex || _.inRange(childLevelFieldIndex, 0, _.size(targetProperty.hierarchyLevels));
                            }, "child index to delete is not in valid range"), [ 4, targetProperty.core.deleteField(childLevelFieldIndex) ];

                          case 1:
                            return _a.sent(), [ 2 ];
                        }
                    });
                });
            }, BuildFieldWellComponent.prototype.handleReorder = function(bucket, reorderUpdate, newExprsAfterUpdate) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var fromPosition, toPosition, fromIndex, payload, core, dropAction, toIndex;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        return fromPosition = reorderUpdate.reordered.fromPosition, toPosition = reorderUpdate.reordered.toPosition, 
                        debug.fF.assert(function() {
                            return 1 === _.size(fromPosition) && 1 === _.size(toPosition);
                        }, "build-field-well supports reordering of first-level items only. Add your implementation for new scenario."), 
                        fromIndex = fromPosition[0], debug.fF.assert(function() {
                            return _.inRange(fromIndex, 0, _.size(bucket.properties));
                        }, "reorder.fromIndex is not in valid range"), payload = {
                            sourceRole: bucket.role,
                            sourceIndex: bucket.properties[fromIndex].startIndex,
                            hierarchyLevelCount: _.size(bucket.properties[fromIndex].hierarchyLevels)
                        }, toIndex = toPosition[0], debug.fF.assert(function() {
                            return _.inRange(toIndex, 0, _.size(bucket.properties) + 1);
                        }, "reorder.toIndex is not in valid range"), toIndex === _.size(newExprsAfterUpdate) ? (core = _.last(bucket.properties).core, 
                        dropAction = 3) : (core = bucket.properties[toIndex].core, dropAction = 2), [ 2, core.dropWithPayloadAndAction(payload, dropAction) ];
                    });
                });
            }, BuildFieldWellComponent.prototype.handleReplace = function(bucket, replaceUpdate, newExprsAfterUpdate) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var positionToReplace, indexToReplace, newExprAndMetadata;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        return positionToReplace = replaceUpdate.replaced.position, debug.fF.assert(function() {
                            return 1 === _.size(positionToReplace);
                        }, "build-field-well only allows replace first-level fields from underlying pbi-drag-drop-picker"), 
                        indexToReplace = positionToReplace[0], debug.fF.assert(function() {
                            return _.inRange(indexToReplace, 0, _.size(bucket.properties));
                        }, "index to replace is not in valid range"), debug.fF.assert(bucket.supportsMultipleItems ? function() {
                            return _.isArray(newExprsAfterUpdate) && _.size(bucket.properties) === _.size(newExprsAfterUpdate);
                        } : function() {
                            return !_.isArray(newExprsAfterUpdate) && 1 === _.size(bucket.properties);
                        }, "properties and newExprsAfterUpdate size mismatch"), newExprAndMetadata = _.isArray(newExprsAfterUpdate) ? newExprsAfterUpdate[indexToReplace] : newExprsAfterUpdate, 
                        [ 2, bucket.properties[indexToReplace].core.dropField(newExprAndMetadata.expr, 1) ];
                    });
                });
            }, BuildFieldWellComponent.prototype.handleRename = function(bucket, renameUpdate) {
                var fieldPosition = renameUpdate.renamed.position;
                debug.fF.assert(function() {
                    return 1 === _.size(fieldPosition);
                }, "build-field-well only allows rename of first-level fields");
                var newName = renameUpdate.renamed.newName, property = bucket.properties[fieldPosition[0]];
                debug.fF.assertValue(property, "Invalid fieldIndex"), property.core.rename(newName);
            }, BuildFieldWellComponent.prototype.getFieldWellFieldCore = function(bucket, fieldIndex, fieldViewModel) {
                var _this = this, fieldCore = this.fieldWellFieldService.createFieldWellFieldCore(void 0, function(isLabelInEditMode) {
                    return _this.onLabelInEditingModeChanged(bucket, fieldIndex, isLabelInEditMode);
                });
                return fieldCore.viewModel = fieldViewModel, fieldCore;
            }, BuildFieldWellComponent.prototype.onLabelInEditingModeChanged = function(bucket, fieldIndex, isLabelInEditingMode) {
                bucket.enterExitFieldRename$.next({
                    fieldPosition: [ fieldIndex ],
                    modeOn: !!isLabelInEditingMode
                });
            }, BuildFieldWellComponent.prototype.getFieldWellBucketCore = function(bucketViewModel) {
                var bucketCore = this.fieldWellBucketService.createFieldWellBucketCore();
                return bucketCore.viewModel = bucketViewModel, bucketCore;
            }, BuildFieldWellComponent.\u0275fac = function(t) {
                return new (t || BuildFieldWellComponent)(core["\u0275\u0275directiveInject"](core.ChangeDetectorRef), core["\u0275\u0275directiveInject"](conceptual_schema_proxy_service.i), core["\u0275\u0275directiveInject"](context_activity_service.r), core["\u0275\u0275directiveInject"](data_sources_service.D), core["\u0275\u0275directiveInject"](event_bridge_service.J), core["\u0275\u0275directiveInject"](exploration_display_name_service.O), core["\u0275\u0275directiveInject"](feature_switch_service.vZ), core["\u0275\u0275directiveInject"](grouping_design_state_service.AA), core["\u0275\u0275directiveInject"](lazy_scoped_provider.H), core["\u0275\u0275directiveInject"](localization_service.o), core["\u0275\u0275directiveInject"](running_visual_service.s), core["\u0275\u0275directiveInject"](show_value_as_service.P), core["\u0275\u0275directiveInject"](visibility_service.w), core["\u0275\u0275directiveInject"](visual_authoring_service.$8), core["\u0275\u0275directiveInject"](visual_calc_eager_service.w), core["\u0275\u0275directiveInject"](visual_plugin_service.D), core["\u0275\u0275directiveInject"](exploration_capabilities_service.U), core["\u0275\u0275directiveInject"](context_activity_utils.yk));
            }, BuildFieldWellComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: BuildFieldWellComponent,
                selectors: [ [ "build-field-well" ] ],
                inputs: {
                    visualContainer: "visualContainer",
                    perspectiveDisplayName: "perspectiveDisplayName",
                    allowReorderFields: "allowReorderFields",
                    overrideSingleBucketForAutoVisual: "overrideSingleBucketForAutoVisual"
                },
                outputs: {
                    contentUpdate: "contentUpdate"
                },
                features: [ core["\u0275\u0275ProvidersFeature"]([ conditional_formatting_dialog_launcher_service.Wg ]), core["\u0275\u0275InheritDefinitionFeature"] ],
                decls: 3,
                vars: 3,
                consts: [ [ 1, "buildFieldWell" ], [ 4, "ngFor", "ngForOf" ], [ 1, "bucketHeader" ], [ "id", "bucketTitle", 1, "bucketTitle" ], [ "iconSprite", "fluentui-icons", "mouseInIcon", "info_20_filled", "mouseOutIcon", "info_20_regular", 3, "tooltip", 4, "ngIf" ], [ "tooltipPosition", "before", 3, "ariaLabelledby", "disabled", "initialExpr", "withFieldList", "allowMultipleValues", "allowReorderItems", "promotedActionStrategy", "getDropExprStrategy", "menuStrategy", "displayNameStrategy", "flyoutFieldsStrategy", "visualCalcFieldsStrategy", "directEditStrategy", "enterExitFieldRename", "externalCrossPickerDragDropMonitor", "perspectiveDisplayName", "tooltipWithFlexiblePositions", "parameterPickerDataFormat", "visualCapabilities", "addDataAriaLabelKey", "emptyFieldSetsDefaultLabel", "role", "onExprChange", "onCrossPickerDrop" ], [ "iconSprite", "fluentui-icons", "mouseInIcon", "info_20_filled", "mouseOutIcon", "info_20_regular", 3, "tooltip" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementStart"](0, "div", 0), core["\u0275\u0275template"](1, BuildFieldWellComponent_ng_container_1_Template, 7, 26, "ng-container", 1), 
                    core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275elementEnd"]()), 2 & rf && (core["\u0275\u0275advance"](1), 
                    core["\u0275\u0275property"]("ngForOf", core["\u0275\u0275pipeBind1"](2, 1, ctx.fieldBuckets$)));
                },
                dependencies: [ common.NgForOf, common.NgIf, field_picker_modern_lazy_component.m, BuildFieldWellInfoComponent, common.AsyncPipe ],
                styles: [ '.buildFieldWell[_ngcontent-%COMP%]   .bucketHeader[_ngcontent-%COMP%]{display:flex;box-sizing:border-box;flex-direction:row}.buildFieldWell[_ngcontent-%COMP%]   .bucketTitle[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--sm-font-size, 12px);font-weight:var(--font-weight-regular, 400);margin:8px 0 4px}.buildFieldWell[_ngcontent-%COMP%]     .drap-drop-picker{background:white}' ],
                changeDetection: 0
            }), BuildFieldWellComponent;
        }(rx_component.w);
        function getPropertyIncludedHierarchyLevels(bucket, propertyIndex, schema) {
            var targetProperty = _.nth(bucket.properties, propertyIndex);
            if (!_.isEmpty(targetProperty.hierarchyLevels)) {
                var includedLevels = _.map(targetProperty.hierarchyLevels, function(level) {
                    return level.expr;
                });
                if (debug.fF) {
                    var hierarchyLevelExprs_1 = (0, sqHierarchyExprUtils1.wA)(schema, targetProperty.expr);
                    if (!_.isArray(hierarchyLevelExprs_1) || _.isEmpty(hierarchyLevelExprs_1)) return void debug.fF.assertFail("Corresponding bucket property has hierarchyLevels, the expanded expr should have hierarchy level children as well");
                    _.some(includedLevels, function(includedLevel) {
                        return !_.find(hierarchyLevelExprs_1, function(levelExpr) {
                            return (0, sqExprEqualityVisitor.fS)(levelExpr, includedLevel);
                        });
                    }) && debug.fF.assertFail("Cannot find the corresponding bucket property hierarchyLevel in hierarchy levels expanded from the dropped expr");
                }
                return includedLevels;
            }
        }
        var map = __webpack_require__(14172), overlay = __webpack_require__(59051), pbi_overlay_container_position_strategy = __webpack_require__(96441), pbi_overlay_ref = __webpack_require__(86286), typings = __webpack_require__(49977), pbi_position_strategy_adapter = __webpack_require__(90331), FlyoutOverlayRef = function(_super) {
            function FlyoutOverlayRef(flyoutConfig, overlayRef) {
                var _a, _this = this;
                (_this = _super.call(this, flyoutConfig, overlayRef) || this).overlayRef = overlayRef, 
                _this.config.providers.set(FlyoutOverlayRef, _this), _this.horizontalSide = flyoutConfig.horizontalSide, 
                _this.verticalLayout = flyoutConfig.verticalLayout, _this.horizontalLayout = flyoutConfig.horizontalLayout, 
                _this.flyoutWidthSubject$ = new BehaviorSubject.X(null !== (_a = _this.config.options.width) && void 0 !== _a ? _a : typings.Lc.childOverlayWidth), 
                _this.flyoutWidth$ = _this.flyoutWidthSubject$.asObservable(), _this.flyoutWidth$.pipe((0, 
                takeUntil.R)(_this.onClose)).subscribe(function(width) {
                    requestAnimationFrame(function() {
                        _this.overlayRef.updateSize({
                            width
                        });
                    });
                });
                var positionStrategy, positionChanges, positionStrategyConfig = _this.config.options.positionStrategy;
                return (positionStrategy = positionStrategyConfig instanceof pbi_position_strategy_adapter.M ? positionStrategyConfig.positionStrategy : positionStrategyConfig) instanceof overlay._G ? positionChanges = positionStrategy.positionChanges.pipe((0, 
                map.U)(function(change) {
                    return change.connectionPair.originX;
                })) : positionStrategy instanceof pbi_overlay_container_position_strategy.A && (positionChanges = positionStrategy.onPositionChange$().pipe((0, 
                map.U)(function(change) {
                    return change.originX;
                }))), positionChanges && positionChanges.pipe((0, takeUntil.R)(_this.onClose)).subscribe(function(originX) {
                    originX && ("start" === originX && (_this.horizontalSide = "left"), "end" === originX && (_this.horizontalSide = "right"));
                }), _this;
            }
            return (0, tslib_es6.__extends)(FlyoutOverlayRef, _super), FlyoutOverlayRef.prototype.updateWidth = function(width) {
                this.flyoutWidthSubject$.next(width);
            }, FlyoutOverlayRef;
        }(pbi_overlay_ref.w), BuildSkittleScrollContainerHelper = function() {
            function BuildSkittleScrollContainerHelper() {
                this.pauseScrollCalls = 0;
            }
            return BuildSkittleScrollContainerHelper.prototype.setScrollContainerElementRef = function(scrollContainerRef) {
                this.scrollContainerElementRef !== scrollContainerRef && (this.pauseScrollCalls = 0), 
                this.scrollContainerElementRef = scrollContainerRef;
            }, BuildSkittleScrollContainerHelper.prototype.onContentScroll = function() {
                var scrollContainerElement = this.scrollContainerElementRef.nativeElement;
                this.pauseScrollCalls > 0 && scrollContainerElement.scrollTop !== this.restoreScrollTop && (scrollContainerElement.scrollTop = this.restoreScrollTop);
            }, BuildSkittleScrollContainerHelper.prototype.onContentUpdate = function($event) {
                var _a;
                if (!$event.forVisualContainerChange) if ("start" === $event.type) {
                    if (this.pauseScrollCalls++, 1 === this.pauseScrollCalls) {
                        var scrollContainerElement = null === (_a = this.scrollContainerElementRef) || void 0 === _a ? void 0 : _a.nativeElement;
                        if (debug.fF.assertValue(scrollContainerElement, "skittle content update starts when it is not for a new visual container, scrollContainerElement should exist"), 
                        !scrollContainerElement) return;
                        this.restoreScrollTop = scrollContainerElement.scrollTop;
                    }
                } else this.pauseScrollCalls--;
            }, BuildSkittleScrollContainerHelper;
        }(), settings_service = __webpack_require__(49162), defaultSettings = {
            autoVisualWithPerspectives: !1,
            showClearChanges: !1,
            dimensions: {}
        }, SkittleSettingsService = function(_super) {
            function SkittleSettingsService() {
                return _super.call(this, defaultSettings) || this;
            }
            return (0, tslib_es6.__extends)(SkittleSettingsService, _super), SkittleSettingsService.prototype.getAutoVisualWithPerspectives = function() {
                return this.settings.autoVisualWithPerspectives;
            }, SkittleSettingsService.prototype.setAutoVisualWithPerspectives = function(value) {
                this.setValue("autoVisualWithPerspectives", value);
            }, SkittleSettingsService.prototype.getShowClearChanges = function() {
                return this.settings.showClearChanges;
            }, SkittleSettingsService.prototype.setShowClearChanges = function(value) {
                this.setValue("showClearChanges", value);
            }, SkittleSettingsService.prototype.getDimensions = function(level) {
                return void 0 === level && (level = 0), this.settings.dimensions[level];
            }, SkittleSettingsService.prototype.setDimensions = function(level, dimensions) {
                var _a, currentDimensions = this.getDimensions(level), updatedDimensions = dimensions;
                currentDimensions && (updatedDimensions = (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, currentDimensions), dimensions)), 
                this.setValue("dimensions", (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, this.settings.dimensions), ((_a = {})[level] = updatedDimensions, 
                _a)));
            }, SkittleSettingsService.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: SkittleSettingsService,
                factory: SkittleSettingsService.\u0275fac = function(t) {
                    return new (t || SkittleSettingsService);
                }
            }), SkittleSettingsService;
        }(settings_service.g), pbi_scrollbar_directive = __webpack_require__(80649), distinctUntilChanged = __webpack_require__(77526), tap = __webpack_require__(17653), take = __webpack_require__(48787), explore_formatting_lazy_load_routes = __webpack_require__(87644), field_list_tree_service = __webpack_require__(75096), modeling_scoped_services_providers = __webpack_require__(7779), pbi_tree_contracts = __webpack_require__(46015), visualContainer1 = __webpack_require__(15580), visualContainerUtilsHelper = __webpack_require__(3579), exploration_navigation_service = __webpack_require__(39503), model_service = __webpack_require__(93215), pbi_lazy_load_component = __webpack_require__(18460), localize_directive = __webpack_require__(59968), pbi_field_list_component = __webpack_require__(65005);
        function BuildSkittleComponent_pbi_lazy_load_2_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "pbi-lazy-load", 6), 2 & rf) {
                var ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("modulePath", ctx_r0.exploreUIAuthoringModulePath)("componentId", "AutoVisualComponentId")("inputArgs", ctx_r0.autoVisualInputArgs);
            }
        }
        var _c0 = function(a0, a1) {
            return {
                "pbi-glyph-chevrondownmedium": a0,
                "pbi-glyph-chevronupmedium": a1
            };
        };
        function BuildSkittleComponent_div_3_Template(rf, ctx) {
            if (1 & rf) {
                var _r6 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div", 7), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r6);
                    var ctx_r5 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r5.fieldListSectionExpanded = !ctx_r5.fieldListSectionExpanded);
                }), core["\u0275\u0275element"](1, "span", 8)(2, "i", 9), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r1 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngClass", core["\u0275\u0275pureFunction2"](1, _c0, !ctx_r1.fieldListSectionExpanded, ctx_r1.fieldListSectionExpanded));
            }
        }
        function BuildSkittleComponent_div_4_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 10), core["\u0275\u0275element"](1, "pbi-field-list", 11), 
            core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275pipe"](3, "async"), core["\u0275\u0275elementEnd"]()), 
            2 & rf) {
                var ctx_r2 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("fieldListTree", core["\u0275\u0275pipeBind1"](2, 5, ctx_r2.fieldListTree$))("checkMode", ctx_r2.fieldListCheckMode)("hasHighlights", !1)("loading", !core["\u0275\u0275pipeBind1"](3, 7, ctx_r2.fieldListTree$))("options", ctx_r2.fieldListOptions);
            }
        }
        function BuildSkittleComponent_div_5_Template(rf, ctx) {
            if (1 & rf) {
                var _r8 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div", 7), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r8);
                    var ctx_r7 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r7.toggleFieldWellSectionExpansion());
                }), core["\u0275\u0275element"](1, "span", 12)(2, "i", 9), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r3 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngClass", core["\u0275\u0275pureFunction2"](1, _c0, !ctx_r3.fieldWellSectionExpanded, ctx_r3.fieldWellSectionExpanded));
            }
        }
        var _c1 = function(a0) {
            return {
                "with-field-list": a0
            };
        };
        function BuildSkittleComponent_build_field_well_6_Template(rf, ctx) {
            if (1 & rf) {
                var _r10 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "build-field-well", 13), core["\u0275\u0275listener"]("contentUpdate", function($event) {
                    core["\u0275\u0275restoreView"](_r10);
                    var ctx_r9 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r9.onContentUpdate($event));
                }), core["\u0275\u0275pipe"](1, "async"), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r4 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("ngClass", core["\u0275\u0275pureFunction1"](7, _c1, ctx_r4.withFieldList))("visualContainer", ctx_r4.visualContainer)("perspectiveDisplayName", ctx_r4.perspectiveDisplayName)("allowReorderFields", ctx_r4.overrideSingleBucketForAutoVisual || core["\u0275\u0275pipeBind1"](1, 5, ctx_r4.allowReorderFields$))("overrideSingleBucketForAutoVisual", ctx_r4.overrideSingleBucketForAutoVisual);
            }
        }
        var _c2 = function() {
            return {
                ignoreOverlay: !1,
                ignoreMobile: !1
            };
        }, BuildSkittleComponent = function(_super) {
            function BuildSkittleComponent(changeDetectorRef, conceptualSchemaProxy, contextActivityService, dataSources, eventBridge, explorationNavigation, fieldListTreeService, lazyScoped, localizationService, modelService, skittleSettingsService) {
                var _this = _super.call(this) || this;
                _this.changeDetectorRef = changeDetectorRef, _this.conceptualSchemaProxy = conceptualSchemaProxy, 
                _this.contextActivityService = contextActivityService, _this.dataSources = dataSources, 
                _this.eventBridge = eventBridge, _this.explorationNavigation = explorationNavigation, 
                _this.fieldListTreeService = fieldListTreeService, _this.lazyScoped = lazyScoped, 
                _this.localizationService = localizationService, _this.modelService = modelService, 
                _this.skittleSettingsService = skittleSettingsService, _this.contentUpdate = new core.EventEmitter, 
                _this.fieldListCheckMode = pbi_tree_contracts.kH.Multi, _this.isAutoVisualInternal$ = new BehaviorSubject.X(void 0), 
                _this.isSessionDirtyInternal$ = new BehaviorSubject.X(!1);
                var autoVisualLabel = _this.localizationService.get("Suggestions"), autoVisualAutoModeToggleLabel = _this.localizationService.get("Skittles_Build_SuggestLabel"), autoVisualTooltip = _this.localizationService.get("Skittles_Build_SuggestTooltip");
                return _this.isSessionDirty$ = _this.isSessionDirtyInternal$.pipe((0, distinctUntilChanged.x)(), (0, 
                takeUntil.R)(_this.onDestroy$)), _this.allowReorderFields$ = _this.isAutoVisualInternal$.pipe((0, 
                map.U)(function(isAuto) {
                    return !isAuto;
                }), (0, distinctUntilChanged.x)(), (0, takeUntil.R)(_this.onDestroy$)), _this.changes$("visualContainer").pipe((0, 
                takeUntil.R)(_this.onDestroy$)).subscribe(function(visualContainer) {
                    visualContainer && (_this.originalVisualConfig = {
                        singleVisual: (0, visualContainer1.d9)(visualContainer.config.singleVisual)
                    }, _this.isAutoVisualInternal$.next((0, visualContainerUtils.II)(visualContainer)));
                }), (0, combineLatest.aj)([ _this.changes$("visualContainer"), _this.changes$("host"), _this.changes$("setFocusAfterInitialization", !0) ]).pipe((0, 
                takeUntil.R)(_this.onDestroy$)).subscribe(function(_a) {
                    var host = _a[1], setFocusAfterInitialization = _a[2], isHostPane = "Pane" === host;
                    _this.autoVisualInputArgs = {
                        label: autoVisualLabel,
                        autoModeToggleLabel: autoVisualAutoModeToggleLabel,
                        tooltip: autoVisualTooltip,
                        visualContainer: _a[0],
                        withPerspectives: _this.skittleSettingsService.getAutoVisualWithPerspectives(),
                        setFocusAfterInitialization,
                        host,
                        allowSelectVisualTypeWhenNoVisual: !0,
                        noAutoToggleSwitch: isHostPane,
                        noSuggestions: isHostPane,
                        alwaysExpanded: isHostPane
                    };
                }), _this.lazyScoped.get(explore_formatting_lazy_load_routes.ub).then(function(formattingService) {
                    formattingService.startFormattingTutorial("FieldPickerTutorial");
                }), _this;
            }
            return (0, tslib_es6.__extends)(BuildSkittleComponent, _super), BuildSkittleComponent.prototype.onContentUpdate = function($event) {
                this.contentUpdate.emit($event);
            }, BuildSkittleComponent.prototype.ngOnInit = function() {
                var _this = this;
                this.withFieldList = null != this.fieldListOptions && null != this.fieldListTreeOptions, 
                this.fieldListSectionExpanded = this.withFieldList, this.fieldWellSectionExpanded = this.expandFieldWellOnInit || !this.withFieldList, 
                null != this.refreshFieldList$ && this.refreshFieldList$.pipe((0, distinctUntilChanged.x)()).pipe((0, 
                takeUntil.R)(this.onDestroy$)).subscribe(function() {
                    return _this.fieldListTreeService.refresh();
                }), this.withFieldList && this.modelService.update([]).then(function() {
                    _this.modelService.modelChange$.pipe((0, takeUntil.R)(_this.onDestroy$)).subscribe(function(fieldListModel) {
                        if (null != (null == fieldListModel ? void 0 : fieldListModel.model)) {
                            var hasSingleTable = 1 === _.size(fieldListModel.model.tables);
                            _this.fieldListTreeService.modelToPbiTreeConverterOptions = _this.fieldListTreeOptions, 
                            _this.fieldListTreeService.modelToPbiTreeConverterOptions.expandedSetting = new FieldPickerFlyoutExpandedSettingStrategy(hasSingleTable), 
                            _this.fieldListTreeService.setOrUpdateFieldListTreeModel(fieldListModel.model), 
                            _this.fieldListTree$ = _this.fieldListTreeService.fieldListTree$;
                        }
                    });
                }), this.skittleSettingsService.getAutoVisualWithPerspectives() && (this.perspectiveDisplayName = this.getPerspectiveDisplayName()), 
                (0, merge.T)(this.eventBridge.on(events.tRg), this.eventBridge.on(events.KD7), this.eventBridge.on(events.jCS), this.eventBridge.on(events.D1A), this.eventBridge.on(events.Udu)).pipe((0, 
                tap.b)(function() {
                    return _this.checkDirtyState();
                }), (0, takeUntil.R)(this.onDestroy$)).subscribe(function() {
                    _this.isAutoVisualInternal$.next((0, visualContainerUtils.II)(_this.visualContainer)), 
                    null != _this.fieldListOptions && _this.updateFieldListSelectionState();
                }), this.expandFieldWellSectionOnInitialChange && this.eventBridge.on(events.jCS).pipe((0, 
                take.q)(1)).subscribe(function() {
                    var _a;
                    !0 !== _this.fieldWellSectionExpanded && (_this.fieldWellSectionExpanded = !0, _this.changeDetectorRef.detectChanges(), 
                    document.activeElement.scrollIntoView(!0), _this.autoExpandFieldWellSectionActivity = _this.contextActivityService.createActivity({
                        name: "Automatically expand field well section",
                        visualName: null === (_a = _this.visualContainer) || void 0 === _a ? void 0 : _a.name,
                        data: {
                            closed: null,
                            source: "Skittle",
                            skittleType: "Build"
                        }
                    }));
                });
            }, BuildSkittleComponent.prototype.ngOnDestroy = function() {
                var _a;
                (null === (_a = this.autoExpandFieldWellSectionActivity) || void 0 === _a ? void 0 : _a.isRunning()) && this.resolveAutoExpandFieldWellSectionActivity("automatically"), 
                _super.prototype.ngOnDestroy.call(this);
            }, Object.defineProperty(BuildSkittleComponent.prototype, "exploreUIAuthoringModulePath", {
                get: function() {
                    return "@powerbi/ExploreUIAuthoring/lazy-modules/explore-ui-authoring/explore-ui-authoring.module#ExploreUIAuthoringModule";
                },
                enumerable: !1,
                configurable: !0
            }), BuildSkittleComponent.prototype.toggleFieldWellSectionExpansion = function() {
                var _a;
                (null === (_a = this.autoExpandFieldWellSectionActivity) || void 0 === _a ? void 0 : _a.isRunning()) && this.resolveAutoExpandFieldWellSectionActivity("manually"), 
                this.fieldWellSectionExpanded = !this.fieldWellSectionExpanded;
            }, BuildSkittleComponent.prototype.discardChanges = function() {
                var _this = this;
                this.visualContainer.config.singleVisual = (0, visualContainer1.d9)(this.originalVisualConfig.singleVisual), 
                this.eventBridge.publishToChannel(events.jCS, {
                    affectContainer: function(container) {
                        return container.name === _this.visualContainer.name;
                    }
                });
            }, BuildSkittleComponent.prototype.resolveAutoExpandFieldWellSectionActivity = function(closed) {
                this.autoExpandFieldWellSectionActivity.updateProperty("data", function(data) {
                    return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, data), {
                        closed
                    });
                }), this.autoExpandFieldWellSectionActivity.resolve();
            }, BuildSkittleComponent.prototype.getPerspectiveDisplayName = function() {
                var _a, _b, _c, exploration = this.explorationNavigation.getCurrentExploration(), activeSection = exploration.sections[exploration.activeSectionIndex];
                return null === (_c = null === (_b = null === (_a = null == activeSection ? void 0 : activeSection.evaluatedObjects) || void 0 === _a ? void 0 : _a.personalizeVisual) || void 0 === _b ? void 0 : _b.perspectiveRef) || void 0 === _c ? void 0 : _c.toString();
            }, BuildSkittleComponent.prototype.updateFieldListSelectionState = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var schema, exprs, fieldListModel, checked;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.conceptualSchemaProxy.get(this.dataSources.get()) ];

                          case 1:
                            return schema = _a.sent(), exprs = (0, visualContainerUtils.oJ)(this.visualContainer), 
                            fieldListModel = this.modelService.model, checked = _.flatMapDeep(exprs, function(e) {
                                return fieldListModel.findItems(e.expr, schema);
                            }), this.fieldListTreeService.setOrUpdateFieldListTreeModel(fieldListModel, void 0, checked), 
                            [ 2 ];
                        }
                    });
                });
            }, BuildSkittleComponent.prototype.checkDirtyState = function() {
                var _a, _b, _c, _d, originalVisualQuery = null === (_b = null === (_a = this.originalVisualConfig) || void 0 === _a ? void 0 : _a.singleVisual) || void 0 === _b ? void 0 : _b.query, originalVisualType = null === (_d = null === (_c = this.originalVisualConfig) || void 0 === _c ? void 0 : _c.singleVisual) || void 0 === _d ? void 0 : _d.visualType, currentVisualQuery = (0, 
                visualContainerUtils.Xf)(this.visualContainer), currentVisualType = (0, visualContainerUtilsHelper.s)(this.visualContainer), originalQueryEmpty = null == originalVisualQuery, currentQueryEmpty = null == currentVisualQuery;
                if (originalQueryEmpty && currentQueryEmpty) this.isSessionDirtyInternal$.next(!1); else {
                    var isSessionDirty = originalVisualType !== currentVisualType || originalQueryEmpty !== currentQueryEmpty || !originalVisualQuery.equals(currentVisualQuery);
                    this.isSessionDirtyInternal$.next(isSessionDirty);
                }
            }, BuildSkittleComponent.\u0275fac = function(t) {
                return new (t || BuildSkittleComponent)(core["\u0275\u0275directiveInject"](core.ChangeDetectorRef), core["\u0275\u0275directiveInject"](conceptual_schema_proxy_service.i), core["\u0275\u0275directiveInject"](context_activity_service.r), core["\u0275\u0275directiveInject"](data_sources_service.D), core["\u0275\u0275directiveInject"](event_bridge_service.J), core["\u0275\u0275directiveInject"](exploration_navigation_service.z), core["\u0275\u0275directiveInject"](field_list_tree_service.p), core["\u0275\u0275directiveInject"](lazy_scoped_provider.H), core["\u0275\u0275directiveInject"](localization_service.o), core["\u0275\u0275directiveInject"](model_service.b), core["\u0275\u0275directiveInject"](SkittleSettingsService));
            }, BuildSkittleComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: BuildSkittleComponent,
                selectors: [ [ "build-skittle" ] ],
                inputs: {
                    fieldListOptions: "fieldListOptions",
                    fieldListTreeOptions: "fieldListTreeOptions",
                    hideVisualPicker: "hideVisualPicker",
                    expandFieldWellSectionOnInitialChange: "expandFieldWellSectionOnInitialChange",
                    overrideSingleBucketForAutoVisual: "overrideSingleBucketForAutoVisual",
                    setFocusAfterInitialization: "setFocusAfterInitialization",
                    host: "host",
                    refreshFieldList$: "refreshFieldList$",
                    expandFieldWellOnInit: "expandFieldWellOnInit",
                    visualContainer: "visualContainer"
                },
                outputs: {
                    contentUpdate: "contentUpdate"
                },
                features: [ core["\u0275\u0275ProvidersFeature"]((0, tslib_es6.__spreadArray)([ field_list_tree_service.p ], modeling_scoped_services_providers.r, !0)), core["\u0275\u0275InheritDefinitionFeature"] ],
                decls: 7,
                vars: 7,
                consts: [ [ 1, "buildSkittle", 3, "pbiScrollbar" ], [ 1, "visualPicker", "compact-visual-types" ], [ 3, "modulePath", "componentId", "inputArgs", 4, "ngIf" ], [ "class", "sectionHeader", 3, "click", 4, "ngIf" ], [ "class", "fieldListContainer", 4, "ngIf" ], [ 3, "ngClass", "visualContainer", "perspectiveDisplayName", "allowReorderFields", "overrideSingleBucketForAutoVisual", "contentUpdate", 4, "ngIf" ], [ 3, "modulePath", "componentId", "inputArgs" ], [ 1, "sectionHeader", 3, "click" ], [ "localize", "Skittles_Build_FieldListSectionTitle" ], [ 1, "glyphicon", "glyph-small", 3, "ngClass" ], [ 1, "fieldListContainer" ], [ 3, "fieldListTree", "checkMode", "hasHighlights", "loading", "options" ], [ "localize", "Skittles_Build_FieldWellSectionTitle" ], [ 3, "ngClass", "visualContainer", "perspectiveDisplayName", "allowReorderFields", "overrideSingleBucketForAutoVisual", "contentUpdate" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementStart"](0, "div", 0)(1, "div", 1), core["\u0275\u0275template"](2, BuildSkittleComponent_pbi_lazy_load_2_Template, 1, 3, "pbi-lazy-load", 2), 
                    core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](3, BuildSkittleComponent_div_3_Template, 3, 4, "div", 3), 
                    core["\u0275\u0275template"](4, BuildSkittleComponent_div_4_Template, 4, 9, "div", 4), 
                    core["\u0275\u0275template"](5, BuildSkittleComponent_div_5_Template, 3, 4, "div", 3), 
                    core["\u0275\u0275template"](6, BuildSkittleComponent_build_field_well_6_Template, 2, 9, "build-field-well", 5), 
                    core["\u0275\u0275elementEnd"]()), 2 & rf && (core["\u0275\u0275property"]("pbiScrollbar", core["\u0275\u0275pureFunction0"](6, _c2)), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", !ctx.hideVisualPicker), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx.withFieldList), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx.withFieldList && ctx.fieldListSectionExpanded), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx.withFieldList), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx.fieldWellSectionExpanded));
                },
                dependencies: [ common.NgClass, common.NgIf, pbi_lazy_load_component.R, localize_directive.X, pbi_field_list_component.l, pbi_scrollbar_directive.r, BuildFieldWellComponent, common.AsyncPipe ],
                styles: [ '.buildSkittle[_ngcontent-%COMP%]{display:flex;flex-direction:column;height:100%}.buildSkittle[_ngcontent-%COMP%]   .sectionHeader[_ngcontent-%COMP%], .buildSkittle[_ngcontent-%COMP%]   .visualPicker[_ngcontent-%COMP%], .buildSkittle[_ngcontent-%COMP%]   .fieldListContainer[_ngcontent-%COMP%], .buildSkittle[_ngcontent-%COMP%]   build-field-well[_ngcontent-%COMP%]{padding:0 8px}.buildSkittle[_ngcontent-%COMP%]   .fieldListContainer[_ngcontent-%COMP%]{flex:1;position:relative}.buildSkittle[_ngcontent-%COMP%]   build-field-well[_ngcontent-%COMP%]{flex:1}.buildSkittle[_ngcontent-%COMP%]   build-field-well.with-field-list[_ngcontent-%COMP%]{overflow:auto}.buildSkittle[_ngcontent-%COMP%]   .sectionHeader[_ngcontent-%COMP%]{display:flex;justify-content:space-between;padding:8px;border-top:1px solid var(--globalColorGrey90)}.buildSkittle[_ngcontent-%COMP%]   .sectionHeader[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-semi-bold, 600)}' ]
            }), BuildSkittleComponent;
        }(rx_component.w), FieldPickerFlyoutExpandedSettingStrategy = function() {
            function FieldPickerFlyoutExpandedSettingStrategy(hasSingleTable) {
                this.hasSingleTable = hasSingleTable;
            }
            return FieldPickerFlyoutExpandedSettingStrategy.prototype.isExpanded = function(data) {
                return "Hierarchy" === data.modelObjectType || "Table" === data.modelObjectType && this.hasSingleTable;
            }, FieldPickerFlyoutExpandedSettingStrategy.prototype.isExpandedStateFixed = function(data) {
                return "Hierarchy" === data.modelObjectType;
            }, FieldPickerFlyoutExpandedSettingStrategy;
        }(), build_skittle_flyout_component_c0 = [ "buildSkittle" ], build_skittle_flyout_component_c1 = [ "scrollContainer" ], build_skittle_flyout_component_c2 = function() {
            return {
                ignoreOverlay: !1,
                ignoreMobile: !1
            };
        }, BuildSkittleFlyoutComponent = function() {
            function BuildSkittleFlyoutComponent(skittleSettingsService, localizationService, flyoutRef) {
                this.skittleSettingsService = skittleSettingsService, this.localizationService = localizationService, 
                this.flyoutRef = flyoutRef, this.host = "Skittle", this.contentScrollContainerHelper = new BuildSkittleScrollContainerHelper, 
                this.destroy$ = new Subject.xQ, this.allowClearChanges = this.skittleSettingsService.getShowClearChanges(), 
                this.visualContainer = flyoutRef.visualContainer;
            }
            return Object.defineProperty(BuildSkittleFlyoutComponent.prototype, "_scrollContainer", {
                set: function(elementRef) {
                    this.contentScrollContainerHelper.setScrollContainerElementRef(elementRef);
                },
                enumerable: !1,
                configurable: !0
            }), BuildSkittleFlyoutComponent.prototype.ngAfterViewInit = function() {
                var _this = this;
                this.buildSkittleComponent.isSessionDirty$.pipe((0, takeUntil.R)(this.destroy$), (0, 
                map.U)(function(isSessionDirty) {
                    var headerButtons = [];
                    return _this.allowClearChanges && headerButtons.push({
                        icon: "eraser",
                        iconSize: "small",
                        tooltip: _this.getDiscardChangesTooltipText(isSessionDirty),
                        disabled: !isSessionDirty,
                        click: function() {
                            return _this.discardChanges();
                        }
                    }), headerButtons;
                })).subscribe(function(headerButtons) {
                    return _this.flyoutRef.setHeaderButtons(headerButtons);
                });
            }, BuildSkittleFlyoutComponent.prototype.onContentUpdate = function($event) {
                this.contentScrollContainerHelper.onContentUpdate($event);
            }, BuildSkittleFlyoutComponent.prototype.onContentScroll = function() {
                this.contentScrollContainerHelper.onContentScroll();
            }, BuildSkittleFlyoutComponent.prototype.discardChanges = function() {
                this.buildSkittleComponent.discardChanges();
            }, BuildSkittleFlyoutComponent.prototype.getDiscardChangesTooltipText = function(isSessionDirty) {
                return this.localizationService.get(isSessionDirty ? "PersonalizeVisual_DiscardChanges" : "PersonalizeVisual_DiscardChanges_Disabled");
            }, BuildSkittleFlyoutComponent.prototype.ngOnDestroy = function() {
                this.destroy$.next(), this.destroy$.complete();
            }, BuildSkittleFlyoutComponent.\u0275fac = function(t) {
                return new (t || BuildSkittleFlyoutComponent)(core["\u0275\u0275directiveInject"](SkittleSettingsService), core["\u0275\u0275directiveInject"](localization_service.o), core["\u0275\u0275directiveInject"](FlyoutOverlayRef));
            }, BuildSkittleFlyoutComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: BuildSkittleFlyoutComponent,
                selectors: [ [ "build-skittle-flyout" ] ],
                viewQuery: function(rf, ctx) {
                    if (1 & rf && (core["\u0275\u0275viewQuery"](build_skittle_flyout_component_c0, 5), 
                    core["\u0275\u0275viewQuery"](build_skittle_flyout_component_c1, 5)), 2 & rf) {
                        var _t = void 0;
                        core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx.buildSkittleComponent = _t.first), 
                        core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx._scrollContainer = _t.first);
                    }
                },
                features: [ core["\u0275\u0275ProvidersFeature"]([ {
                    provide: context_activity_utils.yk,
                    useValue: {
                        source: "Skittle",
                        skittleType: "Build"
                    }
                } ]) ],
                decls: 4,
                vars: 4,
                consts: [ [ 1, "scrollContainer", 3, "pbiScrollbar", "scroll" ], [ "scrollContainer", "" ], [ 3, "host", "visualContainer", "contentUpdate" ], [ "buildSkittle", "" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementStart"](0, "div", 0, 1), core["\u0275\u0275listener"]("scroll", function() {
                        return ctx.onContentScroll();
                    }), core["\u0275\u0275elementStart"](2, "build-skittle", 2, 3), core["\u0275\u0275listener"]("contentUpdate", function($event) {
                        return ctx.onContentUpdate($event);
                    }), core["\u0275\u0275elementEnd"]()()), 2 & rf && (core["\u0275\u0275property"]("pbiScrollbar", core["\u0275\u0275pureFunction0"](3, build_skittle_flyout_component_c2)), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("host", ctx.host)("visualContainer", ctx.visualContainer));
                },
                dependencies: [ pbi_scrollbar_directive.r, BuildSkittleComponent ],
                encapsulation: 2
            }), BuildSkittleFlyoutComponent;
        }(), visualContainerGroup2 = __webpack_require__(9215), panes_visibility_service = __webpack_require__(21024), selection_service = __webpack_require__(72262), visual_plugin_operations_service = __webpack_require__(66977), pbi_pane_component = __webpack_require__(21023), pbi_pane_section_component = __webpack_require__(24548), pbi_office_icon_component = __webpack_require__(69437), BuildSkittleWatermarkComponent = function() {
            function BuildSkittleWatermarkComponent() {}
            return BuildSkittleWatermarkComponent.\u0275fac = function(t) {
                return new (t || BuildSkittleWatermarkComponent);
            }, BuildSkittleWatermarkComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: BuildSkittleWatermarkComponent,
                selectors: [ [ "build-skittle-watermark" ] ],
                inputs: {
                    watermarkText: "watermarkText"
                },
                decls: 4,
                vars: 1,
                consts: [ [ 1, "watermark" ], [ "name", "PBIBuild_20", 1, "watermarkIcon" ], [ 1, "watermarkText" ], [ 3, "localize" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementStart"](0, "div", 0), core["\u0275\u0275element"](1, "pbi-office-icon", 1), 
                    core["\u0275\u0275elementStart"](2, "div", 2), core["\u0275\u0275element"](3, "span", 3), 
                    core["\u0275\u0275elementEnd"]()()), 2 & rf && (core["\u0275\u0275advance"](3), 
                    core["\u0275\u0275property"]("localize", ctx.watermarkText));
                },
                dependencies: [ localize_directive.X, pbi_office_icon_component.m ],
                styles: [ ".watermark[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;justify-content:center}.watermarkIcon[_ngcontent-%COMP%]{width:32px;height:32px;padding-bottom:16px}.watermarkText[_ngcontent-%COMP%]{--watermark-text-color: var(--globalColorGrey14);padding-inline-start:24px;padding-inline-end:24px;text-align:center;color:var(--watermark-text-color)}  [data-legacy-theming=false] .watermarkText{--watermark-text-color: var(--colorNeutralForeground1)}" ],
                changeDetection: 0
            }), BuildSkittleWatermarkComponent;
        }(), build_skittle_pane_component_c0 = [ "allContentScrollContainer" ];
        function BuildSkittlePaneComponent_pbi_pane_0_ng_container_2_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "div", 5), 
            core["\u0275\u0275element"](2, "build-skittle-watermark", 6), core["\u0275\u0275elementEnd"](), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var watermarkText_r5 = ctx.ngIf;
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("watermarkText", watermarkText_r5);
            }
        }
        function BuildSkittlePaneComponent_pbi_pane_0_ng_template_4_Template(rf, ctx) {
            if (1 & rf) {
                var _r8 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div", 7, 8), core["\u0275\u0275listener"]("scroll", function() {
                    core["\u0275\u0275restoreView"](_r8);
                    var ctx_r7 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r7.onContentScroll());
                }), core["\u0275\u0275elementStart"](2, "build-skittle", 9), core["\u0275\u0275listener"]("contentUpdate", function($event) {
                    core["\u0275\u0275restoreView"](_r8);
                    var ctx_r9 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r9.onContentUpdate($event));
                }), core["\u0275\u0275pipe"](3, "async"), core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var ctx_r4 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("fieldListOptions", ctx_r4.fieldListOptions)("fieldListTreeOptions", ctx_r4.fieldListTreeOptions)("visualContainer", core["\u0275\u0275pipeBind1"](3, 10, ctx_r4.visualContainer$))("hideVisualPicker", ctx_r4.hideVisualPicker)("expandFieldWellSectionOnInitialChange", ctx_r4.expandFieldWellSectionOnInitialChange)("overrideSingleBucketForAutoVisual", ctx_r4.overrideSingleBucketForAutoVisual)("setFocusAfterInitialization", ctx_r4.setFocusAfterInitialization)("refreshFieldList$", ctx_r4.refreshFieldList$)("expandFieldWellOnInit", ctx_r4.expandFieldWellOnInit)("host", ctx_r4.host);
            }
        }
        function BuildSkittlePaneComponent_pbi_pane_0_Template(rf, ctx) {
            if (1 & rf) {
                var _r11 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "pbi-pane", 1), core["\u0275\u0275listener"]("onCollapse", function() {
                    core["\u0275\u0275restoreView"](_r11);
                    var ctx_r10 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r10.onPaneCollapsed());
                }), core["\u0275\u0275elementStart"](1, "pbi-pane-section", 2), core["\u0275\u0275template"](2, BuildSkittlePaneComponent_pbi_pane_0_ng_container_2_Template, 3, 1, "ng-container", 3), 
                core["\u0275\u0275pipe"](3, "async"), core["\u0275\u0275template"](4, BuildSkittlePaneComponent_pbi_pane_0_ng_template_4_Template, 4, 12, "ng-template", null, 4, core["\u0275\u0275templateRefExtractor"]), 
                core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var tmp_5_0, paneViewModel_r1 = ctx.ngIf, _r3 = core["\u0275\u0275reference"](5), ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("expanded", paneViewModel_r1.isPaneExpanded)("title", paneViewModel_r1.title)("disableScroll", !0)("allowToggle", !1)("optionsSetting", paneViewModel_r1.optionsSetting)("showCollapse", null === (tmp_5_0 = ctx_r0.showCollapse) || void 0 === tmp_5_0 || tmp_5_0), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](3, 8, ctx_r0.watermarkText$))("ngIfElse", _r3);
            }
        }
        var BuildSkittlePaneComponent = function(_super) {
            function BuildSkittlePaneComponent(panesVisibilityService, selectionService, visualPluginOps) {
                var _this = _super.call(this) || this;
                _this.panesVisibilityService = panesVisibilityService, _this.selectionService = selectionService, 
                _this.visualPluginOps = visualPluginOps, _this.paneViewModel$ = _this.panesVisibilityService.getPanes$().pipe((0, 
                map.U)(function(panes) {
                    return panes.build;
                })), _this.host = "Pane", _this.contentScrollContainerHelper = new BuildSkittleScrollContainerHelper;
                var canvasItems$ = _this.selectionService.selectedElements$.pipe((0, map.U)(function(selectedElements) {
                    if (selectedElements) return selectedElements.reduce(function(acc, value) {
                        var canvasItem = value.canvasItem;
                        return canvasItem && acc.push(canvasItem), acc;
                    }, []);
                }));
                return _this.visualContainer$ = canvasItems$.pipe((0, map.U)(function(canvasItems) {
                    if (!_.isEmpty(canvasItems)) {
                        var visualContainers = (0, visualContainerGroup2.rQ)(canvasItems)[0];
                        return 1 === visualContainers.length ? visualContainers[0] : void 0;
                    }
                })), _this.watermarkText$ = canvasItems$.pipe((0, map.U)(function(canvasItems) {
                    var _a;
                    if (!_.isEmpty(canvasItems)) {
                        var visualContainers = (_a = (0, visualContainerGroup2.rQ)(canvasItems))[0];
                        if (!_.isEmpty(_a[1]) || visualContainers.length > 1) return "Build_Pane_Multiple_Visual";
                        var visualContainer = visualContainers[0], canConvertVisual = _this.visualPluginOps.canConvertVisual(visualContainer), isQueryVisual = _this.visualPluginOps.isQueryVisual(visualContainer.config.singleVisual.visualType);
                        return canConvertVisual || isQueryVisual ? void 0 : "Build_Pane_NoData_Visual";
                    }
                })), _this;
            }
            return (0, tslib_es6.__extends)(BuildSkittlePaneComponent, _super), Object.defineProperty(BuildSkittlePaneComponent.prototype, "_allContentScrollContainer", {
                set: function(elementRef) {
                    this.contentScrollContainerHelper.setScrollContainerElementRef(elementRef);
                },
                enumerable: !1,
                configurable: !0
            }), BuildSkittlePaneComponent.prototype.onPaneCollapsed = function() {
                this.panesVisibilityService.setPaneExpansion("build", !1);
            }, BuildSkittlePaneComponent.prototype.onContentUpdate = function($event) {
                this.contentScrollContainerHelper.onContentUpdate($event);
            }, BuildSkittlePaneComponent.prototype.onContentScroll = function() {
                this.contentScrollContainerHelper.onContentScroll();
            }, BuildSkittlePaneComponent.\u0275fac = function(t) {
                return new (t || BuildSkittlePaneComponent)(core["\u0275\u0275directiveInject"](panes_visibility_service.r), core["\u0275\u0275directiveInject"](selection_service.z), core["\u0275\u0275directiveInject"](visual_plugin_operations_service.f));
            }, BuildSkittlePaneComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: BuildSkittlePaneComponent,
                selectors: [ [ "build-skittle-pane" ] ],
                viewQuery: function(rf, ctx) {
                    var _t;
                    1 & rf && core["\u0275\u0275viewQuery"](build_skittle_pane_component_c0, 5), 2 & rf && core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx._allContentScrollContainer = _t.first);
                },
                inputs: {
                    fieldListOptions: "fieldListOptions",
                    fieldListTreeOptions: "fieldListTreeOptions",
                    hideVisualPicker: "hideVisualPicker",
                    expandFieldWellSectionOnInitialChange: "expandFieldWellSectionOnInitialChange",
                    overrideSingleBucketForAutoVisual: "overrideSingleBucketForAutoVisual",
                    setFocusAfterInitialization: "setFocusAfterInitialization",
                    refreshFieldList$: "refreshFieldList$",
                    expandFieldWellOnInit: "expandFieldWellOnInit",
                    showCollapse: "showCollapse"
                },
                features: [ core["\u0275\u0275ProvidersFeature"]([ {
                    provide: context_activity_utils.yk,
                    useValue: {
                        source: "Pane",
                        paneType: "build"
                    }
                } ]), core["\u0275\u0275InheritDefinitionFeature"] ],
                decls: 2,
                vars: 3,
                consts: [ [ "class", "buildSkittlePane", 3, "expanded", "title", "disableScroll", "allowToggle", "optionsSetting", "showCollapse", "onCollapse", 4, "ngIf" ], [ 1, "buildSkittlePane", 3, "expanded", "title", "disableScroll", "allowToggle", "optionsSetting", "showCollapse", "onCollapse" ], [ 1, "no-padding" ], [ 4, "ngIf", "ngIfElse" ], [ "skittles", "" ], [ 1, "watermarkContainer" ], [ 3, "watermarkText" ], [ 1, "paneContentScrollContainer", 3, "scroll" ], [ "allContentScrollContainer", "" ], [ 3, "fieldListOptions", "fieldListTreeOptions", "visualContainer", "hideVisualPicker", "expandFieldWellSectionOnInitialChange", "overrideSingleBucketForAutoVisual", "setFocusAfterInitialization", "refreshFieldList$", "expandFieldWellOnInit", "host", "contentUpdate" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275template"](0, BuildSkittlePaneComponent_pbi_pane_0_Template, 6, 10, "pbi-pane", 0), 
                    core["\u0275\u0275pipe"](1, "async")), 2 & rf && core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](1, 1, ctx.paneViewModel$));
                },
                dependencies: [ common.NgIf, pbi_pane_component.VO, pbi_pane_section_component.i, BuildSkittleComponent, BuildSkittleWatermarkComponent, common.AsyncPipe ],
                styles: [ ".buildSkittlePane[_ngcontent-%COMP%]   pbi-pane-section[_ngcontent-%COMP%]{height:100%}.buildSkittlePane[_ngcontent-%COMP%]   pbi-pane-section[_ngcontent-%COMP%]   .paneContentScrollContainer[_ngcontent-%COMP%]{height:100%;overflow:auto}.buildSkittlePane[_ngcontent-%COMP%]   pbi-pane-section[_ngcontent-%COMP%]   .watermarkContainer[_ngcontent-%COMP%]{height:100%;display:flex;align-items:center;justify-content:center}" ]
            }), BuildSkittlePaneComponent;
        }(rx_component.w), warning_eager_component = __webpack_require__(90094), pbi_checkbox_component = __webpack_require__(56011), localize_pipe = __webpack_require__(85102), chart_elements_skittle_component_c0 = [ "checkboxElement" ];
        function ChartElementsSkittleComponent_div_0_div_1_ng_container_1_div_1_warning_eager_4_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "warning-eager", 11), 2 & rf && core["\u0275\u0275property"]("warningMessage", ctx.ngIf);
        }
        function ChartElementsSkittleComponent_div_0_div_1_ng_container_1_div_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r11 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div", 7)(1, "pbi-checkbox", 8, 9), core["\u0275\u0275listener"]("onChange", function() {
                    core["\u0275\u0275restoreView"](_r11);
                    var item_r4 = core["\u0275\u0275nextContext"]().$implicit, ctx_r9 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r9.updateFormatOption(item_r4));
                }), core["\u0275\u0275pipe"](3, "async"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](4, ChartElementsSkittleComponent_div_0_div_1_ng_container_1_div_1_warning_eager_4_Template, 1, 1, "warning-eager", 10), 
                core["\u0275\u0275pipe"](5, "async"), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var tmp_3_0, item_r4 = core["\u0275\u0275nextContext"]().$implicit;
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("checked", item_r4.checked)("label", item_r4.displayName)("isCompact", !0)("ariaDescription", item_r4.warningMessage$ ? null == (tmp_3_0 = core["\u0275\u0275pipeBind1"](3, 6, item_r4.warningMessage$)) ? null : tmp_3_0.detail : void 0), 
                core["\u0275\u0275attribute"]("id", item_r4.uid), core["\u0275\u0275advance"](3), 
                core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](5, 8, item_r4.warningMessage$));
            }
        }
        function ChartElementsSkittleComponent_div_0_div_1_ng_container_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, ChartElementsSkittleComponent_div_0_div_1_ng_container_1_div_1_Template, 6, 10, "div", 6), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var item_r4 = ctx.$implicit;
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !item_r4.disabled);
            }
        }
        function ChartElementsSkittleComponent_div_0_div_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 4), core["\u0275\u0275template"](1, ChartElementsSkittleComponent_div_0_div_1_ng_container_1_Template, 2, 1, "ng-container", 5), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var viewModel_r2 = ctx.ngIf;
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngForOf", viewModel_r2.items);
            }
        }
        function ChartElementsSkittleComponent_div_0_Template(rf, ctx) {
            if (1 & rf) {
                var _r14 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div", 1), core["\u0275\u0275template"](1, ChartElementsSkittleComponent_div_0_div_1_Template, 2, 1, "div", 2), 
                core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275elementStart"](3, "button", 3), 
                core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r14);
                    var ctx_r13 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r13.openFormatPane());
                }), core["\u0275\u0275pipe"](4, "localize"), core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](2, 3, ctx_r0.formatState$)), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("localize", "Options_Menu")("pbiTooltip", core["\u0275\u0275pipeBind1"](4, 5, "Options_Menu"));
            }
        }
        var ChartElementsSkittleComponent = function(_super) {
            function ChartElementsSkittleComponent(changeDetector, lazyScoped, panesVisibility, selectionService) {
                var _this = _super.call(this) || this;
                return _this.changeDetector = changeDetector, _this.lazyScoped = lazyScoped, _this.panesVisibility = panesVisibility, 
                _this.selectionService = selectionService, _this.isInitialized$ = new BehaviorSubject.X(!1), 
                _this;
            }
            return (0, tslib_es6.__extends)(ChartElementsSkittleComponent, _super), Object.defineProperty(ChartElementsSkittleComponent.prototype, "_checkboxElementRefs", {
                set: function(elementRefsQueryList) {
                    var _a, _b;
                    if (this.checkboxElements = [], elementRefsQueryList) {
                        var elementRefs = elementRefsQueryList.toArray();
                        if (this.checkboxElements = elementRefs.map(function(elementRef) {
                            return elementRef.nativeElement;
                        }), !_.isEmpty(this.restoreFocusElementId)) for (var _i = 0, elementRefs_1 = elementRefs; _i < elementRefs_1.length; _i++) {
                            var elementRef = elementRefs_1[_i];
                            if (elementRef.nativeElement.id === this.restoreFocusElementId) return void (null === (_b = null === (_a = elementRef.nativeElement.getElementsByTagName("INPUT")) || void 0 === _a ? void 0 : _a[0]) || void 0 === _b || _b.focus());
                        }
                    }
                },
                enumerable: !1,
                configurable: !0
            }), ChartElementsSkittleComponent.prototype.ngOnInit = function() {
                var _this = this, canvasItems = _.compact(this.selectionService.getSelectedElements().map(function(element) {
                    return element.canvasItem;
                })), item = _.first(canvasItems);
                this.lazyScoped.get("formattingService").then(function(store) {
                    _this.formattingService = store;
                    var formattingInformation = _this.formattingService.getFor({
                        type: 0,
                        canvasItem: item
                    });
                    _this.formatState$ = formattingInformation.getChartElementsContract$().pipe((0, 
                    tap.b)(function(_contract) {
                        var currentActiveElement = document.activeElement;
                        if ("INPUT" === document.activeElement.tagName) {
                            var match = _.find(_this.checkboxElements, function(checkBox) {
                                return checkBox.contains(currentActiveElement);
                            });
                            _this.restoreFocusElementId = null == match ? void 0 : match.id;
                        }
                    })), _this.changeDetector.detectChanges(), _this.isInitialized$.next(!0);
                });
            }, ChartElementsSkittleComponent.prototype.updateFormatOption = function(option) {
                var _a;
                option.checked = !option.checked;
                var canvasItem = null === (_a = _.first(this.selectionService.getSelectedElements())) || void 0 === _a ? void 0 : _a.canvasItem;
                this.formattingService.saveValues({
                    changes: [ {
                        objectName: option.descriptor.objectName,
                        uid: option.uid,
                        hasDynamicExpressionSupport: !1,
                        formattingSource: option.formattingSource,
                        propertySlice: {
                            name: option.descriptor.propertyName,
                            selector: option.descriptor.selector,
                            type: {
                                bool: !0
                            },
                            value: option.checked
                        },
                        canvasItems: [ canvasItem ],
                        visualUpdateSource: 0
                    } ]
                }, {
                    source: "Skittle",
                    skittleType: "ChartElements"
                }), this.changeDetector.detectChanges();
            }, ChartElementsSkittleComponent.prototype.openFormatPane = function() {
                this.panesVisibility.isPaneVisible("format") && !this.panesVisibility.isPaneExpanded("format") ? this.panesVisibility.togglePaneExpansion("format") : this.panesVisibility.isPaneVisible("format") ? this.panesVisibility.emphasizePane("format") : this.panesVisibility.togglePaneVisibility("format"), 
                this.panesVisibility.setFocusedPane("format");
            }, ChartElementsSkittleComponent.\u0275fac = function(t) {
                return new (t || ChartElementsSkittleComponent)(core["\u0275\u0275directiveInject"](core.ChangeDetectorRef), core["\u0275\u0275directiveInject"](lazy_scoped_provider.H), core["\u0275\u0275directiveInject"](panes_visibility_service.r), core["\u0275\u0275directiveInject"](selection_service.z));
            }, ChartElementsSkittleComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: ChartElementsSkittleComponent,
                selectors: [ [ "chart-elements-skittle" ] ],
                viewQuery: function(rf, ctx) {
                    var _t;
                    1 & rf && core["\u0275\u0275viewQuery"](chart_elements_skittle_component_c0, 5, core.ElementRef), 
                    2 & rf && core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx._checkboxElementRefs = _t);
                },
                features: [ core["\u0275\u0275ProvidersFeature"]([ {
                    provide: context_activity_utils.yk,
                    useValue: {
                        source: "Skittle",
                        skittleType: "ChartElements"
                    }
                } ]), core["\u0275\u0275InheritDefinitionFeature"] ],
                decls: 2,
                vars: 3,
                consts: [ [ "class", "chartElementsSkittle", 4, "ngIf" ], [ 1, "chartElementsSkittle" ], [ "class", "options", 4, "ngIf" ], [ 1, "pbi-fluent-button", "moreOptionsButton", 3, "localize", "pbiTooltip", "click" ], [ 1, "options" ], [ 4, "ngFor", "ngForOf" ], [ "class", "item-container", 4, "ngIf" ], [ 1, "item-container" ], [ 3, "checked", "label", "isCompact", "ariaDescription", "onChange" ], [ "checkboxElement", "" ], [ "class", "warning", 3, "warningMessage", 4, "ngIf" ], [ 1, "warning", 3, "warningMessage" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275template"](0, ChartElementsSkittleComponent_div_0_Template, 5, 7, "div", 0), 
                    core["\u0275\u0275pipe"](1, "async")), 2 & rf && core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](1, 1, ctx.isInitialized$));
                },
                dependencies: [ common.NgForOf, common.NgIf, localize_directive.X, warning_eager_component.l, pbi_checkbox_component.v, pbi_tooltip_directive.V, common.AsyncPipe, localize_pipe.F ],
                styles: [ '.chartElementsSkittle[_ngcontent-%COMP%]{padding:4px 8px 0}.chartElementsSkittle[_ngcontent-%COMP%]   .options[_ngcontent-%COMP%]{display:flex;flex-direction:column}.chartElementsSkittle[_ngcontent-%COMP%]   .options[_ngcontent-%COMP%]   .item-container[_ngcontent-%COMP%]{align-items:center;display:flex;flex-direction:row;margin-bottom:6px}.chartElementsSkittle[_ngcontent-%COMP%]   .options[_ngcontent-%COMP%]   .item-container[_ngcontent-%COMP%]   pbi-checkbox[_ngcontent-%COMP%]{width:fit-content;margin:2px 0}html:not([dir="rtl"])[_nghost-%COMP%]   .chartElementsSkittle[_ngcontent-%COMP%]   .options[_ngcontent-%COMP%]   .item-container[_ngcontent-%COMP%]   .warning[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .chartElementsSkittle[_ngcontent-%COMP%]   .options[_ngcontent-%COMP%]   .item-container[_ngcontent-%COMP%]   .warning[_ngcontent-%COMP%]{margin-left:auto}html[dir="rtl"][_nghost-%COMP%]   .chartElementsSkittle[_ngcontent-%COMP%]   .options[_ngcontent-%COMP%]   .item-container[_ngcontent-%COMP%]   .warning[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .chartElementsSkittle[_ngcontent-%COMP%]   .options[_ngcontent-%COMP%]   .item-container[_ngcontent-%COMP%]   .warning[_ngcontent-%COMP%]{margin-right:auto}.chartElementsSkittle[_ngcontent-%COMP%]   .moreOptionsButton[_ngcontent-%COMP%]{margin-top:6px;padding:6px 16px;border:1px solid var(--gray-110, #8A8886);max-width:100%;text-overflow:ellipsis;overflow:hidden;white-space:nowrap}' ],
                changeDetection: 0
            }), ChartElementsSkittleComponent;
        }(rx_component.w), ChartElementsSkittleFlyoutComponent = function() {
            function ChartElementsSkittleFlyoutComponent() {}
            return ChartElementsSkittleFlyoutComponent.\u0275fac = function(t) {
                return new (t || ChartElementsSkittleFlyoutComponent);
            }, ChartElementsSkittleFlyoutComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: ChartElementsSkittleFlyoutComponent,
                selectors: [ [ "chart-elements-skittle-flyout" ] ],
                decls: 1,
                vars: 0,
                template: function(rf, ctx) {
                    1 & rf && core["\u0275\u0275element"](0, "chart-elements-skittle");
                },
                dependencies: [ ChartElementsSkittleComponent ],
                encapsulation: 2,
                changeDetection: 0
            }), ChartElementsSkittleFlyoutComponent;
        }();
        function ChartElementsSkittlePaneComponent_pbi_pane_0_Template(rf, ctx) {
            if (1 & rf) {
                var _r3 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "pbi-pane", 1), core["\u0275\u0275listener"]("onCollapse", function() {
                    core["\u0275\u0275restoreView"](_r3);
                    var ctx_r2 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r2.onPaneCollapsed());
                }), core["\u0275\u0275elementStart"](1, "pbi-pane-section"), core["\u0275\u0275element"](2, "chart-elements-skittle"), 
                core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var paneViewModel_r1 = ctx.ngIf;
                core["\u0275\u0275property"]("expanded", paneViewModel_r1.isPaneExpanded)("title", paneViewModel_r1.title)("allowToggle", !1)("optionsSetting", paneViewModel_r1.optionsSetting)("showCollapse", !0);
            }
        }
        var ChartElementsSkittlePaneComponent = function() {
            function ChartElementsSkittlePaneComponent(panesVisibilityService) {
                this.panesVisibilityService = panesVisibilityService, this.paneViewModel$ = this.panesVisibilityService.getPanes$().pipe((0, 
                map.U)(function(panes) {
                    return panes.chartElementsSkittle;
                }));
            }
            return ChartElementsSkittlePaneComponent.prototype.onPaneCollapsed = function() {
                this.panesVisibilityService.setPaneExpansion("chartElementsSkittle", !1);
            }, ChartElementsSkittlePaneComponent.\u0275fac = function(t) {
                return new (t || ChartElementsSkittlePaneComponent)(core["\u0275\u0275directiveInject"](panes_visibility_service.r));
            }, ChartElementsSkittlePaneComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: ChartElementsSkittlePaneComponent,
                selectors: [ [ "chart-elements-skittle-pane" ] ],
                decls: 2,
                vars: 3,
                consts: [ [ 3, "expanded", "title", "allowToggle", "optionsSetting", "showCollapse", "onCollapse", 4, "ngIf" ], [ 3, "expanded", "title", "allowToggle", "optionsSetting", "showCollapse", "onCollapse" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275template"](0, ChartElementsSkittlePaneComponent_pbi_pane_0_Template, 3, 5, "pbi-pane", 0), 
                    core["\u0275\u0275pipe"](1, "async")), 2 & rf && core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](1, 1, ctx.paneViewModel$));
                },
                dependencies: [ common.NgIf, pbi_pane_component.VO, pbi_pane_section_component.i, ChartElementsSkittleComponent, common.AsyncPipe ],
                encapsulation: 2,
                changeDetection: 0
            }), ChartElementsSkittlePaneComponent;
        }();
        function SuggestSkittlePaneComponent_pbi_pane_0_Template(rf, ctx) {
            if (1 & rf) {
                var _r3 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "pbi-pane", 1), core["\u0275\u0275listener"]("onCollapse", function() {
                    core["\u0275\u0275restoreView"](_r3);
                    var ctx_r2 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r2.onPaneCollapsed());
                }), core["\u0275\u0275elementStart"](1, "pbi-pane-section", 2), core["\u0275\u0275element"](2, "build-skittle", 3), 
                core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var paneViewModel_r1 = ctx.ngIf, ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("expanded", paneViewModel_r1.isPaneExpanded)("title", paneViewModel_r1.title)("allowToggle", !1)("optionsSetting", paneViewModel_r1.optionsSetting)("showCollapse", !0), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("host", ctx_r0.host);
            }
        }
        var SuggestSkittlePaneComponent = function() {
            function SuggestSkittlePaneComponent(panesVisibilityService) {
                this.panesVisibilityService = panesVisibilityService, this.host = "Skittle", this.paneViewModel$ = this.panesVisibilityService.getPanes$().pipe((0, 
                map.U)(function(panes) {
                    return panes.suggestSkittle;
                }));
            }
            return SuggestSkittlePaneComponent.prototype.onPaneCollapsed = function() {
                this.panesVisibilityService.setPaneExpansion("suggestSkittle", !1);
            }, SuggestSkittlePaneComponent.\u0275fac = function(t) {
                return new (t || SuggestSkittlePaneComponent)(core["\u0275\u0275directiveInject"](panes_visibility_service.r));
            }, SuggestSkittlePaneComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: SuggestSkittlePaneComponent,
                selectors: [ [ "suggest-skittle-pane" ] ],
                features: [ core["\u0275\u0275ProvidersFeature"]([ {
                    provide: context_activity_utils.yk,
                    useValue: {
                        source: "Pane",
                        paneType: "suggestSkittle"
                    }
                } ]) ],
                decls: 2,
                vars: 3,
                consts: [ [ 3, "expanded", "title", "allowToggle", "optionsSetting", "showCollapse", "onCollapse", 4, "ngIf" ], [ 3, "expanded", "title", "allowToggle", "optionsSetting", "showCollapse", "onCollapse" ], [ 1, "no-padding" ], [ 3, "host" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275template"](0, SuggestSkittlePaneComponent_pbi_pane_0_Template, 3, 6, "pbi-pane", 0), 
                    core["\u0275\u0275pipe"](1, "async")), 2 & rf && core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](1, 1, ctx.paneViewModel$));
                },
                dependencies: [ common.NgIf, pbi_pane_component.VO, pbi_pane_section_component.i, BuildSkittleComponent, common.AsyncPipe ],
                encapsulation: 2,
                changeDetection: 0
            }), SuggestSkittlePaneComponent;
        }(), pbi_overlay_positions = __webpack_require__(25512), lazy_provider = __webpack_require__(57786), screen_reader_service = __webpack_require__(83309), skittle_flyout_component_c0 = [ "flyout" ], skittle_flyout_component_c1 = [ "container" ];
        function SkittleFlyoutComponent_ng_container_3_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275element"](1, "h2", 8), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var title_r5 = ctx.ngIf;
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("localize", title_r5);
            }
        }
        function SkittleFlyoutComponent_ng_container_6_button_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r10 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "button", 10), core["\u0275\u0275listener"]("click", function($event) {
                    var restoredCtx = core["\u0275\u0275restoreView"](_r10);
                    return core["\u0275\u0275resetView"](restoredCtx.$implicit.click($event));
                }), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var button_r8 = ctx.$implicit;
                core["\u0275\u0275classMapInterpolate2"]("glyphicon glyph-", button_r8.iconSize, " pbi-glyph-", button_r8.icon, ""), 
                core["\u0275\u0275property"]("pbiTooltip", button_r8.tooltip);
            }
        }
        function SkittleFlyoutComponent_ng_container_6_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, SkittleFlyoutComponent_ng_container_6_button_1_Template, 1, 5, "button", 9), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var headerButtons_r6 = ctx.ngIf;
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngForOf", headerButtons_r6);
            }
        }
        function SkittleFlyoutComponent_button_8_Template(rf, ctx) {
            if (1 & rf) {
                var _r12 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "button", 11), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r12);
                    var ctx_r11 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r11.onClose());
                }), core["\u0275\u0275pipe"](1, "localize"), core["\u0275\u0275elementEnd"]();
            }
            2 & rf && core["\u0275\u0275property"]("pbiTooltip", core["\u0275\u0275pipeBind1"](1, 1, "Close"));
        }
        var SkittleFlyoutComponent = function() {
            function SkittleFlyoutComponent(injector, lazyProvider, localizationService, screenReaderService, flyoutRef, data) {
                this.injector = injector, this.lazyProvider = lazyProvider, this.localizationService = localizationService, 
                this.screenReaderService = screenReaderService, this.flyoutRef = flyoutRef, this.data = data, 
                this.destroy$ = new Subject.xQ;
            }
            return SkittleFlyoutComponent.prototype.ngOnInit = function() {
                var _this = this;
                this.flyoutRef.title$.pipe((0, takeUntil.R)(this.destroy$)).subscribe(function(title) {
                    if (title) {
                        var alertValue = "".concat(_this.localizationService.get(title), " ").concat(_this.localizationService.get("Slicer_Menu"));
                        _this.screenReaderService.alert(alertValue);
                    }
                });
            }, SkittleFlyoutComponent.prototype.ngAfterViewInit = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var moduleRef;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.lazyProvider.getModule("@powerbi/ExploreUIAuthoring/lazy-modules/visual-container-skittles/visual-container-skittles-ui.module#VisualContainerSkittlesUIModule") ];

                          case 1:
                            return moduleRef = _a.sent(), this.container.createComponent(this.data.skittleContentComponent, {
                                injector: this.injector,
                                ngModuleRef: moduleRef
                            }).changeDetectorRef.detectChanges(), [ 2 ];
                        }
                    });
                });
            }, SkittleFlyoutComponent.prototype.ngOnDestroy = function() {
                this.container.clear(), this.destroy$.next(), this.destroy$.complete();
            }, SkittleFlyoutComponent.prototype.onClose = function() {
                this.data.toggleSkittle(this.flyoutRef.type);
            }, SkittleFlyoutComponent.\u0275fac = function(t) {
                return new (t || SkittleFlyoutComponent)(core["\u0275\u0275directiveInject"](core.Injector), core["\u0275\u0275directiveInject"](lazy_provider.E), core["\u0275\u0275directiveInject"](localization_service.o), core["\u0275\u0275directiveInject"](screen_reader_service.g), core["\u0275\u0275directiveInject"](FlyoutOverlayRef), core["\u0275\u0275directiveInject"](pbi_overlay_ref.M));
            }, SkittleFlyoutComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: SkittleFlyoutComponent,
                selectors: [ [ "skittle-flyout" ] ],
                viewQuery: function(rf, ctx) {
                    if (1 & rf && (core["\u0275\u0275viewQuery"](skittle_flyout_component_c0, 5), core["\u0275\u0275viewQuery"](skittle_flyout_component_c1, 5, core.ViewContainerRef)), 
                    2 & rf) {
                        var _t = void 0;
                        core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx.flyoutElement = _t.first), 
                        core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx.container = _t.first);
                    }
                },
                decls: 13,
                vars: 10,
                consts: [ [ "role", "menu", "aria-labelledby", "skittleTitle", 1, "skittleFlyout" ], [ "flyout", "" ], [ 1, "header" ], [ 4, "ngIf" ], [ 1, "buttonContainer" ], [ "class", "glyphicon glyph-mini pbi-glyph-close", "aria-label", "Close", 3, "pbiTooltip", "click", 4, "ngIf" ], [ "role", "menuitem", 1, "allContent" ], [ "container", "" ], [ "id", "skittleTitle", 1, "title", 3, "localize" ], [ "pbiTooltipCaretSize", "small", 3, "class", "pbiTooltip", "click", 4, "ngFor", "ngForOf" ], [ "pbiTooltipCaretSize", "small", 3, "pbiTooltip", "click" ], [ "aria-label", "Close", 1, "glyphicon", "glyph-mini", "pbi-glyph-close", 3, "pbiTooltip", "click" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementStart"](0, "div", 0, 1)(2, "div", 2), core["\u0275\u0275template"](3, SkittleFlyoutComponent_ng_container_3_Template, 2, 1, "ng-container", 3), 
                    core["\u0275\u0275pipe"](4, "async"), core["\u0275\u0275elementStart"](5, "div", 4), 
                    core["\u0275\u0275template"](6, SkittleFlyoutComponent_ng_container_6_Template, 2, 1, "ng-container", 3), 
                    core["\u0275\u0275pipe"](7, "async"), core["\u0275\u0275template"](8, SkittleFlyoutComponent_button_8_Template, 2, 3, "button", 5), 
                    core["\u0275\u0275pipe"](9, "async"), core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementStart"](10, "div", 6), 
                    core["\u0275\u0275elementContainer"](11, null, 7), core["\u0275\u0275elementEnd"]()()), 
                    2 & rf && (core["\u0275\u0275attribute"]("aria-expanded", !0), core["\u0275\u0275advance"](3), 
                    core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](4, 4, ctx.flyoutRef.title$)), 
                    core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](7, 6, ctx.flyoutRef.headerButtons$)), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](9, 8, ctx.flyoutRef.showCloseButton$)));
                },
                dependencies: [ common.NgForOf, common.NgIf, localize_directive.X, pbi_tooltip_directive.V, common.AsyncPipe, localize_pipe.F ],
                styles: [ '[_nghost-%COMP%]{--caret-background-color: var(--fluent-theme-neutral-lighter-color, #F3F2F1);--caret-border-color: var(--gray-70, #BEBBB8);--skittle-flyout-border-color: var(--gray-70, #BEBBB8);--skittle-flyout-background-color: var(--fluent-theme-neutral-lighter-color, #F3F2F1);background-color:var(--skittle-flyout-background-color);border:1px solid var(--skittle-flyout-border-color);border-radius:2px;box-shadow:0 0 2px var(--colorNeutralShadowAmbient),0 2px 4px var(--colorNeutralShadowKey);box-sizing:border-box;padding:8px 0;width:100%}[data-legacy-theming=false]   [_nghost-%COMP%]{--caret-background-color: var(--colorNeutralBackground3);--caret-border-color: var(--colorNeutralStroke1Selected);--skittle-flyout-border-color: var(--colorNeutralStroke1Selected);--skittle-flyout-background-color: var(--colorNeutralBackground3)}.pbi-overlay-caret.themeableElement[_nghost-%COMP%]:before, .pbi-overlay-caret.themeableElement[_nghost-%COMP%]:after{background:var(--caret-background-color);border:1px solid var(--caret-border-color)}.skittleFlyout[_ngcontent-%COMP%]{--skittle-flyout-button-color: var(--gray-190, #201F1E);display:flex;flex-direction:column;position:relative;height:100%;width:100%;z-index:1;color:var(--colorNeutralForeground1)}  [data-legacy-theming=false] .skittleFlyout{--skittle-flyout-button-color: var(--colorNeutralForeground1)}.skittleFlyout[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]{display:flex;justify-content:space-between;padding:0 8px 12px}.skittleFlyout[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .title[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--lg-font-size, 16px);font-weight:var(--font-weight-semi-bold, 600);margin:0;flex-grow:1}.skittleFlyout[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .buttonContainer[_ngcontent-%COMP%]{display:flex;align-items:center}.skittleFlyout[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .buttonContainer[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{padding:0;border:0;background:transparent;margin-left:8px;color:var(--skittle-flyout-button-color)}.skittleFlyout[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .buttonContainer[_ngcontent-%COMP%]   button[disabled][_ngcontent-%COMP%]{opacity:.5}.skittleFlyout[_ngcontent-%COMP%]   .allContent[_ngcontent-%COMP%]{flex:1;margin:0;overflow-x:hidden;overflow-y:overlay}@media print{[_nghost-%COMP%]{display:none!important}}' ],
                changeDetection: 0
            }), SkittleFlyoutComponent;
        }(), pbi_overlay_ref_factory = __webpack_require__(88819), pbi_overlay_service = __webpack_require__(86940), resizer_component = __webpack_require__(10675), flyout_component_c0 = [ "container" ], FlyoutComponent = function() {
            function FlyoutComponent(injector, lazyProvider, flyoutRef) {
                this.injector = injector, this.lazyProvider = lazyProvider, this.flyoutRef = flyoutRef, 
                this.destroy$ = new Subject.xQ;
            }
            return FlyoutComponent.prototype.ngOnDestroy = function() {
                this.container.clear(), this.destroy$.next(), this.destroy$.complete();
            }, FlyoutComponent.prototype.ngAfterViewInit = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var moduleRef;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.lazyProvider.getModule("@powerbi/ExploreUIAuthoring/lazy-modules/visual-container-skittles/visual-container-skittles-ui.module#VisualContainerSkittlesUIModule") ];

                          case 1:
                            return moduleRef = _a.sent(), this.container.createComponent(this.flyoutRef.config.component, {
                                injector: this.injector,
                                ngModuleRef: moduleRef
                            }).changeDetectorRef.detectChanges(), [ 2 ];
                        }
                    });
                });
            }, FlyoutComponent.prototype.setNewHorizontalFlyoutSize = function(args) {
                args.cancel || this.flyoutRef.updateWidth(args.newSize);
            }, FlyoutComponent.\u0275fac = function(t) {
                return new (t || FlyoutComponent)(core["\u0275\u0275directiveInject"](core.Injector), core["\u0275\u0275directiveInject"](lazy_provider.E), core["\u0275\u0275directiveInject"](FlyoutOverlayRef));
            }, FlyoutComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: FlyoutComponent,
                selectors: [ [ "flyout" ] ],
                viewQuery: function(rf, ctx) {
                    var _t;
                    1 & rf && core["\u0275\u0275viewQuery"](flyout_component_c0, 5, core.ViewContainerRef), 
                    2 & rf && core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx.container = _t.first);
                },
                decls: 3,
                vars: 3,
                consts: [ [ 3, "dock", "enabled", "disableElementSizing", "onResize" ], [ "container", "" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementStart"](0, "resizer", 0), core["\u0275\u0275listener"]("onResize", function($event) {
                        return ctx.setNewHorizontalFlyoutSize($event);
                    }), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementContainer"](1, null, 1)), 
                    2 & rf && core["\u0275\u0275property"]("dock", ctx.flyoutRef.horizontalSide)("enabled", !0)("disableElementSizing", !0);
                },
                dependencies: [ resizer_component.d ],
                styles: [ "[_nghost-%COMP%]{display:flex;flex-direction:row;min-height:100%;min-width:100%}.pbi-overlay-caret.themeableElement[_nghost-%COMP%]:before, .pbi-overlay-caret.themeableElement[_nghost-%COMP%]:after{background:var(--fluent-theme-neutral-lighter-color, #F3F2F1);border:1px solid var(--gray-70, #BEBBB8)}[_nghost-%COMP%] >*{display:block}@media print{[_nghost-%COMP%]{display:none!important}}" ],
                changeDetection: 0
            }), FlyoutComponent;
        }(), FlyoutOverlayRefFactory = function() {
            function FlyoutOverlayRefFactory(layouts, skittleSettingsService, level) {
                void 0 === level && (level = 0), this.skittleSettingsService = skittleSettingsService, 
                this.level = level, this.currentLayout = _.first(layouts), this.childLayouts = layouts.slice(1);
            }
            return FlyoutOverlayRefFactory.prototype.createFlyoutConfig = function(config) {
                var _a, _b, _c, providers = config.providers;
                this.childLayouts.length > 0 && (providers || (providers = new WeakMap), providers.set(pbi_overlay_ref_factory.l, new FlyoutOverlayRefFactory(this.childLayouts, this.skittleSettingsService, this.level + 1)));
                var width = null === (_a = config.options) || void 0 === _a ? void 0 : _a.width, dimensions = this.skittleSettingsService.getDimensions(this.level);
                return (null == dimensions ? void 0 : dimensions.width) && (width = this.minMaxDimension(dimensions.width, null === (_b = config.options) || void 0 === _b ? void 0 : _b.minWidth, null === (_c = config.options) || void 0 === _c ? void 0 : _c.maxWidth)), 
                (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, config), {
                    options: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, config.options), {
                        width
                    }),
                    providers,
                    horizontalLayout: this.currentLayout.horizontalLayout,
                    horizontalSide: this.currentLayout.horizontalSide,
                    verticalLayout: this.currentLayout.verticalLayout
                });
            }, FlyoutOverlayRefFactory.prototype.monitorFlyoutDimensions = function(flyout) {
                var _this = this;
                flyout.flyoutWidth$.pipe((0, takeUntil.R)(flyout.onClose)).subscribe(function(newWidth) {
                    var dimensions = _this.skittleSettingsService.getDimensions(_this.level);
                    newWidth !== (null == dimensions ? void 0 : dimensions.width) && _this.skittleSettingsService.setDimensions(_this.level, {
                        width: newWidth
                    });
                });
            }, FlyoutOverlayRefFactory.prototype.create = function(config, overlayRef) {
                var flyoutConfig = this.createFlyoutConfig(config), flyout = new FlyoutOverlayRef(flyoutConfig, overlayRef);
                return this.monitorFlyoutDimensions(flyout), flyout;
            }, FlyoutOverlayRefFactory.prototype.createComponentPortal = function(config) {
                return pbi_overlay_service._.createComponentPortal((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, config), {
                    component: FlyoutComponent
                }));
            }, FlyoutOverlayRefFactory.prototype.minMaxDimension = function(dimension, min, max) {
                return null != min && "string" != typeof min || (min = 0), null != max && "string" != typeof max || (max = Number.MAX_SAFE_INTEGER), 
                Math.max(min, Math.min(dimension, max));
            }, FlyoutOverlayRefFactory;
        }(), SkittleFlyoutRef = function(_super) {
            function SkittleFlyoutRef(flyoutConfig, overlayRef) {
                var _this = _super.call(this, flyoutConfig, overlayRef) || this;
                _this.overlayRef = overlayRef, _this.titleSubject$ = new BehaviorSubject.X(null), 
                _this.title$ = _this.titleSubject$.asObservable(), _this.showCloseButtonSubject$ = new BehaviorSubject.X(!1), 
                _this.showCloseButton$ = _this.showCloseButtonSubject$.asObservable(), _this.headerButtonsSubject$ = new BehaviorSubject.X([]), 
                _this.headerButtons$ = _this.headerButtonsSubject$.asObservable(), _this.config.providers.set(SkittleFlyoutRef, _this);
                var data = _this.config.data;
                return _this.type = data.type, _this.visualContainer = data.visualContainer, _this.setTitle(data.title), 
                _this.setShowCloseButton(data.showCloseButton), _this;
            }
            return (0, tslib_es6.__extends)(SkittleFlyoutRef, _super), SkittleFlyoutRef.prototype.setTitle = function(title) {
                this.titleSubject$.next(title);
            }, SkittleFlyoutRef.prototype.setHeaderButtons = function(buttons) {
                this.headerButtonsSubject$.next(buttons);
            }, SkittleFlyoutRef.prototype.setShowCloseButton = function(isVisible) {
                this.showCloseButtonSubject$.next(isVisible);
            }, SkittleFlyoutRef;
        }(FlyoutOverlayRef), SkittleFlyoutOverlayRefFactory = function(_super) {
            function SkittleFlyoutOverlayRefFactory(layouts, skittleSettingsService) {
                return _super.call(this, layouts, skittleSettingsService) || this;
            }
            return (0, tslib_es6.__extends)(SkittleFlyoutOverlayRefFactory, _super), SkittleFlyoutOverlayRefFactory.prototype.create = function(config, overlayRef) {
                var flyoutConfig = this.createFlyoutConfig(config), flyout = new SkittleFlyoutRef(flyoutConfig, overlayRef);
                return this.monitorFlyoutDimensions(flyout), flyout;
            }, SkittleFlyoutOverlayRefFactory;
        }(FlyoutOverlayRefFactory), SkittleFlyoutService = function() {
            function SkittleFlyoutService(overlay, skittleSettingsService) {
                this.overlay = overlay, this.skittleSettingsService = skittleSettingsService, this.destroy$ = new Subject.xQ;
            }
            return SkittleFlyoutService.prototype.ngOnDestroy = function() {
                this.destroy$.next(), this.destroy$.complete();
            }, SkittleFlyoutService.prototype.isFlyoutOpen = function() {
                return void 0 !== this.skittleFlyoutRef;
            }, SkittleFlyoutService.prototype.isFlyoutOfTypeOpen = function(type) {
                var _a;
                return (null === (_a = this.skittleFlyoutRef) || void 0 === _a ? void 0 : _a.type) === type;
            }, SkittleFlyoutService.prototype.showFlyout = function(data, options) {
                var _this = this;
                debug.fF.assertNonEmpty(options.flyoutLayouts, "Flyout layouts cannot be empty. Please provide at least 2 layouts.");
                var elementRef = options.elementRef, flyoutLayouts = options.flyoutLayouts, focusElementOnClose = options.focusElementOnClose, disableAutoFocus = options.disableAutoFocus, injector = options.injector, minWidth = options.minWidth, parent = options.parent, currentPositions = options.position;
                if (parent) {
                    var parentPositionStrategy = parent.overlayRef.getConfig().positionStrategy, parentPosition = this.overlay.position(parent.overlayContainer).getPositionStrategyAdapter(parentPositionStrategy).getPosition();
                    "start" === parentPosition.overlayX ? currentPositions = this.getPositions(!1) : "end" === parentPosition.overlayX && (currentPositions = this.getPositions(!0));
                }
                var positionStrategy = this.getPositionStrategy(elementRef, currentPositions, null == parent ? void 0 : parent.overlayContainer), skittleFlyoutRefFactory = new SkittleFlyoutOverlayRefFactory(flyoutLayouts, this.skittleSettingsService), flyoutOverlayConfig = {
                    component: SkittleFlyoutComponent,
                    data,
                    options: {
                        positionStrategy,
                        scrollStrategy: this.overlay.scrollStrategies.reposition(),
                        hasBackdrop: !1,
                        disposeOnNavigation: !0,
                        minWidth
                    },
                    caretSize: 1,
                    hasCaret: !0,
                    useCaretOffsets: !1,
                    closeOnBackdropClick: !1,
                    disableCloseOnEsc: !1,
                    disableFocusTrapSetting: {
                        disable: !1,
                        disableAutoFocus: null != disableAutoFocus && disableAutoFocus
                    },
                    focusElementOnClose,
                    injector,
                    parent,
                    closeWithParent: !0
                }, skittleFlyoutRef = this.overlay.openWithFactory(flyoutOverlayConfig, skittleFlyoutRefFactory);
                skittleFlyoutRef.onClose.subscribe(function() {
                    _this.skittleFlyoutRef = void 0;
                }), this.skittleFlyoutRef = skittleFlyoutRef;
            }, SkittleFlyoutService.prototype.closeFlyout = function() {
                this.skittleFlyoutRef && this.skittleFlyoutRef.close();
            }, SkittleFlyoutService.prototype.getPositionStrategy = function(element, positions, overlayContainer) {
                return this.overlay.position(overlayContainer).withinOverlayContainer(element).withPositions(positions).withMaxiumumVisibility(!0);
            }, SkittleFlyoutService.prototype.getPositions = function(preferLeft) {
                var rightWeight = preferLeft ? 0 : 1, leftWeight = preferLeft ? 1 : 0;
                return [ (0, pbi_overlay_positions.Zz)(typings.Lc.marginHorizontal, void 0, rightWeight), (0, 
                pbi_overlay_positions.v3)(typings.Lc.marginHorizontal, void 0, rightWeight), (0, 
                pbi_overlay_positions.J7)(typings.Lc.marginHorizontal, void 0, rightWeight), (0, 
                pbi_overlay_positions.Iz)(-typings.Lc.marginHorizontal, void 0, leftWeight), (0, 
                pbi_overlay_positions.q6)(-typings.Lc.marginHorizontal, void 0, leftWeight), (0, 
                pbi_overlay_positions.Kb)(-typings.Lc.marginHorizontal, void 0, leftWeight) ];
            }, SkittleFlyoutService.\u0275fac = function(t) {
                return new (t || SkittleFlyoutService)(core["\u0275\u0275inject"](pbi_overlay_service._), core["\u0275\u0275inject"](SkittleSettingsService));
            }, SkittleFlyoutService.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: SkittleFlyoutService,
                factory: SkittleFlyoutService.\u0275fac
            }), SkittleFlyoutService;
        }(), visual_container_skittles_position = __webpack_require__(14002), selectionUtils = __webpack_require__(21728), modernFieldListDragDrop = __webpack_require__(76312), focusManager = __webpack_require__(65302), host_tooltip_service = __webpack_require__(98727), of = __webpack_require__(11547);
        function isInfocus(visibilityService) {
            return null != visibilityService.get(11);
        }
        var visual_container_skittles_component_c0 = [ "buildSkittle" ], visual_container_skittles_component_c1 = [ "chartElementsSkittle" ], visual_container_skittles_component_c2 = [ "buildSkittleMask" ], _c3 = function(a0) {
            return {
                selected: a0
            };
        };
        function VisualContainerSkittlesComponent_div_0_button_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r7 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "button", 4, 5), core["\u0275\u0275listener"]("keydown", function($event) {
                    core["\u0275\u0275restoreView"](_r7);
                    var ctx_r6 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r6.onKeydown($event, "Build"));
                })("click", function() {
                    core["\u0275\u0275restoreView"](_r7);
                    var ctx_r8 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r8.toggleBuildSkittle());
                }), core["\u0275\u0275pipe"](2, "localize"), core["\u0275\u0275pipe"](3, "localize"), 
                core["\u0275\u0275element"](4, "pbi-office-icon", 6)(5, "div", 7, 8), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var skittlesStyle_r1 = core["\u0275\u0275nextContext"]().ngIf, ctx_r2 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275styleProp"]("width", skittlesStyle_r1.width + "px")("height", skittlesStyle_r1.height + "px"), 
                core["\u0275\u0275property"]("ngClass", core["\u0275\u0275pureFunction1"](13, _c3, "Build" === ctx_r2.skittlesService.lastOpenSkittleType))("pbiTooltip", core["\u0275\u0275pipeBind1"](2, 9, "VisualContainer_Skittle_Tooltip_Build"))("pbiTooltipPosition", ctx_r2.tooltipPosition), 
                core["\u0275\u0275attribute"]("aria-label", core["\u0275\u0275pipeBind1"](3, 11, "VisualContainer_Skittle_Tooltip_Build"))("aria-haspopup", "menu");
            }
        }
        var _c4 = function(a0, a1) {
            return {
                selected: a0,
                disabled: a1
            };
        };
        function VisualContainerSkittlesComponent_div_0_ng_container_3_button_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r14 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "button", 10, 11), core["\u0275\u0275listener"]("keydown", function($event) {
                    core["\u0275\u0275restoreView"](_r14);
                    var ctx_r13 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r13.onKeydown($event, "ChartElements"));
                })("click", function() {
                    core["\u0275\u0275restoreView"](_r14);
                    var chartElementsState_r10 = core["\u0275\u0275nextContext"]().ngIf, ctx_r15 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](!(null != chartElementsState_r10.disabledState && chartElementsState_r10.disabledState.disabled) && ctx_r15.toggleChartElementsSkittle());
                }), core["\u0275\u0275pipe"](2, "localize"), core["\u0275\u0275pipe"](3, "localize"), 
                core["\u0275\u0275element"](4, "pbi-office-icon", 12), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var chartElementsState_r10 = core["\u0275\u0275nextContext"]().ngIf, skittlesStyle_r1 = core["\u0275\u0275nextContext"]().ngIf, ctx_r11 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275styleProp"]("width", skittlesStyle_r1.width + "px")("height", skittlesStyle_r1.height + "px"), 
                core["\u0275\u0275property"]("ngClass", core["\u0275\u0275pureFunction2"](15, _c4, "ChartElements" === ctx_r11.skittlesService.lastOpenSkittleType, null == chartElementsState_r10.disabledState ? null : chartElementsState_r10.disabledState.disabled))("pbiTooltip", core["\u0275\u0275pipeBind1"](2, 11, chartElementsState_r10.tooltip))("pbiTooltipDisabled", !1)("pbiTooltipPosition", ctx_r11.tooltipPosition), 
                core["\u0275\u0275attribute"]("aria-label", core["\u0275\u0275pipeBind1"](3, 13, chartElementsState_r10.tooltip))("aria-disabled", null == chartElementsState_r10.disabledState ? null : chartElementsState_r10.disabledState.disabled)("aria-haspopup", "menu");
            }
        }
        function VisualContainerSkittlesComponent_div_0_ng_container_3_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, VisualContainerSkittlesComponent_div_0_ng_container_3_button_1_Template, 5, 18, "button", 9), 
            core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275elementContainerEnd"]()), 
            2 & rf) {
                var ctx_r3 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](2, 1, ctx_r3.chartElementsVisible$));
            }
        }
        var _c5 = function(a0, a1) {
            return {
                disabledState: a0,
                tooltip: a1
            };
        };
        function VisualContainerSkittlesComponent_div_0_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 1), core["\u0275\u0275template"](1, VisualContainerSkittlesComponent_div_0_button_1_Template, 7, 15, "button", 2), 
            core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275template"](3, VisualContainerSkittlesComponent_div_0_ng_container_3_Template, 3, 3, "ng-container", 3), 
            core["\u0275\u0275pipe"](4, "async"), core["\u0275\u0275pipe"](5, "async"), core["\u0275\u0275elementEnd"]()), 
            2 & rf) {
                var skittlesStyle_r1 = ctx.ngIf, ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275styleProp"]("row-gap", skittlesStyle_r1.betweenMargin + "px"), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](2, 4, ctx_r0.buildVisible$)), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pureFunction2"](10, _c5, core["\u0275\u0275pipeBind1"](4, 6, ctx_r0.chartElementsDisabledState$), core["\u0275\u0275pipeBind1"](5, 8, ctx_r0.chartElementsTooltip$)));
            }
        }
        var VisualContainerSkittlesComponent = function() {
            function VisualContainerSkittlesComponent(skittleSettingsService, changeDetection, dataSources, eventBridge, hostOverlayRef, injector, lazyScopedProviderModern, runningVisualService, selectionService, skittleFlyoutService, visualAuthoring, skittlesData, contextActivityService, visibilityService) {
                var _a, _b, _this = this;
                this.skittleSettingsService = skittleSettingsService, this.changeDetection = changeDetection, 
                this.dataSources = dataSources, this.eventBridge = eventBridge, this.hostOverlayRef = hostOverlayRef, 
                this.injector = injector, this.lazyScopedProviderModern = lazyScopedProviderModern, 
                this.runningVisualService = runningVisualService, this.selectionService = selectionService, 
                this.skittleFlyoutService = skittleFlyoutService, this.visualAuthoring = visualAuthoring, 
                this.skittlesData = skittlesData, this.contextActivityService = contextActivityService, 
                this.visibilityService = visibilityService, this.destroy$ = new Subject.xQ, this.buildSkittleElementRef$ = new BehaviorSubject.X(void 0), 
                this.chartElementsSkittleElementRef$ = new BehaviorSubject.X(void 0), this.buildSkittleMaskElementRef$ = new BehaviorSubject.X(void 0), 
                this.visualContainer = this.skittlesData.visualContainer, debug.fF.assertValue(this.visualContainer, "Expect this.skittlesData.visualContainer to be defined"), 
                this.buildVisible$ = this.skittlesData.supportedSkittleTypes$.pipe((0, map.U)(function(supportedTypes) {
                    return _.some(supportedTypes, function(supported) {
                        return "Build" === supported.type;
                    });
                }), (0, tap.b)(function(visible) {
                    !visible && _this.isFlyoutOfTypeOpen("Build") && _this.skittleFlyoutService.closeFlyout();
                }), (0, distinctUntilChanged.x)());
                var visualSupportsChartElements$ = this.skittlesData.supportedSkittleTypes$.pipe((0, 
                map.U)(function(supportedTypes) {
                    return _.some(supportedTypes, function(supported) {
                        return "ChartElements" === supported.type;
                    });
                })), errorInfo = null === (_a = this.runningVisualService.getVisual(this.visualContainer)) || void 0 === _a ? void 0 : _a.getErrorInfo(), visualHasError$ = new BehaviorSubject.X(!!errorInfo);
                this.eventBridge.on(events.uB4).pipe((0, takeUntil.R)(this.destroy$)).subscribe(function() {
                    var _a;
                    debug.fF.assertValue(visualHasError$, "Expect visualHasError$ to be defined");
                    var newErrorInfo = null === (_a = _this.runningVisualService.getVisual(_this.visualContainer)) || void 0 === _a ? void 0 : _a.getErrorInfo();
                    visualHasError$.next(!!newErrorInfo);
                }), this.chartElementsVisible$ = (0, combineLatest.aj)([ visualSupportsChartElements$, visualHasError$ ]).pipe((0, 
                map.U)(function(_a) {
                    return _a[0] && !_a[1];
                }), (0, tap.b)(function(visible) {
                    !visible && _this.isFlyoutOfTypeOpen("ChartElements") && _this.skittleFlyoutService.closeFlyout();
                }), (0, distinctUntilChanged.x)()), this.chartElementsDisabledState$ = this.skittlesData.supportedSkittleTypes$.pipe((0, 
                map.U)(function(supportedTypes) {
                    var _a;
                    return null === (_a = _.find(supportedTypes, function(supported) {
                        return "ChartElements" === supported.type;
                    })) || void 0 === _a ? void 0 : _a.disabled$;
                }), (0, switchMap.w)(function(disabledState$) {
                    return null != disabledState$ ? disabledState$ : (0, of.of)(void 0);
                })), this.chartElementsTooltip$ = null === (_b = this.chartElementsDisabledState$) || void 0 === _b ? void 0 : _b.pipe((0, 
                map.U)(function(disabledState) {
                    if (null != disabledState) return (null == disabledState ? void 0 : disabledState.disabled) ? disabledState.disabledReasonKey : "VisualContainer_Skittle_Tooltip_ChartElement";
                }), (0, takeUntil.R)(this.destroy$));
            }
            return Object.defineProperty(VisualContainerSkittlesComponent.prototype, "_buildSkittleElement", {
                set: function(elementRef) {
                    var _this = this;
                    this.buildSkittleElementRef$.next(elementRef), (null == elementRef ? void 0 : elementRef.nativeElement) && this.skittlesData.showBuildFlyout$.pipe((0, 
                    filter.h)(function(res) {
                        return null !== res;
                    }), (0, takeUntil.R)(this.destroy$)).subscribe(function() {
                        setTimeout(function() {
                            _this.isFlyoutOfTypeOpen("Build") || _this.showFlyoutOfType("Build");
                        }, host_tooltip_service.sM.DefaultShowDelay);
                    });
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(VisualContainerSkittlesComponent.prototype, "_chartElementsSkittleElement", {
                set: function(elementRef) {
                    this.chartElementsSkittleElementRef$.next(elementRef);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(VisualContainerSkittlesComponent.prototype, "_buildSkittleMaskElement", {
                set: function(elementRef) {
                    this.buildSkittleMaskElementRef$.next(elementRef), (null == elementRef ? void 0 : elementRef.nativeElement) && this.setupBuildSkittleDragHandler(elementRef.nativeElement);
                },
                enumerable: !1,
                configurable: !0
            }), VisualContainerSkittlesComponent.prototype.ngOnInit = function() {
                var _this = this;
                this.lazyScopedProviderModern.get("visualContainerSkittlesService").then(function(result) {
                    _this.skittlesService = result, _this.skittlesStyle$ = _this.skittlesService.skittlesPosition$.pipe((0, 
                    filter.h)(function(skittlesPosition) {
                        return null != skittlesPosition && skittlesPosition.container === _this.visualContainer;
                    }), (0, map.U)(function(skittlesPosition) {
                        return {
                            height: skittlesPosition.positions.skittleButtons.buttonHeight,
                            width: skittlesPosition.positions.skittleButtons.buttonWidth,
                            betweenMargin: skittlesPosition.positions.skittleButtons.betweenButtonMargin
                        };
                    })), _this.skittlesService.skittlesPosition$.pipe((0, filter.h)(function(skittlesPosition) {
                        return null != skittlesPosition && skittlesPosition.container === _this.visualContainer;
                    }), (0, takeUntil.R)(_this.destroy$)).subscribe(function(skittlePositions) {
                        _this.skittlePosition = skittlePositions.positions, _this.tooltipPosition = _this.skittlePosition.skittleButtons.tooltipPosition;
                    }), _this.changeDetection.detectChanges();
                    var activeSkittle = _this.skittlesData.withActiveSkittle;
                    null != activeSkittle && _this.skittlesData.supportedSkittleTypes$.pipe((0, take.q)(1)).subscribe(function(supportedTypes) {
                        _this.skittlePosition && _.some(supportedTypes, function(supported) {
                            return supported.type === activeSkittle;
                        }) && (_this.initialFlyoutOpenSkittleType$ = new BehaviorSubject.X(activeSkittle), 
                        (0, combineLatest.aj)([ _this.initialFlyoutOpenSkittleType$, "Build" === activeSkittle ? _this.buildSkittleElementRef$ : _this.chartElementsSkittleElementRef$ ]).pipe((0, 
                        filter.h)(function(_a) {
                            return null != _a[0] && null != _a[1];
                        }), (0, take.q)(1)).subscribe(function(_a) {
                            _this.toggleSkittle(_a[0], _this.skittlesData.skipActiveSkittleFlyoutAutoFocus);
                        }));
                    });
                }), this.eventBridge.on(events.tRg).pipe((0, takeUntil.R)(this.destroy$)).subscribe(function() {
                    if (_this.skittleFlyoutService.isFlyoutOpen()) {
                        var selectedElements = _this.selectionService.getSelectedElements();
                        1 !== _.size(selectedElements) || _.isEmpty(selectedElements[0].subSelections) || (_this.skittlesService.lastOpenSkittleType = void 0, 
                        _this.skittleFlyoutService.closeFlyout());
                    }
                });
            }, VisualContainerSkittlesComponent.prototype.ngOnDestroy = function() {
                this.destroy$.next(), this.destroy$.complete();
            }, VisualContainerSkittlesComponent.prototype.toggleBuildSkittle = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.toggleSkittle("Build") ];

                          case 1:
                            return _a.sent(), [ 2 ];
                        }
                    });
                });
            }, VisualContainerSkittlesComponent.prototype.toggleChartElementsSkittle = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.toggleSkittle("ChartElements") ];

                          case 1:
                            return _a.sent(), [ 2 ];
                        }
                    });
                });
            }, VisualContainerSkittlesComponent.prototype.onKeydown = function(event, skittleType) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var elementToFocus;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (event.key) {
                          case "ArrowDown":
                            "Build" === skittleType && (elementToFocus = this.chartElementsSkittleElementRef$.value.nativeElement);
                            break;

                          case "ArrowUp":
                            "ChartElements" === skittleType && (elementToFocus = this.buildSkittleElementRef$.value.nativeElement);
                        }
                        return elementToFocus && focusManager.IK.focus(elementToFocus), [ 2 ];
                    });
                });
            }, VisualContainerSkittlesComponent.prototype.toggleSkittle = function(type, skipSkittleFlyoutAutoFocus) {
                return void 0 === skipSkittleFlyoutAutoFocus && (skipSkittleFlyoutAutoFocus = !1), 
                (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var activity, isOverlayOpen, error_1;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            activity = function(skittleType, contextActivityService, visibilityService, selectionService) {
                                var _a, visualName = null === (_a = _.first(selectionService.getSelectedElements())) || void 0 === _a ? void 0 : _a.canvasItem.name;
                                return contextActivityService.createActivity({
                                    name: "OpenSkittle",
                                    visualName,
                                    data: {
                                        skittleType,
                                        source: isInfocus(visibilityService) ? "InFocus" : "Skittle"
                                    }
                                });
                            }(type, this.contextActivityService, this.visibilityService, this.selectionService), 
                            _a.label = 1;

                          case 1:
                            return _a.trys.push([ 1, 5, , 6 ]), isOverlayOpen = this.isFlyoutOfTypeOpen(type), 
                            this.skittleFlyoutService.closeFlyout(), isOverlayOpen ? [ 3, 3 ] : [ 4, this.showFlyoutOfType(type, skipSkittleFlyoutAutoFocus) ];

                          case 2:
                            return _a.sent(), this.skittlesService.lastOpenSkittleType = type, [ 3, 4 ];

                          case 3:
                            this.skittlesService.lastOpenSkittleType = void 0, _a.label = 4;

                          case 4:
                            return this.changeDetection.detectChanges(), activity.resolve(), [ 3, 6 ];

                          case 5:
                            throw error_1 = _a.sent(), activity.reject(error_1), error_1;

                          case 6:
                            return [ 2 ];
                        }
                    });
                });
            }, VisualContainerSkittlesComponent.prototype.showFlyoutOfType = function(skittleType, skipSkittleFlyoutAutoFocus) {
                var _a, _this = this;
                void 0 === skipSkittleFlyoutAutoFocus && (skipSkittleFlyoutAutoFocus = !1), debug.fF.assertValue(this.skittlePosition, "expecting skittles to be open to show the flyout");
                var title = (_a = this.getSkittleFlyoutProperties(skittleType)).title, component = _a.component, flyoutPosition = _a.flyoutPosition, elementRef = _a.elementRef;
                debug.fF.assertValue(elementRef, "expecting skittle of type ".concat(skittleType, " exists")), 
                this.ensureSubselectionClosed(), "Build" === skittleType && (this.skittleSettingsService.setAutoVisualWithPerspectives(this.skittlesData.fromPersonalize), 
                this.skittleSettingsService.setShowClearChanges(this.skittlesData.fromPersonalize)), 
                this.skittleFlyoutService.showFlyout({
                    skittleContentComponent: component,
                    toggleSkittle: function(type) {
                        return _this.toggleSkittle(type);
                    },
                    title,
                    type: skittleType,
                    showCloseButton: !0,
                    visualContainer: this.visualContainer
                }, {
                    flyoutLayouts: [ {
                        horizontalLayout: this.skittlePosition.horizontalLayout.firstLevelFlyout,
                        verticalLayout: this.skittlePosition.verticalLayout.firstLevelFlyout,
                        horizontalSide: "Left" === this.skittlePosition.horizontalLayout.firstLevelFlyout.alignment ? "left" : "right"
                    }, {
                        horizontalLayout: this.skittlePosition.horizontalLayout.secondLevelFlyout,
                        verticalLayout: this.skittlePosition.verticalLayout.secondLevelFlyout,
                        horizontalSide: "Left" === this.skittlePosition.horizontalLayout.secondLevelFlyout.alignment ? "left" : "right"
                    } ],
                    elementRef,
                    focusElementOnClose: elementRef.nativeElement,
                    disableAutoFocus: skipSkittleFlyoutAutoFocus,
                    injector: this.injector,
                    parent: this.hostOverlayRef,
                    position: flyoutPosition.position,
                    height: flyoutPosition.height,
                    maxHeight: flyoutPosition.maxHeight,
                    width: flyoutPosition.width,
                    minWidth: flyoutPosition.minWidth,
                    maxWidth: flyoutPosition.maxWidth
                });
            }, VisualContainerSkittlesComponent.prototype.getSkittleFlyoutProperties = function(skittleType) {
                switch (skittleType) {
                  case "Build":
                    return {
                        title: "Suggest_A_Visual",
                        flyoutPosition: (0, visual_container_skittles_position.m)(this.skittlePosition.horizontalLayout.firstLevelFlyout, this.skittlePosition.verticalLayout.firstLevelFlyout, (elementRef = this.buildSkittleElementRef$.value).nativeElement),
                        elementRef,
                        component: BuildSkittleFlyoutComponent
                    };

                  case "ChartElements":
                    var elementRef;
                    return {
                        title: "Skittles_ChartElements_Title",
                        flyoutPosition: (0, visual_container_skittles_position.m)(this.skittlePosition.horizontalLayout.firstLevelFlyout, this.skittlePosition.verticalLayout.firstLevelFlyout, (elementRef = this.chartElementsSkittleElementRef$.value).nativeElement),
                        elementRef: this.chartElementsSkittleElementRef$.value,
                        component: ChartElementsSkittleFlyoutComponent
                    };

                  default:
                    debug.fF.assertNever(skittleType);
                }
            }, VisualContainerSkittlesComponent.prototype.isFlyoutOfTypeOpen = function(skittleType) {
                return this.skittleFlyoutService.isFlyoutOfTypeOpen && this.skittleFlyoutService.isFlyoutOfTypeOpen(skittleType);
            }, VisualContainerSkittlesComponent.prototype.ensureSubselectionClosed = function() {
                selectionUtils.UP.selectSubSelection(this.selectionService, this.visualContainer, [], 0);
            }, VisualContainerSkittlesComponent.prototype.setupBuildSkittleDragHandler = function(element) {
                var timeoutId, _this = this;
                element.addEventListener("dragenter", function() {
                    timeoutId = setTimeout(function() {
                        _this.isFlyoutOfTypeOpen("Build") || _this.showFlyoutOfType("Build");
                    }, host_tooltip_service.sM.DefaultShowDelay);
                }), element.addEventListener("dragleave", function() {
                    clearTimeout(timeoutId);
                }), (0, modernFieldListDragDrop.$o)(element, function(_event, fieldExpr) {
                    return (0, tslib_es6.__awaiter)(_this, void 0, void 0, function() {
                        var _this = this;
                        return (0, tslib_es6.__generator)(this, function(_a) {
                            switch (_a.label) {
                              case 0:
                                return [ 4, this.visualAuthoring.addFieldToVisual(fieldExpr, this.dataSources.get(), this.visualContainer, "DraggedToVisual") ];

                              case 1:
                                return _a.sent() && setTimeout(function() {
                                    _this.isFlyoutOfTypeOpen("Build") || _this.showFlyoutOfType("Build");
                                }, host_tooltip_service.sM.DefaultShowDelay), [ 2 ];
                            }
                        });
                    });
                });
            }, VisualContainerSkittlesComponent.\u0275fac = function(t) {
                return new (t || VisualContainerSkittlesComponent)(core["\u0275\u0275directiveInject"](SkittleSettingsService), core["\u0275\u0275directiveInject"](core.ChangeDetectorRef), core["\u0275\u0275directiveInject"](data_sources_service.D), core["\u0275\u0275directiveInject"](event_bridge_service.J), core["\u0275\u0275directiveInject"](pbi_overlay_ref.w), core["\u0275\u0275directiveInject"](core.Injector), core["\u0275\u0275directiveInject"](lazy_scoped_provider.H), core["\u0275\u0275directiveInject"](running_visual_service.s), core["\u0275\u0275directiveInject"](selection_service.z), core["\u0275\u0275directiveInject"](SkittleFlyoutService), core["\u0275\u0275directiveInject"](visual_authoring_service.$8), core["\u0275\u0275directiveInject"](pbi_overlay_ref.M), core["\u0275\u0275directiveInject"](context_activity_service.r), core["\u0275\u0275directiveInject"](visibility_service.w));
            }, VisualContainerSkittlesComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: VisualContainerSkittlesComponent,
                selectors: [ [ "visual-container-skittles" ] ],
                viewQuery: function(rf, ctx) {
                    if (1 & rf && (core["\u0275\u0275viewQuery"](visual_container_skittles_component_c0, 5, core.ElementRef), 
                    core["\u0275\u0275viewQuery"](visual_container_skittles_component_c1, 5, core.ElementRef), 
                    core["\u0275\u0275viewQuery"](visual_container_skittles_component_c2, 5, core.ElementRef)), 
                    2 & rf) {
                        var _t = void 0;
                        core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx._buildSkittleElement = _t.first), 
                        core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx._chartElementsSkittleElement = _t.first), 
                        core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx._buildSkittleMaskElement = _t.first);
                    }
                },
                features: [ core["\u0275\u0275ProvidersFeature"]([ SkittleFlyoutService ]) ],
                decls: 2,
                vars: 3,
                consts: [ [ "class", "visualContainerSkittles", 3, "row-gap", 4, "ngIf" ], [ 1, "visualContainerSkittles" ], [ "class", "skittle pbi-depth-1", "data-automation-id", "visual-container-skittle-build-button", "pbiTooltipCaretSize", "small", "pbiTooltipShowDelay", "500", 3, "ngClass", "width", "height", "pbiTooltip", "pbiTooltipPosition", "keydown", "click", 4, "ngIf" ], [ 4, "ngIf" ], [ "data-automation-id", "visual-container-skittle-build-button", "pbiTooltipCaretSize", "small", "pbiTooltipShowDelay", "500", 1, "skittle", "pbi-depth-1", 3, "ngClass", "pbiTooltip", "pbiTooltipPosition", "keydown", "click" ], [ "buildSkittle", "" ], [ "name", "suggestLightningBolt_20" ], [ 1, "skittle-mask" ], [ "buildSkittleMask", "" ], [ "class", "skittle pbi-depth-1", "pbiTooltipCaretSize", "small", "pbiTooltipShowDelay", "500", 3, "ngClass", "width", "height", "pbiTooltip", "pbiTooltipDisabled", "pbiTooltipPosition", "keydown", "click", 4, "ngIf" ], [ "pbiTooltipCaretSize", "small", "pbiTooltipShowDelay", "500", 1, "skittle", "pbi-depth-1", 3, "ngClass", "pbiTooltip", "pbiTooltipDisabled", "pbiTooltipPosition", "keydown", "click" ], [ "chartElementsSkittle", "" ], [ "name", "PBIAddToChart_20" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275template"](0, VisualContainerSkittlesComponent_div_0_Template, 6, 13, "div", 0), 
                    core["\u0275\u0275pipe"](1, "async")), 2 & rf && core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](1, 1, ctx.skittlesStyle$));
                },
                dependencies: [ common.NgClass, common.NgIf, pbi_office_icon_component.m, pbi_tooltip_directive.V, common.AsyncPipe, localize_pipe.F ],
                styles: [ ".visualContainerSkittles[_ngcontent-%COMP%]{display:flex;flex-direction:column;padding:0;--skittle-background-color: var(--gray-40, #E1DFDD);--skittle-box-shadow: 0px 0px 2px var(--colorNeutralShadowAmbient), 0px 2px 4px var(--colorNeutralShadowKey);--skittle-border-color: var(--gray-50, #D2D0CE);--skittle-selected-background-color: var(--gray-80, #B3B0AD);--skittle-selected-border-color: var(--gray-130, #605E5C);--skittle-hover-background-color: var(--gray-70, #BEBBB8);--skittle-active-background-color: var(--gray-90, #A19F9D)}  [data-legacy-theming=false] .visualContainerSkittles{--skittle-background-color: var(--colorNeutralBackground3);--skittle-box-shadow: 0px 0px 2px var(--colorNeutralShadowAmbient), 0px 2px 4px var(--colorNeutralShadowKey);--skittle-border-color: var(--colorNeutralStroke3);--skittle-selected-background-color: var(--colorNeutralBackground3Selected);--skittle-selected-border-color: var(--colorNeutralStroke3);--skittle-hover-background-color: var(--colorNeutralBackground3Hover);--skittle-active-background-color: var(--colorNeutralBackground3Pressed)}.visualContainerSkittles[_ngcontent-%COMP%]   .skittle[_ngcontent-%COMP%]{background-color:var(--skittle-background-color);box-shadow:var(--skittle-box-shadow);outline:none;border:1px solid var(--skittle-border-color);border-radius:2px;box-sizing:border-box;padding:0;align-items:center;justify-content:center;display:flex;cursor:pointer;position:relative}.visualContainerSkittles[_ngcontent-%COMP%]   .skittle[_ngcontent-%COMP%]:hover:not(.disabled){background-color:var(--skittle-hover-background-color);border-color:transparent}.visualContainerSkittles[_ngcontent-%COMP%]   .skittle[_ngcontent-%COMP%]:active:not(.disabled){background-color:var(--skittle-active-background-color);border-color:transparent}.visualContainerSkittles[_ngcontent-%COMP%]   .skittle.selected[_ngcontent-%COMP%]{background-color:var(--skittle-selected-background-color);border-color:var(--skittle-selected-border-color)}.visualContainerSkittles[_ngcontent-%COMP%]   .skittle.disabled[_ngcontent-%COMP%]{cursor:default}.visualContainerSkittles[_ngcontent-%COMP%]   .skittle.disabled[_ngcontent-%COMP%]   pbi-office-icon[_ngcontent-%COMP%]{opacity:.4}  html[data-focus-source=key] .visualContainerSkittles .skittle:focus,   html[data-focus-source=key] .visualContainerSkittles .skittle:hover:focus,   html[data-focus-source=key] .visualContainerSkittles .skittle:active:focus,   html[data-focus-source=key] .visualContainerSkittles .skittle.selected:focus{border:2px solid var(--fluent-theme-black-color, #000)}.visualContainerSkittles[_ngcontent-%COMP%]   .skittle[_ngcontent-%COMP%]   pbi-office-icon[_ngcontent-%COMP%]{height:20px;width:20px}.visualContainerSkittles[_ngcontent-%COMP%]   .skittle[_ngcontent-%COMP%]   .skittle-mask[_ngcontent-%COMP%]{position:absolute;top:0;left:0;width:100%;height:100%}@media print{[_nghost-%COMP%]{display:none!important}}" ],
                changeDetection: 0
            }), VisualContainerSkittlesComponent;
        }(), pbi_office_icon_provider_service = __webpack_require__(54485), manifests = [ {
            type: VisualContainerSkittlesComponent,
            componentId: "VisualContainerSkittlesComponentId"
        }, {
            type: BuildSkittlePaneComponent,
            componentId: "BuildSkittlePaneComponentId"
        }, {
            type: SuggestSkittlePaneComponent,
            componentId: "SuggestSkittlePaneComponentId"
        }, {
            type: ChartElementsSkittlePaneComponent,
            componentId: "ChartElementsSkittlePaneComponentId"
        } ], VisualContainerSkittlesUIModule = function() {
            function VisualContainerSkittlesUIModule(iconProvider) {
                __webpack_require__.e("on-object").then(__webpack_require__.bind(__webpack_require__, 39875)).then(function(module) {
                    iconProvider.registerIcons(module.iconSpriteSheet.sprite);
                });
            }
            return VisualContainerSkittlesUIModule.\u0275fac = function(t) {
                return new (t || VisualContainerSkittlesUIModule)(core["\u0275\u0275inject"](pbi_office_icon_provider_service.u));
            }, VisualContainerSkittlesUIModule.\u0275mod = core["\u0275\u0275defineNgModule"]({
                type: VisualContainerSkittlesUIModule
            }), VisualContainerSkittlesUIModule.\u0275inj = core["\u0275\u0275defineInjector"]({
                providers: [ SkittleSettingsService ],
                imports: [ common.CommonModule, ExploreUI_module.J, lazy_load_module.N.withManifests(manifests), localization_module.v, pane_formatting_eager_module.p, pbi_checkbox_module.V, pbi_field_list_module.X, pbi_office_icon_module.m, pbi_overlay_module.N, pbi_pane_module.x, pbi_tooltip_module.Z, pbi_scrollbar_module.K, tri_svg_icon.T6, visual_types_container_modern_module.Q ]
            }), VisualContainerSkittlesUIModule;
        }();
    },
    13941: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        function isFieldPickerAdd(update) {
            return "add" === update.type;
        }
        function isFieldPickerDelete(update) {
            return "delete" === update.type;
        }
        function isFieldPickerReorder(update) {
            return "reorder" === update.type;
        }
        function isFieldPickerReplace(update) {
            return "replace" === update.type;
        }
        function isFieldPickerRename(update) {
            return "rename" === update.type;
        }
        function isFieldPickerInitialize(update) {
            return "initialize" === update.type;
        }
        __webpack_require__.d(__webpack_exports__, {
            H2: function() {
                return isFieldPickerDelete;
            },
            JB: function() {
                return isFieldPickerAdd;
            },
            V5: function() {
                return isFieldPickerInitialize;
            },
            cA: function() {
                return isFieldPickerReplace;
            },
            cS: function() {
                return isFieldPickerReorder;
            },
            y$: function() {
                return isFieldPickerRename;
            }
        });
    },
    14002: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            C: function() {
                return getSkittlesPosition;
            },
            m: function() {
                return getSkittleFlyoutPosition;
            }
        });
        var _powerbi_legacy_ExploreUI_utils_canvasDisplayUtil__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(64466), _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(62458), _powerbi_UILibrary_pbi_overlay__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(25512), _powerbi_Typings_Modern_Shared_ExploreUI_typings__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(49977), positionFunctions = {
            LeftTop: _powerbi_UILibrary_pbi_overlay__WEBPACK_IMPORTED_MODULE_0__.Iz,
            RightTop: _powerbi_UILibrary_pbi_overlay__WEBPACK_IMPORTED_MODULE_0__.Zz,
            LeftCenter: _powerbi_UILibrary_pbi_overlay__WEBPACK_IMPORTED_MODULE_0__.q6,
            RightCenter: _powerbi_UILibrary_pbi_overlay__WEBPACK_IMPORTED_MODULE_0__.v3,
            LeftBottom: _powerbi_UILibrary_pbi_overlay__WEBPACK_IMPORTED_MODULE_0__.Kb,
            RightBottom: _powerbi_UILibrary_pbi_overlay__WEBPACK_IMPORTED_MODULE_0__.J7,
            RightInsideTop: function(offsetX, offsetY) {
                return {
                    originX: "end",
                    originY: "top",
                    overlayX: "end",
                    overlayY: "top",
                    offsetX,
                    offsetY
                };
            },
            RightInsideBottom: function(offsetX, offsetY) {
                return {
                    originX: "end",
                    originY: "bottom",
                    overlayX: "end",
                    overlayY: "bottom",
                    offsetX,
                    offsetY
                };
            }
        }, numberOfSkittles = 2;
        function getSkittlesPosition(visualContainer, visualOverlayPosition) {
            _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_1__.fF.assertValue(visualContainer, "visualContainer"), 
            _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_1__.fF.assertValue(visualOverlayPosition, "visualOverlayPosition");
            var originElement = visualOverlayPosition.getOrigin(visualContainer);
            if (originElement) if (originElement instanceof Element) {
                var pageElement = document.querySelector(_powerbi_legacy_ExploreUI_utils_canvasDisplayUtil__WEBPACK_IMPORTED_MODULE_2__.s.DisplayAreaContainerNameSelector.selector);
                if (pageElement && pageElement instanceof Element) {
                    var relativeBounds = getRelativeBounds(pageElement, originElement);
                    if (_powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_1__.fF.assert(function() {
                        return 0 !== relativeBounds.originWidth && 0 !== relativeBounds.originHeight;
                    }, "visual width or height is 0 now, check how to avoid calculating skittle position before visual is rendered"), 
                    function(relativeBounds) {
                        if (relativeBounds.relativeY >= relativeBounds.pageHeight || relativeBounds.relativeY + relativeBounds.originHeight <= 0) return !1;
                        if (relativeBounds.relativeX >= relativeBounds.pageWidth) return !1;
                        var relativeVisualRight = relativeBounds.relativeX + relativeBounds.originWidth;
                        return !(relativeVisualRight <= 0 || relativeBounds.relativeX < 0 && relativeBounds.pageWidth - relativeVisualRight < 0);
                    }(relativeBounds)) {
                        var horizontalLayoutResult = function(relativeBounds) {
                            var skittleButtons, firstLevelFlyout, secondLevelFlyout, rightAvailableSpace = relativeBounds.pageWidth - (relativeBounds.relativeX + relativeBounds.originWidth), leftAvailableSpace = relativeBounds.relativeX, skittleButtonWidth = _powerbi_Typings_Modern_Shared_ExploreUI_typings__WEBPACK_IMPORTED_MODULE_3__.Lc.width + _powerbi_Typings_Modern_Shared_ExploreUI_typings__WEBPACK_IMPORTED_MODULE_3__.Lc.marginHorizontal, flyoutWidth = _powerbi_Typings_Modern_Shared_ExploreUI_typings__WEBPACK_IMPORTED_MODULE_3__.Lc.childOverlayWidth + _powerbi_Typings_Modern_Shared_ExploreUI_typings__WEBPACK_IMPORTED_MODULE_3__.Lc.marginHorizontal, allLevelsTotalWidth = skittleButtonWidth + 2 * flyoutWidth, prioritizedLevelsWidth = skittleButtonWidth + flyoutWidth;
                            return rightAvailableSpace >= prioritizedLevelsWidth ? {
                                skittleButtons: skittleButtons = "Right",
                                firstLevelFlyout: {
                                    alignment: firstLevelFlyout = "Right",
                                    maxWidth: calcAvailableHorizontalFirstLevelFlyoutWidth(relativeBounds, skittleButtons, firstLevelFlyout, secondLevelFlyout = rightAvailableSpace >= allLevelsTotalWidth ? "Right" : "Left")
                                },
                                secondLevelFlyout: {
                                    alignment: secondLevelFlyout
                                }
                            } : leftAvailableSpace >= prioritizedLevelsWidth ? {
                                skittleButtons: skittleButtons = "Left",
                                firstLevelFlyout: {
                                    alignment: firstLevelFlyout = "Left",
                                    maxWidth: calcAvailableHorizontalFirstLevelFlyoutWidth(relativeBounds, skittleButtons, firstLevelFlyout, secondLevelFlyout = leftAvailableSpace >= allLevelsTotalWidth ? "Left" : "Right")
                                },
                                secondLevelFlyout: {
                                    alignment: secondLevelFlyout
                                }
                            } : rightAvailableSpace >= skittleButtonWidth ? {
                                skittleButtons: skittleButtons = "Right",
                                firstLevelFlyout: {
                                    alignment: firstLevelFlyout = "Left",
                                    maxWidth: calcAvailableHorizontalFirstLevelFlyoutWidth(relativeBounds, skittleButtons, firstLevelFlyout, secondLevelFlyout = "Left")
                                },
                                secondLevelFlyout: {
                                    alignment: secondLevelFlyout
                                }
                            } : leftAvailableSpace >= skittleButtonWidth ? {
                                skittleButtons: skittleButtons = "Left",
                                firstLevelFlyout: {
                                    alignment: firstLevelFlyout = "Right",
                                    maxWidth: calcAvailableHorizontalFirstLevelFlyoutWidth(relativeBounds, skittleButtons, firstLevelFlyout, secondLevelFlyout = "Right")
                                },
                                secondLevelFlyout: {
                                    alignment: secondLevelFlyout
                                }
                            } : rightAvailableSpace >= 0 ? {
                                skittleButtons: skittleButtons = "RightInside",
                                firstLevelFlyout: {
                                    alignment: firstLevelFlyout = "Left",
                                    maxWidth: calcAvailableHorizontalFirstLevelFlyoutWidth(relativeBounds, skittleButtons, firstLevelFlyout, secondLevelFlyout = "Left")
                                },
                                secondLevelFlyout: {
                                    alignment: secondLevelFlyout
                                }
                            } : void 0;
                        }(relativeBounds);
                        if (horizontalLayoutResult) {
                            var verticalLayoutResult = function(relativeBounds) {
                                var positionPercentage = relativeBounds.relativeY / relativeBounds.pageHeight * 100;
                                return {
                                    skittleButtons: (relativeBounds.relativeY >= 0 ? relativeBounds.pageHeight - relativeBounds.relativeY : relativeBounds.pageHeight) >= (_powerbi_Typings_Modern_Shared_ExploreUI_typings__WEBPACK_IMPORTED_MODULE_3__.Lc.height + _powerbi_Typings_Modern_Shared_ExploreUI_typings__WEBPACK_IMPORTED_MODULE_3__.Lc.betweenSkittlesVerticalSpace) * numberOfSkittles - _powerbi_Typings_Modern_Shared_ExploreUI_typings__WEBPACK_IMPORTED_MODULE_3__.Lc.betweenSkittlesVerticalSpace ? "Top" : "Bottom",
                                    firstLevelFlyout: positionPercentage <= 50 ? "Top" : positionPercentage <= 75 ? "Center" : "Bottom",
                                    secondLevelFlyout: "Center"
                                };
                            }(relativeBounds);
                            if (verticalLayoutResult) {
                                var skittlesOffset = function(verticalLayout, relativeBounds) {
                                    var skittleButtonsOffsetY;
                                    if ("Top" === verticalLayout) {
                                        var visualTopOutOfBoundHeight = 0 - relativeBounds.relativeY;
                                        visualTopOutOfBoundHeight > 0 && (skittleButtonsOffsetY = visualTopOutOfBoundHeight);
                                    } else if ("Bottom" === verticalLayout) {
                                        var visualBottomOutOfBoundHeight = relativeBounds.relativeY + relativeBounds.originHeight - relativeBounds.pageHeight;
                                        visualBottomOutOfBoundHeight > 0 && (skittleButtonsOffsetY = -visualBottomOutOfBoundHeight);
                                    }
                                    return skittleButtonsOffsetY;
                                }(verticalLayoutResult.skittleButtons, relativeBounds);
                                return {
                                    skittleButtons: {
                                        overlayPosition: [ getConnectedPosition(horizontalLayoutResult.skittleButtons, verticalLayoutResult.skittleButtons, _powerbi_Typings_Modern_Shared_ExploreUI_typings__WEBPACK_IMPORTED_MODULE_3__.Lc.marginHorizontal, skittlesOffset) ],
                                        buttonHeight: _powerbi_Typings_Modern_Shared_ExploreUI_typings__WEBPACK_IMPORTED_MODULE_3__.Lc.height,
                                        buttonWidth: _powerbi_Typings_Modern_Shared_ExploreUI_typings__WEBPACK_IMPORTED_MODULE_3__.Lc.width,
                                        betweenButtonMargin: _powerbi_Typings_Modern_Shared_ExploreUI_typings__WEBPACK_IMPORTED_MODULE_3__.Lc.betweenSkittlesVerticalSpace,
                                        tooltipPosition: "Left" === horizontalLayoutResult.firstLevelFlyout.alignment ? "after" : "before"
                                    },
                                    verticalLayout: verticalLayoutResult,
                                    horizontalLayout: horizontalLayoutResult
                                };
                            }
                        }
                    }
                } else _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_1__.fF.assertFail("Canvas area container is not of type Element");
            } else _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_1__.fF.assertFail("Visual container origin is not of type Element");
        }
        function getSkittleFlyoutPosition(horizontalLayout, verticalLayout, originElement, offsetY) {
            void 0 === offsetY && (offsetY = 0);
            var horizontalSide = horizontalLayout.alignment, maxWidth = horizontalLayout.maxWidth, verticalSide = verticalLayout, pageElement = document.querySelector(_powerbi_legacy_ExploreUI_utils_canvasDisplayUtil__WEBPACK_IMPORTED_MODULE_2__.s.DisplayAreaContainerNameSelector.selector);
            if (pageElement && pageElement instanceof Element) {
                var maxHeight, relativeBounds = getRelativeBounds(pageElement, originElement), relativeSpaceBelow = relativeBounds.pageHeight - relativeBounds.relativeY - 1;
                switch (verticalSide) {
                  case "Top":
                    maxHeight = relativeSpaceBelow - offsetY;
                    break;

                  case "Center":
                    maxHeight = 2 * (relativeSpaceBelow - relativeBounds.originHeight / 2), offsetY = document.documentElement.clientHeight - relativeBounds.originY - offsetY - 1 - relativeSpaceBelow + offsetY;
                    break;

                  case "Bottom":
                    maxHeight = relativeBounds.originY + relativeBounds.originHeight - offsetY;
                }
                return {
                    position: [ getConnectedPosition(horizontalSide, verticalSide, _powerbi_Typings_Modern_Shared_ExploreUI_typings__WEBPACK_IMPORTED_MODULE_3__.Lc.marginHorizontal, offsetY) ],
                    height: void 0,
                    width: _powerbi_Typings_Modern_Shared_ExploreUI_typings__WEBPACK_IMPORTED_MODULE_3__.Lc.childOverlayWidth,
                    maxHeight,
                    maxWidth,
                    minWidth: _powerbi_Typings_Modern_Shared_ExploreUI_typings__WEBPACK_IMPORTED_MODULE_3__.Lc.childOverlayWidth
                };
            }
        }
        function getRelativeBounds(pageElement, originElement) {
            var originBoundingRect = originElement.getBoundingClientRect(), pageBoundingRect = pageElement.getBoundingClientRect();
            return {
                pageHeight: pageBoundingRect.height,
                pageWidth: pageBoundingRect.width,
                pageX: pageBoundingRect.x,
                pageY: pageBoundingRect.y,
                originHeight: originBoundingRect.height,
                originWidth: originBoundingRect.width,
                originX: originBoundingRect.x,
                originY: originBoundingRect.y,
                relativeX: originBoundingRect.x - pageBoundingRect.x,
                relativeY: originBoundingRect.y - pageBoundingRect.y
            };
        }
        function getConnectedPosition(h, v, horizontalMargin, offsetY) {
            if (null == horizontalMargin && null == offsetY) return positionFunctions["".concat(h).concat(v)]();
            var offsetX = "Left" === h || "RightInside" === h ? -horizontalMargin : horizontalMargin;
            return positionFunctions["".concat(h).concat(v)](offsetX, offsetY);
        }
        function calcAvailableHorizontalFirstLevelFlyoutWidth(relativeBounds, skittleButtonsHorizontalLayout, firstLevelFlyoutHorizontalLayout, secondLevelFlyoutHorizontalLayout) {
            var pageWidth = relativeBounds.pageWidth, originWidth = relativeBounds.originWidth, relativeX = relativeBounds.relativeX, skittleButtonWidth = _powerbi_Typings_Modern_Shared_ExploreUI_typings__WEBPACK_IMPORTED_MODULE_3__.Lc.width + 2 * _powerbi_Typings_Modern_Shared_ExploreUI_typings__WEBPACK_IMPORTED_MODULE_3__.Lc.marginHorizontal, flyoutWidth = _powerbi_Typings_Modern_Shared_ExploreUI_typings__WEBPACK_IMPORTED_MODULE_3__.Lc.childOverlayWidth + _powerbi_Typings_Modern_Shared_ExploreUI_typings__WEBPACK_IMPORTED_MODULE_3__.Lc.marginHorizontal;
            if ("Right" === skittleButtonsHorizontalLayout) {
                if ("Right" !== firstLevelFlyoutHorizontalLayout) return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_1__.fF.assert(function() {
                    return "Left" === firstLevelFlyoutHorizontalLayout && "Left" === secondLevelFlyoutHorizontalLayout;
                }, "Skittle buttons right; Should match combination in getHorizontalLayout"), relativeX + originWidth - flyoutWidth;
                if ("Right" === secondLevelFlyoutHorizontalLayout) return pageWidth - (relativeX + originWidth) - skittleButtonWidth - flyoutWidth;
                if ("Left" === secondLevelFlyoutHorizontalLayout) return pageWidth - (relativeX + originWidth) - skittleButtonWidth;
            } else if ("Left" === skittleButtonsHorizontalLayout) {
                if ("Left" === firstLevelFlyoutHorizontalLayout) {
                    if ("Right" === secondLevelFlyoutHorizontalLayout) return relativeX - skittleButtonWidth;
                    if ("Left" === secondLevelFlyoutHorizontalLayout) return relativeX - skittleButtonWidth - flyoutWidth;
                } else if ("Right" === firstLevelFlyoutHorizontalLayout) return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_1__.fF.assert(function() {
                    return "Right" === secondLevelFlyoutHorizontalLayout;
                }, "SkittlePosition left; should match combinations in getHorizontalLayout"), pageWidth - relativeX - flyoutWidth;
            } else if ("RightInside" === skittleButtonsHorizontalLayout) return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_1__.fF.assert(function() {
                return "Left" === firstLevelFlyoutHorizontalLayout && "Left" === secondLevelFlyoutHorizontalLayout;
            }, "Skittle buttons are RightInside, but should match combination in getHorizontalLayout"), 
            relativeX + originWidth - skittleButtonWidth - flyoutWidth;
            return _powerbi_Typings_Modern_Shared_ExploreUI_typings__WEBPACK_IMPORTED_MODULE_3__.Lc.childOverlayWidth;
        }
    },
    98476: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            f: function() {
                return getLastItemPosition;
            }
        });
        var _powerbi_legacy_PowerBIVisuals_VisualsData_semanticQuery_sqExprEqualityVisitor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(45413), _powerbi_legacy_PowerBIVisuals_VisualsData_semanticQuery_sqExprStaticMembers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(74082);
        function isFieldMetadata(item) {
            return void 0 !== item.pickerDataExpr;
        }
        function getLastItemPosition(fieldExpr, items) {
            for (var isFieldExprHierarchyLevel = (0, _powerbi_legacy_PowerBIVisuals_VisualsData_semanticQuery_sqExprStaticMembers__WEBPACK_IMPORTED_MODULE_0__.ez)(fieldExpr), i = items.length - 1; i >= 0; i--) {
                var item = items[i], itemExpr = item.expr;
                if (isFieldExprHierarchyLevel && (0, _powerbi_legacy_PowerBIVisuals_VisualsData_semanticQuery_sqExprStaticMembers__WEBPACK_IMPORTED_MODULE_0__.y3)(itemExpr)) {
                    var secondLevel, firstLevel = i;
                    if ((secondLevel = isFieldMetadata(item) ? _.findIndex(item.children, function(child) {
                        return (0, _powerbi_legacy_PowerBIVisuals_VisualsData_semanticQuery_sqExprEqualityVisitor__WEBPACK_IMPORTED_MODULE_1__.fS)(child.expr, fieldExpr);
                    }) : _.findIndex(item.hierarchyLevels, function(hierarchyLevel) {
                        return (0, _powerbi_legacy_PowerBIVisuals_VisualsData_semanticQuery_sqExprEqualityVisitor__WEBPACK_IMPORTED_MODULE_1__.fS)(hierarchyLevel.expr, fieldExpr);
                    })) >= 0) return [ firstLevel, secondLevel ];
                }
                if ((0, _powerbi_legacy_PowerBIVisuals_VisualsData_semanticQuery_sqExprStaticMembers__WEBPACK_IMPORTED_MODULE_0__.iV)(itemExpr) && (itemExpr = itemExpr.arg), 
                (0, _powerbi_legacy_PowerBIVisuals_VisualsData_semanticQuery_sqExprEqualityVisitor__WEBPACK_IMPORTED_MODULE_1__.fS)(itemExpr, fieldExpr)) return [ i ];
            }
        }
    }
} ]);