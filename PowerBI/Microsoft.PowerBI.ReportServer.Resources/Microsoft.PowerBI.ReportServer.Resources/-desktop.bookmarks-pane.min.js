"use strict";

(self.webpackChunkdesktop = self.webpackChunkdesktop || []).push([ [ "bookmarks-pane" ], {
    6396: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, {
            BookmarksPaneModule: function() {
                return BookmarksPaneModule;
            }
        });
        var ExploreUI_module = __webpack_require__(87121), tslib_es6 = __webpack_require__(81337), core = __webpack_require__(50423), bookmark_service = __webpack_require__(17966), drill_to_details_service = __webpack_require__(67456), exploration_capabilities_service = __webpack_require__(48145), feature_switch_service = __webpack_require__(9380), high_contrast_css_generation_service = __webpack_require__(64647), lazy_scoped_provider = __webpack_require__(28894), localization_service = __webpack_require__(65181), view_mode_state_service = __webpack_require__(77200), common = __webpack_require__(77476), bookmark_tree_component = __webpack_require__(24630), localize_directive = __webpack_require__(59968), localize_tooltip_directive = __webpack_require__(50057), _c0 = function(a0) {
            return {
                disabled: a0
            };
        };
        function BookmarkListComponent_button_4_Template(rf, ctx) {
            if (1 & rf) {
                var _r5 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "button", 9), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r5);
                    var ctx_r4 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r4.switchPlayMode());
                }), core["\u0275\u0275element"](1, "i", 10)(2, "span", 11), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("ngClass", core["\u0275\u0275pureFunction1"](2, _c0, !ctx_r0.hasBookmarks()))("disabled", !ctx_r0.hasBookmarks());
            }
        }
        function BookmarkListComponent_button_5_Template(rf, ctx) {
            if (1 & rf) {
                var _r7 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "button", 12), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r7);
                    var ctx_r6 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r6.switchPlayMode());
                }), core["\u0275\u0275element"](1, "i", 13)(2, "span", 14), core["\u0275\u0275elementEnd"]();
            }
        }
        function BookmarkListComponent_div_7_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 15), core["\u0275\u0275element"](1, "bookmark-tree", 16), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r2 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("pbiScrollbar", ctx_r2.scrollbarsConfig), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275property"]("bookmarks", ctx_r2.bookmarks)("selectedBookmark", ctx_r2.selectedBookmark), 
                core["\u0275\u0275attribute"]("aria-multiselectable", ctx_r2.isEditable());
            }
        }
        function BookmarkListComponent_div_8_div_1_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementStart"](0, "div", 20), core["\u0275\u0275element"](1, "pbi-svg-use-symbol", 21), 
            core["\u0275\u0275elementEnd"]()), 2 & rf && (core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("sheet", "bookmarksPaneIcons")("symbolId", "bookmarks_empty"));
        }
        function BookmarkListComponent_div_8_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 17), core["\u0275\u0275template"](1, BookmarkListComponent_div_8_div_1_Template, 2, 2, "div", 18), 
            core["\u0275\u0275element"](2, "span", 19), core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r3 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !ctx_r3.newPaneColorsEnabled), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("innerHtml", ctx_r3.bookmarksInfo, core["\u0275\u0275sanitizeHtml"]);
            }
        }
        var _c1 = function(a0) {
            return {
                "bookmark-empty": a0
            };
        }, BookmarkListComponent = function() {
            function BookmarkListComponent(bookmarkService, drillToDetails, explorationCapabilities, featureSwitchService, highContrastCssGenerationService, lazyScoped, localizationService, viewModeState) {
                this.bookmarkService = bookmarkService, this.drillToDetails = drillToDetails, this.explorationCapabilities = explorationCapabilities, 
                this.featureSwitchService = featureSwitchService, this.highContrastCssGenerationService = highContrastCssGenerationService, 
                this.lazyScoped = lazyScoped, this.localizationService = localizationService, this.viewModeState = viewModeState, 
                this.scrollbarsConfig = {
                    ignoreOverlay: !1,
                    ignoreMobile: !1
                }, this.newPaneColorsEnabled = this.explorationCapabilities.getCapabilities().showFluentDesign || this.featureSwitchService.featureSwitches && this.featureSwitchService.featureSwitches.paneColorRefresh, 
                this.initializeHighContrastRules(), this.bookmarkAuthoringServicePromise = this.lazyScoped.get("bookmarkAuthoringService"), 
                this.bookmarksInfo = this.localizationService.format("ExplorationBookmarks_Info", [ this.localizationService.get("ItemAction_Add") ]);
            }
            return BookmarkListComponent.prototype.isPlayMode = function() {
                return 0 === this.viewModeState.getViewState().bookmarkView;
            }, BookmarkListComponent.prototype.switchPlayMode = function() {
                var isPlayMode = !this.isPlayMode();
                this.bookmarkService.setPlayMode(isPlayMode);
            }, BookmarkListComponent.prototype.add = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.bookmarkAuthoringServicePromise ];

                          case 1:
                            return [ 2, _a.sent().add() ];
                        }
                    });
                });
            }, BookmarkListComponent.prototype.canAdd = function() {
                return this.isEditable() && !this.drillToDetails.hasContext();
            }, BookmarkListComponent.prototype.isEditable = function() {
                return 1 === this.viewModeState.getMode() && !this.isPlayMode();
            }, BookmarkListComponent.prototype.hasBookmarks = function() {
                return this.bookmarks && this.bookmarks.length > 0;
            }, BookmarkListComponent.prototype.initializeHighContrastRules = function() {
                this.highContrastCssGenerationService.addRule(".themeableElement div.bookmark.append", "{ border-bottom-color: @selectedBackgroundColor !important; }");
            }, BookmarkListComponent.\u0275fac = function(t) {
                return new (t || BookmarkListComponent)(core["\u0275\u0275directiveInject"](bookmark_service.F), core["\u0275\u0275directiveInject"](drill_to_details_service.M), core["\u0275\u0275directiveInject"](exploration_capabilities_service.U), core["\u0275\u0275directiveInject"](feature_switch_service.vZ), core["\u0275\u0275directiveInject"](high_contrast_css_generation_service.g), core["\u0275\u0275directiveInject"](lazy_scoped_provider.H), core["\u0275\u0275directiveInject"](localization_service.o), core["\u0275\u0275directiveInject"](view_mode_state_service.kc));
            }, BookmarkListComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: BookmarkListComponent,
                selectors: [ [ "bookmark-list" ] ],
                inputs: {
                    bookmarks: "bookmarks",
                    selectedBookmark: "selectedBookmark"
                },
                decls: 9,
                vars: 11,
                consts: [ [ 1, "bookmark-actions" ], [ "data-testid", "bookmark-add-btn", "localize-tooltip", "ItemAction_Add", 1, "bookmark-icon", 3, "ngClass", "disabled", "click" ], [ 1, "glyphicon", "pbi-glyph-bookmark-add", "glyph-small" ], [ "localize", "ItemAction_Add" ], [ "class", "bookmark-icon", "data-testid", "view-report-bookmark", "localize-tooltip", "ItemAction_View", 3, "ngClass", "disabled", "click", 4, "ngIf" ], [ "data-testid", "bookmark-exit", "class", "bookmark-icon", "localize-tooltip", "ExplorationBookmarks_Exit", 3, "click", 4, "ngIf" ], [ 1, "bookmark-content", 3, "ngClass" ], [ "class", "bookmark-list", 3, "pbiScrollbar", 4, "ngIf" ], [ "class", "bookmark-empty-list", 4, "ngIf" ], [ "data-testid", "view-report-bookmark", "localize-tooltip", "ItemAction_View", 1, "bookmark-icon", 3, "ngClass", "disabled", "click" ], [ 1, "glyphicon", "pbi-glyph-bookmark-view", "glyph-small" ], [ "localize", "ItemAction_View" ], [ "data-testid", "bookmark-exit", "localize-tooltip", "ExplorationBookmarks_Exit", 1, "bookmark-icon", 3, "click" ], [ 1, "glyphicon", "pbi-glyph-exit", "glyph-small" ], [ "localize", "ExplorationBookmarks_Exit" ], [ 1, "bookmark-list", 3, "pbiScrollbar" ], [ "role", "tree", 3, "bookmarks", "selectedBookmark" ], [ 1, "bookmark-empty-list" ], [ "class", "bookmark-empty-icon-wrapper", 4, "ngIf" ], [ 1, "bookmark-info", 3, "innerHtml" ], [ 1, "bookmark-empty-icon-wrapper" ], [ 3, "sheet", "symbolId" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementStart"](0, "div", 0)(1, "button", 1), core["\u0275\u0275listener"]("click", function() {
                        return ctx.add();
                    }), core["\u0275\u0275element"](2, "i", 2)(3, "span", 3), core["\u0275\u0275elementEnd"](), 
                    core["\u0275\u0275template"](4, BookmarkListComponent_button_4_Template, 3, 4, "button", 4), 
                    core["\u0275\u0275template"](5, BookmarkListComponent_button_5_Template, 3, 0, "button", 5), 
                    core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](6, "div", 6), 
                    core["\u0275\u0275template"](7, BookmarkListComponent_div_7_Template, 2, 4, "div", 7), 
                    core["\u0275\u0275template"](8, BookmarkListComponent_div_8_Template, 3, 2, "div", 8), 
                    core["\u0275\u0275elementEnd"]()), 2 & rf && (core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngClass", core["\u0275\u0275pureFunction1"](7, _c0, !ctx.canAdd()))("disabled", !ctx.canAdd()), 
                    core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngIf", !ctx.isPlayMode()), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx.isPlayMode()), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngClass", core["\u0275\u0275pureFunction1"](9, _c1, !ctx.hasBookmarks())), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx.hasBookmarks()), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !ctx.hasBookmarks()));
                },
                dependencies: [ common.NgClass, common.NgIf, bookmark_tree_component.m, localize_directive.X, localize_tooltip_directive.r ],
                styles: [ '[_nghost-%COMP%]{--bookmark-action-color: var(--gray-40, #E1DFDD);--bookmark-icon-color: var(--gray-180, #252423);--bookmark-icon-disabled-color: var(--gray-80, #B3B0AD);display:flex;flex-direction:column;flex:1 0 auto;text-align:left;align-self:stretch}[data-legacy-theming=false]   [_nghost-%COMP%]{--bookmark-action-color: var(--colorNeutralForeground1);--bookmark-icon-color: var(--colorNeutralForeground1);--bookmark-icon-disabled-color: var(--colorNeutralForegroundDisabled)}[_nghost-%COMP%]   .bookmark-actions[_ngcontent-%COMP%]{align-items:center;border-bottom:1px solid var(--bookmark-action-color);border-color:var(--bookmark-action-color);display:flex;flex-direction:row;flex:none;font-size:12px;height:32px;padding-left:8px}[_nghost-%COMP%]   .bookmark-actions[_ngcontent-%COMP%]   button.bookmark-icon[_ngcontent-%COMP%]{background:transparent;color:var(--bookmark-icon-color);display:flex;flex-direction:row;font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);margin-right:16px}[_nghost-%COMP%]   .bookmark-actions[_ngcontent-%COMP%]   button.bookmark-icon.disabled[_ngcontent-%COMP%]{color:var(--bookmark-icon-disabled-color);pointer-events:none}[_nghost-%COMP%]   .bookmark-actions[_ngcontent-%COMP%]   button.bookmark-icon[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{margin-left:4px;color:inherit}[_nghost-%COMP%]   .bookmark-actions[_ngcontent-%COMP%]   button.bookmark-icon[_ngcontent-%COMP%]   i.glyphicon[_ngcontent-%COMP%]{margin:0}[_nghost-%COMP%]   .bookmark-actions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:focus{outline:none}html[data-focus-source=key]   [_nghost-%COMP%]   .bookmark-actions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:focus{outline:var(--focus-two-tone-outline-definition, auto 1px);outline-color:var(--focus-two-tone-outline-color, -webkit-focus-ring-color)}[_nghost-%COMP%]   .bookmark-content[_ngcontent-%COMP%]{display:flex;flex-direction:column;flex-grow:1;flex-basis:0px;justify-content:space-between;padding-bottom:16px}[_nghost-%COMP%]   .bookmark-content.bookmark-empty[_ngcontent-%COMP%]{justify-content:flex-start}[_nghost-%COMP%]   .bookmark-content.bookmark-empty[_ngcontent-%COMP%]   .bookmark-empty-list[_ngcontent-%COMP%]{display:flex;flex-direction:column;margin-bottom:20px}[_nghost-%COMP%]   .bookmark-content.bookmark-empty[_ngcontent-%COMP%]   .bookmark-empty-list[_ngcontent-%COMP%]   .bookmark-empty-icon-wrapper[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;width:100%}[_nghost-%COMP%]   .bookmark-content.bookmark-empty[_ngcontent-%COMP%]   .bookmark-empty-list[_ngcontent-%COMP%]   .bookmark-info[_ngcontent-%COMP%]{padding:0 20px}[_nghost-%COMP%]   .bookmark-content.bookmark-empty[_ngcontent-%COMP%]   .bookmark-empty-list[_ngcontent-%COMP%]   .bookmark-info[_ngcontent-%COMP%]   .bookmark-list[_ngcontent-%COMP%]{padding:0 2px}[_nghost-%COMP%]   .bookmark-content.bookmark-empty[_ngcontent-%COMP%]   .bookmark-help[_ngcontent-%COMP%]{padding:6px 20px 0}[_nghost-%COMP%]   .bookmark-content[_ngcontent-%COMP%]   .bookmark-list[_ngcontent-%COMP%]{display:block;flex:1 1 0px;overflow-y:auto;box-sizing:border-box;align-items:stretch;padding:0 4px}[_nghost-%COMP%]   .bookmark-content[_ngcontent-%COMP%]   .bookmark-list[_ngcontent-%COMP%]   .scroll-content.scroll-scrolly_visible[_ngcontent-%COMP%]{padding-right:10px}' ]
            }), BookmarkListComponent;
        }(), map = __webpack_require__(14172), events = __webpack_require__(10556), exploreUITelemetryUtil = __webpack_require__(9500), Telemetry = __webpack_require__(21617), panes_visibility_service = __webpack_require__(21024), bookmarks_pane_content_component = __webpack_require__(84921), pbi_auto_focus_directive = __webpack_require__(54932), keyboard_shortcuts_directive = __webpack_require__(35756), pbi_pane_component = __webpack_require__(21023), pbi_pane_section_component = __webpack_require__(24548);
        function BookmarksPaneComponent_pbi_pane_0_bookmarks_pane_content_3_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "bookmarks-pane-content", 5), 2 & rf) {
                var viewModel_r1 = core["\u0275\u0275nextContext"]().ngIf, ctx_r2 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("bookmarks", ctx_r2.bookmarks)("hidden", !viewModel_r1.isPaneExpanded)("selectedBookmark", ctx_r2.selectedBookmark)("supportExpandablePanels", ctx_r2.isExpandablePanelSupported());
            }
        }
        var bookmarks_pane_component_c0 = function(a0) {
            return {
                isCollapsed: a0
            };
        };
        function BookmarksPaneComponent_pbi_pane_0_Template(rf, ctx) {
            if (1 & rf) {
                var _r5 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "pbi-pane", 1), core["\u0275\u0275listener"]("onCollapse", function() {
                    core["\u0275\u0275restoreView"](_r5);
                    var ctx_r4 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r4.onPaneCollapsed());
                })("onToggle", function() {
                    core["\u0275\u0275restoreView"](_r5);
                    var ctx_r6 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r6.togglePane());
                }), core["\u0275\u0275elementStart"](1, "pbi-pane-section", 2)(2, "article", 3), 
                core["\u0275\u0275template"](3, BookmarksPaneComponent_pbi_pane_0_bookmarks_pane_content_3_Template, 1, 4, "bookmarks-pane-content", 4), 
                core["\u0275\u0275elementEnd"]()()();
            }
            if (2 & rf) {
                var viewModel_r1 = ctx.ngIf, ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("expanded", viewModel_r1.isPaneExpanded)("allowToggle", !ctx_r0.isPaneSwitcherSupported)("title", viewModel_r1.title)("optionsSetting", ctx_r0.isPaneSwitcherSupported ? viewModel_r1.optionsSetting : void 0)("showCollapse", ctx_r0.isPaneSwitcherSupported), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngClass", core["\u0275\u0275pureFunction1"](7, bookmarks_pane_component_c0, !viewModel_r1.isPaneExpanded)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", viewModel_r1.isPaneVisible);
            }
        }
        var BookmarksPaneComponent = function() {
            function BookmarksPaneComponent(panesVisibility, featureSwitchService, telemetryService, viewModeState) {
                this.panesVisibility = panesVisibility, this.featureSwitchService = featureSwitchService, 
                this.telemetryService = telemetryService, this.viewModeState = viewModeState, this.viewModel$ = this.panesVisibility.getPanes$().pipe((0, 
                map.U)(function(panes) {
                    return panes.bookmarks;
                })), this.core = new BookmarksPaneCore({
                    featureSwitchService: this.featureSwitchService,
                    panesVisibility: this.panesVisibility,
                    telemetryService: this.telemetryService,
                    viewModeState: this.viewModeState
                });
            }
            return Object.defineProperty(BookmarksPaneComponent.prototype, "bookmarks", {
                get: function() {
                    return this.core.bookmarks;
                },
                set: function(value) {
                    this.core.bookmarks = value;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(BookmarksPaneComponent.prototype, "selectedBookmark", {
                get: function() {
                    return this.core.selectedBookmark;
                },
                set: function(value) {
                    this.core.selectedBookmark = value;
                },
                enumerable: !1,
                configurable: !0
            }), BookmarksPaneComponent.prototype.onPaneCollapsed = function() {
                this.core.onPaneCollapsed();
            }, BookmarksPaneComponent.prototype.togglePane = function() {
                this.core.togglePane();
            }, BookmarksPaneComponent.prototype.isExpandablePanelSupported = function() {
                return this.core.isExpandablePanelSupported();
            }, Object.defineProperty(BookmarksPaneComponent.prototype, "bookmarksPaneModulePath", {
                get: function() {
                    return "@powerbi/ExploreUI/lazy-modules/bookmarks-pane/bookmarks-pane.module#BookmarksPaneModule";
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(BookmarksPaneComponent.prototype, "isPaneSwitcherSupported", {
                get: function() {
                    return this.core.isPaneSwitcherSupported;
                },
                enumerable: !1,
                configurable: !0
            }), BookmarksPaneComponent.\u0275fac = function(t) {
                return new (t || BookmarksPaneComponent)(core["\u0275\u0275directiveInject"](panes_visibility_service.r), core["\u0275\u0275directiveInject"](feature_switch_service.vZ), core["\u0275\u0275directiveInject"](Telemetry.y0), core["\u0275\u0275directiveInject"](view_mode_state_service.kc));
            }, BookmarksPaneComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: BookmarksPaneComponent,
                selectors: [ [ "bookmarks-pane" ] ],
                inputs: {
                    bookmarks: "bookmarks",
                    selectedBookmark: "selectedBookmark"
                },
                decls: 2,
                vars: 3,
                consts: [ [ "class", "bookmarks-pane", "noPadding", "", "disableScroll", "", "pbiAutoFocus", "", "keyboard-shortcuts", "ctrl-F6", "data-testid", "bookmarks-pane-id", "focus-priority", "9", "focus-nav-mode", "Group", 3, "expanded", "allowToggle", "title", "optionsSetting", "showCollapse", "onCollapse", "onToggle", 4, "ngIf" ], [ "noPadding", "", "disableScroll", "", "pbiAutoFocus", "", "keyboard-shortcuts", "ctrl-F6", "data-testid", "bookmarks-pane-id", "focus-priority", "9", "focus-nav-mode", "Group", 1, "bookmarks-pane", 3, "expanded", "allowToggle", "title", "optionsSetting", "showCollapse", "onCollapse", "onToggle" ], [ "noPadding", "", 1, "pane-section" ], [ "modeling-context-changer", "", 1, "bookmarksPane", 3, "ngClass" ], [ "data-testid", "bookmarks-pane-content", 3, "bookmarks", "hidden", "selectedBookmark", "supportExpandablePanels", 4, "ngIf" ], [ "data-testid", "bookmarks-pane-content", 3, "bookmarks", "hidden", "selectedBookmark", "supportExpandablePanels" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275template"](0, BookmarksPaneComponent_pbi_pane_0_Template, 4, 9, "pbi-pane", 0), 
                    core["\u0275\u0275pipe"](1, "async")), 2 & rf && core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](1, 1, ctx.viewModel$));
                },
                dependencies: [ common.NgClass, common.NgIf, bookmarks_pane_content_component.P, pbi_auto_focus_directive.r, keyboard_shortcuts_directive.q, pbi_pane_component.VO, pbi_pane_section_component.i, common.AsyncPipe ],
                styles: [ ".bookmarks-pane[_ngcontent-%COMP%]   .pane-section[_ngcontent-%COMP%]{flex-grow:1}  .mat-expansion-panel .mat-expansion-panel-header{padding-left:8px!important;padding-right:8px!important}  .bookmarksPane{height:100%}  .bookmarksPane .paneContents{display:flex!important}  exploration-pane-header{padding-right:8px}  .explorationContainer div.bookmark{--bookmark-drag-border-color: var(--fluent-theme-primary-color, #F2C811);display:flex;flex:0 0 auto;align-items:center;cursor:pointer;height:24px;padding:0;font-size:var(--sm-font-size, 12px);box-sizing:border-box;justify-content:space-between;background-color:var(--fluent-theme-neutral-dark-secondary-color, #33332D);color:var(--fluent-theme-neutral-lighter-color, #F3F2F1);border:1px solid transparent}  [data-legacy-theming=false]   .explorationContainer div.bookmark{--bookmark-drag-border-color: var(--colorBrandBackground)}  .explorationContainer div.bookmark.append{border-bottom-color:var(--bookmark-drag-border-color)!important}  .explorationContainer div.bookmark.prepend{border-top-color:var(--bookmark-drag-border-color)!important}  .explorationContainer div.bookmark li{font-size:16px}  .explorationContainer div.bookmark.bookmark-selected{background-color:var(--fluent-theme-neutral-secondary-color, #605E5C)}  .explorationContainer div.bookmark.disabled{color:var(--fluent-theme-neutral-tertiary-color, #A19F9D)}  .explorationContainer div.bookmark.child-bookmark{padding:0 0 0 20px}  .explorationContainer div.bookmark:hover{background-color:var(--fluent-theme-neutral-primary-alt-color, #3B3A39)}  .explorationContainer div.bookmark:hover .menuContainer .optionsMenu .glyphicon{color:var(--colorNeutralForeground1);opacity:1}  .explorationContainer div.bookmark.bookmark-selected .menuContainer .optionsMenu .glyphicon,   .explorationContainer div.bookmark:hover .menuContainer .optionsMenu .glyphicon{color:var(--colorNeutralForeground1Hover);opacity:1}  .explorationContainer div.bookmark .title{flex-basis:100%;flex-grow:1;text-overflow:ellipsis;overflow:hidden;white-space:nowrap}  .explorationContainer div.bookmark .title .textLabel,   .explorationContainer div.bookmark .title .textInput{margin:0 6px}  .explorationContainer div.bookmark .title input{width:100%}  .explorationContainer div.bookmark i.menuContainer{padding:0 6px 0 0}  .newPaneColors.explorationContainer div.bookmark{--bookmark-button-bg-color: var(--gray-20, #F3F2F1);--bookmark-button-hover-bg-color: var(--gray-30, #EDEBE9);--bookmark-button-focus-bg-color: var(--gray-50, #D2D0CE);--bookmark-button-disabled-bg-color: var(--gray-80, #B3B0AD);--bookmark-text-color: var(--gray-180, #252423);background-color:var(--bookmark-button-bg-color);color:var(--bookmark-text-color);border-radius:2px;height:26px}  [data-legacy-theming=false]   .newPaneColors.explorationContainer div.bookmark{--bookmark-button-bg-color: var(--colorNeutralBackground1);--bookmark-button-hover-bg-color: var(--colorNeutralBackground1Hover);--bookmark-button-focus-bg-color: var(--colorNeutralBackground1Selected);--bookmark-button-disabled-bg-color: var(--colorNeutralBackgroundDisabled);--bookmark-text-color: var(--colorNeutralForeground1)}  .newPaneColors.explorationContainer div.bookmark.bookmark-selected{background-color:var(--bookmark-button-focus-bg-color)}  .newPaneColors.explorationContainer div.bookmark.disabled{color:var(--bookmark-button-disabled-bg-color)}  .newPaneColors.explorationContainer div.bookmark:hover{background-color:var(--bookmark-button-hover-bg-color)}html[data-focus-source=key][_ngcontent-%COMP%]     .newPaneColors.explorationContainer div.bookmark:focus{outline:var(--focus-two-tone-outline-definition, auto 1px);outline-color:var(--focus-two-tone-outline-color, -webkit-focus-ring-color)}" ]
            }), BookmarksPaneComponent;
        }(), BookmarksPaneCore = function() {
            function BookmarksPaneCore(services) {
                this.services = services;
            }
            return BookmarksPaneCore.prototype.onPaneCollapsed = function() {
                this.services.panesVisibility.setPaneExpansion("bookmarks", !1), this.services.telemetryService.logEvent(events.vLR, {
                    paneType: "Bookmarks",
                    expanded: !1,
                    viewMode: (0, exploreUITelemetryUtil.ku)(this.services.viewModeState.getMode())
                });
            }, BookmarksPaneCore.prototype.togglePane = function() {
                var expansionState = this.services.panesVisibility.togglePaneExpansion("bookmarks");
                this.services.telemetryService.logEvent(events.vLR, {
                    paneType: "Bookmarks",
                    expanded: expansionState,
                    viewMode: (0, exploreUITelemetryUtil.ku)(this.services.viewModeState.getMode())
                });
            }, BookmarksPaneCore.prototype.isExpandablePanelSupported = function() {
                return this.services.featureSwitchService.featureSwitches.personalBookmarksUI;
            }, Object.defineProperty(BookmarksPaneCore.prototype, "isPaneSwitcherSupported", {
                get: function() {
                    return this.services.panesVisibility.isPaneSwitcherSupported();
                },
                enumerable: !1,
                configurable: !0
            }), BookmarksPaneCore;
        }(), a11y_module = __webpack_require__(20914), lazy_load_module = __webpack_require__(82156), localization_module = __webpack_require__(79061), pbi_pane_module = __webpack_require__(13254), lazyLoadManifests = [ {
            type: BookmarkListComponent,
            componentId: "BookmarkListComponentId"
        }, {
            type: BookmarksPaneComponent,
            componentId: "BookmarksPaneComponentId"
        } ], BookmarksPaneModule = function() {
            function BookmarksPaneModule() {}
            return BookmarksPaneModule.\u0275fac = function(t) {
                return new (t || BookmarksPaneModule);
            }, BookmarksPaneModule.\u0275mod = core["\u0275\u0275defineNgModule"]({
                type: BookmarksPaneModule
            }), BookmarksPaneModule.\u0275inj = core["\u0275\u0275defineInjector"]({
                imports: [ common.CommonModule, ExploreUI_module.J, lazy_load_module.N.withManifests(lazyLoadManifests), localization_module.v, a11y_module._, pbi_pane_module.x ]
            }), BookmarksPaneModule;
        }();
    }
} ]);