"use strict";

(self.webpackChunkdesktop = self.webpackChunkdesktop || []).push([ [ "shapeMapBehaviors" ], {
    15841: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, {
            ShapeMapBehavior: function() {
                return ShapeMapBehavior;
            }
        });
        var _Visuals_common_renderUtil__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(60066), _Visuals_common_eventBubblingUtil__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(66232), _Visuals_common_interactivityUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(30237), _Visuals_common_tooltipUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(38400), _VisualsCommon_Utility_browserUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(59107), ShapeMapBehavior = function() {
            function ShapeMapBehavior() {}
            return ShapeMapBehavior.prototype.onClick = function(d, selectionHandler) {
                var datapoint = this.shapeMap.getDataPointFromShape(d);
                datapoint ? (0, _Visuals_common_interactivityUtils__WEBPACK_IMPORTED_MODULE_0__.c8)({
                    identity: datapoint.categoryIdentity,
                    selected: datapoint.selected
                }, selectionHandler) : selectionHandler.handleClearSelection();
            }, ShapeMapBehavior.prototype.bindEvents = function(options, selectionHandler, dataPointNavigationManagerWithKey) {
                var _this = this;
                options.clearCatcher.on("click", function() {
                    var d3Event = d3.event;
                    _VisualsCommon_Utility_browserUtils__WEBPACK_IMPORTED_MODULE_1__.M.isCtrlOrMeta(d3Event) || selectionHandler.handleClearSelection(), 
                    _this.shapeMap.zoomOnClick();
                }), this.shapes = options.shapes, this.shapes.on("click", function(d, i) {
                    _this.onClick(d, selectionHandler), _this.shapeMap.zoomOnClick(d);
                }), this.shapes.on("focus", function() {
                    var d3Event = d3.event, selectedTarget = d3.select(d3Event.target), d = selectedTarget.datum();
                    if (d) {
                        var datapoint = _this.shapeMap.getDataPointFromShape(d);
                        datapoint && selectedTarget.attr("aria-label", (0, _Visuals_common_tooltipUtils__WEBPACK_IMPORTED_MODULE_2__.X)(datapoint.tooltipInfo));
                    }
                }), this.shapes.on("contextmenu", function() {
                    var d3Event = d3.event;
                    if (!_VisualsCommon_Utility_browserUtils__WEBPACK_IMPORTED_MODULE_1__.M.isCtrlOrMeta(d3Event)) {
                        d3Event.preventDefault(), (0, _Visuals_common_eventBubblingUtil__WEBPACK_IMPORTED_MODULE_3__.n)(d3Event);
                        var d = d3.select(d3Event.target).datum();
                        if (d) {
                            var datapoint = _this.shapeMap.getDataPointFromShape(d);
                            if (datapoint) {
                                var position = (0, _Visuals_common_interactivityUtils__WEBPACK_IMPORTED_MODULE_0__.bt)();
                                selectionHandler.handleContextMenu(datapoint, position);
                            }
                        }
                    }
                }), this.shapes.on("keydown.select", function(d) {
                    var keyCode = d3.event.keyCode;
                    32 !== keyCode && 13 !== keyCode || _this.onClick(d, selectionHandler);
                });
            }, ShapeMapBehavior.prototype.renderSelection = function(hasSelection) {
                var _this = this;
                this.shapes.attr("aria-selected", function(d) {
                    var datapoint = _this.shapeMap.getDataPointFromShape(d);
                    return hasSelection && datapoint && datapoint.selected;
                }).transition().duration(600).style("opacity", function(d) {
                    var datapoint = _this.shapeMap.getDataPointFromShape(d);
                    return (0, _Visuals_common_renderUtil__WEBPACK_IMPORTED_MODULE_4__.eR)(datapoint && datapoint.selected, !1, hasSelection, !1);
                });
            }, ShapeMapBehavior;
        }();
    }
} ]);