"use strict";

(self.webpackChunkdesktop = self.webpackChunkdesktop || []).push([ [ "custom-visuals-store" ], {
    70538: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, {
            CustomVisualsStoreModule: function() {
                return CustomVisualsStoreModule;
            }
        });
        var tslib_es6 = __webpack_require__(81337), events = __webpack_require__(12974), http_core_service = __webpack_require__(629), Telemetry = __webpack_require__(21617), CustomVisualsStoreMetaDataProvider = {
            provide: "customVisualsStoreMetadata",
            useFactory: function(httpCoreService, telemetryService) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        return [ 2, new CustomVisualsStoreMetadataService(httpCoreService, telemetryService) ];
                    });
                });
            },
            deps: [ http_core_service.M, Telemetry.y0 ]
        }, CustomVisualsStoreMetadataService = function() {
            function CustomVisualsStoreMetadataService(httpService, telemetryService) {
                this.httpService = httpService, this.telemetryService = telemetryService;
            }
            return CustomVisualsStoreMetadataService.prototype.getCustomVisualsStoreLocation = function() {
                var getUrlEvent = this.telemetryService.startEvent(events.dA), options = this.httpService.powerbiRequestOptions(getUrlEvent.event, "GetCustomVisualsStoreUrl");
                return options.enableTelemetry = !0, this.httpService.get("metadata/customVisualsStore/location/", options).catch(function() {
                    return getUrlEvent.reject();
                });
            }, CustomVisualsStoreMetadataService.prototype.getCustomVisual = function(assetId) {
                var loadingEvent = this.telemetryService.startEvent(events.CO, {
                    assetId
                }), options = this.httpService.powerbiRequestOptions(loadingEvent.event, "GetCustomVisual");
                return options.enableTelemetry = !0, this.httpService.get("metadata/customVisualsStore/assets/" + assetId, options).then(function(result) {
                    return loadingEvent.resolve(), result;
                }).catch(function() {
                    return loadingEvent.reject();
                });
            }, CustomVisualsStoreMetadataService;
        }(), core = __webpack_require__(50423), CustomVisualsStoreModule = function() {
            function CustomVisualsStoreModule() {}
            return CustomVisualsStoreModule.\u0275fac = function(t) {
                return new (t || CustomVisualsStoreModule);
            }, CustomVisualsStoreModule.\u0275mod = core["\u0275\u0275defineNgModule"]({
                type: CustomVisualsStoreModule
            }), CustomVisualsStoreModule.\u0275inj = core["\u0275\u0275defineInjector"]({
                providers: [ CustomVisualsStoreMetaDataProvider ]
            }), CustomVisualsStoreModule;
        }();
    }
} ]);