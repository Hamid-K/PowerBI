"use strict";

(self.webpackChunkdesktop = self.webpackChunkdesktop || []).push([ [ "sensitivity-label-selection-dialog" ], {
    21783: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, {
            SensitivityLabelSelectionDialogModule: function() {
                return SensitivityLabelSelectionDialogModule;
            }
        });
        var sensitivity_label_selection_dialog_identifier = __webpack_require__(61674), tslib_es6 = __webpack_require__(81337), rx_component = __webpack_require__(73221), template_dialog_payload_service = __webpack_require__(67489), BehaviorSubject = __webpack_require__(35510), map = __webpack_require__(14172), takeUntil = __webpack_require__(83317), core = __webpack_require__(50423), template_dialog_component = __webpack_require__(96777), information_protection_dropdown_component = __webpack_require__(51753), localize_directive = __webpack_require__(59968), SensitivityLabelSelectionDialogComponent = function(_super) {
            function SensitivityLabelSelectionDialogComponent(templateDialogPayload) {
                var _this = _super.call(this) || this;
                return _this.templateDialogPayload = templateDialogPayload, _this.selectedLabel$ = new BehaviorSubject.X(void 0), 
                _this;
            }
            return (0, tslib_es6.__extends)(SensitivityLabelSelectionDialogComponent, _super), 
            SensitivityLabelSelectionDialogComponent.prototype.ngOnInit = function() {
                var _this = this;
                this.templateDialogPayload.setOkButtonState(!0), this.selectedLabel$.pipe((0, map.U)(function(selection) {
                    return null != selection && !_.isEmpty(selection.selectedLabelId);
                }), (0, takeUntil.R)(this.onDestroy$)).subscribe(function(hasLabel) {
                    return _this.templateDialogPayload.setOkButtonState(!hasLabel);
                }), this.templateDialogPayload.onOkButtonClick = function() {
                    return Promise.resolve(_this.returnResult());
                }, this.config = this.templateDialogPayload.input;
            }, SensitivityLabelSelectionDialogComponent.prototype.onSelectionChanged = function(selection) {
                this.selectedLabel$.next(selection);
            }, SensitivityLabelSelectionDialogComponent.prototype.returnResult = function() {
                if (null != this.selectedLabel$.value && !_.isEmpty(this.selectedLabel$.value.selectedLabelId)) return {
                    selectedLabel: this.selectedLabel$.value
                };
            }, SensitivityLabelSelectionDialogComponent.\u0275fac = function(t) {
                return new (t || SensitivityLabelSelectionDialogComponent)(core["\u0275\u0275directiveInject"](template_dialog_payload_service.x));
            }, SensitivityLabelSelectionDialogComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: SensitivityLabelSelectionDialogComponent,
                selectors: [ [ "sensitivity-label-selection-dialog" ] ],
                features: [ core["\u0275\u0275ProvidersFeature"]([ template_dialog_payload_service.x ]), core["\u0275\u0275InheritDefinitionFeature"] ],
                decls: 6,
                vars: 2,
                consts: [ [ 1, "sensitivity-label-selection-dialog" ], [ "localize", "Sensitivity", 1, "fluentTheme-md-semiBold" ], [ 3, "viewModel", "onSelectionChange" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementStart"](0, "template-dialog", 0)(1, "p"), core["\u0275\u0275text"](2), 
                    core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](3, "section"), 
                    core["\u0275\u0275element"](4, "label", 1), core["\u0275\u0275elementStart"](5, "information-protection-dropdown", 2), 
                    core["\u0275\u0275listener"]("onSelectionChange", function($event) {
                        return ctx.onSelectionChanged($event);
                    }), core["\u0275\u0275elementEnd"]()()()), 2 & rf && (core["\u0275\u0275advance"](2), 
                    core["\u0275\u0275textInterpolate"](ctx.config.description), core["\u0275\u0275advance"](3), 
                    core["\u0275\u0275property"]("viewModel", ctx.config.informationProtectionData));
                },
                dependencies: [ template_dialog_component.J, information_protection_dropdown_component.c, localize_directive.X ],
                styles: [ '.sensitivity-label-selection-dialog[_ngcontent-%COMP%]{width:490px}.sensitivity-label-selection-dialog[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-semi-bold, 600)}[_nghost-%COMP%]   information-protection-dropdown[_ngcontent-%COMP%]{display:flex;margin-top:4px}[_nghost-%COMP%]   information-protection-dropdown[_ngcontent-%COMP%]     select{flex:1;height:32px;width:100%;padding:0 4px;font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-regular, 400);color:var(--colorNeutralForeground2)}' ],
                changeDetection: 0
            }), SensitivityLabelSelectionDialogComponent;
        }(rx_component.w), common = __webpack_require__(77476), information_protection_ui_common_module = __webpack_require__(53483), localization_module = __webpack_require__(79061), dialogs_module = __webpack_require__(76966), SensitivityLabelSelectionDialogModule = function() {
            function SensitivityLabelSelectionDialogModule() {}
            return SensitivityLabelSelectionDialogModule.\u0275fac = function(t) {
                return new (t || SensitivityLabelSelectionDialogModule);
            }, SensitivityLabelSelectionDialogModule.\u0275mod = core["\u0275\u0275defineNgModule"]({
                type: SensitivityLabelSelectionDialogModule
            }), SensitivityLabelSelectionDialogModule.\u0275inj = core["\u0275\u0275defineInjector"]({
                imports: [ common.CommonModule, dialogs_module.c.withManifest([ {
                    componentIdentifier: sensitivity_label_selection_dialog_identifier.h,
                    componentType: SensitivityLabelSelectionDialogComponent
                } ]), information_protection_ui_common_module.K, localization_module.v ]
            }), SensitivityLabelSelectionDialogModule;
        }();
    }
} ]);