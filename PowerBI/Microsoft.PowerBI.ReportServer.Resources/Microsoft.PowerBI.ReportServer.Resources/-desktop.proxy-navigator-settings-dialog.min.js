"use strict";

(self.webpackChunkdesktop = self.webpackChunkdesktop || []).push([ [ "proxy-navigator-settings-dialog" ], {
    72134: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, {
            ProxyNavigatorSettingsDialogModule: function() {
                return ProxyNavigatorSettingsDialogModule;
            }
        });
        var proxy_navigator_settings_dialog_identifier = __webpack_require__(43045), proxy_navigator_settings_dialog_types = __webpack_require__(36946), dialog = __webpack_require__(32293), core = __webpack_require__(50423), localization_service = __webpack_require__(65181), common = __webpack_require__(77476), localize_directive = __webpack_require__(59968), fesm2022_forms = __webpack_require__(17174), pbi_form_field_component = __webpack_require__(45074), pbi_checkbox_component = __webpack_require__(56011), pbi_dropdown_component = __webpack_require__(76492), pbi_dropdown_item_component = __webpack_require__(42189), pbi_dropdown_item_menu_directive = __webpack_require__(9529), dialog_header_component = __webpack_require__(45051), dialog_body_component = __webpack_require__(53833), dialog_footer_component = __webpack_require__(44511), localize_pipe = __webpack_require__(85102);
        function ProxyNavigatorSettingsDialogComponent_label_13_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementStart"](0, "label", 15), core["\u0275\u0275text"](1), 
            core["\u0275\u0275pipe"](2, "localize"), core["\u0275\u0275elementEnd"]()), 2 & rf && (core["\u0275\u0275advance"](1), 
            core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](2, 1, "ProxyNavigatorSettings_AddTextError"), " "));
        }
        function ProxyNavigatorSettingsDialogComponent_pbi_dropdown_item_20_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "pbi-dropdown-item", 16)(1, "span"), 
            core["\u0275\u0275text"](2), core["\u0275\u0275elementEnd"]()()), 2 & rf) {
                var item_r4 = ctx.$implicit;
                core["\u0275\u0275property"]("value", item_r4), core["\u0275\u0275advance"](2), 
                core["\u0275\u0275textInterpolate"](item_r4.name);
            }
        }
        function ProxyNavigatorSettingsDialogComponent_pbi_dropdown_item_27_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "pbi-dropdown-item", 16)(1, "span"), 
            core["\u0275\u0275text"](2), core["\u0275\u0275elementEnd"]()()), 2 & rf) {
                var item_r5 = ctx.$implicit;
                core["\u0275\u0275property"]("value", item_r5), core["\u0275\u0275advance"](2), 
                core["\u0275\u0275textInterpolate"](item_r5.name);
            }
        }
        function ProxyNavigatorSettingsDialogComponent_pbi_dropdown_item_34_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "pbi-dropdown-item", 16)(1, "span"), 
            core["\u0275\u0275text"](2), core["\u0275\u0275elementEnd"]()()), 2 & rf) {
                var item_r6 = ctx.$implicit;
                core["\u0275\u0275property"]("value", item_r6), core["\u0275\u0275advance"](2), 
                core["\u0275\u0275textInterpolate"](item_r6.name);
            }
        }
        var ProxyNavigatorSettingsDialogComponent = function() {
            function ProxyNavigatorSettingsDialogComponent(dialogRef, localizationService, data) {
                this.dialogRef = dialogRef, this.localizationService = localizationService, this.canSave = !1, 
                this.textInputIsDirty = !1, this.initialSelection = data.initialSelection, this.canIncludeFutureArtifacts = data.canIncludeFutureArtifacts, 
                this.disambiguationTextLocations = [ {
                    name: this.localizationService.get("Prefix"),
                    property: !0
                }, {
                    name: this.localizationService.get("Suffix"),
                    property: !1
                } ], this.targetedModelObjects = [ {
                    name: this.localizationService.get("ProxyNavigatorSettings_ObjectType_All"),
                    property: proxy_navigator_settings_dialog_types.S.All
                }, {
                    name: this.localizationService.get("Tables"),
                    property: proxy_navigator_settings_dialog_types.S.Tables
                }, {
                    name: this.localizationService.get("Measures"),
                    property: proxy_navigator_settings_dialog_types.S.Measures
                } ], this.disambiguationModes = [ {
                    name: this.localizationService.get("Always"),
                    property: proxy_navigator_settings_dialog_types.x.Always
                }, {
                    name: this.localizationService.get("ProxyNavigatorSettings_Mode_ConflictOnly"),
                    property: proxy_navigator_settings_dialog_types.x.ConflictOnly
                } ];
            }
            return ProxyNavigatorSettingsDialogComponent.prototype.ngOnInit = function() {
                this.loadInitialSelection(), this.loadInitialDropdownSelection(), this.fieldValidation();
            }, ProxyNavigatorSettingsDialogComponent.prototype.loadInitialSelection = function() {
                this.initialSelection && (this.includeFutureArtifacts = this.initialSelection.includeFutureArtifacts, 
                this.enableDisambiguationPreferences = this.initialSelection.enableDisambiguationPreferences, 
                this.disambiguationPreferences = this.initialSelection.disambiguationPreferences);
            }, ProxyNavigatorSettingsDialogComponent.prototype.loadInitialDropdownSelection = function() {
                var _this = this;
                this.disambiguationPreferences ? (this.textInputContent = this.disambiguationPreferences.text, 
                this.selectedDisambiguationTextLocation = this.disambiguationTextLocations.find(function(p) {
                    return p.property === _this.disambiguationPreferences.isPrefix;
                }), this.selectedTargetedModelObjects = this.targetedModelObjects.find(function(p) {
                    return p.property === _this.disambiguationPreferences.targetedModelObjects;
                }), this.selectedDisambiguationMode = this.disambiguationModes.find(function(p) {
                    return p.property === _this.disambiguationPreferences.mode;
                })) : (this.selectedDisambiguationTextLocation = this.disambiguationTextLocations.find(function(p) {
                    return !1 === p.property;
                }), this.selectedTargetedModelObjects = this.targetedModelObjects.find(function(p) {
                    return p.property === proxy_navigator_settings_dialog_types.S.All;
                }), this.selectedDisambiguationMode = this.disambiguationModes.find(function(p) {
                    return p.property === proxy_navigator_settings_dialog_types.x.ConflictOnly;
                }), this.disambiguationPreferences = {
                    text: "",
                    isPrefix: this.selectedDisambiguationTextLocation.property,
                    targetedModelObjects: this.selectedTargetedModelObjects.property,
                    mode: this.selectedDisambiguationMode.property
                });
            }, ProxyNavigatorSettingsDialogComponent.prototype.fieldValidation = function() {
                this.textIsValid = !this.enableDisambiguationPreferences || !this.textInputIsDirty || "" !== this.disambiguationPreferences.text.trim();
            }, ProxyNavigatorSettingsDialogComponent.prototype.onTextInputChanged = function() {
                this.textInputIsDirty = !0, this.disambiguationPreferences.text = this.textInputContent, 
                this.fieldValidation(), this.updateCanSave();
            }, ProxyNavigatorSettingsDialogComponent.prototype.onTextLocationChanged = function(selectedDisambiguationTextLocation) {
                this.disambiguationPreferences.isPrefix = this.selectedDisambiguationTextLocation.property, 
                this.updateCanSave();
            }, ProxyNavigatorSettingsDialogComponent.prototype.onTargetedModelObjectsChanged = function(selectedTargetedModelObjects) {
                this.disambiguationPreferences.targetedModelObjects = this.selectedTargetedModelObjects.property, 
                this.updateCanSave();
            }, ProxyNavigatorSettingsDialogComponent.prototype.onDisambiguationModeChanged = function(selectedDisambiguationMode) {
                this.disambiguationPreferences.mode = this.selectedDisambiguationMode.property, 
                this.updateCanSave();
            }, ProxyNavigatorSettingsDialogComponent.prototype.onCancel = function() {
                this.dialogRef.close();
            }, ProxyNavigatorSettingsDialogComponent.prototype.onSave = function() {
                if (this.enableDisambiguationPreferences && "" === this.disambiguationPreferences.text.trim()) return this.textIsValid = !1, 
                void (this.canSave = !1);
                var result = this.getResults();
                result || this.dialogRef.close(), this.dialogRef.close({
                    includeFutureArtifacts: result.includeFutureArtifacts,
                    enableDisambiguationPreferences: result.enableDisambiguationPreferences,
                    disambiguationPreferences: result.disambiguationPreferences
                });
            }, ProxyNavigatorSettingsDialogComponent.prototype.updateCanSave = function() {
                this.canSave = !this.enableDisambiguationPreferences || this.textIsValid;
            }, ProxyNavigatorSettingsDialogComponent.prototype.getResults = function() {
                return {
                    includeFutureArtifacts: this.includeFutureArtifacts,
                    enableDisambiguationPreferences: this.enableDisambiguationPreferences,
                    disambiguationPreferences: this.disambiguationPreferences
                };
            }, ProxyNavigatorSettingsDialogComponent.\u0275fac = function(t) {
                return new (t || ProxyNavigatorSettingsDialogComponent)(core["\u0275\u0275directiveInject"](dialog.so), core["\u0275\u0275directiveInject"](localization_service.o), core["\u0275\u0275directiveInject"](dialog.WI));
            }, ProxyNavigatorSettingsDialogComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: ProxyNavigatorSettingsDialogComponent,
                selectors: [ [ "proxy-navigator-settings-dialog" ] ],
                decls: 37,
                vars: 34,
                consts: [ [ 3, "title", "close" ], [ "name", "future-artifacts-checkbox", 3, "ngModel", "label", "disabled", "ngModelChange" ], [ "name", "disambiguation-checkbox", 3, "ngModel", "label", "ngModelChange" ], [ 1, "preference-settings-field" ], [ "localize", "ProxyNavigatorSettings_AddText" ], [ "pbiInput", "", 1, "pbi-small-text-input", 3, "disabled", "ngModel", "ngModelChange" ], [ "pbiInputError", "", "class", "pbiInputError", 4, "ngIf" ], [ "id", "dropdown-1", "localize", "ProxyNavigatorSettings_As" ], [ "aria-labelledby", "dropdown-1", 3, "ngModel", "isDisabled", "ngModelChange" ], [ 3, "value", 4, "ngFor", "ngForOf" ], [ "id", "dropdown-2", "localize", "To" ], [ "aria-labelledby", "dropdown-2", 3, "ngModel", "isDisabled", "ngModelChange" ], [ "id", "dropdown-3", "localize", "When" ], [ "aria-labelledby", "dropdown-3", 3, "ngModel", "isDisabled", "ngModelChange" ], [ 3, "okText", "disableOk", "okAction", "cancelAction" ], [ "pbiInputError", "", 1, "pbiInputError" ], [ 3, "value" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementStart"](0, "dialog-header", 0), core["\u0275\u0275listener"]("close", function() {
                        return ctx.onCancel();
                    }), core["\u0275\u0275pipe"](1, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](2, "dialog-body")(3, "pbi-checkbox", 1), 
                    core["\u0275\u0275listener"]("ngModelChange", function($event) {
                        return ctx.includeFutureArtifacts = $event;
                    })("ngModelChange", function() {
                        return ctx.updateCanSave();
                    }), core["\u0275\u0275pipe"](4, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](5, "div")(6, "pbi-checkbox", 2), 
                    core["\u0275\u0275listener"]("ngModelChange", function($event) {
                        return ctx.enableDisambiguationPreferences = $event;
                    })("ngModelChange", function() {
                        return ctx.fieldValidation(), ctx.updateCanSave();
                    }), core["\u0275\u0275pipe"](7, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](8, "div", 3), 
                    core["\u0275\u0275element"](9, "label", 4), core["\u0275\u0275elementStart"](10, "pbi-form-field")(11, "input", 5), 
                    core["\u0275\u0275listener"]("ngModelChange", function($event) {
                        return ctx.textInputContent = $event;
                    })("ngModelChange", function() {
                        return ctx.onTextInputChanged();
                    }), core["\u0275\u0275pipe"](12, "localize"), core["\u0275\u0275elementEnd"](), 
                    core["\u0275\u0275template"](13, ProxyNavigatorSettingsDialogComponent_label_13_Template, 3, 3, "label", 6), 
                    core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementStart"](14, "div", 3), 
                    core["\u0275\u0275element"](15, "label", 7), core["\u0275\u0275elementStart"](16, "pbi-dropdown", 8), 
                    core["\u0275\u0275listener"]("ngModelChange", function($event) {
                        return ctx.selectedDisambiguationTextLocation = $event;
                    })("ngModelChange", function($event) {
                        return ctx.onTextLocationChanged($event);
                    }), core["\u0275\u0275elementStart"](17, "pbi-dropdown-trigger")(18, "span"), core["\u0275\u0275text"](19), 
                    core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275template"](20, ProxyNavigatorSettingsDialogComponent_pbi_dropdown_item_20_Template, 3, 2, "pbi-dropdown-item", 9), 
                    core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementStart"](21, "div", 3), 
                    core["\u0275\u0275element"](22, "label", 10), core["\u0275\u0275elementStart"](23, "pbi-dropdown", 11), 
                    core["\u0275\u0275listener"]("ngModelChange", function($event) {
                        return ctx.selectedTargetedModelObjects = $event;
                    })("ngModelChange", function($event) {
                        return ctx.onTargetedModelObjectsChanged($event);
                    }), core["\u0275\u0275elementStart"](24, "pbi-dropdown-trigger")(25, "span"), core["\u0275\u0275text"](26), 
                    core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275template"](27, ProxyNavigatorSettingsDialogComponent_pbi_dropdown_item_27_Template, 3, 2, "pbi-dropdown-item", 9), 
                    core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementStart"](28, "div", 3), 
                    core["\u0275\u0275element"](29, "label", 12), core["\u0275\u0275elementStart"](30, "pbi-dropdown", 13), 
                    core["\u0275\u0275listener"]("ngModelChange", function($event) {
                        return ctx.selectedDisambiguationMode = $event;
                    })("ngModelChange", function($event) {
                        return ctx.onDisambiguationModeChanged($event);
                    }), core["\u0275\u0275elementStart"](31, "pbi-dropdown-trigger")(32, "span"), core["\u0275\u0275text"](33), 
                    core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275template"](34, ProxyNavigatorSettingsDialogComponent_pbi_dropdown_item_34_Template, 3, 2, "pbi-dropdown-item", 9), 
                    core["\u0275\u0275elementEnd"]()()()(), core["\u0275\u0275elementStart"](35, "dialog-footer", 14), 
                    core["\u0275\u0275listener"]("okAction", function() {
                        return ctx.onSave();
                    })("cancelAction", function() {
                        return ctx.onCancel();
                    }), core["\u0275\u0275pipe"](36, "localize"), core["\u0275\u0275elementEnd"]()), 
                    2 & rf && (core["\u0275\u0275property"]("title", core["\u0275\u0275pipeBind1"](1, 24, "Settings")), 
                    core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngModel", ctx.includeFutureArtifacts)("label", core["\u0275\u0275pipeBind1"](4, 26, "ProxyNavigatorSettings_IncludeFutureObjects"))("disabled", !ctx.canIncludeFutureArtifacts), 
                    core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngModel", ctx.enableDisambiguationPreferences)("label", core["\u0275\u0275pipeBind1"](7, 28, "ProxyNavigatorSettings_EnableDisambiguationPreferences")), 
                    core["\u0275\u0275advance"](5), core["\u0275\u0275property"]("disabled", !ctx.enableDisambiguationPreferences)("ngModel", ctx.textInputContent), 
                    core["\u0275\u0275attribute"]("aria-label", core["\u0275\u0275pipeBind1"](12, 30, "ProxyNavigatorSettings_AddText")), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", !ctx.textIsValid), 
                    core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngModel", ctx.selectedDisambiguationTextLocation)("isDisabled", !ctx.enableDisambiguationPreferences), 
                    core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](ctx.selectedDisambiguationTextLocation.name), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngForOf", ctx.disambiguationTextLocations), 
                    core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngModel", ctx.selectedTargetedModelObjects)("isDisabled", !ctx.enableDisambiguationPreferences), 
                    core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](ctx.selectedTargetedModelObjects.name), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngForOf", ctx.targetedModelObjects), 
                    core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngModel", ctx.selectedDisambiguationMode)("isDisabled", !ctx.enableDisambiguationPreferences), 
                    core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](ctx.selectedDisambiguationMode.name), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngForOf", ctx.disambiguationModes), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("okText", core["\u0275\u0275pipeBind1"](36, 32, "PBI_Button_Label_Save"))("disableOk", !ctx.canSave));
                },
                dependencies: [ common.NgForOf, common.NgIf, localize_directive.X, fesm2022_forms.Fj, fesm2022_forms.JJ, fesm2022_forms.On, pbi_form_field_component.bP, pbi_form_field_component.ug, pbi_form_field_component.uC, pbi_checkbox_component.v, pbi_dropdown_component.H, pbi_dropdown_item_component.r, pbi_dropdown_item_menu_directive._, pbi_dropdown_component.T, dialog_header_component.A, dialog_body_component.H, dialog_footer_component.g, localize_pipe.F ],
                styles: [ '[_nghost-%COMP%]{display:flex;flex-direction:column;height:100%;padding:24px,16px;width:387px;box-sizing:border-box}dialog-body[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]{display:flex;height:28px}dialog-body[_ngcontent-%COMP%]   .preference-settings-field[_ngcontent-%COMP%]{display:flex;padding-left:28px;padding-bottom:8px}dialog-body[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{display:inline-block;vertical-align:middle;width:100px;padding-right:8px}dialog-body[_ngcontent-%COMP%]   input[_ngcontent-%COMP%], dialog-body[_ngcontent-%COMP%]   pbi-dropdown[_ngcontent-%COMP%]{display:inline-block;width:175px;height:32px}dialog-body[_ngcontent-%COMP%]   .pbiInputError[_ngcontent-%COMP%]{width:175px}dialog-body[_ngcontent-%COMP%]   pbi-dropdown-trigger[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-regular, 400)}dialog-body[_ngcontent-%COMP%]   pbi-checkbox[_ngcontent-%COMP%]{margin:4px 4px 20px;display:inline-block}' ]
            }), ProxyNavigatorSettingsDialogComponent;
        }(), localization_module = __webpack_require__(79061), dialogs_parts_module = __webpack_require__(96327), dialogs_module = __webpack_require__(76966), pbi_checkbox_module = __webpack_require__(47913), pbi_dropdown_module = __webpack_require__(6015), pbi_form_field_module = __webpack_require__(14525), ProxyNavigatorSettingsDialogModule = function() {
            function ProxyNavigatorSettingsDialogModule() {}
            return ProxyNavigatorSettingsDialogModule.\u0275fac = function(t) {
                return new (t || ProxyNavigatorSettingsDialogModule);
            }, ProxyNavigatorSettingsDialogModule.\u0275mod = core["\u0275\u0275defineNgModule"]({
                type: ProxyNavigatorSettingsDialogModule
            }), ProxyNavigatorSettingsDialogModule.\u0275inj = core["\u0275\u0275defineInjector"]({
                imports: [ common.CommonModule, localization_module.v, fesm2022_forms.u5, pbi_form_field_module.g, pbi_checkbox_module.V, pbi_dropdown_module.C, dialogs_parts_module.F, dialogs_module.c.withManifest([ {
                    componentIdentifier: proxy_navigator_settings_dialog_identifier.S,
                    componentType: ProxyNavigatorSettingsDialogComponent
                } ]) ]
            }), ProxyNavigatorSettingsDialogModule;
        }();
    },
    36946: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            S: function() {
                return TargetedModelObjects;
            },
            x: function() {
                return ModelObjectNameDisambiguationMode;
            }
        });
        var TargetedModelObjects = function(TargetedModelObjects) {
            return TargetedModelObjects[TargetedModelObjects.None = 0] = "None", TargetedModelObjects[TargetedModelObjects.Tables = 1] = "Tables", 
            TargetedModelObjects[TargetedModelObjects.Measures = 2] = "Measures", TargetedModelObjects[TargetedModelObjects.All = 3] = "All", 
            TargetedModelObjects;
        }({}), ModelObjectNameDisambiguationMode = function(ModelObjectNameDisambiguationMode) {
            return ModelObjectNameDisambiguationMode.Always = "Always", ModelObjectNameDisambiguationMode.ConflictOnly = "ConflictOnly", 
            ModelObjectNameDisambiguationMode;
        }({});
    },
    45074: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            bP: function() {
                return PbiFormFieldComponent;
            },
            nm: function() {
                return PbiInputLabelDirective;
            },
            uC: function() {
                return PbiInputErrorDirective;
            },
            ug: function() {
                return PbiInputDirective;
            }
        });
        var _angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(4437), _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(50423), _c0 = [ [ [ "", "pbiLabel", "" ] ], [ [ "", "pbiInput", "" ] ], [ [ "", "pbiInputButton", "" ] ], [ [ "", "pbiInputError", "" ] ] ], _c1 = [ "[pbiLabel]", "[pbiInput]", "[pbiInputButton]", "[pbiInputError]" ], pbiInputIdCounter = 0, PbiInputDirective = function() {
            function PbiInputDirective(elementRef, formField) {
                this.elementRef = elementRef, this.formField = formField;
            }
            return PbiInputDirective.\u0275fac = function(t) {
                return new (t || PbiInputDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275directiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275directiveInject"]((0, 
                _angular_core__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(function() {
                    return PbiFormFieldComponent;
                })));
            }, PbiInputDirective.\u0275dir = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275defineDirective"]({
                type: PbiInputDirective,
                selectors: [ [ "", "pbiInput", "" ] ],
                hostAttrs: [ "autocomplete", "off" ],
                hostVars: 3,
                hostBindings: function(rf, ctx) {
                    2 & rf && _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275attribute"]("aria-required", ctx.required || null)("aria-describedby", null == ctx.formField.error ? null : ctx.formField.error.id)("aria-invalid", ctx.formField.error ? "true" : "false");
                },
                inputs: {
                    required: "required"
                }
            }), PbiInputDirective;
        }(), PbiInputLabelDirective = function() {
            function PbiInputLabelDirective(elementRef, formField) {
                this.elementRef = elementRef, this.formField = formField;
            }
            return PbiInputLabelDirective.\u0275fac = function(t) {
                return new (t || PbiInputLabelDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275directiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275directiveInject"]((0, 
                _angular_core__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(function() {
                    return PbiFormFieldComponent;
                })));
            }, PbiInputLabelDirective.\u0275dir = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275defineDirective"]({
                type: PbiInputLabelDirective,
                selectors: [ [ "", "pbiLabel", "" ] ],
                hostVars: 2,
                hostBindings: function(rf, ctx) {
                    2 & rf && _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275classProp"]("pbi-label-required", null != ctx.formField.input.required);
                }
            }), PbiInputLabelDirective;
        }(), PbiInputErrorDirective = function() {
            function PbiInputErrorDirective() {
                this.id = "pbi-input-error-id-".concat(pbiInputIdCounter++);
            }
            return PbiInputErrorDirective.\u0275fac = function(t) {
                return new (t || PbiInputErrorDirective);
            }, PbiInputErrorDirective.\u0275dir = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275defineDirective"]({
                type: PbiInputErrorDirective,
                selectors: [ [ "", "pbiInputError", "" ] ],
                hostVars: 3,
                hostBindings: function(rf, ctx) {
                    2 & rf && (_angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275attribute"]("id", ctx.id), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275classProp"]("pbi-input-error", !0));
                }
            }), PbiInputErrorDirective;
        }(), PbiFormFieldComponent = function() {
            function PbiFormFieldComponent(renderer) {
                this.renderer = renderer, this._compact = !1;
            }
            return Object.defineProperty(PbiFormFieldComponent.prototype, "compact", {
                get: function() {
                    return this._compact;
                },
                set: function(value) {
                    this._compact = (0, _angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__.Ig)(value);
                },
                enumerable: !1,
                configurable: !0
            }), PbiFormFieldComponent.prototype.ngAfterContentInit = function() {
                if (this.input && this.label) {
                    var id = "pbi-input-id-".concat(pbiInputIdCounter++);
                    this.renderer.setAttribute(this.input.elementRef.nativeElement, "id", id), this.renderer.setAttribute(this.label.elementRef.nativeElement, "for", id);
                }
            }, PbiFormFieldComponent.\u0275fac = function(t) {
                return new (t || PbiFormFieldComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275directiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.Renderer2));
            }, PbiFormFieldComponent.\u0275cmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275defineComponent"]({
                type: PbiFormFieldComponent,
                selectors: [ [ "pbi-form-field" ] ],
                contentQueries: function(rf, ctx, dirIndex) {
                    if (1 & rf && (_angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275contentQuery"](dirIndex, PbiInputDirective, 5), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275contentQuery"](dirIndex, PbiInputLabelDirective, 5), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275contentQuery"](dirIndex, PbiInputErrorDirective, 5)), 
                    2 & rf) {
                        var _t = void 0;
                        _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275queryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275loadQuery"]()) && (ctx.input = _t.first), 
                        _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275queryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275loadQuery"]()) && (ctx.label = _t.first), 
                        _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275queryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275loadQuery"]()) && (ctx.error = _t.first);
                    }
                },
                hostVars: 2,
                hostBindings: function(rf, ctx) {
                    2 & rf && _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275classProp"]("pbi-compact-form-field", ctx.compact);
                },
                inputs: {
                    compact: "compact"
                },
                ngContentSelectors: _c1,
                decls: 5,
                vars: 0,
                consts: [ [ 1, "controls" ] ],
                template: function(rf, ctx) {
                    1 & rf && (_angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275projectionDef"](_c0), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275projection"](0), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementStart"](1, "div", 0), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275projection"](2, 1), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275projection"](3, 2), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementEnd"](), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275projection"](4, 3));
                },
                styles: [ '[_nghost-%COMP%]{display:flex;flex-direction:column;--input-border-color: var(--gray-110);--input-foreground: var(--gray-140);--disabled-input-background: var(--gray-20);--disabled-input-border-color: var(--gray-60);--disabled-input-foreground: var(--gray-90);--focused-input-border-color: var(--gray-130);--focused-input-foreground: var(--gray-180);--error-color: var(--fluent-theme-error-dark-color)}[data-legacy-theming=false]   [_nghost-%COMP%]{--input-border-color: var(--colorNeutralStroke1);--input-foreground: var(--colorNeutralForeground1);--disabled-input-background: var(--colorNeutralBackgroundDisabled);--disabled-input-border-color: var(--colorNeutralStrokeDisabled);--disabled-input-foreground: var(--colorNeutralForegroundDisabled);--focused-input-border-color: var(--colorNeutralStrokeFocus2);--focused-input-foreground: var(--colorNeutralForeground1);--error-color: var(--fluent-theme-error-dark-color)}.pbi-form-field-inline[_nghost-%COMP%] {flex-direction:row;align-items:center;justify-content:space-between}.pbi-form-field-inline[_nghost-%COMP%]  label{margin:0 8px 0 0}.pbi-form-field-inline[_nghost-%COMP%]  .controls{flex-grow:1;justify-content:flex-end}.pbi-compact-form-field[_nghost-%COMP%]  label{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--sm-font-size, 12px);font-weight:var(--font-weight-regular, 400)}.pbi-compact-form-field[_nghost-%COMP%]  input{height:28px;padding:4px 6px}.pbi-compact-form-field[_nghost-%COMP%]  textarea{padding:4px 6px}[_nghost-%COMP%]  *{box-sizing:border-box}[_nghost-%COMP%]  label{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-semi-bold, 600);margin:0 0 4px}[_nghost-%COMP%]  label.pbi-label-required:after{content:"*";margin-left:4px;color:var(--error-color)}[_nghost-%COMP%]  .controls{display:flex}[_nghost-%COMP%]  .controls>*:not(:last-child){margin-right:8px}[_nghost-%COMP%]  input{height:32px}[_nghost-%COMP%]  textarea{resize:none}[_nghost-%COMP%]  input, [_nghost-%COMP%]  textarea{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-regular, 400);width:100%;border-radius:2px;border:1px solid var(--input-border-color);color:var(--input-foreground);outline:none;padding:8px 6px}[_nghost-%COMP%]  input[disabled], [_nghost-%COMP%]  textarea[disabled], [_nghost-%COMP%]  input[aria-disabled=true], [_nghost-%COMP%]  textarea[aria-disabled=true]{background-color:var(--disabled-input-background);border-color:var(--disabled-input-border-color);color:var(--disabled-input-foreground)}[_nghost-%COMP%]  input:focus, [_nghost-%COMP%]  textarea:focus{border-color:var(--focused-input-border-color);color:var(--focused-input-foreground)}[_nghost-%COMP%]  [pbiInput][aria-invalid=true]{border-color:var(--error-color)}[_nghost-%COMP%]  .pbi-input-error{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--sm-font-size, 12px);font-weight:var(--font-weight-regular, 400);margin:4px 0 0;color:var(--error-color)}' ],
                changeDetection: 0
            }), PbiFormFieldComponent;
        }();
    }
} ]);