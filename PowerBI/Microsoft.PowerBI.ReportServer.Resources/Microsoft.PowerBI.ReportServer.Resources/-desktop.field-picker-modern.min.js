"use strict";

(self.webpackChunkdesktop = self.webpackChunkdesktop || []).push([ [ "field-picker-modern" ], {
    13941: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        function isFieldPickerAdd(update) {
            return "add" === update.type;
        }
        function isFieldPickerDelete(update) {
            return "delete" === update.type;
        }
        function isFieldPickerReorder(update) {
            return "reorder" === update.type;
        }
        function isFieldPickerReplace(update) {
            return "replace" === update.type;
        }
        function isFieldPickerRename(update) {
            return "rename" === update.type;
        }
        function isFieldPickerInitialize(update) {
            return "initialize" === update.type;
        }
        __webpack_require__.d(__webpack_exports__, {
            H2: function() {
                return isFieldPickerDelete;
            },
            JB: function() {
                return isFieldPickerAdd;
            },
            V5: function() {
                return isFieldPickerInitialize;
            },
            cA: function() {
                return isFieldPickerReplace;
            },
            cS: function() {
                return isFieldPickerReorder;
            },
            y$: function() {
                return isFieldPickerRename;
            }
        });
    },
    30324: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, {
            FieldPickerModernModule: function() {
                return FieldPickerModernModule;
            }
        });
        var tslib_es6 = __webpack_require__(81337), common = __webpack_require__(77476), fesm2022_forms = __webpack_require__(17174), data_sources_service = __webpack_require__(83008), event_bridge_service = __webpack_require__(11494), lazy_load_module = __webpack_require__(82156), localization_module = __webpack_require__(79061), field_list_services_providers = __webpack_require__(41920), pbi_drag_drop_picker_module = __webpack_require__(56598), pbi_dropdown_module = __webpack_require__(6015), pbi_field_list_module = __webpack_require__(63654), pbi_menu_module = __webpack_require__(94841), pbi_overlay_module = __webpack_require__(66972), pbi_spinner_module = __webpack_require__(16748), pbi_tooltip_module = __webpack_require__(16095), pbi_tree_module = __webpack_require__(35284), tri_svg_icon = __webpack_require__(17177), BehaviorSubject = __webpack_require__(35510), promiseFactory = __webpack_require__(14463), FieldPickerFlyoutService = function() {
            function FieldPickerFlyoutService() {
                this.visibility$ = new BehaviorSubject.X(!1);
            }
            return FieldPickerFlyoutService.prototype.setVisibility = function(visibility) {
                this.visibility$.next(visibility);
            }, FieldPickerFlyoutService.prototype.getVisibility$ = function() {
                return this.visibility$.asObservable();
            }, FieldPickerFlyoutService;
        }(), FieldPickerFlyoutServiceLazyProvider = {
            provide: "fieldPickerFlyoutService",
            useFactory: function(promiseFactory) {
                var service = new FieldPickerFlyoutService;
                return promiseFactory.resolve(service);
            },
            deps: [ promiseFactory.t ]
        }, core = __webpack_require__(50423), from = __webpack_require__(82762), combineLatest = __webpack_require__(59017), map = __webpack_require__(14172), distinctUntilChanged = __webpack_require__(77526), switchMap = __webpack_require__(81905), take = __webpack_require__(48787), takeUntil = __webpack_require__(83317), pbi_drag_drop_picker_component = __webpack_require__(4722), fieldWellMenuViewModelFactory = __webpack_require__(67290), contracts_dataSource = __webpack_require__(74804), debug = __webpack_require__(62458), arrayExtensions = __webpack_require__(50550), sqExprEqualityVisitor = __webpack_require__(45413), sqHierarchyExprUtils1 = __webpack_require__(45551), fieldListPropertyExprGenerator = __webpack_require__(44529), fieldListViewModel = __webpack_require__(88315), fieldListViewModelFactory = __webpack_require__(32518), sqExpr = __webpack_require__(94419), sqExprStaticMembers = __webpack_require__(74082), pbi_overlay_positions = __webpack_require__(25512), pbi_menu_contracts = __webpack_require__(64560), events = __webpack_require__(8590), pbi_overlay_service = __webpack_require__(86940), pbi_overlay_ref_factory = __webpack_require__(88819), pbi_tree_contracts = __webpack_require__(46015), fieldExprRemoveAggregateRewriter = __webpack_require__(68509), rx_component = __webpack_require__(73221), semanticQuerySerializer = __webpack_require__(3468), fieldExprChangeAggregateRewriter = __webpack_require__(95862), sqExprUtils = __webpack_require__(45334), valueType = __webpack_require__(80777), enums = __webpack_require__(46135), model_to_pbi_tree_checkable_item_strategy = __webpack_require__(81141), field_list_tree_service = __webpack_require__(75096), model_to_pbi_tree_inline_item_strategy = __webpack_require__(72525), model_object_tooltip_factory = __webpack_require__(65534), tooltip_strategy_service = __webpack_require__(66014), model_to_pbi_tree_show_menu_strategy = __webpack_require__(78963), grouping_design_state_service = __webpack_require__(23983), pbi_overlay_ref = __webpack_require__(86286), namedModelObjectUtils = __webpack_require__(70863);
        function convertFlatNodeToFlyoutResult(args) {
            var selectedExpr, allowSelectEntities = args.allowSelectEntities, groupingDesignStateService = args.groupingDesignStateService, data = args.flatNode.node.data;
            if (debug.fF.assertValue(data, "flatNode.node.data"), !(0, namedModelObjectUtils.Ov)(data)) {
                if (data instanceof fieldListViewModel.e) {
                    if (!allowSelectEntities) return;
                    selectedExpr = (0, sqExpr.nw)(data.contractSchema.name, data.contract.name);
                } else data instanceof fieldListViewModel.Xx ? selectedExpr = (0, fieldListPropertyExprGenerator.Sd)(data, groupingDesignStateService) : debug.fF.assertFail("Expect flatNode to be either FieldListConceptualEntity or FieldListConceptualItem");
                return {
                    newSelection: selectedExpr,
                    action: 0
                };
            }
        }
        var FieldPickerFlyoutCheckStrategy = function() {
            function FieldPickerFlyoutCheckStrategy(overlayData, groupingDesignStateService) {
                this.overlayData = overlayData, this.groupingDesignStateService = groupingDesignStateService;
            }
            return FieldPickerFlyoutCheckStrategy.prototype.check = function(event) {
                var result = convertFlatNodeToFlyoutResult({
                    flatNode: event.flatNode,
                    allowSelectEntities: this.overlayData.allowSelectEntities,
                    groupingDesignStateService: this.groupingDesignStateService
                });
                result && (event.checked ? (event.flatNode.node.checked = !0, this.overlayData.handleCheckedField(result)) : (event.flatNode.node.checked = !1, 
                this.overlayData.handleUncheckedField(result)));
            }, FieldPickerFlyoutCheckStrategy.\u0275fac = function(t) {
                return new (t || FieldPickerFlyoutCheckStrategy)(core["\u0275\u0275inject"](pbi_overlay_ref.M), core["\u0275\u0275inject"](grouping_design_state_service.AA));
            }, FieldPickerFlyoutCheckStrategy.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: FieldPickerFlyoutCheckStrategy,
                factory: FieldPickerFlyoutCheckStrategy.\u0275fac
            }), FieldPickerFlyoutCheckStrategy;
        }(), exploration_display_name_service = __webpack_require__(13702), localization_service = __webpack_require__(65181), localize_directive = __webpack_require__(59968), localize_tooltip_directive = __webpack_require__(50057), pbi_dropdown_component = __webpack_require__(76492), pbi_dropdown_field_list_menu_directive = __webpack_require__(58679), pbi_dropdown_item_component = __webpack_require__(42189), pbi_dropdown_item_menu_directive = __webpack_require__(9529), pbi_tooltip_directive = __webpack_require__(36858), pbi_field_list_component = __webpack_require__(65005), tri_svg_icon_component = __webpack_require__(74913), localize_pipe = __webpack_require__(85102), _c0 = [ "fieldListDropdown" ];
        function FieldPickerFlyoutComponent_button_4_Template(rf, ctx) {
            if (1 & rf) {
                var _r6 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "button", 11), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r6);
                    var ctx_r5 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r5.createVisualCalc());
                }), core["\u0275\u0275element"](1, "tri-svg-icon", 12), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("localizeTooltip", ctx_r0.visualCalcCreationInfo.tooltip);
            }
        }
        function FieldPickerFlyoutComponent_div_8_ng_container_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "div", 15), 
            core["\u0275\u0275element"](2, "span", 16), core["\u0275\u0275elementStart"](3, "p", 17), 
            core["\u0275\u0275element"](4, "span", 18), core["\u0275\u0275elementEnd"]()(), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var ctx_r7 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](4), core["\u0275\u0275property"]("innerHtml", ctx_r7.perspectiveDoesNotExistsDescriptionHtml, core["\u0275\u0275sanitizeHtml"]);
            }
        }
        function FieldPickerFlyoutComponent_div_8_ng_template_2_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275element"](0, "span", 19), core["\u0275\u0275elementStart"](1, "p", 17), 
            core["\u0275\u0275element"](2, "span", 18), core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r9 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("innerHtml", ctx_r9.perspectiveExistsDescriptionHtml, core["\u0275\u0275sanitizeHtml"]);
            }
        }
        function FieldPickerFlyoutComponent_div_8_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 13), core["\u0275\u0275template"](1, FieldPickerFlyoutComponent_div_8_ng_container_1_Template, 5, 1, "ng-container", 9), 
            core["\u0275\u0275template"](2, FieldPickerFlyoutComponent_div_8_ng_template_2_Template, 3, 1, "ng-template", null, 14, core["\u0275\u0275templateRefExtractor"]), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var _r8 = core["\u0275\u0275reference"](3), ctx_r1 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx_r1.perspectiveDoesNotExist)("ngIfElse", _r8);
            }
        }
        function FieldPickerFlyoutComponent_ng_container_10_span_8_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "span"), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r11 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate1"](" ", ctx_r11.selectedDisplayName, " ");
            }
        }
        function FieldPickerFlyoutComponent_ng_container_10_span_9_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "span", 32);
        }
        function FieldPickerFlyoutComponent_ng_container_10_div_13_pbi_dropdown_item_9_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "pbi-dropdown-item", 37), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var item_r16 = ctx.$implicit;
                core["\u0275\u0275property"]("value", item_r16), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275textInterpolate1"](" ", item_r16.name, " ");
            }
        }
        function FieldPickerFlyoutComponent_ng_container_10_div_13_Template(rf, ctx) {
            if (1 & rf) {
                var _r18 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div", 33), core["\u0275\u0275element"](1, "h2", 34), 
                core["\u0275\u0275elementStart"](2, "pbi-dropdown", 35), core["\u0275\u0275listener"]("valueChange", function($event) {
                    core["\u0275\u0275restoreView"](_r18);
                    var ctx_r17 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r17.onAggregationChanged($event.property));
                }), core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275pipe"](4, "localize"), 
                core["\u0275\u0275elementStart"](5, "pbi-dropdown-trigger")(6, "div", 25)(7, "span"), 
                core["\u0275\u0275text"](8), core["\u0275\u0275elementEnd"]()()(), core["\u0275\u0275template"](9, FieldPickerFlyoutComponent_ng_container_10_div_13_pbi_dropdown_item_9_Template, 2, 2, "pbi-dropdown-item", 36), 
                core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var ctx_r13 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](1), core["\u0275\u0275classProp"]("disabled", ctx_r13.aggregationDropdown.isDisabled), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("value", ctx_r13.aggregationDropdown.selectedItem)("pbiTooltip", ctx_r13.aggregationDropdown.isDisabled && core["\u0275\u0275pipeBind1"](3, 8, "FieldPicker_AggregationsDisabled"))("aria-label", core["\u0275\u0275pipeBind1"](4, 10, "Summarization"))("isDisabled", ctx_r13.aggregationDropdown.isDisabled), 
                core["\u0275\u0275advance"](6), core["\u0275\u0275textInterpolate"](null == ctx_r13.aggregationDropdown.selectedItem ? null : ctx_r13.aggregationDropdown.selectedItem.name), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngForOf", ctx_r13.aggregationDropdown.items);
            }
        }
        function FieldPickerFlyoutComponent_ng_container_10_div_14_pbi_dropdown_item_8_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "pbi-dropdown-item", 37), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var item_r20 = ctx.$implicit;
                core["\u0275\u0275property"]("value", item_r20), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275textInterpolate1"](" ", item_r20.name, " ");
            }
        }
        function FieldPickerFlyoutComponent_ng_container_10_div_14_Template(rf, ctx) {
            if (1 & rf) {
                var _r22 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div", 38), core["\u0275\u0275element"](1, "h2", 39), 
                core["\u0275\u0275elementStart"](2, "pbi-dropdown", 40), core["\u0275\u0275listener"]("valueChange", function($event) {
                    core["\u0275\u0275restoreView"](_r22);
                    var ctx_r21 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r21.onVariationChanged($event.property));
                }), core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementStart"](4, "pbi-dropdown-trigger")(5, "div", 25)(6, "span"), 
                core["\u0275\u0275text"](7), core["\u0275\u0275elementEnd"]()()(), core["\u0275\u0275template"](8, FieldPickerFlyoutComponent_ng_container_10_div_14_pbi_dropdown_item_8_Template, 2, 2, "pbi-dropdown-item", 36), 
                core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var ctx_r14 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](1), core["\u0275\u0275classProp"]("disabled", ctx_r14.variationsDropdown.isDisabled), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("value", ctx_r14.variationsDropdown.selectedItem)("aria-label", core["\u0275\u0275pipeBind1"](3, 7, "Date"))("isDisabled", ctx_r14.variationsDropdown.isDisabled), 
                core["\u0275\u0275advance"](5), core["\u0275\u0275textInterpolate"](null == ctx_r14.variationsDropdown.selectedItem ? null : ctx_r14.variationsDropdown.selectedItem.name), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngForOf", ctx_r14.variationsDropdown.items);
            }
        }
        function FieldPickerFlyoutComponent_ng_container_10_Template(rf, ctx) {
            if (1 & rf) {
                var _r24 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "div", 20), 
                core["\u0275\u0275element"](2, "h2", 21), core["\u0275\u0275elementStart"](3, "pbi-dropdown", 22, 23), 
                core["\u0275\u0275pipe"](5, "localize"), core["\u0275\u0275elementStart"](6, "pbi-dropdown-trigger", 24)(7, "div", 25), 
                core["\u0275\u0275template"](8, FieldPickerFlyoutComponent_ng_container_10_span_8_Template, 2, 1, "span", 26), 
                core["\u0275\u0275template"](9, FieldPickerFlyoutComponent_ng_container_10_span_9_Template, 1, 0, "span", 27), 
                core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementStart"](10, "pbi-field-list", 28), 
                core["\u0275\u0275listener"]("onNodeClick", function($event) {
                    core["\u0275\u0275restoreView"](_r24);
                    var ctx_r23 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r23.onNodeClick($event));
                }), core["\u0275\u0275pipe"](11, "async"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275element"](12, "div", 29), 
                core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275template"](13, FieldPickerFlyoutComponent_ng_container_10_div_13_Template, 10, 12, "div", 30), 
                core["\u0275\u0275template"](14, FieldPickerFlyoutComponent_ng_container_10_div_14_Template, 9, 9, "div", 31), 
                core["\u0275\u0275elementContainerEnd"]();
            }
            if (2 & rf) {
                var ctx_r2 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("aria-label", core["\u0275\u0275pipeBind1"](5, 12, "Field"))("options", ctx_r2.fieldListDropdownOptions)("maxHeight", ctx_r2.fieldListDropdownMaxHeight), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("pbiTooltip", ctx_r2.selectedItemTooltip), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", ctx_r2.selectedDisplayName), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !ctx_r2.selectedDisplayName), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("fieldListTree", core["\u0275\u0275pipeBind1"](11, 14, ctx_r2.fieldListTree$))("scrollSelectedItemIntoViewOnInit", ctx_r2.openFieldDropdownOnInit)("hasHighlights", !1)("options", ctx_r2.fieldListTreeOptions), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngIf", ctx_r2.aggregationDropdown), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx_r2.variationsDropdown && !ctx_r2.variationsDropdown.isDisabled);
            }
        }
        function FieldPickerFlyoutComponent_ng_template_11_Template(rf, ctx) {
            if (1 & rf) {
                var _r26 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "pbi-field-list", 41), core["\u0275\u0275listener"]("onNodeClick", function($event) {
                    core["\u0275\u0275restoreView"](_r26);
                    var ctx_r25 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r25.onMultiSelectNodeClick($event));
                })("handleFieldListTreeHeightDiff", function($event) {
                    core["\u0275\u0275restoreView"](_r26);
                    var ctx_r27 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r27.handleFieldListTreeHeightDiff($event));
                }), core["\u0275\u0275pipe"](1, "async"), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r4 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("fieldListTree", core["\u0275\u0275pipeBind1"](1, 4, ctx_r4.fieldListTree$))("options", ctx_r4.fieldListTreeOptions)("checkMode", ctx_r4.multiCheckMode)("focusSearchBoxOnFirstRenderComplete", !0);
            }
        }
        var FieldPickerFlyoutComponent = function(_super) {
            function FieldPickerFlyoutComponent(overlayData, checkableSetting, checkStrategy, explorationDisplayNameService, fieldListTreeService, groupingDesignStateService, hideMenuSetting, inlineItemsExtendShowOrHideSettingStrategy, localizationService, overlayRef, tooltipStrategy) {
                var _this = _super.call(this) || this;
                return _this.overlayData = overlayData, _this.checkableSetting = checkableSetting, 
                _this.checkStrategy = checkStrategy, _this.explorationDisplayNameService = explorationDisplayNameService, 
                _this.fieldListTreeService = fieldListTreeService, _this.groupingDesignStateService = groupingDesignStateService, 
                _this.hideMenuSetting = hideMenuSetting, _this.inlineItemsExtendShowOrHideSettingStrategy = inlineItemsExtendShowOrHideSettingStrategy, 
                _this.localizationService = localizationService, _this.overlayRef = overlayRef, 
                _this.tooltipStrategy = tooltipStrategy, _this.fieldListTree$ = _this.fieldListTreeService.fieldListTree$, 
                _this.defaultPerspective = "", _this.fieldListTreeOptions = {
                    check: _this.checkStrategy,
                    editLabel: null,
                    tooltip: _this.tooltipStrategy
                }, _this.multiCheckMode = pbi_tree_contracts.kH.Multi, _this;
            }
            return (0, tslib_es6.__extends)(FieldPickerFlyoutComponent, _super), FieldPickerFlyoutComponent.prototype.ngOnInit = function() {
                var _a, fieldListModel = (_a = this.overlayData).fieldListModel, allowSelectEntities = _a.allowSelectEntities, perspectiveDisplayName = _a.perspectiveDisplayName, schema = _a.schema, perspectiveDoesNotExist = _a.perspectiveDoesNotExist, openedByKeyboard = _a.openedByKeyboard, isAddingData = _a.isAddingData;
                debug.fF.assertValue(fieldListModel, "fieldListModel"), this.perspectiveDoesNotExist = perspectiveDoesNotExist, 
                this.inNonDefaultPerspective = perspectiveDisplayName && perspectiveDisplayName !== this.defaultPerspective, 
                this.allowSelectEntities = allowSelectEntities, this.perspectiveDoesNotExistsDescriptionHtml = this.localizationService.format("PersonalizeVisual_PerspectiveDescription_With_CubeNameError", perspectiveDisplayName), 
                this.perspectiveExistsDescriptionHtml = this.localizationService.format("PersonalizeVisual_PerspectiveDescription_V2", perspectiveDisplayName), 
                this.isAddingData = isAddingData, this.visualCalcCreationInfo = this.overlayData.visualCalcCreationInfo, 
                this.initAggregationDropdown(), debug.fF.assertValue(this.aggregationDropdown, "aggregationDropdown should be initialized"), 
                this.initVariationDropdown(), this.openFieldDropdownOnInit = !isAddingData && !openedByKeyboard && this.aggregationDropdown.isDisabled, 
                schema && fieldListModel && this.initFieldList();
            }, Object.defineProperty(FieldPickerFlyoutComponent.prototype, "fieldListDropdownOptions", {
                get: function() {
                    return {
                        panelClass: this.overlayData.fieldListOverlayPanelClass
                    };
                },
                enumerable: !1,
                configurable: !0
            }), FieldPickerFlyoutComponent.prototype.ngAfterViewInit = function() {
                this.isAddingData || (this.fieldListDropdownMaxHeight = this.getFieldListDropdownMaxHeight(), 
                this.openFieldDropdownOnInit && this.fieldListDropdown.openDropdown());
            }, FieldPickerFlyoutComponent.prototype.getFieldListDropdownMaxHeight = function() {
                var fieldListDropdownElementRect = this.fieldListDropdownElementRef.nativeElement.getBoundingClientRect(), spaceBelow = document.documentElement.clientHeight - fieldListDropdownElementRect.bottom;
                return Math.max(fieldListDropdownElementRect.top, spaceBelow) - 4;
            }, FieldPickerFlyoutComponent.prototype.onAggregationChanged = function(newSelection) {
                var selectedItem = this.aggregationDropdown.items.find(function(item) {
                    return item.property === newSelection;
                });
                debug.fF.assertValue(selectedItem, "aggregationsDropdown.items should contain the selected item"), 
                selectedItem && (this.aggregationDropdown = (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, this.aggregationDropdown), {
                    selectedItem
                }), this.onDropdownItemSelected(selectedItem));
            }, FieldPickerFlyoutComponent.prototype.onVariationChanged = function(newSelection) {
                var selectedItem = this.variationsDropdown.items.find(function(item) {
                    return item.property === newSelection;
                });
                debug.fF.assertValue(selectedItem, "variationsDropdown.items should contain the selected item"), 
                selectedItem && (this.variationsDropdown = (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, this.variationsDropdown), {
                    selectedItem
                }), this.onDropdownItemSelected(selectedItem));
            }, FieldPickerFlyoutComponent.prototype.onDropdownItemSelected = function(selectedItem) {
                this.overlayData.onMenuItemSelected(selectedItem.property), this.closeOverlay();
            }, FieldPickerFlyoutComponent.prototype.initFieldList = function() {
                var _a, visualCapabilities = (_a = this.overlayData).visualCapabilities, fieldListModel = _a.fieldListModel, currentSelection = _a.currentSelection, disabledCollection = _a.disabledCollection, schema = _a.schema;
                currentSelection = null != currentSelection ? currentSelection : [], this.inlineItemsExtendShowOrHideSettingStrategy.addHiddenItemsOnly = !0, 
                this.inlineItemsExtendShowOrHideSettingStrategy.hideInlineItemTooltip = "Field_ShowHiddenFieldFromDataPane";
                var hasSingleTable = 1 === _.size(fieldListModel.tables);
                this.fieldListTreeService.modelToPbiTreeConverterOptions = {
                    checkableSetting: this.checkableSetting,
                    showMenuSetting: this.hideMenuSetting,
                    expandedSetting: new FieldPickerFlyoutExpandedSettingStrategy(hasSingleTable),
                    inlineItemsSetting: this.inlineItemsExtendShowOrHideSettingStrategy
                };
                var currentSelectedFields = _.flatMapDeep(currentSelection, function(selected) {
                    return fieldListModel.findItems(selected, schema, {
                        excludeVariationSource: !0,
                        excludeHierarchyLevels: !0
                    });
                }), disabledFields = _.flatMapDeep(disabledCollection, function(disabled) {
                    return fieldListModel.findItems(disabled, schema, {
                        excludeVariationSource: !0,
                        excludeHierarchyLevels: !0
                    }, {
                        excludeHierarchy: !0,
                        excludeVariationSource: !0
                    });
                });
                this.fieldListTreeService.setOrUpdateFieldListTreeModel(fieldListModel, currentSelectedFields, void 0, disabledFields), 
                debug.fF.assert(function() {
                    return currentSelection.length <= 1;
                }, "Expected no more than 1 selection");
                var selectedItem = _.first(currentSelection);
                selectedItem && (this.selectedDisplayName = this.explorationDisplayNameService.getDisplayName(selectedItem, schema, visualCapabilities, void 0, void 0, {
                    includeHierarchyName: !0,
                    includeVariationSource: !0
                }), this.selectedItemTooltip = this.explorationDisplayNameService.getQualifiedDisplayName(selectedItem, schema, visualCapabilities, {
                    includeHierarchyName: !0,
                    includeVariationSource: !0
                }));
            }, FieldPickerFlyoutComponent.prototype.initAggregationDropdown = function() {
                var dropdownMenu = this.initDropdown(this.overlayData.aggregationMenuItems);
                if (!dropdownMenu.selectedItem) {
                    var selectedText = this.localizationService.get("Count_Visuals_0");
                    dropdownMenu.selectedItem = {
                        name: selectedText,
                        property: selectedText
                    };
                }
                this.aggregationDropdown = dropdownMenu;
            }, FieldPickerFlyoutComponent.prototype.initVariationDropdown = function() {
                var dropdownMenu = this.initDropdown(this.overlayData.variationsMenuItems);
                this.variationsDropdown = dropdownMenu;
            }, FieldPickerFlyoutComponent.prototype.initDropdown = function(menuItems) {
                var result = {
                    items: [],
                    isDisabled: !1
                };
                if (_.isEmpty(menuItems)) return result.isDisabled = !0, result;
                for (var _i = 0, menuItems_1 = menuItems; _i < menuItems_1.length; _i++) {
                    var item = menuItems_1[_i], dropdownItem = {
                        name: item.text,
                        property: item
                    };
                    item.checked && (result.selectedItem = dropdownItem), result.items.push(dropdownItem);
                }
                return result;
            }, FieldPickerFlyoutComponent.prototype.onNodeClick = function(flatNode) {
                var result = convertFlatNodeToFlyoutResult({
                    flatNode,
                    allowSelectEntities: this.allowSelectEntities,
                    groupingDesignStateService: this.groupingDesignStateService
                });
                result && this.overlayRef.close(result);
            }, FieldPickerFlyoutComponent.prototype.onMultiSelectNodeClick = function(flatNode) {
                this.checkStrategy.check({
                    flatNode,
                    checked: !flatNode.node.checked
                });
            }, FieldPickerFlyoutComponent.prototype.closeOverlay = function() {
                this.overlayRef.close();
            }, FieldPickerFlyoutComponent.prototype.createVisualCalc = function() {
                this.overlayRef.close({
                    newSelection: void 0,
                    action: 2
                });
            }, FieldPickerFlyoutComponent.prototype.handleFieldListTreeHeightDiff = function(fieldListTreeHeightDiff) {
                if (fieldListTreeHeightDiff > 0) {
                    var flyoutCurrentHeight = this.overlayRef.overlayRef.overlayElement.getBoundingClientRect().height;
                    this.overlayRef.overlayRef.updateSize({
                        height: flyoutCurrentHeight + fieldListTreeHeightDiff
                    });
                }
            }, FieldPickerFlyoutComponent.\u0275fac = function(t) {
                return new (t || FieldPickerFlyoutComponent)(core["\u0275\u0275directiveInject"](pbi_overlay_ref.M), core["\u0275\u0275directiveInject"](model_to_pbi_tree_checkable_item_strategy.x), core["\u0275\u0275directiveInject"](FieldPickerFlyoutCheckStrategy), core["\u0275\u0275directiveInject"](exploration_display_name_service.O), core["\u0275\u0275directiveInject"](field_list_tree_service.p), core["\u0275\u0275directiveInject"](grouping_design_state_service.AA), core["\u0275\u0275directiveInject"](model_to_pbi_tree_show_menu_strategy.W), core["\u0275\u0275directiveInject"](model_to_pbi_tree_inline_item_strategy.VI), core["\u0275\u0275directiveInject"](localization_service.o), core["\u0275\u0275directiveInject"](pbi_overlay_ref.w), core["\u0275\u0275directiveInject"](tooltip_strategy_service.Z));
            }, FieldPickerFlyoutComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: FieldPickerFlyoutComponent,
                selectors: [ [ "field-picker-flyout" ] ],
                viewQuery: function(rf, ctx) {
                    if (1 & rf && (core["\u0275\u0275viewQuery"](_c0, 5), core["\u0275\u0275viewQuery"](_c0, 5, core.ElementRef)), 
                    2 & rf) {
                        var _t = void 0;
                        core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx.fieldListDropdown = _t.first), 
                        core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx.fieldListDropdownElementRef = _t.first);
                    }
                },
                features: [ core["\u0275\u0275ProvidersFeature"]([ model_to_pbi_tree_checkable_item_strategy.x, FieldPickerFlyoutCheckStrategy, field_list_tree_service.p, grouping_design_state_service.AA, model_to_pbi_tree_inline_item_strategy.wt, model_to_pbi_tree_inline_item_strategy.VI, model_object_tooltip_factory.n, tooltip_strategy_service.Z, {
                    provide: model_to_pbi_tree_show_menu_strategy.W,
                    useClass: model_to_pbi_tree_show_menu_strategy.w
                } ]), core["\u0275\u0275InheritDefinitionFeature"] ],
                decls: 13,
                vars: 7,
                consts: [ [ "role", "dialog", "aria-labelledby", "flyoutContainerTitle", 1, "flyout-container" ], [ 1, "header" ], [ "id", "flyoutContainerTitle", "localize", "TaskPane_Fields", 1, "fluentTheme-lg-semiBold" ], [ 1, "action-button-container" ], [ "data-testid", "create-visual-calc-button", "tri-button", "", "size", "small", "appearance", "subtle", "class", "increased-contrast", 3, "localizeTooltip", "click", 4, "ngIf" ], [ "localizeTooltip", "Close", 1, "glyphicon", "glyph-mini", "pbi-glyph-close", "pbi-icon-button", "pbi-focus-outline", "close-button", 3, "click" ], [ 1, "field-list-container" ], [ "class", "pbi-field-list-perspective-header", 4, "ngIf" ], [ 1, "field-list-content" ], [ 4, "ngIf", "ngIfElse" ], [ "multiSelectFieldList", "" ], [ "data-testid", "create-visual-calc-button", "tri-button", "", "size", "small", "appearance", "subtle", 1, "increased-contrast", 3, "localizeTooltip", "click" ], [ "sprite", "visual-calc-icons", "name", "data_histogram_function_20_regular" ], [ 1, "pbi-field-list-perspective-header" ], [ "showPerspectiveInfo", "" ], [ 1, "perspective-error" ], [ "role", "presentation", 1, "glyphicon", "glyph-small", "pbi-glyph-error" ], [ 1, "fluentTheme-sm-reg" ], [ 3, "innerHtml" ], [ "role", "presentation", 1, "glyphicon", "glyph-small", "pbi-glyph-info" ], [ 1, "field-picker" ], [ "localize", "Field", 1, "fluentTheme-sm-reg" ], [ "size", "xs", "dropdown-type", "field-list", 1, "field-list-field", 3, "aria-label", "options", "maxHeight" ], [ "fieldListDropdown", "" ], [ 3, "pbiTooltip" ], [ 1, "field-list-trigger", "dropdown-trigger" ], [ 4, "ngIf" ], [ "localize", "Select_A_Field", 4, "ngIf" ], [ "focus-nav-mode", "Browser", 1, "field-list-field-dropdown", 3, "fieldListTree", "scrollSelectedItemIntoViewOnInit", "hasHighlights", "options", "onNodeClick" ], [ "tabindex", "0", 1, "container-stop-bottom" ], [ "class", "aggregation-picker", 4, "ngIf" ], [ "class", "variations-picker", 4, "ngIf" ], [ "localize", "Select_A_Field" ], [ 1, "aggregation-picker" ], [ "localize", "Summarization", 1, "fluentTheme-sm-reg" ], [ "size", "xs", 1, "field-list-aggregate", 3, "value", "pbiTooltip", "aria-label", "isDisabled", "valueChange" ], [ 3, "value", 4, "ngFor", "ngForOf" ], [ 3, "value" ], [ 1, "variations-picker" ], [ "localize", "Date", 1, "fluentTheme-sm-reg" ], [ "size", "xs", 1, "field-list-variation", 3, "value", "aria-label", "isDisabled", "valueChange" ], [ 1, "multi-select-field-list", 3, "fieldListTree", "options", "checkMode", "focusSearchBoxOnFirstRenderComplete", "onNodeClick", "handleFieldListTreeHeightDiff" ] ],
                template: function(rf, ctx) {
                    if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 0)(1, "div", 1), core["\u0275\u0275element"](2, "h1", 2), 
                    core["\u0275\u0275elementStart"](3, "div", 3), core["\u0275\u0275template"](4, FieldPickerFlyoutComponent_button_4_Template, 2, 1, "button", 4), 
                    core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](5, "button", 5), 
                    core["\u0275\u0275listener"]("click", function() {
                        return ctx.closeOverlay();
                    }), core["\u0275\u0275pipe"](6, "localize"), core["\u0275\u0275elementEnd"]()(), 
                    core["\u0275\u0275elementStart"](7, "section", 6), core["\u0275\u0275template"](8, FieldPickerFlyoutComponent_div_8_Template, 4, 2, "div", 7), 
                    core["\u0275\u0275elementStart"](9, "div", 8), core["\u0275\u0275template"](10, FieldPickerFlyoutComponent_ng_container_10_Template, 15, 16, "ng-container", 9), 
                    core["\u0275\u0275template"](11, FieldPickerFlyoutComponent_ng_template_11_Template, 2, 6, "ng-template", null, 10, core["\u0275\u0275templateRefExtractor"]), 
                    core["\u0275\u0275elementEnd"]()()()), 2 & rf) {
                        var _r3 = core["\u0275\u0275reference"](12);
                        core["\u0275\u0275advance"](4), core["\u0275\u0275property"]("ngIf", ctx.isAddingData && ctx.visualCalcCreationInfo.supportVisualCalcCreation), 
                        core["\u0275\u0275advance"](1), core["\u0275\u0275attribute"]("aria-label", core["\u0275\u0275pipeBind1"](6, 5, "Close")), 
                        core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngIf", ctx.inNonDefaultPerspective), 
                        core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", !ctx.isAddingData)("ngIfElse", _r3);
                    }
                },
                dependencies: [ common.NgForOf, common.NgIf, localize_directive.X, localize_tooltip_directive.r, pbi_dropdown_component.H, pbi_dropdown_field_list_menu_directive.I, pbi_dropdown_item_component.r, pbi_dropdown_item_menu_directive._, pbi_dropdown_component.T, pbi_tooltip_directive.V, pbi_field_list_component.l, tri_svg_icon_component.M, common.AsyncPipe, localize_pipe.F ],
                styles: [ '[_nghost-%COMP%]{height:100%;width:100%;background-color:var(--colorNeutralBackground3);border:1px solid var(--colorNeutralStroke3);border-radius:2px;color:var(--colorNeutralForeground1);padding:0;box-shadow:0 0 2px var(--colorNeutralShadowAmbient),0 4px 8px var(--colorNeutralShadowKey)}[_nghost-%COMP%]   .flyout-container[_ngcontent-%COMP%]{height:100%;width:100%;display:flex;flex-direction:column}[_nghost-%COMP%]   .flyout-container[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]{display:flex;align-items:center;margin:8px 8px 4px}[_nghost-%COMP%]   .flyout-container[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{margin:0}[_nghost-%COMP%]   .flyout-container[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .action-button-container[_ngcontent-%COMP%]{display:flex;flex:auto;justify-content:flex-end;margin-bottom:4px}[_nghost-%COMP%]   .flyout-container[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .close-button[_ngcontent-%COMP%]{width:24px;height:24px;color:var(--colorNeutralForeground1)}[_nghost-%COMP%]   .flyout-container[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .close-button[_ngcontent-%COMP%]:hover{background-color:var(--colorNeutralBackground1Hover)}[_nghost-%COMP%]   .flyout-container[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .close-button[_ngcontent-%COMP%]:active{background-color:var(--colorNeutralBackground1Pressed)}[_nghost-%COMP%]   .flyout-container[_ngcontent-%COMP%]   .field-list-container[_ngcontent-%COMP%]{margin:4px 8px 8px;height:100%}[_nghost-%COMP%]   .flyout-container[_ngcontent-%COMP%]   .field-list-container[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{margin:0 0 4px}[_nghost-%COMP%]   .flyout-container[_ngcontent-%COMP%]   .field-list-container[_ngcontent-%COMP%]   .field-list-content[_ngcontent-%COMP%]{display:flex;flex-direction:column;height:100%}[_nghost-%COMP%]   .flyout-container[_ngcontent-%COMP%]   .field-list-container[_ngcontent-%COMP%]   .field-list-content[_ngcontent-%COMP%]   .field-picker[_ngcontent-%COMP%], [_nghost-%COMP%]   .flyout-container[_ngcontent-%COMP%]   .field-list-container[_ngcontent-%COMP%]   .field-list-content[_ngcontent-%COMP%]   .aggregation-picker[_ngcontent-%COMP%], [_nghost-%COMP%]   .flyout-container[_ngcontent-%COMP%]   .field-list-container[_ngcontent-%COMP%]   .field-list-content[_ngcontent-%COMP%]   .variations-picker[_ngcontent-%COMP%]{display:flex;flex-direction:column;margin-bottom:8px}[_nghost-%COMP%]   .flyout-container[_ngcontent-%COMP%]   .field-list-container[_ngcontent-%COMP%]   .field-list-content[_ngcontent-%COMP%]   .field-picker[_ngcontent-%COMP%]   pbi-dropdown[_ngcontent-%COMP%], [_nghost-%COMP%]   .flyout-container[_ngcontent-%COMP%]   .field-list-container[_ngcontent-%COMP%]   .field-list-content[_ngcontent-%COMP%]   .aggregation-picker[_ngcontent-%COMP%]   pbi-dropdown[_ngcontent-%COMP%], [_nghost-%COMP%]   .flyout-container[_ngcontent-%COMP%]   .field-list-container[_ngcontent-%COMP%]   .field-list-content[_ngcontent-%COMP%]   .variations-picker[_ngcontent-%COMP%]   pbi-dropdown[_ngcontent-%COMP%]{width:100%}[_nghost-%COMP%]   .flyout-container[_ngcontent-%COMP%]   .field-list-container[_ngcontent-%COMP%]   .field-list-content[_ngcontent-%COMP%]   .field-picker[_ngcontent-%COMP%]   .dropdown-trigger[_ngcontent-%COMP%], [_nghost-%COMP%]   .flyout-container[_ngcontent-%COMP%]   .field-list-container[_ngcontent-%COMP%]   .field-list-content[_ngcontent-%COMP%]   .aggregation-picker[_ngcontent-%COMP%]   .dropdown-trigger[_ngcontent-%COMP%], [_nghost-%COMP%]   .flyout-container[_ngcontent-%COMP%]   .field-list-container[_ngcontent-%COMP%]   .field-list-content[_ngcontent-%COMP%]   .variations-picker[_ngcontent-%COMP%]   .dropdown-trigger[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--sm-font-size, 12px);font-weight:var(--font-weight-regular, 400);text-overflow:ellipsis;overflow:hidden;white-space:nowrap}[_nghost-%COMP%]   .flyout-container[_ngcontent-%COMP%]   .field-list-container[_ngcontent-%COMP%]   .field-list-content[_ngcontent-%COMP%]   .field-picker[_ngcontent-%COMP%]   h2.disabled[_ngcontent-%COMP%], [_nghost-%COMP%]   .flyout-container[_ngcontent-%COMP%]   .field-list-container[_ngcontent-%COMP%]   .field-list-content[_ngcontent-%COMP%]   .aggregation-picker[_ngcontent-%COMP%]   h2.disabled[_ngcontent-%COMP%], [_nghost-%COMP%]   .flyout-container[_ngcontent-%COMP%]   .field-list-container[_ngcontent-%COMP%]   .field-list-content[_ngcontent-%COMP%]   .variations-picker[_ngcontent-%COMP%]   h2.disabled[_ngcontent-%COMP%]{color:var(--colorNeutralForegroundDisabled)}[_nghost-%COMP%]   .flyout-container[_ngcontent-%COMP%]   button[tri-button].increased-contrast[_ngcontent-%COMP%]:hover{background-color:var(--colorNeutralBackground3Hover)}[_nghost-%COMP%]   .flyout-container[_ngcontent-%COMP%]   button[tri-button].increased-contrast[_ngcontent-%COMP%]:active:hover{background-color:var(--colorNeutralBackground3Pressed);color:var(--colorNeutralForeground2Pressed)}.pbi-overlay-caret-small.pbi-overlay-caret[_nghost-%COMP%]:after{background:var(--colorNeutralBackground3)!important;border-color:var(--colorNeutralStroke1Selected)}[_nghost-%COMP%]   .pbi-field-list-perspective-header[_ngcontent-%COMP%]{display:flex;margin:12px 0 4px}[_nghost-%COMP%]   .pbi-field-list-perspective-header[_ngcontent-%COMP%]   .pbi-glyph-error[_ngcontent-%COMP%]{color:var(--colorDangerForeground1)}[_nghost-%COMP%]   .pbi-field-list-perspective-header[_ngcontent-%COMP%]   .glyphicon[_ngcontent-%COMP%]{margin:3px 8px 0 0}[_nghost-%COMP%]   .pbi-field-list-perspective-header[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin:0;color:var(--colorNeutralForeground1)}[_nghost-%COMP%]   .pbi-field-list-perspective-header[_ngcontent-%COMP%]   .perspective-error[_ngcontent-%COMP%]{background-color:var(--colorDangerBackground1);display:flex;padding:8px}.field-list-field-dropdown[_ngcontent-%COMP%]{padding:8px;height:380px}' ],
                changeDetection: 0
            }), FieldPickerFlyoutComponent;
        }(rx_component.w), FieldPickerFlyoutExpandedSettingStrategy = function() {
            function FieldPickerFlyoutExpandedSettingStrategy(hasSingleTable) {
                this.hasSingleTable = hasSingleTable;
            }
            return FieldPickerFlyoutExpandedSettingStrategy.prototype.isExpanded = function(data) {
                return "Hierarchy" === data.modelObjectType || "Table" === data.modelObjectType && this.hasSingleTable;
            }, FieldPickerFlyoutExpandedSettingStrategy.prototype.isExpandedStateFixed = function(data) {
                return "Hierarchy" === data.modelObjectType;
            }, FieldPickerFlyoutExpandedSettingStrategy;
        }(), field_picker_util = __webpack_require__(98476), field_picker_modern_contracts = __webpack_require__(13941), context_activity_utils = __webpack_require__(58609), sq_aggregation_operations_service = __webpack_require__(28199), conceptual_schema_proxy_service = __webpack_require__(26898), report_settings_service = __webpack_require__(61451), view_mode_state_service = __webpack_require__(77200), visual_authoring_operations_service = __webpack_require__(27980), pbi_menu_directive = __webpack_require__(80357), ItemAtPositionPipe = function() {
            function ItemAtPositionPipe() {}
            return ItemAtPositionPipe.prototype.transform = function(fields, positionStr) {
                if (null != fields) {
                    var position = positionStr.split(",").map(function(s) {
                        return Number(s);
                    });
                    return (0, pbi_drag_drop_picker_component.X)(fields, position);
                }
            }, ItemAtPositionPipe.\u0275fac = function(t) {
                return new (t || ItemAtPositionPipe);
            }, ItemAtPositionPipe.\u0275pipe = core["\u0275\u0275definePipe"]({
                name: "itemAtPosition",
                type: ItemAtPositionPipe,
                pure: !0
            }), ItemAtPositionPipe;
        }(), field_picker_modern_component_c0 = [ "dragDropPickerRef" ], _c1 = [ "openFlyoutChevron" ];
        function FieldPickerModernComponent_ng_container_2_label_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "label", 7), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r3 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate"](ctx_r3.label);
            }
        }
        var _c2 = function(a0) {
            return {
                v2Design: a0
            };
        };
        function FieldPickerModernComponent_ng_container_2_ng_template_7_ng_container_0_ng_container_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r15 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "div", 8)(2, "button", 9), 
                core["\u0275\u0275listener"]("click", function() {
                    var restoredCtx = core["\u0275\u0275restoreView"](_r15);
                    return core["\u0275\u0275resetView"](restoredCtx.ngIf.handler());
                }), core["\u0275\u0275element"](3, "tri-svg-icon", 10), core["\u0275\u0275elementEnd"]()(), 
                core["\u0275\u0275elementContainerEnd"]();
            }
            if (2 & rf) {
                var action_r13 = ctx.ngIf, ctx_r12 = core["\u0275\u0275nextContext"](4);
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngClass", core["\u0275\u0275pureFunction1"](5, _c2, ctx_r12.withFieldList)), 
                core["\u0275\u0275attribute"]("aria-label", action_r13.tooltip), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275property"]("name", action_r13.svgIconName)("sprite", action_r13.svgIconSpriteName)("pbiTooltip", action_r13.tooltip);
            }
        }
        function FieldPickerModernComponent_ng_container_2_ng_template_7_ng_container_0_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, FieldPickerModernComponent_ng_container_2_ng_template_7_ng_container_0_ng_container_1_Template, 4, 7, "ng-container", 1), 
            core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275elementContainerEnd"]()), 
            2 & rf) {
                var fieldItem_r11 = ctx.ngIf;
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](2, 1, fieldItem_r11.promotedAction$));
            }
        }
        function FieldPickerModernComponent_ng_container_2_ng_template_7_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275template"](0, FieldPickerModernComponent_ng_container_2_ng_template_7_ng_container_0_Template, 3, 3, "ng-container", 1), 
            core["\u0275\u0275pipe"](1, "itemAtPosition"), core["\u0275\u0275pipe"](2, "async")), 
            2 & rf) {
                var position_r9 = ctx.position, ctx_r6 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind2"](1, 1, core["\u0275\u0275pipeBind1"](2, 4, ctx_r6.fieldsView$), position_r9.join(",")));
            }
        }
        var _c3 = function(a0, a1) {
            return {
                v2Design: a0,
                error: a1
            };
        };
        function FieldPickerModernComponent_ng_container_2_ng_template_9_div_0_div_1_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "div", 16), 2 & rf) {
                var field_r17 = core["\u0275\u0275nextContext"](2).field, ctx_r19 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275property"]("ngClass", core["\u0275\u0275pureFunction2"](1, _c3, ctx_r19.withFieldList, field_r17.invalid));
            }
        }
        function FieldPickerModernComponent_ng_container_2_ng_template_9_div_0_button_2_Template(rf, ctx) {
            if (1 & rf) {
                var _r26 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "button", 17, 18), core["\u0275\u0275listener"]("click", function($event) {
                    core["\u0275\u0275restoreView"](_r26);
                    var _r24 = core["\u0275\u0275reference"](1), position_r16 = core["\u0275\u0275nextContext"](2).position, ctx_r25 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r25.openFlyout({
                        overlayOrigin: _r24.parentElement.parentElement,
                        fromFieldPosition: position_r16,
                        openedByKeyboard: 0 === $event.detail
                    }));
                })("keydown.arrowLeft", function() {
                    core["\u0275\u0275restoreView"](_r26);
                    var ctx_r28 = core["\u0275\u0275nextContext"](4);
                    return core["\u0275\u0275resetView"](ctx_r28.focusClearButton());
                }), core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r29 = core["\u0275\u0275nextContext"](2), field_r17 = ctx_r29.field, position_r16 = ctx_r29.position, ctx_r20 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275property"]("pbiTooltip", field_r17.actionTooltip), core["\u0275\u0275attribute"]("aria-expanded", ctx_r20.arePositionsEqual(core["\u0275\u0275pipeBind1"](2, 2, ctx_r20.flyoutOpenPosition$), position_r16));
            }
        }
        function FieldPickerModernComponent_ng_container_2_ng_template_9_div_0_button_3_Template(rf, ctx) {
            if (1 & rf) {
                var _r32 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "button", 19), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r32);
                    var position_r16 = core["\u0275\u0275nextContext"](2).position, ctx_r30 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r30.directEditStrategy.onEdit(position_r16));
                })("keydown.arrowLeft", function() {
                    core["\u0275\u0275restoreView"](_r32);
                    var ctx_r33 = core["\u0275\u0275nextContext"](4);
                    return core["\u0275\u0275resetView"](ctx_r33.focusClearButton());
                }), core["\u0275\u0275element"](1, "tri-svg-icon", 20), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var position_r16 = core["\u0275\u0275nextContext"](2).position, ctx_r21 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275property"]("pbiTooltip", ctx_r21.directEditStrategy.getActionTooltip())("disabled", ctx_r21.directEditStrategy.isDisabled(position_r16)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("name", "edit_20_regular");
            }
        }
        function FieldPickerModernComponent_ng_container_2_ng_template_9_div_0_button_4_Template(rf, ctx) {
            if (1 & rf) {
                var _r37 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "button", 21), core["\u0275\u0275listener"]("pbiMenuButtonClick", function($event) {
                    core["\u0275\u0275restoreView"](_r37);
                    var position_r16 = core["\u0275\u0275nextContext"](2).position, ctx_r35 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r35.onMenuItemSelected($event, position_r16));
                }), core["\u0275\u0275pipe"](1, "localize"), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var field_r17 = core["\u0275\u0275nextContext"](2).field, ctx_r22 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275property"]("pbiTooltip", core["\u0275\u0275pipeBind1"](1, 4, "Options_Menu"))("pbiMenu", field_r17.menu)("menuMode", ctx_r22.CompactMenuMode)("pbiMenuActivation", ctx_r22.pbiMenuActivation);
            }
        }
        function FieldPickerModernComponent_ng_container_2_ng_template_9_div_0_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 8), core["\u0275\u0275template"](1, FieldPickerModernComponent_ng_container_2_ng_template_9_div_0_div_1_Template, 1, 4, "div", 12), 
            core["\u0275\u0275template"](2, FieldPickerModernComponent_ng_container_2_ng_template_9_div_0_button_2_Template, 3, 4, "button", 13), 
            core["\u0275\u0275template"](3, FieldPickerModernComponent_ng_container_2_ng_template_9_div_0_button_3_Template, 2, 3, "button", 14), 
            core["\u0275\u0275template"](4, FieldPickerModernComponent_ng_container_2_ng_template_9_div_0_button_4_Template, 2, 6, "button", 15), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r39 = core["\u0275\u0275nextContext"](), position_r16 = ctx_r39.position, field_r17 = ctx_r39.field, ctx_r18 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx_r18.withFieldList && !ctx_r18.disallowReplaceItems), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx_r18.withFieldList && ctx_r18.canOpenFlyout(position_r16)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", null == ctx_r18.directEditStrategy ? null : ctx_r18.directEditStrategy.shouldAllowDirectEdit(position_r16)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !ctx_r18.withFieldList && !!field_r17.menu);
            }
        }
        function FieldPickerModernComponent_ng_container_2_ng_template_9_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275template"](0, FieldPickerModernComponent_ng_container_2_ng_template_9_div_0_Template, 5, 4, "div", 11), 
            2 & rf && core["\u0275\u0275property"]("ngIf", ctx.field);
        }
        function FieldPickerModernComponent_ng_container_2_Template(rf, ctx) {
            if (1 & rf) {
                var _r41 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, FieldPickerModernComponent_ng_container_2_label_1_Template, 2, 1, "label", 2), 
                core["\u0275\u0275elementStart"](2, "pbi-drag-drop-picker", 3, 4), core["\u0275\u0275listener"]("onChangeAdd", function($event) {
                    core["\u0275\u0275restoreView"](_r41);
                    var ctx_r40 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r40.onPickerChangeAdd($event));
                })("onChangeRemove", function($event) {
                    core["\u0275\u0275restoreView"](_r41);
                    var ctx_r42 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r42.onPickerChangeRemove($event));
                })("onChangeReorder", function($event) {
                    core["\u0275\u0275restoreView"](_r41);
                    var ctx_r43 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r43.onPickerChangeReorder($event));
                })("onChangeReplace", function($event) {
                    core["\u0275\u0275restoreView"](_r41);
                    var ctx_r44 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r44.onPickerChangeReplace($event));
                })("onChangeLabelUpdate", function($event) {
                    core["\u0275\u0275restoreView"](_r41);
                    var ctx_r45 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r45.onPickerChangeRename($event));
                })("onCrossPickerDrop", function($event) {
                    core["\u0275\u0275restoreView"](_r41);
                    var ctx_r46 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r46.onCrossPickerDrop.emit($event));
                })("onAddDataClick", function($event) {
                    core["\u0275\u0275restoreView"](_r41);
                    var ctx_r47 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](!ctx_r47.disabled && ctx_r47.openFlyout({
                        overlayOrigin: $event.overlayOrigin,
                        openedByKeyboard: 0 === $event.detail,
                        isAddingData: !0
                    }));
                })("onContentClick", function($event) {
                    core["\u0275\u0275restoreView"](_r41);
                    var ctx_r48 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r48.onContentClickEvent($event));
                })("onMenuItemClick", function($event) {
                    core["\u0275\u0275restoreView"](_r41);
                    var ctx_r49 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r49.onMenuItemSelected($event.menuButton, $event.position));
                })("onClearButtonArrowRight", function($event) {
                    core["\u0275\u0275restoreView"](_r41);
                    var ctx_r50 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r50.focusOpenFlyoutChevron($event));
                }), core["\u0275\u0275pipe"](4, "async"), core["\u0275\u0275pipe"](5, "async"), 
                core["\u0275\u0275pipe"](6, "localize"), core["\u0275\u0275template"](7, FieldPickerModernComponent_ng_container_2_ng_template_7_Template, 3, 6, "ng-template", null, 5, core["\u0275\u0275templateRefExtractor"]), 
                core["\u0275\u0275template"](9, FieldPickerModernComponent_ng_container_2_ng_template_9_Template, 1, 1, "ng-template", null, 6, core["\u0275\u0275templateRefExtractor"]), 
                core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementContainerEnd"]();
            }
            if (2 & rf) {
                var _r5 = core["\u0275\u0275reference"](8), _r7 = core["\u0275\u0275reference"](10), ctx_r1 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx_r1.label), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("compact", ctx_r1.compact)("ariaLabelledby", ctx_r1.ariaLabelledby)("dataFormat", ctx_r1.parameterPickerDataFormat)("disabled", core["\u0275\u0275pipeBind1"](4, 28, ctx_r1.changes$("disabled")))("placeholder", core["\u0275\u0275pipeBind1"](6, 32, "FieldDropZone_AddFields"))("addDataLabelKey", ctx_r1.addDataLabelKey)("addDataAriaLabelKey", ctx_r1.addDataAriaLabelKey)("draggable", ctx_r1.allowReorderItems)("allowEditingLabelsSetting", ctx_r1.allowEditingLabelsSetting)("allowMultipleValues", ctx_r1.allowMultipleValues)("allowClear", ctx_r1.allowClear)("disableDropZoneIndicator", ctx_r1.disableDropZoneIndicator)("disableContentClick", ctx_r1.disallowReplaceItems)("pbiDragDropPickerActionsTemplate", _r7)("itemPromotedActionTemplate", _r5)("externalCrossPickerDragDropMonitor", ctx_r1.externalCrossPickerDragDropMonitor)("v2Design", ctx_r1.withFieldList)("menuMode", ctx_r1.CompactMenuMode)("useCustomTooltip", ctx_r1.useCustomTooltip)("tooltipPosition", ctx_r1.tooltipPosition)("tooltipWithFlexiblePositions", ctx_r1.tooltipWithFlexiblePositions)("disableAutoScroll", ctx_r1.disableAutoScroll)("disableClearButtonTabNavigation", !0)("allowEmptyLabel", ctx_r1.emptyFieldSetsDefaultLabel), 
                core["\u0275\u0275attribute"]("aria-labelledby", ctx_r1.ariaLabelledby)("aria-describedby", ctx_r1.ariaDescribedby)("aria-disabled", core["\u0275\u0275pipeBind1"](5, 30, ctx_r1.changes$("disabled")));
            }
        }
        var _c4 = function(a0) {
            return {
                value: a0
            };
        }, FieldPickerModernComponent = function(_super) {
            function FieldPickerModernComponent(aggrOps, conceptualSchemaProxy, dataSourcesService, displayNameService, eventBridge, groupingDesignStateService, injector, localizationService, pbiOverlay, reportSettingsService, viewModeState, visualAuthoringOperationsService, pbiOverlayFactory, visualActionContext, hostOverlayRef) {
                var _this = _super.call(this) || this;
                return _this.aggrOps = aggrOps, _this.conceptualSchemaProxy = conceptualSchemaProxy, 
                _this.dataSourcesService = dataSourcesService, _this.displayNameService = displayNameService, 
                _this.eventBridge = eventBridge, _this.groupingDesignStateService = groupingDesignStateService, 
                _this.injector = injector, _this.localizationService = localizationService, _this.pbiOverlay = pbiOverlay, 
                _this.reportSettingsService = reportSettingsService, _this.viewModeState = viewModeState, 
                _this.visualAuthoringOperationsService = visualAuthoringOperationsService, _this.pbiOverlayFactory = pbiOverlayFactory, 
                _this.visualActionContext = visualActionContext, _this.hostOverlayRef = hostOverlayRef, 
                _this.withFieldList = !1, _this.parameterPickerDataFormat = pbi_tree_contracts.L$, 
                _this.onExprChange = new core.EventEmitter, _this.onCrossPickerDrop = new core.EventEmitter, 
                _this.flyoutOpenPosition$ = new BehaviorSubject.X(void 0), _this.pbiMenuActivation = "both", 
                _this.CompactMenuMode = pbi_menu_contracts.Kb.Compact, _this.fieldsMetadataUpdate$ = new BehaviorSubject.X(void 0), 
                _this.fieldsViewUpdate$ = new BehaviorSubject.X(void 0), _this;
            }
            return (0, tslib_es6.__extends)(FieldPickerModernComponent, _super), FieldPickerModernComponent.prototype.ngOnInit = function() {
                var _this = this;
                this.ensureStrategies(), this.changes$("enterExitFieldRename", !0).subscribe(function(args) {
                    !0 === (null == args ? void 0 : args.modeOn) ? _this.dragDropPickerRef.beginEditSection(args.fieldPosition) : !1 === (null == args ? void 0 : args.modeOn) && _this.dragDropPickerRef.endEditSection(args.fieldPosition);
                }), this.lifecycleSubscriptions.add(this.eventBridge.on(events.CCe).subscribe(function() {
                    return (0, tslib_es6.__awaiter)(_this, void 0, void 0, function() {
                        return (0, tslib_es6.__generator)(this, function(_a) {
                            switch (_a.label) {
                              case 0:
                                return [ 4, this.resetFieldListTreeModel() ];

                              case 1:
                                return _a.sent(), [ 2 ];
                            }
                        });
                    });
                })), this.changes$("initialExpr").pipe((0, map.U)(function(value) {
                    if (_this.allowMultipleValues || !_.isArray(value)) {
                        if (value && !_.isEmpty(value)) return (0, arrayExtensions.rY)(value);
                    } else debug.fF.assertFail("Expected initialExpr to be a single value when allowMultipleValues is false.");
                }), (0, distinctUntilChanged.x)(function(prev, curr) {
                    if (_.isEmpty(curr)) {
                        var currentVal = _this.fieldsMetadataUpdate$.getValue();
                        return _.isEmpty(null == currentVal ? void 0 : currentVal.metadata);
                    }
                    return function(exprs1, exprs2) {
                        if (_.size(exprs1) !== _.size(exprs2)) return !1;
                        for (var _loop_1 = function(expr1) {
                            if (!_.some(exprs2, function(expr2) {
                                return (0, sqExprEqualityVisitor.fS)(expr1, expr2);
                            })) return {
                                value: !1
                            };
                        }, _i = 0, _a = null != exprs1 ? exprs1 : []; _i < _a.length; _i++) {
                            var state_1 = _loop_1(_a[_i]);
                            if ("object" == typeof state_1) return state_1.value;
                        }
                        return !0;
                    }(_.map(prev, function(prev) {
                        return prev.expr;
                    }), _.map(curr, function(curr) {
                        return curr.expr;
                    }));
                }), (0, switchMap.w)(function(initialExprs) {
                    return (0, from.D)(_this.getSchema()).pipe((0, map.U)(function(schema) {
                        return {
                            initialExprs,
                            schema
                        };
                    }));
                })).subscribe(function(_a) {
                    return _this.updaterPickerWithInitialExprs(_a.initialExprs, _a.schema);
                }), this.lifecycleSubscriptions.add(this.fieldsMetadataUpdate$.subscribe(function(metadataUpdate) {
                    if (metadataUpdate && (_this.setFieldsViewUpdate(metadataUpdate), function(update) {
                        if (!update) return !1;
                        var updateType = update.type;
                        switch (updateType) {
                          case "add":
                          case "delete":
                          case "rename":
                          case "reorder":
                          case "replace":
                            return !0;

                          case "initialize":
                            return !1;

                          default:
                            return debug.fF.assertNever(updateType), !1;
                        }
                    }(metadataUpdate.update))) {
                        var newExprs = _.map(metadataUpdate.metadata, function(field) {
                            return {
                                expr: field.expr,
                                metadata: field.metadata
                            };
                        }), newExpr = _this.allowMultipleValues ? newExprs : _.first(newExprs);
                        _this.onExprChange.emit({
                            newExpr,
                            fromUpdate: metadataUpdate.update
                        });
                    }
                })), this.lifecycleSubscriptions.add(this.fieldsViewUpdate$.subscribe(function(fieldsViewUpdate) {
                    _this.dragDropPickerRef && fieldsViewUpdate && "delete" !== fieldsViewUpdate.update.type && (_this.dragDropPickerRef.setAllData(_.map(fieldsViewUpdate.view, function(fieldView) {
                        return createDragDropPickerData(fieldView);
                    })), _this.dragDropPickerRef.detectChanges());
                })), this.fieldsView$ = this.fieldsViewUpdate$.pipe((0, map.U)(function(update) {
                    return null == update ? void 0 : update.view;
                })), this.visualAuthoringOperationsService.setVisualActionContext(this.visualActionContext);
            }, FieldPickerModernComponent.prototype.canOpenFlyout = function(flyoutOpenFromPosition) {
                var _a;
                return !this.disallowReplaceItems && (null === (_a = this.flyoutFieldsStrategyEnsured) || void 0 === _a ? void 0 : _a.canOpenFlyout(flyoutOpenFromPosition));
            }, Object.defineProperty(FieldPickerModernComponent.prototype, "allowEditingLabelsSetting", {
                get: function() {
                    return "varyByItem";
                },
                enumerable: !1,
                configurable: !0
            }), FieldPickerModernComponent.prototype.onPickerChangeRemove = function(eventArgs) {
                this.removeFieldMetadata(eventArgs.position);
            }, FieldPickerModernComponent.prototype.onPickerChangeAdd = function(eventArgs) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.onPickerChangeAddReplaceInternal({
                                type: "add",
                                data: eventArgs.data,
                                position: eventArgs.position
                            }) ];

                          case 1:
                            return _a.sent(), [ 2 ];
                        }
                    });
                });
            }, FieldPickerModernComponent.prototype.onPickerChangeReplace = function(eventArgs) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.onPickerChangeAddReplaceInternal({
                                type: "replace",
                                data: eventArgs.data,
                                position: eventArgs.position
                            }) ];

                          case 1:
                            return _a.sent(), [ 2 ];
                        }
                    });
                });
            }, FieldPickerModernComponent.prototype.onPickerChangeReorder = function(eventArgs) {
                this.reorderFieldMetadata(eventArgs.fromPosition, eventArgs.toPosition);
            }, FieldPickerModernComponent.prototype.onPickerChangeRename = function(eventArgs) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var newName, fieldPosition, currentFieldsMetadata, updateInfo, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        return newName = eventArgs.newLabel, fieldPosition = eventArgs.position, currentFieldsMetadata = (0, 
                        tslib_es6.__spreadArray)([], this.fieldsMetadataUpdate$.value.metadata, !0), (0, 
                        pbi_drag_drop_picker_component.ri)(currentFieldsMetadata, fieldPosition, function(lowestLevelSiblings, lowestLevelIndex) {
                            var originalMetadata = lowestLevelSiblings[lowestLevelIndex];
                            debug.fF.assert(function() {
                                return "varyByItem" === _this.allowEditingLabelsSetting && originalMetadata.allowRename;
                            }, "the item does not allow rename!"), lowestLevelSiblings[lowestLevelIndex] = (0, 
                            tslib_es6.__assign)((0, tslib_es6.__assign)({}, originalMetadata), {
                                displayName: {
                                    value: newName,
                                    fromOverride: !0
                                }
                            });
                        }), updateInfo = function(position, newName) {
                            return {
                                type: "rename",
                                renamed: {
                                    position,
                                    newName
                                }
                            };
                        }(fieldPosition, newName), this.updateFieldsMetadata(currentFieldsMetadata, updateInfo), 
                        [ 2 ];
                    });
                });
            }, FieldPickerModernComponent.prototype.onPickerChangeAddReplaceInternal = function(change) {
                var _a, _b;
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var schema, pickerOriginalQueryExpr, pickerOriginalExpr, exprAndMetadata, changePosition, isReplace, originalFields, effectiveReplacementPosition, originalFieldView, replacementPickerData, deletePosition;
                    return (0, tslib_es6.__generator)(this, function(_c) {
                        switch (_c.label) {
                          case 0:
                            return [ 4, this.getSchema() ];

                          case 1:
                            return schema = _c.sent(), debug.fF.assertValue(pickerOriginalQueryExpr = change.data.fieldExpr, "expect change data has fieldExpr and value not null"), 
                            pickerOriginalQueryExpr ? (pickerOriginalExpr = semanticQuerySerializer.ib.deserializeExpr(pickerOriginalQueryExpr), 
                            [ 4, this.dropExprStrategyInternal.getDropExpr(pickerOriginalExpr, schema) ]) : [ 3, 3 ];

                          case 2:
                            exprAndMetadata = _c.sent(), _c.label = 3;

                          case 3:
                            if (changePosition = change.position, isReplace = "replace" === change.type, exprAndMetadata) this.addReplaceFieldMetadata(exprAndMetadata, pickerOriginalExpr, changePosition, isReplace, schema); else {
                                if (!this.dragDropPickerRef) return [ 2 ];
                                originalFields = null === (_a = this.fieldsViewUpdate$.value) || void 0 === _a ? void 0 : _a.view, 
                                effectiveReplacementPosition = this.getEffectiveReplacementPosition(changePosition, _.size(originalFields), isReplace), 
                                originalFieldView = null != effectiveReplacementPosition ? (0, pbi_drag_drop_picker_component.X)(originalFields, effectiveReplacementPosition) : void 0, 
                                null == (replacementPickerData = null == originalFieldView ? void 0 : originalFieldView.pickerData) ? (deletePosition = "end" === changePosition ? [ _.size(null === (_b = this.fieldsViewUpdate$.value) || void 0 === _b ? void 0 : _b.view) ] : changePosition, 
                                this.dragDropPickerRef.handleClear(deletePosition, !0)) : this.dragDropPickerRef.replaceData((0, 
                                tslib_es6.__assign)((0, tslib_es6.__assign)({}, replacementPickerData), {
                                    allowEditLabel: originalFieldView.allowRename,
                                    menu: originalFieldView.menuFactory
                                }), effectiveReplacementPosition), this.dragDropPickerRef.detectChanges();
                            }
                            return [ 2 ];
                        }
                    });
                });
            }, FieldPickerModernComponent.prototype.onContentClickEvent = function(event) {
                var overlayOrigin = event.overlayOrigin, position = event.position;
                this.canOpenFlyout(position) && this.openFlyout({
                    overlayOrigin,
                    fromFieldPosition: position
                });
            }, FieldPickerModernComponent.prototype.openFlyout = function(openFlyoutArgs) {
                var _a, _b;
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var overlayOrigin, fromFieldPosition, openedByKeyboard, isAddingData, positionStrategy, currentFieldsMetadata, existingFromField, existingFromFieldExpr, schema, aggregationMenuItems, variationsMenuItems, _i, _c, item, data, action, overlayRef, providers, visualCalcCreationInfo, fieldPickerFlyoutMinHeight, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_d) {
                        switch (_d.label) {
                          case 0:
                            return overlayOrigin = openFlyoutArgs.overlayOrigin, fromFieldPosition = openFlyoutArgs.fromFieldPosition, 
                            openedByKeyboard = openFlyoutArgs.openedByKeyboard, isAddingData = openFlyoutArgs.isAddingData, 
                            this.shouldFieldListShowHiddenFields() === this.lastFieldListShowHiddenFields ? [ 3, 2 ] : [ 4, this.resetFieldListTreeModel() ];

                          case 1:
                            _d.sent(), _d.label = 2;

                          case 2:
                            return positionStrategy = this.pbiOverlay.position().flexibleConnectedTo(overlayOrigin).withPositions([ (0, 
                            pbi_overlay_positions.v3)(), (0, pbi_overlay_positions.J7)(), (0, pbi_overlay_positions.Zz)(), (0, 
                            pbi_overlay_positions.q6)(), (0, pbi_overlay_positions.Kb)(), (0, pbi_overlay_positions.Iz)() ]).withFlexibleDimensions(!0).withPush(!0).withViewportMargin(4).withGrowAfterOpen(!0), 
                            null != this.fieldListTreeModel ? [ 3, 4 ] : [ 4, this.resetFieldListTreeModel() ];

                          case 3:
                            _d.sent(), _d.label = 4;

                          case 4:
                            return currentFieldsMetadata = null === (_a = this.fieldsMetadataUpdate$.value) || void 0 === _a ? void 0 : _a.metadata, 
                            debug.fF.assert(function() {
                                return _.size(fromFieldPosition) <= 2;
                            }, "field-picker-modern right now only supports maximum 2-levels of fields."), existingFromField = null != fromFieldPosition ? (0, 
                            pbi_drag_drop_picker_component.X)(currentFieldsMetadata, fromFieldPosition) : void 0, 
                            existingFromFieldExpr = null == existingFromField ? void 0 : existingFromField.expr, 
                            [ 4, this.getSchemaForFlyout() ];

                          case 5:
                            if (schema = _d.sent(), aggregationMenuItems = [], variationsMenuItems = [], null == existingFromField ? void 0 : existingFromField.menu) for (_i = 0, 
                            _c = existingFromField.menu.items; _i < _c.length; _i++) (item = _c[_i]).type === pbi_menu_contracts.iB.Button && (4 !== (action = null == (data = item.data) ? void 0 : data.action) && 2 !== action || aggregationMenuItems.push(item), 
                            128 === action && variationsMenuItems.push(item));
                            return (providers = new WeakMap).set(context_activity_utils.yk, this.visualActionContext), 
                            (null === (_b = this.visualCalcFieldsStrategy) || void 0 === _b ? void 0 : _b.isEditableVisualCalc(existingFromFieldExpr)) ? [ 4, this.pbiOverlay.openWithFactoryLazy({
                                modulePath: "@powerbi/ExploreUIAuthoring/lazy-modules/visual-calc-flyout/visual-calc-flyout.module#VisualCalcFlyoutModule",
                                componentId: "VisualCalcFlyoutComponentId",
                                data: {
                                    queryName: this.visualCalcFieldsStrategy.getQueryName(fromFieldPosition)
                                },
                                options: {
                                    positionStrategy,
                                    hasBackdrop: !0,
                                    backdropClass: pbi_overlay_service.L,
                                    minWidth: 150
                                },
                                closeOnBackdropClick: !0,
                                hasCaret: !0,
                                caretSize: 0,
                                injector: this.injector,
                                providers
                            }, this.pbiOverlayFactory) ] : [ 3, 7 ];

                          case 6:
                            return overlayRef = _d.sent(), [ 3, 9 ];

                          case 7:
                            return [ 4, this.flyoutFieldsStrategyEnsured.getVisualCalcCreationInfo(this.role) ];

                          case 8:
                            visualCalcCreationInfo = _d.sent(), fieldPickerFlyoutMinHeight = isAddingData ? this.hostOverlayRef ? this.hostOverlayRef.overlayRef.overlayElement.getBoundingClientRect().height : 500 : void 0, 
                            overlayRef = this.pbiOverlay.openWithFactory({
                                component: FieldPickerFlyoutComponent,
                                data: {
                                    isAddingData,
                                    visualCapabilities: this.visualCapabilities,
                                    schema,
                                    fieldListModel: this.fieldListTreeModel,
                                    perspectiveDisplayName: this.perspectiveDisplayName,
                                    perspectiveDoesNotExist: this.perspectiveDoesNotExist,
                                    currentSelection: this.flyoutFieldsStrategyEnsured.getFieldsToSelectOnOpen(fromFieldPosition, existingFromFieldExpr),
                                    disabledCollection: this.flyoutFieldsStrategyEnsured.getFieldsToDisableOnOpen(fromFieldPosition, existingFromFieldExpr, this.fieldListTreeExprs, schema),
                                    allowSelectEntities: this.allowEntityField,
                                    aggregationMenuItems,
                                    variationsMenuItems,
                                    onMenuItemSelected: function(item) {
                                        return _this.onMenuItemSelected(item, fromFieldPosition);
                                    },
                                    openedByKeyboard,
                                    fieldListOverlayPanelClass: this.fieldListOverlayPanelClass,
                                    role: this.role,
                                    handleCheckedField: function(result) {
                                        return _this.handleCheckedField(result, fromFieldPosition);
                                    },
                                    handleUncheckedField: function(result) {
                                        return _this.handleUncheckedField(result);
                                    },
                                    visualCalcCreationInfo
                                },
                                options: {
                                    positionStrategy,
                                    hasBackdrop: !0,
                                    backdropClass: pbi_overlay_service.L,
                                    minWidth: 206,
                                    minHeight: fieldPickerFlyoutMinHeight
                                },
                                closeOnBackdropClick: !0,
                                hasCaret: !0,
                                caretSize: 0,
                                injector: this.injector,
                                providers
                            }, this.pbiOverlayFactory), _d.label = 9;

                          case 9:
                            return null != fromFieldPosition && this.flyoutOpenPosition$.next(fromFieldPosition), 
                            overlayRef.onClose.pipe((0, take.q)(1)).subscribe(function(result) {
                                return (0, tslib_es6.__awaiter)(_this, void 0, void 0, function() {
                                    var queryName, _a;
                                    return (0, tslib_es6.__generator)(this, function(_b) {
                                        switch (_b.label) {
                                          case 0:
                                            return null != this.flyoutOpenPosition$.value && this.flyoutOpenPosition$.next(void 0), 
                                            result ? function(result) {
                                                return 0 === result.action || 2 === result.action;
                                            }(result) ? 0 !== result.action ? [ 3, 2 ] : [ 4, this.flyoutFieldsStrategyEnsured.handleSelectedField(result.newSelection, fromFieldPosition) ] : [ 3, 4 ] : [ 2 ];

                                          case 1:
                                            return _b.sent(), [ 3, 4 ];

                                          case 2:
                                            return 2 !== result.action ? [ 3, 4 ] : [ 4, this.flyoutFieldsStrategyEnsured.onCloseWithCreateVisualCalc(this.role) ];

                                          case 3:
                                            _b.sent(), _b.label = 4;

                                          case 4:
                                            return function(result) {
                                                return 1 === result.action;
                                            }(result) ? (debug.fF.assertValue(queryName = result.queryName, "queryName of the visual calc to be edit"), 
                                            null == queryName ? [ 2 ] : [ 4, null === (_a = this.visualCalcFieldsStrategy) || void 0 === _a ? void 0 : _a.onEditVisualCalc(result.queryName) ]) : [ 3, 6 ];

                                          case 5:
                                            _b.sent(), _b.label = 6;

                                          case 6:
                                            return [ 2 ];
                                        }
                                    });
                                });
                            }), [ 2 ];
                        }
                    });
                });
            }, FieldPickerModernComponent.prototype.onMenuItemSelected = function(item, position) {
                var _a;
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var schema, updateInfo, update, metadataBeforeUpdate, newFieldExprsNormalized, newFieldsMetadata, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return [ 4, this.getSchema() ];

                          case 1:
                            return schema = _b.sent(), (updateInfo = this.menuStrategyInternal.menuItemClickHandler(item, position, schema)) ? (update = updateInfo.fromUpdate, 
                            metadataBeforeUpdate = null === (_a = this.fieldsMetadataUpdate$.value) || void 0 === _a ? void 0 : _a.metadata, 
                            newFieldExprsNormalized = (0, arrayExtensions.rY)(updateInfo.newExpr), newFieldsMetadata = _.map(newFieldExprsNormalized, function(exprAndMetadata, newFieldIndex) {
                                return _this.createFieldMetadata(exprAndMetadata, exprAndMetadata.expr, [ newFieldIndex ], schema, update);
                            }), newFieldsMetadata = _.map(newFieldsMetadata, function(fieldMetadata, index) {
                                return getFieldWithSelfAndDescendantsExistingNamesEnsured(fieldMetadata, [ index ], newFieldsMetadata, metadataBeforeUpdate, update);
                            }), this.updateFieldsMetadata(newFieldsMetadata, update), [ 2 ]) : [ 2 ];
                        }
                    });
                });
            }, FieldPickerModernComponent.prototype.handleCheckedField = function(result, position) {
                this.flyoutFieldsStrategyEnsured.handleSelectedField(result.newSelection, position);
            }, FieldPickerModernComponent.prototype.handleUncheckedField = function(result) {
                this.flyoutFieldsStrategyEnsured.handleDeselectedField(result.newSelection);
            }, FieldPickerModernComponent.prototype.focusOpenFlyoutChevron = function(args) {
                this.openFlyoutChevronQueryList && (this.previousFocusedClearButton = args.currentFocusedClearButton, 
                this.openFlyoutChevronQueryList.get(args.topLevelIndex).nativeElement.focus());
            }, FieldPickerModernComponent.prototype.arePositionsEqual = function(position1, position2) {
                return arePositionsEqual(position1, position2);
            }, FieldPickerModernComponent.prototype.focusClearButton = function() {
                this.previousFocusedClearButton && this.previousFocusedClearButton.focus();
            }, FieldPickerModernComponent.prototype.updaterPickerWithInitialExprs = function(initialExprs, schema) {
                var _this = this, initializationUpdate = {
                    type: "initialize"
                };
                this.updateFieldsMetadata(_.map(initialExprs, function(exprAndMetadata, index) {
                    return _this.createFieldMetadata(exprAndMetadata, exprAndMetadata.expr, [ index ], schema, initializationUpdate);
                }), initializationUpdate);
            }, FieldPickerModernComponent.prototype.createFieldMetadata = function(exprAndMetadata, pickerDataExpr, position, schema, update) {
                var _a, _b, _this = this, childrenExprs = this.dropExprStrategyInternal.getDroppedExprChildren(exprAndMetadata, position, schema, update), fieldPickerUpdate = update;
                return {
                    expr: exprAndMetadata.expr,
                    metadata: exprAndMetadata.metadata,
                    pickerDataExpr,
                    allowRename: this.nameStrategyInternal.isRenameAllowed(position, fieldPickerUpdate),
                    menu: this.menuStrategyInternal.getMenu(exprAndMetadata.expr, position, schema, update),
                    displayName: {
                        value: this.nameStrategyInternal.getDisplayName(exprAndMetadata.expr, position, schema, fieldPickerUpdate),
                        fromOverride: !1,
                        pbiStyle: this.nameStrategyInternal.getDisplayNameStyle ? this.nameStrategyInternal.getDisplayNameStyle(position, fieldPickerUpdate) : void 0
                    },
                    customTooltipContent: this.nameStrategyInternal.getCustomTooltipContent ? this.nameStrategyInternal.getCustomTooltipContent(exprAndMetadata.expr, schema, position, fieldPickerUpdate) : void 0,
                    children: _.isEmpty(childrenExprs) ? void 0 : _.map(childrenExprs, function(childExprAndMetadata, childIndex) {
                        var childPosition = position.concat(childIndex);
                        return _this.createFieldMetadata(childExprAndMetadata, childExprAndMetadata.expr, childPosition, schema, update);
                    }),
                    promotedAction$: null === (_a = this.promotedActionStrategy) || void 0 === _a ? void 0 : _a.getAction(position, fieldPickerUpdate),
                    invalid: this.nameStrategyInternal.isFieldInvalid(position, fieldPickerUpdate),
                    actionTooltip: (null === (_b = this.visualCalcFieldsStrategy) || void 0 === _b ? void 0 : _b.isEditableVisualCalc(exprAndMetadata.expr)) ? this.localizationService.get("Calculation_Options") : this.localizationService.get("Data_Options")
                };
            }, FieldPickerModernComponent.prototype.addReplaceFieldMetadata = function(exprAndMetadata, pickerDataExpr, position, isReplace, schema) {
                var _a;
                debug.fF.assertValue(!isReplace || "end" !== position, "expect position to be a valid ItemPosition when it is for replace");
                var fieldsMetadataBefore = null === (_a = this.fieldsMetadataUpdate$.value) || void 0 === _a ? void 0 : _a.metadata, effectiveReplacementPosition = this.getEffectiveReplacementPosition(position, _.size(fieldsMetadataBefore), isReplace), isEffectiveReplace = null != effectiveReplacementPosition, effectiveAddPosition = isEffectiveReplace ? void 0 : "end" === position ? [ _.size(fieldsMetadataBefore) ] : position, replacedFieldOriginalMetadata = isEffectiveReplace ? (0, 
                pbi_drag_drop_picker_component.X)(fieldsMetadataBefore, effectiveReplacementPosition).metadata : void 0, updateInfo = isEffectiveReplace ? createFieldReplaceUpdate(effectiveReplacementPosition, replacedFieldOriginalMetadata) : function(position, pickerOriginalExpr, metadata) {
                    return {
                        type: "add",
                        added: {
                            position,
                            pickerOriginalExpr,
                            metadata
                        }
                    };
                }(effectiveAddPosition, pickerDataExpr, exprAndMetadata.metadata), newFieldPosition = isEffectiveReplace ? effectiveReplacementPosition : effectiveAddPosition, newFieldMetadata = this.createFieldMetadata(exprAndMetadata, pickerDataExpr, newFieldPosition, schema, updateInfo), newFieldsMetadata = (0, 
                tslib_es6.__spreadArray)([], fieldsMetadataBefore || [], !0), deleteCount = isEffectiveReplace ? 1 : 0;
                if (1 === _.size(newFieldPosition)) newFieldsMetadata.splice(newFieldPosition[0], deleteCount, newFieldMetadata); else {
                    var parentPosition = newFieldPosition.slice(0, -1);
                    (0, pbi_drag_drop_picker_component.ri)(newFieldsMetadata, parentPosition, function(lowestLevelSiblings, lowestLevelIndex) {
                        var parent = lowestLevelSiblings[lowestLevelIndex], newChildren = (0, tslib_es6.__spreadArray)([], parent.children, !0), newChildIndex = _.last(newFieldPosition);
                        newChildren.splice(newChildIndex, deleteCount, newFieldMetadata), lowestLevelSiblings[lowestLevelIndex] = (0, 
                        tslib_es6.__assign)((0, tslib_es6.__assign)({}, parent), {
                            children: newChildren
                        });
                    });
                }
                this.updateFieldsMetadata(newFieldsMetadata, updateInfo);
            }, FieldPickerModernComponent.prototype.reorderFieldMetadata = function(fromPosition, toPosition) {
                var _a, _this = this;
                debug.fF.assert(function() {
                    return _this.allowMultipleValues;
                }, "expect this to be called only when this allows multiple values");
                var parentFieldPosition = fromPosition.slice(0, -1);
                debug.fF.assert(function() {
                    return arePositionsEqual(parentFieldPosition, toPosition.slice(0, -1));
                }, "Expect reordering only among siblings. Add your implement for new scenario.");
                var fieldsMetadataBefore = null === (_a = this.fieldsMetadataUpdate$.value) || void 0 === _a ? void 0 : _a.metadata, parentFieldMetadataBefore = _.isEmpty(parentFieldPosition) ? void 0 : (0, 
                pbi_drag_drop_picker_component.X)(fieldsMetadataBefore, parentFieldPosition), siblingsBefore = parentFieldMetadataBefore ? parentFieldMetadataBefore.children : fieldsMetadataBefore, fromIndex = _.last(fromPosition), toIndex = _.last(toPosition), originalFromField = siblingsBefore[fromIndex];
                debug.fF.assert(function() {
                    return _.inRange(fromIndex, 0, _.size(siblingsBefore));
                }, "fromIndex value is invalid"), debug.fF.assert(function() {
                    return _.inRange(toIndex, 0, _.size(siblingsBefore) + 1);
                }, "toIndex value is invalid");
                var newFieldsMetadata, newSiblings = (0, tslib_es6.__spreadArray)([], siblingsBefore, !0);
                newSiblings[fromIndex] = void 0, newSiblings.splice(toIndex, 0, originalFromField), 
                newSiblings = _.filter(newSiblings, function(item) {
                    return !!item;
                }), parentFieldMetadataBefore ? (newFieldsMetadata = (0, tslib_es6.__spreadArray)([], fieldsMetadataBefore, !0), 
                (0, pbi_drag_drop_picker_component.ri)(newFieldsMetadata, parentFieldPosition, function(lowestLevelSiblings, lowestLevelIndex) {
                    var newParentField = lowestLevelSiblings[lowestLevelIndex];
                    newParentField = (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, newParentField), {
                        children: newSiblings
                    }), lowestLevelSiblings.splice(lowestLevelIndex, 1, newParentField);
                })) : newFieldsMetadata = newSiblings;
                var updateInfo = function(fromPosition, toPosition, fromItemMetadata) {
                    return {
                        type: "reorder",
                        reordered: {
                            fromPosition,
                            toPosition,
                            originalMetadata: fromItemMetadata
                        }
                    };
                }(fromPosition, toPosition, originalFromField.metadata);
                this.updateFieldsMetadata(newFieldsMetadata, updateInfo);
            }, FieldPickerModernComponent.prototype.removeFieldMetadata = function(position) {
                var _a, _b, removed, currentFieldsMetadata = (0, tslib_es6.__spreadArray)([], null !== (_b = null === (_a = this.fieldsMetadataUpdate$.value) || void 0 === _a ? void 0 : _a.metadata) && void 0 !== _b ? _b : [], !0);
                if (1 === _.size(position)) removed = currentFieldsMetadata.splice(position[0], 1)[0]; else {
                    var parentPosition = position.slice(0, -1);
                    removed = (0, pbi_drag_drop_picker_component.ri)(currentFieldsMetadata, parentPosition, function(lowestLevelSiblings, lowestLevelIndex) {
                        var parentOfRemove = lowestLevelSiblings[lowestLevelIndex], newChildren = (0, tslib_es6.__spreadArray)([], parentOfRemove.children, !0), toRemoveChildIndex = _.last(position), removed = newChildren.splice(toRemoveChildIndex, 1)[0];
                        return lowestLevelSiblings[lowestLevelIndex] = (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, parentOfRemove), {
                            children: newChildren
                        }), removed;
                    });
                }
                var updateInfo = function(position, exprAndMetadata) {
                    return {
                        type: "delete",
                        deleted: {
                            position,
                            expr: exprAndMetadata.expr,
                            metadata: exprAndMetadata.metadata
                        }
                    };
                }(position, removed);
                this.updateFieldsMetadata(currentFieldsMetadata, updateInfo);
            }, FieldPickerModernComponent.prototype.updateFieldsMetadata = function(data, update) {
                this.fieldsMetadataUpdate$.next({
                    metadata: _.map(data, function(singleFieldData) {
                        return {
                            expr: singleFieldData.expr,
                            metadata: singleFieldData.metadata,
                            pickerDataExpr: singleFieldData.pickerDataExpr,
                            allowRename: singleFieldData.allowRename,
                            displayName: singleFieldData.displayName,
                            menu: singleFieldData.menu,
                            children: singleFieldData.children,
                            customTooltipContent: singleFieldData.customTooltipContent,
                            promotedAction$: singleFieldData.promotedAction$,
                            invalid: singleFieldData.invalid,
                            actionTooltip: singleFieldData.actionTooltip
                        };
                    }),
                    update
                });
            }, FieldPickerModernComponent.prototype.setFieldsViewUpdate = function(fieldsMetadataUpdate) {
                debug.fF.assertValue(fieldsMetadataUpdate, "Expect fieldsMetadataUpdate to be defined");
                var newFieldsView = _.map(fieldsMetadataUpdate.metadata, function(fieldMetadata) {
                    return createFieldView(fieldMetadata);
                });
                this.fieldsViewUpdate$.next({
                    view: newFieldsView,
                    update: fieldsMetadataUpdate.update
                });
            }, FieldPickerModernComponent.prototype.ensureStrategies = function() {
                var _this = this;
                (0, combineLatest.aj)([ this.changes$("alwaysAllowAggregate", !0), this.changes$("aggregatesConstraint", !0), this.changes$("validators", !0) ]).pipe((0, 
                takeUntil.R)(this.onDestroy$)).subscribe(function(_a) {
                    _this.defaultStrategy = new FieldPickerOpsDefaultStrategy(function() {
                        var _a;
                        return null === (_a = _this.fieldsMetadataUpdate$.value) || void 0 === _a ? void 0 : _a.metadata;
                    }, function() {
                        return _this.dragDropPickerRef;
                    }, _a[0], _a[1], _a[2], _this.aggrOps, _this.conceptualSchemaProxy, _this.dataSourcesService, _this.displayNameService, _this.localizationService);
                }), this.changes$("menuStrategy", !0).subscribe(function(menuStrategy) {
                    _this.menuStrategyInternal = null != menuStrategy ? menuStrategy : _this.defaultStrategy;
                }), this.changes$("getDropExprStrategy", !0).subscribe(function(getDropExprStrategy) {
                    _this.dropExprStrategyInternal = null != getDropExprStrategy ? getDropExprStrategy : _this.defaultStrategy;
                }), this.changes$("displayNameStrategy", !0).subscribe(function(displayNameStrategy) {
                    _this.nameStrategyInternal = null != displayNameStrategy ? displayNameStrategy : _this.defaultStrategy, 
                    _this.useCustomTooltip = !!_this.nameStrategyInternal.getCustomTooltipContent;
                }), this.changes$("flyoutFieldsStrategy", !0).subscribe(function(flyoutFieldsStrategy) {
                    _this.flyoutFieldsStrategyEnsured = {
                        getFieldsToSelectOnOpen: function(flyoutOpenFromPosition, flyoutOpenFromField) {
                            return (null == flyoutFieldsStrategy ? void 0 : flyoutFieldsStrategy.getFieldsToSelectOnOpen) ? flyoutFieldsStrategy.getFieldsToSelectOnOpen(flyoutOpenFromPosition, flyoutOpenFromField) : _this.defaultStrategy.getFieldsToSelectOnOpen(flyoutOpenFromPosition, flyoutOpenFromField);
                        },
                        getFieldsToDisableOnOpen: function(flyoutOpenFromPosition, flyoutOpenFromField, allFields, schema) {
                            return (null == flyoutFieldsStrategy ? void 0 : flyoutFieldsStrategy.getFieldsToDisableOnOpen) ? flyoutFieldsStrategy.getFieldsToDisableOnOpen(flyoutOpenFromPosition, flyoutOpenFromField, allFields, schema) : _this.defaultStrategy.getFieldsToDisableOnOpen(flyoutOpenFromPosition, flyoutOpenFromField, allFields, schema);
                        },
                        handleSelectedField: function(field, flyoutOpenFromPosition) {
                            return (0, tslib_es6.__awaiter)(_this, void 0, void 0, function() {
                                return (0, tslib_es6.__generator)(this, function(_a) {
                                    switch (_a.label) {
                                      case 0:
                                        return (null == flyoutFieldsStrategy ? void 0 : flyoutFieldsStrategy.handleSelectedField) ? [ 4, flyoutFieldsStrategy.handleSelectedField(field, flyoutOpenFromPosition) ] : [ 3, 2 ];

                                      case 1:
                                        return _a.sent(), [ 3, 4 ];

                                      case 2:
                                        return [ 4, this.defaultStrategy.handleSelectedField(field, flyoutOpenFromPosition) ];

                                      case 3:
                                        _a.sent(), _a.label = 4;

                                      case 4:
                                        return [ 2 ];
                                    }
                                });
                            });
                        },
                        handleDeselectedField: function(field) {
                            (null == flyoutFieldsStrategy ? void 0 : flyoutFieldsStrategy.handleDeselectedField) ? flyoutFieldsStrategy.handleDeselectedField(field) : _this.defaultStrategy.handleDeselectedField(field);
                        },
                        onCloseWithCreateVisualCalc: function(roleName) {
                            return (0, tslib_es6.__awaiter)(_this, void 0, void 0, function() {
                                return (0, tslib_es6.__generator)(this, function(_a) {
                                    switch (_a.label) {
                                      case 0:
                                        return (null == flyoutFieldsStrategy ? void 0 : flyoutFieldsStrategy.onCloseWithCreateVisualCalc) ? [ 4, flyoutFieldsStrategy.onCloseWithCreateVisualCalc(roleName) ] : [ 3, 2 ];

                                      case 1:
                                        return _a.sent(), [ 3, 4 ];

                                      case 2:
                                        return [ 4, this.defaultStrategy.onCloseWithNewVisualCalc(roleName) ];

                                      case 3:
                                        _a.sent(), _a.label = 4;

                                      case 4:
                                        return [ 2 ];
                                    }
                                });
                            });
                        },
                        getVisualCalcCreationInfo: function(roleName) {
                            return (0, tslib_es6.__awaiter)(_this, void 0, void 0, function() {
                                return (0, tslib_es6.__generator)(this, function(_a) {
                                    switch (_a.label) {
                                      case 0:
                                        return (null == flyoutFieldsStrategy ? void 0 : flyoutFieldsStrategy.getVisualCalcCreationInfo) ? [ 4, flyoutFieldsStrategy.getVisualCalcCreationInfo(roleName) ] : [ 3, 2 ];

                                      case 1:
                                        return [ 2, _a.sent() ];

                                      case 2:
                                        return [ 2, this.defaultStrategy.getVisualCalcCreationInfo(roleName) ];
                                    }
                                });
                            });
                        },
                        canOpenFlyout: function(flyoutOpenFromPosition) {
                            return (null == flyoutFieldsStrategy ? void 0 : flyoutFieldsStrategy.canOpenFlyout) ? flyoutFieldsStrategy.canOpenFlyout(flyoutOpenFromPosition) : _this.defaultStrategy.canOpenFlyout(flyoutOpenFromPosition);
                        }
                    };
                });
            }, FieldPickerModernComponent.prototype.buildFieldListTreeModel = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var schema;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.getSchemaForFlyout() ];

                          case 1:
                            return (schema = _a.sent()) ? (this.lastFieldListShowHiddenFields = this.shouldFieldListShowHiddenFields(), 
                            [ 2, new fieldListViewModelFactory.O(this.localizationService).createModel(schema, !1, !this.lastFieldListShowHiddenFields) ]) : [ 2 ];
                        }
                    });
                });
            }, FieldPickerModernComponent.prototype.resetFieldListTreeModel = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var _a;
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return _a = this, [ 4, this.buildFieldListTreeModel() ];

                          case 1:
                            return _a.fieldListTreeModel = _b.sent(), this.setFieldListTreeExprs(), [ 2 ];
                        }
                    });
                });
            }, FieldPickerModernComponent.prototype.shouldFieldListShowHiddenFields = function() {
                var viewMode = this.viewModeState.getMode();
                return (1 === viewMode || 2 === viewMode) && this.reportSettingsService.getShowHiddenFields();
            }, FieldPickerModernComponent.prototype.getSchemaForFlyout = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var error_1;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return _a.trys.push([ 0, 2, , 3 ]), [ 4, this.conceptualSchemaProxy.get(this.getDataSourceForFlyout()) ];

                          case 1:
                            return [ 2, _a.sent() ];

                          case 2:
                            return (error_1 = _a.sent()).serviceError && "CubeNameDoesNotExist" === error_1.serviceError.errorCode && (this.perspectiveDoesNotExist = !0), 
                            [ 2 ];

                          case 3:
                            return [ 2 ];
                        }
                    });
                });
            }, FieldPickerModernComponent.prototype.getDataSourceForFlyout = function() {
                var dataSource = (0, contracts_dataSource.yd)((0, tslib_es6.__spreadArray)([], this.dataSourcesService.get(), !0));
                if (this.perspectiveDisplayName && "" !== this.perspectiveDisplayName) {
                    var dsrDataSourceIndex = dataSource.findIndex(function(dataSource) {
                        return "dsr" === dataSource.type;
                    }), dsrDataSource = dataSource[dsrDataSourceIndex];
                    if (dsrDataSource) {
                        var dataSourceWithPerspective = (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, dsrDataSource), {
                            perspectiveId: this.perspectiveDisplayName
                        });
                        dataSource[dsrDataSourceIndex] = dataSourceWithPerspective;
                    }
                }
                return dataSource;
            }, FieldPickerModernComponent.prototype.getSchema = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.conceptualSchemaProxy.get(this.dataSourcesService.get()) ];

                          case 1:
                            return [ 2, _a.sent() ];
                        }
                    });
                });
            }, FieldPickerModernComponent.prototype.getEffectiveReplacementPosition = function(addOrReplacePosition, fieldsCountBeforeUpdate, isReplace) {
                return this.allowMultipleValues ? (debug.fF.assert(function() {
                    return !isReplace || "end" !== addOrReplacePosition;
                }, "an ItemPosition from replace should never be 'end'"), isReplace ? addOrReplacePosition : void 0) : fieldsCountBeforeUpdate > 0 && ("end" === addOrReplacePosition || 1 === _.size(addOrReplacePosition)) ? [ 0 ] : isReplace ? addOrReplacePosition : void 0;
            }, FieldPickerModernComponent.prototype.setFieldListTreeExprs = function() {
                var _this = this;
                this.fieldListTreeModel && (this.fieldListTreeExprs = [], _.forEach(this.fieldListTreeModel.entities, function(entity) {
                    _this.fieldListTreeExprs.push((0, fieldListPropertyExprGenerator.W4)(entity));
                    var arrayOfFieldsArray = _.map([ entity.columns, entity.measures, entity.kpis, entity.hierarchies ], function(collection) {
                        return collection.getItems();
                    }), allFirstLevelFields = [].concat.apply([], arrayOfFieldsArray);
                    _.forEach(allFirstLevelFields, function(property) {
                        var expr = (0, fieldListPropertyExprGenerator.Sd)(property, _this.groupingDesignStateService);
                        _this.fieldListTreeExprs.push(expr);
                    }), _.forEach(entity.properties, function(property) {
                        _.forEach(property.properties, function(childProperty) {
                            childProperty instanceof fieldListViewModel.Jg && (_this.fieldListTreeExprs.push((0, 
                            fieldListPropertyExprGenerator.Sd)(childProperty, _this.groupingDesignStateService)), 
                            _.forEach(childProperty.hierarchyLevels, function(level) {
                                _this.fieldListTreeExprs.push((0, fieldListPropertyExprGenerator.Sd)(level, _this.groupingDesignStateService));
                            }));
                        });
                    }), _.forEach(entity.hierarchies.getItems(), function(hierarchy) {
                        _.forEach(hierarchy.hierarchyLevels, function(hierarchyLevel) {
                            var expr = (0, fieldListPropertyExprGenerator.Sd)(hierarchyLevel, _this.groupingDesignStateService);
                            _this.fieldListTreeExprs.push(expr);
                        });
                    });
                }));
            }, FieldPickerModernComponent.\u0275fac = function(t) {
                return new (t || FieldPickerModernComponent)(core["\u0275\u0275directiveInject"](sq_aggregation_operations_service.C), core["\u0275\u0275directiveInject"](conceptual_schema_proxy_service.i), core["\u0275\u0275directiveInject"](data_sources_service.D), core["\u0275\u0275directiveInject"](exploration_display_name_service.O), core["\u0275\u0275directiveInject"](event_bridge_service.J), core["\u0275\u0275directiveInject"](grouping_design_state_service.AA), core["\u0275\u0275directiveInject"](core.Injector), core["\u0275\u0275directiveInject"](localization_service.o), core["\u0275\u0275directiveInject"](pbi_overlay_service._), core["\u0275\u0275directiveInject"](report_settings_service.h), core["\u0275\u0275directiveInject"](view_mode_state_service.kc), core["\u0275\u0275directiveInject"](visual_authoring_operations_service.Q), core["\u0275\u0275directiveInject"](pbi_overlay_ref_factory.l), core["\u0275\u0275directiveInject"](context_activity_utils.yk), core["\u0275\u0275directiveInject"](pbi_overlay_ref.w, 8));
            }, FieldPickerModernComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: FieldPickerModernComponent,
                selectors: [ [ "field-picker-modern" ] ],
                viewQuery: function(rf, ctx) {
                    if (1 & rf && (core["\u0275\u0275viewQuery"](field_picker_modern_component_c0, 5), 
                    core["\u0275\u0275viewQuery"](_c1, 5)), 2 & rf) {
                        var _t = void 0;
                        core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx.dragDropPickerRef = _t.first), 
                        core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx.openFlyoutChevronQueryList = _t);
                    }
                },
                inputs: {
                    initialExpr: "initialExpr",
                    alwaysAllowAggregate: "alwaysAllowAggregate",
                    aggregatesConstraint: "aggregatesConstraint",
                    validators: "validators",
                    allowReorderItems: "allowReorderItems",
                    disallowReplaceItems: "disallowReplaceItems",
                    allowMultipleValues: "allowMultipleValues",
                    disableDropZoneIndicator: "disableDropZoneIndicator",
                    disabled: "disabled",
                    label: "label",
                    addDataLabelKey: "addDataLabelKey",
                    addDataAriaLabelKey: "addDataAriaLabelKey",
                    ariaLabelledby: "ariaLabelledby",
                    ariaDescribedby: "ariaDescribedby",
                    withFieldList: "withFieldList",
                    enterExitFieldRename: "enterExitFieldRename",
                    allowEntityField: "allowEntityField",
                    promotedActionStrategy: "promotedActionStrategy",
                    getDropExprStrategy: "getDropExprStrategy",
                    flyoutFieldsStrategy: "flyoutFieldsStrategy",
                    directEditStrategy: "directEditStrategy",
                    visualCalcFieldsStrategy: "visualCalcFieldsStrategy",
                    menuStrategy: "menuStrategy",
                    displayNameStrategy: "displayNameStrategy",
                    externalCrossPickerDragDropMonitor: "externalCrossPickerDragDropMonitor",
                    perspectiveDisplayName: "perspectiveDisplayName",
                    tooltipPosition: "tooltipPosition",
                    tooltipWithFlexiblePositions: "tooltipWithFlexiblePositions",
                    disableAutoScroll: "disableAutoScroll",
                    parameterPickerDataFormat: "parameterPickerDataFormat",
                    visualCapabilities: "visualCapabilities",
                    emptyFieldSetsDefaultLabel: "emptyFieldSetsDefaultLabel",
                    role: "role",
                    fieldListOverlayPanelClass: "fieldListOverlayPanelClass",
                    allowClear: "allowClear",
                    compact: "compact"
                },
                outputs: {
                    onExprChange: "onExprChange",
                    onCrossPickerDrop: "onCrossPickerDrop"
                },
                features: [ core["\u0275\u0275InheritDefinitionFeature"] ],
                decls: 4,
                vars: 5,
                consts: [ [ "fieldPicker", "" ], [ 4, "ngIf" ], [ "for", "dragDropPickerRef", "class", "fluentTheme-sm-reg field-picker-label", 4, "ngIf" ], [ "id", "dragDropPickerId", 3, "compact", "ariaLabelledby", "dataFormat", "disabled", "placeholder", "addDataLabelKey", "addDataAriaLabelKey", "draggable", "allowEditingLabelsSetting", "allowMultipleValues", "allowClear", "disableDropZoneIndicator", "disableContentClick", "pbiDragDropPickerActionsTemplate", "itemPromotedActionTemplate", "externalCrossPickerDragDropMonitor", "v2Design", "menuMode", "useCustomTooltip", "tooltipPosition", "tooltipWithFlexiblePositions", "disableAutoScroll", "disableClearButtonTabNavigation", "allowEmptyLabel", "onChangeAdd", "onChangeRemove", "onChangeReorder", "onChangeReplace", "onChangeLabelUpdate", "onCrossPickerDrop", "onAddDataClick", "onContentClick", "onMenuItemClick", "onClearButtonArrowRight" ], [ "dragDropPickerRef", "" ], [ "promotedFieldActionTemplate", "" ], [ "pickerActionsTemplate", "" ], [ "for", "dragDropPickerRef", 1, "fluentTheme-sm-reg", "field-picker-label" ], [ 1, "pbi-drag-drop-picker-actions" ], [ 1, "pbi-icon-button", 3, "ngClass", "click" ], [ "tri-svg-icon-16", "", 3, "name", "sprite", "pbiTooltip" ], [ "class", "pbi-drag-drop-picker-actions", 4, "ngIf" ], [ "aria-hidden", "true", "class", "button-divider", 3, "ngClass", 4, "ngIf" ], [ "tabindex", "-1", "class", "glyphicon pbi-glyph-chevronrightmedium glyph-mini pbi-focus-outline pbi-icon-button v2Design", "aria-haspopup", "true", 3, "pbiTooltip", "click", "keydown.arrowLeft", 4, "ngIf" ], [ "class", "pbi-focus-outline pbi-icon-button v2Design", "tabindex", "-1", "aria-haspopup", "true", 3, "pbiTooltip", "disabled", "click", "keydown.arrowLeft", 4, "ngIf" ], [ "class", "glyphicon pbi-glyph-chevrondownsmall glyph-small pbi-focus-outline pbi-icon-button", "aria-haspopup", "true", 3, "pbiTooltip", "pbiMenu", "menuMode", "pbiMenuActivation", "pbiMenuButtonClick", 4, "ngIf" ], [ "aria-hidden", "true", 1, "button-divider", 3, "ngClass" ], [ "tabindex", "-1", "aria-haspopup", "true", 1, "glyphicon", "pbi-glyph-chevronrightmedium", "glyph-mini", "pbi-focus-outline", "pbi-icon-button", "v2Design", 3, "pbiTooltip", "click", "keydown.arrowLeft" ], [ "openFlyoutChevron", "" ], [ "tabindex", "-1", "aria-haspopup", "true", 1, "pbi-focus-outline", "pbi-icon-button", "v2Design", 3, "pbiTooltip", "disabled", "click", "keydown.arrowLeft" ], [ "tri-svg-icon-16", "", 3, "name" ], [ "aria-haspopup", "true", 1, "glyphicon", "pbi-glyph-chevrondownsmall", "glyph-small", "pbi-focus-outline", "pbi-icon-button", 3, "pbiTooltip", "pbiMenu", "menuMode", "pbiMenuActivation", "pbiMenuButtonClick" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementStart"](0, "div", null, 0), core["\u0275\u0275template"](2, FieldPickerModernComponent_ng_container_2_Template, 11, 34, "ng-container", 1), 
                    core["\u0275\u0275pipe"](3, "async"), core["\u0275\u0275elementEnd"]()), 2 & rf && (core["\u0275\u0275advance"](2), 
                    core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pureFunction1"](3, _c4, core["\u0275\u0275pipeBind1"](3, 1, ctx.fieldsView$))));
                },
                dependencies: [ common.NgClass, common.NgIf, pbi_drag_drop_picker_component.HV, pbi_menu_directive.l8, pbi_tooltip_directive.V, tri_svg_icon_component.M, common.AsyncPipe, localize_pipe.F, ItemAtPositionPipe ],
                styles: [ ".field-picker-label[_ngcontent-%COMP%]{display:inline-block;margin-bottom:4px}[_nghost-%COMP%]     .pbi-drag-drop-picker-actions button{height:fit-content;width:fit-content;margin-left:12px}[_nghost-%COMP%]     .pbi-drag-drop-picker-actions button.v2Design{margin-left:4px;border-radius:2px}[_nghost-%COMP%]     .pbi-drag-drop-picker-actions button:disabled tri-svg-icon{opacity:50%}[_nghost-%COMP%]     .pbi-drag-drop-picker-actions .button-divider{width:1px;background-color:var(--gray-130, #605E5C);margin-left:2px;margin-right:2px}[_nghost-%COMP%]     .pbi-drag-drop-picker-actions .button-divider.error{background-color:var(--globalColorCranberryShade10)}" ],
                changeDetection: 0
            }), FieldPickerModernComponent;
        }(rx_component.w), FieldPickerOpsDefaultStrategy = function() {
            function FieldPickerOpsDefaultStrategy(getCurrentMetadata, getDragDropPickerRef, alwaysAllowAggregate, aggregatesConstraint, validators, aggrOps, conceptualSchemaProxy, dataSourcesService, displayNameService, localizationService) {
                this.getCurrentMetadata = getCurrentMetadata, this.getDragDropPickerRef = getDragDropPickerRef, 
                this.alwaysAllowAggregate = alwaysAllowAggregate, this.aggregatesConstraint = aggregatesConstraint, 
                this.validators = validators, this.aggrOps = aggrOps, this.conceptualSchemaProxy = conceptualSchemaProxy, 
                this.dataSourcesService = dataSourcesService, this.displayNameService = displayNameService, 
                this.localizationService = localizationService;
            }
            return FieldPickerOpsDefaultStrategy.prototype.getDropExpr = function(pickerOriginalExpr, schema) {
                var _a, _b, exprToDrop = pickerOriginalExpr;
                if (this.shouldAggregate(pickerOriginalExpr, schema)) {
                    var targetTypes = null != (null === (_b = null === (_a = this.validators) || void 0 === _a ? void 0 : _a.field) || void 0 === _b ? void 0 : _b.type) ? [ this.validators.field.type ] : [];
                    exprToDrop = this.aggrOps.createExprWithAggregate(pickerOriginalExpr, schema, !0, targetTypes);
                }
                if (this.isValidDrop(exprToDrop, schema, !0)) return Promise.resolve({
                    expr: exprToDrop
                });
            }, FieldPickerOpsDefaultStrategy.prototype.getDroppedExprChildren = function(_expr, _position, _schema, _fromUpdate) {}, 
            FieldPickerOpsDefaultStrategy.prototype.getMenu = function(droppedExpr, _position, schema, _fromUpdate) {
                if (null != droppedExpr && this.shouldShowPickerMenu(droppedExpr, schema)) {
                    var pickerMenu = {
                        items: []
                    };
                    if (this.shouldShowAggregationMenu(droppedExpr, schema)) {
                        var aggregate = (0, sqExpr._L)(droppedExpr);
                        pickerMenu.items = this.createAggregateMenuItems(droppedExpr, aggregate, schema);
                    } else {
                        var variations = this.getVariations(droppedExpr, schema);
                        _.isEmpty(variations) || (pickerMenu.items = this.createVariationMenuItems(variations, droppedExpr, schema));
                    }
                    return pickerMenu;
                }
            }, FieldPickerOpsDefaultStrategy.prototype.menuItemClickHandler = function(item, fieldPosition, schema) {
                return this.onMenuItemSelected(item, fieldPosition, schema);
            }, FieldPickerOpsDefaultStrategy.prototype.getDisplayName = function(droppedExpr, _fieldPosition, schema, _fromUpdate) {
                return getFieldDisplayName(droppedExpr, schema, this.displayNameService);
            }, FieldPickerOpsDefaultStrategy.prototype.isRenameAllowed = function(_fieldPosition) {
                return !1;
            }, FieldPickerOpsDefaultStrategy.prototype.isFieldInvalid = function(_fieldPosition, _fromUpdate) {
                return !1;
            }, FieldPickerOpsDefaultStrategy.prototype.getFieldsToSelectOnOpen = function(_flyoutOpenFromPosition, flyoutOpenFromField) {
                if (flyoutOpenFromField) return [ flyoutOpenFromField ];
            }, FieldPickerOpsDefaultStrategy.prototype.getFieldsToDisableOnOpen = function(_flyoutOpenFromPosition, _flyoutOpenFromField, _allFields, _schema) {}, 
            FieldPickerOpsDefaultStrategy.prototype.handleSelectedField = function(selectedField, flyoutOpenFromPosition) {
                var _a, _b, _c;
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var schema, newFieldPickerData, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_d) {
                        switch (_d.label) {
                          case 0:
                            return debug.fF.assertValue(selectedField, "selectedField"), [ 4, this.conceptualSchemaProxy.get(this.dataSourcesService.get()) ];

                          case 1:
                            return schema = _d.sent(), newFieldPickerData = {
                                fieldExpr: semanticQuerySerializer.ib.serializeExpr(selectedField),
                                label: getFieldDisplayName(selectedField, schema, this.displayNameService)
                            }, debug.fF.assert(function() {
                                return _.size(flyoutOpenFromPosition) <= 2;
                            }, "field-picker-modern right now only supports maximum 2-levels of fields."), debug.fF.assert(function() {
                                return _.size(flyoutOpenFromPosition) < 2 || (0, sqExprStaticMembers.ez)((0, pbi_drag_drop_picker_component.X)(_this.getCurrentMetadata(), flyoutOpenFromPosition).expr);
                            }, "field-picker-modern second-level field should only be hierarchy levels"), flyoutOpenFromPosition ? null === (_a = this.getDragDropPickerRef()) || void 0 === _a || _a.handleReplace(newFieldPickerData, [ flyoutOpenFromPosition[0] ]) : null === (_b = this.getDragDropPickerRef()) || void 0 === _b || _b.handleAdd(newFieldPickerData), 
                            null === (_c = this.getDragDropPickerRef()) || void 0 === _c || _c.detectChanges(), 
                            [ 2 ];
                        }
                    });
                });
            }, FieldPickerOpsDefaultStrategy.prototype.handleDeselectedField = function(deselectedField) {
                debug.fF.assertValue(deselectedField, "deselectedField");
                var fieldMetadataArray = this.getCurrentMetadata();
                if (!_.isEmpty(fieldMetadataArray)) {
                    var position = (0, field_picker_util.f)(deselectedField, fieldMetadataArray);
                    if (!_.isEmpty(position)) {
                        var dragDropPickerRef = this.getDragDropPickerRef();
                        dragDropPickerRef && dragDropPickerRef.handleClear(position);
                    }
                }
            }, FieldPickerOpsDefaultStrategy.prototype.onCloseWithNewVisualCalc = function(roleName) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        return [ 2 ];
                    });
                });
            }, FieldPickerOpsDefaultStrategy.prototype.getVisualCalcCreationInfo = function(roleName) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        return [ 2, {
                            supportVisualCalcCreation: !1
                        } ];
                    });
                });
            }, FieldPickerOpsDefaultStrategy.prototype.canOpenFlyout = function(_flyoutOpenFromPosition) {
                return !0;
            }, FieldPickerOpsDefaultStrategy.prototype.rename = function(_fieldIndex, _newName) {
                debug.fF.assertFail("Expect this not to be called, rename is not allowed");
            }, FieldPickerOpsDefaultStrategy.prototype.shouldAggregate = function(expr, schema) {
                var _a, _b;
                return 1 === (null === (_b = null === (_a = this.validators) || void 0 === _a ? void 0 : _a.field) || void 0 === _b ? void 0 : _b.kind) && !sqExprUtils.m.discourageAggregation(expr, schema);
            }, FieldPickerOpsDefaultStrategy.prototype.isValidDrop = function(expr, schema, checkExistingFieldDup) {
                var _a;
                if (debug.fF.assertValue(expr, "expr"), !expr) return !1;
                var conceptualProperty = expr.getConceptualProperty(schema), exprMetada = expr.getMetadata(schema);
                if ((null == conceptualProperty ? void 0 : conceptualProperty.kpiValue) || !exprMetada) return !1;
                if ((null === (_a = this.validators) || void 0 === _a ? void 0 : _a.field) && (null == exprMetada ? void 0 : exprMetada.kind) !== this.validators.field.kind) return !1;
                var validationType = function(validators) {
                    var _a, type = null === (_a = null == validators ? void 0 : validators.field) || void 0 === _a ? void 0 : _a.type;
                    if (type) return type.variant || [ type ];
                }(this.validators);
                if (!_.isEmpty(validationType) && !valueType.Ge.isCompatibleTo(null == exprMetada ? void 0 : exprMetada.type, validationType, !0)) return !1;
                if (checkExistingFieldDup) {
                    var currentMetadata = this.getCurrentMetadata();
                    if (_.some(currentMetadata, function(fieldMetadata) {
                        return (0, sqExprEqualityVisitor.fS)(fieldMetadata.expr, expr);
                    })) return !1;
                }
                return !0;
            }, FieldPickerOpsDefaultStrategy.prototype.shouldShowPickerMenu = function(expr, schema) {
                return !!expr && !(0, sqExprStaticMembers.kb)(expr) && (this.shouldShowAggregationMenu(expr, schema) || !_.isEmpty(this.getVariations(expr, schema)));
            }, FieldPickerOpsDefaultStrategy.prototype.createAggregateMenuItems = function(expr, aggregate, schema) {
                var _a, _b, targetTypes = null != (null === (_b = null === (_a = this.validators) || void 0 === _a ? void 0 : _a.field) || void 0 === _b ? void 0 : _b.type) ? [ this.validators.field.type ] : [], aggregateMenuItems = (0, 
                fieldWellMenuViewModelFactory.Hh)(expr, schema, this.aggrOps, !1, this.alwaysAllowAggregate ? enums.DW.GroupingOrMeasure : enums.DW.Measure, targetTypes, this.localizationService, void 0, void 0, this.aggregatesConstraint);
                return _.map(aggregateMenuItems, function(aggMenuItem) {
                    var _a;
                    return {
                        text: aggMenuItem.text,
                        type: pbi_menu_contracts.iB.Button,
                        data: aggMenuItem.key,
                        checkable: !0,
                        checked: (null === (_a = aggMenuItem.key) || void 0 === _a ? void 0 : _a.aggregate) === aggregate
                    };
                });
            }, FieldPickerOpsDefaultStrategy.prototype.shouldShowAggregationMenu = function(expr, schema) {
                return this.alwaysAllowAggregate && !sqExprUtils.m.discourageAggregation(expr, schema) || this.shouldAggregate(expr, schema);
            }, FieldPickerOpsDefaultStrategy.prototype.onMenuItemSelected = function(menuItem, position, schema) {
                menuItem.checked = !menuItem.checked, debug.fF.assert(function() {
                    return 1 === _.size(position);
                }, "default field-picker creates menu only for first level of items");
                var selectedFieldExprUpdated, index = position[0], currentFields = this.getCurrentMetadata(), currentFieldExprs = _.map(currentFields, function(field) {
                    return field.expr;
                }), selectedFieldCurrentExpr = currentFieldExprs[index], selectedFieldCurrentMetadata = currentFields[index].metadata;
                if (menuItem.data instanceof sqExpr.Il) selectedFieldExprUpdated = menuItem.data; else {
                    var newAggregate = menuItem.data.aggregate;
                    selectedFieldExprUpdated = null == selectedFieldCurrentExpr ? selectedFieldCurrentExpr : null == newAggregate ? (0, 
                    fieldExprRemoveAggregateRewriter.n)(selectedFieldCurrentExpr, schema) : (0, fieldExprChangeAggregateRewriter.k)(selectedFieldCurrentExpr, newAggregate);
                }
                currentFieldExprs[index] = selectedFieldExprUpdated;
                var update = createFieldReplaceUpdate(position, selectedFieldCurrentMetadata);
                return {
                    newExpr: _.map(currentFieldExprs, function(expr, index) {
                        return {
                            expr,
                            metadata: currentFields[index].metadata
                        };
                    }),
                    fromUpdate: update
                };
            }, FieldPickerOpsDefaultStrategy.prototype.getVariations = function(expr, schema) {
                var _a, _b;
                if (0 !== (null === (_b = null === (_a = this.validators) || void 0 === _a ? void 0 : _a.field) || void 0 === _b ? void 0 : _b.kind)) return [];
                var variationSource = expr;
                if ((0, sqExprStaticMembers.ez)(expr) && !(variationSource = (0, sqHierarchyExprUtils1.ZB)(expr))) return [];
                var variations = (0, sqHierarchyExprUtils1.wA)(schema, variationSource);
                if (!_.isArray(variations) && (0, sqExprEqualityVisitor.fS)(variations, variationSource)) return [];
                var exprs = (0, arrayExtensions.rY)(variations), variationExprs = [];
                this.isValidDrop(variationSource, schema, !1) && variationExprs.push(variationSource);
                for (var _i = 0, exprs_1 = exprs; _i < exprs_1.length; _i++) {
                    var expr_1 = exprs_1[_i];
                    this.isValidDrop(expr_1, schema, !1) && variationExprs.push(expr_1);
                }
                return 1 === variationExprs.length && ((0, sqExprEqualityVisitor.fS)(variationExprs[0], expr) || (0, 
                sqExprEqualityVisitor.fS)(variationExprs[0], variationSource)) ? [] : variationExprs;
            }, FieldPickerOpsDefaultStrategy.prototype.createVariationMenuItems = function(variations, expr, schema) {
                var _this = this;
                return _.map(variations, function(variationExpr) {
                    return {
                        text: _this.displayNameService.getDisplayName(variationExpr, schema, null),
                        type: pbi_menu_contracts.iB.Button,
                        data: variationExpr,
                        checkable: !0,
                        checked: (0, sqExprEqualityVisitor.fS)(expr, variationExpr)
                    };
                });
            }, FieldPickerOpsDefaultStrategy;
        }();
        function createFieldView(fieldMetadata) {
            var pickerData = {
                fieldExpr: semanticQuerySerializer.ib.serializeExpr(fieldMetadata.pickerDataExpr),
                label: fieldMetadata.displayName.value,
                metadata: fieldMetadata.metadata,
                customTooltipContent: fieldMetadata.customTooltipContent,
                pbiStyle: fieldMetadata.displayName.pbiStyle,
                invalid: fieldMetadata.invalid
            }, icon = function(fieldMetadata) {
                var icon;
                return null != fieldMetadata && (fieldMetadata.invalid ? icon = {
                    type: 1,
                    sheet: "fluentui-icons",
                    symbolId: "warning_20_regular",
                    styles: {
                        color: "var(--globalColorCranberryShade10)",
                        fill: "currentColor"
                    }
                } : (0, sqExprStaticMembers.jX)(fieldMetadata.expr) && (icon = {
                    type: 1,
                    sheet: "visual-calc-icons",
                    symbolId: "data_histogram_function_20_regular"
                })), icon;
            }(fieldMetadata);
            null != icon && (pickerData.icon = icon);
            var menu = fieldMetadata.menu, showMenu = !_.isEmpty(null == menu ? void 0 : menu.items);
            return {
                pickerData,
                allowRename: fieldMetadata.allowRename,
                menuFactory: showMenu ? menu : void 0,
                children: _.map(fieldMetadata.children, function(childFieldMetadata) {
                    return createFieldView(childFieldMetadata);
                }),
                promotedAction$: fieldMetadata.promotedAction$,
                actionTooltip: fieldMetadata.actionTooltip
            };
        }
        function createDragDropPickerData(fieldView) {
            return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, fieldView.pickerData), {
                allowEditLabel: fieldView.allowRename,
                menu: fieldView.menuFactory,
                children: _.map(fieldView.children, function(childFieldView) {
                    return createDragDropPickerData(childFieldView);
                }),
                actionTooltip: fieldView.actionTooltip
            });
        }
        function getFieldWithSelfAndDescendantsExistingNamesEnsured(fieldMetadata, fieldPosition, allFields, allFieldsBeforeUpdate, update) {
            var newChildren, newDisplayName = fieldMetadata.displayName, fieldPositionBeforeUpdate = function(fieldPositionAfterUpdate, allFieldsAfterUpdate, update) {
                var siblingsAfterUpdate;
                if (1 === fieldPositionAfterUpdate.length) siblingsAfterUpdate = allFieldsAfterUpdate; else {
                    var parentFieldPositionAfterUpdate = fieldPositionAfterUpdate.slice(0, -1);
                    siblingsAfterUpdate = (0, pbi_drag_drop_picker_component.X)(allFieldsAfterUpdate, parentFieldPositionAfterUpdate).children;
                }
                var lastLevelIndexBeforeUpdate = function(fieldLowestLevelIndexAfterUpdate, lowestLevelSiblingsCountAfterUpdate, update) {
                    if ((0, field_picker_modern_contracts.H2)(update)) return fieldLowestLevelIndexAfterUpdate < _.last(update.deleted.position) ? fieldLowestLevelIndexAfterUpdate : fieldLowestLevelIndexAfterUpdate + 1;
                    if ((0, field_picker_modern_contracts.JB)(update)) {
                        var addedToPosition = "end" === update.added.position ? lowestLevelSiblingsCountAfterUpdate - 1 : _.last(update.added.position);
                        if (fieldLowestLevelIndexAfterUpdate === addedToPosition) return;
                        return fieldLowestLevelIndexAfterUpdate < addedToPosition ? fieldLowestLevelIndexAfterUpdate : fieldLowestLevelIndexAfterUpdate - 1;
                    }
                    if ((0, field_picker_modern_contracts.y$)(update)) return fieldLowestLevelIndexAfterUpdate;
                    if ((0, field_picker_modern_contracts.cS)(update)) {
                        var toPosition = update.reordered.toPosition, reorderingAmongSiblings_1 = arePositionsEqual(update.reordered.fromPosition.slice(0, -1), toPosition.slice(0, -1));
                        debug.fF.assert(function() {
                            return reorderingAmongSiblings_1;
                        }, "Expect reordering only among siblings. Add your implementation for new scenario.");
                        var fromIndexBeforeUpdate = _.last(update.reordered.fromPosition), toIndexBeforeUpdate = _.last(update.reordered.toPosition);
                        return fieldLowestLevelIndexAfterUpdate < fromIndexBeforeUpdate ? fieldLowestLevelIndexAfterUpdate : fromIndexBeforeUpdate <= fieldLowestLevelIndexAfterUpdate && fieldLowestLevelIndexAfterUpdate < toIndexBeforeUpdate - 1 ? fieldLowestLevelIndexAfterUpdate + 1 : fieldLowestLevelIndexAfterUpdate === toIndexBeforeUpdate - 1 ? fromIndexBeforeUpdate : fieldLowestLevelIndexAfterUpdate;
                    }
                    if ((0, field_picker_modern_contracts.cA)(update)) return fieldLowestLevelIndexAfterUpdate === _.last(update.replaced.position) ? void 0 : fieldLowestLevelIndexAfterUpdate;
                    (0, field_picker_modern_contracts.V5)(update) || debug.fF.assertNever(update);
                }(_.last(fieldPositionAfterUpdate), _.size(siblingsAfterUpdate), update);
                if (null != lastLevelIndexBeforeUpdate) return fieldPositionAfterUpdate.slice(0, -1).concat(lastLevelIndexBeforeUpdate);
            }(fieldPosition, allFields, update);
            return null != fieldPositionBeforeUpdate && (newDisplayName = (0, pbi_drag_drop_picker_component.X)(allFieldsBeforeUpdate, fieldPositionBeforeUpdate).displayName), 
            _.isEmpty(fieldMetadata.children) || (newChildren = [], _.forEach(fieldMetadata.children, function(child, childIndex) {
                var newChild = getFieldWithSelfAndDescendantsExistingNamesEnsured(child, fieldPosition.concat(childIndex), allFields, allFieldsBeforeUpdate, update);
                newChildren.push(newChild);
            })), (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, fieldMetadata), {
                displayName: newDisplayName,
                children: newChildren
            });
        }
        function arePositionsEqual(position1, position2) {
            return _.size(position1) === _.size(position2) && _.every(position1, function(indexInPosition1, idx) {
                return indexInPosition1 === position2[idx];
            });
        }
        function getFieldDisplayName(expr, schema, displayNameService) {
            return displayNameService.getDisplayName(expr, schema, void 0, void 0, void 0, {
                includeVariationSource: !0
            });
        }
        function createFieldReplaceUpdate(position, originalMetadata) {
            return {
                type: "replace",
                replaced: {
                    position,
                    originalMetadata
                }
            };
        }
        var manifests = [ {
            type: FieldPickerModernComponent,
            componentId: "FieldPickerComponentId"
        } ], FieldPickerModernModule = function() {
            function FieldPickerModernModule() {}
            return FieldPickerModernModule.\u0275fac = function(t) {
                return new (t || FieldPickerModernModule);
            }, FieldPickerModernModule.\u0275mod = core["\u0275\u0275defineNgModule"]({
                type: FieldPickerModernModule
            }), FieldPickerModernModule.\u0275inj = core["\u0275\u0275defineInjector"]({
                providers: (0, tslib_es6.__spreadArray)((0, tslib_es6.__spreadArray)([], field_list_services_providers.U, !0), [ data_sources_service.D, event_bridge_service.J, FieldPickerFlyoutServiceLazyProvider ], !1),
                imports: [ common.CommonModule, fesm2022_forms.u5, lazy_load_module.N.withManifests(manifests), localization_module.v, pbi_drag_drop_picker_module.K, pbi_dropdown_module.C, pbi_menu_module.b, pbi_overlay_module.N, pbi_spinner_module.H, pbi_tooltip_module.Z, pbi_tree_module.J, pbi_field_list_module.X, fesm2022_forms.UX, tri_svg_icon.T6 ]
            }), FieldPickerModernModule;
        }();
    },
    98476: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            f: function() {
                return getLastItemPosition;
            }
        });
        var _powerbi_legacy_PowerBIVisuals_VisualsData_semanticQuery_sqExprEqualityVisitor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(45413), _powerbi_legacy_PowerBIVisuals_VisualsData_semanticQuery_sqExprStaticMembers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(74082);
        function isFieldMetadata(item) {
            return void 0 !== item.pickerDataExpr;
        }
        function getLastItemPosition(fieldExpr, items) {
            for (var isFieldExprHierarchyLevel = (0, _powerbi_legacy_PowerBIVisuals_VisualsData_semanticQuery_sqExprStaticMembers__WEBPACK_IMPORTED_MODULE_0__.ez)(fieldExpr), i = items.length - 1; i >= 0; i--) {
                var item = items[i], itemExpr = item.expr;
                if (isFieldExprHierarchyLevel && (0, _powerbi_legacy_PowerBIVisuals_VisualsData_semanticQuery_sqExprStaticMembers__WEBPACK_IMPORTED_MODULE_0__.y3)(itemExpr)) {
                    var secondLevel, firstLevel = i;
                    if ((secondLevel = isFieldMetadata(item) ? _.findIndex(item.children, function(child) {
                        return (0, _powerbi_legacy_PowerBIVisuals_VisualsData_semanticQuery_sqExprEqualityVisitor__WEBPACK_IMPORTED_MODULE_1__.fS)(child.expr, fieldExpr);
                    }) : _.findIndex(item.hierarchyLevels, function(hierarchyLevel) {
                        return (0, _powerbi_legacy_PowerBIVisuals_VisualsData_semanticQuery_sqExprEqualityVisitor__WEBPACK_IMPORTED_MODULE_1__.fS)(hierarchyLevel.expr, fieldExpr);
                    })) >= 0) return [ firstLevel, secondLevel ];
                }
                if ((0, _powerbi_legacy_PowerBIVisuals_VisualsData_semanticQuery_sqExprStaticMembers__WEBPACK_IMPORTED_MODULE_0__.iV)(itemExpr) && (itemExpr = itemExpr.arg), 
                (0, _powerbi_legacy_PowerBIVisuals_VisualsData_semanticQuery_sqExprEqualityVisitor__WEBPACK_IMPORTED_MODULE_1__.fS)(itemExpr, fieldExpr)) return [ i ];
            }
        }
    },
    4722: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            HV: function() {
                return PbiDragDropPickerComponent;
            },
            X: function() {
                return getItemAtPosition;
            },
            ri: function() {
                return traverseAndCallback;
            }
        });
        var tslib__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(81337), _pbi_menu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(64560), _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(93247), _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(50423), _angular_forms__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(17174), _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(62458), _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_Utility__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(59694), rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(14172), rxjs_operators__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(59973), rxjs_operators__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(22318), rxjs_operators__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(6663), _powerbi_legacy_PowerBICommon_utils_idUtility__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(35497), _powerbi_Localization__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(65181), _angular_common__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(77476), _custom_click_custom_click_directive__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(23097), _Localization_directives_localize_directive__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(59968), _A11y_directives_accessible_click_directive__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(44581), _pbi_editable_label_pbi_editable_label_directive__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(24150), _pbi_icon_pbi_icon_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(86663), _pbi_menu_pbi_menu_directive__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(80357), _pbi_svg_use_symbol_pbi_svg_use_symbol_component__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(45916), _pbi_tooltip_pbi_tooltip_directive__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(36858), _Localization_pipes_localize_pipe__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(85102), _c0 = [ "dragDropPicker" ], _c1 = [ "clearButton" ], _c2 = [ "contentLabel" ], _c3 = [ "listOfData" ], _c4 = function() {
            return [];
        }, _c5 = function(a0, a2) {
            return {
                nonEmptyDisplayDataList: a0,
                isTopLevel: !0,
                rootToParentIndices: a2
            };
        };
        function PbiDragDropPickerComponent_ng_container_2_Template(rf, ctx) {
            if (1 & rf && _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementContainer"](0, 7), 
            2 & rf) {
                var ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"](), _r3 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275reference"](5);
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275property"]("ngTemplateOutlet", _r3)("ngTemplateOutletContext", _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275pureFunction2"](3, _c5, ctx_r1.listOfPbiDisplayData, _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275pureFunction0"](2, _c4)));
            }
        }
        function PbiDragDropPickerComponent_div_3_Template(rf, ctx) {
            if (1 & rf) {
                var _r10 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275getCurrentView"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementStart"](0, "div", 8), 
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275listener"]("drop", function($event) {
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275restoreView"](_r10);
                    var ctx_r9 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"]();
                    return _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275resetView"](ctx_r9.handleDrop($event));
                })("dragover", function($event) {
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275restoreView"](_r10);
                    var ctx_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"]();
                    return _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275resetView"](!ctx_r11.isItRedundantPositionToDropCurrentData("end") && ctx_r11.handleDragover($event));
                })("dragenter", function() {
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275restoreView"](_r10);
                    var ctx_r12 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"]();
                    return _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275resetView"](ctx_r12.handleDragEnterListEndArea());
                })("dragleave", function() {
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275restoreView"](_r10);
                    var ctx_r13 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"]();
                    return _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275resetView"](ctx_r13.handleDragLeaveListEndArea());
                }), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementEnd"]();
            }
        }
        var _c6 = function(a0) {
            return {
                highlight: a0
            };
        };
        function PbiDragDropPickerComponent_ng_template_4_ng_container_2_div_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r35 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275getCurrentView"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementStart"](0, "div", 20), 
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275listener"]("dragenter", function() {
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275restoreView"](_r35);
                    var i_r22 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"]().index, ctx_r33 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"](2);
                    return _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275resetView"](ctx_r33.handleDragEnterPosition([ i_r22 ]));
                })("dragleave", function() {
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275restoreView"](_r35);
                    var i_r22 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"]().index, ctx_r36 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"](2);
                    return _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275resetView"](ctx_r36.handleDragLeavePosition([ i_r22 ]));
                })("dragover", function($event) {
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275restoreView"](_r35);
                    var ctx_r38 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"](3);
                    return _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275resetView"](!ctx_r38.isItRedundantPositionToDrop() && ctx_r38.handleDragover($event));
                })("drop", function($event) {
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275restoreView"](_r35);
                    var ctx_r39 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"](3);
                    return _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275resetView"](ctx_r39.handleDrop($event));
                }), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var displayData_r21 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"]().$implicit;
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275property"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275pureFunction1"](1, _c6, displayData_r21.highlight));
            }
        }
        function PbiDragDropPickerComponent_ng_template_4_ng_container_2_ng_container_4_ng_container_3_Template(rf, ctx) {
            1 & rf && _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementContainer"](0);
        }
        function PbiDragDropPickerComponent_ng_template_4_ng_container_2_ng_container_4_ng_container_4_Template(rf, ctx) {
            1 & rf && _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementContainer"](0);
        }
        function PbiDragDropPickerComponent_ng_template_4_ng_container_2_ng_container_4_ng_container_5_Template(rf, ctx) {
            1 & rf && _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementContainer"](0);
        }
        var _c7 = function(a0, a2) {
            return {
                nonEmptyDisplayDataList: a0,
                isTopLevel: !1,
                rootToParentIndices: a2
            };
        };
        function PbiDragDropPickerComponent_ng_template_4_ng_container_2_ng_container_4_ng_container_6_Template(rf, ctx) {
            if (1 & rf && _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementContainer"](0, 7), 
            2 & rf) {
                var ctx_r46 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"](2), displayData_r21 = ctx_r46.$implicit, i_r22 = ctx_r46.index, rootToParentIndices_r16 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"]().rootToParentIndices;
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"]();
                var _r3 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275reference"](5);
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275property"]("ngTemplateOutlet", _r3)("ngTemplateOutletContext", _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275pureFunction2"](2, _c7, displayData_r21.children, rootToParentIndices_r16.concat(i_r22)));
            }
        }
        var _c8 = function(a0, a1, a2) {
            return {
                $implicit: a0,
                position: a1,
                field: a2
            };
        };
        function PbiDragDropPickerComponent_ng_template_4_ng_container_2_ng_container_4_ng_container_7_Template(rf, ctx) {
            if (1 & rf && _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementContainer"](0, 7), 
            2 & rf) {
                var ctx_r48 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"](2), i_r22 = ctx_r48.index, displayData_r21 = ctx_r48.$implicit, rootToParentIndices_r16 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"]().rootToParentIndices, ctx_r45 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275property"]("ngTemplateOutlet", ctx_r45.pbiDragDropPickerActionsTemplate)("ngTemplateOutletContext", _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275pureFunction3"](2, _c8, ctx_r45.picker, rootToParentIndices_r16.concat(i_r22), displayData_r21));
            }
        }
        var _c9 = function(a0) {
            return {
                compact: a0
            };
        }, _c10 = function(a0, a1, a2, a3) {
            return {
                isTopLevel: a0,
                displayData: a1,
                allowDrag: a2,
                position: a3
            };
        }, _c11 = function(a0) {
            return {
                position: a0
            };
        };
        function PbiDragDropPickerComponent_ng_template_4_ng_container_2_ng_container_4_Template(rf, ctx) {
            if (1 & rf && (_angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementContainerStart"](0), 
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementStart"](1, "div", 21)(2, "div", 22), 
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275template"](3, PbiDragDropPickerComponent_ng_template_4_ng_container_2_ng_container_4_ng_container_3_Template, 1, 0, "ng-container", 23), 
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275template"](4, PbiDragDropPickerComponent_ng_template_4_ng_container_2_ng_container_4_ng_container_4_Template, 1, 0, "ng-container", 23), 
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275template"](5, PbiDragDropPickerComponent_ng_template_4_ng_container_2_ng_container_4_ng_container_5_Template, 1, 0, "ng-container", 23), 
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementEnd"](), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275template"](6, PbiDragDropPickerComponent_ng_template_4_ng_container_2_ng_container_4_ng_container_6_Template, 1, 5, "ng-container", 24), 
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementEnd"](), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275template"](7, PbiDragDropPickerComponent_ng_template_4_ng_container_2_ng_container_4_ng_container_7_Template, 1, 6, "ng-container", 24), 
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementContainerEnd"]()), 
            2 & rf) {
                var ctx_r51 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"](), displayData_r21 = ctx_r51.$implicit, i_r22 = ctx_r51.index, _r27 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275reference"](7), _r31 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275reference"](11), ctx_r50 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"](), isTopLevel_r15 = ctx_r50.isTopLevel, rootToParentIndices_r16 = ctx_r50.rootToParentIndices, ctx_r25 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275advance"](2), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275property"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275pureFunction1"](9, _c9, ctx_r25.compact)), 
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275advance"](1), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275property"]("ngTemplateOutlet", _r27)("ngTemplateOutletContext", _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275pureFunction4"](11, _c10, isTopLevel_r15, displayData_r21, !displayData_r21.isEditing && (ctx_r25.draggable || !ctx_r25.allowMultipleValues) && isTopLevel_r15, rootToParentIndices_r16.concat(i_r22))), 
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275advance"](1), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275property"]("ngTemplateOutlet", ctx_r25.itemPromotedActionTemplate)("ngTemplateOutletContext", _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275pureFunction3"](16, _c8, ctx_r25.picker, rootToParentIndices_r16.concat(i_r22), displayData_r21)), 
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275advance"](1), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275property"]("ngTemplateOutlet", _r31)("ngTemplateOutletContext", _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275pureFunction1"](20, _c11, rootToParentIndices_r16.concat(i_r22))), 
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275advance"](1), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275property"]("ngIf", (null == displayData_r21.children ? null : displayData_r21.children.length) > 0), 
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275advance"](1), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275property"]("ngIf", isTopLevel_r15);
            }
        }
        function PbiDragDropPickerComponent_ng_template_4_ng_container_2_ng_container_5_ng_container_1_Template(rf, ctx) {
            1 & rf && _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementContainer"](0);
        }
        function PbiDragDropPickerComponent_ng_template_4_ng_container_2_ng_container_5_ng_container_2_Template(rf, ctx) {
            1 & rf && _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementContainer"](0);
        }
        function PbiDragDropPickerComponent_ng_template_4_ng_container_2_ng_container_5_ng_container_3_Template(rf, ctx) {
            1 & rf && _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementContainer"](0);
        }
        var _c12 = function(a1, a2, a3) {
            return {
                isTopLevel: !0,
                displayData: a1,
                allowDrag: a2,
                position: a3
            };
        };
        function PbiDragDropPickerComponent_ng_template_4_ng_container_2_ng_container_5_Template(rf, ctx) {
            if (1 & rf && (_angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementContainerStart"](0), 
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275template"](1, PbiDragDropPickerComponent_ng_template_4_ng_container_2_ng_container_5_ng_container_1_Template, 1, 0, "ng-container", 23), 
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275template"](2, PbiDragDropPickerComponent_ng_template_4_ng_container_2_ng_container_5_ng_container_2_Template, 1, 0, "ng-container", 23), 
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275template"](3, PbiDragDropPickerComponent_ng_template_4_ng_container_2_ng_container_5_ng_container_3_Template, 1, 0, "ng-container", 23), 
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementContainerEnd"]()), 
            2 & rf) {
                var ctx_r55 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"](), displayData_r21 = ctx_r55.$implicit, i_r22 = ctx_r55.index, _r27 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275reference"](7), _r31 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275reference"](11), rootToParentIndices_r16 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"]().rootToParentIndices, ctx_r26 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275advance"](1), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275property"]("ngTemplateOutlet", _r27)("ngTemplateOutletContext", _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275pureFunction3"](6, _c12, displayData_r21, !displayData_r21.isEditing && (ctx_r26.draggable || !ctx_r26.allowMultipleValues), rootToParentIndices_r16.concat(i_r22))), 
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275advance"](1), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275property"]("ngTemplateOutlet", ctx_r26.pbiDragDropPickerActionsTemplate)("ngTemplateOutletContext", _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275pureFunction3"](10, _c8, ctx_r26.picker, rootToParentIndices_r16.concat(i_r22), displayData_r21)), 
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275advance"](1), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275property"]("ngTemplateOutlet", _r31)("ngTemplateOutletContext", _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275pureFunction1"](14, _c11, rootToParentIndices_r16.concat(i_r22)));
            }
        }
        var _c13 = function(a0) {
            return {
                width: a0
            };
        };
        function PbiDragDropPickerComponent_ng_template_4_ng_container_2_ng_template_6_div_2_Template(rf, ctx) {
            if (1 & rf && _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275element"](0, "div", 32), 
            2 & rf) {
                var position_r58 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"]().position;
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275property"]("ngStyle", _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275pureFunction1"](1, _c13, 8 * (position_r58.length - 1) + "px"));
            }
        }
        function PbiDragDropPickerComponent_ng_template_4_ng_container_2_ng_template_6_pbi_icon_4_Template(rf, ctx) {
            if (1 & rf && _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275element"](0, "pbi-icon", 33), 
            2 & rf) {
                var displayData_r57 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"]().displayData, ctx_r63 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"](3);
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275property"]("name", displayData_r57.icon.glyph)("size", ctx_r63.smallIconSize);
            }
        }
        function PbiDragDropPickerComponent_ng_template_4_ng_container_2_ng_template_6_pbi_svg_use_symbol_5_Template(rf, ctx) {
            if (1 & rf && _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275element"](0, "pbi-svg-use-symbol", 34), 
            2 & rf) {
                var displayData_r57 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"]().displayData;
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275property"]("ngStyle", displayData_r57.icon.styles)("sheet", displayData_r57.icon.sheet)("symbolId", displayData_r57.icon.symbolId);
            }
        }
        function PbiDragDropPickerComponent_ng_template_4_ng_container_2_ng_template_6_input_6_Template(rf, ctx) {
            if (1 & rf) {
                var _r71 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275getCurrentView"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementStart"](0, "input", 35), 
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275listener"]("ngModelChange", function($event) {
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275restoreView"](_r71);
                    var displayData_r57 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"]().displayData;
                    return _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275resetView"](displayData_r57.value = $event);
                })("keydown", function($event) {
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275restoreView"](_r71);
                    var position_r58 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"]().position, ctx_r72 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"](3);
                    return _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275resetView"](ctx_r72.handleKeyDown($event, position_r58));
                })("blur", function() {
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275restoreView"](_r71);
                    var position_r58 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"]().position, ctx_r74 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"](3);
                    return _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275resetView"](ctx_r74.endEditSection(position_r58));
                }), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var displayData_r57 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"]().displayData;
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275property"]("ngModel", displayData_r57.value);
            }
        }
        var _c14 = function(a0, a1) {
            return {
                showHover: a0,
                interactable: a1
            };
        };
        function PbiDragDropPickerComponent_ng_template_4_ng_container_2_ng_template_6_Template(rf, ctx) {
            if (1 & rf) {
                var _r78 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275getCurrentView"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementStart"](0, "div", 25, 26), 
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275listener"]("singleClickAction", function() {
                    var position_r58 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275restoreView"](_r78).position;
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"]();
                    var _r24 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275reference"](3), ctx_r77 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"](2);
                    return _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275resetView"](ctx_r77.v2Design && !ctx_r77.disableContentClick && ctx_r77.handleContentClick(_r24, position_r58));
                })("doubleClickAction", function() {
                    var position_r58 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275restoreView"](_r78).position, ctx_r79 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"](3);
                    return _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275resetView"](ctx_r79.beginEditSection(position_r58));
                })("accessible-click", function() {
                    var position_r58 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275restoreView"](_r78).position;
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"]();
                    var _r24 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275reference"](3), ctx_r80 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"](2);
                    return _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275resetView"](ctx_r80.v2Design && !ctx_r80.disableContentClick && ctx_r80.handleContentClick(_r24, position_r58));
                })("keydown.F2", function() {
                    var restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275restoreView"](_r78), displayData_r57 = restoredCtx.displayData, position_r58 = restoredCtx.position, ctx_r81 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"](3);
                    return _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275resetView"](displayData_r57.allowEditing && !displayData_r57.isEditing ? ctx_r81.beginEditSection(position_r58) : ctx_r81.return);
                })("keydown.arrowRight", function($event) {
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275restoreView"](_r78);
                    var ctx_r82 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"](3);
                    return _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275resetView"](ctx_r82.focusClearButton($event.target));
                })("contextmenu", function($event) {
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275restoreView"](_r78);
                    var ctx_r83 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"](3);
                    return _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275resetView"](ctx_r83.onContextMenu($event));
                })("dragstart", function($event) {
                    var restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275restoreView"](_r78), allowDrag_r59 = restoredCtx.allowDrag, position_r58 = restoredCtx.position, ctx_r84 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"](3);
                    return _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275resetView"](allowDrag_r59 && ctx_r84.handleDragItemStart($event, position_r58));
                })("dragend", function() {
                    var allowDrag_r59 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275restoreView"](_r78).allowDrag, ctx_r85 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"](3);
                    return _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275resetView"](allowDrag_r59 && ctx_r85.handleDragItemEnd());
                })("dragover", function($event) {
                    var allowDrag_r59 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275restoreView"](_r78).allowDrag, ctx_r86 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"](3);
                    return _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275resetView"](allowDrag_r59 && !ctx_r86.allowMultipleValues ? ctx_r86.handleDragover($event) : ctx_r86.return);
                })("drop", function($event) {
                    var allowDrag_r59 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275restoreView"](_r78).allowDrag, ctx_r87 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"](3);
                    return _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275resetView"](allowDrag_r59 && !ctx_r87.allowMultipleValues ? ctx_r87.handleDrop($event) : ctx_r87.return);
                })("pbiMenuButtonClick", function($event) {
                    var position_r58 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275restoreView"](_r78).position, ctx_r88 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"](3);
                    return _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275resetView"](ctx_r88.handleMenuItemClick($event, position_r58));
                }), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275template"](2, PbiDragDropPickerComponent_ng_template_4_ng_container_2_ng_template_6_div_2_Template, 1, 3, "div", 27), 
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementStart"](3, "div", 28), 
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275template"](4, PbiDragDropPickerComponent_ng_template_4_ng_container_2_ng_template_6_pbi_icon_4_Template, 1, 2, "pbi-icon", 29), 
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275template"](5, PbiDragDropPickerComponent_ng_template_4_ng_container_2_ng_template_6_pbi_svg_use_symbol_5_Template, 1, 3, "pbi-svg-use-symbol", 30), 
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275template"](6, PbiDragDropPickerComponent_ng_template_4_ng_container_2_ng_template_6_input_6_Template, 1, 1, "input", 31), 
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var displayData_r57 = ctx.displayData, isTopLevel_r60 = ctx.isTopLevel;
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"]();
                var _r29 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275reference"](9), ctx_r28 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"](2);
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275property"]("id", "contentLabelId" + ctx_r28.uid)("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275pureFunction2"](28, _c14, displayData_r57.interactionAvailable && !displayData_r57.isEditing && !ctx_r28.disableHover, displayData_r57.interactionAvailable))("ngStyle", displayData_r57.pbiStyle)("disabled", ctx_r28.v2Design && null == displayData_r57.menu)("pbiMenu", ctx_r28.v2Design ? displayData_r57.menu : null)("menuMode", null != ctx_r28.menuMode ? ctx_r28.menuMode : ctx_r28.CompactMenuMode)("pbiMenuActivation", ctx_r28.v2Design && displayData_r57.menu ? "contextmenu" : null)("draggable", !displayData_r57.isEditing && ctx_r28.draggable && !ctx_r28.disabled)("singleClickDisabled", displayData_r57.isEditing)("pbiTooltip", _r29)("pbiTooltipDisabled", ctx_r28.disableHover)("pbiTooltipPosition", ctx_r28.calculatedTooltipPosition)("pbiTooltipWithFlexiblePositions", ctx_r28.tooltipWithFlexiblePositions)("doubleClickDisabled", !displayData_r57.allowEditing || displayData_r57.isEditing)("accessible-click-ignore-mouse", !0)("accessible-click-ignore-tabindex", !ctx_r28.v2Design && !displayData_r57.allowEditing), 
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275attribute"]("role", ctx_r28.v2Design ? "button" : null)("aria-haspopup", !!ctx_r28.v2Design || null)("aria-labelledby", ctx_r28.ariaLabelledby + " contentLabelId" + ctx_r28.uid), 
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275advance"](2), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275property"]("ngIf", !isTopLevel_r60), 
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275advance"](1), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275property"]("ngSwitch", null == displayData_r57.icon ? null : displayData_r57.icon.type), 
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275advance"](1), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275property"]("ngSwitchCase", ctx_r28.PbiIconGlyphKind), 
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275advance"](1), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275property"]("ngSwitchCase", ctx_r28.PbiIconSvgKind), 
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275advance"](1), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275property"]("pbiEditableLabel", ctx_r28.editableLabelOptions)("pbiEditableLabelValue", displayData_r57.value)("pbiEditableLabelMode", displayData_r57.isEditing)("pbiEditableLabelEditable", displayData_r57.isEditing)("pbiEditableLabelClasses", ctx_r28.editableLabelClasses);
            }
        }
        function PbiDragDropPickerComponent_ng_template_4_ng_container_2_ng_template_8_div_1_Template(rf, ctx) {
            if (1 & rf && _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275element"](0, "div", 38), 
            2 & rf) {
                var displayData_r21 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"](2).$implicit;
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275property"]("textContent", displayData_r21.customTooltipContent.description);
            }
        }
        function PbiDragDropPickerComponent_ng_template_4_ng_container_2_ng_template_8_Template(rf, ctx) {
            if (1 & rf && (_angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275element"](0, "div", 36), 
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275template"](1, PbiDragDropPickerComponent_ng_template_4_ng_container_2_ng_template_8_div_1_Template, 1, 1, "div", 37)), 
            2 & rf) {
                var displayData_r21 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"]().$implicit, ctx_r30 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"](2);
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275property"]("textContent", ctx_r30.useCustomTooltip ? null == displayData_r21.customTooltipContent ? null : displayData_r21.customTooltipContent.title : displayData_r21.value), 
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275advance"](1), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275property"]("ngIf", ctx_r30.useCustomTooltip && (null == displayData_r21.customTooltipContent ? null : displayData_r21.customTooltipContent.description));
            }
        }
        function PbiDragDropPickerComponent_ng_template_4_ng_container_2_ng_template_10_button_0_Template(rf, ctx) {
            if (1 & rf) {
                var _r97 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275getCurrentView"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementStart"](0, "button", 40, 41), 
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275listener"]("click", function() {
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275restoreView"](_r97);
                    var position_r92 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"]().position, ctx_r95 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"](3);
                    return _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275resetView"](ctx_r95.handleClear(position_r92));
                })("keydown.arrowLeft", function($event) {
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275restoreView"](_r97);
                    var ctx_r98 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"](4);
                    return _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275resetView"](ctx_r98.focusContentLabel($event.target));
                })("keydown.arrowRight", function($event) {
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275restoreView"](_r97);
                    var position_r92 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"]().position, ctx_r99 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"](3);
                    return _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275resetView"](ctx_r99.handleClearButtonArrowRight($event.target, position_r92));
                }), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275pipe"](2, "localize"), 
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var displayData_r21 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"](2).$implicit, ctx_r93 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"](2);
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275property"]("tabindex", ctx_r93.disableClearButtonTabNavigation ? -1 : 0)("pbiTooltip", _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275pipeBind1"](2, 3, "FieldPicker_RemoveData"))("aria-label", displayData_r21.removeDataAriaLabel);
            }
        }
        function PbiDragDropPickerComponent_ng_template_4_ng_container_2_ng_template_10_Template(rf, ctx) {
            if (1 & rf && _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275template"](0, PbiDragDropPickerComponent_ng_template_4_ng_container_2_ng_template_10_button_0_Template, 3, 5, "button", 39), 
            2 & rf) {
                var ctx_r32 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"](3);
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275property"]("ngIf", ctx_r32.allowClear && !ctx_r32.disabled);
            }
        }
        function PbiDragDropPickerComponent_ng_template_4_ng_container_2_Template(rf, ctx) {
            if (1 & rf && (_angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementContainerStart"](0), 
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275template"](1, PbiDragDropPickerComponent_ng_template_4_ng_container_2_div_1_Template, 1, 3, "div", 14), 
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementStart"](2, "span", 15, 16), 
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275template"](4, PbiDragDropPickerComponent_ng_template_4_ng_container_2_ng_container_4_Template, 8, 22, "ng-container", 13), 
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275template"](5, PbiDragDropPickerComponent_ng_template_4_ng_container_2_ng_container_5_Template, 4, 16, "ng-container", 13), 
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275template"](6, PbiDragDropPickerComponent_ng_template_4_ng_container_2_ng_template_6_Template, 7, 31, "ng-template", null, 17, _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275templateRefExtractor"]), 
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275template"](8, PbiDragDropPickerComponent_ng_template_4_ng_container_2_ng_template_8_Template, 2, 2, "ng-template", null, 18, _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275templateRefExtractor"]), 
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275template"](10, PbiDragDropPickerComponent_ng_template_4_ng_container_2_ng_template_10_Template, 1, 1, "ng-template", null, 19, _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275templateRefExtractor"]), 
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementEnd"](), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementContainerEnd"]()), 
            2 & rf) {
                var displayData_r21 = ctx.$implicit, isTopLevel_r15 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"]().isTopLevel, ctx_r18 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275advance"](1), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275property"]("ngIf", isTopLevel_r15), 
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275advance"](1), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275classProp"]("error", displayData_r21.invalid), 
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275attribute"]("role", ctx_r18.v2Design ? "listitem" : null)("aria-level", ctx_r18.v2Design ? 1 : null)("aria-setsize", ctx_r18.v2Design ? 1 : null)("aria-posinset", ctx_r18.v2Design ? 1 : null), 
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275advance"](2), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275property"]("ngIf", ctx_r18.v2Design), 
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275advance"](1), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275property"]("ngIf", !ctx_r18.v2Design);
            }
        }
        function PbiDragDropPickerComponent_ng_template_4_div_3_Template(rf, ctx) {
            if (1 & rf && _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275element"](0, "div", 42), 
            2 & rf) {
                var ctx_r19 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"](2);
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275property"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275pureFunction1"](1, _c6, ctx_r19.shouldHighlightLastItemBottom));
            }
        }
        var _c15 = function(a0) {
            return {
                showListEndDropZone: a0
            };
        };
        function PbiDragDropPickerComponent_ng_template_4_ng_container_4_Template(rf, ctx) {
            if (1 & rf && (_angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementContainerStart"](0), 
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementContainer"](1, 7), 
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementContainerEnd"]()), 
            2 & rf) {
                var nonEmptyDisplayDataList_r14 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"]().nonEmptyDisplayDataList;
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"]();
                var _r7 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275reference"](9);
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275advance"](1), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275property"]("ngTemplateOutlet", _r7)("ngTemplateOutletContext", _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275pureFunction1"](2, _c15, nonEmptyDisplayDataList_r14.length > 0));
            }
        }
        var _c16 = function(a0) {
            return {
                childrenContentContainer: a0
            };
        };
        function PbiDragDropPickerComponent_ng_template_4_Template(rf, ctx) {
            if (1 & rf && (_angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementStart"](0, "div", 9, 10), 
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275template"](2, PbiDragDropPickerComponent_ng_template_4_ng_container_2_Template, 12, 9, "ng-container", 11), 
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementEnd"](), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275template"](3, PbiDragDropPickerComponent_ng_template_4_div_3_Template, 1, 3, "div", 12), 
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275template"](4, PbiDragDropPickerComponent_ng_template_4_ng_container_4_Template, 2, 4, "ng-container", 13)), 
            2 & rf) {
                var nonEmptyDisplayDataList_r14 = ctx.nonEmptyDisplayDataList, isTopLevel_r15 = ctx.isTopLevel, ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275property"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275pureFunction1"](5, _c16, !isTopLevel_r15)), 
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275attribute"]("role", ctx_r4.v2Design ? "list" : null), 
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275advance"](2), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275property"]("ngForOf", nonEmptyDisplayDataList_r14), 
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275advance"](1), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275property"]("ngIf", !ctx_r4.v2Design || !ctx_r4.allowMultipleValues), 
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275advance"](1), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275property"]("ngIf", ctx_r4.v2Design && ctx_r4.allowMultipleValues && isTopLevel_r15);
            }
        }
        function PbiDragDropPickerComponent_ng_template_6_span_0_Template(rf, ctx) {
            if (1 & rf) {
                var _r106 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275getCurrentView"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementStart"](0, "span", 44), 
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275listener"]("drop", function($event) {
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275restoreView"](_r106);
                    var ctx_r105 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"](2);
                    return _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275resetView"](ctx_r105.handleDrop($event));
                })("dragover", function($event) {
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275restoreView"](_r106);
                    var ctx_r107 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"](2);
                    return _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275resetView"](ctx_r107.handleDragover($event));
                }), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementStart"](1, "label"), 
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275text"](2), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var ctx_r104 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"](2);
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275attribute"]("aria-label", ctx_r104.placeholder), 
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275advance"](2), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275textInterpolate"](ctx_r104.placeholder);
            }
        }
        function PbiDragDropPickerComponent_ng_template_6_Template(rf, ctx) {
            if (1 & rf && _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275template"](0, PbiDragDropPickerComponent_ng_template_6_span_0_Template, 3, 2, "span", 43), 
            2 & rf) {
                var ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"](), _r7 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275reference"](9);
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275property"]("ngIf", !ctx_r6.v2Design)("ngIfElse", _r7);
            }
        }
        function PbiDragDropPickerComponent_ng_template_8_span_0_div_2_Template(rf, ctx) {
            if (1 & rf && _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275element"](0, "div", 50), 
            2 & rf) {
                var ctx_r111 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"](3);
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275property"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275pureFunction1"](1, _c6, ctx_r111.shouldHighlightLastItemBottom));
            }
        }
        function PbiDragDropPickerComponent_ng_template_8_span_0_Template(rf, ctx) {
            if (1 & rf) {
                var _r113 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275getCurrentView"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementStart"](0, "span", 46, 47), 
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275listener"]("accessible-click", function($event) {
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275restoreView"](_r113);
                    var _r110 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275reference"](1), ctx_r112 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"](2);
                    return _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275resetView"](ctx_r112.handleAddDataClick($event, _r110));
                })("drop", function($event) {
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275restoreView"](_r113);
                    var ctx_r114 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"](2);
                    return _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275resetView"](ctx_r114.handleDrop($event));
                })("dragenter", function() {
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275restoreView"](_r113);
                    var showListEndDropZone_r108 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"]().showListEndDropZone, ctx_r115 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"]();
                    return _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275resetView"](showListEndDropZone_r108 ? ctx_r115.handleDragEnterListEndArea() : ctx_r115.return);
                })("dragleave", function() {
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275restoreView"](_r113);
                    var showListEndDropZone_r108 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"]().showListEndDropZone, ctx_r117 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"]();
                    return _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275resetView"](showListEndDropZone_r108 ? ctx_r117.handleDragLeaveListEndArea() : ctx_r117.return);
                })("dragover", function($event) {
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275restoreView"](_r113);
                    var ctx_r119 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"](2);
                    return _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275resetView"](ctx_r119.handleDragOverAddDataArea($event));
                }), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275template"](2, PbiDragDropPickerComponent_ng_template_8_span_0_div_2_Template, 1, 3, "div", 48), 
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275element"](3, "label", 49), 
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275pipe"](4, "localize"), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var tmp_5_0, showListEndDropZone_r108 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"]().showListEndDropZone, ctx_r109 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275property"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275pureFunction1"](8, _c9, ctx_r109.compact)), 
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275attribute"]("aria-labelledby", ctx_r109.ariaLabelledby + " addDataLabelId" + ctx_r109.uid), 
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275advance"](2), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275property"]("ngIf", showListEndDropZone_r108), 
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275advance"](1), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275propertyInterpolate"]("localize", ctx_r109.addDataLabelKey), 
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275property"]("id", "addDataLabelId" + ctx_r109.uid), 
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275attribute"]("aria-label", null !== (tmp_5_0 = ctx_r109.addDataAriaLabelKey) && void 0 !== tmp_5_0 ? tmp_5_0 : _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275pipeBind1"](4, 6, "Add_Data"));
            }
        }
        function PbiDragDropPickerComponent_ng_template_8_Template(rf, ctx) {
            if (1 & rf && _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275template"](0, PbiDragDropPickerComponent_ng_template_8_span_0_Template, 5, 10, "span", 45), 
            2 & rf) {
                var ctx_r8 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275property"]("ngIf", ctx_r8.v2Design);
            }
        }
        var _c17 = function(a0, a1, a2, a3, a4) {
            return {
                empty: a0,
                disabled: a1,
                v2Design: a2,
                disableDropZoneIndicator: a3,
                compact: a4
            };
        }, PbiDragDropPickerComponent = function() {
            function PbiDragDropPickerComponent(changeDetectorRef, localizationService) {
                this.changeDetectorRef = changeDetectorRef, this.localizationService = localizationService, 
                this.CompactMenuMode = _pbi_menu__WEBPACK_IMPORTED_MODULE_1__.Kb.Compact, this.PbiIconGlyphKind = 0, 
                this.PbiIconSvgKind = 1, this.listOfPbiDisplayData = [], this.smallIconSize = "small", 
                this.shouldHighlightLastItemBottom = !1, this.draggingToPosition = "end", this.allowClear = !0, 
                this.data = [], this.dataFormat = "text", this.allowMultipleValues = !1, this.allowEditingLabelsSetting = "allDisallow", 
                this.v2Design = !1, this.onChangeAdd = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, 
                this.onChangeRemove = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, 
                this.onChangeReorder = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, 
                this.onChangeReplace = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, 
                this.onChangeLabelUpdate = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, 
                this.onCrossPickerDrop = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, 
                this.onAddDataClick = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, 
                this.onContentClick = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, 
                this.onMenuItemClick = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, 
                this.onClearButtonArrowRight = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, 
                this.editableLabelClasses = [ "fluentTheme-md-reg", "trimmedTextWithEllipsis" ], 
                this.uid = _powerbi_legacy_PowerBICommon_utils_idUtility__WEBPACK_IMPORTED_MODULE_2__.q.generateShortId(4);
            }
            return PbiDragDropPickerComponent.prototype.ngOnInit = function() {
                var _a, _b;
                this.disableHover = !0, this.allowClear = null === (_a = this.allowClear) || void 0 === _a || _a, 
                this.addDataLabelKey = null !== (_b = this.addDataLabelKey) && void 0 !== _b ? _b : "Plus_Add_Data", 
                this.editableLabelClasses = this.v2Design ? [ "fluentTheme-sm-reg", "trimmedTextWithEllipsis" ] : [ "fluentTheme-md-reg", "trimmedTextWithEllipsis" ], 
                this.editableLabelOptions = {
                    customTooltip: !0,
                    disableClick: !0,
                    inputMatchLabelWidth: !1
                }, this.calculatedTooltipPosition = this.tooltipPosition ? this.tooltipPosition : this.allowMultipleValues ? "before" : "above";
            }, PbiDragDropPickerComponent.prototype.ngAfterViewInit = function() {
                var _this = this;
                this.dragDropPicker.nativeElement.addEventListener("mousemove", function enableHover() {
                    _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_3__.fF.assert(function() {
                        return _this.disableHover;
                    }, "Expect hover is disabled"), _this.disableHover = !1, _this.dragDropPicker.nativeElement.removeEventListener("mousemove", enableHover);
                }), this.disableAutoScroll || (this.scrollToViewSubscription = this.listOfDataAsQueryList.changes.pipe((0, 
                rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.U)(function(result) {
                    return result.toArray();
                }), (0, rxjs_operators__WEBPACK_IMPORTED_MODULE_5__.h)(function() {
                    return _this.allowMultipleValues;
                }), (0, rxjs_operators__WEBPACK_IMPORTED_MODULE_6__.O)([]), (0, rxjs_operators__WEBPACK_IMPORTED_MODULE_7__.G)()).subscribe(function(_a) {
                    var currentResultArray = _a[1];
                    null != _this.scrollToIndex && (null == currentResultArray ? void 0 : currentResultArray.length) > 0 && _a[0].length < currentResultArray.length && currentResultArray[_this.scrollToIndex].nativeElement.scrollIntoView(), 
                    _this.resetHighlight(), _this.resetDraggingIndex(), _this.scrollToIndex = null;
                }));
            }, PbiDragDropPickerComponent.prototype.ngOnDestroy = function() {
                var _a;
                null === (_a = this.scrollToViewSubscription) || void 0 === _a || _a.unsubscribe();
            }, PbiDragDropPickerComponent.prototype.endEditSection = function(position) {
                var pbiDisplayData = this.getDisplayDataAtPosition(position);
                if (pbiDisplayData.allowEditing) if (pbiDisplayData.isEditing) {
                    pbiDisplayData.isEditing = !1;
                    var data = this.getDataAtPosition(position);
                    _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_3__.fF.assertValue(data, "Expect data at the given position exists");
                    var newData, newLabel = pbiDisplayData.value;
                    if ("string" == typeof data) {
                        if ((0, _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_Utility__WEBPACK_IMPORTED_MODULE_8__.g)(pbiDisplayData.value)) return void (pbiDisplayData.value = data);
                        data !== newLabel && (newData = newLabel);
                    } else {
                        if (!this.allowEmptyLabel && (0, _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_Utility__WEBPACK_IMPORTED_MODULE_8__.g)(pbiDisplayData.value)) return void (pbiDisplayData.value = data.label);
                        data.label !== newLabel && (newData = (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__assign)((0, 
                        tslib__WEBPACK_IMPORTED_MODULE_9__.__assign)({}, data), {
                            label: newLabel
                        }));
                    }
                    newData && (this.setDataAtPosition(position, newData), this.propagateChange && this.propagateChange(this.data), 
                    this.onChangeLabelUpdate.emit({
                        newLabel,
                        position
                    }));
                } else _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_3__.fF.assertFail("Pbi-drag-drop-picker: Attempting to end editing when you are NOT in edit mode");
            }, PbiDragDropPickerComponent.prototype.handleKeyDown = function(event, position) {
                event.keyCode !== _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_10__.hY && event.keyCode !== _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_10__.K5 || (0, 
                _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_10__.Vb)(event) || this.endEditSection(position), 
                event.stopPropagation();
            }, PbiDragDropPickerComponent.prototype.beginEditSection = function(position) {
                var pbiDisplayData = this.getDisplayDataAtPosition(position);
                pbiDisplayData.allowEditing && (pbiDisplayData.isEditing ? _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_3__.fF.assertFail("Pbi-drag-drop-picker: Attempting to edit when you are already in edit mode") : pbiDisplayData.isEditing = !0);
            }, PbiDragDropPickerComponent.prototype.detectChanges = function() {
                this.changeDetectorRef.detectChanges();
            }, PbiDragDropPickerComponent.prototype.writeValue = function(data) {
                this.data = [], this.listOfPbiDisplayData = [];
                for (var _i = 0, data_1 = data; _i < data_1.length; _i++) this.addData(data_1[_i]);
            }, PbiDragDropPickerComponent.prototype.registerOnChange = function(fn) {
                this.propagateChange = fn;
            }, PbiDragDropPickerComponent.prototype.registerOnTouched = function(_fn) {}, PbiDragDropPickerComponent.prototype.setDisabledState = function(isDisabled) {
                this.disabled = isDisabled;
            }, PbiDragDropPickerComponent.prototype.handleDragItemStart = function(event, fromPosition) {
                var _a, _b;
                if (this.draggable) {
                    this.disableHover = !0, this.draggingFromPosition = fromPosition;
                    var dataToTransfer = {
                        fromGroupId: null === (_a = this.externalCrossPickerDragDropMonitor) || void 0 === _a ? void 0 : _a.groupId,
                        fromComponentId: null === (_b = this.externalCrossPickerDragDropMonitor) || void 0 === _b ? void 0 : _b.componentId,
                        fromPosition,
                        data: this.getDataAtPosition(fromPosition)
                    };
                    event.dataTransfer.setData(this.dataFormat, JSON.stringify(dataToTransfer));
                }
            }, PbiDragDropPickerComponent.prototype.handleDragItemEnd = function() {
                this.disableHover = !1, this.resetDraggingIndex();
            }, PbiDragDropPickerComponent.prototype.handleDragover = function(event) {
                event.preventDefault();
            }, PbiDragDropPickerComponent.prototype.handleDragOverAddDataArea = function(event) {
                var _a;
                this.allowMultipleValues && 0 !== this.listOfPbiDisplayData.length ? (null === (_a = this.draggingFromPosition) || void 0 === _a ? void 0 : _a[0]) !== this.listOfPbiDisplayData.length - 1 && this.handleDragover(event) : this.handleDragover(event);
            }, PbiDragDropPickerComponent.prototype.handleDragLeavePosition = function(position) {
                this.getDisplayDataAtPosition(position).highlight = !1;
            }, PbiDragDropPickerComponent.prototype.handleDragEnterPosition = function(position) {
                this.draggable && (this.draggingToPosition = position, this.isItRedundantPositionToDrop(this.draggingFromPosition, position) || (this.getDisplayDataAtPosition(position).highlight = !0));
            }, PbiDragDropPickerComponent.prototype.handleAddDataClick = function(event, overlayOrigin) {
                this.v2Design && this.onAddDataClick.emit({
                    type: event.type,
                    overlayOrigin
                });
            }, PbiDragDropPickerComponent.prototype.handleContentClick = function(overlayOrigin, position) {
                var _this = this;
                _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_3__.fF.assert(function() {
                    return !_this.disableContentClick;
                }, "Expect this not to be called if disableContentClick is true"), this.v2Design && this.onContentClick.emit({
                    overlayOrigin,
                    position
                });
            }, PbiDragDropPickerComponent.prototype.handleMenuItemClick = function(menuButton, position) {
                this.v2Design && this.onMenuItemClick.emit({
                    menuButton,
                    position
                });
            }, PbiDragDropPickerComponent.prototype.onContextMenu = function(event) {
                event.stopPropagation(), event.preventDefault();
            }, PbiDragDropPickerComponent.prototype.focusClearButton = function(target) {
                if (this.clearButtonQueryList) {
                    var contentLabelIndex = this.contentLabelQueryList.toArray().findIndex(function(contentLabelRef) {
                        return contentLabelRef.nativeElement === target;
                    });
                    this.clearButtonQueryList.get(contentLabelIndex).nativeElement.focus();
                }
            }, PbiDragDropPickerComponent.prototype.focusContentLabel = function(target) {
                if (this.contentLabelQueryList) {
                    var clearButtonIndex = this.clearButtonQueryList.toArray().findIndex(function(clearButtonRef) {
                        return clearButtonRef.nativeElement === target;
                    });
                    this.contentLabelQueryList.get(clearButtonIndex).nativeElement.focus();
                }
            }, PbiDragDropPickerComponent.prototype.handleClearButtonArrowRight = function(target, position) {
                this.onClearButtonArrowRight.emit({
                    currentFocusedClearButton: target,
                    topLevelIndex: _.first(position)
                });
            }, PbiDragDropPickerComponent.prototype.doesCurrentDragDropReorderItems = function() {
                return this.doesMoveLocationReorderItems(this.draggingFromPosition, this.draggingToPosition);
            }, PbiDragDropPickerComponent.prototype.doesMoveLocationReorderItems = function(fromPosition, toPosition) {
                if (!fromPosition) return !1;
                _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_3__.fF.assert(function() {
                    return 1 === _.size(fromPosition);
                }, "we ONLY handle drag-drop into first level position as of now. Add your implementation for new scenario."), 
                _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_3__.fF.assert(function() {
                    return "end" === toPosition || 1 === _.size(toPosition);
                }, "we ONLY handle drag-drop into first level position as of now. Add your implementation for new scenario.");
                var fromIndex = fromPosition[0], toIndex = _.isArray(toPosition) ? toPosition[0] : toPosition;
                return toIndex !== fromIndex && ("end" === toIndex ? fromIndex !== _.size(this.data) - 1 : toIndex - 1 !== fromIndex);
            }, PbiDragDropPickerComponent.prototype.isItRedundantPositionToDrop = function(fromPosition, toPosition) {
                return !!fromPosition && !this.doesMoveLocationReorderItems(fromPosition, toPosition);
            }, PbiDragDropPickerComponent.prototype.isItRedundantPositionToDropCurrentData = function(toPosition) {
                return this.isItRedundantPositionToDrop(this.draggingFromPosition, toPosition);
            }, PbiDragDropPickerComponent.prototype.resetHighlight = function() {
                if (this.draggingFromPosition) {
                    var displayDataFrom = this.getDisplayDataAtPosition(this.draggingFromPosition);
                    displayDataFrom && (displayDataFrom.highlight = !1);
                }
                if ("end" !== this.draggingToPosition) {
                    var displayDataTo = this.getDisplayDataAtPosition(this.draggingToPosition);
                    displayDataTo && (displayDataTo.highlight = !1);
                }
                this.shouldHighlightLastItemBottom = !1;
            }, PbiDragDropPickerComponent.prototype.reorderItemsInternal = function(fromIndex, toIndex) {
                var _this = this;
                _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_3__.fF.assert(function() {
                    return null != fromIndex && _.inRange(fromIndex, 0, _.size(_this.data));
                }, "expect 0 <= fromIndex < itemsCount"), _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_3__.fF.assert(function() {
                    return null != toIndex && _.inRange(toIndex, 0, _.size(_this.data) + 1);
                }, "expect 0 <= toIndex <= itemsCount"), fromIndex < toIndex && toIndex--;
                var targetData = this.data.splice(fromIndex, 1)[0];
                this.data.splice(toIndex, 0, targetData);
                var targetDisplayData = this.listOfPbiDisplayData.splice(fromIndex, 1)[0];
                this.listOfPbiDisplayData.splice(toIndex, 0, targetDisplayData), this.propagateChange && this.propagateChange(this.data);
            }, PbiDragDropPickerComponent.prototype.resetDraggingIndex = function() {
                this.draggingFromPosition = void 0, this.draggingToPosition = "end";
            }, PbiDragDropPickerComponent.prototype.handleDragEnterListEndArea = function() {
                this.shouldHighlightLastItemBottom = null == this.draggingFromPosition || _.size(this.draggingFromPosition) > 1 || this.draggingFromPosition[0] !== this.data.length - 1, 
                this.draggingToPosition = "end";
            }, PbiDragDropPickerComponent.prototype.handleDragLeaveListEndArea = function() {
                this.shouldHighlightLastItemBottom = !1;
            }, PbiDragDropPickerComponent.prototype.handleDrop = function(event) {
                if (event.preventDefault(), event.stopPropagation(), null == this.draggingFromPosition) {
                    var dragDataFormats = event.dataTransfer.types;
                    _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_3__.fF.assert(function() {
                        return _.size(dragDataFormats) <= 1;
                    }, "We set one drag data format at most in the dragstart event");
                    var payload, dragDataFormat = _.first(dragDataFormats), unparsedData = event.dataTransfer.getData(dragDataFormat);
                    if (unparsedData) {
                        var jsonParsedData = void 0;
                        try {
                            jsonParsedData = JSON.parse(unparsedData);
                        } catch (e) {}
                        var data = void 0;
                        if ("object" == typeof jsonParsedData) if ((payload = jsonParsedData) && payload.hasOwnProperty("fromGroupId") && payload.hasOwnProperty("fromComponentId") && payload.hasOwnProperty("fromPosition") && payload.hasOwnProperty("data")) {
                            if (data = jsonParsedData.data, this.externalCrossPickerDragDropMonitor && (this.externalCrossPickerDragDropMonitor.groupId !== jsonParsedData.fromGroupId || this.externalCrossPickerDragDropMonitor.componentId !== jsonParsedData.fromComponentId)) return this.onCrossPickerDrop.emit({
                                fromGroupId: jsonParsedData.fromGroupId,
                                fromComponentId: jsonParsedData.fromComponentId,
                                fromPosition: jsonParsedData.fromPosition,
                                toGroupId: this.externalCrossPickerDragDropMonitor.groupId,
                                toComponentId: this.externalCrossPickerDragDropMonitor.componentId,
                                toPosition: this.draggingToPosition
                            }), void this.resetHighlight();
                        } else data = jsonParsedData; else data = unparsedData;
                        this.handleAdd(data, this.draggingToPosition);
                    }
                } else this.handleReorder(this.draggingFromPosition, this.draggingToPosition);
            }, PbiDragDropPickerComponent.prototype.handleClear = function(position, skipEmitEvent) {
                void 0 === skipEmitEvent && (skipEmitEvent = !1);
                var removedData = removeItemAtPosition(this.data, position);
                removeItemAtPosition(this.listOfPbiDisplayData, position), removedData ? (this.propagateChange && this.propagateChange(this.data), 
                skipEmitEvent || this.onChangeRemove.emit({
                    data: removedData,
                    position
                })) : _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_3__.fF.assertFail("expect position to be valid");
            }, PbiDragDropPickerComponent.prototype.handleAdd = function(data, position) {
                void 0 === position && (position = "end"), this.allowMultipleValues || _.isEmpty(this.data) || "end" !== position && 1 !== position.length ? (this.addReplaceDataInternal(data, position, !1), 
                this.propagateChange && this.propagateChange(this.data), this.onChangeAdd.emit({
                    data,
                    position
                })) : this.handleReplace(data, [ 0 ]);
            }, PbiDragDropPickerComponent.prototype.handleReplace = function(data, position) {
                this.addReplaceDataInternal(data, position, !0), this.propagateChange && this.propagateChange(this.data), 
                this.onChangeReplace.emit({
                    data,
                    position
                });
            }, PbiDragDropPickerComponent.prototype.addData = function(data) {
                this.addReplaceDataInternal(data, "end", !1);
            }, PbiDragDropPickerComponent.prototype.replaceData = function(data, position) {
                this.addReplaceDataInternal(data, position, !0);
            }, PbiDragDropPickerComponent.prototype.setAllData = function(data) {
                var newData = [], newListOfPbiDisplayData = [];
                if (!_.isEmpty(data) && _.every(data, function(singleData) {
                    return !!singleData;
                })) for (var _i = 0, data_2 = data; _i < data_2.length; _i++) {
                    var singleData = data_2[_i], pbiDisplayData = this.getPbiDisplayData(singleData, this.allowEditingLabelsSetting);
                    if (!pbiDisplayData) return;
                    newData.push(singleData), newListOfPbiDisplayData.push(pbiDisplayData);
                }
                this.data = newData, this.listOfPbiDisplayData = newListOfPbiDisplayData;
            }, PbiDragDropPickerComponent.prototype.handleReorder = function(fromPosition, toPosition) {
                var _this = this;
                _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_3__.fF.assert(function() {
                    return 1 === _.size(fromPosition);
                }, "We ONLY support reordering in first-level right now. Add your implementation for new scenario."), 
                _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_3__.fF.assert(function() {
                    return "end" === toPosition || 1 === _.size(toPosition);
                }, "We ONLY support reordering in first-level right now. Add your implementation for new scenario.");
                var fromIndex = fromPosition[0], toIndex = _.isArray(toPosition) ? toPosition[0] : toPosition;
                if (_powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_3__.fF.assert(function() {
                    return null != fromIndex && _.inRange(fromIndex, 0, _.size(_this.data));
                }, "expect fromIndex to be in valid range"), _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_3__.fF.assert(function() {
                    return null != toIndex && ("end" === toIndex || _.inRange(toIndex, 0, _.size(_this.data)));
                }, "expect toIndex to be in valid range"), this.resetHighlight(), this.doesMoveLocationReorderItems(fromPosition, toPosition)) {
                    var effectiveToIndex = "end" !== toIndex ? toIndex : _.size(this.data);
                    this.reorderItemsInternal(fromIndex, effectiveToIndex), this.onChangeReorder.emit({
                        data: this.data[fromIndex],
                        fromPosition,
                        toPosition: [ effectiveToIndex ]
                    });
                }
            }, PbiDragDropPickerComponent.prototype.addReplaceDataInternal = function(data, position, isReplace) {
                if (data) {
                    _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_3__.fF.assert(function() {
                        return "end" === position || 1 === _.size(position);
                    }, "we ONLY handle add/replace first level position data as of now. Add your implementation for new scenario."), 
                    _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_3__.fF.assert(function() {
                        return !isReplace || "end" !== position[0];
                    }, "replacement index must be a valid number"), this.allowMultipleValues || isReplace || (this.data.pop(), 
                    this.listOfPbiDisplayData.pop());
                    var pbiDisplayData = this.getPbiDisplayData(data, this.allowEditingLabelsSetting);
                    if (pbiDisplayData) {
                        this.resetHighlight();
                        var removeCount = isReplace ? 1 : 0;
                        if ("end" !== position) {
                            var index = position[0];
                            this.data.splice(index, removeCount, data), this.listOfPbiDisplayData.splice(index, removeCount, pbiDisplayData), 
                            this.scrollToIndex = index;
                        } else this.data.push(data), this.scrollToIndex = this.data.length - 1, this.listOfPbiDisplayData.push(pbiDisplayData);
                    }
                }
            }, PbiDragDropPickerComponent.prototype.getDataAtPosition = function(position) {
                return getItemAtPosition(this.data, position);
            }, PbiDragDropPickerComponent.prototype.setDataAtPosition = function(position, newData) {
                traverseAndCallback(this.data, position, function(lowestLevelSiblings, lowestLevelIndex) {
                    lowestLevelSiblings[lowestLevelIndex] = newData;
                });
            }, PbiDragDropPickerComponent.prototype.getDisplayDataAtPosition = function(position) {
                return getItemAtPosition(this.listOfPbiDisplayData, position);
            }, PbiDragDropPickerComponent.prototype.getPbiDisplayData = function(data, allowEditingLabelsSetting) {
                var allowEditing, _this = this;
                if ("string" == typeof data) {
                    if ("" === data) return;
                } else if (0 === Object.keys(data).length) return;
                var interactionAvailable = (allowEditing = "string" == typeof data ? "allAllow" === allowEditingLabelsSetting : "allAllow" === allowEditingLabelsSetting || "varyByItem" === allowEditingLabelsSetting && !!data.allowEditLabel) || this.v2Design && !this.disableContentClick || this.v2Design && "string" != typeof data && !!data.menu;
                return "string" == typeof data ? {
                    value: data,
                    allowEditing,
                    isEditing: !1,
                    highlight: !1,
                    interactionAvailable
                } : {
                    value: data.label,
                    icon: data.icon,
                    allowEditing,
                    isEditing: !1,
                    highlight: !1,
                    interactionAvailable,
                    menu: data.menu,
                    customTooltipContent: data.customTooltipContent,
                    children: _.isEmpty(data.children) ? void 0 : _.map(data.children, function(childData) {
                        return _this.getPbiDisplayData(childData, allowEditingLabelsSetting);
                    }),
                    actionTooltip: data.actionTooltip,
                    removeDataAriaLabel: this.localizationService.format("FieldPicker_RemoveField", data.label),
                    pbiStyle: data.pbiStyle,
                    invalid: data.invalid
                };
            }, PbiDragDropPickerComponent.\u0275fac = function(t) {
                return new (t || PbiDragDropPickerComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275directiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectorRef), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275directiveInject"](_powerbi_Localization__WEBPACK_IMPORTED_MODULE_11__.o));
            }, PbiDragDropPickerComponent.\u0275cmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275defineComponent"]({
                type: PbiDragDropPickerComponent,
                selectors: [ [ "pbi-drag-drop-picker" ] ],
                viewQuery: function(rf, ctx) {
                    if (1 & rf && (_angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275viewQuery"](_c0, 5), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275viewQuery"](_c1, 5), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275viewQuery"](_c2, 5), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275viewQuery"](_c3, 5)), 2 & rf) {
                        var _t = void 0;
                        _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275queryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275loadQuery"]()) && (ctx.dragDropPicker = _t.first), 
                        _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275queryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275loadQuery"]()) && (ctx.clearButtonQueryList = _t), 
                        _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275queryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275loadQuery"]()) && (ctx.contentLabelQueryList = _t), 
                        _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275queryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275loadQuery"]()) && (ctx.listOfDataAsQueryList = _t);
                    }
                },
                inputs: {
                    pbiDragDropPickerActionsTemplate: "pbiDragDropPickerActionsTemplate",
                    itemPromotedActionTemplate: "itemPromotedActionTemplate",
                    externalCrossPickerDragDropMonitor: "externalCrossPickerDragDropMonitor",
                    allowClear: "allowClear",
                    data: "data",
                    dataFormat: "dataFormat",
                    disabled: "disabled",
                    draggable: "draggable",
                    placeholder: "placeholder",
                    addDataLabelKey: "addDataLabelKey",
                    addDataAriaLabelKey: "addDataAriaLabelKey",
                    allowMultipleValues: "allowMultipleValues",
                    allowEditingLabelsSetting: "allowEditingLabelsSetting",
                    useCustomTooltip: "useCustomTooltip",
                    tooltipPosition: "tooltipPosition",
                    tooltipWithFlexiblePositions: "tooltipWithFlexiblePositions",
                    disableAutoScroll: "disableAutoScroll",
                    disableClearButtonTabNavigation: "disableClearButtonTabNavigation",
                    allowEmptyLabel: "allowEmptyLabel",
                    compact: "compact",
                    disableDropZoneIndicator: "disableDropZoneIndicator",
                    disableContentClick: "disableContentClick",
                    v2Design: "v2Design",
                    menuMode: "menuMode",
                    ariaLabelledby: "ariaLabelledby"
                },
                outputs: {
                    onChangeAdd: "onChangeAdd",
                    onChangeRemove: "onChangeRemove",
                    onChangeReorder: "onChangeReorder",
                    onChangeReplace: "onChangeReplace",
                    onChangeLabelUpdate: "onChangeLabelUpdate",
                    onCrossPickerDrop: "onCrossPickerDrop",
                    onAddDataClick: "onAddDataClick",
                    onContentClick: "onContentClick",
                    onMenuItemClick: "onMenuItemClick",
                    onClearButtonArrowRight: "onClearButtonArrowRight"
                },
                features: [ _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275ProvidersFeature"]([ {
                    provide: _angular_forms__WEBPACK_IMPORTED_MODULE_12__.JU,
                    useExisting: (0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(function() {
                        return PbiDragDropPickerComponent;
                    }),
                    multi: !0
                } ]) ],
                decls: 10,
                vars: 10,
                consts: [ [ 1, "drag-drop-picker", 3, "ngClass" ], [ "dragDropPicker", "" ], [ 3, "ngTemplateOutlet", "ngTemplateOutletContext", 4, "ngIf", "ngIfElse" ], [ "class", "dropArea unselectable", 3, "drop", "dragover", "dragenter", "dragleave", 4, "ngIf" ], [ "nonEmptyDisplayDataListTemplate", "" ], [ "showPlaceholder", "" ], [ "addData", "" ], [ 3, "ngTemplateOutlet", "ngTemplateOutletContext" ], [ 1, "dropArea", "unselectable", 3, "drop", "dragover", "dragenter", "dragleave" ], [ 3, "ngClass" ], [ "listOfData", "" ], [ 4, "ngFor", "ngForOf" ], [ "class", "dropBetween unselectable", 3, "ngClass", 4, "ngIf" ], [ 4, "ngIf" ], [ "class", "dropBetween unselectable", 3, "ngClass", "dragenter", "dragleave", "dragover", "drop", 4, "ngIf" ], [ 1, "content" ], [ "contentContainer", "" ], [ "contentLabelTemplate", "" ], [ "tooltipTemplateRef", "" ], [ "clearButtonTemplate", "" ], [ 1, "dropBetween", "unselectable", 3, "ngClass", "dragenter", "dragleave", "dragover", "drop" ], [ 1, "selfAndChildrenContent" ], [ 1, "selfLevelContentContainer", 3, "ngClass" ], [ 4, "ngTemplateOutlet", "ngTemplateOutletContext" ], [ 3, "ngTemplateOutlet", "ngTemplateOutletContext", 4, "ngIf" ], [ "customClick", "", "pbiTooltipAlwaysShow", "true", 1, "contentWithIndentationContainer", 3, "id", "ngClass", "ngStyle", "disabled", "pbiMenu", "menuMode", "pbiMenuActivation", "draggable", "singleClickDisabled", "pbiTooltip", "pbiTooltipDisabled", "pbiTooltipPosition", "pbiTooltipWithFlexiblePositions", "doubleClickDisabled", "accessible-click-ignore-mouse", "accessible-click-ignore-tabindex", "singleClickAction", "doubleClickAction", "accessible-click", "keydown.F2", "keydown.arrowRight", "contextmenu", "dragstart", "dragend", "dragover", "drop", "pbiMenuButtonClick" ], [ "contentLabel", "" ], [ "class", "indentation", 3, "ngStyle", 4, "ngIf" ], [ 1, "content-label", 3, "ngSwitch" ], [ 3, "name", "size", 4, "ngSwitchCase" ], [ 3, "ngStyle", "sheet", "symbolId", 4, "ngSwitchCase" ], [ "class", "editableLabel", "spellcheck", "false", 3, "ngModel", "ngModelChange", "keydown", "blur", 4, "pbiEditableLabel", "pbiEditableLabelValue", "pbiEditableLabelMode", "pbiEditableLabelEditable", "pbiEditableLabelClasses" ], [ 1, "indentation", 3, "ngStyle" ], [ 3, "name", "size" ], [ 3, "ngStyle", "sheet", "symbolId" ], [ "spellcheck", "false", 1, "editableLabel", 3, "ngModel", "ngModelChange", "keydown", "blur" ], [ 1, "tooltipTitle", 3, "textContent" ], [ "class", "fieldTooltipDescription", 3, "textContent", 4, "ngIf" ], [ 1, "fieldTooltipDescription", 3, "textContent" ], [ "class", "glyphicon pbi-glyph-close glyph-mini content-clear pbi-focus-outline unselectable", 3, "tabindex", "pbiTooltip", "aria-label", "click", "keydown.arrowLeft", "keydown.arrowRight", 4, "ngIf" ], [ 1, "glyphicon", "pbi-glyph-close", "glyph-mini", "content-clear", "pbi-focus-outline", "unselectable", 3, "tabindex", "pbiTooltip", "aria-label", "click", "keydown.arrowLeft", "keydown.arrowRight" ], [ "clearButton", "" ], [ 1, "dropBetween", "unselectable", 3, "ngClass" ], [ "class", "placeholder", "aria-readonly", "true", "tabIndex", "0", 3, "drop", "dragover", 4, "ngIf", "ngIfElse" ], [ "aria-readonly", "true", "tabIndex", "0", 1, "placeholder", 3, "drop", "dragover" ], [ "data-testid", "add-data-button", "class", "placeholder", "tabIndex", "0", "role", "button", "aria-haspopup", "true", 3, "ngClass", "accessible-click", "drop", "dragenter", "dragleave", "dragover", 4, "ngIf" ], [ "data-testid", "add-data-button", "tabIndex", "0", "role", "button", "aria-haspopup", "true", 1, "placeholder", 3, "ngClass", "accessible-click", "drop", "dragenter", "dragleave", "dragover" ], [ "addDataButton", "" ], [ "class", "dropBetween unselectable insidePlaceholder", 3, "ngClass", 4, "ngIf" ], [ 1, "fluentTheme-sm-reg", 3, "localize", "id" ], [ 1, "dropBetween", "unselectable", "insidePlaceholder", 3, "ngClass" ] ],
                template: function(rf, ctx) {
                    if (1 & rf && (_angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementStart"](0, "div", 0, 1), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275template"](2, PbiDragDropPickerComponent_ng_container_2_Template, 1, 6, "ng-container", 2), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275template"](3, PbiDragDropPickerComponent_div_3_Template, 1, 0, "div", 3), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275template"](4, PbiDragDropPickerComponent_ng_template_4_Template, 5, 7, "ng-template", null, 4, _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275templateRefExtractor"]), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275template"](6, PbiDragDropPickerComponent_ng_template_6_Template, 1, 2, "ng-template", null, 5, _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275templateRefExtractor"]), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275template"](8, PbiDragDropPickerComponent_ng_template_8_Template, 1, 1, "ng-template", null, 6, _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275templateRefExtractor"]), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementEnd"]()), 2 & rf) {
                        var _r5 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275reference"](7);
                        _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275property"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275pureFunction5"](4, _c17, ctx.listOfPbiDisplayData.length < 1, ctx.disabled, ctx.v2Design, ctx.disableDropZoneIndicator, ctx.compact)), 
                        _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275advance"](2), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275property"]("ngIf", ctx.listOfPbiDisplayData.length > 0)("ngIfElse", _r5), 
                        _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275advance"](1), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275property"]("ngIf", !ctx.v2Design && ctx.allowMultipleValues && ctx.listOfPbiDisplayData.length > 0);
                    }
                },
                dependencies: [ _angular_common__WEBPACK_IMPORTED_MODULE_13__.NgClass, _angular_common__WEBPACK_IMPORTED_MODULE_13__.NgForOf, _angular_common__WEBPACK_IMPORTED_MODULE_13__.NgIf, _angular_common__WEBPACK_IMPORTED_MODULE_13__.NgTemplateOutlet, _angular_common__WEBPACK_IMPORTED_MODULE_13__.NgStyle, _angular_common__WEBPACK_IMPORTED_MODULE_13__.NgSwitch, _angular_common__WEBPACK_IMPORTED_MODULE_13__.NgSwitchCase, _custom_click_custom_click_directive__WEBPACK_IMPORTED_MODULE_14__.f, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Fj, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.JJ, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.On, _Localization_directives_localize_directive__WEBPACK_IMPORTED_MODULE_15__.X, _A11y_directives_accessible_click_directive__WEBPACK_IMPORTED_MODULE_16__.t, _pbi_editable_label_pbi_editable_label_directive__WEBPACK_IMPORTED_MODULE_17__.D, _pbi_icon_pbi_icon_component__WEBPACK_IMPORTED_MODULE_18__._, _pbi_menu_pbi_menu_directive__WEBPACK_IMPORTED_MODULE_19__.l8, _pbi_svg_use_symbol_pbi_svg_use_symbol_component__WEBPACK_IMPORTED_MODULE_20__.R, _pbi_tooltip_pbi_tooltip_directive__WEBPACK_IMPORTED_MODULE_21__.V, _Localization_pipes_localize_pipe__WEBPACK_IMPORTED_MODULE_22__.F ],
                styles: [ '[_nghost-%COMP%]{--contentBackgroundColor: var(--gray-30);--contentBorderColor: var(--gray-40);--colorActionButton: var(--gray-190);--colorItemHover: var(--gray-60);--grayBackgroundEmpty: var(--gray-20)}[data-legacy-theming=false]   [_nghost-%COMP%]{--contentBackgroundColor: var(--colorNeutralBackground3);--contentBorderColor: var(--colorNeutralStroke1);--colorActionButton: var(--colorNeutralForeground1);--colorItemHover: var(--colorNeutralBackground3Hover);--grayBackgroundEmpty: var(--colorNeutralBackground3)}.placeholder-gray-background[_nghost-%COMP%]   .drag-drop-picker.empty[_ngcontent-%COMP%]{background-color:var(--grayBackgroundEmpty);border:1px solid var(--grayBackgroundEmpty)}.pbi-drag-drop-picker-scrollbar[_nghost-%COMP%]   .drag-drop-picker[_ngcontent-%COMP%]{overflow-y:auto}.tooltipTitle[_ngcontent-%COMP%]{font-weight:700}.fieldTooltipDescription[_ngcontent-%COMP%]{max-width:240px;display:block;word-break:break-word;white-space:pre-wrap}.drag-drop-picker[_ngcontent-%COMP%]{display:flex;border:1px dashed var(--gray-130, #605E5C);border-radius:2px;flex-direction:column;--field-error-background-color: var(--globalColorCranberryTint60);--field-error-border-color: var(--globalColorCranberryShade10)}  [data-legacy-theming=false] .drag-drop-picker{--field-error-background-color: var(--colorDangerBackground1);--field-error-border-color: var(--colorDangerBorder1)}.drag-drop-picker.disabled[_ngcontent-%COMP%]{pointer-events:none;-webkit-user-select:none;-ms-user-select:none;user-select:none}.drag-drop-picker.v2Design[_ngcontent-%COMP%]{border:1px dashed var(--colorNeutralStrokeAccessible);background-color:var(--colorNeutralBackground1);height:100%;font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--sm-font-size, 12px);font-weight:var(--font-weight-regular, 400)}.drag-drop-picker.v2Design[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{padding:0}.drag-drop-picker.v2Design[_ngcontent-%COMP%]   span.content[_ngcontent-%COMP%]{background-color:var(--colorNeutralBackground2);border-color:var(--colorNeutralStrokeAccessible);border-radius:3px;color:var(--colorNeutralForeground1);padding:2px;height:fit-content;display:flex;flex-direction:row;align-items:center}.drag-drop-picker.v2Design[_ngcontent-%COMP%]   span.content.error[_ngcontent-%COMP%]{border-color:var(--field-error-border-color);background-color:var(--field-error-background-color);color:var(--colorDangerForeground1)}.drag-drop-picker.v2Design[_ngcontent-%COMP%]   span.content[_ngcontent-%COMP%]   .selfAndChildrenContent[_ngcontent-%COMP%]{flex:1;display:flex;flex-direction:column;overflow-x:hidden}.drag-drop-picker.v2Design[_ngcontent-%COMP%]   span.content[_ngcontent-%COMP%]   .selfAndChildrenContent[_ngcontent-%COMP%]   .selfLevelContentContainer[_ngcontent-%COMP%]{display:flex;flex:1;flex-direction:row;align-items:center;box-sizing:border-box;height:24px}.drag-drop-picker.v2Design[_ngcontent-%COMP%]   span.content[_ngcontent-%COMP%]   .selfAndChildrenContent[_ngcontent-%COMP%]   .selfLevelContentContainer[_ngcontent-%COMP%]   .contentWithIndentationContainer[_ngcontent-%COMP%]{padding:0 2px}.drag-drop-picker.v2Design[_ngcontent-%COMP%]   span.content[_ngcontent-%COMP%]   .selfAndChildrenContent[_ngcontent-%COMP%]   .selfLevelContentContainer[_ngcontent-%COMP%]   .contentWithIndentationContainer.interactable[_ngcontent-%COMP%]{cursor:pointer}.drag-drop-picker.v2Design[_ngcontent-%COMP%]   span.content[_ngcontent-%COMP%]   .selfAndChildrenContent[_ngcontent-%COMP%]   .selfLevelContentContainer[_ngcontent-%COMP%]   .contentWithIndentationContainer.showHover[_ngcontent-%COMP%]:hover{background-color:var(--colorNeutralBackground3Hover)}.drag-drop-picker.v2Design[_ngcontent-%COMP%]   span.content[_ngcontent-%COMP%]   .selfAndChildrenContent[_ngcontent-%COMP%]   .selfLevelContentContainer[_ngcontent-%COMP%]   .content-clear[_ngcontent-%COMP%]{height:24px;width:24px;display:flex;align-items:center;justify-content:center;margin:0}.drag-drop-picker.v2Design[_ngcontent-%COMP%]   span.content[_ngcontent-%COMP%]   .selfAndChildrenContent[_ngcontent-%COMP%]   .selfLevelContentContainer[_ngcontent-%COMP%]   .content-clear[_ngcontent-%COMP%]:hover{background-color:var(--colorNeutralBackground3Hover)}.drag-drop-picker.v2Design[_ngcontent-%COMP%]   span.content[_ngcontent-%COMP%]   .selfAndChildrenContent[_ngcontent-%COMP%]   .selfLevelContentContainer.compact[_ngcontent-%COMP%]{height:16px}.drag-drop-picker.v2Design[_ngcontent-%COMP%]   span.content[_ngcontent-%COMP%]   .selfAndChildrenContent[_ngcontent-%COMP%]   .selfLevelContentContainer.compact[_ngcontent-%COMP%]   .content-clear[_ngcontent-%COMP%]{height:16px;width:16px}.drag-drop-picker.v2Design[_ngcontent-%COMP%]   span.content[_ngcontent-%COMP%]   .selfAndChildrenContent[_ngcontent-%COMP%]   .childrenContentContainer[_ngcontent-%COMP%]{list-style:none;margin:0;padding:0}.drag-drop-picker.v2Design[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]   .childrenContentContainer[_ngcontent-%COMP%]   span.content[_ngcontent-%COMP%]{border:none;padding:0;margin:0}.drag-drop-picker.v2Design[_ngcontent-%COMP%]   span.placeholder[_ngcontent-%COMP%]{background-color:var(--colorNeutralBackground1);color:var(--colorNeutralForeground1);display:flex;justify-content:center;cursor:pointer;padding:0;margin:4px;line-height:28px;box-sizing:border-box;position:relative;border:1px solid var(--colorNeutralStrokeAccessible)}.drag-drop-picker.v2Design[_ngcontent-%COMP%]   span.placeholder.compact[_ngcontent-%COMP%]{line-height:20px}.drag-drop-picker.v2Design[_ngcontent-%COMP%]   span.placeholder[_ngcontent-%COMP%]   .dropBetween.insidePlaceholder[_ngcontent-%COMP%]{pointer-events:none;position:absolute;top:0;left:0;width:calc(100% - 8px)}.drag-drop-picker.v2Design[_ngcontent-%COMP%]   span.placeholder[_ngcontent-%COMP%]:hover{background-color:var(--colorNeutralBackground1Hover)}.drag-drop-picker.v2Design[_ngcontent-%COMP%]   span.placeholder[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{font-weight:600;cursor:pointer;pointer-events:none;display:flex;align-items:center;justify-content:center}.drag-drop-picker.v2Design.disabled[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{opacity:.5}.drag-drop-picker[_ngcontent-%COMP%]   div.dropBetween[_ngcontent-%COMP%]{height:4px;margin:0 4px}.drag-drop-picker[_ngcontent-%COMP%]   div.dropBetween.highlight[_ngcontent-%COMP%]{background-color:var(--theme-primary-color, #F2C811)}.drag-drop-picker[_ngcontent-%COMP%]   div.dropArea[_ngcontent-%COMP%]{flex:1;min-height:8px}.drag-drop-picker[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;flex:1;white-space:nowrap;overflow:hidden;padding:6px 8px;height:12px;border-radius:2px}.drag-drop-picker[_ngcontent-%COMP%]   span.placeholder[_ngcontent-%COMP%]{color:var(--gray-90, #A19F9D)}.drag-drop-picker[_ngcontent-%COMP%]   span.content[_ngcontent-%COMP%]{margin:0 4px;border:1px solid var(--contentBorderColor);background-color:var(--contentBackgroundColor)}.drag-drop-picker[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]   pbi-icon[_ngcontent-%COMP%]{margin-right:8px;flex-shrink:0}.drag-drop-picker[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]   pbi-svg-use-symbol[_ngcontent-%COMP%]{width:var(--lg-font-size, 16px);height:var(--lg-font-size, 16px);margin-right:8px;flex-shrink:0}.drag-drop-picker[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]   .contentWithIndentationContainer[_ngcontent-%COMP%]{overflow:hidden;flex:1;display:flex;flex-direction:row}.drag-drop-picker[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]   .contentWithIndentationContainer.showHover[_ngcontent-%COMP%]:hover{background-color:var(--colorItemHover)}.drag-drop-picker[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]   .content-label[_ngcontent-%COMP%]{display:flex;text-overflow:ellipsis;overflow:hidden;align-items:center;padding:0;flex:1;color:var(--colorNeutralForeground1)}.drag-drop-picker[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]   .content-clear[_ngcontent-%COMP%]{cursor:pointer;padding:0;border:0;background:transparent;margin-left:12px;color:var(--colorActionButton)}.drag-drop-picker[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]   .contentWithIndentationContainer[_ngcontent-%COMP%], .drag-drop-picker[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]   .content-clear[_ngcontent-%COMP%], .drag-drop-picker   span   [_nghost-%COMP%]     .pbi-drag-drop-picker-actions button{box-sizing:border-box;border:solid 2px transparent;border-radius:2px;outline:none}.drag-drop-picker[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]   .contentWithIndentationContainer.pbi-focus-outline[_ngcontent-%COMP%]:focus-visible, .drag-drop-picker[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]   .content-clear.pbi-focus-outline[_ngcontent-%COMP%]:focus-visible, .drag-drop-picker   span   [_nghost-%COMP%]     .pbi-drag-drop-picker-actions button.pbi-focus-outline:focus-visible{border-color:var(--gray-140, #484644)}.drag-drop-picker[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]   .contentWithIndentationContainer[_ngcontent-%COMP%]   .content-label[_ngcontent-%COMP%]   input[_ngcontent-%COMP%], .drag-drop-picker[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]   .contentWithIndentationContainer[_ngcontent-%COMP%]   .content-label[_ngcontent-%COMP%]   pbi-text-label[_ngcontent-%COMP%]{outline:none;border:none}.drag-drop-picker.disableDropZoneIndicator[_ngcontent-%COMP%]{border-style:solid}.drag-drop-picker.disableDropZoneIndicator[_ngcontent-%COMP%]   span.content[_ngcontent-%COMP%]{border-style:none}.drag-drop-picker.disableDropZoneIndicator[_ngcontent-%COMP%]   span.content[_ngcontent-%COMP%]   .selfAndChildrenContent[_ngcontent-%COMP%]   .selfLevelContentContainer[_ngcontent-%COMP%]{height:26px}.drag-drop-picker.disableDropZoneIndicator[_ngcontent-%COMP%]   span.content[_ngcontent-%COMP%]   .selfAndChildrenContent[_ngcontent-%COMP%]   .selfLevelContentContainer.compact[_ngcontent-%COMP%]{height:18px}.drag-drop-picker.disableDropZoneIndicator[_ngcontent-%COMP%]   span.placeholder[_ngcontent-%COMP%]{border-color:var(--colorNeutralStroke1)}[_nghost-%COMP%]     .pbi-drag-drop-picker-actions{align-self:stretch;display:flex;justify-content:space-evenly;align-items:center}[_nghost-%COMP%]     .pbi-drag-drop-picker-actions>*{color:var(--gray-190, #201F1E)}[_nghost-%COMP%]     .pbi-drag-drop-picker-actions button.v2Design{margin:0;border:0;height:24px;width:24px;color:var(--colorNeutralForeground1);fill:var(--colorNeutralForeground1)}[_nghost-%COMP%]     .pbi-drag-drop-picker-actions button.v2Design:hover{background-color:var(--colorNeutralBackground3Hover)}[_nghost-%COMP%]     .pbi-drag-drop-picker-actions .button-divider.v2Design{align-self:stretch;margin-top:4px;margin-bottom:4px;background-color:var(--colorNeutralStrokeAccessible)}[_nghost-%COMP%]     .compact button.v2Design{height:16px;width:16px}[_nghost-%COMP%]     .compact .button-divider.v2Design{margin-top:2px;margin-bottom:2px}[_nghost-%COMP%]     .content-label pbi-text-label{margin:0;padding:0;flex:1;overflow-x:hidden}[_nghost-%COMP%]     .content-label input{margin:0;padding:2px 0;width:100%}' ],
                changeDetection: 0
            }), PbiDragDropPickerComponent;
        }();
        function getItemAtPosition(collection, position) {
            return traverseAndCallback(collection, position, function(lowestLevelSiblings, lowestLevelIndex) {
                return lowestLevelSiblings[lowestLevelIndex];
            });
        }
        function removeItemAtPosition(collection, position) {
            return traverseAndCallback(collection, position, function(lowestLevelSiblings, lowestLevelIndex) {
                return lowestLevelSiblings.splice(lowestLevelIndex, 1)[0];
            });
        }
        function traverseAndCallback(collection, position, callback) {
            _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_3__.fF.assert(function() {
                return !_.isEmpty(position);
            }, "the given position should contain at least one element");
            var currentLevelIndex = position[0], currentLevelItem = _.nth(collection, currentLevelIndex);
            _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_3__.fF.assertAnyValue(currentLevelItem, "it is possible that currentLevelItem is undefined, e.g. when using this function to add an item after the last item in the collection at the lowest level of the position");
            var childPosition = position.slice(1);
            return _.isEmpty(childPosition) ? callback(collection, currentLevelIndex) : currentLevelItem ? "string" == typeof currentLevelItem ? (_powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_3__.fF.assertFail("string data should not have any child"), 
            callback(collection, currentLevelIndex)) : traverseAndCallback(currentLevelItem.children, childPosition, callback) : void _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_3__.fF.assertFail("trying to do something to a child of an item but the item does not exist");
        }
    },
    56598: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            K: function() {
                return PbiDragDropPickerModule;
            }
        });
        var _A11y__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(20914), _custom_click_custom_click_module__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(5806), _pbi_editable_label__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(94770), _pbi_icon__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(93367), _pbi_menu__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(94841), _pbi_svg_use_symbol__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(79725), _pbi_tooltip__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(16095), _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(77476), _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(17174), _powerbi_Localization__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(79061), _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(50423), PbiDragDropPickerModule = function() {
            function PbiDragDropPickerModule() {}
            return PbiDragDropPickerModule.\u0275fac = function(t) {
                return new (t || PbiDragDropPickerModule);
            }, PbiDragDropPickerModule.\u0275mod = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275defineNgModule"]({
                type: PbiDragDropPickerModule
            }), PbiDragDropPickerModule.\u0275inj = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275defineInjector"]({
                imports: [ _angular_common__WEBPACK_IMPORTED_MODULE_1__.CommonModule, _custom_click_custom_click_module__WEBPACK_IMPORTED_MODULE_2__.Y, _angular_forms__WEBPACK_IMPORTED_MODULE_3__.u5, _powerbi_Localization__WEBPACK_IMPORTED_MODULE_4__.v, _A11y__WEBPACK_IMPORTED_MODULE_5__._, _pbi_editable_label__WEBPACK_IMPORTED_MODULE_6__.f, _pbi_icon__WEBPACK_IMPORTED_MODULE_7__.U, _pbi_menu__WEBPACK_IMPORTED_MODULE_8__.b, _pbi_svg_use_symbol__WEBPACK_IMPORTED_MODULE_9__.j, _pbi_tooltip__WEBPACK_IMPORTED_MODULE_10__.Z, _angular_forms__WEBPACK_IMPORTED_MODULE_3__.UX ]
            }), PbiDragDropPickerModule;
        }();
    },
    58679: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            I: function() {
                return PbiDropdownFieldListMenuDirective;
            }
        });
        var pbi_field_list_component = __webpack_require__(65005), debug = __webpack_require__(62458), keyUtils = __webpack_require__(9795), combineLatest = __webpack_require__(59017), filter = __webpack_require__(59973), map = __webpack_require__(14172), switchMap = __webpack_require__(81905), takeUntil = __webpack_require__(83317), take = __webpack_require__(48787), core = __webpack_require__(50423), pbi_dropdown_service = __webpack_require__(84354), PbiDropdownFieldListStrategy = function() {
            function PbiDropdownFieldListStrategy(pbiDropdownService) {
                this.pbiDropdownService = pbiDropdownService, this.isOpen$ = this.pbiDropdownService.select$("open");
                var dropdownItems$ = this.pbiDropdownService.select$("dropdownItems"), overlayRef$ = this.pbiDropdownService.select$("overlayRef"), fieldListComponent$ = dropdownItems$.pipe((0, 
                filter.h)(function(dropdownItems) {
                    return !!dropdownItems;
                }), (0, map.U)(function(dropdownItems) {
                    return debug.fF.assert(function() {
                        return 1 === dropdownItems.length;
                    }, "Expected 1 FieldListComponent"), dropdownItems.first;
                })), fieldListRendered$ = fieldListComponent$.pipe((0, switchMap.w)(function(fieldListComponent) {
                    return fieldListComponent.onFirstRenderComplete;
                }));
                (0, combineLatest.aj)([ this.isOpen$, overlayRef$, fieldListComponent$, fieldListRendered$ ]).pipe((0, 
                takeUntil.R)(this.pbiDropdownService.onDestroy$), (0, filter.h)(function(_a) {
                    var overlayRef = _a[1];
                    return _a[0] && !!(null == overlayRef ? void 0 : overlayRef.overlayRef.overlayElement) && !!_a[2];
                })).subscribe(function(_a) {
                    _a[2].focusSearchBox();
                });
            }
            return PbiDropdownFieldListStrategy.prototype.buttonKeydown = function(event) {
                var _this = this;
                this.isOpen$.pipe((0, take.q)(1)).subscribe(function(isOpen) {
                    isOpen || (0, keyUtils.Wl)(event.keyCode) && (_this.pbiDropdownService.toggleOpenState(), 
                    event.preventDefault());
                });
            }, PbiDropdownFieldListStrategy.\u0275fac = function(t) {
                return new (t || PbiDropdownFieldListStrategy)(core["\u0275\u0275inject"](pbi_dropdown_service.S));
            }, PbiDropdownFieldListStrategy.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: PbiDropdownFieldListStrategy,
                factory: PbiDropdownFieldListStrategy.\u0275fac
            }), PbiDropdownFieldListStrategy;
        }(), scheduled = __webpack_require__(26333), queue = __webpack_require__(31343), PbiDropdownFieldListMenuDirective = function() {
            function PbiDropdownFieldListMenuDirective(pbiDropdownService, strategy) {
                this.pbiDropdownService = pbiDropdownService, this.strategy = strategy;
            }
            return PbiDropdownFieldListMenuDirective.prototype.ngAfterViewInit = function() {
                var _this = this;
                (0, scheduled.x)([ {
                    strategy: this.strategy,
                    dropdownItems: this.dropdownItems
                } ], queue.N).subscribe(function(newValues) {
                    _this.pbiDropdownService.updateState(newValues);
                });
            }, PbiDropdownFieldListMenuDirective.\u0275fac = function(t) {
                return new (t || PbiDropdownFieldListMenuDirective)(core["\u0275\u0275directiveInject"](pbi_dropdown_service.S), core["\u0275\u0275directiveInject"](PbiDropdownFieldListStrategy));
            }, PbiDropdownFieldListMenuDirective.\u0275dir = core["\u0275\u0275defineDirective"]({
                type: PbiDropdownFieldListMenuDirective,
                selectors: [ [ "pbi-dropdown", "dropdown-type", "field-list" ] ],
                contentQueries: function(rf, ctx, dirIndex) {
                    var _t;
                    1 & rf && core["\u0275\u0275contentQuery"](dirIndex, pbi_field_list_component.l, 5), 
                    2 & rf && core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx.dropdownItems = _t);
                },
                features: [ core["\u0275\u0275ProvidersFeature"]([ PbiDropdownFieldListStrategy ]) ]
            }), PbiDropdownFieldListMenuDirective;
        }();
    }
} ]);