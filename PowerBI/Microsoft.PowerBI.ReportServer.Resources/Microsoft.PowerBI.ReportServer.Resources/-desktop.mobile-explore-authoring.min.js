"use strict";

(self.webpackChunkdesktop = self.webpackChunkdesktop || []).push([ [ "mobile-explore-authoring" ], {
    45221: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            h: function() {
                return FormattingObjectDefinitionsServiceInjectionToken;
            }
        });
        var FormattingObjectDefinitionsServiceInjectionToken = new (__webpack_require__(50423).InjectionToken)("FormattingObjectDefinitionsService");
    },
    32441: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            u: function() {
                return FormattingPaneLazyComponent;
            }
        });
        var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(50423), _LazyLoad_components_pbi_lazy_load_pbi_lazy_load_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(18460), _c0 = function(a0, a1, a2, a3, a4) {
            return {
                formattingSources: a0,
                indicatorEnabled: a1,
                mobileFormatting: a2,
                disabledCards: a3,
                disabledSlices: a4
            };
        }, FormattingPaneLazyComponent = function() {
            function FormattingPaneLazyComponent() {
                var _this = this;
                this.mobileFormatting = !1, this.propertyChanged = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, 
                this.outputArgs = {
                    propertyChanged: function(args) {
                        return _this.propertyChanged.emit(args);
                    }
                }, this.modulePath = "@powerbi/ExploreUIAuthoring/lazy-modules/pane-formatting/pane-formatting.module#PaneFormattingModule", 
                this.componentId = "FormattingPaneComponentId";
            }
            return FormattingPaneLazyComponent.\u0275fac = function(t) {
                return new (t || FormattingPaneLazyComponent);
            }, FormattingPaneLazyComponent.\u0275cmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275defineComponent"]({
                type: FormattingPaneLazyComponent,
                selectors: [ [ "formatting-pane-lazy" ] ],
                inputs: {
                    formattingSources: "formattingSources",
                    indicatorEnabled: "indicatorEnabled",
                    mobileFormatting: "mobileFormatting",
                    disabledCards: "disabledCards",
                    disabledSlices: "disabledSlices"
                },
                outputs: {
                    propertyChanged: "propertyChanged"
                },
                decls: 1,
                vars: 10,
                consts: [ [ 3, "inputArgs", "modulePath", "outputArgs", "componentId" ] ],
                template: function(rf, ctx) {
                    1 & rf && _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275element"](0, "pbi-lazy-load", 0), 
                    2 & rf && _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275property"]("inputArgs", _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275pureFunction5"](4, _c0, ctx.formattingSources, ctx.indicatorEnabled, ctx.mobileFormatting, ctx.disabledCards, ctx.disabledSlices))("modulePath", ctx.modulePath)("outputArgs", ctx.outputArgs)("componentId", ctx.componentId);
                },
                dependencies: [ _LazyLoad_components_pbi_lazy_load_pbi_lazy_load_component__WEBPACK_IMPORTED_MODULE_1__.R ],
                encapsulation: 2,
                changeDetection: 0
            }), FormattingPaneLazyComponent;
        }();
    },
    78633: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            a: function() {
                return GradientBarLazyComponent;
            }
        });
        var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(50423), _LazyLoad_components_pbi_lazy_load_pbi_lazy_load_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(18460), _c0 = function(a0) {
            return {
                colors: a0
            };
        }, GradientBarLazyComponent = function() {
            function GradientBarLazyComponent() {
                this.modulePath = "@powerbi/ExploreUIAuthoring/lazy-modules/pane-formatting/pane-formatting.module#PaneFormattingModule", 
                this.componentId = "GradientBarComponentId";
            }
            return GradientBarLazyComponent.\u0275fac = function(t) {
                return new (t || GradientBarLazyComponent);
            }, GradientBarLazyComponent.\u0275cmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275defineComponent"]({
                type: GradientBarLazyComponent,
                selectors: [ [ "gradient-bar-lazy" ] ],
                inputs: {
                    colors: "colors"
                },
                decls: 1,
                vars: 5,
                consts: [ [ 3, "inputArgs", "modulePath", "componentId" ] ],
                template: function(rf, ctx) {
                    1 & rf && _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275element"](0, "pbi-lazy-load", 0), 
                    2 & rf && _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275property"]("inputArgs", _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275pureFunction1"](3, _c0, ctx.colors))("modulePath", ctx.modulePath)("componentId", ctx.componentId);
                },
                dependencies: [ _LazyLoad_components_pbi_lazy_load_pbi_lazy_load_component__WEBPACK_IMPORTED_MODULE_1__.R ],
                encapsulation: 2,
                changeDetection: 0
            }), GradientBarLazyComponent;
        }();
    },
    71707: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            I: function() {
                return ToggleSwitchModernLazyComponent;
            }
        });
        var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(50423), _LazyLoad_components_pbi_lazy_load_pbi_lazy_load_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(18460), _c0 = function(a0, a1, a2, a3, a4) {
            return {
                toggle: a0,
                ariaLabelledby: a1,
                ariaDescribedby: a2,
                toggleLabel: a3,
                isDisabled: a4
            };
        }, ToggleSwitchModernLazyComponent = function() {
            function ToggleSwitchModernLazyComponent() {
                var _this = this;
                this.onToggleChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, 
                this.modulePath = "@powerbi/ExploreUIAuthoring/lazy-modules/pane-formatting/pane-formatting.module#PaneFormattingModule", 
                this.componentId = "ToggleSwitchModernComponentId", this.outputArgs = {
                    onToggleChange: function(args) {
                        return _this.onToggleChange.emit(args);
                    }
                };
            }
            return ToggleSwitchModernLazyComponent.\u0275fac = function(t) {
                return new (t || ToggleSwitchModernLazyComponent);
            }, ToggleSwitchModernLazyComponent.\u0275cmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275defineComponent"]({
                type: ToggleSwitchModernLazyComponent,
                selectors: [ [ "toggle-switch-modern-lazy" ] ],
                inputs: {
                    toggle: "toggle",
                    ariaLabelledby: "ariaLabelledby",
                    ariaDescribedby: "ariaDescribedby",
                    toggleLabel: "toggleLabel",
                    isDisabled: "isDisabled"
                },
                outputs: {
                    onToggleChange: "onToggleChange"
                },
                decls: 1,
                vars: 10,
                consts: [ [ 3, "inputArgs", "modulePath", "outputArgs", "componentId" ] ],
                template: function(rf, ctx) {
                    1 & rf && _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275element"](0, "pbi-lazy-load", 0), 
                    2 & rf && _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275property"]("inputArgs", _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275pureFunction5"](4, _c0, ctx.toggle, ctx.ariaLabelledby, ctx.ariaDescribedby, ctx.toggleLabel, ctx.isDisabled))("modulePath", ctx.modulePath)("outputArgs", ctx.outputArgs)("componentId", ctx.componentId);
                },
                dependencies: [ _LazyLoad_components_pbi_lazy_load_pbi_lazy_load_component__WEBPACK_IMPORTED_MODULE_1__.R ],
                encapsulation: 2,
                changeDetection: 0
            }), ToggleSwitchModernLazyComponent;
        }();
    },
    90094: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            l: function() {
                return WarningEagerComponent;
            }
        });
        var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(50423), _LazyLoad_components_pbi_lazy_load_pbi_lazy_load_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(18460), _c0 = function(a0) {
            return {
                warningMessage: a0
            };
        }, WarningEagerComponent = function() {
            function WarningEagerComponent() {
                this.modulePath = "@powerbi/ExploreUIAuthoring/lazy-modules/pane-formatting/pane-formatting.module#PaneFormattingModule", 
                this.componentId = "WarningComponentId";
            }
            return WarningEagerComponent.\u0275fac = function(t) {
                return new (t || WarningEagerComponent);
            }, WarningEagerComponent.\u0275cmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275defineComponent"]({
                type: WarningEagerComponent,
                selectors: [ [ "warning-eager" ] ],
                inputs: {
                    warningMessage: "warningMessage"
                },
                decls: 1,
                vars: 5,
                consts: [ [ 3, "inputArgs", "modulePath", "componentId" ] ],
                template: function(rf, ctx) {
                    1 & rf && _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275element"](0, "pbi-lazy-load", 0), 
                    2 & rf && _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275property"]("inputArgs", _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275pureFunction1"](3, _c0, ctx.warningMessage))("modulePath", ctx.modulePath)("componentId", ctx.componentId);
                },
                dependencies: [ _LazyLoad_components_pbi_lazy_load_pbi_lazy_load_component__WEBPACK_IMPORTED_MODULE_1__.R ],
                encapsulation: 2,
                changeDetection: 0
            }), WarningEagerComponent;
        }();
    },
    42101: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            p: function() {
                return PaneFormattingEagerModule;
            }
        });
        var _format_mode__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(9844), _angular_common__WEBPACK_IMPORTED_MODULE_6__ = (__webpack_require__(32441), 
        __webpack_require__(78633), __webpack_require__(71707), __webpack_require__(90094), 
        __webpack_require__(77476)), _angular_router__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(9398), _powerbi_LazyLoad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(57786), _powerbi_LazyLoad__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(82156), _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(50423), lazyLoadPaneFormatting = {
            loadChildren: function() {
                return Promise.all([ __webpack_require__.e(4), __webpack_require__.e("pane-formatting") ]).then(__webpack_require__.bind(__webpack_require__, 71980)).then(function(m) {
                    return m.PaneFormattingModule;
                });
            }
        };
        _powerbi_LazyLoad__WEBPACK_IMPORTED_MODULE_0__.E.addLazyLoadForLegacyMapping("@powerbi/ExploreUIAuthoring/lazy-modules/pane-formatting/pane-formatting.module#PaneFormattingModule", lazyLoadPaneFormatting.loadChildren);
        var LazyLoadRoutes = [ {
            path: "dummy-pane-formatting-lazy",
            loadChildren: lazyLoadPaneFormatting.loadChildren
        } ], PaneFormattingEagerModule = function() {
            function PaneFormattingEagerModule() {}
            return PaneFormattingEagerModule.\u0275fac = function(t) {
                return new (t || PaneFormattingEagerModule);
            }, PaneFormattingEagerModule.\u0275mod = _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275defineNgModule"]({
                type: PaneFormattingEagerModule
            }), PaneFormattingEagerModule.\u0275inj = _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275defineInjector"]({
                imports: [ _angular_common__WEBPACK_IMPORTED_MODULE_6__.CommonModule, _format_mode__WEBPACK_IMPORTED_MODULE_7__.j, _powerbi_LazyLoad__WEBPACK_IMPORTED_MODULE_8__.N, _angular_router__WEBPACK_IMPORTED_MODULE_9__.Bz.forChild(LazyLoadRoutes) ]
            }), PaneFormattingEagerModule;
        }();
    },
    21302: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            Ol: function() {
                return PropertyChangeIndicatorServiceInjectionToken;
            },
            mF: function() {
                return showPageFormatPane;
            },
            sn: function() {
                return showFormatPane;
            }
        });
        var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(50423), showFormatPane = {
            type: 3,
            name: "showFormatPane"
        }, showPageFormatPane = {
            type: 3,
            name: "showPageFormatPane"
        }, PropertyChangeIndicatorServiceInjectionToken = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.InjectionToken("PropertyChangeIndicatorService");
    },
    14029: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, {
            ExploreUIThumbnailModule: function() {
                return ExploreUIThumbnailModule;
            }
        });
        var tslib_es6 = __webpack_require__(81337), Common = __webpack_require__(35911), promiseFactory = __webpack_require__(14463), events = __webpack_require__(8590), visualContainerUtils = __webpack_require__(60661), sectionUtils = __webpack_require__(71216), visualHostService = __webpack_require__(47245), errorDetailsUtility = __webpack_require__(18503), JsCommon_events = __webpack_require__(91615), applyStyle = __webpack_require__(47343), localize_core = __webpack_require__(61036), Prototype = __webpack_require__(39681), Utility = __webpack_require__(38078), dataViewObjectDefinition1 = __webpack_require__(5265), sqExprStaticMembers = __webpack_require__(74082), Subject = __webpack_require__(30794), combineLatest = __webpack_require__(59017), map = __webpack_require__(14172), takeUntil = __webpack_require__(83317), core = __webpack_require__(50423), visual_host_authentication_service = __webpack_require__(1368), visual_plugin_service = __webpack_require__(29866), bookmark_service = __webpack_require__(17966), event_bridge_service = __webpack_require__(11494), exploration_navigation_service = __webpack_require__(39503), view_mode_state_service = __webpack_require__(77200), visual_host_artifact_service = __webpack_require__(86843), visual_host_telemetry_service_factory_service = __webpack_require__(63317), feature_switch_service = __webpack_require__(9380), geocoder_service = __webpack_require__(28505), azure_maps_endpoint_service = __webpack_require__(58991), localization_service = __webpack_require__(65181), module_loader_service = __webpack_require__(2330), theme_service = __webpack_require__(67660), visual_host_tooltip_service_factory_service = __webpack_require__(98136), visual_plugin_operations_service = __webpack_require__(66977), azure_map_token_cache_service = __webpack_require__(80277), ui_component_service = __webpack_require__(79281), geocoder_indexed_db_service = __webpack_require__(1599), common = __webpack_require__(77476), canvas_visual_error_overlay_component = __webpack_require__(98885), single_visual_host_component = __webpack_require__(46101), apply_style_directive = __webpack_require__(91399);
        function VisualContainerThumbnailComponent_single_visual_host_3_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "single-visual-host", 6), 2 & rf) {
                var ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("visual", ctx_r0.visual)("visualViewport", ctx_r0.visualViewport)("themeCollection", ctx_r0.themeCollection)("config", ctx_r0.singleVisualHostConfig);
            }
        }
        function VisualContainerThumbnailComponent_analysis_visual_host_lazy_4_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "analysis-visual-host-lazy", 7), 2 & rf) {
                var ctx_r1 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("visualDefinition", ctx_r1.visualDefinition)("visualContainer", ctx_r1.visual);
            }
        }
        function VisualContainerThumbnailComponent_qna_visual_host_lazy_5_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "qna-visual-host-lazy", 7), 2 & rf) {
                var ctx_r2 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("visualDefinition", ctx_r2.visualDefinition)("visualContainer", ctx_r2.visual);
            }
        }
        function VisualContainerThumbnailComponent_canvas_visual_error_overlay_6_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "canvas-visual-error-overlay", 8), 
            2 & rf) {
                var ctx_r3 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("errorInfo", ctx_r3.errorInfo)("viewMode", ctx_r3.viewMode)("viewport", ctx_r3.viewport);
            }
        }
        var VisualContainerThumbnailComponent = function() {
            function VisualContainerThumbnailComponent(authenticationService, bookmarkService, eventBridge, explorationNavigation, featureSwitchService, geocoder, geolocationService, localizationService, moduleLoader, promiseFactory, themeService, viewModeState, visualHostArtifactService, visualHostTooltipServiceFactory, visualHostTelemetryServiceFactory, visualPlugin, visualPluginOps, uiComponent, azureMapTokenCache, azureMapsEndpoint, geocoderIndexedDB) {
                var _a, _b, _this = this;
                this.authenticationService = authenticationService, this.bookmarkService = bookmarkService, 
                this.eventBridge = eventBridge, this.explorationNavigation = explorationNavigation, 
                this.featureSwitchService = featureSwitchService, this.geocoder = geocoder, this.geolocationService = geolocationService, 
                this.localizationService = localizationService, this.moduleLoader = moduleLoader, 
                this.promiseFactory = promiseFactory, this.themeService = themeService, this.viewModeState = viewModeState, 
                this.visualHostArtifactService = visualHostArtifactService, this.visualHostTooltipServiceFactory = visualHostTooltipServiceFactory, 
                this.visualHostTelemetryServiceFactory = visualHostTelemetryServiceFactory, this.visualPlugin = visualPlugin, 
                this.visualPluginOps = visualPluginOps, this.uiComponent = uiComponent, this.azureMapTokenCache = azureMapTokenCache, 
                this.azureMapsEndpoint = azureMapsEndpoint, this.geocoderIndexedDB = geocoderIndexedDB, 
                this.destroy$ = new Subject.xQ;
                var sections$ = (_a = this.explorationNavigation).sections$, getSectionsMetadata$ = (0, 
                combineLatest.aj)([ sections$, _a.currentSection$ ]).pipe((0, map.U)(function(_a) {
                    var currentSection = _a[1];
                    return _a[0].map(function(section) {
                        return {
                            name: section.name,
                            displayName: section.displayName,
                            isActive: section.name === (null == currentSection ? void 0 : currentSection.name),
                            isHidden: (0, sectionUtils.aV)(section),
                            isTooltip: (0, sectionUtils.H$)(section)
                        };
                    });
                }), (0, takeUntil.R)(this.destroy$)), bookmarks$ = (_b = this.bookmarkService).bookmarks$, getBookmarksMetadata$ = (0, 
                combineLatest.aj)([ bookmarks$, _b.activeBookmark$ ]).pipe((0, map.U)(function(_a) {
                    var activeBookmark = _a[1];
                    return _a[0].map(function(bookmark) {
                        var _a;
                        return {
                            name: bookmark.name,
                            displayName: bookmark.displayName,
                            isActive: bookmark.name === (null == activeBookmark ? void 0 : activeBookmark.name),
                            parentName: null === (_a = bookmark.parentGroup) || void 0 === _a ? void 0 : _a.name
                        };
                    });
                }), (0, takeUntil.R)(this.destroy$));
                this.singleVisualHostConfig = {
                    notifyStart: _.noop,
                    notifyEnd: _.noop,
                    clearQueryErrors: function() {
                        return _this.clearErrorState();
                    },
                    handleQueryErrors: function(clientError) {
                        return _this.setErrorState(clientError.getDetails(_this.localizationService), clientError.code, clientError.source);
                    },
                    handleQueryWarnings: _.noop,
                    queryVisualHostServices: {
                        getFilters: function(filterGenerator, schema) {
                            var navigationService = _this.explorationNavigation;
                            return filterGenerator.calculateVisualContainerFilter(navigationService.getCurrentExploration(), navigationService.getCurrentSection(), _this.visual, schema);
                        },
                        getDataSourceVariables: function() {
                            var currentExploration = _this.explorationNavigation.getCurrentExploration();
                            return currentExploration && currentExploration.dataSourceVariables;
                        }
                    },
                    visualHostServices: (0, Prototype.ED)((0, visualHostService.q)({
                        geocoder: this.geocoder,
                        geolocation: this.geolocationService,
                        localizationService: this.localizationService,
                        authenticationService: this.authenticationService,
                        moduleLoader: this.moduleLoader,
                        promiseFactory: this.promiseFactory,
                        visualHostTooltipService: this.visualHostTooltipServiceFactory.create(),
                        getAzureMapToken: function() {
                            return _this.azureMapTokenCache.getAzureMapToken();
                        },
                        azureMapsEndpoint: this.azureMapsEndpoint,
                        geocoderIndexedDB: this.geocoderIndexedDB
                    }), function(h) {
                        h.getLocalizedString = function(id) {
                            for (var _a, args = [], _i = 1; _i < arguments.length; _i++) args[_i - 1] = arguments[_i];
                            return (_a = _this.localizationService).format.apply(_a, (0, tslib_es6.__spreadArray)([ id ], args || [], !1));
                        }, h.getViewMode = function() {
                            return _this.viewModeState.getMode();
                        }, h.locale = function() {
                            return (0, localize_core.uD)();
                        }, h.promiseFactory = function() {
                            return _this.promiseFactory;
                        }, h.getSectionsMetadata$ = function() {
                            return getSectionsMetadata$;
                        }, h.getBookmarksMetadata$ = function() {
                            return getBookmarksMetadata$;
                        }, h.getUIComponentFactory = function() {
                            return _this.uiComponent.getUIComponentFactory(null);
                        }, h.telemetry = function() {
                            return _this.telemetryService;
                        }, h.artifactService = function() {
                            return _this.visualHostArtifactService;
                        };
                    }),
                    interactivityOptions: {
                        overflow: "hidden"
                    },
                    additionalObjectUpdates: void 0,
                    disableQueryCacheUpdates: !1,
                    noLoadMore: !0
                };
            }
            return VisualContainerThumbnailComponent.prototype.ngOnInit = function() {
                var _this = this;
                this.evaluateObjectDefinitions(), this.fetchThemeCollection(), this.setVisualViewport(), 
                this.applyStyles(), this.visualDefinition = this.createVisualDefinition(), this.instanceId = Utility.b$.generateGuid(), 
                this.telemetryService = this.visualHostTelemetryServiceFactory.create(this.visualDefinition.type, this.visual.name, this.instanceId), 
                this.subscriptionManager = this.eventBridge.createChannelSubscriptionManager().subscribe(JsCommon_events.kx, function() {
                    return _this.fetchThemeCollection();
                }).subscribe(events.jCS, function(_e, args) {
                    args && _this.visual && args.affectContainer(_this.visual) && _this.evaluateObjectDefinitions();
                });
            }, VisualContainerThumbnailComponent.prototype.ngOnDestroy = function() {
                this.subscriptionManager.unsubscribeAll(), this.destroy$.next(), this.destroy$.complete();
            }, VisualContainerThumbnailComponent.prototype.isAnalysisVisual = function() {
                return this.visualPluginOps.isAnalysisVisual(this.visual.config.singleVisual.visualType);
            }, VisualContainerThumbnailComponent.prototype.isQnaVisual = function() {
                return this.visualPluginOps.isQnaVisual(this.visual.config.singleVisual.visualType);
            }, VisualContainerThumbnailComponent.prototype.clearErrorState = function() {
                this.errorInfo = null;
            }, VisualContainerThumbnailComponent.prototype.setErrorState = function(errorDetails, code, source) {
                this.errorInfo = {
                    code,
                    details: errorDetails,
                    fixableError: 0,
                    hideSeeDetails: !0,
                    overlayType: (0, errorDetailsUtility.fe)(code),
                    source
                };
            }, VisualContainerThumbnailComponent.prototype.evaluateObjectDefinitions = function() {
                var exploration = this.explorationNavigation.getCurrentExploration(), dataViewObjectsResult = (0, 
                visualContainerUtils.VH)(exploration && exploration.themeCollection || {}, this.themeService, this.visual, this.featureSwitchService.featureSwitches);
                this.objects = dataViewObjectsResult.dataViewObjects;
            }, VisualContainerThumbnailComponent.prototype.fetchThemeCollection = function() {
                var exploration = this.explorationNavigation.getCurrentExploration();
                this.themeCollection = exploration && exploration.themeCollection;
            }, VisualContainerThumbnailComponent.prototype.setVisualViewport = function() {
                this.visualViewport = {
                    width: 2 * this.viewport.width,
                    height: 2 * this.viewport.height,
                    scale: .5
                };
            }, VisualContainerThumbnailComponent.prototype.applyStyles = function() {
                this.style = new applyStyle.Y, this.visualStyle = new applyStyle.Y, this.style.viewport(this.viewport);
                var backgroundColor = (0, visualContainerUtils.Mo)(this.objects && this.objects.background), visualViewportStyleAttributes = (0, 
                visualContainerUtils._L)(this.visualViewport, .5);
                this.visualStyle.addAttributes(visualViewportStyleAttributes);
                var visualStyleAttributes = (0, visualContainerUtils.O$)(backgroundColor);
                this.visualStyle.addAttributes(visualStyleAttributes), this.visualStyle.apply();
            }, VisualContainerThumbnailComponent.prototype.createVisualDefinition = function() {
                var _this = this, visualType = this.visual.config.singleVisual.visualType, stylePresetNameExpr = (0, 
                dataViewObjectDefinition1.NA)((0, visualContainerUtils.Qg)(this.visual), {
                    objectName: "stylePreset",
                    propertyName: "name"
                }, void 0);
                return {
                    interactivityOptions: this.singleVisualHostConfig.interactivityOptions,
                    type: visualType,
                    visualName: this.visual.name + "-thumbnail",
                    allowInvalidDataView: !0,
                    themeCollection: this.themeCollection,
                    viewport: this.visualViewport,
                    dataTransforms: {
                        objects: (0, visualContainerUtils.GQ)(this.visual)
                    },
                    hostServices: this.singleVisualHostConfig.visualHostServices,
                    visualAdapterHostServices: {
                        startProgressBar: function() {
                            return _this.singleVisualHostConfig.notifyStart();
                        },
                        stopProgressBar: function() {
                            return _this.singleVisualHostConfig.notifyEnd();
                        },
                        getNextDataSegment: function() {
                            return _this.promiseFactory.reject();
                        }
                    },
                    stylePresetName: stylePresetNameExpr && (0, sqExprStaticMembers.VC)(stylePresetNameExpr) && stylePresetNameExpr.value,
                    additionalObjectUpdates: this.singleVisualHostConfig.additionalObjectUpdates,
                    visualPlugin: this.visualPlugin
                };
            }, VisualContainerThumbnailComponent.\u0275fac = function(t) {
                return new (t || VisualContainerThumbnailComponent)(core["\u0275\u0275directiveInject"](visual_host_authentication_service.A), core["\u0275\u0275directiveInject"](bookmark_service.F), core["\u0275\u0275directiveInject"](event_bridge_service.J), core["\u0275\u0275directiveInject"](exploration_navigation_service.z), core["\u0275\u0275directiveInject"](feature_switch_service.vZ), core["\u0275\u0275directiveInject"](geocoder_service.i), core["\u0275\u0275directiveInject"](Common._1), core["\u0275\u0275directiveInject"](localization_service.o), core["\u0275\u0275directiveInject"](module_loader_service.m), core["\u0275\u0275directiveInject"](promiseFactory.t), core["\u0275\u0275directiveInject"](theme_service.f), core["\u0275\u0275directiveInject"](view_mode_state_service.kc), core["\u0275\u0275directiveInject"](visual_host_artifact_service.k), core["\u0275\u0275directiveInject"](visual_host_tooltip_service_factory_service.q), core["\u0275\u0275directiveInject"](visual_host_telemetry_service_factory_service.S), core["\u0275\u0275directiveInject"](visual_plugin_service.D), core["\u0275\u0275directiveInject"](visual_plugin_operations_service.f), core["\u0275\u0275directiveInject"](ui_component_service.U), core["\u0275\u0275directiveInject"](azure_map_token_cache_service.o), core["\u0275\u0275directiveInject"](azure_maps_endpoint_service.A), core["\u0275\u0275directiveInject"](geocoder_indexed_db_service.W));
            }, VisualContainerThumbnailComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: VisualContainerThumbnailComponent,
                selectors: [ [ "visual-container-thumbnail" ] ],
                inputs: {
                    viewport: "viewport",
                    visual: "visual"
                },
                decls: 7,
                vars: 6,
                consts: [ [ 3, "apply-style" ], [ 1, "thumbnailContainer", "disable-visual-interactivity", "themableBackgroundColorSolid", 3, "apply-style" ], [ 1, "visualContainerScreen" ], [ 3, "visual", "visualViewport", "themeCollection", "config", 4, "ngIf" ], [ 3, "visualDefinition", "visualContainer", 4, "ngIf" ], [ 3, "errorInfo", "viewMode", "viewport", 4, "ngIf" ], [ 3, "visual", "visualViewport", "themeCollection", "config" ], [ 3, "visualDefinition", "visualContainer" ], [ 3, "errorInfo", "viewMode", "viewport" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementStart"](0, "div", 0)(1, "div", 1), core["\u0275\u0275element"](2, "div", 2), 
                    core["\u0275\u0275template"](3, VisualContainerThumbnailComponent_single_visual_host_3_Template, 1, 4, "single-visual-host", 3), 
                    core["\u0275\u0275template"](4, VisualContainerThumbnailComponent_analysis_visual_host_lazy_4_Template, 1, 2, "analysis-visual-host-lazy", 4), 
                    core["\u0275\u0275template"](5, VisualContainerThumbnailComponent_qna_visual_host_lazy_5_Template, 1, 2, "qna-visual-host-lazy", 4), 
                    core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](6, VisualContainerThumbnailComponent_canvas_visual_error_overlay_6_Template, 1, 3, "canvas-visual-error-overlay", 5), 
                    core["\u0275\u0275elementEnd"]()), 2 & rf && (core["\u0275\u0275property"]("apply-style", ctx.style), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("apply-style", ctx.visualStyle), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", !ctx.isAnalysisVisual()), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx.isAnalysisVisual() && !ctx.errorInfo), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx.isQnaVisual() && !ctx.errorInfo), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx.errorInfo));
                },
                dependencies: [ common.NgIf, canvas_visual_error_overlay_component.f, single_visual_host_component.v, apply_style_directive.s ],
                styles: [ ".draggable-root-dragging[_nghost-%COMP%]{opacity:0}.ui-draggable-dragging[_nghost-%COMP%]{border:2px solid var(--theme-primary-color, #F2C811)}[_nghost-%COMP%]   .thumbnailContainer[_ngcontent-%COMP%]{position:absolute;top:0;left:0;right:0;bottom:0;transform-origin:0 0;overflow:hidden}" ]
            }), VisualContainerThumbnailComponent;
        }(), loadExploreUIThumbnailModule = {
            loadChildren: function() {
                return Promise.resolve().then(__webpack_require__.bind(__webpack_require__, 14029)).then(function(m) {
                    return m.ExploreUIThumbnailModule;
                });
            }
        };
        __webpack_require__(57786).E.addLazyLoadForLegacyMapping("@powerbi/ExploreUIThumbnail/module#ExploreUIThumbnailModule", loadExploreUIThumbnailModule.loadChildren);
        var LazyLoadRoutes = [ {
            path: "dummy-explore-ui-thumbnail",
            loadChildren: loadExploreUIThumbnailModule.loadChildren
        } ], router = __webpack_require__(9398), ExploreUI_module = __webpack_require__(87121), lazy_load_module = __webpack_require__(82156), localization_module = __webpack_require__(79061), UILibrary_module = __webpack_require__(94785), manifests = [ {
            type: VisualContainerThumbnailComponent,
            componentId: "VisualContainerThumbnailComponentId"
        } ], ExploreUIThumbnailModule = function() {
            function ExploreUIThumbnailModule() {}
            return ExploreUIThumbnailModule.\u0275fac = function(t) {
                return new (t || ExploreUIThumbnailModule);
            }, ExploreUIThumbnailModule.\u0275mod = core["\u0275\u0275defineNgModule"]({
                type: ExploreUIThumbnailModule
            }), ExploreUIThumbnailModule.\u0275inj = core["\u0275\u0275defineInjector"]({
                imports: [ common.CommonModule, ExploreUI_module.J, lazy_load_module.N.withManifests(manifests), localization_module.v, router.Bz.forChild(LazyLoadRoutes), UILibrary_module.g ]
            }), ExploreUIThumbnailModule;
        }();
    },
    55525: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            P: function() {
                return MobileVisualFormattingSettingsInjectionToken;
            }
        });
        var MobileVisualFormattingSettingsInjectionToken = new (__webpack_require__(50423).InjectionToken)("mobileVisualFormattingSettingsService");
    },
    43104: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, {
            MobileExploreAuthoringModule: function() {
                return MobileExploreAuthoringModule;
            }
        });
        var tslib_es6 = __webpack_require__(81337), telemetryHelpers = __webpack_require__(41114), map = (telemetryHelpers.cx["MBI.MobileAutoGenerateLayout.LayoutGenerated"] = (0, 
        telemetryHelpers.b1)("MBI.MobileAutoGenerateLayout.LayoutGenerated"), __webpack_require__(14172)), events = __webpack_require__(8590), Telemetry = __webpack_require__(21617), core = __webpack_require__(50423), dialog_service = __webpack_require__(58938), event_bridge_service = __webpack_require__(11494), undo_redo_service = __webpack_require__(84281), exploration_navigation_ex_service = __webpack_require__(59142), layout_authoring_service = __webpack_require__(63387), lazy_scoped_provider = __webpack_require__(28894), localization_service = __webpack_require__(65181), MobileAutoLayoutGeneratorService = function() {
            function MobileAutoLayoutGeneratorService(modernDialogService, eventBridge, explorationNavigationEXService, layoutAuthoring, lazyScoped, localizationService, telemetryService, undoRedo, certifiedEventsService) {
                this.modernDialogService = modernDialogService, this.eventBridge = eventBridge, 
                this.explorationNavigationEXService = explorationNavigationEXService, this.layoutAuthoring = layoutAuthoring, 
                this.lazyScoped = lazyScoped, this.localizationService = localizationService, this.telemetryService = telemetryService, 
                this.undoRedo = undoRedo, this.certifiedEventsService = certifiedEventsService;
            }
            return MobileAutoLayoutGeneratorService.prototype.generateAutoMobileLayout = function(caller) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var exploration, currentSection, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        return exploration = this.explorationNavigationEXService.getCurrentExploration(), 
                        currentSection = this.explorationNavigationEXService.getCurrentSection(), this.isMobileLayoutExists() ? [ 2, this.modernDialogService.promptHostSimpleDialog("CreateAutoLayoutConfirmation", {
                            title: this.localizationService.get("MobileAuthoring_AutoCreateAlert_Headline"),
                            message: this.localizationService.get("MobileAuthoring_AutoCreateAlert_Message"),
                            okButtonText: this.localizationService.get("Replace"),
                            cancelButtonText: this.localizationService.get("Cancel_ButtonText")
                        }, {
                            panelClass: [ "legacy-dialog" ]
                        }).then(function(result) {
                            1 === result && _this.undoRedo.register("removeAndCreateAutoMobileLayout", function() {
                                _this.layoutAuthoring.removeLayoutFromSection(currentSection, 1, exploration, !0), 
                                _this.createAndApplyLayout(caller, !0);
                            });
                        }) ] : (this.undoRedo.register("removeAndCreateAutoMobileLayout", function() {
                            _this.createAndApplyLayout(caller, !1);
                        }), [ 2 ]);
                    });
                });
            }, MobileAutoLayoutGeneratorService.prototype.createAndApplyLayout = function(caller, hadPreviousLayout) {
                var _a;
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var exploration, currentSection, viewModel, mobileAutoLayoutService, startTime, candidates, _loop_1, this_1, _i, candidates_1;
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return exploration = this.explorationNavigationEXService.getCurrentExploration(), 
                            currentSection = this.explorationNavigationEXService.getCurrentSection(), viewModel = this.explorationNavigationEXService.getCurrentExploreCanvas(), 
                            [ 4, this.lazyScoped.get("mobileAutoLayoutService") ];

                          case 1:
                            for (mobileAutoLayoutService = _b.sent(), startTime = Date.now(), candidates = mobileAutoLayoutService.createAutoMobileLayout(currentSection, {
                                useStylableVisualContainerHeader: null === (_a = exploration.settings) || void 0 === _a ? void 0 : _a.useStylableVisualContainerHeader
                            }), _loop_1 = function(candidate) {
                                var visualContainer = _.find(currentSection.visualContainers, function(visualContainer) {
                                    return visualContainer.name === candidate.name;
                                });
                                candidate.layouts[1] && this_1.layoutAuthoring.addLayoutToVisualContainer(viewModel, visualContainer, candidate.layouts[1].position, !0);
                            }, this_1 = this, _i = 0, candidates_1 = candidates; _i < candidates_1.length; _i++) _loop_1(candidates_1[_i]);
                            return this.eventBridge.publishToChannel(events.wAN), this.certifiedEventsService.logTimedStandardizedFeatureEvent({
                                correlationId: this.telemetryService.root.id,
                                activityName: "MBI.MobileAutoGenerateLayout.LayoutGenerated",
                                activityAttributes: {
                                    caller,
                                    hadPreviousLayout,
                                    sectionId: currentSection.objectId
                                },
                                resultCode: null,
                                featureName: "".concat("Mobile report authoring", ", ").concat("Mobile report layout was auto-created"),
                                activityStatus: "Succeeded",
                                operationStartTime: startTime,
                                operationEndTime: Date.now()
                            }), [ 2 ];
                        }
                    });
                });
            }, Object.defineProperty(MobileAutoLayoutGeneratorService.prototype, "autoLayoutActionDisabled$", {
                get: function() {
                    return this.explorationNavigationEXService.currentSection$.pipe((0, map.U)(function(section) {
                        var _a;
                        return 0 === (null === (_a = section.visualContainers) || void 0 === _a ? void 0 : _a.length);
                    }));
                },
                enumerable: !1,
                configurable: !0
            }), MobileAutoLayoutGeneratorService.prototype.isMobileLayoutExists = function() {
                return 0 !== this.layoutAuthoring.visualsInLayout(this.explorationNavigationEXService.getCurrentSection(), 1).length;
            }, MobileAutoLayoutGeneratorService.\u0275fac = function(t) {
                return new (t || MobileAutoLayoutGeneratorService)(core["\u0275\u0275inject"](dialog_service.x), core["\u0275\u0275inject"](event_bridge_service.J), core["\u0275\u0275inject"](exploration_navigation_ex_service.I), core["\u0275\u0275inject"](layout_authoring_service.U), core["\u0275\u0275inject"](lazy_scoped_provider.H), core["\u0275\u0275inject"](localization_service.o), core["\u0275\u0275inject"](Telemetry.y0), core["\u0275\u0275inject"](undo_redo_service.z), core["\u0275\u0275inject"](Telemetry.ly));
            }, MobileAutoLayoutGeneratorService.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: MobileAutoLayoutGeneratorService,
                factory: MobileAutoLayoutGeneratorService.\u0275fac
            }), MobileAutoLayoutGeneratorService;
        }(), localize_directive = __webpack_require__(59968), common = __webpack_require__(77476), localize_pipe = __webpack_require__(85102), MobileCanvasEmptyStateComponent = function() {
            function MobileCanvasEmptyStateComponent(layoutGenerator) {
                this.layoutGenerator = layoutGenerator;
            }
            return MobileCanvasEmptyStateComponent.prototype.generateAutoLayout = function() {
                this.layoutGenerator.generateAutoMobileLayout("mobileCanvasEmptyState");
            }, Object.defineProperty(MobileCanvasEmptyStateComponent.prototype, "autoLayoutActionDisabled$", {
                get: function() {
                    return this.layoutGenerator.autoLayoutActionDisabled$;
                },
                enumerable: !1,
                configurable: !0
            }), MobileCanvasEmptyStateComponent.\u0275fac = function(t) {
                return new (t || MobileCanvasEmptyStateComponent)(core["\u0275\u0275directiveInject"](MobileAutoLayoutGeneratorService));
            }, MobileCanvasEmptyStateComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: MobileCanvasEmptyStateComponent,
                selectors: [ [ "mobile-canvas-empty-state" ] ],
                features: [ core["\u0275\u0275ProvidersFeature"]([ MobileAutoLayoutGeneratorService ]) ],
                decls: 9,
                vars: 12,
                consts: [ [ 1, "mobileEmptyState" ], [ 1, "mobileEmptyStateSVG" ], [ "localize", "CreateMobileAuthoring_Button", 1, "heading" ], [ "localize", "MobileAuthoring_EmptyState_Content", 1, "subHeading" ], [ "localize", "MobileAuthoring_CreateAutoLayout", 1, "pbi-fluent-button", "primary", "primaryBtn", 3, "disabled", "click" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementStart"](0, "div", 0), core["\u0275\u0275element"](1, "div", 1)(2, "h1", 2), 
                    core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275element"](4, "h2", 3), 
                    core["\u0275\u0275pipe"](5, "localize"), core["\u0275\u0275elementStart"](6, "button", 4), 
                    core["\u0275\u0275listener"]("click", function() {
                        return ctx.generateAutoLayout();
                    }), core["\u0275\u0275pipe"](7, "localize"), core["\u0275\u0275pipe"](8, "async"), 
                    core["\u0275\u0275elementEnd"]()()), 2 & rf && (core["\u0275\u0275advance"](2), 
                    core["\u0275\u0275attribute"]("aria-label", core["\u0275\u0275pipeBind1"](3, 4, "CreateMobileAuthoring_Button")), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275attribute"]("aria-label", core["\u0275\u0275pipeBind1"](5, 6, "MobileAuthoring_EmptyState_Content")), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("disabled", core["\u0275\u0275pipeBind1"](8, 10, ctx.autoLayoutActionDisabled$)), 
                    core["\u0275\u0275attribute"]("aria-label", core["\u0275\u0275pipeBind1"](7, 8, "MobileAuthoring_CreateAutoLayout")));
                },
                dependencies: [ localize_directive.X, common.AsyncPipe, localize_pipe.F ],
                styles: [ '.heading[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--xlg-font-size, 20px);font-weight:var(--font-weight-semi-bold, 600);-webkit-user-select:none;-ms-user-select:none;user-select:none;cursor:default;color:#242424}.subHeading[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-regular, 400);margin-top:8px;margin-bottom:24px;-webkit-user-select:none;-ms-user-select:none;user-select:none;cursor:default;color:#323130;padding:0 10px}.mobileEmptyState[_ngcontent-%COMP%]{text-align:center;align-items:center;display:flex;flex-direction:column;position:absolute;z-index:1000;top:0;left:-10px;width:344px;height:100%;background:#FFF}.mobileEmptyState[_ngcontent-%COMP%]   .mobileEmptyStateSVG[_ngcontent-%COMP%]{background-image:url(/minerva/images/mobileEmptyState.svg);background-repeat:no-repeat;background-position:center;width:293px;height:251px;padding-top:55px}.mobileEmptyState[_ngcontent-%COMP%]   .primaryBtn[_ngcontent-%COMP%]:disabled{opacity:.2;color:var(--colorButtonPrimaryForeground);background-color:var(--colorButtonPrimaryBackground);border-color:var(--colorButtonPrimaryBorder)}' ]
            }), MobileCanvasEmptyStateComponent;
        }(), keycodes = __webpack_require__(93247), debug = __webpack_require__(62458), visualContainerUtils = __webpack_require__(60661), pbi_menu_contracts = __webpack_require__(64560), Subject = __webpack_require__(30794), BehaviorSubject = __webpack_require__(35510), filter = __webpack_require__(59973), takeUntil = __webpack_require__(83317), PbiMenuSingleSelectionModel = function() {
            function PbiMenuSingleSelectionModel(items, menu) {
                var _this = this;
                this.menu = menu, this.onDestroy$ = new Subject.xQ, this.items = new Set(items);
                var selectedItem = items.find(function(item) {
                    return item.checked;
                });
                this.selected$ = new BehaviorSubject.X(selectedItem), this.menu && this.menu.pbiMenuButtonClick.pipe((0, 
                filter.h)(function(item) {
                    return _this.items.has(item);
                }), (0, takeUntil.R)(this.onDestroy$)).subscribe(function(item) {
                    return _this.select(item);
                });
            }
            return PbiMenuSingleSelectionModel.prototype.destroy = function() {
                this.onDestroy$.next(), this.onDestroy$.unsubscribe();
            }, PbiMenuSingleSelectionModel.prototype.select = function(item) {
                this.selected$.value && (this.selected$.value.checked = !1), item.checked = !0, 
                this.selected$.next(item);
            }, PbiMenuSingleSelectionModel;
        }(), pbi_menu_directive = __webpack_require__(80357), pbi_pane_component = __webpack_require__(21023), exploration_navigation_service = __webpack_require__(39503), form_factor_provider_service = __webpack_require__(17328), panes_visibility_service = __webpack_require__(21024), pbi_menu_service = __webpack_require__(5467), feature_switch_service = __webpack_require__(9380), visual_plugin_operations_service = __webpack_require__(66977), localize_tooltip_directive = __webpack_require__(50057), pbi_feature_switch_directive = __webpack_require__(50264), keyboard_shortcuts_directive = __webpack_require__(35756), pbi_scrollbar_directive = __webpack_require__(80649), pbi_tooltip_directive = __webpack_require__(36858), tri_svg_icon_component = __webpack_require__(74913), visualContainerUtilsHelper = __webpack_require__(3579), applyStyle = __webpack_require__(47343), from = __webpack_require__(82762), conceptual_schema_proxy_service = __webpack_require__(26898), data_sources_service = __webpack_require__(83008), exploration_display_name_service = __webpack_require__(13702), visual_plugin_service = __webpack_require__(29866), apply_style_directive = __webpack_require__(91399), pbi_lazy_load_component = __webpack_require__(18460), drag_directive = __webpack_require__(53267), _c0 = function(a0) {
            return {
                hiddenVisual: a0
            };
        }, _c1 = function() {
            return {
                centerOffset: !0
            };
        }, _c2 = function(a0, a1) {
            return {
                visual: a0,
                viewport: a1
            };
        }, MobileVisualContainerThumbnailWrapperComponent = function() {
            function MobileVisualContainerThumbnailWrapperComponent(localizationService, conceptualSchemaProxy, dataSources, displayNameService, visualPlugin) {
                this.localizationService = localizationService, this.conceptualSchemaProxy = conceptualSchemaProxy, 
                this.dataSources = dataSources, this.displayNameService = displayNameService, this.visualPlugin = visualPlugin, 
                this.style = new applyStyle.Y, this.exploreUIThumbnailModulePath = "@powerbi/ExploreUIThumbnail/module#ExploreUIThumbnailModule";
            }
            return MobileVisualContainerThumbnailWrapperComponent.prototype.ngOnInit = function() {
                this.applyVisualStyle(), this.generateTitle();
            }, MobileVisualContainerThumbnailWrapperComponent.prototype.isVisualHidden = function() {
                return (0, visualContainerUtils.Pu)(this.visual);
            }, MobileVisualContainerThumbnailWrapperComponent.prototype.getDragContext = function() {
                var _this = this;
                return function() {
                    return {
                        source: _this.visual
                    };
                };
            }, MobileVisualContainerThumbnailWrapperComponent.prototype.applyVisualStyle = function() {
                this.noBorderViewport = {
                    height: this.viewport.height,
                    width: this.viewport.width - 2
                }, this.style.viewport(this.viewport);
            }, MobileVisualContainerThumbnailWrapperComponent.prototype.generateTitle = function() {
                var _this = this, dataSources = this.dataSources.get();
                this.visualTitle$ = (0, from.D)(this.conceptualSchemaProxy.get(dataSources)).pipe((0, 
                map.U)(function(schema) {
                    var _a, config = (0, visualContainerUtils.PQ)(_this.visual), capabilities = _this.visualPlugin.capabilities((0, 
                    visualContainerUtilsHelper.s)(_this.visual));
                    return null === (_a = _this.displayNameService.getVisualTitle(config, schema, capabilities, void 0, void 0, !0)) || void 0 === _a ? void 0 : _a.text;
                }));
            }, MobileVisualContainerThumbnailWrapperComponent.\u0275fac = function(t) {
                return new (t || MobileVisualContainerThumbnailWrapperComponent)(core["\u0275\u0275directiveInject"](localization_service.o), core["\u0275\u0275directiveInject"](conceptual_schema_proxy_service.i), core["\u0275\u0275directiveInject"](data_sources_service.D), core["\u0275\u0275directiveInject"](exploration_display_name_service.O), core["\u0275\u0275directiveInject"](visual_plugin_service.D));
            }, MobileVisualContainerThumbnailWrapperComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: MobileVisualContainerThumbnailWrapperComponent,
                selectors: [ [ "mobile-visual-container-thumbnail-wrapper" ] ],
                inputs: {
                    viewport: "viewport",
                    visual: "visual"
                },
                decls: 8,
                vars: 19,
                consts: [ [ 3, "apply-style", "ngClass" ], [ 1, "thumbnailHeader" ], [ 1, "trimmedTextWithEllipsis" ], [ 1, "glyphicon", "visualVisibilityIcon", 3, "ngClass" ], [ "tabindex", "0", "focusElement", "", 1, "thumbnailContainerWrapper", 3, "drag", "dragConfig", "getDragContext" ], [ 3, "modulePath", "componentId", "inputArgs" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementStart"](0, "div", 0)(1, "div", 1)(2, "div", 2), 
                    core["\u0275\u0275text"](3), core["\u0275\u0275pipe"](4, "async"), core["\u0275\u0275elementEnd"](), 
                    core["\u0275\u0275element"](5, "div", 3), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](6, "div", 4), 
                    core["\u0275\u0275element"](7, "pbi-lazy-load", 5), core["\u0275\u0275elementEnd"]()()), 
                    2 & rf && (core["\u0275\u0275property"]("apply-style", ctx.style)("ngClass", core["\u0275\u0275pureFunction1"](13, _c0, ctx.isVisualHidden())), 
                    core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](4, 11, ctx.visualTitle$)), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngClass", ctx.isVisualHidden() ? "pbi-glyph-hide3" : "pbi-glyph-view"), 
                    core["\u0275\u0275attribute"]("title", ctx.isVisualHidden() ? ctx.localizationService.get("ExplorationCanvasItemsPane_Hidden_Visual") : ctx.localizationService.get("ExplorationCanvasItemsPane_Shown_Visual")), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("drag", "visual-container-thumbnail")("dragConfig", core["\u0275\u0275pureFunction0"](15, _c1))("getDragContext", ctx.getDragContext()), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("modulePath", ctx.exploreUIThumbnailModulePath)("componentId", "VisualContainerThumbnailComponentId")("inputArgs", core["\u0275\u0275pureFunction2"](16, _c2, ctx.visual, ctx.noBorderViewport)));
                },
                dependencies: [ common.NgClass, apply_style_directive.s, pbi_lazy_load_component.R, drag_directive.w, common.AsyncPipe ],
                styles: [ '.thumbnailContainerWrapper.ui-draggable-dragging{border:2px solid var(--colorBrandForeground1)}[_nghost-%COMP%]{height:132px;display:block}[_nghost-%COMP%]:focus{outline:none}[_nghost-%COMP%]   .thumbnailHeader[_ngcontent-%COMP%]{display:flex;justify-content:space-between;padding-bottom:2px;font-size:11px;cursor:default}[_nghost-%COMP%]   .thumbnailHeader[_ngcontent-%COMP%]   .visualVisibilityIcon[_ngcontent-%COMP%]{font-size:11px;margin:0 2px 0 5px;align-self:flex-end;color:var(--fluent-theme-neutral-dark-color, #201F1E)}[_nghost-%COMP%]   .hiddenVisual[_ngcontent-%COMP%]{opacity:.3}[_nghost-%COMP%]   .thumbnailContainerWrapper[_ngcontent-%COMP%]{background-color:transparent;box-sizing:content-box;overflow:hidden;-webkit-background-clip:content;background-clip:content "-box";position:relative;display:block;border:1px solid var(--fluent-theme-neutral-quarter-alt-color, #E1DFDD)}[_nghost-%COMP%]   .thumbnailContainerWrapper.draggable-root-dragging[_ngcontent-%COMP%]{opacity:0}' ]
            }), MobileVisualContainerThumbnailWrapperComponent;
        }();
        function MobilePageVisualsPaneComponent_article_0_div_8_Template(rf, ctx) {
            if (1 & rf) {
                var _r8 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div", 13), core["\u0275\u0275listener"]("click", function($event) {
                    core["\u0275\u0275restoreView"](_r8);
                    var paneVisibility_r1 = core["\u0275\u0275nextContext"]().ngIf, ctx_r6 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r6.onOptionsClick($event, paneVisibility_r1.optionsSetting));
                }), core["\u0275\u0275pipe"](1, "localize"), core["\u0275\u0275elementEnd"]();
            }
            2 & rf && core["\u0275\u0275property"]("pbiTooltip", core["\u0275\u0275pipeBind1"](1, 1, "Pane_Options"));
        }
        function MobilePageVisualsPaneComponent_article_0_div_11_button_1_div_3_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "div", 27);
        }
        function MobilePageVisualsPaneComponent_article_0_div_11_button_1_tri_svg_icon_4_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "tri-svg-icon", 28);
        }
        function MobilePageVisualsPaneComponent_article_0_div_11_button_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r17 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "button", 23), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r17);
                    var ctx_r16 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r16.applyAutoLayout());
                }), core["\u0275\u0275pipe"](1, "localize"), core["\u0275\u0275pipe"](2, "async"), 
                core["\u0275\u0275template"](3, MobilePageVisualsPaneComponent_article_0_div_11_button_1_div_3_Template, 1, 0, "div", 24), 
                core["\u0275\u0275template"](4, MobilePageVisualsPaneComponent_article_0_div_11_button_1_tri_svg_icon_4_Template, 1, 0, "tri-svg-icon", 25), 
                core["\u0275\u0275element"](5, "span", 26), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r9 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275property"]("disabled", core["\u0275\u0275pipeBind1"](2, 6, ctx_r9.autoLayoutActionDisabled$)), 
                core["\u0275\u0275attribute"]("aria-label", core["\u0275\u0275pipeBind1"](1, 4, "CreateMobileAuthoring_Button")), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngIf", !ctx_r9.isTridentEnabled), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx_r9.isTridentEnabled);
            }
        }
        function MobilePageVisualsPaneComponent_article_0_div_11_div_5_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "div", 29);
        }
        function MobilePageVisualsPaneComponent_article_0_div_11_tri_svg_icon_6_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "tri-svg-icon", 30);
        }
        function MobilePageVisualsPaneComponent_article_0_div_11_div_9_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "div", 31);
        }
        function MobilePageVisualsPaneComponent_article_0_div_11_tri_svg_icon_10_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "tri-svg-icon", 32);
        }
        var mobile_page_visuals_pane_component_c0 = function(a0) {
            return {
                hasAutoLayout: a0
            };
        };
        function MobilePageVisualsPaneComponent_article_0_div_11_Template(rf, ctx) {
            if (1 & rf) {
                var _r19 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div", 14), core["\u0275\u0275template"](1, MobilePageVisualsPaneComponent_article_0_div_11_button_1_Template, 6, 8, "button", 15), 
                core["\u0275\u0275elementStart"](2, "div", 16)(3, "button", 17), core["\u0275\u0275listener"]("pbiMenuButtonClick", function($event) {
                    core["\u0275\u0275restoreView"](_r19);
                    var ctx_r18 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r18.handleVisibilityFilterChange($event));
                }), core["\u0275\u0275pipe"](4, "localize"), core["\u0275\u0275template"](5, MobilePageVisualsPaneComponent_article_0_div_11_div_5_Template, 1, 0, "div", 18), 
                core["\u0275\u0275template"](6, MobilePageVisualsPaneComponent_article_0_div_11_tri_svg_icon_6_Template, 1, 0, "tri-svg-icon", 19), 
                core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](7, "button", 20), 
                core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r19);
                    var ctx_r20 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r20.clearAllVisualsFromCanvasPressed());
                }), core["\u0275\u0275pipe"](8, "localize"), core["\u0275\u0275template"](9, MobilePageVisualsPaneComponent_article_0_div_11_div_9_Template, 1, 0, "div", 21), 
                core["\u0275\u0275template"](10, MobilePageVisualsPaneComponent_article_0_div_11_tri_svg_icon_10_Template, 1, 0, "tri-svg-icon", 22), 
                core["\u0275\u0275elementEnd"]()()();
            }
            if (2 & rf) {
                var ctx_r3 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275property"]("ngClass", core["\u0275\u0275pureFunction1"](14, mobile_page_visuals_pane_component_c0, ctx_r3.featureSwitchService.featureSwitches.mobileAutoReportLayout)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("pbiFeatureSwitch", "mobileAutoReportLayout"), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("pbiMenu", ctx_r3.filterByVisibilityMenu), 
                core["\u0275\u0275attribute"]("aria-label", core["\u0275\u0275pipeBind1"](4, 10, "Filter_By_Appearance")), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", !ctx_r3.isTridentEnabled), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx_r3.isTridentEnabled), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("disabled", ctx_r3.isRemoveAllVisualsDisabled()), 
                core["\u0275\u0275attribute"]("aria-label", core["\u0275\u0275pipeBind1"](8, 12, "RemoveAllVisuals_Title")), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", !ctx_r3.isTridentEnabled), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx_r3.isTridentEnabled);
            }
        }
        function MobilePageVisualsPaneComponent_article_0_hr_12_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "hr");
        }
        function MobilePageVisualsPaneComponent_article_0_div_13_li_5_Template(rf, ctx) {
            if (1 & rf) {
                var _r24 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "li")(1, "mobile-visual-container-thumbnail-wrapper", 37), 
                core["\u0275\u0275listener"]("keydown", function($event) {
                    var visual_r22 = core["\u0275\u0275restoreView"](_r24).$implicit, ctx_r23 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r23.onKeydown($event, visual_r22));
                })("dblclick", function() {
                    var visual_r22 = core["\u0275\u0275restoreView"](_r24).$implicit, ctx_r25 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r25.addThumbnailToNextFreeSpot(visual_r22));
                }), core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var visual_r22 = ctx.$implicit, ctx_r21 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("visual", visual_r22)("viewport", ctx_r21.viewport);
            }
        }
        var mobile_page_visuals_pane_component_c1 = function() {
            return {
                ignoreOverlay: !1,
                ignoreMobile: !1
            };
        };
        function MobilePageVisualsPaneComponent_article_0_div_13_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 33)(1, "div", 34)(2, "div", 35)(3, "ul"), 
            core["\u0275\u0275elementContainerStart"](4), core["\u0275\u0275template"](5, MobilePageVisualsPaneComponent_article_0_div_13_li_5_Template, 2, 2, "li", 36), 
            core["\u0275\u0275elementContainerEnd"](), core["\u0275\u0275elementEnd"]()()()()), 
            2 & rf) {
                var ctx_r5 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("pbiScrollbar", core["\u0275\u0275pureFunction0"](2, mobile_page_visuals_pane_component_c1)), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngForOf", ctx_r5.visuals);
            }
        }
        var mobile_page_visuals_pane_component_c2 = function(a0) {
            return {
                isCollapsed: a0
            };
        };
        function MobilePageVisualsPaneComponent_article_0_Template(rf, ctx) {
            if (1 & rf) {
                var _r27 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "article", 1)(1, "div", 2), core["\u0275\u0275elementContainerStart"](2), 
                core["\u0275\u0275elementStart"](3, "button", 3), core["\u0275\u0275listener"]("click", function() {
                    var paneVisibility_r1 = core["\u0275\u0275restoreView"](_r27).ngIf, ctx_r26 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r26.toggle(!paneVisibility_r1.isPaneExpanded));
                }), core["\u0275\u0275pipe"](4, "localize"), core["\u0275\u0275element"](5, "div", 4), 
                core["\u0275\u0275elementStart"](6, "div", 5), core["\u0275\u0275element"](7, "div", 6), 
                core["\u0275\u0275template"](8, MobilePageVisualsPaneComponent_article_0_div_8_Template, 2, 3, "div", 7), 
                core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](9, "div", 8), 
                core["\u0275\u0275element"](10, "span", 9), core["\u0275\u0275elementEnd"]()(), 
                core["\u0275\u0275template"](11, MobilePageVisualsPaneComponent_article_0_div_11_Template, 11, 16, "div", 10), 
                core["\u0275\u0275elementContainerEnd"](), core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](12, MobilePageVisualsPaneComponent_article_0_hr_12_Template, 1, 0, "hr", 11), 
                core["\u0275\u0275template"](13, MobilePageVisualsPaneComponent_article_0_div_13_Template, 6, 3, "div", 12), 
                core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var paneVisibility_r1 = ctx.ngIf;
                core["\u0275\u0275property"]("ngClass", core["\u0275\u0275pureFunction1"](13, mobile_page_visuals_pane_component_c2, !paneVisibility_r1.isPaneExpanded)), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngClass", core["\u0275\u0275pureFunction1"](15, mobile_page_visuals_pane_component_c2, !paneVisibility_r1.isPaneExpanded)), 
                core["\u0275\u0275attribute"]("aria-label", core["\u0275\u0275pipeBind1"](4, 11, "PageVisualsPane_Title"))("aria-expanded", !!paneVisibility_r1.isPaneExpanded), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("hidden", !paneVisibility_r1.isPaneExpanded), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngClass", paneVisibility_r1.isPaneExpanded ? "pbi-glyph-doublechevronright " : "pbi-glyph-doublechevrondown "), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", paneVisibility_r1.isPaneExpanded && (null == paneVisibility_r1.optionsSetting ? null : paneVisibility_r1.optionsSetting.showOptions)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("hidden", paneVisibility_r1.isPaneExpanded), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", paneVisibility_r1.isPaneExpanded), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", paneVisibility_r1.isPaneExpanded), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", paneVisibility_r1.isPaneExpanded);
            }
        }
        var commonGlobals = window, MobilePageVisualsPaneComponent = function() {
            function MobilePageVisualsPaneComponent(autoLayoutGenerator, eventBridge, explorationNavigation, formFactor, layoutAuthoring, localizationService, modernDialogService, panesVisibilityService, pbiMenuService, featureSwitchService, visualPluginOps) {
                this.autoLayoutGenerator = autoLayoutGenerator, this.eventBridge = eventBridge, 
                this.explorationNavigation = explorationNavigation, this.formFactor = formFactor, 
                this.layoutAuthoring = layoutAuthoring, this.localizationService = localizationService, 
                this.modernDialogService = modernDialogService, this.panesVisibilityService = panesVisibilityService, 
                this.pbiMenuService = pbiMenuService, this.featureSwitchService = featureSwitchService, 
                this.visualPluginOps = visualPluginOps, this.isTridentEnabled = commonGlobals.isTrident, 
                this.filterByVisibilityMenu = {
                    items: [ {
                        id: 0,
                        type: pbi_menu_contracts.iB.Button,
                        text: this.localizationService.get("All"),
                        checkable: !0,
                        checked: !0
                    }, {
                        id: 1,
                        type: pbi_menu_contracts.iB.Button,
                        text: this.localizationService.get("Visible"),
                        checkable: !0
                    }, {
                        id: 2,
                        type: pbi_menu_contracts.iB.Button,
                        text: this.localizationService.get("Hidden_Upper_First"),
                        checkable: !0
                    } ]
                }, this.paneVisibility$ = this.panesVisibilityService.getPanes$().pipe((0, map.U)(function(panes) {
                    return panes.pageVisuals;
                })), this.visibilityFilterChosenItem = this.filterByVisibilityMenu.items[0];
            }
            return MobilePageVisualsPaneComponent.prototype.ngOnInit = function() {
                var _this = this;
                this.scrollbarsConfig = {
                    ignoreOverlay: !1,
                    ignoreMobile: !1
                }, this.viewport = {
                    width: 108,
                    height: 108
                }, this.subscriptionManager = this.eventBridge.createChannelSubscriptionManager().subscribe(events.wAN, function() {
                    return _this.updateVisuals();
                }).subscribe(events.aco, function() {
                    return _this.updateVisuals();
                }), this.updateVisuals();
            }, MobilePageVisualsPaneComponent.prototype.ngAfterViewInit = function() {
                this.selectionModel = new PbiMenuSingleSelectionModel(this.filterByVisibilityMenu.items, this.menuTrigger);
            }, MobilePageVisualsPaneComponent.prototype.ngOnDestroy = function() {
                this.subscriptionManager.unsubscribeAll(), this.selectionModel.destroy();
            }, MobilePageVisualsPaneComponent.prototype.onOptionsClick = function(event, optionsSetting) {
                event.stopPropagation(), (0, pbi_pane_component.cc)(event, optionsSetting, this.pbiMenuService);
            }, MobilePageVisualsPaneComponent.prototype.isRemoveAllVisualsDisabled = function() {
                return 0 === this.layoutAuthoring.visualsInLayout(this.explorationNavigation.getCurrentSection(), 1).length;
            }, MobilePageVisualsPaneComponent.prototype.clearAllVisualsFromCanvasPressed = function() {
                var _this = this;
                return this.modernDialogService.promptHostSimpleDialog("ClearAllVisualsConfirmDialog", {
                    title: this.localizationService.get("RemoveAllVisuals_Title"),
                    message: this.localizationService.get("RemoveAllVisuals_MessageContent"),
                    okButtonText: this.localizationService.get("RemoveAllVisuals_OKText"),
                    cancelButtonText: this.localizationService.get("RemoveAllVisuals_CancelText")
                }, {
                    panelClass: [ "legacy-dialog" ]
                }).then(function(result) {
                    if (1 === result) {
                        var currentSection = _this.explorationNavigation.getCurrentSection(), exploration = _this.explorationNavigation.getCurrentExploration();
                        _this.layoutAuthoring.removeLayoutFromSection(currentSection, 1, exploration);
                    }
                });
            }, MobilePageVisualsPaneComponent.prototype.onKeydown = function(e, visualContainer) {
                e.keyCode !== keycodes.K5 && e.keyCode !== keycodes.L_ || this.addThumbnailToNextFreeSpot(visualContainer);
            }, MobilePageVisualsPaneComponent.prototype.addThumbnailToNextFreeSpot = function(visualContainer) {
                this.eventBridge.publishToChannel(events.JAC, {
                    visualContainer
                });
            }, MobilePageVisualsPaneComponent.prototype.toggle = function(isPaneExpanded) {
                this.panesVisibilityService.getVisibilityFor("pageVisuals").setPaneExpansion(isPaneExpanded);
            }, MobilePageVisualsPaneComponent.prototype.handleVisibilityFilterChange = function(filter) {
                this.visibilityFilterChosenItem = filter, this.updateVisuals();
            }, MobilePageVisualsPaneComponent.prototype.applyAutoLayout = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        return this.autoLayoutGenerator.generateAutoMobileLayout("mobilePageVisualsPane"), 
                        [ 2 ];
                    });
                });
            }, Object.defineProperty(MobilePageVisualsPaneComponent.prototype, "autoLayoutActionDisabled$", {
                get: function() {
                    return this.autoLayoutGenerator.autoLayoutActionDisabled$;
                },
                enumerable: !1,
                configurable: !0
            }), MobilePageVisualsPaneComponent.prototype.updateVisuals = function() {
                var _this = this, currentSection = this.explorationNavigation.getCurrentSection(), currentLayout = this.formFactor.getCurrentLayout();
                debug.fF.assertValue(currentSection, "currentSection"), debug.fF.assertValue(currentLayout, "currentLayout"), 
                this.visuals = currentSection.visualContainers.filter(function(visualContainer) {
                    if (visualContainer.layouts.withId(currentLayout)) return !1;
                    var filter = _this.visibilityFilterChosenItem;
                    if (0 === filter.id) return !0;
                    var isHidden = (0, visualContainerUtils.Pu)(visualContainer);
                    return 2 === filter.id ? isHidden : !isHidden;
                });
            }, MobilePageVisualsPaneComponent.\u0275fac = function(t) {
                return new (t || MobilePageVisualsPaneComponent)(core["\u0275\u0275directiveInject"](MobileAutoLayoutGeneratorService), core["\u0275\u0275directiveInject"](event_bridge_service.J), core["\u0275\u0275directiveInject"](exploration_navigation_service.z), core["\u0275\u0275directiveInject"](form_factor_provider_service.F), core["\u0275\u0275directiveInject"](layout_authoring_service.U), core["\u0275\u0275directiveInject"](localization_service.o), core["\u0275\u0275directiveInject"](dialog_service.x), core["\u0275\u0275directiveInject"](panes_visibility_service.r), core["\u0275\u0275directiveInject"](pbi_menu_service.o), core["\u0275\u0275directiveInject"](feature_switch_service.vZ), core["\u0275\u0275directiveInject"](visual_plugin_operations_service.f));
            }, MobilePageVisualsPaneComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: MobilePageVisualsPaneComponent,
                selectors: [ [ "mobile-page-visuals-pane" ] ],
                viewQuery: function(rf, ctx) {
                    var _t;
                    1 & rf && core["\u0275\u0275viewQuery"](pbi_menu_directive.l8, 5), 2 & rf && core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx.menuTrigger = _t.first);
                },
                features: [ core["\u0275\u0275ProvidersFeature"]([ MobileAutoLayoutGeneratorService ]) ],
                decls: 2,
                vars: 3,
                consts: [ [ "class", "sidePane rightSidePane visualizationPane smallFontSize", "keyboard-shortcuts", "ctrl-F6", "focus-nav-mode", "Group", "focus-priority", "6", 3, "ngClass", 4, "ngIf" ], [ "keyboard-shortcuts", "ctrl-F6", "focus-nav-mode", "Group", "focus-priority", "6", 1, "sidePane", "rightSidePane", "visualizationPane", "smallFontSize", 3, "ngClass" ], [ 1, "paneHeader" ], [ "localizeTooltip", "Pane_Toggle", 1, "btn", "toggleBtn", 3, "ngClass", "click" ], [ "localize", "PageVisualsPane_Title", 1, "sidePaneHorizontalTitle", "unselectable", "sidePaneTitle", "largeFontSize", "trimmedTextWithEllipsis", 3, "hidden" ], [ 1, "collapse" ], [ 1, "btnIcon", "glyphicon", "glyph-mini", 3, "ngClass" ], [ "class", "btnIcon glyphicon glyph-small pbi-glyph-more", 3, "pbiTooltip", "click", 4, "ngIf" ], [ 1, "verticalTitle", "verticalText", 3, "hidden" ], [ "localize", "PageVisualsPane_Title", 1, "collapsedVisualsTitle", "largeFontSize" ], [ "class", "flex paneActions", 3, "ngClass", 4, "ngIf" ], [ 4, "ngIf" ], [ "class", "paneContents flex", 4, "ngIf" ], [ 1, "btnIcon", "glyphicon", "glyph-small", "pbi-glyph-more", 3, "pbiTooltip", "click" ], [ 1, "flex", "paneActions", 3, "ngClass" ], [ "class", "paneActionButton autoLayoutAction", "localizeTooltip", "CreateMobileAuthoring_Button", 3, "disabled", "click", 4, "pbiFeatureSwitch" ], [ 1, "actionsWrapper" ], [ "localizeTooltip", "Filter_By_Appearance", 1, "paneActionButton", 3, "pbiMenu", "pbiMenuButtonClick" ], [ "class", "glyphicon pbi-glyph-equalizer glyph-small", 4, "ngIf" ], [ "tri-svg-icon-16", "", "sprite", "authoring-icons", "name", "options_16_regular", "class", "options-icon svgIcon", "role", "img", "tabindex", "0", 4, "ngIf" ], [ "localizeTooltip", "RemoveAllVisuals_Title", 1, "paneActionButton", 3, "disabled", "click" ], [ "class", "glyphicon pbi-glyph-eraser glyph-small", 4, "ngIf" ], [ "tri-svg-icon-16", "", "sprite", "authoring-icons", "name", "eraser_16_regular", "class", "eraser-icon svgIcon", "role", "img", "tabindex", "0", 4, "ngIf" ], [ "localizeTooltip", "CreateMobileAuthoring_Button", 1, "paneActionButton", "autoLayoutAction", 3, "disabled", "click" ], [ "class", "glyphicon glyph-small pbi-glyph-phone-optimized-report", 4, "ngIf" ], [ "tri-svg-icon-16", "", "sprite", "authoring-icons", "name", "data_bar_vertical_phone_16_regular", "class", "autoLayoutIcon svgIcon", "role", "img", "tabindex", "0", 4, "ngIf" ], [ "localize", "QuickCreate_CreateAutoGenerate", 1, "autoLayoutText" ], [ 1, "glyphicon", "glyph-small", "pbi-glyph-phone-optimized-report" ], [ "tri-svg-icon-16", "", "sprite", "authoring-icons", "name", "data_bar_vertical_phone_16_regular", "role", "img", "tabindex", "0", 1, "autoLayoutIcon", "svgIcon" ], [ 1, "glyphicon", "pbi-glyph-equalizer", "glyph-small" ], [ "tri-svg-icon-16", "", "sprite", "authoring-icons", "name", "options_16_regular", "role", "img", "tabindex", "0", 1, "options-icon", "svgIcon" ], [ 1, "glyphicon", "pbi-glyph-eraser", "glyph-small" ], [ "tri-svg-icon-16", "", "sprite", "authoring-icons", "name", "eraser_16_regular", "role", "img", "tabindex", "0", 1, "eraser-icon", "svgIcon" ], [ 1, "paneContents", "flex" ], [ 1, "sectionHost", "item-fill" ], [ 3, "pbiScrollbar" ], [ 4, "ngFor", "ngForOf" ], [ "tabindex", "0", "focusElement", "", 3, "visual", "viewport", "keydown", "dblclick" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275template"](0, MobilePageVisualsPaneComponent_article_0_Template, 14, 17, "article", 0), 
                    core["\u0275\u0275pipe"](1, "async")), 2 & rf && core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](1, 1, ctx.paneVisibility$));
                },
                dependencies: [ common.NgClass, common.NgForOf, common.NgIf, localize_directive.X, localize_tooltip_directive.r, pbi_feature_switch_directive.P, keyboard_shortcuts_directive.q, pbi_menu_directive.l8, pbi_scrollbar_directive.r, pbi_tooltip_directive.V, tri_svg_icon_component.M, MobileVisualContainerThumbnailWrapperComponent, common.AsyncPipe, localize_pipe.F ],
                styles: [ '.paneHeader[_ngcontent-%COMP%]   .toggleBtn.legacyToggleBtn[_ngcontent-%COMP%]{position:relative;cursor:default;box-sizing:border-box}.paneHeader[_ngcontent-%COMP%]   .toggleBtn.legacyToggleBtn[_ngcontent-%COMP%]   .sidePaneHorizontalTitle[_ngcontent-%COMP%]{cursor:default;font-family:Segoe UI Semilight,wf_segoe-ui_semilight,helvetica,arial,sans-serif}.paneHeader[_ngcontent-%COMP%]{display:flex;flex-direction:column}.paneHeader[_ngcontent-%COMP%]   .toggleBtn[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:space-between;padding-bottom:0;height:42px}.paneHeader[_ngcontent-%COMP%]   .toggleBtn[_ngcontent-%COMP%]   .sidePaneHorizontalTitle[_ngcontent-%COMP%]{margin-top:0;line-height:normal}.paneHeader[_ngcontent-%COMP%]   .toggleBtn[_ngcontent-%COMP%]   .btnIcon[_ngcontent-%COMP%]{margin:0 8px 0 0}.paneHeader[_ngcontent-%COMP%]   .toggleBtn[_ngcontent-%COMP%]   .collapse[_ngcontent-%COMP%]{margin:0 0 4px}.paneHeader[_ngcontent-%COMP%]   .toggleBtn.isCollapsed[_ngcontent-%COMP%]{flex-direction:column}.paneHeader[_ngcontent-%COMP%]   .toggleBtn.isCollapsed[_ngcontent-%COMP%]   .btnIcon[_ngcontent-%COMP%]{margin:16px 8px 0;padding:0}.paneHeader[_ngcontent-%COMP%]   .toggleBtn.isCollapsed[_ngcontent-%COMP%]   .verticalTitle[_ngcontent-%COMP%]{top:65px}.paneHeader[_ngcontent-%COMP%]   .paneActions[_ngcontent-%COMP%]{justify-content:flex-end}.paneHeader[_ngcontent-%COMP%]   .paneActions.hasAutoLayout[_ngcontent-%COMP%]{justify-content:space-between}.paneHeader[_ngcontent-%COMP%]   .actionsWrapper[_ngcontent-%COMP%]{display:flex;justify-content:flex-start}.paneHeader[_ngcontent-%COMP%]   .paneActionButton[_ngcontent-%COMP%]{overflow:hidden;cursor:pointer;margin:0 12px;display:flex;background-color:initial;border:none}.paneHeader[_ngcontent-%COMP%]   .paneActionButton[_ngcontent-%COMP%]:hover, .paneHeader[_ngcontent-%COMP%]   .paneActionButton[_ngcontent-%COMP%]:active, .paneHeader[_ngcontent-%COMP%]   .paneActionButton[_ngcontent-%COMP%]:active:hover, .paneHeader[_ngcontent-%COMP%]   .paneActionButton[_ngcontent-%COMP%]:focus:hover{background-color:var(--fluent-theme-neutral-quarter-alt-color, #E1DFDD);color:inherit}.paneHeader[_ngcontent-%COMP%]   .paneActionButton[disabled][_ngcontent-%COMP%]{color:var(--fluent-theme-neutral-tertiary-color, #A19F9D);cursor:default;pointer-events:none}.paneHeader[_ngcontent-%COMP%]   .paneActionButton[_ngcontent-%COMP%]   .glyphicon[_ngcontent-%COMP%], .paneHeader[_ngcontent-%COMP%]   .paneActionButton[_ngcontent-%COMP%]   .svgIcon[_ngcontent-%COMP%]{padding-top:2px}.paneHeader[_ngcontent-%COMP%]   .paneActionButton[_ngcontent-%COMP%]   .paneClearTitle[_ngcontent-%COMP%]{font-family:Segoe UI Semilight,wf_segoe-ui_semilight,helvetica,arial,sans-serif;margin-left:8px;overflow:hidden;text-overflow:ellipsis;text-transform:none;white-space:nowrap}.paneHeader[_ngcontent-%COMP%]   .autoLayoutAction[_ngcontent-%COMP%]{display:flex;margin:0 10px}.paneHeader[_ngcontent-%COMP%]   .autoLayoutText[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--sm-font-size, 12px);font-weight:var(--font-weight-regular, 400);margin:0 5px}.svgIcon[_ngcontent-%COMP%]{fill:var(--fluentThemeNeutralDarkColor)}.newPaneColors.explorationContainer[_nghost-%COMP%]   .visualizationPane[_ngcontent-%COMP%], .newPaneColors.explorationContainer   [_nghost-%COMP%]   .visualizationPane[_ngcontent-%COMP%], .explorationContainer[_nghost-%COMP%]   .visualizationPane[_ngcontent-%COMP%], .explorationContainer   [_nghost-%COMP%]   .visualizationPane[_ngcontent-%COMP%]{width:378px;max-width:378px}.newPaneColors.explorationContainer[_nghost-%COMP%]   .visualizationPane.isCollapsed[_ngcontent-%COMP%], .newPaneColors.explorationContainer   [_nghost-%COMP%]   .visualizationPane.isCollapsed[_ngcontent-%COMP%], .explorationContainer[_nghost-%COMP%]   .visualizationPane.isCollapsed[_ngcontent-%COMP%], .explorationContainer   [_nghost-%COMP%]   .visualizationPane.isCollapsed[_ngcontent-%COMP%]{width:32px}.newPaneColors.explorationContainer[_nghost-%COMP%]   .visualizationPane[_ngcontent-%COMP%]   .paneHeader[_ngcontent-%COMP%], .newPaneColors.explorationContainer   [_nghost-%COMP%]   .visualizationPane[_ngcontent-%COMP%]   .paneHeader[_ngcontent-%COMP%], .explorationContainer[_nghost-%COMP%]   .visualizationPane[_ngcontent-%COMP%]   .paneHeader[_ngcontent-%COMP%], .explorationContainer   [_nghost-%COMP%]   .visualizationPane[_ngcontent-%COMP%]   .paneHeader[_ngcontent-%COMP%]{height:80px}.newPaneColors.explorationContainer[_nghost-%COMP%]   .visualizationPane[_ngcontent-%COMP%]   .paneHeader[_ngcontent-%COMP%]   .paneActionButton[_ngcontent-%COMP%], .newPaneColors.explorationContainer   [_nghost-%COMP%]   .visualizationPane[_ngcontent-%COMP%]   .paneHeader[_ngcontent-%COMP%]   .paneActionButton[_ngcontent-%COMP%], .explorationContainer[_nghost-%COMP%]   .visualizationPane[_ngcontent-%COMP%]   .paneHeader[_ngcontent-%COMP%]   .paneActionButton[_ngcontent-%COMP%], .explorationContainer   [_nghost-%COMP%]   .visualizationPane[_ngcontent-%COMP%]   .paneHeader[_ngcontent-%COMP%]   .paneActionButton[_ngcontent-%COMP%]{padding:8px;margin:0 5px}.newPaneColors.explorationContainer[_nghost-%COMP%]   .visualizationPane[_ngcontent-%COMP%]   .paneHeader[_ngcontent-%COMP%]   .paneActionButton[aria-expanded=true][_ngcontent-%COMP%], .newPaneColors.explorationContainer   [_nghost-%COMP%]   .visualizationPane[_ngcontent-%COMP%]   .paneHeader[_ngcontent-%COMP%]   .paneActionButton[aria-expanded=true][_ngcontent-%COMP%], .explorationContainer[_nghost-%COMP%]   .visualizationPane[_ngcontent-%COMP%]   .paneHeader[_ngcontent-%COMP%]   .paneActionButton[aria-expanded=true][_ngcontent-%COMP%], .explorationContainer   [_nghost-%COMP%]   .visualizationPane[_ngcontent-%COMP%]   .paneHeader[_ngcontent-%COMP%]   .paneActionButton[aria-expanded=true][_ngcontent-%COMP%]{background-color:var(--fluent-theme-neutral-quarter-alt-color, #E1DFDD)}.newPaneColors.explorationContainer[_nghost-%COMP%]   .visualizationPane[_ngcontent-%COMP%]   .paneHeader[_ngcontent-%COMP%]   .paneActionButton[_ngcontent-%COMP%]   .glyphicon[_ngcontent-%COMP%], .newPaneColors.explorationContainer   [_nghost-%COMP%]   .visualizationPane[_ngcontent-%COMP%]   .paneHeader[_ngcontent-%COMP%]   .paneActionButton[_ngcontent-%COMP%]   .glyphicon[_ngcontent-%COMP%], .explorationContainer[_nghost-%COMP%]   .visualizationPane[_ngcontent-%COMP%]   .paneHeader[_ngcontent-%COMP%]   .paneActionButton[_ngcontent-%COMP%]   .glyphicon[_ngcontent-%COMP%], .explorationContainer   [_nghost-%COMP%]   .visualizationPane[_ngcontent-%COMP%]   .paneHeader[_ngcontent-%COMP%]   .paneActionButton[_ngcontent-%COMP%]   .glyphicon[_ngcontent-%COMP%], .newPaneColors.explorationContainer[_nghost-%COMP%]   .visualizationPane[_ngcontent-%COMP%]   .paneHeader[_ngcontent-%COMP%]   .paneActionButton[_ngcontent-%COMP%]   .svgIcon[_ngcontent-%COMP%], .newPaneColors.explorationContainer   [_nghost-%COMP%]   .visualizationPane[_ngcontent-%COMP%]   .paneHeader[_ngcontent-%COMP%]   .paneActionButton[_ngcontent-%COMP%]   .svgIcon[_ngcontent-%COMP%], .explorationContainer[_nghost-%COMP%]   .visualizationPane[_ngcontent-%COMP%]   .paneHeader[_ngcontent-%COMP%]   .paneActionButton[_ngcontent-%COMP%]   .svgIcon[_ngcontent-%COMP%], .explorationContainer   [_nghost-%COMP%]   .visualizationPane[_ngcontent-%COMP%]   .paneHeader[_ngcontent-%COMP%]   .paneActionButton[_ngcontent-%COMP%]   .svgIcon[_ngcontent-%COMP%]{padding:0}.newPaneColors.explorationContainer[_nghost-%COMP%]   .visualizationPane[_ngcontent-%COMP%]   .paneContents[_ngcontent-%COMP%], .newPaneColors.explorationContainer   [_nghost-%COMP%]   .visualizationPane[_ngcontent-%COMP%]   .paneContents[_ngcontent-%COMP%], .explorationContainer[_nghost-%COMP%]   .visualizationPane[_ngcontent-%COMP%]   .paneContents[_ngcontent-%COMP%], .explorationContainer   [_nghost-%COMP%]   .visualizationPane[_ngcontent-%COMP%]   .paneContents[_ngcontent-%COMP%]{top:92px}.newPaneColors.explorationContainer[_nghost-%COMP%]   hr[_ngcontent-%COMP%], .newPaneColors.explorationContainer   [_nghost-%COMP%]   hr[_ngcontent-%COMP%], .explorationContainer[_nghost-%COMP%]   hr[_ngcontent-%COMP%], .explorationContainer   [_nghost-%COMP%]   hr[_ngcontent-%COMP%]{border:solid var(--fluent-theme-neutral-quarter-alt-color, #E1DFDD);border-width:1px 0 0 0}.paneContents[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(3,1fr);gap:12px;list-style:none;padding:0;margin:6px 18px 0 12px}.paneContents[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{width:100%;height:auto}' ]
            }), MobilePageVisualsPaneComponent;
        }(), mobileVisualFormattingSettings = __webpack_require__(55525), visualContainerGroup2 = __webpack_require__(9215), MobileFormattingPaneObjectDefinitionsService = function() {
            function MobileFormattingPaneObjectDefinitionsService() {}
            return MobileFormattingPaneObjectDefinitionsService.prototype.getObjectDefinitions = function(container) {
                if (container && (0, visualContainerGroup2.Vz)(container)) return container.config.singleVisual.mobileObjects;
            }, MobileFormattingPaneObjectDefinitionsService.prototype.getVcObjectDefinitions = function(container) {
                if (container && (0, visualContainerGroup2.Vz)(container)) return container.config.singleVisual.mobileVcObjects;
            }, MobileFormattingPaneObjectDefinitionsService.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: MobileFormattingPaneObjectDefinitionsService,
                factory: MobileFormattingPaneObjectDefinitionsService.\u0275fac = function(t) {
                    return new (t || MobileFormattingPaneObjectDefinitionsService);
                }
            }), MobileFormattingPaneObjectDefinitionsService;
        }(), mobile_vc_objects_proxy_utils = __webpack_require__(17774), MobilePropertyChangeIndicatorService = function() {
            function MobilePropertyChangeIndicatorService() {}
            return MobilePropertyChangeIndicatorService.prototype.shouldShowSliceChangeIndicator = function(formattingDescriptor, objectDefinitions) {
                return !!objectDefinitions && !!(0, mobile_vc_objects_proxy_utils.cH)(objectDefinitions, formattingDescriptor.objectName, formattingDescriptor.propertyName, void 0 !== formattingDescriptor.altConstantValueSelector ? formattingDescriptor.altConstantValueSelector : formattingDescriptor.selector);
            }, MobilePropertyChangeIndicatorService.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: MobilePropertyChangeIndicatorService,
                factory: MobilePropertyChangeIndicatorService.\u0275fac = function(t) {
                    return new (t || MobilePropertyChangeIndicatorService);
                }
            }), MobilePropertyChangeIndicatorService;
        }(), property_pane_util = __webpack_require__(24408), slicerMode = __webpack_require__(20598), slicerMapping = new Map([ [ slicerMode.e4, [ slicerMode.e4 ] ], [ slicerMode.bb, [ slicerMode.bb ] ], [ slicerMode.vX, [ slicerMode.vX ] ], [ slicerMode.j6, [ slicerMode.j6, slicerMode.of, slicerMode.Ih ] ], [ slicerMode.of, [ slicerMode.j6, slicerMode.of, slicerMode.Ih ] ], [ slicerMode.K8, [ slicerMode.K8 ] ], [ slicerMode.GV, [ slicerMode.GV ] ], [ slicerMode.Zr, [ slicerMode.Zr ] ], [ slicerMode.Ih, [ slicerMode.j6, slicerMode.of, slicerMode.Ih ] ] ]), MobileSliceCustomizationService = function() {
            function MobileSliceCustomizationService() {}
            return MobileSliceCustomizationService.prototype.customizeSliceDropdownOptions = function(items, selectedValue, sliceUid) {
                return "slicerSettings-options-style" === sliceUid ? items.filter(function(member) {
                    var _a;
                    return null === (_a = slicerMapping.get(selectedValue.value.toString())) || void 0 === _a ? void 0 : _a.includes(member.value.toString());
                }) : items;
            }, MobileSliceCustomizationService.prototype.customizeSliceOptions = function(slices) {
                var _this = this;
                _.forEach(slices, function(slice) {
                    if ("Dropdown" === slice.control.type && property_pane_util.WN(slice.control.properties)) {
                        var dropdown_1 = slice.control.properties;
                        dropdown_1.items = _this.customizeSliceDropdownOptions(dropdown_1.items, dropdown_1.value, slice.uid);
                    }
                });
            }, MobileSliceCustomizationService.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: MobileSliceCustomizationService,
                factory: MobileSliceCustomizationService.\u0275fac = function(t) {
                    return new (t || MobileSliceCustomizationService);
                }
            }), MobileSliceCustomizationService;
        }(), constants = __webpack_require__(21302), formatting_contracts = __webpack_require__(89535), formattingObjectDefinitionsService = __webpack_require__(45221), scoped_services = __webpack_require__(22179), selectionUtils = __webpack_require__(21728), telemetry_events = __webpack_require__(84376), high_contrast_css_generation_service = __webpack_require__(64647), selection_service = __webpack_require__(72262), tutorial_pop_up_service = __webpack_require__(56083), formatting_pane_lazy_component = __webpack_require__(32441), MobileEmptyFormattingPaneSvgComponent = function() {
            function MobileEmptyFormattingPaneSvgComponent(highContrastCssGenerationService) {
                this.highContrastCssGenerationService = highContrastCssGenerationService, this.initializeHighContrastRules();
            }
            return MobileEmptyFormattingPaneSvgComponent.prototype.initializeHighContrastRules = function() {
                this.highContrastCssGenerationService.addRule(".themeableElement .empty-pane-svg .emptyFormatting", "{ fill: @foregroundColor !important; opacity: 1 !important; }"), 
                this.highContrastCssGenerationService.addRule(".themeableElement .empty-pane-svg .themeColor", "{ fill: none !important; opacity: 1 !important; }");
            }, MobileEmptyFormattingPaneSvgComponent.\u0275fac = function(t) {
                return new (t || MobileEmptyFormattingPaneSvgComponent)(core["\u0275\u0275directiveInject"](high_contrast_css_generation_service.g));
            }, MobileEmptyFormattingPaneSvgComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: MobileEmptyFormattingPaneSvgComponent,
                selectors: [ [ "mobile-empty-formatting-pane-svg" ] ],
                decls: 10,
                vars: 0,
                consts: [ [ "width", "58", "height", "58", "viewBox", "0 0 58 58", "fill", "none", "xmlns", "http://www.w3.org/2000/svg" ], [ "clip-path", "url(#clip0)" ], [ "d", "M14.5039 40.4166V25.3715H23.5664V12.6804H34.4343V19.9375H43.4968V21.5128C43.2136 21.6426 42.9186 21.8019 42.6118 21.9907C42.305 22.1677 41.9982 22.3624 41.6914 22.5748V21.7429H34.4343V28.9823C34.1511 29.2891 33.862 29.5959 33.567 29.9027C33.2602 30.1977 32.9475 30.5045 32.6289 30.8231V14.5035H25.3718V36.3456C25.006 36.7704 24.6815 37.2129 24.3983 37.6731C24.1151 38.1333 23.8378 38.6112 23.5664 39.1068V27.1946H16.3093V40.5936L14.5039 40.4166Z", 1, "themeableElement", "emptyFormatting" ], [ "d", "M46.7897 23.9023C47.0139 24.1265 47.126 24.4392 47.126 24.8405C47.126 25.3715 46.9549 26.0146 46.6127 26.7698C46.2587 27.5132 45.8044 28.3038 45.2498 29.1416C44.6951 29.9794 44.0815 30.8349 43.4089 31.7081C42.7245 32.5813 42.0519 33.4014 41.3911 34.1685C40.7303 34.9355 40.1226 35.6258 39.568 36.2394C39.0016 36.8412 38.5591 37.3014 38.2405 37.62C37.9573 37.9032 37.6623 38.1982 37.3555 38.505C37.0369 38.8118 36.7183 39.1186 36.3997 39.4254C36.0811 39.7204 35.7684 40.0095 35.4615 40.2927C35.1547 40.5641 34.8715 40.8119 34.6119 41.0361C34.5647 40.3045 34.3936 39.6496 34.0986 39.0714C34.2874 38.8944 34.4998 38.6938 34.7358 38.4696C34.9718 38.2454 35.2196 38.0153 35.4792 37.7793C35.7389 37.5315 35.9985 37.2837 36.2581 37.0359C36.5059 36.7881 36.7419 36.5521 36.9661 36.3279C37.4971 35.7969 38.0517 35.2187 38.6299 34.5933C39.1963 33.9561 39.7627 33.3011 40.3291 32.6285C40.8955 31.9559 41.4442 31.2833 41.9752 30.6107C42.4944 29.9381 42.9723 29.295 43.4089 28.6814C43.8455 28.0678 44.2172 27.5014 44.524 26.9822C44.8309 26.4512 45.0492 26.0087 45.179 25.6547C44.8368 25.8317 44.3175 26.1916 43.6213 26.7344C42.9251 27.2654 42.0519 28.0147 41.0017 28.9823C39.9397 29.9381 38.7066 31.1181 37.3024 32.5223C35.8864 33.9266 34.2874 35.5845 32.5056 37.4961C31.9274 37.2011 31.2784 37.0359 30.5586 37.0005C30.7828 36.7409 31.0365 36.4577 31.3197 36.1509C31.5911 35.8323 31.8802 35.5137 32.187 35.1951C32.482 34.8765 32.7829 34.5579 33.0897 34.2393C33.3965 33.9207 33.6915 33.6198 33.9747 33.3365C34.2107 33.1005 34.5234 32.7819 34.9128 32.3807C35.3022 31.9795 35.7448 31.5311 36.2404 31.0355C36.7242 30.5281 37.2552 29.9971 37.8334 29.4425C38.3998 28.8761 38.9839 28.3215 39.5857 27.7787C40.1757 27.2241 40.7775 26.699 41.3911 26.2034C41.9929 25.696 42.5711 25.2535 43.1257 24.8759C43.6803 24.4865 44.2054 24.1796 44.701 23.9554C45.1849 23.7194 45.6097 23.6014 45.9755 23.6014C46.3177 23.6014 46.5891 23.7017 46.7897 23.9023Z", 1, "themeableElement", "emptyFormatting" ], [ "d", "M27.1761 46.2223C26.5153 46.1633 25.8309 46.0748 25.1229 45.9568C24.4149 45.827 23.7305 45.6677 23.0697 45.4789L20.3262 44.7178L22.9989 43.762C23.8013 43.4788 24.5034 43.1071 25.1052 42.6469C25.707 42.1866 26.2144 41.6497 26.6274 41.0361L26.8398 40.6644C27.123 40.157 27.3944 39.7086 27.6541 39.3192C27.9019 38.918 28.1674 38.5817 28.4506 38.3103C28.722 38.0389 29.0347 37.8324 29.3887 37.6908C29.7309 37.5374 30.1439 37.4607 30.6277 37.4607C31.7369 37.4607 32.5983 37.7675 33.2119 38.3811C33.8255 38.9947 34.1323 39.8561 34.1323 40.9653C34.1323 41.4137 34.0438 41.8503 33.8668 42.2751C33.6898 42.7 33.4479 43.1071 33.1411 43.4965C32.8225 43.8859 32.4508 44.2458 32.026 44.5762C31.5894 44.9066 31.1174 45.1957 30.61 45.4435C30.1026 45.6795 29.5657 45.8683 28.9993 46.0099C28.4329 46.1515 27.8547 46.2223 27.2646 46.2223H27.1761Z", 1, "themeableElement", "themeColor" ], [ "d", "M30.6292 36.558C31.3136 36.558 31.939 36.6583 32.5054 36.8589C33.0718 37.0595 33.5556 37.3486 33.9568 37.7262C34.3462 38.1038 34.653 38.5699 34.8772 39.1245C35.0896 39.6673 35.1958 40.2809 35.1958 40.9653C35.1958 41.8385 34.9657 42.6528 34.5055 43.408C34.0453 44.1514 33.4435 44.8004 32.7001 45.355C31.9449 45.9096 31.0894 46.3462 30.1335 46.6648C29.1777 46.9716 28.1983 47.125 27.1953 47.125C25.7793 46.9952 24.4636 46.7769 23.2482 46.4701C22.729 46.3403 22.2098 46.1869 21.6906 46.0099C21.1595 45.8211 20.6639 45.6087 20.2037 45.3727C19.7435 45.1249 19.3305 44.8476 18.9647 44.5408C18.5989 44.234 18.3216 43.8859 18.1328 43.4965C18.1918 43.5083 18.2626 43.5142 18.3452 43.5142C18.416 43.526 18.4986 43.5319 18.593 43.5319C18.6756 43.5319 18.7818 43.5319 18.9116 43.5319C19.3128 43.5319 19.8202 43.5024 20.4338 43.4434C21.0356 43.3726 21.6729 43.2251 22.3455 43.0009C23.0181 42.7649 23.6848 42.4285 24.3456 41.9919C24.9946 41.5553 25.5669 40.9594 26.0625 40.2042C26.3221 39.7322 26.5935 39.2779 26.8767 38.8413C27.1481 38.4047 27.4549 38.0212 27.7971 37.6908C28.1393 37.3486 28.5405 37.0772 29.0007 36.8766C29.4491 36.6642 29.9919 36.558 30.6292 36.558ZM27.2484 45.3196C28.0036 45.3078 28.7529 45.178 29.4963 44.9302C30.2279 44.6824 30.8829 44.3579 31.4611 43.9567C32.0393 43.5437 32.5054 43.0835 32.8594 42.576C33.2134 42.0568 33.3904 41.5199 33.3904 40.9653C33.3904 40.4815 33.3314 40.0744 33.2134 39.744C33.0836 39.4136 32.9066 39.1481 32.6824 38.9475C32.4582 38.7351 32.1927 38.5876 31.8859 38.505C31.5673 38.4106 31.2133 38.3634 30.8239 38.3634C30.4816 38.3634 30.1807 38.4106 29.9211 38.505C29.6497 38.5994 29.396 38.7587 29.16 38.9829C28.9122 39.1953 28.6703 39.4785 28.4343 39.8325C28.1865 40.1747 27.921 40.5995 27.6378 41.1069C27.3074 41.6143 26.9711 42.0568 26.6289 42.4344C26.2749 42.8121 25.915 43.1425 25.5492 43.4257C25.1834 43.6971 24.8117 43.9272 24.4341 44.116C24.0565 44.3048 23.6789 44.47 23.3013 44.6116C23.9621 44.8004 24.6347 44.9538 25.3191 45.0718C26.0035 45.178 26.6466 45.2606 27.2484 45.3196Z", 1, "themeableElement", "emptyFormatting" ], [ "d", "M25.375 14.5H32.625V30.8125L25.375 36.25V14.5Z", 1, "themeableElement", "themeColor" ], [ "id", "clip0" ], [ "width", "36.25", "height", "36.25", "fill", "white", "transform", "translate(10.875 10.875)" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275namespaceSVG"](), core["\u0275\u0275elementStart"](0, "svg", 0)(1, "g", 1), 
                    core["\u0275\u0275element"](2, "path", 2)(3, "path", 3)(4, "path", 4)(5, "path", 5)(6, "path", 6), 
                    core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](7, "defs")(8, "clipPath", 7), 
                    core["\u0275\u0275element"](9, "rect", 8), core["\u0275\u0275elementEnd"]()()());
                },
                styles: [ ".themeColor[_ngcontent-%COMP%]{fill:var(--colorBrandForeground1)}.emptyFormatting[_ngcontent-%COMP%]{fill:var(--colorNeutralBackgroundInverted)}" ]
            }), MobileEmptyFormattingPaneSvgComponent;
        }(), MobileEmptyFormattingPaneLegacySvgComponent = function() {
            function MobileEmptyFormattingPaneLegacySvgComponent() {}
            return MobileEmptyFormattingPaneLegacySvgComponent.\u0275fac = function(t) {
                return new (t || MobileEmptyFormattingPaneLegacySvgComponent);
            }, MobileEmptyFormattingPaneLegacySvgComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: MobileEmptyFormattingPaneLegacySvgComponent,
                selectors: [ [ "mobile-empty-formatting-pane-legacy-svg" ] ],
                decls: 4,
                vars: 0,
                consts: [ [ "width", "45", "height", "45", "viewBox", "0 0 45 45", "fill", "none", "xmlns", "http://www.w3.org/2000/svg" ], [ "d", "M32.6 9.80005H40.2V15.4001C40.2 17.6092 38.4092 19.4 36.2 19.4H21.8V27.4", "stroke", "#252423", "stroke-width", "1.5" ], [ "x", "5.75", "y", "5.75", "width", "28.1", "height", "7.3", "rx", "1.25", "fill", "white", "stroke", "#252423", "stroke-width", "1.5" ], [ "d", "M19 24.15H24.6C25.2904 24.15 25.85 24.7097 25.85 25.4V40.25H17.75V25.4C17.75 24.7097 18.3096 24.15 19 24.15Z", "fill", "#B3B0AD", "stroke", "#252423", "stroke-width", "1.5" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275namespaceSVG"](), core["\u0275\u0275elementStart"](0, "svg", 0), 
                    core["\u0275\u0275element"](1, "path", 1)(2, "rect", 2)(3, "path", 3), core["\u0275\u0275elementEnd"]());
                },
                encapsulation: 2
            }), MobileEmptyFormattingPaneLegacySvgComponent;
        }(), pbi_svg_use_symbol_component = __webpack_require__(45916);
        function MobileFormattingTabComponent_ng_container_0_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "div", 1)(2, "pbi-button-toggle", 2), 
            core["\u0275\u0275element"](3, "pbi-svg-use-symbol", 3), core["\u0275\u0275elementEnd"](), 
            core["\u0275\u0275element"](4, "div", 4), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementContainerEnd"]()), 
            2 & rf && (core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("checked", !0)("value", 1)("localizeTooltip", "Format"), 
            core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("sheet", "visualizationPaneIcons_paneColorRefresh")("symbolId", "visualizationPaneFormat_paneColorRefresh"));
        }
        var MobileFormattingTabComponent = function() {
            function MobileFormattingTabComponent() {}
            return MobileFormattingTabComponent.\u0275fac = function(t) {
                return new (t || MobileFormattingTabComponent);
            }, MobileFormattingTabComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: MobileFormattingTabComponent,
                selectors: [ [ "mobile-formatting-tab" ] ],
                inputs: {
                    useModernFormatPane: "useModernFormatPane"
                },
                decls: 1,
                vars: 1,
                consts: [ [ 4, "ngIf" ], [ "role", "tablist", 1, "sectionHeader", "pivotNav", "visualizationPane" ], [ "role", "tab", 1, "section-tab-legacy", 3, "checked", "value", "localizeTooltip" ], [ 1, "normal-svg", "section-svg", 3, "sheet", "symbolId" ], [ 1, "navMarker", "visualizationPane" ] ],
                template: function(rf, ctx) {
                    1 & rf && core["\u0275\u0275template"](0, MobileFormattingTabComponent_ng_container_0_Template, 5, 5, "ng-container", 0), 
                    2 & rf && core["\u0275\u0275property"]("ngIf", !ctx.useModernFormatPane);
                },
                dependencies: [ common.NgIf, localize_tooltip_directive.r, pbi_svg_use_symbol_component.R ],
                styles: [ ".section-tab-legacy[_ngcontent-%COMP%]{padding:8px 10px;display:inline-block}.section-tab-legacy[_ngcontent-%COMP%]:hover, .section-tab-legacy[_ngcontent-%COMP%]:focus{background:var(--gray-30, #EDEBE9)}.section-tab-legacy[_ngcontent-%COMP%]   .section-svg[_ngcontent-%COMP%]{width:20px;height:20px;display:flex}" ]
            }), MobileFormattingTabComponent;
        }(), PropertyPaneLegacyComponent = function(_super) {
            function PropertyPaneLegacyComponent(elementRef, injector) {
                var _this = _super.call(this, "propertyPane", elementRef, injector) || this;
                return _this.propertyChanged = new core.EventEmitter, _this;
            }
            return (0, tslib_es6.__extends)(PropertyPaneLegacyComponent, _super), PropertyPaneLegacyComponent.\u0275fac = function(t) {
                return new (t || PropertyPaneLegacyComponent)(core["\u0275\u0275directiveInject"](core.ElementRef), core["\u0275\u0275directiveInject"](core.Injector));
            }, PropertyPaneLegacyComponent.\u0275dir = core["\u0275\u0275defineDirective"]({
                type: PropertyPaneLegacyComponent,
                selectors: [ [ "property-pane-legacy" ] ],
                inputs: {
                    showChangeIndication: "showChangeIndication",
                    excludeObjectRepetition: "excludeObjectRepetition",
                    disabledSliceTypes: "disabledSliceTypes",
                    excludeConditionalFormattingCard: "excludeConditionalFormattingCard"
                },
                outputs: {
                    propertyChanged: "propertyChanged"
                },
                features: [ core["\u0275\u0275InheritDefinitionFeature"] ]
            }), PropertyPaneLegacyComponent;
        }(__webpack_require__(81789).iB);
        function MobileVisualFormattingPaneComponent_article_0_div_5_Template(rf, ctx) {
            if (1 & rf) {
                var _r6 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div", 10), core["\u0275\u0275listener"]("click", function($event) {
                    core["\u0275\u0275restoreView"](_r6);
                    var paneVisibility_r1 = core["\u0275\u0275nextContext"]().ngIf, ctx_r4 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r4.onOptionsClick($event, paneVisibility_r1.optionsSetting));
                }), core["\u0275\u0275pipe"](1, "localize"), core["\u0275\u0275elementEnd"]();
            }
            2 & rf && core["\u0275\u0275property"]("pbiTooltip", core["\u0275\u0275pipeBind1"](1, 1, "Pane_Options"));
        }
        function MobileVisualFormattingPaneComponent_article_0_div_9_mobile_formatting_tab_1_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "mobile-formatting-tab", 17), 2 & rf) {
                var ctx_r7 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275property"]("useModernFormatPane", ctx_r7.useModernFormatPane);
            }
        }
        function MobileVisualFormattingPaneComponent_article_0_div_9_property_pane_legacy_3_Template(rf, ctx) {
            if (1 & rf) {
                var _r12 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "property-pane-legacy", 18), core["\u0275\u0275listener"]("propertyChanged", function($event) {
                    core["\u0275\u0275restoreView"](_r12);
                    var ctx_r11 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r11.onPropertyChanged($event));
                }), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r8 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275property"]("showChangeIndication", !0)("excludeObjectRepetition", ctx_r8.excludeObjectRepetition)("excludeConditionalFormattingCard", !0)("disabledSliceTypes", ctx_r8.disabledSliceTypes);
            }
        }
        var mobile_visual_formatting_component_c0 = function() {
            return [ "Visual", "Format_Label_General" ];
        };
        function MobileVisualFormattingPaneComponent_article_0_div_9_formatting_pane_lazy_4_Template(rf, ctx) {
            if (1 & rf) {
                var _r14 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "formatting-pane-lazy", 19), core["\u0275\u0275listener"]("propertyChanged", function($event) {
                    core["\u0275\u0275restoreView"](_r14);
                    var ctx_r13 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r13.onPropertyChanged($event));
                }), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r9 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275property"]("formattingSources", core["\u0275\u0275pureFunction0"](6, mobile_visual_formatting_component_c0))("showPivot", !0)("indicatorEnabled", !0)("mobileFormatting", !0)("disabledCards", ctx_r9.disabledCards)("disabledSlices", ctx_r9.disabledSlices);
            }
        }
        function MobileVisualFormattingPaneComponent_article_0_div_9_div_5_mobile_empty_formatting_pane_legacy_svg_1_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "mobile-empty-formatting-pane-legacy-svg", 23);
        }
        function MobileVisualFormattingPaneComponent_article_0_div_9_div_5_mobile_empty_formatting_pane_svg_2_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "mobile-empty-formatting-pane-svg", 23);
        }
        function MobileVisualFormattingPaneComponent_article_0_div_9_div_5_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 20), core["\u0275\u0275template"](1, MobileVisualFormattingPaneComponent_article_0_div_9_div_5_mobile_empty_formatting_pane_legacy_svg_1_Template, 1, 0, "mobile-empty-formatting-pane-legacy-svg", 21), 
            core["\u0275\u0275template"](2, MobileVisualFormattingPaneComponent_article_0_div_9_div_5_mobile_empty_formatting_pane_svg_2_Template, 1, 0, "mobile-empty-formatting-pane-svg", 21), 
            core["\u0275\u0275element"](3, "span", 22), core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r10 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !ctx_r10.useModernFormatPane), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx_r10.useModernFormatPane);
            }
        }
        function MobileVisualFormattingPaneComponent_article_0_div_9_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 11), core["\u0275\u0275template"](1, MobileVisualFormattingPaneComponent_article_0_div_9_mobile_formatting_tab_1_Template, 1, 1, "mobile-formatting-tab", 12), 
            core["\u0275\u0275elementStart"](2, "section", 13), core["\u0275\u0275template"](3, MobileVisualFormattingPaneComponent_article_0_div_9_property_pane_legacy_3_Template, 1, 4, "property-pane-legacy", 14), 
            core["\u0275\u0275template"](4, MobileVisualFormattingPaneComponent_article_0_div_9_formatting_pane_lazy_4_Template, 1, 7, "formatting-pane-lazy", 15), 
            core["\u0275\u0275template"](5, MobileVisualFormattingPaneComponent_article_0_div_9_div_5_Template, 4, 2, "div", 16), 
            core["\u0275\u0275elementEnd"]()()), 2 & rf) {
                var ctx_r3 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !ctx_r3.useModernFormatPane), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", !ctx_r3.useModernFormatPane && ctx_r3.visualSelected()), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx_r3.useModernFormatPane && ctx_r3.visualSelected()), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !ctx_r3.visualSelected());
            }
        }
        var mobile_visual_formatting_component_c1 = function(a0) {
            return {
                isCollapsed: a0
            };
        }, mobile_visual_formatting_component_c2 = function(a0) {
            return {
                isCollapsed: a0
            };
        };
        function MobileVisualFormattingPaneComponent_article_0_Template(rf, ctx) {
            if (1 & rf) {
                var _r18 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "article", 1)(1, "div", 2)(2, "button", 3), 
                core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r18);
                    var ctx_r17 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r17.toggle());
                }), core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275element"](4, "div", 4), 
                core["\u0275\u0275template"](5, MobileVisualFormattingPaneComponent_article_0_div_5_Template, 2, 3, "div", 5), 
                core["\u0275\u0275element"](6, "div", 6), core["\u0275\u0275elementStart"](7, "div", 7), 
                core["\u0275\u0275element"](8, "span", 8), core["\u0275\u0275elementEnd"]()()(), 
                core["\u0275\u0275template"](9, MobileVisualFormattingPaneComponent_article_0_div_9_Template, 6, 4, "div", 9), 
                core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var paneVisibility_r1 = ctx.ngIf;
                core["\u0275\u0275property"]("ngClass", core["\u0275\u0275pureFunction1"](11, mobile_visual_formatting_component_c1, !paneVisibility_r1.isPaneExpanded)), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngClass", core["\u0275\u0275pureFunction1"](13, mobile_visual_formatting_component_c2, !paneVisibility_r1.isPaneExpanded)), 
                core["\u0275\u0275attribute"]("aria-label", core["\u0275\u0275pipeBind1"](3, 9, "VisualizationPane_Title"))("aria-expanded", !!paneVisibility_r1.isPaneExpanded), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngClass", paneVisibility_r1.isPaneExpanded ? "pbi-glyph-doublechevronright " : "pbi-glyph-doublechevrondown "), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", paneVisibility_r1.isPaneExpanded && (null == paneVisibility_r1.optionsSetting ? null : paneVisibility_r1.optionsSetting.showOptions)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("hidden", !paneVisibility_r1.isPaneExpanded), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("hidden", paneVisibility_r1.isPaneExpanded), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", paneVisibility_r1.isPaneExpanded);
            }
        }
        var MobileVisualFormattingPaneComponent = function() {
            function MobileVisualFormattingPaneComponent(featureSwitchService, highContrastCssGenerationService, telemetryService, selectionService, tutorialPopupService, localizationService, dialogService, panesVisibilityService, pbiMenuService, mobileVisualFormattingSettingsService) {
                var _a, _b, _this = this;
                this.featureSwitchService = featureSwitchService, this.highContrastCssGenerationService = highContrastCssGenerationService, 
                this.telemetryService = telemetryService, this.selectionService = selectionService, 
                this.tutorialPopupService = tutorialPopupService, this.localizationService = localizationService, 
                this.dialogService = dialogService, this.panesVisibilityService = panesVisibilityService, 
                this.pbiMenuService = pbiMenuService, this.mobileVisualFormattingSettingsService = mobileVisualFormattingSettingsService, 
                this.showTutorial = !1, this.excludeObjectRepetition = [ "visualHeader", "visualHeaderTooltip" ], 
                this.disabledSliceTypes = [ "image", "geoJson" ], this.onDestroy$ = new Subject.xQ, 
                this.paneVisibility$ = this.panesVisibilityService.getPanes$().pipe((0, takeUntil.R)(this.onDestroy$), (0, 
                map.U)(function(panes) {
                    return panes.format;
                }));
                var disabledCardReason = this.localizationService.get("MobileFormatting_Card_DisabledReason");
                this.disabledCards = ((_a = {}).headerIcons = {
                    disabledReason: disabledCardReason
                }, _a.visualLevelFieldsFormat = {
                    disabledReason: disabledCardReason
                }, _a);
                var disabledSliceReason = this.localizationService.get("MobileFormatting_Slice_DisabledReason");
                this.disabledSlices = ((_b = {}).ConditionalFormattingControl = {
                    disabledReason: disabledSliceReason
                }, _b.ImageUpload = {
                    disabledReason: disabledSliceReason
                }, _b.ShapeMapSelector = {
                    disabledReason: disabledSliceReason
                }, _b.ToggleSwitch = {
                    disabledReason: disabledSliceReason,
                    filterUid: [ "slicerSettings-selection-strictSingleSelect", "slicerSettings-selection-singleSelect", "slicerSettings-selection-selectAllCheckboxEnabled" ]
                }, _b), this.featureSwitchService.getFeatureSwitches().then(function(fs) {
                    if (_this.useModernFormatPane = fs.useModernFormatPane, !_this.featureSwitchService.featureSwitches.interactiveMobileCanvas) {
                        var toggleSlice = _this.disabledSlices.ToggleSwitch;
                        toggleSlice ? toggleSlice.filterUid.push("columnHeaders-options-autoSizeColumnWidth") : toggleSlice = {
                            disabledReason: disabledSliceReason,
                            filterUid: [ "columnHeaders-options-autoSizeColumnWidth" ]
                        };
                    }
                }), this.initializeHighContrastRules();
            }
            return MobileVisualFormattingPaneComponent.prototype.ngOnDestroy = function() {
                this.onDestroy$.next(), this.onDestroy$.complete();
            }, MobileVisualFormattingPaneComponent.prototype.ngAfterContentInit = function() {
                this.showMobileAuthoringVisualizationsTutorialIfNeeded();
            }, MobileVisualFormattingPaneComponent.prototype.toggle = function() {
                this.panesVisibilityService.togglePaneExpansion("format");
            }, MobileVisualFormattingPaneComponent.prototype.onOptionsClick = function(event, optionsSetting) {
                event.stopPropagation(), (0, pbi_pane_component.cc)(event, optionsSetting, this.pbiMenuService);
            }, MobileVisualFormattingPaneComponent.prototype.visualSelected = function() {
                var _a, selectedItem = selectionUtils.UP.getSelectedCanvasItem(this.selectionService);
                return !!(null === (_a = null == selectedItem ? void 0 : selectedItem.layouts) || void 0 === _a ? void 0 : _a.withId(1));
            }, MobileVisualFormattingPaneComponent.prototype.onPropertyChanged = function(propertyChangedArgs) {
                this.showModalOnPanePropertyChange(), this.telemetryService.logEvent(telemetry_events.wb, {
                    visualType: propertyChangedArgs.visualType,
                    cardName: propertyChangedArgs.cardName,
                    sliceName: propertyChangedArgs.sliceName,
                    visualUniqueName: propertyChangedArgs.visualUniqueName
                });
            }, MobileVisualFormattingPaneComponent.prototype.showMobileAuthoringVisualizationsTutorialIfNeeded = function() {
                this.showTutorial && this.tutorialPopupService.startTutorial && this.tutorialPopupService.startTutorial(this.createDiagramTutorialModel());
            }, MobileVisualFormattingPaneComponent.prototype.createDiagramTutorialModel = function() {
                var itemKey = "MobileAuthoringVisualizations";
                return {
                    itemKeys: [ itemKey ],
                    items: {
                        MobileAuthoringVisualizations: {
                            title: this.localizationService.get("MobileAuthoring_Visualizations_TutorialTitle"),
                            text: this.localizationService.get("Mobile_Authoring_Formatting_NewFeature_Description"),
                            buttonLabel: this.localizationService.get("TutorialPopup_GotIt"),
                            canShow: function() {
                                return !!$(".paneHeader");
                            },
                            attachTo: function() {
                                return $(".paneHeader");
                            },
                            arrowOffset: {
                                top: -8,
                                left: 0
                            },
                            showWhenUnclickable: !0,
                            dataStoreKey: itemKey,
                            customClass: "tutorial-fluent-design-container"
                        }
                    }
                };
            }, MobileVisualFormattingPaneComponent.prototype.showModalOnPanePropertyChange = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.mobileVisualFormattingSettingsService.isFormattingChangeDialogShown() ];

                          case 1:
                            return _a.sent() ? [ 3, 4 ] : [ 4, this.dialogService.showSimpleInfoDialog({
                                title: this.localizationService.get("MobileVisualFormattingEditDialog_Title"),
                                message: this.localizationService.get("MobileVisualFormattingEditDialog_Body"),
                                okButtonText: this.localizationService.get("ModalDialogButtonText_GotIt")
                            }, {
                                width: "500px"
                            }).afterClosed().toPromise() ];

                          case 2:
                            return _a.sent(), [ 4, this.mobileVisualFormattingSettingsService.markFormattingChangeDialogShown() ];

                          case 3:
                            _a.sent(), _a.label = 4;

                          case 4:
                            return [ 2 ];
                        }
                    });
                });
            }, MobileVisualFormattingPaneComponent.prototype.initializeHighContrastRules = function() {
                this.highContrastCssGenerationService.addRule(".themeableElement .change-indicator-icon svg", "{ fill: @foregroundColor !important; }");
            }, MobileVisualFormattingPaneComponent.\u0275fac = function(t) {
                return new (t || MobileVisualFormattingPaneComponent)(core["\u0275\u0275directiveInject"](feature_switch_service.vZ), core["\u0275\u0275directiveInject"](high_contrast_css_generation_service.g), core["\u0275\u0275directiveInject"](Telemetry.y0), core["\u0275\u0275directiveInject"](selection_service.z), core["\u0275\u0275directiveInject"](tutorial_pop_up_service.yU), core["\u0275\u0275directiveInject"](localization_service.o), core["\u0275\u0275directiveInject"](dialog_service.x), core["\u0275\u0275directiveInject"](panes_visibility_service.r), core["\u0275\u0275directiveInject"](pbi_menu_service.o), core["\u0275\u0275directiveInject"](mobileVisualFormattingSettings.P));
            }, MobileVisualFormattingPaneComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: MobileVisualFormattingPaneComponent,
                selectors: [ [ "mobile-visual-formatting-pane" ] ],
                inputs: {
                    showTutorial: "showTutorial"
                },
                features: [ core["\u0275\u0275ProvidersFeature"]((0, tslib_es6.__spreadArray)([ {
                    provide: constants.Ol,
                    useClass: MobilePropertyChangeIndicatorService
                }, {
                    provide: formattingObjectDefinitionsService.h,
                    useClass: MobileFormattingPaneObjectDefinitionsService
                }, {
                    provide: formatting_contracts.Kj,
                    useClass: MobileSliceCustomizationService
                } ], scoped_services.H, !0)) ],
                decls: 2,
                vars: 3,
                consts: [ [ "keyboard-shortcuts", "ctrl-F6", "focus-nav-mode", "Group", "focus-priority", "7", 3, "ngClass", 4, "ngIf" ], [ "keyboard-shortcuts", "ctrl-F6", "focus-nav-mode", "Group", "focus-priority", "7", 3, "ngClass" ], [ 1, "paneHeader" ], [ "localizeTooltip", "Pane_Toggle", 1, "btn", "toggleBtn", 3, "ngClass", "click" ], [ 1, "btnIcon", "glyphicon", "glyph-mini", 3, "ngClass" ], [ "class", "btnIcon glyphicon glyph-small pbi-glyph-more", 3, "pbiTooltip", "click", 4, "ngIf" ], [ "localize", "VisualizationPane_Title", 1, "sidePaneHorizontalTitle", "unselectable", "sidePaneTitle", "largeFontSize", "trimmedTextWithEllipsis", 3, "hidden" ], [ 1, "verticalTitle", "verticalText", 3, "hidden" ], [ "localize", "VisualizationPane_Title", 1, "collapsedVisualsTitle", "largeFontSize" ], [ "class", "paneContents flex", 4, "ngIf" ], [ 1, "btnIcon", "glyphicon", "glyph-small", "pbi-glyph-more", 3, "pbiTooltip", "click" ], [ 1, "paneContents", "flex" ], [ 3, "useModernFormatPane", 4, "ngIf" ], [ "focus-nav-mode", "Browser", 1, "lazy-load-wrapper", "stretch", "item-fill" ], [ "role", "application", 3, "showChangeIndication", "excludeObjectRepetition", "excludeConditionalFormattingCard", "disabledSliceTypes", "propertyChanged", 4, "ngIf" ], [ 3, "formattingSources", "showPivot", "indicatorEnabled", "mobileFormatting", "disabledCards", "disabledSlices", "propertyChanged", 4, "ngIf" ], [ "class", "empty-pane", 4, "ngIf" ], [ 3, "useModernFormatPane" ], [ "role", "application", 3, "showChangeIndication", "excludeObjectRepetition", "excludeConditionalFormattingCard", "disabledSliceTypes", "propertyChanged" ], [ 3, "formattingSources", "showPivot", "indicatorEnabled", "mobileFormatting", "disabledCards", "disabledSlices", "propertyChanged" ], [ 1, "empty-pane" ], [ "class", "empty-pane-svg", 4, "ngIf" ], [ "localize", "Mobile_Authoring_Formatting_Empty", 1, "empty-pane-text" ], [ 1, "empty-pane-svg" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275template"](0, MobileVisualFormattingPaneComponent_article_0_Template, 10, 15, "article", 0), 
                    core["\u0275\u0275pipe"](1, "async")), 2 & rf && core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](1, 1, ctx.paneVisibility$));
                },
                dependencies: [ common.NgClass, common.NgIf, localize_directive.X, localize_tooltip_directive.r, formatting_pane_lazy_component.u, keyboard_shortcuts_directive.q, pbi_tooltip_directive.V, MobileEmptyFormattingPaneSvgComponent, MobileEmptyFormattingPaneLegacySvgComponent, MobileFormattingTabComponent, PropertyPaneLegacyComponent, common.AsyncPipe, localize_pipe.F ],
                styles: [ '.paneHeader[_ngcontent-%COMP%]   .sidePaneHorizontalTitle[_ngcontent-%COMP%]{margin:12px 0 0 12px}.paneHeader[_ngcontent-%COMP%]   .btnIcon[_ngcontent-%COMP%]{margin:10px 8px 0 0}.paneContents[_ngcontent-%COMP%]{justify-content:flex-start}.paneContents[_ngcontent-%COMP%]   mobile-formatting-tab[_ngcontent-%COMP%]{width:100%}.paneContents[_ngcontent-%COMP%]   formatting-pane-lazy[_ngcontent-%COMP%]{display:flex;flex-grow:1;flex-direction:column}.paneContents[_ngcontent-%COMP%]   .empty-pane[_ngcontent-%COMP%]{display:flex;flex-basis:100%;flex-wrap:wrap;align-items:center;padding:0 20px;text-align:center;align-content:center;justify-content:center;font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--sm-font-size, 12px);font-weight:var(--font-weight-regular, 400)}.paneContents[_ngcontent-%COMP%]   .empty-pane[_ngcontent-%COMP%]   .empty-pane-svg[_ngcontent-%COMP%]{margin-bottom:10px}.paneContents[_ngcontent-%COMP%]   .empty-pane[_ngcontent-%COMP%]   .empty-pane-text[_ngcontent-%COMP%]{flex-basis:100%;padding:5px 20px}.paneContents[_ngcontent-%COMP%]   .empty-pane[_ngcontent-%COMP%]   .empty-pane-text.empty-pane-text-bold[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--sm-font-size, 12px);font-weight:var(--font-weight-semi-bold, 600)}.paneContents[_ngcontent-%COMP%]   .lazy-load-wrapper[_ngcontent-%COMP%]{position:relative;flex-direction:column}' ]
            }), MobileVisualFormattingPaneComponent;
        }(), formatting_utils = __webpack_require__(78432), textbox_capabilities = __webpack_require__(57869), rx_component = __webpack_require__(73221), visual_authoring_service = __webpack_require__(66890), accessible_click_directive = __webpack_require__(44581), pbi_icon_component = __webpack_require__(86663);
        function TextboxFormattingSettingsComponent_ng_container_1_span_1_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275element"](0, "span", 7), core["\u0275\u0275pipe"](1, "localize"), 
            core["\u0275\u0275pipe"](2, "localize"), core["\u0275\u0275pipe"](3, "localize")), 
            2 & rf && (core["\u0275\u0275property"]("pbiTooltip", core["\u0275\u0275pipeBind1"](1, 3, "MobileFormatting_ChangeIndicator_SliceTooltip"))("aria-label", core["\u0275\u0275pipeBind1"](2, 5, "Mobile_Authoring_Formatting_Change_Indicator")), 
            core["\u0275\u0275attribute"]("aria-description", core["\u0275\u0275pipeBind1"](3, 7, "MobileFormatting_ChangeIndicator_SliceTooltip")));
        }
        function TextboxFormattingSettingsComponent_ng_container_1_tri_svg_icon_2_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275element"](0, "tri-svg-icon", 8), core["\u0275\u0275pipe"](1, "localize"), 
            core["\u0275\u0275pipe"](2, "localize"), core["\u0275\u0275pipe"](3, "localize")), 
            2 & rf && (core["\u0275\u0275property"]("pbiTooltip", core["\u0275\u0275pipeBind1"](1, 3, "MobileFormatting_ChangeIndicator_SliceTooltip"))("aria-label", core["\u0275\u0275pipeBind1"](2, 5, "Mobile_Authoring_Formatting_Change_Indicator")), 
            core["\u0275\u0275attribute"]("aria-description", core["\u0275\u0275pipeBind1"](3, 7, "MobileFormatting_ChangeIndicator_SliceTooltip")));
        }
        function TextboxFormattingSettingsComponent_ng_container_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, TextboxFormattingSettingsComponent_ng_container_1_span_1_Template, 4, 9, "span", 5), 
            core["\u0275\u0275template"](2, TextboxFormattingSettingsComponent_ng_container_1_tri_svg_icon_2_Template, 4, 9, "tri-svg-icon", 6), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !ctx_r0.isTridentEnabled), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx_r0.isTridentEnabled);
            }
        }
        var textbox_formatting_settings_component_commonGlobals = window, TextboxFormattingSettingsComponent = function(_super) {
            function TextboxFormattingSettingsComponent(propertyChangeIndicatorService, formattingObjectDefinitionsService, visualAuthoring) {
                var _this = _super.call(this) || this;
                return _this.propertyChangeIndicatorService = propertyChangeIndicatorService, _this.formattingObjectDefinitionsService = formattingObjectDefinitionsService, 
                _this.visualAuthoring = visualAuthoring, _this.isTridentEnabled = textbox_formatting_settings_component_commonGlobals.isTrident, 
                _this.showChangeIndicator$ = new BehaviorSubject.X(!1), _this.textboxDescriptors = [], 
                Object.values(textbox_capabilities.RL).forEach(function(prop) {
                    Object.values(prop).forEach(function(descriptor) {
                        return _this.textboxDescriptors.push(descriptor);
                    });
                }), _this;
            }
            return (0, tslib_es6.__extends)(TextboxFormattingSettingsComponent, _super), TextboxFormattingSettingsComponent.prototype.ngOnInit = function() {
                var _this = this;
                debug.fF.assertValue(this.onSaveState$, "onSaveState$"), this.onSaveState$.pipe((0, 
                takeUntil.R)(this.onDestroy$)).subscribe(function() {
                    return _this.showChangeIndicator();
                });
            }, TextboxFormattingSettingsComponent.prototype.showChangeIndicator = function() {
                var _this = this, visualObjects = this.formattingObjectDefinitionsService.getObjectDefinitions(this.visualContainer), valueChange = visualObjects && _.some(this.textboxDescriptors, function(desc) {
                    return _this.propertyChangeIndicatorService.shouldShowSliceChangeIndicator(desc, visualObjects);
                });
                this.showChangeIndicator$.next(valueChange);
            }, TextboxFormattingSettingsComponent.prototype.revertToDefault = function() {
                var visualObjects = this.visualContainer.config.singleVisual.objects;
                visualObjects && ((0, formatting_utils.Aw)(visualObjects, this.textboxDescriptors), 
                this.visualAuthoring.raiseVisualContainerChanged(this.visualContainer), this.showChangeIndicator());
            }, TextboxFormattingSettingsComponent.\u0275fac = function(t) {
                return new (t || TextboxFormattingSettingsComponent)(core["\u0275\u0275directiveInject"](MobilePropertyChangeIndicatorService), core["\u0275\u0275directiveInject"](MobileFormattingPaneObjectDefinitionsService), core["\u0275\u0275directiveInject"](visual_authoring_service.$8));
            }, TextboxFormattingSettingsComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: TextboxFormattingSettingsComponent,
                selectors: [ [ "textbox-formatting-settings" ] ],
                inputs: {
                    onSaveState$: "onSaveState$",
                    visualContainer: "visualContainer"
                },
                features: [ core["\u0275\u0275ProvidersFeature"]([ MobilePropertyChangeIndicatorService, MobileFormattingPaneObjectDefinitionsService ]), core["\u0275\u0275InheritDefinitionFeature"] ],
                decls: 11,
                vars: 20,
                consts: [ [ "focus-nav-mode", "Group", 1, "textboxFormattingSettingsContainer" ], [ 4, "ngIf" ], [ 1, "reset-button", 3, "tabindex", "pbiTooltip", "accessible-click" ], [ "name", "reset", "size", "mini", 1, "reset-icon" ], [ 3, "localize" ], [ "class", "change-indicator-icon glyphicon glyph-mini pbi-glyph-phone-optimized-report", "role", "img", "tabindex", "0", 3, "pbiTooltip", "aria-label", 4, "ngIf" ], [ "sprite", "authoring-icons", "name", "data_bar_vertical_phone_16_regular", "class", "change-indicator-icon", "role", "img", "tabindex", "0", 3, "pbiTooltip", "aria-label", 4, "ngIf" ], [ "role", "img", "tabindex", "0", 1, "change-indicator-icon", "glyphicon", "glyph-mini", "pbi-glyph-phone-optimized-report", 3, "pbiTooltip", "aria-label" ], [ "sprite", "authoring-icons", "name", "data_bar_vertical_phone_16_regular", "role", "img", "tabindex", "0", 1, "change-indicator-icon", 3, "pbiTooltip", "aria-label" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementStart"](0, "div", 0), core["\u0275\u0275template"](1, TextboxFormattingSettingsComponent_ng_container_1_Template, 3, 2, "ng-container", 1), 
                    core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275elementStart"](3, "button", 2), 
                    core["\u0275\u0275listener"]("accessible-click", function() {
                        return ctx.revertToDefault();
                    }), core["\u0275\u0275pipe"](4, "async"), core["\u0275\u0275pipe"](5, "async"), 
                    core["\u0275\u0275pipe"](6, "async"), core["\u0275\u0275pipe"](7, "localize"), core["\u0275\u0275pipe"](8, "localize"), 
                    core["\u0275\u0275element"](9, "pbi-icon", 3)(10, "span", 4), core["\u0275\u0275elementEnd"]()()), 
                    2 & rf && (core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](2, 8, ctx.showChangeIndicator$)), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275classProp"]("disabled", !core["\u0275\u0275pipeBind1"](4, 10, ctx.showChangeIndicator$)), 
                    core["\u0275\u0275propertyInterpolate"]("tabindex", core["\u0275\u0275pipeBind1"](6, 14, ctx.showChangeIndicator$) ? 0 : -1), 
                    core["\u0275\u0275property"]("pbiTooltip", core["\u0275\u0275pipeBind1"](7, 16, "Visual_RevertToDesktop_Tooltip")), 
                    core["\u0275\u0275attribute"]("aria-disabled", !core["\u0275\u0275pipeBind1"](5, 12, ctx.showChangeIndicator$))("aria-label", core["\u0275\u0275pipeBind1"](8, 18, "Visual_RevertToDesktop_Tooltip")), 
                    core["\u0275\u0275advance"](7), core["\u0275\u0275property"]("localize", "Reset_All_Settings_Mobile"));
                },
                dependencies: [ common.NgIf, localize_directive.X, accessible_click_directive.t, pbi_icon_component._, pbi_tooltip_directive.V, tri_svg_icon_component.M, common.AsyncPipe, localize_pipe.F ],
                styles: [ '.textboxFormattingSettingsContainer[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center}.textboxFormattingSettingsContainer[_ngcontent-%COMP%]   .change-indicator-icon[_ngcontent-%COMP%]{padding:8px 8px 8px 16px;fill:var(--gray-160, #323130)}.textboxFormattingSettingsContainer[_ngcontent-%COMP%]   .reset-button[_ngcontent-%COMP%]{cursor:pointer;font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--sm-font-size, 12px);font-weight:var(--font-weight-regular, 400);align-items:center;background:inherit;display:flex;height:36px}html:not([dir="rtl"])[_nghost-%COMP%]   .textboxFormattingSettingsContainer[_ngcontent-%COMP%]   .reset-button[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .textboxFormattingSettingsContainer[_ngcontent-%COMP%]   .reset-button[_ngcontent-%COMP%]{margin-left:auto}html[dir="rtl"][_nghost-%COMP%]   .textboxFormattingSettingsContainer[_ngcontent-%COMP%]   .reset-button[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .textboxFormattingSettingsContainer[_ngcontent-%COMP%]   .reset-button[_ngcontent-%COMP%]{margin-right:auto}html:not([dir="rtl"])[_nghost-%COMP%]   .textboxFormattingSettingsContainer[_ngcontent-%COMP%]   .reset-button[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .textboxFormattingSettingsContainer[_ngcontent-%COMP%]   .reset-button[_ngcontent-%COMP%]{padding-right:8px}html[dir="rtl"][_nghost-%COMP%]   .textboxFormattingSettingsContainer[_ngcontent-%COMP%]   .reset-button[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .textboxFormattingSettingsContainer[_ngcontent-%COMP%]   .reset-button[_ngcontent-%COMP%]{padding-left:8px}html:not([dir="rtl"])[_nghost-%COMP%]   .textboxFormattingSettingsContainer[_ngcontent-%COMP%]   .reset-button[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .textboxFormattingSettingsContainer[_ngcontent-%COMP%]   .reset-button[_ngcontent-%COMP%]{padding-left:2px}html[dir="rtl"][_nghost-%COMP%]   .textboxFormattingSettingsContainer[_ngcontent-%COMP%]   .reset-button[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .textboxFormattingSettingsContainer[_ngcontent-%COMP%]   .reset-button[_ngcontent-%COMP%]{padding-right:2px}.textboxFormattingSettingsContainer[_ngcontent-%COMP%]   .reset-button[_ngcontent-%COMP%]   .reset-icon[_ngcontent-%COMP%]{color:var(--fluent-theme-link-darker-color, #005A9E)}html:not([dir="rtl"])[_nghost-%COMP%]   .textboxFormattingSettingsContainer[_ngcontent-%COMP%]   .reset-button[_ngcontent-%COMP%]   .reset-icon[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .textboxFormattingSettingsContainer[_ngcontent-%COMP%]   .reset-button[_ngcontent-%COMP%]   .reset-icon[_ngcontent-%COMP%]{margin-right:6px}html[dir="rtl"][_nghost-%COMP%]   .textboxFormattingSettingsContainer[_ngcontent-%COMP%]   .reset-button[_ngcontent-%COMP%]   .reset-icon[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .textboxFormattingSettingsContainer[_ngcontent-%COMP%]   .reset-button[_ngcontent-%COMP%]   .reset-icon[_ngcontent-%COMP%]{margin-left:6px}.textboxFormattingSettingsContainer[_ngcontent-%COMP%]   .reset-button.disabled[_ngcontent-%COMP%]{pointer-events:none;color:var(--gray-90, #A19F9D)}.textboxFormattingSettingsContainer[_ngcontent-%COMP%]   .reset-button.disabled[_ngcontent-%COMP%]   .reset-icon[_ngcontent-%COMP%]{color:var(--gray-90, #A19F9D)}html[data-focus-source="key"][_nghost-%COMP%]   .textboxFormattingSettingsContainer[_ngcontent-%COMP%]   .reset-button[_ngcontent-%COMP%]:focus, html[data-focus-source="key"]   [_nghost-%COMP%]   .textboxFormattingSettingsContainer[_ngcontent-%COMP%]   .reset-button[_ngcontent-%COMP%]:focus{outline:var(--focus-two-tone-outline-definition, auto 1px);outline-color:var(--focus-two-tone-outline-color, -webkit-focus-ring-color)}.textboxFormattingSettingsContainer[_ngcontent-%COMP%]   .reset-button[_ngcontent-%COMP%]:hover{color:var(--fluent-theme-link-darker-color, #005A9E)}.textboxFormattingSettingsContainer[_ngcontent-%COMP%]   .reset-button[_ngcontent-%COMP%]:active{background-color:var(--fluent-theme-neutral-quarter-alt-color, #E1DFDD)}' ]
            }), TextboxFormattingSettingsComponent;
        }(rx_component.w), a11y_module = __webpack_require__(20914), ExploreUI_module = __webpack_require__(87121), explore_ui_authoring_eager_module = __webpack_require__(20993), pane_formatting_eager_module = __webpack_require__(42101), ExploreUIThumbnail_module = __webpack_require__(14029), lazy_load_module = __webpack_require__(82156), localization_module = __webpack_require__(79061), pbi_scrollbar_module = __webpack_require__(72359), UILibrary_module = __webpack_require__(94785), pbi_feature_switch_module = __webpack_require__(23612), pbi_icon_module = __webpack_require__(93367), pbi_menu_module = __webpack_require__(94841), pbi_svg_use_symbol_module = __webpack_require__(79725), pbi_tooltip_module = __webpack_require__(16095), tri_svg_icon = __webpack_require__(17177), layout_insertion_helper_service = __webpack_require__(36244), Explore_constants = __webpack_require__(57871), ExploreUI_constants = __webpack_require__(55133), plugins = __webpack_require__(47508), slicer_capabilities = __webpack_require__(9434), VisualHostCore_constants = __webpack_require__(15702), FilteredVisualTypes = [ plugins.L.actionButton.name, plugins.L.image.name, plugins.L.shape.name, plugins.L.basicShape.name ], SmallVisualsTypes = new Set([ plugins.L.card.name, plugins.L.kpi.name, plugins.L.actionButton.name, plugins.L.gauge.name, plugins.L.multiRowCard.name, plugins.L.cardVisual.name, "dropdownSlicer" ]), UnstretchedTypes = new Set([ plugins.L.image.name, plugins.L.actionButton.name, plugins.L.basicShape.name, plugins.L.shape.name ]), MinHeightMap = new Map([ [ VisualHostCore_constants.Jo, 270 ], [ plugins.L.azureMap.name, 270 ], [ plugins.L.decompositionTreeVisual.name, 270 ], [ plugins.L.filledMap.name, 270 ], [ plugins.L.keyDriversVisual.name, 270 ], [ plugins.L.map.name, 270 ], [ plugins.L.matrix.name, 370 ], [ plugins.L.pivotTable.name, 370 ], [ plugins.L.multiRowCard.name, 100 ], [ plugins.L.rdlVisual.name, 270 ], [ plugins.L.shapeMap.name, 270 ], [ plugins.L.table.name, 370 ], [ plugins.L.tableEx.name, 370 ], [ plugins.L.hundredPercentStackedBarChart.name, 180 ], [ plugins.L.hundredPercentStackedColumnChart.name, 180 ], [ plugins.L.areaChart.name, 180 ], [ plugins.L.clusteredBarChart.name, 180 ], [ plugins.L.clusteredColumnChart.name, 180 ], [ plugins.L.donutChart.name, 180 ], [ plugins.L.funnel.name, 180 ], [ plugins.L.lineClusteredColumnComboChart.name, 180 ], [ plugins.L.lineStackedColumnComboChart.name, 180 ], [ plugins.L.lineChart.name, 180 ], [ plugins.L.scorecard.name, 180 ], [ plugins.L.pieChart.name, 180 ], [ plugins.L.pythonVisual.name, 180 ], [ plugins.L.qnaVisual.name, 180 ], [ plugins.L.scriptVisual.name, 180 ], [ plugins.L.ribbonChart.name, 180 ], [ plugins.L.scatterChart.name, 180 ], [ plugins.L.stackedAreaChart.name, 180 ], [ plugins.L.hundredPercentStackedAreaChart.name, 180 ], [ plugins.L.barChart.name, 180 ], [ plugins.L.columnChart.name, 180 ], [ plugins.L.treemap.name, 270 ], [ plugins.L.waterfallChart.name, 270 ], [ plugins.L.actionButton.name, 40 ], [ plugins.L.textbox.name, 40 ], [ plugins.L.card.name, 100 ], [ plugins.L.cardVisual.name, 100 ], [ plugins.L.gauge.name, 100 ], [ plugins.L.kpi.name, 100 ], [ plugins.L.basicShape.name, 40 ], [ plugins.L.shape.name, 40 ], [ plugins.L.bookmarkNavigator.name, 60 ], [ plugins.L.pageNavigator.name, 60 ], [ plugins.L.bookmarkNavigator.name, 50 ], [ plugins.L.pageNavigator.name, 50 ], [ plugins.L.slicer.name, 100 ], [ "listSlicer", 180 ], [ "continuousSlicer", 100 ], [ "singleSlicer", 100 ], [ "relativeSlicer", 80 ], [ "dropdownSlicer", 60 ], [ "basic", 100 ] ]);
        function convertSlicerType(candidate) {
            var mode, dataObjects = candidate.config.singleVisual.objects[slicer_capabilities.gO.data.mode.objectName];
            if (!_.isEmpty(dataObjects)) for (var _i = 0, dataObjects_1 = dataObjects; _i < dataObjects_1.length; _i++) mode = dataObjects_1[_i].properties[slicer_capabilities.gO.data.mode.propertyName];
            if (!mode) return plugins.L.slicer.name;
            switch (mode.value) {
              case slicerMode.j6:
                return "dropdownSlicer";

              case slicerMode.K8:
              case slicerMode.GV:
                return "relativeSlicer";

              case slicerMode.bb:
              case slicerMode.e4:
              case slicerMode.vX:
                return "continuousSlicer";

              case slicerMode.of:
              case slicerMode.Ih:
                return "listSlicer";

              case slicerMode.Zr:
                return "singleSlicer";

              case slicerMode.RB:
                return "basic";

              default:
                return plugins.L.slicer.name;
            }
        }
        var TopOfMasterScreenThreshold = .05 * Explore_constants.LU, CanvasRect = {
            x: 0,
            y: 0,
            width: ExploreUI_constants.Co,
            height: ExploreUI_constants.aW
        }, MobileAutoLayoutLazyProvider = {
            provide: "mobileAutoLayoutService",
            useFactory: function(layoutInsertionHelperService) {
                return new Promise(function(resolve) {
                    resolve(new MobileAutoLayoutService(layoutInsertionHelperService));
                });
            },
            deps: [ layout_insertion_helper_service.m ]
        }, MobileAutoLayoutService = function() {
            function MobileAutoLayoutService(layoutInsertionHelperService) {
                this.layoutInsertionHelperService = layoutInsertionHelperService;
            }
            return MobileAutoLayoutService.prototype.createAutoMobileLayout = function(section, options) {
                var clonedVisualContainerGroups = _.cloneDeep(section.visualContainerGroups), unsortedVisuals = this.internalTraverseGroup(clonedVisualContainerGroups), candidates = this.sortAndFilterVisualCandidates(unsortedVisuals);
                this.findContainedVisuals(candidates);
                for (var containingVisuals = _.filter(candidates, function(candidate) {
                    return !candidate.isContained;
                }), _i = 0, containingVisuals_1 = containingVisuals; _i < containingVisuals_1.length; _i++) {
                    var candidate = containingVisuals_1[_i];
                    candidate.containingRect = this.getContainingRectangle(candidate);
                }
                return this.applyCandidatesPosition(candidates, containingVisuals, options, 1), 
                candidates;
            }, MobileAutoLayoutService.prototype.applyCandidatesPosition = function(candidates, candidatesToPosition, options, timesApplyPositiontCalled) {
                for (var _i = 0, candidatesToPosition_1 = candidatesToPosition; _i < candidatesToPosition_1.length; _i++) {
                    var candidate = candidatesToPosition_1[_i], targetRects = this.findAllAvailableSpaces(candidates);
                    if (this.positionCandidate(candidate, targetRects, options), candidate.layouts.length > 1) for (var _a = 0, _b = candidate.containedVisuals; _a < _b.length; _a++) this.positionContainedVisual(_b[_a], candidate, options);
                }
                this.revisitLayout(candidates, candidatesToPosition, timesApplyPositiontCalled, options);
            }, MobileAutoLayoutService.prototype.revisitLayout = function(candidates, candidatesToPosition, timesApplyPositiontCalled, options) {
                for (var _this = this, _loop_1 = function(candidate) {
                    if (candidate.layouts.length <= 1) return "continue";
                    var type = candidate.config.singleVisual.visualType, mobileLayout = this_1.getPositionRectangle(candidate, 1);
                    if (!UnstretchedTypes.has(type) && 0 === candidate.containedVisuals.length && Math.ceil(mobileLayout.width + mobileLayout.x) < CanvasRect.width) {
                        var otherCandidates = _.filter(candidatesToPosition, function(otherCandidate) {
                            return otherCandidate.name !== candidate.name && otherCandidate.layouts.length > 1;
                        });
                        if (0 === _.filter(otherCandidates, function(otherCandidate) {
                            var otherCandidateMobileLayout = _this.getPositionRectangle(otherCandidate, 1);
                            return (null == otherCandidateMobileLayout ? void 0 : otherCandidateMobileLayout.y) >= mobileLayout.y && (null == otherCandidateMobileLayout ? void 0 : otherCandidateMobileLayout.y) <= mobileLayout.y + mobileLayout.height && (null == otherCandidateMobileLayout ? void 0 : otherCandidateMobileLayout.x) > mobileLayout.x;
                        }).length && this_1.stretchVisual(candidates, otherCandidates, candidate, options, timesApplyPositiontCalled)) return "break";
                    }
                }, this_1 = this, _i = 0, candidatesToPosition_2 = candidatesToPosition; _i < candidatesToPosition_2.length && "break" !== _loop_1(candidatesToPosition_2[_i]); _i++) ;
            }, MobileAutoLayoutService.prototype.stretchVisual = function(candidates, otherCandidates, candidate, options, timesApplyPositiontCalled) {
                var mobileLayout = this.getPositionRectangle(candidate, 1), masterLayout = this.getPositionRectangle(candidate, 0), belowCandidates = _.filter(otherCandidates, function(otherCandidate) {
                    var otherCandidateMobileLayout = otherCandidate.layouts[1];
                    return (null == otherCandidateMobileLayout ? void 0 : otherCandidateMobileLayout.position.y) > mobileLayout.y + mobileLayout.height;
                }), scale = (CanvasRect.width - mobileLayout.x) / mobileLayout.width, candidateMobileLayout = candidate.layouts[1].position;
                if (candidateMobileLayout.width = mobileLayout.width * scale, mobileLayout.width / mobileLayout.height == masterLayout.width / masterLayout.height) {
                    if (candidateMobileLayout.height = mobileLayout.height * scale, this.removeMobileLayouts(belowCandidates), 
                    timesApplyPositiontCalled <= 10) return this.applyCandidatesPosition(candidates, _.filter(belowCandidates, function(candidate) {
                        return !candidate.isContained;
                    }), options, timesApplyPositiontCalled + 1), !0;
                    debug.fF.assertFail("applyCandidatesPosition calls exceeded threshold");
                }
                return !1;
            }, MobileAutoLayoutService.prototype.removeMobileLayouts = function(candidates) {
                for (var _i = 0, candidates_1 = candidates; _i < candidates_1.length; _i++) {
                    var candidate = candidates_1[_i];
                    candidate.layouts.splice(1, 1), this.removeMobileLayouts(candidate.containedVisuals);
                }
            }, MobileAutoLayoutService.prototype.positionContainedVisual = function(containedVisual, parentVisual, options) {
                var visualHeaderBuffer = options.useStylableVisualContainerHeader ? 0 : 20, parentMasterPosition = this.getPositionRectangle(parentVisual, 0), parentMobilePoistion = this.getPositionRectangle(parentVisual, 1), containedMasterPosition = this.getPositionRectangle(containedVisual, 0), widthScale = parentMasterPosition.width ? parentMobilePoistion.width / parentMasterPosition.width : 1, heightScale = parentMobilePoistion.height ? (parentMobilePoistion.height - visualHeaderBuffer) / parentMasterPosition.height : 1;
                containedVisual.layouts.push({
                    id: 1,
                    position: {
                        x: parentMobilePoistion.x + (containedMasterPosition.x - parentMasterPosition.x) * widthScale,
                        y: parentMobilePoistion.y + (containedMasterPosition.y - parentMasterPosition.y) * heightScale,
                        z: containedVisual.layouts[0].position.z,
                        width: containedMasterPosition.width * widthScale,
                        height: containedMasterPosition.height * heightScale,
                        tabOrder: containedVisual.layouts[0].position.tabOrder
                    }
                });
                for (var _i = 0, _a = containedVisual.containedVisuals; _i < _a.length; _i++) this.positionContainedVisual(_a[_i], containedVisual, options);
            }, MobileAutoLayoutService.prototype.positionCandidate = function(candidate, targetRects, options) {
                var _a, candidateMasterLayoutPosition = this.getPositionRectangle(candidate, 0), candidateContainingRectangle = candidate.containingRect, scaleX = 1;
                this.shouldRescaleToCanvasWidth(candidate) && (scaleX = CanvasRect.width / candidateContainingRectangle.width), 
                0 === candidate.containedVisuals.length && (scaleX = null !== (_a = this.verifyMaxWidth(candidate)) && void 0 !== _a ? _a : scaleX);
                var visualHeaderBuffer = options.useStylableVisualContainerHeader ? 0 : 20, validatedRatio = this.validateMinMaxHeight(candidate, scaleX), thresholdRatio = Math.max(validatedRatio.minimumRatio, validatedRatio.canvasThresholdRatio), scaleY = Math.max(scaleX, validatedRatio.minimumRatio);
                scaleY > thresholdRatio && (scaleY = thresholdRatio);
                for (var candidateWidth = scaleX * candidateMasterLayoutPosition.width, candidateHeight = scaleY * candidateMasterLayoutPosition.height + visualHeaderBuffer, _i = 0, targetRects_1 = targetRects; _i < targetRects_1.length; _i++) {
                    var target = targetRects_1[_i];
                    if (!(0 === target.y && target.x > .1 * CanvasRect.width && candidateMasterLayoutPosition.y > TopOfMasterScreenThreshold)) {
                        var xOffest = (candidateMasterLayoutPosition.x - candidateContainingRectangle.x) * scaleX, yOffset = (candidateMasterLayoutPosition.y - candidateContainingRectangle.y) * scaleY, candidatePosition = {
                            x: target.x + xOffest,
                            y: target.y + yOffset,
                            z: candidate.layouts[0].position.z,
                            width: candidateWidth,
                            height: candidateHeight,
                            tabOrder: candidate.layouts[0].position.tabOrder
                        };
                        if (xOffest + candidatePosition.width - target.width < .001 && yOffset + candidatePosition.height - target.height < .001) {
                            candidate.layouts.push({
                                id: 1,
                                position: candidatePosition
                            });
                            break;
                        }
                    }
                }
            }, MobileAutoLayoutService.prototype.shouldRescaleToCanvasWidth = function(candidate) {
                var candidateContainingRectangel = candidate.containingRect, type = candidate.config.singleVisual.visualType;
                return type === plugins.L.slicer.name && (type = convertSlicerType(candidate)), 
                candidateContainingRectangel.width > CanvasRect.width || candidate.containedVisuals.length > 0 && (!UnstretchedTypes.has(type) || candidate.containedVisuals.filter(function(contained) {
                    return !UnstretchedTypes.has(contained.config.singleVisual.visualType);
                }).length > 0) || !UnstretchedTypes.has(type) && !SmallVisualsTypes.has(type) && type !== plugins.L.textbox.name;
            }, MobileAutoLayoutService.prototype.findAllAvailableSpaces = function(candidates) {
                var _this = this, itemRects = _.map(_.filter(candidates, function(candidate) {
                    return candidate.layouts.length > 1;
                }), function(candidate) {
                    var pos = _this.getPositionRectangle(candidate, 1);
                    return {
                        x: Math.round(pos.x),
                        y: Math.round(pos.y),
                        width: Math.min(Math.round(pos.width) + 8, CanvasRect.width),
                        height: Math.round(pos.height) + 8
                    };
                }), targetRects = this.layoutInsertionHelperService.getNonOverlapingRects(CanvasRect, itemRects = itemRects.length > 0 ? itemRects : [ {
                    x: 0,
                    y: 0,
                    width: 0,
                    height: 0
                } ]);
                return _.sortBy(targetRects, function(rect) {
                    return rect.y;
                });
            }, MobileAutoLayoutService.prototype.findContainedVisuals = function(visualCandidates) {
                for (var _this = this, _loop_2 = function(candidate) {
                    for (var ancestorCandidates = [], currentCandidate = candidate; currentCandidate.parent; ) ancestorCandidates.push(currentCandidate.parent), 
                    currentCandidate = currentCandidate.parent;
                    for (var containedVisuals = _.filter(_.filter(visualCandidates, function(visual) {
                        return visual.name !== candidate.name && !_.find(ancestorCandidates, function(ancestor) {
                            return visual.name === ancestor.name;
                        });
                    }), function(visual) {
                        return _this.isRectContained(candidate, visual) || _this.overlapPercentage(candidate, visual) > .8;
                    }), _loop_3 = function(contained) {
                        contained.isContained = !0, contained.parent && (contained.parent.containedVisuals = contained.parent.containedVisuals.filter(function(candidate) {
                            return candidate !== contained;
                        })), contained.parent = candidate;
                    }, _a = 0, containedVisuals_1 = containedVisuals; _a < containedVisuals_1.length; _a++) _loop_3(containedVisuals_1[_a]);
                    candidate.containedVisuals = containedVisuals;
                }, _i = 0, visualCandidates_1 = visualCandidates; _i < visualCandidates_1.length; _i++) _loop_2(visualCandidates_1[_i]);
            }, MobileAutoLayoutService.prototype.sortAndFilterVisualCandidates = function(unsortedCandidates) {
                var _this = this;
                unsortedCandidates = _.filter(unsortedCandidates, function(visual) {
                    if (FilteredVisualTypes.includes(visual.config.singleVisual.visualType)) {
                        var pos = _this.getPositionRectangle(visual, 0);
                        return pos.width * pos.height / (Explore_constants.Z9 * Explore_constants.LU) < .6 && !(pos.y < TopOfMasterScreenThreshold && pos.height < .15 * Explore_constants.LU && pos.width > .6 * Explore_constants.Z9);
                    }
                    return !0;
                });
                for (var sortedByY = _.sortBy(unsortedCandidates, function(visualContainer) {
                    return visualContainer.layouts[0].position.y;
                }), positionedCandidates = [], _loop_4 = function(visual) {
                    if (_.includes(positionedCandidates, visual)) return "continue";
                    var same = _.filter(sortedByY, function(container) {
                        return !_.includes(positionedCandidates, container) && Math.abs(container.layouts[0].position.y - visual.layouts[0].position.y) <= 20;
                    });
                    positionedCandidates.push.apply(positionedCandidates, _.sortBy(same, function(container) {
                        return container.layouts[0].position.x;
                    }));
                }, _i = 0, sortedByY_1 = sortedByY; _i < sortedByY_1.length; _i++) _loop_4(sortedByY_1[_i]);
                return positionedCandidates;
            }, MobileAutoLayoutService.prototype.isRectContained = function(containerA, containerB) {
                var rectA = this.getPositionRectangle(containerA, 0), rectB = this.getPositionRectangle(containerB, 0);
                return !(rectB.x < rectA.x || rectB.y < rectA.y || rectB.x + rectB.width > rectA.x + rectA.width || rectB.y + rectB.height > rectA.y + rectA.height);
            }, MobileAutoLayoutService.prototype.internalTraverseGroup = function(canvasItem) {
                for (var visualCandidates = [], _i = 0, canvasItem_1 = canvasItem; _i < canvasItem_1.length; _i++) {
                    var item = canvasItem_1[_i];
                    if ((0, visualContainerGroup2.q4)(item)) {
                        for (var _a = 0, _b = item.children; _a < _b.length; _a++) {
                            var child = _b[_a];
                            child.layouts[0].position.x += item.layouts[0].position.x, child.layouts[0].position.y += item.layouts[0].position.y, 
                            child.layouts[0].position.z += item.layouts[0].position.z, child.layouts[0].position.tabOrder += item.layouts[0].position.tabOrder;
                        }
                        visualCandidates = _.concat(visualCandidates, this.internalTraverseGroup(item.children));
                    } else (0, visualContainerGroup2.Vz)(item) && visualCandidates.push(item);
                }
                return visualCandidates;
            }, MobileAutoLayoutService.prototype.overlapPercentage = function(a, b) {
                var aRect = this.getPositionRectangle(a, 0), bRect = this.getPositionRectangle(b, 0), intersectingRectangle = this.layoutInsertionHelperService.getIntersectingRectangle(aRect, bRect);
                if (!intersectingRectangle) return 0;
                var intersectingArea = intersectingRectangle.width * intersectingRectangle.height, smallCandidateArea = Math.min(aRect.width * aRect.height, bRect.width * bRect.height);
                return 0 === smallCandidateArea ? 0 : intersectingArea / smallCandidateArea;
            }, MobileAutoLayoutService.prototype.getPositionRectangle = function(candidate, canvasLayout) {
                var position = candidate.layouts[canvasLayout ? 1 : 0].position;
                return debug.fF.assert(function() {
                    return !!position;
                }, "position requested by getPositionRectangle is undefined"), {
                    x: position.x,
                    y: position.y,
                    width: position.width,
                    height: position.height
                };
            }, MobileAutoLayoutService.prototype.getContainingRectangle = function(candidate) {
                for (var rect = this.getPositionRectangle(candidate, 0), minX = rect.x, minY = rect.y, maxX = rect.x + rect.width, maxY = rect.y + rect.height, _i = 0, _a = candidate.containedVisuals || []; _i < _a.length; _i++) {
                    var containedRect = this.getContainingRectangle(_a[_i]);
                    minX = Math.min(minX, containedRect.x), minY = Math.min(minY, containedRect.y), 
                    maxX = Math.max(maxX, containedRect.x + containedRect.width), maxY = Math.max(maxY, containedRect.y + containedRect.height);
                }
                return {
                    x: minX,
                    y: minY,
                    width: maxX - minX,
                    height: maxY - minY
                };
            }, MobileAutoLayoutService.prototype.validateMinMaxHeight = function(visualCandidate, scaleX) {
                var _a, visualType = visualCandidate.config.singleVisual.visualType;
                visualType === plugins.L.slicer.name && (visualType = convertSlicerType(visualCandidate));
                for (var masterHeight = this.getPositionRectangle(visualCandidate, 0).height, minHeight = Math.min(masterHeight, null !== (_a = MinHeightMap.get(visualType)) && void 0 !== _a ? _a : 40), maxVisualHeight = .8 * ExploreUI_constants.jk, increaseRatio = {
                    minimumRatio: masterHeight ? minHeight / this.getPositionRectangle(visualCandidate, 0).height : 1,
                    canvasThresholdRatio: 0 === visualCandidate.containedVisuals.length ? maxVisualHeight / (masterHeight || 1) : scaleX
                }, _i = 0, _b = visualCandidate.containedVisuals || []; _i < _b.length; _i++) {
                    var childIncreaseRatio = this.validateMinMaxHeight(_b[_i], scaleX);
                    increaseRatio.minimumRatio = Math.max(increaseRatio.minimumRatio, childIncreaseRatio.minimumRatio), 
                    increaseRatio.canvasThresholdRatio = Math.min(increaseRatio.canvasThresholdRatio, childIncreaseRatio.canvasThresholdRatio);
                }
                return increaseRatio;
            }, MobileAutoLayoutService.prototype.verifyMaxWidth = function(candidate) {
                var _a, _b, _c, type = candidate.config.singleVisual.visualType;
                if (type === plugins.L.slicer.name && (type = convertSlicerType(candidate)), SmallVisualsTypes.has(type) && candidate.layouts[0].position.width > 158) {
                    if (type === plugins.L.cardVisual.name) {
                        var numberOfItems = null === (_c = null === (_b = null === (_a = candidate.config.singleVisual.query) || void 0 === _a ? void 0 : _a.projections) || void 0 === _b ? void 0 : _b.Data) || void 0 === _c ? void 0 : _c.all().length;
                        if (numberOfItems && numberOfItems > 1) return;
                    }
                    return 158 / candidate.layouts[0].position.width;
                }
            }, MobileAutoLayoutService.\u0275fac = function(t) {
                return new (t || MobileAutoLayoutService)(core["\u0275\u0275inject"](layout_insertion_helper_service.m));
            }, MobileAutoLayoutService.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: MobileAutoLayoutService,
                factory: MobileAutoLayoutService.\u0275fac
            }), MobileAutoLayoutService;
        }(), manifests = [ {
            type: MobilePageVisualsPaneComponent,
            componentId: "MobilePageVisualsPaneComponentId"
        }, {
            type: MobileVisualFormattingPaneComponent,
            componentId: "MobileVisualFormattingPaneComponentId"
        }, {
            type: TextboxFormattingSettingsComponent,
            componentId: "TextboxFormattingSettingsComponentId"
        }, {
            type: MobileCanvasEmptyStateComponent,
            componentId: "MobileCanvasEmptyStateComponentId"
        } ], MobileExploreAuthoringModule = function() {
            function MobileExploreAuthoringModule() {}
            return MobileExploreAuthoringModule.\u0275fac = function(t) {
                return new (t || MobileExploreAuthoringModule);
            }, MobileExploreAuthoringModule.\u0275mod = core["\u0275\u0275defineNgModule"]({
                type: MobileExploreAuthoringModule
            }), MobileExploreAuthoringModule.\u0275inj = core["\u0275\u0275defineInjector"]({
                providers: [ MobileAutoLayoutLazyProvider ],
                imports: [ common.CommonModule, explore_ui_authoring_eager_module.T, ExploreUI_module.J, ExploreUIThumbnail_module.ExploreUIThumbnailModule, lazy_load_module.N.withManifests(manifests), localization_module.v, pbi_feature_switch_module.N, pane_formatting_eager_module.p, a11y_module._, pbi_icon_module.U, pbi_menu_module.b, pbi_scrollbar_module.K, pbi_svg_use_symbol_module.j, pbi_tooltip_module.Z, tri_svg_icon.T6, UILibrary_module.g ]
            }), MobileExploreAuthoringModule;
        }();
    },
    17774: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            cH: function() {
                return getCardForSliceAndSelector;
            },
            pI: function() {
                return MobileVcObjectsVisualPropertyFilter;
            }
        });
        var _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_slicer_capabilities__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(9434), _powerbi_legacy_PowerBIVisuals_VisualsData_contracts_selector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(32379), _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObjectDefinition1__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(5265), _powerbi_legacy_PowerBIVisuals_VisualsData_semanticQuery_sqExprEqualityVisitor__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(45413);
        function getCardForSliceAndSelector(objects, cardName, sliceName, selector) {
            var _a;
            return null === (_a = null == objects ? void 0 : objects[cardName]) || void 0 === _a ? void 0 : _a.find(function(card) {
                var _a;
                return (null === (_a = null == card ? void 0 : card.properties) || void 0 === _a ? void 0 : _a[sliceName]) && (0, 
                _powerbi_legacy_PowerBIVisuals_VisualsData_contracts_selector__WEBPACK_IMPORTED_MODULE_0__.fS)(null == card ? void 0 : card.selector, selector);
            });
        }
        var slicerModeProp = _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_slicer_capabilities__WEBPACK_IMPORTED_MODULE_1__.gO.data.mode.propertyName, excludeProps = new Set([ slicerModeProp ]), MobileVcObjectsVisualPropertyFilter = function() {
            function MobileVcObjectsVisualPropertyFilter(state, cardName, defns, services, visualType) {
                this.state = state, this.cardName = cardName, this.defns = defns, this.services = services, 
                this.visualType = visualType;
            }
            return MobileVcObjectsVisualPropertyFilter.prototype.setMobileObjectsValue = function(prop, value, target, selector) {
                this.state.ignoreFilteringProps && (!this.state.ignoreFilteringProps || this.propExistsInDefn(value) || this.slicerModePersistWithoutChange(value, target[prop])) || ((0, 
                _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObjectDefinition1__WEBPACK_IMPORTED_MODULE_2__.zx)(this.defns, this.cardName, selector)[prop] = value);
            }, MobileVcObjectsVisualPropertyFilter.prototype.setMobileObjectsPropertiesValue = function(prop, value, selector) {
                this.shouldSetFilteringProps(prop) && ((0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObjectDefinition1__WEBPACK_IMPORTED_MODULE_2__.zx)(this.defns, this.cardName, selector).properties[prop] = value);
            }, MobileVcObjectsVisualPropertyFilter.prototype.shouldSetFilteringProps = function(prop) {
                return !this.state.ignoreFilteringProps || !this.services.visualFilterProperties.getProperties(this.visualType, excludeProps).has(prop);
            }, MobileVcObjectsVisualPropertyFilter.prototype.propExistsInDefn = function(value) {
                return function(set, value) {
                    for (var iterator = set.values(), result = iterator.next(); !result.done; ) {
                        if (value.hasOwnProperty(result.value)) return !0;
                        result = iterator.next();
                    }
                    return !1;
                }(this.services.visualFilterProperties.getProperties(this.visualType, excludeProps), value);
            }, MobileVcObjectsVisualPropertyFilter.prototype.slicerModePersistWithoutChange = function(value, properties) {
                if (value.hasOwnProperty(slicerModeProp) && (0, _powerbi_legacy_PowerBIVisuals_VisualsData_semanticQuery_sqExprEqualityVisitor__WEBPACK_IMPORTED_MODULE_3__.fS)(null == properties ? void 0 : properties[slicerModeProp], value[slicerModeProp])) return !0;
            }, MobileVcObjectsVisualPropertyFilter;
        }();
    }
} ]);