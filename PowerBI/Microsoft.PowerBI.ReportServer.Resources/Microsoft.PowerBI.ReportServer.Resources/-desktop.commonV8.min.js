"use strict";

(self.webpackChunkdesktop = self.webpackChunkdesktop || []).push([ [ 1 ], {
    37353: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, {
            AppButton: function() {
                return AppButton.J;
            },
            default: function() {
                return lib_AppButton;
            },
            getAppButtonMenuItem: function() {
                return getAppButtonMenuItem.M;
            },
            getAppButtonMenuItemWithoutMemoization: function() {
                return getAppButtonMenuItem.J;
            },
            isAppButtonProps: function() {
                return isAppButtonProps.Q;
            }
        });
        var AppButton = __webpack_require__(9336), getAppButtonMenuItem = __webpack_require__(46309), isAppButtonProps = __webpack_require__(57508), lib_AppButton = AppButton.J;
    },
    37647: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, {
            AppFlyoutAnchor: function() {
                return AppFlyoutAnchor.B;
            },
            default: function() {
                return lib_AppFlyoutAnchor;
            },
            getActionFlyoutAnchorStyles: function() {
                return ActionFlyoutAnchor_styles.LC;
            },
            getAppFlyoutAnchorMenuItem: function() {
                return getAppFlyoutAnchorMenuItem.P;
            },
            getAppFlyoutAnchorMenuItemWithMemoization: function() {
                return getAppFlyoutAnchorMenuItem.f;
            },
            getClassNamesForFlyoutAnchorMenuButton: function() {
                return AppFlyoutAnchorInMenu_classNames.P;
            },
            getSizedFlyoutAnchorStyles: function() {
                return ActionFlyoutAnchor_styles.$b;
            },
            isAppFlyoutAnchorProps: function() {
                return isAppFlyoutAnchorProps.T;
            },
            menuTextChevronClass: function() {
                return ActionFlyoutAnchor_styles.P0;
            },
            menuTextContainerClass: function() {
                return ActionFlyoutAnchor_styles.yf;
            },
            menuTextLine2Class: function() {
                return ActionFlyoutAnchor_styles.UL;
            }
        });
        var AppFlyoutAnchor = __webpack_require__(49590), isAppFlyoutAnchorProps = __webpack_require__(26612), AppFlyoutAnchorInMenu_classNames = __webpack_require__(50972), ActionFlyoutAnchor_styles = __webpack_require__(86603), getAppFlyoutAnchorMenuItem = __webpack_require__(92690), lib_AppFlyoutAnchor = AppFlyoutAnchor.B;
    },
    82394: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, {
            AppSplitButton: function() {
                return AppSplitButton.M;
            },
            default: function() {
                return lib_AppSplitButton;
            },
            getActionSplitButtonStyles: function() {
                return ActionSplitButton_styles.Lj;
            },
            getAppSplitButtonMenuItem: function() {
                return getAppSplitButtonMenuItem.p;
            },
            getAppSplitButtonMenuItemWithMemoization: function() {
                return getAppSplitButtonMenuItem.G;
            },
            getClassNamesForMLRMenuSplitButton: function() {
                return AppSplitButtonInMenu_classNames.G4;
            },
            getClassNamesForSplitMenuButton: function() {
                return AppSplitButtonInMenu_classNames.JS;
            },
            getSizedSplitButtonStyles: function() {
                return ActionSplitButton_styles._p;
            },
            getSplitButtonVerticalDividerClassNames: function() {
                return AppSplitButtonInMenu_classNames.Z;
            },
            isAppSplitButtonProps: function() {
                return isAppSplitButtonProps.k;
            },
            splitContainerClass: function() {
                return ActionSplitButton_styles.ii;
            },
            splitIconClass: function() {
                return ActionSplitButton_styles.K9;
            },
            splitTextClass: function() {
                return ActionSplitButton_styles.bF;
            }
        });
        var AppSplitButton = __webpack_require__(98919), isAppSplitButtonProps = __webpack_require__(33180), AppSplitButtonInMenu_classNames = __webpack_require__(61635), ActionSplitButton_styles = __webpack_require__(65023), getAppSplitButtonMenuItem = __webpack_require__(57864), lib_AppSplitButton = AppSplitButton.M;
    },
    92885: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, {
            AppToggleButton: function() {
                return AppToggleButton.m;
            },
            default: function() {
                return lib_AppToggleButton;
            },
            getAppToggleButtonMenuItem: function() {
                return getAppToggleButtonMenuItem.R;
            },
            getClassNamesForAppToggleButtonInMenu: function() {
                return AppToggleButtonInMenu_classNames.d;
            },
            isAppToggleButtonProps: function() {
                return isAppToggleButtonProps.m;
            }
        });
        var AppToggleButton = __webpack_require__(95971), AppToggleButtonInMenu_classNames = __webpack_require__(77155), isAppToggleButtonProps = __webpack_require__(7453), getAppToggleButtonMenuItem = __webpack_require__(46248), lib_AppToggleButton = AppToggleButton.m;
    },
    90961: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, {
            AppCheckbox: function() {
                return AppCheckbox.U;
            },
            checkboxCheckClassName: function() {
                return AppCheckbox_styles.FR;
            },
            checkboxClassName: function() {
                return AppCheckbox_styles.rg;
            },
            default: function() {
                return lib;
            },
            getCheckBoxStylesInMLRMenu: function() {
                return AppCheckbox_styles.__;
            },
            getCheckBoxStylesInMenu: function() {
                return AppCheckbox_styles.Uw;
            },
            getCheckboxSizedStyles: function() {
                return ActionCheckbox_styles.S;
            },
            getMergedCheckboxSizedStyles: function() {
                return ActionCheckbox_styles.z;
            }
        });
        var AppCheckbox = __webpack_require__(35625), AppCheckbox_styles = __webpack_require__(55594), ActionCheckbox_styles = __webpack_require__(12497), lib = AppCheckbox.U;
    },
    50070: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, {
            AppComboBox: function() {
                return AppComboBox.N;
            },
            AppComboBoxBase: function() {
                return AppComboBox.P;
            },
            StickyFooterAppComboBox: function() {
                return StickyFooterAppComboBox;
            },
            default: function() {
                return acui_combobox_lib;
            },
            getComboBoxClassNames: function() {
                return AppComboBox_styles.Lw;
            },
            getComboBoxContainerMarginStyles: function() {
                return AppComboBox_styles.h9;
            },
            getComboBoxControlWidthOffset: function() {
                return AppComboBox_styles.ty;
            },
            getComboBoxIconClassNames: function() {
                return AppComboBox_styles.u4;
            },
            getComboBoxListClassNames: function() {
                return getComboBoxListClassNames;
            },
            getComboBoxOptionClassNames: function() {
                return AppComboBox_styles.Pq;
            },
            getComboBoxOptionPadding: function() {
                return AppComboBox_styles.Jg;
            },
            getComboBoxOptionStyles: function() {
                return AppComboBox_styles.Gy;
            },
            getComboBoxSizedStyles: function() {
                return ActionComboBox_styles.a3;
            },
            getComboBoxStylesInMLRMenu: function() {
                return AppComboBoxInMenu_styles.a;
            },
            getComboBoxStylesInMenu: function() {
                return AppComboBoxInMenu_styles.G;
            },
            getComboxLabelClassname: function() {
                return AppComboBox_styles.Oz;
            },
            getControlContainerStyles: function() {
                return AppComboBox_styles.Ic;
            },
            getFooterOptionButtonStyles: function() {
                return getFooterOptionButtonStyles;
            },
            getTextContainerClassname: function() {
                return AppComboBox_styles.sG;
            },
            maxContentWidth: function() {
                return AppComboBox_styles.xN;
            },
            optionSmallStyles: function() {
                return ActionComboBox_styles.ZI;
            },
            smallCaretDownButtonStyles: function() {
                return ActionComboBox_styles.rg;
            }
        });
        var AppComboBox = __webpack_require__(50234), AppComboBox_styles = __webpack_require__(61509), AppComboBoxInMenu_styles = __webpack_require__(35013), ActionComboBox_styles = __webpack_require__(19869), tslib_es6 = __webpack_require__(81337), getChildren = __webpack_require__(46192), react = __webpack_require__(88011), memoize = __webpack_require__(40594), lib = __webpack_require__(37502), getComboBoxListClassNames = (0, 
        memoize.NF)(function(styles) {
            return (0, lib.ZC)({
                comboBoxOptionsListStyle: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, null == styles ? void 0 : styles.optionsContainer), {
                    overflowY: "auto"
                }),
                comboBoxFooterStyle: {}
            });
        }), getFooterOptionButtonStyles = (0, memoize.NF)(function(styles) {
            return (0, lib.ZC)({
                root: {
                    maxWidth: "100%",
                    padding: "18px 10px"
                }
            }, styles);
        }), StickyFooterAppComboBoxInternal = function(_super) {
            function StickyFooterAppComboBoxInternal(props) {
                var _this = _super.call(this, props) || this;
                _this._comboBoxListMenu = react.createRef(), _this.onRenderList = function(props) {
                    var comboBoxCustomRenderListStyles = getComboBoxListClassNames(_this.props.styles), onRenderItem = props.onRenderItem, label = props.label, ariaLabel = props.ariaLabel, id = props.id, footerOptions = [], listOptions = [];
                    return props.options.forEach(function(option) {
                        var _a;
                        (null === (_a = option.data) || void 0 === _a ? void 0 : _a.stickyFooterOption) ? footerOptions.push(option) : listOptions.push(option);
                    }), react.createElement(react.Fragment, null, react.createElement("div", {
                        id: id + "-list",
                        className: comboBoxCustomRenderListStyles.comboBoxOptionsListStyle,
                        "aria-labelledby": label && id + "-label",
                        "aria-label": ariaLabel && !label ? ariaLabel : void 0,
                        role: "listbox",
                        ref: _this._comboBoxListMenu
                    }, listOptions.map(function(item) {
                        return null == onRenderItem ? void 0 : onRenderItem(item);
                    })), react.createElement("div", {
                        id: id + "-footer",
                        className: comboBoxCustomRenderListStyles.comboBoxFooterStyle
                    }, footerOptions.map(function(item) {
                        return null == onRenderItem ? void 0 : onRenderItem(item);
                    })));
                }, _this.scrollIntoView = function(currentPendingSelectedIndex) {
                    var scrollToElement = _this.findFirstDescendant(_this._comboBoxListMenu.current, function(element) {
                        var _a;
                        return (null === (_a = element.dataset) || void 0 === _a ? void 0 : _a.index) === currentPendingSelectedIndex.toString();
                    });
                    if (scrollToElement && scrollToElement.offsetParent) {
                        var alignToTop = !0;
                        if (_this._comboBoxListMenu.current && _this._comboBoxListMenu.current.offsetParent) {
                            var scrollableParent = _this._comboBoxListMenu.current, offsetHeight = scrollToElement.offsetHeight, offsetTop = scrollToElement.offsetTop, parentOffsetHeight = scrollableParent.offsetHeight, scrollTop = scrollableParent.scrollTop, isBelow = offsetTop + offsetHeight > scrollTop + parentOffsetHeight;
                            offsetTop < scrollTop ? (alignToTop = !1, scrollableParent.scrollTo(0, offsetTop)) : isBelow && scrollableParent.scrollTo(0, offsetTop - parentOffsetHeight + offsetHeight);
                        } else scrollToElement.offsetParent.scrollIntoView(alignToTop);
                    }
                }, _this.findFirstDescendant = function(element, match) {
                    for (var children = (0, getChildren.G)(element), index = 0; index < children.length; index++) {
                        var child = children[index];
                        if (match(child)) return child;
                        var candidate = _this.findFirstDescendant(child, match);
                        if (candidate) return candidate;
                    }
                    return null;
                };
                var options = StickyFooterAppComboBoxInternal.createCombinedOptions(props);
                return _this.state = {
                    options
                }, _this;
            }
            return (0, tslib_es6.__extends)(StickyFooterAppComboBoxInternal, _super), StickyFooterAppComboBoxInternal.prototype.render = function() {
                return react.createElement(AppComboBox.N, (0, tslib_es6.__assign)({}, this.props, {
                    ref: this.props.forwardedRef,
                    options: this.state.options,
                    onRenderList: this.onRenderList,
                    onScrollToItem: this.scrollIntoView
                }));
            }, StickyFooterAppComboBoxInternal.getDerivedStateFromProps = function(nextProps, _prevState) {
                return {
                    options: StickyFooterAppComboBoxInternal.createCombinedOptions(nextProps)
                };
            }, StickyFooterAppComboBoxInternal.createCombinedOptions = function(props) {
                var options = (0, tslib_es6.__spreadArray)([], props.options, !0);
                return props.showFooterOption && options.push((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, props.footerOption), {
                    data: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, props.footerOption.data), {
                        stickyFooterOption: !0
                    }),
                    styles: getFooterOptionButtonStyles(props.footerOption.styles)
                })), options;
            }, StickyFooterAppComboBoxInternal;
        }(react.Component), StickyFooterAppComboBox = react.forwardRef(function(props, ref) {
            return react.createElement(StickyFooterAppComboBoxInternal, (0, tslib_es6.__assign)({}, props, {
                forwardedRef: ref
            }));
        }), acui_combobox_lib = AppComboBox.N;
    }
} ]);