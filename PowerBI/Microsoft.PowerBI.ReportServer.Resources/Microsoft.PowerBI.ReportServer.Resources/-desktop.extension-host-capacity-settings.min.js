"use strict";

(self.webpackChunkdesktop = self.webpackChunkdesktop || []).push([ [ "extension-host-capacity-settings" ], {
    47456: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, {
            ExtensionHostCapacitySettingsModule: function() {
                return ExtensionHostCapacitySettingsModule;
            }
        });
        var common = __webpack_require__(77476), ngrx_effects = __webpack_require__(60756), of = __webpack_require__(11547), mergeMap = __webpack_require__(42195), src = __webpack_require__(17899), extension_host_capacity_settings_actions = __webpack_require__(69477), core = __webpack_require__(50423), telemetry_service = __webpack_require__(54323), ExtensionHostCapacitySettingsEffects = function() {
            function ExtensionHostCapacitySettingsEffects(actions$, telemetryService) {
                var _this = this;
                this.actions$ = actions$, this.telemetryService = telemetryService, this.onOpenCapacitySettings$ = (0, 
                ngrx_effects.GW)(function() {
                    return _this.actions$.pipe((0, src.UF)(extension_host_capacity_settings_actions.N), (0, 
                    mergeMap.zg)(function(_a) {
                        return _this.telemetryService.logStandardFeatureEvent({
                            originatingService: "DataCloudUX",
                            activityName: "Detail settings",
                            featureName: "Capacity settings",
                            activityAttributes: {
                                isAdmin: !!_a.isAdmin,
                                selectedTab: _a.selectedSettingId || "About",
                                capacityObjectId: _a.capacity.metadata.capacityObjectId
                            }
                        }), (0, of.of)(extension_host_capacity_settings_actions.i({
                            visible: !0
                        }));
                    }));
                });
            }
            return ExtensionHostCapacitySettingsEffects.\u0275fac = function(t) {
                return new (t || ExtensionHostCapacitySettingsEffects)(core["\u0275\u0275inject"](ngrx_effects.eX), core["\u0275\u0275inject"](telemetry_service.t));
            }, ExtensionHostCapacitySettingsEffects.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: ExtensionHostCapacitySettingsEffects,
                factory: ExtensionHostCapacitySettingsEffects.\u0275fac
            }), ExtensionHostCapacitySettingsEffects;
        }(), ExtensionHostCapacitySettingsModule = function() {
            function ExtensionHostCapacitySettingsModule() {}
            return ExtensionHostCapacitySettingsModule.\u0275fac = function(t) {
                return new (t || ExtensionHostCapacitySettingsModule);
            }, ExtensionHostCapacitySettingsModule.\u0275mod = core["\u0275\u0275defineNgModule"]({
                type: ExtensionHostCapacitySettingsModule
            }), ExtensionHostCapacitySettingsModule.\u0275inj = core["\u0275\u0275defineInjector"]({
                imports: [ common.CommonModule, ngrx_effects.sQ.forFeature([ ExtensionHostCapacitySettingsEffects ]) ]
            }), ExtensionHostCapacitySettingsModule;
        }();
    }
} ]);