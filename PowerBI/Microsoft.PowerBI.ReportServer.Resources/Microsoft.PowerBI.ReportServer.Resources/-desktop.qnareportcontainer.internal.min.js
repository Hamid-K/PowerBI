"use strict";

(self.webpackChunkdesktop = self.webpackChunkdesktop || []).push([ [ "qnareportcontainer.internal" ], {
    70940: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            s: function() {
                return getPlugin;
            }
        });
        var _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(47508), _powerbi_legacy_PowerBIVisuals_VisualsCommon_Lazy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(45034), typeToPluginMap = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Lazy__WEBPACK_IMPORTED_MODULE_0__.o(function() {
            var result = {};
            return result[3] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.card, 
            result[13] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.lineClusteredColumnComboChart, 
            result[29] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.multiRowCard, 
            result[7] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.clusteredBarChart, 
            result[10] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.clusteredColumnChart, 
            result[20] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.donutChart, 
            result[16] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.funnel, 
            result[30] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.gauge, 
            result[22] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.heatMap, 
            result[9] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.hundredPercentStackedBarChart, 
            result[12] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.hundredPercentStackedColumnChart, 
            result[4] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.lineChart, 
            result[1] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.map, 
            result[19] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.filledMap, 
            result[2] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.pivotTable, 
            result[5] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.pieChart, 
            result[6] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.scatterChart, 
            result[8] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.barChart, 
            result[11] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.columnChart, 
            result[0] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.tableEx, 
            result[17] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.treemap, 
            result[23] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.waterfallChart, 
            result[26] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.stackedAreaChart, 
            result[27] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.hundredPercentStackedAreaChart, 
            result[32] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.areaChart, 
            result[33] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.ribbonChart, 
            result[34] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.kpi, 
            result[35] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.decompositionTreeVisual, 
            result;
        });
        function getPlugin(type) {
            return typeToPluginMap.getValue()[type];
        }
        new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Lazy__WEBPACK_IMPORTED_MODULE_0__.o(function() {
            var result = {};
            return result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.card.name] = 3, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.lineClusteredColumnComboChart.name] = 13, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.multiRowCard.name] = 29, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.clusteredBarChart.name] = 7, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.clusteredColumnChart.name] = 10, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.donutChart.name] = 20, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.funnel.name] = 16, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.gauge.name] = 30, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.heatMap.name] = 22, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.hundredPercentStackedBarChart.name] = 9, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.hundredPercentStackedColumnChart.name] = 12, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.lineChart.name] = 4, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.map.name] = 1, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.filledMap.name] = 19, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.matrix.name] = 2, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.pivotTable.name] = 2, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.pieChart.name] = 5, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.scatterChart.name] = 6, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.barChart.name] = 8, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.columnChart.name] = 11, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.table.name] = 0, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.tableEx.name] = 0, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.treemap.name] = 17, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.waterfallChart.name] = 23, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.stackedAreaChart.name] = 26, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.hundredPercentStackedAreaChart.name] = 27, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.areaChart.name] = 32, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.ribbonChart.name] = 33, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.kpi.name] = 34, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.decompositionTreeVisual.name] = 35, 
            result;
        });
    },
    93549: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, {
            QnaReportContainerInternalModule: function() {
                return QnaReportContainerInternalModule;
            }
        });
        var tslib_es6 = __webpack_require__(81337), fesm2022_core = __webpack_require__(50423), Common = __webpack_require__(35911), scoped_services = __webpack_require__(22543), promiseFactory = __webpack_require__(14463), dataSource = __webpack_require__(74804), events = __webpack_require__(8590), visualHostService = __webpack_require__(47245), viewModelFactory = __webpack_require__(26982), JQueryUIModule = {
            javascript: "jquery-ui",
            css: [ "jquery-ui" ]
        }, plugins = __webpack_require__(47508), debug = __webpack_require__(62458), Prototype = __webpack_require__(39681), enums = __webpack_require__(46135), themeUtils = __webpack_require__(4954), visual_util = __webpack_require__(74857), interpret_listener_service = __webpack_require__(37320), qna_component_core_utils = __webpack_require__(72129), qna_component_core_service = __webpack_require__(7124), qna_input_v2_lazy_component = __webpack_require__(73360), telemetry_events = __webpack_require__(35691), Telemetry = __webpack_require__(21617), BehaviorSubject = __webpack_require__(35510), Subject = __webpack_require__(30794), takeUntil = __webpack_require__(83317), map = __webpack_require__(14172), data_sources_service = __webpack_require__(83008), exploration_capabilities_service = __webpack_require__(48145), panes_visibility_service = __webpack_require__(21024), view_mode_state_service = __webpack_require__(77200), visual_authoring_service = __webpack_require__(66890), bidi = __webpack_require__(94130), event_bridge_service = __webpack_require__(11494), filter_generator_service = __webpack_require__(94717), azure_map_token_cache_service = __webpack_require__(80277), exploration_navigation_service = __webpack_require__(39503), feature_switch_service = __webpack_require__(9380), geocoder_service = __webpack_require__(28505), azure_maps_endpoint_service = __webpack_require__(58991), item_picker_service = __webpack_require__(4877), theme_service = __webpack_require__(67660), localization_service = __webpack_require__(65181), module_loader_service = __webpack_require__(2330), resource_loader_service = __webpack_require__(52121), resource_packages_service = __webpack_require__(84916), visual_host_tooltip_service_factory_service = __webpack_require__(77832), geocoder_indexed_db_service = __webpack_require__(1599), common = __webpack_require__(77476), pbi_lazy_load_component = __webpack_require__(18460), explore_canvas_component = __webpack_require__(78565), qna_feedback_lazy_component = __webpack_require__(16400), canvas_visual_error_overlay_component = __webpack_require__(98885), data_pane_component = __webpack_require__(50480), single_visual_host_component = __webpack_require__(46101), accessible_click_directive = __webpack_require__(44581), localize_directive = __webpack_require__(59968), localize_attr_directive = __webpack_require__(22844), spinner_component = __webpack_require__(73425), tooltip_directive = __webpack_require__(1240), angular_resizable_element = __webpack_require__(53188), _c0 = [ "qnaReportContainer" ], _c1 = [ "contentContainer" ];
        function QnaReportContainerComponent_div_2_Template(rf, ctx) {
            1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 12)(1, "div", 13), 
            fesm2022_core["\u0275\u0275element"](2, "spinner", 14)(3, "span", 15), fesm2022_core["\u0275\u0275elementEnd"]()()), 
            2 & rf && (fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("delay", 0));
        }
        function QnaReportContainerComponent_div_3_Template(rf, ctx) {
            if (1 & rf) {
                var _r10 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "div", 16)(1, "canvas-visual-error-overlay", 17), 
                fesm2022_core["\u0275\u0275listener"]("showErrorDetails", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r10);
                    var ctx_r9 = fesm2022_core["\u0275\u0275nextContext"]();
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r9.showQnaVisualErrorDetails());
                }), fesm2022_core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var ctx_r2 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("errorInfo", ctx_r2.viewModel.error)("viewport", ctx_r2.componentViewport);
            }
        }
        function QnaReportContainerComponent_div_4_qna_input_v2_lazy_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r13 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "qna-input-v2-lazy", 20), fesm2022_core["\u0275\u0275listener"]("inputBoxFocused", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r13);
                    var ctx_r12 = fesm2022_core["\u0275\u0275nextContext"](2);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r12.onInputBoxFocused($event));
                }), fesm2022_core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r11 = fesm2022_core["\u0275\u0275nextContext"](2);
                fesm2022_core["\u0275\u0275property"]("entryPoint", ctx_r11.viewModel.qnaInputConfiguration.entryPoint)("qnaSupportedScopes", ctx_r11.viewModel.qnaInputConfiguration.qnaSupportedScopes)("interpretListener", ctx_r11.viewModel.qnaInputConfiguration.interpretListener)("presentationArgs", ctx_r11.inputPresentation)("configs", ctx_r11.viewModel.qnaInputConfiguration.configs)("initialUtterance", ctx_r11.viewModel.qnaInputConfiguration.initialUtterance);
            }
        }
        function QnaReportContainerComponent_div_4_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 18), fesm2022_core["\u0275\u0275template"](1, QnaReportContainerComponent_div_4_qna_input_v2_lazy_1_Template, 1, 6, "qna-input-v2-lazy", 19), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r3 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", ctx_r3.viewModel.qnaInputConfiguration);
            }
        }
        var _c2 = function(a0) {
            return {
                color: a0
            };
        }, _c3 = function(a2) {
            return {
                tooltipShowOnFocus: !0,
                tooltipShowOnHover: !0,
                tooltipDescription: a2
            };
        };
        function QnaReportContainerComponent_i_5_Template(rf, ctx) {
            if (1 & rf && fesm2022_core["\u0275\u0275element"](0, "i", 21), 2 & rf) {
                var ctx_r4 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275property"]("ngStyle", fesm2022_core["\u0275\u0275pureFunction1"](3, _c2, null == ctx_r4.inputPresentation || null == ctx_r4.inputPresentation.restatementFontProperties ? null : ctx_r4.inputPresentation.restatementFontProperties.color))("pbi-tooltip", fesm2022_core["\u0275\u0275pureFunction1"](5, _c3, ctx_r4.displayedRestatement)), 
                fesm2022_core["\u0275\u0275attribute"]("aria-label", ctx_r4.displayedRestatement);
            }
        }
        var _c4 = function(a0, a1, a2, a3, a4, a5, a6) {
            return {
                "background-color": a0,
                color: a1,
                "font-size": a2,
                "font-family": a3,
                "font-weight": a4,
                "font-style": a5,
                "text-decoration": a6
            };
        };
        function QnaReportContainerComponent_ng_container_9_div_1_div_1_div_3_Template(rf, ctx) {
            if (1 & rf) {
                var _r27 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "div", 36), fesm2022_core["\u0275\u0275listener"]("accessible-click", function() {
                    var suggestion_r25 = fesm2022_core["\u0275\u0275restoreView"](_r27).$implicit, ctx_r26 = fesm2022_core["\u0275\u0275nextContext"](4);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r26.interpretSuggestedQuestion(suggestion_r25.content));
                }), fesm2022_core["\u0275\u0275text"](1), fesm2022_core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var suggestion_r25 = ctx.$implicit, ctx_r24 = fesm2022_core["\u0275\u0275nextContext"](4);
                fesm2022_core["\u0275\u0275property"]("ngStyle", fesm2022_core["\u0275\u0275pureFunction7"](3, _c4, null == ctx_r24.suggestionsPresentation ? null : ctx_r24.suggestionsPresentation.backgroundColor, null == ctx_r24.suggestionsPresentation || null == ctx_r24.suggestionsPresentation.cardFontProperties ? null : ctx_r24.suggestionsPresentation.cardFontProperties.color, (null == ctx_r24.suggestionsPresentation || null == ctx_r24.suggestionsPresentation.cardFontProperties || null == ctx_r24.suggestionsPresentation.cardFontProperties.size ? null : ctx_r24.suggestionsPresentation.cardFontProperties.size.px) + "px", null == ctx_r24.suggestionsPresentation || null == ctx_r24.suggestionsPresentation.cardFontProperties ? null : ctx_r24.suggestionsPresentation.cardFontProperties.family, null == ctx_r24.suggestionsPresentation || null == ctx_r24.suggestionsPresentation.cardFontProperties ? null : ctx_r24.suggestionsPresentation.cardFontProperties.weight, null == ctx_r24.suggestionsPresentation || null == ctx_r24.suggestionsPresentation.cardFontProperties ? null : ctx_r24.suggestionsPresentation.cardFontProperties.style, null == ctx_r24.suggestionsPresentation || null == ctx_r24.suggestionsPresentation.cardFontProperties ? null : ctx_r24.suggestionsPresentation.cardFontProperties.textDecoration)), 
                fesm2022_core["\u0275\u0275attribute"]("aria-label", suggestion_r25.accessibilityLabel), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275textInterpolate1"](" ", suggestion_r25.content, " ");
            }
        }
        var _c5 = function(a0, a1, a2, a3, a4, a5) {
            return {
                color: a0,
                "font-size": a1,
                "font-family": a2,
                "font-weight": a3,
                "font-style": a4,
                "text-decoration": a5
            };
        }, _c6 = function(a0) {
            return {
                "aria-label": a0
            };
        };
        function QnaReportContainerComponent_ng_container_9_div_1_div_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r29 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "div", 31), fesm2022_core["\u0275\u0275element"](1, "div", 32), 
                fesm2022_core["\u0275\u0275elementStart"](2, "div", 33), fesm2022_core["\u0275\u0275template"](3, QnaReportContainerComponent_ng_container_9_div_1_div_1_div_3_Template, 2, 11, "div", 34), 
                fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275elementStart"](4, "div", 35), 
                fesm2022_core["\u0275\u0275listener"]("accessible-click", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r29);
                    var ctx_r28 = fesm2022_core["\u0275\u0275nextContext"](3);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r28.toggleShowAllSuggestions());
                }), fesm2022_core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var ctx_r22 = fesm2022_core["\u0275\u0275nextContext"](3);
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngStyle", fesm2022_core["\u0275\u0275pureFunction6"](4, _c5, null == ctx_r22.suggestionsPresentation || null == ctx_r22.suggestionsPresentation.headerFontProperties ? null : ctx_r22.suggestionsPresentation.headerFontProperties.color, (null == ctx_r22.suggestionsPresentation || null == ctx_r22.suggestionsPresentation.headerFontProperties || null == ctx_r22.suggestionsPresentation.headerFontProperties.size ? null : ctx_r22.suggestionsPresentation.headerFontProperties.size.px) + "px", null == ctx_r22.suggestionsPresentation || null == ctx_r22.suggestionsPresentation.headerFontProperties ? null : ctx_r22.suggestionsPresentation.headerFontProperties.family, null == ctx_r22.suggestionsPresentation || null == ctx_r22.suggestionsPresentation.headerFontProperties ? null : ctx_r22.suggestionsPresentation.headerFontProperties.weight, null == ctx_r22.suggestionsPresentation || null == ctx_r22.suggestionsPresentation.headerFontProperties ? null : ctx_r22.suggestionsPresentation.headerFontProperties.style, null == ctx_r22.suggestionsPresentation || null == ctx_r22.suggestionsPresentation.headerFontProperties ? null : ctx_r22.suggestionsPresentation.headerFontProperties.textDecoration)), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("ngForOf", ctx_r22.viewModel.result.suggestions), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275propertyInterpolate"]("localize", ctx_r22.viewModel.result.showAllSuggestions ? "Visual_Qna_SuggestionsLess" : "Visual_Qna_SuggestionsAll"), 
                fesm2022_core["\u0275\u0275property"]("localizeAttr", fesm2022_core["\u0275\u0275pureFunction1"](11, _c6, ctx_r22.viewModel.result.showAllSuggestions ? "Visual_Qna_SuggestionsLess" : "Visual_Qna_SuggestionsAll"));
            }
        }
        var _c7 = function(a0, a1, a2, a3, a4) {
            return {
                color: a0,
                "font-family": a1,
                "font-weight": a2,
                "font-style": a3,
                "text-decoration": a4
            };
        };
        function QnaReportContainerComponent_ng_container_9_div_1_span_2_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "span", 37), fesm2022_core["\u0275\u0275text"](1), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r23 = fesm2022_core["\u0275\u0275nextContext"](3);
                fesm2022_core["\u0275\u0275property"]("ngStyle", fesm2022_core["\u0275\u0275pureFunction5"](2, _c7, null == ctx_r23.inputPresentation || null == ctx_r23.inputPresentation.restatementFontProperties ? null : ctx_r23.inputPresentation.restatementFontProperties.color, null == ctx_r23.inputPresentation || null == ctx_r23.inputPresentation.restatementFontProperties ? null : ctx_r23.inputPresentation.restatementFontProperties.family, null == ctx_r23.inputPresentation || null == ctx_r23.inputPresentation.restatementFontProperties ? null : ctx_r23.inputPresentation.restatementFontProperties.weight, null == ctx_r23.inputPresentation || null == ctx_r23.inputPresentation.restatementFontProperties ? null : ctx_r23.inputPresentation.restatementFontProperties.style, null == ctx_r23.inputPresentation || null == ctx_r23.inputPresentation.restatementFontProperties ? null : ctx_r23.inputPresentation.restatementFontProperties.textDecoration)), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275textInterpolate1"](" ", ctx_r23.viewModel.result.failedToLoadSuggestionsMessage, " ");
            }
        }
        function QnaReportContainerComponent_ng_container_9_div_1_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 28), fesm2022_core["\u0275\u0275template"](1, QnaReportContainerComponent_ng_container_9_div_1_div_1_Template, 5, 13, "div", 29), 
            fesm2022_core["\u0275\u0275template"](2, QnaReportContainerComponent_ng_container_9_div_1_span_2_Template, 2, 8, "span", 30), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r14 = fesm2022_core["\u0275\u0275nextContext"](2);
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", ctx_r14.viewModel.result.suggestions.length > 0), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", ctx_r14.viewModel.result.failedToLoadSuggestionsMessage);
            }
        }
        function QnaReportContainerComponent_ng_container_9_div_2_ng_container_1_Template(rf, ctx) {
            1 & rf && fesm2022_core["\u0275\u0275elementContainer"](0);
        }
        function QnaReportContainerComponent_ng_container_9_div_2_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 38), fesm2022_core["\u0275\u0275template"](1, QnaReportContainerComponent_ng_container_9_div_2_ng_container_1_Template, 1, 0, "ng-container", 39), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                fesm2022_core["\u0275\u0275nextContext"]();
                var _r20 = fesm2022_core["\u0275\u0275reference"](8);
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngTemplateOutlet", _r20);
            }
        }
        function QnaReportContainerComponent_ng_container_9_div_3_ng_container_1_Template(rf, ctx) {
            1 & rf && fesm2022_core["\u0275\u0275elementContainer"](0);
        }
        function QnaReportContainerComponent_ng_container_9_div_3_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 38), fesm2022_core["\u0275\u0275template"](1, QnaReportContainerComponent_ng_container_9_div_3_ng_container_1_Template, 1, 0, "ng-container", 39), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                fesm2022_core["\u0275\u0275nextContext"]();
                var _r20 = fesm2022_core["\u0275\u0275reference"](8);
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngTemplateOutlet", _r20);
            }
        }
        function QnaReportContainerComponent_ng_container_9_div_4_ng_container_1_Template(rf, ctx) {
            1 & rf && fesm2022_core["\u0275\u0275elementContainer"](0);
        }
        function QnaReportContainerComponent_ng_container_9_div_4_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 38), fesm2022_core["\u0275\u0275template"](1, QnaReportContainerComponent_ng_container_9_div_4_ng_container_1_Template, 1, 0, "ng-container", 39), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                fesm2022_core["\u0275\u0275nextContext"]();
                var _r20 = fesm2022_core["\u0275\u0275reference"](8);
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngTemplateOutlet", _r20);
            }
        }
        function QnaReportContainerComponent_ng_container_9_div_5_a_5_Template(rf, ctx) {
            if (1 & rf) {
                var _r35 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "a", 43), fesm2022_core["\u0275\u0275listener"]("accessible-click", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r35);
                    var ctx_r34 = fesm2022_core["\u0275\u0275nextContext"](3);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r34.launchFeedbackDialog(-1, !1));
                }), fesm2022_core["\u0275\u0275element"](1, "span", 44), fesm2022_core["\u0275\u0275elementEnd"]();
            }
        }
        function QnaReportContainerComponent_ng_container_9_div_5_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 40)(1, "div", 41)(2, "div")(3, "span"), 
            fesm2022_core["\u0275\u0275text"](4), fesm2022_core["\u0275\u0275elementEnd"](), 
            fesm2022_core["\u0275\u0275template"](5, QnaReportContainerComponent_ng_container_9_div_5_a_5_Template, 2, 0, "a", 42), 
            fesm2022_core["\u0275\u0275elementEnd"]()()()), 2 & rf) {
                var ctx_r18 = fesm2022_core["\u0275\u0275nextContext"](2);
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngStyle", fesm2022_core["\u0275\u0275pureFunction5"](3, _c7, null == ctx_r18.inputPresentation || null == ctx_r18.inputPresentation.restatementFontProperties ? null : ctx_r18.inputPresentation.restatementFontProperties.color, null == ctx_r18.inputPresentation || null == ctx_r18.inputPresentation.restatementFontProperties ? null : ctx_r18.inputPresentation.restatementFontProperties.family, null == ctx_r18.inputPresentation || null == ctx_r18.inputPresentation.restatementFontProperties ? null : ctx_r18.inputPresentation.restatementFontProperties.weight, null == ctx_r18.inputPresentation || null == ctx_r18.inputPresentation.restatementFontProperties ? null : ctx_r18.inputPresentation.restatementFontProperties.style, null == ctx_r18.inputPresentation || null == ctx_r18.inputPresentation.restatementFontProperties ? null : ctx_r18.inputPresentation.restatementFontProperties.textDecoration)), 
                fesm2022_core["\u0275\u0275advance"](3), fesm2022_core["\u0275\u0275textInterpolate"](ctx_r18.viewModel.result.message), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", ctx_r18.allowFeedback && ctx_r18.core.shouldShowdoNotUnderstandMessageFeedbackLink());
            }
        }
        function QnaReportContainerComponent_ng_container_9_div_6_a_2_Template(rf, ctx) {
            if (1 & rf) {
                var _r38 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "a", 43), fesm2022_core["\u0275\u0275listener"]("accessible-click", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r38);
                    var ctx_r37 = fesm2022_core["\u0275\u0275nextContext"](3);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r37.launchFeedbackDialog(-1, !1));
                }), fesm2022_core["\u0275\u0275element"](1, "span", 44), fesm2022_core["\u0275\u0275elementEnd"]();
            }
        }
        function QnaReportContainerComponent_ng_container_9_div_6_Template(rf, ctx) {
            if (1 & rf) {
                var _r40 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "div", 45)(1, "canvas-visual-error-overlay", 17), 
                fesm2022_core["\u0275\u0275listener"]("showErrorDetails", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r40);
                    var ctx_r39 = fesm2022_core["\u0275\u0275nextContext"](2);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r39.showResultErrorDetails());
                }), fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275template"](2, QnaReportContainerComponent_ng_container_9_div_6_a_2_Template, 2, 0, "a", 42), 
                fesm2022_core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r19 = fesm2022_core["\u0275\u0275nextContext"](2);
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("errorInfo", ctx_r19.viewModel.result)("viewport", ctx_r19.viewModel.viewport), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", ctx_r19.allowFeedback && ctx_r19.core.shouldShowdoNotUnderstandMessageFeedbackLink());
            }
        }
        function QnaReportContainerComponent_ng_container_9_ng_template_7_div_0_spinner_1_Template(rf, ctx) {
            1 & rf && fesm2022_core["\u0275\u0275element"](0, "spinner", 51), 2 & rf && fesm2022_core["\u0275\u0275property"]("delay", 0);
        }
        function QnaReportContainerComponent_ng_container_9_ng_template_7_div_0_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 48), fesm2022_core["\u0275\u0275template"](1, QnaReportContainerComponent_ng_container_9_ng_template_7_div_0_spinner_1_Template, 1, 1, "spinner", 49), 
            fesm2022_core["\u0275\u0275element"](2, "single-visual-host", 50), fesm2022_core["\u0275\u0275elementEnd"]()), 
            2 & rf) {
                var ctx_r41 = fesm2022_core["\u0275\u0275nextContext"](3);
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", ctx_r41.viewModel.result.isLoading), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("visual", ctx_r41.viewModel.result.visual)("visualViewport", ctx_r41.viewModel.viewport)("themeCollection", ctx_r41.viewModel.themeCollection)("config", ctx_r41.core.singleVisualHostConfig);
            }
        }
        function QnaReportContainerComponent_ng_container_9_ng_template_7_div_1_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 52), fesm2022_core["\u0275\u0275element"](1, "explore-canvas", 53), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r42 = fesm2022_core["\u0275\u0275nextContext"](3);
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("viewModel", ctx_r42.viewModel.result.exploreCanvas)("canvasOptions", ctx_r42.canvasOptions)("disableOutspacePane", "VisualAsExploration" !== ctx_r42.viewModel.result.type);
            }
        }
        function QnaReportContainerComponent_ng_container_9_ng_template_7_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275template"](0, QnaReportContainerComponent_ng_container_9_ng_template_7_div_0_Template, 3, 5, "div", 46), 
            fesm2022_core["\u0275\u0275template"](1, QnaReportContainerComponent_ng_container_9_ng_template_7_div_1_Template, 2, 3, "div", 47)), 
            2 & rf) {
                var ctx_r21 = fesm2022_core["\u0275\u0275nextContext"](2);
                fesm2022_core["\u0275\u0275property"]("ngIf", ctx_r21.viewModel.result.visual && ctx_r21.core.singleVisualHostConfig), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", ctx_r21.viewModel.result.exploreCanvas && ctx_r21.jQueryUILoaded);
            }
        }
        function QnaReportContainerComponent_ng_container_9_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0, 22), fesm2022_core["\u0275\u0275template"](1, QnaReportContainerComponent_ng_container_9_div_1_Template, 3, 2, "div", 23), 
            fesm2022_core["\u0275\u0275template"](2, QnaReportContainerComponent_ng_container_9_div_2_Template, 2, 1, "div", 24), 
            fesm2022_core["\u0275\u0275template"](3, QnaReportContainerComponent_ng_container_9_div_3_Template, 2, 1, "div", 24), 
            fesm2022_core["\u0275\u0275template"](4, QnaReportContainerComponent_ng_container_9_div_4_Template, 2, 1, "div", 24), 
            fesm2022_core["\u0275\u0275template"](5, QnaReportContainerComponent_ng_container_9_div_5_Template, 6, 9, "div", 25), 
            fesm2022_core["\u0275\u0275template"](6, QnaReportContainerComponent_ng_container_9_div_6_Template, 3, 3, "div", 26), 
            fesm2022_core["\u0275\u0275template"](7, QnaReportContainerComponent_ng_container_9_ng_template_7_Template, 2, 2, "ng-template", null, 27, fesm2022_core["\u0275\u0275templateRefExtractor"]), 
            fesm2022_core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var ctx_r6 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275property"]("ngSwitch", ctx_r6.viewModel.result.type), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngSwitchCase", "Suggestions"), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngSwitchCase", "Visual"), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngSwitchCase", "VisualAsExploration"), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngSwitchCase", "Pod"), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngSwitchCase", "DoNotUnderstand"), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngSwitchCase", "Error");
            }
        }
        function QnaReportContainerComponent_div_10_span_2_Template(rf, ctx) {
            if (1 & rf && fesm2022_core["\u0275\u0275element"](0, "span", 61), 2 & rf) {
                var resizablePanes_r44 = fesm2022_core["\u0275\u0275nextContext"]().ngIf;
                fesm2022_core["\u0275\u0275property"]("resizeEdges", resizablePanes_r44.TaskPane.resizeEdges);
            }
        }
        function QnaReportContainerComponent_div_10_span_3_Template(rf, ctx) {
            if (1 & rf && fesm2022_core["\u0275\u0275element"](0, "span", 62), 2 & rf) {
                var resizablePanes_r44 = fesm2022_core["\u0275\u0275nextContext"]().ngIf;
                fesm2022_core["\u0275\u0275property"]("resizeEdges", resizablePanes_r44.TaskPane.resizeEdges);
            }
        }
        function QnaReportContainerComponent_div_10_span_6_Template(rf, ctx) {
            if (1 & rf && fesm2022_core["\u0275\u0275element"](0, "span", 61), 2 & rf) {
                var resizablePanes_r44 = fesm2022_core["\u0275\u0275nextContext"]().ngIf;
                fesm2022_core["\u0275\u0275property"]("resizeEdges", resizablePanes_r44.VisualizationPane.resizeEdges);
            }
        }
        function QnaReportContainerComponent_div_10_span_7_Template(rf, ctx) {
            if (1 & rf && fesm2022_core["\u0275\u0275element"](0, "span", 62), 2 & rf) {
                var resizablePanes_r44 = fesm2022_core["\u0275\u0275nextContext"]().ngIf;
                fesm2022_core["\u0275\u0275property"]("resizeEdges", resizablePanes_r44.VisualizationPane.resizeEdges);
            }
        }
        var _c8 = function(a0) {
            return {
                isCollapsed: a0
            };
        }, _c9 = function(a0) {
            return {
                "width.px": a0
            };
        }, _c10 = function(a0) {
            return {
                paneViewModel: a0
            };
        };
        function QnaReportContainerComponent_div_10_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 54)(1, "div", 55), 
            fesm2022_core["\u0275\u0275template"](2, QnaReportContainerComponent_div_10_span_2_Template, 1, 1, "span", 56), 
            fesm2022_core["\u0275\u0275template"](3, QnaReportContainerComponent_div_10_span_3_Template, 1, 1, "span", 57), 
            fesm2022_core["\u0275\u0275element"](4, "data-pane", 58), fesm2022_core["\u0275\u0275elementEnd"](), 
            fesm2022_core["\u0275\u0275elementStart"](5, "div", 59), fesm2022_core["\u0275\u0275template"](6, QnaReportContainerComponent_div_10_span_6_Template, 1, 1, "span", 56), 
            fesm2022_core["\u0275\u0275template"](7, QnaReportContainerComponent_div_10_span_7_Template, 1, 1, "span", 57), 
            fesm2022_core["\u0275\u0275element"](8, "pbi-lazy-load", 60), fesm2022_core["\u0275\u0275elementEnd"]()()), 
            2 & rf) {
                var resizablePanes_r44 = ctx.ngIf, ctx_r7 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction1"](18, _c8, !resizablePanes_r44.TaskPane.isExpanded))("ngStyle", fesm2022_core["\u0275\u0275pureFunction1"](20, _c9, resizablePanes_r44.TaskPane.width))("enableGhostResize", !0)("validateResize", ctx_r7.getResizeValidator("TaskPane")), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", resizablePanes_r44.TaskPane.resizeEdges.left), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", resizablePanes_r44.TaskPane.resizeEdges.right), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("disallowExpandCollapse", ctx_r7.taskPaneViewModel.disallowExpandCollapse)("title", ctx_r7.taskPaneViewModel.title), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction1"](22, _c8, !resizablePanes_r44.VisualizationPane.isExpanded))("ngStyle", fesm2022_core["\u0275\u0275pureFunction1"](24, _c9, resizablePanes_r44.VisualizationPane.width))("enableGhostResize", !0)("resizeEdges", resizablePanes_r44.VisualizationPane.resizeEdges)("validateResize", ctx_r7.getResizeValidator("VisualizationPane")), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", resizablePanes_r44.VisualizationPane.resizeEdges.left), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", resizablePanes_r44.VisualizationPane.resizeEdges.right), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("modulePath", ctx_r7.exploreUIAuthoringModulePath)("componentId", "VisualizationPaneModernComponentId")("inputArgs", fesm2022_core["\u0275\u0275pureFunction1"](26, _c10, ctx_r7.visualizationPaneViewModel));
            }
        }
        function QnaReportContainerComponent_div_12_span_2_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "span", 68), fesm2022_core["\u0275\u0275text"](1), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r53 = fesm2022_core["\u0275\u0275nextContext"](2);
                fesm2022_core["\u0275\u0275attribute"]("aria-label", ctx_r53.viewModel.result.restatement.tooltipDescription), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275textInterpolate1"](" ", ctx_r53.viewModel.result.restatement.tooltipDescription, " ");
            }
        }
        function QnaReportContainerComponent_div_12_span_3_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "span"), fesm2022_core["\u0275\u0275text"](1), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r54 = fesm2022_core["\u0275\u0275nextContext"](2);
                fesm2022_core["\u0275\u0275attribute"]("aria-label", ctx_r54.getModelInfo()), fesm2022_core["\u0275\u0275advance"](1), 
                fesm2022_core["\u0275\u0275textInterpolate1"](" ", ctx_r54.getModelInfo(), " ");
            }
        }
        function QnaReportContainerComponent_div_12_div_4_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 69), fesm2022_core["\u0275\u0275element"](1, "qna-feedback-lazy", 70), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r55 = fesm2022_core["\u0275\u0275nextContext"](2);
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("fontColor", null == ctx_r55.inputPresentation || null == ctx_r55.inputPresentation.restatementFontProperties ? null : ctx_r55.inputPresentation.restatementFontProperties.color);
            }
        }
        function QnaReportContainerComponent_div_12_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 63)(1, "div", 64), 
            fesm2022_core["\u0275\u0275template"](2, QnaReportContainerComponent_div_12_span_2_Template, 2, 2, "span", 65), 
            fesm2022_core["\u0275\u0275template"](3, QnaReportContainerComponent_div_12_span_3_Template, 2, 2, "span", 66), 
            fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275template"](4, QnaReportContainerComponent_div_12_div_4_Template, 2, 1, "div", 67), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r8 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("ngIf", (null == ctx_r8.viewModel.result ? null : ctx_r8.viewModel.result.restatement) && ctx_r8.showFullRestatement), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", null == ctx_r8.viewModel.result ? null : ctx_r8.viewModel.result.modelId), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", ctx_r8.allowFeedback && ctx_r8.core.showFeedbackForCurrentQuestion());
            }
        }
        var _c11 = function(a0, a1) {
            return {
                contentReady: a0,
                suggestionContent: a1
            };
        }, defaultResizeablePane = {
            width: 32,
            maxExpandedWidth: 420,
            minExpandedWidth: 180,
            isExpanded: !1,
            resizeEdges: {
                right: !0
            }
        }, QnaReportContainerComponent = function() {
            function QnaReportContainerComponent(dataSources, dir, eventBridge, explorationCapabilitiesService, featureSwitchService, filterGenerator, geocoder, geolocationService, itemPicker, localizationService, moduleLoader, panesVisibilityService, resourceLoader, resourcePackagesService, telemetryService, themeService, viewModeState, visualAuthoring, visualHostTooltipServiceFactory, azureMapTokenCache, azureMapsEndpoint, geocoderIndexedDB, promiseFactory, explorationNavigation, core) {
                this.dataSources = dataSources, this.dir = dir, this.eventBridge = eventBridge, 
                this.explorationCapabilitiesService = explorationCapabilitiesService, this.featureSwitchService = featureSwitchService, 
                this.filterGenerator = filterGenerator, this.geocoder = geocoder, this.geolocationService = geolocationService, 
                this.itemPicker = itemPicker, this.localizationService = localizationService, this.moduleLoader = moduleLoader, 
                this.panesVisibilityService = panesVisibilityService, this.resourceLoader = resourceLoader, 
                this.resourcePackagesService = resourcePackagesService, this.telemetryService = telemetryService, 
                this.themeService = themeService, this.viewModeState = viewModeState, this.visualAuthoring = visualAuthoring, 
                this.visualHostTooltipServiceFactory = visualHostTooltipServiceFactory, this.azureMapTokenCache = azureMapTokenCache, 
                this.azureMapsEndpoint = azureMapsEndpoint, this.geocoderIndexedDB = geocoderIndexedDB, 
                this.promiseFactory = promiseFactory, this.explorationNavigation = explorationNavigation, 
                this.core = core, this.utteranceUpdated = new fesm2022_core.EventEmitter, this.pinnableContentDefinitionUpdated = new fesm2022_core.EventEmitter, 
                this.convertVisual = new fesm2022_core.EventEmitter, this.toolingLaunched = new fesm2022_core.EventEmitter, 
                this.utteranceRestated = new fesm2022_core.EventEmitter, this.interpretationError = new fesm2022_core.EventEmitter, 
                this.canvasOptions = {
                    autoLayoutVisualPadding: 0,
                    scrollbarOffset: 0
                }, this.visualizationPaneViewModel = (0, viewModelFactory.Ee)(), this.taskPaneViewModel = (0, 
                viewModelFactory.gk)(), this.resizablePanes$ = new BehaviorSubject.X({
                    TaskPane: defaultResizeablePane,
                    VisualizationPane: defaultResizeablePane
                }), this.onDestroy$ = new Subject.xQ, this.panesVisibilityService.registerPane("data", this.taskPaneViewModel, !1, {
                    isPaneExpanded: !0,
                    isPaneVisible: !0
                }), this.panesVisibilityService.registerPane("format", this.visualizationPaneViewModel, !1, {
                    isPaneExpanded: !1,
                    isPaneVisible: !0
                }), this.viewModel = this.core.viewModel;
            }
            return Object.defineProperty(QnaReportContainerComponent.prototype, "sourceExploration", {
                set: function(value) {
                    value && this.explorationNavigation && this.explorationNavigation.loadExploration(value);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(QnaReportContainerComponent.prototype, "qnaInputV2LazyComponent", {
                set: function(lazyComponent) {
                    this.core.setGetQnaInputComponentFunc(function() {
                        return lazyComponent && lazyComponent.inputBox;
                    });
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(QnaReportContainerComponent.prototype, "jQueryUILoaded", {
                get: function() {
                    var _this = this;
                    return void 0 === this.jQueryUILoadedPromise && (this.jQueryUILoadedPromise = this.moduleLoader.require(JQueryUIModule).then(function() {
                        return _this.isJQueryUILoaded = !0;
                    }, function() {
                        return _this.isJQueryUILoaded = !1;
                    })), this.isJQueryUILoaded;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(QnaReportContainerComponent.prototype, "exploreUIAuthoringModulePath", {
                get: function() {
                    return "@powerbi/ExploreUIAuthoring/lazy-modules/explore-ui-authoring/explore-ui-authoring.module#ExploreUIAuthoringModule";
                },
                enumerable: !1,
                configurable: !0
            }), QnaReportContainerComponent.prototype.ngOnInit = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var options, modelDataSources, modelDataSourcesArray, _a, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return this.explorationCapabilities && this.explorationCapabilitiesService.setCapabilities(this.explorationCapabilities), 
                            this.viewModeState.setMode(0), this.panesVisibilityService.setPaneExpansion("data", !1), 
                            this.panesVisibilityService.setPaneExpansion("format", !1), this.panesVisibilityService.getPanes$().pipe((0, 
                            takeUntil.R)(this.onDestroy$), (0, map.U)(function(panes) {
                                return _.pick(panes, [ "data", "format" ]);
                            })).subscribe(function(_a) {
                                var _b, TaskPane = (_b = _this.resizablePanes$.value).TaskPane, VisualizationPane = _b.VisualizationPane, visualizationPaneExpanded = _a.format.isPaneExpanded, isRtl = "rtl" === _this.dir.value;
                                _this.resizablePanes$.next({
                                    TaskPane: updateResizablePane(TaskPane, _a.data.isPaneExpanded, TaskPane.width, isRtl),
                                    VisualizationPane: updateResizablePane(VisualizationPane, visualizationPaneExpanded, VisualizationPane.width, isRtl)
                                });
                            }), this.visualizationPaneViewModel.visualPluginFilter = function(plugin) {
                                return !_this.filterGenerator.tryGetFilterPropertyIdentifier(plugin.capabilities) && plugin.name !== plugins.L.qnaVisual.name && plugin.name !== plugins.L.textbox.name;
                            }, this.viewModeState.updateConfig(function(config) {
                                return config.alwaysPopulatePanes = !0;
                            }), (options = this.explorationCapabilitiesService.getCapabilities()).visualContainerOptions.hideHeader = !0, 
                            options.visualContainerOptions.showContextMenu = !1, options.disableCustomVisualPluginActions = !0, 
                            options.showFluentDesign = !0, options.forceCollapseTaskPane = !0, options.disableEnhancedTooltips = !0, 
                            this.initializedTelemetryEvent = this.telemetryService.logEvent(telemetry_events.dZ, {
                                isAuthoring: !1,
                                entryPoint: this.entryPoint
                            }), this.incomingUtterance && "Embedded" === this.entryPoint && this.incomingUtterance.subscribe(function(utterance) {
                                utterance && _this.interpretSuggestedQuestion(utterance);
                            }), modelDataSources = [ (0, dataSource.CD)(_.first(this.models)) ], modelDataSourcesArray = (0, 
                            dataSource.yd)(modelDataSources), this.dataSources.set(modelDataSourcesArray), [ 4, this.core.initialize(this.models, this.config, (0, 
                            Prototype.ED)((0, visualHostService.q)({
                                geocoder: this.geocoder,
                                geolocation: this.geolocationService,
                                localizationService: this.localizationService,
                                moduleLoader: this.moduleLoader,
                                promiseFactory: this.promiseFactory,
                                visualHostTooltipService: this.visualHostTooltipServiceFactory.createFromVisualContract(this.core.getCurrentVisual()),
                                getAzureMapToken: function() {
                                    return _this.azureMapTokenCache.getAzureMapToken();
                                },
                                azureMapsEndpoint: this.azureMapsEndpoint,
                                geocoderIndexedDB: this.geocoderIndexedDB
                            }), function(h) {
                                h.getLocalizedString = function(g) {
                                    return _this.localizationService.get(g);
                                };
                            }), this.entryPoint, this.utteranceUpdated, this.convertVisual, this.initializedTelemetryEvent, this.contentContainerElement, this.pinnableContentDefinitionUpdated, this.utteranceRestated, this.interpretationError, this.sourceFilters) ];

                          case 1:
                            return _b.sent(), _a = this, [ 4, this.core.shouldShowThumbsUpDown() ];

                          case 2:
                            return _a.allowFeedback = _b.sent(), this.suggestionPresentationArgs ? [ 4, this.core.update({
                                type: enums.EP.Style,
                                objects: convertSuggestionsPrensentation(this.suggestionPresentationArgs)
                            }) ] : [ 3, 4 ];

                          case 3:
                            _b.sent(), _b.label = 4;

                          case 4:
                            return this.subscriptionManager = this.eventBridge.createChannelSubscriptionManager().subscribe(events.ilH, function(_e, args) {
                                return _this.onVisualConversion(args);
                            }), this.useModernFormatPane = this.featureSwitchService.featureSwitches.useModernFormatPane, 
                            [ 2 ];
                        }
                    });
                });
            }, QnaReportContainerComponent.prototype.ngAfterViewInit = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var themeCollection;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return themeCollection = this.explorationNavigation ? (0, visual_util.Su)(this.explorationNavigation, this.featureSwitchService) : (0, 
                            visual_util.D4)(this.featureSwitchService), [ 4, themeUtils.P.loadThemeAndBaseTheme(this.promiseFactory, this.resourceLoader, this.themeService, this.resourcePackagesService.getAllPackages(), themeCollection) ];

                          case 1:
                            return _a.sent(), this.itemPicker.setThemeItems(this.themeService.getDataColors(themeCollection), this.themeService.getIcons(themeCollection), this.themeService.getIconSets(themeCollection)), 
                            this.core.update({
                                type: enums.EP.Style
                            }), this.resize(), [ 2 ];
                        }
                    });
                });
            }, QnaReportContainerComponent.prototype.ngOnDestroy = function() {
                this.subscriptionManager && this.subscriptionManager.unsubscribeAll(), this.onDestroy$.next(), 
                this.onDestroy$.complete();
            }, QnaReportContainerComponent.prototype.resize = function() {
                var nativeElement = this.qnaReportContainerElement.nativeElement;
                this.componentViewport = {
                    scale: 1,
                    width: nativeElement.clientWidth,
                    height: nativeElement.clientHeight
                }, this.core.update({
                    type: enums.EP.Resize,
                    viewport: {
                        height: nativeElement.clientHeight,
                        width: nativeElement.clientWidth
                    }
                });
            }, QnaReportContainerComponent.prototype.getResizeValidator = function(resizablePaneType) {
                var _this = this;
                return function(event) {
                    var _a;
                    if (event.rectangle && event.rectangle.width) {
                        var resizablePanes = _this.resizablePanes$.value, resizablePane = resizablePanes[resizablePaneType], width = event.rectangle.width;
                        if (resizablePane.minExpandedWidth <= width && width <= resizablePane.maxExpandedWidth) return _this.resizablePanes$.next((0, 
                        tslib_es6.__assign)((0, tslib_es6.__assign)({}, resizablePanes), ((_a = {})[resizablePaneType] = updateResizablePane(resizablePane, resizablePane.isExpanded, width, "rtl" === _this.dir.value), 
                        _a))), !0;
                    }
                    return !1;
                };
            }, Object.defineProperty(QnaReportContainerComponent.prototype, "displayedRestatement", {
                get: function() {
                    if ("Ready" === this.viewModel.state) {
                        var content = this.viewModel.result;
                        if (content) return (0, qna_component_core_utils.mn)(content) || (0, qna_component_core_utils.fU)(content) || (0, 
                        qna_component_core_utils.lP)(content) ? content.restatement : void 0;
                    }
                },
                enumerable: !1,
                configurable: !0
            }), QnaReportContainerComponent.prototype.getCurrentVisual = function() {
                return this.core.getCurrentVisual();
            }, QnaReportContainerComponent.prototype.interpretSuggestedQuestion = function(suggestion) {
                this.core.interpretSuggestedQuestion(suggestion);
            }, QnaReportContainerComponent.prototype.toggleShowAllSuggestions = function() {
                this.core.toggleShowAllSuggestions();
            }, QnaReportContainerComponent.prototype.showQnaVisualErrorDetails = function() {
                this.core.showQnaVisualErrorDetails();
            }, QnaReportContainerComponent.prototype.showResultlErrorDetails = function() {
                this.core.showResultErrorDetails();
            }, QnaReportContainerComponent.prototype.onToolingLaunched = function() {
                this.toolingLaunched.emit();
            }, Object.defineProperty(QnaReportContainerComponent.prototype, "inputPresentation", {
                get: function() {
                    if (this.viewModel) return this.viewModel.presentationViewModel.inputBox;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(QnaReportContainerComponent.prototype, "suggestionsPresentation", {
                get: function() {
                    if (this.viewModel) return this.viewModel.presentationViewModel.suggestions;
                },
                enumerable: !1,
                configurable: !0
            }), QnaReportContainerComponent.prototype.launchFeedbackDialog = function(sentiment, showOptions) {
                this.core.launchFeedbackDialog(sentiment, showOptions);
            }, QnaReportContainerComponent.prototype.getModelInfo = function() {
                var _a, content = null === (_a = this.viewModel) || void 0 === _a ? void 0 : _a.result;
                if (content && ((0, qna_component_core_utils.lP)(content) || (0, qna_component_core_utils.mn)(content) || (0, 
                qna_component_core_utils.fU)(content))) {
                    var modelId_1 = content.modelId, model = _.find(this.models, function(m) {
                        return m.id === modelId_1;
                    });
                    if (!_.isEmpty(null == model ? void 0 : model.displayName)) return this.localizationService.format("InfoNav_SourceLabel", [ model.displayName ]);
                }
            }, QnaReportContainerComponent.prototype.canShowPanes = function() {
                var _a, content = null === (_a = this.viewModel) || void 0 === _a ? void 0 : _a.result;
                return !!content && (0, qna_component_core_utils.fU)(content) && this.jQueryUILoaded && !this.config.disablePanes;
            }, QnaReportContainerComponent.prototype.canShowFooter = function() {
                var _a, _b;
                if ("Ready" !== (null === (_a = this.viewModel) || void 0 === _a ? void 0 : _a.state)) return !1;
                if (this.allowFeedback && this.core.showFeedbackForCurrentQuestion()) return !0;
                var content = null === (_b = this.viewModel) || void 0 === _b ? void 0 : _b.result;
                return !!content && !!((0, qna_component_core_utils.lP)(content) || (0, qna_component_core_utils.mn)(content) || (0, 
                qna_component_core_utils.fU)(content)) && (content.restatement && this.showFullRestatement || !!content.modelId);
            }, QnaReportContainerComponent.prototype.onVisualConversion = function(args) {
                var _a, _b;
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var content, exploreCanvas, converted;
                    return (0, tslib_es6.__generator)(this, function(_c) {
                        switch (_c.label) {
                          case 0:
                            return content = null === (_a = this.viewModel) || void 0 === _a ? void 0 : _a.result, 
                            (0, qna_component_core_utils.fU)(content) ? (exploreCanvas = content.exploreCanvas) ? [ 4, this.visualAuthoring.convert(args.visualContainer, this.dataSources.get(), args.newVisualType, exploreCanvas.contract) ] : [ 2 ] : [ 3, 2 ];

                          case 1:
                            return converted = _c.sent(), null === (_b = args.actionAfterConversion) || void 0 === _b || _b.call(args, converted), 
                            [ 3, 3 ];

                          case 2:
                            debug.fF.assertFail("Cannot convert a non visual"), _c.label = 3;

                          case 3:
                            return [ 2 ];
                        }
                    });
                });
            }, QnaReportContainerComponent.\u0275fac = function(t) {
                return new (t || QnaReportContainerComponent)(fesm2022_core["\u0275\u0275directiveInject"](data_sources_service.D), fesm2022_core["\u0275\u0275directiveInject"](bidi.Is), fesm2022_core["\u0275\u0275directiveInject"](event_bridge_service.J), fesm2022_core["\u0275\u0275directiveInject"](exploration_capabilities_service.U), fesm2022_core["\u0275\u0275directiveInject"](feature_switch_service.vZ), fesm2022_core["\u0275\u0275directiveInject"](filter_generator_service.r), fesm2022_core["\u0275\u0275directiveInject"](geocoder_service.i), fesm2022_core["\u0275\u0275directiveInject"](Common._1), fesm2022_core["\u0275\u0275directiveInject"](item_picker_service.a), fesm2022_core["\u0275\u0275directiveInject"](localization_service.o), fesm2022_core["\u0275\u0275directiveInject"](module_loader_service.m), fesm2022_core["\u0275\u0275directiveInject"](panes_visibility_service.r), fesm2022_core["\u0275\u0275directiveInject"](resource_loader_service.l6), fesm2022_core["\u0275\u0275directiveInject"](resource_packages_service.o), fesm2022_core["\u0275\u0275directiveInject"](Telemetry.y0), fesm2022_core["\u0275\u0275directiveInject"](theme_service.f), fesm2022_core["\u0275\u0275directiveInject"](view_mode_state_service.kc), fesm2022_core["\u0275\u0275directiveInject"](visual_authoring_service.$8), fesm2022_core["\u0275\u0275directiveInject"](visual_host_tooltip_service_factory_service.RT), fesm2022_core["\u0275\u0275directiveInject"](azure_map_token_cache_service.o), fesm2022_core["\u0275\u0275directiveInject"](azure_maps_endpoint_service.A), fesm2022_core["\u0275\u0275directiveInject"](geocoder_indexed_db_service.W), fesm2022_core["\u0275\u0275directiveInject"](promiseFactory.t), fesm2022_core["\u0275\u0275directiveInject"](exploration_navigation_service.z, 8), fesm2022_core["\u0275\u0275directiveInject"](qna_component_core_service.D));
            }, QnaReportContainerComponent.\u0275cmp = fesm2022_core["\u0275\u0275defineComponent"]({
                type: QnaReportContainerComponent,
                selectors: [ [ "qna-report-container" ] ],
                viewQuery: function(rf, ctx) {
                    if (1 & rf && (fesm2022_core["\u0275\u0275viewQuery"](qna_input_v2_lazy_component.j, 5), 
                    fesm2022_core["\u0275\u0275viewQuery"](_c0, 7, fesm2022_core.ElementRef), fesm2022_core["\u0275\u0275viewQuery"](_c1, 7, fesm2022_core.ElementRef)), 
                    2 & rf) {
                        var _t = void 0;
                        fesm2022_core["\u0275\u0275queryRefresh"](_t = fesm2022_core["\u0275\u0275loadQuery"]()) && (ctx.qnaInputV2LazyComponent = _t.first), 
                        fesm2022_core["\u0275\u0275queryRefresh"](_t = fesm2022_core["\u0275\u0275loadQuery"]()) && (ctx.qnaReportContainerElement = _t.first), 
                        fesm2022_core["\u0275\u0275queryRefresh"](_t = fesm2022_core["\u0275\u0275loadQuery"]()) && (ctx.contentContainerElement = _t.first);
                    }
                },
                hostBindings: function(rf, ctx) {
                    1 & rf && fesm2022_core["\u0275\u0275listener"]("resize", function() {
                        return ctx.resize();
                    }, !1, fesm2022_core["\u0275\u0275resolveWindow"]);
                },
                inputs: {
                    models: "models",
                    config: "config",
                    entryPoint: "entryPoint",
                    showFullRestatement: "showFullRestatement",
                    incomingUtterance: "incomingUtterance",
                    sourceExploration: "sourceExploration",
                    explorationCapabilities: "explorationCapabilities",
                    sourceFilters: "sourceFilters",
                    suggestionPresentationArgs: "suggestionPresentationArgs"
                },
                outputs: {
                    utteranceUpdated: "utteranceUpdated",
                    pinnableContentDefinitionUpdated: "pinnableContentDefinitionUpdated",
                    convertVisual: "convertVisual",
                    toolingLaunched: "toolingLaunched",
                    utteranceRestated: "utteranceRestated",
                    interpretationError: "interpretationError"
                },
                features: [ fesm2022_core["\u0275\u0275ProvidersFeature"]((0, tslib_es6.__spreadArray)((0, 
                tslib_es6.__spreadArray)([], scoped_services.u, !0), [ qna_component_core_service.D, interpret_listener_service.y ], !1)) ],
                decls: 13,
                vars: 14,
                consts: [ [ "data-testid", "qna-visual", 1, "qnaVisual", 3, "ngSwitch" ], [ "qnaReportContainer", "" ], [ "class", "loadingContainer", 4, "ngSwitchCase" ], [ "class", "errorContainer", 4, "ngSwitchCase" ], [ "class", "header", 4, "ngSwitchCase" ], [ "class", "glyphicon icon glyph-small pbi-glyph-info restatementIcon", "data-testid", "restatement-icon", "tabindex", "0", 3, "ngStyle", "pbi-tooltip", 4, "ngIf" ], [ 1, "content", "explorationContainer", "newPaneColors", 3, "ngClass" ], [ 1, "contentContainer" ], [ "contentContainer", "" ], [ 3, "ngSwitch", 4, "ngIf" ], [ "class", "panes", 4, "ngIf" ], [ "class", "footer", 4, "ngIf" ], [ 1, "loadingContainer" ], [ 1, "loading" ], [ "size", "large", 3, "delay" ], [ "localize", "Qna_InitialLoading" ], [ 1, "errorContainer" ], [ 3, "errorInfo", "viewport", "showErrorDetails" ], [ 1, "header" ], [ "drag-resize-disabled", "true", "class", "inputBox", "tabindex", "-1", 3, "entryPoint", "qnaSupportedScopes", "interpretListener", "presentationArgs", "configs", "initialUtterance", "inputBoxFocused", 4, "ngIf" ], [ "drag-resize-disabled", "true", "tabindex", "-1", 1, "inputBox", 3, "entryPoint", "qnaSupportedScopes", "interpretListener", "presentationArgs", "configs", "initialUtterance", "inputBoxFocused" ], [ "data-testid", "restatement-icon", "tabindex", "0", 1, "glyphicon", "icon", "glyph-small", "pbi-glyph-info", "restatementIcon", 3, "ngStyle", "pbi-tooltip" ], [ 3, "ngSwitch" ], [ "class", "suggestionsContainer", 4, "ngSwitchCase" ], [ "class", "visualResultContainer", 4, "ngSwitchCase" ], [ "class", "doNotUnderstandContainer", 4, "ngSwitchCase" ], [ "class", "resultErrorContainer", 4, "ngSwitchCase" ], [ "visualOrCanvasTemplate", "" ], [ 1, "suggestionsContainer" ], [ "class", "suggestions", 4, "ngIf" ], [ "class", "suggestionsWarning", 3, "ngStyle", 4, "ngIf" ], [ 1, "suggestions" ], [ "localize", "Visual_Qna_SuggestionsHeader", 1, "suggestionTitle", 3, "ngStyle" ], [ "data-testid", "suggestions-list", 1, "suggestionsList" ], [ "class", "suggestion themeableElement", "tabindex", "0", "role", "button", "data-testid", "suggestion", 3, "ngStyle", "accessible-click", 4, "ngFor", "ngForOf" ], [ "data-testid", "show-all-toggle", "tabindex", "0", "role", "button", 1, "showAllToggle", 3, "localize", "localizeAttr", "accessible-click" ], [ "tabindex", "0", "role", "button", "data-testid", "suggestion", 1, "suggestion", "themeableElement", 3, "ngStyle", "accessible-click" ], [ 1, "suggestionsWarning", 3, "ngStyle" ], [ 1, "visualResultContainer" ], [ 4, "ngTemplateOutlet" ], [ 1, "doNotUnderstandContainer" ], [ "data-testid", "show-do-not-understand-message", 1, "showDoNotUnderstandMessage", 3, "ngStyle" ], [ "class", "tellUsMore", "href", "javascript:void(0);", 3, "accessible-click", 4, "ngIf" ], [ "href", "javascript:void(0);", 1, "tellUsMore", 3, "accessible-click" ], [ "localize", "Qna_Feedback_TellUsMore" ], [ 1, "resultErrorContainer" ], [ "class", "singleVisualHostContainer", 4, "ngIf" ], [ "class", "horizontalItemsContainer", 4, "ngIf" ], [ 1, "singleVisualHostContainer" ], [ "class", "loadingSpinner", "size", "small", 3, "delay", 4, "ngIf" ], [ "tabindex", "0", "focus-nav-mode", "Hierarchy", 3, "visual", "visualViewport", "themeCollection", "config" ], [ "size", "small", 1, "loadingSpinner", 3, "delay" ], [ 1, "horizontalItemsContainer" ], [ 1, "explore-canvas-style", 3, "viewModel", "canvasOptions", "disableOutspacePane" ], [ 1, "panes" ], [ "mwlResizable", "", 1, "taskPane", "sidePane", "rightSidePane", "smallFontSize", "dataPane", 3, "ngClass", "ngStyle", "enableGhostResize", "validateResize" ], [ "class", "resizeHandlerLeft", "mwlResizeHandle", "", 3, "resizeEdges", 4, "ngIf" ], [ "class", "resizeHandlerRight", "mwlResizeHandle", "", 3, "resizeEdges", 4, "ngIf" ], [ "data-automation-type", "taskPane", 3, "disallowExpandCollapse", "title" ], [ "mwlResizable", "", 1, "visualizationPane", "sidePane", "rightSidePane", "smallFontSize", "formatPane", 3, "ngClass", "ngStyle", "enableGhostResize", "resizeEdges", "validateResize" ], [ "data-automation-type", "visualizationPane", 3, "modulePath", "componentId", "inputArgs" ], [ "mwlResizeHandle", "", 1, "resizeHandlerLeft", 3, "resizeEdges" ], [ "mwlResizeHandle", "", 1, "resizeHandlerRight", 3, "resizeEdges" ], [ 1, "footer" ], [ 1, "resultInfo" ], [ "class", "restatementInfo", 4, "ngIf" ], [ 4, "ngIf" ], [ "class", "feedback", 4, "ngIf" ], [ 1, "restatementInfo" ], [ 1, "feedback" ], [ 3, "fontColor" ] ],
                template: function(rf, ctx) {
                    1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 0, 1), fesm2022_core["\u0275\u0275template"](2, QnaReportContainerComponent_div_2_Template, 4, 1, "div", 2), 
                    fesm2022_core["\u0275\u0275template"](3, QnaReportContainerComponent_div_3_Template, 2, 2, "div", 3), 
                    fesm2022_core["\u0275\u0275template"](4, QnaReportContainerComponent_div_4_Template, 2, 1, "div", 4), 
                    fesm2022_core["\u0275\u0275template"](5, QnaReportContainerComponent_i_5_Template, 1, 7, "i", 5), 
                    fesm2022_core["\u0275\u0275elementStart"](6, "div", 6)(7, "div", 7, 8), fesm2022_core["\u0275\u0275template"](9, QnaReportContainerComponent_ng_container_9_Template, 9, 7, "ng-container", 9), 
                    fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275template"](10, QnaReportContainerComponent_div_10_Template, 9, 28, "div", 10), 
                    fesm2022_core["\u0275\u0275pipe"](11, "async"), fesm2022_core["\u0275\u0275elementEnd"](), 
                    fesm2022_core["\u0275\u0275template"](12, QnaReportContainerComponent_div_12_Template, 5, 3, "div", 11), 
                    fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf && (fesm2022_core["\u0275\u0275property"]("ngSwitch", ctx.viewModel.state), 
                    fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("ngSwitchCase", "Loading"), 
                    fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngSwitchCase", "Error"), 
                    fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngSwitchCase", "Ready"), 
                    fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", !ctx.showFullRestatement && ctx.displayedRestatement), 
                    fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction2"](11, _c11, "Ready" === ctx.viewModel.state, ctx.viewModel.result && "Suggestions" === ctx.viewModel.result.type)), 
                    fesm2022_core["\u0275\u0275advance"](3), fesm2022_core["\u0275\u0275property"]("ngIf", ctx.viewModel.result), 
                    fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", ctx.canShowPanes() && fesm2022_core["\u0275\u0275pipeBind1"](11, 9, ctx.resizablePanes$)), 
                    fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("ngIf", ctx.canShowFooter()));
                },
                dependencies: [ common.NgClass, common.NgForOf, common.NgIf, common.NgTemplateOutlet, common.NgStyle, common.NgSwitch, common.NgSwitchCase, pbi_lazy_load_component.R, explore_canvas_component.eP, qna_input_v2_lazy_component.j, qna_feedback_lazy_component.$, canvas_visual_error_overlay_component.f, data_pane_component.D, single_visual_host_component.v, accessible_click_directive.t, localize_directive.X, localize_attr_directive.b, spinner_component.O, tooltip_directive.i, angular_resizable_element.E$, angular_resizable_element.mC, common.AsyncPipe ],
                styles: [ '.qnaVisual[_ngcontent-%COMP%]{font-size:12px;height:100%;display:flex;flex-direction:column}  html[data-focus-source=key] .qnaVisual:focus,   html[data-focus-source=key] .qnaVisual *:focus{outline:var(--focus-two-tone-outline-definition, auto 1px);outline-color:var(--focus-two-tone-outline-color, -webkit-focus-ring-color)}  html[data-focus-source=mouse] .qnaVisual:focus,   html[data-focus-source=mouse] .qnaVisual *:focus,   html[data-focus-source=program] .qnaVisual:focus,   html[data-focus-source=program] .qnaVisual *:focus{outline:none}.qnaVisual[_ngcontent-%COMP%]   .loadingContainer[_ngcontent-%COMP%]{display:flex;flex:1;align-items:center;justify-content:center}.qnaVisual[_ngcontent-%COMP%]   .loadingContainer[_ngcontent-%COMP%]   .loading[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center}.qnaVisual[_ngcontent-%COMP%]   .loadingContainer[_ngcontent-%COMP%]   .loading[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{font-size:14px;text-align:center;margin:12px}.qnaVisual[_ngcontent-%COMP%]   .errorContainer[_ngcontent-%COMP%]{flex:1}.qnaVisual[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]{display:flex;flex-direction:row;min-height:44px;position:relative;margin-top:4px}.qnaVisual[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .inputBox[_ngcontent-%COMP%]{flex:1;margin:4px 8px}.qnaVisual[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .qnaAction[_ngcontent-%COMP%]{margin:12px 4px 0;cursor:pointer;height:16px}.qnaVisual[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .qnaAction.disabled[_ngcontent-%COMP%]{color:var(--fluent-theme-neutral-tertiary-color, #A19F9D)!important;cursor:default}.qnaVisual[_ngcontent-%COMP%]   .restatementIcon[_ngcontent-%COMP%]{align-self:flex-end;cursor:default}.qnaVisual[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]{margin:4px;display:flex;flex:0;width:calc(100% - 8px)}.qnaVisual[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .contentContainer[_ngcontent-%COMP%]{height:100%;flex:1}.qnaVisual[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .suggestions[_ngcontent-%COMP%]{flex:1;display:flex;flex-direction:column}.qnaVisual[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .suggestions[_ngcontent-%COMP%]   .suggestionTitle[_ngcontent-%COMP%]{margin:1px 1px 12px 4px}.qnaVisual[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .suggestions[_ngcontent-%COMP%]   .suggestionsList[_ngcontent-%COMP%]{padding:0 4px;display:grid;grid-template-columns:repeat(auto-fit,minmax(180px,1fr));grid-template-rows:repeat(auto-fit,minmax(32px,1fr))}.qnaVisual[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .suggestions[_ngcontent-%COMP%]   .suggestionsList[_ngcontent-%COMP%]   .suggestion[_ngcontent-%COMP%]{font-size:14px;padding:12px 20px;border-radius:2px;box-shadow:var(--fluent-shadow-depth4, 0px 0px 2px var(--colorNeutralShadowAmbient), 0px 2px 4px var(--colorNeutralShadowKey));border:1px solid transparent;box-sizing:border-box;cursor:pointer;margin:0 12px 12px 0}.qnaVisual[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .suggestions[_ngcontent-%COMP%]   .showAllToggle[_ngcontent-%COMP%]{font-size:14px;color:var(--fluent-theme-link-color, #0078D4);margin:12px 4px;cursor:pointer;align-self:flex-end}.qnaVisual[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .visualResultContainer[_ngcontent-%COMP%]{position:relative;height:100%}.qnaVisual[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .visualResultContainer[_ngcontent-%COMP%]   .singleVisualHostContainer[_ngcontent-%COMP%]{height:100%}.qnaVisual[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .visualResultContainer[_ngcontent-%COMP%]   .singleVisualHostContainer[_ngcontent-%COMP%]   spinner[_ngcontent-%COMP%]{position:absolute;top:50%;left:50%}.qnaVisual[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .visualResultContainer[_ngcontent-%COMP%]   .singleVisualHostContainer[_ngcontent-%COMP%]   single-visual-host[_ngcontent-%COMP%]{position:relative;display:block;height:100%;background-color:transparent}.qnaVisual[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .visualResultContainer[_ngcontent-%COMP%]   .singleVisualHostContainer[_ngcontent-%COMP%]   single-visual-host[_ngcontent-%COMP%]     .visual{height:100%}.qnaVisual[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .visualResultContainer[_ngcontent-%COMP%]   .horizontalItemsContainer[_ngcontent-%COMP%]{height:100%}.qnaVisual[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .visualResultContainer[_ngcontent-%COMP%]   .horizontalItemsContainer[_ngcontent-%COMP%]   explore-canvas[_ngcontent-%COMP%]{height:100%}.qnaVisual[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .doNotUnderstandContainer[_ngcontent-%COMP%]{display:flex;justify-content:center;height:100%}.qnaVisual[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .doNotUnderstandContainer[_ngcontent-%COMP%]   .showDoNotUnderstandMessage[_ngcontent-%COMP%], .qnaVisual[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .suggestionsContainer[_ngcontent-%COMP%]   .suggestionsWarning[_ngcontent-%COMP%]{display:flex;text-align:center;align-items:center;font-size:14px;max-width:450px;padding:20px;width:100%;box-sizing:border-box}.qnaVisual[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .doNotUnderstandContainer[_ngcontent-%COMP%]   .showDoNotUnderstandMessage[_ngcontent-%COMP%]   span[_ngcontent-%COMP%], .qnaVisual[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .suggestionsContainer[_ngcontent-%COMP%]   .suggestionsWarning[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{margin-right:4px}.qnaVisual[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .resultErrorContainer[_ngcontent-%COMP%]{height:100%;position:relative;background-color:var(--neutral-lighter-color, #F4F4F4);display:flex;flex-direction:column;justify-content:center}.qnaVisual[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .resultErrorContainer[_ngcontent-%COMP%]   canvas-visual-error-overlay[_ngcontent-%COMP%]{position:relative;height:auto}.qnaVisual[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .resultErrorContainer[_ngcontent-%COMP%]   .tellUsMore[_ngcontent-%COMP%]{text-align:center;font-size:14px}.qnaVisual[_ngcontent-%COMP%]   .content.contentReady[_ngcontent-%COMP%]{flex:1}.qnaVisual[_ngcontent-%COMP%]   .content.suggestionContent[_ngcontent-%COMP%]{overflow-y:auto;flex-basis:0}.qnaVisual[_ngcontent-%COMP%]   .footer[_ngcontent-%COMP%]{display:flex;align-items:center}html:not([dir="rtl"])[_nghost-%COMP%]   .qnaVisual[_ngcontent-%COMP%]   .footer[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .qnaVisual[_ngcontent-%COMP%]   .footer[_ngcontent-%COMP%]{padding:0 12px 8px}html[dir="rtl"][_nghost-%COMP%]   .qnaVisual[_ngcontent-%COMP%]   .footer[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .qnaVisual[_ngcontent-%COMP%]   .footer[_ngcontent-%COMP%]{padding:0 12px 8px}.qnaVisual[_ngcontent-%COMP%]   .footer[_ngcontent-%COMP%]   .resultInfo[_ngcontent-%COMP%]{display:flex;flex-direction:column;flex:1;margin-right:32px;width:calc(100% - 300px)}.qnaVisual[_ngcontent-%COMP%]   .footer[_ngcontent-%COMP%]   .resultInfo[_ngcontent-%COMP%]   .restatementInfo[_ngcontent-%COMP%]{margin-bottom:2px;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.qnaVisual[_ngcontent-%COMP%]   .footer[_ngcontent-%COMP%]   .feedback[_ngcontent-%COMP%]   qna-feedback-lazy[_ngcontent-%COMP%]{float:right}.resizeHandlerLeft[_ngcontent-%COMP%]{left:0;position:absolute;height:100%;cursor:col-resize;width:5px;z-index:1}.resizeHandlerRight[_ngcontent-%COMP%]{right:0;position:absolute;height:100%;cursor:col-resize;width:5px;z-index:1}' ]
            }), QnaReportContainerComponent;
        }();
        function convertSuggestionsPrensentation(presentation) {
            var _a;
            return {
                suggestions: {
                    cardBackground: createFillColor(presentation.backgroundColor),
                    cardFontColor: createFillColor(null === (_a = presentation.cardFontProperties) || void 0 === _a ? void 0 : _a.color)
                }
            };
        }
        function createFillColor(colorCode) {
            return {
                solid: {
                    color: colorCode
                }
            };
        }
        function updateResizablePane(prevPane, isExpanded, currentWidth, isRtl) {
            var width = currentWidth;
            return isExpanded && 32 === width ? width = 180 : isExpanded || (width = 32), (0, 
            tslib_es6.__assign)((0, tslib_es6.__assign)({}, prevPane), {
                width,
                isExpanded,
                resizeEdges: isRtl ? {
                    right: isExpanded
                } : {
                    left: isExpanded
                }
            });
        }
        var constants = __webpack_require__(2142), pbi_overlay_ref = __webpack_require__(86286);
        function QnaPopoutComponent_qna_report_container_4_Template(rf, ctx) {
            if (1 & rf) {
                var _r4 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "qna-report-container", 6), fesm2022_core["\u0275\u0275listener"]("toolingLaunched", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r4);
                    var ctx_r3 = fesm2022_core["\u0275\u0275nextContext"]();
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r3.onToolingLaunched());
                }), fesm2022_core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r1 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275property"]("models", ctx_r1.viewModel.models)("config", ctx_r1.viewModel.configs)("entryPoint", "Popout")("showFullRestatement", !1)("explorationCapabilities", ctx_r1.args.explorationCapabilities)("sourceExploration", ctx_r1.viewModel.sourceExploration)("sourceFilters", ctx_r1.viewModel.sourceFilters);
            }
        }
        function QnaPopoutComponent_div_5_Template(rf, ctx) {
            1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 7), fesm2022_core["\u0275\u0275element"](1, "i", 8)(2, "span", 9), 
            fesm2022_core["\u0275\u0275elementEnd"]());
        }
        var defaultQnaConfig = {
            canEdit: !1,
            canShowPods: !0,
            canShowVisuals: !0,
            canShowDidYouMean: !0,
            focusOnInit: !0,
            resetDataSources: !0
        }, QnaPopoutComponent = function() {
            function QnaPopoutComponent(overlayRef) {
                this.overlayRef = overlayRef;
            }
            return Object.defineProperty(QnaPopoutComponent.prototype, "_qnaReportContainer", {
                set: function(reportContainer) {
                    this.reportContainerComponent || (this.reportContainerComponent = reportContainer);
                },
                enumerable: !1,
                configurable: !0
            }), QnaPopoutComponent.prototype.ngOnInit = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var sourceExploration, sourceExplorationReportId, scopes, models, qnaDataSource, interpretScopeModel, reportIds;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        return sourceExplorationReportId = (sourceExploration = this.args.sourceExploration) && sourceExploration.reportId, 
                        scopes = [], models = [], qnaDataSource = _.find(this.args.dataSources, function(d) {
                            return d.type === constants.nKy;
                        }), interpretScopeModel = {
                            vsName: qnaDataSource.dsr.vsName,
                            dbName: qnaDataSource.dsr.dbName,
                            qnaSupported: !0,
                            id: qnaDataSource.dsr.modelId || 1
                        }, sourceExplorationReportId && sourceExploration.report && interpretScopeModel.id === sourceExploration.report.modelId && (reportIds = [ sourceExplorationReportId ]), 
                        models.push(interpretScopeModel), scopes.push({
                            model: interpretScopeModel,
                            reportIds
                        }), this.viewModel = {
                            configs: _.merge({}, defaultQnaConfig, {
                                canEdit: 0 !== this.args.viewMode
                            }),
                            models,
                            sourceExploration,
                            sourceFilters: this.args.sourceFilters
                        }, [ 2 ];
                    });
                });
            }, QnaPopoutComponent.prototype.ngAfterViewInit = function() {
                this.resize(), this.reportContainerComponent && this.reportContainerComponent.resize();
            }, QnaPopoutComponent.prototype.resize = function() {
                this.overlayRef.overlayRef.updatePosition();
            }, QnaPopoutComponent.prototype.ngOnDestroy = function() {
                this.viewModel = void 0;
            }, QnaPopoutComponent.prototype.onToolingLaunched = function() {
                this.overlayRef.close();
            }, QnaPopoutComponent.\u0275fac = function(t) {
                return new (t || QnaPopoutComponent)(fesm2022_core["\u0275\u0275directiveInject"](pbi_overlay_ref.w));
            }, QnaPopoutComponent.\u0275cmp = fesm2022_core["\u0275\u0275defineComponent"]({
                type: QnaPopoutComponent,
                selectors: [ [ "qna-popout-modern" ] ],
                viewQuery: function(rf, ctx) {
                    var _t;
                    1 & rf && fesm2022_core["\u0275\u0275viewQuery"](QnaReportContainerComponent, 5), 
                    2 & rf && fesm2022_core["\u0275\u0275queryRefresh"](_t = fesm2022_core["\u0275\u0275loadQuery"]()) && (ctx._qnaReportContainer = _t.first);
                },
                hostBindings: function(rf, ctx) {
                    1 & rf && fesm2022_core["\u0275\u0275listener"]("resize", function() {
                        return ctx.resize();
                    }, !1, fesm2022_core["\u0275\u0275resolveWindow"]);
                },
                inputs: {
                    args: "args"
                },
                decls: 6,
                vars: 2,
                consts: [ [ 1, "modernQnaPopout", "themeableElement" ], [ "qnaPopout", "" ], [ 1, "closeButton" ], [ 1, "glyphicon", "pbi-glyph-close", "glyph-mini", 3, "accessible-click" ], [ 3, "models", "config", "entryPoint", "showFullRestatement", "explorationCapabilities", "sourceExploration", "sourceFilters", "toolingLaunched", 4, "ngIf" ], [ "class", "filterInfo", 4, "ngIf" ], [ 3, "models", "config", "entryPoint", "showFullRestatement", "explorationCapabilities", "sourceExploration", "sourceFilters", "toolingLaunched" ], [ 1, "filterInfo" ], [ 1, "glyphicon", "pbi-glyph-filter", "filterBtnIcon", "glyph-mini" ], [ "localize", "Qna_PopoutFiltersApplied" ] ],
                template: function(rf, ctx) {
                    1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 0, 1)(2, "div", 2)(3, "i", 3), 
                    fesm2022_core["\u0275\u0275listener"]("accessible-click", function() {
                        return ctx.onToolingLaunched();
                    }), fesm2022_core["\u0275\u0275elementEnd"]()(), fesm2022_core["\u0275\u0275template"](4, QnaPopoutComponent_qna_report_container_4_Template, 1, 7, "qna-report-container", 4), 
                    fesm2022_core["\u0275\u0275template"](5, QnaPopoutComponent_div_5_Template, 3, 0, "div", 5), 
                    fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf && (fesm2022_core["\u0275\u0275advance"](4), 
                    fesm2022_core["\u0275\u0275property"]("ngIf", ctx.viewModel), fesm2022_core["\u0275\u0275advance"](1), 
                    fesm2022_core["\u0275\u0275property"]("ngIf", ctx.viewModel && ctx.viewModel.sourceFilters.length > 0));
                },
                dependencies: [ common.NgIf, accessible_click_directive.t, localize_directive.X, QnaReportContainerComponent ],
                styles: [ ".modernQnaPopout[_ngcontent-%COMP%]{display:flex;flex-direction:column;height:100%;background-color:var(--fluent-theme-white-color, #FFF);padding:20px}.modernQnaPopout[_ngcontent-%COMP%]   .closeButton[_ngcontent-%COMP%]{display:flex;justify-content:flex-end}.modernQnaPopout[_ngcontent-%COMP%]   .closeButton[_ngcontent-%COMP%]   .glyphicon[_ngcontent-%COMP%]{cursor:pointer}.modernQnaPopout[_ngcontent-%COMP%]   qna-report-container[_ngcontent-%COMP%]{flex:1}.modernQnaPopout[_ngcontent-%COMP%]   .filterInfo[_ngcontent-%COMP%]{padding-right:32px;margin-top:12px;font-size:12px;display:flex}.modernQnaPopout[_ngcontent-%COMP%]   .filterInfo[_ngcontent-%COMP%]   .filterBtnIcon[_ngcontent-%COMP%]{margin-right:4px}" ]
            }), QnaPopoutComponent;
        }(), a11y_module = __webpack_require__(20914), ExploreCanvas_module = __webpack_require__(70935), ExploreUI_module = __webpack_require__(87121), explore_ui_authoring_eager_module = __webpack_require__(20993), lazy_load_module = __webpack_require__(82156), localization_module = __webpack_require__(79061), Qna_module = __webpack_require__(1931), QnaUI_module = __webpack_require__(11429), UILibrary_module = __webpack_require__(94785), manifests = [ {
            type: QnaReportContainerComponent,
            componentId: "QnaReportContainerComponentId"
        }, {
            type: QnaPopoutComponent,
            componentId: "QnaPopoutComponentId"
        } ], QnaReportContainerInternalModule = function() {
            function QnaReportContainerInternalModule() {}
            return QnaReportContainerInternalModule.\u0275fac = function(t) {
                return new (t || QnaReportContainerInternalModule);
            }, QnaReportContainerInternalModule.\u0275mod = fesm2022_core["\u0275\u0275defineNgModule"]({
                type: QnaReportContainerInternalModule
            }), QnaReportContainerInternalModule.\u0275inj = fesm2022_core["\u0275\u0275defineInjector"]({
                imports: [ common.CommonModule, lazy_load_module.N.withManifests(manifests), ExploreCanvas_module.b, explore_ui_authoring_eager_module.T, Qna_module.T, QnaUI_module.m, ExploreUI_module.J, a11y_module._, localization_module.v, UILibrary_module.g, angular_resizable_element.ym ]
            }), QnaReportContainerInternalModule;
        }();
    },
    35691: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            $g: function() {
                return QnaAutoCompleteDropdownSelected;
            },
            AM: function() {
                return ImproveLsdlBackgroundLogin;
            },
            F2: function() {
                return ImproveLsdlBackgroundResultEventName;
            },
            S4: function() {
                return ImproveLsdlBackgroundResult;
            },
            UV: function() {
                return ImproveLsdlBackgroundPrompt;
            },
            Zg: function() {
                return ImproveLsdlBackgroundPromptEventName;
            },
            dY: function() {
                return QnaAutoCompleteInitialized;
            },
            dZ: function() {
                return QnaVisualInitialized;
            },
            gk: function() {
                return ImproveLsdlBackgroundLoginEventName;
            }
        });
        var _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(41114), QnaVisualInitialized = _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.cx["PBI.QnaVisual.Initialized"] = (0, 
        _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.b1)("PBI.QnaVisual.Initialized", {
            logExpAssignment: !0
        }), QnaAutoCompleteInitialized = _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.cx["PBI.QnaAutoComplete.Initialized"] = (0, 
        _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.b1)("PBI.QnaAutoComplete.Initialized"), QnaAutoCompleteDropdownSelected = _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.cx["PBI.QnaAutoComplete.DropdownSelected"] = (0, 
        _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.b1)("PBI.QnaAutoComplete.DropdownSelected"), ImproveLsdlBackgroundLoginEventName = "PBI.ImproveLsdlBackground.Login", ImproveLsdlBackgroundLogin = _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.cx[ImproveLsdlBackgroundLoginEventName] = (0, 
        _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.b1)(ImproveLsdlBackgroundLoginEventName), ImproveLsdlBackgroundPromptEventName = "PBI.ImproveLsdlBackground.Prompt", ImproveLsdlBackgroundPrompt = _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.cx[ImproveLsdlBackgroundPromptEventName] = (0, 
        _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.b1)(ImproveLsdlBackgroundPromptEventName), ImproveLsdlBackgroundResultEventName = "PBI.ImproveLsdlBackground.Result", ImproveLsdlBackgroundResult = _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.cx[ImproveLsdlBackgroundResultEventName] = (0, 
        _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.b1)(ImproveLsdlBackgroundResultEventName);
    },
    1931: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            T: function() {
                return QnaModule;
            }
        });
        var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(77476), _powerbi_Data__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(52910), _powerbi_ErrorService__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(13052), _powerbi_Explore__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(31109), _powerbi_ExploreUI__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(87121), _powerbi_FeatureSwitch__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(76521), _powerbi_GeocoderIndexedDB__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(40516), _powerbi_Geocoding__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(84497), _powerbi_Localization__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(79061), _powerbi_Telemetry__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(21617), _powerbi_UILibrary_UILibrary_module__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(94785), _powerbi_VisualHostCore__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(3176), _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(50423), QnaModule = function() {
            function QnaModule() {}
            return QnaModule.\u0275fac = function(t) {
                return new (t || QnaModule);
            }, QnaModule.\u0275mod = _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275defineNgModule"]({
                type: QnaModule
            }), QnaModule.\u0275inj = _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275defineInjector"]({
                imports: [ _angular_common__WEBPACK_IMPORTED_MODULE_2__.CommonModule, _powerbi_Data__WEBPACK_IMPORTED_MODULE_3__.O, _powerbi_ErrorService__WEBPACK_IMPORTED_MODULE_4__.T, _powerbi_Explore__WEBPACK_IMPORTED_MODULE_5__.F, _powerbi_ExploreUI__WEBPACK_IMPORTED_MODULE_6__.J, _powerbi_FeatureSwitch__WEBPACK_IMPORTED_MODULE_7__.A3, _powerbi_GeocoderIndexedDB__WEBPACK_IMPORTED_MODULE_8__.h, _powerbi_Geocoding__WEBPACK_IMPORTED_MODULE_9__.L, _powerbi_Localization__WEBPACK_IMPORTED_MODULE_10__.v, _powerbi_Telemetry__WEBPACK_IMPORTED_MODULE_0__.e3, _powerbi_UILibrary_UILibrary_module__WEBPACK_IMPORTED_MODULE_11__.g, _powerbi_VisualHostCore__WEBPACK_IMPORTED_MODULE_12__.c ]
            }), QnaModule;
        }();
    },
    37320: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            y: function() {
                return InterpretListenerFactory;
            }
        });
        var tslib__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(81337), rxjs__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(35510), _powerbi_legacy_Explore_contracts_dataSource__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(74804), _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(62458), _powerbi_Typings_Modern_Shared_Explore_typings__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(58291), _powerbi_legacy_Explore_constants__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(57871), _powerbi_legacy_Explore_util_filterUtils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(42614), _powerbi_legacy_Explore_util_visualContainerUtils__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(3579), _powerbi_legacy_PowerBIVisuals_VisualsData_semanticQuery_sqFrom__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(38953), _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(3468), _utils_wireClientContractsConversion_util__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(35988), _utils_visual_util__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(74857), _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(50423), _powerbi_Data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(26898), _powerbi_Explore__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(83008), _powerbi_Explore__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(81986), _powerbi_Explore__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(21436), _powerbi_LazyLoad__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(28894), _powerbi_VisualHostCore__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(84916), _powerbi_VisualHostCore__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(29866), InterpretListenerFactory = function() {
            function InterpretListenerFactory(conceptualSchemaProxy, dataSources, explorationSerializer, lazyScoped, podExplorationResolver, resourcePackage, visualPlugin) {
                this.conceptualSchemaProxy = conceptualSchemaProxy, this.dataSources = dataSources, 
                this.explorationSerializer = explorationSerializer, this.lazyScoped = lazyScoped, 
                this.podExplorationResolver = podExplorationResolver, this.resourcePackage = resourcePackage, 
                this.visualPlugin = visualPlugin;
            }
            return InterpretListenerFactory.prototype.createInterpretListener = function(setupParams, timeout) {
                return void 0 === timeout && (timeout = 500), new InterpretListener(this.conceptualSchemaProxy, this.dataSources, this.explorationSerializer, this.lazyScoped, this.podExplorationResolver, this.resourcePackage, this.visualPlugin, setupParams, timeout);
            }, InterpretListenerFactory.\u0275fac = function(t) {
                return new (t || InterpretListenerFactory)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275inject"](_powerbi_Data__WEBPACK_IMPORTED_MODULE_1__.i), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275inject"](_powerbi_Explore__WEBPACK_IMPORTED_MODULE_2__.D), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275inject"](_powerbi_Explore__WEBPACK_IMPORTED_MODULE_3__.L), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275inject"](_powerbi_LazyLoad__WEBPACK_IMPORTED_MODULE_4__.H), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275inject"](_powerbi_Explore__WEBPACK_IMPORTED_MODULE_5__.Bl), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275inject"](_powerbi_VisualHostCore__WEBPACK_IMPORTED_MODULE_6__.o), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275inject"](_powerbi_VisualHostCore__WEBPACK_IMPORTED_MODULE_7__.D));
            }, InterpretListenerFactory.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275defineInjectable"]({
                token: InterpretListenerFactory,
                factory: InterpretListenerFactory.\u0275fac
            }), InterpretListenerFactory;
        }(), InterpretListener = function() {
            function InterpretListener(conceptualSchemaProxy, dataSources, explorationSerializer, lazyScoped, podExplorationResolver, resourcePackage, visualPlugin, setupParams, timeout) {
                this.conceptualSchemaProxy = conceptualSchemaProxy, this.dataSources = dataSources, 
                this.explorationSerializer = explorationSerializer, this.lazyScoped = lazyScoped, 
                this.podExplorationResolver = podExplorationResolver, this.resourcePackage = resourcePackage, 
                this.visualPlugin = visualPlugin, this.setupParams = setupParams, this.timeout = timeout, 
                _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_8__.fF.assertValue(setupParams, "setupParams"), 
                this.updateManager = new ObservableUpdateManager(this.timeout), this.setupParams = setupParams;
            }
            return InterpretListener.prototype.getObservable = function() {
                return this.updateManager.getObservable();
            }, InterpretListener.prototype.onInterpretIssued = function() {
                this.cancelErrorThrottler(), this.updateManager.pushUpdate({
                    resultType: 0
                });
            }, InterpretListener.prototype.onInterpretRetry = function(warning) {
                this.updateManager.pushUpdate({
                    resultType: 1,
                    retryWarning: warning
                });
            }, InterpretListener.prototype.onInterpretResultCleared = function() {
                this.cancelErrorThrottler(), this.updateManager.pushUpdate({
                    resultType: 4,
                    utterance: ""
                });
            }, InterpretListener.prototype.onInterpretResult = function(request, response) {
                var _a;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__awaiter)(this, void 0, void 0, function() {
                    var firstResult;
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__generator)(this, function(_b) {
                        var warnings;
                        return response.error || !this.setupParams.forTrainingTermBinding && _.isEmpty(response.results) || this.setupParams.forTrainingTermBinding && _.every(response.results, function(r) {
                            return !r.command;
                        }) && (warnings = response.warnings) && !_.find(warnings, function(warning) {
                            return 2 === warning || 8 === warning || 11 === warning || 12 === warning || 9 === warning || 10 === warning || 24 === warning;
                        }) ? (firstResult = _.first(response.results), this.onInterpretErrorV2(response.utterance, request, response.error, null == firstResult ? void 0 : firstResult.spans, null === (_a = null == firstResult ? void 0 : firstResult.correctionInfo) || void 0 === _a ? void 0 : _a.correctedUtterance), 
                        [ 2 ]) : [ 2, this.onInterpretSuccessV2(response, request) ];
                    });
                });
            }, InterpretListener.prototype.onInterpretSuccessV2 = function(interpretResponse, request) {
                var _a, _b;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__awaiter)(this, void 0, void 0, function() {
                    var firstResult, semanticQuery;
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__generator)(this, function(_c) {
                        switch (_c.label) {
                          case 0:
                            return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_8__.fF.assertValue(interpretResponse, "interpretResponse"), 
                            this.cancelErrorThrottler(), (null === (_a = null == request ? void 0 : request.intent) || void 0 === _a ? void 0 : _a.defineCalculation) ? [ 4, this.handleCalculationResult(interpretResponse, request) ] : [ 3, 2 ];

                          case 1:
                            return _c.sent(), [ 3, 6 ];

                          case 2:
                            return firstResult = _.first(interpretResponse.results), (semanticQuery = null === (_b = null == firstResult ? void 0 : firstResult.command) || void 0 === _b ? void 0 : _b.query) && _.find(semanticQuery.from().sources(), function(fromSource) {
                                return (0, _powerbi_legacy_PowerBIVisuals_VisualsData_semanticQuery_sqFrom__WEBPACK_IMPORTED_MODULE_10__.Yg)(fromSource);
                            }) ? [ 4, this.handlePodPageResult(interpretResponse, request) ] : [ 3, 4 ];

                          case 3:
                            return _c.sent(), [ 3, 6 ];

                          case 4:
                            return [ 4, this.handleVisualResult(interpretResponse, request) ];

                          case 5:
                            _c.sent(), _c.label = 6;

                          case 6:
                            return [ 2 ];
                        }
                    });
                });
            }, InterpretListener.prototype.onInterpretErrorV2 = function(utterance, request, error, spans, correctedUtterance) {
                var _this = this;
                _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_8__.fF.assertValue(utterance, "utterance"), 
                this.cancelErrorThrottler();
                var termBindingsTrainingInfo = this.setupParams.forTrainingTermBinding ? {
                    spans,
                    correctedUtterance
                } : void 0;
                this.errorThrottler = setTimeout(function() {
                    _this.updateManager.pushThrottledUpdate({
                        request,
                        resultType: 3,
                        interpretError: error,
                        utterance,
                        termBindingsTrainingInfo,
                        doNotShowResult: !0
                    }), _this.errorThrottler = void 0;
                }, this.timeout);
            }, InterpretListener.prototype.cancelErrorThrottler = function() {
                this.errorThrottler && clearTimeout(this.errorThrottler), this.errorThrottler = void 0;
            }, InterpretListener.prototype.handlePodPageResult = function(interpretResponse, request) {
                return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__awaiter)(this, void 0, void 0, function() {
                    var interpretResult, utterance, termBindingsTrainingInfo, command, semanticQuery, podFromSource, reportId, exploration, _a, _b, pod, sectionName_1, section_1, queryMetadata, queryDefinition, parameterFilters, resourcePackages, model, modelId, hideLowConfidenceResult;
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__generator)(this, function(_d) {
                        switch (_d.label) {
                          case 0:
                            if (interpretResult = _.first(null == interpretResponse ? void 0 : interpretResponse.results), 
                            _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_8__.fF.assertValue(interpretResult, "query interpretResult must be defined for handling pod result"), 
                            utterance = interpretResponse.utterance, termBindingsTrainingInfo = getTermsBindingTrainingInfo(interpretResult), 
                            this.setupParams.forTrainingTermBinding) return this.updateManager.pushThrottledUpdate({
                                request,
                                resultType: 2,
                                utterance,
                                termBindingsTrainingInfo,
                                doNotShowResult: !1
                            }), [ 2 ];
                            if (!this.setupParams.canShowPods) return this.updateManager.pushThrottledUpdate({
                                request,
                                resultType: 5,
                                utterance
                            }), [ 2 ];
                            _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_8__.fF.assertValue(semanticQuery = null == (command = null == interpretResult ? void 0 : interpretResult.command) ? void 0 : command.query, "interpretResult command must have a defined query for handling pod result"), 
                            podFromSource = _.find(semanticQuery.from().sources(), function(fromSource) {
                                return (0, _powerbi_legacy_PowerBIVisuals_VisualsData_semanticQuery_sqFrom__WEBPACK_IMPORTED_MODULE_10__.Yg)(fromSource);
                            }), _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_8__.fF.assertValue(podFromSource, "expect there is a pod entity"), 
                            reportId = this.podExplorationResolver.getReportId(podFromSource.schema), _d.label = 1;

                          case 1:
                            return _d.trys.push([ 1, 3, , 4 ]), _b = (_a = this.explorationSerializer).deepCopyExploration, 
                            [ 4, this.podExplorationResolver.getExploration(reportId) ];

                          case 2:
                            return exploration = _b.apply(_a, [ _d.sent() ]), pod = _.find(exploration.pods, function(p) {
                                return p.name === podFromSource.pod;
                            }), sectionName_1 = pod && pod.boundSection, section_1 = _.find(exploration.sections, function(s) {
                                return sectionName_1 === s.name;
                            }), pod && sectionName_1 && section_1 ? (_powerbi_legacy_Explore_util_filterUtils__WEBPACK_IMPORTED_MODULE_11__.l.mergeExplorationSectionFilters(exploration, section_1), 
                            queryMetadata = (0, _utils_visual_util__WEBPACK_IMPORTED_MODULE_12__.Nj)(null == command ? void 0 : command.queryMetadata), 
                            queryDefinition = _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_13__.ib.serializeQuery(semanticQuery), 
                            _.isEmpty(queryDefinition.Where) || (parameterFilters = _powerbi_legacy_Explore_util_filterUtils__WEBPACK_IMPORTED_MODULE_11__.l.extractParameterFilters(queryDefinition, queryMetadata), 
                            _powerbi_legacy_Explore_util_filterUtils__WEBPACK_IMPORTED_MODULE_11__.l.applySectionParameterFilters(section_1, pod, void 0, parameterFilters)), 
                            resourcePackages = _.filter(exploration.resourcePackages, function(rp) {
                                return _.some(section_1.visualContainers, function(vc) {
                                    return (0, _powerbi_legacy_Explore_util_visualContainerUtils__WEBPACK_IMPORTED_MODULE_14__.s)(vc) === rp.name;
                                });
                            }), _.isEmpty(resourcePackages) || (this.resourcePackage.registerPackages(resourcePackages), 
                            this.visualPlugin.ensurePlugins(resourcePackages)), section_1.size.displayOption = 1, 
                            exploration.activeSectionIndex = _.findIndex(exploration.sections, function(s) {
                                return s.name === section_1.name;
                            }), model = this.getModelFromResult(interpretResult), this.ensureDataSources(model, exploration), 
                            modelId = model.id, hideLowConfidenceResult = this.getNotShowLowConfidenceResult(interpretResult), 
                            this.updateManager.pushThrottledUpdate({
                                request,
                                resultType: 2,
                                modelId,
                                utterance,
                                exploration,
                                restatement: interpretResult.restatement,
                                doNotShowResult: hideLowConfidenceResult,
                                usedAgents: null == interpretResult ? void 0 : interpretResult.usedAgents
                            }), [ 3, 4 ]) : (this.updateManager.pushThrottledUpdate({
                                request,
                                resultType: 6,
                                utterance
                            }), [ 2 ]);

                          case 3:
                            return _d.sent(), this.updateManager.pushThrottledUpdate({
                                request,
                                resultType: 6,
                                utterance
                            }), [ 3, 4 ];

                          case 4:
                            return [ 2 ];
                        }
                    });
                });
            }, InterpretListener.prototype.handleVisualResult = function(interpretResponse, request) {
                return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__awaiter)(this, void 0, void 0, function() {
                    var utterance, interpretResult, returnTermBindingsTrainingInfo, queryUnSupportedLevelWarningsInfo, queryUnSupportedLevelWarningMessageKeys, hasUnsupportedWarnings, visualContainer, command, model, visualRecommendation, notShowLowConfidenceResult;
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            if (_powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_8__.fF.assertValue(interpretResponse, "interpretResponse"), 
                            utterance = interpretResponse.utterance, interpretResult = _.first(null == interpretResponse ? void 0 : interpretResponse.results), 
                            !this.setupParams.canShowVisuals) return this.updateManager.pushThrottledUpdate(this.setupParams.forTrainingTermBinding ? {
                                request,
                                resultType: 2,
                                utterance,
                                termBindingsTrainingInfo: getTermsBindingTrainingInfo(interpretResult),
                                doNotShowResult: !1
                            } : {
                                request,
                                resultType: 5,
                                utterance
                            }), [ 2 ];
                            returnTermBindingsTrainingInfo = this.setupParams.forTrainingTermBinding ? getTermsBindingTrainingInfo(interpretResult) : void 0, 
                            _b.label = 1;

                          case 1:
                            return _b.trys.push([ 1, 4, , 5 ]), queryUnSupportedLevelWarningsInfo = (0, _utils_wireClientContractsConversion_util__WEBPACK_IMPORTED_MODULE_15__.vr)(null == interpretResponse ? void 0 : interpretResponse.warnings), 
                            queryUnSupportedLevelWarningMessageKeys = _.uniq(_.map(queryUnSupportedLevelWarningsInfo, function(info) {
                                return info.messageKey;
                            })), hasUnsupportedWarnings = !_.isEmpty(queryUnSupportedLevelWarningsInfo), visualContainer = void 0, 
                            (command = interpretResult && interpretResult.command) && command.query ? _.isEmpty(queryUnSupportedLevelWarningsInfo) ? (model = this.getModelFromResult(interpretResult), 
                            this.ensureDataSources(model, void 0), [ 4, this.lazyScoped.get("visualRecommendationService") ]) : (this.updateManager.pushThrottledUpdate({
                                request,
                                resultType: 2,
                                utterance,
                                termBindingsTrainingInfo: returnTermBindingsTrainingInfo,
                                doNotShowResult: !0,
                                doNotShowResultCustomMessageKeys: queryUnSupportedLevelWarningMessageKeys
                            }), [ 2 ]) : (this.updateManager.pushThrottledUpdate({
                                request,
                                resultType: this.setupParams.forTrainingTermBinding ? 2 : 3,
                                utterance,
                                termBindingsTrainingInfo: returnTermBindingsTrainingInfo,
                                doNotShowResult: !this.setupParams.forTrainingTermBinding || hasUnsupportedWarnings,
                                doNotShowResultCustomMessageKeys: hasUnsupportedWarnings ? queryUnSupportedLevelWarningMessageKeys : void 0
                            }), [ 2 ]);

                          case 2:
                            return visualRecommendation = _b.sent(), [ 4, (0, _utils_visual_util__WEBPACK_IMPORTED_MODULE_12__.y_)(interpretResult, this.conceptualSchemaProxy, this.dataSources, visualRecommendation) ];

                          case 3:
                            return (visualContainer = _b.sent()) ? (notShowLowConfidenceResult = this.getNotShowLowConfidenceResult(interpretResult), 
                            this.updateManager.pushThrottledUpdate({
                                request,
                                resultType: 2,
                                modelId: model.id,
                                utterance,
                                restatement: interpretResult && interpretResult.restatement,
                                termBindingsTrainingInfo: returnTermBindingsTrainingInfo,
                                visualContainer,
                                doNotShowResult: notShowLowConfidenceResult,
                                usedAgents: null == interpretResult ? void 0 : interpretResult.usedAgents
                            })) : this.updateManager.pushThrottledUpdate({
                                request,
                                resultType: 6,
                                utterance,
                                termBindingsTrainingInfo: returnTermBindingsTrainingInfo
                            }), [ 3, 5 ];

                          case 4:
                            return _b.sent(), this.updateManager.pushThrottledUpdate({
                                request,
                                resultType: 6,
                                utterance,
                                termBindingsTrainingInfo: returnTermBindingsTrainingInfo
                            }), [ 3, 5 ];

                          case 5:
                            return [ 2 ];
                        }
                    });
                });
            }, InterpretListener.prototype.handleCalculationResult = function(interpretResponse, request) {
                var _a;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__awaiter)(this, void 0, void 0, function() {
                    var utterance, calculations, _i, result_1, r;
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__generator)(this, function(_b) {
                        for (utterance = interpretResponse.utterance, this.setupParams.canShowCalculations || this.updateManager.pushThrottledUpdate({
                            request,
                            resultType: 5,
                            utterance
                        }), calculations = [], _i = 0, result_1 = interpretResponse.results; _i < result_1.length; _i++) (null === (_a = (r = result_1[_i]).command) || void 0 === _a ? void 0 : _a.defineCalculation) && !this.getNotShowLowConfidenceResult(r) && calculations.push((0, 
                        tslib__WEBPACK_IMPORTED_MODULE_9__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_9__.__assign)({}, r.command.defineCalculation), {
                            restatement: r.restatement
                        }));
                        return _.isEmpty(calculations) ? this.updateManager.pushThrottledUpdate({
                            request,
                            resultType: 3,
                            utterance
                        }) : this.updateManager.pushThrottledUpdate({
                            request,
                            resultType: 2,
                            utterance,
                            restatement: void 0,
                            doNotShowResult: !1,
                            calculations
                        }), [ 2 ];
                    });
                });
            }, InterpretListener.prototype.getNotShowLowConfidenceResult = function(interpretResult) {
                if (!(null == interpretResult ? void 0 : interpretResult.command)) return !0;
                var correctionState = interpretResult.correctionInfo && interpretResult.correctionInfo.state;
                return 0 === correctionState || 1 === correctionState && this.setupParams.canShowDidYouMean;
            }, InterpretListener.prototype.getModelFromResult = function(interpretResult) {
                var model = 1 === _.size(this.setupParams.models) ? this.setupParams.models[0] : _.find(this.setupParams.models, function(m) {
                    return m.dbName === interpretResult.databaseName && m.vsName === interpretResult.virtualServerName;
                });
                return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_8__.fF.assertValue(model, "There are multiple models for interpret, one of them should match the model that the interpret result is from"), 
                model;
            }, InterpretListener.prototype.ensureDataSources = function(model, exploration) {
                if (model && this.setupParams.resetDataSources) {
                    var dsrDataSource = (0, _powerbi_legacy_Explore_contracts_dataSource__WEBPACK_IMPORTED_MODULE_16__.CD)(model), modelDataSourcesArray = (0, 
                    _powerbi_legacy_Explore_contracts_dataSource__WEBPACK_IMPORTED_MODULE_16__.yd)([ dsrDataSource ]);
                    if (!_.isEmpty(null == exploration ? void 0 : exploration.modelExtensions)) {
                        var schemaName = _powerbi_legacy_Explore_constants__WEBPACK_IMPORTED_MODULE_17__.eM, dataSourceName = dsrDataSource.name;
                        modelDataSourcesArray.push({
                            type: _powerbi_Typings_Modern_Shared_Explore_typings__WEBPACK_IMPORTED_MODULE_18__.K,
                            id: void 0,
                            name: schemaName,
                            extends: dataSourceName,
                            exploration: {
                                schemaName,
                                extends: dataSourceName,
                                getModelExtensions: function() {
                                    return exploration.modelExtensions;
                                },
                                getDataSourceVariables: function() {
                                    return exploration.dataSourceVariables;
                                }
                            }
                        });
                    }
                    this.dataSources.set(modelDataSourcesArray);
                }
            }, InterpretListener;
        }();
        function getTermsBindingTrainingInfo(interpretResult) {
            if (interpretResult) {
                var command = interpretResult.command;
                return {
                    spans: interpretResult.spans,
                    correctedUtterance: interpretResult.correctionInfo && interpretResult.correctionInfo.correctedUtterance,
                    linguisticSchemaJson: command && command.linguisticSchemaJson,
                    linguisticSchemaItems: command && command.linguisticSchemaItems,
                    inferredTermMetadata: command && command.inferredTermMetadata
                };
            }
        }
        var ObservableUpdateManager = function() {
            function ObservableUpdateManager(timeout) {
                this.timeout = timeout, this.interpretResult$ = new rxjs__WEBPACK_IMPORTED_MODULE_19__.X(void 0);
            }
            return ObservableUpdateManager.prototype.getObservable = function() {
                return this.interpretResult$.asObservable();
            }, ObservableUpdateManager.prototype.pushUpdate = function(update) {
                this.throttler && clearTimeout(this.throttler), this.throttler = void 0, this.throttledUpdate = void 0, 
                this.interpretResult$.next(update), this.throttler = this.startThrottler();
            }, ObservableUpdateManager.prototype.pushThrottledUpdate = function(update) {
                this.throttler ? this.throttledUpdate = update : (this.interpretResult$.next(update), 
                this.throttler = this.startThrottler());
            }, ObservableUpdateManager.prototype.startThrottler = function() {
                var _this = this;
                return setTimeout(function() {
                    _this.throttledUpdate ? (_this.interpretResult$.next(_this.throttledUpdate), _this.throttledUpdate = void 0, 
                    _this.throttler = _this.startThrottler()) : _this.throttler = void 0;
                }, this.timeout);
            }, ObservableUpdateManager;
        }();
    },
    72129: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        function isSuggestedQuestionContent(content) {
            return "Suggestions" === (null == content ? void 0 : content.type);
        }
        function isQnaVisualContent(content) {
            return "Visual" === (null == content ? void 0 : content.type);
        }
        function isQnaVisualAsExplorationContent(content) {
            return "VisualAsExploration" === (null == content ? void 0 : content.type);
        }
        function isPodContent(content) {
            return "Pod" === (null == content ? void 0 : content.type);
        }
        function isErrorContent(content) {
            return "Error" === (null == content ? void 0 : content.type);
        }
        function isQueryErrorContent(content) {
            return "QueryError" === (null == content ? void 0 : content.type);
        }
        __webpack_require__.d(__webpack_exports__, {
            Ew: function() {
                return isSuggestedQuestionContent;
            },
            fU: function() {
                return isQnaVisualAsExplorationContent;
            },
            lP: function() {
                return isPodContent;
            },
            mn: function() {
                return isQnaVisualContent;
            },
            uT: function() {
                return isErrorContent;
            },
            wp: function() {
                return isQueryErrorContent;
            }
        });
    },
    7124: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            D: function() {
                return QnaComponentCoreService;
            }
        });
        var tslib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(81337), _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(50423), rxjs_operators__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(48787), _powerbi_InjectionTokens_account_service_token__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(92060), _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(79154), _powerbi_legacy_PowerBIVisuals_VisualsData_semanticQuery_sqExpr__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(94419), _powerbi_legacy_Explore_contracts_visualContainer2__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(80981), _powerbi_legacy_PowerBIVisuals_Visuals_common_colorHelper__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(90120), _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(56578), _powerbi_legacy_PowerBICommon_utils_colorUtility__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(1521), _powerbi_legacy_ExploreUI_viewModels_viewModelFactory__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(26982), _powerbi_legacy_PowerBIVisuals_Visuals_common_fontProperties__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(18664), _powerbi_legacy_ExploreUI_services_visualHostService__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(47245), _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(62458), _powerbi_legacy_PowerBIContracts_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(2142), _powerbi_legacy_PowerBIVisuals_VisualsCommon_clientError__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(2931), _powerbi_legacy_PowerBIVisuals_VisualsCommon_arrayExtensions__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(50550), _powerbi_legacy_Explore_services_filters_filterBuilder__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(11077), _powerbi_legacy_PowerBIVisuals_Visuals_common_units__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(32105), _powerbi_Common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(35911), _powerbi_legacy_ExploreUI_utils_errorDetailsUtility__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(18503), _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(82755), _powerbi_legacy_Explore_util_visualContainerUtils__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(3579), _powerbi_legacy_Explore_util_visualContainerUtils__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(60661), _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject3__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(76045), _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_StandaloneUtility3__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(43286), _powerbi_legacy_PowerBIVisuals_VisualsCommon_Prototype__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(39681), _powerbi_legacy_JsCommon_Utility_BrowserUtility__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(16808), _powerbi_legacy_PowerBIVisuals_Visuals_common_objectEnumerationBuilder__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(28579), _powerbi_InjectionTokens_promiseFactory__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(14463), _powerbi_ExploreUI_explore_ui_dialogs_identifiers__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(78778), _powerbi_InjectionTokens_qnaLiveConnectService__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(64491), _powerbi_InjectionTokens_qnaModelUtilsPath__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(65947), _powerbi_InjectionTokens_qnaProxyPath__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(12123), _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_qnaVisual_capabilities__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(32640), _powerbi_legacy_Explore_services_selectionUtils__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(21728), _powerbi_legacy_PowerBIVisuals_VisualsCommon_serviceError__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(80952), _powerbi_Telemetry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(21617), _powerbi_legacy_VisualHostUI_utils_themeUtils__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(4954), _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_Utility__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(38078), _powerbi_legacy_PowerBIVisuals_VisualsContracts_common_enums__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(46135), _powerbi_legacy_Explore_services_events__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(8590), _powerbi_InjectionTokens_tooltips_visualHostTooltipServiceFactory__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(80318), _telemetry_events__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(5894), _qna_component_core_utils__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(72129), _utils_visual_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(74857), _utils_wireClientContractsConversion_util__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(35988), _utils_qna_model_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(87974), _powerbi_VisualHostCore__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(29866), _powerbi_VisualHostCore__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(52121), _powerbi_Data__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(26898), _powerbi_ExploreUI__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(83008), _powerbi_ExploreUI__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(48145), _powerbi_ExploreUI__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(39503), _powerbi_ExploreUI__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(11494), _powerbi_ExploreUI__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(77200), _powerbi_ExploreUI__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(27980), _powerbi_UILibrary__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(58938), _powerbi_UILibrary__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(67660), _powerbi_Explore__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(69474), _powerbi_Explore__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(81986), _powerbi_Explore__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(79006), _powerbi_Explore__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(72262), _powerbi_Explore__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(906), _powerbi_Explore__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(84281), _powerbi_Explore__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(80277), _powerbi_FeatureSwitch__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(9380), _qna_feedback_state_qna_feedback_state_service__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(21548), _powerbi_LazyLoad__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(57786), _powerbi_LazyLoad__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(2330), _powerbi_Geocoding__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(28505), _powerbi_Geocoding__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(58991), _powerbi_Localization__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(65181), _powerbi_ErrorService__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(81213), _powerbi_A11y__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(83309), _interpret_listener_interpret_listener_service__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(37320), _powerbi_GeocoderIndexedDB__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(1599), presentationDefaults = {
            withBorder: !0,
            showSuggestions: !0,
            acceptedColor: "#0078D4",
            errorColor: "#FF0000",
            warningColor: "#0078D4",
            borderColor: "#A19F9D",
            fontColor: "#323130",
            darkFontColor: "#252423",
            lightFontColor: "#FFFFFF",
            inputBoxBackgroundColor: "#FFFFFF",
            suggestionBackgroundColor: "#F3F2F1",
            hoverColor: "#EEEEEE",
            semiboldFont: "'Segoe UI Semibold', wf_segoe-ui_semibold, helvetica, arial, sans-serif",
            regularFont: "'Segoe UI', wf_segoe-ui_normal, helvetica, arial, sans-serif",
            smallFontSize: _powerbi_legacy_PowerBIVisuals_Visuals_common_units__WEBPACK_IMPORTED_MODULE_2__.B.createFromPt(9),
            mediumFontSize: _powerbi_legacy_PowerBIVisuals_Visuals_common_units__WEBPACK_IMPORTED_MODULE_2__.B.createFromPt(10),
            largeFontSize: _powerbi_legacy_PowerBIVisuals_Visuals_common_units__WEBPACK_IMPORTED_MODULE_2__.B.createFromPt(12),
            defaultBIUValue: !1
        }, defaultInputConfig = {
            spanDropdownHeaderConfig: {
                show: !0,
                unknownSpanHeaderConfig: {
                    actionType: "none"
                }
            }
        }, QnaComponentCoreService = function() {
            function QnaComponentCoreService(visualPlugin, changeDetectorRef, conceptualSchemaProxy, dataSources, dialogService, explorationActivity, explorationCapabilities, explorationNavigation, explorationSerializer, eventBridge, featureSwitchService, qnaFeedbackStateService, lazyProvider, themeService, expandCollapse, geocoder, geolocationService, moduleLoader, localizationService, errorService, telemetryService, resourceLoader, screenReaderService, interpretListenerFactory, selectionService, sortService, undoRedoService, viewModeState, visualAuthoringOpService, azureMapTokenCache, azureMapsEndpoint, geocoderIndexedDB, visualHostTooltipServiceFactory, promiseFactory, accountService, qnaProxyPathToken, qnaModelUtilsPathToken, qnaLiveConnectService) {
                if (this.visualPlugin = visualPlugin, this.changeDetectorRef = changeDetectorRef, 
                this.conceptualSchemaProxy = conceptualSchemaProxy, this.dataSources = dataSources, 
                this.dialogService = dialogService, this.explorationActivity = explorationActivity, 
                this.explorationCapabilities = explorationCapabilities, this.explorationNavigation = explorationNavigation, 
                this.explorationSerializer = explorationSerializer, this.eventBridge = eventBridge, 
                this.featureSwitchService = featureSwitchService, this.qnaFeedbackStateService = qnaFeedbackStateService, 
                this.lazyProvider = lazyProvider, this.themeService = themeService, this.expandCollapse = expandCollapse, 
                this.geocoder = geocoder, this.geolocationService = geolocationService, this.moduleLoader = moduleLoader, 
                this.localizationService = localizationService, this.errorService = errorService, 
                this.telemetryService = telemetryService, this.resourceLoader = resourceLoader, 
                this.screenReaderService = screenReaderService, this.interpretListenerFactory = interpretListenerFactory, 
                this.selectionService = selectionService, this.sortService = sortService, this.undoRedoService = undoRedoService, 
                this.viewModeState = viewModeState, this.visualAuthoringOpService = visualAuthoringOpService, 
                this.azureMapTokenCache = azureMapTokenCache, this.azureMapsEndpoint = azureMapsEndpoint, 
                this.geocoderIndexedDB = geocoderIndexedDB, this.visualHostTooltipServiceFactory = visualHostTooltipServiceFactory, 
                this.promiseFactory = promiseFactory, this.accountService = accountService, this.qnaProxyPathToken = qnaProxyPathToken, 
                this.qnaModelUtilsPathToken = qnaModelUtilsPathToken, this.qnaLiveConnectService = qnaLiveConnectService, 
                this.utteranceUpdated = new _angular_core__WEBPACK_IMPORTED_MODULE_3__.EventEmitter, 
                this.pinnableContentDefinitionUpdated = new _angular_core__WEBPACK_IMPORTED_MODULE_3__.EventEmitter, 
                this.convertVisual = new _angular_core__WEBPACK_IMPORTED_MODULE_3__.EventEmitter, 
                this.utteranceRestated = new _angular_core__WEBPACK_IMPORTED_MODULE_3__.EventEmitter, 
                this.interpretationError = new _angular_core__WEBPACK_IMPORTED_MODULE_3__.EventEmitter, 
                this.isBrowserIE = (0, _powerbi_legacy_JsCommon_Utility_BrowserUtility__WEBPACK_IMPORTED_MODULE_4__.rO)(), 
                this.isBrowserIE) this.viewModel = {
                    state: "Error",
                    error: (0, _utils_visual_util__WEBPACK_IMPORTED_MODULE_5__.ET)(localizationService),
                    qnaInputConfiguration: void 0,
                    themeCollection: void 0,
                    viewport: void 0,
                    presentationViewModel: void 0
                }; else {
                    this.pendingSuggestedQuestionsRequests = 0;
                    var themeCollection = (0, _utils_visual_util__WEBPACK_IMPORTED_MODULE_5__.Su)(this.explorationNavigation, this.featureSwitchService), dataColor = this.themeService.getVisualStyle(themeCollection).colorPalette.dataColors.getColorByIndex(0).value, presentation = {
                        withBorder: presentationDefaults.withBorder,
                        borderColor: presentationDefaults.borderColor,
                        backgroundColor: presentationDefaults.inputBoxBackgroundColor,
                        questionFontProperties: {
                            color: presentationDefaults.fontColor,
                            size: presentationDefaults.mediumFontSize,
                            family: presentationDefaults.regularFont
                        },
                        acceptedUnderlineColor: presentationDefaults.acceptedColor,
                        errorUnderlineColor: presentationDefaults.errorColor,
                        warningUnderlineColor: presentationDefaults.warningColor,
                        hoverColor: presentationDefaults.hoverColor,
                        restatementFontProperties: {
                            color: presentationDefaults.fontColor,
                            size: presentationDefaults.smallFontSize,
                            family: presentationDefaults.regularFont
                        },
                        commitButtonBackgroundColor: dataColor,
                        commitButtonForegroundColor: getContrastForegroundColor(dataColor)
                    };
                    this.viewModel = {
                        state: "Loading",
                        qnaInputConfiguration: void 0,
                        themeCollection,
                        viewport: void 0,
                        presentationViewModel: {
                            inputBox: presentation,
                            suggestions: {
                                backgroundColor: presentationDefaults.suggestionBackgroundColor,
                                show: presentationDefaults.showSuggestions,
                                cardFontProperties: {
                                    color: presentationDefaults.fontColor,
                                    size: presentationDefaults.mediumFontSize,
                                    family: presentationDefaults.regularFont
                                },
                                headerFontProperties: {
                                    color: presentationDefaults.fontColor,
                                    size: presentationDefaults.largeFontSize,
                                    family: presentationDefaults.semiboldFont
                                }
                            }
                        }
                    };
                }
            }
            return QnaComponentCoreService.prototype.initialize = function(models, config, hostServices, entryPoint, utteranceUpdated, convertVisual, initializedTelemetryEvent, contentElement, pinnableContentDefinitionUpdated, utteranceRestated, interpretationError, additionalSourceFilters, useShellTheme) {
                var _a;
                return void 0 === useShellTheme && (useShellTheme = !1), (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function() {
                    var _b, _c, modelsInfo, _d, dataSource, schema, capabilities, inputConfigs, _e, additionalSourceFilterContainers, visualContainerContract, visualHostServices, _this = this;
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__generator)(this, function(_f) {
                        switch (_f.label) {
                          case 0:
                            return this.isBrowserIE ? [ 2 ] : (this.models = models, this.config = config, this.hostServices = hostServices, 
                            this.entryPoint = entryPoint, this.utteranceUpdated = utteranceUpdated, this.convertVisual = convertVisual, 
                            this.utteranceRestated = utteranceRestated, this.interpretationError = interpretationError, 
                            this.initializedTelemetryEvent = initializedTelemetryEvent, this.contentElement = contentElement, 
                            pinnableContentDefinitionUpdated && (this.pinnableContentDefinitionUpdated = pinnableContentDefinitionUpdated), 
                            _b = this, [ 4, this.lazyProvider.get(this.qnaProxyPathToken || "@powerbi/Qna/qnaweb.module#QnaWebModule", "InterpretServiceModern") ]);

                          case 1:
                            return _b.interpretService = _f.sent(), _c = this, [ 4, this.lazyProvider.get(this.qnaModelUtilsPathToken || "@powerbi/Qna/qnaweb.module#QnaWebModule", "qnaModelUtilsService") ];

                          case 2:
                            return _c.qnaModelUtils = _f.sent(), modelsInfo = _.map(this.models, function(m) {
                                return {
                                    datasetName: m.dbName,
                                    datasetId: m.id
                                };
                            }), _d = this, [ 4, (0, _utils_qna_model_util__WEBPACK_IMPORTED_MODULE_7__.U)(modelsInfo, this.qnaModelUtils, this.featureSwitchService) ];

                          case 3:
                            return _d.inCommitQuestionOnDemandMode = _f.sent(), this.interpretListener = this.interpretListenerFactory.createInterpretListener({
                                forTrainingTermBinding: !1,
                                canShowPods: this.config.canShowPods,
                                canShowVisuals: this.config.canShowVisuals,
                                canShowDidYouMean: this.config.canShowDidYouMean,
                                models: this.models,
                                resetDataSources: this.config.resetDataSources
                            }), this.interpretListener.getObservable().subscribe(function(result) {
                                return _this.onResultAvailable(result);
                            }), dataSource = _.find(this.dataSources.get(), function(d) {
                                return d.type === _powerbi_legacy_PowerBIContracts_constants__WEBPACK_IMPORTED_MODULE_8__.nKy;
                            }), [ 4, this.conceptualSchemaProxy.get(this.dataSources.get()) ];

                          case 4:
                            return schema = _f.sent(), capabilities = dataSource && schema && schema.schema(dataSource.name).capabilities, 
                            (inputConfigs = (null === (_a = this.viewModel.qnaInputConfiguration) || void 0 === _a ? void 0 : _a.configs) || {}).supportsPodQueries = !!config.canShowPods, 
                            null != config.focusOnInit && (inputConfigs.autoFocusOnInit = config.focusOnInit), 
                            null != config.disableQnaInputAuthoring && (inputConfigs.disableAuthoring = config.disableQnaInputAuthoring, 
                            inputConfigs.displayDisabledStateVisually = config.disableQnaInputAuthoring), null != config.disableQnaInputAuthoringMessage && (inputConfigs.disableAuthoringMessage = config.disableQnaInputAuthoringMessage), 
                            null != config.hostHandlesUndo && (inputConfigs.hostSupportsUndo = config.hostHandlesUndo), 
                            null != config.showTermDropdownHeader && (inputConfigs.spanDropdownHeaderConfig = {
                                show: config.showTermDropdownHeader
                            }), config.showUnknownTermDropdownHeaderTextOnly && (inputConfigs.spanDropdownHeaderConfig || (inputConfigs.spanDropdownHeaderConfig = {
                                show: void 0
                            }), inputConfigs.spanDropdownHeaderConfig.unknownSpanHeaderConfig = {
                                actionType: "textOnlyHeader",
                                textOnlyTemplate: config.unknownTermDropdownHeaderTextOnlyTemplate
                            }), this.viewModel.themeCollection = (0, _utils_visual_util__WEBPACK_IMPORTED_MODULE_5__.Su)(this.explorationNavigation, this.featureSwitchService), 
                            this.viewModel.qnaInputConfiguration = {
                                entryPoint: this.entryPoint,
                                interpretListener: this.interpretListener,
                                qnaSupportedScopes: _.map(this.models, function(m) {
                                    return {
                                        model: m
                                    };
                                }),
                                configs: inputConfigs,
                                presentation: this.viewModel.presentationViewModel.inputBox,
                                initialUtterance: this.config.initialUtterance || "",
                                initialUtteranceFromSaved: this.config.initialUtteranceFromSaved
                            }, this.viewModel.presentationViewModel.inputBox.useShellTheme = useShellTheme, 
                            _e = this, [ 4, this.getIsModelEditable() ];

                          case 5:
                            return _e.isModelEditable = _f.sent(), [ 4, this.updateUnknownSpanHeaderConfig() ];

                          case 6:
                            return _f.sent(), additionalSourceFilterContainers = _.map(additionalSourceFilters, function(filter, index) {
                                return {
                                    name: "TempFilter" + index,
                                    filter
                                };
                            }), visualContainerContract = this.getCurrentVisual(), visualHostServices = (0, 
                            _powerbi_legacy_PowerBIVisuals_VisualsCommon_Prototype__WEBPACK_IMPORTED_MODULE_9__.ED)((0, 
                            _powerbi_legacy_ExploreUI_services_visualHostService__WEBPACK_IMPORTED_MODULE_10__.q)({
                                geocoder: this.geocoder,
                                geolocation: this.geolocationService,
                                localizationService: this.localizationService,
                                moduleLoader: this.moduleLoader,
                                promiseFactory: this.promiseFactory,
                                visualHostTooltipService: this.visualHostTooltipServiceFactory.createFromVisualContract(visualContainerContract),
                                getAzureMapToken: function() {
                                    return _this.azureMapTokenCache.getAzureMapToken();
                                },
                                azureMapsEndpoint: this.azureMapsEndpoint,
                                geocoderIndexedDB: this.geocoderIndexedDB
                            }), function(h) {
                                h.getLocalizedString = _this.hostServices.getLocalizedString, h.tooltips = _this.hostServices.tooltips, 
                                h.canSelect = _this.hostServices.canSelect, h.onSelecting = _this.hostServices.onSelecting, 
                                h.onSelect = _this.hostServices.onSelect, h.onCustomSort = function(args) {
                                    return _this.onCustomSort(args.sortDescriptors);
                                }, h.geocoder = _this.hostServices.geocoder, h.launchUrl = _this.hostServices.launchUrl, 
                                h.canExpandCollapse = function(_roles) {
                                    return capabilities && capabilities.supportsInstanceFilters;
                                }, h.setNodeExpansionState = function(args) {
                                    var currentVisual = _this.getCurrentVisual();
                                    currentVisual && (args.isCollapse ? _this.expandCollapse.collapseNode(currentVisual, args.dataRoles, args.data) : _this.expandCollapse.expandNode(currentVisual, args.dataRoles, args.data), 
                                    _this.eventBridge.publishToChannel(_powerbi_legacy_Explore_services_events__WEBPACK_IMPORTED_MODULE_11__.jCS, {
                                        affectContainer: function(vc) {
                                            return "qnaVisualContainer" === vc.name;
                                        }
                                    }));
                                }, h.telemetry = _this.hostServices.telemetry;
                            }), Object.defineProperty(visualHostServices, "instanceId", {
                                value: _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_Utility__WEBPACK_IMPORTED_MODULE_12__.b$.generateGuid()
                            }), this.singleVisualHostConfig = {
                                notifyStart: _.noop,
                                notifyEnd: function() {
                                    var _a;
                                    _qna_component_core_utils__WEBPACK_IMPORTED_MODULE_13__.mn(null === (_a = _this.viewModel) || void 0 === _a ? void 0 : _a.result) && (_this.viewModel.result.isLoading = !1);
                                },
                                clearQueryErrors: _.noop,
                                handleQueryErrors: function(error) {
                                    return _this.handleQueryErrors(error);
                                },
                                handleQueryWarnings: _.noop,
                                queryVisualHostServices: {
                                    getFilters: function() {
                                        var visual = _this.getCurrentVisual();
                                        if (visual) {
                                            var filters = _.union(visual && visual.filters, additionalSourceFilterContainers);
                                            return _this.createVisualContainerFilters(visual, filters);
                                        }
                                    },
                                    getDataSourceVariables: function() {
                                        var currentExploration = _this.explorationNavigation.getCurrentExploration();
                                        return currentExploration && currentExploration.dataSourceVariables;
                                    },
                                    disableAnchorTime: !0
                                },
                                visualHostServices,
                                interactivityOptions: {
                                    selection: !0
                                },
                                additionalObjectUpdates: void 0,
                                disableQueryCacheUpdates: !1,
                                noLoadMore: !1
                            }, [ 4, this.setSuggestedQuestions() ];

                          case 7:
                            return _f.sent(), _.isEmpty(this.config.initialUtterance) && this.setSuggestionsViewModel(), 
                            [ 2 ];
                        }
                    });
                });
            }, QnaComponentCoreService.prototype.onCustomSort = function(sortDescriptors) {
                var currentVisual = this.getCurrentVisual();
                (0, _utils_visual_util__WEBPACK_IMPORTED_MODULE_5__.fI)(currentVisual, this.sortHelper, sortDescriptors);
            }, QnaComponentCoreService.prototype.ngAfterViewInit = function() {
                this.updateViewport();
            }, QnaComponentCoreService.prototype.update = function(options) {
                var _a;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function() {
                    var _b, themeCollection, style, themeBackgroundColor, defaultHoverColor, acceptedColor, errorColor, warningColor, colorHelper, dataColor, contrastFontToDataColor, inputBackgroundColor, questionFontProperties, commitButtonBackgroundColor, inputPresentation, cardFontProperties, suggestionsPresentation, utterance;
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__generator)(this, function(_c) {
                        switch (_c.label) {
                          case 0:
                            return _b = this, [ 4, this.getIsModelEditable() ];

                          case 1:
                            return _b.isModelEditable = _c.sent(), !(0, _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_StandaloneUtility3__WEBPACK_IMPORTED_MODULE_14__.yE)(options.type, _powerbi_legacy_PowerBIVisuals_VisualsContracts_common_enums__WEBPACK_IMPORTED_MODULE_15__.EP.Style) || this.isBrowserIE ? [ 3, 3 ] : (_powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_16__.fF.assertValue(this.viewModel, "viewModel should be defined"), 
                            themeCollection = (0, _utils_visual_util__WEBPACK_IMPORTED_MODULE_5__.Su)(this.explorationNavigation, this.featureSwitchService), 
                            this.viewModel.themeCollection = themeCollection, style = themeCollection && this.themeService.getVisualStyle(themeCollection), 
                            themeBackgroundColor = style && style.colorPalette.background.value || presentationDefaults.inputBoxBackgroundColor, 
                            defaultHoverColor = style && style.colorPalette.backgroundNeutral.value || presentationDefaults.hoverColor, 
                            acceptedColor = presentationDefaults.acceptedColor, errorColor = presentationDefaults.errorColor, 
                            warningColor = presentationDefaults.warningColor, colorHelper = style && _powerbi_legacy_PowerBIVisuals_Visuals_common_colorHelper__WEBPACK_IMPORTED_MODULE_17__.v.create(style), 
                            dataColor = this.themeService.getVisualStyle(this.viewModel.themeCollection).colorPalette.dataColors.getColorByIndex(0).value, 
                            contrastFontToDataColor = (0, _powerbi_legacy_PowerBICommon_utils_colorUtility__WEBPACK_IMPORTED_MODULE_18__.um)(dataColor) > .6 ? presentationDefaults.darkFontColor : presentationDefaults.lightFontColor, 
                            inputBackgroundColor = (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_19__.W7)(options.objects, {
                                objectName: "inputBox",
                                propertyName: "background"
                            }, themeBackgroundColor), questionFontProperties = this.createFontProperties(options.objects, "inputBox", "question", "label", presentationDefaults.mediumFontSize, !1, colorHelper, style), 
                            commitButtonBackgroundColor = (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_19__.W7)(options.objects, {
                                objectName: "inputBox",
                                propertyName: "commitButtonBackgroundColor"
                            }, dataColor), inputPresentation = {
                                withBorder: presentationDefaults.withBorder,
                                borderColor: presentationDefaults.borderColor,
                                backgroundColor: inputBackgroundColor,
                                questionFontProperties,
                                acceptedUnderlineColor: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_19__.W7)(options.objects, {
                                    objectName: "inputBox",
                                    propertyName: "acceptedColor"
                                }, acceptedColor),
                                errorUnderlineColor: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_19__.W7)(options.objects, {
                                    objectName: "inputBox",
                                    propertyName: "errorColor"
                                }, errorColor),
                                warningUnderlineColor: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_19__.W7)(options.objects, {
                                    objectName: "inputBox",
                                    propertyName: "warningColor"
                                }, warningColor),
                                hoverColor: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_19__.W7)(options.objects, {
                                    objectName: "inputBox",
                                    propertyName: "hoverColor"
                                }, defaultHoverColor),
                                restatementFontProperties: this.createFontProperties(options.objects, "inputBox", "restatement", "smallLabel", presentationDefaults.smallFontSize, !1, colorHelper, style),
                                commitButtonBackgroundColor,
                                commitButtonForegroundColor: getContrastForegroundColor(commitButtonBackgroundColor)
                            }, this.viewModel.presentationViewModel.inputBox = inputPresentation, cardFontProperties = this.createFontProperties(options.objects, "suggestions", "card", "label", presentationDefaults.mediumFontSize, !1, colorHelper, style), 
                            options.objects && options.objects.suggestions && options.objects.suggestions.cardFontColor || (cardFontProperties.color = contrastFontToDataColor), 
                            suggestionsPresentation = {
                                show: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_19__.NA)(options.objects, {
                                    objectName: "suggestions",
                                    propertyName: "show"
                                }, !0),
                                backgroundColor: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_19__.W7)(options.objects, {
                                    objectName: "suggestions",
                                    propertyName: "cardBackground"
                                }, dataColor),
                                cardFontProperties,
                                headerFontProperties: this.createFontProperties(options.objects, "suggestions", "header", "largeLabel", presentationDefaults.largeFontSize, !1, colorHelper, style)
                            }, this.viewModel.presentationViewModel.suggestions = suggestionsPresentation, this.viewModel.qnaInputConfiguration || (this.viewModel.qnaInputConfiguration = {
                                entryPoint: this.entryPoint,
                                qnaSupportedScopes: void 0,
                                configs: defaultInputConfig
                            }), [ 4, this.updateUnknownSpanHeaderConfig() ]);

                          case 2:
                            _c.sent(), _c.label = 3;

                          case 3:
                            return (0, _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_StandaloneUtility3__WEBPACK_IMPORTED_MODULE_14__.yE)(options.type, _powerbi_legacy_PowerBIVisuals_VisualsContracts_common_enums__WEBPACK_IMPORTED_MODULE_15__.EP.Data) ? (this.inheritedFilters = options.filters, 
                            (null === (_a = this.viewModel.qnaInputConfiguration) || void 0 === _a ? void 0 : _a.qnaSupportedScopes) ? [ 4, this.setSuggestedQuestions() ] : [ 3, 6 ]) : [ 3, 7 ];

                          case 4:
                            return _c.sent(), _qna_component_core_utils__WEBPACK_IMPORTED_MODULE_13__.Ew(this.viewModel.result) && this.setSuggestionsViewModel(), 
                            [ 4, this.updateUnknownSpanHeaderConfig() ];

                          case 5:
                            _c.sent(), _c.label = 6;

                          case 6:
                            this.eventBridge.publishToChannel(_powerbi_legacy_Explore_services_events__WEBPACK_IMPORTED_MODULE_11__.jCS, {
                                affectContainer: function(vc) {
                                    return "qnaVisualContainer" === vc.name;
                                }
                            }), _c.label = 7;

                          case 7:
                            return (0, _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_StandaloneUtility3__WEBPACK_IMPORTED_MODULE_14__.yE)(options.type, _powerbi_legacy_PowerBIVisuals_VisualsContracts_common_enums__WEBPACK_IMPORTED_MODULE_15__.EP.Resize) && (this.visualContainerViewport = options.viewport, 
                            this.updateViewport(), !this.isBrowserIE && _qna_component_core_utils__WEBPACK_IMPORTED_MODULE_13__.Ew(this.viewModel.result) && this.setSuggestionsViewModel()), 
                            this.isBrowserIE || options.firstUpdate || options.objects && options.objects.hiddenProperties && (utterance = (0, 
                            _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_19__.NA)(options.objects, {
                                objectName: "hiddenProperties",
                                propertyName: "savedUtterance"
                            }, ""), this.qnaInputComponent && this.qnaInputComponent.interpretUtterance({
                                utterance,
                                suppressSuggestions: !0,
                                incomingTags: [ "Committed" ],
                                useUncommittedUtterance: !0
                            })), [ 2 ];
                        }
                    });
                });
            }, QnaComponentCoreService.prototype.enumerateObjectInstances = function(options) {
                var _a, _b, _this = this;
                if (_powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_16__.fF.assert(function() {
                    return !_this.isBrowserIE;
                }, "Expect this not to be called if it is inside IE browser"), !this.isBrowserIE) {
                    var enumeration = new _powerbi_legacy_PowerBIVisuals_Visuals_common_objectEnumerationBuilder__WEBPACK_IMPORTED_MODULE_20__.G, presentationVM = this.viewModel.presentationViewModel;
                    switch (options.objectName) {
                      case "inputBox":
                        var properties = ((_a = {}).background = presentationVM.inputBox.backgroundColor, 
                        _a.questionFontColor = presentationVM.inputBox.questionFontProperties.color, _a.questionFontSize = presentationVM.inputBox.questionFontProperties.size.pt, 
                        _a);
                        properties.questionBold = presentationVM.inputBox.questionFontProperties.weight === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_21__.en, 
                        properties.questionItalic = presentationVM.inputBox.questionFontProperties.style === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_21__.BF, 
                        properties.questionUnderline = presentationVM.inputBox.questionFontProperties.textDecoration === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_21__.f0, 
                        properties.questionFontFamily = presentationVM.inputBox.questionFontProperties.family, 
                        properties.acceptedColor = presentationVM.inputBox.acceptedUnderlineColor, properties.errorColor = presentationVM.inputBox.errorUnderlineColor, 
                        properties.warningColor = presentationVM.inputBox.warningUnderlineColor, properties.hoverColor = presentationVM.inputBox.hoverColor, 
                        properties.restatementFontColor = presentationVM.inputBox.restatementFontProperties.color, 
                        properties.restatementFontSize = presentationVM.inputBox.restatementFontProperties.size.pt, 
                        properties.restatementFontFamily = presentationVM.inputBox.restatementFontProperties.family, 
                        this.inCommitQuestionOnDemandMode && (properties.commitButtonBackgroundColor = presentationVM.inputBox.commitButtonBackgroundColor), 
                        enumeration.pushInstance({
                            selector: null,
                            properties,
                            objectName: "inputBox"
                        });
                        break;

                      case "suggestions":
                        var suggestionProperties = ((_b = {}).show = presentationVM.suggestions.show, _b.headerFontColor = presentationVM.suggestions.headerFontProperties.color, 
                        _b.headerFontSize = presentationVM.suggestions.headerFontProperties.size.pt, _b);
                        suggestionProperties.headerBold = presentationVM.suggestions.headerFontProperties.weight === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_21__.en, 
                        suggestionProperties.headerItalic = presentationVM.suggestions.headerFontProperties.style === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_21__.BF, 
                        suggestionProperties.headerUnderline = presentationVM.suggestions.headerFontProperties.textDecoration === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_21__.f0, 
                        suggestionProperties.headerFontFamily = presentationVM.suggestions.headerFontProperties.family, 
                        suggestionProperties.cardBackground = presentationVM.suggestions.backgroundColor, 
                        suggestionProperties.cardFontColor = presentationVM.suggestions.cardFontProperties.color, 
                        suggestionProperties.cardFontSize = presentationVM.suggestions.cardFontProperties.size.pt, 
                        suggestionProperties.cardBold = presentationVM.suggestions.cardFontProperties.weight === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_21__.en, 
                        suggestionProperties.cardItalic = presentationVM.suggestions.cardFontProperties.style === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_21__.BF, 
                        suggestionProperties.cardUnderline = presentationVM.suggestions.cardFontProperties.textDecoration === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_21__.f0, 
                        suggestionProperties.cardFontFamily = presentationVM.suggestions.cardFontProperties.family, 
                        enumeration.pushInstance({
                            selector: null,
                            properties: suggestionProperties,
                            objectName: "suggestions"
                        });
                    }
                    return enumeration.complete();
                }
            }, QnaComponentCoreService.prototype.getFormattingModel = function() {
                var _this = this;
                if (_powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_16__.fF.assert(function() {
                    return !_this.isBrowserIE;
                }, "Expect this not to be called if it is inside IE browser"), !this.isBrowserIE) {
                    var presentationVM = this.viewModel.presentationViewModel;
                    return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.Nq(function() {
                        return _this.buildInputBoxFormattingCard(presentationVM);
                    }, function() {
                        return _this.buildRestatementFormattingCard(presentationVM);
                    }, function() {
                        return _this.buildSuggestionsFormattingCard(presentationVM);
                    }).build();
                }
            }, QnaComponentCoreService.prototype.getCurrentVisual = function() {
                var _a, content = null === (_a = this.viewModel) || void 0 === _a ? void 0 : _a.result;
                return _qna_component_core_utils__WEBPACK_IMPORTED_MODULE_13__.mn(content) ? content.visual : _qna_component_core_utils__WEBPACK_IMPORTED_MODULE_13__.fU(content) ? _.first(content.exploreCanvas.contract.visualContainers) : _qna_component_core_utils__WEBPACK_IMPORTED_MODULE_13__.wp(content) ? content.visualWithError : void 0;
            }, QnaComponentCoreService.prototype.getCurrentUtteranceTrimmed = function() {
                return _.trim(this.getCurrentUtteranceUntrimmed());
            }, QnaComponentCoreService.prototype.setGetQnaInputComponentFunc = function(getQnaInputComponent) {
                _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_16__.fF.assertValue(getQnaInputComponent, "getQnaInputComponent must be defined."), 
                this.getQnaInputComponent = getQnaInputComponent;
            }, QnaComponentCoreService.prototype.convertVisualClicked = function() {
                var currentVisual = this.getCurrentVisual();
                if (currentVisual) {
                    var visualType = (0, _powerbi_legacy_Explore_util_visualContainerUtils__WEBPACK_IMPORTED_MODULE_23__.s)(currentVisual);
                    this.telemetryService.logChildEvent(this.initializedTelemetryEvent, _telemetry_events__WEBPACK_IMPORTED_MODULE_24__.dN, {
                        visualType
                    }), this.convertVisual.emit(currentVisual);
                }
            }, QnaComponentCoreService.prototype.interpretSuggestedQuestion = function(suggestion) {
                var _this = this;
                this.telemetryService.logChildEvent(this.initializedTelemetryEvent, _telemetry_events__WEBPACK_IMPORTED_MODULE_24__.WW, {
                    isAutoSuggestion: !0
                }), this.qnaInputComponent && this.undoRedoService.register("Commit suggested QnA utterance", function() {
                    _this.qnaInputComponent.interpretUtterance({
                        utterance: suggestion,
                        suppressSuggestions: !0,
                        incomingTags: [ "SuggestedUtterance", "Committed" ],
                        requireCursorAtEndIfFocused: !0,
                        enforceFocus: !0,
                        isCommitInCommitQuestionOnDemandMode: !0
                    });
                });
            }, QnaComponentCoreService.prototype.toggleShowAllSuggestions = function() {
                if (_qna_component_core_utils__WEBPACK_IMPORTED_MODULE_13__.Ew(this.viewModel.result)) {
                    var suggestionsContent = this.viewModel.result;
                    suggestionsContent.showAllSuggestions = !suggestionsContent.showAllSuggestions, 
                    this.setSuggestionsViewModel();
                }
            }, QnaComponentCoreService.prototype.showQnaVisualErrorDetails = function() {
                (0, _utils_visual_util__WEBPACK_IMPORTED_MODULE_5__.aZ)(this.viewModel.error, this.errorService, this.localizationService);
            }, QnaComponentCoreService.prototype.showResultErrorDetails = function() {
                (_qna_component_core_utils__WEBPACK_IMPORTED_MODULE_13__.uT(this.viewModel.result) || _qna_component_core_utils__WEBPACK_IMPORTED_MODULE_13__.wp(this.viewModel.result)) && (0, 
                _utils_visual_util__WEBPACK_IMPORTED_MODULE_5__.aZ)(this.viewModel.result, this.errorService, this.localizationService);
            }, QnaComponentCoreService.prototype.updateViewport = function() {
                if (!this.isBrowserIE) {
                    var visualOrReportOuterContainerElement = this.contentElement.nativeElement;
                    this.viewport = {
                        scale: 1,
                        height: visualOrReportOuterContainerElement.clientHeight - 10,
                        width: visualOrReportOuterContainerElement.clientWidth - 10
                    }, this.viewModel.viewport = this.viewport;
                }
            }, QnaComponentCoreService.prototype.getUnknownSpanDropdownHeaderActionType = function() {
                return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return this.qnaLiveConnectService ? this.qnaLiveConnectService.allowsLinguisticSchemaFeedback() ? [ 2, "askToAdd" ] : [ 3, 1 ] : [ 2, "askToAdd" ];

                          case 1:
                            return [ 4, this.allowTooling() ];

                          case 2:
                            return _a.sent() ? [ 2, "defineInTooling" ] : [ 2, "none" ];

                          case 3:
                            return [ 2 ];
                        }
                    });
                });
            }, QnaComponentCoreService.prototype.allowTooling = function() {
                var _a;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function() {
                    var canEdit, explorationCapabilities, _b;
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__generator)(this, function(_c) {
                        switch (_c.label) {
                          case 0:
                            return null == (canEdit = null === (_a = this.config) || void 0 === _a ? void 0 : _a.canEdit) && (canEdit = 0 !== this.viewModeState.getMode()), 
                            canEdit && (null == (explorationCapabilities = this.explorationCapabilities.getCapabilities()) ? void 0 : explorationCapabilities.allowQnaTooling) ? null != this.isModelEditable ? [ 3, 2 ] : (_b = this, 
                            [ 4, this.getIsModelEditable() ]) : [ 2, !1 ];

                          case 1:
                            _b.isModelEditable = _c.sent(), _c.label = 2;

                          case 2:
                            return this.isModelEditable ? [ 2, !0 ] : [ 2, !1 ];
                        }
                    });
                });
            }, QnaComponentCoreService.prototype.shouldShowThumbsUpDown = function() {
                return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return this.isBrowserIE ? [ 2, !1 ] : this.featureSwitchService.featureSwitches.qnaThumbsUpDown ? [ 4, this.getIsModelEditable() ] : [ 2, !1 ];

                          case 1:
                            return [ 2, !_a.sent() ];
                        }
                    });
                });
            }, QnaComponentCoreService.prototype.showFeedbackForCurrentQuestion = function() {
                var _a, _this = this;
                if (_powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_16__.fF.assert(function() {
                    return !_this.isBrowserIE;
                }, "Expect this never get called if it is inside IE browser"), this.isBrowserIE) return !1;
                var content = null === (_a = this.viewModel) || void 0 === _a ? void 0 : _a.result;
                return !!content && (_qna_component_core_utils__WEBPACK_IMPORTED_MODULE_13__.mn(content) || _qna_component_core_utils__WEBPACK_IMPORTED_MODULE_13__.lP(content) || _qna_component_core_utils__WEBPACK_IMPORTED_MODULE_13__.fU(content));
            }, QnaComponentCoreService.prototype.sendFeedback = function(feedback) {
                return this.logFeedbackTelemetry(feedback), this.qnaInputComponent.sendFeedback(feedback, this.getCurrentUtteranceTrimmed());
            }, QnaComponentCoreService.prototype.launchFeedbackDialog = function(sentiment, showOptions) {
                return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function() {
                    var e_1, _this = this;
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return _a.trys.push([ 0, 2, , 3 ]), [ 4, this.dialogService.openHostDialog({
                                bindings: {
                                    sentiment,
                                    showOptions
                                },
                                componentName: _powerbi_ExploreUI_explore_ui_dialogs_identifiers__WEBPACK_IMPORTED_MODULE_25__.Xr,
                                config: {
                                    minWidth: "600px",
                                    panelClass: [ "no-padding" ]
                                },
                                dialogName: "QnaFeedbackDialog"
                            }) ];

                          case 1:
                            return _a.sent().afterClosed().pipe((0, rxjs_operators__WEBPACK_IMPORTED_MODULE_26__.q)(1)).subscribe(function(feedback) {
                                if (feedback && (!_.isEmpty(feedback.reason) || !_.isEmpty(feedback.comment))) {
                                    _this.sendFeedback(feedback);
                                    var state = 1 === sentiment ? "PositiveDetailSubmitted" : "NegativeDetailSubmitted";
                                    _this.qnaFeedbackStateService.updateState(_this.getCurrentUtteranceTrimmed(), state);
                                }
                            }), [ 3, 3 ];

                          case 2:
                            return e_1 = _a.sent(), _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_16__.fF.assertFail("Qna Feedback dialog failed to open"), 
                            _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_16__.fF.log(e_1), 
                            [ 3, 3 ];

                          case 3:
                            return [ 2 ];
                        }
                    });
                });
            }, QnaComponentCoreService.prototype.updateUnknownSpanHeaderConfig = function() {
                var _a;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function() {
                    var inputSpanDropdownHeaderConfig, _b, _c;
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__generator)(this, function(_d) {
                        switch (_d.label) {
                          case 0:
                            return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_16__.fF.assertValue(this.viewModel.qnaInputConfiguration.configs, "Expect this.viewModel.qnaInputConfiguration.configs has already been defined"), 
                            "textOnlyHeader" === (null === (_a = null == (inputSpanDropdownHeaderConfig = this.viewModel.qnaInputConfiguration.configs.spanDropdownHeaderConfig) ? void 0 : inputSpanDropdownHeaderConfig.unknownSpanHeaderConfig) || void 0 === _a ? void 0 : _a.actionType) ? [ 3, 2 ] : (this.viewModel.qnaInputConfiguration.configs.spanDropdownHeaderConfig || (this.viewModel.qnaInputConfiguration.configs.spanDropdownHeaderConfig = {
                                show: void 0
                            }), _b = this.viewModel.qnaInputConfiguration.configs.spanDropdownHeaderConfig, 
                            _c = {}, [ 4, this.getUnknownSpanDropdownHeaderActionType() ]);

                          case 1:
                            _b.unknownSpanHeaderConfig = (_c.actionType = _d.sent(), _c), _d.label = 2;

                          case 2:
                            return [ 2 ];
                        }
                    });
                });
            }, QnaComponentCoreService.prototype.logFeedbackTelemetry = function(feedback) {
                this.telemetryService.logChildEvent(this.initializedTelemetryEvent, _telemetry_events__WEBPACK_IMPORTED_MODULE_24__.v5, {
                    senitment: this.mapToTelemetryFeedbackSentiment(feedback.sentiment),
                    reason: feedback.reason
                });
            }, QnaComponentCoreService.prototype.mapToTelemetryFeedbackSentiment = function(sentiment) {
                return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_16__.fF.assert(function() {
                    return 1 === sentiment || -1 === sentiment;
                }, "unexpected telemetry sentiment"), 1 === sentiment ? "Positive" : "Negative";
            }, QnaComponentCoreService.prototype.shouldShowdoNotUnderstandMessageFeedbackLink = function() {
                var utterance = this.getCurrentUtteranceTrimmed();
                return "NegativeDetailSubmitted" !== this.qnaFeedbackStateService.getState(utterance);
            }, Object.defineProperty(QnaComponentCoreService.prototype, "qnaInputComponent", {
                get: function() {
                    return this.getQnaInputComponent && this.getQnaInputComponent();
                },
                enumerable: !1,
                configurable: !0
            }), QnaComponentCoreService.prototype.getIsModelEditable = function() {
                return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function() {
                    var dataSource, schema, capabilities;
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return dataSource = _.find(this.dataSources.get(), function(d) {
                                return d.type === _powerbi_legacy_PowerBIContracts_constants__WEBPACK_IMPORTED_MODULE_8__.nKy;
                            }), [ 4, this.conceptualSchemaProxy.get(this.dataSources.get()) ];

                          case 1:
                            return schema = _a.sent(), [ 2, null == (capabilities = dataSource && (null == schema ? void 0 : schema.schema(dataSource.name).capabilities)) ? void 0 : capabilities.canEdit ];
                        }
                    });
                });
            }, QnaComponentCoreService.prototype.getCurrentUtteranceUntrimmed = function() {
                return this.qnaInputComponent && this.qnaInputComponent.currentDisplayedUtterance;
            }, QnaComponentCoreService.prototype.setSuggestedQuestions = function() {
                return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function() {
                    var resultResponse, result, suggestedQuestions, _i, _a, _this = this;
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_16__.fF.assert(function() {
                                return !!_this.interpretService;
                            }, "interpretService should be defined"), this.pendingSuggestedQuestionsRequests++, 
                            [ 4, this.interpretService.getSuggestedQuestions(this.convertRequestScopes(this.viewModel.qnaInputConfiguration.qnaSupportedScopes)).toPromise() ];

                          case 1:
                            if (resultResponse = _b.sent(), this.pendingSuggestedQuestionsRequests--, result = resultResponse.result, 
                            "Loading" === this.viewModel.state && this.pendingSuggestedQuestionsRequests > 0 && !resultResponse.error && _.isEmpty(null == result ? void 0 : result.utterances)) return [ 2 ];
                            if (resultResponse.error) return this.viewModel.error = this.getErrorDetailsFromError(resultResponse.error), 
                            this.viewModel.state = "Error", [ 2 ];
                            if (suggestedQuestions = _.chain(this.models).map(function(model) {
                                return _.map(model.featuredQuestions, function(f) {
                                    return f.utterance;
                                });
                            }).flatten().value(), _.isEmpty(suggestedQuestions)) for (suggestedQuestions = [], 
                            _i = 0, _a = result.utterances; _i < _a.length; _i++) suggestedQuestions.push(_a[_i].text);
                            return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_16__.fF.assert(function() {
                                return !_.isEmpty(result.utterances) || !_.isEmpty(result.warnings);
                            }, "No suggested question but no warning? something is wrong."), this.suggestions = {
                                questions: suggestedQuestions,
                                hasWarnings: !_.isEmpty(result.warnings)
                            }, this.viewModel.state = "Ready", [ 2 ];
                        }
                    });
                });
            }, QnaComponentCoreService.prototype.getErrorDetailsFromError = function(error) {
                _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_16__.fF.assertValue(error, "Expect the given error to be defined.");
                var hideSeeDetails, mainMessage = (0, _utils_wireClientContractsConversion_util__WEBPACK_IMPORTED_MODULE_27__.AU)(error.errorCode, this.localizationService), telemetryCode = error.errorCode, displayableErrorInfo = [], debugErrorInfo = [];
                if ("SchemaLanguageNotSupported" === error.errorCode) hideSeeDetails = !1, displayableErrorInfo = [ {
                    errorInfoKey: this.localizationService.get("VisualContainer_QnaVisual_NotSupportedTitle"),
                    errorInfoValue: this.localizationService.get("VisualContainer_QnaVisual_NotSupportedMessage")
                } ]; else if (!(hideSeeDetails = "GenericRequestFailure" !== telemetryCode)) if (error.sourceServiceError) {
                    var errorDetails = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_serviceError__WEBPACK_IMPORTED_MODULE_28__.sI(error.sourceServiceError).getDetails(this.localizationService);
                    displayableErrorInfo = errorDetails.displayableErrorInfo, debugErrorInfo = errorDetails.debugErrorInfo;
                } else _.isEmpty(error.message) || debugErrorInfo.push({
                    errorInfoKey: _powerbi_legacy_PowerBIVisuals_VisualsCommon_clientError__WEBPACK_IMPORTED_MODULE_29__.Bm,
                    errorInfoValue: error.message
                }), _.isEmpty(error.stackTrace) || debugErrorInfo.push({
                    errorInfoKey: _powerbi_legacy_PowerBIVisuals_VisualsCommon_clientError__WEBPACK_IMPORTED_MODULE_29__.RU,
                    errorInfoValue: error.stackTrace
                });
                var result = {
                    code: telemetryCode,
                    fixableError: 0,
                    hideSeeDetails,
                    details: {
                        message: mainMessage,
                        displayableErrorInfo,
                        debugErrorInfo
                    },
                    source: error.source
                };
                return "DataIndexMissingAllStatistics" === error.errorCode && (result.details.helpLink = "https://go.microsoft.com/fwlink/?LinkId=786785", 
                result.details.helpLinkType = 1, result.details.errorType = 1), _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_16__.fF.assert(function() {
                    return !_.isEmpty(result.code);
                }, "telemetryCode should not be empty"), _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_16__.fF.assert(function() {
                    return null != result.hideSeeDetails;
                }, "hideSeeDetails should not be null"), _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_16__.fF.assert(function() {
                    return !_.isEmpty(result.details.message);
                }, "mainMessage should not be empty"), _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_16__.fF.assert(function() {
                    return null != result.source;
                }, "errorSource should not be null"), result;
            }, QnaComponentCoreService.prototype.setSuggestionsViewModel = function() {
                var _a, _b, _c, _this = this;
                _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_16__.fF.assert(function() {
                    return !_this.isBrowserIE;
                }, "Expect this never get called if it is inside IE browser");
                var numberOfSuggestions = _.size(null === (_a = this.suggestions) || void 0 === _a ? void 0 : _a.questions), content = this.viewModel.result, showAllSuggestions = !!_qna_component_core_utils__WEBPACK_IMPORTED_MODULE_13__.Ew(content) && content.showAllSuggestions;
                numberOfSuggestions > 0 && !showAllSuggestions && (numberOfSuggestions = Math.floor(this.contentElement.nativeElement.clientWidth / 200)) <= 1 && (numberOfSuggestions = 5);
                var takenQuestions = _.take(null === (_b = this.suggestions) || void 0 === _b ? void 0 : _b.questions, numberOfSuggestions), takenQuestionsCount = _.size(takenQuestions);
                this.viewModel.result = {
                    type: "Suggestions",
                    suggestions: _.map(takenQuestions, function(question, index) {
                        return {
                            content: question,
                            accessibilityLabel: _this.localizationService.format("Visual_Qna_SuggestedQuestion_AccessibilityLabel", index + 1, takenQuestionsCount, question)
                        };
                    }),
                    showAllSuggestions,
                    failedToLoadSuggestionsMessage: 0 === numberOfSuggestions && (null === (_c = this.suggestions) || void 0 === _c ? void 0 : _c.hasWarnings) ? this.localizationService.get("QnaStart_ErrorLoadingSuggestions") : void 0
                };
            }, QnaComponentCoreService.prototype.onResultAvailable = function(result) {
                var _a, _b, _c;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function() {
                    var restatement, modelId, vcObjects, section, clonedVisual, exploration, activeSection_1, model, _this = this;
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__generator)(this, function(_d) {
                        switch (_d.label) {
                          case 0:
                            return result && 1 === result.resultType ? [ 2 ] : result ? (this.showQuestionProblematicResultTimeout && (clearTimeout(this.showQuestionProblematicResultTimeout), 
                            this.showQuestionProblematicResultTimeout = void 0), _.includes(result.usedAgents, "PowerBI.AzureOpenAISynonyms") ? [ 4, this.logInterpretCopilotTelemetry() ] : [ 3, 2 ]) : (this.pinnableContentDefinitionUpdated.emit(void 0), 
                            this.viewModel.result = void 0, [ 2 ]);

                          case 1:
                            _d.sent(), _d.label = 2;

                          case 2:
                            return null != result.utterance && this.utteranceUpdated.emit(result.utterance), 
                            this.updateViewport(), 4 === result.resultType && this.setSuggestionsViewModel(), 
                            4 !== result.resultType && 6 !== result.resultType && 0 !== result.resultType && result.doNotShowResult && (this.showQuestionProblematicResultTimeout = setTimeout(function() {
                                var interpretError = result.interpretError;
                                if (interpretError) _this.interpretationError && _this.interpretationError.emit(), 
                                _this.viewModel.result = (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__assign)({
                                    type: "Error"
                                }, _this.getErrorDetailsFromError(interpretError)); else {
                                    var noVisualMessage = _this.localizationService.get("Qna_NoVisual_Message");
                                    _this.viewModel.result = {
                                        type: "DoNotUnderstand",
                                        message: _.isEmpty(result.doNotShowResultCustomMessageKeys) ? noVisualMessage : _.map(result.doNotShowResultCustomMessageKeys, function(key) {
                                            return _this.localizationService.get(key);
                                        }).join("\n\n")
                                    }, _this.screenReaderService.alert(noVisualMessage);
                                }
                            }, 1500)), 4 === result.resultType || 6 === result.resultType || result.doNotShowResult || 2 !== result.resultType || !result.visualContainer && !result.exploration ? (this.pinnableContentDefinitionUpdated.emit(void 0), 
                            this.cancelVisualUpdateAlert(), [ 2 ]) : (this.utteranceRestated && this.utteranceRestated.emit(result.restatement), 
                            _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_16__.fF.assertValue(result.visualContainer || result.exploration, "result should contain either visualContainer or exploration"), 
                            result.visualContainer && (result.visualContainer.name = "qnaVisualContainer"), 
                            restatement = result.restatement, _.startsWith(restatement, "Show ") && (restatement = _.replace(restatement, "Show ", result.visualContainer ? "This visual is showing " : "Showing ")), 
                            modelId = result.modelId, result.visualContainer ? (_powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_16__.fF.assert(function() {
                                var _a;
                                return !!(null === (_a = result.visualContainer.config) || void 0 === _a ? void 0 : _a.singleVisual);
                            }, "single visual is not defined"), this.config.showVisualsAsExploration ? (result.visualContainer.layouts = (0, 
                            _powerbi_legacy_PowerBIVisuals_VisualsCommon_arrayExtensions__WEBPACK_IMPORTED_MODULE_30__.Br)([ {
                                id: 0,
                                position: {
                                    x: 0,
                                    y: 0,
                                    height: this.viewport.height,
                                    width: this.viewport.width
                                }
                            } ]), (vcObjects = null !== (_a = (0, _powerbi_legacy_Explore_util_visualContainerUtils__WEBPACK_IMPORTED_MODULE_31__.PQ)(result.visualContainer).vcObjects) && void 0 !== _a ? _a : {}).title = [ {
                                properties: {
                                    show: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_semanticQuery_sqExpr__WEBPACK_IMPORTED_MODULE_32__.O7)(!1)
                                }
                            } ], result.visualContainer.config.singleVisual.vcObjects = vcObjects, section = {
                                name: "QnaSection",
                                displayName: "QnaSection",
                                size: {
                                    displayOption: 0,
                                    width: this.viewport.width,
                                    height: this.viewport.height
                                },
                                visualContainers: [ result.visualContainer ],
                                visualContainerGroups: [ result.visualContainer ],
                                filters: []
                            }, exploration = {
                                themeCollection: (0, _utils_visual_util__WEBPACK_IMPORTED_MODULE_5__.D4)(this.featureSwitchService),
                                dataSources: this.dataSources.get(),
                                sections: [ section ],
                                settings: {
                                    useNewFilterPaneExperience: !0,
                                    allowChangeFilterTypes: !0
                                }
                            }, this.explorationNavigation.loadExploration(exploration), this.explorationNavigation.goto(section), 
                            this.viewModel.result = {
                                type: "VisualAsExploration",
                                restatement,
                                exploreCanvas: (0, _powerbi_legacy_ExploreUI_viewModels_viewModelFactory__WEBPACK_IMPORTED_MODULE_33__.T8)(exploration, section, 0),
                                modelId
                            }, _powerbi_legacy_Explore_services_selectionUtils__WEBPACK_IMPORTED_MODULE_34__.UP.selectCanvasItem(result.visualContainer, this.selectionService), 
                            this.explorationActivity.sendExplorationContainerReady({
                                parentActivity: void 0
                            })) : (this.viewModel.result = void 0, setTimeout(function() {
                                return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(_this, void 0, void 0, function() {
                                    var selectExprs, _this = this;
                                    return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__generator)(this, function(_a) {
                                        switch (_a.label) {
                                          case 0:
                                            return this.viewModel.result = {
                                                type: "Visual",
                                                restatement,
                                                visual: result.visualContainer,
                                                modelId,
                                                isLoading: !0
                                            }, selectExprs = (0, _powerbi_legacy_Explore_util_visualContainerUtils__WEBPACK_IMPORTED_MODULE_31__.oJ)(result.visualContainer), 
                                            _.isEmpty(selectExprs) ? [ 3, 2 ] : [ 4, this.createSortHelper(result.visualContainer) ];

                                          case 1:
                                            _a.sent(), _a.label = 2;

                                          case 2:
                                            return this.changeDetectorRef.detectChanges(), this.eventBridge.publishToChannel(_powerbi_legacy_Explore_services_events__WEBPACK_IMPORTED_MODULE_11__.jCS, {
                                                affectContainer: function(vc) {
                                                    return vc.name === result.visualContainer.name;
                                                }
                                            }), setTimeout(function() {
                                                return _this.updateViewport();
                                            }), [ 2 ];
                                        }
                                    });
                                });
                            })), clonedVisual = (0, _powerbi_legacy_Explore_contracts_visualContainer2__WEBPACK_IMPORTED_MODULE_35__.d9)(result.visualContainer, this.explorationSerializer), 
                            null != (null === (_c = null === (_b = null == clonedVisual ? void 0 : clonedVisual.config) || void 0 === _b ? void 0 : _b.singleVisual) || void 0 === _c ? void 0 : _c.vcObjects) && (clonedVisual.config.singleVisual.vcObjects = void 0), 
                            this.pinnableContentDefinitionUpdated.emit({
                                pinVisualArgs: {
                                    dataSources: this.dataSources.get(),
                                    filters: this.createVisualContainerFilters(result.visualContainer, result.visualContainer.filters),
                                    modelId,
                                    resourcePackages: void 0,
                                    themeCollection: this.viewModel.themeCollection,
                                    utterance: result.utterance,
                                    visualContainer: clonedVisual
                                }
                            }), this.alertVisualUpdate(this.getCurrentUtteranceTrimmed(), (0, _powerbi_legacy_Explore_util_visualContainerUtils__WEBPACK_IMPORTED_MODULE_23__.s)(result.visualContainer)), 
                            [ 3, 6 ]) : [ 3, 3 ]);

                          case 3:
                            return result.exploration ? (this.updateViewport(), result.exploration.themeCollection ? [ 4, _powerbi_legacy_VisualHostUI_utils_themeUtils__WEBPACK_IMPORTED_MODULE_36__.P.loadThemeAndBaseTheme(this.promiseFactory, this.resourceLoader, this.themeService, result.exploration.resourcePackages, result.exploration.themeCollection) ] : [ 3, 5 ]) : [ 3, 6 ];

                          case 4:
                            _d.sent(), _d.label = 5;

                          case 5:
                            activeSection_1 = (exploration = result.exploration).sections[exploration.activeSectionIndex], 
                            this.explorationNavigation.loadExploration(exploration), this.explorationNavigation.goto(activeSection_1), 
                            this.viewModel.result = {
                                type: "Pod",
                                restatement,
                                exploreCanvas: (0, _powerbi_legacy_ExploreUI_viewModels_viewModelFactory__WEBPACK_IMPORTED_MODULE_33__.T8)(exploration, activeSection_1, 0),
                                modelId
                            }, model = _.find(this.models, function(m) {
                                return m.id === modelId;
                            }), this.pinnableContentDefinitionUpdated.emit({
                                pinReportPageArgs: {
                                    exploration: (0, _powerbi_legacy_ExploreUI_viewModels_viewModelFactory__WEBPACK_IMPORTED_MODULE_33__.vi)(exploration, 0, exploration.activeSectionIndex, void 0, this.localizationService),
                                    section: activeSection_1,
                                    reportId: exploration.reportId,
                                    modelId,
                                    packageId: model && model.packageId,
                                    action: {
                                        action: _powerbi_legacy_PowerBIContracts_constants__WEBPACK_IMPORTED_MODULE_8__.RCq
                                    },
                                    utterance: result.utterance,
                                    pod: _.find(result.exploration.pods, function(p) {
                                        return p.boundSection === activeSection_1.name;
                                    }).name,
                                    filters: activeSection_1.filters
                                }
                            }), this.cancelVisualUpdateAlert(), _d.label = 6;

                          case 6:
                            return [ 2 ];
                        }
                    });
                });
            }, QnaComponentCoreService.prototype.createSortHelper = function(visualContainer) {
                return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function() {
                    var _a;
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return _a = this, [ 4, (0, _utils_visual_util__WEBPACK_IMPORTED_MODULE_5__.Vq)(visualContainer, this.conceptualSchemaProxy, this.dataSources, this.sortService, this.undoRedoService, this.visualAuthoringOpService, this.visualPlugin) ];

                          case 1:
                            return _a.sortHelper = _b.sent(), [ 2 ];
                        }
                    });
                });
            }, QnaComponentCoreService.prototype.createFontProperties = function(objects, objectName, fontComponentName, textClass, defaultSize, isSemibold, colorHelper, style) {
                var properties = objects && objects[objectName], boldPropertyNameValue = "".concat(fontComponentName).concat("Bold"), italicPropertyNameValue = "".concat(fontComponentName).concat("Italic"), underlinePropertyNameValue = "".concat(fontComponentName).concat("Underline"), boldPropValue = (0, 
                _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject3__WEBPACK_IMPORTED_MODULE_37__.N)(properties, boldPropertyNameValue), italicPropValue = (0, 
                _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject3__WEBPACK_IMPORTED_MODULE_37__.N)(properties, italicPropertyNameValue), underlinePropValue = (0, 
                _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject3__WEBPACK_IMPORTED_MODULE_37__.N)(properties, underlinePropertyNameValue), propertyNames = {
                    color: "".concat(fontComponentName).concat("FontColor"),
                    family: "".concat(fontComponentName).concat("FontFamily"),
                    size: "".concat(fontComponentName).concat("FontSize")
                };
                return boldPropValue && (propertyNames.bold = "".concat(fontComponentName).concat("Bold")), 
                italicPropValue && (propertyNames.italic = "".concat(fontComponentName).concat("Italic")), 
                underlinePropValue && (propertyNames.underline = "".concat(fontComponentName).concat("Underline")), 
                (0, _powerbi_legacy_PowerBIVisuals_Visuals_common_fontProperties__WEBPACK_IMPORTED_MODULE_38__.Zi)(objects && objects[objectName], propertyNames, colorHelper, style, "foreground", textClass, {
                    color: presentationDefaults.fontColor,
                    family: isSemibold ? presentationDefaults.semiboldFont : presentationDefaults.regularFont,
                    size: defaultSize,
                    weight: _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_21__.AI,
                    style: _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_21__.AI,
                    textDecoration: _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_21__.zu
                });
            }, QnaComponentCoreService.prototype.createVisualContainerFilters = function(visualContainer, filters) {
                var dataFilters = _.isEmpty(filters) ? [] : _.chain(filters).filter(function(f) {
                    return f.filter;
                }).map(function(f) {
                    return f.filter;
                }).value();
                this.inheritedFilters && this.inheritedFilters.dataFilter && dataFilters.push.apply(dataFilters, _.map(this.inheritedFilters.dataFiltersUnmerged, function(f) {
                    return f.filter;
                }));
                for (var filterBuilder = new _powerbi_legacy_Explore_services_filters_filterBuilder__WEBPACK_IMPORTED_MODULE_39__.ME, _i = 0, dataFilters_1 = dataFilters; _i < dataFilters_1.length; _i++) filterBuilder.addVisualFilter({
                    filter: dataFilters_1[_i]
                });
                var visualType = (0, _powerbi_legacy_Explore_util_visualContainerUtils__WEBPACK_IMPORTED_MODULE_23__.s)(visualContainer), capabilities = visualType && this.visualPlugin.capabilities(visualType), supportsHighlights = capabilities && capabilities.supportsHighlight;
                !supportsHighlights && this.inheritedFilters && this.inheritedFilters.highlightFilter && filterBuilder.addVisualFilter({
                    filter: this.inheritedFilters.highlightFilter
                });
                var newFilters = filterBuilder.getFilters(!1);
                return {
                    dataFilter: newFilters.dataFilter,
                    dataFiltersUnmerged: newFilters.dataFiltersUnmerged,
                    highlightFilter: supportsHighlights && this.inheritedFilters ? this.inheritedFilters.highlightFilter : void 0,
                    highlightFiltersUnmerged: supportsHighlights && this.inheritedFilters ? this.inheritedFilters.highlightFiltersUnmerged : void 0
                };
            }, QnaComponentCoreService.prototype.handleQueryErrors = function(error) {
                if (!error.ignorable) {
                    var details = error.getDetails(this.localizationService), overlayType = (0, _powerbi_legacy_ExploreUI_utils_errorDetailsUtility__WEBPACK_IMPORTED_MODULE_40__.fe)(error.code);
                    this.viewModel.result = {
                        type: "QueryError",
                        visualWithError: this.getCurrentVisual(),
                        details,
                        code: error.code,
                        fixableError: 0,
                        hideSeeDetails: (0, _powerbi_legacy_ExploreUI_utils_errorDetailsUtility__WEBPACK_IMPORTED_MODULE_40__.O6)(error.code),
                        overlayType,
                        requestId: error.requestId,
                        source: details.source || error.source || "PowerBI"
                    }, this.cancelVisualUpdateAlert();
                }
            }, QnaComponentCoreService.prototype.alertVisualUpdate = function(restatement, visualType) {
                if (restatement) {
                    var message = visualType ? this.localizationService.format("Qna_ScreenReader_VisualUpdatedWithChartType", [ restatement, visualType ]) : this.localizationService.format("Qna_ScreenReader_VisualUpdated", [ restatement ]);
                    this.screenReaderService.alertWithDebounce("qna_visual_update", message);
                }
            }, QnaComponentCoreService.prototype.cancelVisualUpdateAlert = function() {
                this.screenReaderService.cancelDebounce("qna_visual_update");
            }, QnaComponentCoreService.prototype.logInterpretCopilotTelemetry = function() {
                var _a;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function() {
                    var interpretCopilotTelemetryPath, isSignedIn, viewMode;
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return interpretCopilotTelemetryPath = null !== (_a = this.qnaProxyPathToken) && void 0 !== _a ? _a : "@powerbi/Qna/qnaweb.module#QnaWebModule", 
                            [ 4, this.ensureInterpretCopilotTelemetry(interpretCopilotTelemetryPath) ];

                          case 1:
                            return _b.sent(), [ 4, this.accountService.isSignedInAsync() ];

                          case 2:
                            return isSignedIn = _b.sent(), viewMode = this.viewModeState.getMode(), this.interpretCopilotTelemetry.logInterpretWithCopilotEvent("@powerbi/Qna/qnaweb.module#QnaWebModule" === this.qnaProxyPathToken ? "service" : "desktop", isSignedIn, viewMode), 
                            [ 2 ];
                        }
                    });
                });
            }, QnaComponentCoreService.prototype.ensureInterpretCopilotTelemetry = function(path) {
                return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function() {
                    var _a;
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return null != this.interpretCopilotTelemetry ? [ 2 ] : (_a = this, [ 4, this.lazyProvider.get(path, "interpretCopilotTelemetryService") ]);

                          case 1:
                            return _a.interpretCopilotTelemetry = _b.sent(), [ 2 ];
                        }
                    });
                });
            }, QnaComponentCoreService.prototype.convertRequestScopes = function(scopes) {
                return _.map(scopes, function(scope) {
                    return {
                        model: scope.model,
                        reportIds: scope.reportIds
                    };
                });
            }, QnaComponentCoreService.prototype.buildInputBoxFormattingCard = function(presentationVM) {
                var _this = this, inputBoxProps = _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_qnaVisual_capabilities__WEBPACK_IMPORTED_MODULE_41__.Fp.inputBox, inputBoxCardBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.CQ(new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.lg("inputBox"), "Visual_Qna_QuestionBox", inputBoxProps, function(key) {
                    return _this.localizationService.get(key);
                }), boldPropValue = presentationVM.inputBox.questionFontProperties.weight === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_21__.en, italicPropValue = presentationVM.inputBox.questionFontProperties.style === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_21__.BF, underlinePropValue = presentationVM.inputBox.questionFontProperties.textDecoration === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_21__.f0, fontControl = (new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.UN).withFontFamily({
                    descriptor: inputBoxProps.questionFontFamily,
                    value: presentationVM.inputBox.questionFontProperties.family
                }).withFontSizeProperties({
                    descriptor: inputBoxProps.questionFontSize,
                    value: presentationVM.inputBox.questionFontProperties.size.pt
                }).withBold({
                    descriptor: inputBoxProps.questionBold,
                    value: boldPropValue
                }).withItalic({
                    descriptor: inputBoxProps.questionItalic,
                    value: italicPropValue
                }).withUnderline({
                    descriptor: inputBoxProps.questionUnderline,
                    value: underlinePropValue
                }).build();
                return inputBoxCardBuilder.addGroup("text", function(groupBuilder) {
                    groupBuilder.withDisplayName("Text").addCompositeSlice("fontselector", "Font", fontControl).addSimpleSlice("color", function() {
                        return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.BT({
                            descriptor: inputBoxProps.questionFontColor,
                            value: {
                                value: presentationVM.inputBox.questionFontProperties.color
                            }
                        }).build();
                    }, function(builder) {
                        return builder.withCustomDisplayName("Generic_Color");
                    });
                }), inputBoxCardBuilder.addGroup("background", function(groupBuilder) {
                    groupBuilder.withDisplayName("Visual_Background").addSimpleSlice("defaultColor", function() {
                        return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.BT({
                            descriptor: inputBoxProps.background,
                            value: {
                                value: presentationVM.inputBox.backgroundColor
                            }
                        }).build();
                    }, function(builder) {
                        return builder.withCustomDisplayName("Visual_Qna_QuestionBackgroundColor");
                    }).addSimpleSlice("hoverColor", function() {
                        return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.BT({
                            descriptor: inputBoxProps.hoverColor,
                            value: {
                                value: presentationVM.inputBox.hoverColor
                            }
                        }).build();
                    }, function(builder) {
                        return builder.withCustomDisplayName("Visual_Qna_QuestionBackgroundHoverColor");
                    });
                }), inputBoxCardBuilder.addGroup("underlines", function(groupBuilder) {
                    groupBuilder.withDisplayName("Underline").addSimpleSlice("acceptedColor", function() {
                        return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.BT({
                            descriptor: inputBoxProps.acceptedColor,
                            value: {
                                value: presentationVM.inputBox.acceptedUnderlineColor
                            }
                        }).build();
                    }, function(builder) {
                        return builder.withCustomDisplayName("AcceptedColor");
                    }).addSimpleSlice("errorColor", function() {
                        return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.BT({
                            descriptor: inputBoxProps.errorColor,
                            value: {
                                value: presentationVM.inputBox.errorUnderlineColor
                            }
                        }).build();
                    }, function(builder) {
                        return builder.withCustomDisplayName("Error_Color");
                    }).addSimpleSlice("warningColor", function() {
                        return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.BT({
                            descriptor: inputBoxProps.warningColor,
                            value: {
                                value: presentationVM.inputBox.warningUnderlineColor
                            }
                        }).build();
                    }, function(builder) {
                        return builder.withCustomDisplayName("Warning_TitleColor");
                    });
                }), inputBoxCardBuilder.addGroup("submitButton", function(groupBuilder) {
                    groupBuilder.withDisplayName("Visual_Qna_CommitButtonBackground").addSimpleSlice("submitButtonColor", function() {
                        return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.BT({
                            descriptor: inputBoxProps.commitButtonBackgroundColor,
                            value: {
                                value: presentationVM.inputBox.commitButtonBackgroundColor
                            }
                        }).build();
                    }, function(builder) {
                        return builder.withCustomDisplayName("Background_Color");
                    });
                }), inputBoxCardBuilder.build();
            }, QnaComponentCoreService.prototype.buildRestatementFormattingCard = function(presentationVM) {
                var _this = this, restatementProps = _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_qnaVisual_capabilities__WEBPACK_IMPORTED_MODULE_41__.Fp.inputBox, restatementCardBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.CQ(new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.lg("restatement"), "Visual_Qna_Restatement", restatementProps, function(key) {
                    return _this.localizationService.get(key);
                }), fontControl = (new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.UN).withFontFamily({
                    descriptor: restatementProps.restatementFontFamily,
                    value: presentationVM.inputBox.restatementFontProperties.family
                }).withFontSizeProperties({
                    descriptor: restatementProps.restatementFontSize,
                    value: presentationVM.inputBox.restatementFontProperties.size.pt
                }).build();
                return restatementCardBuilder.addGroup("text", function(groupBuilder) {
                    groupBuilder.addCompositeSlice("fontselector", "Font", fontControl).addSimpleSlice("color", function() {
                        return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.BT({
                            descriptor: restatementProps.restatementFontColor,
                            value: {
                                value: presentationVM.inputBox.restatementFontProperties.color
                            }
                        }).build();
                    }, function(builder) {
                        return builder.withCustomDisplayName("Generic_Color");
                    });
                }), restatementCardBuilder.build();
            }, QnaComponentCoreService.prototype.buildSuggestionsFormattingCard = function(presentationVM) {
                var _this = this, suggestionsProps = _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_qnaVisual_capabilities__WEBPACK_IMPORTED_MODULE_41__.Fp.suggestions, suggestionsCardBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.CQ(new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.lg("suggestions"), "Suggestions", suggestionsProps, function(key) {
                    return _this.localizationService.get(key);
                });
                suggestionsCardBuilder.addTopLevelToggle("show", function() {
                    return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.bd({
                        descriptor: suggestionsProps.show,
                        value: presentationVM.suggestions.show
                    }).build();
                });
                var boldPropValue = presentationVM.suggestions.headerFontProperties.weight === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_21__.en, italicPropValue = presentationVM.suggestions.headerFontProperties.style === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_21__.BF, underlinePropValue = presentationVM.suggestions.headerFontProperties.textDecoration === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_21__.f0, fontControl = (new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.UN).withFontFamily({
                    descriptor: suggestionsProps.headerFontFamily,
                    value: presentationVM.suggestions.headerFontProperties.family
                }).withFontSizeProperties({
                    descriptor: suggestionsProps.headerFontSize,
                    value: presentationVM.suggestions.headerFontProperties.size.pt
                }).withBold({
                    descriptor: suggestionsProps.headerBold,
                    value: boldPropValue
                }).withItalic({
                    descriptor: suggestionsProps.headerItalic,
                    value: italicPropValue
                }).withUnderline({
                    descriptor: suggestionsProps.headerUnderline,
                    value: underlinePropValue
                }).build();
                suggestionsCardBuilder.addGroup("header", function(groupBuilder) {
                    groupBuilder.withDisplayName("Visual_Qna_SuggestionsCardHeader").addCompositeSlice("fontselector", "Font", fontControl).addSimpleSlice("color", function() {
                        return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.BT({
                            descriptor: suggestionsProps.headerFontColor,
                            value: {
                                value: presentationVM.suggestions.headerFontProperties.color
                            }
                        }).build();
                    }, function(builder) {
                        return builder.withCustomDisplayName("Generic_Color");
                    });
                }), boldPropValue = presentationVM.suggestions.cardFontProperties.weight === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_21__.en, 
                italicPropValue = presentationVM.suggestions.cardFontProperties.style === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_21__.BF, 
                underlinePropValue = presentationVM.suggestions.cardFontProperties.textDecoration === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_21__.f0;
                var fontSuggestionControl = (new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.UN).withFontFamily({
                    descriptor: suggestionsProps.cardFontFamily,
                    value: presentationVM.suggestions.cardFontProperties.family
                }).withFontSizeProperties({
                    descriptor: suggestionsProps.cardFontSize,
                    value: presentationVM.suggestions.cardFontProperties.size.pt
                }).withBold({
                    descriptor: suggestionsProps.cardBold,
                    value: boldPropValue
                }).withItalic({
                    descriptor: suggestionsProps.cardItalic,
                    value: italicPropValue
                }).withUnderline({
                    descriptor: suggestionsProps.cardUnderline,
                    value: underlinePropValue
                }).build();
                return suggestionsCardBuilder.addGroup("cards", function(groupBuilder) {
                    groupBuilder.withDisplayName("Cards").addCompositeSlice("fontselector", "Font", fontSuggestionControl).addSimpleSlice("text", function() {
                        return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.BT({
                            descriptor: suggestionsProps.cardFontColor,
                            value: {
                                value: presentationVM.suggestions.cardFontProperties.color
                            }
                        }).build();
                    }, function(builder) {
                        return builder.withCustomDisplayName("Text_Color");
                    }).addSimpleSlice("background", function() {
                        return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.BT({
                            descriptor: suggestionsProps.cardBackground,
                            value: {
                                value: presentationVM.suggestions.backgroundColor
                            }
                        }).build();
                    }, function(builder) {
                        return builder.withCustomDisplayName("Background_Color");
                    });
                }), suggestionsCardBuilder.build();
            }, QnaComponentCoreService.\u0275fac = function(t) {
                return new (t || QnaComponentCoreService)(_angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_VisualHostCore__WEBPACK_IMPORTED_MODULE_42__.D), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_angular_core__WEBPACK_IMPORTED_MODULE_3__.ChangeDetectorRef), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_Data__WEBPACK_IMPORTED_MODULE_43__.i), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_ExploreUI__WEBPACK_IMPORTED_MODULE_44__.D), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_UILibrary__WEBPACK_IMPORTED_MODULE_45__.x), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_Explore__WEBPACK_IMPORTED_MODULE_46__.Z), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_ExploreUI__WEBPACK_IMPORTED_MODULE_47__.U), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_ExploreUI__WEBPACK_IMPORTED_MODULE_48__.z), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_Explore__WEBPACK_IMPORTED_MODULE_49__.L), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_ExploreUI__WEBPACK_IMPORTED_MODULE_50__.J), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_FeatureSwitch__WEBPACK_IMPORTED_MODULE_51__.vZ), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_qna_feedback_state_qna_feedback_state_service__WEBPACK_IMPORTED_MODULE_52__.B), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_LazyLoad__WEBPACK_IMPORTED_MODULE_53__.E), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_UILibrary__WEBPACK_IMPORTED_MODULE_54__.f), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_Explore__WEBPACK_IMPORTED_MODULE_55__.v), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_Geocoding__WEBPACK_IMPORTED_MODULE_56__.i), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_Common__WEBPACK_IMPORTED_MODULE_0__._1), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_LazyLoad__WEBPACK_IMPORTED_MODULE_57__.m), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_Localization__WEBPACK_IMPORTED_MODULE_58__.o), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_ErrorService__WEBPACK_IMPORTED_MODULE_59__.T), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_Telemetry__WEBPACK_IMPORTED_MODULE_1__.y0), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_VisualHostCore__WEBPACK_IMPORTED_MODULE_60__.l6), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_A11y__WEBPACK_IMPORTED_MODULE_61__.g), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_interpret_listener_interpret_listener_service__WEBPACK_IMPORTED_MODULE_62__.y), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_Explore__WEBPACK_IMPORTED_MODULE_63__.z), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_Explore__WEBPACK_IMPORTED_MODULE_64__.K), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_Explore__WEBPACK_IMPORTED_MODULE_65__.z), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_ExploreUI__WEBPACK_IMPORTED_MODULE_66__.kc), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_ExploreUI__WEBPACK_IMPORTED_MODULE_67__.Q), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_Explore__WEBPACK_IMPORTED_MODULE_68__.o), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_Geocoding__WEBPACK_IMPORTED_MODULE_69__.A), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_GeocoderIndexedDB__WEBPACK_IMPORTED_MODULE_70__.W), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_InjectionTokens_tooltips_visualHostTooltipServiceFactory__WEBPACK_IMPORTED_MODULE_71__.A), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_InjectionTokens_promiseFactory__WEBPACK_IMPORTED_MODULE_72__.t), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_InjectionTokens_account_service_token__WEBPACK_IMPORTED_MODULE_73__.F), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_InjectionTokens_qnaProxyPath__WEBPACK_IMPORTED_MODULE_74__.n, 8), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_InjectionTokens_qnaModelUtilsPath__WEBPACK_IMPORTED_MODULE_75__.z, 8), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_InjectionTokens_qnaLiveConnectService__WEBPACK_IMPORTED_MODULE_76__.U, 8));
            }, QnaComponentCoreService.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275defineInjectable"]({
                token: QnaComponentCoreService,
                factory: QnaComponentCoreService.\u0275fac
            }), QnaComponentCoreService;
        }();
        function getContrastForegroundColor(backgroundColor) {
            return (0, _powerbi_legacy_PowerBICommon_utils_colorUtility__WEBPACK_IMPORTED_MODULE_18__.um)(backgroundColor) > .6 ? presentationDefaults.darkFontColor : presentationDefaults.lightFontColor;
        }
    },
    21548: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            B: function() {
                return QnaFeedbackStateService;
            }
        });
        var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(50423), QnaFeedbackStateService = function() {
            function QnaFeedbackStateService() {
                this.states = {};
            }
            return QnaFeedbackStateService.prototype.updateState = function(utterance, state) {
                this.states[utterance.toLocaleLowerCase()] = state;
            }, QnaFeedbackStateService.prototype.getState = function(utterance) {
                var _a;
                return null !== (_a = this.states[utterance.toLocaleLowerCase()]) && void 0 !== _a ? _a : "Unchosen";
            }, QnaFeedbackStateService.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275defineInjectable"]({
                token: QnaFeedbackStateService,
                factory: QnaFeedbackStateService.\u0275fac = function(t) {
                    return new (t || QnaFeedbackStateService);
                },
                providedIn: "root"
            }), QnaFeedbackStateService;
        }();
    },
    5894: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            Nt: function() {
                return ImproveLsdlRequestEventName;
            },
            WW: function() {
                return QnaVisualSuggestionCardClicked;
            },
            dN: function() {
                return QnaVisualVisualConverted;
            },
            eV: function() {
                return QnAUpdateLsdlSharingPermission;
            },
            v5: function() {
                return QnAFeedback;
            },
            yP: function() {
                return QnAINAQ;
            },
            yp: function() {
                return ImproveLsdlRequestEvent;
            }
        });
        var _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(41114), QnaVisualSuggestionCardClicked = _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.cx["PBI.QnaVisual.SuggestionCardClicked"] = (0, 
        _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.b1)("PBI.QnaVisual.SuggestionCardClicked"), QnaVisualVisualConverted = _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.cx["PBI.QnaVisual.VisualConverted"] = (0, 
        _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.b1)("PBI.QnaVisual.VisualConverted"), QnAINAQ = _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.cx["PBI.QnA.INAQ"] = (0, 
        _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.b1)("PBI.QnA.INAQ", {
            logExpAssignment: !0
        }), QnAFeedback = _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.cx["PBI.QnA.Feedback"] = (0, 
        _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.b1)("PBI.QnA.Feedback"), QnAUpdateLsdlSharingPermission = _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.cx["PBI.QnA.UpdateLsdlSharingPermission"] = (0, 
        _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.b1)("PBI.QnA.UpdateLsdlSharingPermission"), ImproveLsdlRequestEventName = "PBI.QnaTooling.ImproveLsdlRequest", ImproveLsdlRequestEvent = _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.cx[ImproveLsdlRequestEventName] = (0, 
        _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.b1)(ImproveLsdlRequestEventName);
    },
    87974: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            U: function() {
                return shouldCommitQuestionOnDemand;
            }
        });
        var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(81337);
        function shouldCommitQuestionOnDemand(modelsInfo, qnaModelUtils, featureSwitchService) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__awaiter)(this, void 0, void 0, function() {
                var _i, _a;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__generator)(this, function(_b) {
                    switch (_b.label) {
                      case 0:
                        if (featureSwitchService.featureSwitches.qnaSupportCommitQuestionOnDemandForAll) return [ 2, !0 ];
                        _i = 0, _a = null != modelsInfo ? modelsInfo : [], _b.label = 1;

                      case 1:
                        return _i < _a.length ? [ 4, qnaModelUtils.isDQOrLiveConnectToOnPrem(_a[_i]) ] : [ 3, 4 ];

                      case 2:
                        if (_b.sent()) return [ 2, !0 ];
                        _b.label = 3;

                      case 3:
                        return _i++, [ 3, 1 ];

                      case 4:
                        return [ 2, !1 ];
                    }
                });
            });
        }
    },
    74857: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            D4: function() {
                return getBaseThemeCollection;
            },
            ET: function() {
                return getQnaNotAllowedInIEError;
            },
            Kt: function() {
                return getVisualTitle;
            },
            Nj: function() {
                return qnaQueryMetadataToQueryMetadata;
            },
            Su: function() {
                return getThemeCollection;
            },
            Vq: function() {
                return getInterpretResultVisualSortHelper;
            },
            aZ: function() {
                return showVisualErrorDetails;
            },
            fI: function() {
                return customSortInterpretResultVisual;
            },
            y_: function() {
                return getInterpretResultVisual;
            }
        });
        var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(81337), _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(62458), _powerbi_legacy_Explore_util_themeUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(38701), _powerbi_legacy_Explore_util_visualContainerUtils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(60661), _powerbi_legacy_ExploreUI_utils_errorDetailsUtility__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(18503), _powerbi_legacy_PowerBIVisuals_VisualsCommon_tracing_traceType__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(50547), _powerbi_ExploreUI__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(2240);
        function getQnaNotAllowedInIEError(localizationService) {
            return {
                code: "qnaNotAllowedInIE",
                fixableError: 0,
                hideSeeDetails: !0,
                details: {
                    message: localizationService.get("Qna_NotSupportedInIE"),
                    displayableErrorInfo: void 0
                },
                source: "User"
            };
        }
        function qnaQueryMetadataToQueryMetadata(qnaQueryMetadata) {
            if (qnaQueryMetadata) return {
                Filters: _.map(qnaQueryMetadata.filters, function(f) {
                    return {
                        Restatement: f.Restatement,
                        type: void 0
                    };
                }),
                Select: _.map(qnaQueryMetadata.selects, function(s) {
                    return {
                        Restatement: s.restatement
                    };
                })
            };
        }
        function showVisualErrorDetails(error, errorService, localizationService) {
            _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(error, "Expect this to be called only when the given error is defined.");
            var errorDetails = error.details;
            if (errorDetails) {
                var hasAddtionalErrorInfo = (0, _powerbi_legacy_ExploreUI_utils_errorDetailsUtility__WEBPACK_IMPORTED_MODULE_1__.jx)(errorDetails), title = localizationService.get("ServiceError_CannotLoadVisual"), message = errorDetails.message, additionalErrors = [];
                if (hasAddtionalErrorInfo && (title = errorDetails.displayableErrorInfo[0].errorInfoKey, 
                message = errorDetails.displayableErrorInfo[0].errorInfoValue, errorDetails.displayableErrorInfo.length > 1)) for (var i = 1; i < errorDetails.displayableErrorInfo.length; i++) additionalErrors.push(errorDetails.displayableErrorInfo[i]);
                _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assert(function() {
                    return null != error.source;
                }, "Expect error.source is not null."), errorService.error(message, error.code, {
                    debugErrorInfo: errorDetails.debugErrorInfo,
                    displayableErrorInfo: additionalErrors,
                    title,
                    source: error.source,
                    level: _powerbi_legacy_PowerBIVisuals_VisualsCommon_tracing_traceType__WEBPACK_IMPORTED_MODULE_2__.U.Error
                });
            }
        }
        function getThemeCollection(explorationNavigation, featureSwitchService) {
            var currentExploration = explorationNavigation.getCurrentExploration(), themeCollection = null == currentExploration ? void 0 : currentExploration.themeCollection;
            return _.isEmpty(themeCollection) ? getBaseThemeCollection(featureSwitchService) : themeCollection;
        }
        function getBaseThemeCollection(featureSwitchService) {
            return {
                baseTheme: (0, _powerbi_legacy_Explore_util_themeUtils__WEBPACK_IMPORTED_MODULE_3__.DC)(featureSwitchService)
            };
        }
        function getInterpretResultVisual(interpretResult, conceptualSchemaProxy, dataSourcesService, visualRecommendationService) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(this, void 0, void 0, function() {
                var command, query, selects, queryMetadata, exprMetadata, filterMetadata, schema, result;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function(_a) {
                    switch (_a.label) {
                      case 0:
                        return (query = null == (command = null == interpretResult ? void 0 : interpretResult.command) ? void 0 : command.query) ? (selects = query.select(), 
                        queryMetadata = command.queryMetadata, exprMetadata = _.map(null == queryMetadata ? void 0 : queryMetadata.selects, function(selectMetadata, index) {
                            return {
                                expression: selects[index].expr,
                                type: selectMetadata.type,
                                isGroup: selectMetadata.isGroup,
                                defaultLabel: selectMetadata.defaultLabel,
                                isExplicitSortBy: selectMetadata.isExplicitSortBy
                            };
                        }), filterMetadata = null == queryMetadata ? void 0 : queryMetadata.filters, [ 4, conceptualSchemaProxy.get(dataSourcesService.get()) ]) : [ 2 ];

                      case 1:
                        return schema = _a.sent(), (result = visualRecommendationService.recommendVisuals(query, schema, {
                            numberOfResults: 1,
                            visualType: _.first(command.suggestedVisualTypes),
                            filterMetadata,
                            exprMetadata,
                            addDefaultFormatting: !0,
                            allowTooltipMeasures: !0
                        })) ? (_powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assert(function() {
                            return 1 === _.size(result.visualContainers);
                        }, "Expected 1 result"), [ 2, result.visualContainers[0] ]) : [ 2 ];
                    }
                });
            });
        }
        function getVisualTitle(visualContainer, conceptualSchemaProxy, dataSourcesService, displayNameService, visualPlugin, forceGenerateTitle, displayIndividualValuesLimit) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(this, void 0, void 0, function() {
                var schema, singleVisualConfig, displayNameOptions;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function(_a) {
                    switch (_a.label) {
                      case 0:
                        return [ 4, conceptualSchemaProxy.get(dataSourcesService.get()) ];

                      case 1:
                        return schema = _a.sent(), singleVisualConfig = (0, _powerbi_legacy_Explore_util_visualContainerUtils__WEBPACK_IMPORTED_MODULE_5__.PQ)(visualContainer), 
                        displayNameOptions = {
                            multiAndLastValueConnectorSpecialResourceKey: "AndConjunction_MultiItemsAndOne",
                            displayIndividualValuesLimitSetting: null != displayIndividualValuesLimit ? {
                                limit: displayIndividualValuesLimit,
                                limitedValueShownResourceKey: "AndOthers_SingleItem",
                                multiLimitedValuesShownResourceKey: "AndOthers_MultipleItem"
                            } : void 0
                        }, [ 2, displayNameService.getVisualTitle(singleVisualConfig, schema, visualPlugin.capabilities(singleVisualConfig.visualType), void 0, displayNameOptions, forceGenerateTitle) ];
                    }
                });
            });
        }
        function getInterpretResultVisualSortHelper(visualContainer, conceptualSchemaProxy, dataSourcesService, sortService, undoRedoService, visualAuthoringOpService, visualPlugin) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(this, void 0, void 0, function() {
                var sortableFieldsResult, sortSetting;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function(_a) {
                    switch (_a.label) {
                      case 0:
                        return [ 4, getSortableFields(visualContainer, conceptualSchemaProxy, dataSourcesService, sortService) ];

                      case 1:
                        return sortableFieldsResult = _a.sent(), sortSetting = {
                            defaultSortBehavior: getDefaultSortBehavior(visualContainer, visualPlugin),
                            sortableFields: null == sortableFieldsResult ? void 0 : sortableFieldsResult.sortableFields,
                            sortGroups: null == sortableFieldsResult ? void 0 : sortableFieldsResult.sortGroups
                        }, [ 2, new _powerbi_ExploreUI__WEBPACK_IMPORTED_MODULE_6__.B(sortSetting, visualContainer, sortService, undoRedoService, visualAuthoringOpService) ];
                    }
                });
            });
        }
        function customSortInterpretResultVisual(visualContainer, sortHelper, sortDescriptors) {
            if (!_.isEmpty(sortDescriptors)) {
                var selectExprs = (0, _powerbi_legacy_Explore_util_visualContainerUtils__WEBPACK_IMPORTED_MODULE_5__.oJ)(visualContainer);
                _.isEmpty(selectExprs) || sortHelper.applySortByFields(sortDescriptors);
            }
        }
        function getDefaultSortBehavior(visualContainer, visualPlugin) {
            var _a, visualCapabilities = (0, _powerbi_legacy_Explore_util_visualContainerUtils__WEBPACK_IMPORTED_MODULE_5__.cj)(visualContainer, visualPlugin);
            return !!visualCapabilities && !!(null === (_a = visualCapabilities.sorting) || void 0 === _a ? void 0 : _a.default);
        }
        function getSortableFields(visualContainer, conceptualSchemaProxy, dataSourcesService, sortService) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(this, void 0, void 0, function() {
                var dataSourcesArray, singleVisualConfig, query, schema;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function(_b) {
                    switch (_b.label) {
                      case 0:
                        if (!(dataSourcesArray = dataSourcesService.get())) return [ 2 ];
                        _b.label = 1;

                      case 1:
                        return _b.trys.push([ 1, 3, , 4 ]), singleVisualConfig = (0, _powerbi_legacy_Explore_util_visualContainerUtils__WEBPACK_IMPORTED_MODULE_5__.PQ)(visualContainer), 
                        query = (0, _powerbi_legacy_Explore_util_visualContainerUtils__WEBPACK_IMPORTED_MODULE_5__.Xf)(visualContainer), 
                        [ 4, conceptualSchemaProxy.get(dataSourcesArray) ];

                      case 2:
                        return schema = _b.sent(), [ 2, sortService.getSortableFields({
                            query,
                            schema,
                            visualType: singleVisualConfig.visualType,
                            columnProperties: singleVisualConfig.columnProperties,
                            compiledMappings: []
                        }) ];

                      case 3:
                        return _b.sent(), [ 3, 4 ];

                      case 4:
                        return [ 2 ];
                    }
                });
            });
        }
    },
    35988: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            AU: function() {
                return getUserErrorMessage;
            },
            B4: function() {
                return wireV3ResponseToClientSuggestedQuestionsResponse;
            },
            C2: function() {
                return clientToWireModelScopes;
            },
            Cb: function() {
                return wireV3ResponseToClientProbeResponse;
            },
            Fm: function() {
                return getRetriableClientWarningDesktop;
            },
            NG: function() {
                return clientToWireInterpretRequestDesktop;
            },
            R1: function() {
                return wireV3ResponseToClientInterpretResponse;
            },
            Tm: function() {
                return getUserWarningMessageKeys;
            },
            hj: function() {
                return hostServiceErrorCodeToQnaErrorCode;
            },
            qV: function() {
                return getRetriableClientWarningDesktopToWeb;
            },
            tc: function() {
                return clientToWireInterpretRequestDesktopToWeb;
            },
            vr: function() {
                return getQueryUnSupportedLevelWarningsInfo;
            }
        });
        var _a, _b, _c, _d, _e, _f, _powerbi_Insights__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(70940), _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(3468), _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(62458), _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_StandaloneUtility3__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(43286), _powerbi_legacy_PowerBIVisuals_VisualsData_types_valueType__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(80777), interpretDiagnosticCodeToInterpretWarningMappings = ((_a = {}).GeneratedLinguisticSchema = 0, 
        _a.DataIndexBuildingCancelled = 16, _a.DataIndexMissingStatistics = 17, _a.DataIndexNotReady = 8, 
        _a.DataIndexSizeLimitReached = 15, _a.DataIndexUpdateFailure = 10, _a.DomainModelNotReady = 2, 
        _a.DomainModelPartialLoad = 3, _a.DomainModelUpdateFailure = 9, _a.EmptyLinguisticSchema = 1, 
        _a.InterpretationSemanticError = 4, _a.InterpretationSemanticWarning = 5, _a.InterpretCancelled = 18, 
        _a.InvalidTextualEntity = 6, _a.LinguisticSchemaTruncated = 14, _a.MissingOrInvalidPodParameters = 13, 
        _a.QueryAggregateNotSupported = 19, _a.QueryMedianNotSupported = 20, _a.QueryPercentileNotSupported = 21, 
        _a.QueryScopedEvalNotSupported = 22, _a.QuerySubqueryRegroupingNotSupported = 23, 
        _a.StaleDataIndex = 12, _a.StaleDomainModel = 11, _a.RequiresNewerVersion = 7, _a.DataIndexVersionIsOld = 24, 
        _a.QueryGroupByTableNotSupported = 25, _a.QueryNotSupported = 26, _a.NextBestInterpretation = 27, 
        _a), interpretDiagnosticCodeToQnaErrorCodeMappings = ((_b = {}).ActivationFailure = "ActivationFailure", 
        _b.CloudRlsModelAccessDenied = "CloudRlsModelAccessDenied", _b.DataIndexBuildFailure = "DataIndexBuildFailure", 
        _b.DomainModelLoadFailure = "DomainModelLoadFailure", _b.ExternalModelAccessDenied = "ExternalModelAccessDenied", 
        _b.GenericRequestFailure = "GenericRequestFailure", _b.LinguisticSchemaLoadFailure = "LinguisticSchemaLoadFailure", 
        _b.ModelNotFound = "ModelNotFound", _b.ModelQnaNotEnabled = "ModelQnaNotEnabled", 
        _b.ModelQnaNotSupported = "ModelQnaNotSupported", _b.RequiresNewerVersion = "RequiresNewerVersion", 
        _b.SchemaLanguageNotSupported = "SchemaLanguageNotSupported", _b.MissingRuntimeModule = "MissingRuntimeModule", 
        _b.VerifyRuntimeFailure = "VerifyRuntimeFailure", _b.DataIndexMissingAllStatistics = "DataIndexMissingAllStatistics", 
        _b), hostSpecificInterpretWarningToUserMessageKeyMappings_Desktop = ((_c = {})[16] = "Qna_Warning_DataIndexIncomplete_Desktop", 
        _c[15] = "Qna_Warning_DataIndexIncomplete_Desktop", _c[14] = "Qna_Warning_LinguisticSchemaTruncated_Desktop", 
        _c), hostSpecificInterpretWarningToUserMessageKeyMappings_Service = ((_d = {})[16] = "Qna_Warning_DataIndexIncomplete_Service", 
        _d[15] = "Qna_Warning_DataIndexIncomplete_Service", _d[14] = "Qna_Warning_LinguisticSchemaTruncated_Service", 
        _d), retriableClientWarnings_Desktop = [ 2, 8, 11, 12, 24 ], retriableClientWarnings_Service = [ 2, 8 ], interpretWarningToUserMessageKeyMappings = ((_e = {})[1] = "Qna_NotAllowedForReport_WithoutModel", 
        _e[2] = "Qna_Explore_WarningBuildingLanguageModel", _e[7] = "Qna_Warning_RequiresNewerVersion", 
        _e[8] = "Qna_Explore_WarningIndexing", _e[9] = "Qna_Warning_ModelUpdateFailure", 
        _e[10] = "Qna_Warning_DataIndexUpdateFailure", _e[11] = "Qna_Warning_StaleModel", 
        _e[12] = "Qna_Warning_StaleIndex", _e[17] = "Qna_Warning_DataIndexMissingStatistics", 
        _e[19] = "Qna_Warning_UnsupportedFunction", _e[20] = "Qna_Warning_UnsupportedFunction", 
        _e[21] = "Qna_Warning_UnsupportedFunction", _e[22] = "Qna_Warning_UnsupportedFunction", 
        _e[23] = "Qna_Warning_UnsupportedFunction", _e[25] = "Qna_Warning_QueryGroupByTableNotSupported", 
        _e[26] = "Qna_Warning_QueryNotSupported", _e[27] = "Qna_Warning_NextBestInterpretation", 
        _e), qnaErrorCodeToUserMessageKeyMappings = ((_f = {}).FeatureNotAvailable = "Qna_Error_GenericRequestFailure", 
        _f.NetworkConnectionIssue = "Qna_Error_NetworkIssue", _f.RequiresNewerVersion = "Qna_Error_RequiresNewerVersion", 
        _f.ModelNotFound = "Qna_Error_ModelNotFound", _f.ModelQnaNotEnabled = "Qna_Error_ModelQnaNotEnabled", 
        _f.ModelQnaNotSupported = "Qna_Error_ModelQnaNotSupported", _f.MissingRuntimeModule = "Qna_Explore_MissingBinaries", 
        _f.VerifyRuntimeFailure = "Qna_Explore_MissingBinaries", _f.SchemaLanguageNotSupported = "Qna_NotAllowedForReport_QnaNotSupported", 
        _f.SessionIsInactive = "Qna_Error_GenericRequestFailure", _f.GenericRequestFailure = "Qna_Error_GenericRequestFailure", 
        _f.DataIndexBuildFailure = "Qna_Explore_WarningFailedIndexing", _f.CloudRlsModelAccessDenied = "Tile_RLS_NoAccess", 
        _f.ExternalModelAccessDenied = "Qna_Explore_ModelAccessDenied_WithoutSpecifyOwner", 
        _f.DataIndexMissingAllStatistics = "Qna_Error_DataIndexMissingAllStatistics", _f), queryUnSupportedLevelWarnings = [ 19, 20, 22, 21, 23, 25, 26 ];
        function wireV3ResponseToClientSuggestedQuestionsResponse(wireV3Response) {
            _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(wireV3Response, "Expect the given wireV3Response to be defined");
            var clientError = getClientErrorFromWireV3Response(wireV3Response);
            if (clientError) return {
                error: clientError
            };
            var wireResult = _.first(wireV3Response.Results), interpretation = _.first(null == wireResult ? void 0 : wireResult.Interpretations);
            return {
                result: {
                    utterances: _.map(null == interpretation ? void 0 : interpretation.SuggestedUtterances, function(utterance) {
                        return {
                            text: utterance.Text,
                            source: utterance.Source
                        };
                    }),
                    warnings: wireV3InterpretDiagnosticMessageToClientWarnings(null == wireResult ? void 0 : wireResult.DiagnosticMessages)
                }
            };
        }
        function wireV3ResponseToClientInterpretResponse(utterance, desiredInterpretationsCount, requestId, wireV3Response) {
            _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(wireV3Response, "Expect the given wireV3Response to be defined");
            var clientResult, warnings, clientError = getClientErrorFromWireV3Response(wireV3Response);
            if (!clientError) {
                var firstWireResult_1 = _.first(wireV3Response.Results);
                warnings = wireV3InterpretDiagnosticMessageToClientWarnings(null == firstWireResult_1 ? void 0 : firstWireResult_1.DiagnosticMessages);
                var interpretations = _.take(null == firstWireResult_1 ? void 0 : firstWireResult_1.Interpretations, null != desiredInterpretationsCount ? desiredInterpretationsCount : 1);
                _.isEmpty(interpretations) || (clientResult = _.map(interpretations, function(interpretation) {
                    var _a, _b, _c;
                    return {
                        restatement: interpretation.Restatement,
                        databaseName: null === (_a = firstWireResult_1.Context) || void 0 === _a ? void 0 : _a.DatabaseName,
                        virtualServerName: null === (_b = firstWireResult_1.Context) || void 0 === _b ? void 0 : _b.VirtualServerName,
                        command: wireToClientCommand(interpretation.Command),
                        correctionInfo: generateUtteranceCorrectionInfo(interpretation),
                        spans: wireToClientSpanCollection(utterance, interpretation.Spans),
                        language: firstWireResult_1.Language,
                        modelLanguage: firstWireResult_1.ModelLanguage,
                        modelOwner: null === (_c = firstWireResult_1.Context) || void 0 === _c ? void 0 : _c.ModelOwner,
                        usedAgents: _.map(interpretation.UsedAgents, function(a) {
                            return a;
                        }),
                        score: interpretation.Score,
                        relevantSchemaElements: convertWireSchemaElementsToClientSchemaElements(firstWireResult_1.RelevantSchemaElements)
                    };
                }));
            }
            return {
                utterance,
                requestId,
                error: clientError,
                results: clientResult,
                warnings
            };
        }
        function convertWireSchemaElementsToClientSchemaElements(wireSchemaElements) {
            if (null != wireSchemaElements && (null != wireSchemaElements.Entities || null != wireSchemaElements.Relationships)) {
                var converter = function(wire) {
                    return {
                        description: wire.Description,
                        score: wire.Score
                    };
                };
                return {
                    entities: _.map(wireSchemaElements.Entities, converter),
                    relationships: _.map(wireSchemaElements.Relationships, converter)
                };
            }
        }
        function wireV3ResponseToClientProbeResponse(wireV3Response) {
            _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(wireV3Response, "Expect the given wireV3Response to be defined");
            var clientError = getClientErrorFromWireV3Response(wireV3Response);
            if (clientError) return {
                error: clientError
            };
            var firstWireResult = _.first(wireV3Response.Results);
            return {
                results: _.map(null == firstWireResult ? void 0 : firstWireResult.Interpretations, function(_interpretation) {
                    return {
                        language: firstWireResult.Language
                    };
                })
            };
        }
        function getWireV3ResponseClientWarnings(wireV3Response) {
            _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(wireV3Response, "Expect the given wireV3Response to be defined");
            var firstWireResult = _.first(wireV3Response.Results);
            return wireV3InterpretDiagnosticMessageToClientWarnings(null == firstWireResult ? void 0 : firstWireResult.DiagnosticMessages);
        }
        function getRetriableClientWarningDesktop(wireResponse) {
            _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(wireResponse, "Expect the given wireResponse to be defined");
            var warnings = getWireV3ResponseClientWarnings(wireResponse);
            return _.find(retriableClientWarnings_Desktop, function(retryClientWarning) {
                return _.includes(warnings, retryClientWarning);
            });
        }
        function getRetriableClientWarningDesktopToWeb(wireResponse) {
            return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(wireResponse, "Expect the given wireResponse to be defined"), 
            function(wireResponse) {
                _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(wireResponse, "Expect the given wireResponse to be defined");
                var warnings = getWireV3ResponseClientWarnings(wireResponse);
                return _.find(retriableClientWarnings_Service, function(retryClientWarning) {
                    return _.includes(warnings, retryClientWarning);
                });
            }(wireResponse);
        }
        function wireToClientSpanCollection(utterance, wireSpans) {
            if (_powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(utterance, "utterance"), 
            _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertAnyValue(wireSpans, "wireSpans"), 
            wireSpans) {
                _.isEmpty(utterance) && _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assert(function() {
                    return _.every(wireSpans, function(wireSpan) {
                        return 0 === wireSpan.Length;
                    });
                }, "utterance is empty, every span should have zero length");
                var baseSpans = [], overlapSpans = [];
                return _.forEach(wireSpans, function(wireSpan) {
                    5 !== wireSpan.Resolution || wireSpan.Binding ? baseSpans.push(new SpanInternal(utterance, wireSpan, !1)) : overlapSpans.push(new SpanInternal(utterance, wireSpan, !0));
                }), _.isEmpty(overlapSpans) || _.forEach(overlapSpans, function(overlapSpan) {
                    _.forEach(baseSpans, function(baseSpan) {
                        if (function(span, overlapSpan) {
                            return overlapSpan.startIndex <= span.startIndex && overlapSpan.endExcludingIndex > span.startIndex || overlapSpan.startIndex < span.endExcludingIndex && overlapSpan.endExcludingIndex > span.endExcludingIndex || span.startIndex <= overlapSpan.startIndex && span.endExcludingIndex >= overlapSpan.endExcludingIndex || overlapSpan.startIndex <= span.startIndex && overlapSpan.endExcludingIndex >= span.endExcludingIndex;
                        }(baseSpan, overlapSpan)) baseSpan.overlapSpans.push(overlapSpan); else if (overlapSpan.endExcludingIndex < baseSpan.startIndex) return;
                    });
                }), baseSpans;
            }
        }
        function hostServiceErrorCodeToQnaErrorCode(errorCode) {
            return "BadGateway" === errorCode || "ConnectFailure" === errorCode || "ConnectionClosed" === errorCode || "GatewayTimeout" === errorCode || "KeepAliveFailure" === errorCode || "NameResolutionFailure" === errorCode || "NetworkUnavailable" === errorCode || "ProxyAuthenticationRequired" === errorCode || "ProxyNameResolutionFailure" === errorCode || "RequestTimeout" === errorCode || "ServiceUnvailable" === errorCode || "Timeout" === errorCode || "AccessDenied" === errorCode ? "NetworkConnectionIssue" : "FeatureNotAvailableError" === errorCode ? "FeatureNotAvailable" : "GenericRequestFailure";
        }
        function clientToWireInterpretRequestDesktop(request) {
            var clientContract, wireRequest = clientToWireInterpretRequestCommon(request);
            return request && (wireRequest.Context = {
                ReportMetadata: (clientContract = request.reportMetadata, clientContract ? {
                    LinguisticSchema: clientContract.linguisticSchema,
                    Pods: _.map(clientContract.pods, function(p) {
                        return {
                            Name: p.name,
                            CortanaEnabled: p.cortanaEnabled,
                            Parameters: _.map(p.parameters, function(param) {
                                return {
                                    Name: param.name,
                                    TargetColumn: param.targetColumn,
                                    TargetEntity: param.targetEntity
                                };
                            })
                        };
                    })
                } : void 0)
            }), wireRequest;
        }
        function clientToWireInterpretRequestDesktopToWeb(request, virtualServerName, databaseName) {
            var feedback, wireRequest = clientToWireInterpretRequestCommon(request);
            return wireRequest.Context = {
                ModelScopes: [ {
                    VirtualServerName: virtualServerName,
                    DatabaseName: databaseName
                } ],
                Tags: null == request ? void 0 : request.tags,
                ImpersonatedUserPrincipalName: null == request ? void 0 : request.impersonatedUserPrincipalName,
                ImpersonatedRoles: null == request ? void 0 : request.impersonatedRoles,
                Feedback: (feedback = null == request ? void 0 : request.feedback, feedback ? {
                    Sentiment: feedback.sentiment,
                    Reason: feedback.reason,
                    Comment: feedback.comment
                } : void 0)
            }, wireRequest.Options || (wireRequest.Options = {}), wireRequest;
        }
        function clientToWireInterpretRequestCommon(request) {
            return request ? {
                Version: "3.3.0",
                Utterance: request.utterance,
                Spans: _.map(request.spans, function(span) {
                    var wireSpan = {
                        StartIndex: span.startIndex,
                        Length: span.endExcludingIndex - span.startIndex
                    };
                    return span.inferredTerm && (wireSpan.Binding = {
                        InferredTerm: clientToWireInferredTermBinding(span.inferredTerm)
                    }), wireSpan;
                }),
                Options: clientToWireInterpretRequestOptions(request),
                LinguisticSchemaJson: request.linguisticSchemaJson,
                InferredTermBinding: clientToWireInferredTermBinding(request.inferredTermBinding),
                Intent: clientToWireIntent(request.intent),
                IsCommitted: request.isCommitted,
                DesiredInterpretationsCount: request.desiredInterpretationsCount,
                GroupId: request.groupId,
                GroupSequenceNumber: request.groupSequenceNumber
            } : {
                Version: "3.3.0",
                Utterance: ""
            };
        }
        function clientToWireIntent(intentContainer) {
            if (null == intentContainer ? void 0 : intentContainer.defineCalculation) return {
                DefineCalculation: {
                    Language: intentContainer.defineCalculation.language,
                    Options: intentContainer.defineCalculation.options
                }
            };
        }
        function clientToWireInterpretRequestOptions(request) {
            return null == (null == request ? void 0 : request.options) ? {} : {
                QueryMetadata: (0, _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_StandaloneUtility3__WEBPACK_IMPORTED_MODULE_1__.yE)(request.options, 2),
                VisualConfiguration: (0, _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_StandaloneUtility3__WEBPACK_IMPORTED_MODULE_1__.yE)(request.options, 4),
                SupportPodQueries: (0, _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_StandaloneUtility3__WEBPACK_IMPORTED_MODULE_1__.yE)(request.options, 8),
                IncludeRelevantSchemaElements: (0, _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_StandaloneUtility3__WEBPACK_IMPORTED_MODULE_1__.yE)(request.options, 32),
                Spans: (0, _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_StandaloneUtility3__WEBPACK_IMPORTED_MODULE_1__.yE)(request.options, 64),
                Diagnostics: (0, _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_StandaloneUtility3__WEBPACK_IMPORTED_MODULE_1__.yE)(request.options, 128),
                FrameTree: !1,
                AllowFollowUpQuestion: !1,
                AllowInsightQueries: (0, _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_StandaloneUtility3__WEBPACK_IMPORTED_MODULE_1__.yE)(request.options, 512),
                InferUnknownModelTerms: (0, _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_StandaloneUtility3__WEBPACK_IMPORTED_MODULE_1__.yE)(request.options, 4096),
                AllowPlaceholderSuggestions: !1,
                SuggestFollowUp: !1,
                SuggestedUtterances: (0, _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_StandaloneUtility3__WEBPACK_IMPORTED_MODULE_1__.yE)(request.options, 2048),
                SkipCompletion: request.skipCompletion,
                SingleAnswerBias: (0, _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_StandaloneUtility3__WEBPACK_IMPORTED_MODULE_1__.yE)(request.options, 8192),
                SuggestedDefineCalculationUtterances: (0, _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_StandaloneUtility3__WEBPACK_IMPORTED_MODULE_1__.yE)(request.options, 16384),
                UseLlmParser: (0, _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_StandaloneUtility3__WEBPACK_IMPORTED_MODULE_1__.yE)(request.options, 65536)
            };
        }
        function clientToWireModelScopes(scopes) {
            return _.map(scopes, function(scope) {
                var _a, _b;
                return {
                    VirtualServerName: null === (_a = scope.model) || void 0 === _a ? void 0 : _a.vsName,
                    DatabaseName: null === (_b = scope.model) || void 0 === _b ? void 0 : _b.dbName,
                    ReportIds: scope.reportIds
                };
            });
        }
        function getQueryUnSupportedLevelWarningsInfo(warnings) {
            if (_.indexOf(warnings, 27) >= 0) return [];
            var specialWarnings = _.intersection(warnings, queryUnSupportedLevelWarnings);
            return _.map(specialWarnings, function(specialWarning) {
                return {
                    warning: specialWarning,
                    messageKey: interpretWarningToUserMessageKeyMappings[specialWarning]
                };
            });
        }
        function getUserWarningMessageKeys(warnings, qnaProxyPath) {
            if (!_.isEmpty(warnings)) {
                _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assert(function() {
                    return !_.isEmpty(qnaProxyPath);
                }, "Must provide a valid qnaProxyPath");
                for (var userMessages = [], hostSpecificWarningToUserMessageMappings = "@powerbi/Qna/qnadesktop.module#QnaDesktopModule" === qnaProxyPath ? hostSpecificInterpretWarningToUserMessageKeyMappings_Desktop : hostSpecificInterpretWarningToUserMessageKeyMappings_Service, _i = 0, warnings_1 = warnings; _i < warnings_1.length; _i++) {
                    var warning = warnings_1[_i];
                    if (hostSpecificWarningToUserMessageMappings) {
                        var hostSpecificUserMessage = hostSpecificWarningToUserMessageMappings[warning];
                        if (hostSpecificUserMessage) {
                            userMessages.push(hostSpecificUserMessage);
                            continue;
                        }
                    }
                    var hostIndependantUserMessage = interpretWarningToUserMessageKeyMappings[warning];
                    hostIndependantUserMessage && userMessages.push(hostIndependantUserMessage);
                }
                return _.uniq(userMessages);
            }
        }
        function getUserErrorMessage(errorCode, localizationService) {
            return localizationService.get(qnaErrorCodeToUserMessageKeyMappings[errorCode] || "Qna_Error_GenericRequestFailure");
        }
        function getClientErrorFromWireV3Response(wireV3Response) {
            var errorLevelDiagnosticCode, errorLevelDiagnosticMessage;
            if (_powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(wireV3Response, "Expect the given wireV3Response to be defined"), 
            "3.3.0" !== wireV3Response.Version) errorLevelDiagnosticCode = "RequiresNewerVersion"; else {
                var firstWireResult = _.first(wireV3Response.Results);
                if (!firstWireResult) return;
                errorLevelDiagnosticCode = null == (errorLevelDiagnosticMessage = _.find(firstWireResult.DiagnosticMessages, function(msg) {
                    return 1 === msg.Severity;
                })) ? void 0 : errorLevelDiagnosticMessage.Code;
            }
            if (null != errorLevelDiagnosticCode) {
                var qnaErrorCode = function(diagnosticCode) {
                    var qnaErrorCode = interpretDiagnosticCodeToQnaErrorCodeMappings[diagnosticCode];
                    return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assert(function() {
                        return null != qnaErrorCode;
                    }, "InterpretDiagnosticCodeToQnaErrorCodeMappings should contain key " + diagnosticCode), 
                    qnaErrorCode || (qnaErrorCode = "NoClientHandling"), qnaErrorCode;
                }(errorLevelDiagnosticCode), qnaError = {
                    errorCode: qnaErrorCode,
                    source: "GenericRequestFailure" === qnaErrorCode ? "PowerBI" : "User",
                    message: null == errorLevelDiagnosticMessage ? void 0 : errorLevelDiagnosticMessage.Message,
                    stackTrace: null == errorLevelDiagnosticMessage ? void 0 : errorLevelDiagnosticMessage.StackTrace
                };
                return "NoClientHandling" === qnaError.errorCode && (qnaError.message = _.isEmpty(qnaError.message) ? errorLevelDiagnosticCode + "." : errorLevelDiagnosticCode + ". " + qnaError.message), 
                qnaError;
            }
        }
        function wireV3InterpretDiagnosticMessageToClientWarnings(diagnosticMessages) {
            if (!_.isEmpty(diagnosticMessages)) {
                for (var warningsResult = [], _loop_1 = function(warning) {
                    _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assert(function() {
                        return null != interpretDiagnosticCodeToInterpretWarningMappings[warning.Code];
                    }, 'unknown mapping to convert InterpretDiagnosticMessage "' + warning.Code + '" to client interpret warning code'), 
                    interpretDiagnosticCodeToInterpretWarningMappings[warning.Code] && warningsResult.push(interpretDiagnosticCodeToInterpretWarningMappings[warning.Code]);
                }, _i = 0, warnings_2 = diagnosticMessages.filter(function(m) {
                    return 2 === m.Severity;
                }); _i < warnings_2.length; _i++) _loop_1(warnings_2[_i]);
                return warningsResult;
            }
        }
        var SpanInternal = function() {
            return function(utterance, wireSpan, isOverlappingSpan) {
                var spanText, spanStartIndex;
                this.utterance = utterance, this.wireSpan = wireSpan, this.isOverlappingSpan = isOverlappingSpan, 
                this.startIndex = wireSpan.StartIndex, this.endExcludingIndex = wireSpan.StartIndex + wireSpan.Length, 
                this.text = utterance.substr(wireSpan.StartIndex, wireSpan.Length), this.correctedStartIndex = wireSpan.CorrectedStartIndex, 
                this.correctedEndExcludingIndex = null != wireSpan.CorrectedStartIndex ? wireSpan.CorrectedStartIndex + wireSpan.CorrectedLength : void 0, 
                this.resolution = wireSpan.Resolution, this.isOverlapping = isOverlappingSpan, this.tokens = (spanText = this.text, 
                spanStartIndex = this.startIndex, _.map(wireSpan.Tokens, function(wireToken) {
                    var tokenStartIndexInSpan = wireToken.StartIndex - spanStartIndex;
                    return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assert(function() {
                        return _.inRange(tokenStartIndexInSpan, 0, _.size(spanText));
                    }, "Expect each token.StartIndex is a valid index with the given spanText and spanStartIndex"), 
                    _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assert(function() {
                        return !_.isEmpty(_.trim(spanText.substr(tokenStartIndexInSpan, wireToken.Length)));
                    }, "Expect no WireToken being pure space"), {
                        startIndex: wireToken.StartIndex,
                        endExcludingIndex: wireToken.StartIndex + wireToken.Length,
                        text: spanText.substr(tokenStartIndexInSpan, wireToken.Length)
                    };
                }));
                var bindingWithCorrected = wireToClientBindingInfo(this.text, wireSpan.Binding);
                this.binding = bindingWithCorrected && bindingWithCorrected.bindingInfo, this.isCorrected = !(!this.binding || !bindingWithCorrected.isCorrected);
                var alternateBindings = wireToClientBindingInfoCollection(this.text, wireSpan.AlternateBindings), phraseCompletions = wireToClientBindingInfoCollection(this.text, wireSpan.PhraseCompletions), phraseExtensions = wireToClientBindingInfoCollection(this.text, wireSpan.PhraseExtensions), suggestedReplacements = wireToClientBindingInfoCollection(this.text, wireSpan.SuggestedReplacements);
                _.isEmpty(alternateBindings) && _.isEmpty(phraseCompletions) && _.isEmpty(phraseExtensions) && _.isEmpty(suggestedReplacements) || (this.replacementBindings = {
                    alternates: alternateBindings,
                    phraseCompletions,
                    phraseExtensions,
                    suggestedReplacements
                }), this.inferredTermBindings = _.map(wireSpan.InferredTermBindings, function(wireContractInferredBinding) {
                    return {
                        inferredBindingType: (wireContract = wireContractInferredBinding.InferredTerm).Type,
                        definitionPrompt: wireContract.DefinitionPrompt,
                        definitionText: wireContract.DefinitionText,
                        prefixText: wireContract.PrefixText,
                        suffixText: wireContract.SuffixText,
                        hintText: wireContract.HintText,
                        alternateDefinitionTexts: wireContract.AlternateDefinitionTexts,
                        linguisticSchemaItems: wireContract.LinguisticSchemaItems,
                        definedTerm: wireContract.DefinedTerm,
                        targetRole: wireContract.TargetRole,
                        metadata: wireContract.Metadata
                    };
                    var wireContract;
                }), this.inferredTermBindingsUnsupported = wireSpan.InferredTermBindingsUnsupported, 
                this.hasBinding = null != this.binding || null != this.replacementBindings || !_.isEmpty(this.inferredTermBindings), 
                this.isWhiteSpace = !_.isEmpty(this.text) && _.isEmpty(_.trim(this.text)), this.isUsed = !this.isOverlapping && (null == this.resolution || 0 === this.resolution || 4 === this.resolution), 
                this.isUnknown = 3 === this.resolution, this.isInferred = 4 === this.resolution, 
                this.overlapSpans = [];
                var definedWithOptions = !this.isOverlapping && !_.isEmpty(this.text) && !isCoreTermAndShouldNotIndicateOptions(this) && !isPhrasingBindingAndShouldNotIndicateOptions(this) && !isSpanUndefinedWithOptions(this) && this.hasBinding && this.isUsed, undefinedWithOptions = isSpanUndefinedWithOptions(this);
                _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assert(function() {
                    return !(definedWithOptions && undefinedWithOptions);
                }, "A span can not be definedWithOptions and undefinedWithOptions at the same time."), 
                this.state = definedWithOptions ? "accepted" : undefinedWithOptions && this.isUsed ? "warning" : undefinedWithOptions ? "error" : "none";
            };
        }();
        function wireToClientCommand(wireCommand) {
            if (wireCommand) {
                var commandSemanticQuery = wireCommand.Query ? _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.deserializeQuery(wireCommand.Query) : void 0;
                return {
                    query: commandSemanticQuery,
                    queryMetadata: wireToClientQueryMetaData(commandSemanticQuery, wireCommand.QueryMetadata),
                    data: wireCommand.Data,
                    binding: wireCommand.Binding,
                    visualConfigurations: _.map(wireCommand.VisualConfigurations, function(visualConfig) {
                        var visualConfigSemanticQuery = visualConfig.Query ? _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.deserializeQuery(visualConfig.Query) : void 0;
                        return {
                            visualizationType: visualConfig.VisualizationType,
                            dataShapeBinding: visualConfig.DataShapeBinding,
                            visualElements: visualConfig.VisualElements,
                            query: visualConfigSemanticQuery,
                            queryMetadata: wireToClientQueryMetaData(commandSemanticQuery, visualConfig.QueryMetadata)
                        };
                    }),
                    suggestedVisualTypes: _.map(wireCommand.SuggestedVisualizations, function(suggestedVisual) {
                        return (0, _powerbi_Insights__WEBPACK_IMPORTED_MODULE_3__.s)(suggestedVisual.VisualizationType).name;
                    }),
                    linguisticSchemaJson: wireCommand.LinguisticSchemaJson,
                    linguisticSchemaItems: wireCommand.LinguisticSchemaItems,
                    inferredTermMetadata: wireCommand.InferredTermMetadata,
                    defineCalculation: wireToClientDefineCalculation(wireCommand.DefineCalculation)
                };
            }
        }
        function wireToClientDefineCalculation(wireDefineCalculation) {
            if (wireDefineCalculation) return {
                expression: wireDefineCalculation.Expression,
                homeTable: wireDefineCalculation.HomeTable,
                format: wireDefineCalculation.Format
            };
        }
        function wireToClientQueryMetaData(query, wireQnaQueryMetadata) {
            if (query && wireQnaQueryMetadata) {
                var wireFilters = _.filter(wireQnaQueryMetadata.Filters, function(f) {
                    return !!f;
                }), wireSelects = _.filter(wireQnaQueryMetadata.Select, function(s) {
                    return !!s;
                });
                return {
                    filters: _.map(wireFilters, function(f) {
                        return {
                            Restatement: f.Restatement,
                            type: void 0
                        };
                    }),
                    selects: _.map(wireSelects, function(s) {
                        return {
                            restatement: s.Restatement,
                            valueType: convertSemanticTypeToValueType(s.DefaultLabel ? s.DefaultLabel.SemanticType : s.SemanticType),
                            isGroup: s.IsGroup,
                            defaultLabel: s.DefaultLabel ? createStandaloneDefaultLabel(s.DefaultLabel.Expression, query) : void 0,
                            isExplicitSortBy: s.IsExplicitSortBy
                        };
                    })
                };
            }
        }
        function isCoreTermAndShouldNotIndicateOptions(span) {
            var _a, _b;
            return 7 === (null === (_a = span.binding) || void 0 === _a ? void 0 : _a.type) && !span.isCorrected && _.isEmpty(null === (_b = span.replacementBindings) || void 0 === _b ? void 0 : _b.suggestedReplacements) && _.isEmpty(span.inferredTermBindings);
        }
        function isPhrasingBindingAndShouldNotIndicateOptions(span) {
            var _a, _b;
            return 8 === (null === (_a = span.binding) || void 0 === _a ? void 0 : _a.type) && !span.isCorrected && 2 === span.resolution && _.isEmpty(null === (_b = span.replacementBindings) || void 0 === _b ? void 0 : _b.suggestedReplacements) && _.isEmpty(span.inferredTermBindings);
        }
        function isSpanUndefinedWithOptions(span) {
            return !(span.isOverlapping || _.isEmpty(span.text) || isCoreTermAndShouldNotIndicateOptions(span) || isPhrasingBindingAndShouldNotIndicateOptions(span) || !span.isCorrected && 3 !== span.resolution && (!span.hasBinding || span.isUsed));
        }
        function wireToClientBindingInfo(spanText, wireBindingContainer) {
            if (wireBindingContainer && !wireBindingContainer.InferredTerm) {
                var wireBinding, bindingType;
                if (wireBindingContainer.Table) wireBinding = wireBindingContainer.Table, bindingType = 0; else if (wireBindingContainer.Pod) wireBinding = wireBindingContainer.Pod, 
                bindingType = 1; else if (wireBindingContainer.Property) wireBinding = wireBindingContainer.Property, 
                bindingType = 2; else if (wireBindingContainer.Value) wireBinding = wireBindingContainer.Value, 
                bindingType = 3; else if (wireBindingContainer.Range) wireBinding = wireBindingContainer.Range, 
                bindingType = 4; else if (wireBindingContainer.VisType) wireBinding = wireBindingContainer.VisType, 
                bindingType = 5; else if (wireBindingContainer.Composite) wireBinding = wireBindingContainer.Composite, 
                bindingType = 6; else if (wireBindingContainer.Core) wireBinding = wireBindingContainer.Core, 
                bindingType = 7; else if (wireBindingContainer.Phrasing) wireBinding = wireBindingContainer.Phrasing, 
                bindingType = 8; else if (wireBindingContainer.TextualEntity) wireBinding = wireBindingContainer.TextualEntity, 
                bindingType = 9; else {
                    if (!wireBindingContainer.AnyEntity) {
                        var unhandledBindingAny_1 = wireBindingContainer;
                        return void _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assert(function() {
                            return !!unhandledBindingAny_1.Literal;
                        }, "Has binding type that is unhandled by client right now. Known unhandled types are: [Literal] and this is not a known type. Check to either update the known unhandled type list, or handle it on the client side.");
                    }
                    wireBinding = wireBindingContainer.AnyEntity, bindingType = 10;
                }
                return {
                    bindingInfo: {
                        type: bindingType,
                        text: wireBinding.Text,
                        textSegmentsWithMatchInfo: generateTextSegmentsWithMatchInfo(spanText, wireBinding.Text, wireBinding.MatchedSegments),
                        matchType: wireBinding.MatchType,
                        score: wireBinding.Score
                    },
                    isCorrected: wireBinding.Corrected
                };
            }
        }
        function generateTextSegmentsWithMatchInfo(spanText, bindingText, matchedSegments) {
            if (_.isEmpty(spanText) || _.isEmpty(matchedSegments)) return [ {
                text: bindingText,
                isMatched: !1
            } ];
            for (var resultSegments = [], currentIndex = 0, _i = 0, matchedSegments_1 = matchedSegments; _i < matchedSegments_1.length; _i++) {
                var segment = matchedSegments_1[_i];
                currentIndex < segment.StartIndex && resultSegments.push({
                    text: bindingText.substring(currentIndex, segment.StartIndex),
                    isMatched: !1
                }), resultSegments.push({
                    text: bindingText.substr(segment.StartIndex, segment.Length),
                    isMatched: !0
                }), currentIndex = segment.StartIndex + segment.Length;
            }
            return currentIndex < _.size(bindingText) && resultSegments.push({
                text: bindingText.substring(currentIndex),
                isMatched: !1
            }), resultSegments;
        }
        function wireToClientBindingInfoCollection(spanText, wireContractBindingContainers) {
            if (wireContractBindingContainers) {
                for (var convertedCollection = [], _i = 0, wireContractBindingContainers_1 = wireContractBindingContainers; _i < wireContractBindingContainers_1.length; _i++) {
                    var bindingInfoWithCorrected = wireToClientBindingInfo(spanText, wireContractBindingContainers_1[_i]);
                    bindingInfoWithCorrected && convertedCollection.push(bindingInfoWithCorrected.bindingInfo);
                }
                return convertedCollection;
            }
        }
        function clientToWireInferredTermBinding(clientContract) {
            return null == clientContract ? void 0 : {
                Type: clientContract.inferredBindingType,
                DefinitionPrompt: clientContract.definitionPrompt,
                DefinitionText: clientContract.definitionText,
                PrefixText: clientContract.prefixText,
                SuffixText: clientContract.suffixText,
                HintText: clientContract.hintText,
                AlternateDefinitionTexts: clientContract.alternateDefinitionTexts,
                LinguisticSchemaItems: clientContract.linguisticSchemaItems,
                DefinedTerm: clientContract.definedTerm,
                TargetRole: clientContract.targetRole,
                Metadata: clientContract.metadata
            };
        }
        function generateUtteranceCorrectionInfo(result) {
            _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(result, "result");
            var wireCorrectedTextSegments, correctedUtterance = result.CorrectedUtterance;
            if (!_.isEmpty(correctedUtterance)) {
                var replacement = result.ReplacementUtterance, state = 2;
                return !!result.Command || (result.ConfidenceLevel <= 5 ? state = 0 : result.ConfidenceLevel <= 20 && (state = 1)), 
                _.isEmpty(result.CorrectedUtteranceTextSegments) ? {
                    correctedUtterance,
                    replacementUtterance: replacement || correctedUtterance,
                    state
                } : {
                    correctedUtterance,
                    correctedTextSegments: (wireCorrectedTextSegments = result.CorrectedUtteranceTextSegments, 
                    _.map(wireCorrectedTextSegments, function(textSegment) {
                        return {
                            startIndex: textSegment.StartIndex,
                            endExcludingIndex: textSegment.StartIndex + textSegment.Length
                        };
                    })),
                    state
                };
            }
        }
        function convertSemanticTypeToValueType(semanticType) {
            switch (semanticType) {
              case 0:
              case 1:
              case 2:
              case 3:
                return;

              case 4:
                return _powerbi_legacy_PowerBIVisuals_VisualsData_types_valueType__WEBPACK_IMPORTED_MODULE_4__.Ge.fromExtendedType(7078913);

              case 5:
                return _powerbi_legacy_PowerBIVisuals_VisualsData_types_valueType__WEBPACK_IMPORTED_MODULE_4__.Ge.fromDescriptor({
                    dateTime: !0
                });

              case 6:
                return _powerbi_legacy_PowerBIVisuals_VisualsData_types_valueType__WEBPACK_IMPORTED_MODULE_4__.Ge.fromDescriptor({
                    numeric: !0
                });
            }
        }
        function createStandaloneDefaultLabel(expression, query) {
            var queryDef = _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.serializeQuery(query);
            queryDef.Select.push(expression);
            var deserializeQuery = _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.deserializeQuery(queryDef);
            return _.last(deserializeQuery.select()).expr;
        }
    }
} ]);