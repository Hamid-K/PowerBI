"use strict";

(self.webpackChunkdesktop = self.webpackChunkdesktop || []).push([ [ "dax-parser-provider" ], {
    48563: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            w: function() {
                return daxParserFunctionDataFromEngine;
            }
        });
        var _powerbi_DaxParser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(17819);
        function daxParserFunctionDataFromEngine(daxFunctions) {
            return daxFunctions.map(function(f) {
                return {
                    name: (daxFunction = f).Name,
                    description: daxFunction.Description,
                    category: daxParserFunctionCategory(daxFunction.Category),
                    pushableToDQ: (value = daxFunction.PushableToDirectQuery, result = 0, 1 === value ? result = 1 : 2 === value ? result = 2 : 3 === value && (result = 3), 
                    result),
                    parameters: (parameters = daxFunction.Parameters, parameters ? parameters.map(function(p) {
                        return new _powerbi_DaxParser__WEBPACK_IMPORTED_MODULE_0__.Hw((parameter = p).Name, parameter.Optional, parameter.Repeatable, parameter.RepeatGroup, parameter.Skippable);
                        var parameter;
                    }) : []),
                    visualCalculationsInfo: daxFunction.VisualCalculationsInfo
                };
                var parameters, value, result, daxFunction;
            });
        }
        function daxParserFunctionCategory(category) {
            switch (category) {
              case 0:
                return 0;

              case 1:
                return 1;

              case 2:
                return 2;

              case 3:
                return 3;

              case 4:
                return 4;

              case 5:
                return 5;

              case 6:
                return 6;

              case 7:
                return 7;

              case 8:
                return 8;

              case 9:
                return 9;
            }
        }
    },
    51389: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, {
            DaxParserProviderModule: function() {
                return DaxParserProviderModule;
            }
        });
        var common = __webpack_require__(77476), DaxParser = __webpack_require__(17819), dax_capabilities_converter_utils = __webpack_require__(48563), daxParserUtils = __webpack_require__(95792), promiseFactory = __webpack_require__(14463), visual_calc_utils = __webpack_require__(73202), lazy_load_route_keys = __webpack_require__(63731), feature_switch_service = __webpack_require__(9380), core = __webpack_require__(50423), VisualCalcDaxParserServiceLazyProvider = {
            provide: lazy_load_route_keys.M,
            useFactory: function(featureSwitchService, promiseFactory) {
                var service = new VisualCalcDaxParserService(featureSwitchService);
                return promiseFactory.resolve(service);
            },
            deps: [ feature_switch_service.vZ, promiseFactory.t ]
        }, VisualCalcDaxParserService = function() {
            function VisualCalcDaxParserService(featureSwitchService) {
                this.featureSwitchService = featureSwitchService, DaxParser.dH.setFeatureSwitches({
                    useSkippableParams: this.featureSwitchService.featureSwitches.visualCalculations
                });
            }
            return VisualCalcDaxParserService.prototype.renameReference = function(daxContext, expression, oldName, newName) {
                return (new DaxParser.w_).renameReferences("column", expression, daxContext, oldName, newName);
            }, VisualCalcDaxParserService.prototype.getContext = function(nativeReferenceNames, reservedWords, daxCapabilities) {
                var seralizedableModel = (0, DaxParser.o4)((0, visual_calc_utils.qN)(nativeReferenceNames)), wireDataSourceInfo = {
                    reservedWords,
                    functionDataFromEngine: (0, dax_capabilities_converter_utils.w)(daxCapabilities.Functions)
                }, dataSourceInformation = (0, DaxParser.yD)(wireDataSourceInfo, (0, visual_calc_utils.m1)());
                return (0, daxParserUtils.BY)(seralizedableModel, dataSourceInformation);
            }, VisualCalcDaxParserService.\u0275fac = function(t) {
                return new (t || VisualCalcDaxParserService)(core["\u0275\u0275inject"](feature_switch_service.vZ));
            }, VisualCalcDaxParserService.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: VisualCalcDaxParserService,
                factory: VisualCalcDaxParserService.\u0275fac
            }), VisualCalcDaxParserService;
        }(), DaxParserProviderModule = function() {
            function DaxParserProviderModule() {}
            return DaxParserProviderModule.\u0275fac = function(t) {
                return new (t || DaxParserProviderModule);
            }, DaxParserProviderModule.\u0275mod = core["\u0275\u0275defineNgModule"]({
                type: DaxParserProviderModule
            }), DaxParserProviderModule.\u0275inj = core["\u0275\u0275defineInjector"]({
                providers: [ VisualCalcDaxParserServiceLazyProvider ],
                imports: [ common.CommonModule ]
            }), DaxParserProviderModule;
        }();
    }
} ]);