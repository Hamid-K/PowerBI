"use strict";

(self.webpackChunkdesktop = self.webpackChunkdesktop || []).push([ [ "personalize-visual" ], {
    54807: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, {
            PersonalizeVisualModule: function() {
                return PersonalizeVisualModule;
            }
        });
        var visual_types_container_modern_module = __webpack_require__(91280), tslib_es6 = __webpack_require__(81337), field_list_to_pbi_tree_converter = __webpack_require__(83839), telemetryHelpers = __webpack_require__(41114), PersonalizeVisualTypePaneInteraction = telemetryHelpers.cx["PBI.PersonalizeVisual.TypePaneInteraction"] = (0, 
        telemetryHelpers.b1)("PBI.PersonalizeVisual.TypePaneInteraction"), PersonalizeVisualFieldPaneInteraction = telemetryHelpers.cx["PBI.PersonalizeVisual.FieldPaneInteraction"] = (0, 
        telemetryHelpers.b1)("PBI.PersonalizeVisual.FieldPaneInteraction"), PersonalizeVisualFieldContextMenuInteraction = telemetryHelpers.cx["PBI.PersonalizeVisual.FieldContextMenuInteraction"] = (0, 
        telemetryHelpers.b1)("PBI.PersonalizeVisual.FieldContextMenuInteraction"), PersonalizeVisualDiscardChanges = (telemetryHelpers.cx["PBI.PersonalizeVisual.ResetVisual"] = (0, 
        telemetryHelpers.b1)("PBI.PersonalizeVisual.ResetVisual"), telemetryHelpers.cx["PBI.PersonalizeVisual.DiscardChanges"] = (0, 
        telemetryHelpers.b1)("PBI.PersonalizeVisual.DiscardChanges")), PersonalizeVisualDragAndDropProperty = telemetryHelpers.cx["PBI.PersonalizeVisual.DragAndDropProperty"] = (0, 
        telemetryHelpers.b1)("PBI.PersonalizeVisual.DragAndDropProperty"), PersonalizeVisualBookmarkTutorial = telemetryHelpers.cx["PBI.PersonalizeVisual.BookmarkTutorial"] = (0, 
        telemetryHelpers.b1)("PBI.PersonalizeVisual.BookmarkTutorial"), EXPersonalizeVisualLoadFieldList = telemetryHelpers.cx["PBI.EX.PersonalizeVisual.LoadFieldList"] = (0, 
        telemetryHelpers.b1)("PBI.EX.PersonalizeVisual.LoadFieldList"), core = __webpack_require__(50423), formatUtil = __webpack_require__(59694), Telemetry = __webpack_require__(21617), pbi_overlay_ref = __webpack_require__(86286), pbi_tree_component = __webpack_require__(37196), from = __webpack_require__(82762), of = __webpack_require__(11547), map = __webpack_require__(14172), mapTo = __webpack_require__(73805), catchError = __webpack_require__(59822), localization_service = __webpack_require__(65181), data_sources_service = __webpack_require__(83008), exploration_navigation_service = __webpack_require__(39503), feature_switch_service = __webpack_require__(9380), field_list_service = __webpack_require__(85564), common = __webpack_require__(77476), localize_directive = __webpack_require__(59968), pbi_field_list_component = __webpack_require__(65005), pbi_search_box_component = __webpack_require__(68070), localize_pipe = __webpack_require__(85102);
        function PersonalizeVisualFieldListComponent_ng_container_3_div_3_ng_container_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "div", 8), 
            core["\u0275\u0275element"](2, "span", 9), core["\u0275\u0275elementStart"](3, "p", 10), 
            core["\u0275\u0275element"](4, "span", 11), core["\u0275\u0275elementStart"](5, "span", 12), 
            core["\u0275\u0275text"](6), core["\u0275\u0275elementEnd"](), core["\u0275\u0275element"](7, "span", 13), 
            core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementContainerEnd"]()), 
            2 & rf) {
                var ctx_r4 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275advance"](6), core["\u0275\u0275textInterpolate"](ctx_r4.perspectiveDisplayName);
            }
        }
        function PersonalizeVisualFieldListComponent_ng_container_3_div_3_ng_template_3_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275element"](0, "span", 14), core["\u0275\u0275elementStart"](1, "p", 10), 
            core["\u0275\u0275element"](2, "span", 11), core["\u0275\u0275elementStart"](3, "span", 12), 
            core["\u0275\u0275text"](4), core["\u0275\u0275elementEnd"]()()), 2 & rf) {
                var ctx_r6 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275advance"](4), core["\u0275\u0275textInterpolate"](ctx_r6.perspectiveDisplayName);
            }
        }
        function PersonalizeVisualFieldListComponent_ng_container_3_div_3_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 6), core["\u0275\u0275template"](1, PersonalizeVisualFieldListComponent_ng_container_3_div_3_ng_container_1_Template, 8, 1, "ng-container", 2), 
            core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275template"](3, PersonalizeVisualFieldListComponent_ng_container_3_div_3_ng_template_3_Template, 5, 1, "ng-template", null, 7, core["\u0275\u0275templateRefExtractor"]), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var _r5 = core["\u0275\u0275reference"](4), ctx_r3 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](2, 2, ctx_r3.hasCubeNameError$))("ngIfElse", _r5);
            }
        }
        function PersonalizeVisualFieldListComponent_ng_container_3_Template(rf, ctx) {
            if (1 & rf) {
                var _r9 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "pbi-field-list", 4), 
                core["\u0275\u0275listener"]("onNodeClick", function($event) {
                    core["\u0275\u0275restoreView"](_r9);
                    var ctx_r8 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r8.onClickFieldListTreeNode($event));
                }), core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275template"](3, PersonalizeVisualFieldListComponent_ng_container_3_div_3_Template, 5, 4, "div", 5), 
                core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementContainerEnd"]();
            }
            if (2 & rf) {
                var ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("fieldListTree", core["\u0275\u0275pipeBind1"](2, 4, ctx_r0.fieldListTree$))("options", ctx_r0.fieldListOptions)("scrollSelectedItemIntoViewOnInit", !0), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", ctx_r0.perspectiveDisplayName && ctx_r0.perspectiveDisplayName !== ctx_r0.defaultPerspective);
            }
        }
        function PersonalizeVisualFieldListComponent_ng_template_4_div_4_ng_container_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "div", 8), 
            core["\u0275\u0275element"](2, "span", 9), core["\u0275\u0275elementStart"](3, "p", 10), 
            core["\u0275\u0275element"](4, "span", 11), core["\u0275\u0275elementStart"](5, "span", 12), 
            core["\u0275\u0275text"](6), core["\u0275\u0275elementEnd"](), core["\u0275\u0275element"](7, "span", 13), 
            core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementContainerEnd"]()), 
            2 & rf) {
                var ctx_r13 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275advance"](6), core["\u0275\u0275textInterpolate"](ctx_r13.perspectiveDisplayName);
            }
        }
        function PersonalizeVisualFieldListComponent_ng_template_4_div_4_ng_template_3_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275element"](0, "span", 14), core["\u0275\u0275elementStart"](1, "p", 10), 
            core["\u0275\u0275element"](2, "span", 11), core["\u0275\u0275elementStart"](3, "span", 12), 
            core["\u0275\u0275text"](4), core["\u0275\u0275elementEnd"]()()), 2 & rf) {
                var ctx_r15 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275advance"](4), core["\u0275\u0275textInterpolate"](ctx_r15.perspectiveDisplayName);
            }
        }
        function PersonalizeVisualFieldListComponent_ng_template_4_div_4_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 6), core["\u0275\u0275template"](1, PersonalizeVisualFieldListComponent_ng_template_4_div_4_ng_container_1_Template, 8, 1, "ng-container", 2), 
            core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275template"](3, PersonalizeVisualFieldListComponent_ng_template_4_div_4_ng_template_3_Template, 5, 1, "ng-template", null, 18, core["\u0275\u0275templateRefExtractor"]), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var _r14 = core["\u0275\u0275reference"](4), ctx_r11 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](2, 2, ctx_r11.hasCubeNameError$))("ngIfElse", _r14);
            }
        }
        function PersonalizeVisualFieldListComponent_ng_template_4_pbi_tree_5_Template(rf, ctx) {
            if (1 & rf) {
                var _r20 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "pbi-tree", 19, 20), core["\u0275\u0275listener"]("onNodeClick", function($event) {
                    core["\u0275\u0275restoreView"](_r20);
                    var ctx_r19 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r19.onClickFieldListTreeNode($event));
                })("onFirstRender", function() {
                    core["\u0275\u0275restoreView"](_r20);
                    var _r18 = core["\u0275\u0275reference"](1);
                    return core["\u0275\u0275resetView"](_r18.scrollToFirstSelectedNode());
                }), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var fieldListTree_r17 = ctx.ngIf;
                core["\u0275\u0275nextContext"]();
                var _r10 = core["\u0275\u0275reference"](2), ctx_r12 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("tree", fieldListTree_r17)("options", ctx_r12.fieldListOptions)("search", _r10.value);
            }
        }
        function PersonalizeVisualFieldListComponent_ng_template_4_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "pbi-search-box")(1, "input", 15, 16), 
            core["\u0275\u0275listener"]("keyup", function() {
                return null;
            }), core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementEnd"]()(), 
            core["\u0275\u0275template"](4, PersonalizeVisualFieldListComponent_ng_template_4_div_4_Template, 5, 4, "div", 5), 
            core["\u0275\u0275template"](5, PersonalizeVisualFieldListComponent_ng_template_4_pbi_tree_5_Template, 2, 3, "pbi-tree", 17), 
            core["\u0275\u0275pipe"](6, "async")), 2 & rf) {
                var ctx_r2 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("placeholder", core["\u0275\u0275pipeBind1"](3, 3, "SearchBox_Text")), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngIf", ctx_r2.perspectiveDisplayName && ctx_r2.perspectiveDisplayName !== ctx_r2.defaultPerspective), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](6, 5, ctx_r2.fieldListTree$));
            }
        }
        var TooltipStrategy = function() {
            function TooltipStrategy(localizationService) {
                this.localizationService = localizationService, this.tooltipCaretSize = "small";
            }
            return TooltipStrategy.prototype.getTooltip = function(_a) {
                var flatNode = _a.flatNode;
                if (flatNode.node.data.entity) {
                    var entityDisplayName = flatNode.node.data.entity.contract.displayName;
                    return (0, formatUtil.W)(this.localizationService.get("Field_Tooltip"), entityDisplayName, flatNode.node.displayName);
                }
                return flatNode.node.displayName;
            }, TooltipStrategy.\u0275fac = function(t) {
                return new (t || TooltipStrategy)(core["\u0275\u0275inject"](localization_service.o));
            }, TooltipStrategy.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: TooltipStrategy,
                factory: TooltipStrategy.\u0275fac
            }), TooltipStrategy;
        }(), PersonalizeVisualFieldListComponent = function() {
            function PersonalizeVisualFieldListComponent(dataSourcesService, explorationNavigationService, featureSwitchService, fieldListData, fieldListService, telemetryService, tooltipStrategy) {
                var _this = this;
                this.dataSourcesService = dataSourcesService, this.explorationNavigationService = explorationNavigationService, 
                this.featureSwitchService = featureSwitchService, this.fieldListData = fieldListData, 
                this.fieldListService = fieldListService, this.telemetryService = telemetryService, 
                this.tooltipStrategy = tooltipStrategy, this.onSelectProperty = new core.EventEmitter, 
                this.fieldListTree$ = (0, from.D)(this.fieldListService.getViewModel(this.getDataSources())).pipe((0, 
                map.U)(function(fieldList) {
                    return fieldList.schema.entities.sort(function(a, b) {
                        return a.displayName.localeCompare(b.displayName);
                    }), _this.convertFieldListToPbiTree(fieldList);
                })), this.CubeNameErrorCode = "CubeNameDoesNotExist", this.hasCubeNameError$ = this.fieldListTree$.pipe((0, 
                mapTo.h)(!1), (0, catchError.K)(function(error) {
                    return (0, of.of)(error.serviceError.errorCode === _this.CubeNameErrorCode);
                })), this.perspectiveDisplayName = this.getPerspectiveRef(), this.defaultPerspective = "", 
                this.fieldListOptions = {
                    tooltip: this.tooltipStrategy
                };
            }
            return PersonalizeVisualFieldListComponent.prototype.onClickFieldListTreeNode = function(flatNode) {
                flatNode.expandable || this.onSelectProperty.emit(flatNode.node.data);
            }, PersonalizeVisualFieldListComponent.prototype.convertFieldListToPbiTree = function(fieldList) {
                var fieldSelectionPredicate, selectedProperty = this.fieldListData.selectedProperty;
                if (selectedProperty) {
                    var hierarchyLevels = selectedProperty.hierarchyLevels, propertyFieldListItems = hierarchyLevels && hierarchyLevels.length ? hierarchyLevels.reduce(function(items, hierarchyLevel) {
                        return (0, tslib_es6.__spreadArray)((0, tslib_es6.__spreadArray)([], items || [], !0), fieldList.schema.findItems(hierarchyLevel.expr) || [], !0);
                    }, []) : selectedProperty.expr ? fieldList.schema.findItems(selectedProperty.expr) : [], uniquePropertyFieldListItems_1 = new Set(propertyFieldListItems);
                    fieldSelectionPredicate = function(field) {
                        return !(field.children && field.children.length) && uniquePropertyFieldListItems_1.has(field);
                    };
                }
                return (0, field_list_to_pbi_tree_converter.hF)(fieldList, {
                    fieldSelectionPredicate,
                    showTooltips: !0
                });
            }, PersonalizeVisualFieldListComponent.prototype.getPerspectiveRef = function() {
                var _a, _b, _c, exploration = this.explorationNavigationService.getCurrentExploration(), activeSection = exploration.sections[exploration.activeSectionIndex];
                return null === (_c = null === (_b = null === (_a = null == activeSection ? void 0 : activeSection.evaluatedObjects) || void 0 === _a ? void 0 : _a.personalizeVisual) || void 0 === _b ? void 0 : _b.perspectiveRef) || void 0 === _c ? void 0 : _c.toString();
            }, PersonalizeVisualFieldListComponent.prototype.getDataSources = function() {
                var dataSources = (0, tslib_es6.__spreadArray)([], this.dataSourcesService.get(), !0), hasPerspective = !1, perspectiveRef = this.getPerspectiveRef();
                if (perspectiveRef && perspectiveRef !== this.defaultPerspective) {
                    var dsrDataSourceIndex = dataSources.findIndex(function(dataSource) {
                        return "dsr" === dataSource.type;
                    }), dsrDataSource = dataSources[dsrDataSourceIndex];
                    if (hasPerspective = !0, dsrDataSource) {
                        var dataSourceWithPerspective = (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, dsrDataSource), {
                            perspectiveId: perspectiveRef
                        });
                        dataSources[dsrDataSourceIndex] = dataSourceWithPerspective;
                    }
                }
                return this.telemetryService.logEvent(EXPersonalizeVisualLoadFieldList, {
                    hasPerspective
                }), dataSources;
            }, PersonalizeVisualFieldListComponent.\u0275fac = function(t) {
                return new (t || PersonalizeVisualFieldListComponent)(core["\u0275\u0275directiveInject"](data_sources_service.D), core["\u0275\u0275directiveInject"](exploration_navigation_service.z), core["\u0275\u0275directiveInject"](feature_switch_service.vZ), core["\u0275\u0275directiveInject"](pbi_overlay_ref.M), core["\u0275\u0275directiveInject"](field_list_service.x), core["\u0275\u0275directiveInject"](Telemetry.y0), core["\u0275\u0275directiveInject"](TooltipStrategy));
            }, PersonalizeVisualFieldListComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: PersonalizeVisualFieldListComponent,
                selectors: [ [ "personalize-visual-field-list" ] ],
                viewQuery: function(rf, ctx) {
                    var _t;
                    1 & rf && core["\u0275\u0275viewQuery"](pbi_tree_component.u, 5), 2 & rf && core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx.fieldListTree = _t.first);
                },
                outputs: {
                    onSelectProperty: "onSelectProperty"
                },
                features: [ core["\u0275\u0275ProvidersFeature"]([ TooltipStrategy ]) ],
                decls: 6,
                vars: 3,
                consts: [ [ 1, "pbi-depth-2", "themeableElement" ], [ 1, "fluentTheme-vlg-semibold" ], [ 4, "ngIf", "ngIfElse" ], [ "originalFieldList", "" ], [ 3, "fieldListTree", "options", "scrollSelectedItemIntoViewOnInit", "onNodeClick" ], [ "class", "pbi-field-list-perspective-header", 4, "ngIf" ], [ 1, "pbi-field-list-perspective-header" ], [ "noCubeNameError", "" ], [ 1, "perspective-error" ], [ "role", "presentation", 1, "glyphicon", "glyph-small", "pbi-glyph-error" ], [ 1, "fluentTheme-sm-reg" ], [ "localize", "PersonalizeVisual_PerspectiveDescription" ], [ 1, "fluentTheme-sm-semiBold" ], [ "localize", "PersonalizeVisual_PerspectiveDescription_Extensions_CubeNameError" ], [ "role", "presentation", 1, "glyphicon", "glyph-small", "pbi-glyph-info" ], [ "pbiSearchInput", "", 1, "pbi-focus-outline", 3, "placeholder", "keyup" ], [ "searchInput", "" ], [ 3, "tree", "options", "search", "onNodeClick", "onFirstRender", 4, "ngIf" ], [ "noCubeNameErrorOriginalFieldList", "" ], [ 3, "tree", "options", "search", "onNodeClick", "onFirstRender" ], [ "pbiTree", "" ] ],
                template: function(rf, ctx) {
                    if (1 & rf && (core["\u0275\u0275elementStart"](0, "section", 0)(1, "header", 1), 
                    core["\u0275\u0275text"](2), core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](3, PersonalizeVisualFieldListComponent_ng_container_3_Template, 4, 6, "ng-container", 2), 
                    core["\u0275\u0275template"](4, PersonalizeVisualFieldListComponent_ng_template_4_Template, 7, 7, "ng-template", null, 3, core["\u0275\u0275templateRefExtractor"]), 
                    core["\u0275\u0275elementEnd"]()), 2 & rf) {
                        var _r1 = core["\u0275\u0275reference"](5);
                        core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", ctx.fieldListData.bucket.displayName, " "), 
                        core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx.featureSwitchService.featureSwitches.personalizeVisualUnifiedFieldList)("ngIfElse", _r1);
                    }
                },
                dependencies: [ common.NgIf, localize_directive.X, pbi_field_list_component.l, pbi_search_box_component.a, pbi_search_box_component.p, pbi_tree_component.u, common.AsyncPipe, localize_pipe.F ],
                styles: [ ".pbi-overlay-caret-large.pbi-overlay-caret[_nghost-%COMP%]:after{background:var(--gray-20, #F3F2F1)}section[_ngcontent-%COMP%]{display:flex;flex-direction:column;height:383px;width:260px;padding:12px 24px 17px;border-radius:2px;background:var(--fluent-theme-neutral-lighter-color, #F3F2F1);box-sizing:border-box}header[_ngcontent-%COMP%]{color:var(--fluent-theme-neutral-dark-alt-color, #333333);margin-bottom:16px}.pbi-field-list-perspective-header[_ngcontent-%COMP%]{display:flex;margin:12px 0 3px}.pbi-field-list-perspective-header[_ngcontent-%COMP%]   .pbi-glyph-error[_ngcontent-%COMP%]{color:var(--fluent-theme-error-dark-color, #A80000)}.pbi-field-list-perspective-header[_ngcontent-%COMP%]   .glyphicon[_ngcontent-%COMP%]{margin:3px 8px 0 0}.pbi-field-list-perspective-header[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin:0;color:var(--gray-160, #323130)}.pbi-field-list-perspective-header[_ngcontent-%COMP%]   .perspective-error[_ngcontent-%COMP%]{background-color:var(--fluent-theme-error-background-color, #FDE7E9);display:flex;padding:8px}pbi-tree[_ngcontent-%COMP%]{margin-top:9px;height:100%;display:block;overflow:hidden}" ],
                changeDetection: 0
            }), PersonalizeVisualFieldListComponent;
        }(), events_personalize_visual = __webpack_require__(93437), field_list_property_expr_generator_util = __webpack_require__(48144), selectionUtils = __webpack_require__(21728), query = __webpack_require__(19008), fieldExprPatternToSQExprConverter = __webpack_require__(80366), fieldExprPatternBuilder = __webpack_require__(76001), pbi_overlay_positions = __webpack_require__(25512), pbi_overlay_service = __webpack_require__(86940), ReplaySubject = __webpack_require__(33554), BehaviorSubject = __webpack_require__(35510), take = __webpack_require__(48787), takeUntil = __webpack_require__(83317), conceptual_schema_proxy_service = __webpack_require__(26898), selection_service = __webpack_require__(72262), grouping_design_state_service = __webpack_require__(23983), lazy_provider = __webpack_require__(57786), lazy_scoped_provider = __webpack_require__(28894), visual_authoring_service = __webpack_require__(66890), pbi_tooltip_directive = __webpack_require__(36858), pbi_menu_converter = __webpack_require__(96883), pbi_menu_directive = __webpack_require__(80357);
        function PersonalizeVisualVisualDataRoleComponent_i_3_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "i"), 2 & rf) {
                var ctx_r1 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275classMapInterpolate1"]("field-glyph glyphicon glyph-mini ng-scope ", ctx_r1.icon, "");
            }
        }
        function PersonalizeVisualVisualDataRoleComponent_button_5_Template(rf, ctx) {
            if (1 & rf) {
                var _r4 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "button", 5), core["\u0275\u0275listener"]("pbiMenuButtonClick", function($event) {
                    core["\u0275\u0275restoreView"](_r4);
                    var ctx_r3 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r3.onMenuItemClicked.emit($event));
                })("pbiMenuOpen", function() {
                    core["\u0275\u0275restoreView"](_r4);
                    var ctx_r5 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r5.onMenuOpen());
                }), core["\u0275\u0275pipe"](1, "localize"), core["\u0275\u0275pipe"](2, "localize"), 
                core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r2 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275attributeInterpolate3"]("aria-labelledby", "", ctx_r2.contextMenuLabel, " ", ctx_r2.bucketLabel, " ", ctx_r2.propertyLabel, ""), 
                core["\u0275\u0275property"]("pbiMenu", ctx_r2.pbiMenuViewModel)("title", core["\u0275\u0275pipeBind1"](2, 8, "FieldListProperty_Context_Menu")), 
                core["\u0275\u0275attribute"]("aria-label", core["\u0275\u0275pipeBind1"](1, 6, "FieldListProperty_Context_Menu"));
            }
        }
        var SupportedOperators = new Set([ 128, 1 ]), SupportedAggregations = new Set([ 4, 2 ]), AllSupportedContextMenuActions = new Set((0, 
        tslib_es6.__spreadArray)((0, tslib_es6.__spreadArray)([], Array.from(SupportedOperators) || [], !0), Array.from(SupportedAggregations) || [], !0)), PersonalizeVisualVisualDataRoleComponent = function() {
            function PersonalizeVisualVisualDataRoleComponent(telemetryService) {
                var _this = this;
                this.telemetryService = telemetryService, this.onOpenFieldMenu = new core.EventEmitter, 
                this.onMenuItemClicked = new core.EventEmitter, this.pbiMenuViewModel = function() {
                    return _this.getContextMenuModel(_this.menuViewModel);
                };
            }
            return PersonalizeVisualVisualDataRoleComponent.prototype.getContextMenuModel = function(existingMenu) {
                var supportedItems = existingMenu.items.filter(function(item) {
                    return !!item.key && AllSupportedContextMenuActions.has(item.key.action);
                }), fieldOperators = supportedItems.filter(function(item) {
                    return SupportedOperators.has(item.key.action);
                }), aggregationOperators = supportedItems.filter(function(item) {
                    return SupportedAggregations.has(item.key.action);
                }), menuItems = (0, tslib_es6.__spreadArray)((0, tslib_es6.__spreadArray)([], fieldOperators || [], !0), aggregationOperators.length ? [ {
                    type: 1
                } ].concat(aggregationOperators) : [] || 0, !0);
                return (0, pbi_menu_converter.m)({
                    items: menuItems
                });
            }, PersonalizeVisualVisualDataRoleComponent.prototype.onMenuOpen = function() {
                this.telemetryService.logChildEvent(this.rootTelemetryEvent, events_personalize_visual.l, {
                    overlayType: "FieldContextMenu"
                });
            }, PersonalizeVisualVisualDataRoleComponent.\u0275fac = function(t) {
                return new (t || PersonalizeVisualVisualDataRoleComponent)(core["\u0275\u0275directiveInject"](Telemetry.y0));
            }, PersonalizeVisualVisualDataRoleComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: PersonalizeVisualVisualDataRoleComponent,
                selectors: [ [ "personalize-visual-visual-data-role" ] ],
                inputs: {
                    rootTelemetryEvent: "rootTelemetryEvent",
                    displayName: "displayName",
                    bucketLabel: "bucketLabel",
                    propertyLabel: "propertyLabel",
                    fieldMenuLabel: "fieldMenuLabel",
                    contextMenuLabel: "contextMenuLabel",
                    tooltip: "tooltip",
                    icon: "icon",
                    showContextMenu: "showContextMenu",
                    interactive: "interactive",
                    menuViewModel: "menuViewModel"
                },
                outputs: {
                    onOpenFieldMenu: "onOpenFieldMenu",
                    onMenuItemClicked: "onMenuItemClicked"
                },
                decls: 6,
                vars: 13,
                consts: [ [ 1, "fluentTheme-md-reg", "field" ], [ "pbiTooltipCaretSize", "small", "aria-haspopup", "listbox", 1, "field-menu", "pbi-focus-outline", 3, "id", "pbiTooltip", "pbiTooltipDisabled", "pbiTooltipShowDelay", "click" ], [ "propertyButton", "" ], [ 3, "class", 4, "ngIf" ], [ "class", "glyphicon glyph-small pbi-glyph-more field-context-menu pbi-focus-outline", "aria-haspopup", "listbox", 3, "pbiMenu", "title", "pbiMenuButtonClick", "pbiMenuOpen", 4, "ngIf" ], [ "aria-haspopup", "listbox", 1, "glyphicon", "glyph-small", "pbi-glyph-more", "field-context-menu", "pbi-focus-outline", 3, "pbiMenu", "title", "pbiMenuButtonClick", "pbiMenuOpen" ] ],
                template: function(rf, ctx) {
                    if (1 & rf) {
                        var _r6 = core["\u0275\u0275getCurrentView"]();
                        core["\u0275\u0275elementStart"](0, "div", 0)(1, "button", 1, 2), core["\u0275\u0275listener"]("click", function() {
                            core["\u0275\u0275restoreView"](_r6);
                            var _r0 = core["\u0275\u0275reference"](2);
                            return core["\u0275\u0275resetView"](ctx.onOpenFieldMenu.emit(_r0));
                        }), core["\u0275\u0275template"](3, PersonalizeVisualVisualDataRoleComponent_i_3_Template, 1, 3, "i", 3), 
                        core["\u0275\u0275text"](4), core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](5, PersonalizeVisualVisualDataRoleComponent_button_5_Template, 3, 10, "button", 4), 
                        core["\u0275\u0275elementEnd"]();
                    }
                    2 & rf && (core["\u0275\u0275advance"](1), core["\u0275\u0275classProp"]("field-menu-noninteractive", !ctx.interactive), 
                    core["\u0275\u0275attributeInterpolate3"]("aria-labelledby", "", ctx.fieldMenuLabel, " ", ctx.bucketLabel, " ", ctx.propertyLabel, ""), 
                    core["\u0275\u0275property"]("id", ctx.propertyLabel)("pbiTooltip", ctx.tooltip)("pbiTooltipDisabled", !ctx.showContextMenu)("pbiTooltipShowDelay", 1500), 
                    core["\u0275\u0275attribute"]("aria-disabled", !ctx.interactive), core["\u0275\u0275advance"](2), 
                    core["\u0275\u0275property"]("ngIf", ctx.icon), core["\u0275\u0275advance"](1), 
                    core["\u0275\u0275textInterpolate1"](" ", ctx.displayName, ""), core["\u0275\u0275advance"](1), 
                    core["\u0275\u0275property"]("ngIf", ctx.showContextMenu));
                },
                dependencies: [ common.NgIf, pbi_menu_directive.l8, pbi_tooltip_directive.V, localize_pipe.F ],
                styles: [ 'personalize-visual-visual-data-role .field{position:relative}personalize-visual-visual-data-role .field .field-menu{background:var(--fluent-theme-white-color, #FFF);border:1px solid var(--gray-110, #8A8886);box-sizing:border-box;border-radius:2px;height:24px;color:var(--fluent-theme-neutral-dark-color, #201F1E);line-height:14px;width:100%;text-overflow:ellipsis;white-space:nowrap;overflow:hidden;margin-top:4px;padding:2px 44px 2px 6px;position:relative;text-align:left;cursor:pointer}personalize-visual-visual-data-role .field .field-menu:after{font-family:PowrMDL2;content:"\\e972";position:absolute;top:5px;right:5px;height:12px;transform:rotate(-90deg);width:12px;font-size:var(--sm-font-size, 12px)}html[dir=rtl] personalize-visual-visual-data-role .field .field-menu{padding-left:44px;padding-right:6px;text-align:right}html[dir=rtl] personalize-visual-visual-data-role .field .field-menu:after{transform:rotate(90deg);left:5px;right:initial}personalize-visual-visual-data-role .field .field-menu-noninteractive{cursor:default}personalize-visual-visual-data-role .field .field-menu-noninteractive:after{display:none}personalize-visual-visual-data-role .field .field-context-menu{position:absolute;height:20px;width:20px;right:21px;top:6px;padding:0;border:0;background-color:var(--fluent-theme-white-color, #FFF)}html[dir=rtl] personalize-visual-visual-data-role .field .field-context-menu{left:21px;right:initial}personalize-visual-visual-data-role .field .drop-target{border-top:2px solid var(--fluent-theme-neutral-primary-color, #323130)}\n' ],
                encapsulation: 2,
                changeDetection: 0
            }), PersonalizeVisualVisualDataRoleComponent;
        }();
        function PersonalizeVisualVisualDataRoleListComponent_ul_3_li_1_button_5_Template(rf, ctx) {
            if (1 & rf) {
                var _r12 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "button", 12, 13), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r12);
                    var bucket_r3 = core["\u0275\u0275nextContext"]().$implicit, _r8 = core["\u0275\u0275reference"](9), ctx_r10 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r10.enableEditMode(bucket_r3, _r8));
                }), core["\u0275\u0275pipe"](2, "localize"), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var iBucket_r4 = core["\u0275\u0275nextContext"]().index;
                core["\u0275\u0275attributeInterpolate1"]("aria-labelledby", "inline-explore-bucket-label-", iBucket_r4, " inline-explore-add-new-field"), 
                core["\u0275\u0275property"]("pbiTooltip", core["\u0275\u0275pipeBind1"](2, 2, "InlineExplore_AddNewField"));
            }
        }
        function PersonalizeVisualVisualDataRoleListComponent_ul_3_li_1_ng_container_6_ng_container_1_ng_container_2_personalize_visual_visual_data_role_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r25 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "personalize-visual-visual-data-role", 19), 
                core["\u0275\u0275listener"]("onOpenFieldMenu", function($event) {
                    var restoredCtx = core["\u0275\u0275restoreView"](_r25), hierarchyLevel_r21 = restoredCtx.$implicit, iHierarchyLevel_r22 = restoredCtx.index, property_r15 = core["\u0275\u0275nextContext"](2).$implicit, bucket_r3 = core["\u0275\u0275nextContext"](2).$implicit, ctx_r23 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r23.openChangeFieldMenu(bucket_r3, $event, property_r15, hierarchyLevel_r21, iHierarchyLevel_r22));
                })("onMenuItemClicked", function($event) {
                    core["\u0275\u0275restoreView"](_r25);
                    var property_r15 = core["\u0275\u0275nextContext"](2).$implicit, bucket_r3 = core["\u0275\u0275nextContext"](2).$implicit, ctx_r27 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r27.handlePbiMenuClick($event, bucket_r3, property_r15));
                }), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var hierarchyLevel_r21 = ctx.$implicit, iHierarchyLevel_r22 = ctx.index, property_r15 = core["\u0275\u0275nextContext"](2).$implicit, iBucket_r4 = core["\u0275\u0275nextContext"](2).index, ctx_r20 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275propertyInterpolate1"]("bucketLabel", "inline-explore-bucket-label-", iBucket_r4, ""), 
                core["\u0275\u0275propertyInterpolate3"]("propertyLabel", "inline-explore-bucket-property-", iBucket_r4, "-", property_r15.startIndex, "-", iHierarchyLevel_r22, ""), 
                core["\u0275\u0275property"]("rootTelemetryEvent", ctx_r20.rootTelemetryEvent)("menuViewModel", property_r15.interactivityOptions.dropDownItems)("displayName", ctx_r20.formatHierarchyLevel(property_r15.displayOptions.displayName, hierarchyLevel_r21.displayName))("tooltip", property_r15.displayOptions.tooltipTitle)("icon", property_r15.displayOptions.glyph)("interactive", property_r15.interactivityOptions.isRemovableField)("showContextMenu", property_r15.interactivityOptions.dropDownItems);
            }
        }
        function PersonalizeVisualVisualDataRoleListComponent_ul_3_li_1_ng_container_6_ng_container_1_ng_container_2_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, PersonalizeVisualVisualDataRoleListComponent_ul_3_li_1_ng_container_6_ng_container_1_ng_container_2_personalize_visual_visual_data_role_1_Template, 1, 11, "personalize-visual-visual-data-role", 18), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var property_r15 = core["\u0275\u0275nextContext"]().$implicit;
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngForOf", property_r15.hierarchyLevels);
            }
        }
        function PersonalizeVisualVisualDataRoleListComponent_ul_3_li_1_ng_container_6_ng_container_1_ng_template_3_Template(rf, ctx) {
            if (1 & rf) {
                var _r35 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "personalize-visual-visual-data-role", 19), 
                core["\u0275\u0275listener"]("onOpenFieldMenu", function($event) {
                    core["\u0275\u0275restoreView"](_r35);
                    var property_r15 = core["\u0275\u0275nextContext"]().$implicit, bucket_r3 = core["\u0275\u0275nextContext"](2).$implicit, ctx_r33 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r33.openChangeFieldMenu(bucket_r3, $event, property_r15));
                })("onMenuItemClicked", function($event) {
                    core["\u0275\u0275restoreView"](_r35);
                    var property_r15 = core["\u0275\u0275nextContext"]().$implicit, bucket_r3 = core["\u0275\u0275nextContext"](2).$implicit, ctx_r37 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r37.handlePbiMenuClick($event, bucket_r3, property_r15));
                }), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var property_r15 = core["\u0275\u0275nextContext"]().$implicit, iBucket_r4 = core["\u0275\u0275nextContext"](2).index, ctx_r19 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275propertyInterpolate1"]("bucketLabel", "inline-explore-bucket-label-", iBucket_r4, ""), 
                core["\u0275\u0275propertyInterpolate2"]("propertyLabel", "inline-explore-bucket-property-", iBucket_r4, "-", property_r15.startIndex, ""), 
                core["\u0275\u0275property"]("rootTelemetryEvent", ctx_r19.rootTelemetryEvent)("menuViewModel", property_r15.interactivityOptions.dropDownItems)("displayName", property_r15.displayOptions.displayName)("tooltip", property_r15.displayOptions.tooltipTitle)("icon", property_r15.displayOptions.glyph)("interactive", property_r15.interactivityOptions.isRemovableField)("showContextMenu", property_r15.interactivityOptions.dropDownItems);
            }
        }
        function PersonalizeVisualVisualDataRoleListComponent_ul_3_li_1_ng_container_6_ng_container_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r43 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "div", 15), 
                core["\u0275\u0275listener"]("drop", function($event) {
                    var iProperty_r16 = core["\u0275\u0275restoreView"](_r43).index, iBucket_r4 = core["\u0275\u0275nextContext"](2).index, ctx_r42 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r42.handleDrop($event, iProperty_r16, iBucket_r4));
                })("dragend", function($event) {
                    core["\u0275\u0275restoreView"](_r43);
                    var ctx_r45 = core["\u0275\u0275nextContext"](4);
                    return core["\u0275\u0275resetView"](ctx_r45.handleDragEnd($event));
                })("dragleave", function($event) {
                    core["\u0275\u0275restoreView"](_r43);
                    var ctx_r46 = core["\u0275\u0275nextContext"](4);
                    return core["\u0275\u0275resetView"](ctx_r46.handleDragLeave($event));
                })("dragstart", function() {
                    var iProperty_r16 = core["\u0275\u0275restoreView"](_r43).index, iBucket_r4 = core["\u0275\u0275nextContext"](2).index, ctx_r47 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r47.handleDragStart(iProperty_r16, iBucket_r4));
                })("dragover", function($event) {
                    var iProperty_r16 = core["\u0275\u0275restoreView"](_r43).index, iBucket_r4 = core["\u0275\u0275nextContext"](2).index, ctx_r49 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r49.handleDragOver($event, iProperty_r16, iBucket_r4));
                }), core["\u0275\u0275template"](2, PersonalizeVisualVisualDataRoleListComponent_ul_3_li_1_ng_container_6_ng_container_1_ng_container_2_Template, 2, 1, "ng-container", 16), 
                core["\u0275\u0275template"](3, PersonalizeVisualVisualDataRoleListComponent_ul_3_li_1_ng_container_6_ng_container_1_ng_template_3_Template, 1, 10, "ng-template", null, 17, core["\u0275\u0275templateRefExtractor"]), 
                core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementContainerEnd"]();
            }
            if (2 & rf) {
                var property_r15 = ctx.$implicit, _r18 = core["\u0275\u0275reference"](4);
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", null == property_r15 || null == property_r15.hierarchyLevels ? null : property_r15.hierarchyLevels.length)("ngIfElse", _r18);
            }
        }
        function PersonalizeVisualVisualDataRoleListComponent_ul_3_li_1_ng_container_6_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, PersonalizeVisualVisualDataRoleListComponent_ul_3_li_1_ng_container_6_ng_container_1_Template, 5, 2, "ng-container", 14), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var bucket_r3 = core["\u0275\u0275nextContext"]().$implicit;
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngForOf", bucket_r3.properties);
            }
        }
        function PersonalizeVisualVisualDataRoleListComponent_ul_3_li_1_button_7_Template(rf, ctx) {
            if (1 & rf) {
                var _r55 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "button", 20, 21), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r55);
                    var _r52 = core["\u0275\u0275reference"](1), bucket_r3 = core["\u0275\u0275nextContext"]().$implicit, ctx_r53 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r53.openNewFieldMenu(bucket_r3, _r52));
                })("drop", function($event) {
                    core["\u0275\u0275restoreView"](_r55);
                    var iBucket_r4 = core["\u0275\u0275nextContext"]().index, ctx_r56 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r56.handleDrop($event, 0, iBucket_r4));
                })("dragleave", function($event) {
                    core["\u0275\u0275restoreView"](_r55);
                    var ctx_r58 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r58.handleDragLeave($event));
                })("dragover", function($event) {
                    core["\u0275\u0275restoreView"](_r55);
                    var ctx_r59 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r59.handleDragOver($event, -1, -1));
                }), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var iBucket_r4 = core["\u0275\u0275nextContext"]().index;
                core["\u0275\u0275attributeInterpolate1"]("aria-labelledby", "inline-explore-bucket-label-", iBucket_r4, " inline-explore-add-new-field");
            }
        }
        function PersonalizeVisualVisualDataRoleListComponent_ul_3_li_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "li", 5)(1, "fieldset")(2, "div", 6)(3, "legend", 7), 
            core["\u0275\u0275text"](4), core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](5, PersonalizeVisualVisualDataRoleListComponent_ul_3_li_1_button_5_Template, 3, 4, "button", 8), 
            core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](6, PersonalizeVisualVisualDataRoleListComponent_ul_3_li_1_ng_container_6_Template, 2, 1, "ng-container", 3), 
            core["\u0275\u0275template"](7, PersonalizeVisualVisualDataRoleListComponent_ul_3_li_1_button_7_Template, 2, 1, "button", 9), 
            core["\u0275\u0275element"](8, "button", 10, 11), core["\u0275\u0275pipe"](10, "async"), 
            core["\u0275\u0275elementEnd"]()()), 2 & rf) {
                var bucket_r3 = ctx.$implicit, iBucket_r4 = ctx.index, ctx_r2 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](3), core["\u0275\u0275propertyInterpolate1"]("id", "inline-explore-bucket-label-", iBucket_r4, ""), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate1"](" ", bucket_r3.displayName, " "), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", bucket_r3.supportsMultipleItems && (null == bucket_r3.properties ? null : bucket_r3.properties.length)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", null == bucket_r3.properties ? null : bucket_r3.properties.length), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !(null != bucket_r3.properties && bucket_r3.properties.length)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275attributeInterpolate1"]("aria-labelledby", "inline-explore-bucket-label-", iBucket_r4, " inline-explore-add-new-field"), 
                core["\u0275\u0275property"]("hidden", core["\u0275\u0275pipeBind1"](10, 7, ctx_r2.editableBucket$) !== bucket_r3);
            }
        }
        function PersonalizeVisualVisualDataRoleListComponent_ul_3_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "ul"), core["\u0275\u0275template"](1, PersonalizeVisualVisualDataRoleListComponent_ul_3_li_1_Template, 11, 9, "li", 4), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var buckets_r1 = ctx.ngIf;
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngForOf", buckets_r1);
            }
        }
        var PersonalizeVisualVisualDataRoleListComponent = function() {
            function PersonalizeVisualVisualDataRoleListComponent(elementRef, conceptualSchemaProxy, dataSources, groupingDesignStateService, injector, lazyProvider, lazyScoped, localizationService, overlay, overlayRef, renderer, selection, telemetryService, visualAuthoring) {
                this.elementRef = elementRef, this.conceptualSchemaProxy = conceptualSchemaProxy, 
                this.dataSources = dataSources, this.groupingDesignStateService = groupingDesignStateService, 
                this.injector = injector, this.lazyProvider = lazyProvider, this.lazyScoped = lazyScoped, 
                this.localizationService = localizationService, this.overlay = overlay, this.overlayRef = overlayRef, 
                this.renderer = renderer, this.selection = selection, this.telemetryService = telemetryService, 
                this.visualAuthoring = visualAuthoring, this.onLoad = new core.EventEmitter, this.buckets$ = new ReplaySubject.t(1), 
                this.editableBucket$ = new BehaviorSubject.X(null), this.includeVariationSourceDisplayName = this.localizationService.get("IncludeVariationSourceDisplayName"), 
                this.dropTargetClass = "drop-target";
            }
            return PersonalizeVisualVisualDataRoleListComponent.prototype.ngOnInit = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var _a, onViewModelChange, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return _a = this, [ 4, this.lazyScoped.get("fieldWellModernService") ];

                          case 1:
                            return _a.fieldWellModernService = _b.sent(), onViewModelChange = function(viewModel) {
                                return _this.buckets$.next(viewModel.buckets);
                            }, this.core = this.fieldWellModernService.createFieldWellCore($(this.elementRef.nativeElement), !0, onViewModelChange), 
                            [ 4, this.core.onInit() ];

                          case 2:
                            return _b.sent(), this.onLoad.emit(), [ 2 ];
                        }
                    });
                });
            }, PersonalizeVisualVisualDataRoleListComponent.prototype.enableEditMode = function(bucket, overlayOrigin) {
                this.editableBucket$.next(bucket), this.openNewFieldMenu(bucket, overlayOrigin);
            }, PersonalizeVisualVisualDataRoleListComponent.prototype.openChangeFieldMenu = function(bucket, overlayOrigin, selectedProperty, selectedHierarchyLevel, hierarchyLevelIndexOffset) {
                selectedProperty.interactivityOptions.isRemovableField && this.openFieldListOverlay({
                    bucket,
                    selectedProperty: selectedHierarchyLevel || selectedProperty
                }, overlayOrigin, selectedProperty, selectedHierarchyLevel, hierarchyLevelIndexOffset);
            }, PersonalizeVisualVisualDataRoleListComponent.prototype.openNewFieldMenu = function(bucket, overlayOrigin) {
                this.openFieldListOverlay({
                    bucket
                }, overlayOrigin);
            }, PersonalizeVisualVisualDataRoleListComponent.prototype.formatHierarchyLevel = function(hierarchyDisplayName, hierarchyLevelDisplayName) {
                return (0, formatUtil.W)(this.includeVariationSourceDisplayName, hierarchyDisplayName, hierarchyLevelDisplayName);
            }, PersonalizeVisualVisualDataRoleListComponent.prototype.openFieldListOverlay = function(data, overlayOrigin, fieldWellProperty, fieldWellHierarchyLevel, hierarchyLevelIndexOffset) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var overlayOpenEvent, positionStrategy, componentFactoryResolver, overlayRef, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return overlayOpenEvent = this.telemetryService.startChildEvent(this.rootTelemetryEvent, events_personalize_visual.l, {
                                overlayType: "FieldSelection"
                            }), positionStrategy = this.overlay.position().flexibleConnectedTo(overlayOrigin).withPositions([ (0, 
                            pbi_overlay_positions.v3)(4, 0), (0, pbi_overlay_positions.xe)(0, -4), (0, pbi_overlay_positions.Zc)(0, 4), (0, 
                            pbi_overlay_positions.q6)(-4, 0) ]).withFlexibleDimensions(!0).withPush(!0).withGrowAfterOpen(!0), 
                            [ 4, this.lazyProvider.getModule("./lazy-modules/personalize-visual/personalize-visual.module#PersonalizeVisualModule") ];

                          case 1:
                            return componentFactoryResolver = _a.sent().componentFactoryResolver, (overlayRef = this.overlay.open({
                                component: PersonalizeVisualFieldListComponent,
                                data,
                                options: {
                                    positionStrategy,
                                    hasBackdrop: !0,
                                    backdropClass: pbi_overlay_service.L
                                },
                                closeOnBackdropClick: !0,
                                hasCaret: !0,
                                parent: this.overlayRef,
                                closeWithParent: !0,
                                injector: this.injector,
                                componentFactoryResolver
                            })).onClose.pipe((0, take.q)(1)).subscribe(function() {
                                _this.editableBucket$.next(null), overlayOpenEvent.resolve();
                            }), overlayRef.componentRef.instance.onSelectProperty.pipe((0, takeUntil.R)(overlayRef.onClose)).subscribe(function(property) {
                                return _this.onSelectProperty(property, data.bucket.role, overlayRef, fieldWellProperty, fieldWellHierarchyLevel, hierarchyLevelIndexOffset);
                            }), [ 2 ];
                        }
                    });
                });
            }, PersonalizeVisualVisualDataRoleListComponent.prototype.onSelectProperty = function(selectedProperty, role, overlayRef, currentFieldWellProperty, currentFieldWellHierarchyLevel, hierarchyLevelIndexOffset) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var selectedVisual, dataSources, isReplacementOperation, fieldRemovalResult, schema, fieldListExprGenerator, expr, fieldAdditionResult;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return (selectedVisual = selectionUtils.UP.getSelectedVisual(this.selection)) ? (dataSources = this.dataSources.get(), 
                            fieldRemovalResult = !0, (isReplacementOperation = !!currentFieldWellProperty) ? [ 4, this.conceptualSchemaProxy.get(dataSources) ] : [ 3, 3 ]) : [ 2 ];

                          case 1:
                            return schema = _a.sent(), [ 4, this.visualAuthoring.removeFieldFromRole({
                                role,
                                projOptions: {
                                    fieldIndex: currentFieldWellProperty.startIndex + (hierarchyLevelIndexOffset || 0)
                                },
                                count: currentFieldWellHierarchyLevel ? 1 : currentFieldWellProperty.hierarchyLevels && currentFieldWellProperty.hierarchyLevels.length || 1
                            }, schema) ];

                          case 2:
                            fieldRemovalResult = _a.sent(), _a.label = 3;

                          case 3:
                            return fieldListExprGenerator = (0, field_list_property_expr_generator_util.y)((0, 
                            field_list_property_expr_generator_util.R)(selectedProperty.fieldType), this.groupingDesignStateService), 
                            expr = fieldListExprGenerator.fieldExpr(selectedProperty), [ 4, this.visualAuthoring.addFieldInRole(expr, role, dataSources, selectedVisual, currentFieldWellProperty && currentFieldWellProperty.startIndex + (hierarchyLevelIndexOffset || 0), void 0, !0) ];

                          case 4:
                            return fieldAdditionResult = _a.sent(), this.telemetryService.logChildEvent(this.rootTelemetryEvent, PersonalizeVisualFieldPaneInteraction, {
                                interactionType: isReplacementOperation ? "Replace" : "Add",
                                success: fieldRemovalResult && fieldAdditionResult
                            }), overlayRef.close(), [ 2 ];
                        }
                    });
                });
            }, PersonalizeVisualVisualDataRoleListComponent.prototype.handlePbiMenuClick = function(menuItem, bucket, property) {
                var container = selectionUtils.UP.getSelectedVisual(this.selection);
                this.handleContextMenuClick(menuItem.data, bucket, property, this.dataSources, this.conceptualSchemaProxy, container);
            }, PersonalizeVisualVisualDataRoleListComponent.prototype.handleContextMenuClick = function(menuAction, bucket, property, dataSourceService, schemaProxy, container) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var visualType, dataSources, schema;
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            switch (visualType = container.config.singleVisual.visualType, dataSources = dataSourceService.get(), 
                            menuAction.action) {
                              case 1:
                                return [ 3, 1 ];

                              case 2:
                                return [ 3, 3 ];

                              case 4:
                                return [ 3, 5 ];

                              case 128:
                                return [ 3, 7 ];
                            }
                            return [ 3, 9 ];

                          case 1:
                            return [ 4, schemaProxy.get(dataSources) ];

                          case 2:
                            return schema = _b.sent(), this.removeField(bucket.role, property.startIndex, schema, visualType), 
                            [ 3, 10 ];

                          case 3:
                            return [ 4, this.removeAggregate(bucket.role, property.startIndex, container, dataSources, visualType) ];

                          case 4:
                          case 6:
                          case 8:
                            return _b.sent(), [ 3, 10 ];

                          case 5:
                            return [ 4, this.setAggregate(bucket.role, property.startIndex, (0, fieldExprPatternToSQExprConverter._L)((0, 
                            fieldExprPatternBuilder.Q)(property.expr)), menuAction.aggregate, container, dataSources, visualType) ];

                          case 7:
                            return [ 4, this.setVariation(bucket.role, property.startIndex, menuAction.variationExpr, container, dataSources, visualType) ];

                          case 9:
                            return [ 3, 10 ];

                          case 10:
                            return [ 2 ];
                        }
                    });
                });
            }, PersonalizeVisualVisualDataRoleListComponent.prototype.removeField = function(role, index, schema, visualType) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var result;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.visualAuthoring.removeFieldFromRole({
                                role,
                                projOptions: {
                                    fieldIndex: index
                                }
                            }, schema) ];

                          case 1:
                            return result = _a.sent(), this.telemetryService.logChildEvent(this.rootTelemetryEvent, PersonalizeVisualFieldContextMenuInteraction, {
                                interactionType: "RemoveField",
                                visualType,
                                role,
                                success: result
                            }), [ 2 ];
                        }
                    });
                });
            }, PersonalizeVisualVisualDataRoleListComponent.prototype.removeAggregate = function(role, index, container, dataSources, visualType) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var result;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.visualAuthoring.removeAggregate(role, index, container, dataSources) ];

                          case 1:
                            return result = _a.sent(), this.telemetryService.logChildEvent(this.rootTelemetryEvent, PersonalizeVisualFieldContextMenuInteraction, {
                                interactionType: "RemoveAggregate",
                                visualType,
                                role,
                                success: result
                            }), [ 2 ];
                        }
                    });
                });
            }, PersonalizeVisualVisualDataRoleListComponent.prototype.setAggregate = function(role, index, oldAggregate, newAggregate, container, dataSources, visualType) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var result;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.visualAuthoring.setAggregate(role, index, newAggregate, container, dataSources) ];

                          case 1:
                            return result = _a.sent(), this.telemetryService.logChildEvent(this.rootTelemetryEvent, PersonalizeVisualFieldContextMenuInteraction, {
                                interactionType: "SetAggregate",
                                visualType,
                                role,
                                oldValue: (0, query.b)(oldAggregate),
                                newValue: (0, query.b)(newAggregate),
                                success: result
                            }), [ 2 ];
                        }
                    });
                });
            }, PersonalizeVisualVisualDataRoleListComponent.prototype.setVariation = function(role, index, variationExpr, container, dataSources, visualType) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var result;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.visualAuthoring.setVariation(dataSources, container, variationExpr, role, index) ];

                          case 1:
                            return result = _a.sent(), this.telemetryService.logChildEvent(this.rootTelemetryEvent, PersonalizeVisualFieldContextMenuInteraction, {
                                interactionType: "SetVariation",
                                visualType,
                                role,
                                success: result
                            }), [ 2 ];
                        }
                    });
                });
            }, PersonalizeVisualVisualDataRoleListComponent.prototype.handleDrop = function(event, targetPropertyIndex, targetBucketIndex) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var buckets, dataSources, didMove;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return this.dragDropPayload ? (buckets = this.core.viewModel.buckets, dataSources = this.dataSources.get(), 
                            targetBucketIndex === this.dragDropPayload.sourceBucketIndex && targetPropertyIndex === this.dragDropPayload.sourcePropertyIndex ? [ 3, 2 ] : ((targetBucketIndex === this.dragDropPayload.sourceBucketIndex ? targetPropertyIndex > this.dragDropPayload.sourcePropertyIndex : targetBucketIndex > this.dragDropPayload.sourceBucketIndex) && (targetPropertyIndex = 0 === targetPropertyIndex ? 0 : targetPropertyIndex - 1), 
                            [ 4, this.visualAuthoring.moveField(buckets[this.dragDropPayload.sourceBucketIndex].role, buckets[targetBucketIndex].role, this.dragDropPayload.sourcePropertyIndex, targetPropertyIndex, 1, dataSources, !1) ])) : [ 3, 3 ];

                          case 1:
                            didMove = _a.sent(), this.telemetryService.logChildEvent(this.rootTelemetryEvent, PersonalizeVisualDragAndDropProperty, {
                                success: didMove,
                                sourceBucketIndex: this.dragDropPayload.sourceBucketIndex,
                                targetBucketIndex,
                                sourcePropertyIndex: this.dragDropPayload.sourcePropertyIndex,
                                targetPropertyIndex
                            }), _a.label = 2;

                          case 2:
                            event.preventDefault(), this.renderer.removeClass(event.target, this.dropTargetClass), 
                            _a.label = 3;

                          case 3:
                            return [ 2 ];
                        }
                    });
                });
            }, PersonalizeVisualVisualDataRoleListComponent.prototype.handleDragOver = function(event, targetPropertyIndex, targetBucketIndex) {
                !this.dragDropPayload || this.dragDropPayload.sourcePropertyIndex === targetPropertyIndex && targetBucketIndex === this.dragDropPayload.sourceBucketIndex || (this.renderer.addClass(event.target, this.dropTargetClass), 
                event.preventDefault());
            }, PersonalizeVisualVisualDataRoleListComponent.prototype.handleDragStart = function(sourcePropertyIndex, sourceBucketIndex) {
                this.dragDropPayload = {
                    sourcePropertyIndex,
                    sourceBucketIndex
                };
            }, PersonalizeVisualVisualDataRoleListComponent.prototype.handleDragLeave = function(event) {
                this.dragDropPayload && (this.renderer.removeClass(event.target, this.dropTargetClass), 
                event.preventDefault());
            }, PersonalizeVisualVisualDataRoleListComponent.prototype.handleDragEnd = function(event) {
                this.dragDropPayload = void 0, this.renderer.removeClass(event.target, this.dropTargetClass);
            }, PersonalizeVisualVisualDataRoleListComponent.\u0275fac = function(t) {
                return new (t || PersonalizeVisualVisualDataRoleListComponent)(core["\u0275\u0275directiveInject"](core.ElementRef), core["\u0275\u0275directiveInject"](conceptual_schema_proxy_service.i), core["\u0275\u0275directiveInject"](data_sources_service.D), core["\u0275\u0275directiveInject"](grouping_design_state_service.AA), core["\u0275\u0275directiveInject"](core.Injector), core["\u0275\u0275directiveInject"](lazy_provider.E), core["\u0275\u0275directiveInject"](lazy_scoped_provider.H), core["\u0275\u0275directiveInject"](localization_service.o), core["\u0275\u0275directiveInject"](pbi_overlay_service._), core["\u0275\u0275directiveInject"](pbi_overlay_ref.w), core["\u0275\u0275directiveInject"](core.Renderer2), core["\u0275\u0275directiveInject"](selection_service.z), core["\u0275\u0275directiveInject"](Telemetry.y0), core["\u0275\u0275directiveInject"](visual_authoring_service.$8));
            }, PersonalizeVisualVisualDataRoleListComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: PersonalizeVisualVisualDataRoleListComponent,
                selectors: [ [ "personalize-visual-visual-data-role-list" ] ],
                inputs: {
                    rootTelemetryEvent: "rootTelemetryEvent"
                },
                outputs: {
                    onLoad: "onLoad"
                },
                decls: 5,
                vars: 3,
                consts: [ [ "id", "inline-explore-property-label", "role", "none", "localize", "InlineExplore_ChangeField", 1, "cdk-visually-hidden" ], [ "id", "inline-explore-context-menu-label", "role", "none", "localize", "PersonalizeVisual_FieldContextMenuLabel", 1, "cdk-visually-hidden" ], [ "id", "inline-explore-add-new-field", "role", "none", "localize", "InlineExplore_AddNewField", 1, "cdk-visually-hidden" ], [ 4, "ngIf" ], [ "class", "bucket", 4, "ngFor", "ngForOf" ], [ 1, "bucket" ], [ 1, "header" ], [ 1, "fluentTheme-md-reg", 3, "id" ], [ "pbiTooltipCaretSize", "small", "class", "glyphicon pbi-glyph-add add-property pbi-focus-outline", 3, "pbiTooltip", "click", 4, "ngIf" ], [ "class", "fluentTheme-md-reg pill add-new-field pbi-focus-outline", "aria-haspopup", "listbox", "localize", "InlineExplore_AddNewField", 3, "click", "drop", "dragleave", "dragover", 4, "ngIf" ], [ "disabled", "", "aria-haspopup", "listbox", "localize", "InlineExplore_AddNewField", 1, "fluentTheme-md-reg", "pill", "add-new-field", 3, "hidden" ], [ "addNewFieldButtonPlaceholder", "" ], [ "pbiTooltipCaretSize", "small", 1, "glyphicon", "pbi-glyph-add", "add-property", "pbi-focus-outline", 3, "pbiTooltip", "click" ], [ "addNewPropertyButton", "" ], [ 4, "ngFor", "ngForOf" ], [ "draggable", "true", 1, "projection", 3, "drop", "dragend", "dragleave", "dragstart", "dragover" ], [ 4, "ngIf", "ngIfElse" ], [ "notHierarchyLevel", "" ], [ "fieldMenuLabel", "inline-explore-property-label", "contextMenuLabel", "inline-explore-context-menu-label", 3, "bucketLabel", "propertyLabel", "rootTelemetryEvent", "menuViewModel", "displayName", "tooltip", "icon", "interactive", "showContextMenu", "onOpenFieldMenu", "onMenuItemClicked", 4, "ngFor", "ngForOf" ], [ "fieldMenuLabel", "inline-explore-property-label", "contextMenuLabel", "inline-explore-context-menu-label", 3, "bucketLabel", "propertyLabel", "rootTelemetryEvent", "menuViewModel", "displayName", "tooltip", "icon", "interactive", "showContextMenu", "onOpenFieldMenu", "onMenuItemClicked" ], [ "aria-haspopup", "listbox", "localize", "InlineExplore_AddNewField", 1, "fluentTheme-md-reg", "pill", "add-new-field", "pbi-focus-outline", 3, "click", "drop", "dragleave", "dragover" ], [ "addNewFieldButton", "" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275element"](0, "p", 0)(1, "p", 1)(2, "p", 2), core["\u0275\u0275template"](3, PersonalizeVisualVisualDataRoleListComponent_ul_3_Template, 2, 1, "ul", 3), 
                    core["\u0275\u0275pipe"](4, "async")), 2 & rf && (core["\u0275\u0275advance"](3), 
                    core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](4, 1, ctx.buckets$)));
                },
                dependencies: [ common.NgForOf, common.NgIf, localize_directive.X, pbi_tooltip_directive.V, PersonalizeVisualVisualDataRoleComponent, common.AsyncPipe, localize_pipe.F ],
                styles: [ "ul[_ngcontent-%COMP%]{list-style:none;padding:0}fieldset[_ngcontent-%COMP%]{min-width:100%;padding:0;margin:0;border:0}.bucket[_ngcontent-%COMP%]:not(:last-child){margin-bottom:20px}.bucket[_ngcontent-%COMP%]   legend[_ngcontent-%COMP%]{color:var(--fluent-theme-neutral-primary-color, #323130)}.bucket[_ngcontent-%COMP%]   button.pill[_ngcontent-%COMP%]{background:var(--fluent-theme-white-color, #FFF);border:1px solid var(--gray-110, #8A8886);box-sizing:border-box;border-radius:2px;height:24px;color:var(--fluent-theme-neutral-dark-color, #201F1E);line-height:14px;width:100%;text-overflow:ellipsis;white-space:nowrap;overflow:hidden;padding:2px;margin-top:4px}.bucket[_ngcontent-%COMP%]   button.add-new-field[_ngcontent-%COMP%]{text-align:center}.bucket[_ngcontent-%COMP%]   button.drop-target[_ngcontent-%COMP%]{border:2px solid var(--fluent-theme-neutral-primary-color, #323130)}.bucket[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]{display:flex;justify-content:space-between}.bucket[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .add-property[_ngcontent-%COMP%]{font-size:12px;background:none;border:none;padding:0;color:var(--gray-190, #201F1E);margin-right:6px}" ],
                changeDetection: 0
            }), PersonalizeVisualVisualDataRoleListComponent;
        }(), visual_types_container_modern_component = __webpack_require__(89961), PersonalizeVisualVisualTypesComponent = function() {
            function PersonalizeVisualVisualTypesComponent() {}
            return PersonalizeVisualVisualTypesComponent.\u0275fac = function(t) {
                return new (t || PersonalizeVisualVisualTypesComponent);
            }, PersonalizeVisualVisualTypesComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: PersonalizeVisualVisualTypesComponent,
                selectors: [ [ "ng-component" ] ],
                decls: 1,
                vars: 2,
                consts: [ [ "role", "listbox", 1, "compact-container", 3, "disableMoreOptionsIcon", "disableContextMenu" ] ],
                template: function(rf, ctx) {
                    1 & rf && core["\u0275\u0275element"](0, "visual-types-container-modern", 0), 2 & rf && core["\u0275\u0275property"]("disableMoreOptionsIcon", !0)("disableContextMenu", !0);
                },
                dependencies: [ visual_types_container_modern_component.r ],
                styles: [ ".pbi-overlay-caret-large.pbi-overlay-caret[_nghost-%COMP%]:after{background:var(--gray-20, #F3F2F1)}[_nghost-%COMP%]{width:168px;min-height:144px;background:var(--gray-20, #F3F2F1);border-radius:2px;box-shadow:0 0 2px var(--colorNeutralShadowAmbient),0 4px 8px var(--colorNeutralShadowKey);padding:12px}" ]
            }), PersonalizeVisualVisualTypesComponent;
        }(), router = __webpack_require__(9398), events = __webpack_require__(8590), viewModelFactoryEx = __webpack_require__(20590), filter = __webpack_require__(59973), tap = __webpack_require__(17653), startWith = __webpack_require__(22318), distinctUntilChanged = __webpack_require__(77526), scan = __webpack_require__(18353), switchMap = __webpack_require__(81905), event_bridge_service = __webpack_require__(11494), PersonalizeVisualBookmarkTutorialService = function() {
            function PersonalizeVisualBookmarkTutorialService(localizationService) {
                this.localizationService = localizationService, this.BookmarkTutorialModelKey = "BookmarkTutorial";
            }
            return PersonalizeVisualBookmarkTutorialService.prototype.createBookmarkTutorialModel = function() {
                return {
                    itemKeys: [ this.BookmarkTutorialModelKey ],
                    items: {
                        BookmarkTutorial: {
                            title: this.localizationService.get("TutorialPopup_BookmarkTitle"),
                            text: this.localizationService.get("TutorialPopup_BookmarkContent"),
                            buttonLabel: this.localizationService.get("TutorialPopup_GotIt"),
                            customClass: "tutorial-bookmarks-container",
                            dataStoreKey: this.BookmarkTutorialModelKey,
                            canShow: function() {
                                return !!$("#bookmarkButton");
                            },
                            attachTo: function() {
                                return $("#bookmarkButton");
                            },
                            offset: {
                                top: -15,
                                left: 0
                            },
                            telemetryEventArgs: [ PersonalizeVisualBookmarkTutorial ],
                            telemetryLogTutorialDismiss: !0,
                            preferredOrientation: "top",
                            learnMoreText: this.localizationService.get("LearnMore"),
                            learnMoreUrl: "https://go.microsoft.com/fwlink/?linkid=2141051"
                        }
                    }
                };
            }, PersonalizeVisualBookmarkTutorialService.\u0275fac = function(t) {
                return new (t || PersonalizeVisualBookmarkTutorialService)(core["\u0275\u0275inject"](localization_service.o));
            }, PersonalizeVisualBookmarkTutorialService.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: PersonalizeVisualBookmarkTutorialService,
                factory: PersonalizeVisualBookmarkTutorialService.\u0275fac,
                providedIn: "root"
            }), PersonalizeVisualBookmarkTutorialService;
        }(), trusted_visual_service = __webpack_require__(69071), visual_plugin_service = __webpack_require__(29866), tutorial_pop_up_service = __webpack_require__(56083), PersonalizeVisualComponent = function() {
            function PersonalizeVisualComponent(personalizeVisualData, eventBridge, changeDetectorRef, lazyProvider, localizationService, ngZone, overlay, tutorialService, router, telemetryService, trustedVisualService, injector, visualPluginService, tutorialPopupService, overlayRef, visualAuthoringService) {
                this.personalizeVisualData = personalizeVisualData, this.eventBridge = eventBridge, 
                this.changeDetectorRef = changeDetectorRef, this.lazyProvider = lazyProvider, this.localizationService = localizationService, 
                this.ngZone = ngZone, this.overlay = overlay, this.tutorialService = tutorialService, 
                this.router = router, this.telemetryService = telemetryService, this.trustedVisualService = trustedVisualService, 
                this.injector = injector, this.visualPluginService = visualPluginService, this.tutorialPopupService = tutorialPopupService, 
                this.overlayRef = overlayRef, this.visualAuthoringService = visualAuthoringService, 
                this.isSessionDirty = !1, this.rootTelemetryEvent = this.personalizeVisualData.rootEvent, 
                this.originalVisualConfig = _.cloneDeep(this.personalizeVisualData.visual.config);
            }
            return PersonalizeVisualComponent.prototype.ngOnInit = function() {
                var _this = this, visualContainerChanges$ = this.eventBridge.on(events.jCS).pipe((0, 
                filter.h)(function(eventArgs) {
                    return eventArgs.affectContainer(_this.personalizeVisualData.visual);
                }));
                this.visualTypes$ = visualContainerChanges$.pipe((0, tap.b)(function() {
                    return _this.checkDirtyState();
                }), (0, map.U)(function() {
                    return _this.personalizeVisualData.visual.config.singleVisual.visualType;
                }), (0, startWith.O)(this.personalizeVisualData.visual.config.singleVisual.visualType), (0, 
                distinctUntilChanged.x)()), this.visualDisplayName$ = this.visualTypes$.pipe((0, 
                map.U)(function(visualType) {
                    return _this.getVisualDisplayName(visualType);
                })), this.visualTypes$.pipe((0, scan.R)(function(previousType, newType) {
                    return _this.logVisualTypeChange(previousType, newType), newType;
                }), (0, takeUntil.R)(this.overlayRef.onClose)).subscribe(), this.router.events.pipe((0, 
                filter.h)(function(event) {
                    return event instanceof router.m2;
                }), (0, take.q)(1)).subscribe(function() {
                    return _this.overlayRef.close();
                }), visualContainerChanges$.pipe((0, takeUntil.R)(this.overlayRef.onClose), (0, 
                switchMap.w)(function() {
                    return _this.ngZone.onStable;
                })).subscribe(function() {
                    return _this.updateOverlayPosition();
                }), this.overlayRef.onClose.pipe((0, take.q)(1)).subscribe(function() {
                    _this.isSessionDirty && _this.tutorialPopupService.startTutorial(_this.tutorialService.createBookmarkTutorialModel());
                });
            }, PersonalizeVisualComponent.prototype.onClickVisualTypes = function(overlayOrigin) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var positionStrategy, overlayOpenEvent, componentFactoryResolver, visualTypesOverlay, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return positionStrategy = this.overlay.position().flexibleConnectedTo(overlayOrigin).withPositions([ (0, 
                            pbi_overlay_positions.v3)(4, 0), (0, pbi_overlay_positions.xe)(0, -4), (0, pbi_overlay_positions.Zc)(0, 4), (0, 
                            pbi_overlay_positions.q6)(-4, 0) ]).withFlexibleDimensions(!0).withPush(!0).withGrowAfterOpen(!0), 
                            overlayOpenEvent = this.telemetryService.startChildEvent(this.rootTelemetryEvent, events_personalize_visual.l, {
                                overlayType: "VisualTypeSelection"
                            }), [ 4, this.lazyProvider.getModule("./lazy-modules/personalize-visual/personalize-visual.module#PersonalizeVisualModule") ];

                          case 1:
                            return componentFactoryResolver = _a.sent().componentFactoryResolver, (visualTypesOverlay = this.overlay.open({
                                component: PersonalizeVisualVisualTypesComponent,
                                options: {
                                    positionStrategy,
                                    hasBackdrop: !0,
                                    backdropClass: pbi_overlay_service.L
                                },
                                closeOnBackdropClick: !0,
                                hasCaret: !0,
                                parent: this.overlayRef,
                                closeWithParent: !0,
                                injector: this.injector,
                                componentFactoryResolver
                            })).onClose.pipe((0, takeUntil.R)(this.overlayRef.onClose), (0, take.q)(1)).subscribe(function() {
                                return overlayOpenEvent.resolve();
                            }), this.visualTypes$.pipe((0, takeUntil.R)(visualTypesOverlay.onClose), (0, switchMap.w)(function() {
                                return _this.ngZone.onStable;
                            })).subscribe(function() {
                                return positionStrategy.apply();
                            }), [ 2 ];
                        }
                    });
                });
            }, PersonalizeVisualComponent.prototype.getDiscardChangesTooltipText = function() {
                return this.localizationService.get(this.isSessionDirty ? "PersonalizeVisual_DiscardChanges" : "PersonalizeVisual_DiscardChanges_Disabled");
            }, PersonalizeVisualComponent.prototype.discardChanges = function() {
                var visual = this.personalizeVisualData.visual;
                visual.config = _.cloneDeep(this.originalVisualConfig), this.eventBridge.publishToChannel(events.jCS, {
                    affectContainer: function(container) {
                        return container.name === visual.name;
                    }
                }), this.telemetryService.logChildEvent(this.rootTelemetryEvent, PersonalizeVisualDiscardChanges, {});
            }, PersonalizeVisualComponent.prototype.updateOverlayPosition = function() {
                this.changeDetectorRef.detectChanges(), this.overlayRef.overlayRef.updatePosition();
            }, PersonalizeVisualComponent.prototype.logVisualTypeChange = function(oldVisualType, newVisualType) {
                this.telemetryService.logChildEvent(this.rootTelemetryEvent, PersonalizeVisualTypePaneInteraction, {
                    oldVisualType,
                    newVisualType
                });
            }, PersonalizeVisualComponent.prototype.getVisualDisplayName = function(visualType) {
                var visualPlugin = this.visualPluginService.getPlugin(visualType), isTrustedVisual = this.trustedVisualService.isTrustedVisual(visualType), trustedVisualOptions = isTrustedVisual && this.trustedVisualService.getVisualTypeOptions(visualType);
                return visualPlugin.custom ? visualPlugin.displayName : isTrustedVisual ? trustedVisualOptions && trustedVisualOptions.titleKey ? this.localizationService.get(trustedVisualOptions.titleKey) : visualPlugin.displayName || visualPlugin.name : (0, 
                viewModelFactoryEx.Gf)(visualPlugin.titleKey, this.localizationService);
            }, PersonalizeVisualComponent.prototype.checkDirtyState = function() {
                var originalSingleVisual = this.originalVisualConfig.singleVisual, currentSingleVisual = this.personalizeVisualData.visual.config.singleVisual;
                this.isSessionDirty = originalSingleVisual.visualType !== currentSingleVisual.visualType || !_.isEqual(originalSingleVisual.query, currentSingleVisual.query), 
                (this.isSessionDirty || originalSingleVisual.presentationChangesApplied) && this.visualAuthoringService.setPresentationChangesApplied(!0);
            }, PersonalizeVisualComponent.\u0275fac = function(t) {
                return new (t || PersonalizeVisualComponent)(core["\u0275\u0275directiveInject"](pbi_overlay_ref.M), core["\u0275\u0275directiveInject"](event_bridge_service.J), core["\u0275\u0275directiveInject"](core.ChangeDetectorRef), core["\u0275\u0275directiveInject"](lazy_provider.E), core["\u0275\u0275directiveInject"](localization_service.o), core["\u0275\u0275directiveInject"](core.NgZone), core["\u0275\u0275directiveInject"](pbi_overlay_service._), core["\u0275\u0275directiveInject"](PersonalizeVisualBookmarkTutorialService), core["\u0275\u0275directiveInject"](router.F0), core["\u0275\u0275directiveInject"](Telemetry.y0), core["\u0275\u0275directiveInject"](trusted_visual_service.t), core["\u0275\u0275directiveInject"](core.Injector), core["\u0275\u0275directiveInject"](visual_plugin_service.D), core["\u0275\u0275directiveInject"](tutorial_pop_up_service.yU), core["\u0275\u0275directiveInject"](pbi_overlay_ref.w), core["\u0275\u0275directiveInject"](visual_authoring_service.$8));
            }, PersonalizeVisualComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: PersonalizeVisualComponent,
                selectors: [ [ "personalize-visual" ] ],
                decls: 16,
                vars: 9,
                consts: [ [ 1, "pbi-depth-2" ], [ 1, "personalize-visual-container" ], [ "localize", "PersonalizeVisual_MainMenuLabel", 1, "fluentTheme-vlg-semibold" ], [ 1, "header-actions" ], [ "pbiTooltipCaretSize", "small", 1, "glyphicon", "glyph-small", "pbi-glyph-eraser", "pbi-focus-outline", 3, "disabled", "pbiTooltip", "click" ], [ "pbiTooltipCaretSize", "small", 1, "glyphicon", "glyph-small", "pbi-glyph-close", "pbi-focus-outline", 3, "pbiTooltip", "click" ], [ 1, "scrollable-content" ], [ 1, "visual-types-picker" ], [ "id", "inline-explore-visual-type-picker-label", "localize", "PersonalizeVisual_VisualType", 1, "fluentTheme-md-reg" ], [ "id", "inline-explore-visual-type-picker", "aria-haspopup", "listbox", "aria-labelledby", "inline-explore-visual-type-picker-label inline-explore-visual-type-picker", 1, "fluentTheme-md-reg", "pbi-focus-outline", 3, "click" ], [ "visualTypeOrigin", "" ], [ 3, "rootTelemetryEvent", "onLoad" ] ],
                template: function(rf, ctx) {
                    if (1 & rf) {
                        var _r1 = core["\u0275\u0275getCurrentView"]();
                        core["\u0275\u0275elementStart"](0, "section", 0)(1, "div", 1)(2, "header"), core["\u0275\u0275element"](3, "div", 2), 
                        core["\u0275\u0275elementStart"](4, "span", 3)(5, "button", 4), core["\u0275\u0275listener"]("click", function() {
                            return ctx.discardChanges();
                        }), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](6, "button", 5), 
                        core["\u0275\u0275listener"]("click", function() {
                            return ctx.overlayRef.close();
                        }), core["\u0275\u0275pipe"](7, "localize"), core["\u0275\u0275elementEnd"]()()(), 
                        core["\u0275\u0275elementStart"](8, "div", 6)(9, "div", 7), core["\u0275\u0275element"](10, "label", 8), 
                        core["\u0275\u0275elementStart"](11, "button", 9, 10), core["\u0275\u0275listener"]("click", function() {
                            core["\u0275\u0275restoreView"](_r1);
                            var _r0 = core["\u0275\u0275reference"](12);
                            return core["\u0275\u0275resetView"](ctx.onClickVisualTypes(_r0));
                        }), core["\u0275\u0275text"](13), core["\u0275\u0275pipe"](14, "async"), core["\u0275\u0275elementEnd"]()(), 
                        core["\u0275\u0275elementStart"](15, "personalize-visual-visual-data-role-list", 11), 
                        core["\u0275\u0275listener"]("onLoad", function() {
                            return ctx.updateOverlayPosition();
                        }), core["\u0275\u0275elementEnd"]()()()();
                    }
                    2 & rf && (core["\u0275\u0275advance"](5), core["\u0275\u0275property"]("disabled", !ctx.isSessionDirty)("pbiTooltip", ctx.getDiscardChangesTooltipText()), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("pbiTooltip", core["\u0275\u0275pipeBind1"](7, 5, "PBI_Button_Label_Close")), 
                    core["\u0275\u0275advance"](7), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](14, 7, ctx.visualDisplayName$), " "), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("rootTelemetryEvent", ctx.rootTelemetryEvent));
                },
                styles: [ 'personalize-visual{height:100%;max-height:100vh;display:block}personalize-visual section{width:240px;height:100%;max-height:100vh;background:var(--fluent-theme-neutral-lighter-color, #F3F2F1);border-radius:2px;box-sizing:border-box;display:flex;flex-direction:column}personalize-visual section .personalize-visual-container{margin:12px 24px 0;height:100%;max-height:100vh;display:flex;flex-direction:column}personalize-visual section .personalize-visual-container .scrollable-content{height:calc(100% - 40px);overflow:auto;padding:0 1px}personalize-visual section .personalize-visual-container .scrollable-content personalize-visual-visual-data-role-list{display:block;margin-bottom:24px}personalize-visual header{display:flex;justify-content:space-between;color:var(--fluent-theme-neutral-dark-alt-color, #333333);height:24px;margin-bottom:16px}personalize-visual header .header-actions{display:flex}personalize-visual header .header-actions button{padding:0;border:0;background:transparent;margin-left:12px;color:var(--gray-190, #201F1E)}personalize-visual header .header-actions button.pbi-glyph-close{font-size:14px}personalize-visual header .header-actions button[disabled]{opacity:.5}personalize-visual .visual-types-picker{margin-bottom:20px}personalize-visual .visual-types-picker label{color:var(--fluent-theme-neutral-primary-color, #323130)}personalize-visual .visual-types-picker button{background:var(--fluent-theme-white-color, #FFF);border:1px solid var(--gray-110, #8A8886);box-sizing:border-box;border-radius:2px;height:24px;padding:2px 18px 2px 6px;color:var(--fluent-theme-neutral-dark-color, #201F1E);line-height:var(--md-font-size, 14px);position:relative;width:100%;text-overflow:ellipsis;white-space:nowrap;overflow:hidden;text-align:left;margin-top:4px}personalize-visual .visual-types-picker button:after{font-family:PowrMDL2;content:"\\e972";position:absolute;top:5px;right:5px;height:var(--sm-font-size, 12px);transform:rotate(-90deg);width:var(--sm-font-size, 12px);font-size:var(--sm-font-size, 12px)}html[dir=rtl] personalize-visual .visual-types-picker button{padding-left:18px;padding-right:6px;text-align:right}html[dir=rtl] personalize-visual .visual-types-picker button:after{transform:rotate(90deg);left:5px;right:initial}\n' ],
                encapsulation: 2,
                changeDetection: 0
            }), PersonalizeVisualComponent;
        }(), lazy_load_module = __webpack_require__(82156), localization_module = __webpack_require__(79061), Tutorial_module = __webpack_require__(69310), pbi_field_list_module = __webpack_require__(63654), pbi_menu_module = __webpack_require__(94841), pbi_overlay_module = __webpack_require__(66972), pbi_search_box_module = __webpack_require__(39433), pbi_tooltip_module = __webpack_require__(16095), pbi_tree_module = __webpack_require__(35284), manifests = [ {
            type: PersonalizeVisualComponent,
            componentId: "PersonalizeVisualComponentId"
        } ], PersonalizeVisualModule = function() {
            function PersonalizeVisualModule() {}
            return PersonalizeVisualModule.\u0275fac = function(t) {
                return new (t || PersonalizeVisualModule);
            }, PersonalizeVisualModule.\u0275mod = core["\u0275\u0275defineNgModule"]({
                type: PersonalizeVisualModule
            }), PersonalizeVisualModule.\u0275inj = core["\u0275\u0275defineInjector"]({
                imports: [ common.CommonModule, lazy_load_module.N.withManifests(manifests), localization_module.v, pbi_menu_module.b, pbi_field_list_module.X, pbi_overlay_module.N, pbi_search_box_module.t, pbi_tooltip_module.Z, pbi_tree_module.J, Tutorial_module.R, visual_types_container_modern_module.Q ]
            }), PersonalizeVisualModule;
        }();
        core["\u0275\u0275setComponentScope"](PersonalizeVisualComponent, [ localize_directive.X, pbi_tooltip_directive.V, PersonalizeVisualVisualDataRoleListComponent ], [ common.AsyncPipe, localize_pipe.F ]);
    },
    48144: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            R: function() {
                return getFieldExprKind;
            },
            y: function() {
                return createFieldListExprGenerator;
            }
        });
        var _powerbi_legacy_Explore_util_groupUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(42233), _powerbi_legacy_ExploreUI_viewModels_fieldListConceptualModel__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(69843), _powerbi_legacy_PowerBIVisuals_VisualsData_semanticQuery_sqExpr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(94419), _powerbi_legacy_PowerBIVisuals_VisualsData_semanticQuery_exprPatterns_fieldExprPatternBuilder__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(76001), _powerbi_legacy_PowerBIVisuals_VisualsData_semanticQuery_exprPatterns_fieldExprPatternToSQExprConverter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(80366);
        function getFieldExprKind(fieldType) {
            switch (fieldType) {
              case 2:
                return 1;

              case 3:
                return 2;

              case 0:
              default:
                return 0;

              case 6:
                return 3;
            }
        }
        function createFieldListExprGenerator(type, groupingDesignStateService) {
            switch (type) {
              case 1:
                return new FieldListHierarchyExprGenerator;

              case 2:
                return new FieldListHierarchyLevelExprGenerator;

              case 3:
                return new FieldListRowCountExprGenerator;

              default:
                return new FieldListPropertyExprGenerator(groupingDesignStateService);
            }
        }
        var FieldListRowCountExprGenerator = function() {
            function FieldListRowCountExprGenerator() {}
            return FieldListRowCountExprGenerator.prototype.fieldExpr = function(viewModel) {
                var entityExpr = (0, _powerbi_legacy_PowerBIVisuals_VisualsData_semanticQuery_sqExpr__WEBPACK_IMPORTED_MODULE_0__.nw)(viewModel.schema.name, viewModel.contract.name);
                return (0, _powerbi_legacy_PowerBIVisuals_VisualsData_semanticQuery_sqExpr__WEBPACK_IMPORTED_MODULE_0__.m_)(entityExpr, 2);
            }, FieldListRowCountExprGenerator;
        }(), FieldListPropertyExprGenerator = function() {
            function FieldListPropertyExprGenerator(groupingDesignStateService) {
                this.groupingDesignStateService = groupingDesignStateService;
            }
            return FieldListPropertyExprGenerator.prototype.fieldExpr = function(viewModel) {
                if (void 0 !== viewModel.kind) {
                    if (0 === viewModel.kind) {
                        if ((0, _powerbi_legacy_Explore_util_groupUtils__WEBPACK_IMPORTED_MODULE_1__.RV)(viewModel.entity.name, viewModel.contract, this.groupingDesignStateService)) {
                            var entityExpr = (0, _powerbi_legacy_PowerBIVisuals_VisualsData_semanticQuery_sqExpr__WEBPACK_IMPORTED_MODULE_0__.nw)(viewModel.entity.contractSchema.name, viewModel.entity.name), groupedColumns = (0, 
                            _powerbi_legacy_Explore_util_groupUtils__WEBPACK_IMPORTED_MODULE_1__.ZP)(viewModel.contract.column.groupingMetadata, entityExpr);
                            return (0, _powerbi_legacy_PowerBIVisuals_VisualsData_semanticQuery_exprPatterns_fieldExprPatternToSQExprConverter__WEBPACK_IMPORTED_MODULE_2__.og)({
                                groupingColumn: {
                                    schema: viewModel.schema.name,
                                    entity: viewModel.entity.name,
                                    name: viewModel.name,
                                    groupedColumns: _.isEmpty(groupedColumns) ? void 0 : _.map(groupedColumns, function(c) {
                                        return (0, _powerbi_legacy_PowerBIVisuals_VisualsData_semanticQuery_exprPatterns_fieldExprPatternBuilder__WEBPACK_IMPORTED_MODULE_3__.Q)(c);
                                    })
                                }
                            });
                        }
                        return (0, _powerbi_legacy_PowerBIVisuals_VisualsData_semanticQuery_exprPatterns_fieldExprPatternToSQExprConverter__WEBPACK_IMPORTED_MODULE_2__.og)({
                            column: {
                                schema: viewModel.schema.name,
                                entity: viewModel.originalEntity ? viewModel.originalEntity.name : viewModel.entity.name,
                                name: viewModel.name
                            }
                        });
                    }
                    if (1 === viewModel.kind) return (0, _powerbi_legacy_PowerBIVisuals_VisualsData_semanticQuery_exprPatterns_fieldExprPatternToSQExprConverter__WEBPACK_IMPORTED_MODULE_2__.og)({
                        measure: {
                            schema: viewModel.schema.name,
                            entity: viewModel.entity.name,
                            name: viewModel.name
                        }
                    });
                }
            }, FieldListPropertyExprGenerator;
        }(), FieldListHierarchyExprGenerator = function() {
            function FieldListHierarchyExprGenerator() {}
            return FieldListHierarchyExprGenerator.prototype.fieldExpr = function(viewModel) {
                if (viewModel.variation && viewModel.originalEntity) {
                    var variationColumn = viewModel.parent;
                    return (0, _powerbi_legacy_PowerBIVisuals_VisualsData_semanticQuery_exprPatterns_fieldExprPatternToSQExprConverter__WEBPACK_IMPORTED_MODULE_2__.og)({
                        columnHierarchyVariation: {
                            source: {
                                name: variationColumn.name,
                                schema: variationColumn.entity.contractSchema.name,
                                entity: variationColumn.entity.name
                            },
                            hierarchy: {
                                schema: viewModel.entity.contractSchema.name,
                                entity: viewModel.originalEntity.name,
                                name: viewModel.contract.name
                            },
                            variationName: viewModel.variation
                        }
                    });
                }
                return (0, _powerbi_legacy_PowerBIVisuals_VisualsData_semanticQuery_exprPatterns_fieldExprPatternToSQExprConverter__WEBPACK_IMPORTED_MODULE_2__.og)({
                    hierarchy: {
                        name: viewModel.name,
                        schema: viewModel.entity.contractSchema.name,
                        entity: viewModel.originalEntity ? viewModel.originalEntity.name : viewModel.entity.name
                    }
                });
            }, FieldListHierarchyExprGenerator;
        }(), FieldListHierarchyLevelExprGenerator = function() {
            function FieldListHierarchyLevelExprGenerator() {}
            return FieldListHierarchyLevelExprGenerator.prototype.fieldExpr = function(viewModel) {
                if (viewModel.variation && viewModel.parent instanceof _powerbi_legacy_ExploreUI_viewModels_fieldListConceptualModel__WEBPACK_IMPORTED_MODULE_4__.Jg) {
                    var hierarchyVm = viewModel.parent, variationColumn = hierarchyVm.parent;
                    return (0, _powerbi_legacy_PowerBIVisuals_VisualsData_semanticQuery_exprPatterns_fieldExprPatternToSQExprConverter__WEBPACK_IMPORTED_MODULE_2__.og)({
                        columnHierarchyLevelVariation: {
                            source: {
                                name: variationColumn.name,
                                schema: variationColumn.entity.contractSchema.name,
                                entity: variationColumn.entity.name
                            },
                            level: {
                                schema: variationColumn.entity.contractSchema.name,
                                entity: viewModel.originalEntity.name,
                                name: hierarchyVm.contract.name,
                                level: viewModel.name
                            },
                            variationName: viewModel.variation
                        }
                    });
                }
                return (0, _powerbi_legacy_PowerBIVisuals_VisualsData_semanticQuery_exprPatterns_fieldExprPatternToSQExprConverter__WEBPACK_IMPORTED_MODULE_2__.og)({
                    hierarchyLevel: {
                        schema: viewModel.entity.contractSchema.name,
                        entity: viewModel.entity.name,
                        name: viewModel.parent.name,
                        level: viewModel.name
                    }
                });
            }, FieldListHierarchyLevelExprGenerator;
        }();
    },
    83839: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            hF: function() {
                return convertFieldListToPbiTree;
            },
            iq: function() {
                return updateAncestorsBadge;
            }
        });
        var _powerbi_legacy_ExploreUI_viewModels_fieldListConceptualModel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(69843), badge = {
            type: 1,
            sheet: "fieldListPaneIcons",
            symbolId: "fieldListCheckmark"
        }, fieldListEntitySvgSheet = "fieldListPaneIcons_paneColorRefresh", fieldListPropertySvgSheet = "fieldListPaneIcons_paneColorRefresh";
        function convertFieldListToPbiTree(fieldList, options) {
            return {
                nodes: fieldList.schema.entities.filter(function(entity) {
                    return (!entity.hidden || entity.showHidden || options && options.fieldHiddenPredicate && !options.fieldHiddenPredicate(entity)) && entity.userEntity;
                }).map(function(entity) {
                    return function(entity, options) {
                        for (var icon = {
                            type: 1,
                            sheet: fieldListEntitySvgSheet,
                            symbolId: "".concat(entity.iconClassName || "fieldListEntity", "_paneColorRefresh")
                        }, node = {
                            data: entity,
                            displayName: entity.displayName,
                            icon,
                            tooltip: options && options.showTooltips,
                            ariaLabel: entity.displayName
                        }, children = node.children = [], _i = 0, _a = entity.properties; _i < _a.length; _i++) {
                            var property = _a[_i], fieldHidden = options && options.fieldHiddenPredicate && options.fieldHiddenPredicate(property);
                            !property.visible || property.hidden && (void 0 === fieldHidden || fieldHidden) || children.push(convertFieldListFieldToPbiTreeNode(node, property, options));
                        }
                        return node;
                    }(entity, options);
                })
            };
        }
        function convertFieldListFieldToPbiTreeNode(parent, field, options) {
            var symbolId = (0, _powerbi_legacy_ExploreUI_viewModels_fieldListConceptualModel__WEBPACK_IMPORTED_MODULE_0__.Wx)(field, !0, !0), icon = "none" !== symbolId ? {
                type: 1,
                sheet: fieldListPropertySvgSheet,
                symbolId
            } : void 0, selected = options && options.fieldSelectionPredicate && options.fieldSelectionPredicate(field), checked = selected, id = options && options.fieldIdPredicate && options.fieldIdPredicate(field), checkable = options && options.fieldCheckablePredicate && options.fieldCheckablePredicate(field), draggable = options && options.fieldDraggablePredicate && options.fieldDraggablePredicate(field), menu = options && options.fieldHasMenuPredicate && options.fieldHasMenuPredicate(field), node = {
                data: field,
                displayName: field.displayName,
                draggable,
                id,
                parent,
                checkable,
                checked,
                selected,
                icon,
                tooltip: options && options.showTooltips,
                menu,
                ariaLabel: field.displayName
            };
            if (selected && expandCheckedNodeAncestors(node, null == options ? void 0 : options.showAncestorsBadge), 
            field.children) for (var children = node.children = [], _i = 0, _a = field.children; _i < _a.length; _i++) {
                var child = _a[_i], fieldHidden = options && options.fieldHiddenPredicate && options.fieldHiddenPredicate(child);
                child.hidden && (void 0 === fieldHidden || fieldHidden) || children.push(convertFieldListFieldToPbiTreeNode(node, child, options));
            }
            return node;
        }
        function expandCheckedNodeAncestors(node, showAncestorsBadge) {
            node.expanded = !0, node.parent && (showAncestorsBadge ? (addAncestorsBadge(node), 
            expandCheckedNodeAncestors(node.parent, !0)) : expandCheckedNodeAncestors(node.parent));
        }
        function addAncestorsBadge(node) {
            node.parent.badge = badge, null == node.parent.badgedChildren && (node.parent.badgedChildren = []), 
            _.find(node.parent.badgedChildren, node) || node.parent.badgedChildren.push(node);
        }
        function updateAncestorsBadge(node) {
            node.parent && (node.checked || node.badge ? addAncestorsBadge(node) : (_.remove(node.parent.badgedChildren, function(child) {
                return child.displayName === node.displayName;
            }), node.parent.badge = _.isEmpty(node.parent.badgedChildren) ? void 0 : badge), 
            updateAncestorsBadge(node.parent));
        }
    }
} ]);