(self.webpackChunkdesktop = self.webpackChunkdesktop || []).push([ [ "publish-to-group-dialog" ], {
    5637: function(module, __unused_webpack_exports, __webpack_require__) {
        "use strict";
        function assign(obj) {
            return Array.prototype.slice.call(arguments, 1).forEach(function(source) {
                source && Object.keys(source).forEach(function(key) {
                    obj[key] = source[key];
                });
            }), obj;
        }
        function _class(obj) {
            return Object.prototype.toString.call(obj);
        }
        function isFunction(obj) {
            return "[object Function]" === _class(obj);
        }
        function escapeRE(str) {
            return str.replace(/[.?*+^$[\]\\(){}|-]/g, "\\$&");
        }
        var defaultOptions = {
            fuzzyLink: !0,
            fuzzyEmail: !0,
            fuzzyIP: !1
        }, defaultSchemas = {
            "http:": {
                validate: function(text, pos, self) {
                    var tail = text.slice(pos);
                    return self.re.http || (self.re.http = new RegExp("^\\/\\/" + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, "i")), 
                    self.re.http.test(tail) ? tail.match(self.re.http)[0].length : 0;
                }
            },
            "https:": "http:",
            "ftp:": "http:",
            "//": {
                validate: function(text, pos, self) {
                    var tail = text.slice(pos);
                    return self.re.no_http || (self.re.no_http = new RegExp("^" + self.re.src_auth + "(?:localhost|(?:(?:" + self.re.src_domain + ")\\.)+" + self.re.src_domain_root + ")" + self.re.src_port + self.re.src_host_terminator + self.re.src_path, "i")), 
                    self.re.no_http.test(tail) ? pos >= 3 && ":" === text[pos - 3] || pos >= 3 && "/" === text[pos - 3] ? 0 : tail.match(self.re.no_http)[0].length : 0;
                }
            },
            "mailto:": {
                validate: function(text, pos, self) {
                    var tail = text.slice(pos);
                    return self.re.mailto || (self.re.mailto = new RegExp("^" + self.re.src_email_name + "@" + self.re.src_host_strict, "i")), 
                    self.re.mailto.test(tail) ? tail.match(self.re.mailto)[0].length : 0;
                }
            }
        }, tlds_2ch_src_re = "a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]", tlds_default = "biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|\u0440\u0444".split("|");
        function compile(self) {
            var re = self.re = __webpack_require__(3916)(self.__opts__), tlds = self.__tlds__.slice();
            function untpl(tpl) {
                return tpl.replace("%TLDS%", re.src_tlds);
            }
            self.onCompile(), self.__tlds_replaced__ || tlds.push(tlds_2ch_src_re), tlds.push(re.src_xn), 
            re.src_tlds = tlds.join("|"), re.email_fuzzy = RegExp(untpl(re.tpl_email_fuzzy), "i"), 
            re.link_fuzzy = RegExp(untpl(re.tpl_link_fuzzy), "i"), re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), "i"), 
            re.host_fuzzy_test = RegExp(untpl(re.tpl_host_fuzzy_test), "i");
            var aliases = [];
            function schemaError(name, val) {
                throw new Error('(LinkifyIt) Invalid schema "' + name + '": ' + val);
            }
            self.__compiled__ = {}, Object.keys(self.__schemas__).forEach(function(name) {
                var val = self.__schemas__[name];
                if (null !== val) {
                    var compiled = {
                        validate: null,
                        link: null
                    };
                    if (self.__compiled__[name] = compiled, "[object Object]" === _class(val)) return "[object RegExp]" !== _class(val.validate) ? isFunction(val.validate) ? compiled.validate = val.validate : schemaError(name, val) : compiled.validate = function(re) {
                        return function(text, pos) {
                            var tail = text.slice(pos);
                            return re.test(tail) ? tail.match(re)[0].length : 0;
                        };
                    }(val.validate), void (isFunction(val.normalize) ? compiled.normalize = val.normalize : val.normalize ? schemaError(name, val) : compiled.normalize = function(match, self) {
                        self.normalize(match);
                    });
                    "[object String]" !== _class(val) ? schemaError(name, val) : aliases.push(name);
                }
            }), aliases.forEach(function(alias) {
                self.__compiled__[self.__schemas__[alias]] && (self.__compiled__[alias].validate = self.__compiled__[self.__schemas__[alias]].validate, 
                self.__compiled__[alias].normalize = self.__compiled__[self.__schemas__[alias]].normalize);
            }), self.__compiled__[""] = {
                validate: null,
                normalize: function(match, self) {
                    self.normalize(match);
                }
            };
            var slist = Object.keys(self.__compiled__).filter(function(name) {
                return name.length > 0 && self.__compiled__[name];
            }).map(escapeRE).join("|");
            self.re.schema_test = RegExp("(^|(?!_)(?:[><\uff5c]|" + re.src_ZPCc + "))(" + slist + ")", "i"), 
            self.re.schema_search = RegExp("(^|(?!_)(?:[><\uff5c]|" + re.src_ZPCc + "))(" + slist + ")", "ig"), 
            self.re.pretest = RegExp("(" + self.re.schema_test.source + ")|(" + self.re.host_fuzzy_test.source + ")|@", "i"), 
            function(self) {
                self.__index__ = -1, self.__text_cache__ = "";
            }(self);
        }
        function Match(self, shift) {
            var start = self.__index__, end = self.__last_index__, text = self.__text_cache__.slice(start, end);
            this.schema = self.__schema__.toLowerCase(), this.index = start + shift, this.lastIndex = end + shift, 
            this.raw = text, this.text = text, this.url = text;
        }
        function createMatch(self, shift) {
            var match = new Match(self, shift);
            return self.__compiled__[match.schema].normalize(match, self), match;
        }
        function LinkifyIt(schemas, options) {
            if (!(this instanceof LinkifyIt)) return new LinkifyIt(schemas, options);
            options || Object.keys(schemas || {}).reduce(function(acc, k) {
                return acc || defaultOptions.hasOwnProperty(k);
            }, !1) && (options = schemas, schemas = {}), this.__opts__ = assign({}, defaultOptions, options), 
            this.__index__ = -1, this.__last_index__ = -1, this.__schema__ = "", this.__text_cache__ = "", 
            this.__schemas__ = assign({}, defaultSchemas, schemas), this.__compiled__ = {}, 
            this.__tlds__ = tlds_default, this.__tlds_replaced__ = !1, this.re = {}, compile(this);
        }
        LinkifyIt.prototype.add = function(schema, definition) {
            return this.__schemas__[schema] = definition, compile(this), this;
        }, LinkifyIt.prototype.set = function(options) {
            return this.__opts__ = assign(this.__opts__, options), this;
        }, LinkifyIt.prototype.test = function(text) {
            if (this.__text_cache__ = text, this.__index__ = -1, !text.length) return !1;
            var m, ml, me, len, shift, next, re, tld_pos;
            if (this.re.schema_test.test(text)) for ((re = this.re.schema_search).lastIndex = 0; null !== (m = re.exec(text)); ) if (len = this.testSchemaAt(text, m[2], re.lastIndex)) {
                this.__schema__ = m[2], this.__index__ = m.index + m[1].length, this.__last_index__ = m.index + m[0].length + len;
                break;
            }
            return this.__opts__.fuzzyLink && this.__compiled__["http:"] && (tld_pos = text.search(this.re.host_fuzzy_test)) >= 0 && (this.__index__ < 0 || tld_pos < this.__index__) && null !== (ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) && (shift = ml.index + ml[1].length, 
            (this.__index__ < 0 || shift < this.__index__) && (this.__schema__ = "", this.__index__ = shift, 
            this.__last_index__ = ml.index + ml[0].length)), this.__opts__.fuzzyEmail && this.__compiled__["mailto:"] && text.indexOf("@") >= 0 && null !== (me = text.match(this.re.email_fuzzy)) && (shift = me.index + me[1].length, 
            next = me.index + me[0].length, (this.__index__ < 0 || shift < this.__index__ || shift === this.__index__ && next > this.__last_index__) && (this.__schema__ = "mailto:", 
            this.__index__ = shift, this.__last_index__ = next)), this.__index__ >= 0;
        }, LinkifyIt.prototype.pretest = function(text) {
            return this.re.pretest.test(text);
        }, LinkifyIt.prototype.testSchemaAt = function(text, schema, pos) {
            return this.__compiled__[schema.toLowerCase()] ? this.__compiled__[schema.toLowerCase()].validate(text, pos, this) : 0;
        }, LinkifyIt.prototype.match = function(text) {
            var shift = 0, result = [];
            this.__index__ >= 0 && this.__text_cache__ === text && (result.push(createMatch(this, shift)), 
            shift = this.__last_index__);
            for (var tail = shift ? text.slice(shift) : text; this.test(tail); ) result.push(createMatch(this, shift)), 
            tail = tail.slice(this.__last_index__), shift += this.__last_index__;
            return result.length ? result : null;
        }, LinkifyIt.prototype.tlds = function(list, keepOld) {
            return list = Array.isArray(list) ? list : [ list ], keepOld ? (this.__tlds__ = this.__tlds__.concat(list).sort().filter(function(el, idx, arr) {
                return el !== arr[idx - 1];
            }).reverse(), compile(this), this) : (this.__tlds__ = list.slice(), this.__tlds_replaced__ = !0, 
            compile(this), this);
        }, LinkifyIt.prototype.normalize = function(match) {
            match.schema || (match.url = "http://" + match.url), "mailto:" !== match.schema || /^mailto:/i.test(match.url) || (match.url = "mailto:" + match.url);
        }, LinkifyIt.prototype.onCompile = function() {}, module.exports = LinkifyIt;
    },
    3916: function(module, __unused_webpack_exports, __webpack_require__) {
        "use strict";
        module.exports = function(opts) {
            var re = {};
            return re.src_Any = __webpack_require__(52246).source, re.src_Cc = __webpack_require__(21477).source, 
            re.src_Z = __webpack_require__(58079).source, re.src_P = __webpack_require__(32606).source, 
            re.src_ZPCc = [ re.src_Z, re.src_P, re.src_Cc ].join("|"), re.src_ZCc = [ re.src_Z, re.src_Cc ].join("|"), 
            re.src_pseudo_letter = "(?:(?![><\uff5c]|" + re.src_ZPCc + ")" + re.src_Any + ")", 
            re.src_ip4 = "(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)", 
            re.src_auth = "(?:(?:(?!" + re.src_ZCc + "|[@/\\[\\]()]).)+@)?", re.src_port = "(?::(?:6(?:[0-4]\\d{3}|5(?:[0-4]\\d{2}|5(?:[0-2]\\d|3[0-5])))|[1-5]?\\d{1,4}))?", 
            re.src_host_terminator = "(?=$|[><\uff5c]|" + re.src_ZPCc + ")(?!-|_|:\\d|\\.-|\\.(?!$|" + re.src_ZPCc + "))", 
            re.src_path = "(?:[/?#](?:(?!" + re.src_ZCc + "|[><\uff5c]|[()[\\]{}.,\"'?!\\-;]).|\\[(?:(?!" + re.src_ZCc + "|\\]).)*\\]|\\((?:(?!" + re.src_ZCc + "|[)]).)*\\)|\\{(?:(?!" + re.src_ZCc + '|[}]).)*\\}|\\"(?:(?!' + re.src_ZCc + '|["]).)+\\"|\\\'(?:(?!' + re.src_ZCc + "|[']).)+\\'|\\'(?=" + re.src_pseudo_letter + "|[-]).|\\.{2,}[a-zA-Z0-9%/&]|\\.(?!" + re.src_ZCc + "|[.]).|" + (opts && opts["---"] ? "\\-(?!--(?:[^-]|$))(?:-*)|" : "\\-+|") + ",(?!" + re.src_ZCc + ").|;(?!" + re.src_ZCc + ").|\\!+(?!" + re.src_ZCc + "|[!]).|\\?(?!" + re.src_ZCc + "|[?]).)+|\\/)?", 
            re.src_email_name = '[\\-;:&=\\+\\$,\\.a-zA-Z0-9_][\\-;:&=\\+\\$,\\"\\.a-zA-Z0-9_]*', 
            re.src_xn = "xn--[a-z0-9\\-]{1,59}", re.src_domain_root = "(?:" + re.src_xn + "|" + re.src_pseudo_letter + "{1,63})", 
            re.src_domain = "(?:" + re.src_xn + "|(?:" + re.src_pseudo_letter + ")|(?:" + re.src_pseudo_letter + "(?:-|" + re.src_pseudo_letter + "){0,61}" + re.src_pseudo_letter + "))", 
            re.src_host = "(?:(?:(?:(?:" + re.src_domain + ")\\.)*" + re.src_domain + "))", 
            re.tpl_host_fuzzy = "(?:" + re.src_ip4 + "|(?:(?:(?:" + re.src_domain + ")\\.)+(?:%TLDS%)))", 
            re.tpl_host_no_ip_fuzzy = "(?:(?:(?:" + re.src_domain + ")\\.)+(?:%TLDS%))", re.src_host_strict = re.src_host + re.src_host_terminator, 
            re.tpl_host_fuzzy_strict = re.tpl_host_fuzzy + re.src_host_terminator, re.src_host_port_strict = re.src_host + re.src_port + re.src_host_terminator, 
            re.tpl_host_port_fuzzy_strict = re.tpl_host_fuzzy + re.src_port + re.src_host_terminator, 
            re.tpl_host_port_no_ip_fuzzy_strict = re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator, 
            re.tpl_host_fuzzy_test = "localhost|www\\.|\\.\\d{1,3}\\.|(?:\\.(?:%TLDS%)(?:" + re.src_ZPCc + "|>|$))", 
            re.tpl_email_fuzzy = '(^|[><\uff5c]|"|\\(|' + re.src_ZCc + ")(" + re.src_email_name + "@" + re.tpl_host_fuzzy_strict + ")", 
            re.tpl_link_fuzzy = "(^|(?![.:/\\-_@])(?:[$+<=>^`|\uff5c]|" + re.src_ZPCc + "))((?![$+<=>^`|\uff5c])" + re.tpl_host_port_fuzzy_strict + re.src_path + ")", 
            re.tpl_link_no_ip_fuzzy = "(^|(?![.:/\\-_@])(?:[$+<=>^`|\uff5c]|" + re.src_ZPCc + "))((?![$+<=>^`|\uff5c])" + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ")", 
            re;
        };
    },
    17261: function(module, __unused_webpack_exports, __webpack_require__) {
        "use strict";
        module.exports = __webpack_require__(5161);
    },
    76235: function(module, __unused_webpack_exports, __webpack_require__) {
        "use strict";
        module.exports = __webpack_require__(83992);
    },
    28715: function(module) {
        "use strict";
        module.exports = [ "address", "article", "aside", "base", "basefont", "blockquote", "body", "caption", "center", "col", "colgroup", "dd", "details", "dialog", "dir", "div", "dl", "dt", "fieldset", "figcaption", "figure", "footer", "form", "frame", "frameset", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hr", "html", "iframe", "legend", "li", "link", "main", "menu", "menuitem", "nav", "noframes", "ol", "optgroup", "option", "p", "param", "section", "source", "summary", "table", "tbody", "td", "tfoot", "th", "thead", "title", "tr", "track", "ul" ];
    },
    22289: function(module) {
        "use strict";
        var open_tag = "<[A-Za-z][A-Za-z0-9\\-]*(?:\\s+[a-zA-Z_:][a-zA-Z0-9:._-]*(?:\\s*=\\s*(?:[^\"'=<>`\\x00-\\x20]+|'[^']*'|\"[^\"]*\"))?)*\\s*\\/?>", close_tag = "<\\/[A-Za-z][A-Za-z0-9\\-]*\\s*>", HTML_TAG_RE = new RegExp("^(?:" + open_tag + "|" + close_tag + "|\x3c!----\x3e|\x3c!--(?:-?[^>-])(?:-?[^-])*--\x3e|<[?][\\s\\S]*?[?]>|<![A-Z]+\\s+[^>]*>|<!\\[CDATA\\[[\\s\\S]*?\\]\\]>)"), HTML_OPEN_CLOSE_TAG_RE = new RegExp("^(?:" + open_tag + "|" + close_tag + ")");
        module.exports.n = HTML_TAG_RE, module.exports.q = HTML_OPEN_CLOSE_TAG_RE;
    },
    50195: function(__unused_webpack_module, exports, __webpack_require__) {
        "use strict";
        var _hasOwnProperty = Object.prototype.hasOwnProperty;
        function has(object, key) {
            return _hasOwnProperty.call(object, key);
        }
        function isValidEntityCode(c) {
            return !(c >= 55296 && c <= 57343 || c >= 64976 && c <= 65007 || !(65535 & ~c && 65534 != (65535 & c)) || c >= 0 && c <= 8 || 11 === c || c >= 14 && c <= 31 || c >= 127 && c <= 159 || c > 1114111);
        }
        function fromCodePoint(c) {
            return c > 65535 ? (c -= 65536, String.fromCharCode(55296 + (c >> 10), 56320 + (1023 & c))) : String.fromCharCode(c);
        }
        var UNESCAPE_MD_RE = /\\([!"#$%&'()*+,\-.\/:;<=>?@[\\\]^_`{|}~])/g, UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + "|" + /&([a-z#][a-z0-9]{1,31});/gi.source, "gi"), DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i, entities = __webpack_require__(76235), HTML_ESCAPE_TEST_RE = /[&<>"]/, HTML_ESCAPE_REPLACE_RE = /[&<>"]/g, HTML_REPLACEMENTS = {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&quot;"
        };
        function replaceUnsafeChar(ch) {
            return HTML_REPLACEMENTS[ch];
        }
        var REGEXP_ESCAPE_RE = /[.?*+^$[\]\\(){}|-]/g, UNICODE_PUNCT_RE = __webpack_require__(32606);
        exports.lib = {}, exports.lib.mdurl = __webpack_require__(30229), exports.lib.ucmicro = __webpack_require__(47643), 
        exports.assign = function(obj) {
            return Array.prototype.slice.call(arguments, 1).forEach(function(source) {
                if (source) {
                    if ("object" != typeof source) throw new TypeError(source + "must be object");
                    Object.keys(source).forEach(function(key) {
                        obj[key] = source[key];
                    });
                }
            }), obj;
        }, exports.isString = function(obj) {
            return "[object String]" === function(obj) {
                return Object.prototype.toString.call(obj);
            }(obj);
        }, exports.has = has, exports.unescapeMd = function(str) {
            return str.indexOf("\\") < 0 ? str : str.replace(UNESCAPE_MD_RE, "$1");
        }, exports.unescapeAll = function(str) {
            return str.indexOf("\\") < 0 && str.indexOf("&") < 0 ? str : str.replace(UNESCAPE_ALL_RE, function(match, escaped, entity) {
                return escaped || function(match, name) {
                    var code = 0;
                    return has(entities, name) ? entities[name] : 35 === name.charCodeAt(0) && DIGITAL_ENTITY_TEST_RE.test(name) && isValidEntityCode(code = "x" === name[1].toLowerCase() ? parseInt(name.slice(2), 16) : parseInt(name.slice(1), 10)) ? fromCodePoint(code) : match;
                }(match, entity);
            });
        }, exports.isValidEntityCode = isValidEntityCode, exports.fromCodePoint = fromCodePoint, 
        exports.escapeHtml = function(str) {
            return HTML_ESCAPE_TEST_RE.test(str) ? str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar) : str;
        }, exports.arrayReplaceAt = function(src, pos, newElements) {
            return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1));
        }, exports.isSpace = function(code) {
            switch (code) {
              case 9:
              case 32:
                return !0;
            }
            return !1;
        }, exports.isWhiteSpace = function(code) {
            if (code >= 8192 && code <= 8202) return !0;
            switch (code) {
              case 9:
              case 10:
              case 11:
              case 12:
              case 13:
              case 32:
              case 160:
              case 5760:
              case 8239:
              case 8287:
              case 12288:
                return !0;
            }
            return !1;
        }, exports.isMdAsciiPunct = function(ch) {
            switch (ch) {
              case 33:
              case 34:
              case 35:
              case 36:
              case 37:
              case 38:
              case 39:
              case 40:
              case 41:
              case 42:
              case 43:
              case 44:
              case 45:
              case 46:
              case 47:
              case 58:
              case 59:
              case 60:
              case 61:
              case 62:
              case 63:
              case 64:
              case 91:
              case 92:
              case 93:
              case 94:
              case 95:
              case 96:
              case 123:
              case 124:
              case 125:
              case 126:
                return !0;

              default:
                return !1;
            }
        }, exports.isPunctChar = function(ch) {
            return UNICODE_PUNCT_RE.test(ch);
        }, exports.escapeRE = function(str) {
            return str.replace(REGEXP_ESCAPE_RE, "\\$&");
        }, exports.normalizeReference = function(str) {
            return str = str.trim().replace(/\s+/g, " "), "\u1e7e" === "\u1e9e".toLowerCase() && (str = str.replace(/\u1e9e/g, "\xdf")), 
            str.toLowerCase().toUpperCase();
        };
    },
    84563: function(__unused_webpack_module, exports, __webpack_require__) {
        "use strict";
        exports.parseLinkLabel = __webpack_require__(31099), exports.parseLinkDestination = __webpack_require__(18450), 
        exports.parseLinkTitle = __webpack_require__(17094);
    },
    18450: function(module, __unused_webpack_exports, __webpack_require__) {
        "use strict";
        var unescapeAll = __webpack_require__(50195).unescapeAll;
        module.exports = function(str, pos, max) {
            var code, level, start = pos, result = {
                ok: !1,
                pos: 0,
                lines: 0,
                str: ""
            };
            if (60 === str.charCodeAt(pos)) {
                for (pos++; pos < max; ) {
                    if (10 === (code = str.charCodeAt(pos))) return result;
                    if (60 === code) return result;
                    if (62 === code) return result.pos = pos + 1, result.str = unescapeAll(str.slice(start + 1, pos)), 
                    result.ok = !0, result;
                    92 === code && pos + 1 < max ? pos += 2 : pos++;
                }
                return result;
            }
            for (level = 0; pos < max && 32 !== (code = str.charCodeAt(pos)) && !(code < 32 || 127 === code); ) if (92 === code && pos + 1 < max) {
                if (32 === str.charCodeAt(pos + 1)) break;
                pos += 2;
            } else {
                if (40 === code && ++level > 32) return result;
                if (41 === code) {
                    if (0 === level) break;
                    level--;
                }
                pos++;
            }
            return start === pos || 0 !== level || (result.str = unescapeAll(str.slice(start, pos)), 
            result.lines = 0, result.pos = pos, result.ok = !0), result;
        };
    },
    31099: function(module) {
        "use strict";
        module.exports = function(state, start, disableNested) {
            var level, found, marker, prevPos, labelEnd = -1, max = state.posMax, oldPos = state.pos;
            for (state.pos = start + 1, level = 1; state.pos < max; ) {
                if (93 === (marker = state.src.charCodeAt(state.pos)) && 0 == --level) {
                    found = !0;
                    break;
                }
                if (prevPos = state.pos, state.md.inline.skipToken(state), 91 === marker) if (prevPos === state.pos - 1) level++; else if (disableNested) return state.pos = oldPos, 
                -1;
            }
            return found && (labelEnd = state.pos), state.pos = oldPos, labelEnd;
        };
    },
    17094: function(module, __unused_webpack_exports, __webpack_require__) {
        "use strict";
        var unescapeAll = __webpack_require__(50195).unescapeAll;
        module.exports = function(str, pos, max) {
            var code, marker, lines = 0, start = pos, result = {
                ok: !1,
                pos: 0,
                lines: 0,
                str: ""
            };
            if (pos >= max) return result;
            if (34 !== (marker = str.charCodeAt(pos)) && 39 !== marker && 40 !== marker) return result;
            for (pos++, 40 === marker && (marker = 41); pos < max; ) {
                if ((code = str.charCodeAt(pos)) === marker) return result.pos = pos + 1, result.lines = lines, 
                result.str = unescapeAll(str.slice(start + 1, pos)), result.ok = !0, result;
                if (40 === code && 41 === marker) return result;
                10 === code ? lines++ : 92 === code && pos + 1 < max && (pos++, 10 === str.charCodeAt(pos) && lines++), 
                pos++;
            }
            return result;
        };
    },
    5161: function(module, __unused_webpack_exports, __webpack_require__) {
        "use strict";
        var utils = __webpack_require__(50195), helpers = __webpack_require__(84563), Renderer = __webpack_require__(1614), ParserCore = __webpack_require__(73733), ParserBlock = __webpack_require__(13472), ParserInline = __webpack_require__(29924), LinkifyIt = __webpack_require__(5637), mdurl = __webpack_require__(30229), punycode = __webpack_require__(38648), config = {
            default: __webpack_require__(8585),
            zero: __webpack_require__(27229),
            commonmark: __webpack_require__(84922)
        }, BAD_PROTO_RE = /^(vbscript|javascript|file|data):/, GOOD_DATA_RE = /^data:image\/(gif|png|jpeg|webp);/;
        function validateLink(url) {
            var str = url.trim().toLowerCase();
            return !BAD_PROTO_RE.test(str) || !!GOOD_DATA_RE.test(str);
        }
        var RECODE_HOSTNAME_FOR = [ "http:", "https:", "mailto:" ];
        function normalizeLink(url) {
            var parsed = mdurl.parse(url, !0);
            if (parsed.hostname && (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0)) try {
                parsed.hostname = punycode.toASCII(parsed.hostname);
            } catch (er) {}
            return mdurl.encode(mdurl.format(parsed));
        }
        function normalizeLinkText(url) {
            var parsed = mdurl.parse(url, !0);
            if (parsed.hostname && (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0)) try {
                parsed.hostname = punycode.toUnicode(parsed.hostname);
            } catch (er) {}
            return mdurl.decode(mdurl.format(parsed), mdurl.decode.defaultChars + "%");
        }
        function MarkdownIt(presetName, options) {
            if (!(this instanceof MarkdownIt)) return new MarkdownIt(presetName, options);
            options || utils.isString(presetName) || (options = presetName || {}, presetName = "default"), 
            this.inline = new ParserInline, this.block = new ParserBlock, this.core = new ParserCore, 
            this.renderer = new Renderer, this.linkify = new LinkifyIt, this.validateLink = validateLink, 
            this.normalizeLink = normalizeLink, this.normalizeLinkText = normalizeLinkText, 
            this.utils = utils, this.helpers = utils.assign({}, helpers), this.options = {}, 
            this.configure(presetName), options && this.set(options);
        }
        MarkdownIt.prototype.set = function(options) {
            return utils.assign(this.options, options), this;
        }, MarkdownIt.prototype.configure = function(presets) {
            var presetName, self = this;
            if (utils.isString(presets) && !(presets = config[presetName = presets])) throw new Error('Wrong `markdown-it` preset "' + presetName + '", check name');
            if (!presets) throw new Error("Wrong `markdown-it` preset, can't be empty");
            return presets.options && self.set(presets.options), presets.components && Object.keys(presets.components).forEach(function(name) {
                presets.components[name].rules && self[name].ruler.enableOnly(presets.components[name].rules), 
                presets.components[name].rules2 && self[name].ruler2.enableOnly(presets.components[name].rules2);
            }), this;
        }, MarkdownIt.prototype.enable = function(list, ignoreInvalid) {
            var result = [];
            Array.isArray(list) || (list = [ list ]), [ "core", "block", "inline" ].forEach(function(chain) {
                result = result.concat(this[chain].ruler.enable(list, !0));
            }, this), result = result.concat(this.inline.ruler2.enable(list, !0));
            var missed = list.filter(function(name) {
                return result.indexOf(name) < 0;
            });
            if (missed.length && !ignoreInvalid) throw new Error("MarkdownIt. Failed to enable unknown rule(s): " + missed);
            return this;
        }, MarkdownIt.prototype.disable = function(list, ignoreInvalid) {
            var result = [];
            Array.isArray(list) || (list = [ list ]), [ "core", "block", "inline" ].forEach(function(chain) {
                result = result.concat(this[chain].ruler.disable(list, !0));
            }, this), result = result.concat(this.inline.ruler2.disable(list, !0));
            var missed = list.filter(function(name) {
                return result.indexOf(name) < 0;
            });
            if (missed.length && !ignoreInvalid) throw new Error("MarkdownIt. Failed to disable unknown rule(s): " + missed);
            return this;
        }, MarkdownIt.prototype.use = function(plugin) {
            var args = [ this ].concat(Array.prototype.slice.call(arguments, 1));
            return plugin.apply(plugin, args), this;
        }, MarkdownIt.prototype.parse = function(src, env) {
            if ("string" != typeof src) throw new Error("Input data should be a String");
            var state = new this.core.State(src, this, env);
            return this.core.process(state), state.tokens;
        }, MarkdownIt.prototype.render = function(src, env) {
            return this.renderer.render(this.parse(src, env = env || {}), this.options, env);
        }, MarkdownIt.prototype.parseInline = function(src, env) {
            var state = new this.core.State(src, this, env);
            return state.inlineMode = !0, this.core.process(state), state.tokens;
        }, MarkdownIt.prototype.renderInline = function(src, env) {
            return this.renderer.render(this.parseInline(src, env = env || {}), this.options, env);
        }, module.exports = MarkdownIt;
    },
    13472: function(module, __unused_webpack_exports, __webpack_require__) {
        "use strict";
        var Ruler = __webpack_require__(67037), _rules = [ [ "table", __webpack_require__(36185), [ "paragraph", "reference" ] ], [ "code", __webpack_require__(93061) ], [ "fence", __webpack_require__(81915), [ "paragraph", "reference", "blockquote", "list" ] ], [ "blockquote", __webpack_require__(88889), [ "paragraph", "reference", "blockquote", "list" ] ], [ "hr", __webpack_require__(80215), [ "paragraph", "reference", "blockquote", "list" ] ], [ "list", __webpack_require__(54950), [ "paragraph", "reference", "blockquote" ] ], [ "reference", __webpack_require__(87257) ], [ "html_block", __webpack_require__(53019), [ "paragraph", "reference", "blockquote" ] ], [ "heading", __webpack_require__(4576), [ "paragraph", "reference", "blockquote" ] ], [ "lheading", __webpack_require__(75657) ], [ "paragraph", __webpack_require__(8143) ] ];
        function ParserBlock() {
            this.ruler = new Ruler;
            for (var i = 0; i < _rules.length; i++) this.ruler.push(_rules[i][0], _rules[i][1], {
                alt: (_rules[i][2] || []).slice()
            });
        }
        ParserBlock.prototype.tokenize = function(state, startLine, endLine) {
            for (var i, rules = this.ruler.getRules(""), len = rules.length, line = startLine, hasEmptyLines = !1, maxNesting = state.md.options.maxNesting; line < endLine && (state.line = line = state.skipEmptyLines(line), 
            !(line >= endLine)) && !(state.sCount[line] < state.blkIndent); ) {
                if (state.level >= maxNesting) {
                    state.line = endLine;
                    break;
                }
                for (i = 0; i < len && !rules[i](state, line, endLine, !1); i++) ;
                state.tight = !hasEmptyLines, state.isEmpty(state.line - 1) && (hasEmptyLines = !0), 
                (line = state.line) < endLine && state.isEmpty(line) && (hasEmptyLines = !0, line++, 
                state.line = line);
            }
        }, ParserBlock.prototype.parse = function(src, md, env, outTokens) {
            var state;
            src && (state = new this.State(src, md, env, outTokens), this.tokenize(state, state.line, state.lineMax));
        }, ParserBlock.prototype.State = __webpack_require__(80272), module.exports = ParserBlock;
    },
    73733: function(module, __unused_webpack_exports, __webpack_require__) {
        "use strict";
        var Ruler = __webpack_require__(67037), _rules = [ [ "normalize", __webpack_require__(5665) ], [ "block", __webpack_require__(20715) ], [ "inline", __webpack_require__(71953) ], [ "linkify", __webpack_require__(44558) ], [ "replacements", __webpack_require__(84586) ], [ "smartquotes", __webpack_require__(38028) ] ];
        function Core() {
            this.ruler = new Ruler;
            for (var i = 0; i < _rules.length; i++) this.ruler.push(_rules[i][0], _rules[i][1]);
        }
        Core.prototype.process = function(state) {
            var i, l, rules;
            for (i = 0, l = (rules = this.ruler.getRules("")).length; i < l; i++) rules[i](state);
        }, Core.prototype.State = __webpack_require__(9849), module.exports = Core;
    },
    29924: function(module, __unused_webpack_exports, __webpack_require__) {
        "use strict";
        var Ruler = __webpack_require__(67037), _rules = [ [ "text", __webpack_require__(8670) ], [ "newline", __webpack_require__(38184) ], [ "escape", __webpack_require__(19167) ], [ "backticks", __webpack_require__(97286) ], [ "strikethrough", __webpack_require__(62501).w ], [ "emphasis", __webpack_require__(63792).w ], [ "link", __webpack_require__(65617) ], [ "image", __webpack_require__(61527) ], [ "autolink", __webpack_require__(49133) ], [ "html_inline", __webpack_require__(68237) ], [ "entity", __webpack_require__(69022) ] ], _rules2 = [ [ "balance_pairs", __webpack_require__(87463) ], [ "strikethrough", __webpack_require__(62501).g ], [ "emphasis", __webpack_require__(63792).g ], [ "text_collapse", __webpack_require__(86071) ] ];
        function ParserInline() {
            var i;
            for (this.ruler = new Ruler, i = 0; i < _rules.length; i++) this.ruler.push(_rules[i][0], _rules[i][1]);
            for (this.ruler2 = new Ruler, i = 0; i < _rules2.length; i++) this.ruler2.push(_rules2[i][0], _rules2[i][1]);
        }
        ParserInline.prototype.skipToken = function(state) {
            var ok, i, pos = state.pos, rules = this.ruler.getRules(""), len = rules.length, cache = state.cache;
            if (void 0 === cache[pos]) {
                if (state.level < state.md.options.maxNesting) for (i = 0; i < len && (state.level++, 
                ok = rules[i](state, !0), state.level--, !ok); i++) ; else state.pos = state.posMax;
                ok || state.pos++, cache[pos] = state.pos;
            } else state.pos = cache[pos];
        }, ParserInline.prototype.tokenize = function(state) {
            for (var ok, i, rules = this.ruler.getRules(""), len = rules.length, end = state.posMax, maxNesting = state.md.options.maxNesting; state.pos < end; ) {
                if (state.level < maxNesting) for (i = 0; i < len && !(ok = rules[i](state, !1)); i++) ;
                if (ok) {
                    if (state.pos >= end) break;
                } else state.pending += state.src[state.pos++];
            }
            state.pending && state.pushPending();
        }, ParserInline.prototype.parse = function(str, md, env, outTokens) {
            var i, rules, len, state = new this.State(str, md, env, outTokens);
            for (this.tokenize(state), len = (rules = this.ruler2.getRules("")).length, i = 0; i < len; i++) rules[i](state);
        }, ParserInline.prototype.State = __webpack_require__(85547), module.exports = ParserInline;
    },
    84922: function(module) {
        "use strict";
        module.exports = {
            options: {
                html: !0,
                xhtmlOut: !0,
                breaks: !1,
                langPrefix: "language-",
                linkify: !1,
                typographer: !1,
                quotes: "\u201c\u201d\u2018\u2019",
                highlight: null,
                maxNesting: 20
            },
            components: {
                core: {
                    rules: [ "normalize", "block", "inline" ]
                },
                block: {
                    rules: [ "blockquote", "code", "fence", "heading", "hr", "html_block", "lheading", "list", "reference", "paragraph" ]
                },
                inline: {
                    rules: [ "autolink", "backticks", "emphasis", "entity", "escape", "html_inline", "image", "link", "newline", "text" ],
                    rules2: [ "balance_pairs", "emphasis", "text_collapse" ]
                }
            }
        };
    },
    8585: function(module) {
        "use strict";
        module.exports = {
            options: {
                html: !1,
                xhtmlOut: !1,
                breaks: !1,
                langPrefix: "language-",
                linkify: !1,
                typographer: !1,
                quotes: "\u201c\u201d\u2018\u2019",
                highlight: null,
                maxNesting: 100
            },
            components: {
                core: {},
                block: {},
                inline: {}
            }
        };
    },
    27229: function(module) {
        "use strict";
        module.exports = {
            options: {
                html: !1,
                xhtmlOut: !1,
                breaks: !1,
                langPrefix: "language-",
                linkify: !1,
                typographer: !1,
                quotes: "\u201c\u201d\u2018\u2019",
                highlight: null,
                maxNesting: 20
            },
            components: {
                core: {
                    rules: [ "normalize", "block", "inline" ]
                },
                block: {
                    rules: [ "paragraph" ]
                },
                inline: {
                    rules: [ "text" ],
                    rules2: [ "balance_pairs", "text_collapse" ]
                }
            }
        };
    },
    1614: function(module, __unused_webpack_exports, __webpack_require__) {
        "use strict";
        var assign = __webpack_require__(50195).assign, unescapeAll = __webpack_require__(50195).unescapeAll, escapeHtml = __webpack_require__(50195).escapeHtml, default_rules = {};
        function Renderer() {
            this.rules = assign({}, default_rules);
        }
        default_rules.code_inline = function(tokens, idx, options, env, slf) {
            return "<code" + slf.renderAttrs(tokens[idx]) + ">" + escapeHtml(tokens[idx].content) + "</code>";
        }, default_rules.code_block = function(tokens, idx, options, env, slf) {
            return "<pre" + slf.renderAttrs(tokens[idx]) + "><code>" + escapeHtml(tokens[idx].content) + "</code></pre>\n";
        }, default_rules.fence = function(tokens, idx, options, env, slf) {
            var highlighted, i, arr, tmpAttrs, token = tokens[idx], info = token.info ? unescapeAll(token.info).trim() : "", langName = "", langAttrs = "";
            return info && (langName = (arr = info.split(/(\s+)/g))[0], langAttrs = arr.slice(2).join("")), 
            0 === (highlighted = options.highlight && options.highlight(token.content, langName, langAttrs) || escapeHtml(token.content)).indexOf("<pre") ? highlighted + "\n" : info ? (i = token.attrIndex("class"), 
            tmpAttrs = token.attrs ? token.attrs.slice() : [], i < 0 ? tmpAttrs.push([ "class", options.langPrefix + langName ]) : (tmpAttrs[i] = tmpAttrs[i].slice(), 
            tmpAttrs[i][1] += " " + options.langPrefix + langName), "<pre><code" + slf.renderAttrs({
                attrs: tmpAttrs
            }) + ">" + highlighted + "</code></pre>\n") : "<pre><code" + slf.renderAttrs(token) + ">" + highlighted + "</code></pre>\n";
        }, default_rules.image = function(tokens, idx, options, env, slf) {
            var token = tokens[idx];
            return token.attrs[token.attrIndex("alt")][1] = slf.renderInlineAsText(token.children, options, env), 
            slf.renderToken(tokens, idx, options);
        }, default_rules.hardbreak = function(tokens, idx, options) {
            return options.xhtmlOut ? "<br />\n" : "<br>\n";
        }, default_rules.softbreak = function(tokens, idx, options) {
            return options.breaks ? options.xhtmlOut ? "<br />\n" : "<br>\n" : "\n";
        }, default_rules.text = function(tokens, idx) {
            return escapeHtml(tokens[idx].content);
        }, default_rules.html_block = function(tokens, idx) {
            return tokens[idx].content;
        }, default_rules.html_inline = function(tokens, idx) {
            return tokens[idx].content;
        }, Renderer.prototype.renderAttrs = function(token) {
            var i, l, result;
            if (!token.attrs) return "";
            for (result = "", i = 0, l = token.attrs.length; i < l; i++) result += " " + escapeHtml(token.attrs[i][0]) + '="' + escapeHtml(token.attrs[i][1]) + '"';
            return result;
        }, Renderer.prototype.renderToken = function(tokens, idx, options) {
            var nextToken, result = "", needLf = !1, token = tokens[idx];
            return token.hidden ? "" : (token.block && -1 !== token.nesting && idx && tokens[idx - 1].hidden && (result += "\n"), 
            result += (-1 === token.nesting ? "</" : "<") + token.tag, result += this.renderAttrs(token), 
            0 === token.nesting && options.xhtmlOut && (result += " /"), token.block && (needLf = !0, 
            1 === token.nesting && idx + 1 < tokens.length && ("inline" === (nextToken = tokens[idx + 1]).type || nextToken.hidden || -1 === nextToken.nesting && nextToken.tag === token.tag) && (needLf = !1)), 
            result += needLf ? ">\n" : ">");
        }, Renderer.prototype.renderInline = function(tokens, options, env) {
            for (var type, result = "", rules = this.rules, i = 0, len = tokens.length; i < len; i++) result += void 0 !== rules[type = tokens[i].type] ? rules[type](tokens, i, options, env, this) : this.renderToken(tokens, i, options);
            return result;
        }, Renderer.prototype.renderInlineAsText = function(tokens, options, env) {
            for (var result = "", i = 0, len = tokens.length; i < len; i++) "text" === tokens[i].type ? result += tokens[i].content : "image" === tokens[i].type ? result += this.renderInlineAsText(tokens[i].children, options, env) : "softbreak" === tokens[i].type && (result += "\n");
            return result;
        }, Renderer.prototype.render = function(tokens, options, env) {
            var i, len, type, result = "", rules = this.rules;
            for (i = 0, len = tokens.length; i < len; i++) result += "inline" === (type = tokens[i].type) ? this.renderInline(tokens[i].children, options, env) : void 0 !== rules[type] ? rules[tokens[i].type](tokens, i, options, env, this) : this.renderToken(tokens, i, options, env);
            return result;
        }, module.exports = Renderer;
    },
    67037: function(module) {
        "use strict";
        function Ruler() {
            this.__rules__ = [], this.__cache__ = null;
        }
        Ruler.prototype.__find__ = function(name) {
            for (var i = 0; i < this.__rules__.length; i++) if (this.__rules__[i].name === name) return i;
            return -1;
        }, Ruler.prototype.__compile__ = function() {
            var self = this, chains = [ "" ];
            self.__rules__.forEach(function(rule) {
                rule.enabled && rule.alt.forEach(function(altName) {
                    chains.indexOf(altName) < 0 && chains.push(altName);
                });
            }), self.__cache__ = {}, chains.forEach(function(chain) {
                self.__cache__[chain] = [], self.__rules__.forEach(function(rule) {
                    rule.enabled && (chain && rule.alt.indexOf(chain) < 0 || self.__cache__[chain].push(rule.fn));
                });
            });
        }, Ruler.prototype.at = function(name, fn, options) {
            var index = this.__find__(name), opt = options || {};
            if (-1 === index) throw new Error("Parser rule not found: " + name);
            this.__rules__[index].fn = fn, this.__rules__[index].alt = opt.alt || [], this.__cache__ = null;
        }, Ruler.prototype.before = function(beforeName, ruleName, fn, options) {
            var index = this.__find__(beforeName), opt = options || {};
            if (-1 === index) throw new Error("Parser rule not found: " + beforeName);
            this.__rules__.splice(index, 0, {
                name: ruleName,
                enabled: !0,
                fn,
                alt: opt.alt || []
            }), this.__cache__ = null;
        }, Ruler.prototype.after = function(afterName, ruleName, fn, options) {
            var index = this.__find__(afterName), opt = options || {};
            if (-1 === index) throw new Error("Parser rule not found: " + afterName);
            this.__rules__.splice(index + 1, 0, {
                name: ruleName,
                enabled: !0,
                fn,
                alt: opt.alt || []
            }), this.__cache__ = null;
        }, Ruler.prototype.push = function(ruleName, fn, options) {
            this.__rules__.push({
                name: ruleName,
                enabled: !0,
                fn,
                alt: (options || {}).alt || []
            }), this.__cache__ = null;
        }, Ruler.prototype.enable = function(list, ignoreInvalid) {
            Array.isArray(list) || (list = [ list ]);
            var result = [];
            return list.forEach(function(name) {
                var idx = this.__find__(name);
                if (idx < 0) {
                    if (ignoreInvalid) return;
                    throw new Error("Rules manager: invalid rule name " + name);
                }
                this.__rules__[idx].enabled = !0, result.push(name);
            }, this), this.__cache__ = null, result;
        }, Ruler.prototype.enableOnly = function(list, ignoreInvalid) {
            Array.isArray(list) || (list = [ list ]), this.__rules__.forEach(function(rule) {
                rule.enabled = !1;
            }), this.enable(list, ignoreInvalid);
        }, Ruler.prototype.disable = function(list, ignoreInvalid) {
            Array.isArray(list) || (list = [ list ]);
            var result = [];
            return list.forEach(function(name) {
                var idx = this.__find__(name);
                if (idx < 0) {
                    if (ignoreInvalid) return;
                    throw new Error("Rules manager: invalid rule name " + name);
                }
                this.__rules__[idx].enabled = !1, result.push(name);
            }, this), this.__cache__ = null, result;
        }, Ruler.prototype.getRules = function(chainName) {
            return null === this.__cache__ && this.__compile__(), this.__cache__[chainName] || [];
        }, module.exports = Ruler;
    },
    88889: function(module, __unused_webpack_exports, __webpack_require__) {
        "use strict";
        var isSpace = __webpack_require__(50195).isSpace;
        module.exports = function(state, startLine, endLine, silent) {
            var adjustTab, ch, i, initial, l, lastLineEmpty, lines, nextLine, offset, oldBMarks, oldBSCount, oldIndent, oldParentType, oldSCount, oldTShift, spaceAfterMarker, terminate, terminatorRules, token, isOutdented, oldLineMax = state.lineMax, pos = state.bMarks[startLine] + state.tShift[startLine], max = state.eMarks[startLine];
            if (state.sCount[startLine] - state.blkIndent >= 4) return !1;
            if (62 !== state.src.charCodeAt(pos++)) return !1;
            if (silent) return !0;
            for (initial = offset = state.sCount[startLine] + 1, 32 === state.src.charCodeAt(pos) ? (pos++, 
            initial++, offset++, adjustTab = !1, spaceAfterMarker = !0) : 9 === state.src.charCodeAt(pos) ? (spaceAfterMarker = !0, 
            (state.bsCount[startLine] + offset) % 4 == 3 ? (pos++, initial++, offset++, adjustTab = !1) : adjustTab = !0) : spaceAfterMarker = !1, 
            oldBMarks = [ state.bMarks[startLine] ], state.bMarks[startLine] = pos; pos < max && (ch = state.src.charCodeAt(pos), 
            isSpace(ch)); ) 9 === ch ? offset += 4 - (offset + state.bsCount[startLine] + (adjustTab ? 1 : 0)) % 4 : offset++, 
            pos++;
            for (oldBSCount = [ state.bsCount[startLine] ], state.bsCount[startLine] = state.sCount[startLine] + 1 + (spaceAfterMarker ? 1 : 0), 
            lastLineEmpty = pos >= max, oldSCount = [ state.sCount[startLine] ], state.sCount[startLine] = offset - initial, 
            oldTShift = [ state.tShift[startLine] ], state.tShift[startLine] = pos - state.bMarks[startLine], 
            terminatorRules = state.md.block.ruler.getRules("blockquote"), oldParentType = state.parentType, 
            state.parentType = "blockquote", nextLine = startLine + 1; nextLine < endLine && (isOutdented = state.sCount[nextLine] < state.blkIndent, 
            !((pos = state.bMarks[nextLine] + state.tShift[nextLine]) >= (max = state.eMarks[nextLine]))); nextLine++) if (62 !== state.src.charCodeAt(pos++) || isOutdented) {
                if (lastLineEmpty) break;
                for (terminate = !1, i = 0, l = terminatorRules.length; i < l; i++) if (terminatorRules[i](state, nextLine, endLine, !0)) {
                    terminate = !0;
                    break;
                }
                if (terminate) {
                    state.lineMax = nextLine, 0 !== state.blkIndent && (oldBMarks.push(state.bMarks[nextLine]), 
                    oldBSCount.push(state.bsCount[nextLine]), oldTShift.push(state.tShift[nextLine]), 
                    oldSCount.push(state.sCount[nextLine]), state.sCount[nextLine] -= state.blkIndent);
                    break;
                }
                oldBMarks.push(state.bMarks[nextLine]), oldBSCount.push(state.bsCount[nextLine]), 
                oldTShift.push(state.tShift[nextLine]), oldSCount.push(state.sCount[nextLine]), 
                state.sCount[nextLine] = -1;
            } else {
                for (initial = offset = state.sCount[nextLine] + 1, 32 === state.src.charCodeAt(pos) ? (pos++, 
                initial++, offset++, adjustTab = !1, spaceAfterMarker = !0) : 9 === state.src.charCodeAt(pos) ? (spaceAfterMarker = !0, 
                (state.bsCount[nextLine] + offset) % 4 == 3 ? (pos++, initial++, offset++, adjustTab = !1) : adjustTab = !0) : spaceAfterMarker = !1, 
                oldBMarks.push(state.bMarks[nextLine]), state.bMarks[nextLine] = pos; pos < max && (ch = state.src.charCodeAt(pos), 
                isSpace(ch)); ) 9 === ch ? offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4 : offset++, 
                pos++;
                lastLineEmpty = pos >= max, oldBSCount.push(state.bsCount[nextLine]), state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0), 
                oldSCount.push(state.sCount[nextLine]), state.sCount[nextLine] = offset - initial, 
                oldTShift.push(state.tShift[nextLine]), state.tShift[nextLine] = pos - state.bMarks[nextLine];
            }
            for (oldIndent = state.blkIndent, state.blkIndent = 0, (token = state.push("blockquote_open", "blockquote", 1)).markup = ">", 
            token.map = lines = [ startLine, 0 ], state.md.block.tokenize(state, startLine, nextLine), 
            (token = state.push("blockquote_close", "blockquote", -1)).markup = ">", state.lineMax = oldLineMax, 
            state.parentType = oldParentType, lines[1] = state.line, i = 0; i < oldTShift.length; i++) state.bMarks[i + startLine] = oldBMarks[i], 
            state.tShift[i + startLine] = oldTShift[i], state.sCount[i + startLine] = oldSCount[i], 
            state.bsCount[i + startLine] = oldBSCount[i];
            return state.blkIndent = oldIndent, !0;
        };
    },
    93061: function(module) {
        "use strict";
        module.exports = function(state, startLine, endLine) {
            var nextLine, last, token;
            if (state.sCount[startLine] - state.blkIndent < 4) return !1;
            for (last = nextLine = startLine + 1; nextLine < endLine; ) if (state.isEmpty(nextLine)) nextLine++; else {
                if (!(state.sCount[nextLine] - state.blkIndent >= 4)) break;
                last = ++nextLine;
            }
            return state.line = last, (token = state.push("code_block", "code", 0)).content = state.getLines(startLine, last, 4 + state.blkIndent, !1) + "\n", 
            token.map = [ startLine, state.line ], !0;
        };
    },
    81915: function(module) {
        "use strict";
        module.exports = function(state, startLine, endLine, silent) {
            var marker, len, params, nextLine, mem, token, markup, haveEndMarker = !1, pos = state.bMarks[startLine] + state.tShift[startLine], max = state.eMarks[startLine];
            if (state.sCount[startLine] - state.blkIndent >= 4) return !1;
            if (pos + 3 > max) return !1;
            if (126 !== (marker = state.src.charCodeAt(pos)) && 96 !== marker) return !1;
            if (mem = pos, (len = (pos = state.skipChars(pos, marker)) - mem) < 3) return !1;
            if (markup = state.src.slice(mem, pos), params = state.src.slice(pos, max), 96 === marker && params.indexOf(String.fromCharCode(marker)) >= 0) return !1;
            if (silent) return !0;
            for (nextLine = startLine; !(++nextLine >= endLine || (pos = mem = state.bMarks[nextLine] + state.tShift[nextLine]) < (max = state.eMarks[nextLine]) && state.sCount[nextLine] < state.blkIndent); ) if (state.src.charCodeAt(pos) === marker && !(state.sCount[nextLine] - state.blkIndent >= 4 || (pos = state.skipChars(pos, marker)) - mem < len || (pos = state.skipSpaces(pos)) < max)) {
                haveEndMarker = !0;
                break;
            }
            return len = state.sCount[startLine], state.line = nextLine + (haveEndMarker ? 1 : 0), 
            (token = state.push("fence", "code", 0)).info = params, token.content = state.getLines(startLine + 1, nextLine, len, !0), 
            token.markup = markup, token.map = [ startLine, state.line ], !0;
        };
    },
    4576: function(module, __unused_webpack_exports, __webpack_require__) {
        "use strict";
        var isSpace = __webpack_require__(50195).isSpace;
        module.exports = function(state, startLine, endLine, silent) {
            var ch, level, tmp, token, pos = state.bMarks[startLine] + state.tShift[startLine], max = state.eMarks[startLine];
            if (state.sCount[startLine] - state.blkIndent >= 4) return !1;
            if (35 !== (ch = state.src.charCodeAt(pos)) || pos >= max) return !1;
            for (level = 1, ch = state.src.charCodeAt(++pos); 35 === ch && pos < max && level <= 6; ) level++, 
            ch = state.src.charCodeAt(++pos);
            return !(level > 6 || pos < max && !isSpace(ch) || (silent || (max = state.skipSpacesBack(max, pos), 
            (tmp = state.skipCharsBack(max, 35, pos)) > pos && isSpace(state.src.charCodeAt(tmp - 1)) && (max = tmp), 
            state.line = startLine + 1, (token = state.push("heading_open", "h" + String(level), 1)).markup = "########".slice(0, level), 
            token.map = [ startLine, state.line ], (token = state.push("inline", "", 0)).content = state.src.slice(pos, max).trim(), 
            token.map = [ startLine, state.line ], token.children = [], (token = state.push("heading_close", "h" + String(level), -1)).markup = "########".slice(0, level)), 
            0));
        };
    },
    80215: function(module, __unused_webpack_exports, __webpack_require__) {
        "use strict";
        var isSpace = __webpack_require__(50195).isSpace;
        module.exports = function(state, startLine, endLine, silent) {
            var marker, cnt, ch, token, pos = state.bMarks[startLine] + state.tShift[startLine], max = state.eMarks[startLine];
            if (state.sCount[startLine] - state.blkIndent >= 4) return !1;
            if (42 !== (marker = state.src.charCodeAt(pos++)) && 45 !== marker && 95 !== marker) return !1;
            for (cnt = 1; pos < max; ) {
                if ((ch = state.src.charCodeAt(pos++)) !== marker && !isSpace(ch)) return !1;
                ch === marker && cnt++;
            }
            return !(cnt < 3 || (silent || (state.line = startLine + 1, (token = state.push("hr", "hr", 0)).map = [ startLine, state.line ], 
            token.markup = Array(cnt + 1).join(String.fromCharCode(marker))), 0));
        };
    },
    53019: function(module, __unused_webpack_exports, __webpack_require__) {
        "use strict";
        var block_names = __webpack_require__(28715), HTML_OPEN_CLOSE_TAG_RE = __webpack_require__(22289).q, HTML_SEQUENCES = [ [ /^<(script|pre|style|textarea)(?=(\s|>|$))/i, /<\/(script|pre|style|textarea)>/i, !0 ], [ /^<!--/, /-->/, !0 ], [ /^<\?/, /\?>/, !0 ], [ /^<![A-Z]/, />/, !0 ], [ /^<!\[CDATA\[/, /\]\]>/, !0 ], [ new RegExp("^</?(" + block_names.join("|") + ")(?=(\\s|/?>|$))", "i"), /^$/, !0 ], [ new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + "\\s*$"), /^$/, !1 ] ];
        module.exports = function(state, startLine, endLine, silent) {
            var i, nextLine, token, lineText, pos = state.bMarks[startLine] + state.tShift[startLine], max = state.eMarks[startLine];
            if (state.sCount[startLine] - state.blkIndent >= 4) return !1;
            if (!state.md.options.html) return !1;
            if (60 !== state.src.charCodeAt(pos)) return !1;
            for (lineText = state.src.slice(pos, max), i = 0; i < HTML_SEQUENCES.length && !HTML_SEQUENCES[i][0].test(lineText); i++) ;
            if (i === HTML_SEQUENCES.length) return !1;
            if (silent) return HTML_SEQUENCES[i][2];
            if (nextLine = startLine + 1, !HTML_SEQUENCES[i][1].test(lineText)) for (;nextLine < endLine && !(state.sCount[nextLine] < state.blkIndent); nextLine++) if (lineText = state.src.slice(pos = state.bMarks[nextLine] + state.tShift[nextLine], max = state.eMarks[nextLine]), 
            HTML_SEQUENCES[i][1].test(lineText)) {
                0 !== lineText.length && nextLine++;
                break;
            }
            return state.line = nextLine, (token = state.push("html_block", "", 0)).map = [ startLine, nextLine ], 
            token.content = state.getLines(startLine, nextLine, state.blkIndent, !0), !0;
        };
    },
    75657: function(module) {
        "use strict";
        module.exports = function(state, startLine, endLine) {
            var content, terminate, i, l, token, pos, max, level, marker, oldParentType, nextLine = startLine + 1, terminatorRules = state.md.block.ruler.getRules("paragraph");
            if (state.sCount[startLine] - state.blkIndent >= 4) return !1;
            for (oldParentType = state.parentType, state.parentType = "paragraph"; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) if (!(state.sCount[nextLine] - state.blkIndent > 3)) {
                if (state.sCount[nextLine] >= state.blkIndent && (pos = state.bMarks[nextLine] + state.tShift[nextLine]) < (max = state.eMarks[nextLine]) && (45 === (marker = state.src.charCodeAt(pos)) || 61 === marker) && (pos = state.skipChars(pos, marker), 
                (pos = state.skipSpaces(pos)) >= max)) {
                    level = 61 === marker ? 1 : 2;
                    break;
                }
                if (!(state.sCount[nextLine] < 0)) {
                    for (terminate = !1, i = 0, l = terminatorRules.length; i < l; i++) if (terminatorRules[i](state, nextLine, endLine, !0)) {
                        terminate = !0;
                        break;
                    }
                    if (terminate) break;
                }
            }
            return !!level && (content = state.getLines(startLine, nextLine, state.blkIndent, !1).trim(), 
            state.line = nextLine + 1, (token = state.push("heading_open", "h" + String(level), 1)).markup = String.fromCharCode(marker), 
            token.map = [ startLine, state.line ], (token = state.push("inline", "", 0)).content = content, 
            token.map = [ startLine, state.line - 1 ], token.children = [], (token = state.push("heading_close", "h" + String(level), -1)).markup = String.fromCharCode(marker), 
            state.parentType = oldParentType, !0);
        };
    },
    54950: function(module, __unused_webpack_exports, __webpack_require__) {
        "use strict";
        var isSpace = __webpack_require__(50195).isSpace;
        function skipBulletListMarker(state, startLine) {
            var marker, pos, max, ch;
            return pos = state.bMarks[startLine] + state.tShift[startLine], max = state.eMarks[startLine], 
            42 !== (marker = state.src.charCodeAt(pos++)) && 45 !== marker && 43 !== marker || pos < max && (ch = state.src.charCodeAt(pos), 
            !isSpace(ch)) ? -1 : pos;
        }
        function skipOrderedListMarker(state, startLine) {
            var ch, start = state.bMarks[startLine] + state.tShift[startLine], pos = start, max = state.eMarks[startLine];
            if (pos + 1 >= max) return -1;
            if ((ch = state.src.charCodeAt(pos++)) < 48 || ch > 57) return -1;
            for (;;) {
                if (pos >= max) return -1;
                if (!((ch = state.src.charCodeAt(pos++)) >= 48 && ch <= 57)) {
                    if (41 === ch || 46 === ch) break;
                    return -1;
                }
                if (pos - start >= 10) return -1;
            }
            return pos < max && (ch = state.src.charCodeAt(pos), !isSpace(ch)) ? -1 : pos;
        }
        module.exports = function(state, startLine, endLine, silent) {
            var ch, contentStart, i, indent, indentAfterMarker, initial, isOrdered, itemLines, l, listLines, listTokIdx, markerCharCode, markerValue, max, nextLine, offset, oldListIndent, oldParentType, oldSCount, oldTShift, oldTight, pos, posAfterMarker, prevEmptyEnd, start, terminate, terminatorRules, token, isTerminatingParagraph = !1, tight = !0;
            if (state.sCount[startLine] - state.blkIndent >= 4) return !1;
            if (state.listIndent >= 0 && state.sCount[startLine] - state.listIndent >= 4 && state.sCount[startLine] < state.blkIndent) return !1;
            if (silent && "paragraph" === state.parentType && state.sCount[startLine] >= state.blkIndent && (isTerminatingParagraph = !0), 
            (posAfterMarker = skipOrderedListMarker(state, startLine)) >= 0) {
                if (isOrdered = !0, start = state.bMarks[startLine] + state.tShift[startLine], markerValue = Number(state.src.slice(start, posAfterMarker - 1)), 
                isTerminatingParagraph && 1 !== markerValue) return !1;
            } else {
                if (!((posAfterMarker = skipBulletListMarker(state, startLine)) >= 0)) return !1;
                isOrdered = !1;
            }
            if (isTerminatingParagraph && state.skipSpaces(posAfterMarker) >= state.eMarks[startLine]) return !1;
            if (markerCharCode = state.src.charCodeAt(posAfterMarker - 1), silent) return !0;
            for (listTokIdx = state.tokens.length, isOrdered ? (token = state.push("ordered_list_open", "ol", 1), 
            1 !== markerValue && (token.attrs = [ [ "start", markerValue ] ])) : token = state.push("bullet_list_open", "ul", 1), 
            token.map = listLines = [ startLine, 0 ], token.markup = String.fromCharCode(markerCharCode), 
            nextLine = startLine, prevEmptyEnd = !1, terminatorRules = state.md.block.ruler.getRules("list"), 
            oldParentType = state.parentType, state.parentType = "list"; nextLine < endLine; ) {
                for (pos = posAfterMarker, max = state.eMarks[nextLine], initial = offset = state.sCount[nextLine] + posAfterMarker - (state.bMarks[startLine] + state.tShift[startLine]); pos < max; ) {
                    if (9 === (ch = state.src.charCodeAt(pos))) offset += 4 - (offset + state.bsCount[nextLine]) % 4; else {
                        if (32 !== ch) break;
                        offset++;
                    }
                    pos++;
                }
                if ((indentAfterMarker = (contentStart = pos) >= max ? 1 : offset - initial) > 4 && (indentAfterMarker = 1), 
                indent = initial + indentAfterMarker, (token = state.push("list_item_open", "li", 1)).markup = String.fromCharCode(markerCharCode), 
                token.map = itemLines = [ startLine, 0 ], isOrdered && (token.info = state.src.slice(start, posAfterMarker - 1)), 
                oldTight = state.tight, oldTShift = state.tShift[startLine], oldSCount = state.sCount[startLine], 
                oldListIndent = state.listIndent, state.listIndent = state.blkIndent, state.blkIndent = indent, 
                state.tight = !0, state.tShift[startLine] = contentStart - state.bMarks[startLine], 
                state.sCount[startLine] = offset, contentStart >= max && state.isEmpty(startLine + 1) ? state.line = Math.min(state.line + 2, endLine) : state.md.block.tokenize(state, startLine, endLine, !0), 
                state.tight && !prevEmptyEnd || (tight = !1), prevEmptyEnd = state.line - startLine > 1 && state.isEmpty(state.line - 1), 
                state.blkIndent = state.listIndent, state.listIndent = oldListIndent, state.tShift[startLine] = oldTShift, 
                state.sCount[startLine] = oldSCount, state.tight = oldTight, (token = state.push("list_item_close", "li", -1)).markup = String.fromCharCode(markerCharCode), 
                nextLine = startLine = state.line, itemLines[1] = nextLine, contentStart = state.bMarks[startLine], 
                nextLine >= endLine) break;
                if (state.sCount[nextLine] < state.blkIndent) break;
                if (state.sCount[startLine] - state.blkIndent >= 4) break;
                for (terminate = !1, i = 0, l = terminatorRules.length; i < l; i++) if (terminatorRules[i](state, nextLine, endLine, !0)) {
                    terminate = !0;
                    break;
                }
                if (terminate) break;
                if (isOrdered) {
                    if ((posAfterMarker = skipOrderedListMarker(state, nextLine)) < 0) break;
                    start = state.bMarks[nextLine] + state.tShift[nextLine];
                } else if ((posAfterMarker = skipBulletListMarker(state, nextLine)) < 0) break;
                if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) break;
            }
            return (token = isOrdered ? state.push("ordered_list_close", "ol", -1) : state.push("bullet_list_close", "ul", -1)).markup = String.fromCharCode(markerCharCode), 
            listLines[1] = nextLine, state.line = nextLine, state.parentType = oldParentType, 
            tight && function(state, idx) {
                var i, l, level = state.level + 2;
                for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) state.tokens[i].level === level && "paragraph_open" === state.tokens[i].type && (state.tokens[i + 2].hidden = !0, 
                state.tokens[i].hidden = !0, i += 2);
            }(state, listTokIdx), !0;
        };
    },
    8143: function(module) {
        "use strict";
        module.exports = function(state, startLine) {
            var content, terminate, i, l, token, oldParentType, nextLine = startLine + 1, terminatorRules = state.md.block.ruler.getRules("paragraph"), endLine = state.lineMax;
            for (oldParentType = state.parentType, state.parentType = "paragraph"; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) if (!(state.sCount[nextLine] - state.blkIndent > 3 || state.sCount[nextLine] < 0)) {
                for (terminate = !1, i = 0, l = terminatorRules.length; i < l; i++) if (terminatorRules[i](state, nextLine, endLine, !0)) {
                    terminate = !0;
                    break;
                }
                if (terminate) break;
            }
            return content = state.getLines(startLine, nextLine, state.blkIndent, !1).trim(), 
            state.line = nextLine, (token = state.push("paragraph_open", "p", 1)).map = [ startLine, state.line ], 
            (token = state.push("inline", "", 0)).content = content, token.map = [ startLine, state.line ], 
            token.children = [], token = state.push("paragraph_close", "p", -1), state.parentType = oldParentType, 
            !0;
        };
    },
    87257: function(module, __unused_webpack_exports, __webpack_require__) {
        "use strict";
        var normalizeReference = __webpack_require__(50195).normalizeReference, isSpace = __webpack_require__(50195).isSpace;
        module.exports = function(state, startLine, _endLine, silent) {
            var ch, destEndPos, destEndLineNo, endLine, href, i, l, label, labelEnd, oldParentType, res, start, str, terminate, terminatorRules, title, lines = 0, pos = state.bMarks[startLine] + state.tShift[startLine], max = state.eMarks[startLine], nextLine = startLine + 1;
            if (state.sCount[startLine] - state.blkIndent >= 4) return !1;
            if (91 !== state.src.charCodeAt(pos)) return !1;
            for (;++pos < max; ) if (93 === state.src.charCodeAt(pos) && 92 !== state.src.charCodeAt(pos - 1)) {
                if (pos + 1 === max) return !1;
                if (58 !== state.src.charCodeAt(pos + 1)) return !1;
                break;
            }
            for (endLine = state.lineMax, terminatorRules = state.md.block.ruler.getRules("reference"), 
            oldParentType = state.parentType, state.parentType = "reference"; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) if (!(state.sCount[nextLine] - state.blkIndent > 3 || state.sCount[nextLine] < 0)) {
                for (terminate = !1, i = 0, l = terminatorRules.length; i < l; i++) if (terminatorRules[i](state, nextLine, endLine, !0)) {
                    terminate = !0;
                    break;
                }
                if (terminate) break;
            }
            for (max = (str = state.getLines(startLine, nextLine, state.blkIndent, !1).trim()).length, 
            pos = 1; pos < max; pos++) {
                if (91 === (ch = str.charCodeAt(pos))) return !1;
                if (93 === ch) {
                    labelEnd = pos;
                    break;
                }
                (10 === ch || 92 === ch && ++pos < max && 10 === str.charCodeAt(pos)) && lines++;
            }
            if (labelEnd < 0 || 58 !== str.charCodeAt(labelEnd + 1)) return !1;
            for (pos = labelEnd + 2; pos < max; pos++) if (10 === (ch = str.charCodeAt(pos))) lines++; else if (!isSpace(ch)) break;
            if (!(res = state.md.helpers.parseLinkDestination(str, pos, max)).ok) return !1;
            if (href = state.md.normalizeLink(res.str), !state.md.validateLink(href)) return !1;
            for (destEndPos = pos = res.pos, destEndLineNo = lines += res.lines, start = pos; pos < max; pos++) if (10 === (ch = str.charCodeAt(pos))) lines++; else if (!isSpace(ch)) break;
            for (res = state.md.helpers.parseLinkTitle(str, pos, max), pos < max && start !== pos && res.ok ? (title = res.str, 
            pos = res.pos, lines += res.lines) : (title = "", pos = destEndPos, lines = destEndLineNo); pos < max && (ch = str.charCodeAt(pos), 
            isSpace(ch)); ) pos++;
            if (pos < max && 10 !== str.charCodeAt(pos) && title) for (title = "", pos = destEndPos, 
            lines = destEndLineNo; pos < max && (ch = str.charCodeAt(pos), isSpace(ch)); ) pos++;
            return !(pos < max && 10 !== str.charCodeAt(pos) || !(label = normalizeReference(str.slice(1, labelEnd))) || (silent || (void 0 === state.env.references && (state.env.references = {}), 
            void 0 === state.env.references[label] && (state.env.references[label] = {
                title,
                href
            }), state.parentType = oldParentType, state.line = startLine + lines + 1), 0));
        };
    },
    80272: function(module, __unused_webpack_exports, __webpack_require__) {
        "use strict";
        var Token = __webpack_require__(49384), isSpace = __webpack_require__(50195).isSpace;
        function StateBlock(src, md, env, tokens) {
            var ch, s, start, pos, len, indent, offset, indent_found;
            for (this.src = src, this.md = md, this.env = env, this.tokens = tokens, this.bMarks = [], 
            this.eMarks = [], this.tShift = [], this.sCount = [], this.bsCount = [], this.blkIndent = 0, 
            this.line = 0, this.lineMax = 0, this.tight = !1, this.ddIndent = -1, this.listIndent = -1, 
            this.parentType = "root", this.level = 0, this.result = "", indent_found = !1, start = pos = indent = offset = 0, 
            len = (s = this.src).length; pos < len; pos++) {
                if (ch = s.charCodeAt(pos), !indent_found) {
                    if (isSpace(ch)) {
                        indent++, 9 === ch ? offset += 4 - offset % 4 : offset++;
                        continue;
                    }
                    indent_found = !0;
                }
                10 !== ch && pos !== len - 1 || (10 !== ch && pos++, this.bMarks.push(start), this.eMarks.push(pos), 
                this.tShift.push(indent), this.sCount.push(offset), this.bsCount.push(0), indent_found = !1, 
                indent = 0, offset = 0, start = pos + 1);
            }
            this.bMarks.push(s.length), this.eMarks.push(s.length), this.tShift.push(0), this.sCount.push(0), 
            this.bsCount.push(0), this.lineMax = this.bMarks.length - 1;
        }
        StateBlock.prototype.push = function(type, tag, nesting) {
            var token = new Token(type, tag, nesting);
            return token.block = !0, nesting < 0 && this.level--, token.level = this.level, 
            nesting > 0 && this.level++, this.tokens.push(token), token;
        }, StateBlock.prototype.isEmpty = function(line) {
            return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];
        }, StateBlock.prototype.skipEmptyLines = function(from) {
            for (var max = this.lineMax; from < max && !(this.bMarks[from] + this.tShift[from] < this.eMarks[from]); from++) ;
            return from;
        }, StateBlock.prototype.skipSpaces = function(pos) {
            for (var ch, max = this.src.length; pos < max && (ch = this.src.charCodeAt(pos), 
            isSpace(ch)); pos++) ;
            return pos;
        }, StateBlock.prototype.skipSpacesBack = function(pos, min) {
            if (pos <= min) return pos;
            for (;pos > min; ) if (!isSpace(this.src.charCodeAt(--pos))) return pos + 1;
            return pos;
        }, StateBlock.prototype.skipChars = function(pos, code) {
            for (var max = this.src.length; pos < max && this.src.charCodeAt(pos) === code; pos++) ;
            return pos;
        }, StateBlock.prototype.skipCharsBack = function(pos, code, min) {
            if (pos <= min) return pos;
            for (;pos > min; ) if (code !== this.src.charCodeAt(--pos)) return pos + 1;
            return pos;
        }, StateBlock.prototype.getLines = function(begin, end, indent, keepLastLF) {
            var i, lineIndent, ch, first, last, queue, lineStart, line = begin;
            if (begin >= end) return "";
            for (queue = new Array(end - begin), i = 0; line < end; line++, i++) {
                for (lineIndent = 0, lineStart = first = this.bMarks[line], last = line + 1 < end || keepLastLF ? this.eMarks[line] + 1 : this.eMarks[line]; first < last && lineIndent < indent; ) {
                    if (ch = this.src.charCodeAt(first), isSpace(ch)) 9 === ch ? lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4 : lineIndent++; else {
                        if (!(first - lineStart < this.tShift[line])) break;
                        lineIndent++;
                    }
                    first++;
                }
                queue[i] = lineIndent > indent ? new Array(lineIndent - indent + 1).join(" ") + this.src.slice(first, last) : this.src.slice(first, last);
            }
            return queue.join("");
        }, StateBlock.prototype.Token = Token, module.exports = StateBlock;
    },
    36185: function(module, __unused_webpack_exports, __webpack_require__) {
        "use strict";
        var isSpace = __webpack_require__(50195).isSpace;
        function getLine(state, line) {
            var pos = state.bMarks[line] + state.tShift[line];
            return state.src.substr(pos, state.eMarks[line] - pos);
        }
        function escapedSplit(str) {
            var ch, result = [], pos = 0, max = str.length, isEscaped = !1, lastPos = 0, current = "";
            for (ch = str.charCodeAt(pos); pos < max; ) 124 === ch && (isEscaped ? (current += str.substring(lastPos, pos - 1), 
            lastPos = pos) : (result.push(current + str.substring(lastPos, pos)), current = "", 
            lastPos = pos + 1)), isEscaped = 92 === ch, pos++, ch = str.charCodeAt(pos);
            return result.push(current + str.substring(lastPos)), result;
        }
        module.exports = function(state, startLine, endLine, silent) {
            var ch, lineText, pos, i, l, nextLine, columns, columnCount, token, aligns, t, tableLines, tbodyLines, oldParentType, terminate, terminatorRules, firstCh, secondCh;
            if (startLine + 2 > endLine) return !1;
            if (state.sCount[nextLine = startLine + 1] < state.blkIndent) return !1;
            if (state.sCount[nextLine] - state.blkIndent >= 4) return !1;
            if ((pos = state.bMarks[nextLine] + state.tShift[nextLine]) >= state.eMarks[nextLine]) return !1;
            if (124 !== (firstCh = state.src.charCodeAt(pos++)) && 45 !== firstCh && 58 !== firstCh) return !1;
            if (pos >= state.eMarks[nextLine]) return !1;
            if (124 !== (secondCh = state.src.charCodeAt(pos++)) && 45 !== secondCh && 58 !== secondCh && !isSpace(secondCh)) return !1;
            if (45 === firstCh && isSpace(secondCh)) return !1;
            for (;pos < state.eMarks[nextLine]; ) {
                if (124 !== (ch = state.src.charCodeAt(pos)) && 45 !== ch && 58 !== ch && !isSpace(ch)) return !1;
                pos++;
            }
            for (columns = (lineText = getLine(state, startLine + 1)).split("|"), aligns = [], 
            i = 0; i < columns.length; i++) {
                if (!(t = columns[i].trim())) {
                    if (0 === i || i === columns.length - 1) continue;
                    return !1;
                }
                if (!/^:?-+:?$/.test(t)) return !1;
                58 === t.charCodeAt(t.length - 1) ? aligns.push(58 === t.charCodeAt(0) ? "center" : "right") : 58 === t.charCodeAt(0) ? aligns.push("left") : aligns.push("");
            }
            if (-1 === (lineText = getLine(state, startLine).trim()).indexOf("|")) return !1;
            if (state.sCount[startLine] - state.blkIndent >= 4) return !1;
            if ((columns = escapedSplit(lineText)).length && "" === columns[0] && columns.shift(), 
            columns.length && "" === columns[columns.length - 1] && columns.pop(), 0 === (columnCount = columns.length) || columnCount !== aligns.length) return !1;
            if (silent) return !0;
            for (oldParentType = state.parentType, state.parentType = "table", terminatorRules = state.md.block.ruler.getRules("blockquote"), 
            (token = state.push("table_open", "table", 1)).map = tableLines = [ startLine, 0 ], 
            (token = state.push("thead_open", "thead", 1)).map = [ startLine, startLine + 1 ], 
            (token = state.push("tr_open", "tr", 1)).map = [ startLine, startLine + 1 ], i = 0; i < columns.length; i++) token = state.push("th_open", "th", 1), 
            aligns[i] && (token.attrs = [ [ "style", "text-align:" + aligns[i] ] ]), (token = state.push("inline", "", 0)).content = columns[i].trim(), 
            token.children = [], token = state.push("th_close", "th", -1);
            for (token = state.push("tr_close", "tr", -1), token = state.push("thead_close", "thead", -1), 
            nextLine = startLine + 2; nextLine < endLine && !(state.sCount[nextLine] < state.blkIndent); nextLine++) {
                for (terminate = !1, i = 0, l = terminatorRules.length; i < l; i++) if (terminatorRules[i](state, nextLine, endLine, !0)) {
                    terminate = !0;
                    break;
                }
                if (terminate) break;
                if (!(lineText = getLine(state, nextLine).trim())) break;
                if (state.sCount[nextLine] - state.blkIndent >= 4) break;
                for ((columns = escapedSplit(lineText)).length && "" === columns[0] && columns.shift(), 
                columns.length && "" === columns[columns.length - 1] && columns.pop(), nextLine === startLine + 2 && ((token = state.push("tbody_open", "tbody", 1)).map = tbodyLines = [ startLine + 2, 0 ]), 
                (token = state.push("tr_open", "tr", 1)).map = [ nextLine, nextLine + 1 ], i = 0; i < columnCount; i++) token = state.push("td_open", "td", 1), 
                aligns[i] && (token.attrs = [ [ "style", "text-align:" + aligns[i] ] ]), (token = state.push("inline", "", 0)).content = columns[i] ? columns[i].trim() : "", 
                token.children = [], token = state.push("td_close", "td", -1);
                token = state.push("tr_close", "tr", -1);
            }
            return tbodyLines && (token = state.push("tbody_close", "tbody", -1), tbodyLines[1] = nextLine), 
            token = state.push("table_close", "table", -1), tableLines[1] = nextLine, state.parentType = oldParentType, 
            state.line = nextLine, !0;
        };
    },
    20715: function(module) {
        "use strict";
        module.exports = function(state) {
            var token;
            state.inlineMode ? ((token = new state.Token("inline", "", 0)).content = state.src, 
            token.map = [ 0, 1 ], token.children = [], state.tokens.push(token)) : state.md.block.parse(state.src, state.md, state.env, state.tokens);
        };
    },
    71953: function(module) {
        "use strict";
        module.exports = function(state) {
            var tok, i, l, tokens = state.tokens;
            for (i = 0, l = tokens.length; i < l; i++) "inline" === (tok = tokens[i]).type && state.md.inline.parse(tok.content, state.md, state.env, tok.children);
        };
    },
    44558: function(module, __unused_webpack_exports, __webpack_require__) {
        "use strict";
        var arrayReplaceAt = __webpack_require__(50195).arrayReplaceAt;
        module.exports = function(state) {
            var i, j, l, tokens, token, currentToken, nodes, ln, text, pos, lastPos, level, htmlLinkLevel, fullUrl, urlText, links, blockTokens = state.tokens;
            if (state.md.options.linkify) for (j = 0, l = blockTokens.length; j < l; j++) if ("inline" === blockTokens[j].type && state.md.linkify.pretest(blockTokens[j].content)) for (htmlLinkLevel = 0, 
            i = (tokens = blockTokens[j].children).length - 1; i >= 0; i--) if ("link_close" !== (currentToken = tokens[i]).type) {
                if ("html_inline" === currentToken.type && (/^<a[>\s]/i.test(currentToken.content) && htmlLinkLevel > 0 && htmlLinkLevel--, 
                /^<\/a\s*>/i.test(currentToken.content) && htmlLinkLevel++), !(htmlLinkLevel > 0) && "text" === currentToken.type && state.md.linkify.test(currentToken.content)) {
                    for (links = state.md.linkify.match(text = currentToken.content), nodes = [], level = currentToken.level, 
                    lastPos = 0, ln = 0; ln < links.length; ln++) fullUrl = state.md.normalizeLink(links[ln].url), 
                    state.md.validateLink(fullUrl) && (urlText = links[ln].text, urlText = links[ln].schema ? "mailto:" !== links[ln].schema || /^mailto:/i.test(urlText) ? state.md.normalizeLinkText(urlText) : state.md.normalizeLinkText("mailto:" + urlText).replace(/^mailto:/, "") : state.md.normalizeLinkText("http://" + urlText).replace(/^http:\/\//, ""), 
                    (pos = links[ln].index) > lastPos && ((token = new state.Token("text", "", 0)).content = text.slice(lastPos, pos), 
                    token.level = level, nodes.push(token)), (token = new state.Token("link_open", "a", 1)).attrs = [ [ "href", fullUrl ] ], 
                    token.level = level++, token.markup = "linkify", token.info = "auto", nodes.push(token), 
                    (token = new state.Token("text", "", 0)).content = urlText, token.level = level, 
                    nodes.push(token), (token = new state.Token("link_close", "a", -1)).level = --level, 
                    token.markup = "linkify", token.info = "auto", nodes.push(token), lastPos = links[ln].lastIndex);
                    lastPos < text.length && ((token = new state.Token("text", "", 0)).content = text.slice(lastPos), 
                    token.level = level, nodes.push(token)), blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);
                }
            } else for (i--; tokens[i].level !== currentToken.level && "link_open" !== tokens[i].type; ) i--;
        };
    },
    5665: function(module) {
        "use strict";
        var NEWLINES_RE = /\r\n?|\n/g, NULL_RE = /\0/g;
        module.exports = function(state) {
            var str;
            str = (str = state.src.replace(NEWLINES_RE, "\n")).replace(NULL_RE, "\ufffd"), state.src = str;
        };
    },
    84586: function(module) {
        "use strict";
        var RARE_RE = /\+-|\.\.|\?\?\?\?|!!!!|,,|--/, SCOPED_ABBR_TEST_RE = /\((c|tm|r|p)\)/i, SCOPED_ABBR_RE = /\((c|tm|r|p)\)/gi, SCOPED_ABBR = {
            c: "\xa9",
            r: "\xae",
            p: "\xa7",
            tm: "\u2122"
        };
        function replaceFn(match, name) {
            return SCOPED_ABBR[name.toLowerCase()];
        }
        function replace_scoped(inlineTokens) {
            var i, token, inside_autolink = 0;
            for (i = inlineTokens.length - 1; i >= 0; i--) "text" !== (token = inlineTokens[i]).type || inside_autolink || (token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn)), 
            "link_open" === token.type && "auto" === token.info && inside_autolink--, "link_close" === token.type && "auto" === token.info && inside_autolink++;
        }
        function replace_rare(inlineTokens) {
            var i, token, inside_autolink = 0;
            for (i = inlineTokens.length - 1; i >= 0; i--) "text" !== (token = inlineTokens[i]).type || inside_autolink || RARE_RE.test(token.content) && (token.content = token.content.replace(/\+-/g, "\xb1").replace(/\.{2,}/g, "\u2026").replace(/([?!])\u2026/g, "$1..").replace(/([?!]){4,}/g, "$1$1$1").replace(/,{2,}/g, ",").replace(/(^|[^-])---(?=[^-]|$)/gm, "$1\u2014").replace(/(^|\s)--(?=\s|$)/gm, "$1\u2013").replace(/(^|[^-\s])--(?=[^-\s]|$)/gm, "$1\u2013")), 
            "link_open" === token.type && "auto" === token.info && inside_autolink--, "link_close" === token.type && "auto" === token.info && inside_autolink++;
        }
        module.exports = function(state) {
            var blkIdx;
            if (state.md.options.typographer) for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) "inline" === state.tokens[blkIdx].type && (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content) && replace_scoped(state.tokens[blkIdx].children), 
            RARE_RE.test(state.tokens[blkIdx].content) && replace_rare(state.tokens[blkIdx].children));
        };
    },
    38028: function(module, __unused_webpack_exports, __webpack_require__) {
        "use strict";
        var isWhiteSpace = __webpack_require__(50195).isWhiteSpace, isPunctChar = __webpack_require__(50195).isPunctChar, isMdAsciiPunct = __webpack_require__(50195).isMdAsciiPunct, QUOTE_TEST_RE = /['"]/, QUOTE_RE = /['"]/g;
        function replaceAt(str, index, ch) {
            return str.substr(0, index) + ch + str.substr(index + 1);
        }
        function process_inlines(tokens, state) {
            var i, token, text, t, pos, max, thisLevel, item, lastChar, nextChar, isLastPunctChar, isNextPunctChar, isLastWhiteSpace, isNextWhiteSpace, canOpen, canClose, j, isSingle, stack, openQuote, closeQuote;
            for (stack = [], i = 0; i < tokens.length; i++) {
                for (token = tokens[i], thisLevel = tokens[i].level, j = stack.length - 1; j >= 0 && !(stack[j].level <= thisLevel); j--) ;
                if (stack.length = j + 1, "text" === token.type) {
                    pos = 0, max = (text = token.content).length;
                    OUTER: for (;pos < max && (QUOTE_RE.lastIndex = pos, t = QUOTE_RE.exec(text)); ) {
                        if (canOpen = canClose = !0, pos = t.index + 1, isSingle = "'" === t[0], lastChar = 32, 
                        t.index - 1 >= 0) lastChar = text.charCodeAt(t.index - 1); else for (j = i - 1; j >= 0 && "softbreak" !== tokens[j].type && "hardbreak" !== tokens[j].type; j--) if (tokens[j].content) {
                            lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1);
                            break;
                        }
                        if (nextChar = 32, pos < max) nextChar = text.charCodeAt(pos); else for (j = i + 1; j < tokens.length && "softbreak" !== tokens[j].type && "hardbreak" !== tokens[j].type; j++) if (tokens[j].content) {
                            nextChar = tokens[j].content.charCodeAt(0);
                            break;
                        }
                        if (isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar)), 
                        isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar)), 
                        isLastWhiteSpace = isWhiteSpace(lastChar), (isNextWhiteSpace = isWhiteSpace(nextChar)) ? canOpen = !1 : isNextPunctChar && (isLastWhiteSpace || isLastPunctChar || (canOpen = !1)), 
                        isLastWhiteSpace ? canClose = !1 : isLastPunctChar && (isNextWhiteSpace || isNextPunctChar || (canClose = !1)), 
                        34 === nextChar && '"' === t[0] && lastChar >= 48 && lastChar <= 57 && (canClose = canOpen = !1), 
                        canOpen && canClose && (canOpen = isLastPunctChar, canClose = isNextPunctChar), 
                        canOpen || canClose) {
                            if (canClose) for (j = stack.length - 1; j >= 0 && (item = stack[j], !(stack[j].level < thisLevel)); j--) if (item.single === isSingle && stack[j].level === thisLevel) {
                                item = stack[j], isSingle ? (openQuote = state.md.options.quotes[2], closeQuote = state.md.options.quotes[3]) : (openQuote = state.md.options.quotes[0], 
                                closeQuote = state.md.options.quotes[1]), token.content = replaceAt(token.content, t.index, closeQuote), 
                                tokens[item.token].content = replaceAt(tokens[item.token].content, item.pos, openQuote), 
                                pos += closeQuote.length - 1, item.token === i && (pos += openQuote.length - 1), 
                                max = (text = token.content).length, stack.length = j;
                                continue OUTER;
                            }
                            canOpen ? stack.push({
                                token: i,
                                pos: t.index,
                                single: isSingle,
                                level: thisLevel
                            }) : canClose && isSingle && (token.content = replaceAt(token.content, t.index, "\u2019"));
                        } else isSingle && (token.content = replaceAt(token.content, t.index, "\u2019"));
                    }
                }
            }
        }
        module.exports = function(state) {
            var blkIdx;
            if (state.md.options.typographer) for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) "inline" === state.tokens[blkIdx].type && QUOTE_TEST_RE.test(state.tokens[blkIdx].content) && process_inlines(state.tokens[blkIdx].children, state);
        };
    },
    9849: function(module, __unused_webpack_exports, __webpack_require__) {
        "use strict";
        var Token = __webpack_require__(49384);
        function StateCore(src, md, env) {
            this.src = src, this.env = env, this.tokens = [], this.inlineMode = !1, this.md = md;
        }
        StateCore.prototype.Token = Token, module.exports = StateCore;
    },
    49133: function(module) {
        "use strict";
        var EMAIL_RE = /^([a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/, AUTOLINK_RE = /^([a-zA-Z][a-zA-Z0-9+.\-]{1,31}):([^<>\x00-\x20]*)$/;
        module.exports = function(state, silent) {
            var url, fullUrl, token, ch, start, max, pos = state.pos;
            if (60 !== state.src.charCodeAt(pos)) return !1;
            for (start = state.pos, max = state.posMax; ;) {
                if (++pos >= max) return !1;
                if (60 === (ch = state.src.charCodeAt(pos))) return !1;
                if (62 === ch) break;
            }
            return url = state.src.slice(start + 1, pos), AUTOLINK_RE.test(url) ? (fullUrl = state.md.normalizeLink(url), 
            !!state.md.validateLink(fullUrl) && (silent || ((token = state.push("link_open", "a", 1)).attrs = [ [ "href", fullUrl ] ], 
            token.markup = "autolink", token.info = "auto", (token = state.push("text", "", 0)).content = state.md.normalizeLinkText(url), 
            (token = state.push("link_close", "a", -1)).markup = "autolink", token.info = "auto"), 
            state.pos += url.length + 2, !0)) : !!EMAIL_RE.test(url) && (fullUrl = state.md.normalizeLink("mailto:" + url), 
            !!state.md.validateLink(fullUrl) && (silent || ((token = state.push("link_open", "a", 1)).attrs = [ [ "href", fullUrl ] ], 
            token.markup = "autolink", token.info = "auto", (token = state.push("text", "", 0)).content = state.md.normalizeLinkText(url), 
            (token = state.push("link_close", "a", -1)).markup = "autolink", token.info = "auto"), 
            state.pos += url.length + 2, !0));
        };
    },
    97286: function(module) {
        "use strict";
        module.exports = function(state, silent) {
            var start, max, marker, token, matchStart, matchEnd, openerLength, closerLength, pos = state.pos;
            if (96 !== state.src.charCodeAt(pos)) return !1;
            for (start = pos, pos++, max = state.posMax; pos < max && 96 === state.src.charCodeAt(pos); ) pos++;
            if (openerLength = (marker = state.src.slice(start, pos)).length, state.backticksScanned && (state.backticks[openerLength] || 0) <= start) return silent || (state.pending += marker), 
            state.pos += openerLength, !0;
            for (matchStart = matchEnd = pos; -1 !== (matchStart = state.src.indexOf("`", matchEnd)); ) {
                for (matchEnd = matchStart + 1; matchEnd < max && 96 === state.src.charCodeAt(matchEnd); ) matchEnd++;
                if ((closerLength = matchEnd - matchStart) === openerLength) return silent || ((token = state.push("code_inline", "code", 0)).markup = marker, 
                token.content = state.src.slice(pos, matchStart).replace(/\n/g, " ").replace(/^ (.+) $/, "$1")), 
                state.pos = matchEnd, !0;
                state.backticks[closerLength] = matchStart;
            }
            return state.backticksScanned = !0, silent || (state.pending += marker), state.pos += openerLength, 
            !0;
        };
    },
    87463: function(module) {
        "use strict";
        function processDelimiters(state, delimiters) {
            var closerIdx, openerIdx, closer, opener, minOpenerIdx, newMinOpenerIdx, isOddMatch, lastJump, openersBottom = {}, max = delimiters.length;
            if (max) {
                var headerIdx = 0, lastTokenIdx = -2, jumps = [];
                for (closerIdx = 0; closerIdx < max; closerIdx++) if (closer = delimiters[closerIdx], 
                jumps.push(0), delimiters[headerIdx].marker === closer.marker && lastTokenIdx === closer.token - 1 || (headerIdx = closerIdx), 
                lastTokenIdx = closer.token, closer.length = closer.length || 0, closer.close) {
                    for (openersBottom.hasOwnProperty(closer.marker) || (openersBottom[closer.marker] = [ -1, -1, -1, -1, -1, -1 ]), 
                    minOpenerIdx = openersBottom[closer.marker][(closer.open ? 3 : 0) + closer.length % 3], 
                    newMinOpenerIdx = openerIdx = headerIdx - jumps[headerIdx] - 1; openerIdx > minOpenerIdx; openerIdx -= jumps[openerIdx] + 1) if ((opener = delimiters[openerIdx]).marker === closer.marker && opener.open && opener.end < 0 && (isOddMatch = !1, 
                    (opener.close || closer.open) && (opener.length + closer.length) % 3 == 0 && (opener.length % 3 == 0 && closer.length % 3 == 0 || (isOddMatch = !0)), 
                    !isOddMatch)) {
                        jumps[closerIdx] = closerIdx - openerIdx + (lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open ? jumps[openerIdx - 1] + 1 : 0), 
                        jumps[openerIdx] = lastJump, closer.open = !1, opener.end = closerIdx, opener.close = !1, 
                        newMinOpenerIdx = -1, lastTokenIdx = -2;
                        break;
                    }
                    -1 !== newMinOpenerIdx && (openersBottom[closer.marker][(closer.open ? 3 : 0) + (closer.length || 0) % 3] = newMinOpenerIdx);
                }
            }
        }
        module.exports = function(state) {
            var curr, tokens_meta = state.tokens_meta, max = state.tokens_meta.length;
            for (processDelimiters(0, state.delimiters), curr = 0; curr < max; curr++) tokens_meta[curr] && tokens_meta[curr].delimiters && processDelimiters(0, tokens_meta[curr].delimiters);
        };
    },
    63792: function(module) {
        "use strict";
        function postProcess(state, delimiters) {
            var i, startDelim, endDelim, token, ch, isStrong;
            for (i = delimiters.length - 1; i >= 0; i--) 95 !== (startDelim = delimiters[i]).marker && 42 !== startDelim.marker || -1 !== startDelim.end && (endDelim = delimiters[startDelim.end], 
            isStrong = i > 0 && delimiters[i - 1].end === startDelim.end + 1 && delimiters[i - 1].marker === startDelim.marker && delimiters[i - 1].token === startDelim.token - 1 && delimiters[startDelim.end + 1].token === endDelim.token + 1, 
            ch = String.fromCharCode(startDelim.marker), (token = state.tokens[startDelim.token]).type = isStrong ? "strong_open" : "em_open", 
            token.tag = isStrong ? "strong" : "em", token.nesting = 1, token.markup = isStrong ? ch + ch : ch, 
            token.content = "", (token = state.tokens[endDelim.token]).type = isStrong ? "strong_close" : "em_close", 
            token.tag = isStrong ? "strong" : "em", token.nesting = -1, token.markup = isStrong ? ch + ch : ch, 
            token.content = "", isStrong && (state.tokens[delimiters[i - 1].token].content = "", 
            state.tokens[delimiters[startDelim.end + 1].token].content = "", i--));
        }
        module.exports.w = function(state, silent) {
            var i, scanned, marker = state.src.charCodeAt(state.pos);
            if (silent) return !1;
            if (95 !== marker && 42 !== marker) return !1;
            for (scanned = state.scanDelims(state.pos, 42 === marker), i = 0; i < scanned.length; i++) state.push("text", "", 0).content = String.fromCharCode(marker), 
            state.delimiters.push({
                marker,
                length: scanned.length,
                token: state.tokens.length - 1,
                end: -1,
                open: scanned.can_open,
                close: scanned.can_close
            });
            return state.pos += scanned.length, !0;
        }, module.exports.g = function(state) {
            var curr, tokens_meta = state.tokens_meta, max = state.tokens_meta.length;
            for (postProcess(state, state.delimiters), curr = 0; curr < max; curr++) tokens_meta[curr] && tokens_meta[curr].delimiters && postProcess(state, tokens_meta[curr].delimiters);
        };
    },
    69022: function(module, __unused_webpack_exports, __webpack_require__) {
        "use strict";
        var entities = __webpack_require__(76235), has = __webpack_require__(50195).has, isValidEntityCode = __webpack_require__(50195).isValidEntityCode, fromCodePoint = __webpack_require__(50195).fromCodePoint, DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i, NAMED_RE = /^&([a-z][a-z0-9]{1,31});/i;
        module.exports = function(state, silent) {
            var code, match, pos = state.pos, max = state.posMax;
            if (38 !== state.src.charCodeAt(pos)) return !1;
            if (pos + 1 < max) if (35 === state.src.charCodeAt(pos + 1)) {
                if (match = state.src.slice(pos).match(DIGITAL_RE)) return silent || (code = "x" === match[1][0].toLowerCase() ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10), 
                state.pending += isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(65533)), 
                state.pos += match[0].length, !0;
            } else if ((match = state.src.slice(pos).match(NAMED_RE)) && has(entities, match[1])) return silent || (state.pending += entities[match[1]]), 
            state.pos += match[0].length, !0;
            return silent || (state.pending += "&"), state.pos++, !0;
        };
    },
    19167: function(module, __unused_webpack_exports, __webpack_require__) {
        "use strict";
        for (var isSpace = __webpack_require__(50195).isSpace, ESCAPED = [], i = 0; i < 256; i++) ESCAPED.push(0);
        "\\!\"#$%&'()*+,./:;<=>?@[]^_`{|}~-".split("").forEach(function(ch) {
            ESCAPED[ch.charCodeAt(0)] = 1;
        }), module.exports = function(state, silent) {
            var ch, pos = state.pos, max = state.posMax;
            if (92 !== state.src.charCodeAt(pos)) return !1;
            if (++pos < max) {
                if ((ch = state.src.charCodeAt(pos)) < 256 && 0 !== ESCAPED[ch]) return silent || (state.pending += state.src[pos]), 
                state.pos += 2, !0;
                if (10 === ch) {
                    for (silent || state.push("hardbreak", "br", 0), pos++; pos < max && (ch = state.src.charCodeAt(pos), 
                    isSpace(ch)); ) pos++;
                    return state.pos = pos, !0;
                }
            }
            return silent || (state.pending += "\\"), state.pos++, !0;
        };
    },
    68237: function(module, __unused_webpack_exports, __webpack_require__) {
        "use strict";
        var HTML_TAG_RE = __webpack_require__(22289).n;
        module.exports = function(state, silent) {
            var ch, match, max, pos = state.pos;
            return !(!state.md.options.html || (max = state.posMax, 60 !== state.src.charCodeAt(pos) || pos + 2 >= max || 33 !== (ch = state.src.charCodeAt(pos + 1)) && 63 !== ch && 47 !== ch && !function(ch) {
                var lc = 32 | ch;
                return lc >= 97 && lc <= 122;
            }(ch) || !(match = state.src.slice(pos).match(HTML_TAG_RE)) || (silent || (state.push("html_inline", "", 0).content = state.src.slice(pos, pos + match[0].length)), 
            state.pos += match[0].length, 0)));
        };
    },
    61527: function(module, __unused_webpack_exports, __webpack_require__) {
        "use strict";
        var normalizeReference = __webpack_require__(50195).normalizeReference, isSpace = __webpack_require__(50195).isSpace;
        module.exports = function(state, silent) {
            var attrs, code, content, label, labelEnd, labelStart, pos, ref, res, title, token, tokens, start, href = "", oldPos = state.pos, max = state.posMax;
            if (33 !== state.src.charCodeAt(state.pos)) return !1;
            if (91 !== state.src.charCodeAt(state.pos + 1)) return !1;
            if (labelStart = state.pos + 2, (labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, !1)) < 0) return !1;
            if ((pos = labelEnd + 1) < max && 40 === state.src.charCodeAt(pos)) {
                for (pos++; pos < max && (code = state.src.charCodeAt(pos), isSpace(code) || 10 === code); pos++) ;
                if (pos >= max) return !1;
                for (start = pos, (res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax)).ok && (href = state.md.normalizeLink(res.str), 
                state.md.validateLink(href) ? pos = res.pos : href = ""), start = pos; pos < max && (code = state.src.charCodeAt(pos), 
                isSpace(code) || 10 === code); pos++) ;
                if (res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax), pos < max && start !== pos && res.ok) for (title = res.str, 
                pos = res.pos; pos < max && (code = state.src.charCodeAt(pos), isSpace(code) || 10 === code); pos++) ; else title = "";
                if (pos >= max || 41 !== state.src.charCodeAt(pos)) return state.pos = oldPos, !1;
                pos++;
            } else {
                if (void 0 === state.env.references) return !1;
                if (pos < max && 91 === state.src.charCodeAt(pos) ? (start = pos + 1, (pos = state.md.helpers.parseLinkLabel(state, pos)) >= 0 ? label = state.src.slice(start, pos++) : pos = labelEnd + 1) : pos = labelEnd + 1, 
                label || (label = state.src.slice(labelStart, labelEnd)), !(ref = state.env.references[normalizeReference(label)])) return state.pos = oldPos, 
                !1;
                href = ref.href, title = ref.title;
            }
            return silent || (content = state.src.slice(labelStart, labelEnd), state.md.inline.parse(content, state.md, state.env, tokens = []), 
            (token = state.push("image", "img", 0)).attrs = attrs = [ [ "src", href ], [ "alt", "" ] ], 
            token.children = tokens, token.content = content, title && attrs.push([ "title", title ])), 
            state.pos = pos, state.posMax = max, !0;
        };
    },
    65617: function(module, __unused_webpack_exports, __webpack_require__) {
        "use strict";
        var normalizeReference = __webpack_require__(50195).normalizeReference, isSpace = __webpack_require__(50195).isSpace;
        module.exports = function(state, silent) {
            var attrs, code, label, labelEnd, labelStart, pos, res, ref, href = "", title = "", oldPos = state.pos, max = state.posMax, start = state.pos, parseReference = !0;
            if (91 !== state.src.charCodeAt(state.pos)) return !1;
            if (labelStart = state.pos + 1, (labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, !0)) < 0) return !1;
            if ((pos = labelEnd + 1) < max && 40 === state.src.charCodeAt(pos)) {
                for (parseReference = !1, pos++; pos < max && (code = state.src.charCodeAt(pos), 
                isSpace(code) || 10 === code); pos++) ;
                if (pos >= max) return !1;
                if (start = pos, (res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax)).ok) {
                    for (href = state.md.normalizeLink(res.str), state.md.validateLink(href) ? pos = res.pos : href = "", 
                    start = pos; pos < max && (code = state.src.charCodeAt(pos), isSpace(code) || 10 === code); pos++) ;
                    if (res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax), pos < max && start !== pos && res.ok) for (title = res.str, 
                    pos = res.pos; pos < max && (code = state.src.charCodeAt(pos), isSpace(code) || 10 === code); pos++) ;
                }
                (pos >= max || 41 !== state.src.charCodeAt(pos)) && (parseReference = !0), pos++;
            }
            if (parseReference) {
                if (void 0 === state.env.references) return !1;
                if (pos < max && 91 === state.src.charCodeAt(pos) ? (start = pos + 1, (pos = state.md.helpers.parseLinkLabel(state, pos)) >= 0 ? label = state.src.slice(start, pos++) : pos = labelEnd + 1) : pos = labelEnd + 1, 
                label || (label = state.src.slice(labelStart, labelEnd)), !(ref = state.env.references[normalizeReference(label)])) return state.pos = oldPos, 
                !1;
                href = ref.href, title = ref.title;
            }
            return silent || (state.pos = labelStart, state.posMax = labelEnd, state.push("link_open", "a", 1).attrs = attrs = [ [ "href", href ] ], 
            title && attrs.push([ "title", title ]), state.md.inline.tokenize(state), state.push("link_close", "a", -1)), 
            state.pos = pos, state.posMax = max, !0;
        };
    },
    38184: function(module, __unused_webpack_exports, __webpack_require__) {
        "use strict";
        var isSpace = __webpack_require__(50195).isSpace;
        module.exports = function(state, silent) {
            var pmax, max, ws, pos = state.pos;
            if (10 !== state.src.charCodeAt(pos)) return !1;
            if (pmax = state.pending.length - 1, max = state.posMax, !silent) if (pmax >= 0 && 32 === state.pending.charCodeAt(pmax)) if (pmax >= 1 && 32 === state.pending.charCodeAt(pmax - 1)) {
                for (ws = pmax - 1; ws >= 1 && 32 === state.pending.charCodeAt(ws - 1); ) ws--;
                state.pending = state.pending.slice(0, ws), state.push("hardbreak", "br", 0);
            } else state.pending = state.pending.slice(0, -1), state.push("softbreak", "br", 0); else state.push("softbreak", "br", 0);
            for (pos++; pos < max && isSpace(state.src.charCodeAt(pos)); ) pos++;
            return state.pos = pos, !0;
        };
    },
    85547: function(module, __unused_webpack_exports, __webpack_require__) {
        "use strict";
        var Token = __webpack_require__(49384), isWhiteSpace = __webpack_require__(50195).isWhiteSpace, isPunctChar = __webpack_require__(50195).isPunctChar, isMdAsciiPunct = __webpack_require__(50195).isMdAsciiPunct;
        function StateInline(src, md, env, outTokens) {
            this.src = src, this.env = env, this.md = md, this.tokens = outTokens, this.tokens_meta = Array(outTokens.length), 
            this.pos = 0, this.posMax = this.src.length, this.level = 0, this.pending = "", 
            this.pendingLevel = 0, this.cache = {}, this.delimiters = [], this._prev_delimiters = [], 
            this.backticks = {}, this.backticksScanned = !1;
        }
        StateInline.prototype.pushPending = function() {
            var token = new Token("text", "", 0);
            return token.content = this.pending, token.level = this.pendingLevel, this.tokens.push(token), 
            this.pending = "", token;
        }, StateInline.prototype.push = function(type, tag, nesting) {
            this.pending && this.pushPending();
            var token = new Token(type, tag, nesting), token_meta = null;
            return nesting < 0 && (this.level--, this.delimiters = this._prev_delimiters.pop()), 
            token.level = this.level, nesting > 0 && (this.level++, this._prev_delimiters.push(this.delimiters), 
            this.delimiters = [], token_meta = {
                delimiters: this.delimiters
            }), this.pendingLevel = this.level, this.tokens.push(token), this.tokens_meta.push(token_meta), 
            token;
        }, StateInline.prototype.scanDelims = function(start, canSplitWord) {
            var lastChar, nextChar, count, can_open, can_close, isLastWhiteSpace, isLastPunctChar, isNextWhiteSpace, isNextPunctChar, pos = start, left_flanking = !0, right_flanking = !0, max = this.posMax, marker = this.src.charCodeAt(start);
            for (lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 32; pos < max && this.src.charCodeAt(pos) === marker; ) pos++;
            return count = pos - start, nextChar = pos < max ? this.src.charCodeAt(pos) : 32, 
            isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar)), 
            isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar)), 
            isLastWhiteSpace = isWhiteSpace(lastChar), (isNextWhiteSpace = isWhiteSpace(nextChar)) ? left_flanking = !1 : isNextPunctChar && (isLastWhiteSpace || isLastPunctChar || (left_flanking = !1)), 
            isLastWhiteSpace ? right_flanking = !1 : isLastPunctChar && (isNextWhiteSpace || isNextPunctChar || (right_flanking = !1)), 
            canSplitWord ? (can_open = left_flanking, can_close = right_flanking) : (can_open = left_flanking && (!right_flanking || isLastPunctChar), 
            can_close = right_flanking && (!left_flanking || isNextPunctChar)), {
                can_open,
                can_close,
                length: count
            };
        }, StateInline.prototype.Token = Token, module.exports = StateInline;
    },
    62501: function(module) {
        "use strict";
        function postProcess(state, delimiters) {
            var i, j, startDelim, endDelim, token, loneMarkers = [], max = delimiters.length;
            for (i = 0; i < max; i++) 126 === (startDelim = delimiters[i]).marker && -1 !== startDelim.end && (endDelim = delimiters[startDelim.end], 
            (token = state.tokens[startDelim.token]).type = "s_open", token.tag = "s", token.nesting = 1, 
            token.markup = "~~", token.content = "", (token = state.tokens[endDelim.token]).type = "s_close", 
            token.tag = "s", token.nesting = -1, token.markup = "~~", token.content = "", "text" === state.tokens[endDelim.token - 1].type && "~" === state.tokens[endDelim.token - 1].content && loneMarkers.push(endDelim.token - 1));
            for (;loneMarkers.length; ) {
                for (j = (i = loneMarkers.pop()) + 1; j < state.tokens.length && "s_close" === state.tokens[j].type; ) j++;
                i !== --j && (token = state.tokens[j], state.tokens[j] = state.tokens[i], state.tokens[i] = token);
            }
        }
        module.exports.w = function(state, silent) {
            var i, scanned, len, ch, marker = state.src.charCodeAt(state.pos);
            if (silent) return !1;
            if (126 !== marker) return !1;
            if (len = (scanned = state.scanDelims(state.pos, !0)).length, ch = String.fromCharCode(marker), 
            len < 2) return !1;
            for (len % 2 && (state.push("text", "", 0).content = ch, len--), i = 0; i < len; i += 2) state.push("text", "", 0).content = ch + ch, 
            state.delimiters.push({
                marker,
                length: 0,
                token: state.tokens.length - 1,
                end: -1,
                open: scanned.can_open,
                close: scanned.can_close
            });
            return state.pos += scanned.length, !0;
        }, module.exports.g = function(state) {
            var curr, tokens_meta = state.tokens_meta, max = state.tokens_meta.length;
            for (postProcess(state, state.delimiters), curr = 0; curr < max; curr++) tokens_meta[curr] && tokens_meta[curr].delimiters && postProcess(state, tokens_meta[curr].delimiters);
        };
    },
    8670: function(module) {
        "use strict";
        function isTerminatorChar(ch) {
            switch (ch) {
              case 10:
              case 33:
              case 35:
              case 36:
              case 37:
              case 38:
              case 42:
              case 43:
              case 45:
              case 58:
              case 60:
              case 61:
              case 62:
              case 64:
              case 91:
              case 92:
              case 93:
              case 94:
              case 95:
              case 96:
              case 123:
              case 125:
              case 126:
                return !0;

              default:
                return !1;
            }
        }
        module.exports = function(state, silent) {
            for (var pos = state.pos; pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos)); ) pos++;
            return pos !== state.pos && (silent || (state.pending += state.src.slice(state.pos, pos)), 
            state.pos = pos, !0);
        };
    },
    86071: function(module) {
        "use strict";
        module.exports = function(state) {
            var curr, last, level = 0, tokens = state.tokens, max = state.tokens.length;
            for (curr = last = 0; curr < max; curr++) tokens[curr].nesting < 0 && level--, tokens[curr].level = level, 
            tokens[curr].nesting > 0 && level++, "text" === tokens[curr].type && curr + 1 < max && "text" === tokens[curr + 1].type ? tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content : (curr !== last && (tokens[last] = tokens[curr]), 
            last++);
            curr !== last && (tokens.length = last);
        };
    },
    49384: function(module) {
        "use strict";
        function Token(type, tag, nesting) {
            this.type = type, this.tag = tag, this.attrs = null, this.map = null, this.nesting = nesting, 
            this.level = 0, this.children = null, this.content = "", this.markup = "", this.info = "", 
            this.meta = null, this.block = !1, this.hidden = !1;
        }
        Token.prototype.attrIndex = function(name) {
            var attrs, i, len;
            if (!this.attrs) return -1;
            for (i = 0, len = (attrs = this.attrs).length; i < len; i++) if (attrs[i][0] === name) return i;
            return -1;
        }, Token.prototype.attrPush = function(attrData) {
            this.attrs ? this.attrs.push(attrData) : this.attrs = [ attrData ];
        }, Token.prototype.attrSet = function(name, value) {
            var idx = this.attrIndex(name), attrData = [ name, value ];
            idx < 0 ? this.attrPush(attrData) : this.attrs[idx] = attrData;
        }, Token.prototype.attrGet = function(name) {
            var idx = this.attrIndex(name), value = null;
            return idx >= 0 && (value = this.attrs[idx][1]), value;
        }, Token.prototype.attrJoin = function(name, value) {
            var idx = this.attrIndex(name);
            idx < 0 ? this.attrPush([ name, value ]) : this.attrs[idx][1] = this.attrs[idx][1] + " " + value;
        }, module.exports = Token;
    },
    22918: function(module) {
        "use strict";
        var decodeCache = {};
        function decode(string, exclude) {
            var cache;
            return "string" != typeof exclude && (exclude = decode.defaultChars), cache = function(exclude) {
                var i, ch, cache = decodeCache[exclude];
                if (cache) return cache;
                for (cache = decodeCache[exclude] = [], i = 0; i < 128; i++) ch = String.fromCharCode(i), 
                cache.push(ch);
                for (i = 0; i < exclude.length; i++) cache[ch = exclude.charCodeAt(i)] = "%" + ("0" + ch.toString(16).toUpperCase()).slice(-2);
                return cache;
            }(exclude), string.replace(/(%[a-f0-9]{2})+/gi, function(seq) {
                var i, l, b1, b2, b3, b4, chr, result = "";
                for (i = 0, l = seq.length; i < l; i += 3) (b1 = parseInt(seq.slice(i + 1, i + 3), 16)) < 128 ? result += cache[b1] : 192 == (224 & b1) && i + 3 < l && 128 == (192 & (b2 = parseInt(seq.slice(i + 4, i + 6), 16))) ? (result += (chr = b1 << 6 & 1984 | 63 & b2) < 128 ? "\ufffd\ufffd" : String.fromCharCode(chr), 
                i += 3) : 224 == (240 & b1) && i + 6 < l && (b2 = parseInt(seq.slice(i + 4, i + 6), 16), 
                b3 = parseInt(seq.slice(i + 7, i + 9), 16), 128 == (192 & b2) && 128 == (192 & b3)) ? (result += (chr = b1 << 12 & 61440 | b2 << 6 & 4032 | 63 & b3) < 2048 || chr >= 55296 && chr <= 57343 ? "\ufffd\ufffd\ufffd" : String.fromCharCode(chr), 
                i += 6) : 240 == (248 & b1) && i + 9 < l && (b2 = parseInt(seq.slice(i + 4, i + 6), 16), 
                b3 = parseInt(seq.slice(i + 7, i + 9), 16), b4 = parseInt(seq.slice(i + 10, i + 12), 16), 
                128 == (192 & b2) && 128 == (192 & b3) && 128 == (192 & b4)) ? ((chr = b1 << 18 & 1835008 | b2 << 12 & 258048 | b3 << 6 & 4032 | 63 & b4) < 65536 || chr > 1114111 ? result += "\ufffd\ufffd\ufffd\ufffd" : (chr -= 65536, 
                result += String.fromCharCode(55296 + (chr >> 10), 56320 + (1023 & chr))), i += 9) : result += "\ufffd";
                return result;
            });
        }
        decode.defaultChars = ";/?:@&=+$,#", decode.componentChars = "", module.exports = decode;
    },
    73138: function(module) {
        "use strict";
        var encodeCache = {};
        function encode(string, exclude, keepEscaped) {
            var i, l, code, nextCode, cache, result = "";
            for ("string" != typeof exclude && (keepEscaped = exclude, exclude = encode.defaultChars), 
            void 0 === keepEscaped && (keepEscaped = !0), cache = function(exclude) {
                var i, ch, cache = encodeCache[exclude];
                if (cache) return cache;
                for (cache = encodeCache[exclude] = [], i = 0; i < 128; i++) ch = String.fromCharCode(i), 
                /^[0-9a-z]$/i.test(ch) ? cache.push(ch) : cache.push("%" + ("0" + i.toString(16).toUpperCase()).slice(-2));
                for (i = 0; i < exclude.length; i++) cache[exclude.charCodeAt(i)] = exclude[i];
                return cache;
            }(exclude), i = 0, l = string.length; i < l; i++) if (code = string.charCodeAt(i), 
            keepEscaped && 37 === code && i + 2 < l && /^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) result += string.slice(i, i + 3), 
            i += 2; else if (code < 128) result += cache[code]; else if (code >= 55296 && code <= 57343) {
                if (code >= 55296 && code <= 56319 && i + 1 < l && (nextCode = string.charCodeAt(i + 1)) >= 56320 && nextCode <= 57343) {
                    result += encodeURIComponent(string[i] + string[i + 1]), i++;
                    continue;
                }
                result += "%EF%BF%BD";
            } else result += encodeURIComponent(string[i]);
            return result;
        }
        encode.defaultChars = ";/?:@&=+$,-_.!~*'()#", encode.componentChars = "-_.!~*'()", 
        module.exports = encode;
    },
    99239: function(module) {
        "use strict";
        module.exports = function(url) {
            var result = "";
            return result += url.protocol || "", result += url.slashes ? "//" : "", result += url.auth ? url.auth + "@" : "", 
            url.hostname && -1 !== url.hostname.indexOf(":") ? result += "[" + url.hostname + "]" : result += url.hostname || "", 
            result += url.port ? ":" + url.port : "", result += url.pathname || "", (result += url.search || "") + (url.hash || "");
        };
    },
    30229: function(module, __unused_webpack_exports, __webpack_require__) {
        "use strict";
        module.exports.encode = __webpack_require__(73138), module.exports.decode = __webpack_require__(22918), 
        module.exports.format = __webpack_require__(99239), module.exports.parse = __webpack_require__(14692);
    },
    14692: function(module) {
        "use strict";
        function Url() {
            this.protocol = null, this.slashes = null, this.auth = null, this.port = null, this.hostname = null, 
            this.hash = null, this.search = null, this.pathname = null;
        }
        var protocolPattern = /^([a-z0-9.+-]+:)/i, portPattern = /:[0-9]*$/, simplePathPattern = /^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/, unwise = [ "{", "}", "|", "\\", "^", "`" ].concat([ "<", ">", '"', "`", " ", "\r", "\n", "\t" ]), autoEscape = [ "'" ].concat(unwise), nonHostChars = [ "%", "/", "?", ";", "#" ].concat(autoEscape), hostEndingChars = [ "/", "?", "#" ], hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/, hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/, hostlessProtocol = {
            javascript: !0,
            "javascript:": !0
        }, slashedProtocol = {
            http: !0,
            https: !0,
            ftp: !0,
            gopher: !0,
            file: !0,
            "http:": !0,
            "https:": !0,
            "ftp:": !0,
            "gopher:": !0,
            "file:": !0
        };
        Url.prototype.parse = function(url, slashesDenoteHost) {
            var i, l, lowerProto, hec, slashes, rest = url;
            if (rest = rest.trim(), !slashesDenoteHost && 1 === url.split("#").length) {
                var simplePath = simplePathPattern.exec(rest);
                if (simplePath) return this.pathname = simplePath[1], simplePath[2] && (this.search = simplePath[2]), 
                this;
            }
            var proto = protocolPattern.exec(rest);
            if (proto && (lowerProto = (proto = proto[0]).toLowerCase(), this.protocol = proto, 
            rest = rest.substr(proto.length)), (slashesDenoteHost || proto || rest.match(/^\/\/[^@\/]+@[^@\/]+/)) && (!(slashes = "//" === rest.substr(0, 2)) || proto && hostlessProtocol[proto] || (rest = rest.substr(2), 
            this.slashes = !0)), !hostlessProtocol[proto] && (slashes || proto && !slashedProtocol[proto])) {
                var auth, atSign, hostEnd = -1;
                for (i = 0; i < hostEndingChars.length; i++) -1 !== (hec = rest.indexOf(hostEndingChars[i])) && (-1 === hostEnd || hec < hostEnd) && (hostEnd = hec);
                for (-1 !== (atSign = -1 === hostEnd ? rest.lastIndexOf("@") : rest.lastIndexOf("@", hostEnd)) && (auth = rest.slice(0, atSign), 
                rest = rest.slice(atSign + 1), this.auth = auth), hostEnd = -1, i = 0; i < nonHostChars.length; i++) -1 !== (hec = rest.indexOf(nonHostChars[i])) && (-1 === hostEnd || hec < hostEnd) && (hostEnd = hec);
                -1 === hostEnd && (hostEnd = rest.length), ":" === rest[hostEnd - 1] && hostEnd--;
                var host = rest.slice(0, hostEnd);
                rest = rest.slice(hostEnd), this.parseHost(host), this.hostname = this.hostname || "";
                var ipv6Hostname = "[" === this.hostname[0] && "]" === this.hostname[this.hostname.length - 1];
                if (!ipv6Hostname) {
                    var hostparts = this.hostname.split(/\./);
                    for (i = 0, l = hostparts.length; i < l; i++) {
                        var part = hostparts[i];
                        if (part && !part.match(hostnamePartPattern)) {
                            for (var newpart = "", j = 0, k = part.length; j < k; j++) part.charCodeAt(j) > 127 ? newpart += "x" : newpart += part[j];
                            if (!newpart.match(hostnamePartPattern)) {
                                var validParts = hostparts.slice(0, i), notHost = hostparts.slice(i + 1), bit = part.match(hostnamePartStart);
                                bit && (validParts.push(bit[1]), notHost.unshift(bit[2])), notHost.length && (rest = notHost.join(".") + rest), 
                                this.hostname = validParts.join(".");
                                break;
                            }
                        }
                    }
                }
                this.hostname.length > 255 && (this.hostname = ""), ipv6Hostname && (this.hostname = this.hostname.substr(1, this.hostname.length - 2));
            }
            var hash = rest.indexOf("#");
            -1 !== hash && (this.hash = rest.substr(hash), rest = rest.slice(0, hash));
            var qm = rest.indexOf("?");
            return -1 !== qm && (this.search = rest.substr(qm), rest = rest.slice(0, qm)), rest && (this.pathname = rest), 
            slashedProtocol[lowerProto] && this.hostname && !this.pathname && (this.pathname = ""), 
            this;
        }, Url.prototype.parseHost = function(host) {
            var port = portPattern.exec(host);
            port && (":" !== (port = port[0]) && (this.port = port.substr(1)), host = host.substr(0, host.length - port.length)), 
            host && (this.hostname = host);
        }, module.exports = function(url, slashesDenoteHost) {
            if (url && url instanceof Url) return url;
            var u = new Url;
            return u.parse(url, slashesDenoteHost), u;
        };
    },
    38648: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, {
            decode: function() {
                return decode;
            },
            encode: function() {
                return encode;
            },
            toASCII: function() {
                return toASCII;
            },
            toUnicode: function() {
                return toUnicode;
            },
            ucs2decode: function() {
                return ucs2decode;
            },
            ucs2encode: function() {
                return ucs2encode;
            }
        });
        var C_w_1_s_node_modules_pnpm_babel_runtime_7_14_8_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelperLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(62661), maxInt = 2147483647, regexPunycode = /^xn--/, regexNonASCII = /[^\0-\x7F]/, regexSeparators = /[\x2E\u3002\uFF0E\uFF61]/g, errors = {
            overflow: "Overflow: input needs wider integers to process",
            "not-basic": "Illegal input >= 0x80 (not a basic code point)",
            "invalid-input": "Invalid input"
        }, floor = Math.floor, stringFromCharCode = String.fromCharCode;
        function error(type) {
            throw new RangeError(errors[type]);
        }
        function mapDomain(domain, callback) {
            var parts = domain.split("@"), result = "";
            parts.length > 1 && (result = parts[0] + "@", domain = parts[1]);
            var encoded = function(array, callback) {
                for (var result = [], length = array.length; length--; ) result[length] = callback(array[length]);
                return result;
            }((domain = domain.replace(regexSeparators, ".")).split("."), callback).join(".");
            return result + encoded;
        }
        function ucs2decode(string) {
            for (var output = [], counter = 0, length = string.length; counter < length; ) {
                var value = string.charCodeAt(counter++);
                if (value >= 55296 && value <= 56319 && counter < length) {
                    var extra = string.charCodeAt(counter++);
                    56320 == (64512 & extra) ? output.push(((1023 & value) << 10) + (1023 & extra) + 65536) : (output.push(value), 
                    counter--);
                } else output.push(value);
            }
            return output;
        }
        var ucs2encode = function(codePoints) {
            return String.fromCodePoint.apply(String, codePoints);
        }, digitToBasic = function(digit, flag) {
            return digit + 22 + 75 * (digit < 26) - ((0 != flag) << 5);
        }, adapt = function(delta, numPoints, firstTime) {
            var k = 0;
            for (delta = firstTime ? floor(delta / 700) : delta >> 1, delta += floor(delta / numPoints); delta > 455; k += 36) delta = floor(delta / 35);
            return floor(k + 36 * delta / (delta + 38));
        }, decode = function(input) {
            var codePoint, output = [], inputLength = input.length, i = 0, n = 128, bias = 72, basic = input.lastIndexOf("-");
            basic < 0 && (basic = 0);
            for (var j = 0; j < basic; ++j) input.charCodeAt(j) >= 128 && error("not-basic"), 
            output.push(input.charCodeAt(j));
            for (var index = basic > 0 ? basic + 1 : 0; index < inputLength; ) {
                for (var oldi = i, w = 1, k = 36; ;k += 36) {
                    index >= inputLength && error("invalid-input");
                    var digit = (codePoint = input.charCodeAt(index++)) >= 48 && codePoint < 58 ? codePoint - 48 + 26 : codePoint >= 65 && codePoint < 91 ? codePoint - 65 : codePoint >= 97 && codePoint < 123 ? codePoint - 97 : 36;
                    digit >= 36 && error("invalid-input"), digit > floor((maxInt - i) / w) && error("overflow"), 
                    i += digit * w;
                    var t = k <= bias ? 1 : k >= bias + 26 ? 26 : k - bias;
                    if (digit < t) break;
                    var baseMinusT = 36 - t;
                    w > floor(maxInt / baseMinusT) && error("overflow"), w *= baseMinusT;
                }
                var out = output.length + 1;
                bias = adapt(i - oldi, out, 0 == oldi), floor(i / out) > maxInt - n && error("overflow"), 
                n += floor(i / out), i %= out, output.splice(i++, 0, n);
            }
            return String.fromCodePoint.apply(String, output);
        }, encode = function(input) {
            for (var _step, output = [], inputLength = (input = ucs2decode(input)).length, n = 128, delta = 0, bias = 72, _iterator = (0, 
            C_w_1_s_node_modules_pnpm_babel_runtime_7_14_8_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelperLoose__WEBPACK_IMPORTED_MODULE_0__.Z)(input); !(_step = _iterator()).done; ) {
                var _currentValue2 = _step.value;
                _currentValue2 < 128 && output.push(stringFromCharCode(_currentValue2));
            }
            var basicLength = output.length, handledCPCount = basicLength;
            for (basicLength && output.push("-"); handledCPCount < inputLength; ) {
                for (var _step2, m = maxInt, _iterator2 = (0, C_w_1_s_node_modules_pnpm_babel_runtime_7_14_8_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelperLoose__WEBPACK_IMPORTED_MODULE_0__.Z)(input); !(_step2 = _iterator2()).done; ) {
                    var currentValue = _step2.value;
                    currentValue >= n && currentValue < m && (m = currentValue);
                }
                var handledCPCountPlusOne = handledCPCount + 1;
                m - n > floor((maxInt - delta) / handledCPCountPlusOne) && error("overflow"), delta += (m - n) * handledCPCountPlusOne, 
                n = m;
                for (var _step3, _iterator3 = (0, C_w_1_s_node_modules_pnpm_babel_runtime_7_14_8_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelperLoose__WEBPACK_IMPORTED_MODULE_0__.Z)(input); !(_step3 = _iterator3()).done; ) {
                    var _currentValue = _step3.value;
                    if (_currentValue < n && ++delta > maxInt && error("overflow"), _currentValue === n) {
                        for (var q = delta, k = 36; ;k += 36) {
                            var t = k <= bias ? 1 : k >= bias + 26 ? 26 : k - bias;
                            if (q < t) break;
                            var qMinusT = q - t, baseMinusT = 36 - t;
                            output.push(stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))), q = floor(qMinusT / baseMinusT);
                        }
                        output.push(stringFromCharCode(digitToBasic(q, 0))), bias = adapt(delta, handledCPCountPlusOne, handledCPCount === basicLength), 
                        delta = 0, ++handledCPCount;
                    }
                }
                ++delta, ++n;
            }
            return output.join("");
        }, toUnicode = function(input) {
            return mapDomain(input, function(string) {
                return regexPunycode.test(string) ? decode(string.slice(4).toLowerCase()) : string;
            });
        }, toASCII = function(input) {
            return mapDomain(input, function(string) {
                return regexNonASCII.test(string) ? "xn--" + encode(string) : string;
            });
        };
        __webpack_exports__.default = {
            version: "2.1.0",
            ucs2: {
                decode: ucs2decode,
                encode: ucs2encode
            },
            decode,
            encode,
            toASCII,
            toUnicode
        };
    },
    21477: function(module) {
        module.exports = /[\0-\x1F\x7F-\x9F]/;
    },
    43578: function(module) {
        module.exports = /[\xAD\u0600-\u0605\u061C\u06DD\u070F\u08E2\u180E\u200B-\u200F\u202A-\u202E\u2060-\u2064\u2066-\u206F\uFEFF\uFFF9-\uFFFB]|\uD804[\uDCBD\uDCCD]|\uD82F[\uDCA0-\uDCA3]|\uD834[\uDD73-\uDD7A]|\uDB40[\uDC01\uDC20-\uDC7F]/;
    },
    32606: function(module) {
        module.exports = /[!-#%-\*,-\/:;\?@\[-\]_\{\}\xA1\xA7\xAB\xB6\xB7\xBB\xBF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166D\u166E\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2010-\u2027\u2030-\u2043\u2045-\u2051\u2053-\u205E\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4E\u3001-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]|\uD800[\uDD00-\uDD02\uDF9F\uDFD0]|\uD801\uDD6F|\uD802[\uDC57\uDD1F\uDD3F\uDE50-\uDE58\uDE7F\uDEF0-\uDEF6\uDF39-\uDF3F\uDF99-\uDF9C]|\uD803[\uDF55-\uDF59]|\uD804[\uDC47-\uDC4D\uDCBB\uDCBC\uDCBE-\uDCC1\uDD40-\uDD43\uDD74\uDD75\uDDC5-\uDDC8\uDDCD\uDDDB\uDDDD-\uDDDF\uDE38-\uDE3D\uDEA9]|\uD805[\uDC4B-\uDC4F\uDC5B\uDC5D\uDCC6\uDDC1-\uDDD7\uDE41-\uDE43\uDE60-\uDE6C\uDF3C-\uDF3E]|\uD806[\uDC3B\uDE3F-\uDE46\uDE9A-\uDE9C\uDE9E-\uDEA2]|\uD807[\uDC41-\uDC45\uDC70\uDC71\uDEF7\uDEF8]|\uD809[\uDC70-\uDC74]|\uD81A[\uDE6E\uDE6F\uDEF5\uDF37-\uDF3B\uDF44]|\uD81B[\uDE97-\uDE9A]|\uD82F\uDC9F|\uD836[\uDE87-\uDE8B]|\uD83A[\uDD5E\uDD5F]/;
    },
    58079: function(module) {
        module.exports = /[ \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000]/;
    },
    47643: function(__unused_webpack_module, exports, __webpack_require__) {
        "use strict";
        exports.Any = __webpack_require__(52246), exports.Cc = __webpack_require__(21477), 
        exports.Cf = __webpack_require__(43578), exports.P = __webpack_require__(32606), 
        exports.Z = __webpack_require__(58079);
    },
    52246: function(module) {
        module.exports = /[\0-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/;
    },
    56371: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            _p: function() {
                return ServiceAppFallbackColors;
            }
        });
        var ServiceAppFallbackColors = {
            color: "#374649",
            fontColor: "#FFF"
        };
    },
    54861: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        "use strict";
        function getFullName(givenName, familyName, emailAddress) {
            var firstName = _.trim(givenName), lastName = _.trim(familyName);
            return _.isEmpty(firstName) ? emailAddress || "" : _.isEmpty(lastName) ? firstName : "".concat(firstName, " ").concat(lastName);
        }
        __webpack_require__.d(__webpack_exports__, {
            P: function() {
                return getFullName;
            }
        });
    },
    73088: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            F: function() {
                return ScorecardActionsServiceInjectionToken;
            }
        });
        var ScorecardActionsServiceInjectionToken = new (__webpack_require__(50423).InjectionToken)("ScorecardActionsService");
    },
    65818: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            r: function() {
                return EndorsementBadgeComponent;
            }
        });
        var _Typings_Clients_PowerBIContracts_contracts_typings1__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(73471), _powerbi_legacy_JsCommon_Utility_BrowserUtility__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(16808), _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(50423), _angular_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(77476), _Localization_directives_localize_directive__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(59968), _UILibrary_pbi_tooltip_pbi_tooltip_directive__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(36858), _trident_libs_ux_angular_src_lib_tri_svg_icon_components_tri_svg_icon_tri_svg_icon_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(74913), _Localization_pipes_localize_pipe__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(85102);
        function EndorsementBadgeComponent_section_1_Template(rf, ctx) {
            if (1 & rf && (_angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275elementStart"](0, "section", 5), 
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275pipe"](1, "localize"), _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275element"](2, "tri-svg-icon", 6)(3, "span", 7), 
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275nextContext"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275property"]("ngClass", ctx_r0.isIeBrowser ? "in-ie-browser" : "browser-default")("pbiTooltip", ctx_r0.customTooltip ? ctx_r0.customTooltip : _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275pipeBind1"](1, 4, "MasterData"))("pbiTooltipDisabled", ctx_r0.hideTooltip), 
                _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275attribute"]("tabindex", 0);
            }
        }
        function EndorsementBadgeComponent_ng_container_2_section_1_Template(rf, ctx) {
            if (1 & rf && (_angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275elementStart"](0, "section", 10), 
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275pipe"](1, "localize"), _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275element"](2, "tri-svg-icon", 11)(3, "span", 12), 
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275nextContext"](2);
                _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275property"]("ngClass", ctx_r4.isIeBrowser ? "in-ie-browser" : "browser-default")("pbiTooltip", ctx_r4.customTooltip ? ctx_r4.customTooltip : _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275pipeBind1"](1, 4, "Certified"))("pbiTooltipDisabled", ctx_r4.hideTooltip), 
                _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275attribute"]("tabindex", 0);
            }
        }
        function EndorsementBadgeComponent_ng_container_2_ng_template_2_Template(rf, ctx) {
            if (1 & rf && (_angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275elementStart"](0, "section", 13), 
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275pipe"](1, "localize"), _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275element"](2, "tri-svg-icon", 14)(3, "span", 15), 
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275nextContext"](2);
                _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275property"]("ngClass", ctx_r6.isIeBrowser ? "in-ie-browser" : "browser-default")("pbiTooltip", ctx_r6.customTooltip ? ctx_r6.customTooltip : _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275pipeBind1"](1, 4, "Certified"))("pbiTooltipDisabled", ctx_r6.hideTooltip), 
                _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275attribute"]("tabindex", 0);
            }
        }
        function EndorsementBadgeComponent_ng_container_2_Template(rf, ctx) {
            if (1 & rf && (_angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275elementContainerStart"](0), 
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275template"](1, EndorsementBadgeComponent_ng_container_2_section_1_Template, 4, 6, "section", 8), 
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275template"](2, EndorsementBadgeComponent_ng_container_2_ng_template_2_Template, 4, 6, "ng-template", null, 9, _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275templateRefExtractor"]), 
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275elementContainerEnd"]()), 
            2 & rf) {
                var _r5 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275reference"](3), ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275nextContext"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275advance"](1), _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275property"]("ngIf", ctx_r1.useWhiteTheme)("ngIfElse", _r5);
            }
        }
        function EndorsementBadgeComponent_section_3_Template(rf, ctx) {
            if (1 & rf && (_angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275elementStart"](0, "section", 16), 
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275pipe"](1, "localize"), _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275element"](2, "tri-svg-icon", 17)(3, "span", 18), 
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275nextContext"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275property"]("ngClass", ctx_r2.isIeBrowser ? "in-ie-browser" : "browser-default")("pbiTooltip", ctx_r2.customTooltip ? ctx_r2.customTooltip : _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275pipeBind1"](1, 4, "Promoted"))("pbiTooltipDisabled", ctx_r2.hideTooltip), 
                _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275attribute"]("tabindex", 0);
            }
        }
        function EndorsementBadgeComponent_span_4_Template(rf, ctx) {
            if (1 & rf && (_angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275element"](0, "span", 19), 
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275pipe"](1, "localize")), 
            2 & rf) {
                var ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275nextContext"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275property"]("pbiTooltip", ctx_r3.customTooltip || _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275pipeBind1"](1, 2, "None"))("pbiTooltipDisabled", ctx_r3.hideTooltip);
            }
        }
        var EndorsementBadgeComponent = function() {
            function EndorsementBadgeComponent() {
                this.promoted = _Typings_Clients_PowerBIContracts_contracts_typings1__WEBPACK_IMPORTED_MODULE_2__.X_.Promoted, 
                this.certified = _Typings_Clients_PowerBIContracts_contracts_typings1__WEBPACK_IMPORTED_MODULE_2__.X_.Certified, 
                this.masterData = _Typings_Clients_PowerBIContracts_contracts_typings1__WEBPACK_IMPORTED_MODULE_2__.X_.MasterData, 
                this.isIeBrowser = (0, _powerbi_legacy_JsCommon_Utility_BrowserUtility__WEBPACK_IMPORTED_MODULE_3__.rO)();
            }
            return EndorsementBadgeComponent.\u0275fac = function(t) {
                return new (t || EndorsementBadgeComponent);
            }, EndorsementBadgeComponent.\u0275cmp = _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275defineComponent"]({
                type: EndorsementBadgeComponent,
                selectors: [ [ "endorsement-badge" ] ],
                inputs: {
                    stage: "stage",
                    useWhiteTheme: "useWhiteTheme",
                    customTooltip: "customTooltip",
                    hideTooltip: "hideTooltip"
                },
                decls: 5,
                vars: 4,
                consts: [ [ 3, "ngSwitch" ], [ "class", "endorsementBadge masterData defaultTheme", 3, "ngClass", "pbiTooltip", "pbiTooltipDisabled", 4, "ngSwitchCase" ], [ 4, "ngSwitchCase" ], [ "class", "endorsementBadge promoted defaultTheme", 3, "ngClass", "pbiTooltip", "pbiTooltipDisabled", 4, "ngSwitchCase" ], [ "class", "endorsementBadge none", 3, "pbiTooltip", "pbiTooltipDisabled", 4, "ngSwitchDefault" ], [ 1, "endorsementBadge", "masterData", "defaultTheme", 3, "ngClass", "pbiTooltip", "pbiTooltipDisabled" ], [ "name", "database_stack_asterisk_16_regular", "sprite", "trident-icons", 1, "endorsementIcon", "defaultTheme" ], [ "localize", "MasterData", 1, "endorsementLabel", "masterData", "defaultTheme" ], [ "class", "endorsementBadge whiteTheme", 3, "ngClass", "pbiTooltip", "pbiTooltipDisabled", 4, "ngIf", "ngIfElse" ], [ "defaultTheme", "" ], [ 1, "endorsementBadge", "whiteTheme", 3, "ngClass", "pbiTooltip", "pbiTooltipDisabled" ], [ "name", "ribbon_16_regular", 1, "endorsementIcon" ], [ "localize", "Certified", 1, "endorsementLabel", "certified" ], [ 1, "endorsementBadge", "certified", "defaultTheme", 3, "ngClass", "pbiTooltip", "pbiTooltipDisabled" ], [ "name", "ribbon_16_regular", 1, "endorsementIcon", "defaultTheme" ], [ "localize", "Certified", 1, "endorsementLabel", "certified", "defaultTheme" ], [ 1, "endorsementBadge", "promoted", "defaultTheme", 3, "ngClass", "pbiTooltip", "pbiTooltipDisabled" ], [ "name", "checkmark_starburst_16_regular", 1, "endorsementIcon", "defaultTheme" ], [ "localize", "Promoted", 1, "endorsementLabel", "promoted", "defaultTheme" ], [ 1, "endorsementBadge", "none", 3, "pbiTooltip", "pbiTooltipDisabled" ] ],
                template: function(rf, ctx) {
                    1 & rf && (_angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275elementContainerStart"](0, 0), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275template"](1, EndorsementBadgeComponent_section_1_Template, 4, 6, "section", 1), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275template"](2, EndorsementBadgeComponent_ng_container_2_Template, 4, 2, "ng-container", 2), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275template"](3, EndorsementBadgeComponent_section_3_Template, 4, 6, "section", 3), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275template"](4, EndorsementBadgeComponent_span_4_Template, 2, 4, "span", 4), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275elementContainerEnd"]()), 
                    2 & rf && (_angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275property"]("ngSwitch", ctx.stage), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275advance"](1), _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275property"]("ngSwitchCase", ctx.masterData), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275advance"](1), _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275property"]("ngSwitchCase", ctx.certified), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275advance"](1), _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275property"]("ngSwitchCase", ctx.promoted));
                },
                dependencies: [ _angular_common__WEBPACK_IMPORTED_MODULE_4__.NgClass, _angular_common__WEBPACK_IMPORTED_MODULE_4__.NgIf, _angular_common__WEBPACK_IMPORTED_MODULE_4__.NgSwitch, _angular_common__WEBPACK_IMPORTED_MODULE_4__.NgSwitchCase, _angular_common__WEBPACK_IMPORTED_MODULE_4__.NgSwitchDefault, _Localization_directives_localize_directive__WEBPACK_IMPORTED_MODULE_5__.X, _UILibrary_pbi_tooltip_pbi_tooltip_directive__WEBPACK_IMPORTED_MODULE_6__.V, _trident_libs_ux_angular_src_lib_tri_svg_icon_components_tri_svg_icon_tri_svg_icon_component__WEBPACK_IMPORTED_MODULE_0__.M, _Localization_pipes_localize_pipe__WEBPACK_IMPORTED_MODULE_7__.F ],
                styles: [ '[_nghost-%COMP%]{--colorEndorsementForeground: var(--colorNeutralForeground2Rest)}[_nghost-%COMP%]   .endorsementBadge[_ngcontent-%COMP%]{line-height:initial;border-radius:20px;height:100%;max-height:24px}[_nghost-%COMP%]   .endorsementBadge.certified[_ngcontent-%COMP%]{border:1px solid #25891C}[_nghost-%COMP%]   .endorsementBadge.promoted[_ngcontent-%COMP%]{border:1px solid #4668C5}[_nghost-%COMP%]   .endorsementBadge.masterData[_ngcontent-%COMP%]{border:1px solid #9470BD}[_nghost-%COMP%]   .endorsementBadge.none[_ngcontent-%COMP%]{padding-left:8px}[_nghost-%COMP%]   .endorsementBadge.none[_ngcontent-%COMP%]:before{content:"\\2014"}[_nghost-%COMP%]   .endorsementBadge.whiteTheme[_ngcontent-%COMP%]{border:1px solid}[_nghost-%COMP%]   .endorsementBadge[_ngcontent-%COMP%]   .endorsementIcon[_ngcontent-%COMP%]{width:100%;max-height:14px;max-width:14px;font-size:14px;fill:currentColor}[_nghost-%COMP%]   .endorsementBadge[_ngcontent-%COMP%]   .endorsementIcon.defaultTheme[_ngcontent-%COMP%]{color:var(--colorEndorsementForeground)}[_nghost-%COMP%]   .endorsementBadge[_ngcontent-%COMP%]   .endorsementLabel[_ngcontent-%COMP%]{font-size:var(--sm-font-size, 12px);white-space:nowrap;overflow:hidden;text-overflow:ellipsis}[_nghost-%COMP%]   .endorsementBadge[_ngcontent-%COMP%]   .endorsementLabel.defaultTheme[_ngcontent-%COMP%]{color:var(--colorEndorsementForeground)}[_nghost-%COMP%]   .in-ie-browser.promoted[_ngcontent-%COMP%]{max-width:95px}[_nghost-%COMP%]   .in-ie-browser.certified[_ngcontent-%COMP%]{max-width:85px}[_nghost-%COMP%]   .in-ie-browser.masterData[_ngcontent-%COMP%]{max-width:85px}[_nghost-%COMP%]   .in-ie-browser[_ngcontent-%COMP%]   .endorsementLabel[_ngcontent-%COMP%]{bottom:2px}[_nghost-%COMP%]   .browser-default[_ngcontent-%COMP%]{display:flex;align-items:center;max-width:fit-content}[_nghost-%COMP%]   .browser-default[_ngcontent-%COMP%]   .endorsementLabel[_ngcontent-%COMP%]{flex:1;bottom:1px}html:not([dir="rtl"])[_nghost-%COMP%]   .browser-default[_ngcontent-%COMP%]   .endorsementIcon[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .browser-default[_ngcontent-%COMP%]   .endorsementIcon[_ngcontent-%COMP%]{margin:8px 4px 8px 8px}html[dir="rtl"][_nghost-%COMP%]   .browser-default[_ngcontent-%COMP%]   .endorsementIcon[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .browser-default[_ngcontent-%COMP%]   .endorsementIcon[_ngcontent-%COMP%]{margin:8px 8px 8px 4px}html:not([dir="rtl"])[_nghost-%COMP%]   .browser-default[_ngcontent-%COMP%]   .pbi-glyph-promotedendorsement[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .browser-default[_ngcontent-%COMP%]   .pbi-glyph-promotedendorsement[_ngcontent-%COMP%]{padding:8px 4px 8px 10px}html[dir="rtl"][_nghost-%COMP%]   .browser-default[_ngcontent-%COMP%]   .pbi-glyph-promotedendorsement[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .browser-default[_ngcontent-%COMP%]   .pbi-glyph-promotedendorsement[_ngcontent-%COMP%]{padding:8px 10px 8px 4px}html:not([dir="rtl"])[_nghost-%COMP%]   .in-ie-browser[_ngcontent-%COMP%]   .endorsementIcon[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .in-ie-browser[_ngcontent-%COMP%]   .endorsementIcon[_ngcontent-%COMP%]{padding:5px 4px 8px 8px}html[dir="rtl"][_nghost-%COMP%]   .in-ie-browser[_ngcontent-%COMP%]   .endorsementIcon[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .in-ie-browser[_ngcontent-%COMP%]   .endorsementIcon[_ngcontent-%COMP%]{padding:5px 8px 8px 4px}html:not([dir="rtl"])[_nghost-%COMP%]   .in-ie-browser[_ngcontent-%COMP%]   .pbi-glyph-promotedendorsement[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .in-ie-browser[_ngcontent-%COMP%]   .pbi-glyph-promotedendorsement[_ngcontent-%COMP%]{padding:5px 4px 8px 10px}html[dir="rtl"][_nghost-%COMP%]   .in-ie-browser[_ngcontent-%COMP%]   .pbi-glyph-promotedendorsement[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .in-ie-browser[_ngcontent-%COMP%]   .pbi-glyph-promotedendorsement[_ngcontent-%COMP%]{padding:5px 10px 8px 4px}html:not([dir="rtl"])[_nghost-%COMP%]   .endorsementLabel[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .endorsementLabel[_ngcontent-%COMP%]{margin-left:0;margin-right:12px}html[dir="rtl"][_nghost-%COMP%]   .endorsementLabel[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .endorsementLabel[_ngcontent-%COMP%]{margin-left:12px;margin-right:0}' ],
                changeDetection: 0
            }), EndorsementBadgeComponent;
        }();
    },
    79509: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            a: function() {
                return ArtifactEndorsementUICommonModule;
            }
        }), __webpack_require__(65818), __webpack_require__(73471);
        var core = __webpack_require__(50423), common = __webpack_require__(77476);
        __webpack_require__(36858), __webpack_require__(74913), __webpack_require__(85102);
        var localization_module = __webpack_require__(79061), pbi_tooltip_module = __webpack_require__(16095), tri_svg_icon = __webpack_require__(17177), ArtifactEndorsementUICommonModule = function() {
            function ArtifactEndorsementUICommonModule() {}
            return ArtifactEndorsementUICommonModule.\u0275fac = function(t) {
                return new (t || ArtifactEndorsementUICommonModule);
            }, ArtifactEndorsementUICommonModule.\u0275mod = core["\u0275\u0275defineNgModule"]({
                type: ArtifactEndorsementUICommonModule
            }), ArtifactEndorsementUICommonModule.\u0275inj = core["\u0275\u0275defineInjector"]({
                imports: [ common.CommonModule, localization_module.v, pbi_tooltip_module.Z, tri_svg_icon.T6 ]
            }), ArtifactEndorsementUICommonModule;
        }();
    },
    90047: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            BN: function() {
                return Update;
            },
            Dq: function() {
                return REMOVE;
            },
            F0: function() {
                return RefreshDashboardTiles;
            },
            G$: function() {
                return PinTileToNewDashboard;
            },
            GH: function() {
                return UnloadDashboardTiles;
            },
            HG: function() {
                return Delete;
            },
            JW: function() {
                return Remove;
            },
            Ph: function() {
                return Select;
            },
            Q6: function() {
                return PinTileToExistingDashboard;
            },
            Qj: function() {
                return Create;
            },
            TG: function() {
                return RemoveTile;
            },
            Ui: function() {
                return MoveDashboardToSubfolderSuccess;
            },
            Wy: function() {
                return DELETE_SUCCESS;
            },
            Y3: function() {
                return ADD_OR_UPDATE_SUCCESS;
            },
            a: function() {
                return AddOrUpdate;
            },
            c: function() {
                return Hide;
            },
            i: function() {
                return LoadContainer;
            },
            ic: function() {
                return Rename;
            },
            yO: function() {
                return Unhide;
            }
        });
        var ADD_OR_UPDATE_SUCCESS = "[Dashboard] Add Or Update Success", DELETE_SUCCESS = "[Dashboard] Delete Success", REMOVE = "[Dashboard] Remove", AddOrUpdate = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Dashboard] Add Or Update";
            };
        }(), Create = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Dashboard] Create";
            };
        }(), Delete = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Dashboard] Delete";
            };
        }(), Hide = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Dashboard] Hide";
            };
        }(), Unhide = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Dashboard] Unhide";
            };
        }(), LoadContainer = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Dashboard] Load container";
            };
        }(), Select = function() {
            return function(payload, skipLoad) {
                void 0 === skipLoad && (skipLoad = !1), this.payload = payload, this.skipLoad = skipLoad, 
                this.type = "[Dashboard] Select";
            };
        }(), Remove = function() {
            return function(payload) {
                this.payload = payload, this.type = REMOVE;
            };
        }(), Rename = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Dashboard] Rename";
            };
        }(), Update = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Dashboard] Update";
            };
        }(), UnloadDashboardTiles = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Dashboard] Unload Dashboard Tiles";
            };
        }(), RefreshDashboardTiles = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Dashboard] Refresh Dashboard Tiles";
            };
        }(), PinTileToExistingDashboard = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Dashboard] pin tile to existing dashboard";
            };
        }(), PinTileToNewDashboard = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Dashboard] pin tile to new dashboard";
            };
        }(), RemoveTile = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Dashboard] Remove tile";
            };
        }(), MoveDashboardToSubfolderSuccess = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Dashboard] Move To Subfolder Success";
            };
        }();
    },
    14967: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            Gp: function() {
                return UpdateCaching;
            },
            HG: function() {
                return Delete;
            },
            JW: function() {
                return Remove;
            },
            T4: function() {
                return BulkLoad;
            },
            Uo: function() {
                return LoadAllSuccess;
            },
            Wy: function() {
                return DELETE_SUCCESS;
            },
            Xg: function() {
                return MoveToSubfolderSuccess;
            },
            dG: function() {
                return LoadUserPermissions;
            },
            dQ: function() {
                return Endorse;
            },
            ic: function() {
                return Rename;
            },
            pH: function() {
                return LoadShared;
            },
            q5: function() {
                return Load;
            },
            rR: function() {
                return BULK_LOAD_SUCCESS;
            },
            zb: function() {
                return EnsureLoadedReadonlyShared;
            },
            zh: function() {
                return BulkAddWithoutUpdate;
            }
        });
        var BULK_LOAD_SUCCESS = "[Dataset] Bulk Load Success", DELETE_SUCCESS = "[Dataset] Delete Success", LoadAllSuccess = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Dataset] Load All Success";
            };
        }(), Load = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Dataset] Load";
            };
        }(), BulkAddWithoutUpdate = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Dataset] Bulk Add Without Update";
            };
        }(), BulkLoad = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Dataset] Bulk Load";
            };
        }(), Delete = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Dataset] Delete";
            };
        }(), Rename = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Dataset] Rename";
            };
        }(), Remove = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Dataset] Remove";
            };
        }(), LoadShared = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Dataset] Load Shared";
            };
        }(), UpdateCaching = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Dataset] Update Caching";
            };
        }(), LoadUserPermissions = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Dataset] Load User Permissions";
            };
        }(), Endorse = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Dataset] Endorse";
            };
        }(), EnsureLoadedReadonlyShared = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Dataset] Ensure Loaded readonly shared";
            };
        }(), MoveToSubfolderSuccess = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Dataset] Move To Subfolder Success";
            };
        }();
    },
    14225: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            D7: function() {
                return ADD;
            },
            HG: function() {
                return Delete;
            },
            Pd: function() {
                return ADD_SUCCESS;
            },
            Qx: function() {
                return DELETE_FAIL;
            },
            aM: function() {
                return LOAD_SUCCESS;
            },
            kd: function() {
                return AddWithoutNumericId;
            },
            mm: function() {
                return Add;
            },
            xn: function() {
                return ADD_FAIL;
            },
            yY: function() {
                return DELETE;
            }
        });
        var ADD = "[Favorite] Add", ADD_SUCCESS = "[Favorite] Add Success", ADD_FAIL = "[Favorite] Add Fail", DELETE = "[Favorite] Delete", DELETE_FAIL = "[Favorite] Delete Fail", LOAD_SUCCESS = "[Favorite] Load Success", Add = function() {
            return function(payload) {
                this.payload = payload, this.type = ADD;
            };
        }(), AddWithoutNumericId = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Favorite] Add Without Numeric Id";
            };
        }(), Delete = function() {
            return function(payload) {
                this.payload = payload, this.type = DELETE;
            };
        }();
    },
    47824: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            Gg: function() {
                return AddMany;
            },
            HG: function() {
                return Delete;
            },
            Wy: function() {
                return DELETE_SUCCESS;
            },
            Y3: function() {
                return ADD_OR_UPDATE_SUCCESS;
            },
            Zt: function() {
                return UpsertMany;
            },
            a: function() {
                return AddOrUpdate;
            },
            pA: function() {
                return PublishSuccess;
            }
        });
        var DELETE_SUCCESS = "[Package] Delete Success", ADD_OR_UPDATE_SUCCESS = "[Package] Add or Update Success", Delete = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Package] Delete";
            };
        }(), AddOrUpdate = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Package] Add or Update";
            };
        }(), AddMany = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Package] Add Many";
            };
        }(), UpsertMany = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Package] Upsert Many";
            };
        }(), PublishSuccess = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Package] Publish Success";
            };
        }();
    },
    98632: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            AX: function() {
                return UpdateMany;
            },
            BN: function() {
                return Update;
            },
            Dq: function() {
                return REMOVE;
            },
            EC: function() {
                return ENSURE;
            },
            HG: function() {
                return Delete;
            },
            JW: function() {
                return Remove;
            },
            Lf: function() {
                return UpdateVisibility;
            },
            Ph: function() {
                return Select;
            },
            Wy: function() {
                return DELETE_SUCCESS;
            },
            Xg: function() {
                return MoveToSubfolderSuccess;
            },
            Zt: function() {
                return UpsertMany;
            },
            _S: function() {
                return Ensure;
            },
            aM: function() {
                return LOAD_SUCCESS;
            },
            c: function() {
                return Hide;
            },
            f$: function() {
                return Rebind;
            },
            ic: function() {
                return Rename;
            },
            q5: function() {
                return Load;
            },
            xb: function() {
                return SyncServiceLoad;
            },
            yO: function() {
                return Unhide;
            },
            yi: function() {
                return EnsureReportMetadata;
            }
        });
        var DELETE_SUCCESS = "[Report] Delete Success", ENSURE = "[Report] Ensure", LOAD_SUCCESS = "[Report] Load Success", REMOVE = "[Report] Remove", EnsureReportMetadata = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Report] Ensure Report Metadata";
            };
        }(), Load = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Report] Load";
            };
        }(), SyncServiceLoad = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Report] Load From Sync Service";
            };
        }(), Delete = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Report] Delete";
            };
        }(), UpdateVisibility = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Report] Update Visibility";
            };
        }(), Rename = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Report] Rename";
            };
        }(), Rebind = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Report] Rebind";
            };
        }(), Select = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Report] Select";
            };
        }(), Ensure = function() {
            return function(payload) {
                this.payload = payload, this.type = ENSURE;
            };
        }(), Remove = function() {
            return function(payload) {
                this.payload = payload, this.type = REMOVE;
            };
        }(), Update = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Report] Update";
            };
        }(), UpdateMany = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Report] Update Many";
            };
        }(), UpsertMany = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Report] Upsert Many";
            };
        }(), Hide = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Report] Hide";
            };
        }(), Unhide = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Report] Unhide";
            };
        }(), MoveToSubfolderSuccess = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Report] Move To Subfolder Success";
            };
        }();
    },
    66223: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            BN: function() {
                return Update;
            },
            Dq: function() {
                return REMOVE;
            },
            FJ: function() {
                return PersistDataInfo;
            },
            HG: function() {
                return Delete;
            },
            JW: function() {
                return Remove;
            },
            UW: function() {
                return Download;
            },
            Wy: function() {
                return DELETE_SUCCESS;
            },
            YB: function() {
                return GenerateConnectedWorkbook;
            },
            bb: function() {
                return Import;
            },
            c: function() {
                return Hide;
            },
            ic: function() {
                return Rename;
            },
            lk: function() {
                return BatchUpdate;
            },
            p7: function() {
                return ConvertToDatasetLocal;
            },
            q5: function() {
                return Load;
            },
            yO: function() {
                return Unhide;
            },
            yt: function() {
                return ConvertToDatasetODSP;
            }
        });
        var DELETE_SUCCESS = "[Workbook] Delete Success", REMOVE = "[Workbook] Remove", Load = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Workbook] Load";
            };
        }(), Delete = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Workbook] Delete";
            };
        }(), Rename = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Workbook] Rename";
            };
        }(), Remove = function() {
            return function(payload) {
                this.payload = payload, this.type = REMOVE;
            };
        }(), Hide = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Workbook] Hide";
            };
        }(), Unhide = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Workbook] Unhide";
            };
        }(), Update = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Workbook] Update";
            };
        }(), BatchUpdate = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Workbook] Batch Update";
            };
        }(), GenerateConnectedWorkbook = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Workbook] Generate Connected Workbook";
            };
        }(), Import = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Workbook] Import";
            };
        }(), PersistDataInfo = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Workbook] Persist Data Info";
            };
        }(), Download = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Workbook] Download";
            };
        }(), ConvertToDatasetLocal = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Workbook] Convert to Dataset Local";
            };
        }(), ConvertToDatasetODSP = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Workbook] Convert to Dataset ODSP";
            };
        }();
    },
    90982: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            e: function() {
                return CoreModuleConfigurationInjectionToken;
            }
        });
        var CoreModuleConfigurationInjectionToken = new (__webpack_require__(50423).InjectionToken)("coreModuleConfiguration");
    },
    50911: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            s: function() {
                return DatasetStore;
            }
        });
        var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(81337), _actions_dataset__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(14967), _core_module_configuration__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(90982), _reducers_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(28726), _reducers_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(18405), rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(48787), rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(14172), _permission_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(87041), _angular_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(50423), _ngrx_store__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(85732), DatasetStore = function() {
            function DatasetStore(store, config) {
                this.store = store, this.config = config, this.dataset$ = this.store.select(config.shouldFilterDataServicesByFolder ? _reducers_index__WEBPACK_IMPORTED_MODULE_0__.F8 : _reducers_index__WEBPACK_IMPORTED_MODULE_1__.uL), 
                this.explorableDatasets$ = this.store.select(_reducers_index__WEBPACK_IMPORTED_MODULE_0__.Ol), 
                this.writeableModels$ = this.store.select(_reducers_index__WEBPACK_IMPORTED_MODULE_0__.YZ), 
                this.selectedDataset$ = this.store.select(_reducers_index__WEBPACK_IMPORTED_MODULE_1__.rY);
            }
            return Object.defineProperty(DatasetStore.prototype, "datasets", {
                get: function() {
                    return this.dataset$;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(DatasetStore.prototype, "explorableDatasets", {
                get: function() {
                    return this.explorableDatasets$;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(DatasetStore.prototype, "writeableModels", {
                get: function() {
                    return this.writeableModels$.pipe((0, rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.q)(1)).toPromise();
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(DatasetStore.prototype, "selectedDataset", {
                get: function() {
                    return this.selectedDataset$;
                },
                enumerable: !1,
                configurable: !0
            }), DatasetStore.prototype.getSelectedDatasetId = function() {
                return this.store.select(_reducers_index__WEBPACK_IMPORTED_MODULE_1__.m5);
            }, DatasetStore.prototype.getDatasetsByGroupId = function(groupId) {
                return this.store.select(_reducers_index__WEBPACK_IMPORTED_MODULE_0__.Rx, {
                    id: groupId
                }).pipe((0, rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.q)(1));
            }, DatasetStore.prototype.findById = function(id, packageId) {
                var uniqueId = id + "_" + packageId;
                return this.store.select(_reducers_index__WEBPACK_IMPORTED_MODULE_1__.vw).pipe((0, 
                rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.U)(function(datasets) {
                    return datasets[uniqueId];
                }), (0, rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.q)(1)).toPromise();
            }, DatasetStore.prototype.findDatasetById = function(id) {
                return this.store.select(_reducers_index__WEBPACK_IMPORTED_MODULE_1__.Ue, {
                    id
                }).pipe((0, rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.q)(1)).toPromise();
            }, DatasetStore.prototype.findDatasetByIdAsObservable = function(id) {
                return this.store.select(_reducers_index__WEBPACK_IMPORTED_MODULE_1__.Ue, {
                    id
                });
            }, DatasetStore.prototype.findByPackageId = function(packageId, groupObjectId) {
                return (this.config.shouldFilterDataServicesByFolder ? this.store.select(_reducers_index__WEBPACK_IMPORTED_MODULE_0__.Rx, {
                    id: groupObjectId
                }) : this.store.select(_reducers_index__WEBPACK_IMPORTED_MODULE_1__.Su)).pipe((0, 
                rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.U)(function(datasets) {
                    return datasets.filter(function(ds) {
                        return ds.packageId === packageId;
                    });
                }), (0, rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.q)(1)).toPromise();
            }, DatasetStore.prototype.findDataset = function(id, packageId, allowOtherPackages) {
                return void 0 === allowOtherPackages && (allowOtherPackages = !1), this.store.select(_reducers_index__WEBPACK_IMPORTED_MODULE_1__.pY, {
                    modelId: id,
                    packageId,
                    allowOtherPackages
                }).pipe((0, rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.q)(1)).toPromise();
            }, DatasetStore.prototype.findDatasetByObjectId = function(dbName) {
                return this.store.select(_reducers_index__WEBPACK_IMPORTED_MODULE_0__.Z6, dbName).pipe((0, 
                rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.U)(function(datasets) {
                    return datasets[0];
                }), (0, rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.q)(1)).toPromise();
            }, DatasetStore.prototype.findAll = function(id, forceSearchAllFolders) {
                return void 0 === forceSearchAllFolders && (forceSearchAllFolders = !1), this.store.select(forceSearchAllFolders || !this.config.shouldFilterDataServicesByFolder ? _reducers_index__WEBPACK_IMPORTED_MODULE_1__.Su : _reducers_index__WEBPACK_IMPORTED_MODULE_0__.qI).pipe((0, 
                rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.U)(function(datasets) {
                    return datasets.filter(function(ds) {
                        return ds.id === id;
                    });
                }), (0, rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.q)(1)).toPromise();
            }, DatasetStore.prototype.loadUserPermissions = function(id, permission) {
                this.store.dispatch(new _actions_dataset__WEBPACK_IMPORTED_MODULE_4__.dG({
                    id,
                    permissions: permission
                }));
            }, DatasetStore.prototype.delete = function(dataset, fromSyncService, telemetryEvent) {
                return dataset && this.store.dispatch(fromSyncService ? new _actions_dataset__WEBPACK_IMPORTED_MODULE_4__.JW({
                    dataset,
                    relatedReportIds: []
                }) : new _actions_dataset__WEBPACK_IMPORTED_MODULE_4__.HG({
                    dataset,
                    telemetryEvent
                })), telemetryEvent && telemetryEvent.promise;
            }, DatasetStore.prototype.rename = function(dataset, newName, telemetryEvent) {
                return this.store.dispatch(new _actions_dataset__WEBPACK_IMPORTED_MODULE_4__.ic({
                    dataset,
                    name: newName,
                    telemetryEvent
                })), telemetryEvent && telemetryEvent.promise;
            }, DatasetStore.prototype.bulkLoad = function(datasets, loadCompletion) {
                this.store.dispatch(new _actions_dataset__WEBPACK_IMPORTED_MODULE_4__.T4({
                    datasets,
                    loadCompletion
                }));
            }, DatasetStore.prototype.load = function(id, packageId, loadCompletion, telemetryEvent) {
                this.store.dispatch(new _actions_dataset__WEBPACK_IMPORTED_MODULE_4__.q5({
                    id,
                    packageId,
                    loadCompletion,
                    telemetryEvent
                }));
            }, DatasetStore.prototype.add = function(id, packageId, loadCompletion) {
                this.store.dispatch(new _actions_dataset__WEBPACK_IMPORTED_MODULE_4__.q5({
                    id,
                    packageId,
                    isNew: !0,
                    loadCompletion
                }));
            }, DatasetStore.prototype.bulkAdd = function(models) {
                this.store.dispatch(new _actions_dataset__WEBPACK_IMPORTED_MODULE_4__.Uo(models));
            }, DatasetStore.prototype.bulkAddWithoutUpdate = function(models) {
                this.store.dispatch(new _actions_dataset__WEBPACK_IMPORTED_MODULE_4__.zh(models));
            }, DatasetStore.prototype.loadShared = function(loadCompletion) {
                this.store.dispatch(new _actions_dataset__WEBPACK_IMPORTED_MODULE_4__.pH({
                    loadCompletion
                }));
            }, DatasetStore.prototype.ensureLoadedReadonlyShared = function(loadCompletion) {
                this.store.dispatch(new _actions_dataset__WEBPACK_IMPORTED_MODULE_4__.zb({
                    loadCompletion
                }));
            }, DatasetStore.prototype.updateCaching = function(id, packageId, cachingSettings, telemetryEvent) {
                this.store.dispatch(new _actions_dataset__WEBPACK_IMPORTED_MODULE_4__.Gp({
                    id,
                    packageId,
                    cachingSettings,
                    telemetryEvent
                }));
            }, DatasetStore.prototype.endorse = function(dataset, galleryItem) {
                this.store.dispatch(new _actions_dataset__WEBPACK_IMPORTED_MODULE_4__.dQ({
                    dataset,
                    galleryItem
                }));
            }, DatasetStore.prototype.findModelByDBName = function(dbName, packageId) {
                var model;
                return (model = packageId ? this.dataset$.pipe((0, rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.U)(function(datasetsWithCategory) {
                    return _.find(_.map(datasetsWithCategory, function(datasetWithCategory) {
                        return datasetWithCategory.dataset;
                    }), function(dataset) {
                        return dataset.dbName === dbName && dataset.packageId === packageId;
                    });
                }), (0, rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.q)(1)).toPromise() : this.findDatasetByObjectId(dbName)) || packageId || (model = this.dataset$.pipe((0, 
                rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.U)(function(datasetsWithCategory) {
                    return _.find(_.map(datasetsWithCategory, function(datasetWithCategory) {
                        return datasetWithCategory.dataset;
                    }), function(dataset) {
                        return dataset.dbName === dbName;
                    });
                }), (0, rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.q)(1)).toPromise()), model;
            }, DatasetStore.prototype.moveToSubfolder = function(movedDatasets) {
                this.store.dispatch(new _actions_dataset__WEBPACK_IMPORTED_MODULE_4__.Xg({
                    movedDatasets
                }));
            }, DatasetStore.prototype.getCopyEditUsableDataSets = function(isMyWorkspace) {
                return (0, tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(this, void 0, void 0, function() {
                    var copyAndEditModels, combinedModels, filteredModels;
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_5__.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.store.select(_reducers_index__WEBPACK_IMPORTED_MODULE_1__.uL).pipe((0, 
                            rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.q)(1), (0, rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.U)(function(datasetsWithCategory) {
                                return _.filter(_.map(datasetsWithCategory, function(datasetWithCategory) {
                                    return datasetWithCategory.dataset;
                                }), function(dataset) {
                                    return (0, _permission_service__WEBPACK_IMPORTED_MODULE_6__.q0)(dataset);
                                });
                            })).toPromise() ];

                          case 1:
                            return copyAndEditModels = _a.sent(), [ 4, this.combineAndFilterUsableModelLists(copyAndEditModels, isMyWorkspace) ];

                          case 2:
                            return combinedModels = _a.sent(), [ 2, {
                                models: filteredModels = _.filter(combinedModels, function(m) {
                                    return m.workspaceName;
                                }),
                                filteredCount: copyAndEditModels.length - filteredModels.length
                            } ];
                        }
                    });
                });
            }, DatasetStore.prototype.combineAndFilterUsableModelLists = function(models, isMyWorkspace) {
                return (0, tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(this, void 0, void 0, function() {
                    var allModels, _a, _b, _c;
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_5__.__generator)(this, function(_d) {
                        switch (_d.label) {
                          case 0:
                            return isMyWorkspace ? (_b = (_a = _).concat, [ 4, this.datasets.pipe((0, rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.q)(1), (0, 
                            rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.U)(function(datasetsWithCategory) {
                                return _.map(datasetsWithCategory, function(datasetWithCategory) {
                                    return datasetWithCategory.dataset;
                                });
                            })).toPromise() ]) : [ 2, models ];

                          case 1:
                            return _c = [ _d.sent() ], [ 4, this.explorableDatasets.pipe((0, rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.q)(1)).toPromise() ];

                          case 2:
                            return allModels = _b.apply(_a, _c.concat([ _d.sent() ])), [ 2, _.filter(allModels, function(m) {
                                return 2 !== m.workspaceType;
                            }) ];
                        }
                    });
                });
            }, DatasetStore.\u0275fac = function(t) {
                return new (t || DatasetStore)(_angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275inject"](_ngrx_store__WEBPACK_IMPORTED_MODULE_8__.yh), _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275inject"](_core_module_configuration__WEBPACK_IMPORTED_MODULE_9__.e));
            }, DatasetStore.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275defineInjectable"]({
                token: DatasetStore,
                factory: DatasetStore.\u0275fac,
                providedIn: "root"
            }), DatasetStore;
        }();
    },
    19178: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            Y: function() {
                return GroupStore;
            }
        });
        var tslib__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(81337), _actions_group__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(82515), _reducers_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(74076), _reducers_index__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(40898), rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(82762), rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(11547), rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(59017), rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(81905), rxjs_operators__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(14172), rxjs_operators__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(48787), rxjs_operators__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(41198), rxjs_operators__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(23558), _angular_core__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(50423), _ngrx_store__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(85732), GroupStore = function() {
            function GroupStore(store) {
                this.store = store;
            }
            return Object.defineProperty(GroupStore.prototype, "selectedGroup$", {
                get: function() {
                    return this.store.select(_reducers_index__WEBPACK_IMPORTED_MODULE_0__.S6);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(GroupStore.prototype, "selectedFolderId$", {
                get: function() {
                    return this.store.select(_reducers_index__WEBPACK_IMPORTED_MODULE_0__.CW);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(GroupStore.prototype, "myFolderObjectId$", {
                get: function() {
                    return this.store.select(_reducers_index__WEBPACK_IMPORTED_MODULE_0__.iF);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(GroupStore.prototype, "nonMyWorkspaces$", {
                get: function() {
                    return this.store.select(_reducers_index__WEBPACK_IMPORTED_MODULE_0__.c_);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(GroupStore.prototype, "myWorkspace$", {
                get: function() {
                    return this.store.select(_reducers_index__WEBPACK_IMPORTED_MODULE_0__.Au);
                },
                enumerable: !1,
                configurable: !0
            }), GroupStore.prototype.foldersWithEditPermissions = function(includeMyWorkspace) {
                var _this = this;
                return (0, rxjs__WEBPACK_IMPORTED_MODULE_1__.D)(this.ensureWorkspacesLoaded()).pipe((0, 
                rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.w)(function() {
                    return (0, rxjs__WEBPACK_IMPORTED_MODULE_3__.aj)([ _this.store.select(_reducers_index__WEBPACK_IMPORTED_MODULE_4__.Ou), includeMyWorkspace ? _this.store.select(_reducers_index__WEBPACK_IMPORTED_MODULE_0__.Ze) : (0, 
                    rxjs__WEBPACK_IMPORTED_MODULE_5__.of)(null) ]);
                }), (0, rxjs_operators__WEBPACK_IMPORTED_MODULE_6__.U)(function(_a) {
                    var myWorkspace = _a[1], sortedFolders = _(_a[0]).filter(function(f) {
                        return !myWorkspace || !_.isEqual(f, myWorkspace);
                    }).sortBy(function(f) {
                        return f.displayName.toLocaleLowerCase();
                    }).value();
                    return myWorkspace ? (0, tslib__WEBPACK_IMPORTED_MODULE_7__.__spreadArray)([ myWorkspace ], sortedFolders, !0) : sortedFolders;
                }));
            }, GroupStore.prototype.add = function(group, isFolder) {
                this.store.dispatch(new _actions_group__WEBPACK_IMPORTED_MODULE_8__.mm({
                    group,
                    isFolder
                }));
            }, Object.defineProperty(GroupStore.prototype, "folders", {
                get: function() {
                    return this.store.select(_reducers_index__WEBPACK_IMPORTED_MODULE_4__.xh).pipe((0, 
                    rxjs_operators__WEBPACK_IMPORTED_MODULE_6__.U)(function(value) {
                        return _.map(Object.keys(value), function(key) {
                            return value[key];
                        });
                    }));
                },
                enumerable: !1,
                configurable: !0
            }), GroupStore.prototype.remove = function(objectId) {
                this.store.dispatch(new _actions_group__WEBPACK_IMPORTED_MODULE_8__.JW(objectId));
            }, GroupStore.prototype.update = function(folders) {
                this.store.dispatch(new _actions_group__WEBPACK_IMPORTED_MODULE_8__.BN(folders));
            }, GroupStore.prototype.updateGroup = function(group) {
                this.store.dispatch(new _actions_group__WEBPACK_IMPORTED_MODULE_8__.bn(group));
            }, GroupStore.prototype.updatePartialWorkspaces = function(folders) {
                this.store.dispatch(new _actions_group__WEBPACK_IMPORTED_MODULE_8__.ZG(folders));
            }, GroupStore.prototype.load = function(groupObjectId) {
                this.store.dispatch(new _actions_group__WEBPACK_IMPORTED_MODULE_8__.q5({
                    groupId: groupObjectId
                }));
            }, GroupStore.prototype.getGroupById = function(groupObjectId) {
                return this.store.select(_reducers_index__WEBPACK_IMPORTED_MODULE_0__.VL, {
                    id: groupObjectId
                });
            }, GroupStore.prototype.getAllNonEmptyDomains = function() {
                return this.store.select(_reducers_index__WEBPACK_IMPORTED_MODULE_0__.vL);
            }, GroupStore.prototype.addDomainFilters = function(domainObjectIds) {
                this.store.dispatch(new _actions_group__WEBPACK_IMPORTED_MODULE_8__.qC({
                    domainObjectIds
                }));
            }, GroupStore.prototype.deleteDomainFilters = function(domainObjectIds) {
                this.store.dispatch(new _actions_group__WEBPACK_IMPORTED_MODULE_8__.tk({
                    domainObjectIds
                }));
            }, GroupStore.prototype.getGroupObjectId = function(groupId) {
                return this.store.select(_reducers_index__WEBPACK_IMPORTED_MODULE_0__.cM).pipe((0, 
                rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.w)(function(groups) {
                    for (var groupObjectId in groups) {
                        var selectedGroup = groups[groupObjectId];
                        if (selectedGroup.id === groupId) return (0, rxjs__WEBPACK_IMPORTED_MODULE_5__.of)(null == selectedGroup ? void 0 : selectedGroup.objectId);
                    }
                    return (0, rxjs__WEBPACK_IMPORTED_MODULE_5__.of)(void 0);
                }), (0, rxjs_operators__WEBPACK_IMPORTED_MODULE_9__.q)(1));
            }, GroupStore.prototype.loadSuccess = function(groupObjectId, dashboardContainer, folderNumericId, permissions) {
                this.store.dispatch(new _actions_group__WEBPACK_IMPORTED_MODULE_8__.Xt({
                    id: groupObjectId,
                    group: dashboardContainer,
                    folderId: folderNumericId,
                    permissions
                }));
            }, GroupStore.prototype.loadSuccessBasedOnWorkspaceContext = function(groupObjectId, dashboardContainer) {
                var _this = this;
                this.store.select(_reducers_index__WEBPACK_IMPORTED_MODULE_0__.ve).pipe((0, rxjs_operators__WEBPACK_IMPORTED_MODULE_9__.q)(1)).subscribe(function(folderId) {
                    _this.store.dispatch(new _actions_group__WEBPACK_IMPORTED_MODULE_8__.Xt(folderId ? {
                        id: groupObjectId,
                        group: dashboardContainer,
                        folderId: void 0,
                        permissions: void 0,
                        currentWorkspaceType: "folder"
                    } : {
                        id: groupObjectId,
                        group: dashboardContainer,
                        folderId: void 0,
                        permissions: void 0,
                        currentWorkspaceType: "group"
                    }));
                });
            }, GroupStore.prototype.select = function(groupObjectId) {
                this.store.dispatch(new _actions_group__WEBPACK_IMPORTED_MODULE_8__.Ph({
                    id: groupObjectId
                }));
            }, GroupStore.prototype.switch = function(groupObjectId, groupSwitchOptions) {
                this.store.dispatch(new _actions_group__WEBPACK_IMPORTED_MODULE_8__.q_({
                    groupId: groupObjectId,
                    groupSwitchOptions
                }));
            }, GroupStore.prototype.ensureGroupArtifactsLoaded = function(groupObjectId, addArtifacts) {
                var _this = this;
                return this.store.select(_reducers_index__WEBPACK_IMPORTED_MODULE_0__.s4).pipe((0, 
                rxjs_operators__WEBPACK_IMPORTED_MODULE_10__.n)(function(loaded) {
                    return !loaded;
                }), (0, rxjs_operators__WEBPACK_IMPORTED_MODULE_9__.q)(1)).subscribe(function() {
                    _this.store.dispatch(new _actions_group__WEBPACK_IMPORTED_MODULE_8__._S({
                        groupObjectId,
                        refreshIfStale: !1,
                        addArtifacts
                    }));
                }), this.store.select(_reducers_index__WEBPACK_IMPORTED_MODULE_0__.VL, {
                    id: groupObjectId
                }).pipe((0, rxjs_operators__WEBPACK_IMPORTED_MODULE_11__.M)(this.store.select(_reducers_index__WEBPACK_IMPORTED_MODULE_0__.Uy)), (0, 
                rxjs_operators__WEBPACK_IMPORTED_MODULE_10__.n)(function(_a) {
                    var group = _a[0];
                    return !group || !(group.loaded && (!addArtifacts || !0 === _a[1]));
                }), (0, rxjs_operators__WEBPACK_IMPORTED_MODULE_9__.q)(1), (0, rxjs_operators__WEBPACK_IMPORTED_MODULE_6__.U)(function() {
                    return !0;
                })).toPromise();
            }, GroupStore.prototype.ensureGroupArtifactsLoadedOrError = function(groupObjectId) {
                var _this = this;
                return this.store.select(_reducers_index__WEBPACK_IMPORTED_MODULE_0__.s4).pipe((0, 
                rxjs_operators__WEBPACK_IMPORTED_MODULE_10__.n)(function(loaded) {
                    return !loaded;
                }), (0, rxjs_operators__WEBPACK_IMPORTED_MODULE_9__.q)(1)).subscribe(function() {
                    _this.store.dispatch(new _actions_group__WEBPACK_IMPORTED_MODULE_8__._S({
                        groupObjectId,
                        refreshIfStale: !1
                    }));
                }), this.store.select(_reducers_index__WEBPACK_IMPORTED_MODULE_0__.VL, {
                    id: groupObjectId
                }).pipe((0, rxjs_operators__WEBPACK_IMPORTED_MODULE_10__.n)(function(group) {
                    return !group || !group.loaded && !group.loadedWithError;
                }), (0, rxjs_operators__WEBPACK_IMPORTED_MODULE_9__.q)(1), (0, rxjs_operators__WEBPACK_IMPORTED_MODULE_6__.U)(function() {
                    return !0;
                })).toPromise();
            }, GroupStore.prototype.ensureGroupSelectedAndLoaded = function(groupObjectId) {
                return this.store.select(_reducers_index__WEBPACK_IMPORTED_MODULE_0__.S6).pipe((0, 
                rxjs_operators__WEBPACK_IMPORTED_MODULE_10__.n)(function(group) {
                    return !group || !group.loaded || group.objectId !== groupObjectId;
                }), (0, rxjs_operators__WEBPACK_IMPORTED_MODULE_9__.q)(1), (0, rxjs_operators__WEBPACK_IMPORTED_MODULE_6__.U)(function() {
                    return !0;
                })).toPromise();
            }, GroupStore.prototype.ensureWorkspacesLoaded = function() {
                var _this = this;
                return this.store.select(_reducers_index__WEBPACK_IMPORTED_MODULE_0__.LD).pipe((0, 
                rxjs_operators__WEBPACK_IMPORTED_MODULE_10__.n)(function(groups) {
                    return !groups || groups.loading;
                }), (0, rxjs_operators__WEBPACK_IMPORTED_MODULE_9__.q)(1)).subscribe(function(groups) {
                    groups.loaded || _this.store.dispatch(new _actions_group__WEBPACK_IMPORTED_MODULE_8__.Us);
                }), this.store.select(_reducers_index__WEBPACK_IMPORTED_MODULE_0__.LD).pipe((0, 
                rxjs_operators__WEBPACK_IMPORTED_MODULE_10__.n)(function(groups) {
                    return !groups || !groups.loaded;
                }), (0, rxjs_operators__WEBPACK_IMPORTED_MODULE_9__.q)(1), (0, rxjs_operators__WEBPACK_IMPORTED_MODULE_6__.U)(function() {
                    return !0;
                })).toPromise();
            }, GroupStore.prototype.forceReloadWorkspaces = function() {
                return this.store.dispatch(new _actions_group__WEBPACK_IMPORTED_MODULE_8__.Us), 
                this.store.select(_reducers_index__WEBPACK_IMPORTED_MODULE_0__.LD).pipe((0, rxjs_operators__WEBPACK_IMPORTED_MODULE_10__.n)(function(groups) {
                    return !groups || !groups.loaded;
                }), (0, rxjs_operators__WEBPACK_IMPORTED_MODULE_9__.q)(1), (0, rxjs_operators__WEBPACK_IMPORTED_MODULE_6__.U)(function() {
                    return !0;
                })).toPromise();
            }, GroupStore.prototype.updateMyWorkSpaceCapacity = function(capacity) {
                this.store.dispatch(new _actions_group__WEBPACK_IMPORTED_MODULE_8__.Vd(capacity));
            }, GroupStore.prototype.loadFoldersSuccess = function(folders) {
                this.store.dispatch(new _actions_group__WEBPACK_IMPORTED_MODULE_8__.uw(folders));
            }, GroupStore.prototype.hide = function(group) {
                this.store.dispatch(new _actions_group__WEBPACK_IMPORTED_MODULE_8__.c({
                    group
                }));
            }, GroupStore.prototype.unhide = function(group) {
                this.store.dispatch(new _actions_group__WEBPACK_IMPORTED_MODULE_8__.yO({
                    group
                }));
            }, GroupStore.\u0275fac = function(t) {
                return new (t || GroupStore)(_angular_core__WEBPACK_IMPORTED_MODULE_12__["\u0275\u0275inject"](_ngrx_store__WEBPACK_IMPORTED_MODULE_13__.yh));
            }, GroupStore.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_12__["\u0275\u0275defineInjectable"]({
                token: GroupStore,
                factory: GroupStore.\u0275fac,
                providedIn: "root"
            }), GroupStore;
        }();
    },
    65692: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            V: function() {
                return PackageStore;
            }
        });
        var _actions_package__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(47824), _reducers_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(81871), _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_StandaloneUtility3__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(43286), rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(11547), rxjs_operators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(48787), rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(59973), rxjs_operators__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(14172), _angular_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(50423), _powerbi_FeatureSwitch__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(9380), _ngrx_store__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(85732), PackageStore = function() {
            function PackageStore(featureSwitchService, store) {
                this.featureSwitchService = featureSwitchService, this.store = store, this.package$ = this.store.select(_reducers_index__WEBPACK_IMPORTED_MODULE_0__.it);
            }
            return Object.defineProperty(PackageStore.prototype, "packages", {
                get: function() {
                    return this.package$;
                },
                enumerable: !1,
                configurable: !0
            }), PackageStore.prototype.findById = function(id) {
                var pkg;
                return this.store.select(_reducers_index__WEBPACK_IMPORTED_MODULE_0__.zu).pipe((0, 
                rxjs_operators__WEBPACK_IMPORTED_MODULE_1__.q)(1)).subscribe(function(packages) {
                    return pkg = packages[id];
                }), pkg;
            }, PackageStore.prototype.delete = function(id) {
                var pkg = this.findById(id);
                pkg && this.store.dispatch(new _actions_package__WEBPACK_IMPORTED_MODULE_2__.HG({
                    pkg
                }));
            }, PackageStore.prototype.addOrUpdate = function(id, telemetryEvent, loadCompletion, skipDisplayError) {
                var originalPackage = this.findById(id);
                return this.store.dispatch(new _actions_package__WEBPACK_IMPORTED_MODULE_2__.a({
                    id,
                    telemetryEvent,
                    loadCompletion,
                    skipDisplayError
                })), originalPackage;
            }, PackageStore.prototype.addMany = function(packages) {
                this.store.dispatch(new _actions_package__WEBPACK_IMPORTED_MODULE_2__.Gg({
                    packages
                }));
            }, PackageStore.prototype.publishSuccess = function(pkg) {
                this.store.dispatch(new _actions_package__WEBPACK_IMPORTED_MODULE_2__.pA({
                    pkg
                }));
            }, PackageStore.prototype.getPackage = function(report) {
                if (!report.model) return (0, rxjs__WEBPACK_IMPORTED_MODULE_3__.of)(void 0);
                var pkg = this.findById(report.model.packageId);
                return pkg || this.addOrUpdate(report.model.packageId), pkg ? (0, rxjs__WEBPACK_IMPORTED_MODULE_3__.of)(pkg) : this.packages.pipe((0, 
                rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.h)(function(packages) {
                    return !!_.find(packages, function(p) {
                        return p.id === report.model.packageId;
                    });
                }), (0, rxjs_operators__WEBPACK_IMPORTED_MODULE_1__.q)(1), (0, rxjs_operators__WEBPACK_IMPORTED_MODULE_5__.U)(function(packages) {
                    return _.find(packages, function(p) {
                        return p.id === report.model.packageId;
                    });
                }));
            }, PackageStore.prototype.isLocalWorkbook = function(workbookPackageId) {
                var workbookPackage = this.findById(workbookPackageId);
                return 0 === (null == workbookPackage ? void 0 : workbookPackage.storageProviderType);
            }, PackageStore.prototype.getWorkbookStorageProvider = function(workbookPackageId) {
                var workbookPackage = this.findById(workbookPackageId);
                return null == workbookPackage ? void 0 : workbookPackage.storageProviderType;
            }, PackageStore.prototype.getWorkbookContentProvider = function(workbookPackageId) {
                var workbookPackage = this.findById(workbookPackageId);
                return null == workbookPackage ? void 0 : workbookPackage.contentProviderId;
            }, PackageStore.prototype.isRefreshNowEnabledForWorkbook = function(workbook) {
                var disallowWorkbookRefresh = this.featureSwitchService.featureSwitches.disallowWorkbookRefresh, hasPermission = (0, 
                _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_StandaloneUtility3__WEBPACK_IMPORTED_MODULE_6__.yE)(workbook.getPermissions(), 2), workbookPackage = this.findById(workbook.packageId);
                return !(disallowWorkbookRefresh || !workbook || !hasPermission || !workbookPackage);
            }, PackageStore.prototype.isRefreshNowEnabledForWorkbookContract = function(workbook) {
                var disallowWorkbookRefresh = this.featureSwitchService.featureSwitches.disallowWorkbookRefresh, hasPermission = (0, 
                _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_StandaloneUtility3__WEBPACK_IMPORTED_MODULE_6__.yE)(workbook.permissions, 2), workbookPackage = this.findById(workbook.packageId);
                return !(disallowWorkbookRefresh || !workbook || !hasPermission || !workbookPackage);
            }, PackageStore.\u0275fac = function(t) {
                return new (t || PackageStore)(_angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275inject"](_powerbi_FeatureSwitch__WEBPACK_IMPORTED_MODULE_8__.vZ), _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275inject"](_ngrx_store__WEBPACK_IMPORTED_MODULE_9__.yh));
            }, PackageStore.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_7__["\u0275\u0275defineInjectable"]({
                token: PackageStore,
                factory: PackageStore.\u0275fac,
                providedIn: "root"
            }), PackageStore;
        }();
    },
    94420: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            R: function() {
                return ReportStore;
            }
        });
        var tslib__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(81337), _actions_report__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(98632), _actions_group__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(82515), _core_module_configuration__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(90982), _helpers_datasets__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(3408), _Common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(35911), _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(62458), rxjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(59017), rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(48787), rxjs_operators__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(14172), rxjs_operators__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(59973), _selectors_shell_groups__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(40521), _selectors_shell_groups__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(74076), _selectors_shell_shared_with_me_selector__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(14556), _selectors_artifacts_report_selector__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(43633), _selectors_artifacts_dataset_selector__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(18405), _selectors_artifacts_package_selector__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(81871), _angular_core__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(50423), _ngrx_store__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(85732), ReportStore = function() {
            function ReportStore(store, config) {
                this.store = store, this.reports$ = this.store.select(config.shouldFilterDataServicesByFolder ? _selectors_shell_groups__WEBPACK_IMPORTED_MODULE_1__.CL : _selectors_artifacts_report_selector__WEBPACK_IMPORTED_MODULE_2__.I1), 
                this.sharedReports$ = this.store.select(config.shouldFilterDataServicesByFolder ? _selectors_shell_groups__WEBPACK_IMPORTED_MODULE_1__.pV : _selectors_shell_shared_with_me_selector__WEBPACK_IMPORTED_MODULE_3__.XA), 
                this.selectedReport$ = this.store.select(_selectors_artifacts_report_selector__WEBPACK_IMPORTED_MODULE_2__.OX);
            }
            return Object.defineProperty(ReportStore.prototype, "reports", {
                get: function() {
                    return this.reports$;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(ReportStore.prototype, "sharedReports", {
                get: function() {
                    return this.sharedReports$;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(ReportStore.prototype, "selectedReport", {
                get: function() {
                    return this.selectedReport$;
                },
                enumerable: !1,
                configurable: !0
            }), ReportStore.prototype.getReportsByGroupId = function(groupId) {
                return this.store.select(_selectors_shell_groups__WEBPACK_IMPORTED_MODULE_1__.Uw, {
                    id: groupId
                }).pipe((0, rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.q)(1));
            }, ReportStore.prototype.findByObjectId = function(objectId) {
                return this.store.select(_selectors_artifacts_report_selector__WEBPACK_IMPORTED_MODULE_2__.Ok).pipe((0, 
                rxjs_operators__WEBPACK_IMPORTED_MODULE_5__.U)(function(reports) {
                    return reports[objectId];
                }), (0, rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.q)(1)).toPromise();
            }, ReportStore.prototype.findById = function(id) {
                return this.store.select(_selectors_artifacts_report_selector__WEBPACK_IMPORTED_MODULE_2__.Ok).pipe((0, 
                rxjs_operators__WEBPACK_IMPORTED_MODULE_5__.U)(function(reports) {
                    return _.find(reports, function(report) {
                        return report.id === id;
                    });
                }), (0, rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.q)(1)).toPromise();
            }, ReportStore.prototype.findByPackageId = function(packageId) {
                return this.store.select(_selectors_artifacts_report_selector__WEBPACK_IMPORTED_MODULE_2__.I1).pipe((0, 
                rxjs_operators__WEBPACK_IMPORTED_MODULE_5__.U)(function(reports) {
                    return _.filter(reports, function(report) {
                        return report.packageId === packageId;
                    });
                }), (0, rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.q)(1)).toPromise();
            }, ReportStore.prototype.findByName = function(name) {
                return this.store.select(_selectors_artifacts_report_selector__WEBPACK_IMPORTED_MODULE_2__.I1).pipe((0, 
                rxjs_operators__WEBPACK_IMPORTED_MODULE_5__.U)(function(reports) {
                    return _.filter(reports, function(report) {
                        var _a;
                        return (null === (_a = report.displayName) || void 0 === _a ? void 0 : _a.toLowerCase()) === (null == name ? void 0 : name.toLowerCase());
                    });
                }), (0, rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.q)(1)).toPromise();
            }, ReportStore.prototype.delete = function(report, fromSyncService, telemetryEvent) {
                return report && this.store.dispatch(fromSyncService ? new _actions_report__WEBPACK_IMPORTED_MODULE_6__.JW({
                    report
                }) : new _actions_report__WEBPACK_IMPORTED_MODULE_6__.HG({
                    report,
                    telemetryEvent
                })), telemetryEvent && telemetryEvent.promise;
            }, ReportStore.prototype.rename = function(report, name, telemetryEvent) {
                return this.store.dispatch(new _actions_report__WEBPACK_IMPORTED_MODULE_6__.ic({
                    report,
                    name,
                    telemetryEvent
                })), telemetryEvent && telemetryEvent.promise;
            }, ReportStore.prototype.load = function(id, loadCompletion) {
                this.store.dispatch(new _actions_report__WEBPACK_IMPORTED_MODULE_6__.q5({
                    id,
                    loadCompletion
                }));
            }, ReportStore.prototype.rebind = function(report, dataset) {
                this.store.dispatch(new _actions_report__WEBPACK_IMPORTED_MODULE_6__.f$({
                    report,
                    dataset
                }));
            }, ReportStore.prototype.addFromSyncService = function(id, loadCompletion) {
                this.store.dispatch(new _actions_report__WEBPACK_IMPORTED_MODULE_6__.xb({
                    id,
                    isNew: !0,
                    loadCompletion
                }));
            }, ReportStore.prototype.select = function(reportInfo) {
                this.store.dispatch(new _actions_report__WEBPACK_IMPORTED_MODULE_6__.Ph({
                    reportInfo
                }));
            }, ReportStore.prototype.ensure = function(report) {
                var _this = this;
                _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_7__.fF.assertValue(report, "ensure - report");
                var store = this.store;
                (0, rxjs__WEBPACK_IMPORTED_MODULE_8__.aj)(store.select(_selectors_artifacts_package_selector__WEBPACK_IMPORTED_MODULE_9__.zu), store.select(_selectors_artifacts_dataset_selector__WEBPACK_IMPORTED_MODULE_10__.Su)).pipe((0, 
                rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.q)(1), (0, rxjs_operators__WEBPACK_IMPORTED_MODULE_5__.U)(function(_a) {
                    var pkg = _a[0][report.packageId], datasetNumericId = report.modelId, dataset = _.find(_a[1], function(d) {
                        return d.id === datasetNumericId;
                    });
                    return new _actions_report__WEBPACK_IMPORTED_MODULE_6__._S({
                        report,
                        pkg,
                        datasetId: dataset && (0, _helpers_datasets__WEBPACK_IMPORTED_MODULE_11__.EL)(dataset)
                    });
                })).subscribe(function(action) {
                    _this.store.dispatch(action);
                });
            }, ReportStore.prototype.updateVisibility = function(report, isVisible, telemetryEvent) {
                this.store.dispatch(new _actions_report__WEBPACK_IMPORTED_MODULE_6__.Lf({
                    report,
                    isVisible,
                    telemetryEvent
                }));
            }, ReportStore.prototype.hide = function(report) {
                this.store.dispatch(new _actions_report__WEBPACK_IMPORTED_MODULE_6__.c({
                    report
                }));
            }, ReportStore.prototype.unhide = function(report) {
                this.store.dispatch(new _actions_report__WEBPACK_IMPORTED_MODULE_6__.yO({
                    report
                }));
            }, ReportStore.prototype.update = function(report, changes) {
                this.store.dispatch(new _actions_report__WEBPACK_IMPORTED_MODULE_6__.BN({
                    report,
                    changes
                }));
            }, ReportStore.prototype.updateMany = function(reports) {
                this.store.dispatch(new _actions_report__WEBPACK_IMPORTED_MODULE_6__.AX(reports));
            }, ReportStore.prototype.isReportInAdminFolder = function() {
                return this.store.select(_selectors_shell_groups__WEBPACK_IMPORTED_MODULE_12__.$y);
            }, ReportStore.prototype.moveToSubfolder = function(movedReports) {
                this.store.dispatch(new _actions_report__WEBPACK_IMPORTED_MODULE_6__.Xg({
                    movedReports
                }));
            }, ReportStore.prototype.ensureReportLoaded = function(reportObjectId, workspaceObjectId) {
                return (0, tslib__WEBPACK_IMPORTED_MODULE_13__.__awaiter)(this, void 0, void 0, function() {
                    var groupState, workspaceObjectIdAfterCheck;
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_13__.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.store.select(_selectors_shell_groups__WEBPACK_IMPORTED_MODULE_12__.cM).pipe((0, 
                            rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.q)(1)).toPromise() ];

                          case 1:
                            return groupState = _a.sent(), this.store.dispatch(new _actions_report__WEBPACK_IMPORTED_MODULE_6__.yi({
                                reportObjectId,
                                workspaceObjectId: workspaceObjectIdAfterCheck = workspaceObjectId && groupState[workspaceObjectId] ? workspaceObjectId : _Common__WEBPACK_IMPORTED_MODULE_0__.fm
                            })), this.store.dispatch(new _actions_group__WEBPACK_IMPORTED_MODULE_14__.oi({
                                groupId: workspaceObjectIdAfterCheck,
                                reportId: reportObjectId
                            })), [ 4, this.store.select(_selectors_artifacts_report_selector__WEBPACK_IMPORTED_MODULE_2__.W4, {
                                id: reportObjectId
                            }).pipe((0, rxjs_operators__WEBPACK_IMPORTED_MODULE_15__.h)(function(report) {
                                return report && (!1 === report.loading || !0 === report.loaded);
                            }), (0, rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.q)(1)).toPromise() ];

                          case 2:
                            return _a.sent(), [ 2 ];
                        }
                    });
                });
            }, ReportStore.\u0275fac = function(t) {
                return new (t || ReportStore)(_angular_core__WEBPACK_IMPORTED_MODULE_16__["\u0275\u0275inject"](_ngrx_store__WEBPACK_IMPORTED_MODULE_17__.yh), _angular_core__WEBPACK_IMPORTED_MODULE_16__["\u0275\u0275inject"](_core_module_configuration__WEBPACK_IMPORTED_MODULE_18__.e));
            }, ReportStore.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_16__["\u0275\u0275defineInjectable"]({
                token: ReportStore,
                factory: ReportStore.\u0275fac,
                providedIn: "root"
            }), ReportStore;
        }();
    },
    75947: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            P: function() {
                return ContentProviderHttpService;
            }
        });
        var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(81337), _powerbi_InjectionTokens_promiseFactory__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(14463), _powerbi_legacy_JsCommon_QueryStringUtil__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(41288), _powerbi_legacy_JsCommon_telemetry_powerbi_errorDetailsHelper__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(94853), _powerbi_legacy_JsCommon_telemetry_telemetryConstants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(58630), _powerbi_legacy_PowerBICommon_telemetry_events__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(59055), _powerbi_legacy_PowerBIContracts_contracts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(7600), _powerbi_legacy_PowerBIVisuals_VisualsCommon_contract__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(12604), _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_Utility__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(38078), _powerbi_Telemetry__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(21617), _angular_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(50423), _powerbi_Http__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(629), _powerbi_SyncService__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(76323), _powerbi_FeatureSwitch__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(9380), ContentProviderHttpService = function() {
            function ContentProviderHttpService(promiseFactory, telemetryService, httpCoreService, syncService, featureSwitchService) {
                this.promiseFactory = promiseFactory, this.telemetryService = telemetryService, 
                this.httpCoreService = httpCoreService, this.syncService = syncService, this.featureSwitchService = featureSwitchService;
            }
            return ContentProviderHttpService.prototype.getNonBuiltInContentProviders = function(contentProviders, serviceContentProviderFlightCode) {
                return contentProviders.filter(function(cp) {
                    return (3 === cp.category || 6 === cp.category) && (!cp.featureSwitch || serviceContentProviderFlightCode && cp.featureSwitch === serviceContentProviderFlightCode);
                });
            }, ContentProviderHttpService.prototype.getBuiltInContentProvidersAsync = function(parentEvent) {
                return (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(this, void 0, void 0, function() {
                    var categoriesStr, telemetryEvent, requestOptions, result, error_1, deferred, errorDetails, errorCode;
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            telemetryEvent = this.telemetryService.startChildEvent(parentEvent, _powerbi_legacy_PowerBICommon_telemetry_events__WEBPACK_IMPORTED_MODULE_3__.gP, {
                                categories: categoriesStr = _powerbi_legacy_PowerBIContracts_contracts__WEBPACK_IMPORTED_MODULE_2__.mx.BuiltIn
                            }), _a.label = 1;

                          case 1:
                            return _a.trys.push([ 1, 3, , 4 ]), requestOptions = this.httpCoreService.powerbiRequestOptions(parentEvent, "GetContentProviders"), 
                            [ 4, this.httpCoreService.get("/powerbi/content/providers/?category=" + categoriesStr, requestOptions) ];

                          case 2:
                            return result = _a.sent(), telemetryEvent.resolve(), [ 2, result.data ];

                          case 3:
                            return error_1 = _a.sent(), deferred = this.promiseFactory.defer(), errorDetails = (0, 
                            _powerbi_legacy_JsCommon_telemetry_powerbi_errorDetailsHelper__WEBPACK_IMPORTED_MODULE_4__.GB)(error_1.error), 
                            telemetryEvent.reject(errorDetails), errorCode = this.getErrorCode(error_1), deferred.reject({
                                errorCode,
                                requestId: error_1.requestId,
                                error: error_1.error
                            }), [ 2, deferred.promise ];

                          case 4:
                            return [ 2 ];
                        }
                    });
                });
            }, ContentProviderHttpService.prototype.getServiceAppContentProviders = function(activeFolderIdService, parentEvent) {
                var requestOptions = this.httpCoreService.powerbiRequestOptions(parentEvent, "getServiceAppContentProviders"), url = "/powerbi/content/providers/?owned=true&category=PowerBIServiceApp";
                return url = _powerbi_legacy_JsCommon_QueryStringUtil__WEBPACK_IMPORTED_MODULE_5__.s.addOrUpdateQueryStringToUrl(url, {
                    folderId: activeFolderIdService.activeFolderObjectId
                }), this.httpCoreService.get(url, requestOptions);
            }, ContentProviderHttpService.prototype.getContentProviders = function(activeFolderIdService, parentEvent) {
                var requestOptions = this.httpCoreService.powerbiRequestOptions(parentEvent, "GetContentProviders"), url = "/powerbi/content/providers/";
                this.featureSwitchService.featureSwitches.includeFlightingContentProviders && (url += "?includeFlightedContentProviders=true");
                var isInGroup = activeFolderIdService.isInFolder, appCategories = [ 5, 7, 6 ];
                return this.httpCoreService.get(url, requestOptions).then(function(result) {
                    return result.data = _.filter(result.data, function(provider) {
                        return 1 !== provider.category;
                    }), isInGroup && (result.data = _.filter(result.data, function(provider) {
                        return !_.includes(appCategories, provider.category);
                    })), result;
                });
            }, ContentProviderHttpService.prototype.getTenantContentProviders = function(parentEvent) {
                var requestOptions = this.httpCoreService.powerbiRequestOptions(parentEvent, "GetTenantContentProviders");
                return this.httpCoreService.get("/powerbi/content/providers/?category=OrganizationalTemplate&owned=true", requestOptions);
            }, ContentProviderHttpService.prototype.getContentProvidersFromCluster = function(parentEvent, clusterUri) {
                var requestOptions = this.httpCoreService.powerbiRequestOptions(parentEvent, "GetContentProviders"), url = clusterUri + "/powerbi/content/providers/";
                return this.featureSwitchService.featureSwitches.includeFlightingContentProviders && (url += "?includeFlightedContentProviders=true"), 
                this.httpCoreService.get(url, requestOptions);
            }, ContentProviderHttpService.prototype.getOrganizationalContentProviders = function(folderId, parentEvent) {
                var url, optionalRequestOptions, categories = [ _powerbi_legacy_PowerBIContracts_contracts__WEBPACK_IMPORTED_MODULE_2__.mx.Organizational, _powerbi_legacy_PowerBIContracts_contracts__WEBPACK_IMPORTED_MODULE_2__.mx.OrganizationalApp ];
                this.templateProvidersEnabled() && categories.push(_powerbi_legacy_PowerBIContracts_contracts__WEBPACK_IMPORTED_MODULE_2__.mx.OrganizationalTemplate, _powerbi_legacy_PowerBIContracts_contracts__WEBPACK_IMPORTED_MODULE_2__.mx.OrganizationalTemplateApp), 
                this.featureSwitchService.featureSwitches.insightApps && categories.push(_powerbi_legacy_PowerBIContracts_contracts__WEBPACK_IMPORTED_MODULE_2__.mx.PowerBIServiceApp), 
                url = "/powerbi/content/providers/?category=" + categories.join(",") + "&owned=true", 
                _.isNumber(folderId) && (url = "".concat(url, "&folderId=").concat(folderId), optionalRequestOptions = {
                    dismissGroupObjectId: !0
                });
                var requestOptions = this.httpCoreService.powerbiRequestOptions(parentEvent, "GetContentProviders", optionalRequestOptions);
                return this.httpCoreService.get(url, requestOptions);
            }, ContentProviderHttpService.prototype.getAppModelMetadata = function(folderObjectId, appsRequestDataType, parentEvent) {
                appsRequestDataType || (appsRequestDataType = 4);
                var url = "".concat("/metadata/appmodel/", "apps/").concat(folderObjectId, "?requestDataType=").concat(appsRequestDataType), requestOptions = this.httpCoreService.powerbiRequestOptions(parentEvent, "GetContentProviders", {
                    dismissGroupObjectId: !0
                });
                return this.httpCoreService.get(url, requestOptions);
            }, ContentProviderHttpService.prototype.getOrganizationalContentProviderById = function(parentEvent, contentProviderId) {
                return this.getContentProviderById(parentEvent, contentProviderId, !1, !1);
            }, ContentProviderHttpService.prototype.getServiceContentProviderById = function(parentEvent, contentProviderId) {
                return this.getContentProviderById(parentEvent, contentProviderId, !0, !1);
            }, ContentProviderHttpService.prototype.getNonInstantiatedOrganizationalContentProviderByProviderKey = function(parentEvent, providerKey) {
                return this.getContentProviderByProviderKey(parentEvent, providerKey, !1, !0);
            }, ContentProviderHttpService.prototype.getConfiguration = function(contentProviderId, type, parentEvent, packageId) {
                (0, _powerbi_legacy_PowerBIVisuals_VisualsCommon_contract__WEBPACK_IMPORTED_MODULE_6__.wS)(contentProviderId, "getConfiguration: contentProviderId"), 
                (0, _powerbi_legacy_PowerBIVisuals_VisualsCommon_contract__WEBPACK_IMPORTED_MODULE_6__.wS)(type, "getConfiguration: type");
                var url = _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_Utility__WEBPACK_IMPORTED_MODULE_7__.b$.urlCombine("/powerbi/content/providers/", contentProviderId + "/configuration");
                packageId && (url = _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_Utility__WEBPACK_IMPORTED_MODULE_7__.b$.urlCombine(url, packageId.toString())), 
                url = _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_Utility__WEBPACK_IMPORTED_MODULE_7__.b$.urlCombine(url, "?type=" + type);
                var requestOptions = this.httpCoreService.powerbiRequestOptions(parentEvent, "GetConfiguration");
                return this.httpCoreService.get(url, requestOptions);
            }, ContentProviderHttpService.prototype.storeConfiguration = function(contentProviderId, dataAccessInfo, parentEvent, settings) {
                (0, _powerbi_legacy_PowerBIVisuals_VisualsCommon_contract__WEBPACK_IMPORTED_MODULE_6__.wS)(settings.activeDashboardId, "storeConfiguration: dashboardId"), 
                (0, _powerbi_legacy_PowerBIVisuals_VisualsCommon_contract__WEBPACK_IMPORTED_MODULE_6__.wS)(contentProviderId, "storeConfiguration: contentProviderId"), 
                (0, _powerbi_legacy_PowerBIVisuals_VisualsCommon_contract__WEBPACK_IMPORTED_MODULE_6__.wS)(dataAccessInfo, "storeConfiguration: dataAccessInfo");
                var url = this.buildConfigurationUrl(contentProviderId, settings), dataAccessInfoWrapper = {
                    dataAccessInfo
                }, requestOption = this.httpCoreService.powerbiRequestOptions(parentEvent, "StoreConfiguration");
                return requestOption.retryCount = 0, settings.ignoreSyncServiceUpdates && this.syncService.addMetadataEditRequestId(requestOption.headers[_powerbi_legacy_JsCommon_telemetry_telemetryConstants__WEBPACK_IMPORTED_MODULE_8__.t7]), 
                this.syncService.addImportContentRequestId(requestOption.headers[_powerbi_legacy_JsCommon_telemetry_telemetryConstants__WEBPACK_IMPORTED_MODULE_8__.t7]), 
                this.httpCoreService.put(url, dataAccessInfoWrapper, requestOption);
            }, ContentProviderHttpService.prototype.getOrganizationalContentProviderMetadata = function(parentEvent, contentProviderId) {
                var requestOptions = this.httpCoreService.powerbiRequestOptions(parentEvent, "getOrganizationalContentProviderMetadata"), url = "".concat("/metadata/appmodel/", "contentprovidermetadata?id=").concat(contentProviderId);
                return this.httpCoreService.get(url, requestOptions);
            }, ContentProviderHttpService.prototype.uninstallContentProvider = function(parentEvent, providerKey, packageId) {
                var requestOptions = this.httpCoreService.powerbiRequestOptions(parentEvent, "UninstallApp"), url = "/powerbi/content/providers/organization/".concat(providerKey, "/?packageid=").concat(packageId, "&uninstall=true");
                return this.httpCoreService.delete(url, requestOptions);
            }, ContentProviderHttpService.prototype.getAllContentPacksByCategories = function(packTypes, isOwned) {
                var requestOptions = this.httpCoreService.powerbiRequestOptions();
                return this.httpCoreService.get("/powerbi/content/providers/?category=" + packTypes + (isOwned ? "&isOwned=true" : ""), requestOptions);
            }, ContentProviderHttpService.prototype.getContentProviderByProviderKey = function(parentEvent, providerKey, isService, includeNonInstantiated) {
                var requestOptions = this.httpCoreService.powerbiRequestOptions(parentEvent, "GetContentProviderByProviderKey"), url = "".concat("/metadata/appmodel/", "contentprovider?providerKey=").concat(providerKey);
                return isService && (url += "&isService=true"), includeNonInstantiated && (url += "&includeNonInstantiated=true"), 
                this.httpCoreService.get(url, requestOptions);
            }, ContentProviderHttpService.prototype.getContentProviderById = function(parentEvent, contentProviderId, isService, includeNonInstantiated) {
                var requestOptions = this.httpCoreService.powerbiRequestOptions(parentEvent, "GetContentProviderById"), url = "".concat("/metadata/appmodel/", "contentprovider?id=").concat(contentProviderId);
                return isService && (url += "&isService=true"), includeNonInstantiated && (url += "&includeNonInstantiated=true"), 
                this.httpCoreService.get(url, requestOptions);
            }, ContentProviderHttpService.prototype.buildConfigurationUrl = function(contentProviderId, settings) {
                var url = "/powerbi/content/providers/", canUseAppConfiguration = this.canUseAppConfiguration(contentProviderId, settings.category), configurationPredicate = canUseAppConfiguration ? "/appconfiguration" : "/configuration";
                url = _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_Utility__WEBPACK_IMPORTED_MODULE_7__.b$.urlCombine(url, settings.contentProviderKey ? "/" + settings.contentProviderKey + configurationPredicate : "/" + contentProviderId.toString(10) + configurationPredicate);
                var queryString = "?currentDashboardId=" + settings.activeDashboardId;
                return canUseAppConfiguration && this.isServiceApp(settings.category) && (queryString = queryString.concat("&installServiceContentAsApplication=true")), 
                settings.folderId && (queryString = queryString.concat("&folderId=" + settings.folderId)), 
                settings.subfolderId && (queryString = queryString.concat("&subfolderId=" + settings.subfolderId)), 
                _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_Utility__WEBPACK_IMPORTED_MODULE_7__.b$.urlCombine(url, queryString);
            }, ContentProviderHttpService.prototype.templateProvidersEnabled = function() {
                return this.featureSwitchService.featureSwitches.templatePublishEnabled || this.featureSwitchService.featureSwitches.templatePublishFlightingWorkAroundEnabled;
            }, ContentProviderHttpService.prototype.canUseAppConfiguration = function(contentProviderId, category) {
                var featureSwitches = this.featureSwitchService.featureSwitches;
                if (!contentProviderId || null == category) return !1;
                switch (category) {
                  case 7:
                    return featureSwitches.appTemplatesEnabled;

                  case 6:
                  case 3:
                    return featureSwitches.serviceAppsEnabled;

                  default:
                    return !1;
                }
            }, ContentProviderHttpService.prototype.isServiceApp = function(category) {
                return 6 === category || 3 === category;
            }, ContentProviderHttpService.prototype.getErrorCode = function(errorResponse) {
                var errorCode;
                return errorResponse && (errorResponse.error ? errorCode = errorResponse.error.code : errorResponse.status && (errorCode = errorResponse.status.toString())), 
                errorCode;
            }, ContentProviderHttpService.\u0275fac = function(t) {
                return new (t || ContentProviderHttpService)(_angular_core__WEBPACK_IMPORTED_MODULE_9__["\u0275\u0275inject"](_powerbi_InjectionTokens_promiseFactory__WEBPACK_IMPORTED_MODULE_10__.t), _angular_core__WEBPACK_IMPORTED_MODULE_9__["\u0275\u0275inject"](_powerbi_Telemetry__WEBPACK_IMPORTED_MODULE_0__.y0), _angular_core__WEBPACK_IMPORTED_MODULE_9__["\u0275\u0275inject"](_powerbi_Http__WEBPACK_IMPORTED_MODULE_11__.M), _angular_core__WEBPACK_IMPORTED_MODULE_9__["\u0275\u0275inject"](_powerbi_SyncService__WEBPACK_IMPORTED_MODULE_12__._), _angular_core__WEBPACK_IMPORTED_MODULE_9__["\u0275\u0275inject"](_powerbi_FeatureSwitch__WEBPACK_IMPORTED_MODULE_13__.vZ));
            }, ContentProviderHttpService.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_9__["\u0275\u0275defineInjectable"]({
                token: ContentProviderHttpService,
                factory: ContentProviderHttpService.\u0275fac,
                providedIn: "root"
            }), ContentProviderHttpService;
        }();
    },
    4301: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            $3: function() {
                return updateArtifactInfoDatamart;
            },
            Ap: function() {
                return bulkAdd;
            },
            BQ: function() {
                return loadDatamartSample;
            },
            CZ: function() {
                return onTryAgain;
            },
            Iz: function() {
                return refreshDatamart;
            },
            Mo: function() {
                return onDatamartUpdated;
            },
            Nl: function() {
                return addDatamartFavoriteSuccess;
            },
            Ok: function() {
                return OnUpdateAutoAddToDefaultDatasetValueSuccess;
            },
            Ou: function() {
                return unselectDatamart;
            },
            PZ: function() {
                return retrySuspendedDatamartError;
            },
            QC: function() {
                return loadDatamartSampleSuccess;
            },
            SX: function() {
                return getDatamartInfoSuccess;
            },
            Sw: function() {
                return addOrUpdateDatamartRecentSuccess;
            },
            XI: function() {
                return deleteDatamartFavoriteSuccess;
            },
            bU: function() {
                return datamartInitialized;
            },
            c7: function() {
                return loadDatamartFavoritesSuccess;
            },
            d7: function() {
                return selectDatamart;
            },
            fr: function() {
                return OnAutoAddToDefaultDatasetValueRequestedSuccess;
            },
            g3: function() {
                return loadDatamartWorkspace;
            },
            gY: function() {
                return loadDatamartRecentsSuccess;
            },
            hG: function() {
                return updateDatamartDescriptionSuccess;
            },
            lp: function() {
                return optimisticallyUpdateDatamartMetadataError;
            },
            nI: function() {
                return deleteDatamartInternal;
            },
            pT: function() {
                return loadDatamartSuccess;
            },
            rD: function() {
                return loadDatamartSampleError;
            },
            rM: function() {
                return updateCurrentRefreshStatus;
            },
            s: function() {
                return addDatamartFavoriteOptimistically;
            },
            sl: function() {
                return DatamartTakeoverSuccess;
            },
            uB: function() {
                return refreshDatamartError;
            },
            uh: function() {
                return moveToSubfolderSuccess;
            },
            vh: function() {
                return resumeSuspendedDatamartSucceeded;
            },
            wV: function() {
                return updateDatamartNameSuccess;
            }
        });
        var _ngrx_store__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(85732), base = "[Datamart Metadata]", datamartInitialized = ((0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.PH)("".concat(base, " Create datamart error"), (0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.Ky)()), (0, _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.PH)("".concat(base, " Datamart initalized"), (0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.Ky)())), deleteDatamartInternal = ((0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.PH)("".concat(base, " Delete datamart"), (0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.Ky)()), (0, _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.PH)("".concat(base, " Delete datamart internal"), (0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.Ky)())), refreshDatamart = ((0, _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.PH)("".concat(base, " Delete datamart Success"), (0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.Ky)()), (0, _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.PH)("".concat(base, " Delete datamart error"), (0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.Ky)()), (0, _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.PH)("".concat(base, " Refresh datamart"), (0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.Ky)())), refreshDatamartError = ((0, _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.PH)("".concat(base, " Refresh datamart succeeded")), 
        (0, _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.PH)("".concat(base, " Refresh datamart error"), (0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.Ky)())), updateDatamartNameSuccess = ((0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.PH)("".concat(base, " Update datamart name"), (0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.Ky)()), (0, _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.PH)("".concat(base, " Update datamart name success"), (0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.Ky)())), updateDatamartDescriptionSuccess = ((0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.PH)("".concat(base, " Update datamart name error"), (0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.Ky)()), (0, _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.PH)("".concat(base, " Update datamart description"), (0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.Ky)()), (0, _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.PH)("".concat(base, " Update datamart description success"), (0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.Ky)())), bulkAdd = (0, _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.PH)("".concat(base, " Add bulk of datamarts"), (0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.Ky)()), optimisticallyUpdateDatamartMetadataError = ((0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.PH)("".concat(base, " Update datamart description error"), (0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.Ky)()), (0, _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.PH)("".concat(base, " Optimistically update datamart metadata"), (0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.Ky)()), (0, _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.PH)("".concat(base, " Optimistically update datamart metadata success")), 
        (0, _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.PH)("".concat(base, " Optimistically update datamart metadata error"), (0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.Ky)())), loadDatamartWorkspace = (0, _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.PH)("".concat(base, " Update datamart workspace"), (0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.Ky)()), selectDatamart = (0, _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.PH)("".concat(base, " Select datamart"), (0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.Ky)()), unselectDatamart = (0, _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.PH)("".concat(base, " Unselect datamart")), getDatamartInfoSuccess = ((0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.PH)("".concat(base, " Get datamart info"), (0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.Ky)()), (0, _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.PH)("".concat(base, " Datamart info succeeded"), (0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.Ky)())), loadDatamartSuccess = ((0, _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.PH)("".concat(base, " Get datamart info error"), (0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.Ky)()), (0, _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.PH)("".concat(base, " Load datamart success"), (0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.Ky)())), updateCurrentRefreshStatus = ((0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.PH)("".concat(base, " Load datamart error"), (0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.Ky)()), (0, _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.PH)("".concat(base, " Update current refresh status"), (0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.Ky)())), updateArtifactInfoDatamart = (0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.PH)("".concat(base, " Update artifact info form"), (0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.Ky)()), onTryAgain = ((0, _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.PH)("".concat(base, " Get datamart refresh history"), (0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.Ky)()), (0, _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.PH)("".concat(base, " Get datamart refresh history success"), (0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.Ky)()), (0, _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.PH)("".concat(base, " Get datamart refresh history error"), (0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.Ky)()), (0, _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.PH)("".concat(base, " Get datamart batch history"), (0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.Ky)()), (0, _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.PH)("".concat(base, " Get datamart batch history success"), (0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.Ky)()), (0, _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.PH)("".concat(base, " Get datamart batch history error"), (0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.Ky)()), (0, _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.PH)("".concat(base, " Try Again"), (0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.Ky)())), retrySuspendedDatamartError = (0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.PH)("".concat(base, " Retry suspended datamart error"), (0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.Ky)()), resumeSuspendedDatamartSucceeded = ((0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.PH)("".concat(base, " Failure")), (0, _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.PH)("".concat(base, " Retry suspended datamart success"), (0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.Ky)())), onDatamartUpdated = (0, _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.PH)("".concat(base, " Datamart updated"), (0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.Ky)()), DatamartTakeoverSuccess = ((0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.PH)("".concat(base, " Datamart delete UI only"), (0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.Ky)()), (0, _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.PH)("".concat(base, " Datamart takeover success"), (0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.Ky)())), loadDatamartRecentsSuccess = ((0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.PH)("".concat(base, " Generate ADS Protocol By DatamartID"), (0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.Ky)()), (0, _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.PH)("".concat(base, " Generate ADS Protocol By Connection string"), (0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.Ky)()), (0, _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.PH)("".concat(base, " Load datamart recents success"), (0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.Ky)())), addOrUpdateDatamartRecentSuccess = (0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.PH)("".concat(base, " Add or Update datamart recent success"), (0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.Ky)()), loadDatamartFavoritesSuccess = (0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.PH)("".concat(base, " Load datamart favorites success"), (0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.Ky)()), addDatamartFavoriteOptimistically = (0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.PH)("".concat(base, " Add datamart favorite optimistically"), (0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.Ky)()), addDatamartFavoriteSuccess = (0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.PH)("".concat(base, " Add datamart favorite success"), (0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.Ky)()), deleteDatamartFavoriteSuccess = (0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.PH)("".concat(base, " Delete datamart favorite success"), (0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.Ky)()), loadDatamartSample = (0, _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.PH)("".concat(base, " Set DW sample to load"), (0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.Ky)()), loadDatamartSampleSuccess = (0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.PH)("".concat(base, " DW Sample Load Success"), (0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.Ky)()), loadDatamartSampleError = (0, _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.PH)("".concat(base, " DW Sample Load Error"), (0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.Ky)()), moveToSubfolderSuccess = (0, _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.PH)("".concat(base, " Move To Subfolder Success"), (0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.Ky)()), OnAutoAddToDefaultDatasetValueRequestedSuccess = (0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.PH)("".concat(base, " Auto Add To Default Dataset Value Requested Success"), (0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.Ky)()), OnUpdateAutoAddToDefaultDatasetValueSuccess = ((0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.PH)("".concat(base, " Update Auto Add To Default Dataset Value"), (0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.Ky)()), (0, _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.PH)("".concat(base, " Update Auto Add To Default Dataset Value Success"), (0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.Ky)()));
        (0, _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.PH)("".concat(base, " Get Active Query Runs Error"), (0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.Ky)()), (0, _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.PH)("".concat(base, " Get Long Running Query Insights Error"), (0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.Ky)()), (0, _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.PH)("".concat(base, " Get Frequently Run Query Insights Error"), (0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.Ky)()), (0, _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.PH)("".concat(base, " Cancel Queries Error"), (0, 
        _ngrx_store__WEBPACK_IMPORTED_MODULE_0__.Ky)());
    },
    4565: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            EL: function() {
                return uniqueId;
            },
            LE: function() {
                return getDatamartIds;
            },
            WZ: function() {
                return getDatamartEntities;
            },
            pM: function() {
                return getAllDatamarts;
            }
        });
        var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(81337), _actions_datamart_metadata_actions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(4301), _ngrx_entity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(8894), _ngrx_store__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(85732), _powerbi_DatahubStore__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(93731), _powerbi_legacy_PowerBIContracts_constants__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(2142), _powerbi_legacy_PowerBIContracts_contracts__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(50600), _powerbi_legacy_PowerBIContracts_contracts__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(7600);
        function uniqueId(datamart) {
            return datamart.objectId;
        }
        var adapter = (0, _ngrx_entity__WEBPACK_IMPORTED_MODULE_0__.H)({
            selectId: function(datamart) {
                return uniqueId(datamart);
            },
            sortComparer: !1
        }), initialState = adapter.getInitialState({
            selectedDatamartId: null
        }), _a = ((0, _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.Lq)(initialState, (0, _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.on)(_actions_datamart_metadata_actions__WEBPACK_IMPORTED_MODULE_2__.bU, function(state, _a) {
            var datamartObjectId = _a.datamartObjectId, datamartType = _a.datamartType, folderId = _a.folderId, subfolderId = _a.subfolderId;
            return state.entities[datamartObjectId] ? adapter.updateOne({
                id: datamartObjectId,
                changes: {
                    datamartType,
                    state: 0,
                    status: 1,
                    folderId,
                    subfolderId
                }
            }, state) : adapter.addOne({
                objectId: datamartObjectId,
                datamartType,
                state: 0,
                status: 1,
                folderId,
                subfolderId
            }, state);
        }), (0, _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.on)(_actions_datamart_metadata_actions__WEBPACK_IMPORTED_MODULE_2__.Ou, function(state, _a) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({}, state), {
                selectedDatamartId: null
            });
        }), (0, _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.on)(_actions_datamart_metadata_actions__WEBPACK_IMPORTED_MODULE_2__.g3, function(state, _a) {
            var datamarts = _a.datamarts, artifacts = _a.artifacts, genericMountedWarehouses = null == artifacts ? void 0 : artifacts.filter(function(artifact) {
                return "Warehouse" === artifact.artifactType || "SqlAnalyticsEndpoint" === artifact.artifactType;
            }), allDatamarts = datamarts;
            if (genericMountedWarehouses && genericMountedWarehouses.length > 0) {
                var genericDatamarts = _.map(genericMountedWarehouses, function(warehouse) {
                    return function(artifact, artifacts) {
                        var _a, _b, parentArtifact = null == artifacts ? void 0 : artifacts.find(function(a) {
                            var _a;
                            return null === (_a = a.artifactRelations) || void 0 === _a ? void 0 : _a.find(function(da) {
                                return da.dependentArtifactObjectId === artifact.objectId;
                            });
                        });
                        return {
                            objectId: artifact.objectId,
                            isGenericArtifact: !0,
                            datamartType: getDatamartTypeFromSqlAnalyticsEndpoint(artifact, parentArtifact),
                            datasetId: null === (_b = null === (_a = artifact.datasetRelations) || void 0 === _a ? void 0 : _a[0]) || void 0 === _b ? void 0 : _b.dependentArtifactId,
                            lastModifiedTimeUTC: "",
                            lastRefreshTimeUTC: "",
                            nextRefreshTimeUTC: "",
                            artifactPermissions: artifact.artifactPermissions,
                            lastRefreshStatus: 0,
                            state: artifact.extendedProperties.state,
                            status: artifact.extendedProperties.status,
                            id: artifact.extendedProperties.DatamartsMetadataId,
                            capabilities: artifact.extendedProperties.Capabilities,
                            displayName: artifact.displayName,
                            modifiedByUserId: artifact.modifiedByUserId,
                            modifiedByUser: {
                                id: artifact.modifiedByUser.id,
                                objectId: artifact.modifiedByUser.objectId,
                                displayName: artifact.modifiedByUser.name,
                                userPrincipalName: artifact.modifiedByUser.userPrincipalName
                            },
                            ownerUserId: artifact.ownerUserId,
                            ownerUser: {
                                id: artifact.ownerUser.id,
                                objectId: artifact.ownerUser.objectId,
                                displayName: artifact.ownerUser.name,
                                userPrincipalName: artifact.ownerUser.userPrincipalName
                            },
                            parentArtifact
                        };
                    }(warehouse, artifacts);
                });
                allDatamarts = datamarts.concat(genericDatamarts);
            }
            null == artifacts || artifacts.forEach(function(artifact) {
                var _a;
                null === (_a = artifact.datamartRelations) || void 0 === _a || _a.forEach(function(relatedDatamart) {
                    var datamart = allDatamarts.find(function(dm) {
                        return dm.id === relatedDatamart.dependentArtifactId;
                    });
                    datamart && (datamart.parentArtifact = artifact);
                });
            });
            var datamartWithCurrentRefreshStatus = _.map(allDatamarts, function(datamart) {
                return (0, tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({}, datamart), {
                    currentRefreshStatus: datamart.lastRefreshStatus
                });
            });
            return adapter.upsertMany(datamartWithCurrentRefreshStatus || [], state);
        }), (0, _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.on)(_actions_datamart_metadata_actions__WEBPACK_IMPORTED_MODULE_2__.Ap, function(state, _a) {
            var datamartWithCurrentRefreshStatus = _.map(_a.datamarts, function(datamart) {
                return (0, tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({}, datamart), {
                    currentRefreshStatus: datamart.lastRefreshStatus
                });
            });
            return adapter.addMany(datamartWithCurrentRefreshStatus, state);
        }), (0, _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.on)(_actions_datamart_metadata_actions__WEBPACK_IMPORTED_MODULE_2__.$3, function(state, _a) {
            var name = _a.artifactInfo.title;
            return adapter.updateOne({
                id: _a.datamartObjectId,
                changes: {
                    displayName: name,
                    name
                }
            }, state);
        }), (0, _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.on)(_actions_datamart_metadata_actions__WEBPACK_IMPORTED_MODULE_2__.wV, function(state, _a) {
            var name = _a.name;
            return adapter.updateOne({
                id: _a.datamartObjectId,
                changes: {
                    displayName: name,
                    name
                }
            }, state);
        }), (0, _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.on)(_actions_datamart_metadata_actions__WEBPACK_IMPORTED_MODULE_2__.hG, function(state, _a) {
            return adapter.updateOne({
                id: _a.datamartObjectId,
                changes: {
                    description: _a.description
                }
            }, state);
        }), (0, _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.on)(_actions_datamart_metadata_actions__WEBPACK_IMPORTED_MODULE_2__.lp, function(state, _a) {
            var originalData = _a.originalData;
            return adapter.updateOne({
                id: _a.datamartObjectId,
                changes: {
                    displayName: originalData.name,
                    name: originalData.name
                }
            }, state);
        }), (0, _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.on)(_actions_datamart_metadata_actions__WEBPACK_IMPORTED_MODULE_2__.d7, function(state, _a) {
            var datamartObjectId = _a.datamartObjectId;
            return (0, tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({}, state), {
                selectedDatamartId: datamartObjectId
            });
        }), (0, _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.on)(_actions_datamart_metadata_actions__WEBPACK_IMPORTED_MODULE_2__.Iz, function(state, _a) {
            return adapter.updateOne({
                id: _a.datamartObjectId,
                changes: {
                    currentRefreshStatus: 4
                }
            }, state);
        }), (0, _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.on)(_actions_datamart_metadata_actions__WEBPACK_IMPORTED_MODULE_2__.uB, function(state, _a) {
            return adapter.updateOne({
                id: _a.datamartObjectId,
                changes: {
                    currentRefreshStatus: 2
                }
            }, state);
        }), (0, _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.on)(_actions_datamart_metadata_actions__WEBPACK_IMPORTED_MODULE_2__.rM, function(state, _a) {
            return adapter.updateOne({
                id: _a.datamartObjectId,
                changes: {
                    currentRefreshStatus: _a.currentRefreshStatus
                }
            }, state);
        }), (0, _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.on)(_powerbi_DatahubStore__WEBPACK_IMPORTED_MODULE_4__.fk, _powerbi_DatahubStore__WEBPACK_IMPORTED_MODULE_4__.d_, function(state, _a) {
            var datahubArtifacts = _.filter(_a.artifacts, function(a) {
                return a.artifactType === _powerbi_legacy_PowerBIContracts_contracts__WEBPACK_IMPORTED_MODULE_5__.B.Datamart;
            });
            if (_.isEmpty(datahubArtifacts)) return state;
            var update = _.map(datahubArtifacts, function(a) {
                var changes = function(a) {
                    var isMyWorkspace = a.workspaceObjectId === _powerbi_legacy_PowerBIContracts_constants__WEBPACK_IMPORTED_MODULE_7__.wku;
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)((0, 
                    tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)((0, 
                    tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)((0, 
                    tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({
                        id: a.artifactId,
                        workspaceName: a.workspaceName,
                        workspaceType: a.workspaceType,
                        objectId: a.artifactObjectId.toLowerCase(),
                        artifactEndorsement: a.artifactEndorsement,
                        artifactInformationProtection: a.artifactInformationProtection
                    }, a.ownerUser && {
                        ownerUser: a.ownerUser
                    }), a.workspaceId && {
                        workspaceId: a.workspaceId
                    }), a.snapshotId && {
                        snapshotId: a.snapshotId
                    }), a.description && {
                        description: a.description
                    }), a.lastVisitedTimeUTC && {
                        lastVisitedTimeUTC: a.lastVisitedTimeUTC
                    }), a.lastRefreshTime && {
                        lastRefreshTime: a.lastRefreshTime
                    }), !isMyWorkspace && a.workspaceObjectId && {
                        workspaceObjectId: a.workspaceObjectId.toLocaleLowerCase()
                    });
                }(a);
                return {
                    id: changes.objectId,
                    changes
                };
            }), addedState = adapter.upsertMany(_.map(datahubArtifacts, function(a) {
                return (0, tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({}, (datamartArtifact = a).artifact), {
                    displayName: datamartArtifact.displayName,
                    id: datamartArtifact.artifactId,
                    permissions: datamartArtifact.permissions
                });
                var datamartArtifact;
            }), state);
            return (0, tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({}, adapter.updateMany(update, addedState));
        }), (0, _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.on)(_actions_datamart_metadata_actions__WEBPACK_IMPORTED_MODULE_2__.vh, function(state, _a) {
            return adapter.updateOne({
                id: _a.datamartObjectId,
                changes: {
                    status: 1
                }
            }, state);
        }), (0, _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.on)(_actions_datamart_metadata_actions__WEBPACK_IMPORTED_MODULE_2__.sl, function(state, _a) {
            var datamartInformation = _a.datamartInformation;
            return adapter.updateOne({
                id: datamartInformation.objectId,
                changes: {
                    ownerUser: datamartInformation.ownerUser,
                    modifiedByUser: datamartInformation.modifiedByUser
                }
            }, state);
        }), (0, _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.on)(_actions_datamart_metadata_actions__WEBPACK_IMPORTED_MODULE_2__.SX, function(state, _a) {
            var datamart = datamartInformationToDatamart(_a.datamartInformation);
            return adapter.updateOne({
                id: datamart.objectId,
                changes: datamart
            }, state);
        }), (0, _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.on)(_actions_datamart_metadata_actions__WEBPACK_IMPORTED_MODULE_2__.pT, function(state, _a) {
            var datamart = datamartInformationToDatamart(_a.datamartInformation);
            return adapter.updateOne({
                id: datamart.objectId,
                changes: datamart
            }, (0, tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({}, state), {
                selectedDatamartId: datamart.objectId
            }));
        }), (0, _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.on)(_actions_datamart_metadata_actions__WEBPACK_IMPORTED_MODULE_2__.Mo, function(state, _a) {
            var datamartObjectId = _a.datamartObjectId, datamartType = _a.datamartType, artifactId = _a.artifactId;
            return state.entities[datamartObjectId] ? state.entities[datamartObjectId].id ? state : adapter.updateOne({
                id: datamartObjectId,
                changes: {
                    id: artifactId
                }
            }, (0, tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({}, state), {
                selectedDatamartId: datamartObjectId
            })) : adapter.addOne({
                objectId: datamartObjectId,
                datamartType,
                isNew: !0,
                id: artifactId
            }, state);
        }), (0, _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.on)(_actions_datamart_metadata_actions__WEBPACK_IMPORTED_MODULE_2__.gY, function(state, _a) {
            var datamartRecents = _a.recents.filter(function(recent) {
                return 8 === recent.ty;
            });
            if (_.isEmpty(datamartRecents)) return state;
            var changes = datamartRecents.map(function(recent) {
                var change = convertIRecentToDatamartRecent(recent);
                return {
                    id: change.objectId,
                    changes: change
                };
            }), addedState = adapter.upsertMany(_.map(datamartRecents, function(recent) {
                return convertIRecentToDatamartRecent(recent);
            }), state);
            return (0, tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({}, adapter.updateMany(changes, addedState));
        }), (0, _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.on)(_actions_datamart_metadata_actions__WEBPACK_IMPORTED_MODULE_2__.Sw, function(state, _a) {
            var changes = convertIRecentToDatamartRecent(_a.recent);
            return adapter.updateOne({
                id: changes.objectId,
                changes
            }, state);
        }), (0, _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.on)(_actions_datamart_metadata_actions__WEBPACK_IMPORTED_MODULE_2__.c7, function(state, _a) {
            var datamartFavorites = _a.favorites.filter(function(favorite) {
                return favorite.favoriteType === _powerbi_legacy_PowerBIContracts_contracts__WEBPACK_IMPORTED_MODULE_6__.nW.Datamart;
            });
            if (_.isEmpty(datamartFavorites)) return state;
            var changes = datamartFavorites.map(function(fav) {
                var change = convertIFavoriteToDatamartFavorite(fav);
                return {
                    id: fav.objectId,
                    changes: change
                };
            }), addedState = adapter.upsertMany(_.map(datamartFavorites, function(favorite) {
                return convertIFavoriteToDatamartFavorite(favorite);
            }), state);
            return (0, tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({}, adapter.updateMany(changes, addedState));
        }), (0, _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.on)(_actions_datamart_metadata_actions__WEBPACK_IMPORTED_MODULE_2__.s, function(state, _a) {
            return adapter.updateOne({
                id: _a.objectId,
                changes: {
                    favoriteId: -1
                }
            }, state);
        }), (0, _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.on)(_actions_datamart_metadata_actions__WEBPACK_IMPORTED_MODULE_2__.Nl, function(state, _a) {
            return adapter.updateOne({
                id: _a.objectId,
                changes: {
                    favoriteId: _a.favoriteId,
                    workspaceObjectId: _a.workspaceObjectId
                }
            }, state);
        }), (0, _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.on)(_actions_datamart_metadata_actions__WEBPACK_IMPORTED_MODULE_2__.XI, function(state, _a) {
            return adapter.updateOne({
                id: _a.objectId,
                changes: {
                    favoriteId: void 0
                }
            }, state);
        }), (0, _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.on)(_actions_datamart_metadata_actions__WEBPACK_IMPORTED_MODULE_2__.BQ, function(state, _a) {
            var sampleId, datamartObjectId = _a.datamartObjectId, datamartChanges = {
                sampleName: (sampleId = _a.sampleName, sampleId && "nytaxi" === sampleId.toLowerCase() ? "nytaxi" : "")
            };
            return adapter.updateOne({
                id: datamartObjectId,
                changes: datamartChanges
            }, state);
        }), (0, _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.on)(_actions_datamart_metadata_actions__WEBPACK_IMPORTED_MODULE_2__.QC, _actions_datamart_metadata_actions__WEBPACK_IMPORTED_MODULE_2__.rD, function(state, _a) {
            return adapter.updateOne({
                id: _a.datamartObjectId,
                changes: {
                    sampleName: ""
                }
            }, state);
        }), (0, _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.on)(_actions_datamart_metadata_actions__WEBPACK_IMPORTED_MODULE_2__.uh, function(state, _a) {
            return adapter.updateMany(_a.movedDatamarts.map(function(movedDatamart) {
                return {
                    id: movedDatamart.objectId,
                    changes: {
                        subfolderId: movedDatamart.subfolderId
                    }
                };
            }), state);
        }), (0, _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.on)(_actions_datamart_metadata_actions__WEBPACK_IMPORTED_MODULE_2__.Ok, function(state, _a) {
            return adapter.updateOne({
                id: _a.datamartObjectId,
                changes: {
                    autoAddToDefaultDataset: _a.autoAddToDefaultDataset
                }
            }, state);
        }), (0, _ngrx_store__WEBPACK_IMPORTED_MODULE_1__.on)(_actions_datamart_metadata_actions__WEBPACK_IMPORTED_MODULE_2__.fr, function(state, _a) {
            return adapter.updateOne({
                id: _a.datamartObjectId,
                changes: {
                    autoAddToDefaultDataset: _a.autoAddToDefaultDataset
                }
            }, state);
        })), adapter.getSelectors()), getDatamartIds = _a.selectIds, getDatamartEntities = _a.selectEntities, getAllDatamarts = _a.selectAll;
        function convertIRecentToDatamartRecent(recent) {
            return {
                displayName: recent.dn,
                objectId: recent.oid,
                lastAccessDate: recent.la,
                count: recent.co,
                workspaceObjectId: recent.gid,
                datamartType: recent.datamartType,
                status: recent.artifactStatus,
                state: recent.artifactState,
                datasetId: recent.datasetId
            };
        }
        function convertIFavoriteToDatamartFavorite(favorite) {
            return {
                displayName: favorite.displayName,
                objectId: favorite.objectId,
                favoriteId: favorite.id,
                workspaceObjectId: favorite.workspaceId,
                permissions: favorite.permissions,
                datamartType: favorite.datamartType,
                status: favorite.datamartStatus,
                state: favorite.datamartState,
                datasetId: favorite.datasetId
            };
        }
        function datamartInformationToDatamart(datamartInformation) {
            var datamart = {
                objectId: datamartInformation.objectId,
                name: datamartInformation.name,
                displayName: datamartInformation.name,
                description: datamartInformation.description,
                gatewayObjectId: datamartInformation.gatewayObjectId,
                dataflowObjectId: datamartInformation.dataflowObjectId,
                datasetObjectId: datamartInformation.datasetObjectId,
                datasetId: datamartInformation.datasetId,
                status: datamartInformation.status,
                currentRefreshStatus: datamartInformation.lastRefreshStatus,
                lastRefreshStatus: datamartInformation.lastRefreshStatus,
                tdsEndpoint: datamartInformation.tdsEndpoint,
                ownerUser: datamartInformation.ownerUser,
                datamartType: datamartInformation.datamartType,
                lastModifiedTimeUTC: void 0,
                lastRefreshTimeUTC: datamartInformation.lastRefreshTimeUTC,
                ownerUserId: datamartInformation.ownerUser.id,
                ownerArtifactObjectId: datamartInformation.ownerArtifactObjectId,
                nextRefreshTimeUTC: datamartInformation.nextRefreshTimeUTC,
                modifiedByUser: datamartInformation.modifiedByUser,
                permissions: datamartInformation.permissions,
                artifactPermissions: datamartInformation.artifactPermissions,
                subfolderId: datamartInformation.subfolderId
            };
            return void 0 !== datamartInformation.state && (datamart.state = datamartInformation.state), 
            datamart;
        }
        function getDatamartTypeFromSqlAnalyticsEndpoint(artifact, parentArtifact) {
            return "Warehouse" === artifact.artifactType ? 4 : "SqlAnalyticsEndpoint" === artifact.artifactType ? "Lakehouse" === (null == parentArtifact ? void 0 : parentArtifact.artifactType) ? 2 : 5 : void 0;
        }
    },
    2253: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            WZ: function() {
                return getDatamartEntities;
            },
            sv: function() {
                return getDatamartName;
            },
            LR: function() {
                return getDatamartType;
            },
            jf: function() {
                return getDatamartTypeName;
            },
            JJ: function() {
                return getSelectedDatamartForArtifactDetailsInfo;
            }
        });
        var datamart_metadata_reducers = __webpack_require__(4565), ngrx_store = __webpack_require__(85732), utils = __webpack_require__(48723), WebRouter = __webpack_require__(19533), getDatamartObjectId = ((0, 
        ngrx_store.P1)(WebRouter.C, function(state) {
            return state && state.params.groupid;
        }), (0, ngrx_store.P1)(WebRouter.C, function(state) {
            return state && state.params.datamartId;
        })), getWarehouseObjectId = (0, ngrx_store.P1)(WebRouter.C, function(state) {
            var _a, match = state && (null === (_a = null == state ? void 0 : state.url) || void 0 === _a ? void 0 : _a.match(/warehouses\/([^\/\?]+)/));
            return match ? match[1] : null;
        }), getDatamartsState = (0, ngrx_store.ZF)("datamartMetadataState"), getAllDatamarts = ((0, 
        ngrx_store.P1)(getDatamartsState, function(state) {
            return state && state.selectedDatamartId;
        }), (0, ngrx_store.P1)(getDatamartsState, datamart_metadata_reducers.LE), (0, ngrx_store.P1)(getDatamartsState, datamart_metadata_reducers.pM)), getDatamartEntities = (0, 
        ngrx_store.P1)(getDatamartsState, datamart_metadata_reducers.WZ), getSelectedDatamart = (0, 
        ngrx_store.P1)(getDatamartEntities, getDatamartObjectId, function(entities, id) {
            return id && entities[id];
        }), getSelectedDatamartForArtifactDetailsInfo = (0, ngrx_store.P1)(getDatamartEntities, getDatamartObjectId, getWarehouseObjectId, function(entities, datamartObjectId, warehouseObjectId) {
            var objectId = datamartObjectId || warehouseObjectId;
            return objectId && entities[objectId];
        }), getDatamartName = ((0, ngrx_store.P1)(getSelectedDatamart, function(datamart) {
            return datamart && datamart.status;
        }), (0, ngrx_store.P1)(getSelectedDatamart, function(datamart) {
            return datamart && datamart.datasetId;
        }), (0, ngrx_store.P1)(getSelectedDatamart, function(datamart) {
            return datamart && datamart.permissions;
        }), (0, ngrx_store.P1)(getDatamartEntities, function(entities) {
            return _.map(entities, function(datamart) {
                return datamart.displayName || datamart.name;
            });
        }), function(datamartObjectId) {
            return (0, ngrx_store.P1)(getDatamartEntities, function(entities) {
                return entities[datamartObjectId].displayName || entities[datamartObjectId].name;
            });
        }), getDatamartType = function(datamartObjectId) {
            return (0, ngrx_store.P1)(getDatamartEntities, function(entities) {
                return entities && entities[datamartObjectId].datamartType;
            });
        }, getDatamartTypeName = function(datamartObjectId) {
            return (0, ngrx_store.P1)(getDatamartEntities, function(entities) {
                var _a;
                return entities && (null === (_a = entities[datamartObjectId]) || void 0 === _a ? void 0 : _a.datamartType) ? (0, 
                utils.kK)(entities[datamartObjectId].datamartType) : "ArtifactKind_Datamart";
            });
        };
        (0, ngrx_store.P1)(getSelectedDatamart, function(selectedDatamart) {
            return selectedDatamart && selectedDatamart.datamartType;
        }), (0, ngrx_store.P1)(getDatamartEntities, getDatamartObjectId, function(entities, id) {
            var _a;
            return null === (_a = entities[id]) || void 0 === _a ? void 0 : _a.autoAddToDefaultDataset;
        }), (0, ngrx_store.P1)(getAllDatamarts, function(datamarts, id) {
            return id ? _.find(datamarts, function(datamart) {
                return datamart.id === id;
            }) : null;
        });
    },
    48723: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            LC: function() {
                return getPathByDatamartType;
            },
            PQ: function() {
                return getDatamartExtendedArtifactType;
            },
            kK: function() {
                return getDatamartTypeLowercaseResourceNameUtil;
            },
            q4: function() {
                return getDatamartTypeTitlecaseResourceNameUtil;
            },
            wZ: function() {
                return getAPIPathByDatamartType;
            }
        });
        var _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(62458);
        function getPathByDatamartType(datamartType) {
            switch (datamartType) {
              case 4:
                return "datawarehouses";

              case 2:
                return "lakewarehouses";

              case 5:
                return "mountedwarehouses";

              case 1:
                return "datamarts";

              default:
                return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertFail("invalid datamartType"), 
                "datamarts";
            }
        }
        function getAPIPathByDatamartType(datamartType) {
            switch (datamartType) {
              case 4:
                return "datawarehouses";

              case 2:
                return "lhdatamarts";

              case 5:
                return "mountedwarehouses";

              case 1:
                return "datamarts";

              default:
                return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertFail("invalid datamartType"), 
                "datamarts";
            }
        }
        function getDatamartTypeLowercaseResourceNameUtil(datamartType) {
            switch (datamartType) {
              case 4:
                return "ArtifactKind_Warehouse";

              case 2:
              case 5:
                return "Artifact_SQL_Analytics_Endpoint";

              case 1:
                return "ArtifactKind_Datamart";

              default:
                return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assert(function() {
                    return _.isNil(datamartType);
                }, "invalid datamartType"), "ArtifactKind_Datamart";
            }
        }
        function getDatamartTypeTitlecaseResourceNameUtil(datamartType) {
            switch (datamartType) {
              case 4:
                return "Artifact_Warehouse";

              case 2:
              case 5:
                return "Artifact_SQL_Analytics_Endpoint";

              case 1:
                return "Artifact_Datamart";

              default:
                return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assert(function() {
                    return _.isNil(datamartType);
                }, "invalid datamartType"), "Artifact_Datamart";
            }
        }
        function getDatamartExtendedArtifactType(datamartType) {
            switch (datamartType) {
              case 4:
                return "data-warehouse";

              case 2:
                return "lake-warehouse";

              case 1:
                return "datamart";

              case 5:
                return "mounted-warehouse";

              default:
                return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assert(function() {
                    return _.isNil(datamartType);
                }, "invalid datamartType"), "datamart";
            }
        }
    },
    56894: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        "use strict";
        function getDisplayNameFromArtifactInformationProtection(aip) {
            if (!_.isNil(aip)) return _.isNil(aip.parent) ? aip.name : "".concat(aip.parent.name, "\\").concat(aip.name);
        }
        function compareLabelsAlphabetically(aip1, aip2, isAsc) {
            if (_.isUndefined(aip1)) return -1 * (isAsc ? 1 : -1);
            if (_.isUndefined(aip2)) return 1 * (isAsc ? 1 : -1);
            var label1DisplayName = getDisplayNameFromArtifactInformationProtection(aip1), label2DisplayName = getDisplayNameFromArtifactInformationProtection(aip2);
            return function(obj1, obj2, isAsc) {
                return (obj1 < obj2 ? -1 : 1) * (isAsc ? 1 : -1);
            }(label1DisplayName.toLocaleLowerCase(), label2DisplayName.toLocaleLowerCase(), isAsc);
        }
        __webpack_require__.d(__webpack_exports__, {
            Kg: function() {
                return compareLabelsAlphabetically;
            },
            s4: function() {
                return getDisplayNameFromArtifactInformationProtection;
            }
        });
    },
    47754: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            L: function() {
                return ProfileImageService;
            }
        });
        var _powerbi_Core_actions_group__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(82515), _powerbi_InjectionTokens_promiseFactory__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(14463), _powerbi_InjectionTokens_userMetadataHttpService__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(34410), _powerbi_legacy_PowerBICommon_telemetry_events__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(59055), _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_Utility__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(38078), _powerbi_Telemetry__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(21617), _powerbi_User__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(76609), _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(50423), _powerbi_WebAppSettings__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(27887), _powerbi_User__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(79474), _angular_platform_browser__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(18942), _ngrx_store__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(85732), ProfileImageService = function() {
            function ProfileImageService(applicationOptions, userInfo, userProfileImageService, telemetryService, sanitizer, store, userMetadataHttpService, promiseFactory) {
                this.applicationOptions = applicationOptions, this.userInfo = userInfo, this.userProfileImageService = userProfileImageService, 
                this.telemetryService = telemetryService, this.sanitizer = sanitizer, this.store = store, 
                this.groupPhotos = [], this.userPhotos = [], this.findGroupIconPromises = [], this.getOtherUserPhotoPromises = [], 
                this.getGroupIconPromises = [], this.userMetadataHttpService = userMetadataHttpService, 
                this.promiseFactory = promiseFactory;
            }
            return ProfileImageService.prototype.getGroupIcons = function(delay) {
                var _this = this;
                if (void 0 === delay && (delay = 4900), this.groupIconsPromise) return this.groupIconsPromise;
                var deferredGroupIcons = this.promiseFactory.defer();
                return setTimeout(function() {
                    var getGroupIconsTelemetryEvent = _this.telemetryService.startEvent(_powerbi_legacy_PowerBICommon_telemetry_events__WEBPACK_IMPORTED_MODULE_1__.Sj);
                    _this.userMetadataHttpService.getUserGroupIcons(getGroupIconsTelemetryEvent.event).toPromise().then(function(result) {
                        result.data && (deferredGroupIcons.resolve(result.data), _this.store.dispatch(new _powerbi_Core_actions_group__WEBPACK_IMPORTED_MODULE_2__.YI({
                            groupIcons: result.data
                        })));
                    }, function() {
                        deferredGroupIcons.reject();
                    });
                }, delay), this.groupIconsPromise = deferredGroupIcons.promise, deferredGroupIcons.promise;
            }, ProfileImageService.prototype.getGroupIcon = function(groupObjectId, delay) {
                var _this = this;
                void 0 === delay && (delay = 4900);
                var groupPhotoPromise = _.find(this.getGroupIconPromises, function(group) {
                    return group.groupObjectId === groupObjectId;
                });
                if (groupPhotoPromise) return groupPhotoPromise.promise;
                var deferredString = this.promiseFactory.defer(), httpResultPromise = this.applicationOptions.isE2ERun ? this.getRejectedHttpResultPromiseWithNotFound() : this.userMetadataHttpService.getGroupIcon(groupObjectId).toPromise();
                return setTimeout(function() {
                    httpResultPromise.then(function(result) {
                        if (result.data) {
                            var resultImage = _this.base64Enconding(result.data.groupIcon);
                            deferredString.resolve(resultImage), _this.groupPhotos.push({
                                groupObjectId,
                                groupIcon: resultImage
                            });
                        } else deferredString.reject();
                    }, function(result) {
                        _this.resultHasStatusEquivalentOfNotFound(result.status) ? (deferredString.resolve(""), 
                        _this.groupPhotos.push({
                            groupObjectId,
                            groupIcon: ""
                        })) : deferredString.reject();
                    });
                }, delay), this.getGroupIconPromises.push({
                    groupObjectId,
                    promise: deferredString.promise
                }), deferredString.promise;
            }, ProfileImageService.prototype.getUserPhoto = function() {
                var _this = this;
                if (this._userPhotoPromise) return this._userPhotoPromise;
                var getUserPhotoPromise = this.userProfileImageService.getUserPhoto();
                return this._userPhotoPromise = getUserPhotoPromise, getUserPhotoPromise.then(function(blob) {
                    _this.userPhotos.push({
                        userObjectId: _this.userInfo.puid,
                        userIcon: blob
                    });
                    var objectUrl = blob.substring(4, blob.length - 1), sanitizedUrl = _this.sanitizer.bypassSecurityTrustUrl(objectUrl);
                    _this.store.dispatch(new _powerbi_Core_actions_group__WEBPACK_IMPORTED_MODULE_2__.Ar(sanitizedUrl));
                }, function(error) {
                    if (error.name !== _powerbi_User__WEBPACK_IMPORTED_MODULE_3__.SJ) throw error;
                }), getUserPhotoPromise;
            }, ProfileImageService.prototype.getOtherUserPhoto = function(userObjectId) {
                var _this = this, userPhotoPromise = _.find(this.getOtherUserPhotoPromises, function(user) {
                    return user.userObjectId === userObjectId;
                });
                if (userPhotoPromise) return userPhotoPromise.promise;
                var deferredString = this.promiseFactory.defer();
                return (this.applicationOptions.isE2ERun ? this.getRejectedHttpResultPromiseWithNotFound() : this.userMetadataHttpService.getOtherUserPhoto(userObjectId).toPromise()).then(function(result) {
                    if (result.data.type === _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_Utility__WEBPACK_IMPORTED_MODULE_4__.JA) {
                        var resultIcon = URL.createObjectURL(result.data);
                        return deferredString.resolve(resultIcon), void _this.userPhotos.push({
                            userObjectId,
                            userIcon: resultIcon
                        });
                    }
                    deferredString.reject();
                }, function(result) {
                    _this.resultHasStatusEquivalentOfNotFound(result.status) ? (deferredString.resolve(""), 
                    _this.userPhotos.push({
                        userObjectId,
                        userIcon: ""
                    })) : deferredString.reject();
                }), this.getOtherUserPhotoPromises.push({
                    userObjectId,
                    promise: deferredString.promise
                }), deferredString.promise;
            }, ProfileImageService.prototype.findGroupIcon = function(groupObjectId, loadDelay) {
                var _this = this, groupPhotoPromise = _.find(this.findGroupIconPromises, function(group) {
                    return group.groupObjectId === groupObjectId;
                });
                if (groupPhotoPromise) return groupPhotoPromise.promise;
                var deferredGroupIcon = this.promiseFactory.defer();
                return this.getGroupIcons(loadDelay).then(function(groupIcons) {
                    var group = _.find(groupIcons, function(g) {
                        return g.groupObjectId === groupObjectId;
                    });
                    if (group) {
                        var groupIcon = _this.base64Enconding(group.groupIcon);
                        deferredGroupIcon.resolve(groupIcon), _this.groupPhotos.push({
                            groupObjectId,
                            groupIcon
                        });
                    } else deferredGroupIcon.reject("Group with objectid " + groupObjectId + " has no icon");
                }, function() {
                    deferredGroupIcon.reject();
                }), this.findGroupIconPromises.push({
                    groupObjectId,
                    promise: deferredGroupIcon.promise
                }), deferredGroupIcon.promise;
            }, ProfileImageService.prototype.findOrGetGroupPhoto = function(groupObjectId) {
                var _this = this, deferredGroupIcon = this.promiseFactory.defer(), group = _.find(this.groupPhotos, function(group) {
                    return group.groupObjectId === groupObjectId;
                });
                return group ? "" !== group.groupIcon ? deferredGroupIcon.resolve(group.groupIcon) : deferredGroupIcon.reject() : this.findGroupIcon(groupObjectId).then(function(groupPhoto) {
                    deferredGroupIcon.resolve(groupPhoto);
                }, function() {
                    _this.getGroupIcon(groupObjectId).then(function(groupPhoto) {
                        deferredGroupIcon.resolve(groupPhoto);
                    }, function(error) {
                        deferredGroupIcon.reject();
                    });
                }), deferredGroupIcon.promise;
            }, ProfileImageService.prototype.findOrGetUserPhoto = function(userObjectId) {
                var deferredUserIcon = this.promiseFactory.defer(), user = _.find(this.userPhotos, function(user) {
                    return user.userObjectId === userObjectId;
                });
                return user ? "" !== user.userIcon ? deferredUserIcon.resolve(user.userIcon) : deferredUserIcon.reject() : userObjectId === this.userInfo.puid ? this._userPhotoPromise && this._userPhotoPromise.then(function(userPhoto) {
                    deferredUserIcon.resolve(userPhoto);
                }) : this.getOtherUserPhoto(userObjectId).then(function(userPhoto) {
                    userPhoto ? deferredUserIcon.resolve(userPhoto) : deferredUserIcon.reject();
                }), deferredUserIcon.promise;
            }, ProfileImageService.prototype.base64Enconding = function(data) {
                return "data:image/jpeg;base64," + data;
            }, ProfileImageService.prototype.resultHasStatusEquivalentOfNotFound = function(status) {
                return 404 === status || 400 === status || 500 === status;
            }, ProfileImageService.prototype.getRejectedHttpResultPromiseWithNotFound = function() {
                return this.promiseFactory.reject({
                    data: {},
                    status: 404,
                    headers: function() {
                        return "";
                    }
                });
            }, ProfileImageService.\u0275fac = function(t) {
                return new (t || ProfileImageService)(_angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275inject"](_powerbi_WebAppSettings__WEBPACK_IMPORTED_MODULE_6__.V), _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275inject"](_powerbi_User__WEBPACK_IMPORTED_MODULE_7__.a), _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275inject"](_powerbi_User__WEBPACK_IMPORTED_MODULE_3__.lH), _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275inject"](_powerbi_Telemetry__WEBPACK_IMPORTED_MODULE_0__.y0), _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275inject"](_angular_platform_browser__WEBPACK_IMPORTED_MODULE_8__.H7), _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275inject"](_ngrx_store__WEBPACK_IMPORTED_MODULE_9__.yh), _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275inject"](_powerbi_InjectionTokens_userMetadataHttpService__WEBPACK_IMPORTED_MODULE_10__.y), _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275inject"](_powerbi_InjectionTokens_promiseFactory__WEBPACK_IMPORTED_MODULE_11__.t));
            }, ProfileImageService.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275defineInjectable"]({
                token: ProfileImageService,
                factory: ProfileImageService.\u0275fac,
                providedIn: "root"
            }), ProfileImageService;
        }();
    },
    21392: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, {
            PublishToGroupDialogModule: function() {
                return PublishToGroupDialogModule;
            }
        });
        var common = __webpack_require__(77476), fesm2022_forms = __webpack_require__(17174), ngrx_effects = __webpack_require__(60756), dialog = __webpack_require__(32293), legacy_list = __webpack_require__(47347), dialogs_module = __webpack_require__(76966), pbi_scrollbar_module = __webpack_require__(72359), dialogs_parts_module = __webpack_require__(96327), pbi_search_box_module = __webpack_require__(39433), overlay = __webpack_require__(59051), lazy_load_module = __webpack_require__(82156), localization_module = __webpack_require__(79061), spinner_module = __webpack_require__(70137), tooltip_module = __webpack_require__(3741), pbi_overlay_module = __webpack_require__(66972), pbi_tooltip_module = __webpack_require__(16095), tri_svg_icon = __webpack_require__(17177), core = __webpack_require__(50423), manifests = [ {
            componentIdentifier: "DataflowGen2PublishErrorComponentId",
            path: "dummy-dataflow-gen2-publish-error-route",
            loadChildren: function() {
                return __webpack_require__.e("dataflow-gen2-publish-error").then(__webpack_require__.bind(__webpack_require__, 30587)).then(function(m) {
                    return m.DataflowGen2PublishErrorModule;
                });
            }
        } ], ArtifactIconsModule = function() {
            function ArtifactIconsModule() {}
            return ArtifactIconsModule.\u0275fac = function(t) {
                return new (t || ArtifactIconsModule);
            }, ArtifactIconsModule.\u0275mod = core["\u0275\u0275defineNgModule"]({
                type: ArtifactIconsModule
            }), ArtifactIconsModule.\u0275inj = core["\u0275\u0275defineInjector"]({
                imports: [ common.CommonModule, dialogs_module.c.withLazyManifest(manifests), lazy_load_module.N, localization_module.v, spinner_module.F, tooltip_module.z, pbi_overlay_module.N, tri_svg_icon.T6, pbi_tooltip_module.Z ]
            }), ArtifactIconsModule;
        }(), tslib_es6 = __webpack_require__(81337), FluentColumnName = function(FluentColumnName) {
            return FluentColumnName.Icon = "icon", FluentColumnName.Name = "name", FluentColumnName.Owner = "owner", 
            FluentColumnName.LastRefresh = "last-refresh", FluentColumnName.NextRefresh = "next-refresh", 
            FluentColumnName.Endorsement = "endorsement", FluentColumnName.Type = "type", FluentColumnName.ViewCount = "viewCount", 
            FluentColumnName.GitStatus = "git-status", FluentColumnName.IncludeInApp = "includeInApp", 
            FluentColumnName.Sensitivity = "Sensitivity", FluentColumnName.LastAccess = "last-access", 
            FluentColumnName.LastActivity = "last-activity", FluentColumnName.Relation = "relation", 
            FluentColumnName.Location = "location", FluentColumnName.SharedTime = "shared-time", 
            FluentColumnName.Description = "description", FluentColumnName.HiddenTime = "hidden-time", 
            FluentColumnName.Version = "version", FluentColumnName.Organization = "organization", 
            FluentColumnName.SharedBy = "shared-by", FluentColumnName.Task = "task", FluentColumnName.Score = "score", 
            FluentColumnName.DomainsWorkspacePath = "domains-workspace-path", FluentColumnName;
        }({}), BehaviorSubject = __webpack_require__(35510), FluentListFilterService = function() {
            function FluentListFilterService() {
                this.currentFilter = new Map, this.filter$ = new BehaviorSubject.X(this.currentFilter);
            }
            return FluentListFilterService.prototype.getFilter = function() {
                return this.filter$.asObservable();
            }, FluentListFilterService.prototype.clearAllFilters = function() {
                this.currentFilter.clear(), this.filter$.next(this.currentFilter);
            }, FluentListFilterService.prototype.clearAllFiltersExcept = function(columnNames) {
                for (var _i = 0, keys_1 = Array.from(this.currentFilter.keys()); _i < keys_1.length; _i++) {
                    var key = keys_1[_i];
                    columnNames.includes(key) || this.currentFilter.delete(key);
                }
                this.filter$.next(this.currentFilter);
            }, FluentListFilterService.prototype.hasNameFilterApplied = function() {
                var currentFilter = this.currentFilter;
                return !!currentFilter.has(FluentColumnName.Name) && !!currentFilter.get(FluentColumnName.Name);
            }, FluentListFilterService.prototype.hasFilterApplied = function() {
                var currentFilter = this.currentFilter;
                return currentFilter.has(FluentColumnName.Name) ? !!currentFilter.get(FluentColumnName.Name) : currentFilter.size >= 1;
            }, FluentListFilterService.prototype.hasFilterAppliedExceptName = function() {
                var currentFilter = this.currentFilter;
                return currentFilter.has(FluentColumnName.Name) ? currentFilter.size >= 2 : currentFilter.size >= 1;
            }, FluentListFilterService.prototype.checkFilterApplied = function(columnName, value) {
                if (!this.isValidColumnName(columnName)) return !1;
                var filterConfig = this.currentFilter.get(columnName);
                if (!filterConfig) return !1;
                switch (columnName) {
                  case FluentColumnName.Type:
                    var typeFilter = filterConfig.values;
                    return !_.isEmpty(typeFilter) && -1 !== typeFilter.indexOf(value);

                  case FluentColumnName.Owner:
                    var ownerFilter = filterConfig.values;
                    return !_.isEmpty(ownerFilter) && -1 !== ownerFilter.indexOf(value);

                  case FluentColumnName.IncludeInApp:
                  case FluentColumnName.LastAccess:
                  case FluentColumnName.SharedTime:
                  case FluentColumnName.Task:
                    return filterConfig.values === value;

                  case FluentColumnName.Relation:
                    var relationFilter = filterConfig.values;
                    return !_.isEmpty(relationFilter) && -1 !== relationFilter.indexOf(value);

                  default:
                    return !1;
                }
            }, FluentListFilterService.prototype.addFilter = function(columnName, value) {
                if (this.isValidColumnName(columnName)) {
                    this.currentFilter.has(columnName) || this.currentFilter.set(columnName, {
                        disabled: !1,
                        values: null
                    });
                    var filterConfig = this.currentFilter.get(columnName);
                    switch (columnName) {
                      case FluentColumnName.Type:
                      case FluentColumnName.Owner:
                        filterConfig.values = filterConfig.values || [], filterConfig.values.push(value);
                        break;

                      case FluentColumnName.IncludeInApp:
                        filterConfig.values = !!value;
                        break;

                      case FluentColumnName.Name:
                      case FluentColumnName.LastAccess:
                      case FluentColumnName.SharedTime:
                        filterConfig.values = value;
                        break;

                      default:
                        filterConfig.values = filterConfig.values || [], filterConfig.values.push(value);
                    }
                    this.filter$.next(this.currentFilter);
                }
            }, FluentListFilterService.prototype.removeFilter = function(columnName, value) {
                if (this.isValidColumnName(columnName)) {
                    var filterConfig = this.currentFilter.get(columnName);
                    if (filterConfig) {
                        switch (columnName) {
                          case FluentColumnName.Type:
                            var newTypeFilter = filterConfig.values;
                            _.pull(newTypeFilter, value), _.isEmpty(newTypeFilter) && this.currentFilter.delete(FluentColumnName.Type);
                            break;

                          case FluentColumnName.Owner:
                            var newOwnerFilter = filterConfig.values;
                            _.pull(newOwnerFilter, value), _.isEmpty(newOwnerFilter) && this.currentFilter.delete(FluentColumnName.Owner);
                            break;

                          case FluentColumnName.IncludeInApp:
                            this.currentFilter.delete(FluentColumnName.IncludeInApp);
                            break;

                          case FluentColumnName.Name:
                          case FluentColumnName.LastAccess:
                          case FluentColumnName.SharedTime:
                          case FluentColumnName.Task:
                            this.currentFilter.delete(columnName);
                            break;

                          case FluentColumnName.Relation:
                            var newRelationFilter = filterConfig.values;
                            _.pull(newRelationFilter, value), _.isEmpty(newRelationFilter) && this.currentFilter.delete(FluentColumnName.Relation);
                            break;

                          case FluentColumnName.Endorsement:
                            var newEndorsementFilter = filterConfig.values;
                            _.pull(newEndorsementFilter, value), _.isEmpty(newEndorsementFilter) && this.currentFilter.delete(FluentColumnName.Endorsement);
                            break;

                          default:
                            var newFilter = filterConfig.values;
                            _.pull(newFilter, value), _.isEmpty(newFilter) && this.currentFilter.delete(columnName);
                        }
                        this.filter$.next(this.currentFilter);
                    }
                }
            }, FluentListFilterService.prototype.clearFilterByType = function(columnName) {
                this.currentFilter.delete(columnName), this.filter$.next(this.currentFilter);
            }, FluentListFilterService.prototype.updateFilterState = function(columnName, config) {
                if (this.isValidColumnName(columnName)) {
                    var filterConfig = this.currentFilter.get(columnName);
                    filterConfig && (this.currentFilter.set(columnName, (0, tslib_es6.__assign)((0, 
                    tslib_es6.__assign)({}, filterConfig), config)), this.filter$.next(this.currentFilter));
                }
            }, FluentListFilterService.prototype.addFilters = function(columnName, values) {
                var _a, _b, _c, _d, _e;
                if (this.isValidColumnName(columnName)) {
                    this.currentFilter.has(columnName) || this.currentFilter.set(columnName, {
                        disabled: !1,
                        values: null
                    });
                    var filterConfig = this.currentFilter.get(columnName);
                    switch (columnName) {
                      case FluentColumnName.Type:
                        filterConfig.values = filterConfig.values || [], (_a = filterConfig.values).push.apply(_a, values || []);
                        break;

                      case FluentColumnName.Owner:
                        filterConfig.values = filterConfig.values || [], (_b = filterConfig.values).push.apply(_b, values || []);
                        break;

                      case FluentColumnName.IncludeInApp:
                        filterConfig.values = !!values;
                        break;

                      case FluentColumnName.Name:
                      case FluentColumnName.LastAccess:
                      case FluentColumnName.SharedTime:
                      case FluentColumnName.Task:
                        filterConfig.values = values;
                        break;

                      case FluentColumnName.Relation:
                        filterConfig.values = filterConfig.values || [], (_c = filterConfig.values).push.apply(_c, values || []);
                        break;

                      case FluentColumnName.Endorsement:
                        filterConfig.values = filterConfig.values || [], (_d = filterConfig.values).push.apply(_d, values || []);
                        break;

                      default:
                        filterConfig.values = filterConfig.values || [], (_e = filterConfig.values).push.apply(_e, values || []);
                    }
                    this.filter$.next(this.currentFilter);
                }
            }, FluentListFilterService.prototype.getFilterState = function(columnName) {
                return this.currentFilter.get(columnName);
            }, FluentListFilterService.prototype.isValidColumnName = function(columnName) {
                return columnName === FluentColumnName.Type || columnName === FluentColumnName.Owner || columnName === FluentColumnName.IncludeInApp || columnName === FluentColumnName.Name || columnName === FluentColumnName.Relation || columnName === FluentColumnName.Endorsement || columnName === FluentColumnName.LastAccess || columnName === FluentColumnName.Organization || columnName === FluentColumnName.SharedTime || columnName === FluentColumnName.Task;
            }, FluentListFilterService.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: FluentListFilterService,
                factory: FluentListFilterService.\u0275fac = function(t) {
                    return new (t || FluentListFilterService);
                }
            }), FluentListFilterService;
        }(), index_core = __webpack_require__(73471), dateFormatter = __webpack_require__(69637), Subject = __webpack_require__(30794), takeUntil = __webpack_require__(83317), operators_map = __webpack_require__(14172), telemetryHelpers = __webpack_require__(41114), ContentListOpenFluentListFilterPane = telemetryHelpers.cx["PBI.ContentList.OpenFluentListFilterPane"] = (0, 
        telemetryHelpers.b1)("PBI.ContentList.OpenFluentListFilterPane"), FluentListResizeColumnEnd = (telemetryHelpers.cx["PBI.Dashboard.GetRefreshHistoriesOnRefreshFailures"] = (0, 
        telemetryHelpers.b1)("PBI.Dashboard.GetRefreshHistoriesOnRefreshFailures"), telemetryHelpers.cx["PBI.FluentList.ResizeColumnEnd"] = (0, 
        telemetryHelpers.b1)("PBI.FluentList.ResizeColumnEnd")), ArtifactListUnavailableTryAgain = telemetryHelpers.cx["PBI.ArtifactList.Unavailable.TryAgain"] = (0, 
        telemetryHelpers.b1)("PBI.ArtifactList.Unavailable.TryAgain"), Telemetry = __webpack_require__(21617), distinctUntilChanged = __webpack_require__(77526), SidenavKind = function(SidenavKind) {
            return SidenavKind[SidenavKind.None = 0] = "None", SidenavKind[SidenavKind.Filter = 1] = "Filter", 
            SidenavKind[SidenavKind.Git = 2] = "Git", SidenavKind;
        }({}), FluentSidenavToggleService = function() {
            function FluentSidenavToggleService(telemetryService) {
                this.telemetryService = telemetryService, this.sidenavOpened$ = new BehaviorSubject.X(SidenavKind.None);
            }
            return FluentSidenavToggleService.prototype.getSidenavKindOpened = function() {
                return this.sidenavOpened$.asObservable();
            }, FluentSidenavToggleService.prototype.getSidenavOpened = function(kind) {
                return this.getSidenavKindOpened().pipe((0, operators_map.U)(function(sidenavOpened) {
                    return sidenavOpened === kind;
                }), (0, distinctUntilChanged.x)());
            }, FluentSidenavToggleService.prototype.toggleSidenav = function(kind, openEvent) {
                this.sidenavOpened$.value === kind ? this.closeSidenav() : this.openSidenav(kind, openEvent);
            }, FluentSidenavToggleService.prototype.openSidenav = function(kind, openEvent) {
                openEvent && this.telemetryService.logEvent(openEvent), this.sidenavOpened$.next(kind);
            }, FluentSidenavToggleService.prototype.closeSidenav = function() {
                this.sidenavOpened$.next(SidenavKind.None);
            }, FluentSidenavToggleService.\u0275fac = function(t) {
                return new (t || FluentSidenavToggleService)(core["\u0275\u0275inject"](Telemetry.y0));
            }, FluentSidenavToggleService.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: FluentSidenavToggleService,
                factory: FluentSidenavToggleService.\u0275fac
            }), FluentSidenavToggleService;
        }(), FluentListFilterPaneService = function() {
            function FluentListFilterPaneService(fluentSidenavToggleService) {
                this.fluentSidenavToggleService = fluentSidenavToggleService, this.filterButtonEnabled$ = new BehaviorSubject.X(!1);
            }
            return FluentListFilterPaneService.prototype.getFilterPaneOpened = function() {
                return this.fluentSidenavToggleService.getSidenavOpened(SidenavKind.Filter);
            }, FluentListFilterPaneService.prototype.toggleFilterPane = function() {
                this.fluentSidenavToggleService.toggleSidenav(SidenavKind.Filter, ContentListOpenFluentListFilterPane);
            }, FluentListFilterPaneService.prototype.openFilterPane = function() {
                this.fluentSidenavToggleService.openSidenav(SidenavKind.Filter, ContentListOpenFluentListFilterPane);
            }, FluentListFilterPaneService.prototype.closeFilterPane = function() {
                this.fluentSidenavToggleService.closeSidenav();
            }, FluentListFilterPaneService.prototype.setFilterButtonEnabled = function(enabled) {
                this.filterButtonEnabled$.next(enabled);
            }, FluentListFilterPaneService.prototype.getFilterButtonEnabled = function() {
                return this.filterButtonEnabled$.asObservable();
            }, FluentListFilterPaneService.\u0275fac = function(t) {
                return new (t || FluentListFilterPaneService)(core["\u0275\u0275inject"](FluentSidenavToggleService));
            }, FluentListFilterPaneService.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: FluentListFilterPaneService,
                factory: FluentListFilterPaneService.\u0275fac
            }), FluentListFilterPaneService;
        }(), localization_service = __webpack_require__(65181), icon = __webpack_require__(44408), localize_directive = __webpack_require__(59968), localize_attr_directive = __webpack_require__(22844), localize_tooltip_directive = __webpack_require__(50057), a11y = __webpack_require__(51193), pbi_office_icon_component = __webpack_require__(69437), legacy_checkbox = __webpack_require__(2467), pbi_tooltip_directive = __webpack_require__(36858), localize_pipe = __webpack_require__(85102);
        function ArtifactListFilterPaneComponent_ng_container_9_ng_container_4_mat_icon_2_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "mat-icon", 15), 2 & rf) {
                var filter_r3 = core["\u0275\u0275nextContext"]().$implicit;
                core["\u0275\u0275propertyInterpolate"]("fontIcon", filter_r3.iconName);
            }
        }
        function ArtifactListFilterPaneComponent_ng_container_9_ng_container_4_span_3_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "span", 16), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var filter_r3 = core["\u0275\u0275nextContext"]().$implicit;
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate"](filter_r3.displayName);
            }
        }
        function ArtifactListFilterPaneComponent_ng_container_9_ng_container_4_ng_container_4_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "div", 17), 
            core["\u0275\u0275element"](2, "pbi-office-icon", 18), core["\u0275\u0275elementEnd"](), 
            core["\u0275\u0275elementStart"](3, "span", 19), core["\u0275\u0275text"](4), core["\u0275\u0275elementEnd"](), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var filter_r3 = core["\u0275\u0275nextContext"]().$implicit;
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("name", "Datamart_16")("pbiTooltip", filter_r3.typeName || filter_r3.displayName), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](filter_r3.displayName);
            }
        }
        function ArtifactListFilterPaneComponent_ng_container_9_ng_container_4_Template(rf, ctx) {
            if (1 & rf) {
                var _r11 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementContainerStart"](0, 10), core["\u0275\u0275elementStart"](1, "mat-checkbox", 11), 
                core["\u0275\u0275listener"]("change", function($event) {
                    var filter_r3 = core["\u0275\u0275restoreView"](_r11).$implicit, ctx_r10 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r10.onCheckBoxChange($event, filter_r3));
                }), core["\u0275\u0275template"](2, ArtifactListFilterPaneComponent_ng_container_9_ng_container_4_mat_icon_2_Template, 1, 1, "mat-icon", 12), 
                core["\u0275\u0275template"](3, ArtifactListFilterPaneComponent_ng_container_9_ng_container_4_span_3_Template, 2, 1, "span", 13), 
                core["\u0275\u0275template"](4, ArtifactListFilterPaneComponent_ng_container_9_ng_container_4_ng_container_4_Template, 5, 3, "ng-container", 14), 
                core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementContainerEnd"]();
            }
            if (2 & rf) {
                var filter_r3 = ctx.$implicit;
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("checked", filter_r3.checked)("disabled", filter_r3.disabled)("title", filter_r3.displayName), 
                core["\u0275\u0275attribute"]("data-testid", filter_r3.displayName + "-workspace-filter-checkbox"), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", "Datamart" !== filter_r3.displayName && !!filter_r3.iconName), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", "Datamart" !== filter_r3.displayName), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", "Datamart" === filter_r3.displayName);
            }
        }
        function ArtifactListFilterPaneComponent_ng_container_9_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "span", 8), 
            core["\u0275\u0275text"](2), core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementEnd"](), 
            core["\u0275\u0275template"](4, ArtifactListFilterPaneComponent_ng_container_9_ng_container_4_Template, 5, 7, "ng-container", 9), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var key_r1 = ctx.$implicit, ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](3, 3, key_r1)), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngForOf", ctx_r0.availableFilters.get(key_r1))("ngForTrackBy", ctx_r0.trackByFilterValue);
            }
        }
        var _c0 = function() {
            return {
                "aria-label": "Close"
            };
        }, _c1 = function() {
            return {
                "aria-label": "Filter_ClearAll"
            };
        }, ArtifactListFilterPaneComponent = function() {
            function ArtifactListFilterPaneComponent(ref, fluentListFilterService, fluentListFilterPaneService, localizationService) {
                this.ref = ref, this.fluentListFilterService = fluentListFilterService, this.fluentListFilterPaneService = fluentListFilterPaneService, 
                this.localizationService = localizationService, this.destroy$ = new Subject.xQ;
            }
            return ArtifactListFilterPaneComponent.prototype.ngOnInit = function() {
                var _a, _b, _this = this;
                this.filter$ = this.fluentListFilterService.getFilter(), this.availableFilters = new Map, 
                this.generateFilterOptions(), null === (_a = this.dataSource$) || void 0 === _a || _a.subscribe(function(dataSource) {
                    var _a;
                    _this.dataSource = dataSource, null === (_a = _this.dataSource) || void 0 === _a || _a.connect().pipe((0, 
                    takeUntil.R)(_this.destroy$)).subscribe(function() {
                        _this.generateFilterOptions();
                    });
                }), null === (_b = this.dataSource) || void 0 === _b || _b.connect().pipe((0, takeUntil.R)(this.destroy$)).subscribe(function() {
                    _this.generateFilterOptions();
                }), this.filter$.pipe((0, takeUntil.R)(this.destroy$)).subscribe(function() {
                    return _this.updateFilterOptions();
                }), this.hasFilterApplied$ = this.filter$.pipe((0, takeUntil.R)(this.destroy$), (0, 
                operators_map.U)(function() {
                    return _this.fluentListFilterService.hasFilterAppliedExceptName();
                }));
            }, ArtifactListFilterPaneComponent.prototype.ngOnDestroy = function() {
                this.destroy$.next(), this.destroy$.complete();
            }, ArtifactListFilterPaneComponent.prototype.generateFilterOptions = function() {
                var _this = this;
                this.availableFilters.clear(), this.dataSource && (this.availableFilters.set("Type", _.sortBy(_.uniqWith(_.map(this.dataSource.data, function(item) {
                    var value = 8 === item.type ? item.isStreaming ? 9 : 8 : item.type;
                    return {
                        value,
                        displayName: item.typeName,
                        columnName: FluentColumnName.Type,
                        iconName: _this.getFilterTypeIcon(value)
                    };
                }), this.typeComparator), "displayName")), this.hideOwnerFilter || this.availableFilters.set("Owner_Lowercase", _.sortBy(_.uniqBy(_.map(this.dataSource.data, function(item) {
                    return {
                        value: item.owner,
                        displayName: item.owner,
                        columnName: FluentColumnName.Owner
                    };
                }), "value"), "displayName").filter(function(value) {
                    return !!value.displayName && "" !== value.displayName.trim();
                })), this.showIncludeInAppFilter && this.availableFilters.set("GroupingDefinition_OtherGroupName", _.sortBy(_.uniqBy(_.map(this.dataSource.data, function(item) {
                    return {
                        value: !!item.isIncludedInApp,
                        displayName: _this.localizationService.get(item.isIncludedInApp ? "Include_In_The_App_Filter" : "Not_Include_In_The_App_Filter"),
                        columnName: FluentColumnName.IncludeInApp,
                        iconName: "pbi-glyph-my-apps"
                    };
                }), "value"), "displayName")), this.showEndorsementFilter && this.availableFilters.set("Endorsement", _.sortBy(_.uniqBy(_.map(this.dataSource.data, function(item) {
                    return {
                        value: item.endorsement && item.endorsement.stage ? item.endorsement.stage : null,
                        displayName: _this.getEndorsementString(item),
                        columnName: FluentColumnName.Endorsement
                    };
                }), "value"), "displayName")), this.showLastAccessFilter && this.availableFilters.set("Opened", _.sortBy(_.uniqBy(_.map(this.dataSource.data, function(item) {
                    return {
                        value: item.lastAccessTime,
                        displayName: item.lastAccessTime,
                        columnName: FluentColumnName.LastAccess,
                        numericSort: (0, dateFormatter.YL)(item.lastAccess)
                    };
                }), "value"), "numericSort").filter(function(value) {
                    return !!value.displayName && "" !== value.displayName.trim();
                })), this.showRelationFilter && this.availableFilters.set("Relation", _.sortBy(_.uniqBy(_.map(this.dataSource.data, function(item) {
                    return {
                        value: null == item ? void 0 : item.relation,
                        displayName: _this.localizationService.get(null == item ? void 0 : item.relation),
                        columnName: FluentColumnName.Relation
                    };
                }), "value"), "displayName")), this.updateFilterOptions());
            }, ArtifactListFilterPaneComponent.prototype.typeComparator = function(a, b) {
                return a.value === b.value || 6 === a.value && 2 === b.value || 2 === a.value && 6 === b.value;
            }, ArtifactListFilterPaneComponent.prototype.closeFilterPane = function() {
                this.fluentListFilterPaneService.closeFilterPane();
            }, ArtifactListFilterPaneComponent.prototype.onCheckBoxChange = function(e, filter) {
                e.checked ? this.fluentListFilterService.addFilter(filter.columnName, filter.value) : this.fluentListFilterService.removeFilter(filter.columnName, filter.value);
            }, ArtifactListFilterPaneComponent.prototype.updateFilterOptions = function() {
                var _this = this;
                this.availableFilters.forEach(function(values, key) {
                    _.forEach(values, function(value) {
                        value.checked = _this.fluentListFilterService.checkFilterApplied(value.columnName, value.value);
                        var config = _this.fluentListFilterService.getFilterState(value.columnName);
                        value.disabled = config && config.disabled;
                    });
                }), this.ref.markForCheck();
            }, ArtifactListFilterPaneComponent.prototype.getFilterTypeIcon = function(type) {
                switch (type) {
                  case 5:
                    return "pbi-glyph-my-apps";

                  case 8:
                  case 103:
                    return "pbi-glyph-dataflow";

                  case 9:
                    return "pbi-glyph-streamingdataflow";

                  case 1:
                    return "pbi-glyph-gauge";

                  case 3:
                    return "pbi-glyph-database";

                  case 6:
                  case 2:
                    return "pbi-glyph-barchart";

                  case 4:
                    return "pbi-glyph-excel";

                  case 7:
                    return "pbi-glyph-collections";

                  case 10:
                    return "pbi-glyph-trophy2";
                }
            }, ArtifactListFilterPaneComponent.prototype.clearAllFilter = function() {
                this.fluentListFilterService.clearAllFilters();
            }, ArtifactListFilterPaneComponent.prototype.trackByFilterSection = function(index, item) {
                return item;
            }, ArtifactListFilterPaneComponent.prototype.trackByFilterValue = function(index, item) {
                return item.value;
            }, ArtifactListFilterPaneComponent.prototype.getEndorsementString = function(item) {
                var _a, _b, localizationString = "None";
                return (null === (_a = null == item ? void 0 : item.endorsement) || void 0 === _a ? void 0 : _a.stage) === index_core.X_.Promoted ? localizationString = "Promoted" : (null === (_b = null == item ? void 0 : item.endorsement) || void 0 === _b ? void 0 : _b.stage) === index_core.X_.Certified && (localizationString = "Certified"), 
                this.localizationService.get(localizationString);
            }, ArtifactListFilterPaneComponent.\u0275fac = function(t) {
                return new (t || ArtifactListFilterPaneComponent)(core["\u0275\u0275directiveInject"](core.ChangeDetectorRef), core["\u0275\u0275directiveInject"](FluentListFilterService), core["\u0275\u0275directiveInject"](FluentListFilterPaneService), core["\u0275\u0275directiveInject"](localization_service.o));
            }, ArtifactListFilterPaneComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: ArtifactListFilterPaneComponent,
                selectors: [ [ "artifact-list-filter-pane" ] ],
                inputs: {
                    dataSource: "dataSource",
                    dataSource$: "dataSource$",
                    hideOwnerFilter: "hideOwnerFilter",
                    showIncludeInAppFilter: "showIncludeInAppFilter",
                    showEndorsementFilter: "showEndorsementFilter",
                    showLastAccessFilter: "showLastAccessFilter",
                    showRelationFilter: "showRelationFilter"
                },
                decls: 10,
                vars: 9,
                consts: [ [ "localize", "Filters", "localizeTooltip", "Filters", 1, "title" ], [ "cdkMonitorElementFocus", "", "data-testid", "workspace-filter-pane-close-btn", "localizeTooltip", "Close", 1, "closebtn", 3, "localizeAttr", "click" ], [ "fontIcon", "pbi-glyph-close", 1, "glyph-small" ], [ 1, "command" ], [ "cdkMonitorElementFocus", "", "data-testid", "workspace-filter-pane-clear-btn", "localizeTooltip", "Filter_ClearAll", 1, "clearbtn", 3, "disabled", "localizeAttr", "click" ], [ "fontIcon", "pbi-glyph-clear-filter", 1, "glyph-small" ], [ "localize", "Filter_ClearAll" ], [ 4, "ngFor", "ngForOf", "ngForTrackBy" ], [ 1, "section" ], [ "class", "filter", 4, "ngFor", "ngForOf", "ngForTrackBy" ], [ 1, "filter" ], [ 3, "checked", "disabled", "title", "change" ], [ "class", "glyph-small filterTagIcon", 3, "fontIcon", 4, "ngIf" ], [ "class", "filterTagContent", 4, "ngIf" ], [ 4, "ngIf" ], [ 1, "glyph-small", "filterTagIcon", 3, "fontIcon" ], [ 1, "filterTagContent" ], [ 1, "datamartIcon" ], [ "pbiTooltipPosition", "before", "aria-hidden", "false", 3, "name", "pbiTooltip" ], [ "data-testid", "filter-artifact-tag", 1, "datamartTagName" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementStart"](0, "section"), core["\u0275\u0275element"](1, "span", 0), 
                    core["\u0275\u0275elementStart"](2, "button", 1), core["\u0275\u0275listener"]("click", function() {
                        return ctx.closeFilterPane();
                    }), core["\u0275\u0275element"](3, "mat-icon", 2), core["\u0275\u0275elementEnd"]()(), 
                    core["\u0275\u0275elementStart"](4, "section", 3)(5, "button", 4), core["\u0275\u0275listener"]("click", function() {
                        return ctx.clearAllFilter();
                    }), core["\u0275\u0275pipe"](6, "async"), core["\u0275\u0275element"](7, "mat-icon", 5)(8, "span", 6), 
                    core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275template"](9, ArtifactListFilterPaneComponent_ng_container_9_Template, 5, 5, "ng-container", 7)), 
                    2 & rf && (core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("localizeAttr", core["\u0275\u0275pureFunction0"](7, _c0)), 
                    core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("disabled", !core["\u0275\u0275pipeBind1"](6, 5, ctx.hasFilterApplied$))("localizeAttr", core["\u0275\u0275pureFunction0"](8, _c1)), 
                    core["\u0275\u0275advance"](4), core["\u0275\u0275property"]("ngForOf", ctx.availableFilters.keys())("ngForTrackBy", ctx.trackByFilterSection));
                },
                dependencies: [ common.NgForOf, common.NgIf, icon.Hw, localize_directive.X, localize_attr_directive.b, localize_tooltip_directive.r, a11y.kH, pbi_office_icon_component.m, legacy_checkbox.FC, pbi_tooltip_directive.V, common.AsyncPipe, localize_pipe.F ],
                styles: [ '[_nghost-%COMP%]{display:flex;flex-direction:column}[_nghost-%COMP%]     .mat-checkbox{padding:0 8px}[_nghost-%COMP%]     .mat-checkbox .mat-checkbox-layout{display:flex;align-items:center}[_nghost-%COMP%]     .mat-checkbox .mat-checkbox-layout>.mat-checkbox-inner-container{margin:6px 8px;height:20px;width:20px;color:var(--fluent-theme-neutral-secondary-color, #605E5C)}[_nghost-%COMP%]     .mat-checkbox .mat-checkbox-layout .mat-checkbox-label{display:flex;min-width:0;font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-regular, 400);line-height:20px;padding:6px 0;color:var(--fluent-theme-neutral-primary-color, #323130)}[_nghost-%COMP%]     .mat-checkbox .mat-checkbox-layout .mat-checkbox-label .filterTagIcon{margin:0 4px}[_nghost-%COMP%]     .mat-checkbox .mat-checkbox-layout .mat-checkbox-label .filterTagContent{text-overflow:ellipsis;overflow:hidden;white-space:nowrap;margin:0 8px}[_nghost-%COMP%]     .mat-checkbox .datamartIcon{width:16px;height:16px;margin:2px 0 0 3px}[_nghost-%COMP%]     .mat-checkbox .datamartTagName{margin-left:15px}[_nghost-%COMP%]     .mat-checkbox .mat-checkbox-frame{border-width:1px}[_nghost-%COMP%]     .mat-checkbox.mat-checkbox-checked.mat-accent .mat-checkbox-background{background-color:var(--fluent-theme-primary-color, #F2C811)}[_nghost-%COMP%]     .mat-checkbox .mat-checkbox-checkmark-path{stroke:var(--checkmark-primary-content-color, #323130)!important}[_nghost-%COMP%]     .mat-checkbox.mat-checkbox-disabled{opacity:.3}', '.wrapper[_ngcontent-%COMP%]{display:flex;flex-direction:column}mat-selection-list[_ngcontent-%COMP%]{padding-top:0}virtual-scroll[_ngcontent-%COMP%]     .scrollable-content{position:unset}mat-list-option.filter[_ngcontent-%COMP%]{height:32px;outline:unset}mat-list-option.filter[_ngcontent-%COMP%]:hover, mat-list-option.filter[_ngcontent-%COMP%]:focus{background-color:var(--fluent-theme-white-color, #FFF)}mat-list-option.filter.cdk-keyboard-focused[_ngcontent-%COMP%]:focus{outline:var(--focus-two-tone-outline-definition, auto 1px);outline-color:var(--focus-two-tone-outline-color, -webkit-focus-ring-color)}mat-list-option.filter[_ngcontent-%COMP%]     .mat-list-text{flex-direction:row;min-width:0;font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-regular, 400);line-height:20px;color:var(--fluent-theme-neutral-primary-color, #323130)}html:not([dir="rtl"])[_nghost-%COMP%]   mat-list-option.filter[_ngcontent-%COMP%]     .mat-list-text, html:not([dir="rtl"])   [_nghost-%COMP%]   mat-list-option.filter[_ngcontent-%COMP%]     .mat-list-text{padding-left:8px}html[dir="rtl"][_nghost-%COMP%]   mat-list-option.filter[_ngcontent-%COMP%]     .mat-list-text, html[dir="rtl"]   [_nghost-%COMP%]   mat-list-option.filter[_ngcontent-%COMP%]     .mat-list-text{padding-right:8px}mat-list-option.filter[_ngcontent-%COMP%]     .mat-pseudo-checkbox{border-width:1px;width:20px;height:20px}mat-list-option.filter[_ngcontent-%COMP%]     .mat-pseudo-checkbox-checked{background-color:var(--fluent-theme-primary-color, #F2C811)}.expander[_ngcontent-%COMP%], .expander[_ngcontent-%COMP%]:hover{color:var(--fluent-theme-dark-alt-color, #DAB50F);border:none;background-color:transparent}section[_ngcontent-%COMP%]{display:flex}section[_ngcontent-%COMP%]   .title[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--xlg-font-size, 20px);font-weight:var(--font-weight-semi-bold, 600);color:var(--fluent-theme-neutral-primary-color, #323130);line-height:27px;margin:0;display:flex;flex:1 1 auto}html:not([dir="rtl"])[_nghost-%COMP%]   section[_ngcontent-%COMP%]   .title[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   section[_ngcontent-%COMP%]   .title[_ngcontent-%COMP%]{padding:16px 20px 11px 16px}html[dir="rtl"][_nghost-%COMP%]   section[_ngcontent-%COMP%]   .title[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   section[_ngcontent-%COMP%]   .title[_ngcontent-%COMP%]{padding:16px 16px 11px 20px}section[_ngcontent-%COMP%]   .closebtn[_ngcontent-%COMP%]{padding:12px;background-color:var(--fluent-theme-white-color, #FFF);border:none;flex:0 0 auto;display:flex}section[_ngcontent-%COMP%]   .closebtn[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]{color:var(--fluent-theme-neutral-secondary-color, #605E5C);padding:8px}section[_ngcontent-%COMP%]   .closebtn.cdk-keyboard-focused[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]{outline:var(--focus-two-tone-outline-definition, auto 1px);outline-color:var(--focus-two-tone-outline-color, -webkit-focus-ring-color)}section[_ngcontent-%COMP%]   .clearbtn[_ngcontent-%COMP%]{color:var(--fluent-theme-neutral-primary-color, #323130);background-color:var(--fluent-theme-white-color, #FFF);border:none;padding:0;align-items:center;display:flex}html:not([dir="rtl"])[_nghost-%COMP%]   section[_ngcontent-%COMP%]   .clearbtn[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   section[_ngcontent-%COMP%]   .clearbtn[_ngcontent-%COMP%]{padding-left:8px}html[dir="rtl"][_nghost-%COMP%]   section[_ngcontent-%COMP%]   .clearbtn[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   section[_ngcontent-%COMP%]   .clearbtn[_ngcontent-%COMP%]{padding-right:8px}section[_ngcontent-%COMP%]   .clearbtn[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]{color:var(--fluent-theme-neutral-mobile-color, #212121);padding:14px 8px;display:inline-flex}section[_ngcontent-%COMP%]   .clearbtn[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-regular, 400);line-height:19px}html:not([dir="rtl"])[_nghost-%COMP%]   section[_ngcontent-%COMP%]   .clearbtn[_ngcontent-%COMP%]   span[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   section[_ngcontent-%COMP%]   .clearbtn[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{padding:12px 8px 12px 0}html[dir="rtl"][_nghost-%COMP%]   section[_ngcontent-%COMP%]   .clearbtn[_ngcontent-%COMP%]   span[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   section[_ngcontent-%COMP%]   .clearbtn[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{padding:12px 0 12px 8px}section[_ngcontent-%COMP%]   .clearbtn.cdk-keyboard-focused[_ngcontent-%COMP%]{outline:var(--focus-two-tone-outline-definition, auto 1px);outline-color:var(--focus-two-tone-outline-color, -webkit-focus-ring-color)}section[_ngcontent-%COMP%]   .clearbtn[_ngcontent-%COMP%]:disabled, section[_ngcontent-%COMP%]   .clearbtn[_ngcontent-%COMP%]:disabled   mat-icon[_ngcontent-%COMP%]{color:var(--fluent-theme-neutral-tertia-color, #A19F9D)}section.command[_ngcontent-%COMP%]{border-bottom:1px solid var(--fluent-theme-neutral-light-color, #EDEBE9);margin-bottom:5px}.section[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-semi-bold, 600);line-height:20px}html:not([dir="rtl"])[_nghost-%COMP%]   .section[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .section[_ngcontent-%COMP%]{padding:16px 16px 8px}html[dir="rtl"][_nghost-%COMP%]   .section[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .section[_ngcontent-%COMP%]{padding:16px 16px 8px}.filterSection[_ngcontent-%COMP%], .sectionTitle[_ngcontent-%COMP%]{display:block}.mat-icon[_ngcontent-%COMP%]{overflow:visible}.mat-icon.glyph-small[_ngcontent-%COMP%]{font-size:var(--lg-font-size, 16px);width:var(--lg-font-size, 16px);height:var(--lg-font-size, 16px)}.mat-icon.glyph-mini[_ngcontent-%COMP%]{font-size:var(--sm-font-size, 12px);width:var(--sm-font-size, 12px);height:var(--sm-font-size, 12px)}.mat-icon.mat-ligature-font[fontIcon][_ngcontent-%COMP%]{overflow:auto}' ],
                changeDetection: 0
            }), ArtifactListFilterPaneComponent;
        }(), localize_format_pipe = __webpack_require__(74199);
        function ArtifactListFilterTagsComponent_ng_container_0_ng_container_2_div_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r7 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div", 6), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r7);
                    var ctx_r6 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r6.openFilterPane());
                }), core["\u0275\u0275pipe"](1, "localizeFormat"), core["\u0275\u0275pipe"](2, "localizeFormat"), 
                core["\u0275\u0275elementStart"](3, "span", 7)(4, "span", 8), core["\u0275\u0275text"](5), 
                core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementStart"](6, "button", 9), 
                core["\u0275\u0275listener"]("click", function() {
                    var typeFilter_r5 = core["\u0275\u0275restoreView"](_r7).$implicit, ctx_r8 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r8.deleteTypeFilter(typeFilter_r5));
                }), core["\u0275\u0275pipe"](7, "localizeFormat"), core["\u0275\u0275pipe"](8, "localizeFormat"), 
                core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var typeFilter_r5 = ctx.$implicit, ctx_r4 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275attribute"]("aria-label", core["\u0275\u0275pipeBind2"](1, 3, "AppliedFilter", core["\u0275\u0275pipeBind2"](2, 6, "Types", ctx_r4.getTypeTagContent(typeFilter_r5)))), 
                core["\u0275\u0275advance"](5), core["\u0275\u0275textInterpolate"](ctx_r4.getTypeTagContent(typeFilter_r5)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275attribute"]("aria-label", core["\u0275\u0275pipeBind2"](7, 9, "RemoveFilter", core["\u0275\u0275pipeBind2"](8, 12, "Types", ctx_r4.getTypeTagContent(typeFilter_r5))));
            }
        }
        function ArtifactListFilterTagsComponent_ng_container_0_ng_container_2_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, ArtifactListFilterTagsComponent_ng_container_0_ng_container_2_div_1_Template, 9, 15, "div", 5), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var ctx_r1 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngForOf", ctx_r1.filter.get(ctx_r1.typeColumnName).values);
            }
        }
        function ArtifactListFilterTagsComponent_ng_container_0_ng_container_3_div_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r12 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div", 11), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r12);
                    var ctx_r11 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r11.openFilterPane());
                }), core["\u0275\u0275pipe"](1, "localizeFormat"), core["\u0275\u0275pipe"](2, "localizeFormat"), 
                core["\u0275\u0275elementStart"](3, "span", 12)(4, "span", 8), core["\u0275\u0275text"](5), 
                core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementStart"](6, "button", 9), 
                core["\u0275\u0275listener"]("click", function() {
                    var ownerFilter_r10 = core["\u0275\u0275restoreView"](_r12).$implicit, ctx_r13 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r13.deleteOwnerFilter(ownerFilter_r10));
                }), core["\u0275\u0275pipe"](7, "localizeFormat"), core["\u0275\u0275pipe"](8, "localizeFormat"), 
                core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var ownerFilter_r10 = ctx.$implicit;
                core["\u0275\u0275attribute"]("aria-label", core["\u0275\u0275pipeBind2"](1, 3, "AppliedFilter", core["\u0275\u0275pipeBind2"](2, 6, "Owners", ownerFilter_r10))), 
                core["\u0275\u0275advance"](5), core["\u0275\u0275textInterpolate"](ownerFilter_r10), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275attribute"]("aria-label", core["\u0275\u0275pipeBind2"](7, 9, "RemoveFilter", core["\u0275\u0275pipeBind2"](8, 12, "Owners", ownerFilter_r10)));
            }
        }
        function ArtifactListFilterTagsComponent_ng_container_0_ng_container_3_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, ArtifactListFilterTagsComponent_ng_container_0_ng_container_3_div_1_Template, 9, 15, "div", 10), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var ctx_r2 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngForOf", ctx_r2.filter.get(ctx_r2.ownerColumnName).values);
            }
        }
        function ArtifactListFilterTagsComponent_ng_container_0_div_4_Template(rf, ctx) {
            if (1 & rf) {
                var _r15 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div", 13), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r15);
                    var ctx_r14 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r14.openFilterPane());
                }), core["\u0275\u0275pipe"](1, "localizeFormat"), core["\u0275\u0275pipe"](2, "localizeFormat"), 
                core["\u0275\u0275elementStart"](3, "span", 14)(4, "span", 8), core["\u0275\u0275text"](5), 
                core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementStart"](6, "button", 9), 
                core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r15);
                    var ctx_r16 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r16.deleteIsIncludedInAppFilter());
                }), core["\u0275\u0275pipe"](7, "localizeFormat"), core["\u0275\u0275pipe"](8, "localizeFormat"), 
                core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var ctx_r3 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275attribute"]("aria-label", core["\u0275\u0275pipeBind2"](1, 3, "AppliedFilter", core["\u0275\u0275pipeBind2"](2, 6, "IncludedInTheApp", ctx_r3.includedInAppTagContent))), 
                core["\u0275\u0275advance"](5), core["\u0275\u0275textInterpolate"](ctx_r3.includedInAppTagContent), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275attribute"]("aria-label", core["\u0275\u0275pipeBind2"](7, 9, "RemoveFilter", core["\u0275\u0275pipeBind2"](8, 12, "IncludedInTheApp", ctx_r3.includedInAppTagContent)));
            }
        }
        function ArtifactListFilterTagsComponent_ng_container_0_Template(rf, ctx) {
            if (1 & rf) {
                var _r18 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "div", 1), 
                core["\u0275\u0275template"](2, ArtifactListFilterTagsComponent_ng_container_0_ng_container_2_Template, 2, 1, "ng-container", 0), 
                core["\u0275\u0275template"](3, ArtifactListFilterTagsComponent_ng_container_0_ng_container_3_Template, 2, 1, "ng-container", 0), 
                core["\u0275\u0275template"](4, ArtifactListFilterTagsComponent_ng_container_0_div_4_Template, 9, 15, "div", 2), 
                core["\u0275\u0275elementStart"](5, "button", 3), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r18);
                    var ctx_r17 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r17.clearAll());
                }), core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementStart"](6, "button", 4), 
                core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r18);
                    var ctx_r19 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r19.openFilterPane());
                }), core["\u0275\u0275text"](7), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementContainerEnd"]();
            }
            if (2 & rf) {
                var ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", ctx_r0.shouldShowFilterTag(ctx_r0.typeColumnName)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx_r0.shouldShowFilterTag(ctx_r0.ownerColumnName)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx_r0.shouldShowFilterTag(ctx_r0.includeColumnName)), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](ctx_r0.numOfFiltersTagContent);
            }
        }
        var ArtifactListFilterTagsComponent = function() {
            function ArtifactListFilterTagsComponent(fluentListFilterService, fluentListFilterPaneService, localizationService, changeDetector) {
                this.fluentListFilterService = fluentListFilterService, this.fluentListFilterPaneService = fluentListFilterPaneService, 
                this.localizationService = localizationService, this.changeDetector = changeDetector, 
                this.destroy$ = new Subject.xQ, this.typeColumnName = FluentColumnName.Type, this.ownerColumnName = FluentColumnName.Owner, 
                this.includeColumnName = FluentColumnName.IncludeInApp;
            }
            return ArtifactListFilterTagsComponent.prototype.ngOnInit = function() {
                var _this = this;
                this.fluentListFilterService.getFilter().pipe((0, takeUntil.R)(this.destroy$)).subscribe(function(filter) {
                    _this.filter = filter, _this.changeDetector.markForCheck();
                });
            }, ArtifactListFilterTagsComponent.prototype.ngOnDestroy = function() {
                this.destroy$.next(), this.destroy$.complete();
            }, ArtifactListFilterTagsComponent.prototype.clearAll = function() {
                this.fluentListFilterService.clearAllFilters();
            }, ArtifactListFilterTagsComponent.prototype.openFilterPane = function() {
                this.fluentListFilterPaneService.openFilterPane();
            }, ArtifactListFilterTagsComponent.prototype.deleteTypeFilter = function(typeFilter) {
                this.fluentListFilterService.removeFilter(FluentColumnName.Type, typeFilter);
            }, ArtifactListFilterTagsComponent.prototype.deleteOwnerFilter = function(ownerFilter) {
                this.fluentListFilterService.removeFilter(FluentColumnName.Owner, ownerFilter);
            }, ArtifactListFilterTagsComponent.prototype.deleteIsIncludedInAppFilter = function() {
                this.fluentListFilterService.clearFilterByType(FluentColumnName.IncludeInApp);
            }, ArtifactListFilterTagsComponent.prototype.hasFilter = function() {
                return this.hasEnabledFilters(FluentColumnName.Type) || this.hasEnabledFilters(FluentColumnName.Owner) || this.hasEnabledFilters(FluentColumnName.IncludeInApp);
            }, ArtifactListFilterTagsComponent.prototype.getTypeTagContent = function(typeFilter) {
                return this.localizationService.get(this.getLocalizeKeyFromType(typeFilter));
            }, Object.defineProperty(ArtifactListFilterTagsComponent.prototype, "includedInAppTagContent", {
                get: function() {
                    return this.filter.has(FluentColumnName.IncludeInApp) && this.filter.get(FluentColumnName.IncludeInApp).values ? this.localizationService.get("Yes") : this.localizationService.get("No");
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(ArtifactListFilterTagsComponent.prototype, "numOfFiltersTagContent", {
                get: function() {
                    var filter = this.filter;
                    return this.localizationService.format("Filter_Applied", (filter.has(FluentColumnName.Type) ? 1 : 0) + (filter.has(FluentColumnName.Owner) ? 1 : 0) + (filter.has(FluentColumnName.IncludeInApp) ? 1 : 0));
                },
                enumerable: !1,
                configurable: !0
            }), ArtifactListFilterTagsComponent.prototype.shouldShowFilterTag = function(columnName) {
                var config = this.fluentListFilterService.getFilterState(columnName);
                return config && !config.disabled;
            }, ArtifactListFilterTagsComponent.prototype.getLocalizeKeyFromType = function(type) {
                return 6 === type ? "Artifact_Report" : this.convertArtifactTypeToString(type);
            }, ArtifactListFilterTagsComponent.prototype.convertArtifactTypeToString = function(type) {
                switch (type) {
                  case 5:
                    return "App";

                  case 8:
                    return "ContentList_Datapool";

                  case 9:
                    return "StreamingDataflow_Label";

                  case 1:
                    return "Artifact_Dashboard";

                  case 103:
                    return "Artifact_Dataflow_Gen2";

                  case 3:
                    return "Artifact_Dataset";

                  case 6:
                    return "Artifact_RdlReport";

                  case 2:
                    return "Artifact_Report";

                  case 4:
                    return "Artifact_Workbook";

                  case 7:
                    return "Workspace";

                  case 10:
                    return "Scorecard";

                  case 11:
                    return "Artifact_Datamart";

                  default:
                    throw new Error("Type ".concat(type, " is not valid"));
                }
            }, ArtifactListFilterTagsComponent.prototype.hasEnabledFilters = function(columnName) {
                return this.filter.has(columnName) && !this.filter.get(columnName).disabled;
            }, ArtifactListFilterTagsComponent.\u0275fac = function(t) {
                return new (t || ArtifactListFilterTagsComponent)(core["\u0275\u0275directiveInject"](FluentListFilterService), core["\u0275\u0275directiveInject"](FluentListFilterPaneService), core["\u0275\u0275directiveInject"](localization_service.o), core["\u0275\u0275directiveInject"](core.ChangeDetectorRef));
            }, ArtifactListFilterTagsComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: ArtifactListFilterTagsComponent,
                selectors: [ [ "artifact-list-filter-tags" ] ],
                decls: 1,
                vars: 1,
                consts: [ [ 4, "ngIf" ], [ 1, "fluentListFilterTags" ], [ "role", "button", "class", "fluentListFilterTag isIncludedInAppTag", "tabindex", "0", 3, "click", 4, "ngIf" ], [ "cdkMonitorElementFocus", "", "tabindex", "0", "localize", "Clear_All", "localizeTooltip", "Filter_ClearAll", 1, "clearAll", 3, "click" ], [ 1, "allFilters", 3, "click" ], [ "role", "button", "class", "fluentListFilterTag typeTag", "tabindex", "0", 3, "click", 4, "ngFor", "ngForOf" ], [ "role", "button", "tabindex", "0", 1, "fluentListFilterTag", "typeTag", 3, "click" ], [ "localize", "Types", "localize-fragments", "", 1, "tagContent" ], [ "fragment-index", "0", 1, "filterContent" ], [ "cdkMonitorElementFocus", "", "tabindex", "0", 1, "closeBtn", "glyphicon", "pbi-glyph-close", 3, "click" ], [ "role", "button", "class", "fluentListFilterTag ownerTag", "tabindex", "0", 3, "click", 4, "ngFor", "ngForOf" ], [ "role", "button", "tabindex", "0", 1, "fluentListFilterTag", "ownerTag", 3, "click" ], [ "localize", "Owners", "localize-fragments", "", 1, "tagContent" ], [ "role", "button", "tabindex", "0", 1, "fluentListFilterTag", "isIncludedInAppTag", 3, "click" ], [ "localize", "IncludedInTheApp", "localize-fragments", "", 1, "tagContent" ] ],
                template: function(rf, ctx) {
                    1 & rf && core["\u0275\u0275template"](0, ArtifactListFilterTagsComponent_ng_container_0_Template, 8, 4, "ng-container", 0), 
                    2 & rf && core["\u0275\u0275property"]("ngIf", ctx.hasFilter());
                },
                dependencies: [ common.NgForOf, common.NgIf, localize_directive.X, localize_tooltip_directive.r, a11y.kH, localize_format_pipe.j ],
                styles: [ '.fluentListFilterTags[_ngcontent-%COMP%]{padding-top:16px;background-color:var(--fluent-theme-white-color, #FFF)}html:not([dir="rtl"])[_nghost-%COMP%]   .fluentListFilterTags[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .fluentListFilterTags[_ngcontent-%COMP%]{padding-left:8px}html[dir="rtl"][_nghost-%COMP%]   .fluentListFilterTags[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .fluentListFilterTags[_ngcontent-%COMP%]{padding-right:8px}.fluentListFilterTags.isEmpty[_ngcontent-%COMP%]{display:none}.fluentListFilterTags[_ngcontent-%COMP%]   .fluentListFilterTag[_ngcontent-%COMP%]{cursor:pointer;display:inline-flex;border-radius:2px;background-color:var(--fluent-theme-neutral-lighter-color, #F3F2F1);line-height:16px;height:28px;color:var(--fluent-theme-neutral-primary-color, #323130);align-items:center;font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--sm-font-size, 12px);font-weight:var(--font-weight-regular, 400);margin-bottom:8px}html:not([dir="rtl"])[_nghost-%COMP%]   .fluentListFilterTags[_ngcontent-%COMP%]   .fluentListFilterTag[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .fluentListFilterTags[_ngcontent-%COMP%]   .fluentListFilterTag[_ngcontent-%COMP%]{margin-left:8px}html[dir="rtl"][_nghost-%COMP%]   .fluentListFilterTags[_ngcontent-%COMP%]   .fluentListFilterTag[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .fluentListFilterTags[_ngcontent-%COMP%]   .fluentListFilterTag[_ngcontent-%COMP%]{margin-right:8px}.fluentListFilterTags[_ngcontent-%COMP%]   .fluentListFilterTag[_ngcontent-%COMP%]   .tagContent[_ngcontent-%COMP%]{display:flex;white-space:pre-wrap;padding-top:5px;padding-bottom:7px}html:not([dir="rtl"])[_nghost-%COMP%]   .fluentListFilterTags[_ngcontent-%COMP%]   .fluentListFilterTag[_ngcontent-%COMP%]   .tagContent[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .fluentListFilterTags[_ngcontent-%COMP%]   .fluentListFilterTag[_ngcontent-%COMP%]   .tagContent[_ngcontent-%COMP%]{padding-left:8px;padding-right:8px}html[dir="rtl"][_nghost-%COMP%]   .fluentListFilterTags[_ngcontent-%COMP%]   .fluentListFilterTag[_ngcontent-%COMP%]   .tagContent[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .fluentListFilterTags[_ngcontent-%COMP%]   .fluentListFilterTag[_ngcontent-%COMP%]   .tagContent[_ngcontent-%COMP%]{padding-left:8px;padding-right:8px}.fluentListFilterTags[_ngcontent-%COMP%]   .fluentListFilterTag[_ngcontent-%COMP%]   .tagContent[_ngcontent-%COMP%]   .filterContent[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--sm-font-size, 12px);font-weight:var(--font-weight-semi-bold, 600);text-overflow:ellipsis;overflow:hidden;white-space:nowrap;max-width:30em}.fluentListFilterTags[_ngcontent-%COMP%]   .fluentListFilterTag[_ngcontent-%COMP%]   .tagContent[_ngcontent-%COMP%]:hover{background-color:var(--fluent-theme-neutral-lighter-secondary-color, #E5E5E5)}.fluentListFilterTags[_ngcontent-%COMP%]   .fluentListFilterTag[_ngcontent-%COMP%]   .tagContent[_ngcontent-%COMP%]:hover + .closeBtn[_ngcontent-%COMP%]{background-color:var(--fluent-theme-neutral-lighter-secondary-color, #E5E5E5)}.fluentListFilterTags[_ngcontent-%COMP%]   .fluentListFilterTag[_ngcontent-%COMP%]   .closeBtn[_ngcontent-%COMP%]{height:28px;width:28px;background:transparent;border:none;padding:0;font-size:12px;transition:none}.fluentListFilterTags[_ngcontent-%COMP%]   .fluentListFilterTag[_ngcontent-%COMP%]   .closeBtn.cdk-keyboard-focused[_ngcontent-%COMP%]{outline:var(--focus-two-tone-outline-definition, auto 1px);outline-color:var(--focus-two-tone-outline-color, -webkit-focus-ring-color)}.fluentListFilterTags[_ngcontent-%COMP%]   .fluentListFilterTag[_ngcontent-%COMP%]:hover{background-color:var(--fluent-theme-neutral-light-color, #EDEBE9)}.fluentListFilterTags[_ngcontent-%COMP%]   .fluentListFilterTag[_ngcontent-%COMP%]:hover   .closeBtn[_ngcontent-%COMP%]{background-color:var(--fluent-theme-neutral-quarter-alt-color, #E1DFDD)}.fluentListFilterTags[_ngcontent-%COMP%]   .fluentListFilterTag[_ngcontent-%COMP%]:focus{background-color:var(--fluent-theme-primary-color, #F2C811)}.fluentListFilterTags[_ngcontent-%COMP%]   .fluentListFilterTag[_ngcontent-%COMP%]:focus   .tagContent[_ngcontent-%COMP%]{background-color:var(--fluent-theme-primary-color, #F2C811)}.fluentListFilterTags[_ngcontent-%COMP%]   .fluentListFilterTag[_ngcontent-%COMP%]:focus   .tagContent[_ngcontent-%COMP%]:hover + .closeBtn[_ngcontent-%COMP%]{background-color:var(--fluent-theme-primary-color, #F2C811)}.fluentListFilterTags[_ngcontent-%COMP%]   .fluentListFilterTag[_ngcontent-%COMP%]:focus   .closeBtn[_ngcontent-%COMP%]{background-color:var(--fluent-theme-primary-color, #F2C811)}.fluentListFilterTags[_ngcontent-%COMP%]   .fluentListFilterTag[_ngcontent-%COMP%]:focus   .closeBtn[_ngcontent-%COMP%]:hover{background-color:var(--fluent-theme-dark-alt-color, #DAB50F)}html:not([dir="rtl"])[_nghost-%COMP%]   .fluentListFilterTags[_ngcontent-%COMP%]   .clearAll[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .fluentListFilterTags[_ngcontent-%COMP%]   .clearAll[_ngcontent-%COMP%]{padding-left:8px}html[dir="rtl"][_nghost-%COMP%]   .fluentListFilterTags[_ngcontent-%COMP%]   .clearAll[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .fluentListFilterTags[_ngcontent-%COMP%]   .clearAll[_ngcontent-%COMP%]{padding-right:8px}.fluentListFilterTags[_ngcontent-%COMP%]   .clearAll.cdk-keyboard-focused[_ngcontent-%COMP%]{outline:var(--focus-two-tone-outline-definition, auto 1px);outline-color:var(--focus-two-tone-outline-color, -webkit-focus-ring-color)}.allFilters[_ngcontent-%COMP%], .clearAll[_ngcontent-%COMP%]{background:none;border:none;color:var(--fluent-theme-link-color, #0078D4);font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--sm-font-size, 12px);font-weight:var(--font-weight-regular, 400)}.allFilters[_ngcontent-%COMP%]{background-color:var(--fluent-theme-white-color, #FFF);padding-top:22px;width:100%;align-items:flex-start}html:not([dir="rtl"])[_nghost-%COMP%]   .allFilters[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .allFilters[_ngcontent-%COMP%]{padding-left:16px}html[dir="rtl"][_nghost-%COMP%]   .allFilters[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .allFilters[_ngcontent-%COMP%]{padding-right:16px}@media only screen and (min-width: 320px){.allFilters[_ngcontent-%COMP%]{display:flex}.fluentListFilterTags[_ngcontent-%COMP%]{display:none}}@media only screen and (min-width: 640px){.allFilters[_ngcontent-%COMP%]{display:none}.fluentListFilterTags[_ngcontent-%COMP%]{display:block}}' ],
                changeDetection: 0
            }), ArtifactListFilterTagsComponent;
        }();
        function ArtifactListFilterComponent_mat_icon_5_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "mat-icon", 4);
        }
        function ArtifactListFilterComponent_mat_icon_6_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "mat-icon", 5);
        }
        var artifact_list_filter_component_c0 = function(a0) {
            return {
                active: a0
            };
        }, ArtifactListFilterComponent = function() {
            function ArtifactListFilterComponent(FluentListFilterService, fluentListFilterPaneService) {
                this.FluentListFilterService = FluentListFilterService, this.fluentListFilterPaneService = fluentListFilterPaneService;
            }
            return ArtifactListFilterComponent.prototype.ngOnInit = function() {
                var _this = this;
                this.isFilterPaneOpened$ = this.fluentListFilterPaneService.getFilterPaneOpened(), 
                this.isFilterButtonEnabled$ = this.fluentListFilterPaneService.getFilterButtonEnabled(), 
                this.hasFilterApplied$ = this.FluentListFilterService.getFilter().pipe((0, operators_map.U)(function() {
                    return _this.FluentListFilterService.hasFilterAppliedExceptName();
                }));
            }, ArtifactListFilterComponent.prototype.toggleFilterPane = function() {
                this.fluentListFilterPaneService.toggleFilterPane();
            }, ArtifactListFilterComponent.\u0275fac = function(t) {
                return new (t || ArtifactListFilterComponent)(core["\u0275\u0275directiveInject"](FluentListFilterService), core["\u0275\u0275directiveInject"](FluentListFilterPaneService));
            }, ArtifactListFilterComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: ArtifactListFilterComponent,
                selectors: [ [ "artifact-list-filter" ] ],
                decls: 8,
                vars: 16,
                consts: [ [ "mat-button", "", "id", "fluent-list-filter-button", "data-testid", "filter-btn", "cdkMonitorElementFocus", "", "localizeTooltip", "Filters", 1, "pbi-fluent-button", "fluentTheme-md-reg", 3, "ngClass", "ngSwitch", "disabled", "click" ], [ "class", "glyph-small", "fontIcon", "pbi-glyph-filterfilled", 4, "ngSwitchCase" ], [ "class", "glyph-small", "fontIcon", "pbi-glyph-filter", 4, "ngSwitchCase" ], [ "localize", "Filters" ], [ "fontIcon", "pbi-glyph-filterfilled", 1, "glyph-small" ], [ "fontIcon", "pbi-glyph-filter", 1, "glyph-small" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementStart"](0, "button", 0), core["\u0275\u0275listener"]("click", function() {
                        return ctx.toggleFilterPane();
                    }), core["\u0275\u0275pipe"](1, "localize"), core["\u0275\u0275pipe"](2, "async"), 
                    core["\u0275\u0275pipe"](3, "async"), core["\u0275\u0275pipe"](4, "async"), core["\u0275\u0275template"](5, ArtifactListFilterComponent_mat_icon_5_Template, 1, 0, "mat-icon", 1), 
                    core["\u0275\u0275template"](6, ArtifactListFilterComponent_mat_icon_6_Template, 1, 0, "mat-icon", 2), 
                    core["\u0275\u0275element"](7, "span", 3), core["\u0275\u0275elementEnd"]()), 2 & rf && (core["\u0275\u0275property"]("ngClass", core["\u0275\u0275pureFunction1"](14, artifact_list_filter_component_c0, core["\u0275\u0275pipeBind1"](2, 8, ctx.isFilterPaneOpened$)))("ngSwitch", core["\u0275\u0275pipeBind1"](3, 10, ctx.hasFilterApplied$))("disabled", !core["\u0275\u0275pipeBind1"](4, 12, ctx.isFilterButtonEnabled$)), 
                    core["\u0275\u0275attribute"]("aria-label", core["\u0275\u0275pipeBind1"](1, 6, "Filters")), 
                    core["\u0275\u0275advance"](5), core["\u0275\u0275property"]("ngSwitchCase", !0), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", !1));
                },
                dependencies: [ common.NgClass, common.NgSwitch, common.NgSwitchCase, icon.Hw, localize_directive.X, localize_tooltip_directive.r, a11y.kH, common.AsyncPipe, localize_pipe.F ],
                styles: [ '[_nghost-%COMP%]{box-sizing:border-box}button[_ngcontent-%COMP%]{height:36px;padding:0 8px;display:inline-flex;border:1px solid transparent;box-sizing:content-box}button[_ngcontent-%COMP%]:hover, button[_ngcontent-%COMP%]:focus:hover{background-color:var(--fluent-theme-neutral-lighter-color, #F3F2F1)}button.cdk-keyboard-focused[_ngcontent-%COMP%], button.cdk-program-focused[_ngcontent-%COMP%]{outline:var(--focus-two-tone-outline-definition, auto 1px);outline-color:var(--focus-two-tone-outline-color, -webkit-focus-ring-color)}button[_ngcontent-%COMP%]:active, button.active[_ngcontent-%COMP%], button.active[_ngcontent-%COMP%]:hover   button[_ngcontent-%COMP%]:active:focus:hover, button.active[_ngcontent-%COMP%]:focus:hover{background-color:var(--fluent-theme-neutral-quarter-alt-color, #E1DFDD)}button[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%], button[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{line-height:36px;display:inline-block;vertical-align:top}button[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-regular, 400);padding:0 8px}button[_ngcontent-%COMP%]     .mat-button-focus-overlay{display:none}' ],
                changeDetection: 0
            }), ArtifactListFilterComponent;
        }(), ngrx_store = __webpack_require__(85732), base = "[Artifact List Message Banner]", openMessageBanner = (0, 
        ngrx_store.PH)("".concat(base, " Open message banner"), (0, ngrx_store.Ky)()), closeMessageBanner = (0, 
        ngrx_store.PH)("".concat(base, " Close message banner")), initialState = {
            showBanner: !1,
            item: void 0
        }, messageBannerReducer = (0, ngrx_store.Lq)(initialState, (0, ngrx_store.on)(openMessageBanner, function(state, _a) {
            var item = _a.item;
            return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, state), {
                showBanner: !0,
                item
            });
        }), (0, ngrx_store.on)(closeMessageBanner, function(state) {
            return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, state), {
                showBanner: !1,
                item: void 0
            });
        })), reducers = {
            messageBanner: function(state, action) {
                return void 0 === state && (state = initialState), messageBannerReducer(state, action);
            }
        }, getListState = (0, ngrx_store.ZF)("artifactList"), getBannerState = (0, ngrx_store.P1)(getListState, function(state) {
            return state.messageBanner;
        }), showBanner = (0, ngrx_store.P1)(getBannerState, function(bannerState) {
            return bannerState.showBanner;
        }), getFluentListItem = (0, ngrx_store.P1)(getBannerState, function(bannerState) {
            return bannerState.item;
        }), utils = __webpack_require__(48723), VisualsCommon_debug = __webpack_require__(62458), datamart_metadata_actions = __webpack_require__(4301), datamart_metadata_selector = __webpack_require__(2253), rx_component = __webpack_require__(73221), operators_take = __webpack_require__(48787), notification_toast_service = __webpack_require__(44204), message_banner_component = __webpack_require__(44641);
        function ArtifactListMessageBannerComponent_div_0_message_banner_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r4 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "message-banner", 2), core["\u0275\u0275listener"]("buttonClicked", function() {
                    var item_r2 = core["\u0275\u0275restoreView"](_r4).ngIf, ctx_r3 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r3.onTryAgainClicked(item_r2));
                })("hideBanner", function() {
                    core["\u0275\u0275restoreView"](_r4);
                    var ctx_r5 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r5.closeBanner());
                }), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var item_r2 = ctx.ngIf, ctx_r1 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275property"]("viewModel", ctx_r1.messageBannerModel(item_r2));
            }
        }
        function ArtifactListMessageBannerComponent_div_0_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div"), core["\u0275\u0275template"](1, ArtifactListMessageBannerComponent_div_0_message_banner_1_Template, 1, 1, "message-banner", 1), 
            core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](2, 1, ctx_r0.getFluentListItem$));
            }
        }
        var ArtifactListMessageBannerComponent = function(_super) {
            function ArtifactListMessageBannerComponent(store, localizationService, notificationToastService, telemetryService, actions$) {
                var _this = _super.call(this) || this;
                return _this.store = store, _this.localizationService = localizationService, _this.notificationToastService = notificationToastService, 
                _this.telemetryService = telemetryService, _this.actions$ = actions$, _this.showBanner$ = _this.store.select(showBanner), 
                _this.getFluentListItem$ = _this.store.select(getFluentListItem), _this;
            }
            return (0, tslib_es6.__extends)(ArtifactListMessageBannerComponent, _super), ArtifactListMessageBannerComponent.prototype.ngOnInit = function() {
                var _this = this;
                this.actions$.pipe((0, ngrx_effects.l4)(datamart_metadata_actions.vh), (0, ngrx_effects.IC)(function(_a) {
                    var datamartObjectId = _a.datamartObjectId;
                    return [ _this.store.select(datamart_metadata_selector.sv(datamartObjectId)), _this.store.select(datamart_metadata_selector.LR(datamartObjectId)) ];
                }), (0, takeUntil.R)(this.onDestroy$)).subscribe(function(_a) {
                    var name = _a[1], datamartType = _a[2], datamartTypeNameUppercase = (0, utils.q4)(datamartType), datamartTypeNameLowerCase = (0, 
                    utils.kK)(datamartType);
                    _this.notificationToastService.notify({
                        title: _this.localizationService.format("Datamart_Unavailable_Connected_Title", datamartTypeNameUppercase),
                        message: _this.localizationService.format("Datamart_Unavailable_Datamart_Is_Ready", name, datamartTypeNameLowerCase),
                        notificationType: 99,
                        customIcon: {
                            tooltipString: "SuccessToastTitle",
                            iconClass: "pbi-glyph-circled-checkmark"
                        }
                    });
                }), this.actions$.pipe((0, ngrx_effects.l4)(datamart_metadata_actions.PZ), (0, ngrx_effects.IC)(function(_a) {
                    return [ _this.store.select(datamart_metadata_selector.LR(_a.datamartObjectId)) ];
                }), (0, takeUntil.R)(this.onDestroy$)).subscribe(function(_a) {
                    return _this.notificationToastService.notify({
                        title: _this.localizationService.format("Datamart_Unavailable_Unable_To_Connect", _this.localizationService.get((0, 
                        utils.kK)(_a[1]))),
                        notificationType: 99,
                        customIcon: {
                            tooltipString: "Error",
                            iconClass: "pbi-glyph-error-circle-exclamation"
                        }
                    });
                });
            }, ArtifactListMessageBannerComponent.prototype.onTryAgainClicked = function(item) {
                var _this = this;
                this.store.dispatch(datamart_metadata_actions.CZ({
                    datamartObjectId: item.objectId
                })), this.store.dispatch(closeMessageBanner()), this.telemetryService.logEvent(ArtifactListUnavailableTryAgain, {
                    objectId: item.objectId
                }), this.store.select(datamart_metadata_selector.LR(item.objectId)).pipe((0, operators_take.q)(1)).subscribe(function(datamartType) {
                    var datamartTypeName = _this.localizationService.get((0, utils.kK)(datamartType));
                    _this.notificationToastService.notify({
                        title: _this.localizationService.format("Datamart_Unavailable_Connecting_Title", datamartTypeName),
                        message: _this.localizationService.format("Datamart_Unavailable_Use_Other_Features", datamartTypeName),
                        notificationType: 3
                    });
                });
            }, ArtifactListMessageBannerComponent.prototype.closeBanner = function() {
                this.store.dispatch(closeMessageBanner());
            }, ArtifactListMessageBannerComponent.prototype.messageBannerModel = function(item) {
                return function(localizationService, item) {
                    var status = item.status, datamartType = null == item ? void 0 : item.datamartType, datamartTypeName = (0, 
                    utils.kK)(datamartType);
                    switch (status) {
                      case 2:
                        return function(localizationService, datamartTypeName, datamartType) {
                            return {
                                bannerType: 1,
                                iconName: "pbi-glyph-blocked2",
                                message: localizationService.format(1 === datamartType ? "Datamart_Suspended_Message_Bar" : "Warehouse_Suspended_Message_Bar", localizationService.get(datamartTypeName)),
                                buttonText: localizationService.get("TryAgain"),
                                allowDismiss: !0,
                                closeButtonTooltip: "Close"
                            };
                        }(localizationService, datamartTypeName, datamartType);

                      case 5:
                        return function(localizationService, datamartTypeName) {
                            return {
                                bannerType: 1,
                                iconName: "pbi-glyph-blocked2",
                                message: localizationService.format("Datamart_Unavailable_Message_Out_Of_Region", localizationService.get(datamartTypeName)),
                                allowDismiss: !0,
                                closeButtonTooltip: "Close"
                            };
                        }(localizationService, datamartTypeName);

                      case 6:
                        return function(localizationService, datamartTypeName) {
                            return {
                                bannerType: 1,
                                iconName: "pbi-glyph-blocked2",
                                message: localizationService.format("Datamart_Unavailable_Message_Upgrade", localizationService.get(datamartTypeName)),
                                allowDismiss: !0,
                                closeButtonTooltip: "Close"
                            };
                        }(localizationService, datamartTypeName);

                      case 4:
                        return function(localizationService, datamartTypeName) {
                            return {
                                bannerType: 1,
                                iconName: "pbi-glyph-blocked2",
                                message: localizationService.format("Datamart_Unavailable_Message_No_Action", localizationService.get(datamartTypeName)),
                                allowDismiss: !0,
                                closeButtonTooltip: "Close"
                            };
                        }(localizationService, datamartTypeName);

                      default:
                        VisualsCommon_debug.fF.assertFail("Error message banner not supported for other statuses");
                    }
                }(this.localizationService, item);
            }, ArtifactListMessageBannerComponent.\u0275fac = function(t) {
                return new (t || ArtifactListMessageBannerComponent)(core["\u0275\u0275directiveInject"](ngrx_store.yh), core["\u0275\u0275directiveInject"](localization_service.o), core["\u0275\u0275directiveInject"](notification_toast_service.Q), core["\u0275\u0275directiveInject"](Telemetry.y0), core["\u0275\u0275directiveInject"](ngrx_effects.eX));
            }, ArtifactListMessageBannerComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: ArtifactListMessageBannerComponent,
                selectors: [ [ "artifact-list-message-banner" ] ],
                features: [ core["\u0275\u0275InheritDefinitionFeature"] ],
                decls: 2,
                vars: 3,
                consts: [ [ 4, "ngIf" ], [ 3, "viewModel", "buttonClicked", "hideBanner", 4, "ngIf" ], [ 3, "viewModel", "buttonClicked", "hideBanner" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275template"](0, ArtifactListMessageBannerComponent_div_0_Template, 3, 3, "div", 0), 
                    core["\u0275\u0275pipe"](1, "async")), 2 & rf && core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](1, 1, ctx.showBanner$));
                },
                dependencies: [ common.NgIf, message_banner_component.A, common.AsyncPipe ],
                styles: [ '[_nghost-%COMP%]{background-color:var(--colorNeutralBackground2)}html:not([dir="rtl"])   [_nghost-%COMP%]   message-banner[_ngcontent-%COMP%]{margin:0 10px}html[dir="rtl"]   [_nghost-%COMP%]   message-banner[_ngcontent-%COMP%]{margin:0 10px}[_nghost-%COMP%]   message-banner[_ngcontent-%COMP%]     .message-banner-error{padding:8px 15px;height:16px}[_nghost-%COMP%]   message-banner[_ngcontent-%COMP%]     .message-banner-text-container{width:100%}[_nghost-%COMP%]   message-banner[_ngcontent-%COMP%]     .message-banner-text-container .message-banner-text{display:inline-block}[_nghost-%COMP%]   message-banner[_ngcontent-%COMP%]     .message-banner-text-container button{background-color:var(--fluent-theme-white-color, #FFF);height:24px;padding:2px 20px;float:right}html:not([dir="rtl"])   [_nghost-%COMP%]   message-banner[_ngcontent-%COMP%]     .message-banner-text-container button{margin:-4px 16px 0 0}html[dir="rtl"]   [_nghost-%COMP%]   message-banner[_ngcontent-%COMP%]     .message-banner-text-container button{margin:-4px 0 0 16px}' ],
                changeDetection: 0
            }), ArtifactListMessageBannerComponent;
        }(rx_component.w), keycodes = __webpack_require__(93247), fromEvent = __webpack_require__(59787), operators_debounceTime = __webpack_require__(6754), legacy_form_field = __webpack_require__(87650), legacy_input = __webpack_require__(30426), artifact_list_search_component_c0 = [ "filter" ], ArtifactListSearchComponent = function() {
            function ArtifactListSearchComponent(fluentListFilterService) {
                this.fluentListFilterService = fluentListFilterService, this.setFocus = !0, this.destroy$ = new Subject.xQ, 
                this.searchPlaceholder = "SearchBox_Text", this.searchTooltip = "SearchContentInWorkspace";
            }
            return ArtifactListSearchComponent.prototype.ngAfterViewInit = function() {
                this.setFocus && this.filter.nativeElement.focus();
            }, ArtifactListSearchComponent.prototype.ngOnInit = function() {
                var _this = this;
                this.fluentListFilterService.getFilter().pipe((0, takeUntil.R)(this.destroy$)).subscribe(function(filter) {
                    var _a;
                    _this.filter.nativeElement.value = (null === (_a = filter.get(FluentColumnName.Name)) || void 0 === _a ? void 0 : _a.values) || "";
                }), (0, fromEvent.R)(this.filter.nativeElement, "keyup").pipe((0, takeUntil.R)(this.destroy$), (0, 
                operators_debounceTime.b)(150), (0, distinctUntilChanged.x)(), (0, operators_map.U)(function(event) {
                    return event.keyCode;
                })).subscribe(function(keyCode) {
                    keyCode === keycodes.hY ? (_this.filter.nativeElement.value = "", _this.fluentListFilterService.removeFilter(FluentColumnName.Name)) : _this.fluentListFilterService.addFilter(FluentColumnName.Name, _this.filter.nativeElement.value);
                });
            }, ArtifactListSearchComponent.prototype.ngOnDestroy = function() {
                this.destroy$.next(), this.destroy$.complete();
            }, ArtifactListSearchComponent.\u0275fac = function(t) {
                return new (t || ArtifactListSearchComponent)(core["\u0275\u0275directiveInject"](FluentListFilterService));
            }, ArtifactListSearchComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: ArtifactListSearchComponent,
                selectors: [ [ "artifact-list-search" ] ],
                viewQuery: function(rf, ctx) {
                    var _t;
                    1 & rf && core["\u0275\u0275viewQuery"](artifact_list_search_component_c0, 7), 2 & rf && core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx.filter = _t.first);
                },
                inputs: {
                    setFocus: "setFocus"
                },
                decls: 5,
                vars: 4,
                consts: [ [ 1, "glyphicon", "glyph-small", "pbi-glyph-search" ], [ "floatLabel", "never" ], [ "matInput", "", "data-testid", "search-input", "data-unique-id", "fluentListSearchBar", 3, "placeholder", "localizeTooltip" ], [ "filter", "" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275element"](0, "span", 0), core["\u0275\u0275elementStart"](1, "mat-form-field", 1), 
                    core["\u0275\u0275element"](2, "input", 2, 3), core["\u0275\u0275pipe"](4, "localize"), 
                    core["\u0275\u0275elementEnd"]()), 2 & rf && (core["\u0275\u0275advance"](2), core["\u0275\u0275propertyInterpolate"]("placeholder", core["\u0275\u0275pipeBind1"](4, 2, ctx.searchPlaceholder)), 
                    core["\u0275\u0275propertyInterpolate"]("localizeTooltip", ctx.searchTooltip));
                },
                dependencies: [ localize_tooltip_directive.r, legacy_form_field.v_, legacy_input.k0, localize_pipe.F ],
                styles: [ "[_nghost-%COMP%]   .pbi-glyph-search[_ngcontent-%COMP%]{cursor:default}[_nghost-%COMP%]     mat-form-field{width:355px;margin-left:5px}[_nghost-%COMP%]     mat-form-field.mat-focused .mat-input-element, [_nghost-%COMP%]     mat-form-field.mat-focused .mat-form-field-label{color:var(--gray-180, #252423)!important}[_nghost-%COMP%]     mat-form-field .mat-input-element, [_nghost-%COMP%]     mat-form-field .mat-form-field-label{color:var(--gray-140, #484644)!important}[_nghost-%COMP%]     .mat-form-field-label span{line-height:20px}[_nghost-%COMP%]     .mat-form-field-ripple{background-color:transparent;background:transparent!important}[_nghost-%COMP%]     .mat-input-element{caret-color:var(--black-color, #000)!important;line-height:21px}" ]
            }), ArtifactListSearchComponent;
        }(), TridentHostContextClickHandlerServiceToken = new core.InjectionToken("ITridentFluentListItemService");
        function isTridentArtifactType(artifactType) {
            return "string" == typeof artifactType;
        }
        function isArtifactDatamartType(artifactType) {
            return 14 === artifactType || 15 === artifactType || 17 === artifactType || 11 === artifactType;
        }
        function getUniqueIdForFluentListItem(item) {
            return "".concat(item.uniqueId);
        }
        function generateUniqueIdForFluentListItem(type, id) {
            return "".concat(type, ":").concat(id);
        }
        VisualsCommon_debug.fF.assert(function() {
            return !0;
        });
        var virtual_scroll = __webpack_require__(47064), observable_of = __webpack_require__(11547), skip = __webpack_require__(3307), startWith = __webpack_require__(22318), scrolling = __webpack_require__(21661), sort = __webpack_require__(63047), FluentListVirtualScrollStrategy = function(_super) {
            function FluentListVirtualScrollStrategy(cdr) {
                var _this = _super.call(this, 45, 400, 400) || this;
                return _this.cdr = cdr, _this;
            }
            return (0, tslib_es6.__extends)(FluentListVirtualScrollStrategy, _super), FluentListVirtualScrollStrategy.prototype.onContentRendered = function() {
                _super.prototype.onContentRendered.call(this), this.cdr.detectChanges();
            }, FluentListVirtualScrollStrategy.\u0275fac = function(t) {
                return new (t || FluentListVirtualScrollStrategy)(core["\u0275\u0275inject"](core.ChangeDetectorRef));
            }, FluentListVirtualScrollStrategy.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: FluentListVirtualScrollStrategy,
                factory: FluentListVirtualScrollStrategy.\u0275fac
            }), FluentListVirtualScrollStrategy;
        }(scrolling.Ee), feature_switch_service = __webpack_require__(9380);
        function FluentListTableBaseComponent_span_0_span_1_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "span", 2), 2 & rf) {
                var ctx_r2 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275attribute"]("aria-label", ctx_r2.localize("ContentList_EmptySearchResults"));
            }
        }
        function FluentListTableBaseComponent_span_0_span_2_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "span", 2), 2 & rf) {
                var ctx_r3 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275attribute"]("aria-label", ctx_r3.localize("WorkspaceAccess_member_list_valid_single_result"));
            }
        }
        function FluentListTableBaseComponent_span_0_span_3_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "span", 2), 2 & rf) {
                var ctx_r4 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275attribute"]("aria-label", ctx_r4.localize("WorkspaceAccess_member_list_valid_multiple_results", ctx_r4.items.length));
            }
        }
        function FluentListTableBaseComponent_span_0_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "span", 2), core["\u0275\u0275template"](1, FluentListTableBaseComponent_span_0_span_1_Template, 1, 1, "span", 0), 
            core["\u0275\u0275template"](2, FluentListTableBaseComponent_span_0_span_2_Template, 1, 1, "span", 0), 
            core["\u0275\u0275template"](3, FluentListTableBaseComponent_span_0_span_3_Template, 1, 1, "span", 0), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !ctx_r0.items.length), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", 1 === ctx_r0.items.length), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx_r0.items.length > 1);
            }
        }
        function FluentListTableBaseComponent_ng_container_1_ng_container_1_ng_container_2_th_1_span_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "span", 16), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var config_r13 = core["\u0275\u0275nextContext"](2).$implicit;
                core["\u0275\u0275property"]("pbiTooltip", config_r13.tooltip), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275textInterpolate1"](" ", config_r13.content, " ");
            }
        }
        function FluentListTableBaseComponent_ng_container_1_ng_container_1_ng_container_2_th_1_ng_template_2_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275element"](0, "mat-icon", 17), core["\u0275\u0275pipe"](1, "localize")), 
            2 & rf && core["\u0275\u0275property"]("pbiTooltip", core["\u0275\u0275pipeBind1"](1, 1, "Type"));
        }
        function FluentListTableBaseComponent_ng_container_1_ng_container_1_ng_container_2_th_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "th", 13), core["\u0275\u0275template"](1, FluentListTableBaseComponent_ng_container_1_ng_container_1_ng_container_2_th_1_span_1_Template, 2, 2, "span", 14), 
            core["\u0275\u0275template"](2, FluentListTableBaseComponent_ng_container_1_ng_container_1_ng_container_2_th_1_ng_template_2_Template, 2, 3, "ng-template", null, 15, core["\u0275\u0275templateRefExtractor"]), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var _r17 = core["\u0275\u0275reference"](3), config_r13 = core["\u0275\u0275nextContext"]().$implicit;
                core["\u0275\u0275property"]("ngClass", config_r13.class), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275property"]("ngIf", config_r13.content)("ngIfElse", _r17);
            }
        }
        function FluentListTableBaseComponent_ng_container_1_ng_container_1_ng_container_2_td_2_ng_container_1_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275elementContainer"](0);
        }
        var fluent_list_table_base_component_c0 = function(a0) {
            return {
                $implicit: a0
            };
        };
        function FluentListTableBaseComponent_ng_container_1_ng_container_1_ng_container_2_td_2_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "td", 18), core["\u0275\u0275template"](1, FluentListTableBaseComponent_ng_container_1_ng_container_1_ng_container_2_td_2_ng_container_1_Template, 1, 0, "ng-container", 19), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var item_r21 = ctx.$implicit, config_r13 = core["\u0275\u0275nextContext"]().$implicit;
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngTemplateOutlet", config_r13.cellTemplate)("ngTemplateOutletContext", core["\u0275\u0275pureFunction1"](2, fluent_list_table_base_component_c0, item_r21));
            }
        }
        function FluentListTableBaseComponent_ng_container_1_ng_container_1_ng_container_2_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementContainerStart"](0, 10), core["\u0275\u0275template"](1, FluentListTableBaseComponent_ng_container_1_ng_container_1_ng_container_2_th_1_Template, 4, 3, "th", 11), 
            core["\u0275\u0275template"](2, FluentListTableBaseComponent_ng_container_1_ng_container_1_ng_container_2_td_2_Template, 2, 4, "td", 12), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf && core["\u0275\u0275property"]("matColumnDef", ctx.$implicit.name);
        }
        function FluentListTableBaseComponent_ng_container_1_ng_container_1_tr_3_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "tr", 20);
        }
        function FluentListTableBaseComponent_ng_container_1_ng_container_1_tr_4_Template(rf, ctx) {
            if (1 & rf) {
                var _r26 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "tr", 21), core["\u0275\u0275listener"]("mouseenter", function() {
                    var row_r24 = core["\u0275\u0275restoreView"](_r26).$implicit, ctx_r25 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r25.setHoveredRow(row_r24));
                })("mouseleave", function() {
                    core["\u0275\u0275restoreView"](_r26);
                    var ctx_r27 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r27.setHoveredRow(null));
                })("cdkFocusChange", function($event) {
                    var row_r24 = core["\u0275\u0275restoreView"](_r26).$implicit, ctx_r28 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r28.setFocusedRow($event, row_r24));
                }), core["\u0275\u0275elementEnd"]();
            }
        }
        function FluentListTableBaseComponent_ng_container_1_ng_container_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "table", 6), 
            core["\u0275\u0275template"](2, FluentListTableBaseComponent_ng_container_1_ng_container_1_ng_container_2_Template, 3, 1, "ng-container", 7), 
            core["\u0275\u0275template"](3, FluentListTableBaseComponent_ng_container_1_ng_container_1_tr_3_Template, 1, 0, "tr", 8), 
            core["\u0275\u0275template"](4, FluentListTableBaseComponent_ng_container_1_ng_container_1_tr_4_Template, 1, 0, "tr", 9), 
            core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var ctx_r5 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("dataSource", ctx_r5.items)("trackBy", ctx_r5.trackFluentListItemBy), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngForOf", ctx_r5.columnConfigs)("ngForTrackBy", ctx_r5.trackByIndex), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("matHeaderRowDef", ctx_r5.displayedColumns), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("matRowDefColumns", ctx_r5.displayedColumns);
            }
        }
        function FluentListTableBaseComponent_ng_container_1_ng_template_2_span_2_tri_checkbox_2_Template(rf, ctx) {
            if (1 & rf) {
                var _r36 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "tri-checkbox", 31), core["\u0275\u0275listener"]("keydown.enter", function() {
                    core["\u0275\u0275restoreView"](_r36);
                    var ctx_r35 = core["\u0275\u0275nextContext"](4);
                    return core["\u0275\u0275resetView"](ctx_r35.masterToggle());
                })("onChange", function() {
                    core["\u0275\u0275restoreView"](_r36);
                    var ctx_r37 = core["\u0275\u0275nextContext"](4);
                    return core["\u0275\u0275resetView"](ctx_r37.masterToggle());
                }), core["\u0275\u0275pipe"](1, "localize"), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r34 = core["\u0275\u0275nextContext"](4);
                core["\u0275\u0275property"]("ngClass", ctx_r34.selection.hasValue() && ctx_r34.isAllSelected() || ctx_r34.isPartialSelected() ? "checkbox-checked" : "checkbox")("disabled", ctx_r34.noSelectableRows())("checked", ctx_r34.selection.hasValue() && ctx_r34.isAllSelected())("indeterminate", ctx_r34.isPartialSelected())("ariaLabel", core["\u0275\u0275pipeBind1"](1, 5, "SelectAll"));
            }
        }
        function FluentListTableBaseComponent_ng_container_1_ng_template_2_span_2_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "span", 28)(1, "div", 29), core["\u0275\u0275template"](2, FluentListTableBaseComponent_ng_container_1_ng_template_2_span_2_tri_checkbox_2_Template, 2, 7, "tri-checkbox", 30), 
            core["\u0275\u0275elementEnd"]()()), 2 & rf) {
                var ctx_r29 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", null == ctx_r29.selection ? null : ctx_r29.selection.isMultipleSelection());
            }
        }
        function FluentListTableBaseComponent_ng_container_1_ng_template_2_ng_container_3_ng_container_1_span_1_span_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "span", 42)(1, "span"), core["\u0275\u0275text"](2), 
            core["\u0275\u0275elementEnd"]()()), 2 & rf) {
                var config_r38 = core["\u0275\u0275nextContext"](3).$implicit, ctx_r42 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275property"]("mat-sort-header", config_r38.name)("start", config_r38.start), 
                core["\u0275\u0275attribute"]("data-testid", "fluentListHeader." + config_r38.name)("title", ctx_r42.getHeaderTooltip(config_r38)), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](config_r38.content);
            }
        }
        function FluentListTableBaseComponent_ng_container_1_ng_template_2_ng_container_3_ng_container_1_span_1_span_2_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "span", 43)(1, "span"), core["\u0275\u0275text"](2), 
            core["\u0275\u0275elementEnd"]()()), 2 & rf) {
                var config_r38 = core["\u0275\u0275nextContext"](3).$implicit;
                core["\u0275\u0275attribute"]("data-testid", "fluentListHeader." + config_r38.name)("title", config_r38.tooltip), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](config_r38.content);
            }
        }
        function FluentListTableBaseComponent_ng_container_1_ng_template_2_ng_container_3_ng_container_1_span_1_div_3_Template(rf, ctx) {
            if (1 & rf) {
                var _r50 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div", 44), core["\u0275\u0275listener"]("accessible-click", function() {
                    core["\u0275\u0275restoreView"](_r50);
                    var ctx_r49 = core["\u0275\u0275nextContext"](6);
                    return core["\u0275\u0275resetView"](ctx_r49.seeAllClickEmit());
                }), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r44 = core["\u0275\u0275nextContext"](6);
                core["\u0275\u0275propertyInterpolate"]("localize", ctx_r44.seeAllDisplayName ? ctx_r44.seeAllDisplayName : "NavigationPane_SeeAllLabel");
            }
        }
        function FluentListTableBaseComponent_ng_container_1_ng_template_2_ng_container_3_ng_container_1_span_1_tri_column_option_4_Template(rf, ctx) {
            if (1 & rf) {
                var _r52 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "tri-column-option", 45), core["\u0275\u0275listener"]("sortChange", function($event) {
                    core["\u0275\u0275restoreView"](_r52);
                    var ctx_r51 = core["\u0275\u0275nextContext"](6);
                    return core["\u0275\u0275resetView"](ctx_r51.sortChangeViaColumnOption($event));
                })("columnResize", function($event) {
                    core["\u0275\u0275restoreView"](_r52);
                    var ctx_r53 = core["\u0275\u0275nextContext"](6);
                    return core["\u0275\u0275resetView"](ctx_r53.columnWidthChangeViaColumnOption($event));
                }), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var config_r38 = core["\u0275\u0275nextContext"](3).$implicit, ctx_r45 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275property"]("canSort", config_r38.canSort)("canResize", config_r38.canResize)("colName", config_r38.name)("colCurWidth", ctx_r45.getColumnCurWidth(config_r38.name));
            }
        }
        var fluent_list_table_base_component_c1 = function() {
            return {
                right: !0
            };
        };
        function FluentListTableBaseComponent_ng_container_1_ng_template_2_ng_container_3_ng_container_1_span_1_span_5_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "span", 46), 2 & rf && core["\u0275\u0275property"]("resizeEdges", core["\u0275\u0275pureFunction0"](1, fluent_list_table_base_component_c1));
        }
        var _c2 = function(a0, a1) {
            return {
                width: a0,
                "min-width": a1
            };
        };
        function FluentListTableBaseComponent_ng_container_1_ng_template_2_ng_container_3_ng_container_1_span_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r57 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "span", 36), core["\u0275\u0275listener"]("resizing", function($event) {
                    core["\u0275\u0275restoreView"](_r57);
                    var config_r38 = core["\u0275\u0275nextContext"](2).$implicit, ctx_r55 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r55.onColumnResizing($event, config_r38.name));
                })("resizeStart", function($event) {
                    core["\u0275\u0275restoreView"](_r57);
                    var config_r38 = core["\u0275\u0275nextContext"](2).$implicit, ctx_r58 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r58.onColumnResizingStart($event, config_r38.name));
                })("resizeEnd", function($event) {
                    core["\u0275\u0275restoreView"](_r57);
                    var config_r38 = core["\u0275\u0275nextContext"](2).$implicit, ctx_r60 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r60.onColumnResizingEnd($event, config_r38.name));
                }), core["\u0275\u0275template"](1, FluentListTableBaseComponent_ng_container_1_ng_template_2_ng_container_3_ng_container_1_span_1_span_1_Template, 3, 5, "span", 37), 
                core["\u0275\u0275template"](2, FluentListTableBaseComponent_ng_container_1_ng_template_2_ng_container_3_ng_container_1_span_1_span_2_Template, 3, 3, "span", 38), 
                core["\u0275\u0275template"](3, FluentListTableBaseComponent_ng_container_1_ng_template_2_ng_container_3_ng_container_1_span_1_div_3_Template, 1, 1, "div", 39), 
                core["\u0275\u0275template"](4, FluentListTableBaseComponent_ng_container_1_ng_template_2_ng_container_3_ng_container_1_span_1_tri_column_option_4_Template, 1, 4, "tri-column-option", 40), 
                core["\u0275\u0275template"](5, FluentListTableBaseComponent_ng_container_1_ng_template_2_ng_container_3_ng_container_1_span_1_span_5_Template, 1, 2, "span", 41), 
                core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var config_r38 = core["\u0275\u0275nextContext"](2).$implicit, ctx_r40 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275property"]("ngClass", config_r38.class)("ngStyle", core["\u0275\u0275pureFunction2"](7, _c2, ctx_r40.getWidthFromConfig(config_r38), ctx_r40.colWidth[config_r38.name] + "px")), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !!config_r38.content && !!config_r38.canSort), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !!config_r38.content && !config_r38.canSort), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", config_r38.showSeeAll), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !!ctx_r40.enableColumnOptions && !!config_r38.content && !!config_r38.showMoreOption), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", null == ctx_r40.seeAllColumn || config_r38 != ctx_r40.columnConfigs[ctx_r40.columnConfigs.length - 1]);
            }
        }
        function FluentListTableBaseComponent_ng_container_1_ng_template_2_ng_container_3_ng_container_1_span_2_span_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "span", 51)(1, "span"), core["\u0275\u0275text"](2), 
            core["\u0275\u0275elementEnd"]()()), 2 & rf) {
                var config_r38 = core["\u0275\u0275nextContext"](3).$implicit, ctx_r63 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275property"]("mat-sort-header", config_r38.name), core["\u0275\u0275attribute"]("data-testid", "fluentListHeader." + config_r38.name)("title", ctx_r63.getHeaderTooltip(config_r38)), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](config_r38.content);
            }
        }
        function FluentListTableBaseComponent_ng_container_1_ng_template_2_ng_container_3_ng_container_1_span_2_span_2_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "span", 43)(1, "span"), core["\u0275\u0275text"](2), 
            core["\u0275\u0275elementEnd"]()()), 2 & rf) {
                var config_r38 = core["\u0275\u0275nextContext"](3).$implicit;
                core["\u0275\u0275attribute"]("data-testid", "fluentListHeader." + config_r38.name)("title", config_r38.tooltip), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](config_r38.content);
            }
        }
        function FluentListTableBaseComponent_ng_container_1_ng_template_2_ng_container_3_ng_container_1_span_2_span_3_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementStart"](0, "span", 52), core["\u0275\u0275element"](1, "mat-icon", 53), 
            core["\u0275\u0275pipe"](2, "localize"), core["\u0275\u0275elementEnd"]()), 2 & rf && (core["\u0275\u0275advance"](1), 
            core["\u0275\u0275property"]("pbiTooltip", core["\u0275\u0275pipeBind1"](2, 1, "Type")));
        }
        function FluentListTableBaseComponent_ng_container_1_ng_template_2_ng_container_3_ng_container_1_span_2_tri_column_option_4_Template(rf, ctx) {
            if (1 & rf) {
                var _r70 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "tri-column-option", 54), core["\u0275\u0275listener"]("sortChange", function($event) {
                    core["\u0275\u0275restoreView"](_r70);
                    var ctx_r69 = core["\u0275\u0275nextContext"](6);
                    return core["\u0275\u0275resetView"](ctx_r69.sortChangeViaColumnOption($event));
                })("columnResize", function($event) {
                    core["\u0275\u0275restoreView"](_r70);
                    var ctx_r71 = core["\u0275\u0275nextContext"](6);
                    return core["\u0275\u0275resetView"](ctx_r71.columnWidthChangeViaColumnOption($event));
                }), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var config_r38 = core["\u0275\u0275nextContext"](3).$implicit;
                core["\u0275\u0275property"]("canSort", config_r38.canSort)("canResize", config_r38.canResize)("colName", config_r38.name);
            }
        }
        var _c3 = function(a0) {
            return {
                width: a0
            };
        };
        function FluentListTableBaseComponent_ng_container_1_ng_template_2_ng_container_3_ng_container_1_span_2_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "span", 47), core["\u0275\u0275template"](1, FluentListTableBaseComponent_ng_container_1_ng_template_2_ng_container_3_ng_container_1_span_2_span_1_Template, 3, 4, "span", 48), 
            core["\u0275\u0275template"](2, FluentListTableBaseComponent_ng_container_1_ng_template_2_ng_container_3_ng_container_1_span_2_span_2_Template, 3, 3, "span", 38), 
            core["\u0275\u0275template"](3, FluentListTableBaseComponent_ng_container_1_ng_template_2_ng_container_3_ng_container_1_span_2_span_3_Template, 3, 3, "span", 49), 
            core["\u0275\u0275template"](4, FluentListTableBaseComponent_ng_container_1_ng_template_2_ng_container_3_ng_container_1_span_2_tri_column_option_4_Template, 1, 3, "tri-column-option", 50), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var config_r38 = core["\u0275\u0275nextContext"](2).$implicit, ctx_r41 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275property"]("ngClass", config_r38.class)("ngStyle", core["\u0275\u0275pureFunction1"](6, _c3, ctx_r41.colWidth[config_r38.name] + "px")), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !!config_r38.content && !!config_r38.canSort), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !!config_r38.content && !config_r38.canSort), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !config_r38.content), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !!ctx_r41.enableColumnOptions && !!config_r38.content && !!config_r38.showMoreOption);
            }
        }
        function FluentListTableBaseComponent_ng_container_1_ng_template_2_ng_container_3_ng_container_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0, 33), core["\u0275\u0275template"](1, FluentListTableBaseComponent_ng_container_1_ng_template_2_ng_container_3_ng_container_1_span_1_Template, 6, 10, "span", 34), 
            core["\u0275\u0275template"](2, FluentListTableBaseComponent_ng_container_1_ng_template_2_ng_container_3_ng_container_1_span_2_Template, 5, 8, "span", 35), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var config_r38 = core["\u0275\u0275nextContext"]().$implicit;
                core["\u0275\u0275property"]("ngSwitch", !!config_r38.canResize), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275property"]("ngSwitchCase", !0), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275property"]("ngSwitchCase", !1);
            }
        }
        function FluentListTableBaseComponent_ng_container_1_ng_template_2_ng_container_3_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, FluentListTableBaseComponent_ng_container_1_ng_template_2_ng_container_3_ng_container_1_Template, 3, 3, "ng-container", 32), 
            core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275elementContainerEnd"]()), 
            2 & rf) {
                var config_r38 = ctx.$implicit;
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](2, 1, config_r38.visible$) && !config_r38.isOutsideViewport);
            }
        }
        function FluentListTableBaseComponent_ng_container_1_ng_template_2_virtual_scroll_4_ng_container_3_ng_container_1_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275elementContainer"](0);
        }
        function FluentListTableBaseComponent_ng_container_1_ng_template_2_virtual_scroll_4_ng_container_3_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, FluentListTableBaseComponent_ng_container_1_ng_template_2_virtual_scroll_4_ng_container_3_ng_container_1_Template, 1, 0, "ng-container", 19), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var item_r77 = ctx.$implicit;
                core["\u0275\u0275nextContext"](3);
                var _r8 = core["\u0275\u0275reference"](5);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngTemplateOutlet", _r8)("ngTemplateOutletContext", core["\u0275\u0275pureFunction1"](2, fluent_list_table_base_component_c0, item_r77));
            }
        }
        var _c4 = function(a0) {
            return {
                isResizing: a0
            };
        };
        function FluentListTableBaseComponent_ng_container_1_ng_template_2_virtual_scroll_4_Template(rf, ctx) {
            if (1 & rf) {
                var _r80 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "virtual-scroll", 55, 56), core["\u0275\u0275listener"]("change", function() {
                    core["\u0275\u0275restoreView"](_r80);
                    var ctx_r79 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r79.onVirtualScrollChange());
                }), core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275template"](3, FluentListTableBaseComponent_ng_container_1_ng_template_2_virtual_scroll_4_ng_container_3_Template, 2, 4, "ng-container", 57), 
                core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var _r75 = core["\u0275\u0275reference"](1), ctx_r31 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275property"]("items", core["\u0275\u0275pipeBind1"](2, 6, ctx_r31.items$))("ngClass", core["\u0275\u0275pureFunction1"](8, _c4, !!ctx_r31.isResizing))("parentScroll", ctx_r31.scrollElement)("bufferAmount", 3), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngForOf", _r75.viewPortItems)("ngForTrackBy", ctx_r31.trackFluentListItemBy);
            }
        }
        function FluentListTableBaseComponent_ng_container_1_ng_template_2_ng_template_5_ng_container_1_ng_container_1_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275elementContainer"](0);
        }
        function FluentListTableBaseComponent_ng_container_1_ng_template_2_ng_template_5_ng_container_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, FluentListTableBaseComponent_ng_container_1_ng_template_2_ng_template_5_ng_container_1_ng_container_1_Template, 1, 0, "ng-container", 19), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var item_r82 = ctx.$implicit;
                core["\u0275\u0275nextContext"](3);
                var _r8 = core["\u0275\u0275reference"](5);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngTemplateOutlet", _r8)("ngTemplateOutletContext", core["\u0275\u0275pureFunction1"](2, fluent_list_table_base_component_c0, item_r82));
            }
        }
        function FluentListTableBaseComponent_ng_container_1_ng_template_2_ng_template_5_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "cdk-virtual-scroll-viewport", 58), 
            core["\u0275\u0275template"](1, FluentListTableBaseComponent_ng_container_1_ng_template_2_ng_template_5_ng_container_1_Template, 2, 4, "ng-container", 59), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r33 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275property"]("ngClass", core["\u0275\u0275pureFunction1"](3, _c4, !!ctx_r33.isResizing)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("cdkVirtualForOf", ctx_r33.dataSource)("cdkVirtualForTrackBy", ctx_r33.trackFluentListItemBy);
            }
        }
        var _c5 = function(a0) {
            return {
                "responsive-columns": a0
            };
        };
        function FluentListTableBaseComponent_ng_container_1_ng_template_2_Template(rf, ctx) {
            if (1 & rf) {
                var _r85 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div", 22)(1, "div", 23), core["\u0275\u0275listener"]("matSortChange", function($event) {
                    core["\u0275\u0275restoreView"](_r85);
                    var ctx_r84 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r84.sortChange($event));
                }), core["\u0275\u0275template"](2, FluentListTableBaseComponent_ng_container_1_ng_template_2_span_2_Template, 3, 1, "span", 24), 
                core["\u0275\u0275template"](3, FluentListTableBaseComponent_ng_container_1_ng_template_2_ng_container_3_Template, 3, 3, "ng-container", 25), 
                core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](4, FluentListTableBaseComponent_ng_container_1_ng_template_2_virtual_scroll_4_Template, 4, 10, "virtual-scroll", 26), 
                core["\u0275\u0275template"](5, FluentListTableBaseComponent_ng_container_1_ng_template_2_ng_template_5_Template, 2, 5, "ng-template", null, 27, core["\u0275\u0275templateRefExtractor"]), 
                core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var _r32 = core["\u0275\u0275reference"](6), ctx_r7 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275property"]("ngClass", core["\u0275\u0275pureFunction1"](9, _c5, !!ctx_r7.responsiveColumns)), 
                core["\u0275\u0275attribute"]("aria-rowcount", ctx_r7.dataSource.filteredData.length)("aria-busy", ctx_r7.isLoading), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("matSortDisabled", !!ctx_r7.isResizing)("ngClass", core["\u0275\u0275pureFunction1"](11, _c4, !!ctx_r7.isResizing)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !!ctx_r7.allowSelection), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngForOf", ctx_r7.columnConfigs), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx_r7.scrollElement)("ngIfElse", _r32);
            }
        }
        var _c6 = function() {
            return {
                display: "flex"
            };
        };
        function FluentListTableBaseComponent_ng_container_1_ng_template_4_span_2_Template(rf, ctx) {
            if (1 & rf) {
                var _r92 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "span", 62)(1, "div", 63)(2, "tri-checkbox", 64), 
                core["\u0275\u0275listener"]("click", function($event) {
                    return $event.stopPropagation();
                })("keydown.enter", function() {
                    core["\u0275\u0275restoreView"](_r92);
                    var item_r86 = core["\u0275\u0275nextContext"]().$implicit, ctx_r90 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r90.toggleSelection(item_r86));
                })("onChange", function() {
                    core["\u0275\u0275restoreView"](_r92);
                    var item_r86 = core["\u0275\u0275nextContext"]().$implicit, ctx_r93 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r93.toggleSelection(item_r86));
                }), core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275pipe"](4, "localize"), 
                core["\u0275\u0275elementEnd"]()()();
            }
            if (2 & rf) {
                var item_r86 = core["\u0275\u0275nextContext"]().$implicit, ctx_r87 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngStyle", core["\u0275\u0275pureFunction0"](10, _c6)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngClass", ctx_r87.itemShouldBeDisplayAsChecked(item_r86) ? "checkbox-checked" : "checkbox")("disabled", ctx_r87.itemCannotBeSelected(item_r86))("checked", ctx_r87.itemShouldBeDisplayAsChecked(item_r86))("ariaLabel", core["\u0275\u0275pipeBind1"](3, 6, "SelectRow"))("title", core["\u0275\u0275pipeBind1"](4, 8, "SelectRow"));
            }
        }
        function FluentListTableBaseComponent_ng_container_1_ng_template_4_ng_container_3_div_1_div_1_ng_container_1_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275elementContainer"](0);
        }
        var _c7 = function(a0, a1, a2, a3, a4) {
            return {
                $implicit: a0,
                colWidth: a1,
                isSelected$: a2,
                seeAllColumn: a3,
                nextToIconColumn: a4
            };
        };
        function FluentListTableBaseComponent_ng_container_1_ng_template_4_ng_container_3_div_1_div_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 70), core["\u0275\u0275template"](1, FluentListTableBaseComponent_ng_container_1_ng_template_4_ng_container_3_div_1_div_1_ng_container_1_Template, 1, 0, "ng-container", 19), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var config_r96 = core["\u0275\u0275nextContext"](2).$implicit, _r100 = core["\u0275\u0275reference"](6), item_r86 = core["\u0275\u0275nextContext"]().$implicit, ctx_r102 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275property"]("popper", _r100)("popperDelay", 500)("popperTimeout", 500)("popperHideOnClickOutside", !0)("popperHideOnScroll", !0)("popperPlacement", "right-start")("popperDisableStyle", !0)("popperAppendTo", "#artifactContentView"), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngTemplateOutlet", config_r96.cellTemplate)("ngTemplateOutletContext", core["\u0275\u0275pureFunction5"](10, _c7, item_r86, ctx_r102.colWidth, ctx_r102.isSelected(item_r86), ctx_r102.seeAllColumn, ctx_r102.nextToIconColumn));
            }
        }
        function FluentListTableBaseComponent_ng_container_1_ng_template_4_ng_container_3_div_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div"), core["\u0275\u0275template"](1, FluentListTableBaseComponent_ng_container_1_ng_template_4_ng_container_3_div_1_div_1_Template, 2, 16, "div", 69), 
            core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var config_r96 = core["\u0275\u0275nextContext"]().$implicit;
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](2, 1, config_r96.visible$) && !config_r96.isOutsideViewport);
            }
        }
        function FluentListTableBaseComponent_ng_container_1_ng_template_4_ng_container_3_ng_template_3_div_0_ng_container_1_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275elementContainer"](0);
        }
        function FluentListTableBaseComponent_ng_container_1_ng_template_4_ng_container_3_ng_template_3_div_0_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 72), core["\u0275\u0275template"](1, FluentListTableBaseComponent_ng_container_1_ng_template_4_ng_container_3_ng_template_3_div_0_ng_container_1_Template, 1, 0, "ng-container", 19), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var config_r96 = core["\u0275\u0275nextContext"](2).$implicit, item_r86 = core["\u0275\u0275nextContext"]().$implicit, ctx_r107 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngTemplateOutlet", config_r96.cellTemplate)("ngTemplateOutletContext", core["\u0275\u0275pureFunction5"](2, _c7, item_r86, ctx_r107.colWidth, ctx_r107.isSelected(item_r86), ctx_r107.seeAllColumn, ctx_r107.nextToIconColumn));
            }
        }
        function FluentListTableBaseComponent_ng_container_1_ng_template_4_ng_container_3_ng_template_3_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275template"](0, FluentListTableBaseComponent_ng_container_1_ng_template_4_ng_container_3_ng_template_3_div_0_Template, 2, 8, "div", 71), 
            core["\u0275\u0275pipe"](1, "async")), 2 & rf) {
                var config_r96 = core["\u0275\u0275nextContext"]().$implicit;
                core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](1, 1, config_r96.visible$) && !config_r96.isOutsideViewport);
            }
        }
        function FluentListTableBaseComponent_ng_container_1_ng_template_4_ng_container_3_item_hover_card_7_Template(rf, ctx) {
            if (1 & rf) {
                var _r113 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "item-hover-card", 73), core["\u0275\u0275listener"]("mouseenter", function() {
                    core["\u0275\u0275restoreView"](_r113);
                    var ctx_r112 = core["\u0275\u0275nextContext"](4);
                    return core["\u0275\u0275resetView"](ctx_r112.hoverOnItemCard(!0));
                })("mouseleave", function() {
                    core["\u0275\u0275restoreView"](_r113);
                    var ctx_r114 = core["\u0275\u0275nextContext"](4);
                    return core["\u0275\u0275resetView"](ctx_r114.hoverOnItemCard(!1));
                }), core["\u0275\u0275pipe"](1, "fluentListItemHoverCardArgs"), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var item_r86 = core["\u0275\u0275nextContext"](2).$implicit, ctx_r101 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275property"]("itemHoverCardArgs", core["\u0275\u0275pipeBind2"](1, 1, item_r86, ctx_r101.hostedEnvironmentTelemetryHint));
            }
        }
        function FluentListTableBaseComponent_ng_container_1_ng_template_4_ng_container_3_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, FluentListTableBaseComponent_ng_container_1_ng_template_4_ng_container_3_div_1_Template, 3, 3, "div", 3), 
            core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275template"](3, FluentListTableBaseComponent_ng_container_1_ng_template_4_ng_container_3_ng_template_3_Template, 2, 3, "ng-template", null, 65, core["\u0275\u0275templateRefExtractor"]), 
            core["\u0275\u0275elementStart"](5, "popper-content", 66, 67), core["\u0275\u0275template"](7, FluentListTableBaseComponent_ng_container_1_ng_template_4_ng_container_3_item_hover_card_7_Template, 2, 4, "item-hover-card", 68), 
            core["\u0275\u0275pipe"](8, "async"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementContainerEnd"]()), 
            2 & rf) {
                var tmp_0_0, config_r96 = ctx.$implicit, _r98 = core["\u0275\u0275reference"](4), item_r86 = core["\u0275\u0275nextContext"]().$implicit, ctx_r88 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", config_r96.name === ctx_r88.FluentColumnName.Name && (null == (tmp_0_0 = core["\u0275\u0275pipeBind1"](2, 3, ctx_r88.featureSwitches$)) ? null : tmp_0_0.itemHoverCard_HEAD_FE))("ngIfElse", _r98), 
                core["\u0275\u0275advance"](6), core["\u0275\u0275property"]("ngIf", ctx_r88.isHoverOnItemHoverCard || ctx_r88.uniqueItemKey(item_r86) == core["\u0275\u0275pipeBind1"](8, 5, ctx_r88.hoveredRowId$));
            }
        }
        var _c8 = function(a0, a1) {
            return {
                hover: a0,
                selected: a1
            };
        };
        function FluentListTableBaseComponent_ng_container_1_ng_template_4_Template(rf, ctx) {
            if (1 & rf) {
                var _r118 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div", 60), core["\u0275\u0275listener"]("cdkFocusChange", function($event) {
                    var item_r86 = core["\u0275\u0275restoreView"](_r118).$implicit, ctx_r117 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r117.setFocusedRow($event, item_r86));
                })("mouseenter", function() {
                    var item_r86 = core["\u0275\u0275restoreView"](_r118).$implicit, ctx_r119 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r119.setHoveredRow(item_r86));
                })("mouseleave", function() {
                    core["\u0275\u0275restoreView"](_r118);
                    var ctx_r120 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r120.setHoveredRow(null));
                })("click", function() {
                    var item_r86 = core["\u0275\u0275restoreView"](_r118).$implicit, ctx_r121 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r121.onClickRow(item_r86));
                }), core["\u0275\u0275pipe"](1, "async"), core["\u0275\u0275template"](2, FluentListTableBaseComponent_ng_container_1_ng_template_4_span_2_Template, 5, 11, "span", 61), 
                core["\u0275\u0275template"](3, FluentListTableBaseComponent_ng_container_1_ng_template_4_ng_container_3_Template, 9, 7, "ng-container", 25), 
                core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var item_r86 = ctx.$implicit, ctx_r9 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275property"]("ngClass", core["\u0275\u0275pureFunction2"](5, _c8, !!ctx_r9.currentMenuItemId && ctx_r9.currentMenuItemId === item_r86.uniqueId, core["\u0275\u0275pipeBind1"](1, 3, ctx_r9.isSelected(item_r86)))), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", !!ctx_r9.allowSelection), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngForOf", ctx_r9.columnConfigs);
            }
        }
        function FluentListTableBaseComponent_ng_container_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, FluentListTableBaseComponent_ng_container_1_ng_container_1_Template, 5, 6, "ng-container", 3), 
            core["\u0275\u0275template"](2, FluentListTableBaseComponent_ng_container_1_ng_template_2_Template, 7, 13, "ng-template", null, 4, core["\u0275\u0275templateRefExtractor"]), 
            core["\u0275\u0275template"](4, FluentListTableBaseComponent_ng_container_1_ng_template_4_Template, 4, 8, "ng-template", null, 5, core["\u0275\u0275templateRefExtractor"]), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var _r6 = core["\u0275\u0275reference"](3), ctx_r1 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !ctx_r1.useVirtualScroll)("ngIfElse", _r6);
            }
        }
        var _a, FluentListTableBaseComponent = function() {
            function FluentListTableBaseComponent(el, featureSwitchService, cd, elementRef, liveAnnouncer, localizationService, telemetryService) {
                this.el = el, this.featureSwitchService = featureSwitchService, this.cd = cd, this.elementRef = elementRef, 
                this.liveAnnouncer = liveAnnouncer, this.localizationService = localizationService, 
                this.telemetryService = telemetryService, this.useVirtualScroll = !0, this.proportionalColumFillStrategy$ = (0, 
                observable_of.of)("NoProportional"), this.hostedEnvironmentTelemetryHint = "", this.responsiveColumnsStrategy$ = (0, 
                observable_of.of)("NoResponsive"), this.seeAllDisplayName = "", this.onSortChange = new core.EventEmitter, 
                this.clickRow = new core.EventEmitter, this.onSeeAll = new core.EventEmitter, this.onClickMasterCheckbox = new core.EventEmitter, 
                this.FluentColumnName = FluentColumnName, this.isResizing = !1, this.colWidth = {}, 
                this.widthSettings = {}, this.columnConfigs = [], this.displayedColumns = [], this.seeAllColumn = null, 
                this.nextToIconColumn = FluentColumnName.Name, this.isHoverOnItemHoverCard = !1, 
                this.proportionalColumFill = !1, this.responsiveColumns = !1, this.enableColumnOptions = !1, 
                this.destroy$ = new Subject.xQ, this.anyColHidden = !1, this.queue = new TaskQueue, 
                this.featureSwitches$ = this.featureSwitchService.featureSwitches$, this.enableColumnOptions = this.featureSwitchService.featureSwitches.FluentListColumnOption;
            }
            return Object.defineProperty(FluentListTableBaseComponent.prototype, "matSort", {
                set: function(sort) {
                    this._matSort = sort, this.dataSource.sort = sort;
                },
                enumerable: !1,
                configurable: !0
            }), FluentListTableBaseComponent.prototype.ngOnInit = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var _a, _i, _b, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_c) {
                        switch (_c.label) {
                          case 0:
                            return this.isLoading = !0, this.items$ = this.dataSource.connect(), this.items$.pipe((0, 
                            takeUntil.R)(this.destroy$)).subscribe(function(items) {
                                _this.items = items;
                                for (var i = 0; i < _this.items.length; i++) _this.items[i].relativePosition = i;
                                _this.virtualScroll ? requestAnimationFrame(function() {
                                    return _this.cd.detectChanges();
                                }) : _this.cd.markForCheck();
                            }), this.dataSource.connect().pipe((0, distinctUntilChanged.x)(), (0, operators_map.U)(function(items) {
                                return new Set(_.map(items, function(item) {
                                    return _this.uniqueItemKey(item);
                                }));
                            }), (0, takeUntil.R)(this.destroy$)).subscribe(function(renderedItemKeys) {
                                for (var _a, keysToRemove = [], _i = 0, selected_1 = _this.selection.selected; _i < selected_1.length; _i++) {
                                    var item = selected_1[_i];
                                    renderedItemKeys.has(item) || keysToRemove.push(item);
                                }
                                (_a = _this.selection).deselect.apply(_a, keysToRemove || []);
                            }), _a = this, [ 4, this.columnConfigs$.toPromise() ];

                          case 1:
                            return _a.columnConfigs = _c.sent(), this.displayedColumns = _(this.columnConfigs).filter(function(config) {
                                return (0, tslib_es6.__awaiter)(_this, void 0, void 0, function() {
                                    return (0, tslib_es6.__generator)(this, function(_a) {
                                        switch (_a.label) {
                                          case 0:
                                            return [ 4, config.visible$.toPromise() ];

                                          case 1:
                                            return [ 2, _a.sent() ];
                                        }
                                    });
                                });
                            }).map(function(config) {
                                return config.name;
                            }).value(), this.refreshScroll$ && this.refreshScroll$.pipe((0, takeUntil.R)(this.destroy$)).subscribe(function() {
                                return _this.refreshScroll();
                            }), this.resizeEvent$ && this.resizeEvent$.pipe((0, takeUntil.R)(this.destroy$)).subscribe(function() {
                                return _this.onResize();
                            }), [ 4, this.initColumnWidth() ];

                          case 2:
                            for (_c.sent(), _i = 0, _b = this.columnConfigs; _i < _b.length; _i++) _b[_i].visible$.pipe((0, 
                            skip.T)(1), (0, distinctUntilChanged.x)(), (0, takeUntil.R)(this.destroy$)).subscribe(function() {
                                _this.triggerInitColumnWidth(!0);
                            });
                            return this.isLoading = !1, [ 2 ];
                        }
                    });
                });
            }, FluentListTableBaseComponent.prototype.ngAfterViewInit = function() {
                var _a, _this = this;
                this.useVirtualScroll || $(this.elementRef.nativeElement).find("*[role='cell']").attr("role", ""), 
                this.defaultSort && this._matSort.sort(this.defaultSort), this.containerHeightResizeEvent$ && this.containerHeightResizeEvent$.pipe((0, 
                takeUntil.R)(this.destroy$)).subscribe(function() {
                    _this.cdkVirtualScrollViewPort && _this.cdkVirtualScrollViewPort.checkViewportSize();
                }), this.tableContainerWidthObserver = new ResizeObserver(function() {
                    return _this.onResize();
                }), null === (_a = this.tableContainerWidthObserver) || void 0 === _a || _a.observe(this.el.nativeElement);
            }, FluentListTableBaseComponent.prototype.ngOnDestroy = function() {
                var _a;
                this.destroy$.next(), this.destroy$.complete(), null === (_a = this.tableContainerWidthObserver) || void 0 === _a || _a.unobserve(this.el.nativeElement);
            }, FluentListTableBaseComponent.prototype.onResizeWhenNonProportionalColumFill = function() {
                this.proportionalColumFill || this.onResize();
            }, FluentListTableBaseComponent.prototype.onResize = function() {
                (this.virtualScroll || this.cdkVirtualScrollViewPort && this.featureSwitchService.featureSwitches.unlimitedListColumnWidth) && this.refreshScroll();
            }, FluentListTableBaseComponent.prototype.triggerInitColumnWidth = function(columnSizePreserve) {
                var _this = this;
                this.queue.enqueue(function() {
                    return _this.initColumnWidth(columnSizePreserve);
                });
            }, FluentListTableBaseComponent.prototype.sortChange = function(e) {
                this.onSortChange.emit(e), this.announceSortChange(e);
            }, FluentListTableBaseComponent.prototype.sortChangeViaColumnOption = function(e) {
                var _a;
                (null === (_a = this._matSort) || void 0 === _a ? void 0 : _a.direction) !== e.direction && this._matSort.sort({
                    id: e.active,
                    start: e.direction,
                    disableClear: !0
                });
            }, FluentListTableBaseComponent.prototype.columnWidthChangeViaColumnOption = function(resizeOptions) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return this.isResizing = !0, this.resizingStartSize = this.getColumnCurWidth(resizeOptions.colName), 
                            [ 4, this.resizeColumn(resizeOptions.colName, resizeOptions.resizeWidth, !0) ];

                          case 1:
                            return _a.sent(), this.isResizing = !1, this.telemetryService.logEvent(FluentListResizeColumnEnd, {
                                hostedContext: this.hostedEnvironmentTelemetryHint,
                                resizedColumnName: resizeOptions.colName,
                                resizedColumnOldSize: this.resizingStartSize,
                                resizedColumnNewSize: this.getColumnCurWidth(resizeOptions.colName)
                            }), [ 2 ];
                        }
                    });
                });
            }, FluentListTableBaseComponent.prototype.getColumnCurWidth = function(colName) {
                var colWidth = this.widthSettings[colName].curWidth;
                if (colWidth) return colWidth;
                var columnConfig = this.columnConfigs.find(function(column) {
                    return column.name === colName;
                });
                return (null == columnConfig ? void 0 : columnConfig.defaultWidth) || 98;
            }, FluentListTableBaseComponent.prototype.seeAllClickEmit = function() {
                this.onSeeAll.emit();
            }, FluentListTableBaseComponent.prototype.trackFluentListItemBy = function(index, item) {
                return getUniqueIdForFluentListItem(item);
            }, FluentListTableBaseComponent.prototype.trackByIndex = function(index) {
                return "".concat(index);
            }, FluentListTableBaseComponent.prototype.getHeaderTooltip = function(config) {
                return !this._matSort || this._matSort.active !== config.name || "asc" !== this._matSort.direction && "desc" !== this._matSort.direction ? config.tooltip[0] : "asc" === this._matSort.direction ? config.tooltip[1] : config.tooltip[2];
            }, FluentListTableBaseComponent.prototype.initColumnWidth = function(columnSizePreserve) {
                var _a;
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var _i, _b, config, defaultWidth, _c, _d, _e;
                    return (0, tslib_es6.__generator)(this, function(_f) {
                        switch (_f.label) {
                          case 0:
                            for (_i = 0, _b = this.columnConfigs; _i < _b.length; _i++) config = _b[_i], columnSizePreserve && (null === (_a = this.widthSettings[config.name]) || void 0 === _a ? void 0 : _a.userAdjusted) || (defaultWidth = this.colWidth[config.name] = config.defaultWidth || 98, 
                            this.widthSettings[config.name] = {
                                minWidth: config.minWidth || 98,
                                maxWidth: config.maxWidth || 400,
                                curWidth: defaultWidth,
                                userAdjusted: !1,
                                defaultWidth
                            });
                            return _c = this, [ 4, this.getProportionalColumFill() ];

                          case 1:
                            return _c.proportionalColumFill = _f.sent(), _d = this, [ 4, this.getResponsiveColumns() ];

                          case 2:
                            return _d.responsiveColumns = _f.sent(), [ 4, this.setVisibleColumns() ];

                          case 3:
                            return _f.sent(), this.proportionalColumFill ? [ 4, this.proportionalScaleColumns() ] : [ 3, 5 ];

                          case 4:
                            _f.sent(), _f.label = 5;

                          case 5:
                            return _e = this, [ 4, this.calculateTableMinWidth() ];

                          case 6:
                            return _e.tableMinWidth = _f.sent(), this.cd.markForCheck(), [ 2 ];
                        }
                    });
                });
            }, FluentListTableBaseComponent.prototype.proportionalScaleColumns = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var totalRequestedSpace, _i, _a, availableFlexWidth, scaleFactor, _b, _c, config, proportionalSpaceOfAvailable;
                    return (0, tslib_es6.__generator)(this, function(_d) {
                        switch (_d.label) {
                          case 0:
                            totalRequestedSpace = 0, _i = 0, _a = this.columnConfigs, _d.label = 1;

                          case 1:
                            return _i < _a.length ? [ 4, (config = _a[_i]).visible$.pipe((0, operators_take.q)(1)).toPromise() ] : [ 3, 4 ];

                          case 2:
                            _d.sent() && !this.widthSettings[config.name].isOutsideViewport && !this.widthSettings[config.name].userAdjusted && config.canResize && (totalRequestedSpace += this.colWidth[config.name]), 
                            _d.label = 3;

                          case 3:
                            return _i++, [ 3, 1 ];

                          case 4:
                            availableFlexWidth = this.availableFlexWidth(), scaleFactor = availableFlexWidth / totalRequestedSpace, 
                            _b = 0, _c = this.columnConfigs, _d.label = 5;

                          case 5:
                            return _b < _c.length ? [ 4, (config = _c[_b]).visible$.pipe((0, operators_take.q)(1)).toPromise() ] : [ 3, 8 ];

                          case 6:
                            _d.sent() && !this.widthSettings[config.name].isOutsideViewport && !this.widthSettings[config.name].userAdjusted && config.canResize && (this.colWidth[config.name] = proportionalSpaceOfAvailable = this.colWidth[config.name] * scaleFactor, 
                            this.widthSettings[config.name].curWidth = proportionalSpaceOfAvailable), _d.label = 7;

                          case 7:
                            return _b++, [ 3, 5 ];

                          case 8:
                            return [ 4, this.handleSeeAllAddOrRemove() ];

                          case 9:
                            return _d.sent(), [ 2 ];
                        }
                    });
                });
            }, FluentListTableBaseComponent.prototype.availableDisplayWidth = function() {
                var _a, _b, _c, scrollableContentElement = this.elementRef.nativeElement.querySelector(".scrollable-content"), checkboxWidth = this.allowSelection ? 32 : 0, ret = 0;
                if (scrollableContentElement) {
                    var componentStyles = getComputedStyle(scrollableContentElement), leftRightPadding = parseFloat(null !== (_b = componentStyles.paddingLeft) && void 0 !== _b ? _b : "0") + parseFloat(null !== (_c = componentStyles.paddingRight) && void 0 !== _c ? _c : "0");
                    ret = parseFloat(componentStyles.width) - leftRightPadding - checkboxWidth;
                } else ret = parseFloat(getComputedStyle(null === (_a = this.elementRef) || void 0 === _a ? void 0 : _a.nativeElement).width) - 64 - checkboxWidth;
                return (this.anyColHidden || this.seeAllAlwaysAvailable) && this.onSeeAll.observers.length > 0 && (ret -= 55), 
                ret;
            }, FluentListTableBaseComponent.prototype.availableFlexWidth = function() {
                for (var availableFlexWidth = this.availableDisplayWidth(), _i = 0, _a = this.columnConfigs; _i < _a.length; _i++) {
                    var config = _a[_i];
                    !this.widthSettings[config.name].userAdjusted && config.canResize || config.isOutsideViewport || (availableFlexWidth -= this.widthSettings[config.name].curWidth);
                }
                return availableFlexWidth;
            }, FluentListTableBaseComponent.prototype.onColumnResizing = function(event, colName) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.resizeColumn(colName, event.rectangle && event.rectangle.width) ];

                          case 1:
                            return _a.sent(), [ 2 ];
                        }
                    });
                });
            }, FluentListTableBaseComponent.prototype.resizeColumn = function(colName, resizeWidth, applyMaxWidth) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var minWidth, maxWidth, _a;
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return minWidth = this.getColumnMinWidth(colName), maxWidth = this.getColumnMaxWidthNonProportional(colName), 
                            this.proportionalColumFill ? [ 4, this.getColumnMaxWidthProportional(colName) ] : [ 3, 2 ];

                          case 1:
                            return maxWidth = _b.sent(), [ 3, 3 ];

                          case 2:
                            this.columnWidthRecoverable && (maxWidth = Math.max(maxWidth, this.widthSettings[colName].defaultWidth || 0)), 
                            _b.label = 3;

                          case 3:
                            return applyMaxWidth && maxWidth > 0 && resizeWidth > maxWidth && (resizeWidth = maxWidth - 1), 
                            resizeWidth > minWidth && resizeWidth < maxWidth ? (this.widthSettings[colName].curWidth = this.colWidth[colName] = resizeWidth, 
                            this.widthSettings[colName].userAdjusted = !0, _a = this, [ 4, this.calculateTableMinWidth() ]) : [ 3, 5 ];

                          case 4:
                            return _a.tableMinWidth = _b.sent(), [ 3, 6 ];

                          case 5:
                            return [ 2 ];

                          case 6:
                            return this.proportionalColumFill ? [ 4, this.proportionalScaleColumnsOnResize(colName) ] : [ 3, 8 ];

                          case 7:
                            _b.sent(), _b.label = 8;

                          case 8:
                            return [ 2 ];
                        }
                    });
                });
            }, FluentListTableBaseComponent.prototype.onColumnResizingEnd = function(event, colName) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        return this.isResizing = !1, this.telemetryService.logEvent(FluentListResizeColumnEnd, {
                            hostedContext: this.hostedEnvironmentTelemetryHint,
                            resizedColumnName: colName,
                            resizedColumnOldSize: this.resizingStartSize,
                            resizedColumnNewSize: event.rectangle && event.rectangle.width
                        }), [ 2 ];
                    });
                });
            }, FluentListTableBaseComponent.prototype.onColumnResizingStart = function(event, colName) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        return this.isResizing = !0, this.resizingStartSize = event.rectangle && event.rectangle.width, 
                        [ 2 ];
                    });
                });
            }, FluentListTableBaseComponent.prototype.setVisibleColumns = function(colName) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var _i, _a, config, availableDisplayWidth, _b;
                    return (0, tslib_es6.__generator)(this, function(_c) {
                        switch (_c.label) {
                          case 0:
                            if (!this.responsiveColumns && !this.proportionalColumFill) {
                                for (_i = 0, _a = this.columnConfigs; _i < _a.length; _i++) (config = _a[_i]).isOutsideViewport = !1, 
                                config.showSeeAll = !1;
                                return this.seeAllColumn = null, this.nextToIconColumn = FluentColumnName.Name, 
                                [ 2 ];
                            }
                            return (availableDisplayWidth = this.availableDisplayWidth()) > -1 ? this.proportionalColumFill ? [ 4, this.setVisibleColumnsProportionalColumnFill(availableDisplayWidth, colName) ] : [ 3, 4 ] : [ 3, 6 ];

                          case 1:
                            return _c.sent() ? [ 4, this.setVisibleColumns(colName) ] : [ 3, 3 ];

                          case 2:
                            _c.sent(), _c.label = 3;

                          case 3:
                            return [ 3, 6 ];

                          case 4:
                            return [ 4, this.setVisibleColumnsNonProportionalColumnFill(availableDisplayWidth) ];

                          case 5:
                            _c.sent(), _c.label = 6;

                          case 6:
                            return _b = this, [ 4, this.getNextToIconColumn() ];

                          case 7:
                            return _b.nextToIconColumn = _c.sent(), [ 2 ];
                        }
                    });
                });
            }, FluentListTableBaseComponent.prototype.getNextToIconColumn = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var iconIndex, i, _a;
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            iconIndex = this.columnConfigs.findIndex(function(config) {
                                return config.name === FluentColumnName.Icon;
                            }), i = iconIndex + 1, _b.label = 1;

                          case 1:
                            return i < this.columnConfigs.length ? (_a = !this.columnConfigs[i].isOutsideViewport) ? [ 4, this.columnConfigs[i].visible$.pipe((0, 
                            operators_take.q)(1)).toPromise() ] : [ 3, 3 ] : [ 3, 5 ];

                          case 2:
                            _a = _b.sent(), _b.label = 3;

                          case 3:
                            if (_a) return [ 2, this.columnConfigs[i].name ];
                            _b.label = 4;

                          case 4:
                            return i++, [ 3, 1 ];

                          case 5:
                            return [ 2, null ];
                        }
                    });
                });
            }, FluentListTableBaseComponent.prototype.getWidthFromConfig = function(config) {
                return config.showSeeAll ? this.colWidth[config.name] + 55 + "px" : this.colWidth[config.name] + "px";
            }, FluentListTableBaseComponent.prototype.localize = function(key, insertionValue) {
                return insertionValue ? this.localizationService.format(key, [ insertionValue ]) : this.localizationService.get(key);
            }, FluentListTableBaseComponent.prototype.hoverOnItemCard = function(enter) {
                this.isHoverOnItemHoverCard = enter;
            }, FluentListTableBaseComponent.prototype.announceSortChange = function(e) {
                var _a, columnDisplayName = null === (_a = this.columnConfigs.find(function(column) {
                    return column.name === e.active;
                })) || void 0 === _a ? void 0 : _a.content;
                if (columnDisplayName) {
                    var message = this.localizationService.format({
                        asc: "DataGrid_ColumnSortedAscending",
                        desc: "DataGrid_ColumnSortedDescending",
                        "": "Sort_Cleared"
                    }[e.direction], columnDisplayName);
                    this.liveAnnouncer.announce(message);
                }
            }, FluentListTableBaseComponent.prototype.handleSeeAllAddOrRemove = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var showSeeAllSet, i, _a;
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            if (!(this.onSeeAll.observers.length > 0)) return [ 3, 6 ];
                            showSeeAllSet = !1, i = this.columnConfigs.length - 1, _b.label = 1;

                          case 1:
                            return i >= 0 ? (_a = !this.columnConfigs[i].isOutsideViewport) ? [ 4, this.columnConfigs[i].visible$.pipe((0, 
                            operators_take.q)(1)).toPromise() ] : [ 3, 3 ] : [ 3, 5 ];

                          case 2:
                            _a = _b.sent(), _b.label = 3;

                          case 3:
                            _a && !showSeeAllSet && (this.anyColHidden || this.seeAllAlwaysAvailable) ? (this.columnConfigs[i].showSeeAll = !0, 
                            this.seeAllColumn = this.columnConfigs[i].name, showSeeAllSet = !0) : this.columnConfigs[i].showSeeAll = !1, 
                            _b.label = 4;

                          case 4:
                            return i--, [ 3, 1 ];

                          case 5:
                            showSeeAllSet || (this.seeAllColumn = null), _b.label = 6;

                          case 6:
                            return [ 2 ];
                        }
                    });
                });
            }, FluentListTableBaseComponent.prototype.setVisibleColumnsProportionalColumnFill = function(availableDisplayWidth, colName) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var rightOfColumn, anyColHiddenNew, _i, _a, curColWidth, _b, _c, config, col, curColMinWidth;
                    return (0, tslib_es6.__generator)(this, function(_d) {
                        switch (_d.label) {
                          case 0:
                            rightOfColumn = !0, anyColHiddenNew = !1, colName && (rightOfColumn = !1), _i = 0, 
                            _a = this.columnConfigs, _d.label = 1;

                          case 1:
                            return _i < _a.length ? [ 4, (config = _a[_i]).visible$.pipe((0, operators_take.q)(1)).toPromise() ] : [ 3, 4 ];

                          case 2:
                            if (_d.sent() && (this.widthSettings[config.name].userAdjusted || !config.canResize || !rightOfColumn)) if (!(curColWidth = (col = this.widthSettings[config.name]).curWidth) || availableDisplayWidth >= curColWidth) col.isOutsideViewport = config.isOutsideViewport = !1, 
                            availableDisplayWidth -= curColWidth; else if (col.isOutsideViewport = config.isOutsideViewport = !0, 
                            anyColHiddenNew = !0, !this.anyColHidden) return this.anyColHidden = !0, [ 2, !0 ];
                            colName === config.name && (rightOfColumn = !0), _d.label = 3;

                          case 3:
                            return _i++, [ 3, 1 ];

                          case 4:
                            rightOfColumn = !0, colName && (rightOfColumn = !1), _b = 0, _c = this.columnConfigs, 
                            _d.label = 5;

                          case 5:
                            return _b < _c.length ? [ 4, (config = _c[_b]).visible$.pipe((0, operators_take.q)(1)).toPromise() ] : [ 3, 8 ];

                          case 6:
                            if (_d.sent() && !this.widthSettings[config.name].userAdjusted && config.canResize && rightOfColumn) if (!(curColMinWidth = (col = this.widthSettings[config.name]).minWidth) || availableDisplayWidth >= curColMinWidth) col.isOutsideViewport = config.isOutsideViewport = !1, 
                            availableDisplayWidth -= curColMinWidth; else if (col.isOutsideViewport = config.isOutsideViewport = !0, 
                            anyColHiddenNew = !0, !this.anyColHidden) return this.anyColHidden = !0, [ 2, !0 ];
                            colName === config.name && (rightOfColumn = !0), _d.label = 7;

                          case 7:
                            return _b++, [ 3, 5 ];

                          case 8:
                            return this.anyColHidden = anyColHiddenNew, [ 2, !1 ];
                        }
                    });
                });
            }, FluentListTableBaseComponent.prototype.setVisibleColumnsNonProportionalColumnFill = function(availableDisplayWidth) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var _i, _a, config, col, curColWidth;
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            _i = 0, _a = this.columnConfigs, _b.label = 1;

                          case 1:
                            return _i < _a.length ? [ 4, (config = _a[_i]).visible$.pipe((0, operators_take.q)(1)).toPromise() ] : [ 3, 4 ];

                          case 2:
                            _b.sent() && (!(curColWidth = (col = this.widthSettings[config.name]).curWidth) || availableDisplayWidth >= curColWidth ? (col.isOutsideViewport = config.isOutsideViewport = !1, 
                            availableDisplayWidth -= curColWidth) : availableDisplayWidth >= col.minWidth ? (this.colWidth[config.name] = col.curWidth = availableDisplayWidth, 
                            col.isOutsideViewport = config.isOutsideViewport = !1, availableDisplayWidth -= col.curWidth) : col.isOutsideViewport = config.isOutsideViewport = !0), 
                            _b.label = 3;

                          case 3:
                            return _i++, [ 3, 1 ];

                          case 4:
                            return [ 2 ];
                        }
                    });
                });
            }, FluentListTableBaseComponent.prototype.proportionalScaleColumnsOnResize = function(colName) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var totalRequestedSpace, rightOfColumn, availableFlexWidth, _i, _a, scaleFactor, _b, _c, config, _d, proportionalSpaceOfAvailable;
                    return (0, tslib_es6.__generator)(this, function(_e) {
                        switch (_e.label) {
                          case 0:
                            return [ 4, this.setVisibleColumns(colName) ];

                          case 1:
                            _e.sent(), totalRequestedSpace = 0, rightOfColumn = !1, availableFlexWidth = this.availableDisplayWidth(), 
                            _i = 0, _a = this.columnConfigs, _e.label = 2;

                          case 2:
                            return _i < _a.length ? [ 4, (config = _a[_i]).visible$.pipe((0, operators_take.q)(1)).toPromise() ] : [ 3, 5 ];

                          case 3:
                            _e.sent() && (rightOfColumn && !this.widthSettings[config.name].isOutsideViewport && !this.widthSettings[config.name].userAdjusted && config.canResize ? totalRequestedSpace += this.colWidth[config.name] : this.widthSettings[config.name].isOutsideViewport || (availableFlexWidth -= this.colWidth[config.name])), 
                            colName === config.name && (rightOfColumn = !0), _e.label = 4;

                          case 4:
                            return _i++, [ 3, 2 ];

                          case 5:
                            scaleFactor = availableFlexWidth / totalRequestedSpace, rightOfColumn = !1, _b = 0, 
                            _c = this.columnConfigs, _e.label = 6;

                          case 6:
                            return _b < _c.length ? (config = _c[_b], (_d = rightOfColumn) ? [ 4, config.visible$.pipe((0, 
                            operators_take.q)(1)).toPromise() ] : [ 3, 8 ]) : [ 3, 10 ];

                          case 7:
                            _d = !!_e.sent(), _e.label = 8;

                          case 8:
                            _d && !this.widthSettings[config.name].isOutsideViewport && !this.widthSettings[config.name].userAdjusted && config.canResize && (this.colWidth[config.name] = proportionalSpaceOfAvailable = this.colWidth[config.name] * scaleFactor, 
                            this.widthSettings[config.name].curWidth = proportionalSpaceOfAvailable), colName === config.name && (rightOfColumn = !0), 
                            _e.label = 9;

                          case 9:
                            return _b++, [ 3, 6 ];

                          case 10:
                            return [ 4, this.handleSeeAllAddOrRemove() ];

                          case 11:
                            return _e.sent(), [ 2 ];
                        }
                    });
                });
            }, FluentListTableBaseComponent.prototype.getColumnMaxWidthProportional = function(colName) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var leftOfColumn, availableFlexWidth, _i, _a, config, _b, _c;
                    return (0, tslib_es6.__generator)(this, function(_d) {
                        switch (_d.label) {
                          case 0:
                            leftOfColumn = !0, availableFlexWidth = this.availableDisplayWidth(), _i = 0, _a = this.columnConfigs, 
                            _d.label = 1;

                          case 1:
                            return _i < _a.length ? (colName === (config = _a[_i]).name && (leftOfColumn = !1), 
                            (_b = leftOfColumn) ? [ 4, config.visible$.pipe((0, operators_take.q)(1)).toPromise() ] : [ 3, 3 ]) : [ 3, 7 ];

                          case 2:
                            _b = !!_d.sent(), _d.label = 3;

                          case 3:
                            return _b && !this.widthSettings[config.name].isOutsideViewport && (availableFlexWidth -= this.widthSettings[config.name].curWidth), 
                            (_c = !leftOfColumn) ? [ 4, config.visible$.pipe((0, operators_take.q)(1)).toPromise() ] : [ 3, 5 ];

                          case 4:
                            _c = !!_d.sent(), _d.label = 5;

                          case 5:
                            _c && !this.widthSettings[config.name].isOutsideViewport && this.widthSettings[config.name].userAdjusted && colName !== config.name && (availableFlexWidth -= this.widthSettings[config.name].curWidth), 
                            _d.label = 6;

                          case 6:
                            return _i++, [ 3, 1 ];

                          case 7:
                            return [ 2, availableFlexWidth ];
                        }
                    });
                });
            }, FluentListTableBaseComponent.prototype.getColumnMinWidth = function(columnName) {
                var columnConfig = this.columnConfigs.find(function(column) {
                    return column.name === columnName;
                }), minWidth = this.widthSettings[columnName].minWidth || 98;
                return this.enableColumnOptions && (null == columnConfig ? void 0 : columnConfig.showMoreOption) ? minWidth + 20 : minWidth;
            }, FluentListTableBaseComponent.prototype.getColumnMaxWidthNonProportional = function(columnName) {
                var componentWidth = this.availableDisplayWidth();
                if (componentWidth) {
                    var availableWidth = _.reduce(this.widthSettings, function(result, settings, colName) {
                        return colName === columnName || settings.isOutsideViewport ? result : result - settings.curWidth;
                    }, componentWidth);
                    return Math.min(availableWidth, this.widthSettings[columnName].maxWidth);
                }
                return this.widthSettings[columnName].maxWidth || 400;
            }, FluentListTableBaseComponent.prototype.refreshScroll = function() {
                var _a;
                null === (_a = this.virtualScroll) || void 0 === _a || _a.refresh(), this.triggerInitColumnWidth(!0);
            }, FluentListTableBaseComponent.prototype.calculateTableMinWidth = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var tableMinWidth, _i, _a, config, _b;
                    return (0, tslib_es6.__generator)(this, function(_c) {
                        switch (_c.label) {
                          case 0:
                            if (!this.useVirtualScroll || this.responsiveColumns) return [ 2, null ];
                            tableMinWidth = 64 + (this.allowSelection ? 32 : 0), _i = 0, _a = this.columnConfigs, 
                            _c.label = 1;

                          case 1:
                            return _i < _a.length ? (_b = !!(config = _a[_i]).defaultWidth) ? [ 4, config.visible$.pipe((0, 
                            operators_take.q)(1)).toPromise() ] : [ 3, 3 ] : [ 3, 5 ];

                          case 2:
                            _b = !!_c.sent(), _c.label = 3;

                          case 3:
                            _b && !config.isOutsideViewport && (tableMinWidth += this.colWidth[config.name]), 
                            _c.label = 4;

                          case 4:
                            return _i++, [ 3, 1 ];

                          case 5:
                            return [ 2, tableMinWidth ];
                        }
                    });
                });
            }, FluentListTableBaseComponent.prototype.masterToggle = function() {
                var _a, _this = this;
                if (this.isAllSelected()) this.selection.clear(), this.onClickMasterCheckbox.emit(!1); else {
                    var selectableData = _.filter(this.dataSource.filteredData, function(data) {
                        return !1 !== data.canBeSelected;
                    });
                    (_a = this.selection).select.apply(_a, _.map(selectableData, function(row) {
                        return _this.uniqueItemKey(row);
                    })), this.onClickMasterCheckbox.emit(!0);
                }
            }, FluentListTableBaseComponent.prototype.isAllSelected = function() {
                var _this = this, selectedRows = this.selection.selected;
                return _.filter(this.dataSource.filteredData, function(data) {
                    return !1 !== data.canBeSelected;
                }).every(function(selectableRow) {
                    return selectedRows.includes(_this.uniqueItemKey(selectableRow));
                });
            }, FluentListTableBaseComponent.prototype.noSelectableRows = function() {
                return this.dataSource.filteredData.every(function(data) {
                    return !1 === data.canBeSelected;
                });
            }, FluentListTableBaseComponent.prototype.itemCannotBeSelected = function(item) {
                return !1 === item.canBeSelected;
            }, FluentListTableBaseComponent.prototype.itemShouldBeDisplayAsChecked = function(item) {
                return this.itemCannotBeSelected(item) && item.isCheckedAndDisabled || this.selection.isSelected(this.uniqueItemKey(item));
            }, FluentListTableBaseComponent.prototype.isPartialSelected = function() {
                return this.selection.selected.length > 0 && !this.isAllSelected();
            }, FluentListTableBaseComponent.prototype.uniqueItemKey = function(item) {
                return getUniqueIdForFluentListItem(item);
            }, FluentListTableBaseComponent.prototype.toggleSelection = function(item) {
                this.selection.toggle(this.uniqueItemKey(item));
            }, FluentListTableBaseComponent.prototype.setFocusedRow = function(event, item) {
                this.focusedRowId$.next(!!event && this.uniqueItemKey(item));
            }, FluentListTableBaseComponent.prototype.setHoveredRow = function(item) {
                this.hoveredRowId$.next(!!item && this.uniqueItemKey(item));
            }, FluentListTableBaseComponent.prototype.isSelected = function(item) {
                var _this = this;
                return this.selection.changed.asObservable().pipe((0, startWith.O)(null), (0, operators_map.U)(function(changes) {
                    return _this.selection.isSelected(_this.uniqueItemKey(item));
                }));
            }, FluentListTableBaseComponent.prototype.onVirtualScrollChange = function() {
                this.cd.markForCheck();
            }, FluentListTableBaseComponent.prototype.onClickRow = function(item) {
                VisualsCommon_debug.fF.assertValue(item, "item must be defined"), this.clickRow.emit(item);
            }, FluentListTableBaseComponent.prototype.getProportionalColumFill = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var proportionalColumFillStrategy;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.proportionalColumFillStrategy$.pipe((0, operators_take.q)(1)).toPromise() ];

                          case 1:
                            return "NoProportional" === (proportionalColumFillStrategy = _a.sent()) ? [ 2, !1 ] : "Proportional" === proportionalColumFillStrategy ? [ 2, !0 ] : [ 2, this.canSeeAllColumnsWithoutScrollbar() ];
                        }
                    });
                });
            }, FluentListTableBaseComponent.prototype.getResponsiveColumns = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var responsiveColumnsStrategy;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.responsiveColumnsStrategy$.pipe((0, operators_take.q)(1)).toPromise() ];

                          case 1:
                            return "NoResponsive" === (responsiveColumnsStrategy = _a.sent()) ? [ 2, !1 ] : "Responsive" === responsiveColumnsStrategy ? [ 2, !0 ] : [ 2, this.canSeeAllColumnsWithoutScrollbar() ];
                        }
                    });
                });
            }, FluentListTableBaseComponent.prototype.canSeeAllColumnsWithoutScrollbar = function() {
                var _a;
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var allColumnsWidth, _i, _b, config, checkboxWidth;
                    return (0, tslib_es6.__generator)(this, function(_c) {
                        switch (_c.label) {
                          case 0:
                            allColumnsWidth = 0, _i = 0, _b = this.columnConfigs, _c.label = 1;

                          case 1:
                            return _i < _b.length ? [ 4, (config = _b[_i]).visible$.pipe((0, operators_take.q)(1)).toPromise() ] : [ 3, 4 ];

                          case 2:
                            _c.sent() && (allColumnsWidth += this.getColumnMinWidth(config.name)), _c.label = 3;

                          case 3:
                            return _i++, [ 3, 1 ];

                          case 4:
                            return checkboxWidth = this.allowSelection ? 32 : 0, [ 2, parseFloat(getComputedStyle(null === (_a = this.elementRef) || void 0 === _a ? void 0 : _a.nativeElement.parentElement).width) - 64 - checkboxWidth >= allColumnsWidth ];
                        }
                    });
                });
            }, FluentListTableBaseComponent.\u0275fac = function(t) {
                return new (t || FluentListTableBaseComponent)(core["\u0275\u0275directiveInject"](core.ElementRef), core["\u0275\u0275directiveInject"](feature_switch_service.vZ), core["\u0275\u0275directiveInject"](core.ChangeDetectorRef), core["\u0275\u0275directiveInject"](core.ElementRef), core["\u0275\u0275directiveInject"](a11y.Kd), core["\u0275\u0275directiveInject"](localization_service.o), core["\u0275\u0275directiveInject"](Telemetry.y0));
            }, FluentListTableBaseComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: FluentListTableBaseComponent,
                selectors: [ [ "fluent-list-table-base" ] ],
                viewQuery: function(rf, ctx) {
                    if (1 & rf && (core["\u0275\u0275viewQuery"](sort.YE, 5), core["\u0275\u0275viewQuery"](virtual_scroll.Sl, 5), 
                    core["\u0275\u0275viewQuery"](scrolling.N7, 5)), 2 & rf) {
                        var _t = void 0;
                        core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx.matSort = _t.first), 
                        core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx.virtualScroll = _t.first), 
                        core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx.cdkVirtualScrollViewPort = _t.first);
                    }
                },
                hostVars: 2,
                hostBindings: function(rf, ctx) {
                    1 & rf && core["\u0275\u0275listener"]("resize", function($event) {
                        return ctx.onResizeWhenNonProportionalColumFill($event);
                    }, !1, core["\u0275\u0275resolveWindow"]), 2 & rf && core["\u0275\u0275styleProp"]("min-width", ctx.tableMinWidth, "px");
                },
                inputs: {
                    dataSource: "dataSource",
                    selection: "selection",
                    allowSelection: "allowSelection",
                    columnConfigs$: "columnConfigs$",
                    focusedRowId$: "focusedRowId$",
                    hoveredRowId$: "hoveredRowId$",
                    defaultSort: "defaultSort",
                    useVirtualScroll: "useVirtualScroll",
                    proportionalColumFillStrategy$: "proportionalColumFillStrategy$",
                    hostedEnvironmentTelemetryHint: "hostedEnvironmentTelemetryHint",
                    refreshScroll$: "refreshScroll$",
                    responsiveColumnsStrategy$: "responsiveColumnsStrategy$",
                    seeAllDisplayName: "seeAllDisplayName",
                    seeAllAlwaysAvailable: "seeAllAlwaysAvailable",
                    columnWidthRecoverable: "columnWidthRecoverable",
                    scrollElement: "scrollElement",
                    resizeEvent$: "resizeEvent$",
                    containerHeightResizeEvent$: "containerHeightResizeEvent$"
                },
                outputs: {
                    onSortChange: "onSortChange",
                    clickRow: "clickRow",
                    onSeeAll: "onSeeAll",
                    onClickMasterCheckbox: "onClickMasterCheckbox"
                },
                features: [ core["\u0275\u0275ProvidersFeature"]([ {
                    provide: scrolling.yU,
                    useClass: FluentListVirtualScrollStrategy
                } ]) ],
                decls: 2,
                vars: 2,
                consts: [ [ "role", "status", 4, "ngIf" ], [ 4, "ngIf" ], [ "role", "status" ], [ 4, "ngIf", "ngIfElse" ], [ "virtualScrollList", "" ], [ "rowTemplate", "" ], [ "mat-table", "", 1, "fluent-mat-table", 3, "dataSource", "trackBy" ], [ 3, "matColumnDef", 4, "ngFor", "ngForOf", "ngForTrackBy" ], [ "mat-header-row", "", 4, "matHeaderRowDef" ], [ "mat-row", "", "cdkMonitorSubtreeFocus", "", 3, "mouseenter", "mouseleave", "cdkFocusChange", 4, "matRowDef", "matRowDefColumns" ], [ 3, "matColumnDef" ], [ "mat-header-cell", "", 3, "ngClass", 4, "matHeaderCellDef" ], [ "mat-cell", "", 4, "matCellDef" ], [ "mat-header-cell", "", 3, "ngClass" ], [ 3, "pbiTooltip", 4, "ngIf", "ngIfElse" ], [ "fileIcon", "" ], [ 3, "pbiTooltip" ], [ "fontIcon", "pbi-glyph-file", 1, "glyph-small", 3, "pbiTooltip" ], [ "mat-cell", "" ], [ 4, "ngTemplateOutlet", "ngTemplateOutletContext" ], [ "mat-header-row", "" ], [ "mat-row", "", "cdkMonitorSubtreeFocus", "", 3, "mouseenter", "mouseleave", "cdkFocusChange" ], [ "aria-live", "polite", "role", "grid", 1, "gridWrapper", 3, "ngClass" ], [ "cdkMonitorSubtreeFocus", "", "role", "row", "matSort", "", 1, "column-headers", 3, "matSortDisabled", "ngClass", "matSortChange" ], [ "role", "columnheader", "class", "col col-checkbox", 4, "ngIf" ], [ 4, "ngFor", "ngForOf" ], [ "id", "artifactContentView", "data-testid", "artifact-content-view", 3, "items", "ngClass", "parentScroll", "bufferAmount", "change", 4, "ngIf", "ngIfElse" ], [ "cdkScroll", "" ], [ "role", "columnheader", 1, "col", "col-checkbox" ], [ "tabindex", "0" ], [ "data-testid", "master-checkbox", "localizeTooltip", "Toggle_Select_All", 3, "ngClass", "disabled", "checked", "indeterminate", "ariaLabel", "keydown.enter", "onChange", 4, "ngIf" ], [ "data-testid", "master-checkbox", "localizeTooltip", "Toggle_Select_All", 3, "ngClass", "disabled", "checked", "indeterminate", "ariaLabel", "keydown.enter", "onChange" ], [ 3, "ngSwitch", 4, "ngIf" ], [ 3, "ngSwitch" ], [ "class", "column-header", "mwlResizable", "", 3, "ngClass", "ngStyle", "resizing", "resizeStart", "resizeEnd", 4, "ngSwitchCase" ], [ "class", "no-resize-header", 3, "ngClass", "ngStyle", 4, "ngSwitchCase" ], [ "mwlResizable", "", 1, "column-header", 3, "ngClass", "ngStyle", "resizing", "resizeStart", "resizeEnd" ], [ "class", "content", "role", "columnheader", "aria-live", "polite", 3, "mat-sort-header", "start", 4, "ngIf" ], [ "class", "content", "role", "columnheader", 4, "ngIf" ], [ "class", "seeAllLink", "tabindex", "0", "role", "link", 3, "localize", "accessible-click", 4, "ngIf" ], [ "class", "more-option", "role", "columnheader", "tabindex", "1", 3, "canSort", "canResize", "colName", "colCurWidth", "sortChange", "columnResize", 4, "ngIf" ], [ "class", "resize-handler", "data-testid", "fluentListHeaderResizeHandle", "mwlResizeHandle", "", 3, "resizeEdges", 4, "ngIf" ], [ "role", "columnheader", "aria-live", "polite", 1, "content", 3, "mat-sort-header", "start" ], [ "role", "columnheader", 1, "content" ], [ "tabindex", "0", "role", "link", 1, "seeAllLink", 3, "localize", "accessible-click" ], [ "role", "columnheader", "tabindex", "1", 1, "more-option", 3, "canSort", "canResize", "colName", "colCurWidth", "sortChange", "columnResize" ], [ "data-testid", "fluentListHeaderResizeHandle", "mwlResizeHandle", "", 1, "resize-handler", 3, "resizeEdges" ], [ 1, "no-resize-header", 3, "ngClass", "ngStyle" ], [ "class", "content", "role", "columnheader", 3, "mat-sort-header", 4, "ngIf" ], [ "role", "columnheader", 4, "ngIf" ], [ "class", "more-option", "role", "columnheader", "tabindex", "1", 3, "canSort", "canResize", "colName", "sortChange", "columnResize", 4, "ngIf" ], [ "role", "columnheader", 1, "content", 3, "mat-sort-header" ], [ "role", "columnheader" ], [ "fontIcon", "pbi-glyph-file", "aria-hidden", "false", 1, "glyph-small", 3, "pbiTooltip" ], [ "role", "columnheader", "tabindex", "1", 1, "more-option", 3, "canSort", "canResize", "colName", "sortChange", "columnResize" ], [ "id", "artifactContentView", "data-testid", "artifact-content-view", 3, "items", "ngClass", "parentScroll", "bufferAmount", "change" ], [ "scroll", "" ], [ 4, "ngFor", "ngForOf", "ngForTrackBy" ], [ "id", "artifactContentView", "data-testid", "artifact-content-view", 3, "ngClass" ], [ 4, "cdkVirtualFor", "cdkVirtualForOf", "cdkVirtualForTrackBy" ], [ "role", "row", "cdkMonitorSubtreeFocus", "", "data-testid", "workspace-list-content-view-row", 1, "row", 3, "ngClass", "cdkFocusChange", "mouseenter", "mouseleave", "click" ], [ "cdkMonitorElementFocus", "", "role", "cell", "class", "col col-checkbox", 4, "ngIf" ], [ "cdkMonitorElementFocus", "", "role", "cell", 1, "col", "col-checkbox" ], [ "tabindex", "0", 3, "ngStyle" ], [ "localizeTooltip", "Toggle_Select_Row", "data-testid", "checkbox-btn", 3, "ngClass", "disabled", "checked", "ariaLabel", "title", "click", "keydown.enter", "onChange" ], [ "otherCells", "" ], [ "aria-hidden", "true" ], [ "itemHoverCardPopper", "" ], [ 3, "itemHoverCardArgs", "mouseenter", "mouseleave", 4, "ngIf" ], [ "role", "cell", "class", "fluent-cell", "popperTrigger", "hover", 3, "popper", "popperDelay", "popperTimeout", "popperHideOnClickOutside", "popperHideOnScroll", "popperPlacement", "popperDisableStyle", "popperAppendTo", 4, "ngIf" ], [ "role", "cell", "popperTrigger", "hover", 1, "fluent-cell", 3, "popper", "popperDelay", "popperTimeout", "popperHideOnClickOutside", "popperHideOnScroll", "popperPlacement", "popperDisableStyle", "popperAppendTo" ], [ "role", "cell", "class", "fluent-cell", 4, "ngIf" ], [ "role", "cell", 1, "fluent-cell" ], [ 3, "itemHoverCardArgs", "mouseenter", "mouseleave" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275template"](0, FluentListTableBaseComponent_span_0_Template, 4, 3, "span", 0), 
                    core["\u0275\u0275template"](1, FluentListTableBaseComponent_ng_container_1_Template, 6, 2, "ng-container", 1)), 
                    2 & rf && (core["\u0275\u0275property"]("ngIf", ctx.items), core["\u0275\u0275advance"](1), 
                    core["\u0275\u0275property"]("ngIf", ctx.dataSource.data.length > 0));
                },
                styles: [ '[_nghost-%COMP%]{display:flex;flex-direction:column;height:100%;flex:1 1 auto}.gridWrapper[_ngcontent-%COMP%]{display:flex;flex-direction:column;height:100%;flex:1 1 auto}[tabindex][_ngcontent-%COMP%]{outline:none}.column-headers[_ngcontent-%COMP%]{flex:0 0 auto}  .mat-sort-header-arrow{color:var(--fluent-theme-neutral-primary-color, #323130)}  .mat-sort-header-pointer-left,   .mat-sort-header-pointer-right,   .mat-sort-header-stem{outline:1px solid transparent}.column-headers[_ngcontent-%COMP%], cdk-virtual-scroll-viewport[_ngcontent-%COMP%], virtual-scroll[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-regular, 400)}.column-headers.isResizing[_ngcontent-%COMP%], cdk-virtual-scroll-viewport.isResizing[_ngcontent-%COMP%], virtual-scroll.isResizing[_ngcontent-%COMP%]{pointer-events:none}.column-headers[_ngcontent-%COMP%], .row[_ngcontent-%COMP%], .mat-row[_ngcontent-%COMP%]{color:var(--fluent-theme-neutral-primary-color, #323130);border-bottom:1px solid var(--fluent-theme-neutral-light-color, #EDEBE9);display:flex;align-items:center}.column-headers[_ngcontent-%COMP%]     .mat-icon:before, .row[_ngcontent-%COMP%]     .mat-icon:before, .mat-row[_ngcontent-%COMP%]     .mat-icon:before{vertical-align:middle}.column-headers[_ngcontent-%COMP%]   .col[_ngcontent-%COMP%], .row[_ngcontent-%COMP%]   .col[_ngcontent-%COMP%], .mat-row[_ngcontent-%COMP%]   .col[_ngcontent-%COMP%]{box-sizing:border-box;overflow:hidden;text-overflow:ellipsis;white-space:break-spaces}.column-headers[_ngcontent-%COMP%]   .col.col-gitStatus[_ngcontent-%COMP%], .row[_ngcontent-%COMP%]   .col.col-gitStatus[_ngcontent-%COMP%], .mat-row[_ngcontent-%COMP%]   .col.col-gitStatus[_ngcontent-%COMP%], .column-headers[_ngcontent-%COMP%]   .col.col-checkbox[_ngcontent-%COMP%], .row[_ngcontent-%COMP%]   .col.col-checkbox[_ngcontent-%COMP%], .mat-row[_ngcontent-%COMP%]   .col.col-checkbox[_ngcontent-%COMP%]{padding:0 8px;height:100%;display:flex;align-items:center}.column-headers[_ngcontent-%COMP%]   .col.col-icon[_ngcontent-%COMP%], .row[_ngcontent-%COMP%]   .col.col-icon[_ngcontent-%COMP%], .mat-row[_ngcontent-%COMP%]   .col.col-icon[_ngcontent-%COMP%]{line-height:24px}html:not([dir="rtl"])[_nghost-%COMP%]   .column-headers[_ngcontent-%COMP%]   .col.col-icon[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .column-headers[_ngcontent-%COMP%]   .col.col-icon[_ngcontent-%COMP%], html:not([dir="rtl"])[_nghost-%COMP%]   .row[_ngcontent-%COMP%]   .col.col-icon[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .row[_ngcontent-%COMP%]   .col.col-icon[_ngcontent-%COMP%], html:not([dir="rtl"])[_nghost-%COMP%]   .mat-row[_ngcontent-%COMP%]   .col.col-icon[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .mat-row[_ngcontent-%COMP%]   .col.col-icon[_ngcontent-%COMP%]{padding-left:16px}html[dir="rtl"][_nghost-%COMP%]   .column-headers[_ngcontent-%COMP%]   .col.col-icon[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .column-headers[_ngcontent-%COMP%]   .col.col-icon[_ngcontent-%COMP%], html[dir="rtl"][_nghost-%COMP%]   .row[_ngcontent-%COMP%]   .col.col-icon[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .row[_ngcontent-%COMP%]   .col.col-icon[_ngcontent-%COMP%], html[dir="rtl"][_nghost-%COMP%]   .mat-row[_ngcontent-%COMP%]   .col.col-icon[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .mat-row[_ngcontent-%COMP%]   .col.col-icon[_ngcontent-%COMP%]{padding-right:16px}.column-headers[_ngcontent-%COMP%]   .col.col-name[_ngcontent-%COMP%], .row[_ngcontent-%COMP%]   .col.col-name[_ngcontent-%COMP%], .mat-row[_ngcontent-%COMP%]   .col.col-name[_ngcontent-%COMP%]{padding-left:10px}.column-headers[_ngcontent-%COMP%]   .col.col-last-refresh[_ngcontent-%COMP%], .row[_ngcontent-%COMP%]   .col.col-last-refresh[_ngcontent-%COMP%], .mat-row[_ngcontent-%COMP%]   .col.col-last-refresh[_ngcontent-%COMP%]{display:flex}.column-headers[_ngcontent-%COMP%]   .col.col-last-refresh[_ngcontent-%COMP%]     .datasetItemIcon .warning, .row[_ngcontent-%COMP%]   .col.col-last-refresh[_ngcontent-%COMP%]     .datasetItemIcon .warning, .mat-row[_ngcontent-%COMP%]   .col.col-last-refresh[_ngcontent-%COMP%]     .datasetItemIcon .warning{color:var(--fluent-theme-error-dark-alt-color, #D83B01)}.column-headers[_ngcontent-%COMP%]   .col.col-last-refresh[_ngcontent-%COMP%]     dataflow-icon-container button.pbi-glyph-warning, .row[_ngcontent-%COMP%]   .col.col-last-refresh[_ngcontent-%COMP%]     dataflow-icon-container button.pbi-glyph-warning, .mat-row[_ngcontent-%COMP%]   .col.col-last-refresh[_ngcontent-%COMP%]     dataflow-icon-container button.pbi-glyph-warning{background:none;border:none}.column-headers[_ngcontent-%COMP%]   .col.col-sensitivity[_ngcontent-%COMP%]     .labelName, .row[_ngcontent-%COMP%]   .col.col-sensitivity[_ngcontent-%COMP%]     .labelName, .mat-row[_ngcontent-%COMP%]   .col.col-sensitivity[_ngcontent-%COMP%]     .labelName{font-size:12px}.column-headers[_ngcontent-%COMP%]   .col.col-sensitivity[_ngcontent-%COMP%]     .labelName.emptyLabel:before, .row[_ngcontent-%COMP%]   .col.col-sensitivity[_ngcontent-%COMP%]     .labelName.emptyLabel:before, .mat-row[_ngcontent-%COMP%]   .col.col-sensitivity[_ngcontent-%COMP%]     .labelName.emptyLabel:before{content:" \\2014  "}.column-headers[_ngcontent-%COMP%]   a[_ngcontent-%COMP%], .row[_ngcontent-%COMP%]   a[_ngcontent-%COMP%], .mat-row[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{color:var(--fluent-theme-neutral-primary-color, #323130)}.column-headers[_ngcontent-%COMP%]   div.seeAllLink[_ngcontent-%COMP%], .row[_ngcontent-%COMP%]   div.seeAllLink[_ngcontent-%COMP%], .mat-row[_ngcontent-%COMP%]   div.seeAllLink[_ngcontent-%COMP%]{line-height:normal;color:#0078d4;text-decoration:none;font-size:14px;font-family:Segoe UI,wf_segoe-ui_normal,helvetica,arial,sans-serif;outline:none;cursor:pointer}.column-headers[_ngcontent-%COMP%]   div.seeAllLink[_ngcontent-%COMP%]:hover, .row[_ngcontent-%COMP%]   div.seeAllLink[_ngcontent-%COMP%]:hover, .mat-row[_ngcontent-%COMP%]   div.seeAllLink[_ngcontent-%COMP%]:hover, .column-headers[_ngcontent-%COMP%]   div.seeAllLink[_ngcontent-%COMP%]:focus, .row[_ngcontent-%COMP%]   div.seeAllLink[_ngcontent-%COMP%]:focus, .mat-row[_ngcontent-%COMP%]   div.seeAllLink[_ngcontent-%COMP%]:focus{text-decoration:underline;color:#005a9e}[_ngcontent-%COMP%]:not(.responsive-columns)   .column-headers.col-type[_ngcontent-%COMP%], [_ngcontent-%COMP%]:not(.responsive-columns)   .row.col-type[_ngcontent-%COMP%], [_ngcontent-%COMP%]:not(.responsive-columns)   .column-headers.col-owner[_ngcontent-%COMP%], [_ngcontent-%COMP%]:not(.responsive-columns)   .row.col-owner[_ngcontent-%COMP%], [_ngcontent-%COMP%]:not(.responsive-columns)   .column-headers.col-last-refresh[_ngcontent-%COMP%], [_ngcontent-%COMP%]:not(.responsive-columns)   .row.col-last-refresh[_ngcontent-%COMP%], [_ngcontent-%COMP%]:not(.responsive-columns)   .column-headers.col-endorsement[_ngcontent-%COMP%], [_ngcontent-%COMP%]:not(.responsive-columns)   .row.col-endorsement[_ngcontent-%COMP%], [_ngcontent-%COMP%]:not(.responsive-columns)   .column-headers.col-included-in-app[_ngcontent-%COMP%], [_ngcontent-%COMP%]:not(.responsive-columns)   .row.col-included-in-app[_ngcontent-%COMP%], [_ngcontent-%COMP%]:not(.responsive-columns)   .column-headers.col-attached-to[_ngcontent-%COMP%], [_ngcontent-%COMP%]:not(.responsive-columns)   .row.col-attached-to[_ngcontent-%COMP%], [_ngcontent-%COMP%]:not(.responsive-columns)   .column-headers.col-last-access[_ngcontent-%COMP%], [_ngcontent-%COMP%]:not(.responsive-columns)   .row.col-last-access[_ngcontent-%COMP%]{min-width:94px;max-width:200px}[_ngcontent-%COMP%]:not(.responsive-columns)   .column-headers.col-sensitivity[_ngcontent-%COMP%], [_ngcontent-%COMP%]:not(.responsive-columns)   .row.col-sensitivity[_ngcontent-%COMP%], [_ngcontent-%COMP%]:not(.responsive-columns)   .column-headers.col-location[_ngcontent-%COMP%], [_ngcontent-%COMP%]:not(.responsive-columns)   .row.col-location[_ngcontent-%COMP%]{min-width:154px;max-width:200px}[_ngcontent-%COMP%]:not(.responsive-columns)   .column-headers.col-name[_ngcontent-%COMP%], [_ngcontent-%COMP%]:not(.responsive-columns)   .row.col-name[_ngcontent-%COMP%]{min-width:342px}.column-headers.col-name[_ngcontent-%COMP%], .row.col-name[_ngcontent-%COMP%], .column-headers.col-type[_ngcontent-%COMP%], .row.col-type[_ngcontent-%COMP%], .column-headers.col-owner[_ngcontent-%COMP%], .row.col-owner[_ngcontent-%COMP%], .column-headers.col-last-refresh[_ngcontent-%COMP%], .row.col-last-refresh[_ngcontent-%COMP%], .column-headers.col-endorsement[_ngcontent-%COMP%], .row.col-endorsement[_ngcontent-%COMP%], .column-headers.col-sensitivity[_ngcontent-%COMP%], .row.col-sensitivity[_ngcontent-%COMP%], .column-headers.col-last-access[_ngcontent-%COMP%], .row.col-last-access[_ngcontent-%COMP%], .column-headers.col-location[_ngcontent-%COMP%], .row.col-location[_ngcontent-%COMP%]{flex:0 0 auto}.column-headers.col-included-in-app[_ngcontent-%COMP%], .row.col-included-in-app[_ngcontent-%COMP%], .column-headers.col-attached-to[_ngcontent-%COMP%], .row.col-attached-to[_ngcontent-%COMP%]{flex:1 1 auto}.fluent-cell[_ngcontent-%COMP%]{display:flex}.column-headers[_ngcontent-%COMP%]{margin:16px 32px 0;height:43px;font-family:Segoe UI Semibold,wf_segoe-ui_semibold,helvetica,arial,sans-serif}.column-headers[_ngcontent-%COMP%]   .col[_ngcontent-%COMP%]{height:43px;line-height:20px;display:flex;align-items:center}.column-headers[_ngcontent-%COMP%]   .col[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]{flex:1 1 auto;padding:0 8px;overflow:hidden}.column-headers[_ngcontent-%COMP%]   .col[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]:hover{background-color:var(--fluent-theme-neutral-lighter-color, #F3F2F1)}.column-headers[_ngcontent-%COMP%]   .col[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]:hover     .mat-sort-header-container{background:none}.column-headers[_ngcontent-%COMP%]   .col[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]     .mat-sort-header-container{overflow:hidden}.column-headers[_ngcontent-%COMP%]   .col[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{line-height:normal;border:1px solid transparent;overflow:hidden;text-overflow:ellipsis}.column-headers[_ngcontent-%COMP%]   .col[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]     .mat-sort-header-container[disabled]{color:inherit;background:none;border:none}.column-headers[_ngcontent-%COMP%]   .col[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]     .mat-sort-header-container:focus{outline:var(--focus-two-tone-outline-definition, auto 1px);outline-color:var(--focus-two-tone-outline-color, -webkit-focus-ring-color)}.column-headers[_ngcontent-%COMP%]   .col[_ngcontent-%COMP%]   .resize-handler[_ngcontent-%COMP%]{flex:0 0 16px;display:inline-block;position:relative;cursor:col-resize;height:33px;margin:0 -7px;text-align:center}.column-headers[_ngcontent-%COMP%]   .col[_ngcontent-%COMP%]   .resize-handler[_ngcontent-%COMP%]:after{content:"";width:1px;position:absolute;top:0;bottom:0;opacity:0;background-color:var(--fluent-theme-neutral-light-color, #EDEBE9)}.column-headers[_ngcontent-%COMP%]   .col[_ngcontent-%COMP%]   .resize-handler[_ngcontent-%COMP%]:hover:after{opacity:1}.column-headers[_ngcontent-%COMP%]   .col.resize-active[_ngcontent-%COMP%]   .resize-handler[_ngcontent-%COMP%]:after{opacity:1}.column-headers[_ngcontent-%COMP%]   .col[_ngcontent-%COMP%]   .more-option[_ngcontent-%COMP%]{height:20px;width:26px}.column-headers.cdk-focused.cdk-keyboard-focused[_ngcontent-%COMP%]   .checkbox[_ngcontent-%COMP%]{display:inline-flex;visibility:visible}.column-headers.cdk-focused.cdk-keyboard-focused[_ngcontent-%COMP%]     .tri-checkbox-input:focus-visible+label:after{display:none}.column-headers[_ngcontent-%COMP%]:hover   .checkbox[_ngcontent-%COMP%]{display:inline-flex;visibility:visible}[_nghost-%COMP%]   cdk-virtual-scroll-viewport[_ngcontent-%COMP%], [_nghost-%COMP%]   virtual-scroll[_ngcontent-%COMP%], [_nghost-%COMP%]   .fluent-mat-table[_ngcontent-%COMP%]{flex:1 1 auto;overflow-x:hidden}[_nghost-%COMP%]   cdk-virtual-scroll-viewport[_ngcontent-%COMP%]   [_ngcontent-%COMP%]:last-child, [_nghost-%COMP%]   virtual-scroll[_ngcontent-%COMP%]   [_ngcontent-%COMP%]:last-child, [_nghost-%COMP%]   .fluent-mat-table[_ngcontent-%COMP%]   [_ngcontent-%COMP%]:last-child{border-bottom:0}[_nghost-%COMP%]   cdk-virtual-scroll-viewport[_ngcontent-%COMP%]     .cdk-virtual-scroll-content-wrapper, [_nghost-%COMP%]   virtual-scroll[_ngcontent-%COMP%]     .cdk-virtual-scroll-content-wrapper, [_nghost-%COMP%]   .fluent-mat-table[_ngcontent-%COMP%]     .cdk-virtual-scroll-content-wrapper, [_nghost-%COMP%]   cdk-virtual-scroll-viewport[_ngcontent-%COMP%]     .scrollable-content, [_nghost-%COMP%]   virtual-scroll[_ngcontent-%COMP%]     .scrollable-content, [_nghost-%COMP%]   .fluent-mat-table[_ngcontent-%COMP%]     .scrollable-content{padding:0 32px;box-sizing:border-box}[_nghost-%COMP%]   cdk-virtual-scroll-viewport[_ngcontent-%COMP%]     .row, [_nghost-%COMP%]   virtual-scroll[_ngcontent-%COMP%]     .row, [_nghost-%COMP%]   .fluent-mat-table[_ngcontent-%COMP%]     .row, [_nghost-%COMP%]   cdk-virtual-scroll-viewport[_ngcontent-%COMP%]     .mat-row, [_nghost-%COMP%]   virtual-scroll[_ngcontent-%COMP%]     .mat-row, [_nghost-%COMP%]   .fluent-mat-table[_ngcontent-%COMP%]     .mat-row{height:44px}[_nghost-%COMP%]   cdk-virtual-scroll-viewport[_ngcontent-%COMP%]     .row .col, [_nghost-%COMP%]   virtual-scroll[_ngcontent-%COMP%]     .row .col, [_nghost-%COMP%]   .fluent-mat-table[_ngcontent-%COMP%]     .row .col, [_nghost-%COMP%]   cdk-virtual-scroll-viewport[_ngcontent-%COMP%]     .mat-row .col, [_nghost-%COMP%]   virtual-scroll[_ngcontent-%COMP%]     .mat-row .col, [_nghost-%COMP%]   .fluent-mat-table[_ngcontent-%COMP%]     .mat-row .col{padding:0 8px}[_nghost-%COMP%]   cdk-virtual-scroll-viewport[_ngcontent-%COMP%]     .row.hover, [_nghost-%COMP%]   virtual-scroll[_ngcontent-%COMP%]     .row.hover, [_nghost-%COMP%]   .fluent-mat-table[_ngcontent-%COMP%]     .row.hover, [_nghost-%COMP%]   cdk-virtual-scroll-viewport[_ngcontent-%COMP%]     .mat-row.hover, [_nghost-%COMP%]   virtual-scroll[_ngcontent-%COMP%]     .mat-row.hover, [_nghost-%COMP%]   .fluent-mat-table[_ngcontent-%COMP%]     .mat-row.hover, [_nghost-%COMP%]   cdk-virtual-scroll-viewport[_ngcontent-%COMP%]     .row:hover, [_nghost-%COMP%]   virtual-scroll[_ngcontent-%COMP%]     .row:hover, [_nghost-%COMP%]   .fluent-mat-table[_ngcontent-%COMP%]     .row:hover, [_nghost-%COMP%]   cdk-virtual-scroll-viewport[_ngcontent-%COMP%]     .mat-row:hover, [_nghost-%COMP%]   virtual-scroll[_ngcontent-%COMP%]     .mat-row:hover, [_nghost-%COMP%]   .fluent-mat-table[_ngcontent-%COMP%]     .mat-row:hover{background-color:var(--fluent-theme-neutral-lighter-color, #F3F2F1)}[_nghost-%COMP%]   cdk-virtual-scroll-viewport[_ngcontent-%COMP%]     .row.hover .checkbox, [_nghost-%COMP%]   virtual-scroll[_ngcontent-%COMP%]     .row.hover .checkbox, [_nghost-%COMP%]   .fluent-mat-table[_ngcontent-%COMP%]     .row.hover .checkbox, [_nghost-%COMP%]   cdk-virtual-scroll-viewport[_ngcontent-%COMP%]     .mat-row.hover .checkbox, [_nghost-%COMP%]   virtual-scroll[_ngcontent-%COMP%]     .mat-row.hover .checkbox, [_nghost-%COMP%]   .fluent-mat-table[_ngcontent-%COMP%]     .mat-row.hover .checkbox, [_nghost-%COMP%]   cdk-virtual-scroll-viewport[_ngcontent-%COMP%]     .row:hover .checkbox, [_nghost-%COMP%]   virtual-scroll[_ngcontent-%COMP%]     .row:hover .checkbox, [_nghost-%COMP%]   .fluent-mat-table[_ngcontent-%COMP%]     .row:hover .checkbox, [_nghost-%COMP%]   cdk-virtual-scroll-viewport[_ngcontent-%COMP%]     .mat-row:hover .checkbox, [_nghost-%COMP%]   virtual-scroll[_ngcontent-%COMP%]     .mat-row:hover .checkbox, [_nghost-%COMP%]   .fluent-mat-table[_ngcontent-%COMP%]     .mat-row:hover .checkbox{display:inline-flex;visibility:visible}[_nghost-%COMP%]   cdk-virtual-scroll-viewport[_ngcontent-%COMP%]     .row.cdk-focused.cdk-keyboard-focused .checkbox, [_nghost-%COMP%]   virtual-scroll[_ngcontent-%COMP%]     .row.cdk-focused.cdk-keyboard-focused .checkbox, [_nghost-%COMP%]   .fluent-mat-table[_ngcontent-%COMP%]     .row.cdk-focused.cdk-keyboard-focused .checkbox, [_nghost-%COMP%]   cdk-virtual-scroll-viewport[_ngcontent-%COMP%]     .mat-row.cdk-focused.cdk-keyboard-focused .checkbox, [_nghost-%COMP%]   virtual-scroll[_ngcontent-%COMP%]     .mat-row.cdk-focused.cdk-keyboard-focused .checkbox, [_nghost-%COMP%]   .fluent-mat-table[_ngcontent-%COMP%]     .mat-row.cdk-focused.cdk-keyboard-focused .checkbox{display:inline-flex;visibility:visible}[_nghost-%COMP%]   cdk-virtual-scroll-viewport[_ngcontent-%COMP%]     .row.cdk-focused.cdk-keyboard-focused   .tri-checkbox-input:focus-visible+label:after, [_nghost-%COMP%]   virtual-scroll[_ngcontent-%COMP%]     .row.cdk-focused.cdk-keyboard-focused   .tri-checkbox-input:focus-visible+label:after, [_nghost-%COMP%]   .fluent-mat-table[_ngcontent-%COMP%]     .row.cdk-focused.cdk-keyboard-focused   .tri-checkbox-input:focus-visible+label:after, [_nghost-%COMP%]   cdk-virtual-scroll-viewport[_ngcontent-%COMP%]     .mat-row.cdk-focused.cdk-keyboard-focused   .tri-checkbox-input:focus-visible+label:after, [_nghost-%COMP%]   virtual-scroll[_ngcontent-%COMP%]     .mat-row.cdk-focused.cdk-keyboard-focused   .tri-checkbox-input:focus-visible+label:after, [_nghost-%COMP%]   .fluent-mat-table[_ngcontent-%COMP%]     .mat-row.cdk-focused.cdk-keyboard-focused   .tri-checkbox-input:focus-visible+label:after{display:none}[_nghost-%COMP%]   cdk-virtual-scroll-viewport[_ngcontent-%COMP%]     .row.selected, [_nghost-%COMP%]   virtual-scroll[_ngcontent-%COMP%]     .row.selected, [_nghost-%COMP%]   .fluent-mat-table[_ngcontent-%COMP%]     .row.selected, [_nghost-%COMP%]   cdk-virtual-scroll-viewport[_ngcontent-%COMP%]     .mat-row.selected, [_nghost-%COMP%]   virtual-scroll[_ngcontent-%COMP%]     .mat-row.selected, [_nghost-%COMP%]   .fluent-mat-table[_ngcontent-%COMP%]     .mat-row.selected{background-color:var(--fluent-theme-neutral-lighter-color, #F3F2F1)}[_nghost-%COMP%]   cdk-virtual-scroll-viewport[_ngcontent-%COMP%]     .total-padding, [_nghost-%COMP%]   virtual-scroll[_ngcontent-%COMP%]     .total-padding, [_nghost-%COMP%]   .fluent-mat-table[_ngcontent-%COMP%]     .total-padding{padding-block-end:12px}.checkbox[_ngcontent-%COMP%]{display:inline-flex;visibility:hidden}.checkbox[_ngcontent-%COMP%]:hover{visibility:visible}.checkbox-checked[_ngcontent-%COMP%]{display:inline-flex;visibility:visible}[_nghost-%COMP%]     .tri-checkbox-input+label{padding:0!important}[_nghost-%COMP%]     .tri-checkbox-custom{margin-left:0!important}.fluent-mat-table[_ngcontent-%COMP%]{display:flex;flex-direction:column;overflow:hidden}.fluent-mat-table[_ngcontent-%COMP%]   .mat-row[_ngcontent-%COMP%], .fluent-mat-table[_ngcontent-%COMP%]   .mat-header-row[_ngcontent-%COMP%]{display:flex;width:100%;height:48px;border-width:0;border-bottom-width:1px;border-style:solid;border-color:var(--fluent-theme-neutral-light-color, #EDEBE9);align-items:center;box-sizing:border-box;font-size:14px}.fluent-mat-table[_ngcontent-%COMP%]   .mat-cell[_ngcontent-%COMP%], .fluent-mat-table[_ngcontent-%COMP%]   .mat-header-cell[_ngcontent-%COMP%]{font-size:14px;flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;height:inherit;border-width:0}html:not([dir="rtl"])[_nghost-%COMP%]   .fluent-mat-table[_ngcontent-%COMP%]   .mat-cell[_ngcontent-%COMP%]:first-of-type, html:not([dir="rtl"])   [_nghost-%COMP%]   .fluent-mat-table[_ngcontent-%COMP%]   .mat-cell[_ngcontent-%COMP%]:first-of-type, html:not([dir="rtl"])[_nghost-%COMP%]   .fluent-mat-table[_ngcontent-%COMP%]   .mat-header-cell[_ngcontent-%COMP%]:first-of-type, html:not([dir="rtl"])   [_nghost-%COMP%]   .fluent-mat-table[_ngcontent-%COMP%]   .mat-header-cell[_ngcontent-%COMP%]:first-of-type{padding-left:6px}html[dir="rtl"][_nghost-%COMP%]   .fluent-mat-table[_ngcontent-%COMP%]   .mat-cell[_ngcontent-%COMP%]:first-of-type, html[dir="rtl"]   [_nghost-%COMP%]   .fluent-mat-table[_ngcontent-%COMP%]   .mat-cell[_ngcontent-%COMP%]:first-of-type, html[dir="rtl"][_nghost-%COMP%]   .fluent-mat-table[_ngcontent-%COMP%]   .mat-header-cell[_ngcontent-%COMP%]:first-of-type, html[dir="rtl"]   [_nghost-%COMP%]   .fluent-mat-table[_ngcontent-%COMP%]   .mat-header-cell[_ngcontent-%COMP%]:first-of-type{padding-right:6px}.fluent-mat-table[_ngcontent-%COMP%]   .mat-cell.mat-column-icon[_ngcontent-%COMP%], .fluent-mat-table[_ngcontent-%COMP%]   .mat-header-cell.mat-column-icon[_ngcontent-%COMP%]{justify-content:center;line-height:24px}.fluent-mat-table[_ngcontent-%COMP%]   .mat-cell.mat-column-name[_ngcontent-%COMP%], .fluent-mat-table[_ngcontent-%COMP%]   .mat-header-cell.mat-column-name[_ngcontent-%COMP%], .fluent-mat-table[_ngcontent-%COMP%]   .mat-cell.mat-column-description[_ngcontent-%COMP%], .fluent-mat-table[_ngcontent-%COMP%]   .mat-header-cell.mat-column-description[_ngcontent-%COMP%]{flex:2}[_nghost-%COMP%]     .fluent-mat-table thead{display:flex;height:48px;font-family:Segoe UI Semibold,wf_segoe-ui_semibold,helvetica,arial,sans-serif}[_nghost-%COMP%]     .fluent-mat-table thead .mat-header-cell{color:var(--fluent-theme-neutral-primary-color, #323130)}[_nghost-%COMP%]     .fluent-mat-table thead .mat-header-cell.mat-header-icon{padding:0}[_nghost-%COMP%]     .fluent-mat-table tbody{display:flex;flex-direction:column}html:not([dir="rtl"])[_nghost-%COMP%]     .fluent-mat-table thead .mat-header-cell, html:not([dir="rtl"])   [_nghost-%COMP%]     .fluent-mat-table thead .mat-header-cell{padding-left:12px}html[dir="rtl"][_nghost-%COMP%]     .fluent-mat-table thead .mat-header-cell, html[dir="rtl"]   [_nghost-%COMP%]     .fluent-mat-table thead .mat-header-cell{padding-right:12px}  .no-resize-header:hover,   .column-header:hover{background-color:var(--fluent-theme-neutral-lighter-color, #F3F2F1)}  .no-resize-header:hover .column-option,   .column-header:hover .column-option{opacity:1}@media screen and (-ms-high-contrast: active),screen and (forced-colors: active){cdk-virtual-scroll-viewport[_ngcontent-%COMP%]   .row.hover[_ngcontent-%COMP%], virtual-scroll[_ngcontent-%COMP%]   .row.hover[_ngcontent-%COMP%], .fluent-mat-table[_ngcontent-%COMP%]   .row.hover[_ngcontent-%COMP%], cdk-virtual-scroll-viewport[_ngcontent-%COMP%]   .mat-row.hover[_ngcontent-%COMP%], virtual-scroll[_ngcontent-%COMP%]   .mat-row.hover[_ngcontent-%COMP%], .fluent-mat-table[_ngcontent-%COMP%]   .mat-row.hover[_ngcontent-%COMP%], cdk-virtual-scroll-viewport[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]:hover, virtual-scroll[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]:hover, .fluent-mat-table[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]:hover, cdk-virtual-scroll-viewport[_ngcontent-%COMP%]   .mat-row[_ngcontent-%COMP%]:hover, virtual-scroll[_ngcontent-%COMP%]   .mat-row[_ngcontent-%COMP%]:hover, .fluent-mat-table[_ngcontent-%COMP%]   .mat-row[_ngcontent-%COMP%]:hover{background-color:var(--globalColorhcHighlightText)}cdk-virtual-scroll-viewport[_ngcontent-%COMP%]   .row.selected[_ngcontent-%COMP%], virtual-scroll[_ngcontent-%COMP%]   .row.selected[_ngcontent-%COMP%], .fluent-mat-table[_ngcontent-%COMP%]   .row.selected[_ngcontent-%COMP%], cdk-virtual-scroll-viewport[_ngcontent-%COMP%]   .mat-row.selected[_ngcontent-%COMP%], virtual-scroll[_ngcontent-%COMP%]   .mat-row.selected[_ngcontent-%COMP%], .fluent-mat-table[_ngcontent-%COMP%]   .mat-row.selected[_ngcontent-%COMP%]{background-color:var(--globalColorhcHighlight)}}' ],
                changeDetection: 0
            }), FluentListTableBaseComponent;
        }(), TaskQueue = function() {
            function TaskQueue() {
                this.tasks = [], this.running = !1;
            }
            return TaskQueue.prototype.enqueue = function(task) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            if (this.tasks.push(task), this.running) return [ 3, 4 ];
                            this.running = !0, _a.label = 1;

                          case 1:
                            return this.tasks.length > 0 ? [ 4, (0, this.tasks[0])() ] : [ 3, 3 ];

                          case 2:
                            return _a.sent(), this.tasks.shift(), [ 3, 1 ];

                          case 3:
                            this.running = !1, _a.label = 4;

                          case 4:
                            return [ 2 ];
                        }
                    });
                });
            }, TaskQueue;
        }(), src = __webpack_require__(41838), mapToTridentArtifactType = ((_a = {})[0] = "unknown", 
        _a[1] = "dashboard", _a[2] = "report", _a[3] = "dataset", _a[4] = "workbook", _a[5] = "app", 
        _a[6] = "rdlreport", _a[7] = "workspace", _a[8] = "dataflow", _a[9] = "streaming-dataflow", 
        _a[10] = "scorecard", _a[11] = "datamart", _a[12] = "tile", _a[13] = "streaming-model", 
        _a[103] = "dataflow-gen2", _a[14] = "lake-warehouse", _a[15] = "data-warehouse", 
        _a[17] = "mounted-warehouse", _a[16] = "subfolder", _a);
        function toTridentArtifactType(artifactType) {
            return "number" == typeof artifactType ? mapToTridentArtifactType[artifactType] : artifactType;
        }
        (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, src.z_.dataflow), {
            glyphIcon: {
                name: "pbi-glyph-dataflow",
                color: "#99700A"
            }
        }), (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, src.z_["dataflow-gen2"]), {
            glyphIcon: {
                name: "pbi-glyph-dataflow",
                color: "#99700A"
            }
        }), (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, src.z_.datamart), {
            glyphIcon: {
                name: "pbi-glyph-datamart",
                color: "#484644"
            }
        }), (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, src.z_.dataset), {
            glyphIcon: {
                name: "pbi-glyph-database",
                color: "#C94F0F"
            }
        }), (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, src.z_.dataset), {
            glyphIcon: {
                name: "pbi-glyph-database",
                color: "#C94F0F"
            }
        }), (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, src.z_["data-warehouse"]), {
            glyphIcon: {
                name: "pbi-glyph-datamart",
                color: "#484644"
            }
        }), (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, src.z_["lake-warehouse"]), {
            glyphIcon: {
                name: "pbi-glyph-datamart",
                color: "#484644"
            }
        }), (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, src.z_["mounted-warehouse"]), {
            glyphIcon: {
                name: "pbi-glyph-datamart",
                color: "#484644"
            }
        }), (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, src.z_.report), {
            glyphIcon: {
                name: "pbi-glyph-barchart",
                color: "#12239E"
            }
        }), (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, src.z_.rdlreport), {
            glyphIcon: {
                name: "pbi-glyph-rdl-report",
                color: "#12239E"
            }
        }), (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, src.z_.dashboard), {
            glyphIcon: {
                name: "pbi-glyph-gauge",
                color: "#197278"
            }
        }), (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, src.z_.workbook), {
            glyphIcon: {
                name: "pbi-glyph-excel",
                color: "#217346"
            }
        }), (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, src.z_["streaming-dataflow"]), {
            glyphIcon: {
                name: "pbi-glyph-streamingdataflow",
                color: "#99700A"
            }
        }), (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, src.z_.scorecard), {
            glyphIcon: {
                name: "pbi-glyph-trophy2",
                color: "#99008A"
            }
        }), (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, src.z_["streaming-model"]), {
            glyphIcon: {
                name: "pbi-glyph-streamingdataset",
                color: "#C94F0F"
            }
        });
        var group_content_pack_selector = __webpack_require__(65858), helpers_group = __webpack_require__(55005), group_selector = __webpack_require__(74076), _isWorkspacePremium = function(capacitySkuTier) {
            return 1 === capacitySkuTier || 3 === capacitySkuTier || 4 === capacitySkuTier || 8 === capacitySkuTier || 7 === capacitySkuTier || 9 === capacitySkuTier;
        }, _isWorkspaceEditable = function(isReadOnly, isOwner) {
            return !(isReadOnly && !isOwner);
        }, isSelectedWorkspacePremium = (0, ngrx_store.P1)(group_selector.d_, _isWorkspacePremium), isSelectedWorkspaceEditable = ((0, 
        ngrx_store.P1)(group_selector.d_, function(capacitySkuTier) {
            return 4 === capacitySkuTier;
        }), (0, ngrx_store.P1)(group_selector.kM, group_selector.WG, _isWorkspaceEditable)), selectedWorkspaceIsFolder = (0, 
        ngrx_store.P1)(group_selector.S6, function(group) {
            return (0, helpers_group.qR)(group);
        }), isWorkspacePremium = ((0, ngrx_store.P1)(selectedWorkspaceIsFolder, group_selector.T, function(selectedWorkspaceIsFolder, inMyWorkspace) {
            return selectedWorkspaceIsFolder && !inMyWorkspace;
        }), function(groupId) {
            return (0, ngrx_store.P1)((0, group_selector.KB)(groupId), function(group) {
                return group && _isWorkspacePremium(group.capacitySkuTier);
            });
        }), isWorkspaceEditable = function(groupId) {
            return (0, ngrx_store.P1)((0, group_selector.Oh)(groupId), (0, group_selector.Jq)(groupId), _isWorkspaceEditable);
        }, userInfo = __webpack_require__(4444), constants = __webpack_require__(44527), contracts = __webpack_require__(7600), Utility_Utility = __webpack_require__(38078), subfolder_src = __webpack_require__(37976), from = __webpack_require__(82762), skipWhile = __webpack_require__(41198), fesm2022_router = __webpack_require__(9398);
        function failure(value) {
            return {
                kind: "Failure",
                value
            };
        }
        var dialog_service = __webpack_require__(58938), http_core_service = __webpack_require__(629), dataflow_helpers_service_commonGlobals = window, DataflowHelpersService = function() {
            function DataflowHelpersService(dialogService, featureSwitchService, httpService) {
                this.dialogService = dialogService, this.featureSwitchService = featureSwitchService, 
                this.httpService = httpService;
            }
            return DataflowHelpersService.prototype.checkCapacityAndShowDialog = function(workspaceObjectId, dialogTitle, capacityThrottledDialogContent, capacityPausedDialogContent) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var isCapacityActive, capacityActiveStatus, isCapacityThrottled, url, throttlingStatus;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return _a.trys.push([ 0, 2, , 3 ]), url = "metadata/dataflows/".concat(workspaceObjectId, "/capacityActive"), 
                            [ 4, this.httpService.get(url, this.httpService.powerbiRequestOptions()) ];

                          case 1:
                            return capacityActiveStatus = _a.sent().data, isCapacityActive = capacityActiveStatus.isActive, 
                            [ 3, 3 ];

                          case 2:
                            return _a.sent(), isCapacityActive = !0, [ 3, 3 ];

                          case 3:
                            if (!1 === isCapacityActive) return this.dialogService.showSimpleDialog(dialogTitle, capacityPausedDialogContent), 
                            [ 2, failure(void 0) ];
                            _a.label = 4;

                          case 4:
                            return _a.trys.push([ 4, 6, , 7 ]), url = "metadata/dataflows/".concat(workspaceObjectId, "/throttlingCheck"), 
                            [ 4, this.httpService.get(url, this.httpService.powerbiRequestOptions()) ];

                          case 5:
                            return throttlingStatus = _a.sent().data, isCapacityThrottled = throttlingStatus.isThrottled, 
                            [ 3, 7 ];

                          case 6:
                            return _a.sent(), isCapacityThrottled = !1, [ 3, 7 ];

                          case 7:
                            return isCapacityThrottled ? (this.dialogService.showSimpleDialog(dialogTitle, capacityThrottledDialogContent), 
                            [ 2, failure(void 0) ]) : [ 2, {
                                kind: "Success",
                                value: void 0
                            } ];
                        }
                    });
                });
            }, DataflowHelpersService.prototype.shouldDisableEditActions = function(cdsaModel, isSelectedWorkspacePremium) {
                var _a;
                return 4 === (null !== (_a = cdsaModel.currentRefreshStatus) && void 0 !== _a ? _a : cdsaModel.lastRefreshStatus) || 2 === cdsaModel.state || 2 === cdsaModel.publishStatus || !isSelectedWorkspacePremium && !this.featureSwitchService.featureSwitches.enableGen2DataflowsForSharedWorkspaces || !this.featureSwitchService.featureSwitches.cdsaFrontend || !(dataflow_helpers_service_commonGlobals.isTrident ? this.featureSwitchService.featureSwitches.enableGen2DataflowsInTrident : this.featureSwitchService.featureSwitches.enableGen2DataflowsInPowerBI);
            }, DataflowHelpersService.prototype.shouldDisableRefreshActions = function(cdsaModel, isSelectedWorkspacePremium) {
                var _a;
                return 4 === (null !== (_a = cdsaModel.currentRefreshStatus) && void 0 !== _a ? _a : cdsaModel.lastRefreshStatus) || 2 === cdsaModel.state || 2 === cdsaModel.publishStatus || 5 === cdsaModel.publishStatus || 4 === cdsaModel.publishStatus || null == cdsaModel.publishRequestCreationTime || !isSelectedWorkspacePremium && !this.featureSwitchService.featureSwitches.enableGen2DataflowsForSharedWorkspaces || !this.featureSwitchService.featureSwitches.cdsaFrontend || !(dataflow_helpers_service_commonGlobals.isTrident ? this.featureSwitchService.featureSwitches.enableGen2DataflowsInTrident : this.featureSwitchService.featureSwitches.enableGen2DataflowsInPowerBI);
            }, DataflowHelpersService.\u0275fac = function(t) {
                return new (t || DataflowHelpersService)(core["\u0275\u0275inject"](dialog_service.x), core["\u0275\u0275inject"](feature_switch_service.vZ), core["\u0275\u0275inject"](http_core_service.M));
            }, DataflowHelpersService.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: DataflowHelpersService,
                factory: DataflowHelpersService.\u0275fac,
                providedIn: "root"
            }), DataflowHelpersService;
        }(), user_info_selector = __webpack_require__(60134), promiseFactory = __webpack_require__(14463), FreezeUtility = __webpack_require__(94685), forkJoin = __webpack_require__(9936), isArray = __webpack_require__(2956), observable_combineLatest = __webpack_require__(59017), mergeMap = __webpack_require__(42195), user_info_service = __webpack_require__(79474), AppMetadataRefresh = telemetryHelpers.cx["PBI.AppMetadata.Refresh"] = (0, 
        telemetryHelpers.b1)("PBI.AppMetadata.Refresh"), GetHomeMetadata = telemetryHelpers.cx["PBI.GetHomeMetadata"] = (0, 
        telemetryHelpers.b1)("PBI.GetHomeMetadata"), GetGoalsHubMetadata = telemetryHelpers.cx["PBI.GetGoalsHubMetadata"] = (0, 
        telemetryHelpers.b1)("PBI.GetGoalsHubMetadata"), GetDatahubMetadata = telemetryHelpers.cx["PBI.GetDatahubMetadata"] = (0, 
        telemetryHelpers.b1)("PBI.GetDatahubMetadata"), Common = __webpack_require__(35911), DashboardImportResourcePackagesOnLoad = (telemetryHelpers.cx["PBI.Dashboard.RenameReport"] = (0, 
        telemetryHelpers.b1)("PBI.Dashboard.RenameReport"), telemetryHelpers.cx["PBI.Dashboard.DeleteReport"] = (0, 
        telemetryHelpers.b1)("PBI.Dashboard.DeleteReport"), telemetryHelpers.cx["PBI.Dashboard.InitializeNavigationPaneModels"] = (0, 
        telemetryHelpers.b1)("PBI.Dashboard.InitializeNavigationPaneModels"), telemetryHelpers.cx["PBI.Dashboard.RenameDataset"] = (0, 
        telemetryHelpers.b1)("PBI.Dashboard.RenameDataset"), telemetryHelpers.cx["PBI.Dashboard.UpdateModelQnaFeatures"] = (0, 
        telemetryHelpers.b1)("PBI.Dashboard.UpdateModelQnaFeatures"), telemetryHelpers.cx["PBI.Dashboard.UpdateFeaturedQuestions"] = (0, 
        telemetryHelpers.b1)("PBI.Dashboard.UpdateFeaturedQuestions"), telemetryHelpers.cx["PBI.Dashboard.DeleteDataset"] = (0, 
        telemetryHelpers.b1)("PBI.Dashboard.DeleteDataset"), telemetryHelpers.cx["PBI.Dashboard.AddUpdateDashboard"] = (0, 
        telemetryHelpers.b1)("PBI.Dashboard.AddUpdateDashboard"), telemetryHelpers.cx["PBI.Dashboard.RenameWorkbook"] = (0, 
        telemetryHelpers.b1)("PBI.Dashboard.RenameWorkbook"), telemetryHelpers.cx["PBI.Dashboard.RemoveWorkbook"] = (0, 
        telemetryHelpers.b1)("PBI.Dashboard.RemoveWorkbook"), telemetryHelpers.cx["PBI.Dashboard.GetWorkbookWopiAccessInformation"] = (0, 
        telemetryHelpers.b1)("PBI.Dashboard.GetWorkbookWopiAccessInformation"), telemetryHelpers.cx["PBI.Dashboard.ImportResourcePackagesOnLoad"] = (0, 
        telemetryHelpers.b1)("PBI.Dashboard.ImportResourcePackagesOnLoad")), TileConfigUpgradeTileConfig = (telemetryHelpers.cx["PBI.Dashboard.GetNavigationPanePackage"] = (0, 
        telemetryHelpers.b1)("PBI.Dashboard.GetNavigationPanePackage"), telemetryHelpers.cx["PBI.TileConfig.UpgradeTileConfig"] = (0, 
        telemetryHelpers.b1)("PBI.TileConfig.UpgradeTileConfig")), HttpRequestThrottled = (telemetryHelpers.cx["PBI.Permissions.UpdateArtifactVisibility"] = (0, 
        telemetryHelpers.b1)("PBI.Permissions.UpdateArtifactVisibility"), telemetryHelpers.cx["PBI.Datapool.UpdateProperties"] = (0, 
        telemetryHelpers.b1)("PBI.Datapool.UpdateProperties"), telemetryHelpers.cx["PBI.Http.RequestThrottled"] = (0, 
        telemetryHelpers.b1)("PBI.Http.RequestThrottled")), DataServicesCore_constants = (telemetryHelpers.cx["PBI.Dataset.GetSharedDatasets"] = (0, 
        telemetryHelpers.b1)("PBI.Dataset.GetSharedDatasets"), telemetryHelpers.cx["PBI.Dataset.GetReadonlySharedDatasets"] = (0, 
        telemetryHelpers.b1)("PBI.Dataset.GetReadonlySharedDatasets"), __webpack_require__(28717)), errorDetailsHelper = __webpack_require__(94853), observable_throwError = __webpack_require__(60225), operators_tap = __webpack_require__(17653), operators_catchError = __webpack_require__(59822), http_service = __webpack_require__(73875), actions_lifecycle = __webpack_require__(41134), Observable = __webpack_require__(58417), metadata_store_service_commonGlobals = window, MetadataStore = function() {
            function MetadataStore(store) {
                this.store = store, this.metadata = new Observable.y(function(observer) {
                    metadata_store_service_commonGlobals.initialDashboardContainer !== DataServicesCore_constants.ms ? observer.next(metadata_store_service_commonGlobals.initialDashboardContainer) : observer.error();
                });
            }
            return Object.defineProperty(MetadataStore.prototype, "initialMetadata", {
                get: function() {
                    return this.metadata;
                },
                enumerable: !1,
                configurable: !0
            }), MetadataStore.prototype.loadInitialMetadata = function(metadata) {
                this.store.dispatch(new actions_lifecycle.RA(metadata));
            }, MetadataStore.\u0275fac = function(t) {
                return new (t || MetadataStore)(core["\u0275\u0275inject"](ngrx_store.yh));
            }, MetadataStore.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: MetadataStore,
                factory: MetadataStore.\u0275fac,
                providedIn: "root"
            }), MetadataStore;
        }(), resource_packages_service = __webpack_require__(84916), visual_plugin_service = __webpack_require__(29866), app_metadata_service_commonGlobals = window, AppMetadataService = function() {
            function AppMetadataService(promiseFactory, featureSwitchService, httpService, metadataStore, ngZone, resourcePackagesService, telemetryService, visualPluginService, localizationService) {
                var _this = this;
                this.promiseFactory = promiseFactory, this.featureSwitchService = featureSwitchService, 
                this.httpService = httpService, this.metadataStore = metadataStore, this.ngZone = ngZone, 
                this.resourcePackagesService = resourcePackagesService, this.telemetryService = telemetryService, 
                this.visualPluginService = visualPluginService, this.localizationService = localizationService, 
                this.processedAppMetadata = !1, this.getAppMetadataDeferredWithoutForceRefresh = this.promiseFactory.defer(), 
                this.getAppMetadataDeferredWithoutForceRefresh.promise.then(function(result) {
                    _this.localizationService.loaded$.subscribe(function(loaded) {
                        loaded && _this.metadataStore.loadInitialMetadata(result);
                    });
                }), window.powerbi.notifyDashboardContainerReady = function(initialDashboardContainer) {
                    return _this.ngZone.run(function() {
                        return _this.populateAppMetadata(initialDashboardContainer);
                    });
                };
            }
            return AppMetadataService.prototype.getAppMetadata = function(forceRefresh) {
                var _this = this;
                if (void 0 === forceRefresh && (forceRefresh = !1), this.checkIfAppMetadataIsReady(), 
                forceRefresh && !this.getAppMetadataDeferredWithForceRefresh) {
                    var appRefreshEvent_1 = this.telemetryService.startEvent(AppMetadataRefresh), requestOptions = this.httpService.powerbiRequestOptions(appRefreshEvent_1.event, "RefreshingAppMetadata", {});
                    this.getAppMetadataDeferredWithForceRefresh = this.promiseFactory.defer(), this.httpService.get("powerbi/metadata/app", requestOptions).pipe((0, 
                    operators_tap.b)(function(result) {
                        _this.getAppMetadataDeferredWithForceRefresh.resolve(result.data), _this.metadataStore.loadInitialMetadata(result.data), 
                        appRefreshEvent_1.resolve();
                    }), (0, operators_catchError.K)(function(err) {
                        return _this.getAppMetadataDeferredWithForceRefresh.reject(err), appRefreshEvent_1.reject(), 
                        (0, observable_of.of)(err);
                    })).subscribe(function(result) {
                        return _this.checkIfAppMetadataIsReady();
                    });
                }
                return this.getMostRecentAppMetadataPromise();
            }, AppMetadataService.prototype.getHomeMetadata = function() {
                var getHomeMetadataEvent = this.telemetryService.startEvent(GetHomeMetadata), requestOptions = this.httpService.powerbiRequestOptions(getHomeMetadataEvent.event, "getHomeMetadata", {
                    groupObjectIdOverride: Common.fm
                });
                return this.httpService.get("metadata/app?preferReadOnlySession=true&cmd=home", requestOptions).pipe((0, 
                mergeMap.zg)(function(result) {
                    return getHomeMetadataEvent.resolve(), (0, observable_of.of)(result);
                }), (0, operators_catchError.K)(function(error) {
                    var errorDetails = (0, errorDetailsHelper.GB)(error.error, error.status);
                    return getHomeMetadataEvent.reject(errorDetails), (0, observable_of.of)(null);
                }));
            }, AppMetadataService.prototype.getGoalsHubMetadata = function(requestedSharedArtifactsCount) {
                var getGoalsHubMetadataEvent = this.telemetryService.startEvent(GetGoalsHubMetadata, {
                    requestedSharedArtifactsCount
                }), requestOptions = this.httpService.powerbiRequestOptions(getGoalsHubMetadataEvent.event, "getGoalsHubMetadata", {
                    groupObjectIdOverride: Common.fm
                });
                return this.httpService.get("metadata/app?preferReadOnlySession=true&cmd=goalshub&requestedSharedArtifactsCount=".concat(requestedSharedArtifactsCount), requestOptions).pipe((0, 
                mergeMap.zg)(function(result) {
                    return getGoalsHubMetadataEvent.resolve(), (0, observable_of.of)(result);
                }), (0, operators_catchError.K)(function(error) {
                    var errorDetails = (0, errorDetailsHelper.GB)(error.error, error.status);
                    return getGoalsHubMetadataEvent.reject(errorDetails), (0, observable_of.of)(null);
                }));
            }, AppMetadataService.prototype.getDatahubMetadata = function(apiVersion) {
                var getDatahubMetadataEvent = this.telemetryService.startEvent(GetDatahubMetadata), appMetadataUrl = _.isNil(apiVersion) || _.isEmpty(apiVersion) ? "metadata/datahub/app" : "metadata/datahub/".concat(apiVersion, "/app");
                return this.httpService.get(appMetadataUrl).pipe((0, mergeMap.zg)(function(result) {
                    return getDatahubMetadataEvent.resolve(), (0, observable_of.of)(result);
                }), (0, operators_catchError.K)(function(error) {
                    var errorDetails = (0, errorDetailsHelper.GB)(error.error, error.status);
                    return getDatahubMetadataEvent.reject(errorDetails), (0, observable_throwError._)(error);
                }));
            }, AppMetadataService.prototype.getMostRecentAppMetadataPromise = function() {
                return this.getAppMetadataDeferredWithForceRefresh && this.getAppMetadataDeferredWithForceRefresh.promise || this.getAppMetadataDeferredWithoutForceRefresh.promise;
            }, AppMetadataService.prototype.checkIfAppMetadataIsReady = function() {
                if (!this.processedAppMetadata) if (app_metadata_service_commonGlobals.initialDashboardContainer) {
                    if (app_metadata_service_commonGlobals.initialDashboardContainer === DataServicesCore_constants.JO) return;
                    app_metadata_service_commonGlobals.initialDashboardContainer !== DataServicesCore_constants.ms ? (this.processedAppMetadata = !0, 
                    this.populateAppMetadata(app_metadata_service_commonGlobals.initialDashboardContainer)) : (this.processedAppMetadata = !1, 
                    VisualsCommon_debug.fF.assertFail("Invalid initialDashboardContainer state: " + app_metadata_service_commonGlobals.initialDashboardContainer), 
                    this.getAppMetadataDeferredWithoutForceRefresh.reject());
                } else this.processedAppMetadata = !0, this.getAppMetadataDeferredWithoutForceRefresh.resolve(null);
            }, AppMetadataService.prototype.importResourcePackages = function(resourcePackages) {
                var _this = this;
                if (this.importResourcePackagesDeferred) return this.importResourcePackagesDeferred.promise;
                this.importResourcePackagesDeferred = this.promiseFactory.defer();
                var telemetryEvent_1, activeDashboardId = app_metadata_service_commonGlobals.initialDashboardContainer.activeDashboardId;
                return _.isEmpty(resourcePackages) ? (this.importResourcePackagesDeferred.resolve(null), 
                app_metadata_service_commonGlobals.initialDashboardContainer && activeDashboardId && this.telemetryService.logEvent(DashboardImportResourcePackagesOnLoad, {
                    dashboardId: activeDashboardId.toString(),
                    resourcePackagesCount: 0
                })) : (app_metadata_service_commonGlobals.initialDashboardContainer && activeDashboardId && (telemetryEvent_1 = this.telemetryService.startEvent(DashboardImportResourcePackagesOnLoad, {
                    dashboardId: activeDashboardId.toString(),
                    resourcePackagesCount: resourcePackages.length
                })), this.resourcePackagesService.registerPackages(resourcePackages), this.featureSwitchService.featureSwitches.disablePrivateCVPreloading ? (telemetryEvent_1 && telemetryEvent_1.resolve(), 
                this.importResourcePackagesDeferred.resolve(null)) : this.visualPluginService.ensurePlugins(resourcePackages, !1).catch(function() {
                    telemetryEvent_1 && telemetryEvent_1.reject();
                }).finally(function() {
                    telemetryEvent_1 && telemetryEvent_1.resolve(), _this.importResourcePackagesDeferred.resolve(null);
                })), this.importResourcePackagesDeferred.promise;
            }, AppMetadataService.prototype.populateAppMetadata = function(initialDashboardContainer) {
                var _this = this;
                if (this.featureSwitchService.registerFeatureSwitches(initialDashboardContainer.featureSwitches), 
                this.visualPluginService) return this.importResourcePackages(initialDashboardContainer.resourcePackages).finally(function() {
                    _this.getAppMetadataDeferredWithoutForceRefresh.resolve(initialDashboardContainer);
                });
                this.getAppMetadataDeferredWithoutForceRefresh.resolve(initialDashboardContainer);
            }, AppMetadataService.\u0275fac = function(t) {
                return new (t || AppMetadataService)(core["\u0275\u0275inject"](promiseFactory.t), core["\u0275\u0275inject"](feature_switch_service.vZ), core["\u0275\u0275inject"](http_service.O), core["\u0275\u0275inject"](MetadataStore), core["\u0275\u0275inject"](core.NgZone), core["\u0275\u0275inject"](resource_packages_service.o), core["\u0275\u0275inject"](Telemetry.y0), core["\u0275\u0275inject"](visual_plugin_service.D, 8), core["\u0275\u0275inject"](localization_service.o));
            }, AppMetadataService.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: AppMetadataService,
                factory: AppMetadataService.\u0275fac,
                providedIn: "root"
            }), AppMetadataService;
        }(), shell_capabilities_provider_commonGlobals = window, ShellCapabilitiesProvider = function() {
            function ShellCapabilitiesProvider() {}
            return ShellCapabilitiesProvider.prototype.getShellCapabilities = function(isMemberOrElevatedGuest, contentAuthoringEnabled, showPipelines, isGuest, fluentUISettings, disableOpenArtifactsinNewTab) {
                return (0, observable_of.of)({
                    appsSettings: {
                        showEditApps: isMemberOrElevatedGuest && contentAuthoringEnabled,
                        showGetApps: isMemberOrElevatedGuest && contentAuthoringEnabled
                    },
                    navBarSettings: {
                        showContentPacks: !isGuest && contentAuthoringEnabled,
                        showManageGateways: isMemberOrElevatedGuest && contentAuthoringEnabled,
                        showPublishToWeb: isMemberOrElevatedGuest && contentAuthoringEnabled
                    },
                    navPane: {
                        showHome: !0,
                        showFavorites: isMemberOrElevatedGuest,
                        showGetData: isMemberOrElevatedGuest && contentAuthoringEnabled,
                        showQuickAccessPane: isMemberOrElevatedGuest && contentAuthoringEnabled,
                        showPipelines: isMemberOrElevatedGuest && contentAuthoringEnabled && showPipelines,
                        showNavOnlyOnHome: !1,
                        closeNavPaneOnInit: !1
                    },
                    getDataPane: {
                        supportsOrgApp: isMemberOrElevatedGuest && contentAuthoringEnabled,
                        supportsServiceApp: isMemberOrElevatedGuest && contentAuthoringEnabled,
                        supportsFiles: isMemberOrElevatedGuest && contentAuthoringEnabled,
                        supportsDatabases: isMemberOrElevatedGuest && contentAuthoringEnabled,
                        supportsDataflows: isMemberOrElevatedGuest && contentAuthoringEnabled
                    },
                    workbookSettings: {
                        showBackButtonOnAppBar: !1
                    },
                    contentListSettings: {
                        supportsAnalyzeInExcel: !isGuest
                    },
                    dashboardSettings: {
                        disableDashboardRefresh: !1,
                        showPinButton: isMemberOrElevatedGuest && contentAuthoringEnabled,
                        alertingEnabled: !0,
                        inFocusModeEnabled: !0,
                        showComments: isMemberOrElevatedGuest
                    },
                    showFluentUI: !!fluentUISettings.showFluentUI,
                    showNavBarNotifications: isMemberOrElevatedGuest,
                    showNavBarSettings: isMemberOrElevatedGuest,
                    showNavPane: isMemberOrElevatedGuest,
                    showAppBar: void 0,
                    showO365Launcher: isMemberOrElevatedGuest && !shell_capabilities_provider_commonGlobals.privateLinkHeaderPresent,
                    supportsWorkspaces: isMemberOrElevatedGuest && contentAuthoringEnabled,
                    showArtifactSettings: isMemberOrElevatedGuest && contentAuthoringEnabled,
                    openArtifactsInNewTab: !!fluentUISettings.showFluentUI && !disableOpenArtifactsinNewTab,
                    showQuickCreate: isMemberOrElevatedGuest && contentAuthoringEnabled
                });
            }, ShellCapabilitiesProvider.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: ShellCapabilitiesProvider,
                factory: ShellCapabilitiesProvider.\u0275fac = function(t) {
                    return new (t || ShellCapabilitiesProvider);
                },
                providedIn: "root"
            }), ShellCapabilitiesProvider;
        }(), application_options = __webpack_require__(27887), SettingsEnterFullScreen = telemetryHelpers.cx["PBI.Settings.EnterFullScreen"] = (0, 
        telemetryHelpers.b1)("PBI.Settings.EnterFullScreen", {
            logExpAssignment: !0
        }), RouteCapabilitiesInjectionToken = new core.InjectionToken("RouteCapabilities"), QueryStringUtil = __webpack_require__(41288), operators_filter = __webpack_require__(59973), HostSupportsFullScreenInjectionToken = new core.InjectionToken("HostSupportsFullScreen"), FullScreenService = function() {
            function FullScreenService(hostSupportsFullscreen, document, notificationToast, routeCapabilitiesHelperService, telemetryService, router, activatedRoute) {
                var _this = this;
                this.hostSupportsFullscreen = hostSupportsFullscreen, this.document = document, 
                this.routeCapabilitiesHelperService = routeCapabilitiesHelperService, this.telemetryService = telemetryService, 
                this.router = router, this.activatedRoute = activatedRoute, this.changeListeners = [], 
                this._customFullScreenControleSubject = new BehaviorSubject.X(void 0), this.customFullScreenControl$ = this._customFullScreenControleSubject.asObservable(), 
                this._fullScreenEnabledSubject = new BehaviorSubject.X(!1), this.fullScreenEnabled$ = this._fullScreenEnabledSubject.asObservable(), 
                notificationToast && notificationToast.addNotificationFilter && notificationToast.addNotificationFilter(function(notification) {
                    return !_this.fullScreenMode;
                });
                for (var _i = 0, fullScreenEvents_1 = [ "fullscreenchange", "webkitfullscreenchange", "MSFullscreenChange", "mozfullscreenchange" ]; _i < fullScreenEvents_1.length; _i++) this.document.addEventListener(fullScreenEvents_1[_i], function(event) {
                    return _this.updateFullScreenFromBrowser();
                });
                this.fullScreenModeEnabled = !1, this.fitStyle = 0, this._enterFullScreenSupported = this.hostSupportsFullscreen, 
                this.routeCapabilitiesHelperService && this.routeCapabilitiesHelperService.getRouteCapabilities().subscribe(function(routeCapabilities) {
                    var oldValue = _this._enterFullScreenSupported;
                    _this._enterFullScreenSupported = _this.hostSupportsFullscreen || !!(routeCapabilities && routeCapabilities.navBar && routeCapabilities.navBar.isFullScreenSupported), 
                    oldValue !== _this._enterFullScreenSupported && _this.notifyListeners(function(listener) {
                        listener.onFullScreenSupportChanged && listener.onFullScreenSupportChanged(_this._enterFullScreenSupported);
                    });
                }), this.forceFullScreen() && this.enterFullScreen(), this.fullScreenCustomControlConfigSubscription = this.router.events.pipe((0, 
                operators_filter.h)(function(event) {
                    return event instanceof fesm2022_router.m2;
                }), (0, operators_map.U)(function(_) {
                    return _this.findCustomFullScreenControlConfig(_this.activatedRoute.snapshot);
                })).subscribe(function(customFullscreenControlConfig) {
                    _this.setCustomControl(customFullscreenControlConfig);
                });
            }
            return FullScreenService.prototype.ngOnDestroy = function() {
                this.fullScreenCustomControlConfigSubscription && this.fullScreenCustomControlConfigSubscription.unsubscribe();
            }, FullScreenService.prototype.subscribe = function(handler) {
                this.changeListeners.push(handler);
            }, FullScreenService.prototype.unsubscribe = function(handler) {
                _.pull(this.changeListeners, handler);
            }, FullScreenService.prototype.enterFullScreen = function(startingState) {
                void 0 !== startingState && this.telemetryService.logEvent(SettingsEnterFullScreen, {
                    startingState: QueryStringUtil.s.clearAllQueriesFromUrl(startingState)
                }), this.fullScreenMode || (this.setFullScreenMode(!0), this.fitStyle = 0);
            }, FullScreenService.prototype.exitFullScreen = function() {
                this.fullScreenMode && (this.setFullScreenMode(!1), this.fitStyle = 0);
            }, FullScreenService.prototype.toggleFullScreen = function() {
                this.fullScreenMode ? this.exitFullScreen() : this.enterFullScreen();
            }, Object.defineProperty(FullScreenService.prototype, "enterFullScreenSupported", {
                get: function() {
                    return this._enterFullScreenSupported;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(FullScreenService.prototype, "fullScreenMode", {
                get: function() {
                    return this.fullScreenModeEnabled;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(FullScreenService.prototype, "fitStyle", {
                get: function() {
                    return this._fitStyle;
                },
                set: function(style) {
                    this._fitStyle !== style && (this._fitStyle = style, this.notifyListeners(function(listener) {
                        return listener.onFitStyleChanged();
                    }));
                },
                enumerable: !1,
                configurable: !0
            }), FullScreenService.prototype.setCustomControl = function(controlConfig) {
                this._customFullScreenControleSubject.next(controlConfig);
            }, FullScreenService.prototype.notifyListeners = function(callback) {
                var handlers = this.changeListeners;
                if (!_.isEmpty(handlers) && callback) for (var index = handlers.length - 1; index >= 0; index--) callback(handlers[index]);
            }, FullScreenService.prototype.forceFullScreen = function() {
                return !!QueryStringUtil.s.getQueryStringValue("chromeless");
            }, FullScreenService.prototype.updateFullScreenFromBrowser = function() {
                var _this = this, enabled = null != (this.document.fullScreenElement || this.document.msFullscreenElement || this.document.mozFullScreenElement || this.document.webkitFullscreenElement);
                enabled !== this.fullScreenMode && setTimeout(function() {
                    enabled ? _this.enterFullScreen() : _this.exitFullScreen();
                });
            }, FullScreenService.prototype.setFullScreenMode = function(enabled) {
                var htmlElement = this.document.documentElement, body = this.document.body;
                if (htmlElement && body) {
                    if (enabled) {
                        if (!this._enterFullScreenSupported && !this.forceFullScreen()) return;
                        body.classList.add(FullScreenService.fullScreenCSSClass);
                        var requestFullScreen = htmlElement.requestFullscreen || htmlElement.msRequestFullscreen || htmlElement.webkitRequestFullscreen || htmlElement.mozRequestFullScreen;
                        requestFullScreen && requestFullScreen.call(htmlElement);
                    } else {
                        body.classList.remove(FullScreenService.fullScreenCSSClass);
                        var enterButton = body.querySelector(".enterFullScreenBtn");
                        enterButton && enterButton.blur();
                        var exit = this.document.exitFullscreen || this.document.msExitFullscreen || this.document.webkitExitFullscreen || this.document.mozCancelFullScreen;
                        exit && exit.call(this.document);
                    }
                    this.fullScreenModeEnabled = enabled, this.notifyListeners(function(listener) {
                        return listener.onFullScreenModeChanged();
                    }), this._fullScreenEnabledSubject.next(enabled);
                }
            }, FullScreenService.prototype.findCustomFullScreenControlConfig = function(node) {
                var deepestNode = this.findDeepestNodeWithLoadedRouteConfig(node);
                return this.findNodeWithResolvedFullScreenControl(deepestNode);
            }, FullScreenService.prototype.findDeepestNodeWithLoadedRouteConfig = function(node) {
                var _this = this, nodes = _(node.children).map(function(c) {
                    return _this.findDeepestNodeWithLoadedRouteConfig(c);
                }).filter(function(r) {
                    return !!r;
                }).value();
                return 1 === nodes.length ? nodes[0] : node.routeConfig ? node : void 0;
            }, FullScreenService.prototype.findNodeWithResolvedFullScreenControl = function(node) {
                if (node) return node.data && node.data.customFullscreenControlConfig || this.findNodeWithResolvedFullScreenControl(node.parent);
            }, FullScreenService.fullScreenCSSClass = "fullScreen", FullScreenService.\u0275fac = function(t) {
                return new (t || FullScreenService)(core["\u0275\u0275inject"](HostSupportsFullScreenInjectionToken, 8), core["\u0275\u0275inject"](common.DOCUMENT), core["\u0275\u0275inject"](notification_toast_service.Q), core["\u0275\u0275inject"](RouteCapabilitiesInjectionToken, 8), core["\u0275\u0275inject"](Telemetry.y0), core["\u0275\u0275inject"](fesm2022_router.F0), core["\u0275\u0275inject"](fesm2022_router.gz));
            }, FullScreenService.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: FullScreenService,
                factory: FullScreenService.\u0275fac,
                providedIn: "root"
            }), FullScreenService;
        }(), ShellCapabilitiesService = function() {
            function ShellCapabilitiesService(featureSwitchService, store, userInfo, appMetadataService, promiseFactory, shellCapabilitiesProvider, applicationOptions, fullScreenService) {
                this.featureSwitchService = featureSwitchService, this.store = store, this.userInfo = userInfo, 
                this.appMetadataService = appMetadataService, this.promiseFactory = promiseFactory, 
                this.shellCapabilitiesProvider = shellCapabilitiesProvider, this.applicationOptions = applicationOptions, 
                this.fullScreenService = fullScreenService, this.init();
            }
            return ShellCapabilitiesService.prototype.ensureCapabilitiesInitialized = function() {
                return this.initializationDeferred.promise;
            }, ShellCapabilitiesService.prototype.getCapabilities = function() {
                return VisualsCommon_debug.fF.assertValue(this.frozenCapabilities, "shellCapabilities was not initialized"), 
                this.frozenCapabilities;
            }, ShellCapabilitiesService.prototype.getCapabilities$ = function() {
                return this.shellCapabilities$;
            }, ShellCapabilitiesService.prototype.updateCapabilities = function(newCapabilities) {
                this.shellCapabilities$.next((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, this.shellCapabilities$.value), newCapabilities));
            }, ShellCapabilitiesService.prototype.init = function() {
                var _this = this;
                this.initializationDeferred = this.promiseFactory.defer(), this.shellCapabilities$ = new BehaviorSubject.X(void 0), 
                (0, forkJoin.D)(this.featureSwitchService.featureSwitches$, (0, from.D)(this.appMetadataService.getAppMetadata())).pipe(function() {
                    for (var _len = arguments.length, observables = new Array(_len), _key = 0; _key < _len; _key++) observables[_key] = arguments[_key];
                    var project = null;
                    return "function" == typeof observables[observables.length - 1] && (project = observables.pop()), 
                    1 === observables.length && (0, isArray.k)(observables[0]) && (observables = observables[0].slice()), 
                    function(source) {
                        return source.lift.call((0, from.D)([ source ].concat(observables)), new observable_combineLatest.Ms(project));
                    };
                }(this.store.select(user_info_selector.mc).pipe((0, skipWhile.n)(function(fluentUIUserSetting) {
                    return !fluentUIUserSetting;
                }))), (0, mergeMap.zg)(function(_a) {
                    var _b = _a[0], featureSwitches = _b[0], appMetadata = _b[1], isGuest = !!_this.userInfo.isGuestUser, userMetadata = appMetadata && appMetadata.userMetadata;
                    return _this.shellCapabilitiesProvider.getShellCapabilities(!isGuest || isGuest && !!featureSwitches.elevatedGuestsTenantEnabled, !!featureSwitches.contentAuthoringUIEnabled, _this.applicationOptions.isE2ERun || userMetadata && userMetadata.userHasPipelines || (null == userMetadata ? void 0 : userMetadata.userIsFolderAdmin) && (_this.userInfo.isProPlusUser || _this.userInfo.isPremiumUser && appMetadata.tenantHasNonPPUCapacities), isGuest, _a[1], !featureSwitches.openArtifactsInNewTab || _this.applicationOptions.isE2ERun || _this.fullScreenService.fullScreenMode);
                })).subscribe(this.shellCapabilities$), this.shellCapabilities$.pipe((0, skipWhile.n)(function(capabilities) {
                    return !capabilities;
                })).subscribe(function(capabilities) {
                    _this.frozenCapabilities || (_this.freeze(capabilities), _this.initializationDeferred.resolve(_this));
                });
            }, ShellCapabilitiesService.prototype.freeze = function(capabilities) {
                (0, FreezeUtility._)(capabilities), this.frozenCapabilities = capabilities;
            }, ShellCapabilitiesService.\u0275fac = function(t) {
                return new (t || ShellCapabilitiesService)(core["\u0275\u0275inject"](feature_switch_service.vZ), core["\u0275\u0275inject"](ngrx_store.yh), core["\u0275\u0275inject"](user_info_service.a), core["\u0275\u0275inject"](AppMetadataService), core["\u0275\u0275inject"](promiseFactory.t), core["\u0275\u0275inject"](ShellCapabilitiesProvider), core["\u0275\u0275inject"](application_options.V), core["\u0275\u0275inject"](FullScreenService));
            }, ShellCapabilitiesService.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: ShellCapabilitiesService,
                factory: ShellCapabilitiesService.\u0275fac,
                providedIn: "root"
            }), ShellCapabilitiesService;
        }(), FavoriteAdd = telemetryHelpers.cx["PBI.Favorite.Add"] = (0, telemetryHelpers.b1)("PBI.Favorite.Add"), FavoriteDelete = telemetryHelpers.cx["PBI.Favorite.Delete"] = (0, 
        telemetryHelpers.b1)("PBI.Favorite.Delete"), favorite = __webpack_require__(14225), favorite_actions_src = __webpack_require__(43419), first = __webpack_require__(88255), tri_svg_icon_component = __webpack_require__(74913);
        function FavoriteStarComponent_ng_container_0_ng_container_3_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275elementContainer"](0);
        }
        function FavoriteStarComponent_ng_container_0_Template(rf, ctx) {
            if (1 & rf) {
                var _r7 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "button", 3), 
                core["\u0275\u0275listener"]("click", function($event) {
                    core["\u0275\u0275restoreView"](_r7);
                    var ctx_r6 = core["\u0275\u0275nextContext"]();
                    return $event.stopPropagation(), core["\u0275\u0275resetView"](ctx_r6.toggleFavorite());
                }), core["\u0275\u0275pipe"](2, "localize"), core["\u0275\u0275template"](3, FavoriteStarComponent_ng_container_0_ng_container_3_Template, 1, 0, "ng-container", 4), 
                core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementContainerEnd"]();
            }
            if (2 & rf) {
                var ctx_r0 = core["\u0275\u0275nextContext"](), _r3 = core["\u0275\u0275reference"](4);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("pbiTooltip", core["\u0275\u0275pipeBind1"](2, 4, null != ctx_r0.item && ctx_r0.item.favoriteId ? "Artifact_UnFavorite" : "Artifact_Favorite"))("pbiTooltipDisabled", ctx_r0.showLabel), 
                core["\u0275\u0275attribute"]("aria-checked", !(null == ctx_r0.item || !ctx_r0.item.favoriteId)), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngTemplateOutlet", _r3);
            }
        }
        function FavoriteStarComponent_ng_template_1_ng_container_0_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275elementContainer"](0);
        }
        function FavoriteStarComponent_ng_template_1_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275template"](0, FavoriteStarComponent_ng_template_1_ng_container_0_Template, 1, 0, "ng-container", 4), 
            2 & rf) {
                core["\u0275\u0275nextContext"]();
                var _r3 = core["\u0275\u0275reference"](4);
                core["\u0275\u0275property"]("ngTemplateOutlet", _r3);
            }
        }
        var favorite_star_component_c0 = function(a0, a1) {
            return {
                "pbi-glyph-favoritestar": a0,
                "pbi-glyph-favoritefilled": a1
            };
        };
        function FavoriteStarComponent_ng_template_3_mat_icon_0_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "mat-icon", 8), 2 & rf) {
                var ctx_r9 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275property"]("ngClass", core["\u0275\u0275pureFunction2"](1, favorite_star_component_c0, !(null != ctx_r9.item && ctx_r9.item.favoriteId), !(null == ctx_r9.item || !ctx_r9.item.favoriteId)));
            }
        }
        function FavoriteStarComponent_ng_template_3_ng_template_1_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "tri-svg-icon", 9), 2 & rf) {
                var ctx_r11 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275property"]("name", null != ctx_r11.item && ctx_r11.item.favoriteId ? "star_20_filled" : "star_20_regular");
            }
        }
        function FavoriteStarComponent_ng_template_3_span_3_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "span", 10), 2 & rf) {
                var ctx_r12 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275property"]("localize", null != ctx_r12.item && ctx_r12.item.favoriteId ? "Artifact_UnFavorite" : "Artifact_Favorite");
            }
        }
        function FavoriteStarComponent_ng_template_3_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275template"](0, FavoriteStarComponent_ng_template_3_mat_icon_0_Template, 1, 4, "mat-icon", 5), 
            core["\u0275\u0275template"](1, FavoriteStarComponent_ng_template_3_ng_template_1_Template, 1, 1, "ng-template", null, 6, core["\u0275\u0275templateRefExtractor"]), 
            core["\u0275\u0275template"](3, FavoriteStarComponent_ng_template_3_span_3_Template, 1, 1, "span", 7)), 
            2 & rf) {
                var _r10 = core["\u0275\u0275reference"](2), ctx_r4 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("ngIf", !ctx_r4.tridentStyle)("ngIfElse", _r10), core["\u0275\u0275advance"](3), 
                core["\u0275\u0275property"]("ngIf", ctx_r4.showLabel);
            }
        }
        var FavoriteStarComponent = function() {
            function FavoriteStarComponent(store, telemetryService) {
                var _a;
                this.store = store, this.telemetryService = telemetryService, this.onFavoriteToggle = new core.EventEmitter, 
                this.TelemetryTypeMap = ((_a = {})[contracts.nW.Dashboard] = "Dashboard", _a[contracts.nW.Report] = "Report", 
                _a[contracts.nW.App] = "App", _a[contracts.nW.RdlReport] = "RdlReport", _a[contracts.nW.ResourcePackage] = "ResourcePackage", 
                _a[contracts.nW.Artifact] = "Artifact", _a[contracts.nW.Datamart] = "Datamart", 
                _a);
            }
            return FavoriteStarComponent.prototype.toggleFavorite = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var artifactUniqueId, artifactId, telemetryEvent, currentGroupId_1;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        if (this.onFavoriteToggle.emit({
                            item: this.item,
                            type: this.type
                        }), artifactUniqueId = this.type === contracts.nW.App ? this.item.packageId : this.item.objectId, 
                        artifactId = this.type === contracts.nW.App ? this.item.packageId : this.item.id, 
                        this.item.favoriteId) {
                            if (-1 === this.item.favoriteId) return [ 2 ];
                            if (telemetryEvent = this.telemetryService.startEvent(FavoriteDelete, {
                                numericId: artifactId,
                                objectId: this.item.objectId,
                                groupId: this.item.workspaceId,
                                favoriteType: this.TelemetryTypeMap[this.type],
                                actionSource: this.actionSource
                            }), this.type === contracts.nW.Artifact) return [ 2, this.store.dispatch(favorite_actions_src.HG({
                                objectId: this.item.contract.objectId,
                                favoriteId: this.item.favoriteId,
                                telemetryEvent
                            })) ];
                            this.store.dispatch(new favorite.HG({
                                favoriteId: this.item.favoriteId,
                                artifactUniqueId,
                                favoriteType: this.type,
                                workspaceId: this.item.workspaceId,
                                telemetryEvent
                            }));
                        } else {
                            if (telemetryEvent = this.telemetryService.startEvent(FavoriteAdd, {
                                numericId: artifactId,
                                objectId: this.item.objectId,
                                groupId: this.item.workspaceId,
                                favoriteType: this.TelemetryTypeMap[this.type],
                                actionSource: this.actionSource
                            }), this.type === contracts.nW.Artifact) return [ 2, this.store.dispatch(favorite_actions_src.mm({
                                objectId: this.item.contract.objectId,
                                telemetryEvent
                            })) ];
                            if (!this.item.id && this.type !== contracts.nW.App) return [ 2, this.store.dispatch(new favorite.kd({
                                artifactUniqueId,
                                favoriteType: this.type,
                                workspaceId: this.item.workspaceId,
                                telemetryEvent
                            })) ];
                            this.store.select(group_selector.CW).pipe((0, first.P)(), (0, operators_map.U)(function(selectedGroupId) {
                                currentGroupId_1 = selectedGroupId;
                            })).subscribe(), telemetryEvent.event.info.groupId = this.item.workspaceId || currentGroupId_1, 
                            this.store.dispatch(new favorite.mm({
                                artifactId,
                                artifactUniqueId,
                                favoriteType: this.type,
                                workspaceId: this.item.workspaceId || currentGroupId_1,
                                telemetryEvent
                            }));
                        }
                        return [ 2 ];
                    });
                });
            }, FavoriteStarComponent.\u0275fac = function(t) {
                return new (t || FavoriteStarComponent)(core["\u0275\u0275directiveInject"](ngrx_store.yh), core["\u0275\u0275directiveInject"](Telemetry.y0));
            }, FavoriteStarComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: FavoriteStarComponent,
                selectors: [ [ "favorite-star" ] ],
                inputs: {
                    item: "item",
                    type: "type",
                    showLabel: "showLabel",
                    actionSource: "actionSource",
                    tridentStyle: "tridentStyle",
                    showButtonContentOnly: "showButtonContentOnly"
                },
                outputs: {
                    onFavoriteToggle: "onFavoriteToggle"
                },
                decls: 5,
                vars: 2,
                consts: [ [ 4, "ngIf", "ngIfElse" ], [ "showContentOnly", "" ], [ "buttonContent", "" ], [ "role", "checkbox", "data-testid", "favorite-button", 3, "pbiTooltip", "pbiTooltipDisabled", "click" ], [ 4, "ngTemplateOutlet" ], [ "class", "glyphicon glyph-small", "fontIcon", "pbi-glyph-favoritestar", 3, "ngClass", 4, "ngIf", "ngIfElse" ], [ "triIcon", "" ], [ 3, "localize", 4, "ngIf" ], [ "fontIcon", "pbi-glyph-favoritestar", 1, "glyphicon", "glyph-small", 3, "ngClass" ], [ 3, "name" ], [ 3, "localize" ] ],
                template: function(rf, ctx) {
                    if (1 & rf && (core["\u0275\u0275template"](0, FavoriteStarComponent_ng_container_0_Template, 4, 6, "ng-container", 0), 
                    core["\u0275\u0275template"](1, FavoriteStarComponent_ng_template_1_Template, 1, 1, "ng-template", null, 1, core["\u0275\u0275templateRefExtractor"]), 
                    core["\u0275\u0275template"](3, FavoriteStarComponent_ng_template_3_Template, 4, 3, "ng-template", null, 2, core["\u0275\u0275templateRefExtractor"])), 
                    2 & rf) {
                        var _r1 = core["\u0275\u0275reference"](2);
                        core["\u0275\u0275property"]("ngIf", !ctx.showButtonContentOnly)("ngIfElse", _r1);
                    }
                },
                dependencies: [ common.NgClass, common.NgIf, common.NgTemplateOutlet, localize_directive.X, icon.Hw, pbi_tooltip_directive.V, tri_svg_icon_component.M, localize_pipe.F ],
                styles: [ 'button[_ngcontent-%COMP%]{background:none;border:none;padding:0}button[_ngcontent-%COMP%]:focus:hover, button[_ngcontent-%COMP%]:focus:active{background:none}html[data-focus-source="key"][_nghost-%COMP%] button:focus   [_ngcontent-%COMP%]:before, html[data-focus-source="key"]   [_nghost-%COMP%]   button[_ngcontent-%COMP%]:focus   [_ngcontent-%COMP%]:before{outline:var(--focus-two-tone-outline-definition, auto 1px);outline-color:var(--focus-two-tone-outline-color, -webkit-focus-ring-color)}button[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-regular, 400)}button[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]{vertical-align:middle}.hover-display[_nghost-%COMP%]   button[_ngcontent-%COMP%]:focus{opacity:1}.noFocusBorder[_nghost-%COMP%]   button[_ngcontent-%COMP%]:focus   mat-icon[_ngcontent-%COMP%]:before{border:none;box-shadow:none}.cdk-keyboard-focused[_nghost-%COMP%]   mat-icon[_ngcontent-%COMP%]:before, .cdk-program-focused[_nghost-%COMP%]   mat-icon[_ngcontent-%COMP%]:before{outline:var(--focus-two-tone-outline-definition, auto 1px);outline-color:var(--focus-two-tone-outline-color, -webkit-focus-ring-color)}' ],
                changeDetection: 0
            }), FavoriteStarComponent;
        }(), endorsement_badge_component = __webpack_require__(65818), helpers_app = __webpack_require__(91480), lazy_provider = __webpack_require__(57786), legacy_menu = __webpack_require__(55710), pbi_spinner_component = __webpack_require__(24326), app_context_menu_component_c0 = [ "appMenu" ];
        function AppContextMenuComponent_mat_icon_2_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "mat-icon", 8), 2 & rf) {
                var ctx_r1 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275propertyInterpolate"]("fontIcon", ctx_r1.menuIcon);
            }
        }
        function AppContextMenuComponent_tri_svg_icon_3_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "tri-svg-icon", 9), 2 & rf) {
                var ctx_r2 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("name", ctx_r2.triMenuIcon);
            }
        }
        function AppContextMenuComponent_span_4_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "span"), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r3 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate"](ctx_r3.label);
            }
        }
        function AppContextMenuComponent_ng_template_7_ng_container_1_div_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r11 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div", 14)(1, "button", 15), core["\u0275\u0275listener"]("click", function() {
                    var item_r9 = core["\u0275\u0275restoreView"](_r11).$implicit, ctx_r10 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r10.clickHandler(item_r9));
                }), core["\u0275\u0275elementStart"](2, "span"), core["\u0275\u0275text"](3), core["\u0275\u0275pipe"](4, "async"), 
                core["\u0275\u0275elementEnd"]()()();
            }
            if (2 & rf) {
                var item_r9 = ctx.$implicit;
                core["\u0275\u0275property"]("pbiTooltip", item_r9.disabled ? item_r9.disabledTooltip : item_r9.tooltip), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("disabled", !!item_r9.disabled), 
                core["\u0275\u0275attribute"]("data-testid", "appContextMenuItem." + item_r9.text), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](item_r9.text || core["\u0275\u0275pipeBind1"](4, 4, item_r9.text$));
            }
        }
        function AppContextMenuComponent_ng_template_7_ng_container_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, AppContextMenuComponent_ng_template_7_ng_container_1_div_1_Template, 5, 6, "div", 13), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var ctx_r6 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngForOf", ctx_r6.items);
            }
        }
        function AppContextMenuComponent_ng_template_7_pbi_spinner_2_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "pbi-spinner", 16);
        }
        function AppContextMenuComponent_ng_template_7_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0, 10), core["\u0275\u0275template"](1, AppContextMenuComponent_ng_template_7_ng_container_1_Template, 2, 1, "ng-container", 11), 
            core["\u0275\u0275template"](2, AppContextMenuComponent_ng_template_7_pbi_spinner_2_Template, 1, 0, "pbi-spinner", 12), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var ctx_r5 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("ngSwitch", !!ctx_r5.items && ctx_r5.items.length > 0), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", !0), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", !1);
            }
        }
        var app_context_menu_component_c1 = function(a0) {
            return {
                active: a0
            };
        }, defaultActions = [ 3 ], AppContextMenuComponent = function() {
            function AppContextMenuComponent(lazyProvider, changeDetectorRef) {
                this.lazyProvider = lazyProvider, this.changeDetectorRef = changeDetectorRef, this.currentMenuItemIdChange = new core.EventEmitter, 
                this.onMenuOpenedEvent = new core.EventEmitter, this.executionRun = new core.EventEmitter;
            }
            return AppContextMenuComponent.prototype.ngOnInit = function() {
                (0, Common.mv)(this.app, "App cannotbe null");
            }, AppContextMenuComponent.prototype.onMenuOpened = function() {
                var _a;
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var _b, _c;
                    return (0, tslib_es6.__generator)(this, function(_d) {
                        switch (_d.label) {
                          case 0:
                            return this.currentMenuItemId = (0, helpers_app.EL)(this.app), this.currentMenuItemIdChange.emit(this.currentMenuItemId), 
                            this.appActionsService ? [ 3, 2 ] : (_b = this, [ 4, this.lazyProvider.get("@powerbi/ArtifactActions/artifact-actions.module#ArtifactActionsModule", "AppActionsService") ]);

                          case 1:
                            _b.appActionsService = _d.sent(), _d.label = 2;

                          case 2:
                            return _c = this, [ 4, this.appActionsService.getMenuItems(this.app, this.availableActions || defaultActions, this.callingContext) ];

                          case 3:
                            return _c.items = _d.sent(), this.onMenuOpenedEvent.emit(this.items), null === (_a = this.menu) || void 0 === _a || _a.focusFirstItem(), 
                            this.changeDetectorRef.markForCheck(), [ 2 ];
                        }
                    });
                });
            }, AppContextMenuComponent.prototype.onMenuClosed = function() {
                this.currentMenuItemId = null, this.currentMenuItemIdChange.emit(this.currentMenuItemId);
            }, AppContextMenuComponent.prototype.clickHandler = function(item) {
                item.execute(), this.executionRun.emit(item);
            }, AppContextMenuComponent.\u0275fac = function(t) {
                return new (t || AppContextMenuComponent)(core["\u0275\u0275directiveInject"](lazy_provider.E), core["\u0275\u0275directiveInject"](core.ChangeDetectorRef));
            }, AppContextMenuComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: AppContextMenuComponent,
                selectors: [ [ "app-context-menu" ] ],
                viewQuery: function(rf, ctx) {
                    var _t;
                    1 & rf && core["\u0275\u0275viewQuery"](app_context_menu_component_c0, 7), 2 & rf && core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx.menu = _t.first);
                },
                inputs: {
                    menuIcon: "menuIcon",
                    triMenuIcon: "triMenuIcon",
                    label: "label",
                    ariaLabel: "ariaLabel",
                    tooltip: "tooltip",
                    app: "app",
                    availableActions: "availableActions",
                    callingContext: "callingContext",
                    currentMenuItemId: "currentMenuItemId"
                },
                outputs: {
                    currentMenuItemIdChange: "currentMenuItemIdChange",
                    onMenuOpenedEvent: "onMenuOpenedEvent",
                    executionRun: "executionRun"
                },
                decls: 8,
                vars: 9,
                consts: [ [ "mat-icon-button", "", "cdkMonitorElementFocus", "", "data-testid", "app-menu-options-btn", 1, "menuTrigger", 3, "matMenuTriggerFor", "pbiTooltip", "ngClass", "menuOpened", "menuClosed" ], [ "appMenuTrigger", "matMenuTrigger" ], [ "class", "glyph-small", 3, "fontIcon", 4, "ngIf" ], [ 3, "name", 4, "ngIf" ], [ 4, "ngIf" ], [ 1, "artifact-menu" ], [ "appMenu", "matMenu" ], [ "matMenuContent", "" ], [ 1, "glyph-small", 3, "fontIcon" ], [ 3, "name" ], [ 3, "ngSwitch" ], [ 4, "ngSwitchCase" ], [ "class", "pbi-spinner-small", 4, "ngSwitchCase" ], [ 3, "pbiTooltip", 4, "ngFor", "ngForOf" ], [ 3, "pbiTooltip" ], [ "mat-menu-item", "", "role", "menuitem", 3, "disabled", "click" ], [ 1, "pbi-spinner-small" ] ],
                template: function(rf, ctx) {
                    if (1 & rf && (core["\u0275\u0275elementStart"](0, "button", 0, 1), core["\u0275\u0275listener"]("menuOpened", function() {
                        return ctx.onMenuOpened();
                    })("menuClosed", function() {
                        return ctx.onMenuClosed();
                    }), core["\u0275\u0275template"](2, AppContextMenuComponent_mat_icon_2_Template, 1, 1, "mat-icon", 2), 
                    core["\u0275\u0275template"](3, AppContextMenuComponent_tri_svg_icon_3_Template, 1, 1, "tri-svg-icon", 3), 
                    core["\u0275\u0275template"](4, AppContextMenuComponent_span_4_Template, 2, 1, "span", 4), 
                    core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](5, "mat-menu", 5, 6), 
                    core["\u0275\u0275template"](7, AppContextMenuComponent_ng_template_7_Template, 3, 3, "ng-template", 7), 
                    core["\u0275\u0275elementEnd"]()), 2 & rf) {
                        var _r0 = core["\u0275\u0275reference"](1), _r4 = core["\u0275\u0275reference"](6);
                        core["\u0275\u0275property"]("matMenuTriggerFor", _r4)("pbiTooltip", ctx.tooltip || ctx.ariaLabel)("ngClass", core["\u0275\u0275pureFunction1"](7, app_context_menu_component_c1, !0 === _r0.menuOpen)), 
                        core["\u0275\u0275attribute"]("aria-label", ctx.ariaLabel), core["\u0275\u0275advance"](2), 
                        core["\u0275\u0275property"]("ngIf", ctx.menuIcon), core["\u0275\u0275advance"](1), 
                        core["\u0275\u0275property"]("ngIf", !ctx.menuIcon && ctx.triMenuIcon), core["\u0275\u0275advance"](1), 
                        core["\u0275\u0275property"]("ngIf", ctx.label);
                    }
                },
                dependencies: [ common.NgClass, common.NgForOf, common.NgIf, common.NgSwitch, common.NgSwitchCase, legacy_menu.W0, legacy_menu.tN, legacy_menu.D8, legacy_menu.hd, icon.Hw, pbi_spinner_component.k, a11y.kH, pbi_tooltip_directive.V, tri_svg_icon_component.M, common.AsyncPipe ],
                styles: [ ".mat-menu-panel.artifact-menu{min-height:auto}  .menuTrigger mat-icon:before{vertical-align:middle}[_nghost-%COMP%]{display:flex;align-items:center}.menuTrigger[_ngcontent-%COMP%]{background:none;border:none;padding:0;height:48px;width:36px;fill:currentColor}.menuTrigger[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]{transform:rotate(90deg)}.menuTrigger[_ngcontent-%COMP%]:hover{background-color:var(--fluent-theme-neutral-light-color, #EDEBE9)}.menuTrigger[_ngcontent-%COMP%]:hover   tri-svg-icon[_ngcontent-%COMP%]{fill:var(--colorNeutralForeground2BrandHover)}.menuTrigger.active[_ngcontent-%COMP%], .menuTrigger.active[_ngcontent-%COMP%]:hover, .menuTrigger.cdk-keyboard-focused[_ngcontent-%COMP%], .menuTrigger.cdk-keyboard-focused[_ngcontent-%COMP%]:hover{background-color:var(--fluent-theme-neutral-quarter-alt-color, #E1DFDD)}button.mat-menu-item[_ngcontent-%COMP%]{color:var(--fluent-theme-neutral-dark-color, #201F1E);height:36px;line-height:19px;padding:8px}button.mat-menu-item[_ngcontent-%COMP%]:disabled{color:var(--fluent-theme-neutral-tertia-color, #A19F9D)}" ],
                changeDetection: 0
            }), AppContextMenuComponent;
        }(), helpers_dashboard = __webpack_require__(17427), dashboard_context_menu_component_c0 = [ "dashboardMenu" ];
        function DashboardContextMenuComponent_mat_icon_2_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "mat-icon", 8), 2 & rf) {
                var ctx_r1 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275propertyInterpolate"]("fontIcon", ctx_r1.menuIcon);
            }
        }
        function DashboardContextMenuComponent_tri_svg_icon_3_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "tri-svg-icon", 9), 2 & rf) {
                var ctx_r2 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("name", ctx_r2.triMenuIcon);
            }
        }
        function DashboardContextMenuComponent_span_4_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "span"), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r3 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate"](ctx_r3.label);
            }
        }
        function DashboardContextMenuComponent_ng_template_7_ng_container_1_div_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r11 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div", 14)(1, "button", 15), core["\u0275\u0275listener"]("click", function() {
                    var item_r9 = core["\u0275\u0275restoreView"](_r11).$implicit, ctx_r10 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r10.clickHandler(item_r9));
                }), core["\u0275\u0275elementStart"](2, "span"), core["\u0275\u0275text"](3), core["\u0275\u0275pipe"](4, "async"), 
                core["\u0275\u0275elementEnd"]()()();
            }
            if (2 & rf) {
                var item_r9 = ctx.$implicit;
                core["\u0275\u0275property"]("pbiTooltip", item_r9.disabled ? item_r9.disabledTooltip : item_r9.tooltip), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("disabled", !!item_r9.disabled), 
                core["\u0275\u0275attribute"]("data-testid", "dashboardContextMenuItem." + item_r9.text), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](item_r9.text || core["\u0275\u0275pipeBind1"](4, 4, item_r9.text$));
            }
        }
        function DashboardContextMenuComponent_ng_template_7_ng_container_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, DashboardContextMenuComponent_ng_template_7_ng_container_1_div_1_Template, 5, 6, "div", 13), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var ctx_r6 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngForOf", ctx_r6.items);
            }
        }
        function DashboardContextMenuComponent_ng_template_7_pbi_spinner_2_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "pbi-spinner", 16);
        }
        function DashboardContextMenuComponent_ng_template_7_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0, 10), core["\u0275\u0275template"](1, DashboardContextMenuComponent_ng_template_7_ng_container_1_Template, 2, 1, "ng-container", 11), 
            core["\u0275\u0275template"](2, DashboardContextMenuComponent_ng_template_7_pbi_spinner_2_Template, 1, 0, "pbi-spinner", 12), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var ctx_r5 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("ngSwitch", !!ctx_r5.items && ctx_r5.items.length > 0), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", !0), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", !1);
            }
        }
        var dashboard_context_menu_component_c1 = function(a0) {
            return {
                active: a0
            };
        }, actions = [ 5, 6, 7, 3, 0, 2, 8, 9, 13 ], dashboard_context_menu_component_commonGlobals = window, DashboardContextMenuComponent = function() {
            function DashboardContextMenuComponent(lazyProvider, changeDetectorRef, featureSwitchService) {
                this.lazyProvider = lazyProvider, this.changeDetectorRef = changeDetectorRef, this.featureSwitchService = featureSwitchService, 
                this.tabindex = 0, this.currentMenuItemIdChange = new core.EventEmitter, this.onMenuOpenedEvent = new core.EventEmitter, 
                this.executionRun = new core.EventEmitter, this.defaultActions = actions;
            }
            return DashboardContextMenuComponent.prototype.ngOnInit = function() {
                (0, Common.mv)(this.dashboard, "Dashboard cannotbe null"), this.featureSwitchService.featureSwitches.hideActionAsDefault && this.defaultActions.indexOf(11) < 0 && this.defaultActions.push(11), 
                dashboard_context_menu_component_commonGlobals.isTrident && this.featureSwitchService.featureSwitches.subfolderInWorkspace && this.defaultActions.indexOf(14) < 0 && this.defaultActions.push(14);
            }, DashboardContextMenuComponent.prototype.onMenuOpened = function() {
                var _a;
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var _b, _c;
                    return (0, tslib_es6.__generator)(this, function(_d) {
                        switch (_d.label) {
                          case 0:
                            return this.currentMenuItemId = (0, helpers_dashboard.E)(this.dashboard), this.currentMenuItemIdChange.emit(this.currentMenuItemId), 
                            this.dashboardActionsService ? [ 3, 2 ] : (_b = this, [ 4, this.lazyProvider.get("@powerbi/ArtifactActions/artifact-actions.module#ArtifactActionsModule", "DashboardActionsService") ]);

                          case 1:
                            _b.dashboardActionsService = _d.sent(), _d.label = 2;

                          case 2:
                            return _c = this, [ 4, this.dashboardActionsService.getMenuItems({
                                artifact: this.dashboard
                            }, this.availableActions || this.defaultActions, this.callingContext) ];

                          case 3:
                            return _c.items = _d.sent(), this.onMenuOpenedEvent.emit(this.items), null === (_a = this.menu) || void 0 === _a || _a.focusFirstItem(), 
                            this.changeDetectorRef.markForCheck(), [ 2 ];
                        }
                    });
                });
            }, DashboardContextMenuComponent.prototype.onMenuClosed = function() {
                this.currentMenuItemId = null, this.currentMenuItemIdChange.emit(this.currentMenuItemId);
            }, DashboardContextMenuComponent.prototype.clickHandler = function(item) {
                item.execute(), this.executionRun.emit(item);
            }, DashboardContextMenuComponent.\u0275fac = function(t) {
                return new (t || DashboardContextMenuComponent)(core["\u0275\u0275directiveInject"](lazy_provider.E), core["\u0275\u0275directiveInject"](core.ChangeDetectorRef), core["\u0275\u0275directiveInject"](feature_switch_service.vZ));
            }, DashboardContextMenuComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: DashboardContextMenuComponent,
                selectors: [ [ "dashboard-context-menu" ] ],
                viewQuery: function(rf, ctx) {
                    var _t;
                    1 & rf && core["\u0275\u0275viewQuery"](dashboard_context_menu_component_c0, 7), 
                    2 & rf && core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx.menu = _t.first);
                },
                inputs: {
                    menuIcon: "menuIcon",
                    triMenuIcon: "triMenuIcon",
                    label: "label",
                    ariaLabel: "ariaLabel",
                    tooltip: "tooltip",
                    dashboard: "dashboard",
                    availableActions: "availableActions",
                    callingContext: "callingContext",
                    tabindex: "tabindex",
                    currentMenuItemId: "currentMenuItemId"
                },
                outputs: {
                    currentMenuItemIdChange: "currentMenuItemIdChange",
                    onMenuOpenedEvent: "onMenuOpenedEvent",
                    executionRun: "executionRun"
                },
                decls: 8,
                vars: 10,
                consts: [ [ "mat-icon-button", "", "cdkMonitorElementFocus", "", "data-testid", "dashboard-context-menu-button", 1, "menuTrigger", 3, "matMenuTriggerFor", "ngClass", "menuOpened", "menuClosed" ], [ "dashboardMenuTrigger", "matMenuTrigger" ], [ "class", "glyph-small", 3, "fontIcon", 4, "ngIf" ], [ 3, "name", 4, "ngIf" ], [ 4, "ngIf" ], [ 1, "artifact-menu" ], [ "dashboardMenu", "matMenu" ], [ "matMenuContent", "" ], [ 1, "glyph-small", 3, "fontIcon" ], [ 3, "name" ], [ 3, "ngSwitch" ], [ 4, "ngSwitchCase" ], [ "class", "pbi-spinner-small", 4, "ngSwitchCase" ], [ 3, "pbiTooltip", 4, "ngFor", "ngForOf" ], [ 3, "pbiTooltip" ], [ "mat-menu-item", "", "role", "menuitem", 3, "disabled", "click" ], [ 1, "pbi-spinner-small" ] ],
                template: function(rf, ctx) {
                    if (1 & rf && (core["\u0275\u0275elementStart"](0, "button", 0, 1), core["\u0275\u0275listener"]("menuOpened", function() {
                        return ctx.onMenuOpened();
                    })("menuClosed", function() {
                        return ctx.onMenuClosed();
                    }), core["\u0275\u0275template"](2, DashboardContextMenuComponent_mat_icon_2_Template, 1, 1, "mat-icon", 2), 
                    core["\u0275\u0275template"](3, DashboardContextMenuComponent_tri_svg_icon_3_Template, 1, 1, "tri-svg-icon", 3), 
                    core["\u0275\u0275template"](4, DashboardContextMenuComponent_span_4_Template, 2, 1, "span", 4), 
                    core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](5, "mat-menu", 5, 6), 
                    core["\u0275\u0275template"](7, DashboardContextMenuComponent_ng_template_7_Template, 3, 3, "ng-template", 7), 
                    core["\u0275\u0275elementEnd"]()), 2 & rf) {
                        var _r0 = core["\u0275\u0275reference"](1), _r4 = core["\u0275\u0275reference"](6);
                        core["\u0275\u0275property"]("matMenuTriggerFor", _r4)("ngClass", core["\u0275\u0275pureFunction1"](8, dashboard_context_menu_component_c1, !0 === _r0.menuOpen)), 
                        core["\u0275\u0275attribute"]("tabindex", ctx.tabindex)("aria-label", ctx.ariaLabel)("title", ctx.tooltip), 
                        core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", ctx.menuIcon), 
                        core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !ctx.menuIcon && ctx.triMenuIcon), 
                        core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx.label);
                    }
                },
                dependencies: [ common.NgClass, common.NgForOf, common.NgIf, common.NgSwitch, common.NgSwitchCase, legacy_menu.W0, legacy_menu.tN, legacy_menu.D8, legacy_menu.hd, icon.Hw, pbi_spinner_component.k, a11y.kH, pbi_tooltip_directive.V, tri_svg_icon_component.M, common.AsyncPipe ],
                styles: [ ".mat-menu-panel.artifact-menu{min-height:auto}  .menuTrigger mat-icon:before{vertical-align:middle}.menuTrigger[_ngcontent-%COMP%]{background:none;border:none;padding:0;height:48px;width:36px;fill:currentColor}.menuTrigger[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]{transform:rotate(90deg);vertical-align:middle}.menuTrigger[_ngcontent-%COMP%]:hover{background-color:var(--fluent-theme-neutral-light-color, #EDEBE9)}.menuTrigger[_ngcontent-%COMP%]:hover   tri-svg-icon[_ngcontent-%COMP%]{fill:var(--colorNeutralForeground2BrandHover)}.menuTrigger.active[_ngcontent-%COMP%], .menuTrigger.active[_ngcontent-%COMP%]:hover, .menuTrigger.cdk-keyboard-focused[_ngcontent-%COMP%], .menuTrigger.cdk-keyboard-focused[_ngcontent-%COMP%]:hover{background-color:var(--fluent-theme-neutral-quarter-alt-color, #E1DFDD)}button.mat-menu-item[_ngcontent-%COMP%]{color:var(--fluent-theme-neutral-dark-color, #201F1E);height:36px;line-height:19px;padding:8px}button.mat-menu-item[_ngcontent-%COMP%]:disabled{color:var(--fluent-theme-neutral-tertia-color, #A19F9D)}" ],
                changeDetection: 0
            }), DashboardContextMenuComponent;
        }(), DatasetContextMenuMenuClicked = telemetryHelpers.cx["PBI.DatasetContextMenu.MenuClicked"] = (0, 
        telemetryHelpers.b1)("PBI.DatasetContextMenu.MenuClicked", {
            logExpAssignment: !0
        }), DatasetContextMenuDatasetActionClicked = telemetryHelpers.cx["PBI.DatasetContextMenu.DatasetActionClicked"] = (0, 
        telemetryHelpers.b1)("PBI.DatasetContextMenu.DatasetActionClicked", {
            logExpAssignment: !0
        }), DatamartTypeContextMenuMenuClicked = telemetryHelpers.cx["PBI.DatamartTypeContextMenu.MenuClicked"] = (0, 
        telemetryHelpers.b1)("PBI.DatamartTypeContextMenu.MenuClicked", {
            logExpAssignment: !0
        }), DatamartTypeContextMenuDatamartTypeActionClicked = telemetryHelpers.cx["PBI.DatamartTypeContextMenu.DatamartTypeActionClicked"] = (0, 
        telemetryHelpers.b1)("PBI.DatamartTypeContextMenu.DatamartTypeActionClicked", {
            logExpAssignment: !0
        }), datamart_metadata_reducers = __webpack_require__(4565), divider = __webpack_require__(57746), datamart_context_menu_component_c0 = [ "datamartMenu" ], datamart_context_menu_component_c1 = [ "triggerButton" ];
        function DatamartContextMenuComponent_span_4_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "span"), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r2 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate"](ctx_r2.label);
            }
        }
        var datamart_context_menu_component_c2 = function(a0) {
            return {
                disabled: a0
            };
        };
        function DatamartContextMenuComponent_ng_template_7_ng_container_1_ng_container_1_ng_container_1_div_1_ng_container_1_tri_svg_icon_2_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "tri-svg-icon", 20), 2 & rf) {
                var item_r17 = core["\u0275\u0275nextContext"](2).$implicit;
                core["\u0275\u0275property"]("ngClass", core["\u0275\u0275pureFunction1"](3, datamart_context_menu_component_c2, !!item_r17.disabled))("sprite", item_r17.triIcon.sprite)("name", item_r17.triIcon.name);
            }
        }
        function DatamartContextMenuComponent_ng_template_7_ng_container_1_ng_container_1_ng_container_1_div_1_ng_container_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r25 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "button", 18), 
                core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r25);
                    var item_r17 = core["\u0275\u0275nextContext"]().$implicit, ctx_r23 = core["\u0275\u0275nextContext"](5);
                    return core["\u0275\u0275resetView"](ctx_r23.datamartActionClick(item_r17));
                }), core["\u0275\u0275template"](2, DatamartContextMenuComponent_ng_template_7_ng_container_1_ng_container_1_ng_container_1_div_1_ng_container_1_tri_svg_icon_2_Template, 1, 5, "tri-svg-icon", 19), 
                core["\u0275\u0275elementStart"](3, "span"), core["\u0275\u0275text"](4), core["\u0275\u0275elementEnd"]()(), 
                core["\u0275\u0275elementContainerEnd"]();
            }
            if (2 & rf) {
                var item_r17 = core["\u0275\u0275nextContext"]().$implicit;
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("disabled", !!item_r17.disabled), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", item_r17.triIcon), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](item_r17.text);
            }
        }
        function DatamartContextMenuComponent_ng_template_7_ng_container_1_ng_container_1_ng_container_1_div_1_ng_template_2_tri_svg_icon_1_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "tri-svg-icon", 24), 2 & rf) {
                var item_r17 = core["\u0275\u0275nextContext"](2).$implicit;
                core["\u0275\u0275property"]("sprite", item_r17.triIcon.sprite)("name", item_r17.triIcon.name);
            }
        }
        function DatamartContextMenuComponent_ng_template_7_ng_container_1_ng_container_1_ng_container_1_div_1_ng_template_2_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "button", 21), core["\u0275\u0275template"](1, DatamartContextMenuComponent_ng_template_7_ng_container_1_ng_container_1_ng_container_1_div_1_ng_template_2_tri_svg_icon_1_Template, 1, 2, "tri-svg-icon", 22), 
            core["\u0275\u0275elementStart"](2, "span"), core["\u0275\u0275text"](3), core["\u0275\u0275elementEnd"](), 
            core["\u0275\u0275element"](4, "mat-icon", 23), core["\u0275\u0275elementEnd"]()), 
            2 & rf) {
                var item_r17 = core["\u0275\u0275nextContext"]().$implicit, ctx_r20 = core["\u0275\u0275nextContext"](5), _r5 = core["\u0275\u0275reference"](9), _r8 = core["\u0275\u0275reference"](14);
                core["\u0275\u0275property"]("matMenuTriggerFor", item_r17.action === ctx_r20.OpenWithMenu ? _r5 : _r8)("disabled", !!item_r17.disabled), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", item_r17.triIcon), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](item_r17.text);
            }
        }
        function DatamartContextMenuComponent_ng_template_7_ng_container_1_ng_container_1_ng_container_1_div_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 15), core["\u0275\u0275template"](1, DatamartContextMenuComponent_ng_template_7_ng_container_1_ng_container_1_ng_container_1_div_1_ng_container_1_Template, 5, 3, "ng-container", 16), 
            core["\u0275\u0275template"](2, DatamartContextMenuComponent_ng_template_7_ng_container_1_ng_container_1_ng_container_1_div_1_ng_template_2_Template, 5, 4, "ng-template", null, 17, core["\u0275\u0275templateRefExtractor"]), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var item_r17 = ctx.$implicit, _r19 = core["\u0275\u0275reference"](3), ctx_r16 = core["\u0275\u0275nextContext"](5);
                core["\u0275\u0275property"]("pbiTooltip", item_r17.tooltip), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275property"]("ngIf", item_r17.action !== ctx_r16.OpenWithMenu && item_r17.action !== ctx_r16.RefreshMenu)("ngIfElse", _r19);
            }
        }
        function DatamartContextMenuComponent_ng_template_7_ng_container_1_ng_container_1_ng_container_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, DatamartContextMenuComponent_ng_template_7_ng_container_1_ng_container_1_ng_container_1_div_1_Template, 4, 3, "div", 14), 
            core["\u0275\u0275element"](2, "mat-divider"), core["\u0275\u0275elementContainerEnd"]()), 
            2 & rf) {
                var groupItem_r14 = core["\u0275\u0275nextContext"]().$implicit;
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngForOf", groupItem_r14);
            }
        }
        function DatamartContextMenuComponent_ng_template_7_ng_container_1_ng_container_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, DatamartContextMenuComponent_ng_template_7_ng_container_1_ng_container_1_ng_container_1_Template, 3, 1, "ng-container", 3), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var groupItem_r14 = ctx.$implicit;
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !!groupItem_r14 && groupItem_r14.length > 0);
            }
        }
        function DatamartContextMenuComponent_ng_template_7_ng_container_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, DatamartContextMenuComponent_ng_template_7_ng_container_1_ng_container_1_Template, 2, 1, "ng-container", 13), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var ctx_r11 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngForOf", ctx_r11.items);
            }
        }
        function DatamartContextMenuComponent_ng_template_7_pbi_spinner_2_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "pbi-spinner", 25);
        }
        function DatamartContextMenuComponent_ng_template_7_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0, 9), core["\u0275\u0275template"](1, DatamartContextMenuComponent_ng_template_7_ng_container_1_Template, 2, 1, "ng-container", 10), 
            core["\u0275\u0275template"](2, DatamartContextMenuComponent_ng_template_7_pbi_spinner_2_Template, 1, 0, "pbi-spinner", 11), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var ctx_r4 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("ngSwitch", !!ctx_r4.items && ctx_r4.items.length > 0), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", !0), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", !1);
            }
        }
        function DatamartContextMenuComponent_ng_container_11_button_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r34 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "button", 18), core["\u0275\u0275listener"]("click", function() {
                    var item_r32 = core["\u0275\u0275restoreView"](_r34).$implicit, ctx_r33 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r33.datamartActionClick(item_r32));
                }), core["\u0275\u0275elementStart"](1, "span"), core["\u0275\u0275text"](2), core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var item_r32 = ctx.$implicit;
                core["\u0275\u0275property"]("disabled", !!item_r32.disabled), core["\u0275\u0275advance"](2), 
                core["\u0275\u0275textInterpolate"](item_r32.text);
            }
        }
        function DatamartContextMenuComponent_ng_container_11_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, DatamartContextMenuComponent_ng_container_11_button_1_Template, 3, 2, "button", 26), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var ctx_r6 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngForOf", ctx_r6.openWithActionItems);
            }
        }
        function DatamartContextMenuComponent_pbi_spinner_12_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "pbi-spinner", 25);
        }
        function DatamartContextMenuComponent_ng_container_16_button_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r38 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "button", 18), core["\u0275\u0275listener"]("click", function() {
                    var item_r36 = core["\u0275\u0275restoreView"](_r38).$implicit, ctx_r37 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r37.datamartActionClick(item_r36));
                }), core["\u0275\u0275elementStart"](1, "span"), core["\u0275\u0275text"](2), core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var item_r36 = ctx.$implicit;
                core["\u0275\u0275property"]("disabled", !!item_r36.disabled), core["\u0275\u0275advance"](2), 
                core["\u0275\u0275textInterpolate"](item_r36.text);
            }
        }
        function DatamartContextMenuComponent_ng_container_16_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, DatamartContextMenuComponent_ng_container_16_button_1_Template, 3, 2, "button", 26), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var ctx_r9 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngForOf", ctx_r9.refreshActionItems);
            }
        }
        function DatamartContextMenuComponent_pbi_spinner_17_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "pbi-spinner", 25);
        }
        var datamart_context_menu_component_c3 = function(a0) {
            return {
                active: a0
            };
        }, datamartPrimaryGroupActions = [ 0, 1, 2 ], datamartConsumeCreateGroupActions = [ 24, 3, 4, 20 ], datamartManagementGroupActions = [ 5, 6, 7, 25 ], datamartSettingsGroupActions = [ 8, 9, 10 ], datamartMonitoringGroupActions = [ 21, 15, 27, 22 ], datamartRefreshGroupActions = [ 12, 13, 14 ], lakeWarehousePrimaryGroupActions = [ 0, 1 ], lakeWarehouseConsumeCreateGroupActions = [ 24, 3, 4, 20 ], lakeWarehouseManagementGroupActions = [ 5 ], lakeWarehouseSettingsGroupActions = [ 8, 9, 10 ], lakeWarehouseMonitoringGroupActions = [ 11, 15, 27, 22 ], mountedWarehousePrimaryGroupActions = [ 0, 1 ], mountedWarehouseConsumeCreateGroupActions = [ 24, 3, 4, 20 ], mountedWarehouseManagementGroupActions = [ 5 ], mountedWarehouseSettingsGroupActions = [ 8, 9, 10 ], mountedWarehouseMonitoringGroupActions = [ 15, 27, 22 ], dataWarehousePrimaryGroupActions = [ 0, 1, 2, 26 ], dataWarehouseConsumeCreateGroupActions = [ 24, 3, 4, 20 ], dataWarehouseManagementGroupActions = [ 5, 6, 7, 25 ], dataWarehouseSettingsGroupActions = [ 8, 9, 10 ], openWithGroupActions = [ 18 ], dataWarehouseMonitoringGroupActions = [ 11, 15, 27, 22 ], DatamartContextMenuComponent = function() {
            function DatamartContextMenuComponent(telemetryService, lazyProvider, changeDetectorRef) {
                this.telemetryService = telemetryService, this.lazyProvider = lazyProvider, this.changeDetectorRef = changeDetectorRef, 
                this.showPbiTooltip = !1, this.menuXPosition = "after", this.tabindex = 0, this.currentMenuItemIdChange = new core.EventEmitter, 
                this.onMenuOpenedEvent = new core.EventEmitter, this.datamartActionClicked = new core.EventEmitter, 
                this.OpenWithMenu = 1, this.RefreshMenu = 21;
            }
            return DatamartContextMenuComponent.prototype.ngOnInit = function() {
                (0, Common.mv)(this.datamart, "Datamart cannot be null");
            }, DatamartContextMenuComponent.prototype.onMenuOpened = function() {
                var _a;
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var _b;
                    return (0, tslib_es6.__generator)(this, function(_c) {
                        switch (_c.label) {
                          case 0:
                            return this.currentMenuItemId = datamart_metadata_reducers.EL(this.datamart), this.currentMenuItemIdChange.emit(this.currentMenuItemId), 
                            this.datamartType = this.datamart.datamartType, _b = this, [ 4, this.getActionItems() ];

                          case 1:
                            return _b.items = _c.sent(), this.onMenuOpenedEvent.emit(this.items), null === (_a = this.menu) || void 0 === _a || _a.focusFirstItem(), 
                            this.changeDetectorRef.markForCheck(), this.telemetryService.logEvent(DatamartTypeContextMenuMenuClicked), 
                            [ 2 ];
                        }
                    });
                });
            }, DatamartContextMenuComponent.prototype.onMenuClosed = function() {
                this.currentMenuItemId = null, this.currentMenuItemIdChange.emit(this.currentMenuItemId);
            }, DatamartContextMenuComponent.prototype.datamartActionClick = function(datamartMenuItem) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var actionResult, datamartTypeAction;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, datamartMenuItem.execute() ];

                          case 1:
                            return actionResult = _a.sent(), this.triggerButton.nativeElement.focus(), this.datamartActionClicked.emit([ datamartMenuItem.action, actionResult ]), 
                            datamartTypeAction = function(datamartTypeArtifactAction) {
                                switch (datamartTypeArtifactAction) {
                                  case 0:
                                    return "Open";

                                  case 2:
                                    return "Share";

                                  case 3:
                                    return "AnalyzeInExcel";

                                  case 4:
                                    return "CreateReport";

                                  case 20:
                                    return "CreatePaginatedReport";

                                  case 5:
                                    return "Favorite";

                                  case 6:
                                    return "Rename";

                                  case 7:
                                    return "Delete";

                                  case 8:
                                    return "ManagePermissions";

                                  case 9:
                                    return "CopySQLEndpoint";

                                  case 10:
                                    return "Settings";

                                  case 11:
                                    return "QueryActivity";

                                  case 12:
                                    return "RefreshNow";

                                  case 13:
                                    return "ScheduleRefresh";

                                  case 14:
                                    return "RefreshHistory";

                                  case 15:
                                    return "ViewLineage";

                                  case 24:
                                    return "DataExplore";

                                  default:
                                    return "Unknown";
                                }
                            }(datamartMenuItem.action), this.telemetryService.logEvent(DatamartTypeContextMenuDatamartTypeActionClicked, {
                                datamartTypeActionName: datamartTypeAction
                            }), [ 2 ];
                        }
                    });
                });
            }, DatamartContextMenuComponent.prototype.getActionItems = function() {
                var _a, _b;
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var actionItems, _c, datamartTypeActions, _i, datamartTypeActions_1, groupAction, groupMenuItemActions, _d, groupAction_1, action, _e, _f, _g;
                    return (0, tslib_es6.__generator)(this, function(_h) {
                        switch (_h.label) {
                          case 0:
                            return actionItems = [], this.datamartActionsService ? [ 3, 2 ] : (_c = this, [ 4, this.lazyProvider.get("@powerbi/ArtifactActions/artifact-actions.module#ArtifactActionsModule", "DatamartActionsService") ]);

                          case 1:
                            _c.datamartActionsService = _h.sent(), _h.label = 2;

                          case 2:
                            datamartTypeActions = null !== (_a = this.datamartTypeActions) && void 0 !== _a ? _a : this.getDefaultActions(), 
                            _i = 0, datamartTypeActions_1 = datamartTypeActions, _h.label = 3;

                          case 3:
                            if (!(_i < datamartTypeActions_1.length)) return [ 3, 10 ];
                            if (groupAction = datamartTypeActions_1[_i], groupMenuItemActions = [], _.isEmpty(groupAction)) return [ 3, 8 ];
                            _d = 0, groupAction_1 = groupAction, _h.label = 4;

                          case 4:
                            return _d < groupAction_1.length ? (_f = (_e = groupMenuItemActions.push).apply, 
                            _g = [ groupMenuItemActions ], [ 4, this.getMenuItemAction(action = groupAction_1[_d]) ]) : [ 3, 8 ];

                          case 5:
                            return _f.apply(_e, _g.concat([ null !== (_b = _h.sent()) && void 0 !== _b ? _b : [] ])), 
                            1 === action || 21 === action && 1 === this.datamartType ? [ 4, this.getSubMenuItems(action) ] : [ 3, 7 ];

                          case 6:
                            _h.sent(), _h.label = 7;

                          case 7:
                            return _d++, [ 3, 4 ];

                          case 8:
                            actionItems.push(groupMenuItemActions), _h.label = 9;

                          case 9:
                            return _i++, [ 3, 3 ];

                          case 10:
                            return [ 2, actionItems ];
                        }
                    });
                });
            }, DatamartContextMenuComponent.prototype.getMenuItemAction = function(action) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.datamartActionsService.getMenuItems({
                                artifact: this.datamart,
                                container: this.containerByAction && action in this.containerByAction ? this.containerByAction[action] : this.container,
                                actionSource: this.actionSource
                            }, [ action ]) ];

                          case 1:
                            return [ 2, _a.sent() ];
                        }
                    });
                });
            }, DatamartContextMenuComponent.prototype.getSubMenuItems = function(action) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var _b, _c;
                    return (0, tslib_es6.__generator)(this, function(_d) {
                        switch (_d.label) {
                          case 0:
                            switch (action) {
                              case 1:
                                return [ 3, 1 ];

                              case 21:
                                return [ 3, 3 ];
                            }
                            return [ 3, 5 ];

                          case 1:
                            return _b = this, [ 4, this.getSubMenuActionItems(openWithGroupActions) ];

                          case 2:
                            return _b.openWithActionItems = _d.sent(), [ 3, 6 ];

                          case 3:
                            return _c = this, [ 4, this.getSubMenuActionItems(datamartRefreshGroupActions) ];

                          case 4:
                            return _c.refreshActionItems = _d.sent(), [ 3, 6 ];

                          case 5:
                            return VisualsCommon_debug.fF.assertFail("not valid datamartType subMenu action"), 
                            [ 3, 6 ];

                          case 6:
                            return [ 2 ];
                        }
                    });
                });
            }, DatamartContextMenuComponent.prototype.getSubMenuActionItems = function(actions) {
                var _a;
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var subMenuActionItems, _i, actions_1, _b, _c, _d;
                    return (0, tslib_es6.__generator)(this, function(_e) {
                        switch (_e.label) {
                          case 0:
                            subMenuActionItems = [], _i = 0, actions_1 = actions, _e.label = 1;

                          case 1:
                            return _i < actions_1.length ? (_c = (_b = subMenuActionItems.push).apply, _d = [ subMenuActionItems ], 
                            [ 4, this.getMenuItemAction(actions_1[_i]) ]) : [ 3, 4 ];

                          case 2:
                            _c.apply(_b, _d.concat([ null !== (_a = _e.sent()) && void 0 !== _a ? _a : [] ])), 
                            _e.label = 3;

                          case 3:
                            return _i++, [ 3, 1 ];

                          case 4:
                            return [ 2, subMenuActionItems ];
                        }
                    });
                });
            }, DatamartContextMenuComponent.prototype.getDefaultActions = function() {
                switch (this.datamartType) {
                  case 1:
                    return [ datamartPrimaryGroupActions, datamartConsumeCreateGroupActions, datamartManagementGroupActions, datamartSettingsGroupActions, datamartMonitoringGroupActions ];

                  case 5:
                    return [ mountedWarehousePrimaryGroupActions, mountedWarehouseConsumeCreateGroupActions, mountedWarehouseManagementGroupActions, mountedWarehouseSettingsGroupActions, mountedWarehouseMonitoringGroupActions ];

                  case 2:
                    return [ lakeWarehousePrimaryGroupActions, lakeWarehouseConsumeCreateGroupActions, lakeWarehouseManagementGroupActions, lakeWarehouseSettingsGroupActions, lakeWarehouseMonitoringGroupActions ];

                  case 4:
                    return [ dataWarehousePrimaryGroupActions, dataWarehouseConsumeCreateGroupActions, dataWarehouseManagementGroupActions, dataWarehouseSettingsGroupActions, dataWarehouseMonitoringGroupActions ];

                  default:
                    return VisualsCommon_debug.fF.assertFail("Cannot get DatamartType default actions"), 
                    [];
                }
            }, DatamartContextMenuComponent.\u0275fac = function(t) {
                return new (t || DatamartContextMenuComponent)(core["\u0275\u0275directiveInject"](Telemetry.y0), core["\u0275\u0275directiveInject"](lazy_provider.E), core["\u0275\u0275directiveInject"](core.ChangeDetectorRef));
            }, DatamartContextMenuComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: DatamartContextMenuComponent,
                selectors: [ [ "datamart-context-menu" ] ],
                viewQuery: function(rf, ctx) {
                    if (1 & rf && (core["\u0275\u0275viewQuery"](datamart_context_menu_component_c0, 7), 
                    core["\u0275\u0275viewQuery"](datamart_context_menu_component_c1, 7)), 2 & rf) {
                        var _t = void 0;
                        core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx.menu = _t.first), 
                        core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx.triggerButton = _t.first);
                    }
                },
                inputs: {
                    triMenuIcon: "triMenuIcon",
                    label: "label",
                    ariaLabel: "ariaLabel",
                    tooltip: "tooltip",
                    datamart: "datamart",
                    datamartTypeActions: "datamartTypeActions",
                    container: "container",
                    containerByAction: "containerByAction",
                    showPbiTooltip: "showPbiTooltip",
                    menuXPosition: "menuXPosition",
                    actionSource: "actionSource",
                    tabindex: "tabindex",
                    currentMenuItemId: "currentMenuItemId"
                },
                outputs: {
                    currentMenuItemIdChange: "currentMenuItemIdChange",
                    onMenuOpenedEvent: "onMenuOpenedEvent",
                    datamartActionClicked: "datamartActionClicked"
                },
                decls: 18,
                vars: 21,
                consts: [ [ "mat-icon-button", "", "cdkMonitorElementFocus", "", 1, "menuTrigger", 3, "matMenuTriggerFor", "aria-label", "pbiTooltip", "ngClass", "menuOpened", "menuClosed" ], [ "triggerButton", "", "datamartMenuTrigger", "matMenuTrigger" ], [ "sprite", "fluentui-icons", "name", "more_horizontal_16_regular" ], [ 4, "ngIf" ], [ 1, "artifact-menu", 3, "xPosition" ], [ "datamartMenu", "matMenu" ], [ "matMenuContent", "" ], [ 1, "artifact-menu", 3, "overlapTrigger", "xPosition" ], [ "openWithSubMenu", "matMenu" ], [ 3, "ngSwitch" ], [ 4, "ngSwitchCase" ], [ "class", "pbi-spinner-small", 4, "ngSwitchCase" ], [ "refreshSubMenu", "matMenu" ], [ 4, "ngFor", "ngForOf" ], [ 3, "pbiTooltip", 4, "ngFor", "ngForOf" ], [ 3, "pbiTooltip" ], [ 4, "ngIf", "ngIfElse" ], [ "openSubMenu", "" ], [ "mat-menu-item", "", "role", "menuitem", 3, "disabled", "click" ], [ 3, "ngClass", "sprite", "name", 4, "ngIf" ], [ 3, "ngClass", "sprite", "name" ], [ "mat-menu-item", "", "role", "menuitem", 3, "matMenuTriggerFor", "disabled" ], [ 3, "sprite", "name", 4, "ngIf" ], [ "fontIcon", "pbi-glyph-arrowright", 1, "chevron-right-icon" ], [ 3, "sprite", "name" ], [ 1, "pbi-spinner-small" ], [ "mat-menu-item", "", "role", "menuitem", 3, "disabled", "click", 4, "ngFor", "ngForOf" ] ],
                template: function(rf, ctx) {
                    if (1 & rf && (core["\u0275\u0275elementStart"](0, "button", 0, 1), core["\u0275\u0275listener"]("menuOpened", function() {
                        return ctx.onMenuOpened();
                    })("menuClosed", function() {
                        return ctx.onMenuClosed();
                    }), core["\u0275\u0275element"](3, "tri-svg-icon", 2), core["\u0275\u0275template"](4, DatamartContextMenuComponent_span_4_Template, 2, 1, "span", 3), 
                    core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](5, "mat-menu", 4, 5), 
                    core["\u0275\u0275template"](7, DatamartContextMenuComponent_ng_template_7_Template, 3, 3, "ng-template", 6), 
                    core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](8, "mat-menu", 7, 8), 
                    core["\u0275\u0275elementContainerStart"](10, 9), core["\u0275\u0275template"](11, DatamartContextMenuComponent_ng_container_11_Template, 2, 1, "ng-container", 10), 
                    core["\u0275\u0275template"](12, DatamartContextMenuComponent_pbi_spinner_12_Template, 1, 0, "pbi-spinner", 11), 
                    core["\u0275\u0275elementContainerEnd"](), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](13, "mat-menu", 7, 12), 
                    core["\u0275\u0275elementContainerStart"](15, 9), core["\u0275\u0275template"](16, DatamartContextMenuComponent_ng_container_16_Template, 2, 1, "ng-container", 10), 
                    core["\u0275\u0275template"](17, DatamartContextMenuComponent_pbi_spinner_17_Template, 1, 0, "pbi-spinner", 11), 
                    core["\u0275\u0275elementContainerEnd"](), core["\u0275\u0275elementEnd"]()), 2 & rf) {
                        var _r1 = core["\u0275\u0275reference"](2), _r3 = core["\u0275\u0275reference"](6);
                        core["\u0275\u0275property"]("matMenuTriggerFor", _r3)("aria-label", ctx.ariaLabel)("pbiTooltip", ctx.showPbiTooltip ? ctx.tooltip : void 0)("ngClass", core["\u0275\u0275pureFunction1"](19, datamart_context_menu_component_c3, !0 === _r1.menuOpen)), 
                        core["\u0275\u0275attribute"]("aria-label", ctx.ariaLabel)("tabindex", ctx.tabindex)("title", ctx.showPbiTooltip ? void 0 : ctx.tooltip), 
                        core["\u0275\u0275advance"](4), core["\u0275\u0275property"]("ngIf", ctx.label), 
                        core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("xPosition", ctx.menuXPosition), 
                        core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("overlapTrigger", !1)("xPosition", ctx.menuXPosition), 
                        core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngSwitch", !!ctx.openWithActionItems && ctx.openWithActionItems.length > 0), 
                        core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", !0), 
                        core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", !1), 
                        core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("overlapTrigger", !1)("xPosition", ctx.menuXPosition), 
                        core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngSwitch", !!ctx.refreshActionItems && ctx.refreshActionItems.length > 0), 
                        core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", !0), 
                        core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", !1);
                    }
                },
                dependencies: [ common.NgClass, common.NgForOf, common.NgIf, common.NgSwitch, common.NgSwitchCase, legacy_menu.W0, legacy_menu.tN, legacy_menu.D8, legacy_menu.hd, icon.Hw, divider.d, pbi_spinner_component.k, a11y.kH, pbi_tooltip_directive.V, tri_svg_icon_component.M ],
                styles: [ ".mat-menu-panel.artifact-menu{min-height:auto;width:248px}  .mat-menu-panel.artifact-menu mat-icon{margin-right:0}  .mat-menu-panel.artifact-menu .mat-menu-submenu-icon{display:none}  .menuTrigger mat-icon:before{vertical-align:middle}.menuTrigger[_ngcontent-%COMP%]{background:none;border:none;padding:0;height:48px;width:36px;fill:currentColor}.menuTrigger[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]{transform:rotate(90deg)}.menuTrigger[_ngcontent-%COMP%]:hover{background-color:var(--fluent-theme-neutral-light-color, #EDEBE9)}.menuTrigger[_ngcontent-%COMP%]:hover   tri-svg-icon[_ngcontent-%COMP%]{fill:var(--colorNeutralForeground2BrandHover)}.menuTrigger.active[_ngcontent-%COMP%], .menuTrigger.active[_ngcontent-%COMP%]:hover, .menuTrigger.cdk-keyboard-focused[_ngcontent-%COMP%], .menuTrigger.cdk-keyboard-focused[_ngcontent-%COMP%]:hover{background-color:var(--fluent-theme-neutral-quarter-alt-color, #E1DFDD)}.menuTrigger.cdk-program-focused[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]{outline:var(--focus-two-tone-outline-definition, auto 1px);outline-color:var(--focus-two-tone-outline-color, -webkit-focus-ring-color)}button.mat-menu-item[_ngcontent-%COMP%]{color:var(--fluent-theme-neutral-dark-color, #201F1E);height:36px;line-height:19px;padding:8px}button.mat-menu-item[_ngcontent-%COMP%]:disabled{color:var(--fluent-theme-neutral-tertia-color, #A19F9D)}button.mat-menu-item[_ngcontent-%COMP%]   tri-svg-icon[_ngcontent-%COMP%]{float:left;margin-right:5px}button.mat-menu-item[_ngcontent-%COMP%]   tri-svg-icon.disabled[_ngcontent-%COMP%]{fill:var(--colorNeutralForegroundDisabled)}.chevron-right-icon[_ngcontent-%COMP%]{display:inline-flex;float:right;color:var(--globalColorGrey0);width:20px;height:20px;font-size:18px}" ],
                changeDetection: 0
            }), DatamartContextMenuComponent;
        }(), helpers_datasets = __webpack_require__(3408), dataset_context_menu_component_c0 = [ "datasetMenu" ];
        function DatasetContextMenuComponent_mat_icon_2_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "mat-icon", 8), 2 & rf) {
                var ctx_r1 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275propertyInterpolate"]("fontIcon", ctx_r1.menuIcon);
            }
        }
        function DatasetContextMenuComponent_tri_svg_icon_3_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "tri-svg-icon", 9), 2 & rf) {
                var ctx_r2 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("name", ctx_r2.triMenuIcon);
            }
        }
        function DatasetContextMenuComponent_span_4_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "span"), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r3 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate"](ctx_r3.label);
            }
        }
        function DatasetContextMenuComponent_ng_template_7_ng_container_1_button_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r11 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "button", 14), core["\u0275\u0275listener"]("click", function() {
                    var item_r9 = core["\u0275\u0275restoreView"](_r11).$implicit, ctx_r10 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r10.datasetActionClick(item_r9));
                }), core["\u0275\u0275elementStart"](1, "span"), core["\u0275\u0275text"](2), core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var item_r9 = ctx.$implicit;
                core["\u0275\u0275property"]("disabled", !!item_r9.disabled), core["\u0275\u0275attribute"]("data-testid", "datasetContextMenuItem." + item_r9.text), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](item_r9.text);
            }
        }
        function DatasetContextMenuComponent_ng_template_7_ng_container_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, DatasetContextMenuComponent_ng_template_7_ng_container_1_button_1_Template, 3, 3, "button", 13), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var ctx_r6 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngForOf", ctx_r6.items);
            }
        }
        function DatasetContextMenuComponent_ng_template_7_pbi_spinner_2_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "pbi-spinner", 15);
        }
        function DatasetContextMenuComponent_ng_template_7_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0, 10), core["\u0275\u0275template"](1, DatasetContextMenuComponent_ng_template_7_ng_container_1_Template, 2, 1, "ng-container", 11), 
            core["\u0275\u0275template"](2, DatasetContextMenuComponent_ng_template_7_pbi_spinner_2_Template, 1, 0, "pbi-spinner", 12), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var ctx_r5 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("ngSwitch", !!ctx_r5.items && ctx_r5.items.length > 0), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", !0), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", !1);
            }
        }
        var dataset_context_menu_component_c1 = function(a0) {
            return {
                active: a0
            };
        }, defaultDatasetActions = [ 33, 10, 1, 23, 2, 9, 3, 4, 5, 28, 11, 32, 12, 13, 16, 17, 18, 34, 29, 35 ], defaultStreamingDatasetActions = [ 1, 9, 13, 3, 15, 14, 34 ], DatasetContextMenuComponent = function() {
            function DatasetContextMenuComponent(telemetryService, lazyProvider, changeDetectorRef, ngZone, featureSwitchService, certifiedEventsService) {
                this.telemetryService = telemetryService, this.lazyProvider = lazyProvider, this.changeDetectorRef = changeDetectorRef, 
                this.ngZone = ngZone, this.featureSwitchService = featureSwitchService, this.certifiedEventsService = certifiedEventsService, 
                this.menuXPosition = "after", this.showPbiTooltip = !1, this.autoAssignTrial = !1, 
                this.tabindex = 0, this.currentMenuItemIdChange = new core.EventEmitter, this.onMenuOpenedEvent = new core.EventEmitter, 
                this.datasetActionClicked = new core.EventEmitter;
            }
            return DatasetContextMenuComponent.prototype.ngOnInit = function() {
                (0, Common.mv)(this.datasetItem, "Dataset cannotbe null");
            }, DatasetContextMenuComponent.prototype.onMenuOpened = function() {
                var _a;
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var datasetActionsService, actions, _i, actions_1, action, datasetMenuItemAction, container, _b, _c, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_d) {
                        switch (_d.label) {
                          case 0:
                            return this.currentMenuItemId = (0, helpers_datasets.EL)(this.datasetItem), this.currentMenuItemIdChange.emit(this.currentMenuItemId), 
                            this.items = [], [ 4, this.getDatasetActionsService() ];

                          case 1:
                            datasetActionsService = _d.sent(), actions = this.getActions(), _i = 0, actions_1 = actions, 
                            _d.label = 2;

                          case 2:
                            return _i < actions_1.length ? [ 4, (datasetMenuItemAction = datasetActionsService.getMenuItemAction(action = actions_1[_i])).canExecute({
                                artifact: this.datasetItem,
                                container: container = this.containerByAction && action in this.containerByAction ? this.containerByAction[action] : this.container,
                                actionSource: this.actionSource
                            }) ] : [ 3, 6 ];

                          case 3:
                            return _d.sent() ? (_c = (_b = this.items).push, [ 4, datasetMenuItemAction.getMenuItem({
                                artifact: this.datasetItem,
                                container,
                                autoAssignTrial: this.autoAssignTrial,
                                actionSource: this.actionSource
                            }) ]) : [ 3, 5 ];

                          case 4:
                            _c.apply(_b, [ _d.sent() ]), _d.label = 5;

                          case 5:
                            return _i++, [ 3, 2 ];

                          case 6:
                            return this.onMenuOpenedEvent.emit(this.items), null === (_a = this.menu) || void 0 === _a || _a.focusFirstItem(), 
                            this.ngZone.onStable.pipe((0, first.P)()).subscribe(function() {
                                var overlayConfig = _this.menuTrigger._overlayRef.getConfig();
                                overlayConfig.positionStrategy._isInitialRender = !0, overlayConfig.positionStrategy.apply();
                            }), this.changeDetectorRef.markForCheck(), this.telemetryService.logEvent(DatasetContextMenuMenuClicked), 
                            [ 2 ];
                        }
                    });
                });
            }, DatasetContextMenuComponent.prototype.getDatasetActionsService = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var _a;
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return this._datasetActionsService ? [ 3, 2 ] : (_a = this, [ 4, this.lazyProvider.get("@powerbi/ArtifactActions/artifact-actions.module#ArtifactActionsModule", "DatasetActionsService") ]);

                          case 1:
                            _a._datasetActionsService = _b.sent(), _b.label = 2;

                          case 2:
                            return [ 2, this._datasetActionsService ];
                        }
                    });
                });
            }, DatasetContextMenuComponent.prototype.datasetActionClick = function(datasetMenuItem) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var actionResult, datasetAction;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, datasetMenuItem.execute() ];

                          case 1:
                            return actionResult = _a.sent(), this.datasetActionClicked.emit([ datasetMenuItem.action, actionResult ]), 
                            datasetAction = function(datasetAction) {
                                switch (datasetAction) {
                                  case 0:
                                    return "Disabled";

                                  case 1:
                                    return "CreateReport";

                                  case 2:
                                    return "CreatePaginatedReport";

                                  case 3:
                                    return "GetInsights";

                                  case 4:
                                    return "GranularSecurity";

                                  case 5:
                                    return "Rename";

                                  case 6:
                                    return "RefreshNow";

                                  case 7:
                                    return "ScheduleRefresh";

                                  case 8:
                                    return "Delete";

                                  case 9:
                                    return "DeleteConfirmation";

                                  case 10:
                                    return "AnalyzeInExcel";

                                  case 11:
                                    return "DatasetSettings";

                                  case 12:
                                    return "DownloadPbix";

                                  case 13:
                                    return "ManagePermissions";

                                  case 14:
                                    return "StreamingDatasetPushInfo";

                                  case 15:
                                    return "StreamingDatasetEdit";

                                  case 16:
                                    return "ViewRelated";

                                  case 17:
                                    return "ViewLineage";

                                  case 19:
                                    return "ViewHighlightLineage";

                                  case 20:
                                    return "Share";

                                  case 21:
                                    return "ChatInTeams";

                                  case 33:
                                    return "DataExplore";

                                  default:
                                    return "Unknown";
                                }
                            }(datasetMenuItem.action), this.telemetryService.logEvent(DatasetContextMenuDatasetActionClicked, {
                                datasetActionName: datasetAction
                            }), "CreatePaginatedReport" === datasetAction && this.certifiedEventsService && this.certifiedEventsService.logStandardizedFeatureEvent({
                                correlationId: this.telemetryService.root.id,
                                activityName: "PBI.DatasetContextMenu.DatasetActionClicked.CreatePaginatedReport",
                                activityAttributes: {},
                                resultCode: null,
                                featureName: "".concat("PaginatedReport", ", ").concat("Paginated Report Web Authoring"),
                                activityStatus: "Succeeded"
                            }), [ 2 ];
                        }
                    });
                });
            }, DatasetContextMenuComponent.prototype.onMenuClosed = function() {
                this.currentMenuItemId = null, this.currentMenuItemIdChange.emit(this.currentMenuItemId);
            }, DatasetContextMenuComponent.prototype.getActions = function() {
                if (this.datasetItem.realTimeMode) return this.streamingDatasetActions ? this.streamingDatasetActions : 2 === this.datasetItem.realTimeMode ? (0, 
                tslib_es6.__spreadArray)((0, tslib_es6.__spreadArray)([], defaultStreamingDatasetActions, !0), [ 11 ], !1) : defaultStreamingDatasetActions;
                var result = this.datasetActions ? this.datasetActions : defaultDatasetActions;
                return this.featureSwitchService.featureSwitches.immersiveCopilotOnArtifactEntryPoint && result.indexOf(36) < 0 && result.push(36), 
                result;
            }, DatasetContextMenuComponent.\u0275fac = function(t) {
                return new (t || DatasetContextMenuComponent)(core["\u0275\u0275directiveInject"](Telemetry.y0), core["\u0275\u0275directiveInject"](lazy_provider.E), core["\u0275\u0275directiveInject"](core.ChangeDetectorRef), core["\u0275\u0275directiveInject"](core.NgZone), core["\u0275\u0275directiveInject"](feature_switch_service.vZ), core["\u0275\u0275directiveInject"](Telemetry.ly, 8));
            }, DatasetContextMenuComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: DatasetContextMenuComponent,
                selectors: [ [ "dataset-context-menu" ] ],
                viewQuery: function(rf, ctx) {
                    if (1 & rf && (core["\u0275\u0275viewQuery"](dataset_context_menu_component_c0, 7), 
                    core["\u0275\u0275viewQuery"](legacy_menu.D8, 5)), 2 & rf) {
                        var _t = void 0;
                        core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx.menu = _t.first), 
                        core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx.menuTrigger = _t.first);
                    }
                },
                inputs: {
                    menuIcon: "menuIcon",
                    triMenuIcon: "triMenuIcon",
                    label: "label",
                    ariaLabel: "ariaLabel",
                    tooltip: "tooltip",
                    datasetItem: "datasetItem",
                    container: "container",
                    containerByAction: "containerByAction",
                    datasetActions: "datasetActions",
                    streamingDatasetActions: "streamingDatasetActions",
                    menuXPosition: "menuXPosition",
                    showPbiTooltip: "showPbiTooltip",
                    autoAssignTrial: "autoAssignTrial",
                    actionSource: "actionSource",
                    tabindex: "tabindex",
                    currentMenuItemId: "currentMenuItemId"
                },
                outputs: {
                    currentMenuItemIdChange: "currentMenuItemIdChange",
                    onMenuOpenedEvent: "onMenuOpenedEvent",
                    datasetActionClicked: "datasetActionClicked"
                },
                decls: 8,
                vars: 12,
                consts: [ [ "mat-icon-button", "", "cdkMonitorElementFocus", "", "aria-haspopup", "true", 1, "menuTrigger", 3, "matMenuTriggerFor", "aria-label", "pbiTooltip", "ngClass", "menuOpened", "menuClosed" ], [ "datasetMenuTrigger", "matMenuTrigger" ], [ "class", "glyph-small", 3, "fontIcon", 4, "ngIf" ], [ 3, "name", 4, "ngIf" ], [ 4, "ngIf" ], [ 1, "artifact-menu", 3, "xPosition" ], [ "datasetMenu", "matMenu" ], [ "matMenuContent", "" ], [ 1, "glyph-small", 3, "fontIcon" ], [ 3, "name" ], [ 3, "ngSwitch" ], [ 4, "ngSwitchCase" ], [ "class", "pbi-spinner-small", 4, "ngSwitchCase" ], [ "mat-menu-item", "", "role", "menuitem", 3, "disabled", "click", 4, "ngFor", "ngForOf" ], [ "mat-menu-item", "", "role", "menuitem", 3, "disabled", "click" ], [ 1, "pbi-spinner-small" ] ],
                template: function(rf, ctx) {
                    if (1 & rf && (core["\u0275\u0275elementStart"](0, "button", 0, 1), core["\u0275\u0275listener"]("menuOpened", function() {
                        return ctx.onMenuOpened();
                    })("menuClosed", function() {
                        return ctx.onMenuClosed();
                    }), core["\u0275\u0275template"](2, DatasetContextMenuComponent_mat_icon_2_Template, 1, 1, "mat-icon", 2), 
                    core["\u0275\u0275template"](3, DatasetContextMenuComponent_tri_svg_icon_3_Template, 1, 1, "tri-svg-icon", 3), 
                    core["\u0275\u0275template"](4, DatasetContextMenuComponent_span_4_Template, 2, 1, "span", 4), 
                    core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](5, "mat-menu", 5, 6), 
                    core["\u0275\u0275template"](7, DatasetContextMenuComponent_ng_template_7_Template, 3, 3, "ng-template", 7), 
                    core["\u0275\u0275elementEnd"]()), 2 & rf) {
                        var _r0 = core["\u0275\u0275reference"](1), _r4 = core["\u0275\u0275reference"](6);
                        core["\u0275\u0275property"]("matMenuTriggerFor", _r4)("aria-label", ctx.ariaLabel)("pbiTooltip", ctx.showPbiTooltip ? ctx.tooltip : void 0)("ngClass", core["\u0275\u0275pureFunction1"](10, dataset_context_menu_component_c1, !0 === _r0.menuOpen)), 
                        core["\u0275\u0275attribute"]("tabindex", ctx.tabindex)("title", ctx.showPbiTooltip ? void 0 : ctx.tooltip), 
                        core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", ctx.menuIcon), 
                        core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !ctx.menuIcon && ctx.triMenuIcon), 
                        core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx.label), 
                        core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("xPosition", ctx.menuXPosition);
                    }
                },
                dependencies: [ common.NgClass, common.NgForOf, common.NgIf, common.NgSwitch, common.NgSwitchCase, legacy_menu.W0, legacy_menu.tN, legacy_menu.D8, legacy_menu.hd, icon.Hw, pbi_spinner_component.k, a11y.kH, pbi_tooltip_directive.V, tri_svg_icon_component.M ],
                styles: [ ".mat-menu-panel.artifact-menu{min-height:auto}  .menuTrigger mat-icon:before{vertical-align:middle}.menuTrigger[_ngcontent-%COMP%]{background:none;border:none;padding:0;height:48px;width:36px;fill:currentColor}.menuTrigger[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]{transform:rotate(90deg)}.menuTrigger[_ngcontent-%COMP%]:hover{background-color:var(--fluent-theme-neutral-light-color, #EDEBE9)}.menuTrigger[_ngcontent-%COMP%]:hover   tri-svg-icon[_ngcontent-%COMP%]{fill:var(--colorNeutralForeground2BrandHover)}.menuTrigger.active[_ngcontent-%COMP%], .menuTrigger.active[_ngcontent-%COMP%]:hover, .menuTrigger.cdk-keyboard-focused[_ngcontent-%COMP%], .menuTrigger.cdk-keyboard-focused[_ngcontent-%COMP%]:hover{background-color:var(--fluent-theme-neutral-quarter-alt-color, #E1DFDD)}.menuTrigger.cdk-program-focused[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]{outline:var(--focus-two-tone-outline-definition, auto 1px);outline-color:var(--focus-two-tone-outline-color, -webkit-focus-ring-color)}button.mat-menu-item[_ngcontent-%COMP%]{color:var(--fluent-theme-neutral-dark-color, #201F1E);height:36px;line-height:19px;padding:8px}button.mat-menu-item[_ngcontent-%COMP%]:disabled{color:var(--fluent-theme-neutral-tertia-color, #A19F9D)}" ],
                changeDetection: 0
            }), DatasetContextMenuComponent;
        }();
        function cdsa_model_uniqueId(cdsaModel) {
            return cdsaModel.objectId;
        }
        var isStreamingDataflow = function(model) {
            return !!(8 & (null == model ? void 0 : model.capabilities));
        }, dataflow_context_menu_component_c0 = [ "dataflowMenu" ];
        function DataflowContextMenuComponent_mat_icon_2_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "mat-icon", 9), 2 & rf) {
                var ctx_r1 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275propertyInterpolate"]("fontIcon", ctx_r1.menuIcon);
            }
        }
        function DataflowContextMenuComponent_tri_svg_icon_3_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "tri-svg-icon", 10), 2 & rf) {
                var ctx_r2 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("name", ctx_r2.triMenuIcon);
            }
        }
        function DataflowContextMenuComponent_span_4_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "span"), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r3 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate"](ctx_r3.label);
            }
        }
        function DataflowContextMenuComponent_ng_template_7_ng_container_1_ng_container_1_ng_container_1_span_2_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "span"), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var item_r11 = core["\u0275\u0275nextContext"](2).$implicit;
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate"](item_r11.text);
            }
        }
        function DataflowContextMenuComponent_ng_template_7_ng_container_1_ng_container_1_ng_container_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r19 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "button", 17), 
                core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r19);
                    var item_r11 = core["\u0275\u0275nextContext"]().$implicit;
                    return core["\u0275\u0275resetView"](item_r11.execute());
                }), core["\u0275\u0275template"](2, DataflowContextMenuComponent_ng_template_7_ng_container_1_ng_container_1_ng_container_1_span_2_Template, 2, 1, "span", 4), 
                core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementContainerEnd"]();
            }
            if (2 & rf) {
                var item_r11 = core["\u0275\u0275nextContext"]().$implicit;
                core["\u0275\u0275nextContext"](3);
                var _r6 = core["\u0275\u0275reference"](9);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("matMenuTriggerFor", _r6)("disabled", item_r11.disabled), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", item_r11.text);
            }
        }
        function DataflowContextMenuComponent_ng_template_7_ng_container_1_ng_container_1_ng_template_2_span_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "span"), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var item_r11 = core["\u0275\u0275nextContext"](2).$implicit;
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate"](item_r11.text);
            }
        }
        function DataflowContextMenuComponent_ng_template_7_ng_container_1_ng_container_1_ng_template_2_Template(rf, ctx) {
            if (1 & rf) {
                var _r25 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "button", 18), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r25);
                    var item_r11 = core["\u0275\u0275nextContext"]().$implicit;
                    return core["\u0275\u0275resetView"](item_r11.execute());
                }), core["\u0275\u0275template"](1, DataflowContextMenuComponent_ng_template_7_ng_container_1_ng_container_1_ng_template_2_span_1_Template, 2, 1, "span", 4), 
                core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var item_r11 = core["\u0275\u0275nextContext"]().$implicit;
                core["\u0275\u0275property"]("disabled", item_r11.disabled), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275property"]("ngIf", item_r11.text);
            }
        }
        function DataflowContextMenuComponent_ng_template_7_ng_container_1_ng_container_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, DataflowContextMenuComponent_ng_template_7_ng_container_1_ng_container_1_ng_container_1_Template, 3, 3, "ng-container", 15), 
            core["\u0275\u0275template"](2, DataflowContextMenuComponent_ng_template_7_ng_container_1_ng_container_1_ng_template_2_Template, 2, 2, "ng-template", null, 16, core["\u0275\u0275templateRefExtractor"]), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var item_r11 = ctx.$implicit, _r13 = core["\u0275\u0275reference"](3), ctx_r10 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", item_r11.type === ctx_r10.StartMenuFlyout)("ngIfElse", _r13);
            }
        }
        function DataflowContextMenuComponent_ng_template_7_ng_container_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, DataflowContextMenuComponent_ng_template_7_ng_container_1_ng_container_1_Template, 4, 2, "ng-container", 14), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var ctx_r8 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngForOf", ctx_r8.items);
            }
        }
        function DataflowContextMenuComponent_ng_template_7_pbi_spinner_2_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "pbi-spinner", 19);
        }
        function DataflowContextMenuComponent_ng_template_7_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0, 11), core["\u0275\u0275template"](1, DataflowContextMenuComponent_ng_template_7_ng_container_1_Template, 2, 1, "ng-container", 12), 
            core["\u0275\u0275template"](2, DataflowContextMenuComponent_ng_template_7_pbi_spinner_2_Template, 1, 0, "pbi-spinner", 13), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var ctx_r5 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("ngSwitch", !!ctx_r5.items && ctx_r5.items.length > 0), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", !0), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", !1);
            }
        }
        function DataflowContextMenuComponent_ng_template_10_button_0_span_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "span"), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var startItem_r28 = core["\u0275\u0275nextContext"]().$implicit;
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate"](startItem_r28.text);
            }
        }
        function DataflowContextMenuComponent_ng_template_10_button_0_Template(rf, ctx) {
            if (1 & rf) {
                var _r32 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "button", 18), core["\u0275\u0275listener"]("click", function() {
                    var restoredCtx = core["\u0275\u0275restoreView"](_r32);
                    return core["\u0275\u0275resetView"](restoredCtx.$implicit.execute());
                }), core["\u0275\u0275template"](1, DataflowContextMenuComponent_ng_template_10_button_0_span_1_Template, 2, 1, "span", 4), 
                core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var startItem_r28 = ctx.$implicit;
                core["\u0275\u0275property"]("disabled", startItem_r28.disabled), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275property"]("ngIf", startItem_r28.text);
            }
        }
        function DataflowContextMenuComponent_ng_template_10_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275template"](0, DataflowContextMenuComponent_ng_template_10_button_0_Template, 2, 2, "button", 20), 
            2 & rf) {
                var ctx_r7 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("ngForOf", ctx_r7.startItems);
            }
        }
        var dataflow_context_menu_component_c1 = function(a0) {
            return {
                active: a0
            };
        }, dataflow_context_menu_component_actions = [ 0, 2, 3, 4, 19, 5, 6, 9, 16, 17 ], streamingDataflowActions = [ 14, 2, 19, 5, 6, 9, 18, 16, 17 ], streamingDataflowStartOptionsActions = [ 10, 13, 12 ], DataflowContextMenuComponent = function() {
            function DataflowContextMenuComponent(lazyProvider, changeDetectorRef) {
                this.lazyProvider = lazyProvider, this.changeDetectorRef = changeDetectorRef, this.tabindex = 0, 
                this.currentMenuItemIdChange = new core.EventEmitter, this.onMenuOpenedEvent = new core.EventEmitter, 
                this.StartMenuFlyout = 14;
            }
            return DataflowContextMenuComponent.prototype.ngOnInit = function() {
                (0, Common.mv)(this.cdsaModel, "dataflow cannot be null");
            }, DataflowContextMenuComponent.prototype.onMenuOpened = function() {
                var _a;
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var _b, isAStreamingDataflow, _c, _d;
                    return (0, tslib_es6.__generator)(this, function(_e) {
                        switch (_e.label) {
                          case 0:
                            return this.currentMenuItemId = cdsa_model_uniqueId(this.cdsaModel), this.currentMenuItemIdChange.emit(this.currentMenuItemId), 
                            this.items = [], this.dataflowActionsService ? [ 3, 2 ] : (_b = this, [ 4, this.lazyProvider.get("@powerbi/ArtifactActions/artifact-actions.module#ArtifactActionsModule", "DataflowActionsService") ]);

                          case 1:
                            _b.dataflowActionsService = _e.sent(), _e.label = 2;

                          case 2:
                            return isAStreamingDataflow = isStreamingDataflow(this.cdsaModel), _c = this, [ 4, this.dataflowActionsService.getMenuItems({
                                artifact: this.cdsaModel
                            }, isAStreamingDataflow ? streamingDataflowActions : dataflow_context_menu_component_actions) ];

                          case 3:
                            return _c.items = _e.sent(), isAStreamingDataflow ? (_d = this, [ 4, this.dataflowActionsService.getMenuItems({
                                artifact: this.cdsaModel
                            }, streamingDataflowStartOptionsActions) ]) : [ 3, 5 ];

                          case 4:
                            _d.startItems = _e.sent(), _e.label = 5;

                          case 5:
                            return this.onMenuOpenedEvent.emit(this.items), null === (_a = this.menu) || void 0 === _a || _a.focusFirstItem(), 
                            this.changeDetectorRef.markForCheck(), [ 2 ];
                        }
                    });
                });
            }, DataflowContextMenuComponent.prototype.onMenuClosed = function() {
                this.currentMenuItemId = null, this.currentMenuItemIdChange.emit(this.currentMenuItemId);
            }, DataflowContextMenuComponent.\u0275fac = function(t) {
                return new (t || DataflowContextMenuComponent)(core["\u0275\u0275directiveInject"](lazy_provider.E), core["\u0275\u0275directiveInject"](core.ChangeDetectorRef));
            }, DataflowContextMenuComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: DataflowContextMenuComponent,
                selectors: [ [ "dataflow-context-menu" ] ],
                viewQuery: function(rf, ctx) {
                    var _t;
                    1 & rf && core["\u0275\u0275viewQuery"](dataflow_context_menu_component_c0, 7), 
                    2 & rf && core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx.menu = _t.first);
                },
                inputs: {
                    menuIcon: "menuIcon",
                    triMenuIcon: "triMenuIcon",
                    label: "label",
                    ariaLabel: "ariaLabel",
                    tooltip: "tooltip",
                    cdsaModel: "cdsaModel",
                    tabindex: "tabindex",
                    currentMenuItemId: "currentMenuItemId"
                },
                outputs: {
                    currentMenuItemIdChange: "currentMenuItemIdChange",
                    onMenuOpenedEvent: "onMenuOpenedEvent"
                },
                decls: 11,
                vars: 10,
                consts: [ [ "mat-icon-button", "", "cdkMonitorElementFocus", "", 1, "menuTrigger", 3, "matMenuTriggerFor", "ngClass", "menuOpened", "menuClosed" ], [ "dataflowMenuTrigger", "matMenuTrigger" ], [ "class", "glyph-small", 3, "fontIcon", 4, "ngIf" ], [ 3, "name", 4, "ngIf" ], [ 4, "ngIf" ], [ 1, "artifact-menu" ], [ "dataflowMenu", "matMenu" ], [ "matMenuContent", "" ], [ "startMenu", "matMenu" ], [ 1, "glyph-small", 3, "fontIcon" ], [ 3, "name" ], [ 3, "ngSwitch" ], [ 4, "ngSwitchCase" ], [ "class", "pbi-spinner-small", 4, "ngSwitchCase" ], [ 4, "ngFor", "ngForOf" ], [ 4, "ngIf", "ngIfElse" ], [ "menuItem", "" ], [ "mat-menu-item", "", "role", "menuitem", 3, "matMenuTriggerFor", "disabled", "click" ], [ "mat-menu-item", "", "role", "menuitem", 3, "disabled", "click" ], [ 1, "pbi-spinner-small" ], [ "mat-menu-item", "", "role", "menuitem", 3, "disabled", "click", 4, "ngFor", "ngForOf" ] ],
                template: function(rf, ctx) {
                    if (1 & rf && (core["\u0275\u0275elementStart"](0, "button", 0, 1), core["\u0275\u0275listener"]("menuOpened", function() {
                        return ctx.onMenuOpened();
                    })("menuClosed", function() {
                        return ctx.onMenuClosed();
                    }), core["\u0275\u0275template"](2, DataflowContextMenuComponent_mat_icon_2_Template, 1, 1, "mat-icon", 2), 
                    core["\u0275\u0275template"](3, DataflowContextMenuComponent_tri_svg_icon_3_Template, 1, 1, "tri-svg-icon", 3), 
                    core["\u0275\u0275template"](4, DataflowContextMenuComponent_span_4_Template, 2, 1, "span", 4), 
                    core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](5, "mat-menu", 5, 6), 
                    core["\u0275\u0275template"](7, DataflowContextMenuComponent_ng_template_7_Template, 3, 3, "ng-template", 7), 
                    core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](8, "mat-menu", null, 8), 
                    core["\u0275\u0275template"](10, DataflowContextMenuComponent_ng_template_10_Template, 1, 1, "ng-template", 7), 
                    core["\u0275\u0275elementEnd"]()), 2 & rf) {
                        var _r0 = core["\u0275\u0275reference"](1), _r4 = core["\u0275\u0275reference"](6);
                        core["\u0275\u0275property"]("matMenuTriggerFor", _r4)("ngClass", core["\u0275\u0275pureFunction1"](8, dataflow_context_menu_component_c1, !0 === _r0.menuOpen)), 
                        core["\u0275\u0275attribute"]("tabindex", ctx.tabindex)("aria-label", ctx.ariaLabel)("title", ctx.tooltip), 
                        core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", ctx.menuIcon), 
                        core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !ctx.menuIcon && ctx.triMenuIcon), 
                        core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx.label);
                    }
                },
                dependencies: [ common.NgClass, common.NgForOf, common.NgIf, common.NgSwitch, common.NgSwitchCase, legacy_menu.W0, legacy_menu.tN, legacy_menu.D8, legacy_menu.hd, icon.Hw, pbi_spinner_component.k, a11y.kH, tri_svg_icon_component.M ],
                styles: [ ".mat-menu-panel.artifact-menu{min-height:auto}  .menuTrigger mat-icon:before{vertical-align:middle}.menuTrigger[_ngcontent-%COMP%]{background:none;border:none;padding:0;height:48px;width:36px;fill:currentColor}.menuTrigger[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]{transform:rotate(90deg)}.menuTrigger[_ngcontent-%COMP%]:hover{background-color:var(--fluent-theme-neutral-light-color, #EDEBE9)}.menuTrigger[_ngcontent-%COMP%]:hover   tri-svg-icon[_ngcontent-%COMP%]{fill:var(--colorNeutralForeground2BrandHover)}.menuTrigger.active[_ngcontent-%COMP%], .menuTrigger.active[_ngcontent-%COMP%]:hover, .menuTrigger.cdk-keyboard-focused[_ngcontent-%COMP%], .menuTrigger.cdk-keyboard-focused[_ngcontent-%COMP%]:hover{background-color:var(--fluent-theme-neutral-quarter-alt-color, #E1DFDD)}button.mat-menu-item[_ngcontent-%COMP%]{color:var(--fluent-theme-neutral-dark-color, #201F1E);height:36px;line-height:19px;padding:8px}button.mat-menu-item[_ngcontent-%COMP%]:disabled{color:var(--fluent-theme-neutral-tertia-color, #A19F9D)}" ],
                changeDetection: 0
            }), DataflowContextMenuComponent;
        }(), dataflow_gen2_context_menu_component_c0 = [ "dataflowGen2Menu" ];
        function DataflowGen2ContextMenuComponent_mat_icon_2_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "mat-icon", 8), 2 & rf) {
                var ctx_r1 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275propertyInterpolate"]("fontIcon", ctx_r1.menuIcon);
            }
        }
        function DataflowGen2ContextMenuComponent_tri_svg_icon_3_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "tri-svg-icon", 9), 2 & rf) {
                var ctx_r2 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("name", ctx_r2.triMenuIcon);
            }
        }
        function DataflowGen2ContextMenuComponent_span_4_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "span"), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r3 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate"](ctx_r3.label);
            }
        }
        function DataflowGen2ContextMenuComponent_ng_template_7_ng_container_1_ng_container_1_span_2_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "span"), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var item_r9 = core["\u0275\u0275nextContext"]().$implicit;
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate"](item_r9.text);
            }
        }
        function DataflowGen2ContextMenuComponent_ng_template_7_ng_container_1_ng_container_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r13 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "button", 14), 
                core["\u0275\u0275listener"]("click", function() {
                    var restoredCtx = core["\u0275\u0275restoreView"](_r13);
                    return core["\u0275\u0275resetView"](restoredCtx.$implicit.execute());
                }), core["\u0275\u0275template"](2, DataflowGen2ContextMenuComponent_ng_template_7_ng_container_1_ng_container_1_span_2_Template, 2, 1, "span", 4), 
                core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementContainerEnd"]();
            }
            if (2 & rf) {
                var item_r9 = ctx.$implicit;
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("disabled", item_r9.disabled), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", item_r9.text);
            }
        }
        function DataflowGen2ContextMenuComponent_ng_template_7_ng_container_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, DataflowGen2ContextMenuComponent_ng_template_7_ng_container_1_ng_container_1_Template, 3, 2, "ng-container", 13), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var ctx_r6 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngForOf", ctx_r6.items);
            }
        }
        function DataflowGen2ContextMenuComponent_ng_template_7_pbi_spinner_2_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "pbi-spinner", 15);
        }
        function DataflowGen2ContextMenuComponent_ng_template_7_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0, 10), core["\u0275\u0275template"](1, DataflowGen2ContextMenuComponent_ng_template_7_ng_container_1_Template, 2, 1, "ng-container", 11), 
            core["\u0275\u0275template"](2, DataflowGen2ContextMenuComponent_ng_template_7_pbi_spinner_2_Template, 1, 0, "pbi-spinner", 12), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var ctx_r5 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("ngSwitch", !!ctx_r5.items && ctx_r5.items.length > 0), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", !0), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", !1);
            }
        }
        var dataflow_gen2_context_menu_component_c1 = function(a0) {
            return {
                active: a0
            };
        }, dataflow_gen2_context_menu_component_actions = [ 0, 2, 3, 4, 13, 5, 6, 9, 11, 12 ], DataflowGen2ContextMenuComponent = function() {
            function DataflowGen2ContextMenuComponent(lazyProvider, changeDetectorRef) {
                this.lazyProvider = lazyProvider, this.changeDetectorRef = changeDetectorRef, this.tabindex = 0, 
                this.currentMenuItemIdChange = new core.EventEmitter, this.onMenuOpenedEvent = new core.EventEmitter;
            }
            return DataflowGen2ContextMenuComponent.prototype.ngOnInit = function() {
                (0, Common.mv)(this.cdsaModel, "dataflow cannot be null");
            }, DataflowGen2ContextMenuComponent.prototype.onMenuOpened = function() {
                var _a;
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var _b, _c;
                    return (0, tslib_es6.__generator)(this, function(_d) {
                        switch (_d.label) {
                          case 0:
                            return this.currentMenuItemId = cdsa_model_uniqueId(this.cdsaModel), this.currentMenuItemIdChange.emit(this.currentMenuItemId), 
                            this.items = [], this.dataflowGen2ActionsService ? [ 3, 2 ] : (_b = this, [ 4, this.lazyProvider.get("@powerbi/ArtifactActions/artifact-actions.module#ArtifactActionsModule", "DataflowGen2ActionsService") ]);

                          case 1:
                            _b.dataflowGen2ActionsService = _d.sent(), _d.label = 2;

                          case 2:
                            return _c = this, [ 4, this.dataflowGen2ActionsService.getMenuItems({
                                artifact: this.cdsaModel
                            }, dataflow_gen2_context_menu_component_actions) ];

                          case 3:
                            return _c.items = _d.sent(), this.onMenuOpenedEvent.emit(this.items), null === (_a = this.menu) || void 0 === _a || _a.focusFirstItem(), 
                            this.changeDetectorRef.markForCheck(), [ 2 ];
                        }
                    });
                });
            }, DataflowGen2ContextMenuComponent.prototype.onMenuClosed = function() {
                this.currentMenuItemId = null, this.currentMenuItemIdChange.emit(this.currentMenuItemId);
            }, DataflowGen2ContextMenuComponent.\u0275fac = function(t) {
                return new (t || DataflowGen2ContextMenuComponent)(core["\u0275\u0275directiveInject"](lazy_provider.E), core["\u0275\u0275directiveInject"](core.ChangeDetectorRef));
            }, DataflowGen2ContextMenuComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: DataflowGen2ContextMenuComponent,
                selectors: [ [ "dataflow-gen2-context-menu" ] ],
                viewQuery: function(rf, ctx) {
                    var _t;
                    1 & rf && core["\u0275\u0275viewQuery"](dataflow_gen2_context_menu_component_c0, 7), 
                    2 & rf && core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx.menu = _t.first);
                },
                inputs: {
                    disabled: "disabled",
                    menuIcon: "menuIcon",
                    triMenuIcon: "triMenuIcon",
                    label: "label",
                    ariaLabel: "ariaLabel",
                    tooltip: "tooltip",
                    cdsaModel: "cdsaModel",
                    tabindex: "tabindex",
                    currentMenuItemId: "currentMenuItemId"
                },
                outputs: {
                    currentMenuItemIdChange: "currentMenuItemIdChange",
                    onMenuOpenedEvent: "onMenuOpenedEvent"
                },
                decls: 8,
                vars: 11,
                consts: [ [ "mat-icon-button", "", "cdkMonitorElementFocus", "", 1, "menuTrigger", 3, "disabled", "matMenuTriggerFor", "ngClass", "menuOpened", "menuClosed" ], [ "dataflowGen2MenuTrigger", "matMenuTrigger" ], [ "class", "glyph-small", 3, "fontIcon", 4, "ngIf" ], [ 3, "name", 4, "ngIf" ], [ 4, "ngIf" ], [ 1, "artifact-menu" ], [ "dataflowGen2Menu", "matMenu" ], [ "matMenuContent", "" ], [ 1, "glyph-small", 3, "fontIcon" ], [ 3, "name" ], [ 3, "ngSwitch" ], [ 4, "ngSwitchCase" ], [ "class", "pbi-spinner-small", 4, "ngSwitchCase" ], [ 4, "ngFor", "ngForOf" ], [ "mat-menu-item", "", "role", "menuitem", 3, "disabled", "click" ], [ 1, "pbi-spinner-small" ] ],
                template: function(rf, ctx) {
                    if (1 & rf && (core["\u0275\u0275elementStart"](0, "button", 0, 1), core["\u0275\u0275listener"]("menuOpened", function() {
                        return ctx.onMenuOpened();
                    })("menuClosed", function() {
                        return ctx.onMenuClosed();
                    }), core["\u0275\u0275template"](2, DataflowGen2ContextMenuComponent_mat_icon_2_Template, 1, 1, "mat-icon", 2), 
                    core["\u0275\u0275template"](3, DataflowGen2ContextMenuComponent_tri_svg_icon_3_Template, 1, 1, "tri-svg-icon", 3), 
                    core["\u0275\u0275template"](4, DataflowGen2ContextMenuComponent_span_4_Template, 2, 1, "span", 4), 
                    core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](5, "mat-menu", 5, 6), 
                    core["\u0275\u0275template"](7, DataflowGen2ContextMenuComponent_ng_template_7_Template, 3, 3, "ng-template", 7), 
                    core["\u0275\u0275elementEnd"]()), 2 & rf) {
                        var _r0 = core["\u0275\u0275reference"](1), _r4 = core["\u0275\u0275reference"](6);
                        core["\u0275\u0275property"]("disabled", ctx.disabled)("matMenuTriggerFor", _r4)("ngClass", core["\u0275\u0275pureFunction1"](9, dataflow_gen2_context_menu_component_c1, !0 === _r0.menuOpen)), 
                        core["\u0275\u0275attribute"]("tabindex", ctx.tabindex)("aria-label", ctx.ariaLabel)("title", ctx.tooltip), 
                        core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", ctx.menuIcon), 
                        core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !ctx.menuIcon && ctx.triMenuIcon), 
                        core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx.label);
                    }
                },
                dependencies: [ common.NgClass, common.NgForOf, common.NgIf, common.NgSwitch, common.NgSwitchCase, legacy_menu.W0, legacy_menu.tN, legacy_menu.D8, legacy_menu.hd, icon.Hw, pbi_spinner_component.k, a11y.kH, tri_svg_icon_component.M ],
                styles: [ ".mat-menu-panel.artifact-menu{min-height:auto}  .menuTrigger mat-icon:before{vertical-align:middle}.menuTrigger[_ngcontent-%COMP%]{background:none;border:none;padding:0;height:48px;width:36px;fill:currentColor}.menuTrigger[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]{transform:rotate(90deg)}.menuTrigger[_ngcontent-%COMP%]:hover{background-color:var(--fluent-theme-neutral-light-color, #EDEBE9)}.menuTrigger[_ngcontent-%COMP%]:hover   tri-svg-icon[_ngcontent-%COMP%]{fill:var(--colorNeutralForeground2BrandHover)}.menuTrigger.active[_ngcontent-%COMP%], .menuTrigger.active[_ngcontent-%COMP%]:hover, .menuTrigger.cdk-keyboard-focused[_ngcontent-%COMP%], .menuTrigger.cdk-keyboard-focused[_ngcontent-%COMP%]:hover{background-color:var(--fluent-theme-neutral-quarter-alt-color, #E1DFDD)}button.mat-menu-item[_ngcontent-%COMP%]{color:var(--fluent-theme-neutral-dark-color, #201F1E);height:36px;line-height:19px;padding:8px}button.mat-menu-item[_ngcontent-%COMP%]:disabled{color:var(--fluent-theme-neutral-tertia-color, #A19F9D)}" ],
                changeDetection: 0
            }), DataflowGen2ContextMenuComponent;
        }(), helpers_report = __webpack_require__(12058), report_context_menu_component_c0 = [ "reportMenu" ];
        function ReportContextMenuComponent_mat_icon_2_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "mat-icon", 8), 2 & rf) {
                var ctx_r1 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275propertyInterpolate"]("fontIcon", ctx_r1.menuIcon);
            }
        }
        function ReportContextMenuComponent_tri_svg_icon_3_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "tri-svg-icon", 9), 2 & rf) {
                var ctx_r2 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("name", ctx_r2.triMenuIcon);
            }
        }
        function ReportContextMenuComponent_span_4_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "span"), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r3 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate"](ctx_r3.label);
            }
        }
        function ReportContextMenuComponent_ng_template_7_ng_container_1_div_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r11 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div", 14)(1, "button", 15), core["\u0275\u0275listener"]("click", function() {
                    var item_r9 = core["\u0275\u0275restoreView"](_r11).$implicit, ctx_r10 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r10.clickHandler(item_r9));
                }), core["\u0275\u0275elementStart"](2, "span"), core["\u0275\u0275text"](3), core["\u0275\u0275pipe"](4, "async"), 
                core["\u0275\u0275elementEnd"]()()();
            }
            if (2 & rf) {
                var item_r9 = ctx.$implicit;
                core["\u0275\u0275property"]("pbiTooltip", item_r9.disabled ? item_r9.disabledTooltip : item_r9.tooltip), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("disabled", !!item_r9.disabled), 
                core["\u0275\u0275attribute"]("data-testid", "reportContextMenuItem." + item_r9.text), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](item_r9.text || core["\u0275\u0275pipeBind1"](4, 4, item_r9.text$));
            }
        }
        function ReportContextMenuComponent_ng_template_7_ng_container_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, ReportContextMenuComponent_ng_template_7_ng_container_1_div_1_Template, 5, 6, "div", 13), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var ctx_r6 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngForOf", ctx_r6.items);
            }
        }
        function ReportContextMenuComponent_ng_template_7_pbi_spinner_2_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "pbi-spinner", 16);
        }
        function ReportContextMenuComponent_ng_template_7_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0, 10), core["\u0275\u0275template"](1, ReportContextMenuComponent_ng_template_7_ng_container_1_Template, 2, 1, "ng-container", 11), 
            core["\u0275\u0275template"](2, ReportContextMenuComponent_ng_template_7_pbi_spinner_2_Template, 1, 0, "pbi-spinner", 12), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var ctx_r5 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("ngSwitch", !!ctx_r5.items && ctx_r5.items.length > 0), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", !0), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", !1);
            }
        }
        var report_context_menu_component_c1 = function(a0) {
            return {
                active: a0
            };
        }, report_context_menu_component_actions = [ 2, 13, 9, 3, 11, 10, 12, 7, 0, 4, 5, 6, 15, 18, 20 ], ReportContextMenuComponent = function() {
            function ReportContextMenuComponent(lazyProvider, changeDetectorRef, featureSwitchService) {
                this.lazyProvider = lazyProvider, this.changeDetectorRef = changeDetectorRef, this.featureSwitchService = featureSwitchService, 
                this.tabindex = 0, this.currentMenuItemIdChange = new core.EventEmitter, this.onMenuOpenedEvent = new core.EventEmitter, 
                this.executionRun = new core.EventEmitter, this.defaultActions = report_context_menu_component_actions;
            }
            return ReportContextMenuComponent.prototype.ngOnInit = function() {
                (0, Common.mv)(this.report, "Report cannotbe null"), this.featureSwitchService.featureSwitches.hideActionAsDefault && this.defaultActions.indexOf(17) < 0 && this.defaultActions.push(17), 
                this.featureSwitchService.featureSwitches.dataExplore && this.defaultActions.indexOf(21) < 0 && this.defaultActions.unshift(21), 
                this.featureSwitchService.featureSwitches.immersiveCopilotOnArtifactEntryPoint && this.defaultActions.indexOf(22) < 0 && this.defaultActions.push(22);
            }, ReportContextMenuComponent.prototype.onMenuOpened = function() {
                var _a;
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var _b, _c;
                    return (0, tslib_es6.__generator)(this, function(_d) {
                        switch (_d.label) {
                          case 0:
                            return this.currentMenuItemId = (0, helpers_report.EL)(this.report), this.currentMenuItemIdChange.emit(this.currentMenuItemId), 
                            this.reportActionsService ? [ 3, 2 ] : (_b = this, [ 4, this.lazyProvider.get("@powerbi/ArtifactActions/artifact-actions.module#ArtifactActionsModule", "ReportActionsService") ]);

                          case 1:
                            _b.reportActionsService = _d.sent(), _d.label = 2;

                          case 2:
                            return _c = this, [ 4, this.reportActionsService.getMenuItems({
                                artifact: this.report
                            }, this.availableActions || this.defaultActions, this.callingContext) ];

                          case 3:
                            return _c.items = _d.sent(), this.onMenuOpenedEvent.emit(this.items), null === (_a = this.menu) || void 0 === _a || _a.focusFirstItem(), 
                            this.changeDetectorRef.markForCheck(), [ 2 ];
                        }
                    });
                });
            }, ReportContextMenuComponent.prototype.onMenuClosed = function() {
                this.currentMenuItemId = null, this.currentMenuItemIdChange.emit(this.currentMenuItemId);
            }, ReportContextMenuComponent.prototype.clickHandler = function(item) {
                item.execute(), this.executionRun.emit(item);
            }, ReportContextMenuComponent.\u0275fac = function(t) {
                return new (t || ReportContextMenuComponent)(core["\u0275\u0275directiveInject"](lazy_provider.E), core["\u0275\u0275directiveInject"](core.ChangeDetectorRef), core["\u0275\u0275directiveInject"](feature_switch_service.vZ));
            }, ReportContextMenuComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: ReportContextMenuComponent,
                selectors: [ [ "report-context-menu" ] ],
                viewQuery: function(rf, ctx) {
                    var _t;
                    1 & rf && core["\u0275\u0275viewQuery"](report_context_menu_component_c0, 7), 2 & rf && core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx.menu = _t.first);
                },
                inputs: {
                    menuIcon: "menuIcon",
                    triMenuIcon: "triMenuIcon",
                    label: "label",
                    ariaLabel: "ariaLabel",
                    tooltip: "tooltip",
                    report: "report",
                    availableActions: "availableActions",
                    callingContext: "callingContext",
                    tabindex: "tabindex",
                    currentMenuItemId: "currentMenuItemId"
                },
                outputs: {
                    currentMenuItemIdChange: "currentMenuItemIdChange",
                    onMenuOpenedEvent: "onMenuOpenedEvent",
                    executionRun: "executionRun"
                },
                decls: 8,
                vars: 9,
                consts: [ [ "mat-icon-button", "", "cdkMonitorElementFocus", "", "data-testid", "report-context-menu-button", 1, "menuTrigger", 3, "matMenuTriggerFor", "pbiTooltip", "ngClass", "menuOpened", "menuClosed" ], [ "reportMenuTrigger", "matMenuTrigger" ], [ "class", "glyph-small", 3, "fontIcon", 4, "ngIf" ], [ 3, "name", 4, "ngIf" ], [ 4, "ngIf" ], [ 1, "artifact-menu" ], [ "reportMenu", "matMenu" ], [ "matMenuContent", "" ], [ 1, "glyph-small", 3, "fontIcon" ], [ 3, "name" ], [ 3, "ngSwitch" ], [ 4, "ngSwitchCase" ], [ "class", "pbi-spinner-small", 4, "ngSwitchCase" ], [ 3, "pbiTooltip", 4, "ngFor", "ngForOf" ], [ 3, "pbiTooltip" ], [ "mat-menu-item", "", "role", "menuitem", 3, "disabled", "click" ], [ 1, "pbi-spinner-small" ] ],
                template: function(rf, ctx) {
                    if (1 & rf && (core["\u0275\u0275elementStart"](0, "button", 0, 1), core["\u0275\u0275listener"]("menuOpened", function() {
                        return ctx.onMenuOpened();
                    })("menuClosed", function() {
                        return ctx.onMenuClosed();
                    }), core["\u0275\u0275template"](2, ReportContextMenuComponent_mat_icon_2_Template, 1, 1, "mat-icon", 2), 
                    core["\u0275\u0275template"](3, ReportContextMenuComponent_tri_svg_icon_3_Template, 1, 1, "tri-svg-icon", 3), 
                    core["\u0275\u0275template"](4, ReportContextMenuComponent_span_4_Template, 2, 1, "span", 4), 
                    core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](5, "mat-menu", 5, 6), 
                    core["\u0275\u0275template"](7, ReportContextMenuComponent_ng_template_7_Template, 3, 3, "ng-template", 7), 
                    core["\u0275\u0275elementEnd"]()), 2 & rf) {
                        var _r0 = core["\u0275\u0275reference"](1), _r4 = core["\u0275\u0275reference"](6);
                        core["\u0275\u0275property"]("matMenuTriggerFor", _r4)("pbiTooltip", ctx.ariaLabel)("ngClass", core["\u0275\u0275pureFunction1"](7, report_context_menu_component_c1, !0 === _r0.menuOpen)), 
                        core["\u0275\u0275attribute"]("tabindex", ctx.tabindex), core["\u0275\u0275advance"](2), 
                        core["\u0275\u0275property"]("ngIf", ctx.menuIcon), core["\u0275\u0275advance"](1), 
                        core["\u0275\u0275property"]("ngIf", !ctx.menuIcon && ctx.triMenuIcon), core["\u0275\u0275advance"](1), 
                        core["\u0275\u0275property"]("ngIf", ctx.label);
                    }
                },
                dependencies: [ common.NgClass, common.NgForOf, common.NgIf, common.NgSwitch, common.NgSwitchCase, legacy_menu.W0, legacy_menu.tN, legacy_menu.D8, legacy_menu.hd, icon.Hw, pbi_spinner_component.k, a11y.kH, pbi_tooltip_directive.V, tri_svg_icon_component.M, common.AsyncPipe ],
                styles: [ ".mat-menu-panel.artifact-menu{min-height:auto}  .menuTrigger mat-icon:before{vertical-align:middle}.menuTrigger[_ngcontent-%COMP%]{background:none;border:none;padding:0;height:48px;width:36px;fill:currentColor}.menuTrigger[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]{transform:rotate(90deg)}.menuTrigger[_ngcontent-%COMP%]:hover{background-color:var(--fluent-theme-neutral-light-color, #EDEBE9)}.menuTrigger[_ngcontent-%COMP%]:hover   tri-svg-icon[_ngcontent-%COMP%]{fill:var(--colorNeutralForeground2BrandHover)}.menuTrigger.active[_ngcontent-%COMP%], .menuTrigger.active[_ngcontent-%COMP%]:hover, .menuTrigger.cdk-keyboard-focused[_ngcontent-%COMP%], .menuTrigger.cdk-keyboard-focused[_ngcontent-%COMP%]:hover{background-color:var(--fluent-theme-neutral-quarter-alt-color, #E1DFDD)}button.mat-menu-item[_ngcontent-%COMP%]{color:var(--fluent-theme-neutral-dark-color, #201F1E);height:36px;line-height:19px;padding:8px}button.mat-menu-item[_ngcontent-%COMP%]:disabled{color:var(--fluent-theme-neutral-tertia-color, #A19F9D)}" ],
                changeDetection: 0
            }), ReportContextMenuComponent;
        }(), scorecardActionsService = __webpack_require__(73088), scorecard_context_menu_component_c0 = [ "scorecardMenu" ];
        function ScorecardContextMenuComponent_mat_icon_2_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "mat-icon", 8), 2 & rf) {
                var ctx_r1 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275propertyInterpolate"]("fontIcon", ctx_r1.menuIcon);
            }
        }
        function ScorecardContextMenuComponent_tri_svg_icon_3_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "tri-svg-icon", 9), 2 & rf) {
                var ctx_r2 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("name", ctx_r2.triMenuIcon);
            }
        }
        function ScorecardContextMenuComponent_span_4_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "span"), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r3 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate"](ctx_r3.label);
            }
        }
        function ScorecardContextMenuComponent_ng_template_7_ng_container_1_button_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r11 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "button", 14), core["\u0275\u0275listener"]("click", function() {
                    var restoredCtx = core["\u0275\u0275restoreView"](_r11);
                    return core["\u0275\u0275resetView"](restoredCtx.$implicit.execute());
                }), core["\u0275\u0275elementStart"](1, "span"), core["\u0275\u0275text"](2), core["\u0275\u0275pipe"](3, "async"), 
                core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var item_r9 = ctx.$implicit;
                core["\u0275\u0275property"]("disabled", !!item_r9.disabled), core["\u0275\u0275advance"](2), 
                core["\u0275\u0275textInterpolate"](item_r9.text || core["\u0275\u0275pipeBind1"](3, 2, item_r9.text$));
            }
        }
        function ScorecardContextMenuComponent_ng_template_7_ng_container_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, ScorecardContextMenuComponent_ng_template_7_ng_container_1_button_1_Template, 4, 4, "button", 13), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var ctx_r6 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngForOf", ctx_r6.items);
            }
        }
        function ScorecardContextMenuComponent_ng_template_7_pbi_spinner_2_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "pbi-spinner", 15);
        }
        function ScorecardContextMenuComponent_ng_template_7_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0, 10), core["\u0275\u0275template"](1, ScorecardContextMenuComponent_ng_template_7_ng_container_1_Template, 2, 1, "ng-container", 11), 
            core["\u0275\u0275template"](2, ScorecardContextMenuComponent_ng_template_7_pbi_spinner_2_Template, 1, 0, "pbi-spinner", 12), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var ctx_r5 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("ngSwitch", !!ctx_r5.items && ctx_r5.items.length > 0), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", !0), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", !1);
            }
        }
        var scorecard_context_menu_component_c1 = function(a0) {
            return {
                active: a0
            };
        }, scorecard_context_menu_component_defaultActions = [ 2, 9, 7, 0, 5, 18, 20 ], ScorecardContextMenuComponent = function() {
            function ScorecardContextMenuComponent(lazyProvider, scorecardActions, changeDetectorRef) {
                this.lazyProvider = lazyProvider, this.scorecardActions = scorecardActions, this.changeDetectorRef = changeDetectorRef, 
                this.tabindex = 0, this.currentMenuItemIdChange = new core.EventEmitter, this.onMenuOpenedEvent = new core.EventEmitter;
            }
            return ScorecardContextMenuComponent.prototype.ngOnInit = function() {
                (0, Common.mv)(this.scorecard, "Scorecard cannot be null");
            }, ScorecardContextMenuComponent.prototype.onMenuOpened = function() {
                var _a;
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var _b, _c;
                    return (0, tslib_es6.__generator)(this, function(_d) {
                        switch (_d.label) {
                          case 0:
                            return this.currentMenuItemId = (0, helpers_report.EL)(this.scorecard), this.currentMenuItemIdChange.emit(this.currentMenuItemId), 
                            this.scorecardActions || this.reportActionsService ? [ 3, 2 ] : (_b = this, [ 4, this.lazyProvider.get("@powerbi/ArtifactActions/artifact-actions.module#ArtifactActionsModule", "ReportActionsService") ]);

                          case 1:
                            _b.reportActionsService = _d.sent(), _d.label = 2;

                          case 2:
                            return _c = this, [ 4, (this.scorecardActions || this.reportActionsService).getMenuItems({
                                artifact: this.scorecard
                            }, this.availableActions || scorecard_context_menu_component_defaultActions) ];

                          case 3:
                            return _c.items = _d.sent(), this.onMenuOpenedEvent.emit(this.items), null === (_a = this.menu) || void 0 === _a || _a.focusFirstItem(), 
                            this.changeDetectorRef.markForCheck(), [ 2 ];
                        }
                    });
                });
            }, ScorecardContextMenuComponent.prototype.onMenuClosed = function() {
                this.currentMenuItemId = null, this.currentMenuItemIdChange.emit(this.currentMenuItemId);
            }, ScorecardContextMenuComponent.\u0275fac = function(t) {
                return new (t || ScorecardContextMenuComponent)(core["\u0275\u0275directiveInject"](lazy_provider.E), core["\u0275\u0275directiveInject"](scorecardActionsService.F, 8), core["\u0275\u0275directiveInject"](core.ChangeDetectorRef));
            }, ScorecardContextMenuComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: ScorecardContextMenuComponent,
                selectors: [ [ "scorecard-context-menu" ] ],
                viewQuery: function(rf, ctx) {
                    var _t;
                    1 & rf && core["\u0275\u0275viewQuery"](scorecard_context_menu_component_c0, 7), 
                    2 & rf && core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx.menu = _t.first);
                },
                inputs: {
                    menuIcon: "menuIcon",
                    triMenuIcon: "triMenuIcon",
                    label: "label",
                    ariaLabel: "ariaLabel",
                    tooltip: "tooltip",
                    scorecard: "scorecard",
                    availableActions: "availableActions",
                    tabindex: "tabindex",
                    currentMenuItemId: "currentMenuItemId"
                },
                outputs: {
                    currentMenuItemIdChange: "currentMenuItemIdChange",
                    onMenuOpenedEvent: "onMenuOpenedEvent"
                },
                decls: 8,
                vars: 10,
                consts: [ [ "mat-icon-button", "", "cdkMonitorElementFocus", "", 1, "menuTrigger", 3, "matMenuTriggerFor", "ngClass", "menuOpened", "menuClosed" ], [ "scorecardMenuTrigger", "matMenuTrigger" ], [ "class", "glyph-small", 3, "fontIcon", 4, "ngIf" ], [ 3, "name", 4, "ngIf" ], [ 4, "ngIf" ], [ 1, "artifact-menu" ], [ "scorecardMenu", "matMenu" ], [ "matMenuContent", "" ], [ 1, "glyph-small", 3, "fontIcon" ], [ 3, "name" ], [ 3, "ngSwitch" ], [ 4, "ngSwitchCase" ], [ "class", "pbi-spinner-small", 4, "ngSwitchCase" ], [ "mat-menu-item", "", "role", "menuitem", 3, "disabled", "click", 4, "ngFor", "ngForOf" ], [ "mat-menu-item", "", "role", "menuitem", 3, "disabled", "click" ], [ 1, "pbi-spinner-small" ] ],
                template: function(rf, ctx) {
                    if (1 & rf && (core["\u0275\u0275elementStart"](0, "button", 0, 1), core["\u0275\u0275listener"]("menuOpened", function() {
                        return ctx.onMenuOpened();
                    })("menuClosed", function() {
                        return ctx.onMenuClosed();
                    }), core["\u0275\u0275template"](2, ScorecardContextMenuComponent_mat_icon_2_Template, 1, 1, "mat-icon", 2), 
                    core["\u0275\u0275template"](3, ScorecardContextMenuComponent_tri_svg_icon_3_Template, 1, 1, "tri-svg-icon", 3), 
                    core["\u0275\u0275template"](4, ScorecardContextMenuComponent_span_4_Template, 2, 1, "span", 4), 
                    core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](5, "mat-menu", 5, 6), 
                    core["\u0275\u0275template"](7, ScorecardContextMenuComponent_ng_template_7_Template, 3, 3, "ng-template", 7), 
                    core["\u0275\u0275elementEnd"]()), 2 & rf) {
                        var _r0 = core["\u0275\u0275reference"](1), _r4 = core["\u0275\u0275reference"](6);
                        core["\u0275\u0275property"]("matMenuTriggerFor", _r4)("ngClass", core["\u0275\u0275pureFunction1"](8, scorecard_context_menu_component_c1, !0 === _r0.menuOpen)), 
                        core["\u0275\u0275attribute"]("tabindex", ctx.tabindex)("aria-label", ctx.ariaLabel)("title", ctx.tooltip), 
                        core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", ctx.menuIcon), 
                        core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !ctx.menuIcon && ctx.triMenuIcon), 
                        core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx.label);
                    }
                },
                dependencies: [ common.NgClass, common.NgForOf, common.NgIf, common.NgSwitch, common.NgSwitchCase, legacy_menu.W0, legacy_menu.tN, legacy_menu.D8, legacy_menu.hd, icon.Hw, pbi_spinner_component.k, a11y.kH, tri_svg_icon_component.M, common.AsyncPipe ],
                styles: [ ".mat-menu-panel.artifact-menu{min-height:auto}  .menuTrigger mat-icon:before{vertical-align:middle}.menuTrigger[_ngcontent-%COMP%]{background:none;border:none;padding:0;height:48px;width:36px;fill:currentColor}.menuTrigger[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]{transform:rotate(90deg)}.menuTrigger[_ngcontent-%COMP%]:hover{background-color:var(--fluent-theme-neutral-light-color, #EDEBE9)}.menuTrigger[_ngcontent-%COMP%]:hover   tri-svg-icon[_ngcontent-%COMP%]{fill:var(--colorNeutralForeground2BrandHover)}.menuTrigger.active[_ngcontent-%COMP%], .menuTrigger.active[_ngcontent-%COMP%]:hover, .menuTrigger.cdk-keyboard-focused[_ngcontent-%COMP%], .menuTrigger.cdk-keyboard-focused[_ngcontent-%COMP%]:hover{background-color:var(--fluent-theme-neutral-quarter-alt-color, #E1DFDD)}button.mat-menu-item[_ngcontent-%COMP%]{color:var(--fluent-theme-neutral-dark-color, #201F1E);height:36px;line-height:19px;padding:8px}button.mat-menu-item[_ngcontent-%COMP%]:disabled{color:var(--fluent-theme-neutral-tertia-color, #A19F9D)}" ],
                changeDetection: 0
            }), ScorecardContextMenuComponent;
        }(), subfolder_context_menu_component_c0 = [ "subfolderMenu" ];
        function SubfolderContextMenuComponent_span_3_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "span"), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r1 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate"](ctx_r1.label);
            }
        }
        var subfolder_context_menu_component_c1 = function(a0) {
            return {
                disabled: a0
            };
        };
        function SubfolderContextMenuComponent_ng_template_6_ng_container_1_div_1_tri_svg_icon_2_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "tri-svg-icon", 14), 2 & rf) {
                var item_r7 = core["\u0275\u0275nextContext"]().$implicit;
                core["\u0275\u0275property"]("ngClass", core["\u0275\u0275pureFunction1"](3, subfolder_context_menu_component_c1, !!item_r7.disabled))("sprite", item_r7.triIcon.sprite)("name", item_r7.triIcon.name);
            }
        }
        function SubfolderContextMenuComponent_ng_template_6_ng_container_1_div_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r11 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div", 11)(1, "button", 12), core["\u0275\u0275listener"]("click", function() {
                    var item_r7 = core["\u0275\u0275restoreView"](_r11).$implicit, ctx_r10 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r10.clickHandler(item_r7));
                }), core["\u0275\u0275template"](2, SubfolderContextMenuComponent_ng_template_6_ng_container_1_div_1_tri_svg_icon_2_Template, 1, 5, "tri-svg-icon", 13), 
                core["\u0275\u0275elementStart"](3, "span"), core["\u0275\u0275text"](4), core["\u0275\u0275pipe"](5, "async"), 
                core["\u0275\u0275elementEnd"]()()();
            }
            if (2 & rf) {
                var item_r7 = ctx.$implicit;
                core["\u0275\u0275property"]("pbiTooltip", item_r7.disabled ? item_r7.disabledTooltip : item_r7.tooltip), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("disabled", !!item_r7.disabled), 
                core["\u0275\u0275attribute"]("data-testid", "contextMenuItem." + item_r7.text), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", item_r7.triIcon), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](item_r7.text || core["\u0275\u0275pipeBind1"](5, 5, item_r7.text$));
            }
        }
        function SubfolderContextMenuComponent_ng_template_6_ng_container_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, SubfolderContextMenuComponent_ng_template_6_ng_container_1_div_1_Template, 6, 7, "div", 10), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var ctx_r4 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngForOf", ctx_r4.items);
            }
        }
        function SubfolderContextMenuComponent_ng_template_6_pbi_spinner_2_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "pbi-spinner", 15);
        }
        function SubfolderContextMenuComponent_ng_template_6_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0, 7), core["\u0275\u0275template"](1, SubfolderContextMenuComponent_ng_template_6_ng_container_1_Template, 2, 1, "ng-container", 8), 
            core["\u0275\u0275template"](2, SubfolderContextMenuComponent_ng_template_6_pbi_spinner_2_Template, 1, 0, "pbi-spinner", 9), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var ctx_r3 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("ngSwitch", !!ctx_r3.items && ctx_r3.items.length > 0), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", !0), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", !1);
            }
        }
        var subfolder_context_menu_component_c2 = function(a0) {
            return {
                active: a0
            };
        }, subfolder_context_menu_component_defaultActions = [ 2, 3, 1, 0 ], SubfolderContextMenuComponent = function() {
            function SubfolderContextMenuComponent(lazyProvider, changeDetectorRef) {
                this.lazyProvider = lazyProvider, this.changeDetectorRef = changeDetectorRef, this.menuXPosition = "after", 
                this.tabindex = 0, this.currentMenuItemIdChange = new core.EventEmitter, this.onMenuOpenedEvent = new core.EventEmitter, 
                this.executionRun = new core.EventEmitter, this.items = [];
            }
            return SubfolderContextMenuComponent.prototype.ngOnInit = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        return (0, Common.mv)(this.subfolder, "Subfolder cannot be null"), [ 2 ];
                    });
                });
            }, SubfolderContextMenuComponent.prototype.onMenuOpened = function() {
                var _a, _b;
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var subfolder, _c, _d;
                    return (0, tslib_es6.__generator)(this, function(_e) {
                        switch (_e.label) {
                          case 0:
                            return subfolder = (null === (_a = this.subfolder) || void 0 === _a ? void 0 : _a.contract) || this.subfolder, 
                            this.subfolderActionsService ? [ 3, 2 ] : (_c = this, [ 4, this.lazyProvider.get("@powerbi/ArtifactActions/artifact-actions.module#ArtifactActionsModule", "SubfolderActionsService") ]);

                          case 1:
                            _c.subfolderActionsService = _e.sent(), _e.label = 2;

                          case 2:
                            return _d = this, [ 4, this.subfolderActionsService.getMenuItems(subfolder, this.availableActions || subfolder_context_menu_component_defaultActions) ];

                          case 3:
                            return _d.items = _e.sent(), this.currentMenuItemId = (0, subfolder_src.EL)(subfolder), 
                            this.currentMenuItemIdChange.emit(this.currentMenuItemId), this.onMenuOpenedEvent.emit(this.items), 
                            null === (_b = this.menu) || void 0 === _b || _b.focusFirstItem(), this.changeDetectorRef.markForCheck(), 
                            [ 2 ];
                        }
                    });
                });
            }, SubfolderContextMenuComponent.prototype.onMenuClosed = function() {
                this.currentMenuItemId = null, this.currentMenuItemIdChange.emit(this.currentMenuItemId);
            }, SubfolderContextMenuComponent.prototype.clickHandler = function(item) {
                item.execute(), this.executionRun.emit(item);
            }, SubfolderContextMenuComponent.\u0275fac = function(t) {
                return new (t || SubfolderContextMenuComponent)(core["\u0275\u0275directiveInject"](lazy_provider.E), core["\u0275\u0275directiveInject"](core.ChangeDetectorRef));
            }, SubfolderContextMenuComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: SubfolderContextMenuComponent,
                selectors: [ [ "subfolder-context-menu" ] ],
                viewQuery: function(rf, ctx) {
                    var _t;
                    1 & rf && core["\u0275\u0275viewQuery"](subfolder_context_menu_component_c0, 7), 
                    2 & rf && core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx.menu = _t.first);
                },
                inputs: {
                    menuIcon: "menuIcon",
                    label: "label",
                    ariaLabel: "ariaLabel",
                    tooltip: "tooltip",
                    subfolder: "subfolder",
                    callingContext: "callingContext",
                    availableActions: "availableActions",
                    menuXPosition: "menuXPosition",
                    tabindex: "tabindex",
                    currentMenuItemId: "currentMenuItemId"
                },
                outputs: {
                    currentMenuItemIdChange: "currentMenuItemIdChange",
                    onMenuOpenedEvent: "onMenuOpenedEvent",
                    executionRun: "executionRun"
                },
                decls: 7,
                vars: 10,
                consts: [ [ "mat-icon-button", "", "cdkMonitorElementFocus", "", 1, "menuTrigger", 3, "matMenuTriggerFor", "ngClass", "menuOpened", "menuClosed" ], [ "subfolderMenuTrigger", "matMenuTrigger" ], [ 3, "name" ], [ 4, "ngIf" ], [ 1, "artifact-menu", 3, "xPosition" ], [ "subfolderMenu", "matMenu" ], [ "matMenuContent", "" ], [ 3, "ngSwitch" ], [ 4, "ngSwitchCase" ], [ "class", "pbi-spinner-small", 4, "ngSwitchCase" ], [ 3, "pbiTooltip", 4, "ngFor", "ngForOf" ], [ 3, "pbiTooltip" ], [ "mat-menu-item", "", "role", "menuitem", 3, "disabled", "click" ], [ 3, "ngClass", "sprite", "name", 4, "ngIf" ], [ 3, "ngClass", "sprite", "name" ], [ 1, "pbi-spinner-small" ] ],
                template: function(rf, ctx) {
                    if (1 & rf && (core["\u0275\u0275elementStart"](0, "button", 0, 1), core["\u0275\u0275listener"]("menuOpened", function() {
                        return ctx.onMenuOpened();
                    })("menuClosed", function() {
                        return ctx.onMenuClosed();
                    }), core["\u0275\u0275element"](2, "tri-svg-icon", 2), core["\u0275\u0275template"](3, SubfolderContextMenuComponent_span_3_Template, 2, 1, "span", 3), 
                    core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](4, "mat-menu", 4, 5), 
                    core["\u0275\u0275template"](6, SubfolderContextMenuComponent_ng_template_6_Template, 3, 3, "ng-template", 6), 
                    core["\u0275\u0275elementEnd"]()), 2 & rf) {
                        var _r0 = core["\u0275\u0275reference"](1), _r2 = core["\u0275\u0275reference"](5);
                        core["\u0275\u0275property"]("matMenuTriggerFor", _r2)("ngClass", core["\u0275\u0275pureFunction1"](8, subfolder_context_menu_component_c2, !0 === _r0.menuOpen)), 
                        core["\u0275\u0275attribute"]("tabindex", ctx.tabindex)("aria-label", ctx.ariaLabel)("title", ctx.tooltip), 
                        core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("name", ctx.menuIcon), 
                        core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx.label), 
                        core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("xPosition", ctx.menuXPosition);
                    }
                },
                dependencies: [ common.NgClass, common.NgForOf, common.NgIf, common.NgSwitch, common.NgSwitchCase, legacy_menu.W0, legacy_menu.tN, legacy_menu.D8, legacy_menu.hd, pbi_spinner_component.k, a11y.kH, pbi_tooltip_directive.V, tri_svg_icon_component.M, common.AsyncPipe ],
                styles: [ ".mat-menu-panel.artifact-menu{min-height:auto}  .menuTrigger mat-icon:before{vertical-align:middle}.menuTrigger[_ngcontent-%COMP%]{background:none;border:none;padding:0;height:48px;width:36px;fill:currentColor}.menuTrigger[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]{transform:rotate(90deg)}.menuTrigger[_ngcontent-%COMP%]:hover{background-color:var(--fluent-theme-neutral-light-color, #EDEBE9)}.menuTrigger[_ngcontent-%COMP%]:hover   tri-svg-icon[_ngcontent-%COMP%]{fill:var(--colorNeutralForeground2BrandHover)}.menuTrigger.active[_ngcontent-%COMP%], .menuTrigger.active[_ngcontent-%COMP%]:hover, .menuTrigger.cdk-keyboard-focused[_ngcontent-%COMP%], .menuTrigger.cdk-keyboard-focused[_ngcontent-%COMP%]:hover{background-color:var(--fluent-theme-neutral-quarter-alt-color, #E1DFDD)}button.mat-menu-item[_ngcontent-%COMP%]{color:var(--fluent-theme-neutral-dark-color, #201F1E);height:36px;line-height:19px;padding:8px}button.mat-menu-item[_ngcontent-%COMP%]:disabled{color:var(--fluent-theme-neutral-tertia-color, #A19F9D)}button.mat-menu-item[_ngcontent-%COMP%]   tri-svg-icon[_ngcontent-%COMP%]{float:left;margin-right:5px}button.mat-menu-item[_ngcontent-%COMP%]   tri-svg-icon.disabled[_ngcontent-%COMP%]{fill:var(--colorNeutralForegroundDisabled)}" ],
                changeDetection: 0
            }), SubfolderContextMenuComponent;
        }(), trident_context_menu_component_c0 = [ "tridentMenu" ];
        function TridentContextMenuComponent_mat_icon_2_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "mat-icon", 13), 2 & rf) {
                var ctx_r1 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275propertyInterpolate"]("fontIcon", ctx_r1.menuIcon);
            }
        }
        function TridentContextMenuComponent_tri_svg_icon_3_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "tri-svg-icon", 14), 2 & rf) {
                var ctx_r2 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("name", ctx_r2.triMenuIcon);
            }
        }
        function TridentContextMenuComponent_span_4_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "span"), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r3 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate"](ctx_r3.label);
            }
        }
        function TridentContextMenuComponent_ng_template_7_ng_container_1_div_1_ng_container_1_tri_svg_icon_2_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "tri-svg-icon", 21), 2 & rf) {
                var item_r12 = core["\u0275\u0275nextContext"](2).$implicit;
                core["\u0275\u0275property"]("sprite", item_r12.triIcon.sprite)("name", item_r12.triIcon.name);
            }
        }
        function TridentContextMenuComponent_ng_template_7_ng_container_1_div_1_ng_container_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r20 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "button", 19), 
                core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r20);
                    var item_r12 = core["\u0275\u0275nextContext"]().$implicit, ctx_r18 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r18.clickHandler(item_r12));
                }), core["\u0275\u0275template"](2, TridentContextMenuComponent_ng_template_7_ng_container_1_div_1_ng_container_1_tri_svg_icon_2_Template, 1, 2, "tri-svg-icon", 20), 
                core["\u0275\u0275elementStart"](3, "span"), core["\u0275\u0275text"](4), core["\u0275\u0275pipe"](5, "async"), 
                core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementContainerEnd"]();
            }
            if (2 & rf) {
                var item_r12 = core["\u0275\u0275nextContext"]().$implicit;
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("disabled", !!item_r12.disabled), 
                core["\u0275\u0275attribute"]("data-testid", "contextMenuItem." + item_r12.text), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", item_r12.triIcon), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](item_r12.text || core["\u0275\u0275pipeBind1"](5, 4, item_r12.text$));
            }
        }
        function TridentContextMenuComponent_ng_template_7_ng_container_1_div_1_ng_template_2_tri_svg_icon_1_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "tri-svg-icon", 21), 2 & rf) {
                var item_r12 = core["\u0275\u0275nextContext"](2).$implicit;
                core["\u0275\u0275property"]("sprite", item_r12.triIcon.sprite)("name", item_r12.triIcon.name);
            }
        }
        function TridentContextMenuComponent_ng_template_7_ng_container_1_div_1_ng_template_2_Template(rf, ctx) {
            if (1 & rf) {
                var _r26 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "button", 19), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r26);
                    var item_r12 = core["\u0275\u0275nextContext"]().$implicit, ctx_r24 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r24.clickHandler(item_r12));
                }), core["\u0275\u0275template"](1, TridentContextMenuComponent_ng_template_7_ng_container_1_div_1_ng_template_2_tri_svg_icon_1_Template, 1, 2, "tri-svg-icon", 20), 
                core["\u0275\u0275elementStart"](2, "span"), core["\u0275\u0275text"](3), core["\u0275\u0275pipe"](4, "async"), 
                core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275element"](5, "span", 22), 
                core["\u0275\u0275elementStart"](6, "button", 23), core["\u0275\u0275listener"]("menuOpened", function() {
                    core["\u0275\u0275restoreView"](_r26);
                    var item_r12 = core["\u0275\u0275nextContext"]().$implicit, ctx_r27 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r27.onSubMenuOpened(item_r12));
                })("menuClosed", function() {
                    core["\u0275\u0275restoreView"](_r26);
                    var ctx_r29 = core["\u0275\u0275nextContext"](4);
                    return core["\u0275\u0275resetView"](ctx_r29.onSubMenuClosed());
                }), core["\u0275\u0275element"](7, "tri-svg-icon", 24), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var item_r12 = core["\u0275\u0275nextContext"]().$implicit;
                core["\u0275\u0275nextContext"](3);
                var _r6 = core["\u0275\u0275reference"](9);
                core["\u0275\u0275property"]("disabled", !!item_r12.disabled), core["\u0275\u0275attribute"]("data-testid", "contextMenuItem." + item_r12.text), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", item_r12.triIcon), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](item_r12.text || core["\u0275\u0275pipeBind1"](4, 6, item_r12.text$)), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("matMenuTriggerFor", _r6), 
                core["\u0275\u0275attribute"]("data-testid", "contextMenuItem.chevron-icon-" + item_r12.text);
            }
        }
        function TridentContextMenuComponent_ng_template_7_ng_container_1_div_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 16), core["\u0275\u0275template"](1, TridentContextMenuComponent_ng_template_7_ng_container_1_div_1_ng_container_1_Template, 6, 6, "ng-container", 17), 
            core["\u0275\u0275template"](2, TridentContextMenuComponent_ng_template_7_ng_container_1_div_1_ng_template_2_Template, 8, 8, "ng-template", null, 18, core["\u0275\u0275templateRefExtractor"]), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var item_r12 = ctx.$implicit, _r14 = core["\u0275\u0275reference"](3);
                core["\u0275\u0275property"]("pbiTooltip", item_r12.disabled ? item_r12.disabledTooltip : item_r12.tooltip), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !item_r12.subMenuItems || 0 === item_r12.subMenuItems.length)("ngIfElse", _r14);
            }
        }
        function TridentContextMenuComponent_ng_template_7_ng_container_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, TridentContextMenuComponent_ng_template_7_ng_container_1_div_1_Template, 4, 3, "div", 15), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var ctx_r9 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngForOf", ctx_r9.items);
            }
        }
        function TridentContextMenuComponent_ng_template_7_pbi_spinner_2_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "pbi-spinner", 25);
        }
        function TridentContextMenuComponent_ng_template_7_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0, 10), core["\u0275\u0275template"](1, TridentContextMenuComponent_ng_template_7_ng_container_1_Template, 2, 1, "ng-container", 11), 
            core["\u0275\u0275template"](2, TridentContextMenuComponent_ng_template_7_pbi_spinner_2_Template, 1, 0, "pbi-spinner", 12), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var ctx_r5 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("ngSwitch", !!ctx_r5.items && ctx_r5.items.length > 0), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", !0), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", !1);
            }
        }
        function TridentContextMenuComponent_ng_container_11_button_1_tri_svg_icon_1_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "tri-svg-icon", 21), 2 & rf) {
                var item_r32 = core["\u0275\u0275nextContext"]().$implicit;
                core["\u0275\u0275property"]("sprite", item_r32.triIcon.sprite)("name", item_r32.triIcon.name);
            }
        }
        function TridentContextMenuComponent_ng_container_11_button_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r36 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "button", 19), core["\u0275\u0275listener"]("click", function() {
                    var item_r32 = core["\u0275\u0275restoreView"](_r36).$implicit, ctx_r35 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r35.clickHandler(item_r32));
                }), core["\u0275\u0275template"](1, TridentContextMenuComponent_ng_container_11_button_1_tri_svg_icon_1_Template, 1, 2, "tri-svg-icon", 20), 
                core["\u0275\u0275elementStart"](2, "span"), core["\u0275\u0275text"](3), core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var item_r32 = ctx.$implicit;
                core["\u0275\u0275property"]("disabled", !!item_r32.disabled), core["\u0275\u0275attribute"]("data-testid", "contextMenuItem." + item_r32.text), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", item_r32.triIcon), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](item_r32.text);
            }
        }
        function TridentContextMenuComponent_ng_container_11_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, TridentContextMenuComponent_ng_container_11_button_1_Template, 4, 4, "button", 26), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var ctx_r7 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngForOf", ctx_r7.activeSubItems);
            }
        }
        function TridentContextMenuComponent_pbi_spinner_12_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "pbi-spinner", 25);
        }
        var trident_context_menu_component_c1 = function(a0) {
            return {
                active: a0
            };
        }, TridentContextMenuComponent = function() {
            function TridentContextMenuComponent(lazyProvider, changeDetectorRef) {
                this.lazyProvider = lazyProvider, this.changeDetectorRef = changeDetectorRef, this.menuXPosition = "after", 
                this.tabindex = 0, this.currentMenuItemIdChange = new core.EventEmitter, this.onMenuOpenedEvent = new core.EventEmitter, 
                this.executionRun = new core.EventEmitter;
            }
            return TridentContextMenuComponent.prototype.ngOnInit = function() {
                (0, Common.mv)(this.artifact, "Artifact cannot be null");
            }, TridentContextMenuComponent.prototype.getArtifactActionScenario = function() {
                if (this.callingContext) switch (this.callingContext) {
                  case "FavoritesWidget":
                    return "homeFavorites";

                  case "RecentWidget":
                    return "homeRecent";

                  case "WorkspaceList":
                    return "workspace";

                  default:
                    return;
                }
                return location.pathname.includes("/lineage") ? "lineage" : location.pathname.startsWith("/pipelines/") ? "pipeline" : location.pathname.startsWith("/groups/") ? "workspace" : location.pathname.startsWith("/datahub") || location.pathname.startsWith("/functionshub") || location.pathname.startsWith("/metrics/hub") ? "datahub" : void 0;
            }, TridentContextMenuComponent.prototype.ensureArtifactActonServiceLoaded = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var _a;
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return this.tridentArtifactActionsService ? [ 3, 2 ] : (_a = this, [ 4, this.lazyProvider.get("@powerbi/ArtifactActions/artifact-actions.module#ArtifactActionsModule", "TridentArtifactActionsService") ]);

                          case 1:
                            _a.tridentArtifactActionsService = _b.sent(), _b.label = 2;

                          case 2:
                            return [ 2 ];
                        }
                    });
                });
            }, TridentContextMenuComponent.prototype.onMenuOpened = function() {
                var _a;
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var artifact, _b;
                    return (0, tslib_es6.__generator)(this, function(_c) {
                        switch (_c.label) {
                          case 0:
                            return this.currentMenuItemId = (artifact = this.artifact.contract || this.artifact).objectId, 
                            this.currentMenuItemIdChange.emit(this.currentMenuItemId), [ 4, this.ensureArtifactActonServiceLoaded() ];

                          case 1:
                            return _c.sent(), _b = this, [ 4, this.tridentArtifactActionsService.getMenuItems({
                                artifact,
                                scenario: this.getArtifactActionScenario()
                            }, this.availableActions) ];

                          case 2:
                            return _b.items = _c.sent(), this.onMenuOpenedEvent.emit(this.items), null === (_a = this.menu) || void 0 === _a || _a.focusFirstItem(), 
                            this.changeDetectorRef.markForCheck(), [ 2 ];
                        }
                    });
                });
            }, TridentContextMenuComponent.prototype.onMenuClosed = function() {
                this.currentMenuItemId = null, this.currentMenuItemIdChange.emit(this.currentMenuItemId);
            }, TridentContextMenuComponent.prototype.clickHandler = function(item) {
                item.execute(), this.executionRun.emit(item);
            }, TridentContextMenuComponent.prototype.onSubMenuOpened = function(item) {
                this.activeSubItems = item.subMenuItems;
            }, TridentContextMenuComponent.prototype.onSubMenuClosed = function() {
                this.activeSubItems = void 0;
            }, TridentContextMenuComponent.\u0275fac = function(t) {
                return new (t || TridentContextMenuComponent)(core["\u0275\u0275directiveInject"](lazy_provider.E), core["\u0275\u0275directiveInject"](core.ChangeDetectorRef));
            }, TridentContextMenuComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: TridentContextMenuComponent,
                selectors: [ [ "trident-context-menu" ] ],
                viewQuery: function(rf, ctx) {
                    var _t;
                    1 & rf && core["\u0275\u0275viewQuery"](trident_context_menu_component_c0, 7), 2 & rf && core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx.menu = _t.first);
                },
                inputs: {
                    menuIcon: "menuIcon",
                    triMenuIcon: "triMenuIcon",
                    label: "label",
                    ariaLabel: "ariaLabel",
                    tooltip: "tooltip",
                    artifact: "artifact",
                    callingContext: "callingContext",
                    availableActions: "availableActions",
                    menuXPosition: "menuXPosition",
                    tabindex: "tabindex",
                    currentMenuItemId: "currentMenuItemId"
                },
                outputs: {
                    currentMenuItemIdChange: "currentMenuItemIdChange",
                    onMenuOpenedEvent: "onMenuOpenedEvent",
                    executionRun: "executionRun"
                },
                decls: 13,
                vars: 16,
                consts: [ [ "mat-icon-button", "", "cdkMonitorElementFocus", "", 1, "menuTrigger", 3, "matMenuTriggerFor", "ngClass", "menuOpened", "menuClosed" ], [ "tridentMenuTrigger", "matMenuTrigger" ], [ "class", "glyph-small", 3, "fontIcon", 4, "ngIf" ], [ 3, "name", 4, "ngIf" ], [ 4, "ngIf" ], [ 1, "artifact-menu", 3, "xPosition" ], [ "tridentMenu", "matMenu" ], [ "matMenuContent", "" ], [ 1, "artifact-menu", 3, "overlapTrigger", "xPosition" ], [ "subMenu", "matMenu" ], [ 3, "ngSwitch" ], [ 4, "ngSwitchCase" ], [ "class", "pbi-spinner-small", 4, "ngSwitchCase" ], [ 1, "glyph-small", 3, "fontIcon" ], [ 3, "name" ], [ "class", "contextMenuItem", 3, "pbiTooltip", 4, "ngFor", "ngForOf" ], [ 1, "contextMenuItem", 3, "pbiTooltip" ], [ 4, "ngIf", "ngIfElse" ], [ "withSubMenuItem", "" ], [ "mat-menu-item", "", "role", "menuitem", 3, "disabled", "click" ], [ 3, "sprite", "name", 4, "ngIf" ], [ 3, "sprite", "name" ], [ 1, "divider" ], [ "mat-menu-item", "", "role", "menuitem", 1, "chevron-icon", 3, "matMenuTriggerFor", "menuOpened", "menuClosed" ], [ "name", "chevron_right_20_regular", 1, "tri-fill-gray-180", "tri-ml-1" ], [ 1, "pbi-spinner-small" ], [ "mat-menu-item", "", "role", "menuitem", 3, "disabled", "click", 4, "ngFor", "ngForOf" ] ],
                template: function(rf, ctx) {
                    if (1 & rf && (core["\u0275\u0275elementStart"](0, "button", 0, 1), core["\u0275\u0275listener"]("menuOpened", function() {
                        return ctx.onMenuOpened();
                    })("menuClosed", function() {
                        return ctx.onMenuClosed();
                    }), core["\u0275\u0275template"](2, TridentContextMenuComponent_mat_icon_2_Template, 1, 1, "mat-icon", 2), 
                    core["\u0275\u0275template"](3, TridentContextMenuComponent_tri_svg_icon_3_Template, 1, 1, "tri-svg-icon", 3), 
                    core["\u0275\u0275template"](4, TridentContextMenuComponent_span_4_Template, 2, 1, "span", 4), 
                    core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](5, "mat-menu", 5, 6), 
                    core["\u0275\u0275template"](7, TridentContextMenuComponent_ng_template_7_Template, 3, 3, "ng-template", 7), 
                    core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](8, "mat-menu", 8, 9), 
                    core["\u0275\u0275elementContainerStart"](10, 10), core["\u0275\u0275template"](11, TridentContextMenuComponent_ng_container_11_Template, 2, 1, "ng-container", 11), 
                    core["\u0275\u0275template"](12, TridentContextMenuComponent_pbi_spinner_12_Template, 1, 0, "pbi-spinner", 12), 
                    core["\u0275\u0275elementContainerEnd"](), core["\u0275\u0275elementEnd"]()), 2 & rf) {
                        var _r0 = core["\u0275\u0275reference"](1), _r4 = core["\u0275\u0275reference"](6);
                        core["\u0275\u0275property"]("matMenuTriggerFor", _r4)("ngClass", core["\u0275\u0275pureFunction1"](14, trident_context_menu_component_c1, !0 === _r0.menuOpen)), 
                        core["\u0275\u0275attribute"]("tabindex", ctx.tabindex)("aria-label", ctx.ariaLabel)("title", ctx.tooltip), 
                        core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", ctx.menuIcon), 
                        core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !ctx.menuIcon && ctx.triMenuIcon), 
                        core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx.label), 
                        core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("xPosition", ctx.menuXPosition), 
                        core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("overlapTrigger", !1)("xPosition", ctx.menuXPosition), 
                        core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngSwitch", !!ctx.activeSubItems && ctx.activeSubItems.length > 0), 
                        core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", !0), 
                        core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", !1);
                    }
                },
                dependencies: [ common.NgClass, common.NgForOf, common.NgIf, common.NgSwitch, common.NgSwitchCase, legacy_menu.W0, legacy_menu.tN, legacy_menu.D8, legacy_menu.hd, icon.Hw, pbi_spinner_component.k, a11y.kH, pbi_tooltip_directive.V, tri_svg_icon_component.M, common.AsyncPipe ],
                styles: [ ".mat-menu-panel.artifact-menu{min-height:auto}  .menuTrigger mat-icon:before{vertical-align:middle}.menuTrigger[_ngcontent-%COMP%]{background:none;border:none;padding:0;height:48px;width:36px;fill:currentColor}.menuTrigger[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]{transform:rotate(90deg)}.menuTrigger[_ngcontent-%COMP%]:hover{background-color:var(--fluent-theme-neutral-light-color, #EDEBE9)}.menuTrigger[_ngcontent-%COMP%]:hover   tri-svg-icon[_ngcontent-%COMP%]{fill:var(--colorNeutralForeground2BrandHover)}.menuTrigger.active[_ngcontent-%COMP%], .menuTrigger.active[_ngcontent-%COMP%]:hover, .menuTrigger.cdk-keyboard-focused[_ngcontent-%COMP%], .menuTrigger.cdk-keyboard-focused[_ngcontent-%COMP%]:hover{background-color:var(--fluent-theme-neutral-quarter-alt-color, #E1DFDD)}button.mat-menu-item[_ngcontent-%COMP%]{color:var(--fluent-theme-neutral-dark-color, #201F1E);height:36px;line-height:19px;padding:8px}button.mat-menu-item[_ngcontent-%COMP%]:disabled{color:var(--fluent-theme-neutral-tertia-color, #A19F9D)}button.mat-menu-item[_ngcontent-%COMP%]   tri-svg-icon[_ngcontent-%COMP%]{float:left;margin-right:5px}.divider[_ngcontent-%COMP%]{width:0px;height:28px;margin:0 2px;background-color:var(--colorNeutralBackground6);border:1px solid var(--colorNeutralStroke2)}.contextMenuItem[_ngcontent-%COMP%]{display:flex;align-items:center}.chevron-icon[_ngcontent-%COMP%]{margin-left:auto;width:auto}.chevron-icon[_ngcontent-%COMP%]     .mat-menu-submenu-icon{display:none}" ],
                changeDetection: 0
            }), TridentContextMenuComponent;
        }(), helpers_workbook = __webpack_require__(8714), workbook_context_menu_component_c0 = [ "workbookMenu" ];
        function WorkbookContextMenuComponent_mat_icon_2_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "mat-icon", 8), 2 & rf) {
                var ctx_r1 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275propertyInterpolate"]("fontIcon", ctx_r1.menuIcon);
            }
        }
        function WorkbookContextMenuComponent_tri_svg_icon_3_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "tri-svg-icon", 9), 2 & rf) {
                var ctx_r2 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("name", ctx_r2.triMenuIcon);
            }
        }
        function WorkbookContextMenuComponent_span_4_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "span"), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r3 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate"](ctx_r3.label);
            }
        }
        function WorkbookContextMenuComponent_ng_template_7_ng_container_1_div_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r11 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div", 14)(1, "button", 15), core["\u0275\u0275listener"]("click", function() {
                    var item_r9 = core["\u0275\u0275restoreView"](_r11).$implicit, ctx_r10 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r10.clickHandler(item_r9));
                }), core["\u0275\u0275elementStart"](2, "span"), core["\u0275\u0275text"](3), core["\u0275\u0275elementEnd"]()()();
            }
            if (2 & rf) {
                var item_r9 = ctx.$implicit;
                core["\u0275\u0275property"]("pbiTooltip", item_r9.disabled ? item_r9.disabledTooltip : item_r9.tooltip), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("disabled", !!item_r9.disabled), 
                core["\u0275\u0275attribute"]("data-testid", "workbookContextMenuItem." + item_r9.text), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](item_r9.text);
            }
        }
        function WorkbookContextMenuComponent_ng_template_7_ng_container_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, WorkbookContextMenuComponent_ng_template_7_ng_container_1_div_1_Template, 4, 4, "div", 13), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var ctx_r6 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngForOf", ctx_r6.items);
            }
        }
        function WorkbookContextMenuComponent_ng_template_7_pbi_spinner_2_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "pbi-spinner", 16);
        }
        function WorkbookContextMenuComponent_ng_template_7_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0, 10), core["\u0275\u0275template"](1, WorkbookContextMenuComponent_ng_template_7_ng_container_1_Template, 2, 1, "ng-container", 11), 
            core["\u0275\u0275template"](2, WorkbookContextMenuComponent_ng_template_7_pbi_spinner_2_Template, 1, 0, "pbi-spinner", 12), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var ctx_r5 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("ngSwitch", !!ctx_r5.items && ctx_r5.items.length > 0), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", !0), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", !1);
            }
        }
        var workbook_context_menu_component_c1 = function(a0) {
            return {
                active: a0
            };
        }, workbook_context_menu_component_commonGlobals = window, WorkbookContextMenuComponent = function() {
            function WorkbookContextMenuComponent(lazyProvider, changeDetectorRef, featureSwitchService) {
                this.lazyProvider = lazyProvider, this.changeDetectorRef = changeDetectorRef, this.featureSwitchService = featureSwitchService, 
                this.tabindex = 0, this.currentMenuItemIdChange = new core.EventEmitter, this.onMenuOpenedEvent = new core.EventEmitter, 
                this.executionRun = new core.EventEmitter, this.defaultActions = [ 0, 1, 2, 3, 4, 6 ];
            }
            return WorkbookContextMenuComponent.prototype.ngOnInit = function() {
                (0, Common.mv)(this.workbook, "Workbook cannotbe null"), this.featureSwitchService.featureSwitches.hideActionAsDefault && this.defaultActions.indexOf(7) < 0 && this.defaultActions.push(7), 
                this.featureSwitchService.featureSwitches.convertConnectedWorkbookFFXL && this.defaultActions.indexOf(9) < 0 && this.defaultActions.push(9), 
                this.featureSwitchService.featureSwitches.downloadLocalWorkbookFFXL && this.defaultActions.indexOf(10) < 0 && this.defaultActions.push(10), 
                workbook_context_menu_component_commonGlobals.isTrident && this.featureSwitchService.featureSwitches.subfolderInWorkspace && this.defaultActions.indexOf(11) < 0 && this.defaultActions.push(11);
            }, WorkbookContextMenuComponent.prototype.onMenuOpened = function() {
                var _a;
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var _b, _c;
                    return (0, tslib_es6.__generator)(this, function(_d) {
                        switch (_d.label) {
                          case 0:
                            return this.currentMenuItemId = (0, helpers_workbook.E)(this.workbook), this.currentMenuItemIdChange.emit(this.currentMenuItemId), 
                            this.items = [], this.workbookActionsService ? [ 3, 2 ] : (_b = this, [ 4, this.lazyProvider.get("@powerbi/ArtifactActions/artifact-actions.module#ArtifactActionsModule", "WorkbookActionsService") ]);

                          case 1:
                            _b.workbookActionsService = _d.sent(), _d.label = 2;

                          case 2:
                            return _c = this, [ 4, this.workbookActionsService.getMenuItems(this.workbook, this.availableActions || this.defaultActions, this.callingContext) ];

                          case 3:
                            return _c.items = _d.sent(), this.onMenuOpenedEvent.emit(this.items), null === (_a = this.menu) || void 0 === _a || _a.focusFirstItem(), 
                            this.changeDetectorRef.markForCheck(), [ 2 ];
                        }
                    });
                });
            }, WorkbookContextMenuComponent.prototype.onMenuClosed = function() {
                this.currentMenuItemId = null, this.currentMenuItemIdChange.emit(this.currentMenuItemId);
            }, WorkbookContextMenuComponent.prototype.clickHandler = function(item) {
                item.execute(), this.executionRun.emit(item);
            }, WorkbookContextMenuComponent.\u0275fac = function(t) {
                return new (t || WorkbookContextMenuComponent)(core["\u0275\u0275directiveInject"](lazy_provider.E), core["\u0275\u0275directiveInject"](core.ChangeDetectorRef), core["\u0275\u0275directiveInject"](feature_switch_service.vZ));
            }, WorkbookContextMenuComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: WorkbookContextMenuComponent,
                selectors: [ [ "workbook-context-menu" ] ],
                viewQuery: function(rf, ctx) {
                    var _t;
                    1 & rf && core["\u0275\u0275viewQuery"](workbook_context_menu_component_c0, 7), 
                    2 & rf && core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx.menu = _t.first);
                },
                inputs: {
                    menuIcon: "menuIcon",
                    triMenuIcon: "triMenuIcon",
                    label: "label",
                    ariaLabel: "ariaLabel",
                    tooltip: "tooltip",
                    workbook: "workbook",
                    availableActions: "availableActions",
                    callingContext: "callingContext",
                    tabindex: "tabindex",
                    currentMenuItemId: "currentMenuItemId"
                },
                outputs: {
                    currentMenuItemIdChange: "currentMenuItemIdChange",
                    onMenuOpenedEvent: "onMenuOpenedEvent",
                    executionRun: "executionRun"
                },
                decls: 8,
                vars: 10,
                consts: [ [ "mat-icon-button", "", "cdkMonitorElementFocus", "", 1, "menuTrigger", 3, "matMenuTriggerFor", "ngClass", "menuOpened", "menuClosed" ], [ "workbookMenuTrigger", "matMenuTrigger" ], [ "class", "glyph-small", 3, "fontIcon", 4, "ngIf" ], [ 3, "name", 4, "ngIf" ], [ 4, "ngIf" ], [ 1, "artifact-menu" ], [ "workbookMenu", "matMenu" ], [ "matMenuContent", "" ], [ 1, "glyph-small", 3, "fontIcon" ], [ 3, "name" ], [ 3, "ngSwitch" ], [ 4, "ngSwitchCase" ], [ "class", "pbi-spinner-small", 4, "ngSwitchCase" ], [ 3, "pbiTooltip", 4, "ngFor", "ngForOf" ], [ 3, "pbiTooltip" ], [ "mat-menu-item", "", "role", "menuitem", 3, "disabled", "click" ], [ 1, "pbi-spinner-small" ] ],
                template: function(rf, ctx) {
                    if (1 & rf && (core["\u0275\u0275elementStart"](0, "button", 0, 1), core["\u0275\u0275listener"]("menuOpened", function() {
                        return ctx.onMenuOpened();
                    })("menuClosed", function() {
                        return ctx.onMenuClosed();
                    }), core["\u0275\u0275template"](2, WorkbookContextMenuComponent_mat_icon_2_Template, 1, 1, "mat-icon", 2), 
                    core["\u0275\u0275template"](3, WorkbookContextMenuComponent_tri_svg_icon_3_Template, 1, 1, "tri-svg-icon", 3), 
                    core["\u0275\u0275template"](4, WorkbookContextMenuComponent_span_4_Template, 2, 1, "span", 4), 
                    core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](5, "mat-menu", 5, 6), 
                    core["\u0275\u0275template"](7, WorkbookContextMenuComponent_ng_template_7_Template, 3, 3, "ng-template", 7), 
                    core["\u0275\u0275elementEnd"]()), 2 & rf) {
                        var _r0 = core["\u0275\u0275reference"](1), _r4 = core["\u0275\u0275reference"](6);
                        core["\u0275\u0275property"]("matMenuTriggerFor", _r4)("ngClass", core["\u0275\u0275pureFunction1"](8, workbook_context_menu_component_c1, !0 === _r0.menuOpen)), 
                        core["\u0275\u0275attribute"]("tabindex", ctx.tabindex)("aria-label", ctx.ariaLabel)("title", ctx.tooltip), 
                        core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", ctx.menuIcon), 
                        core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !ctx.menuIcon && ctx.triMenuIcon), 
                        core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx.label);
                    }
                },
                dependencies: [ common.NgClass, common.NgForOf, common.NgIf, common.NgSwitch, common.NgSwitchCase, legacy_menu.W0, legacy_menu.tN, legacy_menu.D8, legacy_menu.hd, icon.Hw, pbi_spinner_component.k, a11y.kH, pbi_tooltip_directive.V, tri_svg_icon_component.M ],
                styles: [ ".mat-menu-panel.artifact-menu{min-height:auto}  .menuTrigger mat-icon:before{vertical-align:middle}.menuTrigger[_ngcontent-%COMP%]{background:none;border:none;padding:0;height:48px;width:36px;fill:currentColor}.menuTrigger[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]{transform:rotate(90deg)}.menuTrigger[_ngcontent-%COMP%]:hover{background-color:var(--fluent-theme-neutral-light-color, #EDEBE9)}.menuTrigger[_ngcontent-%COMP%]:hover   tri-svg-icon[_ngcontent-%COMP%]{fill:var(--colorNeutralForeground2BrandHover)}.menuTrigger.active[_ngcontent-%COMP%], .menuTrigger.active[_ngcontent-%COMP%]:hover, .menuTrigger.cdk-keyboard-focused[_ngcontent-%COMP%], .menuTrigger.cdk-keyboard-focused[_ngcontent-%COMP%]:hover{background-color:var(--fluent-theme-neutral-quarter-alt-color, #E1DFDD)}button.mat-menu-item[_ngcontent-%COMP%]{color:var(--fluent-theme-neutral-dark-color, #201F1E);height:36px;line-height:19px;padding:8px}button.mat-menu-item[_ngcontent-%COMP%]:disabled{color:var(--fluent-theme-neutral-tertia-color, #A19F9D)}" ],
                changeDetection: 0
            }), WorkbookContextMenuComponent;
        }(), workspace_context_menu_component_c0 = [ "workspaceMenu" ];
        function WorkspaceContextMenuComponent_mat_icon_2_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "mat-icon", 8), 2 & rf) {
                var ctx_r1 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275propertyInterpolate"]("fontIcon", ctx_r1.menuIcon);
            }
        }
        function WorkspaceContextMenuComponent_tri_svg_icon_3_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "tri-svg-icon", 9), 2 & rf) {
                var ctx_r2 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("name", ctx_r2.triMenuIcon);
            }
        }
        function WorkspaceContextMenuComponent_span_4_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "span"), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r3 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate"](ctx_r3.label);
            }
        }
        function WorkspaceContextMenuComponent_ng_template_7_ng_container_1_div_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r11 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div", 14)(1, "button", 15), core["\u0275\u0275listener"]("click", function() {
                    var item_r9 = core["\u0275\u0275restoreView"](_r11).$implicit, ctx_r10 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r10.clickHandler(item_r9));
                }), core["\u0275\u0275elementStart"](2, "span"), core["\u0275\u0275text"](3), core["\u0275\u0275elementEnd"]()()();
            }
            if (2 & rf) {
                var item_r9 = ctx.$implicit;
                core["\u0275\u0275property"]("pbiTooltip", item_r9.disabled ? item_r9.disabledTooltip : item_r9.tooltip), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("disabled", !!item_r9.disabled), 
                core["\u0275\u0275attribute"]("data-testid", "workspaceContextMenuItem." + item_r9.text), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](item_r9.text);
            }
        }
        function WorkspaceContextMenuComponent_ng_template_7_ng_container_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, WorkspaceContextMenuComponent_ng_template_7_ng_container_1_div_1_Template, 4, 4, "div", 13), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var ctx_r6 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngForOf", ctx_r6.items);
            }
        }
        function WorkspaceContextMenuComponent_ng_template_7_pbi_spinner_2_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "pbi-spinner", 16);
        }
        function WorkspaceContextMenuComponent_ng_template_7_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0, 10), core["\u0275\u0275template"](1, WorkspaceContextMenuComponent_ng_template_7_ng_container_1_Template, 2, 1, "ng-container", 11), 
            core["\u0275\u0275template"](2, WorkspaceContextMenuComponent_ng_template_7_pbi_spinner_2_Template, 1, 0, "pbi-spinner", 12), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var ctx_r5 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("ngSwitch", !!ctx_r5.items && ctx_r5.items.length > 0), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", !0), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", !1);
            }
        }
        var workspace_context_menu_component_c1 = function(a0) {
            return {
                active: a0
            };
        }, workspace_context_menu_component_defaultActions = [ 11 ], WorkspaceContextMenuComponent = function() {
            function WorkspaceContextMenuComponent(lazyProvider, changeDetectorRef) {
                this.lazyProvider = lazyProvider, this.changeDetectorRef = changeDetectorRef, this.tabindex = 0, 
                this.currentMenuItemIdChange = new core.EventEmitter, this.onMenuOpenedEvent = new core.EventEmitter, 
                this.executionRun = new core.EventEmitter;
            }
            return WorkspaceContextMenuComponent.prototype.ngOnInit = function() {
                (0, Common.mv)(this.workspace, "Workspace cannotbe null");
            }, WorkspaceContextMenuComponent.prototype.onMenuOpened = function() {
                var _a;
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var _b, _c;
                    return (0, tslib_es6.__generator)(this, function(_d) {
                        switch (_d.label) {
                          case 0:
                            return this.currentMenuItemId = (0, helpers_group.EL)(this.workspace), this.currentMenuItemIdChange.emit(this.currentMenuItemId), 
                            this.workspaceActionsService ? [ 3, 2 ] : (_b = this, [ 4, this.lazyProvider.get("@powerbi/ArtifactActions/artifact-actions.module#ArtifactActionsModule", "workspaceActionsService") ]);

                          case 1:
                            _b.workspaceActionsService = _d.sent(), _d.label = 2;

                          case 2:
                            return _c = this, [ 4, this.workspaceActionsService.getMenuItems(this.workspace, this.availableActions || workspace_context_menu_component_defaultActions, this.callingContext) ];

                          case 3:
                            return _c.items = _d.sent(), this.onMenuOpenedEvent.emit(this.items), null === (_a = this.menu) || void 0 === _a || _a.focusFirstItem(), 
                            this.changeDetectorRef.markForCheck(), [ 2 ];
                        }
                    });
                });
            }, WorkspaceContextMenuComponent.prototype.onMenuClosed = function() {
                this.currentMenuItemId = null, this.currentMenuItemIdChange.emit(this.currentMenuItemId);
            }, WorkspaceContextMenuComponent.prototype.clickHandler = function(item) {
                item.execute(), this.executionRun.emit(item);
            }, WorkspaceContextMenuComponent.\u0275fac = function(t) {
                return new (t || WorkspaceContextMenuComponent)(core["\u0275\u0275directiveInject"](lazy_provider.E), core["\u0275\u0275directiveInject"](core.ChangeDetectorRef));
            }, WorkspaceContextMenuComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: WorkspaceContextMenuComponent,
                selectors: [ [ "workspace-context-menu" ] ],
                viewQuery: function(rf, ctx) {
                    var _t;
                    1 & rf && core["\u0275\u0275viewQuery"](workspace_context_menu_component_c0, 7), 
                    2 & rf && core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx.menu = _t.first);
                },
                inputs: {
                    menuIcon: "menuIcon",
                    triMenuIcon: "triMenuIcon",
                    label: "label",
                    ariaLabel: "ariaLabel",
                    tooltip: "tooltip",
                    workspace: "workspace",
                    availableActions: "availableActions",
                    callingContext: "callingContext",
                    tabindex: "tabindex",
                    currentMenuItemId: "currentMenuItemId"
                },
                outputs: {
                    currentMenuItemIdChange: "currentMenuItemIdChange",
                    onMenuOpenedEvent: "onMenuOpenedEvent",
                    executionRun: "executionRun"
                },
                decls: 8,
                vars: 10,
                consts: [ [ "mat-icon-button", "", "cdkMonitorElementFocus", "", 1, "menuTrigger", 3, "matMenuTriggerFor", "ngClass", "menuOpened", "menuClosed" ], [ "workspaceMenuTrigger", "matMenuTrigger" ], [ "class", "glyph-small", 3, "fontIcon", 4, "ngIf" ], [ 3, "name", 4, "ngIf" ], [ 4, "ngIf" ], [ 1, "artifact-menu" ], [ "workspaceMenu", "matMenu" ], [ "matMenuContent", "" ], [ 1, "glyph-small", 3, "fontIcon" ], [ 3, "name" ], [ 3, "ngSwitch" ], [ 4, "ngSwitchCase" ], [ "class", "pbi-spinner-small", 4, "ngSwitchCase" ], [ 3, "pbiTooltip", 4, "ngFor", "ngForOf" ], [ 3, "pbiTooltip" ], [ "mat-menu-item", "", "role", "menuitem", 3, "disabled", "click" ], [ 1, "pbi-spinner-small" ] ],
                template: function(rf, ctx) {
                    if (1 & rf && (core["\u0275\u0275elementStart"](0, "button", 0, 1), core["\u0275\u0275listener"]("menuOpened", function() {
                        return ctx.onMenuOpened();
                    })("menuClosed", function() {
                        return ctx.onMenuClosed();
                    }), core["\u0275\u0275template"](2, WorkspaceContextMenuComponent_mat_icon_2_Template, 1, 1, "mat-icon", 2), 
                    core["\u0275\u0275template"](3, WorkspaceContextMenuComponent_tri_svg_icon_3_Template, 1, 1, "tri-svg-icon", 3), 
                    core["\u0275\u0275template"](4, WorkspaceContextMenuComponent_span_4_Template, 2, 1, "span", 4), 
                    core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](5, "mat-menu", 5, 6), 
                    core["\u0275\u0275template"](7, WorkspaceContextMenuComponent_ng_template_7_Template, 3, 3, "ng-template", 7), 
                    core["\u0275\u0275elementEnd"]()), 2 & rf) {
                        var _r0 = core["\u0275\u0275reference"](1), _r4 = core["\u0275\u0275reference"](6);
                        core["\u0275\u0275property"]("matMenuTriggerFor", _r4)("ngClass", core["\u0275\u0275pureFunction1"](8, workspace_context_menu_component_c1, !0 === _r0.menuOpen)), 
                        core["\u0275\u0275attribute"]("tabindex", ctx.tabindex)("aria-label", ctx.ariaLabel)("title", ctx.tooltip), 
                        core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", ctx.menuIcon), 
                        core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !ctx.menuIcon && ctx.triMenuIcon), 
                        core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx.label);
                    }
                },
                dependencies: [ common.NgClass, common.NgForOf, common.NgIf, common.NgSwitch, common.NgSwitchCase, legacy_menu.W0, legacy_menu.tN, legacy_menu.D8, legacy_menu.hd, icon.Hw, pbi_spinner_component.k, a11y.kH, pbi_tooltip_directive.V, tri_svg_icon_component.M ],
                styles: [ ".mat-menu-panel.artifact-menu{min-height:auto}  .menuTrigger mat-icon:before{vertical-align:middle}.menuTrigger[_ngcontent-%COMP%]{background:none;border:none;padding:0;height:48px;width:36px;fill:currentColor}.menuTrigger[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]{transform:rotate(90deg)}.menuTrigger[_ngcontent-%COMP%]:hover{background-color:var(--fluent-theme-neutral-light-color, #EDEBE9)}.menuTrigger[_ngcontent-%COMP%]:hover   tri-svg-icon[_ngcontent-%COMP%]{fill:var(--colorNeutralForeground2BrandHover)}.menuTrigger.active[_ngcontent-%COMP%], .menuTrigger.active[_ngcontent-%COMP%]:hover, .menuTrigger.cdk-keyboard-focused[_ngcontent-%COMP%], .menuTrigger.cdk-keyboard-focused[_ngcontent-%COMP%]:hover{background-color:var(--fluent-theme-neutral-quarter-alt-color, #E1DFDD)}button.mat-menu-item[_ngcontent-%COMP%]{color:var(--fluent-theme-neutral-dark-color, #201F1E);height:36px;line-height:19px;padding:8px}button.mat-menu-item[_ngcontent-%COMP%]:disabled{color:var(--fluent-theme-neutral-tertia-color, #A19F9D)}" ],
                changeDetection: 0
            }), WorkspaceContextMenuComponent;
        }(), information_protection_label_component = __webpack_require__(73226), folder_service = __webpack_require__(98873), spinner_component = __webpack_require__(73425);
        function DataflowIconContainerComponent_spinner_1_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "spinner", 4), 2 & rf) {
                var ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275propertyInterpolate"]("localizeTooltip", ctx_r0.spinnerLocalizeTooltip);
            }
        }
        var dataflow_icon_container_component_c0 = function() {
            return {
                "aria-label": "DatapoolRefreshError_Label"
            };
        };
        function DataflowIconContainerComponent_button_2_Template(rf, ctx) {
            if (1 & rf) {
                var _r4 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "button", 5), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r4);
                    var ctx_r3 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r3.handleWarningAction());
                }), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r1 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("localizeAttr", core["\u0275\u0275pureFunction0"](2, dataflow_icon_container_component_c0)), 
                core["\u0275\u0275attribute"]("tabindex", ctx_r1.tabindex);
            }
        }
        var dataflow_icon_container_component_c2 = function() {
            return {
                "aria-label": "CDSA_ScheduledRefreshDisabledDueToConsecutiveErrors"
            };
        };
        function DataflowIconContainerComponent_button_3_Template(rf, ctx) {
            if (1 & rf) {
                var _r6 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "button", 6), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r6);
                    var ctx_r5 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r5.handleWarningAction());
                }), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r2 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("localizeAttr", core["\u0275\u0275pureFunction0"](2, dataflow_icon_container_component_c2)), 
                core["\u0275\u0275attribute"]("tabindex", ctx_r2.tabindex);
            }
        }
        var DataflowIconContainerComponent = function() {
            function DataflowIconContainerComponent(dialogService, folderService, lazyProvider, localizationService, featureSwitchService) {
                this.dialogService = dialogService, this.folderService = folderService, this.lazyProvider = lazyProvider, 
                this.localizationService = localizationService, this.featureSwitchService = featureSwitchService, 
                this.tabindex = 0;
            }
            return Object.defineProperty(DataflowIconContainerComponent.prototype, "isRefreshInProgress", {
                get: function() {
                    var _a, refreshStatus = null !== (_a = this.viewModel.currentRefreshStatus) && void 0 !== _a ? _a : this.viewModel.lastRefreshStatus;
                    return !this.isNextRefresh && (4 === refreshStatus || 15 === refreshStatus);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(DataflowIconContainerComponent.prototype, "spinnerLocalizeTooltip", {
                get: function() {
                    return 15 === this.viewModel.lastRefreshStatus ? "NavigationPane_RefreshCanceling" : "NavigationPane_RefreshInProgress";
                },
                enumerable: !1,
                configurable: !0
            }), DataflowIconContainerComponent.prototype.shouldShowRefreshFailureWarningButton = function() {
                return !this.isNextRefresh && (this.shouldShowRefreshWarning() || this.isDataflowInSharedWithPremiumCapabilities());
            }, DataflowIconContainerComponent.prototype.shouldShowNextRefreshWarning = function() {
                return this.featureSwitchService.featureSwitches.dataflowsPauseConsecutivlyFailingDataflowRefreshes && this.isNextRefresh && 13 === this.viewModel.lastRefreshStatus;
            }, DataflowIconContainerComponent.prototype.shouldShowRefreshWarning = function() {
                switch (this.viewModel.lastRefreshStatus) {
                  case 1:
                  case 4:
                  case 5:
                  case 15:
                  case 16:
                    return !1;

                  default:
                    return !0;
                }
            }, DataflowIconContainerComponent.prototype.isDataflowInSharedWithPremiumCapabilities = function() {
                return (7 & this.viewModel.capabilities) > 0 && !this.isWorkspaceInsideCapacity();
            }, DataflowIconContainerComponent.prototype.isWorkspaceInsideCapacity = function() {
                var currentFolder = this.folderObjectId ? this.folderService.getFolder(this.folderObjectId) : this.folderService.activeFolder;
                return !!currentFolder && !!currentFolder.capacity && 6 !== currentFolder.contract.capacitySkuTier;
            }, DataflowIconContainerComponent.prototype.showErrorDialog = function() {
                var titleKey = this.localizationService.get("CDSA_ContentList_DisabledDatapools"), messageKey = this.localizationService.get(this.getCdsaCapabilitiesErrorMessageKey());
                this.dialogService.showSimpleDialog(titleKey, messageKey);
            }, DataflowIconContainerComponent.prototype.getCdsaCapabilitiesErrorMessageKey = function() {
                switch (this.viewModel.capabilities) {
                  case 1:
                    return "CdsaAuthoring_Iframe_PremiumWarningComputed";

                  case 65538:
                    return "CdsaAuthoring_Iframe_PremiumWarningLinked";

                  case 4:
                    return "CdsaAuthoring_Iframe_PremiumWarningIncrementalRefresh";

                  case 3:
                    return "CdsaAuthoring_Iframe_PremiumWarningComputedAndLinked";

                  case 5:
                    return "CdsaAuthoring_Iframe_PremiumWarningComputedAndIncrementalRefresh";

                  case 6:
                    return "CdsaAuthoring_Iframe_PremiumWarningLinkedAndIncrementalRefresh";

                  case 7:
                    return "CdsaAuthoring_Iframe_PremiumWarningComputedAndLinkedAndIncrementalRefresh";

                  default:
                    return VisualsCommon_debug.fF.assertFail("unknown value for capabilities: " + this.viewModel.capabilities), 
                    "";
                }
            }, DataflowIconContainerComponent.prototype.handleWarningAction = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var _a, _b;
                    return (0, tslib_es6.__generator)(this, function(_c) {
                        switch (_c.label) {
                          case 0:
                            return this.isDataflowInSharedWithPremiumCapabilities() ? (this.showErrorDialog(), 
                            [ 3, 7 ]) : [ 3, 1 ];

                          case 1:
                            return this.shouldShowRefreshWarning() || this.shouldShowNextRefreshWarning() ? 2 !== this.viewModel.generation ? [ 3, 4 ] : this.dataflowGen2ActionsService ? [ 3, 3 ] : (_a = this, 
                            [ 4, this.lazyProvider.get("@powerbi/DataflowGen2Actions/dataflow-gen2-actions.module#DataflowGen2ActionsModule", "DataflowGen2ActionsService") ]) : [ 3, 7 ];

                          case 2:
                            _a.dataflowGen2ActionsService = _c.sent(), _c.label = 3;

                          case 3:
                            return this.dataflowGen2ActionsService.getAction(10).execute({
                                artifact: this.viewModel
                            }), [ 3, 7 ];

                          case 4:
                            return this.dataflowActionsService ? [ 3, 6 ] : (_b = this, [ 4, this.lazyProvider.get("@powerbi/DataflowActions/dataflow-actions.module#DataflowActionsModule", "DataflowActionsService") ]);

                          case 5:
                            _b.dataflowActionsService = _c.sent(), _c.label = 6;

                          case 6:
                            this.dataflowActionsService.getAction(6).execute({
                                artifact: this.viewModel
                            }), _c.label = 7;

                          case 7:
                            return [ 2 ];
                        }
                    });
                });
            }, DataflowIconContainerComponent.\u0275fac = function(t) {
                return new (t || DataflowIconContainerComponent)(core["\u0275\u0275directiveInject"](dialog_service.x), core["\u0275\u0275directiveInject"](folder_service.s), core["\u0275\u0275directiveInject"](lazy_provider.E), core["\u0275\u0275directiveInject"](localization_service.o), core["\u0275\u0275directiveInject"](feature_switch_service.vZ));
            }, DataflowIconContainerComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: DataflowIconContainerComponent,
                selectors: [ [ "dataflow-icon-container" ] ],
                inputs: {
                    viewModel: "viewModel",
                    tabindex: "tabindex",
                    folderObjectId: "folderObjectId",
                    isNextRefresh: "isNextRefresh"
                },
                decls: 4,
                vars: 3,
                consts: [ [ 1, "dataflow-refresh-icons" ], [ 3, "localizeTooltip", 4, "ngIf" ], [ "class", "glyphicon pbi-glyph-warning", "localizeTooltip", "NavigationPane_DatapoolRefreshError", 3, "localizeAttr", "click", 4, "ngIf" ], [ "class", "glyphicon pbi-glyph-warning", "localizeTooltip", "CDSA_ScheduledRefreshDisabledDueToConsecutiveErrors", 3, "localizeAttr", "click", 4, "ngIf" ], [ 3, "localizeTooltip" ], [ "localizeTooltip", "NavigationPane_DatapoolRefreshError", 1, "glyphicon", "pbi-glyph-warning", 3, "localizeAttr", "click" ], [ "localizeTooltip", "CDSA_ScheduledRefreshDisabledDueToConsecutiveErrors", 1, "glyphicon", "pbi-glyph-warning", 3, "localizeAttr", "click" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementStart"](0, "span", 0), core["\u0275\u0275template"](1, DataflowIconContainerComponent_spinner_1_Template, 1, 1, "spinner", 1), 
                    core["\u0275\u0275template"](2, DataflowIconContainerComponent_button_2_Template, 1, 3, "button", 2), 
                    core["\u0275\u0275template"](3, DataflowIconContainerComponent_button_3_Template, 1, 3, "button", 3), 
                    core["\u0275\u0275elementEnd"]()), 2 & rf && (core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx.isRefreshInProgress), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx.shouldShowRefreshFailureWarningButton()), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx.shouldShowNextRefreshWarning()));
                },
                dependencies: [ common.NgIf, localize_attr_directive.b, localize_tooltip_directive.r, spinner_component.O ],
                styles: [ "[_nghost-%COMP%]{padding:0}[_nghost-%COMP%]   button[_ngcontent-%COMP%]{padding:0;border:0;background:none}[_nghost-%COMP%]   button.glyphicon.pbi-glyph-warning[_ngcontent-%COMP%]{font-size:var(--md-font-size, 14px);color:var(--fluent-theme-error-dark-alt-color, #D83B01)}" ],
                changeDetection: 0
            }), DataflowIconContainerComponent;
        }(), artifact_src = __webpack_require__(12315), CdsaModelHttpService = function() {
            function CdsaModelHttpService(featureSwitchService, httpService) {
                this.featureSwitchService = featureSwitchService, this.httpService = httpService;
            }
            return CdsaModelHttpService.prototype.updateDataflow = function(dataflowId, request, parentEvent) {
                var uri = "".concat("metadata/dataflows", "/").concat(dataflowId), options = this.httpService.powerbiRequestOptions(parentEvent, "updateDataflowAsync");
                return this.httpService.patch(uri, request, options);
            }, CdsaModelHttpService.prototype.updateExistingDataflowModel = function(body, parentEvent) {
                var uri = "".concat("metadata/dataflows", "/build/update"), options = this.httpService.powerbiRequestOptions(parentEvent, "createDataflowModelFromExistingModel");
                return this.httpService.post(uri, body, options);
            }, CdsaModelHttpService.prototype.saveDataflowModel = function(parentEvent, id, model, modelVersion) {
                var uri = "".concat("metadata/dataflows", "/").concat(id), options = this.httpService.powerbiRequestOptions(parentEvent, "saveDataflowModel");
                return options.timeout = 3e4, this.httpService.put(uri, {
                    model,
                    modelVersion
                }, options);
            }, CdsaModelHttpService.prototype.getDataflowModelData = function(parentEvent, id) {
                var uri = "".concat("metadata/dataflows", "/").concat(id), options = this.httpService.powerbiRequestOptions(parentEvent, "getDataflowModel");
                return options.timeout = 3e4, this.httpService.get(uri, options);
            }, CdsaModelHttpService.prototype.refreshCdsaModel = function(params) {
                var cdsaModelId = params.cdsaModelId, isGen2Dataflow = params.isGen2Dataflow, parentEvent = params.parentEvent, time = params.time, refreshTime = null != time ? time : new Date, uri = "".concat(this.getBaseUri({
                    useGen2DataflowUri: isGen2Dataflow
                }), "/").concat(cdsaModelId, "/refresh?refreshTime=").concat(encodeURIComponent(moment.utc(refreshTime).format("YYYY-MM-DDTHH:mm:ssZ"))), options = this.httpService.powerbiRequestOptions(parentEvent, "refreshCdsaModel");
                return this.httpService.post(uri, null, options);
            }, CdsaModelHttpService.prototype.cancelGen2ModelRefresh = function(cdsaModelId, parentEvent) {
                var uri = "".concat("metadata/dataflows", "/gen2/").concat(cdsaModelId, "/cancelRefresh"), options = this.httpService.powerbiRequestOptions(parentEvent, "cancelModelRefresh");
                return this.httpService.post(uri, null, options);
            }, CdsaModelHttpService.prototype.cancelModelRefresh = function(cdsaModelId, parentEvent) {
                var uri = "".concat("metadata/dataflows", "/").concat(cdsaModelId, "/cancelRefresh"), options = this.httpService.powerbiRequestOptions(parentEvent, "cancelModelRefresh");
                return this.httpService.post(uri, null, options);
            }, CdsaModelHttpService.prototype.deleteCdsaModel = function(params) {
                var cdsaModel = params.cdsaModel, parentEvent = params.parentEvent, uri = "".concat(this.getBaseUri({
                    useGen2DataflowUri: params.isGen2Dataflow
                }), "/").concat(cdsaModel.id), options = this.httpService.powerbiRequestOptions(parentEvent, "deleteCdsaModel");
                return this.httpService.delete(uri, options);
            }, CdsaModelHttpService.prototype.downloadCdsaModel = function(params) {
                var cdsaModelId = params.cdsaModelId, parentEvent = params.parentEvent, uri = "".concat(this.getBaseUri({
                    useGen2DataflowUri: params.isGen2Dataflow
                }), "/").concat(cdsaModelId, "/export"), options = this.httpService.powerbiRequestOptions(parentEvent, "downloadCdsaModel");
                return options.responseType = "json", this.httpService.get(uri, options);
            }, CdsaModelHttpService.prototype.getCdsaModel = function(params) {
                var _a, cdsaModelId = params.cdsaModelId, parentEvent = params.parentEvent, uri = "".concat(this.getBaseUri({
                    useGen2DataflowUri: null !== (_a = this.featureSwitchService.featureSwitches.enableGen2EndpointsForDataflows) && void 0 !== _a && _a
                }), "/").concat(cdsaModelId, "/info"), options = this.httpService.powerbiRequestOptions(parentEvent, "getCdsaModel");
                return this.httpService.get(uri, options);
            }, CdsaModelHttpService.prototype.renameExternalDataflow = function(params) {
                var dataflowId = params.dataflowId, newDescription = params.newDescription, newName = params.newName, parentEvent = params.parentEvent, uri = "".concat(this.getBaseUri({
                    useGen2DataflowUri: params.isGen2Dataflow
                }), "/").concat(dataflowId, "/referenceMetadata"), options = this.httpService.powerbiRequestOptions(parentEvent, "renameExternalDataflow");
                return options.timeout = 3e4, this.httpService.put(uri, {
                    name: newName,
                    description: newDescription
                }, options);
            }, CdsaModelHttpService.prototype.publishGen2CdsaModel = function(hostContextType, pollingUrl, parentEvent) {
                var matches = pollingUrl.match(/[a-f0-9]{8}(?:-[a-f0-9]{4}){3}-[a-f0-9]{12}/g), workspaceObjectId = matches[0], dataflowObjectId = matches[1], publishJobId = matches[2], uri = "".concat("metadata/dataflows", "/").concat(dataflowObjectId, "/publish"), publishDataflowRequest = {
                    workspaceObjectId,
                    publishJobId
                }, options = this.httpService.powerbiRequestOptions(parentEvent, "publishGen2CdsaModel");
                return options.headers["x-ms-host-context-type"] = hostContextType, this.httpService.post(uri, publishDataflowRequest, options);
            }, CdsaModelHttpService.prototype.getBaseUri = function(params) {
                return params.useGen2DataflowUri && this.featureSwitchService.featureSwitches.enableGen2EndpointsForDataflows ? "metadata/dataflows/gen2" : "metadata/dataflows";
            }, CdsaModelHttpService.\u0275fac = function(t) {
                return new (t || CdsaModelHttpService)(core["\u0275\u0275inject"](feature_switch_service.vZ), core["\u0275\u0275inject"](http_core_service.M));
            }, CdsaModelHttpService.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: CdsaModelHttpService,
                factory: CdsaModelHttpService.\u0275fac,
                providedIn: "root"
            }), CdsaModelHttpService;
        }();
        function DataflowGen2IconContainerComponent_spinner_1_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "spinner", 2), 2 & rf && core["\u0275\u0275propertyInterpolate"]("localizeTooltip", "DataFlow_Gen2_PublishInProgress");
        }
        var dataflow_gen2_icon_container_component_c0 = function() {
            return {
                "aria-label": "DatapoolRefreshError_Label"
            };
        };
        function DataflowGen2IconContainerComponent_button_2_Template(rf, ctx) {
            if (1 & rf) {
                var _r3 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "button", 3), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r3);
                    var ctx_r2 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r2.showPublishErrorDialog());
                }), core["\u0275\u0275pipe"](1, "async"), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r1 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("disabled", !core["\u0275\u0275pipeBind1"](1, 3, ctx_r1.canOpenPublishErrorDialog()))("localizeAttr", core["\u0275\u0275pureFunction0"](5, dataflow_gen2_icon_container_component_c0)), 
                core["\u0275\u0275attribute"]("tabindex", ctx_r1.tabindex);
            }
        }
        var DataflowGen2IconContainerComponent = function() {
            function DataflowGen2IconContainerComponent(dialogService, cdsaModelHttpService) {
                var _this = this;
                this.dialogService = dialogService, this.cdsaModelHttpService = cdsaModelHttpService, 
                this.showPublishErrorDialog = function() {
                    return (0, tslib_es6.__awaiter)(_this, void 0, void 0, function() {
                        var result, publishErrorDialogParams;
                        return (0, tslib_es6.__generator)(this, function(_a) {
                            switch (_a.label) {
                              case 0:
                                return this.viewModel.publishErrorDetails ? [ 3, 2 ] : [ 4, this.cdsaModelHttpService.getCdsaModel({
                                    cdsaModelId: this.viewModel.id
                                }) ];

                              case 1:
                                (result = _a.sent()) && result.data && (this.viewModel.publishErrorDetails = result.data.publishErrorDetails), 
                                _a.label = 2;

                              case 2:
                                return publishErrorDialogParams = {
                                    dataflowId: this.viewModel.objectId,
                                    disableCallToActionButton: 4 === this.viewModel.lastRefreshStatus,
                                    errorCode: this.viewModel.publishErrorCode,
                                    rootActivityId: this.viewModel.publishRootActivityId,
                                    timestamp: (0, artifact_src.cN)(this.viewModel.lastEditedTimeUTC).toISOString(),
                                    errorDetails: this.viewModel.publishErrorDetails
                                }, [ 4, this.dialogService.openHostDialog({
                                    componentName: "DataflowGen2PublishErrorComponentId",
                                    dialogName: "DataflowGen2PublishError",
                                    bindings: publishErrorDialogParams,
                                    config: {
                                        disableClose: !0,
                                        height: "300px",
                                        maxHeight: "90vh",
                                        maxWidth: "45vw",
                                        panelClass: [ "no-padding" ],
                                        width: "45vw"
                                    }
                                }) ];

                              case 3:
                                return _a.sent(), [ 2 ];
                            }
                        });
                    });
                };
            }
            return DataflowGen2IconContainerComponent.prototype.canOpenPublishErrorDialog = function() {
                return (0, observable_of.of)(2 !== this.viewModel.publishErrorCode);
            }, DataflowGen2IconContainerComponent.prototype.hasPublishError = function() {
                return 4 === this.viewModel.publishStatus;
            }, DataflowGen2IconContainerComponent.prototype.isPublishInProgress = function() {
                return 2 === this.viewModel.publishStatus;
            }, DataflowGen2IconContainerComponent.\u0275fac = function(t) {
                return new (t || DataflowGen2IconContainerComponent)(core["\u0275\u0275directiveInject"](dialog_service.x), core["\u0275\u0275directiveInject"](CdsaModelHttpService));
            }, DataflowGen2IconContainerComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: DataflowGen2IconContainerComponent,
                selectors: [ [ "dataflow-gen2-icon-container" ] ],
                inputs: {
                    viewModel: "viewModel"
                },
                decls: 3,
                vars: 2,
                consts: [ [ 3, "localizeTooltip", 4, "ngIf" ], [ "class", "glyphicon pbi-glyph-warning", "localizeTooltip", "NavigationPane_DataflowGen2_PublishError", 3, "disabled", "localizeAttr", "click", 4, "ngIf" ], [ 3, "localizeTooltip" ], [ "localizeTooltip", "NavigationPane_DataflowGen2_PublishError", 1, "glyphicon", "pbi-glyph-warning", 3, "disabled", "localizeAttr", "click" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, DataflowGen2IconContainerComponent_spinner_1_Template, 1, 1, "spinner", 0), 
                    core["\u0275\u0275template"](2, DataflowGen2IconContainerComponent_button_2_Template, 2, 6, "button", 1), 
                    core["\u0275\u0275elementContainerEnd"]()), 2 & rf && (core["\u0275\u0275advance"](1), 
                    core["\u0275\u0275property"]("ngIf", ctx.isPublishInProgress()), core["\u0275\u0275advance"](1), 
                    core["\u0275\u0275property"]("ngIf", ctx.hasPublishError()));
                },
                dependencies: [ common.NgIf, localize_attr_directive.b, localize_tooltip_directive.r, spinner_component.O, common.AsyncPipe ],
                styles: [ "[_nghost-%COMP%]{padding:0}[_nghost-%COMP%]   button[_ngcontent-%COMP%]{padding:0;border:0;background:none}[_nghost-%COMP%]   button.glyphicon.pbi-glyph-warning[_ngcontent-%COMP%]{font-size:var(--md-font-size, 14px);color:var(--fluent-theme-error-dark-alt-color, #D83B01)}" ],
                changeDetection: 0
            }), DataflowGen2IconContainerComponent;
        }(), events_DashboardGetRefreshHistoriesOnRefreshFailures = telemetryHelpers.cx["PBI.Dashboard.GetRefreshHistoriesOnRefreshFailures"] = (0, 
        telemetryHelpers.b1)("PBI.Dashboard.GetRefreshHistoriesOnRefreshFailures"), DatamartIconsUnavailableTryAgain = telemetryHelpers.cx["PBI.DatamartIcons.Unavailable.TryAgain"] = (0, 
        telemetryHelpers.b1)("PBI.DatamartIcons.Unavailable.TryAgain"), pbi_overlay_ref = __webpack_require__(86286), pbi_overlay_service = __webpack_require__(86940);
        function UnavailableCalloutComponent_div_7_Template(rf, ctx) {
            if (1 & rf) {
                var _r5 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div")(1, "div"), core["\u0275\u0275text"](2), 
                core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](4, "a", 6), 
                core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r5);
                    var ctx_r4 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r4.onClick());
                }), core["\u0275\u0275text"](5), core["\u0275\u0275pipe"](6, "localize"), core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](3, 2, ctx_r0.datamartType === ctx_r0.DatamartSqlType ? "Datamart_Suspended_Message_Bar" : "Warehouse_Suspended_Message_Bar"), " "), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](6, 4, "TryAgain"), " ");
            }
        }
        function UnavailableCalloutComponent_div_8_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div"), core["\u0275\u0275text"](1), 
            core["\u0275\u0275pipe"](2, "localizeFormat"), core["\u0275\u0275elementEnd"]()), 
            2 & rf) {
                var ctx_r1 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind2"](2, 1, "Datamart_Unavailable_Message_Out_Of_Region", ctx_r1.datamartTypeLowercaseName), " ");
            }
        }
        function UnavailableCalloutComponent_div_9_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div"), core["\u0275\u0275text"](1), 
            core["\u0275\u0275pipe"](2, "localizeFormat"), core["\u0275\u0275elementEnd"]()), 
            2 & rf) {
                var ctx_r2 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind2"](2, 1, "Datamart_Unavailable_Message_Upgrade", ctx_r2.datamartTypeLowercaseName), " ");
            }
        }
        function UnavailableCalloutComponent_div_10_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div"), core["\u0275\u0275text"](1), 
            core["\u0275\u0275pipe"](2, "localizeFormat"), core["\u0275\u0275elementEnd"]()), 
            2 & rf) {
                var ctx_r3 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind2"](2, 1, "Datamart_Unavailable_Message_No_Action", ctx_r3.datamartTypeLowercaseName), " ");
            }
        }
        var UnavailableCalloutComponent = function() {
            function UnavailableCalloutComponent(args, store, pbiOverlay, telemetryService, localizationService, notificationToastService) {
                this.args = args, this.store = store, this.pbiOverlay = pbiOverlay, this.telemetryService = telemetryService, 
                this.localizationService = localizationService, this.notificationToastService = notificationToastService, 
                this.DatamartSqlType = 1, this.datamartType = this.args.datamartType, this.datamartTypeTitlecaseName = this.localizationService.get((0, 
                utils.q4)(this.args.datamartType)), this.datamartTypeLowercaseName = this.localizationService.get((0, 
                utils.kK)(this.args.datamartType));
            }
            return UnavailableCalloutComponent.prototype.ngOnInit = function() {
                VisualsCommon_debug.fF.assertValue(this.args, "args must be provided"), this.status = this.args.status;
            }, UnavailableCalloutComponent.prototype.onClick = function() {
                var _this = this;
                this.pbiOverlay.closeAll(), this.store.dispatch(datamart_metadata_actions.CZ({
                    datamartObjectId: this.args.datamartObjectId
                })), this.telemetryService.logEvent(DatamartIconsUnavailableTryAgain, {
                    datamartObjectId: this.args.datamartObjectId
                }), VisualsCommon_debug.fF.assert(function() {
                    return 2 === _this.status;
                }, "Cannot retry for datamartType: ".concat(this.args.datamartType, " that is not in SuspendedInCriticalPhase status")), 
                this.notificationToastService.notify({
                    title: this.localizationService.format("Datamart_Unavailable_Connecting_Title", this.datamartTypeLowercaseName),
                    message: this.localizationService.format("Datamart_Unavailable_Use_Other_Features", this.datamartTypeLowercaseName),
                    notificationType: 3
                });
            }, UnavailableCalloutComponent.\u0275fac = function(t) {
                return new (t || UnavailableCalloutComponent)(core["\u0275\u0275directiveInject"](pbi_overlay_ref.M), core["\u0275\u0275directiveInject"](ngrx_store.yh), core["\u0275\u0275directiveInject"](pbi_overlay_service._), core["\u0275\u0275directiveInject"](Telemetry.y0), core["\u0275\u0275directiveInject"](localization_service.o), core["\u0275\u0275directiveInject"](notification_toast_service.Q));
            }, UnavailableCalloutComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: UnavailableCalloutComponent,
                selectors: [ [ "unavailable-callout" ] ],
                decls: 11,
                vars: 8,
                consts: [ [ 1, "unavailable-callout" ], [ 1, "header-row" ], [ 1, "content" ], [ 3, "ngSwitch" ], [ 4, "ngSwitchCase" ], [ 4, "ngSwitchDefault" ], [ 1, "linkText", 3, "click" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementStart"](0, "div", 0)(1, "div", 1)(2, "h3"), 
                    core["\u0275\u0275text"](3), core["\u0275\u0275pipe"](4, "localizeFormat"), core["\u0275\u0275elementEnd"]()(), 
                    core["\u0275\u0275elementStart"](5, "div", 2), core["\u0275\u0275elementContainerStart"](6, 3), 
                    core["\u0275\u0275template"](7, UnavailableCalloutComponent_div_7_Template, 7, 6, "div", 4), 
                    core["\u0275\u0275template"](8, UnavailableCalloutComponent_div_8_Template, 3, 4, "div", 4), 
                    core["\u0275\u0275template"](9, UnavailableCalloutComponent_div_9_Template, 3, 4, "div", 4), 
                    core["\u0275\u0275template"](10, UnavailableCalloutComponent_div_10_Template, 3, 4, "div", 5), 
                    core["\u0275\u0275elementContainerEnd"](), core["\u0275\u0275elementEnd"]()()), 
                    2 & rf && (core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind2"](4, 5, "Datamart_Unavailable_Label", ctx.datamartTypeTitlecaseName)), 
                    core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngSwitch", ctx.status), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", 2), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", 5), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", 6));
                },
                dependencies: [ common.NgSwitch, common.NgSwitchCase, common.NgSwitchDefault, localize_pipe.F, localize_format_pipe.j ],
                styles: [ '[_nghost-%COMP%]{display:flex;justify-content:center;align-items:center;overflow:auto;border-radius:2px;box-shadow:0 0 2px var(--colorNeutralShadowAmbient),0 8px 16px var(--colorNeutralShadowKey);animation:fade-in .15s ease;font-size:var(--sm-font-size, 12px);word-break:break-word;background-color:var(--fluent-theme-neutral-secondary-color, #605E5C);max-width:290px}.pbi-overlay-caret-large.pbi-overlay-caret[_nghost-%COMP%]:after{background:var(--fluent-theme-white-color, #FFF);border-color:var(--fluent-theme-white-color, #FFF)}.unavailable-callout[_ngcontent-%COMP%]{z-index:1;padding:20px 24px;width:364px;background-color:var(--fluent-theme-white-color, #FFF);color:var(--gray-180, #252423)}.unavailable-callout[_ngcontent-%COMP%]   .header-row[_ngcontent-%COMP%]{display:flex;justify-content:space-between}.unavailable-callout[_ngcontent-%COMP%]   .header-row[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--xlg-font-size, 20px);font-weight:var(--font-weight-semi-bold, 600);margin:0}.unavailable-callout[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--sm-font-size, 12px);font-weight:var(--font-weight-regular, 400);margin-top:10px;line-height:22px}.unavailable-callout[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .linkText[_ngcontent-%COMP%]{margin-top:10px;display:block;color:var(--fluent-theme-link-color, #0078D4);font-size:14px;cursor:pointer}' ],
                changeDetection: 0
            }), UnavailableCalloutComponent;
        }();
        function isDatamartAvailable(status) {
            switch (status) {
              case 0:
              case 1:
              case 3:
                return !0;

              default:
                return !1;
            }
        }
        var modelConverterHelper = __webpack_require__(5708), pbi_overlay_positions = __webpack_require__(25512);
        function DatamartIconContainerComponent_span_0_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "span"), core["\u0275\u0275pipe"](1, "async"), 
            core["\u0275\u0275text"](2), core["\u0275\u0275pipe"](3, "async"), core["\u0275\u0275elementEnd"]()), 
            2 & rf) {
                var ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275attribute"]("title", core["\u0275\u0275pipeBind1"](1, 2, ctx_r0.lastRefreshTime$) || "\u2014"), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](3, 4, ctx_r0.lastRefreshTime$) || "\u2014", "\n");
            }
        }
        function DatamartIconContainerComponent_ng_container_1_spinner_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275element"](0, "spinner", 5), core["\u0275\u0275pipe"](1, "async")), 
            2 & rf) {
                var ctx_r4 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275propertyInterpolate"]("localizeTooltip", core["\u0275\u0275pipeBind1"](1, 1, ctx_r4.spinnerLocalizeToolTip$));
            }
        }
        var datamart_icon_container_component_c0 = function() {
            return {
                "aria-label": "DatapoolRefreshError_Label"
            };
        };
        function DatamartIconContainerComponent_ng_container_1_button_3_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "button", 6), 2 & rf) {
                var ctx_r5 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275property"]("localizeAttr", core["\u0275\u0275pureFunction0"](2, datamart_icon_container_component_c0)), 
                core["\u0275\u0275attribute"]("tabindex", ctx_r5.tabindex);
            }
        }
        function DatamartIconContainerComponent_ng_container_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, DatamartIconContainerComponent_ng_container_1_spinner_1_Template, 2, 3, "spinner", 3), 
            core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275template"](3, DatamartIconContainerComponent_ng_container_1_button_3_Template, 1, 3, "button", 4), 
            core["\u0275\u0275pipe"](4, "async"), core["\u0275\u0275elementContainerEnd"]()), 
            2 & rf) {
                var ctx_r1 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](2, 2, ctx_r1.isRefreshInProgress$)), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](4, 4, ctx_r1.isRefreshError$));
            }
        }
        function DatamartIconContainerComponent_ng_template_2_button_0_Template(rf, ctx) {
            if (1 & rf) {
                var _r8 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "button", 8), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r8);
                    var ctx_r7 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r7.onClick());
                }), core["\u0275\u0275pipe"](1, "localizeFormat"), core["\u0275\u0275pipe"](2, "localize"), 
                core["\u0275\u0275pipe"](3, "async"), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r6 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275attribute"]("tabindex", ctx_r6.tabindex)("aria-label", core["\u0275\u0275pipeBind2"](1, 2, "Datamart_Unavailable_Label", core["\u0275\u0275pipeBind1"](2, 5, core["\u0275\u0275pipeBind1"](3, 7, ctx_r6.datamartTypeName$))));
            }
        }
        function DatamartIconContainerComponent_ng_template_2_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275template"](0, DatamartIconContainerComponent_ng_template_2_button_0_Template, 4, 9, "button", 7), 
            core["\u0275\u0275pipe"](1, "async")), 2 & rf) {
                var ctx_r3 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](1, 1, ctx_r3.isUnavailableError$));
            }
        }
        var defaultDateTimeFormat = {
            year: "2-digit",
            month: "numeric",
            day: "numeric",
            hour: "numeric",
            minute: "numeric",
            second: "numeric"
        }, DatamartIconContainerComponent = function(_super) {
            function DatamartIconContainerComponent(elementRef, pbiOverlay, store) {
                var _this = _super.call(this) || this;
                return _this.elementRef = elementRef, _this.pbiOverlay = pbiOverlay, _this.store = store, 
                _this.tabindex = 0, _this;
            }
            return (0, tslib_es6.__extends)(DatamartIconContainerComponent, _super), DatamartIconContainerComponent.prototype.ngOnInit = function() {
                var _this = this;
                if (!this.viewModel.fromExternalOrgs) {
                    var datamart$ = this.changes$("viewModel");
                    this.datamartTypeName$ = this.store.select(datamart_metadata_selector.jf(this.viewModel.objectId)), 
                    this.lastRefreshTime$ = datamart$.pipe((0, operators_map.U)(function(datamart) {
                        if (isNaN(Date.parse(datamart.lastRefreshTimeUTC))) return (0, modelConverterHelper.A7)(datamart.lastRefreshTimeUTC, {
                            format: defaultDateTimeFormat
                        });
                        var lastRefreshDate = new Date(datamart.lastRefreshTimeUTC);
                        return (0, modelConverterHelper.A7)("/Date(".concat(lastRefreshDate.getTime(), ")/"), {
                            format: defaultDateTimeFormat
                        });
                    })), this.isRefreshIcon = void 0 === this.status, this.isRefreshInProgress$ = datamart$.pipe((0, 
                    operators_map.U)(function(datamart) {
                        return 4 === datamart.currentRefreshStatus || 15 === datamart.currentRefreshStatus;
                    })), this.isRefreshError$ = datamart$.pipe((0, operators_map.U)(function(datamart) {
                        return _this.shouldShowRefreshFailureWarningButton(datamart);
                    })), this.spinnerLocalizeToolTip$ = datamart$.pipe((0, operators_map.U)(function(datamart) {
                        return 15 === datamart.currentRefreshStatus ? "NavigationPane_RefreshCanceling" : "NavigationPane_RefreshInProgress";
                    })), this.isUnavailableError$ = datamart$.pipe((0, operators_map.U)(function(datamart) {
                        return !isDatamartAvailable(datamart.status);
                    }));
                }
            }, DatamartIconContainerComponent.prototype.onClick = function() {
                var positionStrategy = this.pbiOverlay.position().flexibleConnectedTo(this.elementRef.nativeElement).withPositions([ (0, 
                pbi_overlay_positions.v3)() ]).withPush(!0).withGrowAfterOpen(!0);
                this.pbiOverlay.open({
                    component: UnavailableCalloutComponent,
                    data: {
                        status: this.status,
                        datamartObjectId: this.viewModel.objectId,
                        datamartType: this.viewModel.datamartType
                    },
                    options: {
                        backdropClass: pbi_overlay_service.L,
                        disposeOnNavigation: !0,
                        hasBackdrop: !0,
                        positionStrategy
                    },
                    caretSize: 2,
                    closeOnBackdropClick: !0,
                    disableCloseOnEsc: !0,
                    focusElementOnClose: null,
                    hasCaret: !0
                });
            }, DatamartIconContainerComponent.prototype.shouldShowRefreshFailureWarningButton = function(datamart) {
                if (!datamart.currentRefreshStatus) return !1;
                switch (datamart.currentRefreshStatus) {
                  case 1:
                  case 4:
                  case 5:
                  case 15:
                  case 16:
                    return !1;

                  default:
                    return !0;
                }
            }, DatamartIconContainerComponent.\u0275fac = function(t) {
                return new (t || DatamartIconContainerComponent)(core["\u0275\u0275directiveInject"](core.ElementRef), core["\u0275\u0275directiveInject"](pbi_overlay_service._), core["\u0275\u0275directiveInject"](ngrx_store.yh));
            }, DatamartIconContainerComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: DatamartIconContainerComponent,
                selectors: [ [ "datamart-icon-container" ] ],
                inputs: {
                    tabindex: "tabindex",
                    viewModel: "viewModel",
                    status: "status",
                    showLastRefreshTime: "showLastRefreshTime"
                },
                features: [ core["\u0275\u0275InheritDefinitionFeature"] ],
                decls: 4,
                vars: 3,
                consts: [ [ 4, "ngIf" ], [ 4, "ngIf", "ngIfElse" ], [ "unavailableIcon", "" ], [ 3, "localizeTooltip", 4, "ngIf" ], [ "class", "glyphicon pbi-glyph-warning", "localizeTooltip", "NavigationPane_DatamartRefreshError", 3, "localizeAttr", 4, "ngIf" ], [ 3, "localizeTooltip" ], [ "localizeTooltip", "NavigationPane_DatamartRefreshError", 1, "glyphicon", "pbi-glyph-warning", 3, "localizeAttr" ], [ "class", "glyphicon pbi-glyph-warning", 3, "click", 4, "ngIf" ], [ 1, "glyphicon", "pbi-glyph-warning", 3, "click" ] ],
                template: function(rf, ctx) {
                    if (1 & rf && (core["\u0275\u0275template"](0, DatamartIconContainerComponent_span_0_Template, 4, 6, "span", 0), 
                    core["\u0275\u0275template"](1, DatamartIconContainerComponent_ng_container_1_Template, 5, 6, "ng-container", 1), 
                    core["\u0275\u0275template"](2, DatamartIconContainerComponent_ng_template_2_Template, 2, 3, "ng-template", null, 2, core["\u0275\u0275templateRefExtractor"])), 
                    2 & rf) {
                        var _r2 = core["\u0275\u0275reference"](3);
                        core["\u0275\u0275property"]("ngIf", ctx.showLastRefreshTime), core["\u0275\u0275advance"](1), 
                        core["\u0275\u0275property"]("ngIf", ctx.isRefreshIcon)("ngIfElse", _r2);
                    }
                },
                dependencies: [ common.NgIf, localize_attr_directive.b, localize_tooltip_directive.r, spinner_component.O, common.AsyncPipe, localize_pipe.F, localize_format_pipe.j ],
                styles: [ "[_nghost-%COMP%]{display:inline-flex;padding:0;cursor:pointer}[_nghost-%COMP%]   button[_ngcontent-%COMP%]{vertical-align:middle;display:contents}[_nghost-%COMP%]   button.glyphicon.pbi-glyph-warning[_ngcontent-%COMP%]{font-size:var(--md-font-size, 14px);color:var(--fluent-theme-error-dark-alt-color, #D83B01)}" ],
                changeDetection: 0
            }), DatamartIconContainerComponent;
        }(rx_component.w), JsonExtensions = __webpack_require__(26112);
        function FormatWithNamedParameters(localize, errorCode, parameters) {
            if (!errorCode) return "";
            var errorMessage, localizedMsgTemplate = localize.get("ServerError_" + errorCode);
            return localizedMsgTemplate && (errorMessage = localizedMsgTemplate.replace(/\{\s*([^}\s]+)\s*\}/g, function(m, p1, offset, string) {
                return parameters[p1];
            })), errorMessage;
        }
        var ModalDialogAction = __webpack_require__(6219), UILibrary_constants = __webpack_require__(87632), DatasetSizeService = function() {
            function DatasetSizeService(folderService) {
                this.folderService = folderService;
            }
            return DatasetSizeService.prototype.getProgressDelayStringForGivenFileSize = function(fileSizeInMB) {
                var progressDurationBasedOnFileSize = this.getDurationInSecondsForGivenFileSizeInMB(fileSizeInMB);
                return this.getDelayDurationStringForProgressBarAnimation(progressDurationBasedOnFileSize);
            }, DatasetSizeService.prototype.getEstimatedLoadingTimeForGivenFileSize = function(fileSizeInMB) {
                return this.getDurationInSecondsForGivenFileSizeInMB(fileSizeInMB);
            }, DatasetSizeService.prototype.getProgressBarDetailsForGivenFileSize = function(fileSizeInMB) {
                var estimatedLoadingTimeInSeconds = this.getEstimatedLoadingTimeForGivenFileSize(fileSizeInMB);
                return {
                    estimatedLoadingTimeInMinutes: Math.floor(estimatedLoadingTimeInSeconds / 60),
                    delayDurationString: this.getDelayDurationStringForProgressBarAnimation(estimatedLoadingTimeInSeconds)
                };
            }, DatasetSizeService.prototype.isLargeModelNotInPremium = function(modelSizeInMB, folderObjectId) {
                if (!this.folderService) return VisualsCommon_debug.fF.log("no folderService in dataset-size service"), 
                modelSizeInMB > 1024;
                var folder = folderObjectId ? this.folderService.getFolder(folderObjectId) : this.folderService.activeFolder;
                return !(folder && null != folder.capacity) && modelSizeInMB > 1024;
            }, DatasetSizeService.prototype.isModelNotInPremiumAndLargeSize = function(modelSizeInMB, isPremium) {
                return !isPremium && modelSizeInMB > 1024;
            }, DatasetSizeService.prototype.getDurationInSecondsForGivenFileSizeInMB = function(fileSizeInMB) {
                return fileSizeInMB > 0 && fileSizeInMB < 1024 ? 0 : 30 * Math.floor(fileSizeInMB / 1024);
            }, DatasetSizeService.prototype.getDelayDurationStringForProgressBarAnimation = function(progressDuration) {
                var initialDelay = progressDuration + 0;
                return "".concat(0, "s, ").concat(initialDelay, "s, ").concat(2 * initialDelay, "s, ").concat(3 * initialDelay, "s");
            }, DatasetSizeService.\u0275fac = function(t) {
                return new (t || DatasetSizeService)(core["\u0275\u0275inject"](folder_service.s, 8));
            }, DatasetSizeService.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: DatasetSizeService,
                factory: DatasetSizeService.\u0275fac,
                providedIn: "root"
            }), DatasetSizeService;
        }(), telemetryConstants = __webpack_require__(58630), sync_service = __webpack_require__(76323), HttpThrottler = function() {
            function HttpThrottler(telemetryService) {
                this.telemetryService = telemetryService, this.requests = {};
            }
            return HttpThrottler.prototype.debounce = function(operationName, operationKey, httpFunction) {
                var _this = this;
                VisualsCommon_debug.fF.assertValue(operationName, "HttpThrottler.debounce operationName required"), 
                VisualsCommon_debug.fF.assertValue(operationKey, "HttpThrottler.debounce operationKey required"), 
                VisualsCommon_debug.fF.assertValue(httpFunction, "HttpThrottler.debounce httpFunction required");
                var requestKey = operationName + operationKey, existingRequest = this.requests[requestKey];
                if (existingRequest) return existingRequest.throttleCount++, existingRequest.promise;
                var httpPromise = httpFunction();
                return this.requests[requestKey] = {
                    operationName,
                    promise: httpPromise,
                    throttleCount: 0
                }, httpPromise.finally(function() {
                    var requestInfo = _this.requests[requestKey];
                    VisualsCommon_debug.fF.assertValue(operationName, "HttpThrottler.debounce invalid state, missing request key on completion"), 
                    _this.requests[requestKey] = void 0, requestInfo.throttleCount > 0 && _this.telemetryService.logEvent(HttpRequestThrottled, {
                        operation: requestInfo.operationName,
                        count: requestInfo.throttleCount
                    });
                }), httpPromise;
            }, HttpThrottler.\u0275fac = function(t) {
                return new (t || HttpThrottler)(core["\u0275\u0275inject"](Telemetry.y0));
            }, HttpThrottler.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: HttpThrottler,
                factory: HttpThrottler.\u0275fac,
                providedIn: "root"
            }), HttpThrottler;
        }(), ModelHttpService = function() {
            function ModelHttpService(syncService, httpThrottler, httpCoreService) {
                this.syncService = syncService, this.httpThrottler = httpThrottler, this.httpCoreService = httpCoreService;
            }
            return ModelHttpService.prototype.getModels = function(event) {
                var options = this.httpCoreService.powerbiRequestOptions(event, "GetModels");
                return this.httpCoreService.get("powerbi/metadata/models", options);
            }, ModelHttpService.prototype.getModel = function(modelId, packageId, event, debounce) {
                var _this = this, options = this.httpCoreService.powerbiRequestOptions(event, "GetModel"), httpFunction = function() {
                    return _this.httpCoreService.get(packageId ? "powerbi/metadata/models/" + modelId + "/?modelOptions=Default&packageId=" + packageId : "powerbi/metadata/models/" + modelId + "/?modelOptions=Default", options);
                };
                return debounce ? this.httpThrottler.debounce("GetModel", "p:".concat(packageId, ",m:").concat(modelId), httpFunction) : httpFunction();
            }, ModelHttpService.prototype.getModelForRefresh = function(modelId, packageId, event) {
                var options = this.httpCoreService.powerbiRequestOptions(event, "GetModelForRefresh");
                return this.httpCoreService.get(packageId ? "powerbi/metadata/models/" + modelId + "/?modelOption=Refresh&packageId=" + packageId : "powerbi/metadata/models/" + modelId + "/?modelOption=Refresh", options);
            }, ModelHttpService.prototype.getModelAndPackageForRefresh = function(modelId, packageId, event) {
                var options = this.httpCoreService.powerbiRequestOptions(event, "GetModelAndPackageForRefresh");
                return this.syncService.addDashboardMetadataEditRequestId(options.headers[telemetryConstants.t7]), 
                this.httpCoreService.get("powerbi/metadata/models/" + modelId + "/?modelOption=PackageModelRefresh&packageId=" + packageId, options);
            }, ModelHttpService.prototype.renameModel = function(model, newName, event) {
                var options = this.httpCoreService.powerbiRequestOptions(event, "RenameModel");
                return this.syncService.addDashboardMetadataEditRequestId(options.headers[telemetryConstants.t7]), 
                this.httpCoreService.post("powerbi/metadata/models/" + model.id + "/name", JSON.stringify(newName), options);
            }, ModelHttpService.prototype.deleteModel = function(model, event) {
                var options = this.httpCoreService.powerbiRequestOptions(event, "DeleteModel");
                return this.httpCoreService.delete("powerbi/content/models/" + model.id + "/?packageId=" + model.packageId, options);
            }, ModelHttpService.prototype.getPackageModels = function(packageId, event) {
                var options = this.httpCoreService.powerbiRequestOptions(event, "GetPackageModels");
                return this.httpCoreService.get("powerbi/metadata/packages/" + packageId + "/models", options);
            }, ModelHttpService.prototype.getModelRefreshHistories = function(modelId, event) {
                var options = this.httpCoreService.powerbiRequestOptions(event, "GetModelRefreshHistories");
                return this.httpCoreService.get("powerbi/metadata/models/" + modelId + "/refreshhistories", options);
            }, ModelHttpService.prototype.getModelDirectLakeAutoSyncStatus = function(modelId, event) {
                var options = this.httpCoreService.powerbiRequestOptions(event, "GetModelDirectLakeAutoSyncStatus");
                return this.httpCoreService.get("metadata/models/" + modelId + "/directLakeSyncStatus", options);
            }, ModelHttpService.prototype.getModelRefreshScheduleContacts = function(modelId, event) {
                var options = this.httpCoreService.powerbiRequestOptions(event, "GetModelRefreshScheduleContacts");
                return this.httpCoreService.get("powerbi/metadata/models/" + modelId + "/refreshschedule/contacts", options);
            }, ModelHttpService.prototype.getPackageRefreshHistories = function(packageId, event) {
                var options = this.httpCoreService.powerbiRequestOptions(event, "GetPackageRefreshHistories");
                return this.httpCoreService.get("powerbi/metadata/packages/" + packageId + "/refreshhistories", options);
            }, ModelHttpService.prototype.updateFeaturedQuestions = function(modelId, featuredQuestions, event) {
                var options = this.httpCoreService.powerbiRequestOptions(event, "UpdateFeaturedQuestions");
                return this.httpCoreService.put("powerbi/metadata/models/" + modelId + "/featuredQuestions", JSON.stringify(featuredQuestions), options);
            }, ModelHttpService.prototype.disableRlsModel = function(modelId, event) {
                var options = this.httpCoreService.powerbiRequestOptions(event, "DisableRlsModel");
                return this.httpCoreService.post("metadata/model/" + modelId + "/rlsdisabled", JSON.stringify(!1), options);
            }, ModelHttpService.prototype.updateModelQnaFeatures = function(modelId, qnaFeatures, event) {
                var options = this.httpCoreService.powerbiRequestOptions(event, "UpdateModelQnaFeatures");
                return this.httpCoreService.post("powerbi/metadata/models/" + modelId + "/qnafeatures", JSON.stringify(qnaFeatures), options);
            }, ModelHttpService.prototype.updateModelCaching = function(modelId, cachingSettings, event) {
                var options = this.httpCoreService.powerbiRequestOptions(event, "UpdateModelCaching");
                return this.httpCoreService.post("metadata/models/" + modelId + "/caching", JSON.stringify(cachingSettings), options);
            }, ModelHttpService.prototype.getSharedDatasets = function(event) {
                var options = this.httpCoreService.powerbiRequestOptions(event, "GetSharedDatasets");
                return this.httpCoreService.get("metadata/gallery/SharedDatasets", options);
            }, ModelHttpService.prototype.getReadonlySharedDatasets = function(event) {
                var options = this.httpCoreService.powerbiRequestOptions(event, "GetReadonlySharedDatasets", {
                    dismissGroupObjectId: !0
                });
                return this.httpCoreService.get("metadata/gallery/sharedDatasets/readonly", options);
            }, ModelHttpService.prototype.updatePerformanceAccelerator = function(modelId, paEnabled, paSettings, shouldDeleteGenAggTable, event) {
                var updatePA = {
                    paEnabled,
                    paSettings: {
                        queryCoverage: paSettings.queryCoverage
                    },
                    shouldDeleteGenAggTable
                }, options = this.httpCoreService.powerbiRequestOptions(event, "updatePerformanceAccelerator");
                return this.httpCoreService.post("powerbi/metadata/models/" + modelId + "/pasettings", JSON.stringify(updatePA), options);
            }, ModelHttpService.prototype.getPerformanceAcceleratorSupportability = function(modelId, event) {
                var options = this.httpCoreService.powerbiRequestOptions(event, "GetPerformanceAccelerator");
                return this.httpCoreService.get("powerbi/metadata/models/".concat(modelId, "/pasupportability"), options);
            }, ModelHttpService.prototype.getPerformanceAcceleratorMetrics = function(modelId, queryCoverage, event) {
                var options = this.httpCoreService.powerbiRequestOptions(event, "GetPerformanceAcceleratorMetrics");
                return this.httpCoreService.get("powerbi/metadata/models/".concat(modelId, "/paUsageMetrics?queryCoverage=").concat(queryCoverage), options);
            }, ModelHttpService.prototype.getAggsSSOInfo = function(modelId, event) {
                var options = this.httpCoreService.powerbiRequestOptions(event, "getAggsSSOInfo");
                return this.httpCoreService.get("powerbi/metadata/models/".concat(modelId, "/aggregationsSSOcheck"), options);
            }, ModelHttpService.prototype.updateModelSettings = function(modelId, updateRequest, deleteArtifactFolder, event) {
                var options = this.httpCoreService.powerbiRequestOptions(event, "updateModelSettings"), url = "metadata/models/" + modelId + "/settings";
                return deleteArtifactFolder && (url += "?deleteArtifactFolder=true"), this.httpCoreService.post(url, JSON.stringify(updateRequest), options);
            }, ModelHttpService.prototype.getModelBindingAffnity = function(modelObjectId, event) {
                var options = this.httpCoreService.powerbiRequestOptions(event, "getModelBindingAffnity");
                return this.httpCoreService.get("metadata/datasourcebinding/settings/models/".concat(modelObjectId, "/bindingaffinity"), options);
            }, ModelHttpService.prototype.setModelBindingAffnity = function(modelObjectId, request, event) {
                var options = this.httpCoreService.powerbiRequestOptions(event, "setModelBindingAffnity");
                return this.httpCoreService.put("metadata/datasourcebinding/settings/models/" + modelObjectId + "/bindingaffinity", JSON.stringify(request), options);
            }, ModelHttpService.\u0275fac = function(t) {
                return new (t || ModelHttpService)(core["\u0275\u0275inject"](sync_service._), core["\u0275\u0275inject"](HttpThrottler), core["\u0275\u0275inject"](http_core_service.M));
            }, ModelHttpService.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: ModelHttpService,
                factory: ModelHttpService.\u0275fac,
                providedIn: "root"
            }), ModelHttpService;
        }(), dataset_store_service = __webpack_require__(50911), package_store_service = __webpack_require__(65692), error_service = __webpack_require__(81213), navigation_service = __webpack_require__(18873), tooltip_directive = __webpack_require__(1240);
        function DatasetIconContainerModernComponent_span_0_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "span"), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275attribute"]("title", ctx_r0.lastRefreshTime || "\u2014"), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275textInterpolate1"](" ", ctx_r0.lastRefreshTime || "\u2014", "\n");
            }
        }
        function DatasetIconContainerModernComponent_span_1_spinner_1_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "spinner", 7), 2 & rf) {
                var ctx_r3 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275property"]("size", ctx_r3.spinnerSize);
            }
        }
        function DatasetIconContainerModernComponent_span_1_i_3_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "i", 8), 2 & rf) {
                var ctx_r4 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275property"]("pbi-tooltip", ctx_r4.publishErrorTooltipConfig);
            }
        }
        function DatasetIconContainerModernComponent_span_1_button_5_Template(rf, ctx) {
            if (1 & rf) {
                var _r11 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "button", 9), core["\u0275\u0275listener"]("click", function($event) {
                    core["\u0275\u0275restoreView"](_r11);
                    var ctx_r10 = core["\u0275\u0275nextContext"](2);
                    return $event.stopPropagation(), core["\u0275\u0275resetView"](ctx_r10.showRefreshErrorDialog());
                }), core["\u0275\u0275pipe"](1, "localize"), core["\u0275\u0275element"](2, "i", 10), 
                core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r5 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275property"]("pbi-tooltip", ctx_r5.refreshErrorTooltipConfig), core["\u0275\u0275attribute"]("tabindex", ctx_r5.tabindex)("aria-label", core["\u0275\u0275pipeBind1"](1, 3, ctx_r5.refreshErrorTooltipConfig.tooltipLocalizeDescription));
            }
        }
        function DatasetIconContainerModernComponent_span_1_button_7_Template(rf, ctx) {
            if (1 & rf) {
                var _r13 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "button", 9), core["\u0275\u0275listener"]("click", function($event) {
                    core["\u0275\u0275restoreView"](_r13);
                    var ctx_r12 = core["\u0275\u0275nextContext"](2);
                    return $event.stopPropagation(), core["\u0275\u0275resetView"](ctx_r12.showUnboundDatasourceDialog());
                }), core["\u0275\u0275pipe"](1, "localize"), core["\u0275\u0275element"](2, "i", 10), 
                core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r6 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275property"]("pbi-tooltip", ctx_r6.unboundDatasourceTooltipConfig), 
                core["\u0275\u0275attribute"]("tabindex", ctx_r6.tabindex)("aria-label", core["\u0275\u0275pipeBind1"](1, 3, ctx_r6.unboundDatasourceTooltipConfig.tooltipLocalizeDescription));
            }
        }
        function DatasetIconContainerModernComponent_span_1_button_9_Template(rf, ctx) {
            if (1 & rf) {
                var _r15 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "button", 9), core["\u0275\u0275listener"]("click", function($event) {
                    core["\u0275\u0275restoreView"](_r15);
                    var ctx_r14 = core["\u0275\u0275nextContext"](2);
                    return $event.stopPropagation(), core["\u0275\u0275resetView"](ctx_r14.showQsoPendingUpdatesDialog());
                }), core["\u0275\u0275pipe"](1, "localize"), core["\u0275\u0275element"](2, "i", 10), 
                core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r7 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275property"]("pbi-tooltip", ctx_r7.refreshErrorTooltipConfig), core["\u0275\u0275attribute"]("tabindex", ctx_r7.tabindex)("aria-label", core["\u0275\u0275pipeBind1"](1, 3, ctx_r7.refreshErrorTooltipConfig.tooltipLocalizeDescription));
            }
        }
        function DatasetIconContainerModernComponent_span_1_button_11_Template(rf, ctx) {
            if (1 & rf) {
                var _r17 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "button", 9), core["\u0275\u0275listener"]("click", function($event) {
                    core["\u0275\u0275restoreView"](_r17);
                    var ctx_r16 = core["\u0275\u0275nextContext"](2);
                    return $event.stopPropagation(), core["\u0275\u0275resetView"](ctx_r16.showLargeModelNotInPremiumErrorDialog());
                }), core["\u0275\u0275pipe"](1, "localize"), core["\u0275\u0275element"](2, "i", 10), 
                core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r8 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275property"]("pbi-tooltip", ctx_r8.refreshErrorTooltipConfig), core["\u0275\u0275attribute"]("aria-label", core["\u0275\u0275pipeBind1"](1, 2, ctx_r8.refreshErrorTooltipConfig.tooltipLocalizeDescription));
            }
        }
        function DatasetIconContainerModernComponent_span_1_button_12_Template(rf, ctx) {
            if (1 & rf) {
                var _r19 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "button", 9), core["\u0275\u0275listener"]("click", function($event) {
                    core["\u0275\u0275restoreView"](_r19);
                    var ctx_r18 = core["\u0275\u0275nextContext"](2);
                    return $event.stopPropagation(), core["\u0275\u0275resetView"](ctx_r18.showMissingCapabilitiesDialog());
                }), core["\u0275\u0275pipe"](1, "localize"), core["\u0275\u0275element"](2, "i", 10), 
                core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r9 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275property"]("pbi-tooltip", ctx_r9.refreshErrorTooltipConfig), core["\u0275\u0275attribute"]("aria-label", core["\u0275\u0275pipeBind1"](1, 2, ctx_r9.refreshErrorTooltipConfig.tooltipLocalizeDescription));
            }
        }
        function DatasetIconContainerModernComponent_span_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "span", 3), core["\u0275\u0275template"](1, DatasetIconContainerModernComponent_span_1_spinner_1_Template, 1, 1, "spinner", 4), 
            core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275template"](3, DatasetIconContainerModernComponent_span_1_i_3_Template, 1, 1, "i", 5), 
            core["\u0275\u0275pipe"](4, "async"), core["\u0275\u0275template"](5, DatasetIconContainerModernComponent_span_1_button_5_Template, 3, 5, "button", 6), 
            core["\u0275\u0275pipe"](6, "async"), core["\u0275\u0275template"](7, DatasetIconContainerModernComponent_span_1_button_7_Template, 3, 5, "button", 6), 
            core["\u0275\u0275pipe"](8, "async"), core["\u0275\u0275template"](9, DatasetIconContainerModernComponent_span_1_button_9_Template, 3, 5, "button", 6), 
            core["\u0275\u0275pipe"](10, "async"), core["\u0275\u0275template"](11, DatasetIconContainerModernComponent_span_1_button_11_Template, 3, 4, "button", 6), 
            core["\u0275\u0275template"](12, DatasetIconContainerModernComponent_span_1_button_12_Template, 3, 4, "button", 6), 
            core["\u0275\u0275pipe"](13, "async"), core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r1 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275attribute"]("tabindex", ctx_r1.tabindex), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](2, 8, ctx_r1.isRefreshInProgress$)), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](4, 10, ctx_r1.isPublishError$)), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](6, 12, ctx_r1.isRefreshError$)), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](8, 14, ctx_r1.isUnboundDatasource$)), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](10, 16, ctx_r1.hasQsoPendingUpdates$)), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", ctx_r1.isLargeModelNotInPremium()), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](13, 18, ctx_r1.hasSemanticModelMissingCapabilities$));
            }
        }
        function DatasetIconContainerModernComponent_span_2_span_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "span", 13), core["\u0275\u0275pipe"](1, "localize"), 
            core["\u0275\u0275element"](2, "i", 10), core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r20 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275property"]("pbi-tooltip", ctx_r20.refreshDisabledDueToConsecutiveErrorsTooltipConfig), 
                core["\u0275\u0275attribute"]("aria-label", core["\u0275\u0275pipeBind1"](1, 2, ctx_r20.refreshDisabledDueToConsecutiveErrorsTooltipConfig.tooltipLocalizeDescription));
            }
        }
        function DatasetIconContainerModernComponent_span_2_span_3_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "span", 13), core["\u0275\u0275pipe"](1, "localize"), 
            core["\u0275\u0275element"](2, "i", 10), core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r21 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275property"]("pbi-tooltip", ctx_r21.refreshDisabledDueToModelSizeExceedRefreshLimitTooltipConfig), 
                core["\u0275\u0275attribute"]("aria-label", core["\u0275\u0275pipeBind1"](1, 2, ctx_r21.refreshDisabledDueToModelSizeExceedRefreshLimitTooltipConfig.tooltipLocalizeDescription));
            }
        }
        function DatasetIconContainerModernComponent_span_2_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "span", 11), core["\u0275\u0275template"](1, DatasetIconContainerModernComponent_span_2_span_1_Template, 3, 4, "span", 12), 
            core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275template"](3, DatasetIconContainerModernComponent_span_2_span_3_Template, 3, 4, "span", 12), 
            core["\u0275\u0275pipe"](4, "async"), core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r2 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](2, 2, ctx_r2.isRefreshDisabledDueToConsecutiveErrors$)), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](4, 4, ctx_r2.isRefreshDisabledDueToModelSizeExceedRefreshLimit$));
            }
        }
        var dataset_icon_container_modern_component_defaultDateTimeFormat = {
            year: "2-digit",
            month: "numeric",
            day: "numeric",
            hour: "numeric",
            minute: "numeric",
            second: "numeric"
        }, DatasetIconContainerModernComponent = function() {
            function DatasetIconContainerModernComponent(datasetSizeService, datasetStore, errorService, folderService, localizationService, modelHttpService, navigation, packageStore, telemetryService, featureSwitchService) {
                this.datasetSizeService = datasetSizeService, this.datasetStore = datasetStore, 
                this.errorService = errorService, this.folderService = folderService, this.localizationService = localizationService, 
                this.modelHttpService = modelHttpService, this.navigation = navigation, this.packageStore = packageStore, 
                this.telemetryService = telemetryService, this.featureSwitchService = featureSwitchService, 
                this.tabindex = 0, this.spinnerSize = "xsmall", this.refreshInprogressTooltipConfig = {
                    tooltipLocalizeDescription: "NavigationPane_RefreshInProgress",
                    tooltipArrowPosition: UILibrary_constants.xI.arrowBottomLeft
                }, this.publishErrorTooltipConfig = {
                    tooltipLocalizeDescription: "NavigationPane_RefreshPublishError",
                    tooltipArrowPosition: UILibrary_constants.xI.arrowBottomLeft
                }, this.refreshErrorTooltipConfig = {
                    tooltipLocalizeDescription: "NavigationPane_RefreshError",
                    tooltipArrowPosition: UILibrary_constants.xI.arrowBottomLeft
                }, this.unboundDatasourceTooltipConfig = {
                    tooltipLocalizeDescription: "NavigationPane_UnboundDatasource",
                    tooltipArrowPosition: UILibrary_constants.xI.arrowBottomLeft
                }, this.refreshDisabledDueToConsecutiveErrorsTooltipConfig = {
                    tooltipLocalizeDescription: "Notification_ModelRefreshDisabledDueToConsecutiveErrors",
                    tooltipArrowPosition: UILibrary_constants.xI.arrowBottomLeft
                }, this.refreshDisabledDueToModelSizeExceedRefreshLimitTooltipConfig = {
                    tooltipLocalizeDescription: "Notification_ModelRefreshDisabledDueToModelSizeExceedRefreshLimit",
                    tooltipArrowPosition: UILibrary_constants.xI.arrowBottomLeft
                }, this.packageId$ = new BehaviorSubject.X(null), this.destroy$ = new Subject.xQ;
            }
            return DatasetIconContainerModernComponent.prototype.ngOnInit = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var _this = this;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        return this.dataset$ = (0, observable_combineLatest.aj)(this.datasetStore.datasets, this.packageId$).pipe((0, 
                        takeUntil.R)(this.destroy$), (0, operators_map.U)(function(_a) {
                            var packageId = _a[1];
                            return _.find(_.map(_a[0], function(datasetWithCategories) {
                                return datasetWithCategories.dataset;
                            }), function(dataset) {
                                return dataset.packageId === packageId;
                            });
                        }), (0, operators_tap.b)(function(dataset) {
                            _this.lastRefreshTime = (0, modelConverterHelper.A7)(dataset ? dataset.lastRefreshTime : _this.viewModel.lastRefreshTime, {
                                format: dataset_icon_container_modern_component_defaultDateTimeFormat
                            });
                        })), this.isRefreshInProgress$ = this.dataset$.pipe((0, takeUntil.R)(this.destroy$), (0, 
                        operators_map.U)(function(dataset) {
                            return 3 === (null == dataset ? void 0 : dataset.lastRefreshStatus);
                        })), this.isPublishError$ = this.dataset$.pipe((0, takeUntil.R)(this.destroy$), (0, 
                        operators_map.U)(function(dataset) {
                            return 2 === (null == dataset ? void 0 : dataset.packagePublishStatus);
                        })), this.isRefreshError$ = this.dataset$.pipe((0, takeUntil.R)(this.destroy$), (0, 
                        operators_map.U)(function(dataset) {
                            return 4 === (null == dataset ? void 0 : dataset.lastRefreshStatus) || 4 === (null == dataset ? void 0 : dataset.packagePublishStatus);
                        })), this.isUnboundDatasource$ = this.dataset$.pipe((0, takeUntil.R)(this.destroy$), (0, 
                        operators_map.U)(function(dataset) {
                            return 1 === (null == dataset ? void 0 : dataset.datasourceUnbindReason);
                        })), this.isRefreshDisabledDueToConsecutiveErrors$ = this.dataset$.pipe((0, takeUntil.R)(this.destroy$), (0, 
                        operators_map.U)(function(dataset) {
                            var _a;
                            return 2 === (null === (_a = null == dataset ? void 0 : dataset.refreshSchedule) || void 0 === _a ? void 0 : _a.refreshDisabledReason);
                        })), this.isRefreshDisabledDueToModelSizeExceedRefreshLimit$ = this.dataset$.pipe((0, 
                        takeUntil.R)(this.destroy$), (0, operators_map.U)(function(dataset) {
                            var _a;
                            return 3 === (null === (_a = null == dataset ? void 0 : dataset.refreshSchedule) || void 0 === _a ? void 0 : _a.refreshDisabledReason);
                        })), this.hasQsoPendingUpdates$ = this.dataset$.pipe((0, takeUntil.R)(this.destroy$), (0, 
                        operators_map.U)(function(dataset) {
                            return _this.featureSwitchService.featureSwitches.ASQsoUISupport && _this.featureSwitchService.featureSwitches.queryScaleOutTenantEnabled && 2 === (null == dataset ? void 0 : dataset.storageMode) && !0 === (null == dataset ? void 0 : dataset.isQsoSupported) && !0 === (null == dataset ? void 0 : dataset.isQsoManualSyncWithPendingUpdates);
                        })), this.hasSemanticModelMissingCapabilities$ = this.dataset$.pipe((0, takeUntil.R)(this.destroy$), (0, 
                        operators_map.U)(function(dataset) {
                            return !!(null == dataset ? void 0 : dataset.contentProviderId) && 7 !== (null == dataset ? void 0 : dataset.contentProviderId) && 26 !== (null == dataset ? void 0 : dataset.contentProviderId);
                        })), [ 2 ];
                    });
                });
            }, DatasetIconContainerModernComponent.prototype.ngOnChanges = function() {
                this.packageId$.next(this.viewModel.packageId);
            }, DatasetIconContainerModernComponent.prototype.ngOnDestroy = function() {
                this.destroy$.next(), this.destroy$.complete();
            }, DatasetIconContainerModernComponent.prototype.isLargeModelNotInPremium = function() {
                var _a, isModelWithCapacity = !!(null === (_a = this.viewModel) || void 0 === _a ? void 0 : _a.capacityObjectId);
                return isModelWithCapacity ? this.datasetSizeService.isModelNotInPremiumAndLargeSize(this.viewModel.sizeInMBs, isModelWithCapacity) : this.datasetSizeService.isLargeModelNotInPremium(this.viewModel.sizeInMBs, this.folderObjectId || this.folderService.activeFolderObjectId);
            }, DatasetIconContainerModernComponent.prototype.showRefreshErrorDialog = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var dataset, getRefreshInfoEvent, result;
                    return (0, tslib_es6.__generator)(this, function(_d) {
                        switch (_d.label) {
                          case 0:
                            return [ 4, this.dataset$.pipe((0, operators_take.q)(1)).toPromise() ];

                          case 1:
                            if (dataset = _d.sent(), VisualsCommon_debug.fF.assert(function() {
                                return !!dataset;
                            }, "should have valid dataset"), getRefreshInfoEvent = this.telemetryService.startEvent(events_DashboardGetRefreshHistoriesOnRefreshFailures), 
                            4 !== dataset.lastRefreshStatus || 4 !== dataset.packagePublishStatus) return [ 3, 8 ];
                            _d.label = 2;

                          case 2:
                            return _d.trys.push([ 2, 5, , 7 ]), [ 4, this.modelHttpService.getModelRefreshHistories(this.viewModel.id.toString(), getRefreshInfoEvent.event) ];

                          case 3:
                            return result = _d.sent(), [ 4, this.processModelAndPackageRefreshHistories(getRefreshInfoEvent, result) ];

                          case 4:
                            return _d.sent(), [ 3, 7 ];

                          case 5:
                            return _d.sent(), [ 4, this.processModelAndPackageRefreshHistories(getRefreshInfoEvent) ];

                          case 6:
                            return _d.sent(), [ 3, 7 ];

                          case 7:
                            return [ 3, 19 ];

                          case 8:
                            if (4 !== dataset.lastRefreshStatus) return [ 3, 14 ];
                            _d.label = 9;

                          case 9:
                            return _d.trys.push([ 9, 12, , 13 ]), [ 4, this.modelHttpService.getModelRefreshHistories(this.viewModel.id.toString(), getRefreshInfoEvent.event) ];

                          case 10:
                            return result = _d.sent(), [ 4, this.displaySuccessHistoryResult(_.filter(result.data, function(h) {
                                return 10 !== h.refreshType;
                            })) ];

                          case 11:
                            return _d.sent(), getRefreshInfoEvent.resolve(), [ 3, 13 ];

                          case 12:
                            return _d.sent(), this.displayErrorHistoryResult(), getRefreshInfoEvent.reject(), 
                            [ 3, 13 ];

                          case 13:
                            return [ 3, 19 ];

                          case 14:
                            if (4 !== dataset.packagePublishStatus) return [ 3, 19 ];
                            _d.label = 15;

                          case 15:
                            return _d.trys.push([ 15, 18, , 19 ]), [ 4, this.modelHttpService.getPackageRefreshHistories(this.viewModel.packageId.toString(), getRefreshInfoEvent.event) ];

                          case 16:
                            return result = _d.sent(), [ 4, this.displaySuccessHistoryResult(result.data) ];

                          case 17:
                            return _d.sent(), getRefreshInfoEvent.resolve(), [ 3, 19 ];

                          case 18:
                            return _d.sent(), this.displayErrorHistoryResult(), getRefreshInfoEvent.reject(), 
                            [ 3, 19 ];

                          case 19:
                            return [ 2 ];
                        }
                    });
                });
            }, DatasetIconContainerModernComponent.prototype.showUnboundDatasourceDialog = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var dataset, currentPackage, modalDialog, promptActions, learnMoreText, dialogTitle, dialogMessageText, learnMore, dialogMessage, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.dataset$.pipe((0, operators_take.q)(1)).toPromise() ];

                          case 1:
                            return dataset = _a.sent(), VisualsCommon_debug.fF.assert(function() {
                                return !!dataset;
                            }, "should have valid dataset"), currentPackage = this.packageStore.findById(null == dataset ? void 0 : dataset.packageId), 
                            modalDialog = this.errorService.control(), promptActions = [ new ModalDialogAction.l(this.localizationService.get("OpenDatasetSettings"), function(sender, dialogContent) {
                                return (0, tslib_es6.__awaiter)(_this, void 0, void 0, function() {
                                    return (0, tslib_es6.__generator)(this, function(_a) {
                                        switch (_a.label) {
                                          case 0:
                                            return modalDialog.hideDialog(), [ 4, this.navigation.navigateToDatasetSettings("datasets", dataset.dbName) ];

                                          case 1:
                                            return _a.sent(), [ 2 ];
                                        }
                                    });
                                });
                            }) ], learnMoreText = this.localizationService.get("Generic_LearnMore"), dialogTitle = this.localizationService.get("UnboundDatasource_TitleText"), 
                            dialogMessageText = this.localizationService.format("UnboundDatasource_Message", [ null == currentPackage ? void 0 : currentPackage.name ]) + " ", 
                            learnMore = $("<a></a>").text(learnMoreText).attr({
                                href: "https://go.microsoft.com/fwlink/?linkid=2226207",
                                target: "_blank"
                            }), dialogMessage = $("<div></div>").html(dialogMessageText).append(learnMore), 
                            modalDialog.showCustomDialog(dialogTitle, $(dialogMessage), promptActions, function(dialogContent) {
                                dialogContent.parent().find('input[value="' + _this.localizationService.get("OpenDatasetSettings") + '"]').focus();
                            }, !0), [ 2 ];
                        }
                    });
                });
            }, DatasetIconContainerModernComponent.prototype.showQsoPendingUpdatesDialog = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var modalDialog, promptActions, learnMoreText, dialogTitle, dialogMessageText, learnMore, dialogMessage, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        return modalDialog = this.errorService.control(), promptActions = [ new ModalDialogAction.l(this.localizationService.get("PBI_Button_Label_Close"), function(sender, dialogContent) {
                            modalDialog.hideDialog();
                        }) ], learnMoreText = this.localizationService.get("Generic_LearnMore"), dialogTitle = this.localizationService.get("QsoPendingUpdates_TitleText"), 
                        dialogMessageText = this.localizationService.get("QsoPendingUpdates_Message") + " ", 
                        learnMore = $("<a></a>").text(learnMoreText).attr({
                            href: "https://go.microsoft.com/fwlink/?linkid=2238711",
                            target: "_blank"
                        }), dialogMessage = $("<div></div>").html(dialogMessageText).append(learnMore), 
                        modalDialog.showCustomDialog(dialogTitle, $(dialogMessage), promptActions, function(dialogContent) {
                            dialogContent.parent().find('input[value="' + _this.localizationService.get("PBI_Button_Label_Close") + '"]').focus();
                        }, !0), [ 2 ];
                    });
                });
            }, DatasetIconContainerModernComponent.prototype.showMissingCapabilitiesDialog = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var modalDialog, promptActions, learnMoreText, dialogTitle, dialogMessageText, learnMore, dialogMessage, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        return modalDialog = this.errorService.control(), promptActions = [ new ModalDialogAction.l(this.localizationService.get("PBI_Button_Label_Close"), function(sender, dialogContent) {
                            modalDialog.hideDialog();
                        }) ], learnMoreText = this.localizationService.get("Generic_LearnMore"), dialogTitle = this.localizationService.get("SemanticModelMissingCapabilities_TitleText"), 
                        dialogMessageText = this.localizationService.get("SettingsDataset_MissingCapabilities_Warning") + " ", 
                        learnMore = $("<a></a>").text(learnMoreText).attr({
                            href: "https://go.microsoft.com/fwlink/?linkid=2250339",
                            target: "_blank"
                        }), dialogMessage = $("<div></div>").html(dialogMessageText).append(learnMore), 
                        modalDialog.showCustomDialog(dialogTitle, $(dialogMessage), promptActions, function(dialogContent) {
                            dialogContent.parent().find('input[value="' + _this.localizationService.get("PBI_Button_Label_Close") + '"]').focus();
                        }, !0), [ 2 ];
                    });
                });
            }, DatasetIconContainerModernComponent.prototype.processModelAndPackageRefreshHistories = function(getRefreshInfoEvent, resultsFromModelHistories) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var histories, result, displayModelError, packageRefreshHistory, modelRefreshError, packageRefreshError;
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            histories = [], _b.label = 1;

                          case 1:
                            return _b.trys.push([ 1, 7, , 11 ]), [ 4, this.modelHttpService.getPackageRefreshHistories(this.viewModel.packageId.toString(), getRefreshInfoEvent.event) ];

                          case 2:
                            return result = _b.sent(), displayModelError = void 0, resultsFromModelHistories && !_.isEmpty(resultsFromModelHistories.data) && (histories = _.filter(resultsFromModelHistories.data, function(h) {
                                return 10 !== h.refreshType;
                            })), packageRefreshHistory = histories[0], _.isEmpty(histories) || packageRefreshHistory.isSuccessful ? displayModelError = !1 : _.isEmpty(result.data) || result.data[0].isSuccessful ? displayModelError = !0 : (modelRefreshError = (0, 
                            modelConverterHelper.ee)(resultsFromModelHistories.data[0].endTime).getTime(), packageRefreshError = (0, 
                            modelConverterHelper.ee)(result.data[0].endTime).getTime(), displayModelError = modelRefreshError > packageRefreshError), 
                            displayModelError ? [ 4, this.displaySuccessHistoryResult(histories) ] : [ 3, 4 ];

                          case 3:
                            return _b.sent(), getRefreshInfoEvent.resolve(), [ 3, 6 ];

                          case 4:
                            return [ 4, this.displaySuccessHistoryResult(result.data) ];

                          case 5:
                            _b.sent(), getRefreshInfoEvent.resolve(), _b.label = 6;

                          case 6:
                            return [ 3, 11 ];

                          case 7:
                            return _b.sent(), _.isEmpty(histories) ? [ 3, 9 ] : [ 4, this.displaySuccessHistoryResult(histories) ];

                          case 8:
                            return _b.sent(), getRefreshInfoEvent.resolve(), [ 3, 10 ];

                          case 9:
                            this.displayErrorHistoryResult(), getRefreshInfoEvent.reject(), _b.label = 10;

                          case 10:
                            return [ 3, 11 ];

                          case 11:
                            return [ 2 ];
                        }
                    });
                });
            }, DatasetIconContainerModernComponent.prototype.displaySuccessHistoryResult = function(refreshHistories) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var serviceExceptionJson, errorMessage, displayableErrorInfo;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return _.isEmpty(refreshHistories) ? (VisualsCommon_debug.fF.assertFail("The refresh histories is empty or null"), 
                            [ 3, 3 ]) : [ 3, 1 ];

                          case 1:
                            return errorMessage = function(errorDetails, localizationService) {
                                if (!_.isEmpty(errorDetails)) {
                                    var powerBIErrorDetails = (0, JsonExtensions.K)(errorDetails);
                                    if (powerBIErrorDetails) {
                                        var parameters = null;
                                        powerBIErrorDetails.error["pbi.error"] && (parameters = powerBIErrorDetails.error["pbi.error"].parameters);
                                        var namedParameters = {};
                                        if (parameters) if (_.isArray(parameters)) for (var _i = 0, parameters_1 = parameters; _i < parameters_1.length; _i++) {
                                            var parameter = parameters_1[_i];
                                            namedParameters[parameter.Key] = parameter.Value;
                                        } else namedParameters = parameters;
                                        return FormatWithNamedParameters(localizationService, powerBIErrorDetails.error.code, namedParameters);
                                    }
                                }
                            }(serviceExceptionJson = refreshHistories[0].serviceExceptionJson, this.localizationService), 
                            [ 4, this.parseAdditionalErrorInfo(serviceExceptionJson) ];

                          case 2:
                            displayableErrorInfo = _a.sent(), serviceExceptionJson.match(/RefreshBlockedDueToRestrictedPolicy/) ? this.errorService.error(errorMessage, "RefreshBlocked", {
                                displayableErrorInfo,
                                helpLink: "https://go.microsoft.com/fwlink/?linkid=2247625",
                                title: this.localizationService.get("Refresh_Blocked"),
                                getHelpTextOverride: "TenantSetting_AdminApisIncludeDetailedMetadata_DescriptionLink",
                                customErrorDialogHelperText: this.localizationService.get("ErrorDialogHelperText_TechnicalDetails")
                            }) : this.errorService.errorNoDefaultAdditionalErrorInfo(errorMessage, "RefreshFailure", {
                                displayableErrorInfo
                            }), _a.label = 3;

                          case 3:
                            return [ 2 ];
                        }
                    });
                });
            }, DatasetIconContainerModernComponent.prototype.displayErrorHistoryResult = function() {
                this.errorService.error(this.localizationService.get("RefreshError_Unknown"), "RefreshFailure_FailedToGetHistories");
            }, DatasetIconContainerModernComponent.prototype.parseAdditionalErrorInfo = function(serviceExceptionJson) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var nameValuePairs, additionalErrorInfo;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        return nameValuePairs = function(errorDetails, localizationService) {
                            if (!_.isEmpty(errorDetails)) {
                                var powerBIErrorDetails = (0, JsonExtensions.K)(errorDetails);
                                if (!powerBIErrorDetails) return [];
                                var nameValuePairs = [], generatedErrorDetails = function(powerbiErrorDetails, localizationService) {
                                    if (powerbiErrorDetails && powerbiErrorDetails["pbi.error"]) {
                                        var pbiError = powerbiErrorDetails["pbi.error"];
                                        if (pbiError) return function(code, parameters, details, localizationService) {
                                            try {
                                                return function(localize, code, parameters, details) {
                                                    var errorDetails, namedParameters = {};
                                                    if (parameters) if (_.isArray(parameters)) for (var _i = 0, parameters_2 = parameters; _i < parameters_2.length; _i++) {
                                                        var parameter = parameters_2[_i];
                                                        namedParameters[parameter.Key] = parameter.Value;
                                                    } else namedParameters = parameters;
                                                    return errorDetails = {
                                                        message: FormatWithNamedParameters(localize, code, namedParameters),
                                                        displayableErrorInfo: []
                                                    }, details && function(errorDetails, pbiErrorDetails, localize) {
                                                        if (!pbiErrorDetails) return errorDetails;
                                                        for (var _i = 0, pbiErrorDetails_1 = pbiErrorDetails; _i < pbiErrorDetails_1.length; _i++) {
                                                            var element = pbiErrorDetails_1[_i], localizedCode = localize.getOptional("ServerError_" + element.code), detailedValue = element.detail.value;
                                                            0 === element.detail.type && (detailedValue = localize.get("ServerError_" + detailedValue)), 
                                                            errorDetails.displayableErrorInfo.push({
                                                                errorInfoKey: localizedCode || element.code,
                                                                errorInfoValue: detailedValue
                                                            });
                                                        }
                                                    }(errorDetails, details, localize), errorDetails;
                                                }(localizationService, code, parameters, details);
                                            } catch (e) {
                                                return;
                                            }
                                        }(pbiError.code, pbiError.parameters, pbiError.details, localizationService);
                                    }
                                }(powerBIErrorDetails.error, localizationService);
                                if (!generatedErrorDetails) return [];
                                for (var _i = 0, _a = generatedErrorDetails.displayableErrorInfo; _i < _a.length; _i++) {
                                    var error = _a[_i];
                                    nameValuePairs.push({
                                        Name: error.errorInfoKey,
                                        Value: error.errorInfoValue
                                    });
                                }
                                return nameValuePairs;
                            }
                        }(serviceExceptionJson, this.localizationService), additionalErrorInfo = [], nameValuePairs.forEach(function(error) {
                            additionalErrorInfo.push({
                                errorInfoKey: error.Name,
                                errorInfoValue: error.Value
                            });
                        }), [ 2, additionalErrorInfo ];
                    });
                });
            }, DatasetIconContainerModernComponent.prototype.showLargeModelNotInPremiumErrorDialog = function() {
                var _this = this, modalDialog = this.errorService.control(), promptActions = [ new ModalDialogAction.l(this.localizationService.get("PBI_Button_Label_Close"), function(sender, dialogContent) {
                    modalDialog.hideDialog();
                }) ], learnMoreText = this.localizationService.get("Generic_LearnMore"), dialogTitle = this.localizationService.get("PremiumRequired_TitleText"), dialogMessageText = this.localizationService.get("LargeDataset_DatasetNotInPremium_Message") + " ", learnMore = $("<a></a>").text(learnMoreText).attr({
                    href: "https://go.microsoft.com/fwlink/?linkid=861459",
                    target: "_blank"
                }), dialogMessage = $("<div></div>").html(dialogMessageText).append(learnMore);
                modalDialog.showCustomDialog(dialogTitle, $(dialogMessage), promptActions, function(dialogContent) {
                    dialogContent.parent().find('input[value="' + _this.localizationService.get("PBI_Button_Label_Close") + '"]').focus();
                }, !0);
            }, DatasetIconContainerModernComponent.\u0275fac = function(t) {
                return new (t || DatasetIconContainerModernComponent)(core["\u0275\u0275directiveInject"](DatasetSizeService), core["\u0275\u0275directiveInject"](dataset_store_service.s), core["\u0275\u0275directiveInject"](error_service.T), core["\u0275\u0275directiveInject"](folder_service.s), core["\u0275\u0275directiveInject"](localization_service.o), core["\u0275\u0275directiveInject"](ModelHttpService), core["\u0275\u0275directiveInject"](navigation_service.W), core["\u0275\u0275directiveInject"](package_store_service.V), core["\u0275\u0275directiveInject"](Telemetry.y0), core["\u0275\u0275directiveInject"](feature_switch_service.vZ));
            }, DatasetIconContainerModernComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: DatasetIconContainerModernComponent,
                selectors: [ [ "dataset-icon-container-modern" ] ],
                inputs: {
                    viewModel: "viewModel",
                    folderObjectId: "folderObjectId",
                    showLastRefreshTime: "showLastRefreshTime",
                    isNextRefresh: "isNextRefresh",
                    tabindex: "tabindex"
                },
                features: [ core["\u0275\u0275NgOnChangesFeature"] ],
                decls: 3,
                vars: 3,
                consts: [ [ 4, "ngIf" ], [ "class", "datasetRefreshIcons", 4, "ngIf" ], [ "class", "datasetNextRefreshIcons", 4, "ngIf" ], [ 1, "datasetRefreshIcons" ], [ 3, "size", 4, "ngIf" ], [ "class", "warning glyphicon pbi-glyph-warning glyph-small", 3, "pbi-tooltip", 4, "ngIf" ], [ 3, "pbi-tooltip", "click", 4, "ngIf" ], [ 3, "size" ], [ 1, "warning", "glyphicon", "pbi-glyph-warning", "glyph-small", 3, "pbi-tooltip" ], [ 3, "pbi-tooltip", "click" ], [ 1, "warning", "glyphicon", "pbi-glyph-warning", "glyph-small" ], [ 1, "datasetNextRefreshIcons" ], [ 3, "pbi-tooltip", 4, "ngIf" ], [ 3, "pbi-tooltip" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275template"](0, DatasetIconContainerModernComponent_span_0_Template, 2, 2, "span", 0), 
                    core["\u0275\u0275template"](1, DatasetIconContainerModernComponent_span_1_Template, 14, 20, "span", 1), 
                    core["\u0275\u0275template"](2, DatasetIconContainerModernComponent_span_2_Template, 5, 6, "span", 2)), 
                    2 & rf && (core["\u0275\u0275property"]("ngIf", ctx.showLastRefreshTime), core["\u0275\u0275advance"](1), 
                    core["\u0275\u0275property"]("ngIf", !ctx.isNextRefresh), core["\u0275\u0275advance"](1), 
                    core["\u0275\u0275property"]("ngIf", ctx.isNextRefresh));
                },
                dependencies: [ common.NgIf, spinner_component.O, tooltip_directive.i, common.AsyncPipe, localize_pipe.F ],
                styles: [ "i[_ngcontent-%COMP%]{display:inline-block;vertical-align:top;font-size:14px;margin-top:3px;color:var(--neutral-secondary-color, #666666)}.datasetRefreshIcons[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{background:transparent;border:0;padding:0}.datasetRefreshIcons[_ngcontent-%COMP%]   .refreshIcon[_ngcontent-%COMP%]{width:16px;height:16px;padding-top:2px;box-sizing:border-box}.warning[_ngcontent-%COMP%]{color:var(--fluent-theme-error-dark-alt-color, #D83B01)}" ],
                changeDetection: 0
            }), DatasetIconContainerModernComponent;
        }(), manifest_src = __webpack_require__(67758);
        function TridentArtifactIconComponent_tri_svg_icon_0_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "tri-svg-icon", 1), 2 & rf) {
                var ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275propertyInterpolate"]("pbiTooltipPosition", ctx_r0.tooltipPosition), 
                core["\u0275\u0275property"]("sprite", ctx_r0.icon.sprite || "fluentui-icons")("name", ctx_r0.icon.name)("pbiTooltip", ctx_r0.label), 
                core["\u0275\u0275attribute"]("tri-svg-icon-24", "24" === ctx_r0.size ? "" : null)("aria-label", ctx_r0.label);
            }
        }
        var TridentArtifactIconComponent = function() {
            function TridentArtifactIconComponent(localizationService, extensionManifestService, changeDetection, featureSwitchService) {
                this.localizationService = localizationService, this.extensionManifestService = extensionManifestService, 
                this.changeDetection = changeDetection, this.featureSwitchService = featureSwitchService, 
                this.tooltipPosition = "before", this.state = "rest", this.preset = src.tB.Default, 
                this.size = "20", this.label = "";
            }
            return TridentArtifactIconComponent.prototype.update = function(type, state, preset) {
                var _this = this;
                void 0 === state && (state = "rest"), void 0 === preset && (preset = src.tB.Default);
                var triArtifactType = toTridentArtifactType(type);
                preset === src.tB.Default && ("24" === this.size ? preset = src.tB.Size24 : "64" === this.size && (preset = src.tB.Size64)), 
                triArtifactType && (this.featureSwitchService.featureSwitches.useExtensionsManifestsModule && this.extensionManifestService ? this.extensionManifestService.getArtifactManifest(triArtifactType).then(function(artifactManifest) {
                    if (!artifactManifest) return _this.icon = void 0, _this.label = "", void _this.changeDetection.detectChanges();
                    _this.icon = _this.extensionManifestService.getArtifactTypeIcon(artifactManifest, state, preset), 
                    _this.label = _this.extensionManifestService.getArtifactTypeDisplayName(artifactManifest), 
                    _this.changeDetection.detectChanges();
                }) : (this.icon = (0, src.zD)(triArtifactType, state, preset), this.label = this.localizationService.get((0, 
                src.Ky)(triArtifactType))));
            }, TridentArtifactIconComponent.prototype.ngOnChanges = function(changes) {
                (changes.artifactType || changes.state || changes.preset) && this.update(this.artifactType, this.state, this.preset);
            }, TridentArtifactIconComponent.\u0275fac = function(t) {
                return new (t || TridentArtifactIconComponent)(core["\u0275\u0275directiveInject"](localization_service.o), core["\u0275\u0275directiveInject"](manifest_src.vC, 8), core["\u0275\u0275directiveInject"](core.ChangeDetectorRef), core["\u0275\u0275directiveInject"](feature_switch_service.vZ));
            }, TridentArtifactIconComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: TridentArtifactIconComponent,
                selectors: [ [ "tri-artifact-icon" ] ],
                inputs: {
                    tooltipPosition: "tooltipPosition",
                    state: "state",
                    preset: "preset",
                    artifactType: "artifactType",
                    size: "size"
                },
                features: [ core["\u0275\u0275NgOnChangesFeature"] ],
                decls: 1,
                vars: 1,
                consts: [ [ "class", "tri-svg-icon", "role", "img", 3, "sprite", "name", "pbiTooltip", "pbiTooltipPosition", 4, "ngIf" ], [ "role", "img", 1, "tri-svg-icon", 3, "sprite", "name", "pbiTooltip", "pbiTooltipPosition" ] ],
                template: function(rf, ctx) {
                    1 & rf && core["\u0275\u0275template"](0, TridentArtifactIconComponent_tri_svg_icon_0_Template, 1, 6, "tri-svg-icon", 0), 
                    2 & rf && core["\u0275\u0275property"]("ngIf", ctx.icon);
                },
                dependencies: [ common.NgIf, tri_svg_icon_component.M, pbi_tooltip_directive.V ],
                styles: [ ".tri-svg-icon[_ngcontent-%COMP%]{fill:var(--colorNeutralForeground3)}" ],
                changeDetection: 0
            }), TridentArtifactIconComponent;
        }(), tri_tooltip_directive = __webpack_require__(55490), RestrictionSources = function(RestrictionSources) {
            return RestrictionSources[RestrictionSources.None = 0] = "None", RestrictionSources[RestrictionSources.DLP = 1] = "DLP", 
            RestrictionSources;
        }({}), dlp_icon_component_c0 = function(a0, a1) {
            return {
                "width.px": a0,
                "height.px": a1
            };
        };
        function DlpIconComponent_tri_svg_icon_0_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275element"](0, "tri-svg-icon", 1), core["\u0275\u0275pipe"](1, "localize"), 
            core["\u0275\u0275pipe"](2, "localize")), 2 & rf) {
                var ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("tabindex", ctx_r0.tabindex)("sprite", "fluentui-icons")("name", ctx_r0.iconName)("triTooltip", ctx_r0.showTooltip ? core["\u0275\u0275pipeBind1"](2, 9, ctx_r0.tooltipKey) : void 0)("ngClass", ctx_r0.styleClass)("ngStyle", core["\u0275\u0275pureFunction2"](11, dlp_icon_component_c0, ctx_r0.iconSizePx, ctx_r0.iconSizePx)), 
                core["\u0275\u0275attribute"]("aria-label", core["\u0275\u0275pipeBind1"](1, 7, ctx_r0.tooltipKey));
            }
        }
        var DlpIconComponent = function() {
            function DlpIconComponent(featureSwitchService) {
                this.featureSwitchService = featureSwitchService, this.iconSizePx = "20", this.tabindex = 0, 
                this.showTooltip = !0, this.iconName = "", this.styleClass = "", this.tooltipKey = "", 
                this.shouldDisplayIcon = !1;
            }
            return DlpIconComponent.prototype.ngOnChanges = function() {
                this.shouldDisplayRestrictionIcon() ? (this.iconName = "subtract_circle_".concat(this.iconSizePx, "_filled"), 
                this.styleClass = "dlp-restrict-access", this.tooltipKey = "Item_Restricted", this.shouldDisplayIcon = !0) : this.shouldDisplayPolicyTipIcon() && (this.iconName = "info_".concat(this.iconSizePx, "_filled"), 
                this.styleClass = "dlp-policy-tip", this.tooltipKey = "Dlp_PolicyTip_Dataset_Warning_tooltip", 
                this.shouldDisplayIcon = !0);
            }, DlpIconComponent.prototype.shouldDisplayRestrictionIcon = function() {
                return this.featureSwitchService.featureSwitches.restrictAccess_HEAD_DLP_FE && !_.isEmpty(this.restrictions) && (this.restrictions.blocked || (this.restrictions.restrictionSources & RestrictionSources.DLP) === RestrictionSources.DLP);
            }, DlpIconComponent.prototype.shouldDisplayPolicyTipIcon = function() {
                return this.featureSwitchService.featureSwitches.dlpPolicyTip && this.hasDlpPolicyTip;
            }, DlpIconComponent.\u0275fac = function(t) {
                return new (t || DlpIconComponent)(core["\u0275\u0275directiveInject"](feature_switch_service.vZ));
            }, DlpIconComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: DlpIconComponent,
                selectors: [ [ "dlp-icon" ] ],
                inputs: {
                    hasDlpPolicyTip: "hasDlpPolicyTip",
                    restrictions: "restrictions",
                    iconSizePx: "iconSizePx",
                    tabindex: "tabindex",
                    showTooltip: "showTooltip"
                },
                features: [ core["\u0275\u0275NgOnChangesFeature"] ],
                decls: 1,
                vars: 1,
                consts: [ [ "role", "img", 3, "tabindex", "sprite", "name", "triTooltip", "ngClass", "ngStyle", 4, "ngIf" ], [ "role", "img", 3, "tabindex", "sprite", "name", "triTooltip", "ngClass", "ngStyle" ] ],
                template: function(rf, ctx) {
                    1 & rf && core["\u0275\u0275template"](0, DlpIconComponent_tri_svg_icon_0_Template, 3, 14, "tri-svg-icon", 0), 
                    2 & rf && core["\u0275\u0275property"]("ngIf", ctx.shouldDisplayIcon);
                },
                dependencies: [ common.NgClass, common.NgIf, common.NgStyle, tri_svg_icon_component.M, tri_tooltip_directive.Z, localize_pipe.F ],
                styles: [ "[_nghost-%COMP%]{display:flex;align-items:center}[_nghost-%COMP%]   .dlp-policy-tip[_ngcontent-%COMP%]{fill:var(--colorNeutralForeground3)}[_nghost-%COMP%]   .dlp-restrict-access[_ngcontent-%COMP%]{fill:var(--globalColorCranberryShade10)}" ],
                changeDetection: 0
            }), DlpIconComponent;
        }(), common_globals_commonGlobals = window, lib_folder_service = __webpack_require__(18438), domains_ui_service = __webpack_require__(42683), src_localization_service = __webpack_require__(7452), tri_link_component = __webpack_require__(65e3);
        function DomainLinksComponent_span_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "span"), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate"](ctx_r0.domainsPath);
            }
        }
        function DomainLinksComponent_tri_link_2_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "tri-link", 4), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r1 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("href", ctx_r1.workspaceLink)("block", !0), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275textInterpolate1"](" ", ctx_r1.slicedWorkspaceName, " ");
            }
        }
        function DomainLinksComponent_ng_template_3_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "span"), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r3 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate"](ctx_r3.slicedWorkspaceName);
            }
        }
        var Appearance = function(Appearance) {
            return Appearance.Default = "default", Appearance.Strong = "strong", Appearance;
        }({}), DomainLinksComponent = function() {
            function DomainLinksComponent(folderService, localizationService, domainsUIService, cd) {
                this.folderService = folderService, this.localizationService = localizationService, 
                this.domainsUIService = domainsUIService, this.cd = cd, this.workspaceObjectId = "", 
                this.workspaceName = "", this.ownerPrincipalName = "", this.dataDomainArtifactInfo = {
                    domainDisplayName: "",
                    parentDisplayName: ""
                }, this.appearance = Appearance.Default, this.workspaceLink = "", this.domainsPath = "", 
                this.locationTooltip = "", this.slicedWorkspaceName = "";
            }
            return DomainLinksComponent.prototype.ngOnChanges = function() {
                this.currentFolder = this.folderService.getFolder(this.workspaceObjectId);
                var workspaceRoute = this.currentFolder ? "/groups/".concat(this.workspaceObjectId || this.currentFolder.uniqueId) : this.workspaceLink;
                this.workspaceLink = workspaceRoute && common_globals_commonGlobals.inTeams ? "/teams".concat(workspaceRoute).concat(window.location.search) : workspaceRoute;
                var workspaceName = this.getWorkspaceName();
                this.slicedWorkspaceName = workspaceName.slice(0, 30), this.initLocalizeTooltip(workspaceName), 
                this.initDomainPathDisplayName();
            }, DomainLinksComponent.prototype.getWorkspaceName = function() {
                return this.currentFolder && "My workspace" === this.currentFolder.displayName ? this.localizationService.get("GetData_MyWorkspace") : "My workspace" === this.workspaceName ? this.ownerPrincipalName : this.workspaceName;
            }, DomainLinksComponent.prototype.initLocalizeTooltip = function(workspaceName) {
                var _a, _b, parentDomainName = (null === (_a = this.dataDomainArtifactInfo) || void 0 === _a ? void 0 : _a.parentDisplayName) || "", domainName = (null === (_b = this.dataDomainArtifactInfo) || void 0 === _b ? void 0 : _b.domainDisplayName) || "", tooltip = parentDomainName ? "".concat(parentDomainName, " ").concat(">", " ").concat(domainName) : domainName;
                this.locationTooltip = tooltip ? "".concat(tooltip, " > ").concat(workspaceName) : workspaceName;
            }, DomainLinksComponent.prototype.initDomainPathDisplayName = function() {
                var _a, _b, parentDomainName = (null === (_a = this.dataDomainArtifactInfo) || void 0 === _a ? void 0 : _a.parentDisplayName) || "", domainName = (null === (_b = this.dataDomainArtifactInfo) || void 0 === _b ? void 0 : _b.domainDisplayName) || "", domainDisplayNames = this.domainsUIService.getFormatDomainName(parentDomainName, domainName);
                this.domainsPath = domainDisplayNames ? "".concat(domainDisplayNames, " > ") : "";
            }, DomainLinksComponent.\u0275fac = function(t) {
                return new (t || DomainLinksComponent)(core["\u0275\u0275directiveInject"](lib_folder_service.D), core["\u0275\u0275directiveInject"](src_localization_service.z), core["\u0275\u0275directiveInject"](domains_ui_service.k), core["\u0275\u0275directiveInject"](core.ChangeDetectorRef));
            }, DomainLinksComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: DomainLinksComponent,
                selectors: [ [ "trident-domain-link" ] ],
                inputs: {
                    workspaceObjectId: "workspaceObjectId",
                    workspaceName: "workspaceName",
                    ownerPrincipalName: "ownerPrincipalName",
                    dataDomainArtifactInfo: "dataDomainArtifactInfo",
                    appearance: "appearance"
                },
                features: [ core["\u0275\u0275NgOnChangesFeature"] ],
                decls: 5,
                vars: 5,
                consts: [ [ 1, "domain-link", 3, "triTooltip" ], [ 4, "ngIf" ], [ "size", "small", 3, "href", "block", 4, "ngIf", "ngIfElse" ], [ "workspaceWithoutLink", "" ], [ "size", "small", 3, "href", "block" ] ],
                template: function(rf, ctx) {
                    if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 0), core["\u0275\u0275template"](1, DomainLinksComponent_span_1_Template, 2, 1, "span", 1), 
                    core["\u0275\u0275template"](2, DomainLinksComponent_tri_link_2_Template, 2, 3, "tri-link", 2), 
                    core["\u0275\u0275template"](3, DomainLinksComponent_ng_template_3_Template, 2, 1, "ng-template", null, 3, core["\u0275\u0275templateRefExtractor"]), 
                    core["\u0275\u0275elementEnd"]()), 2 & rf) {
                        var _r2 = core["\u0275\u0275reference"](4);
                        core["\u0275\u0275property"]("triTooltip", ctx.locationTooltip), core["\u0275\u0275attribute"]("appearance", ctx.appearance || null), 
                        core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx.domainsPath), 
                        core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx.workspaceLink)("ngIfElse", _r2);
                    }
                },
                dependencies: [ common.NgIf, tri_tooltip_directive.Z, tri_link_component.v ],
                styles: [ ".domain-link[_ngcontent-%COMP%]{overflow:hidden;text-overflow:ellipsis}.domain-link[appearance=default][_ngcontent-%COMP%]{font-size:12px;color:var(--globalColorGrey38)}.domain-link[appearance=strong][_ngcontent-%COMP%]{font-size:14px;color:var(--globalColorGrey26)}" ],
                changeDetection: 0
            }), DomainLinksComponent;
        }(), tags_item_icon_component = __webpack_require__(32920), cell_templates_component_c0 = [ "iconCell" ], cell_templates_component_c1 = [ "nameCell" ], cell_templates_component_c2 = [ "gitStatusCell" ], cell_templates_component_c3 = [ "typeCell" ], cell_templates_component_c4 = [ "sensitivityCell" ], cell_templates_component_c5 = [ "ownerCell" ], cell_templates_component_c6 = [ "scoreCell" ], cell_templates_component_c7 = [ "lastRefreshCell" ], cell_templates_component_c8 = [ "nextRefreshCell" ], _c9 = [ "endorsementCell" ], _c10 = [ "lastAccessCell" ], _c11 = [ "lastActivityCell" ], _c12 = [ "hiddenTime" ], _c13 = [ "relationCell" ], _c14 = [ "locationCell" ], _c15 = [ "sharedTimeCell" ], _c16 = [ "descriptionCell" ], _c17 = [ "organizationCell" ], _c18 = [ "sharedByCell" ], _c19 = [ "domainsWorkspacePathCell" ];
        function CellTemplatesComponent_ng_template_0_span_0_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "span", 25), core["\u0275\u0275element"](1, "tri-svg-icon", 26), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var item_r42 = core["\u0275\u0275nextContext"]().$implicit, ctx_r43 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("sprite", "parent-child-icons")("name", ctx_r43.getChildIndicator(item_r42));
            }
        }
        function CellTemplatesComponent_ng_template_0_ng_container_3_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275element"](1, "tri-svg-icon", 27), 
            core["\u0275\u0275pipe"](2, "localizeFormat"), core["\u0275\u0275pipe"](3, "localize"), 
            core["\u0275\u0275pipe"](4, "localizeFormat"), core["\u0275\u0275pipe"](5, "localize"), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf && (core["\u0275\u0275advance"](1), 
            core["\u0275\u0275property"]("triTooltip", core["\u0275\u0275pipeBind2"](4, 7, "Restricted_Artifact_tooltip", core["\u0275\u0275pipeBind1"](5, 10, "ArtifactKind_Report"))), 
            core["\u0275\u0275attribute"]("aria-label", core["\u0275\u0275pipeBind2"](2, 2, "Restricted_Artifact_tooltip", core["\u0275\u0275pipeBind1"](3, 5, "ArtifactKind_Report"))));
        }
        function CellTemplatesComponent_ng_template_0_ng_template_4_div_0_ng_container_1_img_1_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "img", 35), 2 & rf) {
                var item_r42 = core["\u0275\u0275nextContext"](4).$implicit;
                core["\u0275\u0275property"]("src", item_r42.iconUrl, core["\u0275\u0275sanitizeUrl"])("pbiTooltip", item_r42.displayName);
            }
        }
        var _c20 = function(a0, a1) {
            return {
                "background-color": a0,
                color: a1
            };
        };
        function CellTemplatesComponent_ng_template_0_ng_template_4_div_0_ng_container_1_mat_icon_2_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "mat-icon", 36), 2 & rf) {
                var item_r42 = core["\u0275\u0275nextContext"](4).$implicit;
                core["\u0275\u0275property"]("pbiTooltip", item_r42.typeName || item_r42.displayName)("fontIcon", item_r42.iconName)("ngStyle", core["\u0275\u0275pureFunction2"](3, _c20, item_r42.iconColor, item_r42.iconForegroundColor));
            }
        }
        function CellTemplatesComponent_ng_template_0_ng_template_4_div_0_ng_container_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0, 32), core["\u0275\u0275template"](1, CellTemplatesComponent_ng_template_0_ng_template_4_div_0_ng_container_1_img_1_Template, 1, 2, "img", 33), 
            core["\u0275\u0275template"](2, CellTemplatesComponent_ng_template_0_ng_template_4_div_0_ng_container_1_mat_icon_2_Template, 1, 6, "mat-icon", 34), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var item_r42 = core["\u0275\u0275nextContext"](3).$implicit;
                core["\u0275\u0275property"]("ngSwitch", !!item_r42.iconName), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275property"]("ngSwitchCase", !1), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275property"]("ngSwitchCase", !0);
            }
        }
        function CellTemplatesComponent_ng_template_0_ng_template_4_div_0_ng_template_2_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 37), core["\u0275\u0275element"](1, "pbi-office-icon", 38), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var item_r42 = core["\u0275\u0275nextContext"](3).$implicit;
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("name", "DatamartWhite_16")("pbiTooltip", item_r42.typeName || item_r42.displayName);
            }
        }
        function CellTemplatesComponent_ng_template_0_ng_template_4_div_0_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div"), core["\u0275\u0275template"](1, CellTemplatesComponent_ng_template_0_ng_template_4_div_0_ng_container_1_Template, 3, 3, "ng-container", 30), 
            core["\u0275\u0275template"](2, CellTemplatesComponent_ng_template_0_ng_template_4_div_0_ng_template_2_Template, 2, 2, "ng-template", null, 31, core["\u0275\u0275templateRefExtractor"]), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var _r51 = core["\u0275\u0275reference"](3), item_r42 = core["\u0275\u0275nextContext"](2).$implicit;
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", 11 !== item_r42.type)("ngIfElse", _r51);
            }
        }
        function CellTemplatesComponent_ng_template_0_ng_template_4_div_2_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 39), core["\u0275\u0275element"](1, "tri-artifact-icon", 40), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var item_r42 = core["\u0275\u0275nextContext"](2).$implicit, ctx_r49 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("artifactType", item_r42.triType || item_r42.type)("size", "24")("preset", ctx_r49.getTridentArtifactIconPreset(item_r42))("pbiTooltip", item_r42.typeName || item_r42.displayName);
            }
        }
        function CellTemplatesComponent_ng_template_0_ng_template_4_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275template"](0, CellTemplatesComponent_ng_template_0_ng_template_4_div_0_Template, 4, 2, "div", 28), 
            core["\u0275\u0275pipe"](1, "async"), core["\u0275\u0275template"](2, CellTemplatesComponent_ng_template_0_ng_template_4_div_2_Template, 2, 4, "div", 29), 
            core["\u0275\u0275pipe"](3, "async")), 2 & rf) {
                var ctx_r46 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275property"]("ngIf", !1 === core["\u0275\u0275pipeBind1"](1, 2, ctx_r46.isTridentUI$)), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", !0 === core["\u0275\u0275pipeBind1"](3, 4, ctx_r46.isTridentUI$));
            }
        }
        function CellTemplatesComponent_ng_template_0_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275template"](0, CellTemplatesComponent_ng_template_0_span_0_Template, 2, 2, "span", 21), 
            core["\u0275\u0275pipe"](1, "async"), core["\u0275\u0275elementStart"](2, "span", 22), 
            core["\u0275\u0275template"](3, CellTemplatesComponent_ng_template_0_ng_container_3_Template, 6, 12, "ng-container", 23), 
            core["\u0275\u0275template"](4, CellTemplatesComponent_ng_template_0_ng_template_4_Template, 4, 6, "ng-template", null, 24, core["\u0275\u0275templateRefExtractor"]), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var item_r42 = ctx.$implicit, _r45 = core["\u0275\u0275reference"](5), ctx_r1 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](1, 3, ctx_r1.isParentChildEnabled$) && !!item_r42.parentUniqueId && !!item_r42.childIndex), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngIf", !!ctx_r1.featureSwitchService.featureSwitches.restrictAccess_HEAD_DLP_FE && item_r42.type === ctx_r1.reportArtifactType && !(null == item_r42.restrictions || !item_r42.restrictions.blocked))("ngIfElse", _r45);
            }
        }
        function CellTemplatesComponent_ng_template_2_mat_icon_3_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "mat-icon", 53);
        }
        function CellTemplatesComponent_ng_template_2_tri_svg_icon_4_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "tri-svg-icon", 54);
        }
        function CellTemplatesComponent_ng_template_2_tri_svg_icon_5_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "tri-svg-icon", 55), 2 & rf) {
                var item_r61 = core["\u0275\u0275nextContext"]().$implicit;
                core["\u0275\u0275propertyInterpolate"]("aria-label", null == item_r61.browseArtifactContentsIcon ? null : item_r61.browseArtifactContentsIcon.name), 
                core["\u0275\u0275property"]("sprite", (null == item_r61.browseArtifactContentsIcon ? null : item_r61.browseArtifactContentsIcon.sprite) || "fluentui-icons")("name", null == item_r61.browseArtifactContentsIcon ? null : item_r61.browseArtifactContentsIcon.name)("pbiTooltip", null == item_r61.browseArtifactContentsIcon ? null : item_r61.browseArtifactContentsIcon.label);
            }
        }
        function CellTemplatesComponent_ng_template_2_ng_container_8_ng_container_1_ng_container_4_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275elementContainer"](0);
        }
        var _c21 = function(a0) {
            return {
                $implicit: a0
            };
        };
        function CellTemplatesComponent_ng_template_2_ng_container_8_ng_container_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r86 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "a", 57), 
                core["\u0275\u0275listener"]("mouseup", function($event) {
                    core["\u0275\u0275restoreView"](_r86);
                    var item_r61 = core["\u0275\u0275nextContext"](2).$implicit, ctx_r84 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r84.navigateToDataflowGen2($event, item_r61));
                }), core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275text"](3), core["\u0275\u0275elementEnd"](), 
                core["\u0275\u0275template"](4, CellTemplatesComponent_ng_template_2_ng_container_8_ng_container_1_ng_container_4_Template, 1, 0, "ng-container", 58), 
                core["\u0275\u0275elementContainerEnd"]();
            }
            if (2 & rf) {
                core["\u0275\u0275nextContext"]();
                var _r81 = core["\u0275\u0275reference"](4), item_r61 = core["\u0275\u0275nextContext"]().$implicit, ctx_r79 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("target", core["\u0275\u0275pipeBind1"](2, 5, ctx_r79.openArtifactsInNewTab$) ? "_blank" : "_self")("pbiTooltip", ctx_r79.featureSwitchService.featureSwitches.logDataflowsDebugInfo ? "Publish status: " + item_r61.publishStatus + ", refresh status: " + item_r61.lastRefreshStatus : null != item_r61.warning && item_r61.warning.warningText ? void 0 : item_r61.displayName), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", item_r61.displayName, " "), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngTemplateOutlet", _r81)("ngTemplateOutletContext", core["\u0275\u0275pureFunction1"](7, _c21, item_r61));
            }
        }
        function CellTemplatesComponent_ng_template_2_ng_container_8_ng_container_2_ng_container_1_ng_container_4_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275elementContainer"](0);
        }
        function CellTemplatesComponent_ng_template_2_ng_container_8_ng_container_2_ng_container_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "a", 59), 
            core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275text"](3), core["\u0275\u0275elementEnd"](), 
            core["\u0275\u0275template"](4, CellTemplatesComponent_ng_template_2_ng_container_8_ng_container_2_ng_container_1_ng_container_4_Template, 1, 0, "ng-container", 58), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                core["\u0275\u0275nextContext"](2);
                var _r81 = core["\u0275\u0275reference"](4), item_r61 = core["\u0275\u0275nextContext"]().$implicit, ctx_r88 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("href", item_r61.href, core["\u0275\u0275sanitizeUrl"])("target", core["\u0275\u0275pipeBind1"](2, 6, ctx_r88.openArtifactsInNewTab$) ? "_blank" : "_self")("pbiTooltip", ctx_r88.featureSwitchService.featureSwitches.logDataflowsDebugInfo ? "Publish status: " + item_r61.publishStatus + ", refresh status: " + item_r61.lastRefreshStatus : null != item_r61.warning && item_r61.warning.warningText ? void 0 : item_r61.displayName), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", item_r61.displayName, " "), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngTemplateOutlet", _r81)("ngTemplateOutletContext", core["\u0275\u0275pureFunction1"](8, _c21, item_r61));
            }
        }
        function CellTemplatesComponent_ng_template_2_ng_container_8_ng_container_2_ng_container_2_ng_container_3_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275elementContainer"](0);
        }
        function CellTemplatesComponent_ng_template_2_ng_container_8_ng_container_2_ng_container_2_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "span", 60), 
            core["\u0275\u0275text"](2), core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](3, CellTemplatesComponent_ng_template_2_ng_container_8_ng_container_2_ng_container_2_ng_container_3_Template, 1, 0, "ng-container", 58), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                core["\u0275\u0275nextContext"](2);
                var _r81 = core["\u0275\u0275reference"](4), item_r61 = core["\u0275\u0275nextContext"]().$implicit, ctx_r89 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("pbiTooltip", ctx_r89.featureSwitchService.featureSwitches.logDataflowsDebugInfo ? "Publish status: " + item_r61.publishStatus + ", refresh status: " + item_r61.lastRefreshStatus : null != item_r61.warning && item_r61.warning.warningText ? void 0 : item_r61.displayName), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate1"](" ", item_r61.displayName, " "), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngTemplateOutlet", _r81)("ngTemplateOutletContext", core["\u0275\u0275pureFunction1"](4, _c21, item_r61));
            }
        }
        function CellTemplatesComponent_ng_template_2_ng_container_8_ng_container_2_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0, 32), core["\u0275\u0275template"](1, CellTemplatesComponent_ng_template_2_ng_container_8_ng_container_2_ng_container_1_Template, 5, 10, "ng-container", 47), 
            core["\u0275\u0275template"](2, CellTemplatesComponent_ng_template_2_ng_container_8_ng_container_2_ng_container_2_Template, 4, 6, "ng-container", 47), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var item_r61 = core["\u0275\u0275nextContext"](2).$implicit;
                core["\u0275\u0275property"]("ngSwitch", !!item_r61.href), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275property"]("ngSwitchCase", !0), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275property"]("ngSwitchCase", !1);
            }
        }
        function CellTemplatesComponent_ng_template_2_ng_container_8_ng_template_3_tri_svg_icon_0_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "tri-svg-icon", 66), 2 & rf) {
                var item_r95 = core["\u0275\u0275nextContext"]().$implicit;
                core["\u0275\u0275property"]("triTooltip", item_r95.trialCapacityCloseToExpiredTooltip)("name", "gift_open_warning_20_regular")("sprite", "misc-icons");
            }
        }
        function CellTemplatesComponent_ng_template_2_ng_container_8_ng_template_3_i_1_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275element"](0, "i", 67), core["\u0275\u0275pipe"](1, "localize")), 
            2 & rf && core["\u0275\u0275property"]("pbiTooltip", core["\u0275\u0275pipeBind1"](1, 1, "Capacity_PremiumCapacity"));
        }
        function CellTemplatesComponent_ng_template_2_ng_container_8_ng_template_3_i_2_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275element"](0, "i", 68), core["\u0275\u0275pipe"](1, "localize")), 
            2 & rf && core["\u0275\u0275property"]("pbiTooltip", core["\u0275\u0275pipeBind1"](1, 1, "PowerBI_PremiumPerUser"));
        }
        function CellTemplatesComponent_ng_template_2_ng_container_8_ng_template_3_i_3_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275element"](0, "i", 68), core["\u0275\u0275pipe"](1, "localize")), 
            2 & rf && core["\u0275\u0275property"]("pbiTooltip", core["\u0275\u0275pipeBind1"](1, 1, "CapacityHeader_FabricCapacity"));
        }
        function CellTemplatesComponent_ng_template_2_ng_container_8_ng_template_3_i_4_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "i", 69), 2 & rf) {
                var item_r95 = core["\u0275\u0275nextContext"]().$implicit;
                core["\u0275\u0275property"]("pbiTooltip", item_r95.warning.warningText);
            }
        }
        function CellTemplatesComponent_ng_template_2_ng_container_8_ng_template_3_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275template"](0, CellTemplatesComponent_ng_template_2_ng_container_8_ng_template_3_tri_svg_icon_0_Template, 1, 3, "tri-svg-icon", 61), 
            core["\u0275\u0275template"](1, CellTemplatesComponent_ng_template_2_ng_container_8_ng_template_3_i_1_Template, 2, 3, "i", 62), 
            core["\u0275\u0275template"](2, CellTemplatesComponent_ng_template_2_ng_container_8_ng_template_3_i_2_Template, 2, 3, "i", 63), 
            core["\u0275\u0275template"](3, CellTemplatesComponent_ng_template_2_ng_container_8_ng_template_3_i_3_Template, 2, 3, "i", 63), 
            core["\u0275\u0275template"](4, CellTemplatesComponent_ng_template_2_ng_container_8_ng_template_3_i_4_Template, 1, 1, "i", 64), 
            core["\u0275\u0275element"](5, "dataflow-gen2-icon-container", 65)), 2 & rf) {
                var item_r95 = ctx.$implicit, ctx_r82 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275property"]("ngIf", item_r95.isTrialCapacityCloseToExpired), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275property"]("ngIf", ctx_r82.showCapacityIcon && ctx_r82.hasCapacity(item_r95)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx_r82.showCapacityIcon && ctx_r82.hasPpuCapacity(item_r95)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx_r82.showCapacityIcon && ctx_r82.hasFabricCapacity(item_r95)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !!item_r95.warning), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("viewModel", item_r95);
            }
        }
        function CellTemplatesComponent_ng_template_2_ng_container_8_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0, 32), core["\u0275\u0275template"](1, CellTemplatesComponent_ng_template_2_ng_container_8_ng_container_1_Template, 5, 9, "ng-container", 47), 
            core["\u0275\u0275template"](2, CellTemplatesComponent_ng_template_2_ng_container_8_ng_container_2_Template, 3, 3, "ng-container", 46), 
            core["\u0275\u0275template"](3, CellTemplatesComponent_ng_template_2_ng_container_8_ng_template_3_Template, 6, 6, "ng-template", null, 56, core["\u0275\u0275templateRefExtractor"]), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var item_r61 = core["\u0275\u0275nextContext"]().$implicit, ctx_r68 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("ngSwitch", !!item_r61.routePath || ctx_r68.onNavigation.observers.length > 0), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", !0), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", !1);
            }
        }
        function CellTemplatesComponent_ng_template_2_ng_container_9_a_1_ng_container_2_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275elementContainer"](0);
        }
        var _c22 = function(a0) {
            return {
                "text-decoration-line": a0
            };
        };
        function CellTemplatesComponent_ng_template_2_ng_container_9_a_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r111 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "a", 72), core["\u0275\u0275listener"]("mouseup", function($event) {
                    core["\u0275\u0275restoreView"](_r111);
                    var item_r61 = core["\u0275\u0275nextContext"](2).$implicit, ctx_r109 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r109.navigateToDataflowGen1($event, item_r61));
                }), core["\u0275\u0275text"](1), core["\u0275\u0275template"](2, CellTemplatesComponent_ng_template_2_ng_container_9_a_1_ng_container_2_Template, 1, 0, "ng-container", 58), 
                core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                core["\u0275\u0275nextContext"]();
                var _r106 = core["\u0275\u0275reference"](4), item_r61 = core["\u0275\u0275nextContext"]().$implicit;
                core["\u0275\u0275property"]("ngStyle", core["\u0275\u0275pureFunction1"](5, _c22, item_r61.removeNameTextDecoration ? "none" : ""))("pbiTooltip", null != item_r61.warning && item_r61.warning.warningText ? void 0 : item_r61.displayName), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate1"](" ", item_r61.displayName, " "), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngTemplateOutlet", _r106)("ngTemplateOutletContext", core["\u0275\u0275pureFunction1"](7, _c21, item_r61));
            }
        }
        function CellTemplatesComponent_ng_template_2_ng_container_9_ng_container_2_a_1_ng_container_3_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275elementContainer"](0);
        }
        function CellTemplatesComponent_ng_template_2_ng_container_9_ng_container_2_a_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "a", 75), core["\u0275\u0275pipe"](1, "async"), 
            core["\u0275\u0275text"](2), core["\u0275\u0275template"](3, CellTemplatesComponent_ng_template_2_ng_container_9_ng_container_2_a_1_ng_container_3_Template, 1, 0, "ng-container", 58), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                core["\u0275\u0275nextContext"](2);
                var _r106 = core["\u0275\u0275reference"](4), item_r61 = core["\u0275\u0275nextContext"]().$implicit, ctx_r113 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("href", item_r61.href, core["\u0275\u0275sanitizeUrl"])("target", core["\u0275\u0275pipeBind1"](1, 6, ctx_r113.openArtifactsInNewTab$) || item_r61.openArtifactInNewTab ? "_blank" : "_self")("pbiTooltip", null != item_r61.warning && item_r61.warning.warningText ? void 0 : item_r61.displayName), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", item_r61.displayName, " "), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngTemplateOutlet", _r106)("ngTemplateOutletContext", core["\u0275\u0275pureFunction1"](8, _c21, item_r61));
            }
        }
        function CellTemplatesComponent_ng_template_2_ng_container_9_ng_container_2_span_2_ng_container_2_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275elementContainer"](0);
        }
        function CellTemplatesComponent_ng_template_2_ng_container_9_ng_container_2_span_2_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "span", 76), core["\u0275\u0275text"](1), 
            core["\u0275\u0275template"](2, CellTemplatesComponent_ng_template_2_ng_container_9_ng_container_2_span_2_ng_container_2_Template, 1, 0, "ng-container", 58), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                core["\u0275\u0275nextContext"](2);
                var _r106 = core["\u0275\u0275reference"](4), item_r61 = core["\u0275\u0275nextContext"]().$implicit;
                core["\u0275\u0275property"]("pbiTooltip", null != item_r61.warning && item_r61.warning.warningText ? void 0 : item_r61.displayName), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate1"](" ", item_r61.displayName, " "), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngTemplateOutlet", _r106)("ngTemplateOutletContext", core["\u0275\u0275pureFunction1"](4, _c21, item_r61));
            }
        }
        function CellTemplatesComponent_ng_template_2_ng_container_9_ng_container_2_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0, 32), core["\u0275\u0275template"](1, CellTemplatesComponent_ng_template_2_ng_container_9_ng_container_2_a_1_Template, 4, 10, "a", 73), 
            core["\u0275\u0275template"](2, CellTemplatesComponent_ng_template_2_ng_container_9_ng_container_2_span_2_Template, 3, 6, "span", 74), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var item_r61 = core["\u0275\u0275nextContext"](2).$implicit;
                core["\u0275\u0275property"]("ngSwitch", !!item_r61.href), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275property"]("ngSwitchCase", !0), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275property"]("ngSwitchCase", !1);
            }
        }
        function CellTemplatesComponent_ng_template_2_ng_container_9_ng_template_3_i_0_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275element"](0, "i", 67), core["\u0275\u0275pipe"](1, "localize")), 
            2 & rf && core["\u0275\u0275property"]("pbiTooltip", core["\u0275\u0275pipeBind1"](1, 1, "Capacity_PremiumCapacity"));
        }
        function CellTemplatesComponent_ng_template_2_ng_container_9_ng_template_3_span_1_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementStart"](0, "span", 79), core["\u0275\u0275text"](1), 
            core["\u0275\u0275pipe"](2, "localize"), core["\u0275\u0275elementEnd"]()), 2 & rf && (core["\u0275\u0275advance"](1), 
            core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](2, 1, "Capacity_PremiumCapacity")));
        }
        function CellTemplatesComponent_ng_template_2_ng_container_9_ng_template_3_i_2_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275element"](0, "i", 68), core["\u0275\u0275pipe"](1, "localize")), 
            2 & rf && core["\u0275\u0275property"]("pbiTooltip", core["\u0275\u0275pipeBind1"](1, 1, "PowerBI_PremiumPerUser"));
        }
        function CellTemplatesComponent_ng_template_2_ng_container_9_ng_template_3_span_3_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementStart"](0, "span", 79), core["\u0275\u0275text"](1), 
            core["\u0275\u0275pipe"](2, "localize"), core["\u0275\u0275elementEnd"]()), 2 & rf && (core["\u0275\u0275advance"](1), 
            core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](2, 1, "PowerBI_PremiumPerUser")));
        }
        function CellTemplatesComponent_ng_template_2_ng_container_9_ng_template_3_ng_container_4_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275element"](1, "i", 67), 
            core["\u0275\u0275pipe"](2, "localize"), core["\u0275\u0275elementStart"](3, "span", 79), 
            core["\u0275\u0275text"](4), core["\u0275\u0275pipe"](5, "localize"), core["\u0275\u0275elementEnd"](), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf && (core["\u0275\u0275advance"](1), 
            core["\u0275\u0275property"]("pbiTooltip", core["\u0275\u0275pipeBind1"](2, 2, "CapacityHeader_FabricCapacity")), 
            core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](5, 4, "CapacityHeader_FabricCapacity")));
        }
        function CellTemplatesComponent_ng_template_2_ng_container_9_ng_template_3_i_5_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "i", 80), 2 & rf) {
                var item_r120 = core["\u0275\u0275nextContext"]().$implicit;
                core["\u0275\u0275property"]("pbiTooltip", item_r120.warning.warningText);
            }
        }
        function CellTemplatesComponent_ng_template_2_ng_container_9_ng_template_3_span_6_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "span", 79), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var item_r120 = core["\u0275\u0275nextContext"]().$implicit;
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate"](item_r120.warning.warningText);
            }
        }
        function CellTemplatesComponent_ng_template_2_ng_container_9_ng_template_3_ng_container_7_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275element"](1, "i", 81), 
            core["\u0275\u0275pipe"](2, "localize"), core["\u0275\u0275elementStart"](3, "span", 79), 
            core["\u0275\u0275text"](4), core["\u0275\u0275pipe"](5, "localize"), core["\u0275\u0275elementEnd"](), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf && (core["\u0275\u0275advance"](1), 
            core["\u0275\u0275property"]("pbiTooltip", core["\u0275\u0275pipeBind1"](2, 2, "Trident_ArtifactLink_OpensInBrowser")), 
            core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](5, 4, "Trident_ArtifactLink_OpensInBrowser")));
        }
        function CellTemplatesComponent_ng_template_2_ng_container_9_ng_template_3_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275template"](0, CellTemplatesComponent_ng_template_2_ng_container_9_ng_template_3_i_0_Template, 2, 3, "i", 62), 
            core["\u0275\u0275template"](1, CellTemplatesComponent_ng_template_2_ng_container_9_ng_template_3_span_1_Template, 3, 3, "span", 77), 
            core["\u0275\u0275template"](2, CellTemplatesComponent_ng_template_2_ng_container_9_ng_template_3_i_2_Template, 2, 3, "i", 63), 
            core["\u0275\u0275template"](3, CellTemplatesComponent_ng_template_2_ng_container_9_ng_template_3_span_3_Template, 3, 3, "span", 77), 
            core["\u0275\u0275template"](4, CellTemplatesComponent_ng_template_2_ng_container_9_ng_template_3_ng_container_4_Template, 6, 6, "ng-container", 28), 
            core["\u0275\u0275template"](5, CellTemplatesComponent_ng_template_2_ng_container_9_ng_template_3_i_5_Template, 1, 1, "i", 78), 
            core["\u0275\u0275template"](6, CellTemplatesComponent_ng_template_2_ng_container_9_ng_template_3_span_6_Template, 2, 1, "span", 77), 
            core["\u0275\u0275template"](7, CellTemplatesComponent_ng_template_2_ng_container_9_ng_template_3_ng_container_7_Template, 6, 6, "ng-container", 28)), 
            2 & rf) {
                var item_r120 = ctx.$implicit, ctx_r107 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275property"]("ngIf", ctx_r107.showCapacityIcon && ctx_r107.hasCapacity(item_r120)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx_r107.showCapacityIcon && ctx_r107.hasCapacity(item_r120)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx_r107.showCapacityIcon && ctx_r107.hasPpuCapacity(item_r120)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx_r107.showCapacityIcon && ctx_r107.hasPpuCapacity(item_r120)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx_r107.showCapacityIcon && ctx_r107.hasFabricCapacity(item_r120)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !!item_r120.warning), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !!item_r120.warning), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", item_r120.showOpenInNewTabIcon);
            }
        }
        function CellTemplatesComponent_ng_template_2_ng_container_9_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0, 32), core["\u0275\u0275template"](1, CellTemplatesComponent_ng_template_2_ng_container_9_a_1_Template, 3, 9, "a", 70), 
            core["\u0275\u0275template"](2, CellTemplatesComponent_ng_template_2_ng_container_9_ng_container_2_Template, 3, 3, "ng-container", 46), 
            core["\u0275\u0275template"](3, CellTemplatesComponent_ng_template_2_ng_container_9_ng_template_3_Template, 8, 8, "ng-template", null, 71, core["\u0275\u0275templateRefExtractor"]), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var item_r61 = core["\u0275\u0275nextContext"]().$implicit, ctx_r69 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("ngSwitch", !item_r61.forcedHref && (!!item_r61.routePath || ctx_r69.onNavigation.observers.length > 0)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", !0), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", !1);
            }
        }
        function CellTemplatesComponent_ng_template_2_ng_container_10_ng_container_4_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275elementContainer"](0);
        }
        var _c23 = function() {
            return {
                openArtifactFrom: "listLinkClick"
            };
        };
        function CellTemplatesComponent_ng_template_2_ng_container_10_Template(rf, ctx) {
            if (1 & rf) {
                var _r135 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "a", 82), 
                core["\u0275\u0275listener"]("keydown.enter", function() {
                    core["\u0275\u0275restoreView"](_r135);
                    var item_r61 = core["\u0275\u0275nextContext"]().$implicit, ctx_r133 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r133.navigateToSubfolder(item_r61.contract.id));
                })("click", function() {
                    core["\u0275\u0275restoreView"](_r135);
                    var item_r61 = core["\u0275\u0275nextContext"]().$implicit, ctx_r136 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r136.navigateToSubfolder(item_r61.contract.id));
                }), core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275text"](3), core["\u0275\u0275template"](4, CellTemplatesComponent_ng_template_2_ng_container_10_ng_container_4_Template, 1, 0, "ng-container", 58), 
                core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementContainerEnd"]();
            }
            if (2 & rf) {
                var item_r61 = core["\u0275\u0275nextContext"]().$implicit, ctx_r70 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngStyle", core["\u0275\u0275pureFunction1"](10, _c22, item_r61.removeNameTextDecoration ? "none" : ""))("routerLink", item_r61.routePath)("state", core["\u0275\u0275pureFunction0"](12, _c23))("target", core["\u0275\u0275pipeBind1"](2, 8, ctx_r70.openArtifactsInNewTab$) ? "_blank" : "_self")("pbiTooltip", null != item_r61.warning && item_r61.warning.warningText ? void 0 : item_r61.displayName), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", item_r61.displayName, " "), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngTemplateOutlet", ctx_r70.icons)("ngTemplateOutletContext", core["\u0275\u0275pureFunction1"](13, _c21, item_r61));
            }
        }
        function CellTemplatesComponent_ng_template_2_ng_container_11_a_1_ng_container_3_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275elementContainer"](0);
        }
        var _c24 = function(a1) {
            return {
                openArtifactFrom: "listLinkClick",
                callingContext: a1
            };
        };
        function CellTemplatesComponent_ng_template_2_ng_container_11_a_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r146 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "a", 84), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r146);
                    var item_r61 = core["\u0275\u0275nextContext"](2).$implicit, ctx_r144 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r144.navigatedToArtifact(item_r61));
                }), core["\u0275\u0275pipe"](1, "async"), core["\u0275\u0275text"](2), core["\u0275\u0275template"](3, CellTemplatesComponent_ng_template_2_ng_container_11_a_1_ng_container_3_Template, 1, 0, "ng-container", 58), 
                core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                core["\u0275\u0275nextContext"]();
                var _r141 = core["\u0275\u0275reference"](4), item_r61 = core["\u0275\u0275nextContext"]().$implicit, ctx_r139 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("ngStyle", core["\u0275\u0275pureFunction1"](10, _c22, item_r61.removeNameTextDecoration ? "none" : ""))("routerLink", item_r61.routePath)("state", core["\u0275\u0275pureFunction1"](12, _c24, ctx_r139.callingContext))("target", core["\u0275\u0275pipeBind1"](1, 8, ctx_r139.openArtifactsInNewTab$) ? "_blank" : "_self")("pbiTooltip", null != item_r61.warning && item_r61.warning.warningText ? void 0 : item_r61.displayName), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", item_r61.displayName, " "), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngTemplateOutlet", _r141)("ngTemplateOutletContext", core["\u0275\u0275pureFunction1"](14, _c21, item_r61));
            }
        }
        function CellTemplatesComponent_ng_template_2_ng_container_11_ng_container_2_a_1_ng_container_3_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275elementContainer"](0);
        }
        function CellTemplatesComponent_ng_template_2_ng_container_11_ng_container_2_a_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r153 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "a", 87), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r153);
                    var item_r61 = core["\u0275\u0275nextContext"](3).$implicit, ctx_r151 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r151.navigatedToArtifact(item_r61));
                }), core["\u0275\u0275pipe"](1, "async"), core["\u0275\u0275text"](2), core["\u0275\u0275template"](3, CellTemplatesComponent_ng_template_2_ng_container_11_ng_container_2_a_1_ng_container_3_Template, 1, 0, "ng-container", 58), 
                core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                core["\u0275\u0275nextContext"](2);
                var _r141 = core["\u0275\u0275reference"](4), item_r61 = core["\u0275\u0275nextContext"]().$implicit, ctx_r148 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("href", item_r61.href, core["\u0275\u0275sanitizeUrl"])("target", core["\u0275\u0275pipeBind1"](1, 6, ctx_r148.openArtifactsInNewTab$) || item_r61.openArtifactInNewTab ? "_blank" : "_self")("pbiTooltip", null != item_r61.warning && item_r61.warning.warningText ? void 0 : item_r61.displayName), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", item_r61.displayName, " "), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngTemplateOutlet", _r141)("ngTemplateOutletContext", core["\u0275\u0275pureFunction1"](8, _c21, item_r61));
            }
        }
        function CellTemplatesComponent_ng_template_2_ng_container_11_ng_container_2_span_2_ng_container_2_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275elementContainer"](0);
        }
        function CellTemplatesComponent_ng_template_2_ng_container_11_ng_container_2_span_2_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "span", 88), core["\u0275\u0275text"](1), 
            core["\u0275\u0275template"](2, CellTemplatesComponent_ng_template_2_ng_container_11_ng_container_2_span_2_ng_container_2_Template, 1, 0, "ng-container", 58), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                core["\u0275\u0275nextContext"](2);
                var _r141 = core["\u0275\u0275reference"](4), item_r61 = core["\u0275\u0275nextContext"]().$implicit;
                core["\u0275\u0275property"]("pbiTooltip", null != item_r61.warning && item_r61.warning.warningText ? void 0 : item_r61.displayName), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate1"](" ", item_r61.displayName, " "), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngTemplateOutlet", _r141)("ngTemplateOutletContext", core["\u0275\u0275pureFunction1"](4, _c21, item_r61));
            }
        }
        function CellTemplatesComponent_ng_template_2_ng_container_11_ng_container_2_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0, 32), core["\u0275\u0275template"](1, CellTemplatesComponent_ng_template_2_ng_container_11_ng_container_2_a_1_Template, 4, 10, "a", 85), 
            core["\u0275\u0275template"](2, CellTemplatesComponent_ng_template_2_ng_container_11_ng_container_2_span_2_Template, 3, 6, "span", 86), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var item_r61 = core["\u0275\u0275nextContext"](2).$implicit;
                core["\u0275\u0275property"]("ngSwitch", !!item_r61.href), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275property"]("ngSwitchCase", !0), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275property"]("ngSwitchCase", !1);
            }
        }
        function CellTemplatesComponent_ng_template_2_ng_container_11_ng_template_3_tri_svg_icon_0_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "tri-svg-icon", 66), 2 & rf) {
                var item_r158 = core["\u0275\u0275nextContext"]().$implicit;
                core["\u0275\u0275property"]("triTooltip", item_r158.trialCapacityCloseToExpiredTooltip)("name", "gift_open_warning_20_regular")("sprite", "misc-icons");
            }
        }
        function CellTemplatesComponent_ng_template_2_ng_container_11_ng_template_3_i_1_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275element"](0, "i", 67), core["\u0275\u0275pipe"](1, "localize")), 
            2 & rf && core["\u0275\u0275property"]("pbiTooltip", core["\u0275\u0275pipeBind1"](1, 1, "Capacity_PremiumCapacity"));
        }
        function CellTemplatesComponent_ng_template_2_ng_container_11_ng_template_3_span_2_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementStart"](0, "span", 79), core["\u0275\u0275text"](1), 
            core["\u0275\u0275pipe"](2, "localize"), core["\u0275\u0275elementEnd"]()), 2 & rf && (core["\u0275\u0275advance"](1), 
            core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](2, 1, "Capacity_PremiumCapacity")));
        }
        function CellTemplatesComponent_ng_template_2_ng_container_11_ng_template_3_i_3_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275element"](0, "i", 68), core["\u0275\u0275pipe"](1, "localize")), 
            2 & rf && core["\u0275\u0275property"]("pbiTooltip", core["\u0275\u0275pipeBind1"](1, 1, "PowerBI_PremiumPerUser"));
        }
        function CellTemplatesComponent_ng_template_2_ng_container_11_ng_template_3_span_4_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementStart"](0, "span", 79), core["\u0275\u0275text"](1), 
            core["\u0275\u0275pipe"](2, "localize"), core["\u0275\u0275elementEnd"]()), 2 & rf && (core["\u0275\u0275advance"](1), 
            core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](2, 1, "PowerBI_PremiumPerUser")));
        }
        function CellTemplatesComponent_ng_template_2_ng_container_11_ng_template_3_ng_container_5_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275element"](1, "i", 67), 
            core["\u0275\u0275pipe"](2, "localize"), core["\u0275\u0275elementStart"](3, "span", 79), 
            core["\u0275\u0275text"](4), core["\u0275\u0275pipe"](5, "localize"), core["\u0275\u0275elementEnd"](), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf && (core["\u0275\u0275advance"](1), 
            core["\u0275\u0275property"]("pbiTooltip", core["\u0275\u0275pipeBind1"](2, 2, "CapacityHeader_FabricCapacity")), 
            core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](5, 4, "CapacityHeader_FabricCapacity")));
        }
        function CellTemplatesComponent_ng_template_2_ng_container_11_ng_template_3_i_6_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "i", 80), 2 & rf) {
                var item_r158 = core["\u0275\u0275nextContext"]().$implicit;
                core["\u0275\u0275property"]("pbiTooltip", item_r158.warning.warningText);
            }
        }
        function CellTemplatesComponent_ng_template_2_ng_container_11_ng_template_3_span_7_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "span", 79), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var item_r158 = core["\u0275\u0275nextContext"]().$implicit;
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate"](item_r158.warning.warningText);
            }
        }
        function CellTemplatesComponent_ng_template_2_ng_container_11_ng_template_3_ng_container_8_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275element"](1, "i", 81), 
            core["\u0275\u0275pipe"](2, "localize"), core["\u0275\u0275elementStart"](3, "span", 79), 
            core["\u0275\u0275text"](4), core["\u0275\u0275pipe"](5, "localize"), core["\u0275\u0275elementEnd"](), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf && (core["\u0275\u0275advance"](1), 
            core["\u0275\u0275property"]("pbiTooltip", core["\u0275\u0275pipeBind1"](2, 2, "Trident_ArtifactLink_OpensInBrowser")), 
            core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](5, 4, "Trident_ArtifactLink_OpensInBrowser")));
        }
        function CellTemplatesComponent_ng_template_2_ng_container_11_ng_template_3_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275template"](0, CellTemplatesComponent_ng_template_2_ng_container_11_ng_template_3_tri_svg_icon_0_Template, 1, 3, "tri-svg-icon", 61), 
            core["\u0275\u0275template"](1, CellTemplatesComponent_ng_template_2_ng_container_11_ng_template_3_i_1_Template, 2, 3, "i", 62), 
            core["\u0275\u0275template"](2, CellTemplatesComponent_ng_template_2_ng_container_11_ng_template_3_span_2_Template, 3, 3, "span", 77), 
            core["\u0275\u0275template"](3, CellTemplatesComponent_ng_template_2_ng_container_11_ng_template_3_i_3_Template, 2, 3, "i", 63), 
            core["\u0275\u0275template"](4, CellTemplatesComponent_ng_template_2_ng_container_11_ng_template_3_span_4_Template, 3, 3, "span", 77), 
            core["\u0275\u0275template"](5, CellTemplatesComponent_ng_template_2_ng_container_11_ng_template_3_ng_container_5_Template, 6, 6, "ng-container", 28), 
            core["\u0275\u0275template"](6, CellTemplatesComponent_ng_template_2_ng_container_11_ng_template_3_i_6_Template, 1, 1, "i", 78), 
            core["\u0275\u0275template"](7, CellTemplatesComponent_ng_template_2_ng_container_11_ng_template_3_span_7_Template, 2, 1, "span", 77), 
            core["\u0275\u0275template"](8, CellTemplatesComponent_ng_template_2_ng_container_11_ng_template_3_ng_container_8_Template, 6, 6, "ng-container", 28)), 
            2 & rf) {
                var item_r158 = ctx.$implicit, ctx_r142 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275property"]("ngIf", item_r158.isTrialCapacityCloseToExpired), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275property"]("ngIf", ctx_r142.showCapacityIcon && ctx_r142.hasCapacity(item_r158)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx_r142.showCapacityIcon && ctx_r142.hasCapacity(item_r158)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx_r142.showCapacityIcon && ctx_r142.hasPpuCapacity(item_r158)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx_r142.showCapacityIcon && ctx_r142.hasPpuCapacity(item_r158)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx_r142.showCapacityIcon && ctx_r142.hasFabricCapacity(item_r158)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !!item_r158.warning), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !!item_r158.warning), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", item_r158.showOpenInNewTabIcon);
            }
        }
        function CellTemplatesComponent_ng_template_2_ng_container_11_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0, 32), core["\u0275\u0275template"](1, CellTemplatesComponent_ng_template_2_ng_container_11_a_1_Template, 4, 16, "a", 83), 
            core["\u0275\u0275template"](2, CellTemplatesComponent_ng_template_2_ng_container_11_ng_container_2_Template, 3, 3, "ng-container", 46), 
            core["\u0275\u0275template"](3, CellTemplatesComponent_ng_template_2_ng_container_11_ng_template_3_Template, 9, 9, "ng-template", null, 71, core["\u0275\u0275templateRefExtractor"]), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var item_r61 = core["\u0275\u0275nextContext"]().$implicit, ctx_r71 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("ngSwitch", !item_r61.forcedHref && (!!item_r61.routePath || ctx_r71.onNavigation.observers.length > 0)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", !0), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", !1);
            }
        }
        function CellTemplatesComponent_ng_template_2_ng_container_12_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275element"](1, "tags-item-icon", 89), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var item_r61 = core["\u0275\u0275nextContext"]().$implicit;
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("tags", item_r61.tags);
            }
        }
        function CellTemplatesComponent_ng_template_2_dlp_icon_13_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "dlp-icon", 90), 2 & rf) {
                var item_r61 = core["\u0275\u0275nextContext"]().$implicit;
                core["\u0275\u0275property"]("hasDlpPolicyTip", item_r61.hasDlpPolicyTip)("restrictions", item_r61.restrictions);
            }
        }
        function CellTemplatesComponent_ng_template_2_datamart_icon_container_14_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "datamart-icon-container", 91), 2 & rf) {
                var item_r61 = core["\u0275\u0275nextContext"]().$implicit;
                core["\u0275\u0275property"]("viewModel", item_r61)("status", item_r61.status);
            }
        }
        function CellTemplatesComponent_ng_template_2_ng_container_15_button_1_ng_container_3_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275elementContainer"](0);
        }
        function CellTemplatesComponent_ng_template_2_ng_container_15_button_1_ng_template_4_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275element"](0, "mat-icon", 96), core["\u0275\u0275pipe"](1, "async")), 
            2 & rf) {
                var quickAction_r183 = ctx.$implicit;
                core["\u0275\u0275propertyInterpolate"]("fontIcon", quickAction_r183.iconClass$ ? core["\u0275\u0275pipeBind1"](1, 1, quickAction_r183.iconClass$) : quickAction_r183.iconClass);
            }
        }
        function CellTemplatesComponent_ng_template_2_ng_container_15_button_1_ng_template_6_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "tri-svg-icon", 97), 2 & rf) {
                var item_r184 = ctx.$implicit;
                core["\u0275\u0275property"]("sprite", item_r184.triIcon.sprite || "fluentui-icons")("name", item_r184.triIcon.name);
            }
        }
        var _c25 = function(a0) {
            return {
                alwaysShow: a0
            };
        };
        function CellTemplatesComponent_ng_template_2_ng_container_15_button_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r186 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "button", 93), core["\u0275\u0275listener"]("click", function() {
                    var quickAction_r177 = core["\u0275\u0275restoreView"](_r186).$implicit, item_r61 = core["\u0275\u0275nextContext"](2).$implicit, ctx_r185 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r185.onQuickActionClick(quickAction_r177, item_r61));
                }), core["\u0275\u0275pipe"](1, "async"), core["\u0275\u0275pipe"](2, "async"), 
                core["\u0275\u0275template"](3, CellTemplatesComponent_ng_template_2_ng_container_15_button_1_ng_container_3_Template, 1, 0, "ng-container", 58), 
                core["\u0275\u0275template"](4, CellTemplatesComponent_ng_template_2_ng_container_15_button_1_ng_template_4_Template, 2, 3, "ng-template", null, 94, core["\u0275\u0275templateRefExtractor"]), 
                core["\u0275\u0275template"](6, CellTemplatesComponent_ng_template_2_ng_container_15_button_1_ng_template_6_Template, 1, 2, "ng-template", null, 95, core["\u0275\u0275templateRefExtractor"]), 
                core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var quickAction_r177 = ctx.$implicit, _r179 = core["\u0275\u0275reference"](5), _r181 = core["\u0275\u0275reference"](7);
                core["\u0275\u0275propertyInterpolate"]("title", quickAction_r177.tooltip$ ? core["\u0275\u0275pipeBind1"](1, 6, quickAction_r177.tooltip$) : quickAction_r177.tooltip), 
                core["\u0275\u0275property"]("disabled", !!quickAction_r177.disabled)("ngClass", core["\u0275\u0275pureFunction1"](10, _c25, !!core["\u0275\u0275pipeBind1"](2, 8, quickAction_r177.alwaysShow$))), 
                core["\u0275\u0275attribute"]("data-testid", "quick-action-button-" + quickAction_r177.text), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngTemplateOutlet", quickAction_r177.triIcon ? _r181 : _r179)("ngTemplateOutletContext", core["\u0275\u0275pureFunction1"](12, _c21, quickAction_r177));
            }
        }
        function CellTemplatesComponent_ng_template_2_ng_container_15_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, CellTemplatesComponent_ng_template_2_ng_container_15_button_1_Template, 8, 14, "button", 92), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var quickActions_r175 = ctx.$implicit;
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngForOf", quickActions_r175);
            }
        }
        var _c26 = function(a0) {
            return {
                isFavorited: a0
            };
        };
        function CellTemplatesComponent_ng_template_2_favorite_star_17_Template(rf, ctx) {
            if (1 & rf) {
                var _r189 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "favorite-star", 98), core["\u0275\u0275listener"]("onFavoriteToggle", function($event) {
                    core["\u0275\u0275restoreView"](_r189);
                    var ctx_r188 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r188.onFavoriteToggle.emit($event));
                }), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var item_r61 = core["\u0275\u0275nextContext"]().$implicit, ctx_r76 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("ngClass", core["\u0275\u0275pureFunction1"](4, _c26, !!item_r61.favoriteId))("item", item_r61)("type", ctx_r76.getFavoriteType(item_r61.type))("tridentStyle", !0);
            }
        }
        function CellTemplatesComponent_ng_template_2_ng_container_18_dashboard_context_menu_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r208 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "dashboard-context-menu", 110), core["\u0275\u0275listener"]("currentMenuItemIdChange", function($event) {
                    core["\u0275\u0275restoreView"](_r208);
                    var ctx_r207 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r207.setCurrentMenuItemId($event, 1));
                })("onMenuOpenedEvent", function($event) {
                    core["\u0275\u0275restoreView"](_r208);
                    var item_r61 = core["\u0275\u0275nextContext"](2).$implicit, ctx_r209 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r209.emitActionMenuOpen($event, item_r61, 1));
                })("executionRun", function($event) {
                    core["\u0275\u0275restoreView"](_r208);
                    var item_r61 = core["\u0275\u0275nextContext"](2).$implicit, ctx_r211 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r211.emitContextMenuExecution($event, item_r61, 1));
                }), core["\u0275\u0275pipe"](1, "localize"), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var item_r61 = core["\u0275\u0275nextContext"](2).$implicit, ctx_r191 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("currentMenuItemId", ctx_r191.currentMenuItemId)("ariaLabel", core["\u0275\u0275pipeBind1"](1, 5, "Options_Menu"))("availableActions", item_r61.availableActions)("callingContext", ctx_r191.callingContext)("dashboard", item_r61);
            }
        }
        function CellTemplatesComponent_ng_template_2_ng_container_18_report_context_menu_2_Template(rf, ctx) {
            if (1 & rf) {
                var _r215 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "report-context-menu", 111), core["\u0275\u0275listener"]("currentMenuItemIdChange", function($event) {
                    core["\u0275\u0275restoreView"](_r215);
                    var ctx_r214 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r214.setCurrentMenuItemId($event, 2));
                })("onMenuOpenedEvent", function($event) {
                    core["\u0275\u0275restoreView"](_r215);
                    var item_r61 = core["\u0275\u0275nextContext"](2).$implicit, ctx_r216 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r216.emitActionMenuOpen($event, item_r61, 2));
                })("executionRun", function($event) {
                    core["\u0275\u0275restoreView"](_r215);
                    var item_r61 = core["\u0275\u0275nextContext"](2).$implicit, ctx_r218 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r218.emitContextMenuExecution($event, item_r61, 2));
                }), core["\u0275\u0275pipe"](1, "localize"), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var item_r61 = core["\u0275\u0275nextContext"](2).$implicit, ctx_r192 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("currentMenuItemId", ctx_r192.currentMenuItemId)("availableActions", item_r61.availableActions)("ariaLabel", core["\u0275\u0275pipeBind1"](1, 5, "Options_Menu"))("callingContext", ctx_r192.callingContext)("report", item_r61);
            }
        }
        function CellTemplatesComponent_ng_template_2_ng_container_18_dataset_context_menu_3_Template(rf, ctx) {
            if (1 & rf) {
                var _r222 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "dataset-context-menu", 112), core["\u0275\u0275listener"]("currentMenuItemIdChange", function($event) {
                    core["\u0275\u0275restoreView"](_r222);
                    var ctx_r221 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r221.setCurrentMenuItemId($event, 3));
                })("onMenuOpenedEvent", function($event) {
                    core["\u0275\u0275restoreView"](_r222);
                    var item_r61 = core["\u0275\u0275nextContext"](2).$implicit, ctx_r223 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r223.emitActionMenuOpen($event, item_r61, 3));
                })("datasetActionClicked", function($event) {
                    core["\u0275\u0275restoreView"](_r222);
                    var item_r61 = core["\u0275\u0275nextContext"](2).$implicit, ctx_r225 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r225.datasetActionClicked($event, item_r61));
                }), core["\u0275\u0275pipe"](1, "localize"), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var tmp_3_0, item_r61 = core["\u0275\u0275nextContext"](2).$implicit, ctx_r193 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("currentMenuItemId", ctx_r193.currentMenuItemId)("ariaLabel", core["\u0275\u0275pipeBind1"](1, 6, "Options_Menu"))("datasetItem", item_r61)("container", null !== (tmp_3_0 = null == item_r61 ? null : item_r61.container) && void 0 !== tmp_3_0 ? tmp_3_0 : ctx_r193.folder)("containerByAction", null == item_r61 ? null : item_r61.containerByAction)("actionSource", ctx_r193.actionSourceDatasetWorkspaceList);
            }
        }
        function CellTemplatesComponent_ng_template_2_ng_container_18_ng_container_4_workbook_context_menu_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r230 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "workbook-context-menu", 114), core["\u0275\u0275listener"]("currentMenuItemIdChange", function($event) {
                    core["\u0275\u0275restoreView"](_r230);
                    var ctx_r229 = core["\u0275\u0275nextContext"](4);
                    return core["\u0275\u0275resetView"](ctx_r229.setCurrentMenuItemId($event, 4));
                })("onMenuOpenedEvent", function($event) {
                    core["\u0275\u0275restoreView"](_r230);
                    var item_r61 = core["\u0275\u0275nextContext"](3).$implicit, ctx_r231 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r231.emitActionMenuOpen($event, item_r61, 4));
                })("executionRun", function($event) {
                    core["\u0275\u0275restoreView"](_r230);
                    var item_r61 = core["\u0275\u0275nextContext"](3).$implicit, ctx_r233 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r233.emitContextMenuExecution($event, item_r61, 4));
                }), core["\u0275\u0275pipe"](1, "localize"), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var item_r61 = core["\u0275\u0275nextContext"](3).$implicit, ctx_r228 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("availableActions", item_r61.availableActions)("currentMenuItemId", ctx_r228.currentMenuItemId)("ariaLabel", core["\u0275\u0275pipeBind1"](1, 5, "Options_Menu"))("callingContext", ctx_r228.callingContext)("workbook", item_r61);
            }
        }
        function CellTemplatesComponent_ng_template_2_ng_container_18_ng_container_4_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, CellTemplatesComponent_ng_template_2_ng_container_18_ng_container_4_workbook_context_menu_1_Template, 2, 7, "workbook-context-menu", 113), 
            core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275elementContainerEnd"]()), 
            2 & rf) {
                var ctx_r194 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](2, 1, ctx_r194.isEditableWorkspace$));
            }
        }
        function CellTemplatesComponent_ng_template_2_ng_container_18_app_context_menu_5_Template(rf, ctx) {
            if (1 & rf) {
                var _r237 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "app-context-menu", 115), core["\u0275\u0275listener"]("currentMenuItemIdChange", function($event) {
                    core["\u0275\u0275restoreView"](_r237);
                    var ctx_r236 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r236.setCurrentMenuItemId($event, 5));
                })("onMenuOpenedEvent", function($event) {
                    core["\u0275\u0275restoreView"](_r237);
                    var item_r61 = core["\u0275\u0275nextContext"](2).$implicit, ctx_r238 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r238.emitActionMenuOpen($event, item_r61, 5));
                })("executionRun", function($event) {
                    core["\u0275\u0275restoreView"](_r237);
                    var item_r61 = core["\u0275\u0275nextContext"](2).$implicit, ctx_r240 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r240.emitContextMenuExecution($event, item_r61, 5));
                }), core["\u0275\u0275pipe"](1, "localize"), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var item_r61 = core["\u0275\u0275nextContext"](2).$implicit, ctx_r195 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("currentMenuItemId", ctx_r195.currentMenuItemId)("availableActions", item_r61.availableActions)("ariaLabel", core["\u0275\u0275pipeBind1"](1, 5, "Options_Menu"))("app", item_r61)("callingContext", ctx_r195.callingContext);
            }
        }
        function CellTemplatesComponent_ng_template_2_ng_container_18_report_context_menu_6_Template(rf, ctx) {
            if (1 & rf) {
                var _r244 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "report-context-menu", 116), core["\u0275\u0275listener"]("currentMenuItemIdChange", function($event) {
                    core["\u0275\u0275restoreView"](_r244);
                    var ctx_r243 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r243.setCurrentMenuItemId($event, 6));
                })("onMenuOpenedEvent", function($event) {
                    core["\u0275\u0275restoreView"](_r244);
                    var item_r61 = core["\u0275\u0275nextContext"](2).$implicit, ctx_r245 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r245.emitActionMenuOpen($event, item_r61, 6));
                })("executionRun", function($event) {
                    core["\u0275\u0275restoreView"](_r244);
                    var item_r61 = core["\u0275\u0275nextContext"](2).$implicit, ctx_r247 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r247.emitContextMenuExecution($event, item_r61, 6));
                }), core["\u0275\u0275pipe"](1, "localize"), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var item_r61 = core["\u0275\u0275nextContext"](2).$implicit, ctx_r196 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("currentMenuItemId", ctx_r196.currentMenuItemId)("availableActions", item_r61.availableActions)("ariaLabel", core["\u0275\u0275pipeBind1"](1, 5, "Options_Menu"))("report", item_r61)("callingContext", ctx_r196.callingContext);
            }
        }
        function CellTemplatesComponent_ng_template_2_ng_container_18_workspace_context_menu_7_Template(rf, ctx) {
            if (1 & rf) {
                var _r251 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "workspace-context-menu", 117), core["\u0275\u0275listener"]("currentMenuItemIdChange", function($event) {
                    core["\u0275\u0275restoreView"](_r251);
                    var ctx_r250 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r250.setCurrentMenuItemId($event, 7));
                })("onMenuOpenedEvent", function($event) {
                    core["\u0275\u0275restoreView"](_r251);
                    var item_r61 = core["\u0275\u0275nextContext"](2).$implicit, ctx_r252 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r252.emitActionMenuOpen($event, item_r61, 7));
                })("executionRun", function($event) {
                    core["\u0275\u0275restoreView"](_r251);
                    var item_r61 = core["\u0275\u0275nextContext"](2).$implicit, ctx_r254 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r254.emitContextMenuExecution($event, item_r61, 7));
                }), core["\u0275\u0275pipe"](1, "localize"), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var item_r61 = core["\u0275\u0275nextContext"](2).$implicit, ctx_r197 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("currentMenuItemId", ctx_r197.currentMenuItemId)("ariaLabel", core["\u0275\u0275pipeBind1"](1, 5, "Options_Menu"))("availableActions", item_r61.availableActions)("callingContext", ctx_r197.callingContext)("workspace", item_r61);
            }
        }
        function CellTemplatesComponent_ng_template_2_ng_container_18_dataflow_context_menu_8_Template(rf, ctx) {
            if (1 & rf) {
                var _r258 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "dataflow-context-menu", 118), core["\u0275\u0275listener"]("currentMenuItemIdChange", function($event) {
                    core["\u0275\u0275restoreView"](_r258);
                    var ctx_r257 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r257.setCurrentMenuItemId($event, 8));
                })("onMenuOpenedEvent", function($event) {
                    core["\u0275\u0275restoreView"](_r258);
                    var item_r61 = core["\u0275\u0275nextContext"](2).$implicit, ctx_r259 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r259.emitActionMenuOpen($event, item_r61, 8));
                }), core["\u0275\u0275pipe"](1, "localize"), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var item_r61 = core["\u0275\u0275nextContext"](2).$implicit, ctx_r198 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("currentMenuItemId", ctx_r198.currentMenuItemId)("ariaLabel", core["\u0275\u0275pipeBind1"](1, 3, "Options_Menu"))("cdsaModel", item_r61);
            }
        }
        function CellTemplatesComponent_ng_template_2_ng_container_18_dataflow_gen2_context_menu_9_Template(rf, ctx) {
            if (1 & rf) {
                var _r263 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "dataflow-gen2-context-menu", 118), core["\u0275\u0275listener"]("currentMenuItemIdChange", function($event) {
                    core["\u0275\u0275restoreView"](_r263);
                    var ctx_r262 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r262.setCurrentMenuItemId($event, 103));
                })("onMenuOpenedEvent", function($event) {
                    core["\u0275\u0275restoreView"](_r263);
                    var item_r61 = core["\u0275\u0275nextContext"](2).$implicit, ctx_r264 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r264.emitActionMenuOpen($event, item_r61, 103));
                }), core["\u0275\u0275pipe"](1, "localize"), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var item_r61 = core["\u0275\u0275nextContext"](2).$implicit, ctx_r199 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("currentMenuItemId", ctx_r199.currentMenuItemId)("ariaLabel", core["\u0275\u0275pipeBind1"](1, 3, "Options_Menu"))("cdsaModel", item_r61);
            }
        }
        function CellTemplatesComponent_ng_template_2_ng_container_18_scorecard_context_menu_10_Template(rf, ctx) {
            if (1 & rf) {
                var _r268 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "scorecard-context-menu", 119), core["\u0275\u0275listener"]("currentMenuItemIdChange", function($event) {
                    core["\u0275\u0275restoreView"](_r268);
                    var ctx_r267 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r267.setCurrentMenuItemId($event, 10));
                })("onMenuOpenedEvent", function($event) {
                    core["\u0275\u0275restoreView"](_r268);
                    var item_r61 = core["\u0275\u0275nextContext"](2).$implicit, ctx_r269 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r269.emitActionMenuOpen($event, item_r61, 10));
                }), core["\u0275\u0275pipe"](1, "localize"), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var item_r61 = core["\u0275\u0275nextContext"](2).$implicit, ctx_r200 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("currentMenuItemId", ctx_r200.currentMenuItemId)("ariaLabel", core["\u0275\u0275pipeBind1"](1, 4, "Options_Menu"))("availableActions", item_r61.availableActions)("scorecard", item_r61);
            }
        }
        function CellTemplatesComponent_ng_template_2_ng_container_18_datamart_context_menu_11_Template(rf, ctx) {
            if (1 & rf) {
                var _r274 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "datamart-context-menu", 120), core["\u0275\u0275listener"]("currentMenuItemIdChange", function($event) {
                    core["\u0275\u0275restoreView"](_r274);
                    var item_r61 = core["\u0275\u0275nextContext"](2).$implicit, ctx_r272 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r272.setCurrentMenuItemId($event, item_r61.type));
                })("onMenuOpenedEvent", function($event) {
                    core["\u0275\u0275restoreView"](_r274);
                    var item_r61 = core["\u0275\u0275nextContext"](2).$implicit, ctx_r275 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r275.emitActionMenuOpen($event, item_r61, item_r61.type));
                })("datamartActionClicked", function($event) {
                    core["\u0275\u0275restoreView"](_r274);
                    var ctx_r277 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r277.datamartActionClicked($event));
                }), core["\u0275\u0275pipe"](1, "localize"), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var item_r61 = core["\u0275\u0275nextContext"](2).$implicit, ctx_r201 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("currentMenuItemId", ctx_r201.currentMenuItemId)("ariaLabel", core["\u0275\u0275pipeBind1"](1, 6, "Options_Menu"))("datamart", item_r61)("container", null == item_r61 ? null : item_r61.container)("containerByAction", null == item_r61 ? null : item_r61.containerByAction)("actionSource", ctx_r201.actionSourceDatamartWorkspaceList);
            }
        }
        function CellTemplatesComponent_ng_template_2_ng_container_18_datamart_context_menu_12_Template(rf, ctx) {
            if (1 & rf) {
                var _r281 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "datamart-context-menu", 120), core["\u0275\u0275listener"]("currentMenuItemIdChange", function($event) {
                    core["\u0275\u0275restoreView"](_r281);
                    var item_r61 = core["\u0275\u0275nextContext"](2).$implicit, ctx_r279 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r279.setCurrentMenuItemId($event, item_r61.type));
                })("onMenuOpenedEvent", function($event) {
                    core["\u0275\u0275restoreView"](_r281);
                    var item_r61 = core["\u0275\u0275nextContext"](2).$implicit, ctx_r282 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r282.emitActionMenuOpen($event, item_r61, item_r61.type));
                })("datamartActionClicked", function($event) {
                    core["\u0275\u0275restoreView"](_r281);
                    var item_r61 = core["\u0275\u0275nextContext"](2).$implicit, ctx_r284 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r284.datamartActionClicked($event, item_r61));
                }), core["\u0275\u0275pipe"](1, "localize"), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var item_r61 = core["\u0275\u0275nextContext"](2).$implicit, ctx_r202 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("currentMenuItemId", ctx_r202.currentMenuItemId)("ariaLabel", core["\u0275\u0275pipeBind1"](1, 6, "Options_Menu"))("datamart", item_r61)("container", null == item_r61 ? null : item_r61.container)("containerByAction", null == item_r61 ? null : item_r61.containerByAction)("actionSource", ctx_r202.actionSourceLakeWarehouseWorkspaceList);
            }
        }
        function CellTemplatesComponent_ng_template_2_ng_container_18_datamart_context_menu_13_Template(rf, ctx) {
            if (1 & rf) {
                var _r289 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "datamart-context-menu", 120), core["\u0275\u0275listener"]("currentMenuItemIdChange", function($event) {
                    core["\u0275\u0275restoreView"](_r289);
                    var item_r61 = core["\u0275\u0275nextContext"](2).$implicit, ctx_r287 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r287.setCurrentMenuItemId($event, item_r61.type));
                })("onMenuOpenedEvent", function($event) {
                    core["\u0275\u0275restoreView"](_r289);
                    var item_r61 = core["\u0275\u0275nextContext"](2).$implicit, ctx_r290 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r290.emitActionMenuOpen($event, item_r61, item_r61.type));
                })("datamartActionClicked", function($event) {
                    core["\u0275\u0275restoreView"](_r289);
                    var ctx_r292 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r292.datamartActionClicked($event));
                }), core["\u0275\u0275pipe"](1, "localize"), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var item_r61 = core["\u0275\u0275nextContext"](2).$implicit, ctx_r203 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("currentMenuItemId", ctx_r203.currentMenuItemId)("ariaLabel", core["\u0275\u0275pipeBind1"](1, 6, "Options_Menu"))("datamart", item_r61)("container", null == item_r61 ? null : item_r61.container)("containerByAction", null == item_r61 ? null : item_r61.containerByAction)("actionSource", ctx_r203.actionSourceDataWarehouseWorkspaceList);
            }
        }
        function CellTemplatesComponent_ng_template_2_ng_container_18_subfolder_context_menu_14_Template(rf, ctx) {
            if (1 & rf) {
                var _r296 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "subfolder-context-menu", 121), core["\u0275\u0275listener"]("currentMenuItemIdChange", function($event) {
                    core["\u0275\u0275restoreView"](_r296);
                    var item_r61 = core["\u0275\u0275nextContext"](2).$implicit, ctx_r294 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r294.setCurrentMenuItemId($event, item_r61.type));
                })("onMenuOpenedEvent", function($event) {
                    core["\u0275\u0275restoreView"](_r296);
                    var item_r61 = core["\u0275\u0275nextContext"](2).$implicit, ctx_r297 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r297.emitActionMenuOpen($event, item_r61, item_r61.type));
                })("subfolderActionClicked", function($event) {
                    core["\u0275\u0275restoreView"](_r296);
                    var ctx_r299 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r299.subfolderActionClicked($event));
                }), core["\u0275\u0275pipe"](1, "localize"), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var item_r61 = core["\u0275\u0275nextContext"](2).$implicit, ctx_r204 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("currentMenuItemId", ctx_r204.currentMenuItemId)("ariaLabel", core["\u0275\u0275pipeBind1"](1, 5, "Options_Menu"))("subfolder", item_r61)("container", null == item_r61 ? null : item_r61.container)("containerByAction", null == item_r61 ? null : item_r61.containerByAction);
            }
        }
        function CellTemplatesComponent_ng_template_2_ng_container_18_datamart_context_menu_15_Template(rf, ctx) {
            if (1 & rf) {
                var _r303 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "datamart-context-menu", 120), core["\u0275\u0275listener"]("currentMenuItemIdChange", function($event) {
                    core["\u0275\u0275restoreView"](_r303);
                    var item_r61 = core["\u0275\u0275nextContext"](2).$implicit, ctx_r301 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r301.setCurrentMenuItemId($event, item_r61.type));
                })("onMenuOpenedEvent", function($event) {
                    core["\u0275\u0275restoreView"](_r303);
                    var item_r61 = core["\u0275\u0275nextContext"](2).$implicit, ctx_r304 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r304.emitActionMenuOpen($event, item_r61, item_r61.type));
                })("datamartActionClicked", function($event) {
                    core["\u0275\u0275restoreView"](_r303);
                    var item_r61 = core["\u0275\u0275nextContext"](2).$implicit, ctx_r306 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r306.datamartActionClicked($event, item_r61));
                }), core["\u0275\u0275pipe"](1, "localize"), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var item_r61 = core["\u0275\u0275nextContext"](2).$implicit, ctx_r205 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("currentMenuItemId", ctx_r205.currentMenuItemId)("ariaLabel", core["\u0275\u0275pipeBind1"](1, 6, "Options_Menu"))("datamart", item_r61)("container", null == item_r61 ? null : item_r61.container)("containerByAction", null == item_r61 ? null : item_r61.containerByAction)("actionSource", ctx_r205.actionSourceLakeWarehouseWorkspaceList);
            }
        }
        function CellTemplatesComponent_ng_template_2_ng_container_18_ng_container_16_trident_context_menu_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r312 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "trident-context-menu", 123), core["\u0275\u0275listener"]("currentMenuItemIdChange", function($event) {
                    core["\u0275\u0275restoreView"](_r312);
                    var item_r61 = core["\u0275\u0275nextContext"](3).$implicit, ctx_r310 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r310.setCurrentMenuItemId($event, item_r61.type));
                })("onMenuOpenedEvent", function($event) {
                    core["\u0275\u0275restoreView"](_r312);
                    var item_r61 = core["\u0275\u0275nextContext"](3).$implicit, ctx_r313 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r313.emitActionMenuOpen($event, item_r61, item_r61.type));
                })("executionRun", function($event) {
                    core["\u0275\u0275restoreView"](_r312);
                    var item_r61 = core["\u0275\u0275nextContext"](3).$implicit, ctx_r315 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r315.emitContextMenuExecution($event, item_r61, item_r61.type));
                }), core["\u0275\u0275pipe"](1, "localize"), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var item_r61 = core["\u0275\u0275nextContext"](3).$implicit, ctx_r309 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("currentMenuItemId", ctx_r309.currentMenuItemId)("ariaLabel", core["\u0275\u0275pipeBind1"](1, 5, "Options_Menu"))("availableActions", item_r61.availableActions)("callingContext", ctx_r309.callingContext)("artifact", item_r61);
            }
        }
        function CellTemplatesComponent_ng_template_2_ng_container_18_ng_container_16_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, CellTemplatesComponent_ng_template_2_ng_container_18_ng_container_16_trident_context_menu_1_Template, 2, 7, "trident-context-menu", 122), 
            core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275elementContainerEnd"]()), 
            2 & rf) {
                var item_r61 = core["\u0275\u0275nextContext"](2).$implicit, ctx_r206 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](2, 1, ctx_r206.isTridentUI$) && ctx_r206.isTridentArtifactType(item_r61.type));
            }
        }
        function CellTemplatesComponent_ng_template_2_ng_container_18_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0, 32), core["\u0275\u0275template"](1, CellTemplatesComponent_ng_template_2_ng_container_18_dashboard_context_menu_1_Template, 2, 7, "dashboard-context-menu", 99), 
            core["\u0275\u0275template"](2, CellTemplatesComponent_ng_template_2_ng_container_18_report_context_menu_2_Template, 2, 7, "report-context-menu", 100), 
            core["\u0275\u0275template"](3, CellTemplatesComponent_ng_template_2_ng_container_18_dataset_context_menu_3_Template, 2, 8, "dataset-context-menu", 101), 
            core["\u0275\u0275template"](4, CellTemplatesComponent_ng_template_2_ng_container_18_ng_container_4_Template, 3, 3, "ng-container", 47), 
            core["\u0275\u0275template"](5, CellTemplatesComponent_ng_template_2_ng_container_18_app_context_menu_5_Template, 2, 7, "app-context-menu", 102), 
            core["\u0275\u0275template"](6, CellTemplatesComponent_ng_template_2_ng_container_18_report_context_menu_6_Template, 2, 7, "report-context-menu", 103), 
            core["\u0275\u0275template"](7, CellTemplatesComponent_ng_template_2_ng_container_18_workspace_context_menu_7_Template, 2, 7, "workspace-context-menu", 104), 
            core["\u0275\u0275template"](8, CellTemplatesComponent_ng_template_2_ng_container_18_dataflow_context_menu_8_Template, 2, 5, "dataflow-context-menu", 105), 
            core["\u0275\u0275template"](9, CellTemplatesComponent_ng_template_2_ng_container_18_dataflow_gen2_context_menu_9_Template, 2, 5, "dataflow-gen2-context-menu", 105), 
            core["\u0275\u0275template"](10, CellTemplatesComponent_ng_template_2_ng_container_18_scorecard_context_menu_10_Template, 2, 6, "scorecard-context-menu", 106), 
            core["\u0275\u0275template"](11, CellTemplatesComponent_ng_template_2_ng_container_18_datamart_context_menu_11_Template, 2, 8, "datamart-context-menu", 107), 
            core["\u0275\u0275template"](12, CellTemplatesComponent_ng_template_2_ng_container_18_datamart_context_menu_12_Template, 2, 8, "datamart-context-menu", 107), 
            core["\u0275\u0275template"](13, CellTemplatesComponent_ng_template_2_ng_container_18_datamart_context_menu_13_Template, 2, 8, "datamart-context-menu", 107), 
            core["\u0275\u0275template"](14, CellTemplatesComponent_ng_template_2_ng_container_18_subfolder_context_menu_14_Template, 2, 7, "subfolder-context-menu", 108), 
            core["\u0275\u0275template"](15, CellTemplatesComponent_ng_template_2_ng_container_18_datamart_context_menu_15_Template, 2, 8, "datamart-context-menu", 107), 
            core["\u0275\u0275template"](16, CellTemplatesComponent_ng_template_2_ng_container_18_ng_container_16_Template, 3, 3, "ng-container", 109), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var item_r61 = core["\u0275\u0275nextContext"]().$implicit;
                core["\u0275\u0275property"]("ngSwitch", item_r61.type), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275property"]("ngSwitchCase", 1), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275property"]("ngSwitchCase", 2), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275property"]("ngSwitchCase", 3), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275property"]("ngSwitchCase", 4), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275property"]("ngSwitchCase", 5), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275property"]("ngSwitchCase", 6), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275property"]("ngSwitchCase", 7), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275property"]("ngSwitchCase", 8), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275property"]("ngSwitchCase", 103), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275property"]("ngSwitchCase", 10), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275property"]("ngSwitchCase", 11), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275property"]("ngSwitchCase", 14), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275property"]("ngSwitchCase", 15), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275property"]("ngSwitchCase", 16), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275property"]("ngSwitchCase", 17);
            }
        }
        var _c27 = function(a0) {
            return {
                focused: a0
            };
        }, _c28 = function(a0, a1) {
            return {
                width: a0,
                "min-width": a1
            };
        };
        function CellTemplatesComponent_ng_template_2_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "span", 41), core["\u0275\u0275pipe"](1, "async"), 
            core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275template"](3, CellTemplatesComponent_ng_template_2_mat_icon_3_Template, 1, 0, "mat-icon", 42), 
            core["\u0275\u0275template"](4, CellTemplatesComponent_ng_template_2_tri_svg_icon_4_Template, 1, 0, "tri-svg-icon", 43), 
            core["\u0275\u0275template"](5, CellTemplatesComponent_ng_template_2_tri_svg_icon_5_Template, 1, 4, "tri-svg-icon", 44), 
            core["\u0275\u0275elementStart"](6, "span", 45), core["\u0275\u0275elementContainerStart"](7, 32), 
            core["\u0275\u0275template"](8, CellTemplatesComponent_ng_template_2_ng_container_8_Template, 5, 3, "ng-container", 46), 
            core["\u0275\u0275template"](9, CellTemplatesComponent_ng_template_2_ng_container_9_Template, 5, 3, "ng-container", 46), 
            core["\u0275\u0275template"](10, CellTemplatesComponent_ng_template_2_ng_container_10_Template, 5, 15, "ng-container", 47), 
            core["\u0275\u0275template"](11, CellTemplatesComponent_ng_template_2_ng_container_11_Template, 5, 3, "ng-container", 48), 
            core["\u0275\u0275elementContainerEnd"](), core["\u0275\u0275template"](12, CellTemplatesComponent_ng_template_2_ng_container_12_Template, 2, 1, "ng-container", 28), 
            core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](13, CellTemplatesComponent_ng_template_2_dlp_icon_13_Template, 1, 2, "dlp-icon", 49), 
            core["\u0275\u0275template"](14, CellTemplatesComponent_ng_template_2_datamart_icon_container_14_Template, 1, 2, "datamart-icon-container", 50), 
            core["\u0275\u0275template"](15, CellTemplatesComponent_ng_template_2_ng_container_15_Template, 2, 1, "ng-container", 28), 
            core["\u0275\u0275pipe"](16, "async"), core["\u0275\u0275template"](17, CellTemplatesComponent_ng_template_2_favorite_star_17_Template, 1, 6, "favorite-star", 51), 
            core["\u0275\u0275template"](18, CellTemplatesComponent_ng_template_2_ng_container_18_Template, 17, 16, "ng-container", 52), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var item_r61 = ctx.$implicit, colWidth_r62 = ctx.colWidth, seeAllColumn_r63 = ctx.seeAllColumn, nextToIconColumn_r64 = ctx.nextToIconColumn, ctx_r3 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("ngClass", core["\u0275\u0275pureFunction1"](22, _c27, ctx_r3.uniqueItemKey(item_r61) == core["\u0275\u0275pipeBind1"](1, 16, ctx_r3.focusedRowId$) || ctx_r3.uniqueItemKey(item_r61) == core["\u0275\u0275pipeBind1"](2, 18, ctx_r3.hoveredRowId$) || item_r61.uniqueId == ctx_r3.currentMenuItemId))("ngStyle", core["\u0275\u0275pureFunction2"](24, _c28, ctx_r3.getWidthFromConfig(colWidth_r62, seeAllColumn_r63, ctx_r3.colName_name, nextToIconColumn_r64, !!item_r61.parentUniqueId && !!item_r61.childIndex), ctx_r3.getWidthFromConfig(colWidth_r62, seeAllColumn_r63, ctx_r3.colName_name, nextToIconColumn_r64, !!item_r61.parentUniqueId && !!item_r61.childIndex))), 
                core["\u0275\u0275attribute"]("data-value", item_r61.displayName), core["\u0275\u0275advance"](3), 
                core["\u0275\u0275property"]("ngIf", !!item_r61.isNew), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275property"]("ngIf", 16 === item_r61.type && !(null == item_r61.contract || !item_r61.contract.isNew)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", null == item_r61 ? null : item_r61.browseArtifactContentsIcon), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngSwitch", item_r61.type), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", 103), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", 8), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", 16), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", ctx_r3.enableTags && item_r61.tags), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", item_r61.hasDlpPolicyTip || !!item_r61.restrictions), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx_r3.isArtifactDatamartType(item_r61.type)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](16, 20, item_r61.quickActions)), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", ctx_r3.shouldShowFavoriteStar(item_r61.type) && !item_r61.disableFavoriteStar), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !item_r61.disableContextMenu);
            }
        }
        function CellTemplatesComponent_ng_template_4_ng_container_1_tri_svg_icon_2_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "tri-svg-icon", 132);
        }
        function CellTemplatesComponent_ng_template_4_ng_container_1_tri_svg_icon_3_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "tri-svg-icon", 133);
        }
        function CellTemplatesComponent_ng_template_4_ng_container_1_tri_svg_icon_4_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "tri-svg-icon", 134);
        }
        function CellTemplatesComponent_ng_template_4_ng_container_1_tri_svg_icon_5_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "tri-svg-icon", 135);
        }
        function CellTemplatesComponent_ng_template_4_ng_container_1_tri_svg_icon_6_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "tri-svg-icon", 136);
        }
        function CellTemplatesComponent_ng_template_4_ng_container_1_tri_svg_icon_7_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "tri-svg-icon", 137);
        }
        function CellTemplatesComponent_ng_template_4_ng_container_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0, 32), core["\u0275\u0275pipe"](1, "async"), 
            core["\u0275\u0275template"](2, CellTemplatesComponent_ng_template_4_ng_container_1_tri_svg_icon_2_Template, 1, 0, "tri-svg-icon", 126), 
            core["\u0275\u0275template"](3, CellTemplatesComponent_ng_template_4_ng_container_1_tri_svg_icon_3_Template, 1, 0, "tri-svg-icon", 127), 
            core["\u0275\u0275template"](4, CellTemplatesComponent_ng_template_4_ng_container_1_tri_svg_icon_4_Template, 1, 0, "tri-svg-icon", 128), 
            core["\u0275\u0275template"](5, CellTemplatesComponent_ng_template_4_ng_container_1_tri_svg_icon_5_Template, 1, 0, "tri-svg-icon", 129), 
            core["\u0275\u0275template"](6, CellTemplatesComponent_ng_template_4_ng_container_1_tri_svg_icon_6_Template, 1, 0, "tri-svg-icon", 130), 
            core["\u0275\u0275template"](7, CellTemplatesComponent_ng_template_4_ng_container_1_tri_svg_icon_7_Template, 1, 0, "tri-svg-icon", 131), 
            core["\u0275\u0275elementStart"](8, "span"), core["\u0275\u0275pipe"](9, "async"), 
            core["\u0275\u0275pipe"](10, "async"), core["\u0275\u0275text"](11), core["\u0275\u0275pipe"](12, "async"), 
            core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var item_r320 = core["\u0275\u0275nextContext"]().$implicit;
                core["\u0275\u0275property"]("ngSwitch", core["\u0275\u0275pipeBind1"](1, 10, item_r320.gitStatus)), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngSwitchCase", "Synced"), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", "Update Required"), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", "Uncommitted"), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", "Conflict"), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", "Unsupported"), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", "Syncing..."), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275attribute"]("data-value", core["\u0275\u0275pipeBind1"](9, 12, item_r320.gitStatus))("title", core["\u0275\u0275pipeBind1"](10, 14, item_r320.gitStatus)), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](12, 16, item_r320.gitStatus), " ");
            }
        }
        function CellTemplatesComponent_ng_template_4_ng_template_3_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275element"](0, "tri-svg-icon", 138), core["\u0275\u0275elementStart"](1, "span", 139), 
            core["\u0275\u0275pipe"](2, "localize"), core["\u0275\u0275text"](3), core["\u0275\u0275elementEnd"]()), 
            2 & rf && (core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("triTooltip", core["\u0275\u0275pipeBind1"](2, 3, "Trident_Git_Same_Changes_Tooltip"))("triTooltipMaxWidth", 240), 
            core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", "Synced", " "));
        }
        function CellTemplatesComponent_ng_template_4_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "span", 124), core["\u0275\u0275template"](1, CellTemplatesComponent_ng_template_4_ng_container_1_Template, 13, 18, "ng-container", 30), 
            core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275template"](3, CellTemplatesComponent_ng_template_4_ng_template_3_Template, 4, 5, "ng-template", null, 125, core["\u0275\u0275templateRefExtractor"]), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var item_r320 = ctx.$implicit, colWidth_r321 = ctx.colWidth, seeAllColumn_r322 = ctx.seeAllColumn, _r324 = core["\u0275\u0275reference"](4), ctx_r5 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("ngStyle", core["\u0275\u0275pureFunction2"](5, _c28, ctx_r5.getWidthFromConfig(colWidth_r321, seeAllColumn_r322, ctx_r5.colName_gitStatus), ctx_r5.getWidthFromConfig(colWidth_r321, seeAllColumn_r322, ctx_r5.colName_gitStatus))), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", "Same Changes" !== core["\u0275\u0275pipeBind1"](2, 3, item_r320.gitStatus))("ngIfElse", _r324);
            }
        }
        function CellTemplatesComponent_ng_template_6_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "span", 140)(1, "span", 141), 
            core["\u0275\u0275text"](2), core["\u0275\u0275elementEnd"]()()), 2 & rf) {
                var item_r333 = ctx.$implicit, colWidth_r334 = ctx.colWidth, seeAllColumn_r335 = ctx.seeAllColumn, nextToIconColumn_r336 = ctx.nextToIconColumn, ctx_r7 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("ngStyle", core["\u0275\u0275pureFunction2"](4, _c28, ctx_r7.getWidthFromConfig(colWidth_r334, seeAllColumn_r335, ctx_r7.colName_type, nextToIconColumn_r336, !!item_r333.parentUniqueId && !!item_r333.childIndex), ctx_r7.getWidthFromConfig(colWidth_r334, seeAllColumn_r335, ctx_r7.colName_type, nextToIconColumn_r336, !!item_r333.parentUniqueId && !!item_r333.childIndex))), 
                core["\u0275\u0275attribute"]("data-value", item_r333.type)("title", item_r333.typeName), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](item_r333.typeName);
            }
        }
        function CellTemplatesComponent_ng_template_8_span_0_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "span", 143), core["\u0275\u0275element"](1, "information-protection-label", 144), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r341 = core["\u0275\u0275nextContext"](), colWidth_r338 = ctx_r341.colWidth, seeAllColumn_r339 = ctx_r341.seeAllColumn, item_r337 = ctx_r341.$implicit, ctx_r340 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("ngStyle", core["\u0275\u0275pureFunction2"](2, _c28, ctx_r340.getWidthFromConfig(colWidth_r338, seeAllColumn_r339, ctx_r340.colName_sensitivity), ctx_r340.getWidthFromConfig(colWidth_r338, seeAllColumn_r339, ctx_r340.colName_sensitivity))), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("label", item_r337.artifactInformationProtection);
            }
        }
        function CellTemplatesComponent_ng_template_8_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275template"](0, CellTemplatesComponent_ng_template_8_span_0_Template, 2, 5, "span", 142), 
            core["\u0275\u0275pipe"](1, "async")), 2 & rf) {
                var ctx_r9 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](1, 1, ctx_r9.isInformationProtectionEnabled$));
            }
        }
        function CellTemplatesComponent_ng_template_10_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "span", 145), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var item_r342 = ctx.$implicit, colWidth_r343 = ctx.colWidth, seeAllColumn_r344 = ctx.seeAllColumn, ctx_r11 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("ngStyle", core["\u0275\u0275pureFunction2"](3, _c28, ctx_r11.getWidthFromConfig(colWidth_r343, seeAllColumn_r344, ctx_r11.colName_owner), ctx_r11.getWidthFromConfig(colWidth_r343, seeAllColumn_r344, ctx_r11.colName_owner))), 
                core["\u0275\u0275attribute"]("title", item_r342.owner || "\u2014"), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275textInterpolate"](item_r342.owner || "\u2014");
            }
        }
        function CellTemplatesComponent_ng_template_12_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "span", 146), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var item_r345 = ctx.$implicit, colWidth_r346 = ctx.colWidth, seeAllColumn_r347 = ctx.seeAllColumn, ctx_r13 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("ngStyle", core["\u0275\u0275pureFunction2"](3, _c28, ctx_r13.getWidthFromConfig(colWidth_r346, seeAllColumn_r347, ctx_r13.colName_score), ctx_r13.getWidthFromConfig(colWidth_r346, seeAllColumn_r347, ctx_r13.colName_score))), 
                core["\u0275\u0275attribute"]("title", item_r345.score || "\u2014"), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275textInterpolate"](item_r345.score || "\u2014");
            }
        }
        function CellTemplatesComponent_ng_template_14_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "span", 147), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var item_r348 = ctx.$implicit, colWidth_r349 = ctx.colWidth, seeAllColumn_r350 = ctx.seeAllColumn, ctx_r15 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("ngStyle", core["\u0275\u0275pureFunction2"](3, _c28, ctx_r15.getWidthFromConfig(colWidth_r349, seeAllColumn_r350, ctx_r15.colName_sharedBy), ctx_r15.getWidthFromConfig(colWidth_r349, seeAllColumn_r350, ctx_r15.colName_sharedBy))), 
                core["\u0275\u0275attribute"]("title", item_r348.sharedBy || "\u2014"), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275textInterpolate"](item_r348.sharedByUserDisplayName || "\u2014");
            }
        }
        function CellTemplatesComponent_ng_template_16_dataset_icon_container_modern_4_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "dataset-icon-container-modern", 150), 
            2 & rf) {
                var item_r351 = core["\u0275\u0275nextContext"]().$implicit;
                core["\u0275\u0275property"]("viewModel", item_r351);
            }
        }
        function CellTemplatesComponent_ng_template_16_dataset_icon_container_modern_5_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "dataset-icon-container-modern", 150), 
            2 & rf) {
                var item_r351 = core["\u0275\u0275nextContext"]().$implicit;
                core["\u0275\u0275property"]("viewModel", item_r351);
            }
        }
        function CellTemplatesComponent_ng_template_16_dataflow_icon_container_6_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "dataflow-icon-container", 150), 2 & rf) {
                var item_r351 = core["\u0275\u0275nextContext"]().$implicit;
                core["\u0275\u0275property"]("viewModel", item_r351);
            }
        }
        function CellTemplatesComponent_ng_template_16_datamart_icon_container_7_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "datamart-icon-container", 150), 2 & rf) {
                var item_r351 = core["\u0275\u0275nextContext"]().$implicit;
                core["\u0275\u0275property"]("viewModel", item_r351);
            }
        }
        function CellTemplatesComponent_ng_template_16_dataflow_icon_container_8_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "dataflow-icon-container", 150), 2 & rf) {
                var item_r351 = core["\u0275\u0275nextContext"]().$implicit;
                core["\u0275\u0275property"]("viewModel", item_r351);
            }
        }
        function CellTemplatesComponent_ng_template_16_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "span", 148)(1, "span", 141), 
            core["\u0275\u0275text"](2), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementContainerStart"](3, 32), 
            core["\u0275\u0275template"](4, CellTemplatesComponent_ng_template_16_dataset_icon_container_modern_4_Template, 1, 1, "dataset-icon-container-modern", 149), 
            core["\u0275\u0275template"](5, CellTemplatesComponent_ng_template_16_dataset_icon_container_modern_5_Template, 1, 1, "dataset-icon-container-modern", 149), 
            core["\u0275\u0275template"](6, CellTemplatesComponent_ng_template_16_dataflow_icon_container_6_Template, 1, 1, "dataflow-icon-container", 149), 
            core["\u0275\u0275template"](7, CellTemplatesComponent_ng_template_16_datamart_icon_container_7_Template, 1, 1, "datamart-icon-container", 149), 
            core["\u0275\u0275template"](8, CellTemplatesComponent_ng_template_16_dataflow_icon_container_8_Template, 1, 1, "dataflow-icon-container", 149), 
            core["\u0275\u0275elementContainerEnd"](), core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var item_r351 = ctx.$implicit, colWidth_r352 = ctx.colWidth, seeAllColumn_r353 = ctx.seeAllColumn, ctx_r17 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("ngStyle", core["\u0275\u0275pureFunction2"](10, _c28, ctx_r17.getWidthFromConfig(colWidth_r352, seeAllColumn_r353, ctx_r17.colName_lastRefresh), ctx_r17.getWidthFromConfig(colWidth_r352, seeAllColumn_r353, ctx_r17.colName_lastRefresh))), 
                core["\u0275\u0275attribute"]("data-value", null == item_r351.lastRefreshDate ? null : item_r351.lastRefreshDate.getTime())("title", item_r351.lastRefresh || "\u2014"), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](item_r351.lastRefresh || "\u2014"), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitch", item_r351.type), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", 3), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", 4), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", 8), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", 11), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", 103);
            }
        }
        function CellTemplatesComponent_ng_template_18_dataset_icon_container_modern_4_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "dataset-icon-container-modern", 153), 
            2 & rf) {
                var item_r364 = core["\u0275\u0275nextContext"]().$implicit;
                core["\u0275\u0275property"]("isNextRefresh", !0)("viewModel", item_r364);
            }
        }
        function CellTemplatesComponent_ng_template_18_dataset_icon_container_modern_5_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "dataset-icon-container-modern", 153), 
            2 & rf) {
                var item_r364 = core["\u0275\u0275nextContext"]().$implicit;
                core["\u0275\u0275property"]("isNextRefresh", !0)("viewModel", item_r364);
            }
        }
        function CellTemplatesComponent_ng_template_18_dataflow_icon_container_6_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "dataflow-icon-container", 153), 2 & rf) {
                var item_r364 = core["\u0275\u0275nextContext"]().$implicit;
                core["\u0275\u0275property"]("isNextRefresh", !0)("viewModel", item_r364);
            }
        }
        function CellTemplatesComponent_ng_template_18_dataflow_icon_container_7_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "dataflow-icon-container", 153), 2 & rf) {
                var item_r364 = core["\u0275\u0275nextContext"]().$implicit;
                core["\u0275\u0275property"]("isNextRefresh", !0)("viewModel", item_r364);
            }
        }
        function CellTemplatesComponent_ng_template_18_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "span", 151)(1, "span", 141), 
            core["\u0275\u0275text"](2), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementContainerStart"](3, 32), 
            core["\u0275\u0275template"](4, CellTemplatesComponent_ng_template_18_dataset_icon_container_modern_4_Template, 1, 2, "dataset-icon-container-modern", 152), 
            core["\u0275\u0275template"](5, CellTemplatesComponent_ng_template_18_dataset_icon_container_modern_5_Template, 1, 2, "dataset-icon-container-modern", 152), 
            core["\u0275\u0275template"](6, CellTemplatesComponent_ng_template_18_dataflow_icon_container_6_Template, 1, 2, "dataflow-icon-container", 152), 
            core["\u0275\u0275template"](7, CellTemplatesComponent_ng_template_18_dataflow_icon_container_7_Template, 1, 2, "dataflow-icon-container", 152), 
            core["\u0275\u0275elementContainerEnd"](), core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var item_r364 = ctx.$implicit, colWidth_r365 = ctx.colWidth, seeAllColumn_r366 = ctx.seeAllColumn, ctx_r19 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("ngStyle", core["\u0275\u0275pureFunction2"](9, _c28, ctx_r19.getWidthFromConfig(colWidth_r365, seeAllColumn_r366, ctx_r19.colName_nextRefresh), ctx_r19.getWidthFromConfig(colWidth_r365, seeAllColumn_r366, ctx_r19.colName_nextRefresh))), 
                core["\u0275\u0275attribute"]("data-value", null == item_r364.nextRefreshDate ? null : item_r364.nextRefreshDate.getTime())("title", item_r364.nextRefresh || "\u2014"), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](item_r364.nextRefresh || "\u2014"), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitch", item_r364.type), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", 3), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", 4), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", 8), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", 103);
            }
        }
        function CellTemplatesComponent_ng_template_20_endorsement_badge_1_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "endorsement-badge", 156), 2 & rf) {
                var item_r375 = core["\u0275\u0275nextContext"]().$implicit;
                core["\u0275\u0275property"]("stage", item_r375.endorsement.stage);
            }
        }
        function CellTemplatesComponent_ng_template_20_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "span", 154), core["\u0275\u0275template"](1, CellTemplatesComponent_ng_template_20_endorsement_badge_1_Template, 1, 1, "endorsement-badge", 155), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var item_r375 = ctx.$implicit, colWidth_r376 = ctx.colWidth, seeAllColumn_r377 = ctx.seeAllColumn, ctx_r21 = core["\u0275\u0275nextContext"](), _r22 = core["\u0275\u0275reference"](23);
                core["\u0275\u0275property"]("ngStyle", core["\u0275\u0275pureFunction2"](4, _c28, ctx_r21.getWidthFromConfig(colWidth_r376, seeAllColumn_r377, ctx_r21.colName_endorsement), ctx_r21.getWidthFromConfig(colWidth_r376, seeAllColumn_r377, ctx_r21.colName_endorsement))), 
                core["\u0275\u0275attribute"]("data-value", null == item_r375.endorsement ? null : item_r375.endorsement.stage), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", (null == item_r375.endorsement ? null : item_r375.endorsement.stage) && 0 !== (null == item_r375.endorsement ? null : item_r375.endorsement.stage))("ngIfElse", _r22);
            }
        }
        function CellTemplatesComponent_ng_template_22_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementStart"](0, "span", 157), core["\u0275\u0275pipe"](1, "localize"), 
            core["\u0275\u0275text"](2, "\u2014"), core["\u0275\u0275elementEnd"]()), 2 & rf && core["\u0275\u0275property"]("title", core["\u0275\u0275pipeBind1"](1, 1, "None"));
        }
        function CellTemplatesComponent_ng_template_24_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "span", 158), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var item_r380 = ctx.$implicit, colWidth_r381 = ctx.colWidth, seeAllColumn_r382 = ctx.seeAllColumn, ctx_r25 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("ngStyle", core["\u0275\u0275pureFunction2"](4, _c28, ctx_r25.getWidthFromConfig(colWidth_r381, seeAllColumn_r382, ctx_r25.colName_lastAccess), ctx_r25.getWidthFromConfig(colWidth_r381, seeAllColumn_r382, ctx_r25.colName_lastAccess))), 
                core["\u0275\u0275attribute"]("data-value", null == item_r380.lastAccess ? null : item_r380.lastAccess.getTime())("title", item_r380.lastAccessTime || "\u2014"), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate1"]("", item_r380.lastAccessTime, " ");
            }
        }
        function CellTemplatesComponent_ng_template_26_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "span", 159), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var item_r383 = ctx.$implicit, colWidth_r384 = ctx.colWidth, seeAllColumn_r385 = ctx.seeAllColumn, ctx_r27 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("ngStyle", core["\u0275\u0275pureFunction2"](4, _c28, ctx_r27.getWidthFromConfig(colWidth_r384, seeAllColumn_r385, ctx_r27.colName_lastActivity), ctx_r27.getWidthFromConfig(colWidth_r384, seeAllColumn_r385, ctx_r27.colName_lastActivity))), 
                core["\u0275\u0275attribute"]("data-value", (null == item_r383.lastAccess ? null : item_r383.lastAccess.getTime()) || (null == item_r383.sharedDate ? null : item_r383.sharedDate.getTime()) || 0)("title", item_r383.lastAccessTime || item_r383.sharedDateLocaleString || "\u2014"), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate1"]("", item_r383.lastAccessTime || item_r383.sharedDateLocaleString || "\u2014", " ");
            }
        }
        function CellTemplatesComponent_ng_template_28_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "span", 160), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var item_r386 = ctx.$implicit, colWidth_r387 = ctx.colWidth, seeAllColumn_r388 = ctx.seeAllColumn, ctx_r29 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("ngStyle", core["\u0275\u0275pureFunction2"](3, _c28, ctx_r29.getWidthFromConfig(colWidth_r387, seeAllColumn_r388, ctx_r29.colName_hiddenTime), ctx_r29.getWidthFromConfig(colWidth_r387, seeAllColumn_r388, ctx_r29.colName_hiddenTime))), 
                core["\u0275\u0275attribute"]("title", item_r386.hiddenTime || "\u2014"), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275textInterpolate1"]("", item_r386.hiddenTimeString, " ");
            }
        }
        function CellTemplatesComponent_ng_template_30_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "span", 161), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var item_r389 = ctx.$implicit, colWidth_r390 = ctx.colWidth, seeAllColumn_r391 = ctx.seeAllColumn, ctx_r31 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("ngStyle", core["\u0275\u0275pureFunction2"](3, _c28, ctx_r31.getWidthFromConfig(colWidth_r390, seeAllColumn_r391, ctx_r31.colName_relation), ctx_r31.getWidthFromConfig(colWidth_r390, seeAllColumn_r391, ctx_r31.colName_relation))), 
                core["\u0275\u0275attribute"]("title", item_r389.relation || "\u2014"), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275textInterpolate"](item_r389.relation || "\u2014");
            }
        }
        function CellTemplatesComponent_ng_template_32_a_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r400 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "a", 164), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r400);
                    var item_r392 = core["\u0275\u0275nextContext"]().$implicit;
                    return core["\u0275\u0275resetView"](item_r392.navigateToLocation());
                }), core["\u0275\u0275text"](1), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r401 = core["\u0275\u0275nextContext"](), colWidth_r393 = ctx_r401.colWidth, seeAllColumn_r394 = ctx_r401.seeAllColumn, nextToIconColumn_r395 = ctx_r401.nextToIconColumn, item_r392 = ctx_r401.$implicit, ctx_r396 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("ngStyle", core["\u0275\u0275pureFunction2"](3, _c28, ctx_r396.getWidthFromConfig(colWidth_r393, seeAllColumn_r394, ctx_r396.colName_location, nextToIconColumn_r395, !!item_r392.parentUniqueId && !!item_r392.childIndex), ctx_r396.getWidthFromConfig(colWidth_r393, seeAllColumn_r394, ctx_r396.colName_location, nextToIconColumn_r395, !!item_r392.parentUniqueId && !!item_r392.childIndex))), 
                core["\u0275\u0275attribute"]("title", item_r392.location), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275textInterpolate"](item_r392.location);
            }
        }
        function CellTemplatesComponent_ng_template_32_span_2_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "span", 165), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r402 = core["\u0275\u0275nextContext"](), colWidth_r393 = ctx_r402.colWidth, seeAllColumn_r394 = ctx_r402.seeAllColumn, nextToIconColumn_r395 = ctx_r402.nextToIconColumn, item_r392 = ctx_r402.$implicit, ctx_r397 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("ngStyle", core["\u0275\u0275pureFunction2"](3, _c28, ctx_r397.getWidthFromConfig(colWidth_r393, seeAllColumn_r394, ctx_r397.colName_location, nextToIconColumn_r395, !!item_r392.parentUniqueId && !!item_r392.childIndex), ctx_r397.getWidthFromConfig(colWidth_r393, seeAllColumn_r394, ctx_r397.colName_location, nextToIconColumn_r395, !!item_r392.parentUniqueId && !!item_r392.childIndex))), 
                core["\u0275\u0275attribute"]("title", item_r392.location), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275textInterpolate"](item_r392.location);
            }
        }
        function CellTemplatesComponent_ng_template_32_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementContainerStart"](0, 32), core["\u0275\u0275template"](1, CellTemplatesComponent_ng_template_32_a_1_Template, 2, 6, "a", 162), 
            core["\u0275\u0275template"](2, CellTemplatesComponent_ng_template_32_span_2_Template, 2, 6, "span", 163), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf && (core["\u0275\u0275property"]("ngSwitch", !!ctx.$implicit.navigateToLocation), 
            core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", !0), 
            core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", !1));
        }
        function CellTemplatesComponent_ng_template_34_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "span", 166), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var item_r403 = ctx.$implicit, colWidth_r404 = ctx.colWidth, seeAllColumn_r405 = ctx.seeAllColumn, ctx_r35 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("ngStyle", core["\u0275\u0275pureFunction2"](4, _c28, ctx_r35.getWidthFromConfig(colWidth_r404, seeAllColumn_r405, ctx_r35.colName_sharedTime), ctx_r35.getWidthFromConfig(colWidth_r404, seeAllColumn_r405, ctx_r35.colName_sharedTime))), 
                core["\u0275\u0275attribute"]("data-value", null == item_r403.sharedDate ? null : item_r403.sharedDate.getTime())("title", item_r403.sharedDateLocaleString || "\u2014"), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate1"]("", item_r403.sharedDateLocaleString, " ");
            }
        }
        function CellTemplatesComponent_ng_template_36_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "span", 167), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var item_r406 = ctx.$implicit, colWidth_r407 = ctx.colWidth, seeAllColumn_r408 = ctx.seeAllColumn, ctx_r37 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("pbiTooltip", item_r406.description)("ngStyle", core["\u0275\u0275pureFunction2"](3, _c28, ctx_r37.getWidthFromConfig(colWidth_r407, seeAllColumn_r408, ctx_r37.colName_description), ctx_r37.getWidthFromConfig(colWidth_r407, seeAllColumn_r408, ctx_r37.colName_description))), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate1"](" ", item_r406.description, " ");
            }
        }
        function CellTemplatesComponent_ng_template_38_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "span", 168), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var item_r409 = ctx.$implicit, colWidth_r410 = ctx.colWidth, ctx_r39 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("ngStyle", core["\u0275\u0275pureFunction2"](3, _c28, colWidth_r410 && colWidth_r410[ctx_r39.colName_organization] + "px", colWidth_r410 && colWidth_r410[ctx_r39.colName_organization] + "px")), 
                core["\u0275\u0275attribute"]("title", item_r409.organization), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275textInterpolate"](item_r409.organization);
            }
        }
        function CellTemplatesComponent_ng_template_40_span_2_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementStart"](0, "span"), core["\u0275\u0275text"](1), 
            core["\u0275\u0275pipe"](2, "localize"), core["\u0275\u0275elementEnd"]()), 2 & rf && (core["\u0275\u0275advance"](1), 
            core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](2, 1, "NavigationPane_Workspaces"), " "));
        }
        function CellTemplatesComponent_ng_template_40_ng_container_3_trident_domain_link_1_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "trident-domain-link", 171), 2 & rf) {
                var item_r411 = core["\u0275\u0275nextContext"](2).$implicit;
                core["\u0275\u0275property"]("workspaceName", item_r411.location)("dataDomainArtifactInfo", item_r411.domainArtifactInfo)("appearance", "strong");
            }
        }
        function CellTemplatesComponent_ng_template_40_ng_container_3_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, CellTemplatesComponent_ng_template_40_ng_container_3_trident_domain_link_1_Template, 1, 3, "trident-domain-link", 170), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var item_r411 = core["\u0275\u0275nextContext"]().$implicit;
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", item_r411.location);
            }
        }
        function CellTemplatesComponent_ng_template_40_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 169), core["\u0275\u0275elementContainerStart"](1, 32), 
            core["\u0275\u0275template"](2, CellTemplatesComponent_ng_template_40_span_2_Template, 3, 3, "span", 47), 
            core["\u0275\u0275template"](3, CellTemplatesComponent_ng_template_40_ng_container_3_Template, 2, 1, "ng-container", 109), 
            core["\u0275\u0275elementContainerEnd"](), core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var item_r411 = ctx.$implicit, colWidth_r412 = ctx.colWidth, seeAllColumn_r413 = ctx.seeAllColumn, ctx_r41 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("ngStyle", core["\u0275\u0275pureFunction2"](3, _c28, ctx_r41.getWidthFromConfig(colWidth_r412, seeAllColumn_r413, ctx_r41.colName_domainsWorkspacePath), ctx_r41.getWidthFromConfig(colWidth_r412, seeAllColumn_r413, ctx_r41.colName_domainsWorkspacePath))), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitch", item_r411.type), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", "workspace");
            }
        }
        var cell_templates_component_commonGlobals = window, CellTemplatesComponent = function() {
            function CellTemplatesComponent(activatedRoute, dataflowHelpersService, dialogService, featureSwitchService, localizationService, navigateToSubfolderService, router, store, shellCapabilities, hostContextClickHandlerService) {
                this.activatedRoute = activatedRoute, this.dataflowHelpersService = dataflowHelpersService, 
                this.dialogService = dialogService, this.featureSwitchService = featureSwitchService, 
                this.localizationService = localizationService, this.navigateToSubfolderService = navigateToSubfolderService, 
                this.router = router, this.store = store, this.shellCapabilities = shellCapabilities, 
                this.hostContextClickHandlerService = hostContextClickHandlerService, this.initialized = new core.EventEmitter, 
                this.onNavigation = new core.EventEmitter, this.onFavoriteToggle = new core.EventEmitter, 
                this.onQuickAction = new core.EventEmitter, this.onMenuAction = new core.EventEmitter, 
                this.onContextMenuAction = new core.EventEmitter, this.onContextMenuOpen = new core.EventEmitter, 
                this.isArtifactDatamartType = isArtifactDatamartType, this.actionSourceDatamartWorkspaceList = 10, 
                this.actionSourceDatasetWorkspaceList = 3, this.actionSourceDataWarehouseWorkspaceList = 12, 
                this.actionSourceLakeWarehouseWorkspaceList = 11, this.colName_name = FluentColumnName.Name, 
                this.colName_type = FluentColumnName.Type, this.colName_gitStatus = FluentColumnName.GitStatus, 
                this.colName_sensitivity = FluentColumnName.Sensitivity, this.colName_owner = FluentColumnName.Owner, 
                this.colName_score = FluentColumnName.Score, this.colName_lastRefresh = FluentColumnName.LastRefresh, 
                this.colName_nextRefresh = FluentColumnName.NextRefresh, this.colName_endorsement = FluentColumnName.Endorsement, 
                this.colName_lastAccess = FluentColumnName.LastAccess, this.colName_lastActivity = FluentColumnName.LastActivity, 
                this.colName_hiddenTime = FluentColumnName.HiddenTime, this.colName_relation = FluentColumnName.Relation, 
                this.colName_location = FluentColumnName.Location, this.colName_sharedTime = FluentColumnName.SharedTime, 
                this.colName_sharedBy = FluentColumnName.SharedBy, this.colName_description = FluentColumnName.Description, 
                this.colName_organization = FluentColumnName.Organization, this.colName_domainsWorkspacePath = FluentColumnName.DomainsWorkspacePath, 
                this.isTridentArtifactType = isTridentArtifactType, this.reportArtifactType = 2, 
                this.destroy$ = new Subject.xQ, this.featureSwitches$ = this.featureSwitchService.featureSwitches$, 
                this.isTridentUI$ = (0, observable_of.of)(cell_templates_component_commonGlobals.isTrident);
            }
            return CellTemplatesComponent.prototype.ngOnInit = function() {
                var _this = this;
                this.isEditableAppWorkspace$ = this.store.select(group_content_pack_selector.Ik), 
                this.isEditableWorkspace$ = this.store.select(isSelectedWorkspaceEditable), this.isInformationProtectionEnabled$ = this.featureSwitches$.pipe((0, 
                skipWhile.n)(function(switches) {
                    return !switches;
                }), (0, takeUntil.R)(this.destroy$), (0, operators_map.U)(function(switches) {
                    return !!switches.eimInformationProtectionUI;
                })), this.isParentChildEnabled$ = this.featureSwitches$.pipe((0, skipWhile.n)(function(switches) {
                    return !switches;
                }), (0, takeUntil.R)(this.destroy$), (0, operators_map.U)(function(switches) {
                    return !!switches.parentChildInWorkspace && cell_templates_component_commonGlobals.isTrident;
                })), this.openArtifactsInNewTab$ = (0, from.D)(this.shellCapabilities.ensureCapabilitiesInitialized()).pipe((0, 
                operators_map.U)(function(shellCapabilities) {
                    return shellCapabilities.getCapabilities().openArtifactsInNewTab;
                })), this.store.select(group_selector.S6).pipe((0, takeUntil.R)(this.destroy$)).subscribe(function(folder) {
                    _this.folder = folder;
                }), this.enableTags = cell_templates_component_commonGlobals.isTrident && this.featureSwitchService.featureSwitches.taggingMain_HEAD_tagging_FE && "WorkspaceList" === this.callingContext;
            }, CellTemplatesComponent.prototype.ngAfterViewInit = function() {
                this.initialized.emit();
            }, CellTemplatesComponent.prototype.ngOnDestroy = function() {
                this.destroy$.next(), this.destroy$.complete();
            }, CellTemplatesComponent.prototype.uniqueItemKey = function(item) {
                return getUniqueIdForFluentListItem(item);
            }, CellTemplatesComponent.prototype.shouldShowFavoriteStar = function(type) {
                return !!isTridentArtifactType(type) || 5 === type || 1 === type || 2 === type || 6 === type || 10 === type || isArtifactDatamartType(type);
            }, CellTemplatesComponent.prototype.getFavoriteType = function(type) {
                if (isTridentArtifactType(type)) return contracts.nW.Artifact;
                switch (type) {
                  case 5:
                    return contracts.nW.App;

                  case 1:
                    return contracts.nW.Dashboard;

                  case 2:
                  case 10:
                    return contracts.nW.Report;

                  case 6:
                    return contracts.nW.RdlReport;

                  case 17:
                  case 14:
                  case 15:
                  case 11:
                    return contracts.nW.Datamart;

                  default:
                    return void VisualsCommon_debug.fF.assertFail("invalid artifact type: ".concat(type));
                }
            }, CellTemplatesComponent.prototype.navigatedToArtifact = function(item) {
                this.hostContextClickHandlerService && this.hostContextClickHandlerService.handleClick(item), 
                this.onNavigation.emit(item);
            }, CellTemplatesComponent.prototype.navigateToSubfolder = function(subfolderId) {
                this.navigateToSubfolderService.navigate({
                    subfolderPath: {
                        subfolderId
                    },
                    logTelemetry: !0,
                    entryPoint: subfolder_src.X3.rowClick
                });
            }, CellTemplatesComponent.prototype.navigateToDataflow = function(event, item) {
                switch (event.button) {
                  case 0:
                    !event.ctrlKey || event.altKey || event.shiftKey ? this.navigateToDataflowInSameTab(item) : this.navigateToDataflowInNewTab(event, item);
                    break;

                  case 1:
                    this.navigateToDataflowInNewTab(event, item);
                }
            }, CellTemplatesComponent.prototype.navigateToDataflowGen1 = function(event, item) {
                var _a;
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return [ 4, this.dataflowHelpersService.checkCapacityAndShowDialog(null !== (_a = this.folder.workspaceId) && void 0 !== _a ? _a : this.folder.objectId, this.localizationService.get("Error"), this.localizationService.get("Dataflow_DataflowEdit_CapacityThrottled"), this.localizationService.get("Dataflow_DataflowEdit_CapacityPaused")) ];

                          case 1:
                            return "Failure" === _b.sent().kind ? [ 2, Promise.resolve() ] : (this.navigateToDataflow(event, item), 
                            [ 2 ]);
                        }
                    });
                });
            }, CellTemplatesComponent.prototype.navigateToDataflowGen2 = function(event, item) {
                var _a, _b, _c;
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var dataflowOwnerUserObjectId, currentSessionUserObjectId;
                    return (0, tslib_es6.__generator)(this, function(_d) {
                        return dataflowOwnerUserObjectId = void 0 !== (null === (_a = null == item ? void 0 : item.ownerUser) || void 0 === _a ? void 0 : _a.oid) && "string" == typeof (null === (_b = null == item ? void 0 : item.ownerUser) || void 0 === _b ? void 0 : _b.oid) ? null === (_c = null == item ? void 0 : item.ownerUser) || void 0 === _c ? void 0 : _c.oid : void 0, 
                        currentSessionUserObjectId = (0, userInfo.bG)().uoid, (0, Utility_Utility.vr)(dataflowOwnerUserObjectId, currentSessionUserObjectId) ? (this.navigateToDataflow(event, item), 
                        [ 2 ]) : (this.dialogService.showSimpleDialog(this.localizationService.get("CdsaModel_CantEditTitle"), this.localizationService.get("Dataflow_Gen2_CantEditMessage")), 
                        [ 2 ]);
                    });
                });
            }, CellTemplatesComponent.prototype.navigateToDataflowInNewTab = function(event, dataflowItem) {
                event.preventDefault();
                var url = this.router.serializeUrl(this.router.createUrlTree([ dataflowItem.routePath ], {
                    queryParams: this.activatedRoute.snapshot.queryParams
                }));
                window.open(url, "_blank");
            }, CellTemplatesComponent.prototype.navigateToDataflowInSameTab = function(dataflowItem) {
                this.router.navigate([ dataflowItem.routePath ], {
                    queryParams: this.activatedRoute.snapshot.queryParams,
                    state: {
                        openArtifactFrom: "listLinkClick"
                    }
                });
            }, CellTemplatesComponent.prototype.getCapacitySkuTier = function(item) {
                return item.capacitySkuTier ? item.capacitySkuTier : item.sharedFromEnterpriseCapacitySkuTier ? item.sharedFromEnterpriseCapacitySkuTier : void 0;
            }, CellTemplatesComponent.prototype.hasCapacity = function(item) {
                var capacitySkuTier = this.getCapacitySkuTier(item);
                return capacitySkuTier && (1 === capacitySkuTier || 3 === capacitySkuTier || 2 === capacitySkuTier);
            }, CellTemplatesComponent.prototype.hasFabricCapacity = function(item) {
                var capacitySkuTier = this.getCapacitySkuTier(item);
                return capacitySkuTier && (8 === capacitySkuTier || 9 === capacitySkuTier || 7 === capacitySkuTier);
            }, CellTemplatesComponent.prototype.hasPpuCapacity = function(item) {
                var capacitySkuTier = this.getCapacitySkuTier(item);
                return capacitySkuTier && 4 === capacitySkuTier;
            }, CellTemplatesComponent.prototype.setCurrentMenuItemId = function(uniqueId, type) {
                this.currentMenuItemId = generateUniqueIdForFluentListItem(type, uniqueId);
            }, CellTemplatesComponent.prototype.emitActionMenuOpen = function(items, item, type) {
                this.onContextMenuOpen.emit({
                    menuItems: items,
                    type,
                    item
                });
            }, CellTemplatesComponent.prototype.emitContextMenuExecution = function(menuItem, item, type) {
                this.onContextMenuAction.emit({
                    menuItem,
                    type,
                    item
                });
            }, CellTemplatesComponent.prototype.datamartActionClicked = function(datamartActionStatus, item) {
                this.onMenuAction.emit({
                    artifactActionStatus: datamartActionStatus,
                    item
                });
            }, CellTemplatesComponent.prototype.datasetActionClicked = function(datasetActionStatus, item) {
                this.onMenuAction.emit({
                    artifactActionStatus: datasetActionStatus,
                    item
                });
            }, CellTemplatesComponent.prototype.getWidthFromConfig = function(colWidth, seeAllColumn, colName, nextToIconColumn, isChild) {
                var width = colName === seeAllColumn ? colWidth[colName] + 55 : colWidth[colName];
                return this.featureSwitchService.featureSwitches.parentChildInWorkspace && cell_templates_component_commonGlobals.isTrident && isChild && nextToIconColumn === colName ? width - 48 + "px" : width + "px";
            }, CellTemplatesComponent.prototype.getTridentArtifactIconPreset = function(item) {
                return "workspace" === toTridentArtifactType(item.type) && item.objectId === constants.fm1 ? src.tB.MyWorkspace24 : src.tB.Size24;
            }, CellTemplatesComponent.prototype.onQuickActionClick = function(quickItemAction, item) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        return 2 === quickItemAction.actionType && this.onFavoriteToggle.emit({
                            item,
                            type: this.getFavoriteType(item.type)
                        }), this.onQuickAction.emit({
                            item,
                            actionType: null == quickItemAction ? void 0 : quickItemAction.text
                        }), quickItemAction.execute(), [ 2 ];
                    });
                });
            }, CellTemplatesComponent.prototype.getChildIndicator = function(item) {
                return "First" === item.childIndex ? "first_indicator" : "Middle" === item.childIndex ? "middle_indicator" : "last_indicator";
            }, CellTemplatesComponent.\u0275fac = function(t) {
                return new (t || CellTemplatesComponent)(core["\u0275\u0275directiveInject"](fesm2022_router.gz), core["\u0275\u0275directiveInject"](DataflowHelpersService), core["\u0275\u0275directiveInject"](dialog_service.x), core["\u0275\u0275directiveInject"](feature_switch_service.vZ), core["\u0275\u0275directiveInject"](localization_service.o), core["\u0275\u0275directiveInject"](subfolder_src.pi), core["\u0275\u0275directiveInject"](fesm2022_router.F0), core["\u0275\u0275directiveInject"](ngrx_store.yh), core["\u0275\u0275directiveInject"](ShellCapabilitiesService), core["\u0275\u0275directiveInject"](TridentHostContextClickHandlerServiceToken, 8));
            }, CellTemplatesComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: CellTemplatesComponent,
                selectors: [ [ "cell-templates" ] ],
                viewQuery: function(rf, ctx) {
                    if (1 & rf && (core["\u0275\u0275viewQuery"](cell_templates_component_c0, 5), core["\u0275\u0275viewQuery"](cell_templates_component_c1, 5), 
                    core["\u0275\u0275viewQuery"](cell_templates_component_c2, 5), core["\u0275\u0275viewQuery"](cell_templates_component_c3, 5), 
                    core["\u0275\u0275viewQuery"](cell_templates_component_c4, 5), core["\u0275\u0275viewQuery"](cell_templates_component_c5, 5), 
                    core["\u0275\u0275viewQuery"](cell_templates_component_c6, 5), core["\u0275\u0275viewQuery"](cell_templates_component_c7, 5), 
                    core["\u0275\u0275viewQuery"](cell_templates_component_c8, 5), core["\u0275\u0275viewQuery"](_c9, 5), 
                    core["\u0275\u0275viewQuery"](_c10, 5), core["\u0275\u0275viewQuery"](_c11, 5), 
                    core["\u0275\u0275viewQuery"](_c12, 5), core["\u0275\u0275viewQuery"](_c13, 5), 
                    core["\u0275\u0275viewQuery"](_c14, 5), core["\u0275\u0275viewQuery"](_c15, 5), 
                    core["\u0275\u0275viewQuery"](_c16, 5), core["\u0275\u0275viewQuery"](_c17, 5), 
                    core["\u0275\u0275viewQuery"](_c18, 5), core["\u0275\u0275viewQuery"](_c19, 5)), 
                    2 & rf) {
                        var _t = void 0;
                        core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx.iconCell = _t.first), 
                        core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx.nameCell = _t.first), 
                        core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx.gitStatusCell = _t.first), 
                        core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx.typeCell = _t.first), 
                        core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx.sensitivityCell = _t.first), 
                        core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx.ownerCell = _t.first), 
                        core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx.scoreCell = _t.first), 
                        core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx.lastRefreshCell = _t.first), 
                        core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx.nextRefreshCell = _t.first), 
                        core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx.endorsementCell = _t.first), 
                        core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx.lastAccessCell = _t.first), 
                        core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx.lastActivityCell = _t.first), 
                        core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx.hiddenTime = _t.first), 
                        core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx.relationCell = _t.first), 
                        core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx.locationCell = _t.first), 
                        core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx.sharedTimeCell = _t.first), 
                        core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx.descriptionCell = _t.first), 
                        core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx.organizationCell = _t.first), 
                        core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx.sharedByCell = _t.first), 
                        core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx.domainsWorkspacePathCell = _t.first);
                    }
                },
                inputs: {
                    focusedRowId$: "focusedRowId$",
                    hoveredRowId$: "hoveredRowId$",
                    showCapacityIcon: "showCapacityIcon",
                    callingContext: "callingContext",
                    isTridentUI$: "isTridentUI$"
                },
                outputs: {
                    initialized: "initialized",
                    onNavigation: "onNavigation",
                    onFavoriteToggle: "onFavoriteToggle",
                    onQuickAction: "onQuickAction",
                    onMenuAction: "onMenuAction",
                    onContextMenuAction: "onContextMenuAction",
                    onContextMenuOpen: "onContextMenuOpen"
                },
                decls: 42,
                vars: 0,
                consts: [ [ "iconCell", "" ], [ "nameCell", "" ], [ "gitStatusCell", "" ], [ "typeCell", "" ], [ "sensitivityCell", "" ], [ "ownerCell", "" ], [ "scoreCell", "" ], [ "sharedByCell", "" ], [ "lastRefreshCell", "" ], [ "nextRefreshCell", "" ], [ "endorsementCell", "" ], [ "noneEndorsementTemplate", "" ], [ "lastAccessCell", "" ], [ "lastActivityCell", "" ], [ "hiddenTime", "" ], [ "relationCell", "" ], [ "locationCell", "" ], [ "sharedTimeCell", "" ], [ "descriptionCell", "" ], [ "organizationCell", "" ], [ "domainsWorkspacePathCell", "" ], [ "class", "col col-icon-child-indicator", "data-testid", "fluentListCell.icon.childIndicator", 4, "ngIf" ], [ "data-testid", "fluentListCell.icon", 1, "col", "col-icon" ], [ 4, "ngIf", "ngIfElse" ], [ "artifactIcon", "" ], [ "data-testid", "fluentListCell.icon.childIndicator", 1, "col", "col-icon-child-indicator" ], [ "tri-svg-icon-48", "", 3, "sprite", "name" ], [ "tri-svg-icon-24", "", "name", "restricted_report_24_item", "sprite", "artifact-colored-icons", "triTooltipPosition", "before", 1, "tri-icon", "restricted-report", 3, "triTooltip" ], [ 4, "ngIf" ], [ "class", "tri-artifact-icon-container-24", 4, "ngIf" ], [ 3, "ngSwitch", 4, "ngIf", "ngIfElse" ], [ "datamartIcon", "" ], [ 3, "ngSwitch" ], [ 3, "src", "pbiTooltip", 4, "ngSwitchCase" ], [ "class", "glyph-small", "pbiTooltipPosition", "before", "aria-hidden", "false", 3, "pbiTooltip", "fontIcon", "ngStyle", 4, "ngSwitchCase" ], [ 3, "src", "pbiTooltip" ], [ "pbiTooltipPosition", "before", "aria-hidden", "false", 1, "glyph-small", 3, "pbiTooltip", "fontIcon", "ngStyle" ], [ 1, "datamartIcon" ], [ "pbiTooltipPosition", "before", "aria-hidden", "false", 3, "name", "pbiTooltip" ], [ 1, "tri-artifact-icon-container-24" ], [ 1, "tri-icon", 3, "artifactType", "size", "preset", "pbiTooltip" ], [ "ng-non-bindable", "", "data-testid", "fluentListCell.name", 1, "col", "col-name", 3, "ngClass", "ngStyle" ], [ "class", "eyelash", "fontIcon", "pbi-glyph-glimmer", 4, "ngIf" ], [ "class", "glimmer", "tri-svg-icon-16", "", "name", "new_16_regular", "sprite", "fluentui-icons", 4, "ngIf" ], [ "class", "tri-svg-icon", "role", "img", "pbiTooltipPosition", "before", 3, "sprite", "name", "aria-label", "pbiTooltip", 4, "ngIf" ], [ 1, "name-container" ], [ 3, "ngSwitch", 4, "ngSwitchCase" ], [ 4, "ngSwitchCase" ], [ 3, "ngSwitch", 4, "ngSwitchDefault" ], [ "class", "dlp-icon", 3, "hasDlpPolicyTip", "restrictions", 4, "ngIf" ], [ 3, "viewModel", "status", 4, "ngIf" ], [ "class", "favorite-star", "cdkMonitorSubtreeFocus", "", "actionSource", "FluentList", 3, "ngClass", "item", "type", "tridentStyle", "onFavoriteToggle", 4, "ngIf" ], [ 3, "ngSwitch", 4, "ngIf" ], [ "fontIcon", "pbi-glyph-glimmer", 1, "eyelash" ], [ "tri-svg-icon-16", "", "name", "new_16_regular", "sprite", "fluentui-icons", 1, "glimmer" ], [ "role", "img", "pbiTooltipPosition", "before", 1, "tri-svg-icon", 3, "sprite", "name", "aria-label", "pbiTooltip" ], [ "dataflowGen2Icons", "" ], [ "cdkMonitorElementFocus", "", "rel", "noopener noreferrer", 1, "pointer_cursor", "name", "dataflow-gen2-name", "trimmedTextWithEllipsis", 3, "target", "pbiTooltip", "mouseup" ], [ 4, "ngTemplateOutlet", "ngTemplateOutletContext" ], [ "cdkMonitorElementFocus", "", "data-testid", "item-name", "rel", "noopener noreferrer", "queryParamsHandling", "merge", 1, "name", "dataflow-gen2-name", "trimmedTextWithEllipsis", 3, "href", "target", "pbiTooltip" ], [ "cdkMonitorElementFocus", "", 1, "name", "dataflow-gen2-name", "trimmedTextWithEllipsis", 3, "pbiTooltip" ], [ "class", "gift-open-warning-icon", "tri-svg-icon-16", "", 3, "triTooltip", "name", "sprite", 4, "ngIf" ], [ "class", "glyphicon pbi-glyph-diamond", 3, "pbiTooltip", 4, "ngIf" ], [ "class", "glyphicon pbi-glyph-diamonduser", 3, "pbiTooltip", 4, "ngIf" ], [ "class", "glyphicon pbi-glyph-warning glyph-warning-color", 3, "pbiTooltip", 4, "ngIf" ], [ 1, "dataflow-gen2-icon", 3, "viewModel" ], [ "tri-svg-icon-16", "", 1, "gift-open-warning-icon", 3, "triTooltip", "name", "sprite" ], [ 1, "glyphicon", "pbi-glyph-diamond", 3, "pbiTooltip" ], [ 1, "glyphicon", "pbi-glyph-diamonduser", 3, "pbiTooltip" ], [ 1, "glyphicon", "pbi-glyph-warning", "glyph-warning-color", 3, "pbiTooltip" ], [ "data-testid", "item-name", "cdkMonitorElementFocus", "", "class", "name trimmedTextWithEllipsis", "rel", "noopener noreferrer", "queryParamsHandling", "merge", 3, "ngStyle", "pbiTooltip", "mouseup", 4, "ngSwitchCase" ], [ "icons", "" ], [ "data-testid", "item-name", "cdkMonitorElementFocus", "", "rel", "noopener noreferrer", "queryParamsHandling", "merge", 1, "name", "trimmedTextWithEllipsis", 3, "ngStyle", "pbiTooltip", "mouseup" ], [ "data-testid", "item-name", "cdkMonitorElementFocus", "", "class", "name trimmedTextWithEllipsis", "rel", "noopener noreferrer", "queryParamsHandling", "merge", 3, "href", "target", "pbiTooltip", 4, "ngSwitchCase" ], [ "cdkMonitorElementFocus", "", "class", "name trimmedTextWithEllipsis", 3, "pbiTooltip", 4, "ngSwitchCase" ], [ "data-testid", "item-name", "cdkMonitorElementFocus", "", "rel", "noopener noreferrer", "queryParamsHandling", "merge", 1, "name", "trimmedTextWithEllipsis", 3, "href", "target", "pbiTooltip" ], [ "cdkMonitorElementFocus", "", 1, "name", "trimmedTextWithEllipsis", 3, "pbiTooltip" ], [ "class", "cdk-visually-hidden", 4, "ngIf" ], [ "class", "glyphicon pbi-glyph-warning glyph-warning-color", "data-testid", "glyph-warning-color", 3, "pbiTooltip", 4, "ngIf" ], [ 1, "cdk-visually-hidden" ], [ "data-testid", "glyph-warning-color", 1, "glyphicon", "pbi-glyph-warning", "glyph-warning-color", 3, "pbiTooltip" ], [ 1, "glyphicon", "pbi-glyph-navigate-external-inline", "glyph-small", 3, "pbiTooltip" ], [ "cdkMonitorElementFocus", "", "tabindex", "0", "rel", "noopener noreferrer", "queryParamsHandling", "merge", 1, "name", "trimmedTextWithEllipsis", "pointer_cursor", 3, "ngStyle", "routerLink", "state", "target", "pbiTooltip", "keydown.enter", "click" ], [ "data-testid", "item-name", "cdkMonitorElementFocus", "", "class", "name trimmedTextWithEllipsis", "tabindex", "0", "rel", "noopener noreferrer", "queryParamsHandling", "merge", 3, "ngStyle", "routerLink", "state", "target", "pbiTooltip", "click", 4, "ngSwitchCase" ], [ "data-testid", "item-name", "cdkMonitorElementFocus", "", "tabindex", "0", "rel", "noopener noreferrer", "queryParamsHandling", "merge", 1, "name", "trimmedTextWithEllipsis", 3, "ngStyle", "routerLink", "state", "target", "pbiTooltip", "click" ], [ "data-testid", "item-name", "cdkMonitorElementFocus", "", "class", "name trimmedTextWithEllipsis", "tabindex", "0", "rel", "noopener noreferrer", "queryParamsHandling", "merge", 3, "href", "target", "pbiTooltip", "click", 4, "ngSwitchCase" ], [ "cdkMonitorElementFocus", "", "class", "name trimmedTextWithEllipsis", "tabindex", "0", 3, "pbiTooltip", 4, "ngSwitchCase" ], [ "data-testid", "item-name", "cdkMonitorElementFocus", "", "tabindex", "0", "rel", "noopener noreferrer", "queryParamsHandling", "merge", 1, "name", "trimmedTextWithEllipsis", 3, "href", "target", "pbiTooltip", "click" ], [ "cdkMonitorElementFocus", "", "tabindex", "0", 1, "name", "trimmedTextWithEllipsis", 3, "pbiTooltip" ], [ 3, "tags" ], [ 1, "dlp-icon", 3, "hasDlpPolicyTip", "restrictions" ], [ 3, "viewModel", "status" ], [ "cdkMonitorElementFocus", "", "class", "quick-action-button", 3, "disabled", "title", "ngClass", "click", 4, "ngFor", "ngForOf" ], [ "cdkMonitorElementFocus", "", 1, "quick-action-button", 3, "disabled", "title", "ngClass", "click" ], [ "actionIcon", "" ], [ "triActionIcon", "" ], [ 1, "glyph-small", 3, "fontIcon" ], [ 3, "sprite", "name" ], [ "cdkMonitorSubtreeFocus", "", "actionSource", "FluentList", 1, "favorite-star", 3, "ngClass", "item", "type", "tridentStyle", "onFavoriteToggle" ], [ "triMenuIcon", "more_horizontal_16_regular", "localizeTooltip", "Options_Menu", "class", "context-menu", "data-testid", "dashboard-options-menu-btn", 3, "currentMenuItemId", "ariaLabel", "availableActions", "callingContext", "dashboard", "currentMenuItemIdChange", "onMenuOpenedEvent", "executionRun", 4, "ngSwitchCase" ], [ "triMenuIcon", "more_horizontal_16_regular", "class", "context-menu", "data-testid", "report-options-menu-btn", 3, "currentMenuItemId", "availableActions", "ariaLabel", "callingContext", "report", "currentMenuItemIdChange", "onMenuOpenedEvent", "executionRun", 4, "ngSwitchCase" ], [ "triMenuIcon", "more_horizontal_16_regular", "localizeTooltip", "Options_Menu", "class", "context-menu", "data-testid", "dataset-options-menu-btn", 3, "currentMenuItemId", "ariaLabel", "datasetItem", "container", "containerByAction", "actionSource", "currentMenuItemIdChange", "onMenuOpenedEvent", "datasetActionClicked", 4, "ngSwitchCase" ], [ "triMenuIcon", "more_horizontal_16_regular", "localizeTooltip", "Options_Menu", "class", "context-menu", 3, "currentMenuItemId", "availableActions", "ariaLabel", "app", "callingContext", "currentMenuItemIdChange", "onMenuOpenedEvent", "executionRun", 4, "ngSwitchCase" ], [ "triMenuIcon", "more_horizontal_16_regular", "class", "context-menu", 3, "currentMenuItemId", "availableActions", "ariaLabel", "report", "callingContext", "currentMenuItemIdChange", "onMenuOpenedEvent", "executionRun", 4, "ngSwitchCase" ], [ "triMenuIcon", "more_horizontal_16_regular", "localizeTooltip", "Options_Menu", "class", "context-menu", 3, "currentMenuItemId", "ariaLabel", "availableActions", "callingContext", "workspace", "currentMenuItemIdChange", "onMenuOpenedEvent", "executionRun", 4, "ngSwitchCase" ], [ "triMenuIcon", "more_horizontal_16_regular", "localizeTooltip", "Options_Menu", "class", "context-menu", 3, "currentMenuItemId", "ariaLabel", "cdsaModel", "currentMenuItemIdChange", "onMenuOpenedEvent", 4, "ngSwitchCase" ], [ "triMenuIcon", "more_horizontal_16_regular", "localizeTooltip", "Options_Menu", "class", "context-menu", 3, "currentMenuItemId", "ariaLabel", "availableActions", "scorecard", "currentMenuItemIdChange", "onMenuOpenedEvent", 4, "ngSwitchCase" ], [ "triMenuIcon", "more_horizontal_16_regular", "localizeTooltip", "Options_Menu", "class", "context-menu", 3, "currentMenuItemId", "ariaLabel", "datamart", "container", "containerByAction", "actionSource", "currentMenuItemIdChange", "onMenuOpenedEvent", "datamartActionClicked", 4, "ngSwitchCase" ], [ "menuIcon", "more_horizontal_16_regular", "localizeTooltip", "Options_Menu", "data-testid", "options-menu", "class", "context-menu", 3, "currentMenuItemId", "ariaLabel", "subfolder", "container", "containerByAction", "currentMenuItemIdChange", "onMenuOpenedEvent", "subfolderActionClicked", 4, "ngSwitchCase" ], [ 4, "ngSwitchDefault" ], [ "triMenuIcon", "more_horizontal_16_regular", "localizeTooltip", "Options_Menu", "data-testid", "dashboard-options-menu-btn", 1, "context-menu", 3, "currentMenuItemId", "ariaLabel", "availableActions", "callingContext", "dashboard", "currentMenuItemIdChange", "onMenuOpenedEvent", "executionRun" ], [ "triMenuIcon", "more_horizontal_16_regular", "data-testid", "report-options-menu-btn", 1, "context-menu", 3, "currentMenuItemId", "availableActions", "ariaLabel", "callingContext", "report", "currentMenuItemIdChange", "onMenuOpenedEvent", "executionRun" ], [ "triMenuIcon", "more_horizontal_16_regular", "localizeTooltip", "Options_Menu", "data-testid", "dataset-options-menu-btn", 1, "context-menu", 3, "currentMenuItemId", "ariaLabel", "datasetItem", "container", "containerByAction", "actionSource", "currentMenuItemIdChange", "onMenuOpenedEvent", "datasetActionClicked" ], [ "triMenuIcon", "more_horizontal_16_regular", "localizeTooltip", "Options_Menu", "class", "context-menu", "data-testid", "workbook-options-menu-btn", 3, "availableActions", "currentMenuItemId", "ariaLabel", "callingContext", "workbook", "currentMenuItemIdChange", "onMenuOpenedEvent", "executionRun", 4, "ngIf" ], [ "triMenuIcon", "more_horizontal_16_regular", "localizeTooltip", "Options_Menu", "data-testid", "workbook-options-menu-btn", 1, "context-menu", 3, "availableActions", "currentMenuItemId", "ariaLabel", "callingContext", "workbook", "currentMenuItemIdChange", "onMenuOpenedEvent", "executionRun" ], [ "triMenuIcon", "more_horizontal_16_regular", "localizeTooltip", "Options_Menu", 1, "context-menu", 3, "currentMenuItemId", "availableActions", "ariaLabel", "app", "callingContext", "currentMenuItemIdChange", "onMenuOpenedEvent", "executionRun" ], [ "triMenuIcon", "more_horizontal_16_regular", 1, "context-menu", 3, "currentMenuItemId", "availableActions", "ariaLabel", "report", "callingContext", "currentMenuItemIdChange", "onMenuOpenedEvent", "executionRun" ], [ "triMenuIcon", "more_horizontal_16_regular", "localizeTooltip", "Options_Menu", 1, "context-menu", 3, "currentMenuItemId", "ariaLabel", "availableActions", "callingContext", "workspace", "currentMenuItemIdChange", "onMenuOpenedEvent", "executionRun" ], [ "triMenuIcon", "more_horizontal_16_regular", "localizeTooltip", "Options_Menu", 1, "context-menu", 3, "currentMenuItemId", "ariaLabel", "cdsaModel", "currentMenuItemIdChange", "onMenuOpenedEvent" ], [ "triMenuIcon", "more_horizontal_16_regular", "localizeTooltip", "Options_Menu", 1, "context-menu", 3, "currentMenuItemId", "ariaLabel", "availableActions", "scorecard", "currentMenuItemIdChange", "onMenuOpenedEvent" ], [ "triMenuIcon", "more_horizontal_16_regular", "localizeTooltip", "Options_Menu", 1, "context-menu", 3, "currentMenuItemId", "ariaLabel", "datamart", "container", "containerByAction", "actionSource", "currentMenuItemIdChange", "onMenuOpenedEvent", "datamartActionClicked" ], [ "menuIcon", "more_horizontal_16_regular", "localizeTooltip", "Options_Menu", "data-testid", "options-menu", 1, "context-menu", 3, "currentMenuItemId", "ariaLabel", "subfolder", "container", "containerByAction", "currentMenuItemIdChange", "onMenuOpenedEvent", "subfolderActionClicked" ], [ "triMenuIcon", "more_horizontal_16_regular", "localizeTooltip", "Options_Menu", "data-testid", "options-menu", "class", "context-menu", 3, "currentMenuItemId", "ariaLabel", "availableActions", "callingContext", "artifact", "currentMenuItemIdChange", "onMenuOpenedEvent", "executionRun", 4, "ngIf" ], [ "triMenuIcon", "more_horizontal_16_regular", "localizeTooltip", "Options_Menu", "data-testid", "options-menu", 1, "context-menu", 3, "currentMenuItemId", "ariaLabel", "availableActions", "callingContext", "artifact", "currentMenuItemIdChange", "onMenuOpenedEvent", "executionRun" ], [ "cdkMonitorElementFocus", "", "data-testid", "fluentListCell.gitStatus", 1, "col", "col-gitStatus", 3, "ngStyle" ], [ "sameChanges", "" ], [ "sprite", "git-icons", "name", "synced", 4, "ngSwitchCase" ], [ "sprite", "git-icons", "name", "update", 4, "ngSwitchCase" ], [ "sprite", "git-icons", "name", "uncommitted", 4, "ngSwitchCase" ], [ "sprite", "git-icons", "name", "conflict", 4, "ngSwitchCase" ], [ "sprite", "git-icons", "name", "unsupported", 4, "ngSwitchCase" ], [ "sprite", "status-color-icons", "name", "inprogress_20_filled", 4, "ngSwitchCase" ], [ "sprite", "git-icons", "name", "synced" ], [ "sprite", "git-icons", "name", "update" ], [ "sprite", "git-icons", "name", "uncommitted" ], [ "sprite", "git-icons", "name", "conflict" ], [ "sprite", "git-icons", "name", "unsupported" ], [ "sprite", "status-color-icons", "name", "inprogress_20_filled" ], [ "sprite", "git-icons", "name", "same_changes" ], [ 3, "triTooltip", "triTooltipMaxWidth" ], [ "cdkMonitorElementFocus", "", "data-testid", "fluentListCell.type", 1, "col", "col-type", 3, "ngStyle" ], [ 1, "trimmedTextWithEllipsis" ], [ "cdkMonitorElementFocus", "", "class", "col col-sensitivity", "data-testid", "fluentListCell.sensitivity", 3, "ngStyle", 4, "ngIf" ], [ "cdkMonitorElementFocus", "", "data-testid", "fluentListCell.sensitivity", 1, "col", "col-sensitivity", 3, "ngStyle" ], [ 3, "label" ], [ "cdkMonitorElementFocus", "", "data-testid", "fluentListCell.owner", 1, "col", "col-owner", 3, "ngStyle" ], [ "cdkMonitorElementFocus", "", "data-testid", "fluentListCell.score", 1, "col", "col-score", 3, "ngStyle" ], [ "cdkMonitorElementFocus", "", "data-testid", "fluentListCell.sharedby", 1, "col", "col-shared-by", 3, "ngStyle" ], [ "cdkMonitorElementFocus", "", "data-testid", "fluentListCell.lastRefresh", 1, "col", "col-last-refresh", 3, "ngStyle" ], [ "class", "col-status-icons", 3, "viewModel", 4, "ngSwitchCase" ], [ 1, "col-status-icons", 3, "viewModel" ], [ "cdkMonitorElementFocus", "", "data-testid", "fluentListCell.nextRefresh", 1, "col", "col-next-refresh", 3, "ngStyle" ], [ "class", "col-status-icons", 3, "isNextRefresh", "viewModel", 4, "ngSwitchCase" ], [ 1, "col-status-icons", 3, "isNextRefresh", "viewModel" ], [ "cdkMonitorElementFocus", "", "data-testid", "fluentListCell.endorsement", 1, "col", "col-endorsement", 3, "ngStyle" ], [ 3, "stage", 4, "ngIf", "ngIfElse" ], [ 3, "stage" ], [ 3, "title" ], [ "cdkMonitorElementFocus", "", "data-testid", "fluentListCell.lastAccess", 1, "col", "col-last-access", 3, "ngStyle" ], [ "cdkMonitorElementFocus", "", "data-testid", "fluentListCell.lastActivity", 1, "col", "col-last-activity", 3, "ngStyle" ], [ "cdkMonitorElementFocus", "", "data-testid", "fluentListCell.hiddenTime", 1, "col", "col-last-access", 3, "ngStyle" ], [ "cdkMonitorElementFocus", "", "data-testid", "fluentListCell.relation", 1, "col", "col-relation", 3, "ngStyle" ], [ "cdkMonitorElementFocus", "", "class", "col col-location-navigable", "data-testid", "fluentListCell.locationNavigable", 3, "ngStyle", "click", 4, "ngSwitchCase" ], [ "cdkMonitorElementFocus", "", "class", "col col-location", "data-testid", "fluentListCell.location", 3, "ngStyle", 4, "ngSwitchCase" ], [ "cdkMonitorElementFocus", "", "data-testid", "fluentListCell.locationNavigable", 1, "col", "col-location-navigable", 3, "ngStyle", "click" ], [ "cdkMonitorElementFocus", "", "data-testid", "fluentListCell.location", 1, "col", "col-location", 3, "ngStyle" ], [ "cdkMonitorElementFocus", "", "data-testid", "fluentListCell.sharedTime", 1, "col", "col-shared-time", 3, "ngStyle" ], [ "cdkMonitorElementFocus", "", "data-testid", "fluentListCell.description", 1, "col", "col-description", 3, "pbiTooltip", "ngStyle" ], [ "cdkMonitorElementFocus", "", "data-testid", "fluentListCell.organization", 1, "col", "col-organization", 3, "ngStyle" ], [ "data-testid", "fluentListCell.domainsWorkspacePath", 1, "col", 3, "ngStyle" ], [ 3, "workspaceName", "dataDomainArtifactInfo", "appearance", 4, "ngIf" ], [ 3, "workspaceName", "dataDomainArtifactInfo", "appearance" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275template"](0, CellTemplatesComponent_ng_template_0_Template, 6, 5, "ng-template", null, 0, core["\u0275\u0275templateRefExtractor"]), 
                    core["\u0275\u0275template"](2, CellTemplatesComponent_ng_template_2_Template, 19, 27, "ng-template", null, 1, core["\u0275\u0275templateRefExtractor"]), 
                    core["\u0275\u0275template"](4, CellTemplatesComponent_ng_template_4_Template, 5, 8, "ng-template", null, 2, core["\u0275\u0275templateRefExtractor"]), 
                    core["\u0275\u0275template"](6, CellTemplatesComponent_ng_template_6_Template, 3, 7, "ng-template", null, 3, core["\u0275\u0275templateRefExtractor"]), 
                    core["\u0275\u0275template"](8, CellTemplatesComponent_ng_template_8_Template, 2, 3, "ng-template", null, 4, core["\u0275\u0275templateRefExtractor"]), 
                    core["\u0275\u0275template"](10, CellTemplatesComponent_ng_template_10_Template, 2, 6, "ng-template", null, 5, core["\u0275\u0275templateRefExtractor"]), 
                    core["\u0275\u0275template"](12, CellTemplatesComponent_ng_template_12_Template, 2, 6, "ng-template", null, 6, core["\u0275\u0275templateRefExtractor"]), 
                    core["\u0275\u0275template"](14, CellTemplatesComponent_ng_template_14_Template, 2, 6, "ng-template", null, 7, core["\u0275\u0275templateRefExtractor"]), 
                    core["\u0275\u0275template"](16, CellTemplatesComponent_ng_template_16_Template, 9, 13, "ng-template", null, 8, core["\u0275\u0275templateRefExtractor"]), 
                    core["\u0275\u0275template"](18, CellTemplatesComponent_ng_template_18_Template, 8, 12, "ng-template", null, 9, core["\u0275\u0275templateRefExtractor"]), 
                    core["\u0275\u0275template"](20, CellTemplatesComponent_ng_template_20_Template, 2, 7, "ng-template", null, 10, core["\u0275\u0275templateRefExtractor"]), 
                    core["\u0275\u0275template"](22, CellTemplatesComponent_ng_template_22_Template, 3, 3, "ng-template", null, 11, core["\u0275\u0275templateRefExtractor"]), 
                    core["\u0275\u0275template"](24, CellTemplatesComponent_ng_template_24_Template, 2, 7, "ng-template", null, 12, core["\u0275\u0275templateRefExtractor"]), 
                    core["\u0275\u0275template"](26, CellTemplatesComponent_ng_template_26_Template, 2, 7, "ng-template", null, 13, core["\u0275\u0275templateRefExtractor"]), 
                    core["\u0275\u0275template"](28, CellTemplatesComponent_ng_template_28_Template, 2, 6, "ng-template", null, 14, core["\u0275\u0275templateRefExtractor"]), 
                    core["\u0275\u0275template"](30, CellTemplatesComponent_ng_template_30_Template, 2, 6, "ng-template", null, 15, core["\u0275\u0275templateRefExtractor"]), 
                    core["\u0275\u0275template"](32, CellTemplatesComponent_ng_template_32_Template, 3, 3, "ng-template", null, 16, core["\u0275\u0275templateRefExtractor"]), 
                    core["\u0275\u0275template"](34, CellTemplatesComponent_ng_template_34_Template, 2, 7, "ng-template", null, 17, core["\u0275\u0275templateRefExtractor"]), 
                    core["\u0275\u0275template"](36, CellTemplatesComponent_ng_template_36_Template, 2, 6, "ng-template", null, 18, core["\u0275\u0275templateRefExtractor"]), 
                    core["\u0275\u0275template"](38, CellTemplatesComponent_ng_template_38_Template, 2, 6, "ng-template", null, 19, core["\u0275\u0275templateRefExtractor"]), 
                    core["\u0275\u0275template"](40, CellTemplatesComponent_ng_template_40_Template, 4, 6, "ng-template", null, 20, core["\u0275\u0275templateRefExtractor"]));
                },
                dependencies: [ FavoriteStarComponent, common.NgClass, common.NgForOf, common.NgIf, common.NgTemplateOutlet, common.NgStyle, common.NgSwitch, common.NgSwitchCase, common.NgSwitchDefault, endorsement_badge_component.r, icon.Hw, localize_tooltip_directive.r, AppContextMenuComponent, DashboardContextMenuComponent, DatamartContextMenuComponent, DatasetContextMenuComponent, DataflowContextMenuComponent, DataflowGen2ContextMenuComponent, ReportContextMenuComponent, ScorecardContextMenuComponent, SubfolderContextMenuComponent, TridentContextMenuComponent, WorkbookContextMenuComponent, WorkspaceContextMenuComponent, a11y.kH, pbi_office_icon_component.m, information_protection_label_component.$, fesm2022_router.rH, pbi_tooltip_directive.V, DataflowIconContainerComponent, DataflowGen2IconContainerComponent, DatamartIconContainerComponent, DatasetIconContainerModernComponent, TridentArtifactIconComponent, tri_svg_icon_component.M, tri_tooltip_directive.Z, DlpIconComponent, DomainLinksComponent, tags_item_icon_component.B, common.AsyncPipe, localize_pipe.F, localize_format_pipe.j ],
                styles: [ 'fluent-list-table-base[_ngcontent-%COMP%]{display:flex;flex:1 1 auto}[_nghost-%COMP%]{background-color:var(--fluent-theme-white-color, #FFF);display:flex;flex-direction:column}[_nghost-%COMP%]     .mat-icon:before{vertical-align:middle}[tabindex][_ngcontent-%COMP%]{outline:none}.col[_ngcontent-%COMP%]{box-sizing:border-box;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.col.col-checkbox[_ngcontent-%COMP%]{flex:0 0 56px;padding:0 8px}.col.col-icon[_ngcontent-%COMP%]{width:48px;flex:0 0 auto;align-self:center}.col.col-icon-child-indicator[_ngcontent-%COMP%]{width:48px;padding:0!important}.col.col-type[_ngcontent-%COMP%], .col.col-gitStatus[_ngcontent-%COMP%], .col.col-owner[_ngcontent-%COMP%], .col.col-shared-by[_ngcontent-%COMP%], .col.col-relation[_ngcontent-%COMP%], .col.col-last-refresh[_ngcontent-%COMP%], .col.col-next-refresh[_ngcontent-%COMP%], .col.col-endorsement[_ngcontent-%COMP%], .col.col-last-access[_ngcontent-%COMP%], .col.col-last-activity[_ngcontent-%COMP%], .col.col-organization[_ngcontent-%COMP%], .col.col-shared-time[_ngcontent-%COMP%]{min-width:94px;max-width:200px}.col.col-sensitivity[_ngcontent-%COMP%], .col.col-shared-by[_ngcontent-%COMP%], .col.col-location[_ngcontent-%COMP%], .col.col-location-navigable[_ngcontent-%COMP%]{min-width:154px;max-width:200px}.col.col-location-navigable[_ngcontent-%COMP%]{cursor:pointer}.col.col-location-navigable[_ngcontent-%COMP%]:hover{text-decoration:underline}.col.col-name[_ngcontent-%COMP%], .col.col-gitStatus[_ngcontent-%COMP%], .col.col-type[_ngcontent-%COMP%], .col.col-owner[_ngcontent-%COMP%], .col.col-shared-by[_ngcontent-%COMP%], .col.col-relation[_ngcontent-%COMP%], .col.col-organization[_ngcontent-%COMP%], .col.col-last-refresh[_ngcontent-%COMP%], .col.col-next-refresh[_ngcontent-%COMP%], .col.col-endorsement[_ngcontent-%COMP%], .col.col-sensitivity[_ngcontent-%COMP%], .col.col-shared-time[_ngcontent-%COMP%]{flex:0 0 auto}.col.col-name[_ngcontent-%COMP%]{min-width:154px}.col.col-name[_ngcontent-%COMP%]   .name-container[_ngcontent-%COMP%]{flex:1 1 auto;display:flex;gap:8px;overflow:hidden}.col.col-name[_ngcontent-%COMP%]   .pointer_cursor[_ngcontent-%COMP%]{cursor:pointer}.col.col-last-refresh[_ngcontent-%COMP%], .col.col-next-refresh[_ngcontent-%COMP%]{display:flex;overflow:visible;text-overflow:clip;white-space:normal}.col.col-last-refresh   [_nghost-%COMP%]     dataset-icon-container-modern .warning, .col.col-next-refresh   [_nghost-%COMP%]     dataset-icon-container-modern .warning{color:var(--fluent-theme-error-dark-alt-color, #D83B01)}.col.col-last-refresh   [_nghost-%COMP%]     dataflow-icon-container button.pbi-glyph-warning, .col.col-next-refresh   [_nghost-%COMP%]     dataflow-icon-container button.pbi-glyph-warning, .col.col-last-refresh   [_nghost-%COMP%]     datamart-icon-container button.pbi-glyph-warning, .col.col-next-refresh   [_nghost-%COMP%]     datamart-icon-container button.pbi-glyph-warning{background:none;border:none}.col.col-last-refresh[_ngcontent-%COMP%]   .col-status-icons[_ngcontent-%COMP%], .col.col-next-refresh[_ngcontent-%COMP%]   .col-status-icons[_ngcontent-%COMP%]{flex:1 0 auto;margin-left:8px}.col.col-sensitivity[_ngcontent-%COMP%]     .labelName.emptyLabel:before{content:" \\2014  "}.col.col-location[_ngcontent-%COMP%]:empty:before{content:" \\2014  "}.col.col-endorsement[_ngcontent-%COMP%]     .endorsementBadge.none:before{content:" \\2014  "}a[_ngcontent-%COMP%]{color:var(--colorNeutralForeground1)}.col[_ngcontent-%COMP%]{padding:0 8px}.col.col-icon[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]{width:32px;height:32px;display:flex;color:var(--fluent-theme-white-color, #FFF);border-radius:2px;box-shadow:0 .3px .9px rgba(0,0,0,.11),0 1.6px 3.6px rgba(0,0,0,.13);align-items:center;justify-content:center}.col.col-icon[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:32px;height:32px}.col.col-icon[_ngcontent-%COMP%]   pbi-office-icon[_ngcontent-%COMP%]{height:16px;width:16px;fill:#fff;margin-top:8px;margin-left:8px}.col.col-icon[_ngcontent-%COMP%]   .datamartIcon[_ngcontent-%COMP%]{border-radius:2px;box-shadow:0 .3px .9px rgba(0,0,0,.11),0 1.6px 3.6px rgba(0,0,0,.13);width:32px;height:32px;background-color:#484644}.col.col-icon[_ngcontent-%COMP%]   .tri-artifact-icon-container-24[_ngcontent-%COMP%]{height:24px}.col.col-icon[_ngcontent-%COMP%]   .tri-artifact-icon-container-24[_ngcontent-%COMP%]   tri-artifact-icon[_ngcontent-%COMP%]{margin:0 4px}.col.cdk-keyboard-focused[_ngcontent-%COMP%], .col.cdk-program-focused[_ngcontent-%COMP%]{outline:var(--focus-two-tone-outline-definition, auto 1px);outline-color:var(--focus-two-tone-outline-color, -webkit-focus-ring-color)}.col.col-shared-by[_ngcontent-%COMP%], .col.col-type[_ngcontent-%COMP%], .col.col-gitStatus[_ngcontent-%COMP%]{display:flex;align-items:center;gap:6px}.col.col-shared-by[_ngcontent-%COMP%]   span[_ngcontent-%COMP%], .col.col-type[_ngcontent-%COMP%]   span[_ngcontent-%COMP%], .col.col-gitStatus[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{line-height:20px}.col.col-shared-by[_ngcontent-%COMP%]   tri-svg-icon[_ngcontent-%COMP%], .col.col-type[_ngcontent-%COMP%]   tri-svg-icon[_ngcontent-%COMP%], .col.col-gitStatus[_ngcontent-%COMP%]   tri-svg-icon[_ngcontent-%COMP%]{width:16px;height:16px}.col.col-type[_ngcontent-%COMP%], .col.col-owner[_ngcontent-%COMP%], .col.col-last-refresh[_ngcontent-%COMP%], .col.col-next-refresh[_ngcontent-%COMP%], .col.col-endorsement[_ngcontent-%COMP%], .col.col-sensitivity[_ngcontent-%COMP%], .col.col-last-access[_ngcontent-%COMP%], .col.col-last-activity[_ngcontent-%COMP%], .col.col-organization[_ngcontent-%COMP%], .col.col-relation[_ngcontent-%COMP%], .col.col-location[_ngcontent-%COMP%], .col.col-shared-time[_ngcontent-%COMP%]{color:var(--colorNeutralForeground2)}.col.col-name[_ngcontent-%COMP%]{display:flex;align-items:center;position:relative;max-width:100%;padding-left:16px!important}.col.col-name[_ngcontent-%COMP%]   .eyelash[_ngcontent-%COMP%]{position:absolute;font-size:8px;width:8px;height:8px;color:var(--fluent-theme-pbi-shade30, #7A6816);left:0;right:0;top:12px}html[dir="rtl"][_nghost-%COMP%]   .col.col-name[_ngcontent-%COMP%]   .eyelash[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .col.col-name[_ngcontent-%COMP%]   .eyelash[_ngcontent-%COMP%]{transform:scaleX(-1)}.col.col-name[_ngcontent-%COMP%]   .eyelash[_ngcontent-%COMP%]:before{vertical-align:top}.col.col-name[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{text-decoration:none}.col.col-name[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover, .col.col-name[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:focus{text-decoration:underline;color:inherit}.col.col-name[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:focus{outline:none}.col.col-name[_ngcontent-%COMP%]   a.cdk-keyboard-focused[_ngcontent-%COMP%], .col.col-name[_ngcontent-%COMP%]   a.cdk-program-focused[_ngcontent-%COMP%], .col.col-name[_ngcontent-%COMP%]   span.cdk-keyboard-focused[_ngcontent-%COMP%], .col.col-name[_ngcontent-%COMP%]   span.cdk-program-focused[_ngcontent-%COMP%]{outline:var(--focus-two-tone-outline-definition, auto 1px);outline-color:var(--focus-two-tone-outline-color, -webkit-focus-ring-color)}.col.col-name[_ngcontent-%COMP%]   .name[_ngcontent-%COMP%]{display:flex;align-items:center;gap:4px}.col.col-name[_ngcontent-%COMP%]   .name[_ngcontent-%COMP%]   .pbi-glyph-warning[_ngcontent-%COMP%]{padding-left:6px;font-size:14px;color:var(--fluent-theme-error-dark-alt-color, #D83B01)}.col.col-name[_ngcontent-%COMP%]   .name[_ngcontent-%COMP%]   .pbi-glyph-diamond[_ngcontent-%COMP%], .col.col-name[_ngcontent-%COMP%]   .name[_ngcontent-%COMP%]   .pbi-glyph-diamonduser[_ngcontent-%COMP%]{padding-left:6px;font-size:14px}.col.col-name[_ngcontent-%COMP%]   .dlp-icon[_ngcontent-%COMP%]{margin-left:4px;margin-right:9px;flex-shrink:0}.col.col-name[_ngcontent-%COMP%]   .quick-action-button[_ngcontent-%COMP%], .col.col-name[_ngcontent-%COMP%]   .favorite-star[_ngcontent-%COMP%]{background:none;border:none;padding:0;height:44px;width:36px;fill:currentColor}.col.col-name[_ngcontent-%COMP%]   .quick-action-button[_ngcontent-%COMP%]:hover, .col.col-name[_ngcontent-%COMP%]   .favorite-star[_ngcontent-%COMP%]:hover{background-color:var(--fluent-theme-neutral-light-color, #EDEBE9)}.col.col-name[_ngcontent-%COMP%]   .quick-action-button[_ngcontent-%COMP%]:hover   tri-svg-icon[_ngcontent-%COMP%], .col.col-name[_ngcontent-%COMP%]   .favorite-star[_ngcontent-%COMP%]:hover   tri-svg-icon[_ngcontent-%COMP%]{fill:var(--colorNeutralForeground2BrandHover)}.col.col-name[_ngcontent-%COMP%]   .quick-action-button.active[_ngcontent-%COMP%], .col.col-name[_ngcontent-%COMP%]   .favorite-star.active[_ngcontent-%COMP%], .col.col-name[_ngcontent-%COMP%]   .quick-action-button.active[_ngcontent-%COMP%]:hover, .col.col-name[_ngcontent-%COMP%]   .favorite-star.active[_ngcontent-%COMP%]:hover, .col.col-name[_ngcontent-%COMP%]   .quick-action-button.cdk-keyboard-focused[_ngcontent-%COMP%], .col.col-name[_ngcontent-%COMP%]   .favorite-star.cdk-keyboard-focused[_ngcontent-%COMP%], .col.col-name[_ngcontent-%COMP%]   .quick-action-button.cdk-keyboard-focused[_ngcontent-%COMP%]:hover, .col.col-name[_ngcontent-%COMP%]   .favorite-star.cdk-keyboard-focused[_ngcontent-%COMP%]:hover{background-color:var(--fluent-theme-neutral-quarter-alt-color, #E1DFDD)}.col.col-name[_ngcontent-%COMP%]   .quick-action-button[_ngcontent-%COMP%]:focus, .col.col-name[_ngcontent-%COMP%]   .favorite-star[_ngcontent-%COMP%]:focus{background-color:var(--fluent-theme-neutral-quarter-alt-color, #E1DFDD)}.col.col-name[_ngcontent-%COMP%]   .quick-action-button[_ngcontent-%COMP%]:focus:hover, .col.col-name[_ngcontent-%COMP%]   .favorite-star[_ngcontent-%COMP%]:focus:hover{background-color:var(--fluent-theme-neutral-quarter-alt-color, #E1DFDD)}.col.col-name[_ngcontent-%COMP%]   .quick-action-button[_ngcontent-%COMP%]:active, .col.col-name[_ngcontent-%COMP%]   .favorite-star[_ngcontent-%COMP%]:active, .col.col-name[_ngcontent-%COMP%]   .quick-action-button[_ngcontent-%COMP%]:active:hover, .col.col-name[_ngcontent-%COMP%]   .favorite-star[_ngcontent-%COMP%]:active:hover{background-color:var(--fluent-theme-neutral-quarter-alt-color, #E1DFDD)}.col.col-name[_ngcontent-%COMP%]   .context-menu[_ngcontent-%COMP%]     .menuTrigger{height:44px}.col.col-name[_ngcontent-%COMP%]   .quick-action-button.cdk-keyboard-focused[_ngcontent-%COMP%], .col.col-name[_ngcontent-%COMP%]   .quick-action-button.cdk-program-focused[_ngcontent-%COMP%]{outline:var(--focus-two-tone-outline-definition, auto 1px);outline-color:var(--focus-two-tone-outline-color, -webkit-focus-ring-color)}.col.col-name[_ngcontent-%COMP%]   .context-menu[_ngcontent-%COMP%], .col.col-name[_ngcontent-%COMP%]   .quick-action-button[_ngcontent-%COMP%]{flex:0 0 auto;display:none}.col.col-name[_ngcontent-%COMP%]   .context-menu[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%], .col.col-name[_ngcontent-%COMP%]   .quick-action-button[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]{vertical-align:middle}.col.col-name[_ngcontent-%COMP%]   .quick-action-button.alwaysShow[_ngcontent-%COMP%]{display:block}.col.col-name[_ngcontent-%COMP%]   .favorite-star[_ngcontent-%COMP%]{display:none;justify-content:center}.col.col-name[_ngcontent-%COMP%]   .favorite-star.isFavorited[_ngcontent-%COMP%]{display:flex;flex:0 0 auto}.col.col-name[_ngcontent-%COMP%]   .favorite-star[_ngcontent-%COMP%]     button{width:100%}.col.col-name[_ngcontent-%COMP%]   .favorite-star.cdk-keyboard-focused[_ngcontent-%COMP%]     mat-icon:before, .col.col-name[_ngcontent-%COMP%]   .favorite-star.cdk-program-focused[_ngcontent-%COMP%]     mat-icon:before{outline:none}.col.col-name[_ngcontent-%COMP%]   .favorite-star.cdk-keyboard-focused[_ngcontent-%COMP%]     button, .col.col-name[_ngcontent-%COMP%]   .favorite-star.cdk-program-focused[_ngcontent-%COMP%]     button{outline:var(--focus-two-tone-outline-definition, auto 1px);outline-color:var(--focus-two-tone-outline-color, -webkit-focus-ring-color)}.col.col-name[_ngcontent-%COMP%]   .favorite-star[_ngcontent-%COMP%]:hover     button>tri-svg-icon{fill:var(--colorNeutralForeground2BrandHover)}.col.col-name[_ngcontent-%COMP%]   .dataflow-gen2-name[_ngcontent-%COMP%]{flex-grow:0}.col.col-name[_ngcontent-%COMP%]   dataflow-gen2-icon-container[_ngcontent-%COMP%]{flex-grow:1;margin-left:4px}.col[_ngcontent-%COMP%]   .quick-action-button[_ngcontent-%COMP%]   tri-svg-icon[_ngcontent-%COMP%]{margin:0 auto}.col.col-name[_ngcontent-%COMP%]:not(.focused)   .context-menu[_ngcontent-%COMP%], .col.col-name[_ngcontent-%COMP%]:not(.focused)   .quick-action-button[_ngcontent-%COMP%], .col.col-name[_ngcontent-%COMP%]:not(.focused)   .favorite-star[_ngcontent-%COMP%]{display:block;width:0;overflow:hidden}.focused.col.col-name[_ngcontent-%COMP%]   .context-menu[_ngcontent-%COMP%], .focused.col.col-name[_ngcontent-%COMP%]   .quick-action-button[_ngcontent-%COMP%]{display:block}.focused.col.col-name[_ngcontent-%COMP%]   .favorite-star[_ngcontent-%COMP%]{display:flex;flex:0 0 auto}.tri-icon[_ngcontent-%COMP%]{fill:var(--colorNeutralForeground2)}.tri-icon.restricted-report[_ngcontent-%COMP%]{margin:0 4px}.tri-svg-icon[_ngcontent-%COMP%]{fill:var(--colorNeutralForeground3);margin-right:6px;width:18px;min-width:18px;height:19px}.glimmer[_ngcontent-%COMP%]{position:absolute;left:2px;top:4px;fill:var(--colorBrandForeground1)}.gift-open-warning-icon[_ngcontent-%COMP%]{fill:var(--colorNeutralForeground4, #707070)}' ],
                changeDetection: 0
            }), CellTemplatesComponent;
        }(), FluentListAriaAnnouncerComponent = function() {
            function FluentListAriaAnnouncerComponent(localizationService) {
                this.localizationService = localizationService;
            }
            return Object.defineProperty(FluentListAriaAnnouncerComponent.prototype, "text", {
                get: function() {
                    var count = this.dataSource.filteredData.length;
                    return this.localizationService.format(this.dataSource.filter && "[]" !== this.dataSource.filter ? count > 1 ? "ShowingXFilteredItems" : "ShowingSingleFilteredItem" : count > 1 ? "ShowingXItems" : "ShowingSingleItem", count);
                },
                enumerable: !1,
                configurable: !0
            }), FluentListAriaAnnouncerComponent.\u0275fac = function(t) {
                return new (t || FluentListAriaAnnouncerComponent)(core["\u0275\u0275directiveInject"](localization_service.o));
            }, FluentListAriaAnnouncerComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: FluentListAriaAnnouncerComponent,
                selectors: [ [ "fluent-list-aria-announcer" ] ],
                inputs: {
                    dataSource: "dataSource"
                },
                decls: 2,
                vars: 1,
                consts: [ [ "aria-hidden", "false", "aria-live", "polite", "role", "status" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementStart"](0, "span", 0), core["\u0275\u0275text"](1), 
                    core["\u0275\u0275elementEnd"]()), 2 & rf && (core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate"](ctx.text));
                },
                styles: [ ".screen-reader-only[_ngcontent-%COMP%], [_nghost-%COMP%]{position:absolute!important;width:1px!important;height:1px!important;padding:0!important;margin:-1px!important;overflow:hidden!important;clip:rect(0,0,0,0)!important;white-space:nowrap!important;border:0!important}" ]
            }), FluentListAriaAnnouncerComponent;
        }(), FiltersManagementService = function() {
            function FiltersManagementService() {
                this._appliedFilters = new Map, this._appliedFilters$ = new BehaviorSubject.X(this._appliedFilters), 
                this.appliedFilters$ = this._appliedFilters$.asObservable(), this._availableFilters$ = new BehaviorSubject.X(new Map), 
                this.availableFilters$ = this._availableFilters$.asObservable();
            }
            return FiltersManagementService.prototype.addFilter = function(filter) {
                if (!this._appliedFilters.get(filter.sectionName)) {
                    var config = this._availableFilters$.value.get(filter.sectionName);
                    this._appliedFilters.set(filter.sectionName, (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, config), {
                        filters: new Set
                    }));
                }
                this._appliedFilters.get(filter.sectionName).filters.add(filter), this._appliedFilters$.next(this._appliedFilters), 
                this.updateAvailableFilters(!0, filter);
            }, FiltersManagementService.prototype.removeFilter = function(filter) {
                var sectionFilters = this._appliedFilters.get(filter.sectionName).filters;
                sectionFilters.delete(filter), 0 === sectionFilters.size && this._appliedFilters.delete(filter.sectionName), 
                this._appliedFilters$.next(this._appliedFilters), this.updateAvailableFilters(!1, filter);
            }, FiltersManagementService.prototype.updateAvailableFilters = function(checked, filter) {
                var _a, config = this._availableFilters$.value;
                (0, Common.mv)(null === (_a = config.get(filter.sectionName)) || void 0 === _a ? void 0 : _a.filters.has(filter), "FiltersManagementService: invalid filter"), 
                filter.checked = checked, this._availableFilters$.next(config);
            }, FiltersManagementService.prototype.clearAllFilters = function() {
                this._appliedFilters = new Map, this._appliedFilters$.next(this._appliedFilters);
                var filtersConfig = this._availableFilters$.value;
                filtersConfig.forEach(function(section, key) {
                    section.disabled || section.filters.forEach(function(filter) {
                        filter.disabled || (filter.checked = !1);
                    });
                }), this._availableFilters$.next(filtersConfig);
            }, FiltersManagementService.prototype.setUpAppliedFilters = function(filterConfig) {
                var _this = this;
                this.clearAllFilters(), filterConfig.forEach(function(section, key) {
                    var set = new Set;
                    _this._appliedFilters.set(key, (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, section), {
                        filters: set
                    })), section.filters.forEach(function(filter) {
                        section.disabled && (filter.disabled = section.disabled), filter.checked && set.add(filter);
                    }), 0 === set.size && _this._appliedFilters.delete(key);
                }), this._appliedFilters$.next(this._appliedFilters), this._availableFilters$.next(filterConfig);
            }, FiltersManagementService.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: FiltersManagementService,
                factory: FiltersManagementService.\u0275fac = function(t) {
                    return new (t || FiltersManagementService);
                }
            }), FiltersManagementService;
        }(), fluent_list_filter_pane_component_c0 = function(a0, a1) {
            return {
                section: a0,
                state: a1
            };
        };
        function FluentListFilterPaneComponent_div_0_ng_container_10_ng_container_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementContainer"](1, 13), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var section_r6 = core["\u0275\u0275nextContext"]().$implicit, ctx_r7 = core["\u0275\u0275nextContext"](2), _r1 = core["\u0275\u0275reference"](3);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngTemplateOutlet", _r1)("ngTemplateOutletContext", core["\u0275\u0275pureFunction2"](2, fluent_list_filter_pane_component_c0, section_r6, ctx_r7.filterSectionState.get(section_r6.key)));
            }
        }
        function FluentListFilterPaneComponent_div_0_ng_container_10_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, FluentListFilterPaneComponent_div_0_ng_container_10_ng_container_1_Template, 2, 5, "ng-container", 12), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var section_r6 = ctx.$implicit;
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !section_r6.value.hidden);
            }
        }
        var fluent_list_filter_pane_component_c1 = function() {
            return {
                "aria-label": "Close"
            };
        }, fluent_list_filter_pane_component_c2 = function() {
            return {
                "aria-label": "Filter_ClearAll"
            };
        };
        function FluentListFilterPaneComponent_div_0_Template(rf, ctx) {
            if (1 & rf) {
                var _r10 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div", 3)(1, "section"), core["\u0275\u0275element"](2, "h2", 4), 
                core["\u0275\u0275elementStart"](3, "button", 5), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r10);
                    var ctx_r9 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r9.closeFilterPane());
                }), core["\u0275\u0275element"](4, "mat-icon", 6), core["\u0275\u0275elementEnd"]()(), 
                core["\u0275\u0275elementStart"](5, "section", 7)(6, "button", 8), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r10);
                    var ctx_r11 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r11.clearAllFilters());
                }), core["\u0275\u0275pipe"](7, "async"), core["\u0275\u0275element"](8, "mat-icon", 9)(9, "span", 10), 
                core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275template"](10, FluentListFilterPaneComponent_div_0_ng_container_10_Template, 2, 1, "ng-container", 11), 
                core["\u0275\u0275pipe"](11, "keyvalue"), core["\u0275\u0275pipe"](12, "async"), 
                core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("cdkTrapFocusAutoCapture", !0), core["\u0275\u0275advance"](3), 
                core["\u0275\u0275property"]("localizeAttr", core["\u0275\u0275pureFunction0"](12, fluent_list_filter_pane_component_c1)), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("disabled", ctx_r0.disableClearAll || !core["\u0275\u0275pipeBind1"](7, 5, ctx_r0.hasFilterApplied$))("localizeAttr", core["\u0275\u0275pureFunction0"](13, fluent_list_filter_pane_component_c2)), 
                core["\u0275\u0275advance"](4), core["\u0275\u0275property"]("ngForOf", core["\u0275\u0275pipeBind2"](11, 7, core["\u0275\u0275pipeBind1"](12, 10, ctx_r0.availableFilters$), ctx_r0.sectionOrder));
            }
        }
        function FluentListFilterPaneComponent_ng_template_2_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "section", 14)(1, "span", 15), 
            core["\u0275\u0275text"](2), core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementEnd"](), 
            core["\u0275\u0275elementContainer"](4, 13), core["\u0275\u0275elementEnd"]()), 
            2 & rf) {
                var section_r12 = ctx.section, state_r13 = ctx.state;
                core["\u0275\u0275nextContext"]();
                var _r3 = core["\u0275\u0275reference"](5);
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](3, 3, section_r12.key)), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngTemplateOutlet", _r3)("ngTemplateOutletContext", core["\u0275\u0275pureFunction2"](5, fluent_list_filter_pane_component_c0, section_r12, state_r13));
            }
        }
        function FluentListFilterPaneComponent_ng_template_4_mat_list_option_2_ng_container_1_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275elementContainer"](0);
        }
        var fluent_list_filter_pane_component_c3 = function(a0, a1) {
            return {
                $implicit: a0,
                displayName: a1
            };
        };
        function FluentListFilterPaneComponent_ng_template_4_mat_list_option_2_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "mat-list-option", 20), core["\u0275\u0275template"](1, FluentListFilterPaneComponent_ng_template_4_mat_list_option_2_ng_container_1_Template, 1, 0, "ng-container", 21), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var filter_r18 = ctx.$implicit, section_r14 = core["\u0275\u0275nextContext"]().section;
                core["\u0275\u0275property"]("value", filter_r18)("disableRipple", !0)("selected", filter_r18.checked)("disabled", filter_r18.disabled), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngTemplateOutlet", section_r14.value.filterTemplate)("ngTemplateOutletContext", core["\u0275\u0275pureFunction2"](6, fluent_list_filter_pane_component_c3, filter_r18.filterTemplateArguments, filter_r18.displayName));
            }
        }
        function FluentListFilterPaneComponent_ng_template_4_button_3_Template(rf, ctx) {
            if (1 & rf) {
                var _r23 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "button", 22), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r23);
                    var state_r15 = core["\u0275\u0275nextContext"]().state, ctx_r21 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r21.toggleExpander(state_r15));
                }), core["\u0275\u0275text"](1), core["\u0275\u0275pipe"](2, "localize"), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var state_r15 = core["\u0275\u0275nextContext"]().state;
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate1"](" ", state_r15.expanded ? "See Less" : core["\u0275\u0275pipeBind1"](2, 1, "NavigationPane_SeeAllLabel"), " ");
            }
        }
        var fluent_list_filter_pane_component_c4 = function(a0) {
            return {
                "aria-label": a0
            };
        };
        function FluentListFilterPaneComponent_ng_template_4_Template(rf, ctx) {
            if (1 & rf) {
                var _r26 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "mat-selection-list", 16), core["\u0275\u0275listener"]("selectionChange", function($event) {
                    core["\u0275\u0275restoreView"](_r26);
                    var ctx_r25 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r25.onCheckBoxChange($event));
                }), core["\u0275\u0275elementStart"](1, "virtual-scroll", 17), core["\u0275\u0275template"](2, FluentListFilterPaneComponent_ng_template_4_mat_list_option_2_Template, 2, 9, "mat-list-option", 18), 
                core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275template"](3, FluentListFilterPaneComponent_ng_template_4_button_3_Template, 3, 3, "button", 19);
            }
            if (2 & rf) {
                var section_r14 = ctx.section, state_r15 = ctx.state, ctx_r4 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("localizeAttr", core["\u0275\u0275pureFunction1"](9, fluent_list_filter_pane_component_c4, section_r14.key)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275styleMap"](ctx_r4.getStyle(section_r14.value, state_r15)), 
                core["\u0275\u0275property"]("childHeight", 32)("bufferAmount", 2)("parentScroll", ctx_r4.eleRef.nativeElement)("items", ctx_r4.sortFilterOptions(section_r14, section_r14.value.filters)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngForOf", ctx_r4.sortFilterOptions(section_r14, section_r14.value.filters)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", section_r14.value.useExpander);
            }
        }
        var FluentListFilterPaneComponent = function(_super) {
            function FluentListFilterPaneComponent(filtersManagementService, fluentListFilterPaneService, cdf, eleRef) {
                var _this = _super.call(this) || this;
                return _this.filtersManagementService = filtersManagementService, _this.fluentListFilterPaneService = fluentListFilterPaneService, 
                _this.cdf = cdf, _this.eleRef = eleRef, _this.disableClearAll = !1, _this.filterSectionState = new Map, 
                _this.availableFilters$ = _this.filtersManagementService.availableFilters$.pipe((0, 
                operators_map.U)(function(filtersConfig) {
                    return filtersConfig.forEach(function(value, key) {
                        _this.filterSectionState.has(key) || _this.filterSectionState.set(key, {
                            expanded: !1
                        });
                    }), filtersConfig;
                })), _this.hasFilterApplied$ = _this.filtersManagementService.appliedFilters$.pipe((0, 
                operators_map.U)(function(filters) {
                    return filters && filters.size > 0;
                })), _this;
            }
            return (0, tslib_es6.__extends)(FluentListFilterPaneComponent, _super), FluentListFilterPaneComponent.prototype.ngOnInit = function() {
                var _this = this;
                this.filtersConfig$.pipe((0, operators_filter.h)(function(filtersConfig) {
                    return !!filtersConfig;
                }), (0, takeUntil.R)(this.onDestroy$)).subscribe(function(filtersConfig) {
                    return _this.filtersManagementService.setUpAppliedFilters(filtersConfig);
                }), this.filterPaneOpened$ = this.fluentListFilterPaneService.getFilterPaneOpened();
            }, FluentListFilterPaneComponent.prototype.closeFilterPane = function() {
                this.fluentListFilterPaneService.closeFilterPane();
            }, FluentListFilterPaneComponent.prototype.clearAllFilters = function() {
                this.filtersManagementService.clearAllFilters();
            }, FluentListFilterPaneComponent.prototype.sectionOrder = function(s1, s2) {
                return s1.value.order - s2.value.order;
            }, FluentListFilterPaneComponent.prototype.sortFilterOptions = function(section, filters) {
                return section.orderBy ? _.sortBy(filters, [ function(o) {
                    return section.orderBy(o);
                } ]) : filters;
            }, FluentListFilterPaneComponent.prototype.onCheckBoxChange = function(change) {
                change.options[0].selected ? this.filtersManagementService.addFilter(change.options[0].value) : this.filtersManagementService.removeFilter(change.options[0].value);
            }, FluentListFilterPaneComponent.prototype.toggleExpander = function(section) {
                section.expanded = !section.expanded, this.cdf.markForCheck();
            }, FluentListFilterPaneComponent.prototype.getStyle = function(section, state) {
                return section.useExpander ? state.expanded ? {
                    overflow: "auto"
                } : {
                    maxHeight: section.maxHeight,
                    overflow: "hidden"
                } : {};
            }, FluentListFilterPaneComponent.\u0275fac = function(t) {
                return new (t || FluentListFilterPaneComponent)(core["\u0275\u0275directiveInject"](FiltersManagementService), core["\u0275\u0275directiveInject"](FluentListFilterPaneService), core["\u0275\u0275directiveInject"](core.ChangeDetectorRef), core["\u0275\u0275directiveInject"](core.ElementRef));
            }, FluentListFilterPaneComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: FluentListFilterPaneComponent,
                selectors: [ [ "fluent-list-filter-pane" ] ],
                inputs: {
                    filtersConfig$: "filtersConfig$",
                    disableClearAll: "disableClearAll"
                },
                features: [ core["\u0275\u0275InheritDefinitionFeature"] ],
                decls: 6,
                vars: 3,
                consts: [ [ "class", "wrapper", "cdkTrapFocus", "", 3, "cdkTrapFocusAutoCapture", 4, "ngIf" ], [ "sectionList", "" ], [ "filterSectionWithVirtualScroll", "" ], [ "cdkTrapFocus", "", 1, "wrapper", 3, "cdkTrapFocusAutoCapture" ], [ "localize", "Filters", "localizeTooltip", "Filters", 1, "title" ], [ "cdkMonitorElementFocus", "", "cdkFocusInitial", "", "localizeTooltip", "Close", 1, "closebtn", 3, "localizeAttr", "click" ], [ "fontIcon", "pbi-glyph-close", 1, "glyph-small" ], [ 1, "command" ], [ "cdkMonitorElementFocus", "", "localizeTooltip", "Filter_ClearAll", 1, "clearbtn", 3, "disabled", "localizeAttr", "click" ], [ "fontIcon", "pbi-glyph-clear-filter", 1, "glyph-small" ], [ "localize", "Filter_ClearAll" ], [ 4, "ngFor", "ngForOf" ], [ 4, "ngIf" ], [ 3, "ngTemplateOutlet", "ngTemplateOutletContext" ], [ 1, "filterSection" ], [ 1, "section", "sectionTitle" ], [ 3, "localizeAttr", "selectionChange" ], [ 3, "childHeight", "bufferAmount", "parentScroll", "items" ], [ "cdkMonitorElementFocus", "", "class", "filter", "checkboxPosition", "before", 3, "value", "disableRipple", "selected", "disabled", 4, "ngFor", "ngForOf" ], [ "class", "fluentTheme-sm-reg expander", 3, "click", 4, "ngIf" ], [ "cdkMonitorElementFocus", "", "checkboxPosition", "before", 1, "filter", 3, "value", "disableRipple", "selected", "disabled" ], [ 4, "ngTemplateOutlet", "ngTemplateOutletContext" ], [ 1, "fluentTheme-sm-reg", "expander", 3, "click" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275template"](0, FluentListFilterPaneComponent_div_0_Template, 13, 14, "div", 0), 
                    core["\u0275\u0275pipe"](1, "async"), core["\u0275\u0275template"](2, FluentListFilterPaneComponent_ng_template_2_Template, 5, 8, "ng-template", null, 1, core["\u0275\u0275templateRefExtractor"]), 
                    core["\u0275\u0275template"](4, FluentListFilterPaneComponent_ng_template_4_Template, 4, 11, "ng-template", null, 2, core["\u0275\u0275templateRefExtractor"])), 
                    2 & rf && core["\u0275\u0275property"]("ngIf", !!core["\u0275\u0275pipeBind1"](1, 1, ctx.filterPaneOpened$));
                },
                dependencies: [ common.NgForOf, common.NgIf, common.NgTemplateOutlet, icon.Hw, virtual_scroll.Sl, localize_directive.X, localize_attr_directive.b, localize_tooltip_directive.r, a11y.mK, a11y.kH, legacy_list.kh, legacy_list.O$, common.AsyncPipe, common.KeyValuePipe, localize_pipe.F ],
                styles: [ '.wrapper[_ngcontent-%COMP%]{display:flex;flex-direction:column}mat-selection-list[_ngcontent-%COMP%]{padding-top:0}virtual-scroll[_ngcontent-%COMP%]     .scrollable-content{position:unset}mat-list-option.filter[_ngcontent-%COMP%]{height:32px;outline:unset}mat-list-option.filter[_ngcontent-%COMP%]:hover, mat-list-option.filter[_ngcontent-%COMP%]:focus{background-color:var(--fluent-theme-white-color, #FFF)}mat-list-option.filter.cdk-keyboard-focused[_ngcontent-%COMP%]:focus{outline:var(--focus-two-tone-outline-definition, auto 1px);outline-color:var(--focus-two-tone-outline-color, -webkit-focus-ring-color)}mat-list-option.filter[_ngcontent-%COMP%]     .mat-list-text{flex-direction:row;min-width:0;font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-regular, 400);line-height:20px;color:var(--fluent-theme-neutral-primary-color, #323130)}html:not([dir="rtl"])[_nghost-%COMP%]   mat-list-option.filter[_ngcontent-%COMP%]     .mat-list-text, html:not([dir="rtl"])   [_nghost-%COMP%]   mat-list-option.filter[_ngcontent-%COMP%]     .mat-list-text{padding-left:8px}html[dir="rtl"][_nghost-%COMP%]   mat-list-option.filter[_ngcontent-%COMP%]     .mat-list-text, html[dir="rtl"]   [_nghost-%COMP%]   mat-list-option.filter[_ngcontent-%COMP%]     .mat-list-text{padding-right:8px}mat-list-option.filter[_ngcontent-%COMP%]     .mat-pseudo-checkbox{border-width:1px;width:20px;height:20px}mat-list-option.filter[_ngcontent-%COMP%]     .mat-pseudo-checkbox-checked{background-color:var(--fluent-theme-primary-color, #F2C811)}.expander[_ngcontent-%COMP%], .expander[_ngcontent-%COMP%]:hover{color:var(--fluent-theme-dark-alt-color, #DAB50F);border:none;background-color:transparent}section[_ngcontent-%COMP%]{display:flex}section[_ngcontent-%COMP%]   .title[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--xlg-font-size, 20px);font-weight:var(--font-weight-semi-bold, 600);color:var(--fluent-theme-neutral-primary-color, #323130);line-height:27px;margin:0;display:flex;flex:1 1 auto}html:not([dir="rtl"])[_nghost-%COMP%]   section[_ngcontent-%COMP%]   .title[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   section[_ngcontent-%COMP%]   .title[_ngcontent-%COMP%]{padding:16px 20px 11px 16px}html[dir="rtl"][_nghost-%COMP%]   section[_ngcontent-%COMP%]   .title[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   section[_ngcontent-%COMP%]   .title[_ngcontent-%COMP%]{padding:16px 16px 11px 20px}section[_ngcontent-%COMP%]   .closebtn[_ngcontent-%COMP%]{padding:12px;background-color:var(--fluent-theme-white-color, #FFF);border:none;flex:0 0 auto;display:flex}section[_ngcontent-%COMP%]   .closebtn[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]{color:var(--fluent-theme-neutral-secondary-color, #605E5C);padding:8px}section[_ngcontent-%COMP%]   .closebtn.cdk-keyboard-focused[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]{outline:var(--focus-two-tone-outline-definition, auto 1px);outline-color:var(--focus-two-tone-outline-color, -webkit-focus-ring-color)}section[_ngcontent-%COMP%]   .clearbtn[_ngcontent-%COMP%]{color:var(--fluent-theme-neutral-primary-color, #323130);background-color:var(--fluent-theme-white-color, #FFF);border:none;padding:0;align-items:center;display:flex}html:not([dir="rtl"])[_nghost-%COMP%]   section[_ngcontent-%COMP%]   .clearbtn[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   section[_ngcontent-%COMP%]   .clearbtn[_ngcontent-%COMP%]{padding-left:8px}html[dir="rtl"][_nghost-%COMP%]   section[_ngcontent-%COMP%]   .clearbtn[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   section[_ngcontent-%COMP%]   .clearbtn[_ngcontent-%COMP%]{padding-right:8px}section[_ngcontent-%COMP%]   .clearbtn[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]{color:var(--fluent-theme-neutral-mobile-color, #212121);padding:14px 8px;display:inline-flex}section[_ngcontent-%COMP%]   .clearbtn[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-regular, 400);line-height:19px}html:not([dir="rtl"])[_nghost-%COMP%]   section[_ngcontent-%COMP%]   .clearbtn[_ngcontent-%COMP%]   span[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   section[_ngcontent-%COMP%]   .clearbtn[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{padding:12px 8px 12px 0}html[dir="rtl"][_nghost-%COMP%]   section[_ngcontent-%COMP%]   .clearbtn[_ngcontent-%COMP%]   span[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   section[_ngcontent-%COMP%]   .clearbtn[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{padding:12px 0 12px 8px}section[_ngcontent-%COMP%]   .clearbtn.cdk-keyboard-focused[_ngcontent-%COMP%]{outline:var(--focus-two-tone-outline-definition, auto 1px);outline-color:var(--focus-two-tone-outline-color, -webkit-focus-ring-color)}section[_ngcontent-%COMP%]   .clearbtn[_ngcontent-%COMP%]:disabled, section[_ngcontent-%COMP%]   .clearbtn[_ngcontent-%COMP%]:disabled   mat-icon[_ngcontent-%COMP%]{color:var(--fluent-theme-neutral-tertia-color, #A19F9D)}section.command[_ngcontent-%COMP%]{border-bottom:1px solid var(--fluent-theme-neutral-light-color, #EDEBE9);margin-bottom:5px}.section[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-semi-bold, 600);line-height:20px}html:not([dir="rtl"])[_nghost-%COMP%]   .section[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .section[_ngcontent-%COMP%]{padding:16px 16px 8px}html[dir="rtl"][_nghost-%COMP%]   .section[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .section[_ngcontent-%COMP%]{padding:16px 16px 8px}.filterSection[_ngcontent-%COMP%], .sectionTitle[_ngcontent-%COMP%]{display:block}.mat-icon[_ngcontent-%COMP%]{overflow:visible}.mat-icon.glyph-small[_ngcontent-%COMP%]{font-size:var(--lg-font-size, 16px);width:var(--lg-font-size, 16px);height:var(--lg-font-size, 16px)}.mat-icon.glyph-mini[_ngcontent-%COMP%]{font-size:var(--sm-font-size, 12px);width:var(--sm-font-size, 12px);height:var(--sm-font-size, 12px)}.mat-icon.mat-ligature-font[fontIcon][_ngcontent-%COMP%]{overflow:auto}' ],
                changeDetection: 0
            }), FluentListFilterPaneComponent;
        }(rx_component.w);
        function FluentListFilterTagsComponent_ng_container_0_ng_container_2_div_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r6 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div", 6), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r6);
                    var ctx_r5 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r5.openFilterPane());
                }), core["\u0275\u0275pipe"](1, "localizeFormat"), core["\u0275\u0275pipe"](2, "localizeFormat"), 
                core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementStart"](4, "span", 7)(5, "span", 8), 
                core["\u0275\u0275text"](6), core["\u0275\u0275pipe"](7, "localize"), core["\u0275\u0275elementEnd"](), 
                core["\u0275\u0275elementStart"](8, "span", 9), core["\u0275\u0275text"](9), core["\u0275\u0275elementEnd"]()(), 
                core["\u0275\u0275elementStart"](10, "button", 10), core["\u0275\u0275listener"]("click", function() {
                    var filter_r4 = core["\u0275\u0275restoreView"](_r6).$implicit, ctx_r7 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r7.deleteFilter(filter_r4));
                }), core["\u0275\u0275pipe"](11, "localizeFormat"), core["\u0275\u0275pipe"](12, "localizeFormat"), 
                core["\u0275\u0275pipe"](13, "localize"), core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var filter_r4 = ctx.$implicit, section_r2 = core["\u0275\u0275nextContext"]().$implicit;
                core["\u0275\u0275attribute"]("aria-label", core["\u0275\u0275pipeBind2"](1, 4, "AppliedFilter", core["\u0275\u0275pipeBind3"](2, 7, "NamePattern_Colon", core["\u0275\u0275pipeBind1"](3, 11, section_r2.key), filter_r4.displayName))), 
                core["\u0275\u0275advance"](6), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](7, 13, section_r2.key)), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](filter_r4.displayName), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275attribute"]("aria-label", core["\u0275\u0275pipeBind2"](11, 15, "RemoveFilter", core["\u0275\u0275pipeBind3"](12, 18, "NamePattern_Colon", core["\u0275\u0275pipeBind1"](13, 22, section_r2.key), filter_r4.displayName)));
            }
        }
        function FluentListFilterTagsComponent_ng_container_0_ng_container_2_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, FluentListFilterTagsComponent_ng_container_0_ng_container_2_div_1_Template, 14, 24, "div", 5), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var section_r2 = ctx.$implicit;
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngForOf", section_r2.value.filters);
            }
        }
        function FluentListFilterTagsComponent_ng_container_0_Template(rf, ctx) {
            if (1 & rf) {
                var _r10 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "div", 1), 
                core["\u0275\u0275template"](2, FluentListFilterTagsComponent_ng_container_0_ng_container_2_Template, 2, 1, "ng-container", 2), 
                core["\u0275\u0275pipe"](3, "keyvalue"), core["\u0275\u0275pipe"](4, "async"), core["\u0275\u0275elementStart"](5, "button", 3), 
                core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r10);
                    var ctx_r9 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r9.clearAll());
                }), core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementStart"](6, "button", 4), 
                core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r10);
                    var ctx_r11 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r11.openFilterPane());
                }), core["\u0275\u0275text"](7), core["\u0275\u0275pipe"](8, "async"), core["\u0275\u0275elementEnd"](), 
                core["\u0275\u0275elementContainerEnd"]();
            }
            if (2 & rf) {
                var ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngForOf", core["\u0275\u0275pipeBind1"](3, 2, core["\u0275\u0275pipeBind1"](4, 4, ctx_r0.availableFiltersForTags$))), 
                core["\u0275\u0275advance"](5), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](8, 6, ctx_r0.numberofFiltersApplied$));
            }
        }
        var FluentListFilterTagsComponent = function() {
            function FluentListFilterTagsComponent(filterManagementService, fluentListFilterPaneService) {
                this.filterManagementService = filterManagementService, this.fluentListFilterPaneService = fluentListFilterPaneService, 
                this.availableFiltersForTags$ = this.filterManagementService.appliedFilters$.pipe((0, 
                operators_map.U)(function(filterConfigs) {
                    var filterConfigForTags = new Map;
                    return filterConfigs.forEach(function(section, key) {
                        if (!section.disabled && !section.hidden) {
                            var filters_1 = new Set;
                            filterConfigForTags.set(key, {
                                filters: filters_1,
                                order: section.order,
                                filterTemplate: section.filterTemplate
                            }), section.filters.forEach(function(filter) {
                                filter.disabled || filters_1.add(filter);
                            }), 0 === filters_1.size && filterConfigForTags.delete(key);
                        }
                    }), filterConfigForTags;
                })), this.numberofFiltersApplied$ = this.availableFiltersForTags$.pipe((0, operators_map.U)(function(filterConfigs) {
                    var count = 0;
                    return filterConfigs.forEach(function(section, key) {
                        return count += section.filters.size;
                    }), count;
                })), this.showFilterTags$ = this.availableFiltersForTags$.pipe((0, operators_map.U)(function(config) {
                    return config.size > 0;
                }));
            }
            return FluentListFilterTagsComponent.prototype.openFilterPane = function() {
                this.fluentListFilterPaneService.openFilterPane();
            }, FluentListFilterTagsComponent.prototype.deleteFilter = function(filter) {
                this.filterManagementService.removeFilter(filter);
            }, FluentListFilterTagsComponent.prototype.clearAll = function() {
                this.filterManagementService.clearAllFilters();
            }, FluentListFilterTagsComponent.\u0275fac = function(t) {
                return new (t || FluentListFilterTagsComponent)(core["\u0275\u0275directiveInject"](FiltersManagementService), core["\u0275\u0275directiveInject"](FluentListFilterPaneService));
            }, FluentListFilterTagsComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: FluentListFilterTagsComponent,
                selectors: [ [ "fluent-list-filter-tags" ] ],
                decls: 2,
                vars: 3,
                consts: [ [ 4, "ngIf" ], [ 1, "fluentListFilterTags" ], [ 4, "ngFor", "ngForOf" ], [ "cdkMonitorElementFocus", "", "tabindex", "0", "localize", "Clear_All", "localizeTooltip", "Filter_ClearAll", 1, "clearAll", 3, "click" ], [ 1, "allFilters", 3, "click" ], [ "role", "button", "class", "fluentListFilterTag", "tabindex", "0", 3, "click", 4, "ngFor", "ngForOf" ], [ "role", "button", "tabindex", "0", 1, "fluentListFilterTag", 3, "click" ], [ "localize", "NamePattern_Colon", "localize-fragments", "", 1, "tagContent" ], [ "fragment-index", "0", 1, "filterContent" ], [ "fragment-index", "1", 1, "filterContent" ], [ "cdkMonitorElementFocus", "", "tabindex", "0", 1, "closeBtn", "glyphicon", "pbi-glyph-close", 3, "click" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275template"](0, FluentListFilterTagsComponent_ng_container_0_Template, 9, 8, "ng-container", 0), 
                    core["\u0275\u0275pipe"](1, "async")), 2 & rf && core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](1, 1, ctx.showFilterTags$));
                },
                dependencies: [ common.NgForOf, common.NgIf, localize_directive.X, localize_tooltip_directive.r, a11y.kH, common.AsyncPipe, common.KeyValuePipe, localize_pipe.F, localize_format_pipe.j ],
                styles: [ '.fluentListFilterTags[_ngcontent-%COMP%]{padding-top:16px;background-color:var(--fluent-theme-white-color, #FFF)}html:not([dir="rtl"])[_nghost-%COMP%]   .fluentListFilterTags[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .fluentListFilterTags[_ngcontent-%COMP%]{padding-left:8px}html[dir="rtl"][_nghost-%COMP%]   .fluentListFilterTags[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .fluentListFilterTags[_ngcontent-%COMP%]{padding-right:8px}.fluentListFilterTags.isEmpty[_ngcontent-%COMP%]{display:none}.fluentListFilterTags[_ngcontent-%COMP%]   .fluentListFilterTag[_ngcontent-%COMP%]{cursor:pointer;display:inline-flex;border-radius:2px;background-color:var(--fluent-theme-neutral-lighter-color, #F3F2F1);line-height:16px;height:28px;color:var(--fluent-theme-neutral-primary-color, #323130);align-items:center;font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--sm-font-size, 12px);font-weight:var(--font-weight-regular, 400);margin-bottom:8px}html:not([dir="rtl"])[_nghost-%COMP%]   .fluentListFilterTags[_ngcontent-%COMP%]   .fluentListFilterTag[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .fluentListFilterTags[_ngcontent-%COMP%]   .fluentListFilterTag[_ngcontent-%COMP%]{margin-left:8px}html[dir="rtl"][_nghost-%COMP%]   .fluentListFilterTags[_ngcontent-%COMP%]   .fluentListFilterTag[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .fluentListFilterTags[_ngcontent-%COMP%]   .fluentListFilterTag[_ngcontent-%COMP%]{margin-right:8px}.fluentListFilterTags[_ngcontent-%COMP%]   .fluentListFilterTag[_ngcontent-%COMP%]   .tagContent[_ngcontent-%COMP%]{display:flex;white-space:pre-wrap;padding-top:5px;padding-bottom:7px}html:not([dir="rtl"])[_nghost-%COMP%]   .fluentListFilterTags[_ngcontent-%COMP%]   .fluentListFilterTag[_ngcontent-%COMP%]   .tagContent[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .fluentListFilterTags[_ngcontent-%COMP%]   .fluentListFilterTag[_ngcontent-%COMP%]   .tagContent[_ngcontent-%COMP%]{padding-left:8px;padding-right:8px}html[dir="rtl"][_nghost-%COMP%]   .fluentListFilterTags[_ngcontent-%COMP%]   .fluentListFilterTag[_ngcontent-%COMP%]   .tagContent[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .fluentListFilterTags[_ngcontent-%COMP%]   .fluentListFilterTag[_ngcontent-%COMP%]   .tagContent[_ngcontent-%COMP%]{padding-left:8px;padding-right:8px}.fluentListFilterTags[_ngcontent-%COMP%]   .fluentListFilterTag[_ngcontent-%COMP%]   .tagContent[_ngcontent-%COMP%]   .filterContent[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--sm-font-size, 12px);font-weight:var(--font-weight-semi-bold, 600);text-overflow:ellipsis;overflow:hidden;white-space:nowrap;max-width:30em}.fluentListFilterTags[_ngcontent-%COMP%]   .fluentListFilterTag[_ngcontent-%COMP%]   .tagContent[_ngcontent-%COMP%]:hover{background-color:var(--fluent-theme-neutral-lighter-secondary-color, #E5E5E5)}.fluentListFilterTags[_ngcontent-%COMP%]   .fluentListFilterTag[_ngcontent-%COMP%]   .tagContent[_ngcontent-%COMP%]:hover + .closeBtn[_ngcontent-%COMP%]{background-color:var(--fluent-theme-neutral-lighter-secondary-color, #E5E5E5)}.fluentListFilterTags[_ngcontent-%COMP%]   .fluentListFilterTag[_ngcontent-%COMP%]   .closeBtn[_ngcontent-%COMP%]{height:28px;width:28px;background:transparent;border:none;padding:0;font-size:12px;transition:none}.fluentListFilterTags[_ngcontent-%COMP%]   .fluentListFilterTag[_ngcontent-%COMP%]   .closeBtn.cdk-keyboard-focused[_ngcontent-%COMP%]{outline:var(--focus-two-tone-outline-definition, auto 1px);outline-color:var(--focus-two-tone-outline-color, -webkit-focus-ring-color)}.fluentListFilterTags[_ngcontent-%COMP%]   .fluentListFilterTag[_ngcontent-%COMP%]:hover{background-color:var(--fluent-theme-neutral-light-color, #EDEBE9)}.fluentListFilterTags[_ngcontent-%COMP%]   .fluentListFilterTag[_ngcontent-%COMP%]:hover   .closeBtn[_ngcontent-%COMP%]{background-color:var(--fluent-theme-neutral-quarter-alt-color, #E1DFDD)}.fluentListFilterTags[_ngcontent-%COMP%]   .fluentListFilterTag[_ngcontent-%COMP%]:focus{background-color:var(--fluent-theme-primary-color, #F2C811)}.fluentListFilterTags[_ngcontent-%COMP%]   .fluentListFilterTag[_ngcontent-%COMP%]:focus   .tagContent[_ngcontent-%COMP%]{background-color:var(--fluent-theme-primary-color, #F2C811)}.fluentListFilterTags[_ngcontent-%COMP%]   .fluentListFilterTag[_ngcontent-%COMP%]:focus   .tagContent[_ngcontent-%COMP%]:hover + .closeBtn[_ngcontent-%COMP%]{background-color:var(--fluent-theme-primary-color, #F2C811)}.fluentListFilterTags[_ngcontent-%COMP%]   .fluentListFilterTag[_ngcontent-%COMP%]:focus   .closeBtn[_ngcontent-%COMP%]{background-color:var(--fluent-theme-primary-color, #F2C811)}.fluentListFilterTags[_ngcontent-%COMP%]   .fluentListFilterTag[_ngcontent-%COMP%]:focus   .closeBtn[_ngcontent-%COMP%]:hover{background-color:var(--fluent-theme-dark-alt-color, #DAB50F)}html:not([dir="rtl"])[_nghost-%COMP%]   .fluentListFilterTags[_ngcontent-%COMP%]   .clearAll[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .fluentListFilterTags[_ngcontent-%COMP%]   .clearAll[_ngcontent-%COMP%]{padding-left:8px}html[dir="rtl"][_nghost-%COMP%]   .fluentListFilterTags[_ngcontent-%COMP%]   .clearAll[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .fluentListFilterTags[_ngcontent-%COMP%]   .clearAll[_ngcontent-%COMP%]{padding-right:8px}.fluentListFilterTags[_ngcontent-%COMP%]   .clearAll.cdk-keyboard-focused[_ngcontent-%COMP%]{outline:var(--focus-two-tone-outline-definition, auto 1px);outline-color:var(--focus-two-tone-outline-color, -webkit-focus-ring-color)}.allFilters[_ngcontent-%COMP%], .clearAll[_ngcontent-%COMP%]{background:none;border:none;color:var(--fluent-theme-link-color, #0078D4);font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--sm-font-size, 12px);font-weight:var(--font-weight-regular, 400)}.allFilters[_ngcontent-%COMP%]{background-color:var(--fluent-theme-white-color, #FFF);padding-top:22px;width:100%;align-items:flex-start}html:not([dir="rtl"])[_nghost-%COMP%]   .allFilters[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .allFilters[_ngcontent-%COMP%]{padding-left:16px}html[dir="rtl"][_nghost-%COMP%]   .allFilters[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .allFilters[_ngcontent-%COMP%]{padding-right:16px}@media only screen and (min-width: 320px){.allFilters[_ngcontent-%COMP%]{display:flex}.fluentListFilterTags[_ngcontent-%COMP%]{display:none}}@media only screen and (min-width: 640px){.allFilters[_ngcontent-%COMP%]{display:none}.fluentListFilterTags[_ngcontent-%COMP%]{display:block}}' ]
            }), FluentListFilterTagsComponent;
        }();
        function FluentListFilterComponent_mat_icon_6_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "mat-icon", 4);
        }
        function FluentListFilterComponent_mat_icon_7_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "mat-icon", 5);
        }
        var fluent_list_filter_component_c0 = function(a0) {
            return {
                active: a0
            };
        }, FluentListFilterComponent = function() {
            function FluentListFilterComponent(fluentListFilterPaneService) {
                this.fluentListFilterPaneService = fluentListFilterPaneService;
            }
            return FluentListFilterComponent.prototype.ngOnInit = function() {
                this.isFilterPaneOpened$ = this.fluentListFilterPaneService.getFilterPaneOpened(), 
                this.isFilterButtonEnabled$ = this.fluentListFilterPaneService.getFilterButtonEnabled();
            }, FluentListFilterComponent.prototype.toggleFilterPane = function() {
                this.fluentListFilterPaneService.toggleFilterPane();
            }, FluentListFilterComponent.\u0275fac = function(t) {
                return new (t || FluentListFilterComponent)(core["\u0275\u0275directiveInject"](FluentListFilterPaneService));
            }, FluentListFilterComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: FluentListFilterComponent,
                selectors: [ [ "fluent-list-filter" ] ],
                inputs: {
                    hasFilterApplied$: "hasFilterApplied$"
                },
                decls: 9,
                vars: 19,
                consts: [ [ "mat-button", "", "id", "fluent-list-filter-button", "cdkMonitorElementFocus", "", "localizeTooltip", "Filters", 1, "pbi-fluent-button", "fluentTheme-md-reg", 3, "ngClass", "ngSwitch", "disabled", "click" ], [ "class", "glyph-small", "fontIcon", "pbi-glyph-filterfilled", 4, "ngSwitchCase" ], [ "class", "glyph-small", "fontIcon", "pbi-glyph-filter", 4, "ngSwitchCase" ], [ "localize", "Filters" ], [ "fontIcon", "pbi-glyph-filterfilled", 1, "glyph-small" ], [ "fontIcon", "pbi-glyph-filter", 1, "glyph-small" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementStart"](0, "button", 0), core["\u0275\u0275listener"]("click", function() {
                        return ctx.toggleFilterPane();
                    }), core["\u0275\u0275pipe"](1, "localize"), core["\u0275\u0275pipe"](2, "async"), 
                    core["\u0275\u0275pipe"](3, "async"), core["\u0275\u0275pipe"](4, "async"), core["\u0275\u0275pipe"](5, "async"), 
                    core["\u0275\u0275template"](6, FluentListFilterComponent_mat_icon_6_Template, 1, 0, "mat-icon", 1), 
                    core["\u0275\u0275template"](7, FluentListFilterComponent_mat_icon_7_Template, 1, 0, "mat-icon", 2), 
                    core["\u0275\u0275element"](8, "span", 3), core["\u0275\u0275elementEnd"]()), 2 & rf && (core["\u0275\u0275property"]("ngClass", core["\u0275\u0275pureFunction1"](17, fluent_list_filter_component_c0, core["\u0275\u0275pipeBind1"](2, 9, ctx.isFilterPaneOpened$)))("ngSwitch", !!core["\u0275\u0275pipeBind1"](4, 13, ctx.hasFilterApplied$))("disabled", !core["\u0275\u0275pipeBind1"](5, 15, ctx.isFilterButtonEnabled$)), 
                    core["\u0275\u0275attribute"]("aria-label", core["\u0275\u0275pipeBind1"](1, 7, "Filters"))("aria-expanded", core["\u0275\u0275pipeBind1"](3, 11, ctx.isFilterPaneOpened$)), 
                    core["\u0275\u0275advance"](6), core["\u0275\u0275property"]("ngSwitchCase", !0), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", !1));
                },
                dependencies: [ common.NgClass, common.NgSwitch, common.NgSwitchCase, icon.Hw, localize_directive.X, localize_tooltip_directive.r, a11y.kH, common.AsyncPipe, localize_pipe.F ],
                styles: [ '[_nghost-%COMP%]{box-sizing:border-box}button[_ngcontent-%COMP%]{height:36px;padding:0 8px;display:inline-flex;border:1px solid transparent;box-sizing:content-box}button[_ngcontent-%COMP%]:hover, button[_ngcontent-%COMP%]:focus:hover{background-color:var(--fluent-theme-neutral-lighter-color, #F3F2F1)}button.cdk-keyboard-focused[_ngcontent-%COMP%], button.cdk-program-focused[_ngcontent-%COMP%]{outline:var(--focus-two-tone-outline-definition, auto 1px);outline-color:var(--focus-two-tone-outline-color, -webkit-focus-ring-color)}button[_ngcontent-%COMP%]:active, button.active[_ngcontent-%COMP%], button.active[_ngcontent-%COMP%]:hover   button[_ngcontent-%COMP%]:active:focus:hover, button.active[_ngcontent-%COMP%]:focus:hover{background-color:var(--fluent-theme-neutral-quarter-alt-color, #E1DFDD)}button[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%], button[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{line-height:36px;display:inline-block;vertical-align:top}button[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-regular, 400);padding:0 8px}button[_ngcontent-%COMP%]     .mat-button-focus-overlay{display:none}' ],
                changeDetection: 0
            }), FluentListFilterComponent;
        }();
        function FluentListGalleryComponent_ng_container_3_ng_container_1_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275elementContainer"](0);
        }
        var fluent_list_gallery_component_c0 = function(a0) {
            return {
                $implicit: a0
            };
        };
        function FluentListGalleryComponent_ng_container_3_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, FluentListGalleryComponent_ng_container_3_ng_container_1_Template, 1, 0, "ng-container", 3), 
            core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275elementContainerEnd"]()), 
            2 & rf) {
                var item_r2 = ctx.$implicit, ctx_r1 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngTemplateOutlet", core["\u0275\u0275pipeBind1"](2, 2, ctx_r1.cardTemplate$))("ngTemplateOutletContext", core["\u0275\u0275pureFunction1"](4, fluent_list_gallery_component_c0, item_r2));
            }
        }
        var FluentListGalleryComponent = function() {
            function FluentListGalleryComponent() {}
            return FluentListGalleryComponent.prototype.ngOnInit = function() {
                this.items$ = this.dataSource.connect();
            }, FluentListGalleryComponent.prototype.onResize = function() {
                var _a;
                null === (_a = this.virtualScroll) || void 0 === _a || _a.refresh();
            }, FluentListGalleryComponent.prototype.onUpdate = function(event) {
                var _a;
                this.viewPortItems = event, null === (_a = this.virtualScroll) || void 0 === _a || _a.refresh();
            }, FluentListGalleryComponent.\u0275fac = function(t) {
                return new (t || FluentListGalleryComponent);
            }, FluentListGalleryComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: FluentListGalleryComponent,
                selectors: [ [ "fluent-list-gallery" ] ],
                viewQuery: function(rf, ctx) {
                    var _t;
                    1 & rf && core["\u0275\u0275viewQuery"](virtual_scroll.Sl, 5), 2 & rf && core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx.virtualScroll = _t.first);
                },
                hostBindings: function(rf, ctx) {
                    1 & rf && core["\u0275\u0275listener"]("resize", function($event) {
                        return ctx.onResize($event);
                    }, !1, core["\u0275\u0275resolveWindow"]);
                },
                inputs: {
                    dataSource: "dataSource",
                    cardTemplate$: "cardTemplate$",
                    parentScroll: "parentScroll"
                },
                decls: 4,
                vars: 5,
                consts: [ [ "id", "artifactContentView", "virtualScroll", "", 1, "fluent-list-gallery", 3, "items", "parentScroll", "update" ], [ "scroll", "" ], [ 4, "ngFor", "ngForOf" ], [ 4, "ngTemplateOutlet", "ngTemplateOutletContext" ] ],
                template: function(rf, ctx) {
                    if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 0, 1), core["\u0275\u0275listener"]("update", function($event) {
                        return ctx.onUpdate($event);
                    }), core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275template"](3, FluentListGalleryComponent_ng_container_3_Template, 3, 6, "ng-container", 2), 
                    core["\u0275\u0275elementEnd"]()), 2 & rf) {
                        var _r0 = core["\u0275\u0275reference"](1);
                        core["\u0275\u0275property"]("items", core["\u0275\u0275pipeBind1"](2, 3, ctx.items$))("parentScroll", ctx.parentScroll ? ctx.parentScroll : _r0.window), 
                        core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngForOf", ctx.viewPortItems);
                    }
                },
                dependencies: [ common.NgForOf, common.NgTemplateOutlet, virtual_scroll.Sl, common.AsyncPipe ],
                styles: [ "[_nghost-%COMP%]{display:flex;flex:1}.fluent-list-gallery[_ngcontent-%COMP%]{height:100%;width:100%;background-color:var(--fluent-theme-white-color, #FFF)}.fluent-list-gallery[_ngcontent-%COMP%]     .scrollable-content{display:grid;grid-template-rows:repeat(auto-fit,288px);grid-template-columns:repeat(auto-fit,285px);grid-gap:16px}" ],
                changeDetection: 0
            }), FluentListGalleryComponent;
        }(), fluent_list_search_component_c0 = [ "filter" ], FluentListSearchComponent = function(_super) {
            function FluentListSearchComponent(filtersManagementService) {
                var _this = _super.call(this) || this;
                return _this.filtersManagementService = filtersManagementService, _this.ariaControls = "artifactContentView", 
                _this;
            }
            return (0, tslib_es6.__extends)(FluentListSearchComponent, _super), FluentListSearchComponent.prototype.ngOnInit = function() {
                var _this = this;
                this.value$ = this.filtersManagementService.appliedFilters$.pipe((0, operators_map.U)(function(configs) {
                    var _a, _b, _c, filterSection = configs.get("Search");
                    return filterSection ? (VisualsCommon_debug.fF.assert(function() {
                        var _a;
                        return (null === (_a = filterSection.filters) || void 0 === _a ? void 0 : _a.size) <= 1;
                    }, "search filters should never be more than one"), null !== (_c = null === (_b = null === (_a = filterSection.filters) || void 0 === _a ? void 0 : _a.values().next()) || void 0 === _b ? void 0 : _b.value.value) && void 0 !== _c ? _c : "") : "";
                })), this.onChanges$.subscribe(function(changes) {
                    changes.searchPlaceholder && (_this.searchPlaceholder = changes.searchPlaceholder.currentValue), 
                    changes.searchTooltip && (_this.searchTooltip = changes.searchTooltip.currentValue);
                }), (0, fromEvent.R)(this.filter.nativeElement, "keyup").pipe((0, takeUntil.R)(this.onDestroy$), (0, 
                skipWhile.n)(function() {
                    return !_this.filterOption;
                }), (0, operators_debounceTime.b)(150), (0, distinctUntilChanged.x)(), (0, operators_map.U)(function(event) {
                    return event.keyCode;
                })).subscribe(function(keyCode) {
                    keyCode === keycodes.hY ? (_this.filter.nativeElement.value = "", _this.filtersManagementService.removeFilter(_this.filterOption)) : (_this.filterOption.value = _this.filter.nativeElement.value, 
                    _this.filtersManagementService.addFilter(_this.filterOption));
                });
            }, FluentListSearchComponent.\u0275fac = function(t) {
                return new (t || FluentListSearchComponent)(core["\u0275\u0275directiveInject"](FiltersManagementService));
            }, FluentListSearchComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: FluentListSearchComponent,
                selectors: [ [ "fluent-list-search" ] ],
                viewQuery: function(rf, ctx) {
                    var _t;
                    1 & rf && core["\u0275\u0275viewQuery"](fluent_list_search_component_c0, 7), 2 & rf && core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx.filter = _t.first);
                },
                inputs: {
                    searchPlaceholder: "searchPlaceholder",
                    searchTooltip: "searchTooltip",
                    filterOption: "filterOption",
                    ariaControls: "ariaControls"
                },
                features: [ core["\u0275\u0275InheritDefinitionFeature"] ],
                decls: 6,
                vars: 8,
                consts: [ [ 1, "glyphicon", "glyph-small", "pbi-glyph-search" ], [ "floatLabel", "never" ], [ "matInput", "", "data-unique-id", "fluentListSearchBar", "data-testid", "fluent-list-search-bar", 3, "placeholder", "localizeTooltip", "value" ], [ "filter", "" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275element"](0, "span", 0), core["\u0275\u0275elementStart"](1, "mat-form-field", 1), 
                    core["\u0275\u0275element"](2, "input", 2, 3), core["\u0275\u0275pipe"](4, "localize"), 
                    core["\u0275\u0275pipe"](5, "async"), core["\u0275\u0275elementEnd"]()), 2 & rf && (core["\u0275\u0275advance"](2), 
                    core["\u0275\u0275propertyInterpolate"]("placeholder", core["\u0275\u0275pipeBind1"](4, 4, ctx.searchPlaceholder)), 
                    core["\u0275\u0275propertyInterpolate"]("localizeTooltip", ctx.searchTooltip), core["\u0275\u0275property"]("value", core["\u0275\u0275pipeBind1"](5, 6, ctx.value$)), 
                    core["\u0275\u0275attribute"]("aria-controls", ctx.ariaControls));
                },
                dependencies: [ localize_tooltip_directive.r, legacy_form_field.v_, legacy_input.k0, common.AsyncPipe, localize_pipe.F ],
                styles: [ "[_nghost-%COMP%]   .pbi-glyph-search[_ngcontent-%COMP%]{cursor:default}[_nghost-%COMP%]     mat-form-field{width:355px;margin-left:5px}[_nghost-%COMP%]     mat-form-field.mat-focused .mat-input-element, [_nghost-%COMP%]     mat-form-field.mat-focused .mat-form-field-label{color:var(--gray-180, #252423)!important}[_nghost-%COMP%]     mat-form-field .mat-input-element, [_nghost-%COMP%]     mat-form-field .mat-form-field-label{color:var(--gray-140, #484644)!important}[_nghost-%COMP%]     .mat-form-field-label span{line-height:20px}[_nghost-%COMP%]     .mat-form-field-ripple{background-color:transparent;background:transparent!important}[_nghost-%COMP%]     .mat-input-element{caret-color:var(--black-color, #000)!important;line-height:21px}" ]
            }), FluentListSearchComponent;
        }(rx_component.w), FluentListItemHoverCardArgsPipe = function() {
            function FluentListItemHoverCardArgsPipe() {}
            return FluentListItemHoverCardArgsPipe.prototype.transform = function(item, hostedEnvironmentTelemetryHint) {
                var _a, _b, _c, _d, _e;
                if (!_.isEmpty(item)) {
                    var itemAsTriFluentListItem = item, description = void 0;
                    return isTridentArtifactType(item.type) ? description = null === (_a = null == itemAsTriFluentListItem ? void 0 : itemAsTriFluentListItem.contract) || void 0 === _a ? void 0 : _a.description : 3 === item.type && (description = null === (_c = null === (_b = null == itemAsTriFluentListItem ? void 0 : itemAsTriFluentListItem.contract) || void 0 === _b ? void 0 : _b.artifactEndorsement) || void 0 === _c ? void 0 : _c.description), 
                    {
                        itemName: item.displayName,
                        itemType: item.triType || item.type,
                        itemObjectId: null !== (_e = null === (_d = null == itemAsTriFluentListItem ? void 0 : itemAsTriFluentListItem.contract) || void 0 === _d ? void 0 : _d.objectId) && void 0 !== _e ? _e : item.objectId || item.dbName,
                        itemId: isTridentArtifactType(item.type) || null == item ? void 0 : item.id,
                        itemDescription: description,
                        hasDlpPolicyTip: item.hasDlpPolicyTip,
                        restrictions: item.restrictions,
                        hostedEnvironmentTelemetryHint,
                        underlyingArtifactId: 2 === item.type || 10 === item.type ? null == item ? void 0 : item.modelId : void 0
                    };
                }
            }, FluentListItemHoverCardArgsPipe.\u0275fac = function(t) {
                return new (t || FluentListItemHoverCardArgsPipe);
            }, FluentListItemHoverCardArgsPipe.\u0275pipe = core["\u0275\u0275definePipe"]({
                name: "fluentListItemHoverCardArgs",
                type: FluentListItemHoverCardArgsPipe,
                pure: !0
            }), FluentListItemHoverCardArgsPipe;
        }(), Common_contracts = __webpack_require__(34071), StandaloneUtility3 = __webpack_require__(43286);
        function createFluentListItemFromTridentArtifact(artifact, localizationService, extensionManifestService, artifactManifest) {
            var lastAccess = (0, artifact_src.T$)(artifact) && artifact.lastAccessedTime ? new Date(artifact.lastAccessedTime) : void 0, workspaceId = artifact.workspaceId, workspaceName = artifact.workspaceName, isShared = artifact.isShared, artifactEndorsement = artifact.artifactEndorsement, artifactInformationProtection = artifact.artifactInformationProtection;
            return {
                contract: artifact,
                type: artifact.artifactType,
                triType: artifact.artifactType,
                typeName: getArtifactTypeName(artifact.artifactType, localizationService, extensionManifestService, artifactManifest),
                displayName: artifact.displayName || "",
                uniqueId: generateUniqueIdForFluentListItem(artifact.artifactType, artifact.objectId),
                isExpanded: !1,
                routePath: getArtifactRoutePathForFluentItem(artifact.artifactType, workspaceId, artifact.objectId, extensionManifestService, artifactManifest),
                folderObjectId: workspaceId,
                objectId: artifact.objectId,
                location: !isShared || workspaceId && workspaceId !== Common_contracts.fm ? workspaceName : localizationService.get("NavigationPane_SharedWithMe"),
                lastAccess,
                lastAccessTime: lastAccess ? (0, dateFormatter.WQ)(lastAccess, localizationService) : void 0,
                owner: getOwnerName(artifact),
                favoriteId: getFavoriteId(artifact),
                quickActions: null,
                endorsement: {
                    stage: null == artifactEndorsement ? void 0 : artifactEndorsement.stage
                },
                artifactInformationProtection,
                getPermissions: function() {
                    return artifact.permissions;
                },
                canBeSelected: artifactIsReadyForEdit(artifact),
                disableFavoriteStar: !1
            };
        }
        function getOwnerName(artifact) {
            var _a;
            return "string" == typeof (null === (_a = artifact.ownerUser) || void 0 === _a ? void 0 : _a.name) ? artifact.ownerUser.name : "string" == typeof artifact.ownerInfo ? artifact.ownerInfo : "";
        }
        function getFavoriteId(artifact) {
            return "number" == typeof artifact.favoriteId ? artifact.favoriteId : void 0;
        }
        function getArtifactTypeName(artifactType, localizationService, extensionManifestService, artifactManifest) {
            return extensionManifestService && artifactManifest ? extensionManifestService.getArtifactTypeDisplayName(artifactManifest) || "" : localizationService.get((0, 
            src.Ky)(artifactType)) || "";
        }
        function getArtifactRoutePathForFluentItem(artifactType, folderObjectId, artifactObjectId, extensionManifestService, artifactManifest) {
            return extensionManifestService && artifactManifest ? extensionManifestService.getArtifactRoutePath(artifactManifest, folderObjectId, artifactObjectId) : (0, 
            src.rW)(folderObjectId, artifactType, artifactObjectId);
        }
        function artifactIsReadyForEdit(artifact) {
            return !!(0, StandaloneUtility3.yE)(artifact.permissions, 3) && (0, src.n6)(artifact.artifactType, artifact);
        }
        var TridentFluentListItemService = function() {
            function TridentFluentListItemService() {}
            return TridentFluentListItemService.prototype.buildFluentListItemFromTridentArtifact = function(artifact, localizationService) {
                return createFluentListItemFromTridentArtifact(artifact, localizationService);
            }, TridentFluentListItemService.prototype.buildFluentListItemFromTridentArtifactV2 = function(artifact, localizationService, extensionManifestService) {
                return extensionManifestService.getArtifactManifest(artifact.artifactType).then(function(manifest) {
                    return createFluentListItemFromTridentArtifact(artifact, localizationService, extensionManifestService, manifest);
                });
            }, TridentFluentListItemService.prototype.legacyPbiArtifactTransform = function(fluentListItem) {
                return fluentListItem;
            }, TridentFluentListItemService.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: TridentFluentListItemService,
                factory: TridentFluentListItemService.\u0275fac = function(t) {
                    return new (t || TridentFluentListItemService);
                }
            }), TridentFluentListItemService;
        }(), TridentFluentListItemServiceToken = new core.InjectionToken("ITridentFluentListItemService"), TridentFluentListItemServiceOverrideToken = new core.InjectionToken("ITridentFluentListItemService"), TridentFluentListItemProvider = {
            provide: TridentFluentListItemServiceToken,
            useFactory: function() {
                return (0, core.inject)(TridentFluentListItemServiceOverrideToken, {
                    optional: !0
                }) || new TridentFluentListItemService;
            }
        }, legacy_table = __webpack_require__(11894), a11y_module = __webpack_require__(20914), AppActionMenuConfigurationInjectionToken = new core.InjectionToken("AppActionMenuConfiguration"), TeamsTabType = (new core.InjectionToken("AppActionBarThemeConfiguration"), 
        function(TeamsTabType) {
            return TeamsTabType.OrgApp = "OrgApp", TeamsTabType.Report = "Report", TeamsTabType.NotTab = "NotTab", 
            TeamsTabType;
        }({})), TeamsTabTypeInjectionToken = new core.InjectionToken("TeamsTabType"), color = __webpack_require__(64067), JsCommon_Date = __webpack_require__(69615);
        function convertDate(dateTime) {
            var convertedDate = Utility_Utility.b$.getDateFromWcfJsonString(dateTime, !0);
            return convertedDate || (convertedDate = (0, JsCommon_Date.Kk)(dateTime)), VisualsCommon_debug.fF.assertValue(convertedDate, "could not parse dateTime"), 
            convertedDate;
        }
        function isOrgApp(app) {
            return app && 5 === app.category;
        }
        function convertDisplayDate(dateTime, localizationService) {
            var date = convertDate(dateTime);
            return date && date.toLocaleDateString(localizationService.currentLanguageLocale, {
                month: "short",
                day: "numeric",
                year: "numeric"
            });
        }
        function getAppHeaderBackgroundColor(iconBackgroundColor) {
            if (iconBackgroundColor) return (0, color.jd)((0, color.WV)(iconBackgroundColor), .8, .2);
        }
        var resourcePackage = __webpack_require__(18231), OpenSidepaneAction = function() {
            return function(openSidepanePayload) {
                this.openSidepanePayload = openSidepanePayload, this.type = "[SidePane] Open Sidepane";
            };
        }(), CloseSidepaneAction = function() {
            return function(payload) {
                this.payload = payload, this.type = "[SidePane] Close Sidepane";
            };
        }(), appModel = __webpack_require__(56371), AppModelConverter = function() {
            function AppModelConverter(localizationService) {
                this.localizationService = localizationService;
            }
            return AppModelConverter.prototype.convertContentPackBase = function(contract) {
                if (contract) {
                    var description, author, providerConfig, orgProviderConfig, parsedConfig = (0, JsonExtensions.K)(contract.providerConfig), allowCopyContent = parsedConfig && parsedConfig.appSettings && parsedConfig.appSettings.allowCopyContent, category = contract.category;
                    return 2 === category || 5 === category || 4 === category || 7 === category ? orgProviderConfig = parsedConfig : providerConfig = parsedConfig, 
                    parsedConfig && (providerConfig ? (description = providerConfig.shortDescription || providerConfig.description, 
                    author = providerConfig.author) : orgProviderConfig && (description = orgProviderConfig.description, 
                    author = orgProviderConfig.author)), {
                        providerContract: contract,
                        providerConfig,
                        organizationalProviderConfig: orgProviderConfig,
                        providerId: contract.providerId,
                        displayText: contract.displayText,
                        iconUrl: contract.iconUrl || "",
                        description,
                        publishTime: convertDate(contract.publishTime),
                        providerKey: contract.providerKey,
                        author,
                        category: contract.category,
                        allowCopyContent: !!allowCopyContent,
                        dashboardIds: contract.dashboardIds || [],
                        reportIds: contract.reportIds || [],
                        modelIds: contract.modelIds || [],
                        workbookIds: contract.workbookIds || []
                    };
                }
            }, AppModelConverter.prototype.convertAppModelBase = function(contentProvider) {
                var contentProviderConfig = (0, JsonExtensions.K)(contentProvider.providerConfig);
                if (contentProviderConfig && contentProviderConfig.appSettings) {
                    var appSettings = contentProviderConfig.appSettings;
                    return {
                        icon: appSettings.iconName,
                        iconColor: appSettings.iconColor,
                        iconBackgroundColor: appSettings.iconBackgroundColor,
                        headerBackgroundColor: appSettings.headerBackgroundColor || getAppHeaderBackgroundColor(appSettings.iconBackgroundColor),
                        defaultContent: appSettings.defaultAppArtifact,
                        defaultContentOption: appSettings.defaultAppArtifact ? 1 : 0,
                        appPush: !!appSettings.appPush,
                        canExploreDataset: appSettings.exploreDataset ?? !0
                    };
                }
                if (6 === contentProvider.category || 3 === contentProvider.category) return {
                    iconColor: appModel._p.fontColor,
                    iconBackgroundColor: appModel._p.color,
                    headerBackgroundColor: getAppHeaderBackgroundColor(appModel._p.color),
                    defaultContentOption: 0
                };
            }, AppModelConverter.prototype.convertInstalledAppModel = function(contentProvider, packageContract) {
                var base = this.convertContentPackBase(contentProvider);
                if (base) {
                    var appModelBase = this.convertAppModelBase(contentProvider), contentProviderConfig = (0, 
                    JsonExtensions.K)(contentProvider.providerConfig), result = (0, tslib_es6.__assign)((0, 
                    tslib_es6.__assign)({
                        objectId: contentProvider.providerKey,
                        contentTileType: contracts.ty.OrgApp,
                        packageId: packageContract.id,
                        uniqueId: packageContract.id,
                        displayName: contentProvider.displayText,
                        publishTime: convertDate(contentProvider.publishTime),
                        getPermissions: function() {
                            return 17;
                        },
                        dashboards: [],
                        models: [],
                        reports: [],
                        workbooks: [],
                        displayDate: convertDisplayDate(contentProviderConfig && contentProviderConfig.creationTime || contentProvider.publishTime, this.localizationService),
                        isFavorite: !1,
                        isFavoriteDisabled: !1,
                        favoriteInfo: void 0,
                        groupObjectId: contentProvider.groupObjectId
                    }, base), appModelBase);
                    return isOrgApp(contentProvider) || (result.displayDate = convertDisplayDate(packageContract.lastRefreshTime, this.localizationService)), 
                    result;
                }
            }, AppModelConverter.\u0275fac = function(t) {
                return new (t || AppModelConverter)(core["\u0275\u0275inject"](localization_service.o));
            }, AppModelConverter.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: AppModelConverter,
                factory: AppModelConverter.\u0275fac,
                providedIn: "root"
            }), AppModelConverter;
        }(), app_store_service = __webpack_require__(21275), operators_switchMap = __webpack_require__(81905), ServiceAppsOverridesServiceInjectionToken = new core.InjectionToken("ServiceAppsOverridesService"), group_folder_selector = __webpack_require__(40898), events = __webpack_require__(8060), group_store_service = __webpack_require__(19178), AppWorkspace = function() {
            function AppWorkspace(appWorkspaceContractBase) {
                appWorkspaceContractBase && (this.uniqueId = appWorkspaceContractBase.objectId, 
                this.displayName = appWorkspaceContractBase.displayName, this.capacity = appWorkspaceContractBase.capacityObjectId && {
                    id: appWorkspaceContractBase.capacityObjectId,
                    name: appWorkspaceContractBase.capacityName,
                    region: appWorkspaceContractBase.region
                }, this.contract = appWorkspaceContractBase, this.lastViewedDashboard = -1, this.isMyWorkspace = !(!appWorkspaceContractBase || !appWorkspaceContractBase.isMyWorkspace), 
                this.folderType = appWorkspaceContractBase.folderType || appWorkspaceContractBase.type);
            }
            return AppWorkspace.prototype.getPermissions = function() {}, AppWorkspace;
        }(), folderModel_commonGlobals = window, Folder = function(_super) {
            function Folder(contract) {
                var _this = _super.call(this, contract) || this;
                return contract && (_this.id = contract.id, _this.description = contract.description, 
                _this.icon = contract.iconUrl && Utility_Utility.b$.urlCombine(folderModel_commonGlobals.clusterUri, contract.iconUrl), 
                _this.permissions = contract.permissions, _this.contacts = contract.contacts, _this.allowContributorUpdateApp = contract.allowContributorUpdateApp, 
                _this.defaultDatasetStorageMode = contract.defaultDatasetStorageMode, _this.type = contract.type, 
                _this.folderType = contract.type, _this.domainObjectId = contract.domainObjectId, 
                _this.allowWebModeling = contract.allowWebModeling, _this.datasourceBindingSecurityMode = contract.datasourceBindingSecurityMode), 
                _this;
            }
            return (0, tslib_es6.__extends)(Folder, _super), Object.defineProperty(Folder.prototype, "folderContract", {
                get: function() {
                    return this.contract;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Folder.prototype, "sharePointStorage", {
                get: function() {
                    return this.folderContract.sharePointStorage;
                },
                set: function(value) {
                    this.folderContract.sharePointStorage = value;
                },
                enumerable: !1,
                configurable: !0
            }), Folder;
        }(AppWorkspace), GroupMetadata = function() {
            return function(contractGroup) {
                var _this = this;
                this.contextMenuItemList = [], contractGroup && contractGroup.metadata && (contractGroup.metadata.contextMenuItemList.forEach(function(item) {
                    _this.contextMenuItemList.push(item);
                }), this.contextMenuSeparatorPosition = contractGroup.metadata.contextMenuItemList.length), 
                0 === this.contextMenuItemList.length && (this.contextMenuSeparatorPosition = -1), 
                contractGroup && contractGroup.isMyWorkspace ? this.contextMenuItemList.push({
                    linkType: 9
                }) : (this.contextMenuItemList.push(contractGroup.isOwner ? {
                    linkType: 5
                } : {
                    linkType: 6
                }), this.contextMenuItemList.push({
                    linkType: 7
                }));
            };
        }(), Group = function(_super) {
            function Group(contract) {
                var _this = _super.call(this, contract) || this;
                return contract && (_this.aadGroupId = contract.objectId, _this.metadata = new GroupMetadata(contract)), 
                _this.lastOwnershipFilter = 0, _this.contentTileType = contracts.ty.Workspace, _this;
            }
            return (0, tslib_es6.__extends)(Group, _super), Group;
        }(AppWorkspace);
        function workspaceAsModel(workspace) {
            return workspace ? (model = workspace.isFolder ? new Folder(workspace) : new Group(workspace), 
            workspace.workspaceId && (model.workspaceId = workspace.workspaceId), model) : null;
            var model;
        }
        __webpack_require__(47754), __webpack_require__(65966), __webpack_require__(73805), 
        (0, ngrx_store.P1)(group_folder_selector.mI, function(fs) {
            return _.map(fs, function(f) {
                return new Folder(f);
            });
        }), (0, ngrx_store.P1)(group_selector.Fb, function(gs) {
            return _.map(gs, function(g) {
                return new Group(g);
            });
        });
        var package_selector = __webpack_require__(81871), concatMap = __webpack_require__(24874), ServiceAppsUtilsService = function() {
            function ServiceAppsUtilsService() {}
            return ServiceAppsUtilsService.prototype.isServiceApp = function(packageId, store) {
                return this.getServiceAppWorkspacePackageId(packageId, store).pipe((0, operators_map.U)(function(packageId) {
                    return null != packageId;
                }));
            }, ServiceAppsUtilsService.prototype.isServiceAppPackage = function(pkg, allPackages) {
                if (pkg && null != pkg.folderId) {
                    var folderId_1 = pkg.folderId;
                    return _.some(allPackages, function(pkg) {
                        return isServiceAppPackage(pkg, folderId_1);
                    });
                }
                return !1;
            }, ServiceAppsUtilsService.prototype.isServiceAppPackagebyPackageId = function(packageId, store) {
                return store.select(package_selector.Jh, {
                    id: packageId
                }).pipe((0, operators_map.U)(function(pkg) {
                    return !!pkg && !!pkg.serviceAppObjectId;
                }));
            }, ServiceAppsUtilsService.prototype.getServiceAppWorkspacePackageId = function(appPackageId, store) {
                var _this = this;
                return store.select(package_selector.Jh, {
                    id: appPackageId
                }).pipe((0, concatMap.b)(function(orgAppPackage) {
                    return orgAppPackage && orgAppPackage.folderId ? (0, observable_of.of)(orgAppPackage.folderId) : (0, 
                    observable_throwError._)("package not found");
                }), (0, concatMap.b)(function(folderId) {
                    return _this.getServiceAppWorkspacePackageIdByFolderId(folderId, store);
                }), (0, operators_catchError.K)(function() {
                    return (0, observable_of.of)(void 0);
                }));
            }, ServiceAppsUtilsService.prototype.getServiceAppWorkspacePackageIdByFolderId = function(folderId, store) {
                return store.select(package_selector.it).pipe((0, operators_map.U)(function(packages) {
                    return _.find(packages, function(pkg) {
                        return isServiceAppPackage(pkg, folderId);
                    });
                }), (0, operators_map.U)(function(pkg) {
                    return null == pkg ? void 0 : pkg.id;
                }));
            }, ServiceAppsUtilsService.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: ServiceAppsUtilsService,
                factory: ServiceAppsUtilsService.\u0275fac = function(t) {
                    return new (t || ServiceAppsUtilsService);
                },
                providedIn: "root"
            }), ServiceAppsUtilsService;
        }();
        function isServiceAppPackage(pkg, folderId) {
            return pkg.folderId === folderId && !!pkg.serviceAppObjectId;
        }
        var EditAppService = function() {
            function EditAppService(serviceAppsOverridesService, serviceAppsUtilsService, store, folderService, navigation, telemetryService) {
                this.serviceAppsOverridesService = serviceAppsOverridesService, this.serviceAppsUtilsService = serviceAppsUtilsService, 
                this.store = store, this.folderService = folderService, this.navigation = navigation, 
                this.telemetryService = telemetryService;
            }
            return EditAppService.prototype.canEditApp = function(app) {
                return (0, observable_combineLatest.aj)([ this.store.select(group_selector.Fb), this.store.select(group_folder_selector.mI) ]).pipe((0, 
                operators_map.U)(function(_a) {
                    var folders = _a[1];
                    return !!_.find(_a[0], function(group) {
                        return group.objectId === (null == app ? void 0 : app.groupObjectId) && (!(null == group ? void 0 : group.isReadOnly) || (null == group ? void 0 : group.isOwner));
                    }) || !!_.find(folders, function(folder) {
                        return folder.objectId === (null == app ? void 0 : app.groupObjectId) && (0, StandaloneUtility3.yE)(folder.permissions, folder.allowContributorUpdateApp ? 8 : 12);
                    });
                }));
            }, EditAppService.prototype.canEditAppPermissions = function(app) {
                return (0, observable_combineLatest.aj)([ this.canEditApp(app), this.store.select(group_folder_selector.mI) ]).pipe((0, 
                operators_map.U)(function(_a) {
                    if (!_a[0]) return !1;
                    var folder = _.find(_a[1], function(f) {
                        return f.objectId === (null == app ? void 0 : app.groupObjectId);
                    });
                    return !!folder && (0, StandaloneUtility3.yE)(folder.permissions, 12);
                }));
            }, EditAppService.prototype.editApp = function(app) {
                var _this = this;
                this.serviceAppsUtilsService.isServiceApp(app.packageId, this.store).pipe((0, first.P)(), (0, 
                operators_switchMap.w)(function(isServiceApp) {
                    return isServiceApp && _this.serviceAppsOverridesService ? _this.serviceAppsOverridesService.shouldEditApp(app) : (0, 
                    observable_of.of)(!0);
                }), (0, operators_switchMap.w)(function(switchFolder) {
                    return switchFolder ? (0, from.D)(_this.folderService.ensureFoldersInitialization()).pipe((0, 
                    operators_take.q)(1), (0, operators_map.U)(function() {
                        return !0;
                    })) : (0, observable_of.of)(!1);
                }), (0, operators_switchMap.w)(function(switchFolder) {
                    return switchFolder ? _this.store.select(group_selector.cM).pipe((0, operators_take.q)(1), (0, 
                    operators_map.U)(function(groups) {
                        return groups[null == app ? void 0 : app.groupObjectId];
                    }), (0, operators_map.U)(function(group) {
                        return workspaceAsModel(group);
                    })) : (0, observable_throwError._)("skip switching folder");
                }), (0, operators_switchMap.w)(function(group) {
                    if (!group || !group.contract || group.contract.isReadOnly && !group.contract.isOwner) return (0, 
                    observable_throwError._)("skip switching folder");
                    var event = _this.telemetryService.startEvent(events.BY, {
                        groupObjectId: group.uniqueId
                    });
                    return (0, from.D)(_this.folderService.switchFolder(group, event)).pipe((0, operators_take.q)(1), (0, 
                    operators_map.U)(function() {
                        return null == app ? void 0 : app.groupObjectId;
                    }));
                }), (0, operators_take.q)(1)).subscribe(function(groupObjectId) {
                    _this.navigation.navigateToContentList(groupObjectId);
                }, function() {});
            }, EditAppService.prototype.editAppSettings = function(app) {
                var _this = this;
                (0, from.D)(this.folderService.ensureFoldersInitialization()).pipe((0, operators_take.q)(1), (0, 
                operators_switchMap.w)(function() {
                    return _this.store.select(group_selector.cM).pipe((0, operators_take.q)(1), (0, 
                    operators_map.U)(function(groups) {
                        return groups[null == app ? void 0 : app.groupObjectId];
                    }), (0, operators_map.U)(function(group) {
                        return workspaceAsModel(group);
                    }));
                }), (0, operators_switchMap.w)(function(group) {
                    if (!group || !group.contract || group.contract.isReadOnly && !group.contract.isOwner) return (0, 
                    observable_throwError._)("skip switching folder");
                    var event = _this.telemetryService.startEvent(events.BY, {
                        groupObjectId: group.uniqueId
                    });
                    return (0, from.D)(_this.folderService.switchFolder(group, event));
                }), (0, operators_take.q)(1)).subscribe(function() {
                    _this.navigation.showSettingsSlider("apps");
                }, function() {});
            }, EditAppService.\u0275fac = function(t) {
                return new (t || EditAppService)(core["\u0275\u0275inject"](ServiceAppsOverridesServiceInjectionToken, 8), core["\u0275\u0275inject"](ServiceAppsUtilsService), core["\u0275\u0275inject"](ngrx_store.yh), core["\u0275\u0275inject"](folder_service.s), core["\u0275\u0275inject"](navigation_service.W), core["\u0275\u0275inject"](Telemetry.y0));
            }, EditAppService.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: EditAppService,
                factory: EditAppService.\u0275fac,
                providedIn: "root"
            }), EditAppService;
        }(), pbi_icon_component = __webpack_require__(86663);
        function EditAppIconComponent_button_0_span_2_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "span", 4);
        }
        var edit_app_icon_component_c0 = function() {
            return {
                title: "AppModel_Edit"
            };
        };
        function EditAppIconComponent_button_0_Template(rf, ctx) {
            if (1 & rf) {
                var _r3 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "button", 1), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r3);
                    var ctx_r2 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r2.editApp());
                }), core["\u0275\u0275element"](1, "pbi-icon", 2), core["\u0275\u0275template"](2, EditAppIconComponent_button_0_span_2_Template, 1, 0, "span", 3), 
                core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("localizeAttr", core["\u0275\u0275pureFunction0"](2, edit_app_icon_component_c0)), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", ctx_r0.showLabel);
            }
        }
        var EditAppIconComponent = function() {
            function EditAppIconComponent(shellCapabilities, editAppService, teamsTabTypeToken) {
                this.shellCapabilities = shellCapabilities, this.editAppService = editAppService, 
                this.teamsTabTypeToken = teamsTabTypeToken;
            }
            return EditAppIconComponent.prototype.ngOnInit = function() {
                var _this = this;
                this.canEditApp$ = (0, from.D)(this.shellCapabilities.ensureCapabilitiesInitialized()).pipe((0, 
                operators_filter.h)(function() {
                    return _this.shellCapabilities.getCapabilities().appsSettings.showEditApps;
                }), (0, operators_switchMap.w)(function() {
                    return _this.canEditContent();
                }));
            }, EditAppIconComponent.prototype.editApp = function() {
                this.editContent();
            }, EditAppIconComponent.prototype.canEditContent = function() {
                var _this = this;
                return this.editAppService.canEditApp(this.app).pipe((0, operators_map.U)(function(canEdit) {
                    return canEdit && _this.teamsTabTypeToken !== TeamsTabType.OrgApp;
                }));
            }, EditAppIconComponent.prototype.editContent = function() {
                this.editAppService.editApp(this.app);
            }, EditAppIconComponent.\u0275fac = function(t) {
                return new (t || EditAppIconComponent)(core["\u0275\u0275directiveInject"](ShellCapabilitiesService), core["\u0275\u0275directiveInject"](EditAppService), core["\u0275\u0275directiveInject"](TeamsTabTypeInjectionToken, 8));
            }, EditAppIconComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: EditAppIconComponent,
                selectors: [ [ "edit-app-icon" ] ],
                inputs: {
                    app: "app",
                    showLabel: "showLabel"
                },
                decls: 2,
                vars: 3,
                consts: [ [ "class", "menuItemButton", "data-testid", "app-consumption-edit-app-btn", "use-tooltip-as-aria-label", "", 3, "localizeAttr", "click", 4, "ngIf" ], [ "data-testid", "app-consumption-edit-app-btn", "use-tooltip-as-aria-label", "", 1, "menuItemButton", 3, "localizeAttr", "click" ], [ "name", "edit", "size", "small" ], [ "class", "countLabel", "localize", "AppModel_Edit", 4, "ngIf" ], [ "localize", "AppModel_Edit", 1, "countLabel" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275template"](0, EditAppIconComponent_button_0_Template, 3, 3, "button", 0), 
                    core["\u0275\u0275pipe"](1, "async")), 2 & rf && core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](1, 1, ctx.canEditApp$));
                },
                dependencies: [ common.NgIf, localize_directive.X, localize_attr_directive.b, pbi_icon_component._, common.AsyncPipe ],
                styles: [ "[_nghost-%COMP%]{display:inline-flex;cursor:pointer;height:100%}[_nghost-%COMP%]   button[_ngcontent-%COMP%]   [_ngcontent-%COMP%]:before{border:var(--focus-outline-definition, 2.5px solid) transparent}html[data-focus-source=key]   [_nghost-%COMP%]   button[_ngcontent-%COMP%]:focus   [_ngcontent-%COMP%]:before{outline:var(--focus-two-tone-outline-definition, auto 1px);outline-color:var(--focus-two-tone-outline-color, -webkit-focus-ring-color)}.tileMenu   [_nghost-%COMP%]{vertical-align:top}" ],
                changeDetection: 0
            }), EditAppIconComponent;
        }();
        function AppActionMenuComponent_section_0_favorite_star_1_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "favorite-star", 6), 2 & rf) {
                var ctx_r1 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275property"]("item", ctx_r1.favoritableApp)("type", 3)("showLabel", !1);
            }
        }
        function AppActionMenuComponent_section_0_edit_app_icon_2_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "edit-app-icon", 7), 2 & rf) {
                var ctx_r2 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275property"]("app", ctx_r2.currentInstalledApp);
            }
        }
        var app_action_menu_component_c0 = function() {
            return {
                title: "AppHeader_Index_Title",
                "aria-label": "AppHeader_Index_Title"
            };
        };
        function AppActionMenuComponent_section_0_button_3_Template(rf, ctx) {
            if (1 & rf) {
                var _r6 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "button", 8), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r6);
                    var ctx_r5 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r5.navigateToApp());
                }), core["\u0275\u0275elementEnd"]();
            }
            2 & rf && core["\u0275\u0275property"]("localizeAttr", core["\u0275\u0275pureFunction0"](1, app_action_menu_component_c0));
        }
        var app_action_menu_component_c1 = function() {
            return {
                title: "AppInfo",
                "aria-label": "AppInfo"
            };
        };
        function AppActionMenuComponent_section_0_button_4_Template(rf, ctx) {
            if (1 & rf) {
                var _r8 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "button", 9), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r8);
                    var ctx_r7 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r7.openAppInfoPane());
                }), core["\u0275\u0275elementEnd"]();
            }
            2 & rf && core["\u0275\u0275property"]("localizeAttr", core["\u0275\u0275pureFunction0"](1, app_action_menu_component_c1));
        }
        function AppActionMenuComponent_section_0_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "section", 1), core["\u0275\u0275template"](1, AppActionMenuComponent_section_0_favorite_star_1_Template, 1, 3, "favorite-star", 2), 
            core["\u0275\u0275template"](2, AppActionMenuComponent_section_0_edit_app_icon_2_Template, 1, 1, "edit-app-icon", 3), 
            core["\u0275\u0275template"](3, AppActionMenuComponent_section_0_button_3_Template, 1, 2, "button", 4), 
            core["\u0275\u0275template"](4, AppActionMenuComponent_section_0_button_4_Template, 1, 2, "button", 5), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("ngStyle", ctx_r0.actionBarStyle), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275property"]("ngIf", ctx_r0.favoritableApp), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275property"]("ngIf", ctx_r0.showEditApp), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275property"]("ngIf", ctx_r0.showListButtonForTeamsOrgAppTab), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275property"]("ngIf", ctx_r0.showInfoButton);
            }
        }
        var AppActionMenuComponent = function() {
            function AppActionMenuComponent(config, appModelConverter, appStore, navigation, store, teamsTabTypeToken) {
                this.config = config, this.appModelConverter = appModelConverter, this.appStore = appStore, 
                this.navigation = navigation, this.store = store, this.teamsTabTypeToken = teamsTabTypeToken, 
                this.showEditApp = !1, this.showListButtonForTeamsOrgAppTab = !1, this.showInfoButton = !1;
            }
            return AppActionMenuComponent.prototype.ngOnInit = function() {
                var _this = this;
                this.selectedAppSubscription = this.appStore.selectedApp.subscribe({
                    next: function(app) {
                        var _a;
                        app ? (_this.currentInstalledApp = _this.appModelConverter.convertInstalledAppModel(app.App, app.packages[0]), 
                        _this.showEditApp = !_this.favoritesOnly, _this.showListButtonForTeamsOrgAppTab = _this.favoritesOnly && !_this.isAppWithAppNavEnabled(app) && _this.teamsTabTypeToken === TeamsTabType.OrgApp && _this.hasAppMoreThanOneContent(app.App) || !_this.favoritesOnly && !_this.isAppWithAppNavEnabled(app), 
                        _this.actionBarStyle = _this.teamsTabTypeToken === TeamsTabType.OrgApp ? {
                            "background-color": null === (_a = _this.currentInstalledApp) || void 0 === _a ? void 0 : _a.headerBackgroundColor,
                            color: _this.getHeaderFontColor()
                        } : {
                            "background-color": "inherit",
                            color: "inherit"
                        }, _this.showInfoButton = _this.favoritesOnly && _this.teamsTabTypeToken === TeamsTabType.OrgApp || !_this.favoritesOnly && _this.isAppWithAppNavEnabled(app), 
                        _this.favoritableApp = app.App) : _this.currentInstalledApp = void 0;
                    }
                });
            }, AppActionMenuComponent.prototype.ngOnDestroy = function() {
                this.selectedAppSubscription && this.selectedAppSubscription.unsubscribe(), this.closeAppInfoPane();
            }, AppActionMenuComponent.prototype.navigateToApp = function() {
                var app = this.currentInstalledApp, instanceId = isOrgApp(app.providerContract) ? void 0 : app.packageId;
                this.navigation.navigateToApp(app.providerContract.providerKey, instanceId, !0);
            }, AppActionMenuComponent.prototype.getHeaderFontColor = function() {
                var _a;
                return function(backgroundColor) {
                    if (!backgroundColor) return "inherit";
                    var rgb = (0, color.WV)(backgroundColor);
                    return .299 * rgb.R + .587 * rgb.G + .144 * rgb.B > 125 ? "#000" : "#FFF";
                }(null === (_a = this.currentInstalledApp) || void 0 === _a ? void 0 : _a.headerBackgroundColor);
            }, AppActionMenuComponent.prototype.openAppInfoPane = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        return this.store.dispatch(new OpenSidepaneAction({
                            sidePaneType: 5
                        })), [ 2 ];
                    });
                });
            }, AppActionMenuComponent.prototype.closeAppInfoPane = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        return this.store.dispatch(new CloseSidepaneAction), [ 2 ];
                    });
                });
            }, Object.defineProperty(AppActionMenuComponent.prototype, "favoritesOnly", {
                get: function() {
                    return this.config && "favoritesOnly" === this.config;
                },
                enumerable: !1,
                configurable: !0
            }), AppActionMenuComponent.prototype.hasAppMoreThanOneContent = function(app) {
                var _a, _b, _c;
                return ((null === (_a = app.dashboardObjectIds) || void 0 === _a ? void 0 : _a.length) || 0) + ((null === (_b = app.reportObjectIds) || void 0 === _b ? void 0 : _b.length) || 0) + ((null === (_c = app.workbookObjectIds) || void 0 === _c ? void 0 : _c.length) || 0) > 1;
            }, AppActionMenuComponent.prototype.isAppWithAppNavEnabled = function(app) {
                if (!(1 & ~app.App.settings)) return !0;
                if (!_.isEmpty(app.resourcePackages)) for (var _i = 0, _a = app.resourcePackages; _i < _a.length; _i++) {
                    var rp = _a[_i];
                    if (!_.isEmpty(rp.items)) for (var _b = 0, _c = rp.items; _b < _c.length; _b++) {
                        var rpi = _c[_b];
                        if (rpi.type === resourcePackage.Ut.AppNavigation && rpi.path) return !0;
                    }
                }
                return !1;
            }, AppActionMenuComponent.\u0275fac = function(t) {
                return new (t || AppActionMenuComponent)(core["\u0275\u0275directiveInject"](AppActionMenuConfigurationInjectionToken, 8), core["\u0275\u0275directiveInject"](AppModelConverter), core["\u0275\u0275directiveInject"](app_store_service.d), core["\u0275\u0275directiveInject"](navigation_service.W), core["\u0275\u0275directiveInject"](ngrx_store.yh), core["\u0275\u0275directiveInject"](TeamsTabTypeInjectionToken, 8));
            }, AppActionMenuComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: AppActionMenuComponent,
                selectors: [ [ "app-action-menu" ] ],
                decls: 1,
                vars: 1,
                consts: [ [ "class", "appActionMenuWrapper appThemeable", "id", "appActionMenu", 3, "ngStyle", 4, "ngIf" ], [ "id", "appActionMenu", 1, "appActionMenuWrapper", "appThemeable", 3, "ngStyle" ], [ "data-testid", "app-consumption-favorites-btn", "class", "noFocusBorder", 3, "item", "type", "showLabel", 4, "ngIf" ], [ "class", "item", "data-testid", "app-consumption-edit-btn", 3, "app", 4, "ngIf" ], [ "class", "item menuItemButton pbi-glyph-bulletedlist glyphicon glyph-small", "role", "link", 3, "localizeAttr", "click", 4, "ngIf" ], [ "class", "item menuItemButton pbi-glyph-info glyphicon glyph-small", "data-testid", "app-consumption-app-info", 3, "localizeAttr", "click", 4, "ngIf" ], [ "data-testid", "app-consumption-favorites-btn", 1, "noFocusBorder", 3, "item", "type", "showLabel" ], [ "data-testid", "app-consumption-edit-btn", 1, "item", 3, "app" ], [ "role", "link", 1, "item", "menuItemButton", "pbi-glyph-bulletedlist", "glyphicon", "glyph-small", 3, "localizeAttr", "click" ], [ "data-testid", "app-consumption-app-info", 1, "item", "menuItemButton", "pbi-glyph-info", "glyphicon", "glyph-small", 3, "localizeAttr", "click" ] ],
                template: function(rf, ctx) {
                    1 & rf && core["\u0275\u0275template"](0, AppActionMenuComponent_section_0_Template, 5, 5, "section", 0), 
                    2 & rf && core["\u0275\u0275property"]("ngIf", ctx.currentInstalledApp);
                },
                dependencies: [ common.NgIf, common.NgStyle, localize_attr_directive.b, EditAppIconComponent, FavoriteStarComponent ],
                styles: [ "[_nghost-%COMP%]{flex:none}[_nghost-%COMP%]     favorite-star button{background-color:inherit!important;color:inherit!important}html[data-focus-source=key]   [_nghost-%COMP%]   button[_ngcontent-%COMP%]:focus   [_ngcontent-%COMP%]:before{box-shadow:none!important;border:none!important}[_nghost-%COMP%]   .appActionMenuWrapper[_ngcontent-%COMP%]{align-items:center;display:flex;height:100%}[_nghost-%COMP%]   .appActionMenuWrapper[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{border:none!important;padding:0 1px!important}html[data-focus-source=key]   [_nghost-%COMP%]   .appActionMenuWrapper[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:focus{box-shadow:var(--focus-box-shadow-definition, 0 0 0 4px) var(--focus-box-shadow-white-color, #FFFFFF)!important;border:var(--focus-outline-definition, 2.5px solid) var(--focus-box-shadow-color, #000000)!important}[_nghost-%COMP%]   .appActionMenuWrapper[_ngcontent-%COMP%]   i.glyphicon[_ngcontent-%COMP%]{color:inherit;font-size:16px}[_nghost-%COMP%]   .appActionMenuWrapper[_ngcontent-%COMP%]     button{width:32px;height:40px;display:flex;align-items:center;justify-content:center}[_nghost-%COMP%]   .appActionMenuWrapper[_ngcontent-%COMP%]     button:before{border:var(--focus-outline-definition, 2.5px solid) transparent}[_nghost-%COMP%]   .appActionMenuWrapper[_ngcontent-%COMP%]     button mat-icon{padding:0;display:flex;align-items:center;justify-content:center}[_nghost-%COMP%]   .item[_ngcontent-%COMP%]{vertical-align:top}[_nghost-%COMP%]   pbi-icon[_ngcontent-%COMP%]{margin:0 10px;cursor:pointer}[_nghost-%COMP%]   pbi-icon[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{margin:0!important}@media print{#appActionMenu[_ngcontent-%COMP%]{display:none!important}}" ]
            }), AppActionMenuComponent;
        }(), pbi_icon_module = __webpack_require__(93367), artifact_action_module_manifests = [ {
            componentId: "AppActionMenuComponentId",
            type: AppActionMenuComponent
        }, {
            componentId: "EditAppIconComponentId",
            type: EditAppIconComponent
        } ], ArtifactActionModule = function() {
            function ArtifactActionModule() {}
            return ArtifactActionModule.\u0275fac = function(t) {
                return new (t || ArtifactActionModule);
            }, ArtifactActionModule.\u0275mod = core["\u0275\u0275defineNgModule"]({
                type: ArtifactActionModule
            }), ArtifactActionModule.\u0275inj = core["\u0275\u0275defineInjector"]({
                providers: [ EditAppService ],
                imports: [ common.CommonModule, localization_module.v, icon.Ps, pbi_icon_module.U, pbi_tooltip_module.Z, lazy_load_module.N.withManifests(artifact_action_module_manifests), tri_svg_icon.T6 ]
            }), ArtifactActionModule;
        }(), UILibrary_module = __webpack_require__(94785), ArtifactContextMenusModule = function() {
            function ArtifactContextMenusModule() {}
            return ArtifactContextMenusModule.\u0275fac = function(t) {
                return new (t || ArtifactContextMenusModule);
            }, ArtifactContextMenusModule.\u0275mod = core["\u0275\u0275defineNgModule"]({
                type: ArtifactContextMenusModule
            }), ArtifactContextMenusModule.\u0275inj = core["\u0275\u0275defineInjector"]({
                imports: [ common.CommonModule, legacy_menu.jT, icon.Ps, divider.t, UILibrary_module.g, a11y.rt, pbi_tooltip_module.Z, tri_svg_icon.T6 ]
            }), ArtifactContextMenusModule;
        }(), ArtifactEndorsementUICommon_module = __webpack_require__(79509), information_protection_ui_common_module = __webpack_require__(53483), DlpPolicyTipsSidePanelInjectionToken = new core.InjectionToken("DlpPolicyTipsSidePanelInjectionToken"), LoadArtifactPolicyTips = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Dlp] Get_Artifact_Policy_Tips";
            };
        }(), LoadArtifactPolicyTipsSuccess = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Dlp] Get_Artifact_Policy_Tips_Success";
            };
        }(), LoadArtifactPolicyTipsFail = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Dlp] Get_Artifact_Policy_Tips_Fail";
            };
        }(), RemoveArtifactPolicyTip = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Dlp] Remove_Artifact_Policy_Tip";
            };
        }(), OverrideRule = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Dlp] Override_Rule";
            };
        }(), OverrideRuleSuccess = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Dlp] Override_Rule_Success";
            };
        }(), OverrideRuleFail = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Dlp] Override_Rule_Fail";
            };
        }(), ReportFalsePositiveRule = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Dlp] Report_False_Positive_Rule";
            };
        }(), ClearPolicyTipActionStatus = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Dlp] Clear_Policy_Tip_Action_Status";
            };
        }(), ReportFalsePositiveRuleSuccess = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Dlp] Report_False_Positive_Rule_Success";
            };
        }(), ReportFalsePositiveRuleFail = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Dlp] Report_False_Positive_Rule_Fail";
            };
        }(), SetLoadingCurrentSidePanelTipsState = function() {
            return function(payload) {
                this.payload = payload, this.type = "[Dlp] Set_Loading_Current_Side_Panel_Tips_State";
            };
        }(), OverrideRuleUserAction = function(OverrideRuleUserAction) {
            return OverrideRuleUserAction[OverrideRuleUserAction.Override = 0] = "Override", 
            OverrideRuleUserAction[OverrideRuleUserAction.ReportFalsePositiveAndOverride = 1] = "ReportFalsePositiveAndOverride", 
            OverrideRuleUserAction;
        }({}), DlpPolicyTipStatus = function(DlpPolicyTipStatus) {
            return DlpPolicyTipStatus[DlpPolicyTipStatus.Succeeded = 0] = "Succeeded", DlpPolicyTipStatus[DlpPolicyTipStatus.Failed = 1] = "Failed", 
            DlpPolicyTipStatus;
        }({}), DlpPolicyTipAction = function(DlpPolicyTipAction) {
            return DlpPolicyTipAction[DlpPolicyTipAction.Override = 0] = "Override", DlpPolicyTipAction[DlpPolicyTipAction.ReportFalsePositiveAndOverride = 1] = "ReportFalsePositiveAndOverride", 
            DlpPolicyTipAction[DlpPolicyTipAction.ReportFalsePositive = 2] = "ReportFalsePositive", 
            DlpPolicyTipAction;
        }({}), LoadingCurrentSidePanelTipsState = function(LoadingCurrentSidePanelTipsState) {
            return LoadingCurrentSidePanelTipsState[LoadingCurrentSidePanelTipsState.INIT = 0] = "INIT", 
            LoadingCurrentSidePanelTipsState[LoadingCurrentSidePanelTipsState.LOADING = 1] = "LOADING", 
            LoadingCurrentSidePanelTipsState[LoadingCurrentSidePanelTipsState.LOADED = 2] = "LOADED", 
            LoadingCurrentSidePanelTipsState;
        }({}), ngrx_entity = __webpack_require__(8894), artifact_type = __webpack_require__(50600);
        function selectArtifactWithPolicyTips(artifactId, artifactType) {
            return "".concat(artifactId, "_").concat(artifactType);
        }
        function selectArtifactWithPolicyTipsByObjectId(artifactObjectId, artifactType) {
            return "".concat(artifactObjectId, "_").concat(artifactType);
        }
        function selectPolicyTip(artifactId, artifactType, ruleObjectId) {
            return "".concat(artifactId, "_").concat(artifactType, "_").concat(ruleObjectId);
        }
        function selectPolicyTipByObjectId(artifactObjectId, artifactType, ruleObjectId) {
            return "".concat(artifactObjectId, "_").concat(artifactType, "_").concat(ruleObjectId);
        }
        var artifactsWithPolicyTipsAdapter = (0, ngrx_entity.H)({
            selectId: function(artifactWithPolicyTips) {
                return artifactWithPolicyTips.artifactType === artifact_type.B.Artifact ? selectArtifactWithPolicyTipsByObjectId(artifactWithPolicyTips.artifactObjectId, artifactWithPolicyTips.artifactType) : selectArtifactWithPolicyTips(artifactWithPolicyTips.artifactId, artifactWithPolicyTips.artifactType);
            },
            sortComparer: !1
        }), policyTipsAdapter = (0, ngrx_entity.H)({
            selectId: function(policyTip) {
                return policyTip.artifactType === artifact_type.B.Artifact ? selectPolicyTipByObjectId(policyTip.artifactObjectId, policyTip.artifactType, policyTip.ruleObjectId) : selectPolicyTip(policyTip.artifactId, policyTip.artifactType, policyTip.ruleObjectId);
            },
            sortComparer: !1
        }), dlp_policy_tips_initialState = {
            artifactWithPolicyTipsState: artifactsWithPolicyTipsAdapter.getInitialState({}),
            policyTipsState: policyTipsAdapter.getInitialState({}),
            loadingCurrentSidePanelTipsState: LoadingCurrentSidePanelTipsState.INIT
        };
        function getPolicyTipId(payload) {
            return payload.artifactType === artifact_type.B.Artifact ? selectPolicyTipByObjectId(payload.artifactObjectId, payload.artifactType, payload.ruleObjectId) : selectPolicyTip(payload.id, payload.artifactType, payload.ruleObjectId);
        }
        function toDlpPolicyTipAction(userAction) {
            return userAction === OverrideRuleUserAction.ReportFalsePositiveAndOverride ? DlpPolicyTipAction.ReportFalsePositiveAndOverride : DlpPolicyTipAction.Override;
        }
        var reducers_reducers = {
            artifactPolicyTips: function(state, action) {
                switch (void 0 === state && (state = dlp_policy_tips_initialState), action.type) {
                  case "[Dlp] Get_Artifact_Policy_Tips":
                    return (payload = action.payload) ? payload.artifactType !== artifact_type.B.Model && payload.artifactType !== artifact_type.B.Artifact ? state : (0, 
                    tslib_es6.__assign)((0, tslib_es6.__assign)({}, state), {
                        loadingCurrentSidePanelTipsState: payload.forSidePanel ? LoadingCurrentSidePanelTipsState.LOADING : state.loadingCurrentSidePanelTipsState
                    }) : state;

                  case "[Dlp] Get_Artifact_Policy_Tips_Success":
                    var payload_1 = action.payload;
                    return payload_1 ? payload_1.artifactType !== artifact_type.B.Model && payload_1.artifactType !== artifact_type.B.Artifact ? state : _.isEmpty(payload_1.artifactPolicyTips) ? (0, 
                    tslib_es6.__assign)((0, tslib_es6.__assign)({}, state), {
                        loadingCurrentSidePanelTipsState: payload_1.forSidePanel ? LoadingCurrentSidePanelTipsState.LOADED : state.loadingCurrentSidePanelTipsState
                    }) : (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, state), {
                        artifactWithPolicyTipsState: artifactsWithPolicyTipsAdapter.setOne((artifact = payload_1.artifactPolicyTips, 
                        artifactType = payload_1.artifactType, {
                            artifactId: artifact.artifactId,
                            artifactObjectId: artifact.artifactObjectId,
                            artifactType,
                            lastProcessedTime: artifact.lastProcessedTime,
                            ruleObjectIds: _.map(artifact.policyTips, function(p) {
                                return p.ruleObjectId;
                            })
                        }), state.artifactWithPolicyTipsState),
                        policyTipsState: policyTipsAdapter.setMany(_.map(payload_1.artifactPolicyTips.policyTips, function(p) {
                            return function(artifactId, artifactObjectId, artifactType, policyTip) {
                                return {
                                    artifactId,
                                    artifactObjectId,
                                    artifactType,
                                    policyTipText: policyTip.policyTipText,
                                    matchingConditions: (0, tslib_es6.__assign)({}, policyTip.matchingConditions),
                                    matchedConditionDescriptions: (0, tslib_es6.__spreadArray)([], policyTip.matchedConditionDescriptions, !0),
                                    ruleObjectId: policyTip.ruleObjectId,
                                    ruleOverrideOptions: policyTip.ruleOverrideOptions,
                                    actionStatus: _.isNil(policyTip.actionStatus) ? void 0 : {
                                        status: policyTip.actionStatus.status,
                                        action: policyTip.actionStatus.action
                                    },
                                    dlpRestrictOption: policyTip.dlpRestrictOption
                                };
                            }(payload_1.artifactPolicyTips.artifactId, payload_1.artifactPolicyTips.artifactObjectId, payload_1.artifactType, p);
                        }), state.policyTipsState),
                        loadingCurrentSidePanelTipsState: payload_1.forSidePanel ? LoadingCurrentSidePanelTipsState.LOADED : state.loadingCurrentSidePanelTipsState
                    }) : state;

                  case "[Dlp] Get_Artifact_Policy_Tips_Fail":
                    return (payload = action.payload) ? payload.artifactType !== artifact_type.B.Model && payload.artifactType !== artifact_type.B.Artifact ? state : (0, 
                    tslib_es6.__assign)((0, tslib_es6.__assign)({}, state), {
                        loadingCurrentSidePanelTipsState: payload.forSidePanel ? LoadingCurrentSidePanelTipsState.LOADED : state.loadingCurrentSidePanelTipsState
                    }) : state;

                  case "[Dlp] Override_Rule_Success":
                    var payload = action.payload;
                    return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, state), {
                        policyTipsState: policyTipsAdapter.updateOne({
                            id: getPolicyTipId(payload),
                            changes: {
                                actionStatus: {
                                    status: DlpPolicyTipStatus.Succeeded,
                                    action: toDlpPolicyTipAction(payload.userAction)
                                }
                            }
                        }, state.policyTipsState)
                    });

                  case "[Dlp] Override_Rule_Fail":
                    return payload = action.payload, (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, state), {
                        policyTipsState: policyTipsAdapter.updateOne({
                            id: getPolicyTipId(payload),
                            changes: {
                                actionStatus: {
                                    status: DlpPolicyTipStatus.Failed,
                                    action: toDlpPolicyTipAction(payload.userAction)
                                }
                            }
                        }, state.policyTipsState)
                    });

                  case "[Dlp] Report_False_Positive_Rule_Success":
                    return payload = action.payload, (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, state), {
                        policyTipsState: policyTipsAdapter.updateOne({
                            id: getPolicyTipId(payload),
                            changes: {
                                actionStatus: {
                                    status: DlpPolicyTipStatus.Succeeded,
                                    action: DlpPolicyTipAction.ReportFalsePositive
                                }
                            }
                        }, state.policyTipsState)
                    });

                  case "[Dlp] Report_False_Positive_Rule_Fail":
                    return payload = action.payload, (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, state), {
                        policyTipsState: policyTipsAdapter.updateOne({
                            id: getPolicyTipId(payload),
                            changes: {
                                actionStatus: {
                                    status: DlpPolicyTipStatus.Failed,
                                    action: DlpPolicyTipAction.ReportFalsePositive
                                }
                            }
                        }, state.policyTipsState)
                    });

                  case "[Dlp] Remove_Artifact_Policy_Tip":
                    return function(payload, state) {
                        if (!payload) return state;
                        if (payload.artifactType !== artifact_type.B.Model && payload.artifactType !== artifact_type.B.Artifact) return state;
                        var artifactPolicyTips = state.artifactWithPolicyTipsState.entities[payload.artifactType === artifact_type.B.Artifact ? selectArtifactWithPolicyTipsByObjectId(payload.artifactObjectId, payload.artifactType) : selectArtifactWithPolicyTips(payload.id, payload.artifactType)];
                        return artifactPolicyTips ? (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, state), {
                            artifactWithPolicyTipsState: artifactsWithPolicyTipsAdapter.updateOne({
                                id: payload.artifactType === artifact_type.B.Artifact ? selectArtifactWithPolicyTipsByObjectId(payload.artifactObjectId, payload.artifactType) : selectArtifactWithPolicyTips(payload.id, payload.artifactType),
                                changes: {
                                    ruleObjectIds: _.filter(artifactPolicyTips.ruleObjectIds, function(r) {
                                        return r !== payload.ruleObjectId;
                                    })
                                }
                            }, state.artifactWithPolicyTipsState),
                            policyTipsState: policyTipsAdapter.removeOne(payload.artifactType === artifact_type.B.Artifact ? selectPolicyTipByObjectId(payload.artifactObjectId, payload.artifactType, payload.ruleObjectId) : selectPolicyTip(payload.id, payload.artifactType, payload.ruleObjectId), state.policyTipsState)
                        }) : state;
                    }(action.payload, state);

                  case "[Dlp] Clear_Policy_Tip_Action_Status":
                    return payload = action.payload, (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, state), {
                        policyTipsState: policyTipsAdapter.updateOne({
                            id: getPolicyTipId(payload),
                            changes: {
                                actionStatus: void 0
                            }
                        }, state.policyTipsState)
                    });

                  case "[Dlp] Set_Loading_Current_Side_Panel_Tips_State":
                    return (payload = action.payload) ? (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, state), {
                        loadingCurrentSidePanelTipsState: payload.loadingState
                    }) : state;

                  default:
                    return state;
                }
                var artifact, artifactType;
            }
        }, getArtifactPolicyTipsState = (0, ngrx_store.ZF)("artifactPolicyTipsState"), getArtifactsPolicyTipsState = (0, 
        ngrx_store.P1)(getArtifactPolicyTipsState, function(state) {
            return state.artifactPolicyTips.artifactWithPolicyTipsState;
        }), getPolicyTipsState = (0, ngrx_store.P1)(getArtifactPolicyTipsState, function(state) {
            return state.artifactPolicyTips.policyTipsState;
        }), reducers_getLoadingCurrentSidePanelTipsState = (0, ngrx_store.P1)(getArtifactPolicyTipsState, function(state) {
            return state.artifactPolicyTips.loadingCurrentSidePanelTipsState;
        }), getArtifactsWithPolicyTipsEntities = artifactsWithPolicyTipsAdapter.getSelectors(getArtifactsPolicyTipsState).selectEntities, getPolicyTipsEntities = policyTipsAdapter.getSelectors(getPolicyTipsState).selectEntities, DlpPolicyTipStoreService = function() {
            function DlpPolicyTipStoreService(store) {
                this.store = store;
            }
            return DlpPolicyTipStoreService.prototype.loadDatasetPolicyTips = function(id, forSidePanel) {
                this.store.dispatch(new LoadArtifactPolicyTips({
                    id,
                    artifactType: artifact_type.B.Model,
                    forSidePanel
                }));
            }, DlpPolicyTipStoreService.prototype.getDatasetPolicyTipsById = function(id) {
                return this.store.select(function(id) {
                    return (0, ngrx_store.P1)(function(id, artficatType) {
                        return (0, ngrx_store.P1)(getArtifactsWithPolicyTipsEntities, function(entities) {
                            return entities[selectArtifactWithPolicyTips(id, artficatType)];
                        });
                    }(id, artifact_type.B.Model), getPolicyTipsEntities, function(artifact, policyTipEntities) {
                        if (!_.isNil(artifact) && !_.isEmpty(artifact.ruleObjectIds)) return {
                            artifactId: artifact.artifactId,
                            lastProcessedTime: artifact.lastProcessedTime,
                            policyTips: _.chain(artifact.ruleObjectIds).map(function(ruleObjectId) {
                                return policyTipEntities[selectPolicyTip(artifact.artifactId, artifact.artifactType, ruleObjectId)];
                            }).map(function(policyTip) {
                                return {
                                    policyTipText: policyTip.policyTipText,
                                    matchingConditions: policyTip.matchingConditions,
                                    matchedConditionDescriptions: (0, tslib_es6.__spreadArray)([], policyTip.matchedConditionDescriptions, !0),
                                    ruleObjectId: policyTip.ruleObjectId,
                                    ruleOverrideOptions: policyTip.ruleOverrideOptions,
                                    actionStatus: policyTip.actionStatus ? {
                                        status: policyTip.actionStatus.status,
                                        action: policyTip.actionStatus.action
                                    } : void 0,
                                    dlpRestrictOption: policyTip.dlpRestrictOption
                                };
                            }).value()
                        };
                    });
                }(id));
            }, DlpPolicyTipStoreService.prototype.removeDatasetPolicyTipTextById = function(id, ruleObjectId) {
                this.store.dispatch(new RemoveArtifactPolicyTip({
                    id,
                    artifactType: artifact_type.B.Model,
                    ruleObjectId
                }));
            }, DlpPolicyTipStoreService.prototype.overrideRule = function(id, ruleObjectId, userAction, artifactName, artifactWorkspace, justificationText) {
                this.store.dispatch(new OverrideRule({
                    id,
                    artifactType: artifact_type.B.Model,
                    ruleObjectId,
                    userAction,
                    justificationText,
                    artifactName,
                    artifactWorkspace
                }));
            }, DlpPolicyTipStoreService.prototype.reportFalsePositiveRule = function(id, ruleObjectId, artifactName, artifactWorkspace) {
                this.store.dispatch(new ReportFalsePositiveRule({
                    id,
                    artifactType: artifact_type.B.Model,
                    ruleObjectId,
                    artifactName,
                    artifactWorkspace
                }));
            }, DlpPolicyTipStoreService.prototype.clearPolicyTipActionStatus = function(id, ruleObjectId) {
                this.store.dispatch(new ClearPolicyTipActionStatus({
                    id,
                    artifactType: artifact_type.B.Model,
                    ruleObjectId
                }));
            }, DlpPolicyTipStoreService.prototype.loadArtifactPolicyTips = function(artifactObjectId, forSidePanel) {
                this.store.dispatch(new LoadArtifactPolicyTips({
                    artifactObjectId,
                    artifactType: artifact_type.B.Artifact,
                    forSidePanel
                }));
            }, DlpPolicyTipStoreService.prototype.getArtifactPolicyTipsByObjectId = function(artifactObjectId) {
                return this.store.select(function(artifactObjectId) {
                    return (0, ngrx_store.P1)(function(artifactObjectId, artficatType) {
                        return (0, ngrx_store.P1)(getArtifactsWithPolicyTipsEntities, function(entities) {
                            return entities[selectArtifactWithPolicyTipsByObjectId(artifactObjectId, artficatType)];
                        });
                    }(artifactObjectId, artifact_type.B.Artifact), getPolicyTipsEntities, function(artifact, policyTipEntities) {
                        if (!_.isNil(artifact) && !_.isEmpty(artifact.ruleObjectIds)) return {
                            artifactObjectId: artifact.artifactObjectId,
                            lastProcessedTime: artifact.lastProcessedTime,
                            policyTips: _.chain(artifact.ruleObjectIds).map(function(ruleObjectId) {
                                return policyTipEntities[selectPolicyTipByObjectId(artifact.artifactObjectId, artifact.artifactType, ruleObjectId)];
                            }).map(function(policyTip) {
                                return {
                                    policyTipText: policyTip.policyTipText,
                                    matchingConditions: policyTip.matchingConditions,
                                    matchedConditionDescriptions: (0, tslib_es6.__spreadArray)([], policyTip.matchedConditionDescriptions, !0),
                                    ruleObjectId: policyTip.ruleObjectId,
                                    ruleOverrideOptions: policyTip.ruleOverrideOptions,
                                    actionStatus: policyTip.actionStatus ? {
                                        status: policyTip.actionStatus.status,
                                        action: policyTip.actionStatus.action
                                    } : void 0,
                                    dlpRestrictOption: policyTip.dlpRestrictOption
                                };
                            }).value()
                        };
                    });
                }(artifactObjectId));
            }, DlpPolicyTipStoreService.prototype.removeArtifactPolicyTipTextByObjectId = function(artifactObjectId, ruleObjectId) {
                this.store.dispatch(new RemoveArtifactPolicyTip({
                    artifactObjectId,
                    artifactType: artifact_type.B.Artifact,
                    ruleObjectId
                }));
            }, DlpPolicyTipStoreService.prototype.overrideArtifactRule = function(artifactObjectId, ruleObjectId, userAction, artifactName, artifactWorkspace, justificationText) {
                this.store.dispatch(new OverrideRule({
                    artifactObjectId,
                    artifactType: artifact_type.B.Artifact,
                    ruleObjectId,
                    userAction,
                    justificationText,
                    artifactName,
                    artifactWorkspace
                }));
            }, DlpPolicyTipStoreService.prototype.reportArtifactFalsePositiveRule = function(artifactObjectId, ruleObjectId, artifactName, artifactWorkspace) {
                this.store.dispatch(new ReportFalsePositiveRule({
                    artifactObjectId,
                    artifactType: artifact_type.B.Artifact,
                    ruleObjectId,
                    artifactName,
                    artifactWorkspace
                }));
            }, DlpPolicyTipStoreService.prototype.clearArtifactPolicyTipActionStatus = function(artifactObjectId, ruleObjectId) {
                this.store.dispatch(new ClearPolicyTipActionStatus({
                    artifactObjectId,
                    artifactType: artifact_type.B.Artifact,
                    ruleObjectId
                }));
            }, DlpPolicyTipStoreService.prototype.getLoadingCurrentSidePanelTipsState = function() {
                return this.store.select(reducers_getLoadingCurrentSidePanelTipsState);
            }, DlpPolicyTipStoreService.prototype.setLoadingCurrentSidePanelTipsState = function(loadingState) {
                this.store.dispatch(new SetLoadingCurrentSidePanelTipsState({
                    loadingState
                }));
            }, DlpPolicyTipStoreService.\u0275fac = function(t) {
                return new (t || DlpPolicyTipStoreService)(core["\u0275\u0275inject"](ngrx_store.yh));
            }, DlpPolicyTipStoreService.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: DlpPolicyTipStoreService,
                factory: DlpPolicyTipStoreService.\u0275fac,
                providedIn: "root"
            }), DlpPolicyTipStoreService;
        }();
        function DlpPolicyTipMessagesComponent_ng_container_0_Template(rf, ctx) {
            if (1 & rf) {
                var _r3 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "message-banner", 1), 
                core["\u0275\u0275listener"]("buttonClicked", function() {
                    core["\u0275\u0275restoreView"](_r3);
                    var ctx_r2 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r2.onBannerClicked());
                }), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementContainerEnd"]();
            }
            if (2 & rf) {
                var policyTipsMessagesModel_r1 = ctx.$implicit;
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("viewModel", policyTipsMessagesModel_r1);
            }
        }
        var DlpPolicyTipMessagesComponent = function() {
            function DlpPolicyTipMessagesComponent(dlpPolicyTipStoreService, changeDetectorRef, localizationService, datasetStore, featureSwitchService, dlpPolicyTipsPanelService) {
                this.dlpPolicyTipStoreService = dlpPolicyTipStoreService, this.changeDetectorRef = changeDetectorRef, 
                this.localizationService = localizationService, this.datasetStore = datasetStore, 
                this.featureSwitchService = featureSwitchService, this.dlpPolicyTipsPanelService = dlpPolicyTipsPanelService, 
                this.viewAllClicked = new core.EventEmitter, this.policyTipsMessagesModels = [], 
                this.destroy$ = new Subject.xQ;
            }
            return DlpPolicyTipMessagesComponent.prototype.ngOnChanges = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var dataset, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return !this.featureSwitchService.featureSwitches.dlpPolicyTip || !this.datasetId || this.datasetId <= 0 ? [ 2 ] : [ 4, this.datasetStore.findDatasetById(this.datasetId) ];

                          case 1:
                            return dataset = _a.sent(), this.isFromPremiumWS(dataset) ? (this.dlpPolicyTipStoreService.loadDatasetPolicyTips(this.datasetId), 
                            this.dlpPolicyTipStoreService.getDatasetPolicyTipsById(this.datasetId).pipe((0, 
                            operators_tap.b)(function(_) {
                                return _this.policyTipsMessagesModels = [];
                            }), (0, takeUntil.R)(this.destroy$)).subscribe(function(artifactPolicyTips) {
                                var messageModel;
                                _.isNil(artifactPolicyTips) || _.isEmpty(artifactPolicyTips.policyTips) || (messageModel = 1 === artifactPolicyTips.policyTips.length ? {
                                    bannerType: 2,
                                    iconName: "pbi-glyph-info",
                                    message: artifactPolicyTips.policyTips[0].policyTipText,
                                    buttonText: _this.localizationService.get("View")
                                } : {
                                    bannerType: 2,
                                    iconName: "pbi-glyph-info",
                                    message: "".concat(artifactPolicyTips.policyTips[0].policyTipText, " ").concat(_this.localizationService.format("Dlp_PolicyTip_Artifact_Warning", artifactPolicyTips.policyTips.length - 1)),
                                    buttonText: _this.localizationService.get("View_All")
                                }, _this.policyTipsMessagesModels.push(messageModel)), _this.markForCheck();
                            }), [ 2 ]) : [ 2 ];
                        }
                    });
                });
            }, DlpPolicyTipMessagesComponent.prototype.ngOnDestroy = function() {
                this.destroy$.next(), this.destroy$.complete();
            }, DlpPolicyTipMessagesComponent.prototype.onBannerClicked = function() {
                this.dlpPolicyTipsPanelService.showPolicyTipsSidePanel(this.datasetId, void 0, "dataset"), 
                this.viewAllClicked.emit();
            }, DlpPolicyTipMessagesComponent.prototype.markForCheck = function() {
                this.changeDetectorRef && this.changeDetectorRef.markForCheck();
            }, DlpPolicyTipMessagesComponent.prototype.isFromPremiumWS = function(dataset) {
                return null !== dataset.capacityObjectId || 1 === dataset.sharedFromEnterpriseCapacitySkuTier;
            }, DlpPolicyTipMessagesComponent.\u0275fac = function(t) {
                return new (t || DlpPolicyTipMessagesComponent)(core["\u0275\u0275directiveInject"](DlpPolicyTipStoreService), core["\u0275\u0275directiveInject"](core.ChangeDetectorRef), core["\u0275\u0275directiveInject"](localization_service.o), core["\u0275\u0275directiveInject"](dataset_store_service.s), core["\u0275\u0275directiveInject"](feature_switch_service.vZ), core["\u0275\u0275directiveInject"](DlpPolicyTipsSidePanelInjectionToken));
            }, DlpPolicyTipMessagesComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: DlpPolicyTipMessagesComponent,
                selectors: [ [ "dlp-policy-tip-messages" ] ],
                inputs: {
                    datasetId: "datasetId"
                },
                outputs: {
                    viewAllClicked: "viewAllClicked"
                },
                features: [ core["\u0275\u0275NgOnChangesFeature"] ],
                decls: 1,
                vars: 1,
                consts: [ [ 4, "ngFor", "ngForOf" ], [ 3, "viewModel", "buttonClicked" ] ],
                template: function(rf, ctx) {
                    1 & rf && core["\u0275\u0275template"](0, DlpPolicyTipMessagesComponent_ng_container_0_Template, 2, 1, "ng-container", 0), 
                    2 & rf && core["\u0275\u0275property"]("ngForOf", ctx.policyTipsMessagesModels);
                },
                dependencies: [ common.NgForOf, message_banner_component.A ],
                styles: [ "[_nghost-%COMP%]   message-banner[_ngcontent-%COMP%]{margin-bottom:0}[_nghost-%COMP%]   message-banner[_ngcontent-%COMP%]     .message-banner i{margin-top:4px;color:var(--gray-130, #605E5C)}[_nghost-%COMP%]   message-banner[_ngcontent-%COMP%]     .message-banner .message-banner-warning{padding:6px 8px}[_nghost-%COMP%]   message-banner[_ngcontent-%COMP%]     .message-banner .message-banner-text-container{display:flex!important;color:var(--gray-160, #323130);width:100%}[_nghost-%COMP%]   message-banner[_ngcontent-%COMP%]     .message-banner .message-banner-text-container .message-banner-text{flex:1;margin-top:4px;margin-right:8px}[_nghost-%COMP%]   message-banner[_ngcontent-%COMP%]     .message-banner button{align-self:unset!important;height:24px;max-width:150px;background-color:#fff;margin-left:8px}" ],
                changeDetection: 0
            }), DlpPolicyTipMessagesComponent;
        }(), pbi_lazy_load_component = __webpack_require__(18460), pbi_focus_trap_directive = __webpack_require__(69542), dlp_policy_tips_panel_component_c0 = function(a0, a1, a2) {
            return {
                datasetId: a0,
                artifactObjectId: a1,
                artifactType: a2
            };
        }, DlpPolicyTipsPanelComponent = function() {
            function DlpPolicyTipsPanelComponent(router, dlpPolicyTipsPanelService) {
                this.router = router, this.dlpPolicyTipsPanelService = dlpPolicyTipsPanelService, 
                this.ComponentId = "DlpPolicyTipsPanelContainerComponentId", this.ModulePath = "@powerbi/DlpPolicyTipsSidePanel/dlp-policy-tips-side-panel.module#DlpPolicyTipsSidePanelModule", 
                this.destroy$ = new Subject.xQ;
            }
            return DlpPolicyTipsPanelComponent.prototype.ngOnInit = function() {
                var _this = this;
                this.router.events.pipe((0, takeUntil.R)(this.destroy$)).subscribe(function(_) {
                    _this.dlpPolicyTipsPanelService.hidePolicyTipsSidePanel();
                });
            }, DlpPolicyTipsPanelComponent.prototype.ngOnDestroy = function() {
                this.destroy$.next(), this.destroy$.complete();
            }, DlpPolicyTipsPanelComponent.\u0275fac = function(t) {
                return new (t || DlpPolicyTipsPanelComponent)(core["\u0275\u0275directiveInject"](fesm2022_router.F0), core["\u0275\u0275directiveInject"](DlpPolicyTipsSidePanelInjectionToken));
            }, DlpPolicyTipsPanelComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: DlpPolicyTipsPanelComponent,
                selectors: [ [ "dlp-policy-tips-panel" ] ],
                inputs: {
                    policyTipsSidePaneInput: "policyTipsSidePaneInput"
                },
                decls: 2,
                vars: 8,
                consts: [ [ "role", "dialog", "focus-trap", "", 1, "panel" ], [ 3, "modulePath", "componentId", "inputArgs", "outputArgs" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementStart"](0, "div", 0), core["\u0275\u0275element"](1, "pbi-lazy-load", 1), 
                    core["\u0275\u0275elementEnd"]()), 2 & rf && (core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("modulePath", ctx.ModulePath)("componentId", ctx.ComponentId)("inputArgs", core["\u0275\u0275pureFunction3"](4, dlp_policy_tips_panel_component_c0, ctx.policyTipsSidePaneInput.artifactId, ctx.policyTipsSidePaneInput.artifactObjectId, ctx.policyTipsSidePaneInput.artifactType))("outputArgs", void 0));
                },
                dependencies: [ pbi_lazy_load_component.R, pbi_focus_trap_directive.d ],
                styles: [ ".panel[_ngcontent-%COMP%]{position:flex;height:100%;background:var(--fluent-theme-white-color, #FFF);box-shadow:0 4.8px 14.4px rgba(0,0,0,.18),0 25.6px 57.6px rgba(0,0,0,.22)}" ],
                changeDetection: 0
            }), DlpPolicyTipsPanelComponent;
        }(), DlpPolicyTipsGetArtifactPolicyTips = telemetryHelpers.cx["PBI.DlpPolicyTips.GetArtifactPolicyTips"] = (0, 
        telemetryHelpers.b1)("PBI.DlpPolicyTips.GetArtifactPolicyTips"), DlpPolicyTipsOverrideRule = telemetryHelpers.cx["PBI.DlpPolicyTips.OverrideRule"] = (0, 
        telemetryHelpers.b1)("PBI.DlpPolicyTips.OverrideRule"), DlpPolicyTipsReportFalsePositiveRule = telemetryHelpers.cx["PBI.DlpPolicyTips.ReportFalsePositiveRule"] = (0, 
        telemetryHelpers.b1)("PBI.DlpPolicyTips.ReportFalsePositiveRule"), empty = __webpack_require__(37272), timer = __webpack_require__(40133), DlpPolicyTipHttpService = function() {
            function DlpPolicyTipHttpService(httpService) {
                this.httpService = httpService, this.baseUri = "/metadata/dlp";
            }
            return DlpPolicyTipHttpService.prototype.getDatasetPolicyTips = function(id) {
                var uri = "".concat(this.baseUri, "/models/").concat(id, "/policyTips");
                return this.httpService.get(uri);
            }, DlpPolicyTipHttpService.prototype.overrideRule = function(datasetId, ruleObjectId, userAction, justificationText) {
                var uri = "".concat(this.baseUri, "/models/").concat(datasetId, "/rules/").concat(ruleObjectId, "/override");
                return this.httpService.post(uri, {
                    userAction,
                    justificationText
                });
            }, DlpPolicyTipHttpService.prototype.reportFalsePositiveRule = function(datasetId, ruleObjectId) {
                var uri = "".concat(this.baseUri, "/models/").concat(datasetId, "/rules/").concat(ruleObjectId, "/reportFalsePositive");
                return this.httpService.post(uri, {});
            }, DlpPolicyTipHttpService.prototype.getArtifactPolicyTips = function(artifactObjectId) {
                var uri = "".concat(this.baseUri, "/artifacts/").concat(artifactObjectId, "/policyTips");
                return this.httpService.get(uri);
            }, DlpPolicyTipHttpService.prototype.overrideArtifactRule = function(artifactObjectId, ruleObjectId, userAction, justificationText) {
                var uri = "".concat(this.baseUri, "/artifacts/").concat(artifactObjectId, "/rules/").concat(ruleObjectId, "/override");
                return this.httpService.post(uri, {
                    userAction,
                    justificationText
                });
            }, DlpPolicyTipHttpService.prototype.reportArtifactFalsePositiveRule = function(artifactObjectId, ruleObjectId) {
                var uri = "".concat(this.baseUri, "/artifacts/").concat(artifactObjectId, "/rules/").concat(ruleObjectId, "/reportFalsePositive");
                return this.httpService.post(uri, {});
            }, DlpPolicyTipHttpService.\u0275fac = function(t) {
                return new (t || DlpPolicyTipHttpService)(core["\u0275\u0275inject"](http_service.O));
            }, DlpPolicyTipHttpService.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: DlpPolicyTipHttpService,
                factory: DlpPolicyTipHttpService.\u0275fac,
                providedIn: "root"
            }), DlpPolicyTipHttpService;
        }(), ArtifactPolicyTipsEffects = function() {
            function ArtifactPolicyTipsEffects(actions$, dlpPolicyTipHttpService, dlpPolicyTipStoreService, telemetryService) {
                var _this = this;
                this.actions$ = actions$, this.dlpPolicyTipHttpService = dlpPolicyTipHttpService, 
                this.dlpPolicyTipStoreService = dlpPolicyTipStoreService, this.telemetryService = telemetryService, 
                this.loadDlpPolicyTips$ = (0, ngrx_effects.GW)(function() {
                    return _this.actions$.pipe((0, ngrx_effects.l4)("[Dlp] Get_Artifact_Policy_Tips"), (0, 
                    operators_map.U)(function(action) {
                        return action.payload;
                    }), (0, operators_switchMap.w)(function(payload) {
                        switch (payload.artifactType) {
                          case artifact_type.B.Model:
                            return (0, observable_combineLatest.aj)([ (0, observable_of.of)(payload), _this.dlpPolicyTipStoreService.getDatasetPolicyTipsById(payload.id).pipe((0, 
                            operators_take.q)(1)) ]);

                          case artifact_type.B.Artifact:
                            return (0, observable_combineLatest.aj)([ (0, observable_of.of)(payload), _this.dlpPolicyTipStoreService.getArtifactPolicyTipsByObjectId(payload.artifactObjectId).pipe((0, 
                            operators_take.q)(1)) ]);

                          default:
                            return empty.E;
                        }
                    }), (0, mergeMap.zg)(function(_a) {
                        var payload = _a[0];
                        if (_a[1]) return payload.forSidePanel && _this.dlpPolicyTipStoreService.setLoadingCurrentSidePanelTipsState(LoadingCurrentSidePanelTipsState.LOADED), 
                        empty.E;
                        var getPolicyTipsTelemetryEvent = _this.telemetryService.startEvent(DlpPolicyTipsGetArtifactPolicyTips, {
                            artifactId: payload.id,
                            artifactObjectId: payload.artifactObjectId,
                            artifactType: payload.artifactType
                        });
                        return (payload.artifactType === artifact_type.B.Model ? _this.dlpPolicyTipHttpService.getDatasetPolicyTips(payload.id) : _this.dlpPolicyTipHttpService.getArtifactPolicyTips(payload.artifactObjectId)).pipe((0, 
                        operators_map.U)(function(response) {
                            return response.data;
                        }), (0, concatMap.b)(function(dlpLoadPolicyTipsResponse) {
                            var loadArtifactPolicyTipsSuccessPayload;
                            return getPolicyTipsTelemetryEvent.resolve(), loadArtifactPolicyTipsSuccessPayload = !dlpLoadPolicyTipsResponse || _.isEmpty(dlpLoadPolicyTipsResponse.policyTips) ? {
                                id: payload.id,
                                artifactObjectId: payload.artifactObjectId,
                                artifactType: payload.artifactType,
                                artifactPolicyTips: void 0,
                                forSidePanel: payload.forSidePanel
                            } : {
                                id: dlpLoadPolicyTipsResponse.artifactId,
                                artifactObjectId: dlpLoadPolicyTipsResponse.artifactObjectId,
                                artifactType: dlpLoadPolicyTipsResponse.artifactType,
                                artifactPolicyTips: ArtifactPolicyTipsEffects.createArtifactPolicyTips(dlpLoadPolicyTipsResponse),
                                forSidePanel: payload.forSidePanel
                            }, (0, observable_of.of)(new LoadArtifactPolicyTipsSuccess(loadArtifactPolicyTipsSuccessPayload));
                        }), (0, operators_catchError.K)(function(error) {
                            return getPolicyTipsTelemetryEvent.reject((0, errorDetailsHelper.GB)(error.error, error.status)), 
                            (0, observable_of.of)(new LoadArtifactPolicyTipsFail(payload));
                        }));
                    }));
                }), this.overrideRule$ = (0, ngrx_effects.GW)(function() {
                    return _this.actions$.pipe((0, ngrx_effects.l4)("[Dlp] Override_Rule"), (0, operators_map.U)(function(action) {
                        return action.payload;
                    }), (0, operators_filter.h)(function(payload) {
                        return payload.artifactType === artifact_type.B.Model || payload.artifactType === artifact_type.B.Artifact;
                    }), (0, mergeMap.zg)(function(payload) {
                        var overrideRuleEvent = _this.telemetryService.startEvent(DlpPolicyTipsOverrideRule, {
                            artifactId: payload.id,
                            artifactObjectId: payload.artifactObjectId,
                            artifactType: payload.artifactType,
                            userAction: payload.userAction
                        }), isModel = payload.artifactType === artifact_type.B.Model;
                        return (isModel ? _this.dlpPolicyTipHttpService.overrideRule(payload.id, payload.ruleObjectId, payload.userAction, payload.justificationText) : _this.dlpPolicyTipHttpService.overrideArtifactRule(payload.artifactObjectId, payload.ruleObjectId, payload.userAction, payload.justificationText)).pipe((0, 
                        mergeMap.zg)(function(_) {
                            return overrideRuleEvent.resolve(), (0, timer.H)(0, 1e4).pipe((0, operators_take.q)(2), (0, 
                            mergeMap.zg)(function(i) {
                                return (0, observable_of.of)(0 === i ? new OverrideRuleSuccess(isModel ? {
                                    id: payload.id,
                                    artifactType: payload.artifactType,
                                    ruleObjectId: payload.ruleObjectId,
                                    userAction: payload.userAction
                                } : {
                                    artifactObjectId: payload.artifactObjectId,
                                    artifactType: payload.artifactType,
                                    ruleObjectId: payload.ruleObjectId,
                                    userAction: payload.userAction
                                }) : new RemoveArtifactPolicyTip(isModel ? {
                                    id: payload.id,
                                    artifactType: payload.artifactType,
                                    ruleObjectId: payload.ruleObjectId
                                } : {
                                    artifactObjectId: payload.artifactObjectId,
                                    artifactType: payload.artifactType,
                                    ruleObjectId: payload.ruleObjectId
                                }));
                            }));
                        }), (0, operators_catchError.K)(function(result) {
                            return overrideRuleEvent.reject((0, errorDetailsHelper.GB)(result.error)), (0, observable_of.of)(new OverrideRuleFail(isModel ? {
                                id: payload.id,
                                artifactType: payload.artifactType,
                                ruleObjectId: payload.ruleObjectId,
                                userAction: payload.userAction
                            } : {
                                artifactObjectId: payload.artifactObjectId,
                                artifactType: payload.artifactType,
                                ruleObjectId: payload.ruleObjectId,
                                userAction: payload.userAction
                            }));
                        }));
                    }));
                }), this.reportFalsePositiveRule$ = (0, ngrx_effects.GW)(function() {
                    return _this.actions$.pipe((0, ngrx_effects.l4)("[Dlp] Report_False_Positive_Rule"), (0, 
                    operators_map.U)(function(action) {
                        return action.payload;
                    }), (0, operators_filter.h)(function(payload) {
                        return payload.artifactType === artifact_type.B.Model || payload.artifactType === artifact_type.B.Artifact;
                    }), (0, mergeMap.zg)(function(payload) {
                        var reportFalsePositiveEvent = _this.telemetryService.startEvent(DlpPolicyTipsReportFalsePositiveRule, {
                            artifactId: payload.id,
                            artifactType: payload.artifactType
                        }), isModel = payload.artifactType === artifact_type.B.Model;
                        return (isModel ? _this.dlpPolicyTipHttpService.reportFalsePositiveRule(payload.id, payload.ruleObjectId) : _this.dlpPolicyTipHttpService.reportArtifactFalsePositiveRule(payload.artifactObjectId, payload.ruleObjectId)).pipe((0, 
                        mergeMap.zg)(function(_) {
                            return reportFalsePositiveEvent.resolve(), (0, observable_of.of)(new ReportFalsePositiveRuleSuccess(isModel ? {
                                id: payload.id,
                                artifactType: payload.artifactType,
                                ruleObjectId: payload.ruleObjectId
                            } : {
                                artifactObjectId: payload.artifactObjectId,
                                artifactType: payload.artifactType,
                                ruleObjectId: payload.ruleObjectId
                            }));
                        }), (0, operators_catchError.K)(function(result) {
                            return reportFalsePositiveEvent.reject((0, errorDetailsHelper.GB)(result.error)), 
                            (0, observable_of.of)(new ReportFalsePositiveRuleFail(isModel ? {
                                id: payload.id,
                                artifactType: payload.artifactType,
                                ruleObjectId: payload.ruleObjectId
                            } : {
                                artifactObjectId: payload.artifactObjectId,
                                artifactType: payload.artifactType,
                                ruleObjectId: payload.ruleObjectId
                            }));
                        }));
                    }));
                });
            }
            return ArtifactPolicyTipsEffects.createArtifactPolicyTips = function(dlpLoadPolicyTipsResponse) {
                return {
                    artifactId: dlpLoadPolicyTipsResponse.artifactId,
                    artifactObjectId: dlpLoadPolicyTipsResponse.artifactObjectId,
                    policyTips: _.map(dlpLoadPolicyTipsResponse.policyTips, function(p) {
                        return ArtifactPolicyTipsEffects.createDlpPolicyTip(p);
                    }),
                    lastProcessedTime: dlpLoadPolicyTipsResponse.lastProcessedTime
                };
            }, ArtifactPolicyTipsEffects.createDlpPolicyTip = function(dlpPolicyTipContract) {
                return {
                    matchedConditionDescriptions: dlpPolicyTipContract.matchedConditionDescriptions,
                    matchingConditions: ArtifactPolicyTipsEffects.createMatchingConditions(dlpPolicyTipContract.matchingConditions),
                    policyTipText: dlpPolicyTipContract.policyTipText,
                    ruleObjectId: dlpPolicyTipContract.ruleObjectId,
                    ruleOverrideOptions: dlpPolicyTipContract.ruleOverrideOptions,
                    dlpRestrictOption: dlpPolicyTipContract.dlpRestrictOption
                };
            }, ArtifactPolicyTipsEffects.createMatchingConditions = function(dlpMatchingConditionsContract) {
                if (!_.isNil(dlpMatchingConditionsContract)) return {
                    sensitivityLabel: ArtifactPolicyTipsEffects.createDlpSensitivityLabel(dlpMatchingConditionsContract.sensitivityLabel),
                    sensitiveInfoTypes: ArtifactPolicyTipsEffects.createDlpSensitiveInfoType(dlpMatchingConditionsContract.sensitiveInfoTypes)
                };
            }, ArtifactPolicyTipsEffects.createDlpSensitivityLabel = function(dlpSensitivityLabelContract) {
                if (!_.isNil(dlpSensitivityLabelContract)) return {
                    id: dlpSensitivityLabelContract.id,
                    name: dlpSensitivityLabelContract.name
                };
            }, ArtifactPolicyTipsEffects.createDlpSensitiveInfoType = function(dlpSensitiveInfoTypeContracts) {
                if (!_.isNil(dlpSensitiveInfoTypeContracts) && !_.isEmpty(dlpSensitiveInfoTypeContracts)) return _.map(dlpSensitiveInfoTypeContracts, function(sit) {
                    return {
                        id: sit.id,
                        name: sit.name,
                        count: sit.count,
                        confidence: sit.confidence
                    };
                });
            }, ArtifactPolicyTipsEffects.\u0275fac = function(t) {
                return new (t || ArtifactPolicyTipsEffects)(core["\u0275\u0275inject"](ngrx_effects.eX), core["\u0275\u0275inject"](DlpPolicyTipHttpService), core["\u0275\u0275inject"](DlpPolicyTipStoreService), core["\u0275\u0275inject"](Telemetry.y0));
            }, ArtifactPolicyTipsEffects.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: ArtifactPolicyTipsEffects,
                factory: ArtifactPolicyTipsEffects.\u0275fac
            }), ArtifactPolicyTipsEffects;
        }(), DlpPolicyTipsModule = function() {
            function DlpPolicyTipsModule() {}
            return DlpPolicyTipsModule.\u0275fac = function(t) {
                return new (t || DlpPolicyTipsModule);
            }, DlpPolicyTipsModule.\u0275mod = core["\u0275\u0275defineNgModule"]({
                type: DlpPolicyTipsModule
            }), DlpPolicyTipsModule.\u0275inj = core["\u0275\u0275defineInjector"]({
                imports: [ common.CommonModule, ngrx_store.Aw.forFeature("artifactPolicyTipsState", reducers_reducers), ngrx_effects.sQ.forFeature([ ArtifactPolicyTipsEffects ]), lazy_load_module.N ]
            }), DlpPolicyTipsModule;
        }(), message_banner_module = __webpack_require__(52040), tri_link = __webpack_require__(16149), tri_tooltip = __webpack_require__(8816), dlp_policy_ui_module_manifests = [ {
            type: DlpPolicyTipMessagesComponent,
            componentId: "DlpPolicyTipMessagesComponentComponentId"
        }, {
            type: DlpPolicyTipsPanelComponent,
            componentId: "DlpPolicyTipsPanelComponentId"
        } ], DlpPolicyUIModule = function() {
            function DlpPolicyUIModule() {}
            return DlpPolicyUIModule.\u0275fac = function(t) {
                return new (t || DlpPolicyUIModule);
            }, DlpPolicyUIModule.\u0275mod = core["\u0275\u0275defineNgModule"]({
                type: DlpPolicyUIModule
            }), DlpPolicyUIModule.\u0275inj = core["\u0275\u0275defineInjector"]({
                imports: [ common.CommonModule, DlpPolicyTipsModule, lazy_load_module.N.withManifests(dlp_policy_ui_module_manifests), localization_module.v, divider.t, message_banner_module.x, a11y_module._, tri_link.m, tri_svg_icon.T6, tri_tooltip.w, DlpPolicyTipsModule ]
            }), DlpPolicyUIModule;
        }(), ItemHoverCardModule = function() {
            function ItemHoverCardModule() {}
            return ItemHoverCardModule.\u0275fac = function(t) {
                return new (t || ItemHoverCardModule);
            }, ItemHoverCardModule.\u0275mod = core["\u0275\u0275defineNgModule"]({
                type: ItemHoverCardModule
            }), ItemHoverCardModule.\u0275inj = core["\u0275\u0275defineInjector"]({
                imports: [ common.CommonModule, fesm2022_router.Bz, localization_module.v, lazy_load_module.N, DlpPolicyUIModule, ArtifactIconsModule, tri_svg_icon.T6, tri_tooltip.w, tri_link.m ]
            }), ItemHoverCardModule;
        }(), group_dataset_selector = __webpack_require__(28726), app_selector = __webpack_require__(89424), shared_with_me_selector = __webpack_require__(14556), PowerBIContracts_constants = __webpack_require__(2142);
        function fromUsageMetrics(artifact, store, groupId) {
            return !!artifact && (fromUsageMetricsPackage(getPackage(artifact, store), store) || fromUsageMetricsPackage(function(artifact, store, groupId) {
                var packageId, legacyPackage, model_1;
                if (artifact.contentTileType === contracts.ty.Report && (getModelServiceDatasets(store, groupId).pipe((0, 
                operators_take.q)(1)).subscribe(function(datasetsWithCategories) {
                    var dataset = _.find(datasetsWithCategories, function(datasetsWithCategories) {
                        return datasetsWithCategories.dataset.id === artifact.modelId;
                    });
                    model_1 = dataset && dataset.dataset;
                }), packageId = model_1 && model_1.packageId), packageId) return store.select(package_selector.it).pipe((0, 
                operators_take.q)(1)).subscribe(function(packages) {
                    legacyPackage = _.find(packages, function(p) {
                        return p.id === packageId;
                    });
                }), legacyPackage;
            }(artifact, store, groupId), store));
        }
        function getModelServiceDatasets(store, groupId) {
            return groupId ? (0, observable_combineLatest.aj)(store.select(group_dataset_selector.Rx, {
                id: groupId
            }), store.select(app_selector._j), store.select(shared_with_me_selector.ZE)).pipe((0, 
            operators_map.U)(function(_a) {
                var isInGroupOrFolderWorkspace = !(groupId === PowerBIContracts_constants.wku);
                return [ _a[0], isInGroupOrFolderWorkspace ? [] : _a[1], isInGroupOrFolderWorkspace ? [] : _a[2] ];
            }), (0, operators_map.U)(function(_a) {
                return helpers_datasets.N6(_a[0], _a[1], _a[2]);
            })) : store.select(group_dataset_selector.F8);
        }
        function isUsageMetricsPackage(pkg) {
            return pkg && (0, PowerBIContracts_constants.PpD)(pkg);
        }
        function getPackage(artifact, store) {
            var packageId, legacyPackage;
            if (artifact.contentTileType !== contracts.ty.Report && artifact.contentTileType !== contracts.ty.Dataset || (packageId = artifact.packageId), 
            packageId) return store.select(package_selector.it).pipe((0, operators_take.q)(1)).subscribe(function(packages) {
                legacyPackage = _.find(packages, function(p) {
                    return p.id === packageId;
                });
            }), legacyPackage;
        }
        function getReportPackage(report, store) {
            var packageId = report.packageId;
            return packageId ? store.select(package_selector.it).pipe((0, operators_take.q)(1), (0, 
            operators_map.U)(function(packages) {
                return _.find(packages, function(p) {
                    return p.id === packageId;
                });
            })) : empty.E;
        }
        function isLegacyUsageMetricsPackage(pkg) {
            return pkg && (0, PowerBIContracts_constants.k4X)(pkg.contentProviderId);
        }
        function fromUsageMetricsPackage(pkg, store) {
            return !!pkg && (!!isUsageMetricsPackage(pkg) || !!_.isNumber(pkg.originalPackageId) && (store.select(package_selector.it).pipe((0, 
            operators_take.q)(1)).subscribe(function(packages) {
                originalPackage = _.find(packages, function(p) {
                    return p.id === pkg.originalPackageId;
                });
            }), isUsageMetricsPackage(originalPackage)));
            var originalPackage;
        }
        function fromLegacyUsageMetricsPackage(pkg, store) {
            return !!pkg && (!!isLegacyUsageMetricsPackage(pkg) || !!_.isNumber(pkg.originalPackageId) && (store.select(package_selector.it).pipe((0, 
            operators_take.q)(1)).subscribe(function(packages) {
                originalPackage = _.find(packages, function(p) {
                    return p.id === pkg.originalPackageId;
                });
            }), isLegacyUsageMetricsPackage(originalPackage)));
            var originalPackage;
        }
        var actions_dataset = __webpack_require__(14967), actions_package = __webpack_require__(47824), actions_report = __webpack_require__(98632), group_report_selector = __webpack_require__(40521), content_provider_http_service = __webpack_require__(75947), UsageMetricsHttpService = function() {
            function UsageMetricsHttpService(telemetryService, promiseFactory, httpService, featureSwitchService, store) {
                var _this = this;
                this.telemetryService = telemetryService, this.promiseFactory = promiseFactory, 
                this.httpService = httpService, this.featureSwitchService = featureSwitchService, 
                this.store = store, this.store.select(group_selector.iF).pipe((0, operators_take.q)(1)).subscribe(function(id) {
                    return _this.myFolderObjectId = id;
                });
            }
            return UsageMetricsHttpService.prototype.getPackage = function(artifactType, groupObjectId, groupNumericId, parentEvent) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var telemetryEvent, urlTemplate, queryParams, featureSwitches, endpoint, options, result, error_1, deferred, errorDetails, errorCode;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            telemetryEvent = this.telemetryService.startChildEvent(parentEvent, events.UT, {
                                artifactType
                            }), _a.label = 1;

                          case 1:
                            switch (_a.trys.push([ 1, 3, , 4 ]), urlTemplate = void 0, artifactType) {
                              case "Report":
                                urlTemplate = "powerbi/content/providers/usagemetrics/report/";
                                break;

                              case "Dashboard":
                                urlTemplate = "powerbi/content/providers/usagemetrics/dashboard/";
                                break;

                              case "ReportV2":
                                urlTemplate = groupObjectId === Common_contracts.fm || !_.isEmpty(this.myFolderObjectId) && groupObjectId === this.myFolderObjectId ? "beta/myorg/usageMetricsReportV2" : "beta/myorg/groups/".concat(groupObjectId, "/usageMetricsReportV2");
                            }
                            return queryParams = {}, featureSwitches = this.featureSwitchService.featureSwitches, 
                            "Report" !== artifactType && "Dashboard" !== artifactType || (this.addParamIfDefined(queryParams, "allowUpgrade", featureSwitches && featureSwitches.usageMetricsUpgrade ? "true" : void 0), 
                            this.addParamIfDefined(queryParams, "folderId", groupNumericId)), endpoint = QueryStringUtil.s.addOrUpdateQueryStringToUrl(urlTemplate, queryParams), 
                            options = this.httpService.powerbiRequestOptions(parentEvent, "getPackage"), [ 4, this.httpService.get(endpoint, options) ];

                          case 2:
                            return result = _a.sent(), telemetryEvent.resolve(), [ 2, result.data ];

                          case 3:
                            return error_1 = _a.sent(), deferred = this.promiseFactory.defer(), errorDetails = (0, 
                            errorDetailsHelper.GB)(error_1.error), telemetryEvent.reject(errorDetails), errorCode = this.getErrorCode(error_1), 
                            deferred.reject({
                                errorCode,
                                requestId: error_1.requestId,
                                error: error_1.error
                            }), [ 2, deferred.promise ];

                          case 4:
                            return [ 2 ];
                        }
                    });
                });
            }, UsageMetricsHttpService.prototype.usageReportUpgradeAvailable = function(parentEvent, groupObjectId) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var telemetryEvent, endpoint, options, result, error_2, deferred, errorDetails, errorCode;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            telemetryEvent = this.telemetryService.startChildEvent(parentEvent, events.Y6), 
                            _a.label = 1;

                          case 1:
                            return _a.trys.push([ 1, 3, , 4 ]), endpoint = "".concat("metadata/v201906/metrics", "/workspace/").concat(groupObjectId, "/UsageReportUpgradeAvailable"), 
                            options = this.httpService.powerbiRequestOptions(null, "UsageReportUpgradeAvailable"), 
                            [ 4, this.httpService.get(endpoint, options) ];

                          case 2:
                            return result = _a.sent(), telemetryEvent.resolve(), [ 2, result.data ];

                          case 3:
                            return error_2 = _a.sent(), deferred = this.promiseFactory.defer(), errorDetails = (0, 
                            errorDetailsHelper.GB)(error_2.error), telemetryEvent.reject(errorDetails), errorCode = this.getErrorCode(error_2), 
                            deferred.reject({
                                errorCode,
                                requestId: error_2.requestId,
                                error: error_2.error
                            }), [ 2, deferred.promise ];

                          case 4:
                            return [ 2 ];
                        }
                    });
                });
            }, UsageMetricsHttpService.prototype.getErrorCode = function(errorResponse) {
                var errorCode;
                return errorResponse && (errorResponse.error ? errorCode = errorResponse.error.code : errorResponse.status && (errorCode = errorResponse.status.toString())), 
                errorCode;
            }, UsageMetricsHttpService.prototype.addParamIfDefined = function(queryParams, key, value) {
                value && (queryParams[key] = value.toString());
            }, UsageMetricsHttpService.\u0275fac = function(t) {
                return new (t || UsageMetricsHttpService)(core["\u0275\u0275inject"](Telemetry.y0), core["\u0275\u0275inject"](promiseFactory.t), core["\u0275\u0275inject"](http_core_service.M), core["\u0275\u0275inject"](feature_switch_service.vZ), core["\u0275\u0275inject"](ngrx_store.yh));
            }, UsageMetricsHttpService.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: UsageMetricsHttpService,
                factory: UsageMetricsHttpService.\u0275fac,
                providedIn: "root"
            }), UsageMetricsHttpService;
        }(), active_folder_id_service = __webpack_require__(60255), report_store_service = __webpack_require__(94420), actions_dashboard = __webpack_require__(90047), core_module_configuration = __webpack_require__(90982), group_dashboard_selector = __webpack_require__(34073), dashboard_selector = __webpack_require__(64115), contracts_contracts = __webpack_require__(50544), DashboardStore = function() {
            function DashboardStore(store, config) {
                this.store = store, this.config = config, this.dashboards$ = this.store.select(config.shouldFilterDataServicesByFolder ? group_dashboard_selector.Ry : dashboard_selector.df), 
                this.sharedDashboards$ = this.store.select(config.shouldFilterDataServicesByFolder ? group_dashboard_selector._2 : shared_with_me_selector.nv), 
                this.selectedDashboard$ = this.store.select(dashboard_selector.W$);
            }
            return Object.defineProperty(DashboardStore.prototype, "dashboards", {
                get: function() {
                    return this.dashboards$;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(DashboardStore.prototype, "sharedDashboards", {
                get: function() {
                    return this.sharedDashboards$;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(DashboardStore.prototype, "selectedDashboard", {
                get: function() {
                    return this.selectedDashboard$;
                },
                enumerable: !1,
                configurable: !0
            }), DashboardStore.prototype.findById = function(objectId) {
                return this.store.select(dashboard_selector.AE).pipe((0, operators_map.U)(function(dashboards) {
                    return dashboards[objectId];
                }), (0, operators_take.q)(1)).toPromise();
            }, DashboardStore.prototype.findByDashboardId = function(id) {
                return this.store.select(dashboard_selector.df).pipe((0, operators_map.U)(function(dashboards) {
                    return _.find(dashboards, function(dashboards) {
                        return dashboards.id === id;
                    });
                }), (0, operators_take.q)(1)).toPromise();
            }, DashboardStore.prototype.findByPackageId = function(packageId) {
                return this.store.select(dashboard_selector.df).pipe((0, operators_map.U)(function(dashboards) {
                    return _.filter(dashboards, function(dashboard) {
                        return dashboard.originalPackageId === packageId;
                    });
                }), (0, operators_take.q)(1)).toPromise();
            }, DashboardStore.prototype.findAll = function(id) {
                return this.store.select(this.config.shouldFilterDataServicesByFolder ? group_dashboard_selector.BJ : dashboard_selector.df).pipe((0, 
                operators_map.U)(function(dashboards) {
                    return _.filter(dashboards, function(dashboard) {
                        return dashboard.id === id;
                    });
                }), (0, operators_take.q)(1)).toPromise();
            }, DashboardStore.prototype.create = function(name, isFromPinTile, underlyingModelId, underlyingReportId, sensitivityLabelId, telemetryEvent) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var correlationId, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        return this.store.dispatch(new actions_dashboard.Qj({
                            name,
                            isFromPinTile,
                            underlyingModelId,
                            underlyingReportId,
                            sensitivityLabelId,
                            telemetryEvent
                        })), correlationId = telemetryEvent.event.id, [ 2, telemetryEvent.promise.then(function() {
                            return _this.store.select(_this.config.shouldFilterDataServicesByFolder ? group_dashboard_selector.BJ : dashboard_selector.df).pipe((0, 
                            operators_map.U)(function(dashboards) {
                                return dashboards.find(function(db) {
                                    return db.correlationId === correlationId;
                                });
                            }), (0, operators_take.q)(1)).toPromise();
                        }) ];
                    });
                });
            }, DashboardStore.prototype.delete = function(dashboard, fromSyncService, telemetryEvent) {
                return dashboard && this.store.dispatch(fromSyncService ? new actions_dashboard.JW({
                    dashboard
                }) : new actions_dashboard.HG({
                    dashboard,
                    telemetryEvent
                })), telemetryEvent && telemetryEvent.promise;
            }, DashboardStore.prototype.rename = function(dashboard, name, telemetryEvent) {
                return this.store.dispatch(new actions_dashboard.ic({
                    dashboard,
                    name,
                    telemetryEvent
                })), telemetryEvent && telemetryEvent.promise;
            }, DashboardStore.prototype.addOrUpdate = function(dashboard) {
                this.store.dispatch(new actions_dashboard.a({
                    dashboard
                }));
            }, DashboardStore.prototype.update = function(dashboard, changes) {
                this.store.dispatch(new actions_dashboard.BN({
                    dashboard,
                    changes
                }));
            }, DashboardStore.prototype.select = function(dashboard, skipLoad) {
                void 0 === skipLoad && (skipLoad = !1);
                var id = dashboard ? (0, helpers_dashboard.E)(dashboard) : "";
                this.store.dispatch(new actions_dashboard.Ph(id, skipLoad));
            }, DashboardStore.prototype.firstSelectedDashboard = function() {
                return this.selectedDashboard.pipe((0, operators_filter.h)(function(selectedDashboard) {
                    return !!selectedDashboard;
                }), (0, operators_take.q)(1)).toPromise();
            }, DashboardStore.prototype.unloadDashboardTiles = function(dashboardId) {
                this.store.dispatch(new actions_dashboard.GH({
                    dashboardId
                }));
            }, DashboardStore.prototype.hide = function(dashboardObjectId) {
                this.store.dispatch(new actions_dashboard.c({
                    dashboardObjectId
                }));
            }, DashboardStore.prototype.unhide = function(dashboardObjectId) {
                this.store.dispatch(new actions_dashboard.yO({
                    dashboardObjectId
                }));
            }, DashboardStore.prototype.hasTileForReportAndSection = function(sectionId, reportId) {
                return this.dashboards$.pipe((0, operators_take.q)(1), (0, operators_map.U)(function(dashboards) {
                    var tiles;
                    return void 0 !== sectionId ? tiles = _.filter(dashboards, function(dashboard) {
                        return _.find(dashboard.tiles, function(tile) {
                            return tile.type === contracts_contracts.YU.report && tile.sectionId === sectionId;
                        });
                    }) : void 0 !== reportId && (tiles = _.filter(dashboards, function(dashboard) {
                        return _.find(dashboard.tiles, function(tile) {
                            return tile.type === contracts_contracts.YU.report && tile.reportId === reportId;
                        });
                    })), !_.isEmpty(tiles);
                }));
            }, DashboardStore.prototype.pinTile = function(dashboardId, tile, telemetryEvent) {
                this.store.dispatch(new actions_dashboard.Q6({
                    dashboardId,
                    tile,
                    telemetryEvent
                }));
            }, DashboardStore.prototype.pinTileToNew = function(name, tile, telemetryEvent) {
                this.store.dispatch(new actions_dashboard.G$({
                    name,
                    tile,
                    telemetryEvent
                }));
            }, DashboardStore.prototype.removeTile = function(dashboardId, tile) {
                this.store.dispatch(new actions_dashboard.TG({
                    dashboardId,
                    tileId: tile.objectId
                }));
            }, DashboardStore.prototype.ensureDashboardLoaded = function(dashboardId, dashboardObjectId, workspaceObjectId) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return this.store.dispatch(new actions_dashboard.i({
                                id: dashboardId,
                                workspaceId: workspaceObjectId
                            })), [ 4, this.store.select(dashboard_selector.l1, {
                                id: dashboardObjectId
                            }).pipe((0, operators_filter.h)(function(dashboard) {
                                return dashboard && (!1 === dashboard.loading || !0 === dashboard.loaded);
                            }), (0, operators_take.q)(1)).toPromise() ];

                          case 1:
                            return _a.sent(), [ 2 ];
                        }
                    });
                });
            }, DashboardStore.prototype.ensureDashboardLoadedByGuid = function(dashboardObjectId, workspaceObjectId) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return this.store.dispatch(new actions_dashboard.i({
                                objectId: dashboardObjectId,
                                workspaceId: workspaceObjectId
                            })), [ 4, this.store.select(dashboard_selector.l1, {
                                id: dashboardObjectId
                            }).pipe((0, operators_filter.h)(function(dashboard) {
                                return dashboard && (!1 === dashboard.loading || !0 === dashboard.loaded);
                            }), (0, operators_take.q)(1)).toPromise() ];

                          case 1:
                            return _a.sent(), [ 2 ];
                        }
                    });
                });
            }, DashboardStore.\u0275fac = function(t) {
                return new (t || DashboardStore)(core["\u0275\u0275inject"](ngrx_store.yh), core["\u0275\u0275inject"](core_module_configuration.e));
            }, DashboardStore.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: DashboardStore,
                factory: DashboardStore.\u0275fac,
                providedIn: "root"
            }), DashboardStore;
        }(), userInfoHelper = __webpack_require__(54861), Resource = function() {
            return function(resourceType) {
                this.isSelected = !1, this.isEnabled = !0, this.isUsedByContentPack = !1, this.countOfLinkedAncestorsSelected = 0, 
                this.resourceType = resourceType;
            };
        }(), ReportResource = function(_super) {
            function ReportResource(reportId, reportResoureType, packageId) {
                var _this = _super.call(this, reportResoureType) || this;
                return _this.uniqueId = ReportResource.getUniqueId(reportResoureType, reportId, packageId), 
                _this;
            }
            return (0, tslib_es6.__extends)(ReportResource, _super), ReportResource.getUniqueId = function(reportResoureType, resourceId, packageId) {
                return reportResoureType + "_" + resourceId + "_" + packageId;
            }, ReportResource;
        }(Resource), Report = function(_super) {
            function Report(contract) {
                var _this = _super.call(this, void 0 === contract ? 0 : contract.id, 0, void 0 === contract ? 0 : contract.packageId) || this;
                return _this.contract = contract, _this.isRefreshInProgress = !1, _this.reportType = _this.contract && 1 === _this.contract.reportType ? 1 : 0, 
                _this.contentTileType = 1 === _this.reportType ? contracts.ty.RdlReport : contracts.ty.Report, 
                _this;
            }
            return (0, tslib_es6.__extends)(Report, _super), Report.prototype.getPermissions = function() {
                var result;
                return this.getPermissionsCallback && null != (result = this.getPermissionsCallback()) ? result : this.contract && this.contract.permissions;
            }, Object.defineProperty(Report.prototype, "canWrite", {
                get: function() {
                    return (0, StandaloneUtility3.yE)(this.getPermissions(), ReportPermissions.Write);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Report.prototype, "canCopy", {
                get: function() {
                    return (0, StandaloneUtility3.yE)(this.getPermissions(), ReportPermissions.CopyOnWrite);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Report.prototype, "canExplore", {
                get: function() {
                    return (0, StandaloneUtility3.yE)(this.getPermissions(), ReportPermissions.Explore);
                },
                enumerable: !1,
                configurable: !0
            }), Report;
        }(ReportResource), ReportPermissions = function(ReportPermissions) {
            return ReportPermissions[ReportPermissions.None = 0] = "None", ReportPermissions[ReportPermissions.Read = 1] = "Read", 
            ReportPermissions[ReportPermissions.Write = 2] = "Write", ReportPermissions[ReportPermissions.ReShare = 4] = "ReShare", 
            ReportPermissions[ReportPermissions.Explore = 8] = "Explore", ReportPermissions[ReportPermissions.CopyOnWrite = 17] = "CopyOnWrite", 
            ReportPermissions[ReportPermissions.ReadWrite = 3] = "ReadWrite", ReportPermissions[ReportPermissions.ReadReshare = 5] = "ReadReshare", 
            ReportPermissions[ReportPermissions.Personalized = 11] = "Personalized", ReportPermissions[ReportPermissions.All = 7] = "All", 
            ReportPermissions;
        }({}), ReportModelConverter = function() {
            function ReportModelConverter() {}
            return ReportModelConverter.prototype.convertReport = function(report) {
                var existingModel, ownerInfo, model = new Report(report);
                return report && (model.id = report.id, model.modelId = report.modelId, model.reportUrl = report.reportUrl, 
                model.packagePublishStatus = report.packagePublishStatus || 0, model.name = report.name, 
                model.displayName = report.displayName, model.description = report.description, 
                model.fileName = report.fileName, model.packageId = report.packageId, model.packageVersion = report.packageVersion, 
                model.contentProviderId = report.contentProviderId, model.objectId = report.objectId, 
                model.isNew = report.isNew, model.isHidden = report.isHidden, model.sharedTime = report.sharedTime || ReportModelConverter.defaultSharedTime, 
                report.ownerInfo && (existingModel = model, (ownerInfo = report.ownerInfo) && (existingModel.ownerFullname = (0, 
                userInfoHelper.P)(ownerInfo.givenName, ownerInfo.familyName), existingModel.ownerMail = ownerInfo.emailAddress, 
                ownerInfo.userObjectId && (existingModel.ownerUserObjectId = ownerInfo.userObjectId), 
                ownerInfo.groupObjectId && (existingModel.ownerGroupObjectId = ownerInfo.groupObjectId), 
                existingModel.contract.ownerInfo || (existingModel.contract.ownerInfo = ownerInfo))), 
                model.getPermissionsCallback = function() {
                    return report.permissions;
                }, this.fillReport(model, report)), model;
            }, ReportModelConverter.prototype.fillReport = function(existingModel, newContract) {
                existingModel.id = newContract.id, existingModel.contract = newContract, existingModel.reportUrl = newContract.reportUrl;
            }, ReportModelConverter.defaultSharedTime = "/Date(0)/", ReportModelConverter.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: ReportModelConverter,
                factory: ReportModelConverter.\u0275fac = function(t) {
                    return new (t || ReportModelConverter);
                },
                providedIn: "root"
            }), ReportModelConverter;
        }(), ForceOpenCustomLinksInNewTabToken = new core.InjectionToken("ForceOpenCustomLinksInNewTabToken"), Lazy = __webpack_require__(45034), Dashboard = function() {
            function Dashboard(contract) {
                this.contract = contract, this.isEnabled = !0, this.isUsedByContentPack = !1, this.isLoaded = contract && null != contract.tiles, 
                this.hitCount = 0, this.lazyTiles = null, this.uniqueId = "".concat(contracts.ty.Dashboard, "_").concat(this.contract.id);
            }
            return Dashboard.prototype.getPermissions = function() {
                var result;
                return this.getPermissionsCallback && null != (result = this.getPermissionsCallback()) ? result : this.contract && this.contract.permissions;
            }, Dashboard.prototype.increaseHitCount = function() {
                this.hitCount++;
            }, Object.defineProperty(Dashboard.prototype, "tiles", {
                get: function() {
                    return this.lazyTiles || (this.lazyTiles = new Lazy.o(function() {
                        return [];
                    })), this.lazyTiles.getValue();
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Dashboard.prototype, "id", {
                get: function() {
                    return this.contract.id;
                },
                set: function(value) {
                    this.contract.id = value;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Dashboard.prototype, "folderId", {
                get: function() {
                    return this.contract.folderId;
                },
                set: function(value) {
                    this.contract.folderId = value;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Dashboard.prototype, "objectId", {
                get: function() {
                    return this.contract.objectId;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Dashboard.prototype, "canEdit", {
                get: function() {
                    return !(2 & ~this.contract.permissions || this.gridLayoutService && this.gridLayoutService.strategy.isLayoutLocked);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Dashboard.prototype, "contentTileType", {
                get: function() {
                    return contracts.ty.Dashboard;
                },
                enumerable: !1,
                configurable: !0
            }), Dashboard.prototype.isFilled = function() {
                return this.contract.tiles && this.tiles.length === this.contract.tiles.length;
            }, Dashboard.prototype.calculateLayout = function() {
                this.layoutRequired = !1;
                var tiles = this.tiles;
                if (!_.isEmpty(tiles)) for (var _i = 0, tiles_1 = tiles; _i < tiles_1.length; _i++) tiles_1[_i].calculateLayout();
            }, Dashboard.prototype.applyLayout = function() {
                var tiles = this.tiles;
                if (!_.isEmpty(tiles)) for (var _i = 0, tiles_2 = tiles; _i < tiles_2.length; _i++) tiles_2[_i].applyLayout();
            }, Dashboard.prototype.runLayoutIfRequired = function() {
                this.layoutRequired && (this.calculateLayout(), this.applyLayout());
            }, Dashboard.prototype.scheduleDelayedLayout = function(delayUntilForced) {
                var _this = this;
                void 0 === delayUntilForced && (delayUntilForced = !1), this.layoutRequired || (this.layoutRequired = !0, 
                delayUntilForced || setTimeout(function() {
                    _this.layoutRequired && (_this.calculateLayout(), _this.applyLayout());
                }, 100));
            }, Dashboard.prototype.findTile = function(tileId) {
                return _.find(this.tiles, function(tile) {
                    return tile.id === tileId;
                });
            }, Dashboard.prototype.findTileByObjectIdOrOriginalObjectId = function(objectId, originalObjectId) {
                if (objectId || originalObjectId) return _.find(this.tiles, function(tile) {
                    return !_.isEmpty(objectId) && tile.contract.objectId === objectId || !_.isEmpty(originalObjectId) && tile.contract.originalTileObjectId === originalObjectId;
                });
            }, Dashboard.prototype.getTileIndex = function(tileId) {
                return _.findIndex(this.tiles, function(tile) {
                    return tile.id === tileId;
                });
            }, Dashboard.prototype.getTileContractIndex = function(tileId) {
                return _.findIndex(this.contract.tiles, function(tile) {
                    return tile.id === tileId;
                });
            }, Dashboard.prototype.getUniquePackageId = function() {
                var contract = this.contract;
                return contract.originalPackageId ? contract.originalPackageId : contract.packageIds && 1 === contract.packageIds.length ? contract.packageIds[0] : void 0;
            }, Dashboard.prototype.hasModel = function(modelId) {
                return _.some(this.tiles, function(tile) {
                    return tile.contract.modelId === modelId;
                });
            }, Dashboard.prototype.hasOwnerInfo = function() {
                return !_.isEmpty(this.ownerFullname) || !_.isEmpty(this.ownerMail);
            }, Dashboard;
        }();
        function isTileLoading(tile) {
            return 1 === tile.publishState;
        }
        var dataViewTransformActionSerializer = __webpack_require__(33230), themeUtils = __webpack_require__(38701), visualContainerUtils = __webpack_require__(60661), visualHostService = __webpack_require__(47245), gridLayoutContainer1_changeType = function(changeType) {
            return changeType[changeType.drag = 0] = "drag", changeType[changeType.resizing = 1] = "resizing", 
            changeType[changeType.resized = 2] = "resized", changeType[changeType.refresh = 3] = "refresh", 
            changeType;
        }({}), gridLayoutService = __webpack_require__(68341), enums = __webpack_require__(46135), dataViewObject2 = __webpack_require__(82755), dataViewObjectDefinition1 = __webpack_require__(5265), TileDataUpdateException = telemetryHelpers.cx["PBI.TileDataUpdateException"] = (0, 
        telemetryHelpers.b1)("PBI.TileDataUpdateException"), events_DashboardTileError = telemetryHelpers.cx["PBI.Dashboard.TileError"] = (0, 
        telemetryHelpers.b1)("PBI.Dashboard.TileError"), dsr_dsrClientError = __webpack_require__(42649), version = __webpack_require__(16374), gridLayoutServiceDefaults = __webpack_require__(30302), arrayExtensions = __webpack_require__(50550), contractUtils = __webpack_require__(48117);
        function getTileErrorDetailsFromQueryResultError(queryResultError, localizationService) {
            VisualsCommon_debug.fF.assertValue(queryResultError, "getTileErrorDetailsFromQueryResultError: queryResultError");
            var errorDetail = (0, JsonExtensions.K)(queryResultError.errorDetail);
            if (errorDetail && !_.isEmpty(errorDetail.DataShapes)) {
                var odataError = errorDetail.DataShapes[0]["odata.error"];
                if (odataError) return new dsr_dsrClientError.Ow(odataError).getDetails(localizationService);
            }
        }
        function addOrUpdateLayoutPosition(layoutConfig, newLayoutPosition, activeLayout) {
            var layouts = (0, arrayExtensions.Br)(layoutConfig.layouts), layoutDefinition = layouts.withId(activeLayout);
            layoutDefinition || layouts.push(layoutDefinition = {
                id: activeLayout,
                position: {}
            }), layoutDefinition.position = newLayoutPosition;
        }
        function getCurrentTileLayoutDescriptor(tileContract, configToStringify, prevQuery, newQuery) {
            return {
                id: tileContract.id,
                row: null,
                col: null,
                rowSpan: null,
                colSpan: null,
                layoutConfig: JSON.stringify(configToStringify),
                query: newQuery ? prevQuery : null,
                updatedQuery: newQuery,
                modelId: tileContract.modelId,
                objectId: tileContract.objectId
            };
        }
        var urlUtils = __webpack_require__(48066);
        var DashboardIntraDomainNavigationPrefix = "/dashboards/", ReportIntraDomainNavigationPrefix = "/reports/", RdlReportIntraDomainNavigationPrefix = "/rdlreports/", WorkbookIntraDomainNavigationPrefix = "/workbooks/", Tile = function() {
            function Tile(contract, localizationService, forceOpenCustomLinksInNewTab) {
                this.forceOpenCustomLinksInNewTab = forceOpenCustomLinksInNewTab, this.isSelected = !1, 
                this.hasConversation = !1, this.hasSpotlight = !1, this.contract = contract, this.tileHeaderSize = 1, 
                this.layoutPosition = {}, this.localizationService = localizationService, this.themeName = "Light", 
                this.tileStyles = {}, this.tileHeaderStyles = {}, this.tileBackground = {};
            }
            return Object.defineProperty(Tile.prototype, "gridLayouts", {
                get: function() {
                    return this.contract.$layoutConfig.layouts;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "id", {
                get: function() {
                    return this.contract.id;
                },
                set: function(value) {
                    this.contract.id = value;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "objectId", {
                get: function() {
                    return this.contract.objectId;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "details", {
                get: function() {
                    switch (this.type) {
                      case contracts_contracts.YU.composite:
                        return this.composite;

                      case contracts_contracts.YU.iframe:
                        return this.iframe;

                      case contracts_contracts.YU.image:
                        return this.image;

                      case contracts_contracts.YU.model:
                        return this.model;

                      case contracts_contracts.YU.ssrs:
                        return this.ssrs;

                      case contracts_contracts.YU.workbook:
                        return this.workbook;

                      case contracts_contracts.YU.report:
                        return this.reportTile;

                      case contracts_contracts.YU.realTime:
                        return this.realTime;

                      default:
                        return VisualsCommon_debug.fF.assertFail("Invalid tile type"), null;
                    }
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "shouldBeIncludedInTelemetryMeasurement", {
                get: function() {
                    return this.details && !!this.details.shouldBeIncludedInTelemetryMeasurement;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "isTemporary", {
                get: function() {
                    return this.id <= 0;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "isTileLoading", {
                get: function() {
                    return this.composite ? this.composite.isLoading && !this.composite.isError : this.isLoading;
                },
                enumerable: !1,
                configurable: !0
            }), Tile.prototype.calculateLayout = function(tileViewport, sensitivityBannerSize) {
                var tileHeaderHeight = this.getHeaderSizeByType(this.tileHeaderSize);
                if (_.isNil(this.currentViewPort) || !_.isNil(tileViewport) || _.isNil(sensitivityBannerSize) || (tileViewport = this.currentViewPort), 
                this.compositeTile && tileViewport) {
                    var compositeViewport = tileViewport, useSmallPlotArea = 2 === this.tileHeaderSize;
                    if (_.isNil(sensitivityBannerSize) || _.isNil(this.currentViewPort)) useSmallPlotArea ? this.hasTitle() ? compositeViewport.height -= tileHeaderHeight : 1 !== (this.composite && this.composite.config && this.composite.config.layoutType) && (compositeViewport.height -= 10) : this.hasTitle() && (this.hasSubtitle() ? compositeViewport.height -= tileHeaderHeight : compositeViewport.height -= tileHeaderHeight - 10), 
                    this.currentViewPort = compositeViewport; else if (sensitivityBannerSize > 0) {
                        var newViewport_1 = {
                            width: this.currentViewPort.width,
                            height: this.currentViewPort.height
                        };
                        newViewport_1.height -= sensitivityBannerSize, newViewport_1.height <= 0 ? VisualsCommon_debug.fF.assert(function() {
                            return newViewport_1.height > 0;
                        }, "ViewPort height is zero or negative") : compositeViewport = newViewport_1;
                    }
                    this.compositeTile.calculateLayout(compositeViewport, useSmallPlotArea);
                }
            }, Tile.prototype.getTileHeight = function() {
                return this.hasTitle() ? this.getHeaderSizeByType(this.tileHeaderSize) : 0;
            }, Tile.prototype.applyLayout = function(changeType, skipVisualManualUpdate) {
                this.compositeTile && this.compositeTile.applyLayout(changeType, skipVisualManualUpdate);
            }, Tile.prototype.invalidateLayout = function() {
                this.tryPopulateLayoutPositionValues() && this.gridLayoutContext.onLayoutInvalidated();
            }, Tile.prototype.tryPopulateLayoutPositionValues = function() {
                if (!this.gridLayoutContext || this.gridLayoutContext.isLayoutUpdateLocked) return !1;
                var activeLayout = this.gridLayoutContext.getActiveLayout(), layoutDefinition = (0, 
                arrayExtensions.Br)(this.contract.$layoutConfig.layouts).withId(activeLayout);
                return layoutDefinition && layoutDefinition.position && (this.layoutPosition = _.cloneDeep(layoutDefinition.position)), 
                !0;
            }, Tile.prototype.applyChanges = function() {
                if (this.contract && this.gridLayoutContext) {
                    var newLayoutPosition = _.cloneDeep(this.layoutPosition);
                    addOrUpdateLayoutPosition(this.contract.$layoutConfig, newLayoutPosition, this.gridLayoutContext.getActiveLayout()), 
                    this.contract.layoutConfig = JSON.stringify(this.contract.$layoutConfig);
                }
            }, Tile.isValidUrl = function(url, allowInternalUrl) {
                return !_.isEmpty(url) && ((0, urlUtils.HH)(url, !1) || allowInternalUrl && function(url) {
                    return function(url) {
                        return !_.isEmpty(url) && 0 === url.toLowerCase().indexOf(DashboardIntraDomainNavigationPrefix);
                    }(url) || function(url) {
                        return !_.isEmpty(url) && 0 === url.toLowerCase().indexOf(ReportIntraDomainNavigationPrefix);
                    }(url) || function(url) {
                        return !_.isEmpty(url) && 0 === url.toLowerCase().indexOf(RdlReportIntraDomainNavigationPrefix);
                    }(url) || function(url) {
                        return !_.isEmpty(url) && 0 === url.toLowerCase().indexOf(WorkbookIntraDomainNavigationPrefix);
                    }(url);
                }(url));
            }, Tile.prototype.getDisplayText = function() {
                return this.displayText ? this.displayText : this.compositeTile ? this.compositeTile.heading1 : "";
            }, Tile.prototype.getSubDisplayText = function() {
                if (this.displayText && this.subDisplayText) return this.subDisplayText;
                if (this.compositeTile) {
                    var compositeConfig = this.compositeTile.config;
                    if (!this.displayText && compositeConfig && !_.isEmpty(compositeConfig.heading3)) return compositeConfig.heading3;
                }
                return "";
            }, Tile.prototype.shouldPlaceBulletSeperator = function() {
                return this.displayText && this.displayText.length > 0 && this.subDisplayText && this.subDisplayText.length > 0 && this.config && this.config.lastRefreshTimeEnabled;
            }, Object.defineProperty(Tile.prototype, "hrefTarget", {
                get: function() {
                    return this.action.openInSameTab && !this.forceOpenCustomLinksInNewTab ? "_self" : "_blank";
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "lastRefreshTimeInLocaleString", {
                get: function() {
                    var lastRefreshTime = (0, modelConverterHelper.ee)(this.contract.tileDataUpdatedTime), lastRefreshTimeToString = "";
                    return lastRefreshTime ? lastRefreshTimeToString = lastRefreshTime.toLocaleString() : this.datasetModel && (lastRefreshTimeToString = this.datasetModel.lastRefreshTimeInLocaleString), 
                    lastRefreshTimeToString || "";
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Tile.prototype, "formattedTime", {
                get: function() {
                    var lastRefreshTime;
                    if (this.workbook) {
                        var tilePackage = this.contract.tilePackage;
                        lastRefreshTime = tilePackage ? (0, modelConverterHelper.ee)(tilePackage.lastRefreshTime) : null;
                    } else lastRefreshTime = (0, modelConverterHelper.ee)(this.contract.tileDataUpdatedTime);
                    return lastRefreshTime ? this.cachedRefreshTime && lastRefreshTime.getTime() === this.cachedRefreshTime.getTime() ? this.cachedRefreshString : (this.cachedRefreshTime = lastRefreshTime, 
                    this.cachedRefreshString = this.getFormattedDateString(lastRefreshTime)) : this.datasetModel ? this.datasetModel.lastRefreshTimeInLocaleString : void 0;
                },
                enumerable: !1,
                configurable: !0
            }), Tile.prototype.getFormattedDateString = function(lastRefreshTime) {
                var isContainedInTimeFrame = JsCommon_Date.IH, isMomentPresent = (0, JsCommon_Date.ih)();
                return isMomentPresent && isContainedInTimeFrame(lastRefreshTime, Minute, MaxMinuteThreshold, !1) ? (0, 
                dateFormatter.WQ)(lastRefreshTime, this.localizationService) : isMomentPresent && isContainedInTimeFrame(lastRefreshTime, Day, SameDayThreshold, !0) ? (0, 
                JsCommon_Date.nK)(this.localizationService.currentLanguageLocale, lastRefreshTime) : isMomentPresent && isContainedInTimeFrame(lastRefreshTime, Day, YesterdayThreshold, !0) ? this.localizationService.format("DashboardTile_YesterdayTemplate", [ (0, 
                JsCommon_Date.nK)(this.localizationService.currentLanguageLocale, lastRefreshTime) ]) : isMomentPresent && isContainedInTimeFrame(lastRefreshTime, Day, WeekThreshold, !0) ? (0, 
                JsCommon_Date.u5)(this.localizationService.currentLanguageLocale, lastRefreshTime) : (0, 
                JsCommon_Date.nY)(this.localizationService.currentLanguageLocale, lastRefreshTime);
            }, Tile.prototype.setDatasetModelAndPackageInfo = function(datasetModel, tilePackage) {
                datasetModel && (this.datasetModel = datasetModel, tilePackage && (this.datasetModel.packagePublishStatus = tilePackage.publishOrRefreshStatus));
            }, Tile.prototype.hasTitle = function() {
                return (!this.config || !this.config.hideTitle) && (!_.isEmpty(this.displayText) || this.compositeTile && !_.isEmpty(this.compositeTile.heading1));
            }, Tile.prototype.hasSubtitle = function() {
                var config = this.config;
                return (!config || !config.hideTitle) && (!_.isEmpty(this.subDisplayText) || config && config.lastRefreshTimeEnabled);
            }, Tile.prototype.lastRefreshTimeInLocaleWithLabel = function() {
                if (this.config && this.config.lastRefreshTimeEnabled) return this.localizationService.format("Refreshed", [ this.formattedTime ]);
            }, Tile.prototype.setTileHeaderSize = function(tileHeaderSize) {
                this.tileHeaderSize !== tileHeaderSize && (this.tileHeaderSize = tileHeaderSize, 
                this.invalidateLayout());
            }, Object.defineProperty(Tile.prototype, "compositeTile", {
                get: function() {
                    return this.composite || this.realTime;
                },
                enumerable: !1,
                configurable: !0
            }), Tile.prototype.hasLayoutDefinition = function(canvasLayout) {
                return !!(0, arrayExtensions.Br)(this.contract.$layoutConfig.layouts).withId(canvasLayout);
            }, Tile.prototype.hasLayoutPosition = function(canvasLayout) {
                return !!(0, contractUtils.zS)(this.contract, canvasLayout);
            }, Tile.prototype.removeLayoutPosition = function(canvasLayout) {
                return void 0 === canvasLayout && (canvasLayout = 1), VisualsCommon_debug.fF.assert(function() {
                    return 0 !== canvasLayout;
                }, "Cannot remove position for Master position"), this.hasLayoutDefinition(canvasLayout) && (this.addLayout({
                    id: canvasLayout,
                    position: null
                }, canvasLayout), this.resetTileLayoutSizeAndPosition()), this.getCurrentTileLayoutDescriptor();
            }, Tile.prototype.resetTileLayoutSizeAndPosition = function() {
                this.layoutPosition.x = null, this.layoutPosition.y = null, this.layoutPosition.height = null, 
                this.layoutPosition.width = null, this.gridLayoutContext = null;
            }, Tile.prototype.removeLayoutDefinition = function(canvasLayout, clearLayoutContext) {
                return void 0 === canvasLayout && (canvasLayout = 1), void 0 === clearLayoutContext && (clearLayoutContext = !0), 
                VisualsCommon_debug.fF.assert(function() {
                    return 0 !== canvasLayout;
                }, "Cannot remove layout for Master position"), this.hasLayoutDefinition(canvasLayout) && (_.remove(this.contract.$layoutConfig.layouts, function(tileLayout) {
                    return tileLayout.id === canvasLayout;
                }), clearLayoutContext && this.resetTileLayoutSizeAndPosition()), this.getCurrentTileLayoutDescriptor();
            }, Tile.prototype.applyLayoutSize = function(size, changeType, skipVisualManualUpdate) {
                VisualsCommon_debug.fF.assertValue(size, "size"), this.compositeTile && (this.compositeTile.size = {
                    colSpan: size.colSpan,
                    rowSpan: size.rowSpan
                }), this.applyLayout(changeType, skipVisualManualUpdate);
            }, Tile.prototype.getCurrentTileLayoutDescriptor = function(tileLayoutConfig, prevQuery, newQuery) {
                return getCurrentTileLayoutDescriptor(this.contract, tileLayoutConfig || this.contract.$layoutConfig, prevQuery, newQuery);
            }, Tile.prototype.buildLayoutDescriptor = function() {
                var newLayoutPosition = _.cloneDeep(this.layoutPosition), clonedLayoutConfig = _.cloneDeep(this.contract.$layoutConfig);
                addOrUpdateLayoutPosition(clonedLayoutConfig, newLayoutPosition, this.gridLayoutContext.getActiveLayout());
                var prevQuery = this.composite && this.composite.contract && this.composite.contract.query, updatedQuery = prevQuery && function(query, newLayoutPosition) {
                    var dataQuery = (0, contractUtils.V3)(query);
                    if (dataQuery) {
                        for (var newWidth = newLayoutPosition.width * gridLayoutServiceDefaults.A4, newHeight = newLayoutPosition.height * gridLayoutServiceDefaults.lT, shouldUpdateQuery = !1, _i = 0, _a = dataQuery.Commands; _i < _a.length; _i++) {
                            var dataQueryCommand = _a[_i], scriptVisualCommand = dataQueryCommand.ScriptVisualCommand;
                            scriptVisualCommand && (scriptVisualCommand.ViewportWidthPx === newWidth && scriptVisualCommand.ViewportHeightPx === newHeight || (scriptVisualCommand.ViewportWidthPx = newWidth, 
                            scriptVisualCommand.ViewportHeightPx = newHeight, dataQueryCommand.ScriptVisualCommand = scriptVisualCommand, 
                            shouldUpdateQuery = !0));
                        }
                        return shouldUpdateQuery ? dataQuery : void 0;
                    }
                }(prevQuery, newLayoutPosition), updatedQueryStr = null;
                return prevQuery && updatedQuery && (this.composite.contract.query.modelQuery.sq = JSON.stringify(updatedQuery), 
                updatedQueryStr = JSON.stringify(this.composite.contract.query)), getCurrentTileLayoutDescriptor(this.contract, clonedLayoutConfig, prevQuery, updatedQueryStr);
            }, Tile.prototype.addLayout = function(tileLayout, canvasLayout) {
                return VisualsCommon_debug.fF.assert(function() {
                    return 0 !== canvasLayout;
                }, "Cannot remove position for Master position"), VisualsCommon_debug.fF.assertValue(tileLayout, "Cannot update with undefined"), 
                this.removeLayoutDefinition(canvasLayout), this.contract.$layoutConfig.layouts.push(tileLayout), 
                this.getCurrentTileLayoutDescriptor();
            }, Tile.prototype.getHeaderSizeByType = function(type) {
                switch (type) {
                  case 0:
                    return 65;

                  case 2:
                    return 42;

                  default:
                    return 50;
                }
            }, Tile;
        }(), Minute = "minute", Day = "day", MaxMinuteThreshold = 15, SameDayThreshold = 0, YesterdayThreshold = 1, WeekThreshold = 6, sqExprStaticMembers = __webpack_require__(74082), SingleVisualCompositeTileModel = function(_super) {
            function SingleVisualCompositeTileModel(contract, visualPlugins, visualPluginOps, featureSwitchService, geolocationService, geocoder, promiseFactory, moduleLoader, telemetryService, themeService, authenticationService, localizationService, visualHostTooltipService, azureMapTokenCache, azureMapsEndpoint, geocoderIndexedDB, licenseUIManagerFactory) {
                var _this = _super.call(this, contract, visualPlugins, visualPluginOps) || this;
                _this.featureSwitchService = featureSwitchService, _this.geolocationService = geolocationService, 
                _this.geocoder = geocoder, _this.promiseFactory = promiseFactory, _this.moduleLoader = moduleLoader, 
                _this.telemetryService = telemetryService, _this.themeService = themeService, _this.authenticationService = authenticationService, 
                _this.localizationService = localizationService, _this.visualHostTooltipService = visualHostTooltipService, 
                _this.azureMapTokenCache = azureMapTokenCache, _this.azureMapsEndpoint = azureMapsEndpoint, 
                _this.geocoderIndexedDB = geocoderIndexedDB, _this.requiresResize = !1, VisualsCommon_debug.fF.assertAnyValue(geolocationService, "geolocationService"), 
                licenseUIManagerFactory && (_this.licenseUIManager = licenseUIManagerFactory.create());
                var visualHostServiceLicensingCallbacks = {
                    onNotifyLicense: function(notificationType) {
                        return _this.onNotifyLicense(notificationType);
                    },
                    onClearLicenseNotification: function() {
                        return _this.onClearLicenseNotification();
                    },
                    onNotifyFeatureBlocked: function(tooltip) {
                        return _this.onNotifyFeatureBlocked(tooltip);
                    }
                };
                return _this._visual = {
                    hostServices: _this.createHostServices(licenseUIManagerFactory ? visualHostServiceLicensingCallbacks : void 0),
                    themeCollection: {}
                }, _this;
            }
            return (0, tslib_es6.__extends)(SingleVisualCompositeTileModel, _super), Object.defineProperty(SingleVisualCompositeTileModel.prototype, "type", {
                get: function() {
                    return 0;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(SingleVisualCompositeTileModel.prototype, "visual", {
                get: function() {
                    return this._visual;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(SingleVisualCompositeTileModel.prototype, "themeCollection", {
                get: function() {
                    return this._visual && this._visual.themeCollection;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(SingleVisualCompositeTileModel.prototype, "heading1", {
                get: function() {
                    var selectTransforms, dataView, heading = this.config.heading1 || "";
                    if (!this.visual) return heading;
                    var transforms = this.visual.dataTransforms;
                    transforms && (selectTransforms = transforms.selects);
                    var data = this.visual.data;
                    if (data && (dataView = data.dataView), !1 !== this.cachedShow && void 0 === this.cachedHeading) {
                        var dataViewObjectsResult = (0, visualContainerUtils.VH)(this.themeCollection, this.themeService, this.config.$visualContainer, this.featureSwitchService.featureSwitches, !1, dataView, selectTransforms);
                        if (dataViewObjectsResult.dataViewObjects && (void 0 === this.cachedShow && (this.cachedShow = (0, 
                        dataViewObject2.NA)(dataViewObjectsResult.dataViewObjects, {
                            objectName: "title",
                            propertyName: "show"
                        }, !0)), this.cachedShow)) {
                            var titleText = (0, dataViewObject2.NA)(dataViewObjectsResult.dataViewObjects, {
                                objectName: "title",
                                propertyName: "text"
                            }, null);
                            null !== titleText ? this.cachedHeading = titleText : _.isEmpty(heading) && (heading = " ");
                        }
                    }
                    return this.cachedHeading || heading;
                },
                enumerable: !1,
                configurable: !0
            }), SingleVisualCompositeTileModel.prototype.setThemeName = function(themeName) {
                this.ensureVisual();
                var themeCollection = this._visual.themeCollection;
                themeCollection.customTheme = themeCollection.customTheme || (0, themeUtils.Mi)(themeName, 1), 
                themeCollection.customTheme.name = themeName;
            }, SingleVisualCompositeTileModel.prototype.isDataStale = function(modelRefreshEpochTime) {
                if (!modelRefreshEpochTime) return !1;
                var tileDataUpdatedTime = (0, modelConverterHelper.ee)(this.contract.tileDataUpdatedTime), tileDataLastUpdateTimeInMs = tileDataUpdatedTime && tileDataUpdatedTime.getTime();
                return !!tileDataLastUpdateTimeInMs && modelRefreshEpochTime - tileDataLastUpdateTimeInMs > 36e5;
            }, SingleVisualCompositeTileModel.prototype.setData = function(data, transforms, type) {
                try {
                    this.ensureVisual(), this._visual.data = data, this._visual.dataTransforms = transforms, 
                    this._visual.type = type, this.clearCache();
                } catch (exception) {
                    this.telemetryService.logEvent(TileDataUpdateException, {
                        visualType: type,
                        source: exception.fileName,
                        lineNumber: exception.lineNumber,
                        columnNumber: exception.columnNumber,
                        stack: exception.stack,
                        message: exception.message
                    });
                }
            }, SingleVisualCompositeTileModel.prototype.createHostServices = function(visualHostServiceLicensingCallbacks) {
                var _this = this;
                return (0, visualHostService.q)({
                    geocoder: this.geocoder,
                    geolocation: this.geolocationService,
                    localizationService: this.localizationService,
                    moduleLoader: this.moduleLoader,
                    promiseFactory: this.promiseFactory,
                    visualHostTooltipService: this.visualHostTooltipService,
                    authenticationService: this.authenticationService,
                    getAzureMapToken: function() {
                        return _this.azureMapTokenCache.getAzureMapToken();
                    },
                    azureMapsEndpoint: this.azureMapsEndpoint,
                    geocoderIndexedDB: this.geocoderIndexedDB,
                    canExpandCollapse: function() {
                        return !0;
                    },
                    onNotifyLicense: visualHostServiceLicensingCallbacks && visualHostServiceLicensingCallbacks.onNotifyLicense,
                    onClearLicenseNotification: visualHostServiceLicensingCallbacks && visualHostServiceLicensingCallbacks.onClearLicenseNotification,
                    onNotifyFeatureBlocked: visualHostServiceLicensingCallbacks && visualHostServiceLicensingCallbacks.onNotifyFeatureBlocked
                });
            }, SingleVisualCompositeTileModel.prototype.ensureVisual = function() {
                this._visual || (this._visual = {
                    hostServices: this.createHostServices(),
                    themeCollection: {}
                }, this.calculateLayout());
            }, Object.defineProperty(SingleVisualCompositeTileModel.prototype, "config", {
                get: function() {
                    return this._config;
                },
                set: function(config) {
                    if (VisualsCommon_debug.fF.assertValue(config, "The tile config must exist while setting it in a composite tile"), 
                    this._config = config, this._visual) {
                        var singleVisual = config.$visualContainer.config.singleVisual, visualType = singleVisual.visualType;
                        this._visual.type = visualType;
                        var dataViewObjectDescs, dataViewObjectDefns, stylePreset = (0, dataViewObjectDefinition1.NA)(singleVisual.vcObjects, {
                            objectName: "stylePreset",
                            propertyName: "name"
                        }, void 0);
                        this._visual.stylePresetName = stylePreset && (0, sqExprStaticMembers.VC)(stylePreset) && stylePreset.value, 
                        this._visual.themeCollection = _.cloneDeep(config.themeCollection);
                        var capabilities = this.visualPluginService.capabilities(visualType);
                        capabilities && (dataViewObjectDescs = capabilities.objects, dataViewObjectDefns = singleVisual.objects);
                        var dataViewTransformActions = (0, JsonExtensions.K)(config.transform);
                        this._visual.dataTransforms = dataViewTransformActions ? dataViewTransformActionSerializer.F.deserializeDataViewTransformActions(dataViewTransformActions, capabilities) : dataViewTransformActionSerializer.F.createTransformActions(config.queryMetadata, config.elements, dataViewObjectDescs, dataViewObjectDefns);
                    }
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(SingleVisualCompositeTileModel.prototype, "tileData", {
                get: function() {
                    return this._tileData;
                },
                set: function(data) {
                    this._tileData = data, this.readDataView(!0);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(SingleVisualCompositeTileModel.prototype, "tileDataIsVolatile", {
                get: function() {
                    return this.contract.tileDataIsVolatile;
                },
                enumerable: !1,
                configurable: !0
            }), SingleVisualCompositeTileModel.prototype.refreshData = function() {
                this.readDataView(!1);
            }, SingleVisualCompositeTileModel.prototype.setDependencies = function(dataProxy) {
                var shouldRefreshData = !this.dataProxy && this._tileData && !this.isLoading;
                _super.prototype.setDependencies.call(this, dataProxy), shouldRefreshData && this.refreshData();
            }, SingleVisualCompositeTileModel.prototype.readDataView = function(allowCachedResults) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var visualType, dataProxy, errorDetails, dataViewSource, options, dataLoadEvent, dataViewResult, clientError;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            if (visualType = this._visual.type, this.visual && !this.requiresData()) return this._visual.data = {
                                dataView: null
                            }, [ 2 ];
                            if (VisualsCommon_debug.fF.assertValue(this._tileData, "tileData should be defined."), 
                            !(dataProxy = this.dataProxy)) return [ 2 ];
                            if (this.contract.queryResultError && ((errorDetails = getTileErrorDetailsFromQueryResultError(this.contract.queryResultError, this.localizationService)) ? (this.isError = !0, 
                            this.errorDetails = errorDetails, this.errorText = errorDetails.message) : this.errorText = this.localizationService.get("Tile_ErrorText")), 
                            !this._tileData || !this._tileData.data) return this.isLoading = !this.isError, 
                            [ 2 ];
                            options = {
                                type: (dataViewSource = this._tileData).type,
                                query: {
                                    dataSources: null,
                                    command: dataViewSource.data
                                },
                                allowResultFromClientCache: allowCachedResults,
                                perfId: visualType,
                                kinds: this.pluginOps.dataViewKinds(visualType)
                            }, dataLoadEvent = null, this.dataLoadEventDelegate && (dataLoadEvent = this.dataLoadEventDelegate(), 
                            this.dataLoadEventDelegate = null), _a.label = 1;

                          case 1:
                            return _a.trys.push([ 1, 3, , 4 ]), [ 4, dataProxy.execute(options) ];

                          case 2:
                            return dataViewResult = _a.sent(), clientError = dataViewResult.dataReaderResult.error, 
                            this._visual.data = {
                                dataView: dataViewResult && dataViewResult.dataReaderResult ? dataViewResult.dataReaderResult.dataView : null,
                                dataViewSource: dataViewResult && dataViewResult.dataViewSource ? dataViewResult.dataViewSource : null
                            }, this.isError = this.isError || null != clientError, dataLoadEvent && (this.isError ? dataLoadEvent.reject() : dataLoadEvent.resolve()), 
                            [ 3, 4 ];

                          case 3:
                            return _a.sent(), this.isError = !0, dataLoadEvent && dataLoadEvent.reject(), [ 3, 4 ];

                          case 4:
                            return [ 2 ];
                        }
                    });
                });
            }, SingleVisualCompositeTileModel.prototype.applyLayout = function(changeType, skipVisualManualUpdate) {
                if (this.requiresResize) {
                    if (!skipVisualManualUpdate) {
                        var visualDefinition = this.visual;
                        visualDefinition && visualDefinition.visual && visualDefinition.visual.update({
                            viewport: visualDefinition.viewport,
                            dataViews: visualDefinition.dataViews,
                            suppressAnimations: !0,
                            type: enums.EP.Resize,
                            resizeMode: changeType === gridLayoutContainer1_changeType.resized ? 2 : changeType === gridLayoutContainer1_changeType.resizing ? 1 : void 0
                        });
                    }
                    this.requiresResize = !1;
                }
            }, SingleVisualCompositeTileModel.prototype.calculateLayout = function(compositeViewport, useSmallPlotArea, scale) {
                if (void 0 === scale && (scale = 1), compositeViewport && (this.viewport && this.viewport.height === compositeViewport.height && this.viewport.width === compositeViewport.width || (this.requiresResize = !0), 
                this.viewport = compositeViewport), null != useSmallPlotArea && this.useSmallPlotArea !== useSmallPlotArea && (this.useSmallPlotArea = useSmallPlotArea, 
                this.requiresResize = !0), this.viewport) {
                    var availableVisualHeight = this.viewport.height, availableVisualWidth = this.viewport.width;
                    1 === (this._config && this._config.layoutType) || (availableVisualHeight -= this.useSmallPlotArea ? 8 : 20, 
                    availableVisualWidth -= 20), this._visual && (this._visual.viewport = {
                        height: availableVisualHeight,
                        width: availableVisualWidth,
                        scale
                    });
                }
            }, SingleVisualCompositeTileModel.prototype.canResizeTo = function(size) {
                var visual = this._visual && this._visual.visual;
                return !!visual && (!visual.canResizeTo || visual.canResizeTo((0, gridLayoutService.p2)(size)));
            }, SingleVisualCompositeTileModel.prototype.getErrorLocId = function(_errorCode, _localizationService) {
                return "";
            }, SingleVisualCompositeTileModel.prototype.requiresData = function() {
                var visual = this.visual, pluginOps = this.pluginOps;
                if (visual) {
                    if (visual && visual.type) {
                        if (!pluginOps) return !0;
                        if (!pluginOps.isQueryVisual(visual.type)) return !1;
                    }
                    return !0;
                }
            }, SingleVisualCompositeTileModel.prototype.updateVisualInteractivityOptions = function(allowInteractivity) {
                var options = this.visualPluginService.getInteractivityOptions(this._visual.type);
                void 0 !== options.mobileTileInteractive && (options.mobileTileInteractive = options.mobileTileInteractive && allowInteractivity), 
                this._visual.interactivityOptions = options;
            }, SingleVisualCompositeTileModel.prototype.clearCache = function() {
                this.cachedHeading = void 0;
            }, SingleVisualCompositeTileModel.prototype.onNotifyLicense = function(notificationType) {
                0 !== notificationType && this.licenseUIManager.displayNotification(notificationType);
            }, SingleVisualCompositeTileModel.prototype.onNotifyFeatureBlocked = function(tooltip) {
                this.licenseUIManager.displayFeatureBlockedBanner(tooltip);
            }, SingleVisualCompositeTileModel.prototype.onClearLicenseNotification = function() {
                this.licenseUIManager.clearNotification();
            }, SingleVisualCompositeTileModel;
        }(function() {
            function CompositeTileModel(contract, visualPlugins, visualPluginOps) {
                this.useSmallPlotArea = !1, VisualsCommon_debug.fF.assertValue(contract, "contract"), 
                VisualsCommon_debug.fF.assertValue(visualPlugins, "visualPlugins"), VisualsCommon_debug.fF.assertValue(visualPluginOps, "visualPluginOps"), 
                this.contract = contract, this.visualPluginService = visualPlugins, this.pluginOps = visualPluginOps;
            }
            return Object.defineProperty(CompositeTileModel.prototype, "type", {
                get: function() {
                    return VisualsCommon_debug.fF.assertFail("this is an abstract property!"), null;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(CompositeTileModel.prototype, "tileData", {
                get: function() {
                    return VisualsCommon_debug.fF.assertFail("this is an abstract property!"), null;
                },
                set: function(_data) {
                    VisualsCommon_debug.fF.assertFail("this is an abstract property!");
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(CompositeTileModel.prototype, "tileDataIsVolatile", {
                get: function() {
                    return VisualsCommon_debug.fF.assertFail("this is an abstract function!"), !1;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(CompositeTileModel.prototype, "isError", {
                get: function() {
                    return this._isError;
                },
                set: function(value) {
                    this._isError = value, this.onErrorDelegate && this.onErrorDelegate();
                },
                enumerable: !1,
                configurable: !0
            }), CompositeTileModel.prototype.isDataStale = function(_modelRefreshTime) {
                return VisualsCommon_debug.fF.assertFail("this is an abstract function!"), !1;
            }, Object.defineProperty(CompositeTileModel.prototype, "heading1", {
                get: function() {
                    return this.config.heading1 || "";
                },
                enumerable: !1,
                configurable: !0
            }), CompositeTileModel.prototype.setDependencies = function(dataProxy) {
                this.dataProxy = dataProxy;
            }, CompositeTileModel.prototype.setDataLoadEventDelegate = function(dataLoadEventDelegate) {
                this.dataLoadEventDelegate = dataLoadEventDelegate;
            }, CompositeTileModel.prototype.copyDependencies = function(otherCompositeTileModel) {
                otherCompositeTileModel.dataProxy && this.setDependencies(otherCompositeTileModel.dataProxy);
            }, CompositeTileModel;
        }()), IframeTileModel = function() {
            function IframeTileModel(contract) {
                this.contract = contract;
            }
            return IframeTileModel.prototype.canResizeTo = function(size) {
                return size.rowSpan === gridLayoutService.lZ || size.colSpan === gridLayoutService.gY;
            }, IframeTileModel.prototype.getErrorLocId = function(_errorCode, _localizationService) {
                return "";
            }, IframeTileModel;
        }(), ImageTileModel = function() {
            function ImageTileModel(contract) {
                this.contract = contract;
            }
            return Object.defineProperty(ImageTileModel.prototype, "imageUrl", {
                get: function() {
                    return this._imageUrl;
                },
                set: function(value) {
                    this._imageUrl = value, value && !this.isStatic && 0 !== value.indexOf("data:") && (this._imageUrl = Utility_Utility.b$.getAbsoluteUri(value));
                },
                enumerable: !1,
                configurable: !0
            }), ImageTileModel.prototype.canResizeTo = function(size) {
                return size.rowSpan === gridLayoutService.lZ || size.colSpan === gridLayoutService.gY;
            }, ImageTileModel.prototype.getErrorLocId = function(_errorCode, _localizationService) {
                return "";
            }, ImageTileModel;
        }(), ModelTileModel = function() {
            function ModelTileModel(contract) {
                this.contract = contract;
            }
            return ModelTileModel.prototype.canResizeTo = function(size) {
                return size.rowSpan === gridLayoutService.eg;
            }, ModelTileModel.prototype.getErrorLocId = function(_errorCode, _localizationService) {
                return "";
            }, ModelTileModel;
        }(), dataServiceClientErrors = __webpack_require__(71766), valueType = __webpack_require__(80777), RealTime_constants = __webpack_require__(26805), dataSource = __webpack_require__(74804);
        function getRealTimeDataSource(modelId, originalModelId) {
            if (modelId && !(modelId < 0)) return (0, dataSource.yd)([ {
                id: modelId,
                type: "tabular",
                name: RealTime_constants.db,
                tabular: {
                    modelId: null != originalModelId ? originalModelId : modelId
                }
            } ]);
        }
        var RealTimeTileModel = function(_super) {
            function RealTimeTileModel(contract, visualPlugins, visualPluginOps, featureSwitchService, geoLocation, geocoder, promiseFactory, moduleLoader, telemetryService, themeService, authenticationService, localizationService, visualHostTooltipService, azureMapTokenCache, azureMapsEndpoint, geocoderIndexedDB) {
                var _this = _super.call(this, contract, visualPlugins, visualPluginOps, featureSwitchService, geoLocation, geocoder, promiseFactory, moduleLoader, telemetryService, themeService, authenticationService, localizationService, visualHostTooltipService, azureMapTokenCache, azureMapsEndpoint, geocoderIndexedDB) || this;
                return _this._visual = null, _this._localizationService = localizationService, _this;
            }
            return (0, tslib_es6.__extends)(RealTimeTileModel, _super), RealTimeTileModel.prototype.setModelId = function(id) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return VisualsCommon_debug.fF.assertAnyValue(id, "id"), this.contract.modelId = id, 
                            [ 4, this.initialize() ];

                          case 1:
                            return _a.sent(), [ 2 ];
                        }
                    });
                });
            }, RealTimeTileModel.prototype.getRealTimeModelId = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var contract, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        return this.datasetStore ? [ 2, this.datasetStore.findAll((contract = this.contract).modelId, !0).then(function(models) {
                            if (!_.isEmpty(models)) {
                                var model = _.find(models, function(m) {
                                    return null == contract.packageId || m.packageId === contract.packageId;
                                });
                                return model || (model = _.find(models, function(model) {
                                    return (0, StandaloneUtility3.yE)(model.permissions, 7);
                                })), model || (model = _.first(models)), {
                                    id: model.id,
                                    originalModelId: model.originalModelId,
                                    tableName: _this.getSchemaTableName(),
                                    schema: _this.getRealTimeConceptualSchema(),
                                    packageId: contract.packageId
                                };
                            }
                        }) ] : [ 2, void 0 ];
                    });
                });
            }, RealTimeTileModel.prototype.setRealTimeModelDependencies = function(dataProxy, visualQueryGenerator, conceptualSchemaProxy, realTimeDataService, datasetStore) {
                _super.prototype.setDependencies.call(this, dataProxy), VisualsCommon_debug.fF.assertValue(visualQueryGenerator, "visualQueryGenerator"), 
                VisualsCommon_debug.fF.assertValue(conceptualSchemaProxy, "conceptualSchemaProxy"), 
                VisualsCommon_debug.fF.assertValue(realTimeDataService, "realTimeDataService"), 
                this.visualQueryGenerator = visualQueryGenerator, this.conceptualSchemaProxy = conceptualSchemaProxy, 
                this.realTimeDataService = realTimeDataService, this.datasetStore = datasetStore;
            }, RealTimeTileModel.prototype.copyRealTimeModelDependencies = function(other) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var otherRealTimeModelId;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return VisualsCommon_debug.fF.assertValue(other, "other"), other.schema && (this.schema = other.schema), 
                            other.dataProxy && other.realTimeDataService && other.visualQueryGenerator && other.conceptualSchemaProxy ? (this.setRealTimeModelDependencies(other.dataProxy, other.visualQueryGenerator, other.conceptualSchemaProxy, other.realTimeDataService, other.datasetStore), 
                            other.onErrorDelegate && !this.onErrorDelegate && (this.onErrorDelegate = other.onErrorDelegate), 
                            [ 4, other.getRealTimeModelId() ]) : [ 2 ];

                          case 1:
                            return otherRealTimeModelId = _a.sent(), this.realTimeDataService.replaceListener(otherRealTimeModelId, other, this), 
                            [ 2 ];
                        }
                    });
                });
            }, RealTimeTileModel.prototype.onDataChanged = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var dataWindow, realTimeConfig, dataSources, queryGeneratorResult, errorDetails, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return VisualsCommon_debug.fF.assertValue(this.visualQueryGenerator, "visualQueryGenerator"), 
                            VisualsCommon_debug.fF.assertValue(this.dataProxy, "dataProxy"), this.singleVisualConfig ? (dataWindow = RealTime_constants.PB, 
                            (realTimeConfig = this.config) && realTimeConfig.dataWindow && (dataWindow = realTimeConfig.dataWindow), 
                            [ 4, this.getDatasources() ]) : [ 2 ];

                          case 1:
                            return dataSources = _a.sent(), !(queryGeneratorResult = this.visualQueryGenerator.execute({
                                dataSources,
                                schema: this.schema,
                                config: this.singleVisualConfig,
                                additionalFilters: null,
                                dataWindow
                            })) || queryGeneratorResult.error ? (errorDetails = void 0, queryGeneratorResult && queryGeneratorResult.error && (errorDetails = queryGeneratorResult.error.getDetails(this._localizationService)), 
                            this.onError(errorDetails)) : this.dataProxy.execute(queryGeneratorResult.options).then(function(dataViewResult) {
                                _this.isError = !1;
                                var visualData = {
                                    dataView: dataViewResult && dataViewResult.dataReaderResult ? dataViewResult.dataReaderResult.dataView : null
                                }, lastCategoryValue = _this.lastCategoryValue;
                                try {
                                    var categoryValue = function(dataView) {
                                        var dataViewCategorical = dataView && dataView.categorical;
                                        if (dataViewCategorical) {
                                            var firstCategory = _.head(dataViewCategorical.categories), values = firstCategory && firstCategory.values;
                                            if (!_.isEmpty(values)) {
                                                var value = _.last(values);
                                                return value && !_.isBoolean(value) && (_.isDate(value) || _.isNumber(value)) ? value : void 0;
                                            }
                                        }
                                    }(visualData.dataView);
                                    if (null != lastCategoryValue && null != categoryValue && lastCategoryValue.valueOf() >= categoryValue.valueOf()) return;
                                    _this.lastCategoryValue = categoryValue;
                                } catch (e) {}
                                _this.setData(visualData, queryGeneratorResult.transforms, _this.config.$visualContainer.config.singleVisual.visualType), 
                                _this.isLoading = !1;
                            }, function(clientError) {
                                if (!(clientError instanceof dataServiceClientErrors.C6)) {
                                    var errorDetails = clientError && clientError.getDetails(_this._localizationService);
                                    _this.onError(errorDetails);
                                }
                            }), [ 2 ];
                        }
                    });
                });
            }, RealTimeTileModel.prototype.onError = function(errDetails) {
                errDetails || (errDetails = (new dataServiceClientErrors.Kd).getDetails(this._localizationService)), 
                this.setErrorDetails(errDetails);
            }, RealTimeTileModel.prototype.getDatasources = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var realTimeModelId;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.getRealTimeModelId() ];

                          case 1:
                            return (realTimeModelId = _a.sent()) ? [ 2, getRealTimeDataSource(realTimeModelId.id, realTimeModelId.originalModelId) ] : [ 2, void 0 ];
                        }
                    });
                });
            }, Object.defineProperty(RealTimeTileModel.prototype, "singleVisualConfig", {
                get: function() {
                    return this.config.$visualContainer.config.singleVisual;
                },
                set: function(config) {
                    VisualsCommon_debug.fF.assertValue(config, "config"), this.config.$visualContainer.config.singleVisual = config, 
                    this.onDataChanged();
                },
                enumerable: !1,
                configurable: !0
            }), RealTimeTileModel.prototype.isDataStale = function() {
                return !1;
            }, RealTimeTileModel.prototype.initialize = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var masterPosition, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        return masterPosition = (0, contractUtils.gq)(this.contract), this.size = {
                            rowSpan: masterPosition.height,
                            colSpan: masterPosition.width
                        }, [ 2, this.getDatasources().then(function(datasources) {
                            if (datasources) return _this.conceptualSchemaProxy.get(datasources).then(function(schema) {
                                return _this.fixUpSchema(schema), _this.schema = schema, _this.getRealTimeModelId().then(function(modelId) {
                                    _this.realTimeDataService.subscribe(modelId, _this);
                                });
                            });
                        }) ];
                    });
                });
            }, RealTimeTileModel.prototype.unsubscribe = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var _this = this;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        return [ 2, this.getRealTimeModelId().then(function(modelId) {
                            if (modelId && modelId.tableName) return _this.realTimeDataService.unsubscribe(modelId, _this);
                        }) ];
                    });
                });
            }, RealTimeTileModel.prototype.fixUpSchema = function(schema) {
                var entities = schema.schema(RealTime_constants.db).entities;
                VisualsCommon_debug.fF.assert(function() {
                    return entities && 1 === entities.length;
                }, "Exactly 1 entity is expected.");
                for (var _i = 0, properties_1 = entities[0].properties; _i < properties_1.length; _i++) {
                    var property = properties_1[_i];
                    property.type !== valueType.Ge.fromDescriptor({
                        numeric: !0
                    }) && property.type !== valueType.Ge.fromDescriptor({
                        integer: !0
                    }) || (property.kind = 1);
                }
            }, RealTimeTileModel.prototype.getSchemaTableName = function() {
                var realTimeConceptualSchema = this.getRealTimeConceptualSchema();
                if (realTimeConceptualSchema) {
                    var entity = realTimeConceptualSchema.entities;
                    return VisualsCommon_debug.fF.assert(function() {
                        return 1 === entity.length;
                    }, "Expecting only one entity"), _.head(entity).name;
                }
            }, RealTimeTileModel.prototype.getRealTimeConceptualSchema = function() {
                if (this.schema) return this.schema.schema(RealTime_constants.db);
            }, RealTimeTileModel.prototype.setErrorDetails = function(errorDetails) {
                VisualsCommon_debug.fF.assertValue(errorDetails, "errorDetails should be set"), 
                this.errorDetails = errorDetails, this.errorText = errorDetails.message, this.isError = !0;
            }, RealTimeTileModel;
        }(SingleVisualCompositeTileModel), ReportTileModel = function() {
            function ReportTileModel(contract) {
                this.contract = contract, this.exploration = {
                    contract: void 0,
                    exploreCanvas: void 0,
                    sections: []
                }, this.isError = !1, this.tilesUpdated = !1;
            }
            return ReportTileModel.prototype.canResizeTo = function(size) {
                return size.rowSpan === gridLayoutService.lZ || size.colSpan === gridLayoutService.gY;
            }, ReportTileModel.prototype.getErrorLocId = function(_errorCode, _localizationService) {
                return "";
            }, ReportTileModel;
        }(), SsrsTileModel = function() {
            function SsrsTileModel(contract) {
                this.contract = contract;
            }
            return Object.defineProperty(SsrsTileModel.prototype, "imageUrl", {
                get: function() {
                    return this._imageUrl;
                },
                set: function(value) {
                    value && (this._imageUrl = 0 !== value.indexOf("data:") ? Utility_Utility.b$.getAbsoluteUri(value) : value);
                },
                enumerable: !1,
                configurable: !0
            }), SsrsTileModel.prototype.canResizeTo = function(size) {
                return size.rowSpan === gridLayoutService.av || size.colSpan === gridLayoutService.CJ;
            }, SsrsTileModel.prototype.getErrorLocId = function(_errorCode, _localizationService) {
                return "";
            }, SsrsTileModel;
        }(), WorkbookTileModel = function() {
            function WorkbookTileModel(contract, tileModel) {
                this.contract = contract, this.tileModel = tileModel;
            }
            return WorkbookTileModel.prototype.canResizeTo = function(size) {
                return size.rowSpan === gridLayoutService.lZ || size.colSpan === gridLayoutService.gY;
            }, WorkbookTileModel.prototype.getErrorLocId = function(errorCode, localizationService) {
                var errorId, errorArguments = [];
                switch (errorCode) {
                  case 10:
                    errorId = "WorkbookTile_GeneralError";
                    break;

                  case 11:
                    errorId = "WorkbookTile_FileNotFound";
                    break;

                  case 12:
                    errorId = "WorkbookTile_ObjectNotFound", errorArguments = this.contract.$config.workbookTile ? [ this.contract.$config.workbookTile.item ] : [ "pinned object" ];
                    break;

                  case 13:
                    errorId = "WorkbookTile_Unauthorized";
                    break;

                  default:
                    return "";
                }
                return localizationService.format(errorId, errorArguments);
            }, WorkbookTileModel.prototype.hasImages = function() {
                return this.hasWorkbookTileConfig && this.tileModel.config.workbookTile.images && this.tileModel.config.workbookTile.images.length > 0;
            }, Object.defineProperty(WorkbookTileModel.prototype, "images", {
                get: function() {
                    return this.hasWorkbookTileConfig ? this.tileModel.config.workbookTile.images : null;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(WorkbookTileModel.prototype, "hasWorkbookTileConfig", {
                get: function() {
                    return !!this.tileModel && !!this.tileModel.config && !!this.tileModel.config.workbookTile;
                },
                enumerable: !1,
                configurable: !0
            }), WorkbookTileModel;
        }(), fileUtils = __webpack_require__(86734), Workbook = function(_super) {
            function Workbook(contract) {
                var _this = _super.call(this, void 0 === contract ? 0 : contract.id, 1, void 0 === contract ? 0 : contract.packageId) || this;
                return _this.contract = contract, _this;
            }
            return (0, tslib_es6.__extends)(Workbook, _super), Workbook.prototype.getPermissions = function() {
                var result;
                return this.getPermissionsCallback && (result = this.getPermissionsCallback()), 
                result || this.contract && this.contract.permissions;
            }, Object.defineProperty(Workbook.prototype, "contentTileType", {
                get: function() {
                    return contracts.ty.Workbook;
                },
                enumerable: !1,
                configurable: !0
            }), Workbook.prototype.isOwner = function() {
                return (0, StandaloneUtility3.yE)(this.getPermissions(), 7);
            }, Workbook.prototype.isPersonalized = function() {
                var permissions = this.getPermissions();
                return (0, StandaloneUtility3.yE)(permissions, 11) && !(0, StandaloneUtility3.yE)(permissions, 7);
            }, Workbook.prototype.isEditable = function() {
                var editUrl = this.editUrl;
                return this.isOwner() && null != editUrl && "" !== editUrl;
            }, Object.defineProperty(Workbook.prototype, "displayNameWithExtension", {
                get: function() {
                    var workbookExtension = (0, fileUtils.m)(this.contract.sourceFilePath);
                    return this.displayName.concat(".").concat(workbookExtension);
                },
                enumerable: !1,
                configurable: !0
            }), Workbook;
        }(ReportResource), custom_visuals_authentication_service = __webpack_require__(36758), visual_plugin_operations_service = __webpack_require__(66977), azure_map_token_cache_service = __webpack_require__(80277), geocoder_service = __webpack_require__(28505), azure_maps_endpoint_service = __webpack_require__(58991), license_ui_manager_factory_service = __webpack_require__(14348), module_loader_service = __webpack_require__(2330), theme_service = __webpack_require__(67660), visual_host_tooltip_service_factory_service = __webpack_require__(98136), visualHostTooltipServiceFactory = __webpack_require__(80318), JsCommon_Utility_Utility = __webpack_require__(40093), formatUtil = __webpack_require__(59694);
        function createTileModelConverter(geolocationService, telemetryService, visualPlugins, visualPluginOps, featureSwitchService, geocoder, promiseFactory, moduleLoader, tileConfigUpgraderService, explorationSerializer, themeService, authenticationService, localizationService, visualHostTooltipService, licenseUIManagerFactory, azureMapTokenCache, azureMapsEndpoint, geocoderIndexedDB) {
            return new TileModelConverter(geolocationService, telemetryService, visualPlugins, visualPluginOps, featureSwitchService, geocoder, promiseFactory, moduleLoader, tileConfigUpgraderService, explorationSerializer, themeService, authenticationService, localizationService, visualHostTooltipService, licenseUIManagerFactory, azureMapTokenCache, azureMapsEndpoint, geocoderIndexedDB);
        }
        var TileModelConverter = function() {
            function TileModelConverter(geolocationService, telemetryService, visualPlugins, visualPluginOps, featureSwitchService, geocoder, promiseFactory, moduleLoader, tileConfigUpgraderService, explorationSerializer, themeService, authenticationService, localizationService, visualHostTooltipService, licenseUIManagerFactory, azureMapTokenCache, azureMapsEndpoint, geocoderIndexedDB) {
                this.geolocationService = geolocationService, this.telemetryService = telemetryService, 
                this.visualPlugins = visualPlugins, this.visualPluginOps = visualPluginOps, this.featureSwitchService = featureSwitchService, 
                this.geocoder = geocoder, this.promiseFactory = promiseFactory, this.moduleLoader = moduleLoader, 
                this.tileConfigUpgraderService = tileConfigUpgraderService, this.explorationSerializer = explorationSerializer, 
                this.themeService = themeService, this.authenticationService = authenticationService, 
                this.localizationService = localizationService, this.visualHostTooltipService = visualHostTooltipService, 
                this.licenseUIManagerFactory = licenseUIManagerFactory, this.azureMapTokenCache = azureMapTokenCache, 
                this.azureMapsEndpoint = azureMapsEndpoint, this.geocoderIndexedDB = geocoderIndexedDB;
            }
            return TileModelConverter.prototype.convertCompositeTile = function(contract) {
                if (!contract || contract.type !== contracts_contracts.YU.composite) return null;
                var model, config = this.convertTileConfig(contract);
                if (this.convertTileLayoutConfig(contract), !config || !config.visualContainer) return VisualsCommon_debug.fF.assertFail("Invalid composite tile type"), 
                null;
                (model = new SingleVisualCompositeTileModel(contract, this.visualPlugins, this.visualPluginOps, this.featureSwitchService, this.geolocationService, this.geocoder, this.promiseFactory, this.moduleLoader, this.telemetryService, this.themeService, this.authenticationService, this.localizationService, this.visualHostTooltipService, this.azureMapTokenCache, this.azureMapsEndpoint, this.geocoderIndexedDB, this.licenseUIManagerFactory)).config = config.visualContainer, 
                model.displayText = contract.displayText, model.subDisplayText = contract.subDisplayText;
                var masterPosition = (0, contractUtils.gq)(contract);
                if (model.size = {
                    rowSpan: masterPosition.height,
                    colSpan: masterPosition.width
                }, model.isLoading = isTileLoading(contract), contract.queryResultError) {
                    model.isError = !0;
                    var queryResultError = contract.queryResultError;
                    this.telemetryService.logEvent(events_DashboardTileError, {
                        tileType: contracts_contracts.YU[contracts_contracts.YU.composite],
                        message: (0, formatUtil.W)("{0}:{1} with rootActivityId:{2}, modelId:{3} and tileId:{4}", (0, 
                        StandaloneUtility3.BB)(contracts_contracts.G7, queryResultError.type), queryResultError.errorDetail, queryResultError.rootActivityId, contract.modelId.toString(), contract.id.toString())
                    });
                    var errorDetails = getTileErrorDetailsFromQueryResultError(queryResultError, this.localizationService);
                    errorDetails ? (model.errorDetails = errorDetails, model.errorText = errorDetails.message) : model.errorText = this.localizationService.get("Tile_ErrorText");
                }
                return model;
            }, TileModelConverter.prototype.convertTileData = function(contract) {
                if (contract.tileDataSet) return contract.tileDataSet;
                var config = this.convertTileConfig(contract);
                try {
                    contract.tileDataSet = this.parseTileData(contract, config.tileDataType);
                } catch (e) {
                    throw this.telemetryService.logEvent(events_DashboardTileError, {
                        tileType: contracts_contracts.YU[contracts_contracts.YU.composite],
                        message: (0, formatUtil.W)("DsrParseError:{0} with modelId:{1} and tileId:{2}", e.message, contract.modelId.toString(), contract.id.toString())
                    }), Utility_Utility.b$.ensureError(e);
                }
                return contract.tileDataSet;
            }, TileModelConverter.prototype.convertTileConfig = function(contract) {
                VisualsCommon_debug.fF.assertValue(contract, "contract");
                var config = contract.$config;
                if (!config) {
                    var timer = (0, Utility_Utility.BL)("Parse tile config");
                    try {
                        var visualContainerTileConfig = (config = contract.$config = function(config) {
                            var parsedConfig = (0, JsonExtensions.K)(config);
                            return null == parsedConfig && (parsedConfig = {
                                version: version.aD
                            }), parsedConfig;
                        }(contract.config)).visualContainer || config.realTimeVisual;
                        this.deserializeVisualContainer(visualContainerTileConfig), this.deserializeModelExtensions(visualContainerTileConfig || config.visual), 
                        this.tileConfigUpgraderService.upgrade(contract.id, config, contract.query);
                    } catch (e) {
                        VisualsCommon_debug.fF.assertFail("Unable to parse tile config");
                    } finally {
                        timer();
                    }
                }
                return config;
            }, TileModelConverter.prototype.convertTileLayoutConfig = function(contract) {
                if (VisualsCommon_debug.fF.assertValue(contract, "contract"), !contract.$layoutConfig) {
                    var parsedLayoutConfig = function(contract) {
                        if (VisualsCommon_debug.fF.assertValue(contract, "contract"), contract.$layoutConfig) return contract.$layoutConfig;
                        var obsoleteLayoutPosition = {
                            x: contract.col,
                            y: contract.row,
                            width: contract.colSpan,
                            height: contract.rowSpan
                        }, parsedLayoutConfig = void 0;
                        if (contract.layoutConfig) try {
                            parsedLayoutConfig = JSON.parse(contract.layoutConfig), (0, arrayExtensions.Br)(parsedLayoutConfig.layouts).withId(0).position = obsoleteLayoutPosition;
                        } catch (e) {
                            VisualsCommon_debug.fF.assertFail("Unable to parse tile layout config");
                        } else parsedLayoutConfig = {
                            layouts: [ {
                                id: 0,
                                position: obsoleteLayoutPosition
                            } ]
                        };
                        return parsedLayoutConfig;
                    }(contract);
                    contract.$layoutConfig = parsedLayoutConfig, contract.layoutConfig = JSON.stringify(parsedLayoutConfig);
                }
                return contract.$layoutConfig;
            }, TileModelConverter.prototype.deserializeVisualContainer = function(visualContainerTileConfig) {
                visualContainerTileConfig && visualContainerTileConfig.visualContainer && !visualContainerTileConfig.$visualContainer && (visualContainerTileConfig.$visualContainer = this.explorationSerializer.deserializeCanvasItem(visualContainerTileConfig.visualContainer));
            }, TileModelConverter.prototype.deserializeModelExtensions = function(visualTileConfig) {
                visualTileConfig && visualTileConfig.modelExtensions && !visualTileConfig.$modelExtensions && (visualTileConfig.$modelExtensions = this.explorationSerializer.deserializeModelExtensions(visualTileConfig.modelExtensions));
            }, TileModelConverter.prototype.parseTileData = function(tileContract, tileDataType) {
                var tileData, timer = (0, Utility_Utility.BL)("Parse tile data");
                try {
                    if (tileContract.tileDataBinaryBase64Encoded) {
                        var uncompressedTileData = (0, JsCommon_Utility_Utility.Wh)(tileContract.tileDataBinaryBase64Encoded);
                        tileData = JSON.parse(uncompressedTileData);
                    } else tileContract.tileData && (tileData = JSON.parse(tileContract.tileData));
                    return {
                        type: tileDataType,
                        data: tileData
                    };
                } finally {
                    timer();
                }
            }, TileModelConverter;
        }(), exploration_serializer_service = __webpack_require__(81986), Visuals_plugins = __webpack_require__(47508), VersionUpgrader = function() {
            function VersionUpgrader() {
                this.version = "0.1";
            }
            return VersionUpgrader.prototype.upgrade = function(_tileId, config, query) {
                if (VisualsCommon_debug.fF.assert(function() {
                    return "0.0" === config.version;
                }, "Tile Config Version should be 0.0 in order to use this Version Upgrader"), config.version = this.version, 
                query && query.defn && !query.defn.Version && config.visual && !_.isEmpty(config.visual.elements) && config.visual.visual === Visuals_plugins.L.scatterChart.name) {
                    var elements = config.visual.elements;
                    if (elements[0].DataRoles) {
                        for (var firstDataRoles = elements[0].DataRoles, hasCategory = !1, hasSeries = !1, hasSize = !1, categoryProjectionIndex = void 0, _i = 0, firstDataRoles_1 = firstDataRoles; _i < firstDataRoles_1.length; _i++) {
                            var dataRole = firstDataRoles_1[_i];
                            "Category" === dataRole.Name && (hasCategory = !0, categoryProjectionIndex = dataRole.Projection), 
                            hasSeries = hasSeries || "Series" === dataRole.Name, hasSize = hasSize || "Size" === dataRole.Name;
                        }
                        hasSize && hasCategory && !hasSeries && (VisualsCommon_debug.fF.assertValue(categoryProjectionIndex, "categoryProjectionIndex"), 
                        firstDataRoles.push({
                            Name: "Series",
                            Projection: categoryProjectionIndex
                        }));
                    }
                }
            }, VersionUpgrader;
        }(), dataViewObjectSerializer = __webpack_require__(54766), semanticQuerySerializer = __webpack_require__(3468), visualQuery = __webpack_require__(45114), explorationVersions = __webpack_require__(6118), filterUtils = __webpack_require__(42614), transformGeneratorUtils = __webpack_require__(5753), contracts_queryProjection = __webpack_require__(61421), visualData = __webpack_require__(58098), sqExpr = __webpack_require__(94419), sqFrom = __webpack_require__(38953);
        function v1_1_upgrader_createVersionUpgrader(pluginService, telemetryService) {
            return new v1_1_upgrader_VersionUpgrader(pluginService, telemetryService);
        }
        var v1_1_upgrader_VersionUpgrader = function() {
            function VersionUpgrader(pluginService, telemetryService) {
                this.pluginService = pluginService, this.telemetryService = telemetryService, this.version = "1.1";
            }
            return VersionUpgrader.prototype.upgrade = function(tileId, config, query) {
                var _a, _b;
                VisualsCommon_debug.fF.assert(function() {
                    return "0.1" === config.version || "1.0" === config.version;
                }, "Tile Config Version should be 0.1 or 1.0 in order to use this Version Upgrader"), 
                VisualsCommon_debug.fF.assertAnyValue(query, "If the query is undefined it gets handled fine"), 
                config.version = this.version;
                var singleVisualTileConfig = config.visual || config.realTimeVisual;
                if (singleVisualTileConfig) {
                    singleVisualTileConfig.visual || this.telemetryService.logEvent(TileConfigUpgradeTileConfig, {
                        error: DataServicesCore_constants.hN
                    });
                    var singleVisualConfig = {
                        visualType: singleVisualTileConfig.visual
                    };
                    singleVisualTileConfig.stylePresetName && (singleVisualConfig.vcObjects = {
                        stylePreset: [ {
                            properties: {
                                name: (0, sqExpr.fL)(singleVisualTileConfig.stylePresetName)
                            }
                        } ]
                    }), singleVisualConfig.columnProperties = singleVisualTileConfig.columnProperties;
                    var plugin = this.pluginService.getPlugin(singleVisualTileConfig.visual), dataViewObjectDefn = (0, 
                    dataViewObjectSerializer.wN)(singleVisualTileConfig.objects, plugin && plugin.capabilities.objects);
                    dataViewObjectDefn && (singleVisualConfig.objects = dataViewObjectDefn);
                    var visualContainer = {
                        name: "tile".concat(tileId),
                        config: {
                            singleVisual: singleVisualConfig
                        }
                    };
                    if (query && query.defn) {
                        var semanticQuery = semanticQuerySerializer.ib.tryDeserializeQuery(query.defn);
                        if (semanticQuery) {
                            var selectCount = null === (_b = null === (_a = singleVisualTileConfig.queryMetadata) || void 0 === _a ? void 0 : _a.Select) || void 0 === _b ? void 0 : _b.length, selectExprs = (semanticQuery = (0, 
                            transformGeneratorUtils.mZ)(semanticQuery, selectCount)).select(), queryProjections = {};
                            singleVisualTileConfig.elements || (singleVisualTileConfig.elements = []);
                            for (var _i = 0, _c = (0, visualData.M)(singleVisualTileConfig.elements); _i < _c.length; _i++) {
                                var dataRole = _c[_i], selectedExpr = selectExprs[dataRole.Projection];
                                if (VisualsCommon_debug.fF.assertValue(selectedExpr, "DataRole projection exceeds the number of items in select clause"), 
                                selectedExpr) {
                                    var roleName = dataRole.Name, queryProjection = queryProjections[roleName];
                                    queryProjection || (queryProjections[roleName] = queryProjection = new contracts_queryProjection.NQ([])), 
                                    queryProjection.addProjection({
                                        queryRef: selectedExpr.name
                                    }), dataRole.isActive && queryProjection.addActiveQueryReference(selectedExpr.name);
                                }
                            }
                            visualContainer.filters = filterUtils.l.deriveFromSQFilters(semanticQuery.from(), semanticQuery.where(), singleVisualTileConfig.queryMetadata), 
                            singleVisualConfig.query = new visualQuery.g(semanticQuery.where([], new sqFrom.cL), queryProjections, []);
                        }
                    } else delete singleVisualTileConfig.transform;
                    var updatedConfig = {
                        $visualContainer: visualContainer,
                        dataWindow: config.realTimeVisual && config.realTimeVisual.dataWindow,
                        elements: singleVisualTileConfig.elements,
                        heading1: singleVisualTileConfig.heading1,
                        heading2: singleVisualTileConfig.heading2,
                        heading3: singleVisualTileConfig.heading3,
                        layoutType: singleVisualTileConfig.layoutType,
                        queryMetadata: singleVisualTileConfig.queryMetadata,
                        transform: singleVisualTileConfig.transform,
                        $modelExtensions: singleVisualTileConfig.$modelExtensions,
                        themeCollection: singleVisualTileConfig.themeCollection || {},
                        dataSourceVariables: singleVisualTileConfig.dataSourceVariables
                    };
                    singleVisualTileConfig.themeName && !updatedConfig.themeCollection.customTheme && (updatedConfig.themeCollection.customTheme = (0, 
                    themeUtils.Mi)(singleVisualTileConfig.themeName, 1, explorationVersions.H3n.v3_18)), 
                    singleVisualTileConfig.baseThemeName && !updatedConfig.themeCollection.baseTheme && (updatedConfig.themeCollection.baseTheme = (0, 
                    themeUtils.Mi)(singleVisualTileConfig.baseThemeName, 2, explorationVersions.H3n.v3_18)), 
                    updatedConfig = _.omitBy(updatedConfig, function(prop) {
                        return void 0 === prop;
                    }), config.realTimeVisual ? config.realTimeVisual = updatedConfig : config.visualContainer = updatedConfig;
                }
            }, VersionUpgrader;
        }(), v3_19Upgrader = __webpack_require__(89682), v3_20Upgrader = __webpack_require__(68935);
        function v1_2_upgrader_createVersionUpgrader(pluginService, featureSwitchService) {
            return new v1_2_upgrader_VersionUpgrader(pluginService, featureSwitchService);
        }
        var v1_2_upgrader_VersionUpgrader = function() {
            function VersionUpgrader(pluginService, featureSwitchService) {
                this.pluginService = pluginService, this.featureSwitchService = featureSwitchService, 
                this.version = "1.2";
            }
            return VersionUpgrader.prototype.upgrade = function(_tileId, config, _query) {
                VisualsCommon_debug.fF.assert(function() {
                    return "1.1" === config.version;
                }, "Tile Config Version should be 1.1 in order to use this Version Upgrader"), config.version = this.version;
                var visualContainerTileConfig = config.visualContainer || config.realTimeVisual;
                if (visualContainerTileConfig) {
                    var singleVisual = visualContainerTileConfig.$visualContainer.config && visualContainerTileConfig.$visualContainer.config.singleVisual;
                    if (singleVisual) {
                        var visualType = singleVisual.visualType, capabilities = this.pluginService.capabilities(visualType), descriptors = capabilities && capabilities.objects, upgradeResponsiveCartesian = _.includes(VersionUpgrader.responsiveCartesians, visualType), upgradeDefaultCategoryColor = (0, 
                        v3_19Upgrader.zW)(visualType);
                        upgradeResponsiveCartesian && (VisualsCommon_debug.fF.assertValue(descriptors, "visual descriptors are expected to exist for the main flow of rendering a visual"), 
                        this.upgradeSingleVisual(singleVisual)), (upgradeResponsiveCartesian || upgradeDefaultCategoryColor) && visualContainerTileConfig.transform && this.upgradeSerializedTransform(visualContainerTileConfig, capabilities, upgradeResponsiveCartesian, upgradeDefaultCategoryColor), 
                        upgradeDefaultCategoryColor && (0, v3_19Upgrader.fm)(singleVisual.objects), this.featureSwitchService.featureSwitches.cartesianConditionalFormatting && (0, 
                        v3_20Upgrader.Am)(singleVisual.objects, singleVisual.query, visualType);
                    }
                }
            }, VersionUpgrader.prototype.upgradeSingleVisual = function(singleVisual) {
                singleVisual.objects || (singleVisual.objects = {}), this.applyResponsiveLegacy(singleVisual.objects);
            }, VersionUpgrader.prototype.upgradeSerializedTransform = function(config, capabilities, upgradeResponsiveCartesian, upgradeDefaultCategoryColor) {
                var transform = this.deserializeTransform(config.transform, capabilities);
                transform && (transform.objects || (transform.objects = {}), upgradeResponsiveCartesian && this.applyResponsiveLegacy(transform.objects), 
                upgradeDefaultCategoryColor && (0, v3_19Upgrader.fm)(transform.objects), config.transform = dataViewTransformActionSerializer.F.serializeTransformActions(dataViewTransformActionSerializer.F.serializeDataViewTransformActions(transform, capabilities && capabilities.objects)));
            }, VersionUpgrader.prototype.deserializeTransform = function(transform, capabilities) {
                var parsedTransform = (0, JsonExtensions.K)(transform);
                if (parsedTransform) return dataViewTransformActionSerializer.F.deserializeDataViewTransformActions(parsedTransform, capabilities);
            }, VersionUpgrader.prototype.applyResponsiveLegacy = function(objects) {
                (0, dataViewObjectDefinition1.zx)(objects, "general", void 0).properties.responsiveLegacy = (0, 
                sqExpr.O7)(!0);
            }, VersionUpgrader.responsiveCartesians = [ Visuals_plugins.L.barChart.name, Visuals_plugins.L.clusteredBarChart.name, Visuals_plugins.L.clusteredColumnChart.name, Visuals_plugins.L.columnChart.name, Visuals_plugins.L.hundredPercentStackedBarChart.name, Visuals_plugins.L.hundredPercentStackedColumnChart.name, Visuals_plugins.L.lineChart.name, Visuals_plugins.L.areaChart.name, Visuals_plugins.L.stackedAreaChart.name, Visuals_plugins.L.lineClusteredColumnComboChart.name, Visuals_plugins.L.lineStackedColumnComboChart.name, Visuals_plugins.L.scatterChart.name, Visuals_plugins.L.waterfallChart.name, Visuals_plugins.L.realTimeLineChart.name, Visuals_plugins.L.ribbonChart.name ], 
            VersionUpgrader;
        }(), visualContainer2 = __webpack_require__(80981), v1_3_upgrader_VersionUpgrader = function() {
            function VersionUpgrader() {
                this.version = "1.3";
            }
            return VersionUpgrader.prototype.upgrade = function(_tileId, config, _query) {
                VisualsCommon_debug.fF.assert(function() {
                    return "1.2" === config.version;
                }, "Tile Config Version should be 1.2 in order to use this Version Upgrader"), config.version = this.version;
                var singleVisualTileConfig = config.visual || config.realTimeVisual;
                if (singleVisualTileConfig && singleVisualTileConfig.vcObjects) {
                    VisualsCommon_debug.fF.assertValue(config.visualContainer.$visualContainer.config.singleVisual, "singleVisual");
                    var singleVisualConfig = config.visualContainer.$visualContainer.config.singleVisual, vcObjects = (0, 
                    dataViewObjectSerializer.wN)(singleVisualTileConfig.vcObjects, visualContainer2.XW);
                    singleVisualConfig.vcObjects ? (0, dataViewObjectDefinition1.l7)(singleVisualConfig.vcObjects, vcObjects) : singleVisualConfig.vcObjects = vcObjects;
                }
            }, VersionUpgrader;
        }(), upgradeUtils = __webpack_require__(40175), v1_4_upgrader_VersionUpgrader = function() {
            function VersionUpgrader() {
                this.version = "1.4";
            }
            return VersionUpgrader.prototype.upgrade = function(_tileId, config, _query) {
                VisualsCommon_debug.fF.assert(function() {
                    return "1.3" === config.version;
                }, "Tile Config Version should be 1.3 in order to use this Version Upgrader"), config.version = this.version;
                var visualContainerTileConfig = config.visualContainer || config.realTimeVisual;
                if (visualContainerTileConfig) {
                    var singleVisual = visualContainerTileConfig.$visualContainer.config && visualContainerTileConfig.$visualContainer.config.singleVisual;
                    singleVisual && (0, upgradeUtils.jF)(singleVisual);
                }
            }, VersionUpgrader;
        }(), v1_5_upgrader_VersionUpgrader = function() {
            function VersionUpgrader() {
                this.version = "1.5";
            }
            return VersionUpgrader.prototype.upgrade = function(_tileId, config, _query) {
                VisualsCommon_debug.fF.assert(function() {
                    return "1.4" === config.version;
                }, "Tile Config Version should be 1.4 in order to use this Version Upgrader"), config.version = this.version;
                var visualContainerTileConfig = config.visualContainer || config.realTimeVisual;
                if (visualContainerTileConfig) {
                    var singleVisual = visualContainerTileConfig.$visualContainer.config && visualContainerTileConfig.$visualContainer.config.singleVisual;
                    singleVisual && (0, upgradeUtils.Rd)(singleVisual);
                }
            }, VersionUpgrader;
        }(), pivotTable_capabilities = __webpack_require__(67016), tableEx_capabilities = __webpack_require__(60014);
        function v1_7_upgrader_createVersionUpgrader(featureSwitchService) {
            return new v1_7_upgrader_VersionUpgrader(featureSwitchService);
        }
        var v1_7_upgrader_VersionUpgrader = function() {
            function VersionUpgrader(featureSwitchService) {
                this.featureSwitchService = featureSwitchService, this.version = "1.7";
            }
            return VersionUpgrader.prototype.upgrade = function(_tileId, config, _query) {
                var _a, _b, _c;
                VisualsCommon_debug.fF.assert(function() {
                    return "1.5" === config.version || "1.6" === config.version;
                }, "Tile Config Version should be 1.5 or 1.6 in order to use this Version Upgrader"), 
                config.version = this.version;
                var singleVisual = null === (_c = null === (_b = null === (_a = null == config ? void 0 : config.visualContainer) || void 0 === _a ? void 0 : _a.$visualContainer) || void 0 === _b ? void 0 : _b.config) || void 0 === _c ? void 0 : _c.singleVisual;
                if (singleVisual) {
                    var updateTableExObjects = !1, updatePivotTableObjects = !1;
                    if (singleVisual.visualType === Visuals_plugins.L.table.name ? ((0, upgradeUtils.Pq)(singleVisual), 
                    updateTableExObjects = !0) : singleVisual.visualType === Visuals_plugins.L.matrix.name && ((0, 
                    upgradeUtils.Pq)(singleVisual), updatePivotTableObjects = !0), singleVisual.visualType === Visuals_plugins.L.pivotTable.name && ((0, 
                    upgradeUtils.NN)(singleVisual.objects), updatePivotTableObjects = !0), updateTableExObjects || updatePivotTableObjects) {
                        var dataViewTransformActions = (0, Common.KV)(config.visualContainer.transform);
                        if (dataViewTransformActions) {
                            var descriptors = updateTableExObjects ? (0, tableEx_capabilities.k)(this.featureSwitchService.featureSwitches).objects : (0, 
                            pivotTable_capabilities.R)(this.featureSwitchService.featureSwitches).objects, updatedDefns = (0, 
                            dataViewObjectSerializer.xF)(singleVisual.objects, descriptors, void 0, void 0);
                            dataViewTransformActions.objects = updatedDefns, config.visualContainer.transform = JSON.stringify(dataViewTransformActions);
                        }
                    }
                }
            }, VersionUpgrader;
        }(), TileConfigUpgraderService = function() {
            function TileConfigUpgraderService(pluginService, telemetryService, featureSwitchService) {
                this.upgraders = [ new VersionUpgrader, v1_1_upgrader_createVersionUpgrader(pluginService, telemetryService), v1_2_upgrader_createVersionUpgrader(pluginService, featureSwitchService), new v1_3_upgrader_VersionUpgrader, new v1_4_upgrader_VersionUpgrader, new v1_5_upgrader_VersionUpgrader, v1_7_upgrader_createVersionUpgrader(featureSwitchService) ];
            }
            return TileConfigUpgraderService.prototype.upgrade = function(tileId, config, query) {
                if (config) {
                    var semanticQueryWithDataShapeBinding = (0, contractUtils.jD)(query);
                    config && (config.version || (config.version = version.aD));
                    for (var _i = 0, _a = this.upgraders; _i < _a.length; _i++) {
                        var upgrader = _a[_i];
                        (0, version.lt)(config.version, upgrader.version) && upgrader.upgrade(tileId, config, semanticQueryWithDataShapeBinding);
                    }
                }
            }, TileConfigUpgraderService.\u0275fac = function(t) {
                return new (t || TileConfigUpgraderService)(core["\u0275\u0275inject"](visual_plugin_service.D), core["\u0275\u0275inject"](Telemetry.y0), core["\u0275\u0275inject"](feature_switch_service.vZ));
            }, TileConfigUpgraderService.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: TileConfigUpgraderService,
                factory: TileConfigUpgraderService.\u0275fac,
                providedIn: "root"
            }), TileConfigUpgraderService;
        }(), geocoder_indexed_db_service = __webpack_require__(1599), tile_model_converter_service_TileModelConverter = function() {
            function TileModelConverter(telemetryService, visualPlugins, visualPluginOps, featureSwitchService, geolocationService, geocoder, promiseFactory, moduleLoader, explorationSerializer, themeService, authenticationService, localizationService, visualHostTooltipServiceFactory, tileConfigUpgraderService, licenseUIManagerFactory, azureMapTokenCache, azureMapsEndpoint, geocoderIndexedDB) {
                this.legacyTileModelConverter = createTileModelConverter(geolocationService, telemetryService, visualPlugins, visualPluginOps, featureSwitchService, geocoder, promiseFactory, moduleLoader, tileConfigUpgraderService, explorationSerializer, themeService, authenticationService, localizationService, visualHostTooltipServiceFactory.create(), licenseUIManagerFactory, azureMapTokenCache, azureMapsEndpoint, geocoderIndexedDB);
            }
            return TileModelConverter.prototype.convertCompositeTile = function(contract) {
                return this.legacyTileModelConverter.convertCompositeTile(contract);
            }, TileModelConverter.prototype.convertTileData = function(contract) {
                return this.legacyTileModelConverter.convertTileData(contract);
            }, TileModelConverter.prototype.convertTileConfig = function(contract) {
                return this.legacyTileModelConverter.convertTileConfig(contract);
            }, TileModelConverter.prototype.convertTileLayoutConfig = function(contract) {
                return this.legacyTileModelConverter.convertTileLayoutConfig(contract);
            }, TileModelConverter.\u0275fac = function(t) {
                return new (t || TileModelConverter)(core["\u0275\u0275inject"](Telemetry.y0), core["\u0275\u0275inject"](visual_plugin_service.D), core["\u0275\u0275inject"](visual_plugin_operations_service.f), core["\u0275\u0275inject"](feature_switch_service.vZ), core["\u0275\u0275inject"](Common._1), core["\u0275\u0275inject"](geocoder_service.i), core["\u0275\u0275inject"](promiseFactory.t), core["\u0275\u0275inject"](module_loader_service.m), core["\u0275\u0275inject"](exploration_serializer_service.L), core["\u0275\u0275inject"](theme_service.f), core["\u0275\u0275inject"](custom_visuals_authentication_service.V), core["\u0275\u0275inject"](localization_service.o), core["\u0275\u0275inject"](visualHostTooltipServiceFactory.A), core["\u0275\u0275inject"](TileConfigUpgraderService), core["\u0275\u0275inject"](license_ui_manager_factory_service.S), core["\u0275\u0275inject"](azure_map_token_cache_service.o), core["\u0275\u0275inject"](azure_maps_endpoint_service.A), core["\u0275\u0275inject"](geocoder_indexed_db_service.W));
            }, TileModelConverter.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: TileModelConverter,
                factory: TileModelConverter.\u0275fac,
                providedIn: "root"
            }), TileModelConverter;
        }(), Model = function(_super) {
            function Model(contract) {
                var _this = _super.call(this) || this;
                return _this.contract = contract, _this.isRefreshInProgress = !1, _this.uniqueId = Model.getUniqueId(contract.id, contract.packageId), 
                _this.categories = 0, _this;
            }
            return (0, tslib_es6.__extends)(Model, _super), Model.prototype.getPermissions = function() {
                var result;
                return this.getPermissionsCallback && null != (result = this.getPermissionsCallback()) ? result : this.contract && this.contract.permissions;
            }, Object.defineProperty(Model.prototype, "hasError", {
                get: function() {
                    return this.contract && (2 === this.packagePublishStatus || 4 === this.packagePublishStatus || 2 === this.contract.lastRefreshStatus || 4 === this.contract.lastRefreshStatus);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Model.prototype, "lastRefreshTimeInLocaleString", {
                get: function() {
                    var lastRefreshTime = this.getLastRefreshTime();
                    if (lastRefreshTime) return lastRefreshTime.toLocaleString();
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Model.prototype, "lastRefreshEpochTime", {
                get: function() {
                    var lastRefreshTime = this.getLastRefreshTime();
                    if (lastRefreshTime) return lastRefreshTime.getTime();
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Model.prototype, "contentTileType", {
                get: function() {
                    return contracts.ty.Dataset;
                },
                enumerable: !1,
                configurable: !0
            }), Model.prototype.getRefreshDisabledReason = function() {
                var _a;
                return null !== (_a = this.contract && this.contract.refreshSchedule && this.contract.refreshSchedule.refreshDisabledReason) && void 0 !== _a ? _a : 0;
            }, Model.getUniqueId = function(id, packageId) {
                return "".concat(contracts.ty.Dataset, "_").concat(id, "_").concat(packageId);
            }, Model.prototype.getLastRefreshTime = function() {
                var contract = this.contract;
                return (0, modelConverterHelper.ee)(contract.onPremModelConnectionString ? contract.lastTimeAModelChangeWasDetectedInTheCluster : contract.lastRefreshTime);
            }, Model;
        }(Resource), RealTimeModelConverter = function() {
            function RealTimeModelConverter(visualPlugin, visualPluginOps, featureSwitchService, geolocationService, geocoder, promiseFactory, moduleLoader, telemetryService, themeService, authenticationService, localizationService, visualHostTooltipService, tileModelConverter, azureMapTokenCache, azureMapsEndpoint, geocoderIndexedDb) {
                this.visualPlugin = visualPlugin, this.visualPluginOps = visualPluginOps, this.featureSwitchService = featureSwitchService, 
                this.geolocationService = geolocationService, this.geocoder = geocoder, this.promiseFactory = promiseFactory, 
                this.moduleLoader = moduleLoader, this.telemetryService = telemetryService, this.themeService = themeService, 
                this.authenticationService = authenticationService, this.localizationService = localizationService, 
                this.visualHostTooltipService = visualHostTooltipService, this.tileModelConverter = tileModelConverter, 
                this.azureMapTokenCache = azureMapTokenCache, this.azureMapsEndpoint = azureMapsEndpoint, 
                this.geocoderIndexedDb = geocoderIndexedDb;
            }
            return RealTimeModelConverter.prototype.convertModel = function(modelContract) {
                var model = new Model(modelContract);
                return model.id = modelContract.id, model.isNew = modelContract.isNew, model.cloudRlsEnabled = modelContract.cloudRlsEnabled, 
                model.name = modelContract.name, model.displayName = modelContract.displayName, 
                model.description = modelContract.description, model.fileName = modelContract.fileName, 
                model.packageId = modelContract.packageId, model.packageVersion = modelContract.packageVersion, 
                model.contentProviderId = modelContract.contentProviderId, model.isHidden = modelContract.isHidden || !1, 
                model.isRefreshInProgress = modelContract.currentRefreshStartingTime && (0, modelConverterHelper.ee)(modelContract.currentRefreshStartingTime).getTime() + 18e5 > Date.now(), 
                model.dbName = modelContract.dbName, model.vsName = modelContract.vsName, model.realTimeMode = modelContract.realTimeMode, 
                model.getPermissionsCallback = function() {
                    return model.contract && model.contract.permissions;
                }, model;
            }, RealTimeModelConverter.prototype.convertRealTimeTile = function(contract) {
                return function(contract, services) {
                    if (contract && contract.type === contracts_contracts.YU.realTime) {
                        var config = services.tileModelConverter.convertTileConfig(contract);
                        services.tileModelConverter.convertTileLayoutConfig(contract);
                        var model = new RealTimeTileModel(contract, services.visualPlugin, services.visualPluginOps, services.featureSwitchService, services.geolocationService, services.geocoder, services.promiseFactory, services.moduleLoader, services.telemetryService, services.themeService, services.authenticationService, services.localizationService, services.visualHostTooltipService, services.azureMapTokenCache, services.azureMapsEndpoint, services.geocoderIndexedDB);
                        config && config.realTimeVisual && (model.config = config.realTimeVisual), model.displayText = contract.displayText, 
                        model.subDisplayText = contract.subDisplayText;
                        var masterPosition = (0, contractUtils.gq)(contract);
                        return model.size = {
                            rowSpan: masterPosition.height,
                            colSpan: masterPosition.width
                        }, model;
                    }
                }(contract, {
                    visualPlugin: this.visualPlugin,
                    visualPluginOps: this.visualPluginOps,
                    featureSwitchService: this.featureSwitchService,
                    geolocationService: this.geolocationService,
                    geocoder: this.geocoder,
                    promiseFactory: this.promiseFactory,
                    moduleLoader: this.moduleLoader,
                    telemetryService: this.telemetryService,
                    themeService: this.themeService,
                    authenticationService: this.authenticationService,
                    localizationService: this.localizationService,
                    visualHostTooltipService: this.visualHostTooltipService.create(),
                    tileModelConverter: this.tileModelConverter,
                    azureMapTokenCache: this.azureMapTokenCache,
                    azureMapsEndpoint: this.azureMapsEndpoint,
                    geocoderIndexedDB: this.geocoderIndexedDb
                });
            }, RealTimeModelConverter.\u0275fac = function(t) {
                return new (t || RealTimeModelConverter)(core["\u0275\u0275inject"](visual_plugin_service.D), core["\u0275\u0275inject"](visual_plugin_operations_service.f), core["\u0275\u0275inject"](feature_switch_service.vZ), core["\u0275\u0275inject"](Common._1), core["\u0275\u0275inject"](geocoder_service.i), core["\u0275\u0275inject"](promiseFactory.t), core["\u0275\u0275inject"](module_loader_service.m), core["\u0275\u0275inject"](Telemetry.y0), core["\u0275\u0275inject"](theme_service.f), core["\u0275\u0275inject"](custom_visuals_authentication_service.V), core["\u0275\u0275inject"](localization_service.o), core["\u0275\u0275inject"](visual_host_tooltip_service_factory_service.q), core["\u0275\u0275inject"](tile_model_converter_service_TileModelConverter), core["\u0275\u0275inject"](azure_map_token_cache_service.o), core["\u0275\u0275inject"](azure_maps_endpoint_service.A), core["\u0275\u0275inject"](geocoder_indexed_db_service.W));
            }, RealTimeModelConverter.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: RealTimeModelConverter,
                factory: RealTimeModelConverter.\u0275fac,
                providedIn: "root"
            }), RealTimeModelConverter;
        }(), permission_service = __webpack_require__(87041), DataServiceModelConverter = function() {
            function DataServiceModelConverter(forceOpenCustomLinksInNewTab, visualPlugins, visualPluginOps, featureSwitchService, geolocationService, geocoder, promiseFactory, licenseUIManagerFactory, moduleLoader, telemetryService, themeService, authenticationService, visualHostTooltipService, tileModelConverter, reportModelConverter, localizationService, realTimeModelConverter, permissionService, azureMapTokenCache, azureMapsEndpoint, geocoderIndexedDB) {
                this.forceOpenCustomLinksInNewTab = forceOpenCustomLinksInNewTab, this.visualPlugins = visualPlugins, 
                this.visualPluginOps = visualPluginOps, this.featureSwitchService = featureSwitchService, 
                this.geolocationService = geolocationService, this.geocoder = geocoder, this.promiseFactory = promiseFactory, 
                this.licenseUIManagerFactory = licenseUIManagerFactory, this.moduleLoader = moduleLoader, 
                this.telemetryService = telemetryService, this.themeService = themeService, this.authenticationService = authenticationService, 
                this.visualHostTooltipService = visualHostTooltipService, this.tileModelConverter = tileModelConverter, 
                this.reportModelConverter = reportModelConverter, this.localizationService = localizationService, 
                this.realTimeModelConverter = realTimeModelConverter, this.permissionService = permissionService, 
                this.azureMapTokenCache = azureMapTokenCache, this.azureMapsEndpoint = azureMapsEndpoint, 
                this.geocoderIndexedDB = geocoderIndexedDB;
            }
            return DataServiceModelConverter.prototype.convertDashboard = function(contract, models, reports, workbooks) {
                var _this = this, model = this.convertDashboardShallow(contract);
                return contract.tiles && (model.lazyTiles = new Lazy.o(function() {
                    return _.map(contract.tiles, function(t) {
                        return _this.convertTile(t, models, reports, workbooks);
                    });
                })), model;
            }, DataServiceModelConverter.prototype.convertTile = function(contract, models, reports, workbooks) {
                this.convertTileLayoutConfig(contract);
                var tileModel = this.convertTileShallow(contract, models, reports);
                if (this.mergeTile(tileModel, contract, models, reports, workbooks), !contract.reportId) {
                    var reportContract = this.getTileReport(contract.reportId, reports);
                    reportContract && (tileModel.report = tileModel.report || new Report(reportContract), 
                    this.reportModelConverter.fillReport(tileModel.report, reportContract));
                }
                return tileModel;
            }, DataServiceModelConverter.prototype.convertTileAction = function(contract) {
                VisualsCommon_debug.fF.assertValue(contract, "contract");
                var action = contract.$action;
                if (!action) {
                    var parsedAction = void 0;
                    if (contract.action && 0 === contract.action.indexOf("{")) try {
                        parsedAction = JSON.parse(contract.action);
                    } catch (e) {
                        VisualsCommon_debug.fF.assertFail("Unable to parse tile action");
                    } else parsedAction = {
                        action: contract.action
                    };
                    action = contract.$action = parsedAction;
                }
                return action;
            }, DataServiceModelConverter.prototype.getWorkbookViewUrl = function(workbookContract) {
                return this.getWorkbookActionUrl(workbookContract, "view");
            }, DataServiceModelConverter.prototype.getWorkbookEditUrl = function(workbookContract) {
                return this.getWorkbookActionUrl(workbookContract, "edit");
            }, DataServiceModelConverter.prototype.getWorkbookEmbedView = function(workbookContract) {
                return this.getWorkbookActionUrl(workbookContract, "embedview");
            }, DataServiceModelConverter.prototype.getHrefTarget = function(contract) {
                return this.convertTileAction(contract).openInSameTab && !this.forceOpenCustomLinksInNewTab ? "_self" : "_blank";
            }, DataServiceModelConverter.prototype.convertDashboardShallow = function(contract) {
                var _this = this, model = new Dashboard(contract);
                return model.getPermissionsCallback = function() {
                    return _this.permissionService.getDashboardEffectivePermissions(contract);
                }, model.dataClassificationId = contract.dataClassificationId, model.folderId = contract.folderId, 
                this.mergeDashboardShallow(model, contract), model;
            }, DataServiceModelConverter.prototype.getTileReport = function(reportId, reports) {
                var report;
                if (reports) {
                    var rIndex = (0, arrayExtensions.cq)(reports, function(report) {
                        return report && report.id === reportId;
                    });
                    -1 !== rIndex && (report = reports[rIndex]);
                }
                return report;
            }, DataServiceModelConverter.prototype.convertTileShallow = function(contract, models, reports) {
                this.convertTileLayoutConfig(contract);
                var model = new Tile(contract, this.localizationService, this.forceOpenCustomLinksInNewTab);
                return this.mergeTileShallow(model, contract, models, reports), model;
            }, DataServiceModelConverter.prototype.convertTileLayoutConfig = function(contract) {
                return this.tileModelConverter.convertTileLayoutConfig(contract);
            }, DataServiceModelConverter.prototype.mergeTile = function(existingTile, newContract, models, reportContracts, workbookContracts, reportModels) {
                var existingComposite = existingTile.composite, existingRealTime = existingTile.realTime;
                this.mergeTileShallow(existingTile, newContract, models, reportContracts), existingTile.composite = this.tileModelConverter.convertCompositeTile(newContract), 
                existingComposite && existingTile.composite && (existingTile.composite.setDataLoadEventDelegate(existingComposite.dataLoadEventDelegate), 
                existingTile.composite.copyDependencies(existingComposite), existingComposite instanceof SingleVisualCompositeTileModel && existingTile.composite instanceof SingleVisualCompositeTileModel && this.mergeVisual(existingTile.composite.visual, existingComposite.visual), 
                existingComposite.tileDataIsVolatile && existingComposite.tileData && existingComposite.tileData.data && (existingTile.composite.tileData = existingComposite.tileData)), 
                existingTile.iframe = this.convertIframeTile(newContract), existingTile.image = this.convertImageTile(newContract), 
                existingTile.model = this.convertModelTile(newContract), existingTile.ssrs = this.convertSsrsTile(newContract);
                var newRealTime = this.realTimeModelConverter.convertRealTimeTile(newContract);
                if (this.updateTileRealTimeModel(existingTile, existingRealTime, newRealTime), existingTile && existingTile.reportTile) {
                    var exploration = existingTile.reportTile.exploration;
                    existingTile.reportTile = this.convertReportTile(newContract), existingTile.reportTile.exploration = exploration;
                } else existingTile.reportTile = this.convertReportTile(newContract);
                if (!_.isEmpty(workbookContracts)) {
                    var workbook = this.getTileWorkbook(newContract.workbookId, newContract.packageId, workbookContracts);
                    if (workbook) {
                        var workbookModel = this.convertWorkbook(workbook);
                        existingTile.workbook = this.convertWorkbookTile(newContract, workbookModel, existingTile);
                    }
                }
                if (reportContracts) {
                    var reportContract = this.getTileReport(newContract.reportId, reportContracts);
                    reportContract ? (existingTile.report = existingTile.report || this.reportModelConverter.convertReport(reportContract), 
                    this.reportModelConverter.fillReport(existingTile.report, reportContract)) : existingTile.report = null, 
                    existingTile.contractsReport = this.getTileReport(newContract.reportId, reportContracts);
                } else if (reportModels) {
                    for (var reportModel = void 0, i = 0, len = reportModels.length; i < len; i++) if (newContract.reportId === reportModels[i].id) {
                        reportModel = reportModels[i];
                        break;
                    }
                    reportModel && (existingTile.report = existingTile.report || reportModel, this.reportModelConverter.fillReport(existingTile.report, reportModel.contract), 
                    existingTile.contractsReport = reportModel.contract);
                }
                newContract.modelId && (existingTile.contractsModel = this.getTileModel(newContract.modelId, models));
            }, DataServiceModelConverter.prototype.mergeTileShallow = function(existingTile, newContract, models, reports) {
                this.convertTileLayoutConfig(newContract), existingTile.contract = newContract, 
                existingTile.type = newContract.type, this.mergeTileLayoutConfig(existingTile, newContract), 
                existingTile.displayText = newContract.displayText, existingTile.subDisplayText = newContract.subDisplayText, 
                existingTile.backgroundImageUrl = this.getImageUrl(newContract), existingTile.errorCode = newContract.errorCode;
                var contractsTileReport = this.getTileReport(newContract.reportId, reports);
                if (newContract.query && newContract.query.modelQuery && (existingTile.utterance = newContract.query.modelQuery.utterance), 
                existingTile.action = this.convertTileAction(newContract), existingTile.config = this.convertTileConfig(newContract), 
                existingTile.isLoading = isTileLoading(newContract), existingTile.isLocked = 20 === newContract.errorCode, 
                newContract.modelId) {
                    var contractsTileModel = this.getTileModel(newContract.modelId, models);
                    contractsTileModel && (existingTile.vsName = contractsTileModel.vsName, existingTile.dbName = contractsTileModel.dbName);
                }
                newContract.reportId && (existingTile.report = existingTile.report || this.reportModelConverter.convertReport(contractsTileReport), 
                existingTile.report.id = newContract.reportId), contractsTileReport && (this.reportModelConverter.fillReport(existingTile.report, contractsTileReport), 
                existingTile.action || (existingTile.action = {
                    action: "/openReport"
                })), this.convertSpecificTileShallow(newContract, existingTile);
            }, DataServiceModelConverter.prototype.mergeDashboardShallow = function(existingModel, newContract) {
                var _this = this;
                newContract.displayName && (existingModel.displayName = newContract.displayName), 
                void 0 !== newContract.permissions && (existingModel.getPermissionsCallback = function() {
                    return _this.permissionService.getDashboardEffectivePermissions(newContract);
                }, existingModel.contract.permissions = newContract.permissions), newContract.modelIds && (existingModel.contract.modelIds = newContract.modelIds), 
                newContract.reportIds && (existingModel.contract.reportIds = newContract.reportIds), 
                newContract.workbookIds && (existingModel.contract.workbookIds = newContract.workbookIds), 
                newContract.packageIds && (existingModel.contract.packageIds = newContract.packageIds), 
                void 0 !== newContract.isStaging && (existingModel.contract.isStaging = newContract.isStaging), 
                void 0 !== newContract.qnaEnabled && (existingModel.qnaEnabled = newContract.qnaEnabled), 
                void 0 !== newContract.gravityEnabled && (existingModel.gravityEnabled = newContract.gravityEnabled), 
                void 0 !== newContract.annotationsEnabled && (existingModel.annotationsEnabled = newContract.annotationsEnabled), 
                void 0 !== newContract.isSharedFromSecurityGroup && (existingModel.isSharedFromSecurityGroup = newContract.isSharedFromSecurityGroup), 
                void 0 !== newContract.isHidden && (existingModel.isHidden = newContract.isHidden), 
                void 0 !== newContract.ownerInfo && this.mergeArtifactOwnerInfo(existingModel, newContract.ownerInfo), 
                existingModel.sharedTime = newContract.sharedTime || "/Date(0)/";
            }, DataServiceModelConverter.prototype.mergeArtifactOwnerInfo = function(existingModel, ownerInfo) {
                existingModel.ownerFullname = (0, userInfoHelper.P)(ownerInfo.givenName, ownerInfo.familyName), 
                existingModel.ownerMail = ownerInfo.emailAddress, ownerInfo.userObjectId && (existingModel.ownerUserObjectId = ownerInfo.userObjectId), 
                ownerInfo.groupObjectId && (existingModel.ownerGroupObjectId = ownerInfo.groupObjectId), 
                existingModel.contract.ownerInfo || (existingModel.contract.ownerInfo = ownerInfo);
            }, DataServiceModelConverter.prototype.convertSpecificTileShallow = function(contract, model) {
                switch (this.convertTileLayoutConfig(contract), contract.type) {
                  case contracts_contracts.YU.composite:
                    var config = this.convertTileConfig(contract);
                    if (config && config.visualContainer ? model.composite = new SingleVisualCompositeTileModel(contract, this.visualPlugins, this.visualPluginOps, this.featureSwitchService, this.geolocationService, this.geocoder, this.promiseFactory, this.moduleLoader, this.telemetryService, this.themeService, this.authenticationService, this.localizationService, this.visualHostTooltipService.create(), this.azureMapTokenCache, this.azureMapsEndpoint, this.geocoderIndexedDB, this.licenseUIManagerFactory) : VisualsCommon_debug.fF.assertFail("Invalid composite tile type"), 
                    model.composite) {
                        var masterPosition = (0, contractUtils.gq)(contract);
                        model.composite.size = {
                            rowSpan: masterPosition.height,
                            colSpan: masterPosition.width
                        }, model.composite.isLoading = isTileLoading(contract);
                    }
                    break;

                  case contracts_contracts.YU.iframe:
                    model.iframe = new IframeTileModel(contract), model.iframe.isLoading = isTileLoading(contract);
                    break;

                  case contracts_contracts.YU.image:
                    model.image = new ImageTileModel(contract), model.image.isLoading = isTileLoading(contract);
                    break;

                  case contracts_contracts.YU.model:
                    model.model = new ModelTileModel(contract), model.model.isLoading = isTileLoading(contract);
                    break;

                  case contracts_contracts.YU.ssrs:
                    model.model = new SsrsTileModel(contract), model.model.isLoading = isTileLoading(contract);
                    break;

                  case contracts_contracts.YU.workbook:
                    model.workbook = new WorkbookTileModel(contract, model), model.workbook.isLoading = isTileLoading(contract);
                    break;

                  case contracts_contracts.YU.report:
                    model.model = new ReportTileModel(contract), model.model.isLoading = isTileLoading(contract);
                    break;

                  case contracts_contracts.YU.realTime:
                    this.convertTileConfig(contract), model.realTime = new RealTimeTileModel(contract, this.visualPlugins, this.visualPluginOps, this.featureSwitchService, this.geolocationService, this.geocoder, this.promiseFactory, this.moduleLoader, this.telemetryService, this.themeService, this.authenticationService, this.localizationService, this.visualHostTooltipService.create(), this.azureMapTokenCache, this.azureMapsEndpoint, this.geocoderIndexedDB);
                    break;

                  default:
                    VisualsCommon_debug.fF.assertFail("Invalid tile type");
                }
            }, DataServiceModelConverter.prototype.mergeVisual = function(visualToUpdate, sourceVisual) {
                VisualsCommon_debug.fF.assertValue(visualToUpdate, "visualToUpdate"), VisualsCommon_debug.fF.assertValue(sourceVisual, "sourceVisual"), 
                sourceVisual.visual && visualToUpdate.type === sourceVisual.type && (visualToUpdate.visual = sourceVisual.visual), 
                visualToUpdate.viewport = sourceVisual.viewport;
            }, DataServiceModelConverter.prototype.convertIframeTile = function(contract) {
                if (!contract || contract.type !== contracts_contracts.YU.iframe) return null;
                var model = new IframeTileModel(contract), iframeConfig = this.convertTileConfig(contract);
                return this.convertTileLayoutConfig(contract), iframeConfig && iframeConfig.iframe && (model.srcUrl = iframeConfig.iframe.srcUrl, 
                model.embedCode = iframeConfig.iframe.embedCode), model.isLoading = isTileLoading(contract), 
                model;
            }, DataServiceModelConverter.prototype.convertImageTile = function(contract) {
                if (!contract || contract.type !== contracts_contracts.YU.image) return null;
                var model = new ImageTileModel(contract);
                return this.convertTileLayoutConfig(contract), model.displayText = contract.displayText, 
                model.subDisplayText = contract.subDisplayText, "number" != typeof model.contract.reportId || contract.config ? (model.isStatic = !1, 
                model.imageUrl = this.getImageUrl(contract)) : (model.isStatic = !0, model.imageUrl = DataServicesCore_constants.yE), 
                model.isLoading = isTileLoading(contract), model;
            }, DataServiceModelConverter.prototype.convertModelTile = function(contract) {
                if (!contract || contract.type !== contracts_contracts.YU.model) return null;
                var model = new ModelTileModel(contract);
                return this.convertTileLayoutConfig(contract), model.displayText = contract.displayText, 
                model.isLoading = isTileLoading(contract), model.subDisplayText = contract.subDisplayText, 
                model;
            }, DataServiceModelConverter.prototype.getImageUrl = function(contract) {
                var imageConfig = this.convertTileConfig(contract);
                if (imageConfig && imageConfig.imageTile) return imageConfig.imageTile.imageUrl;
            }, DataServiceModelConverter.prototype.convertSsrsTile = function(contract) {
                if (!contract || contract.type !== contracts_contracts.YU.ssrs) return null;
                this.convertTileLayoutConfig(contract);
                var model = new SsrsTileModel(contract);
                return contract.config && (model.imageUrl = this.getSsrsImageUrl(contract)), model.isLoading = isTileLoading(contract), 
                model;
            }, DataServiceModelConverter.prototype.getSsrsImageUrl = function(contract) {
                var ssrsConfig = this.convertTileConfig(contract);
                if (ssrsConfig && ssrsConfig.ssrsTile) return ssrsConfig.ssrsTile.imageUrl;
            }, DataServiceModelConverter.prototype.updateTileRealTimeModel = function(existingTile, existingRealTime, newRealTime) {
                existingTile.realTime = newRealTime, existingRealTime && existingTile.realTime && existingTile.realTime.copyRealTimeModelDependencies(existingRealTime);
            }, DataServiceModelConverter.prototype.convertReportTile = function(contract) {
                return contract && contract.type === contracts_contracts.YU.report ? (this.convertTileLayoutConfig(contract), 
                new ReportTileModel(contract)) : null;
            }, DataServiceModelConverter.prototype.getTileWorkbook = function(workbookId, packageId, workbooks) {
                var workbook;
                if (workbooks) {
                    var index = (0, arrayExtensions.cq)(workbooks, function(workbook) {
                        return workbook.id === workbookId && workbook.packageId === packageId;
                    });
                    -1 !== index && (workbook = workbooks[index]);
                }
                return workbook;
            }, DataServiceModelConverter.prototype.convertWorkbook = function(workbookContract) {
                var _this = this, workbookModel = this.convertWorkbookShallow(workbookContract);
                return workbookContract && (workbookModel.id = workbookContract.id, workbookModel.modelId = workbookContract.modelId, 
                workbookModel.viewUrl = this.getWorkbookViewUrl(workbookContract), workbookModel.editUrl = this.getWorkbookEditUrl(workbookContract), 
                workbookModel.embedUrl = this.getWorkbookEmbedView(workbookContract), workbookModel.name = workbookContract.name, 
                workbookModel.displayName = workbookContract.displayName, workbookModel.description = workbookContract.description, 
                workbookModel.fileName = workbookContract.fileName, workbookModel.packageId = workbookContract.packageId, 
                workbookModel.isNew = workbookContract.isNew, workbookModel.getPermissionsCallback = function() {
                    return _this.permissionService.getWorkbookEffectivePermissions(workbookContract);
                }), workbookModel;
            }, DataServiceModelConverter.prototype.convertWorkbookShallow = function(workbook) {
                return new Workbook(workbook);
            }, DataServiceModelConverter.prototype.convertWorkbookTile = function(contract, workbook, tileModel) {
                if (!contract || contract.type !== contracts_contracts.YU.workbook) return null;
                this.convertTileLayoutConfig(contract);
                var model = new WorkbookTileModel(contract, tileModel);
                model.displayText = contract.displayText, model.subDisplayText = contract.subDisplayText, 
                model.isLoading = isTileLoading(contract), model.image = contract.tileDataBinaryBase64Encoded, 
                model.keepOriginalContentSize = contract.$config.workbookTile && contract.$config.workbookTile.keepOriginalContentSize ? contract.$config.workbookTile.keepOriginalContentSize : DataServicesCore_constants.LN;
                var workbookTileConfig = contract.$config.workbookTile;
                return workbook ? (workbookTileConfig && (model.embedUrl = workbook.embedUrl + "&item=" + workbookTileConfig.item), 
                workbook.contract && (model.webUri = workbook.contract.webUri)) : VisualsCommon_debug.fF.assertFail("Unexpected tile from a non existent workbook"), 
                model;
            }, DataServiceModelConverter.prototype.getTileModel = function(modelId, models) {
                var model;
                if (models) {
                    var rIndex = (0, arrayExtensions.cq)(models, function(model) {
                        return model && model.id === modelId;
                    });
                    -1 !== rIndex && (model = models[rIndex]);
                }
                return model;
            }, DataServiceModelConverter.prototype.mergeTileLayoutConfig = function(existingTile, newContract) {
                if (VisualsCommon_debug.fF.assertValue(newContract.$layoutConfig, "TileLayoutConfig is not set"), 
                !(existingTile.layoutPosition.x && existingTile.layoutPosition.y && existingTile.layoutPosition.width && existingTile.layoutPosition.height)) {
                    var contractLayoutDefinitions = (0, arrayExtensions.Br)(newContract.$layoutConfig.layouts), gridLayoutContext = existingTile.gridLayoutContext, activeLayout = gridLayoutContext ? gridLayoutContext.getActiveLayout() : 0, newLayoutDefinition = contractLayoutDefinitions.withId(activeLayout);
                    newLayoutDefinition && this.mergeLayoutPosition(existingTile.layoutPosition, newLayoutDefinition.position);
                }
            }, DataServiceModelConverter.prototype.convertTileConfig = function(contract) {
                return this.tileModelConverter.convertTileConfig(contract);
            }, DataServiceModelConverter.prototype.getWorkbookActionUrl = function(workbookContract, action) {
                return workbookContract.webUri && workbookContract.etagHash ? "".concat(workbookContract.webUri, "/_layouts/WopiFrame.aspx?sourcedoc={").concat(workbookContract.etagHash, "}&action=").concat(action) : "";
            }, DataServiceModelConverter.prototype.mergeLayoutPosition = function(existingLayoutPosition, newLayoutPosition) {
                newLayoutPosition && (existingLayoutPosition.x = existingLayoutPosition.x || newLayoutPosition.x, 
                existingLayoutPosition.y = existingLayoutPosition.y || newLayoutPosition.y, existingLayoutPosition.width = existingLayoutPosition.width || newLayoutPosition.width, 
                existingLayoutPosition.height = existingLayoutPosition.height || newLayoutPosition.height);
            }, DataServiceModelConverter.\u0275fac = function(t) {
                return new (t || DataServiceModelConverter)(core["\u0275\u0275inject"](ForceOpenCustomLinksInNewTabToken), core["\u0275\u0275inject"](visual_plugin_service.D), core["\u0275\u0275inject"](visual_plugin_operations_service.f), core["\u0275\u0275inject"](feature_switch_service.vZ), core["\u0275\u0275inject"](Common._1), core["\u0275\u0275inject"](geocoder_service.i), core["\u0275\u0275inject"](promiseFactory.t), core["\u0275\u0275inject"](license_ui_manager_factory_service.S), core["\u0275\u0275inject"](module_loader_service.m), core["\u0275\u0275inject"](Telemetry.y0), core["\u0275\u0275inject"](theme_service.f), core["\u0275\u0275inject"](custom_visuals_authentication_service.V), core["\u0275\u0275inject"](visual_host_tooltip_service_factory_service.q), core["\u0275\u0275inject"](tile_model_converter_service_TileModelConverter), core["\u0275\u0275inject"](ReportModelConverter), core["\u0275\u0275inject"](localization_service.o), core["\u0275\u0275inject"](RealTimeModelConverter), core["\u0275\u0275inject"](permission_service.$A), core["\u0275\u0275inject"](azure_map_token_cache_service.o), core["\u0275\u0275inject"](azure_maps_endpoint_service.A), core["\u0275\u0275inject"](geocoder_indexed_db_service.W));
            }, DataServiceModelConverter.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: DataServiceModelConverter,
                factory: DataServiceModelConverter.\u0275fac,
                providedIn: "root"
            }), DataServiceModelConverter;
        }(), UsageMetricsReport = function() {
            function UsageMetricsReport(promiseFactory, navigationService, contentProviderHttpService, errorService, featureSwitchService, store, notificationToastService, localizationService, usageMetricsHttp, activeFolderId, LazyProvider, reportStore, reportModelConverter, modelConverter, dashboardStore, datasetStore, groupStore) {
                this.promiseFactory = promiseFactory, this.navigationService = navigationService, 
                this.contentProviderHttpService = contentProviderHttpService, this.errorService = errorService, 
                this.featureSwitchService = featureSwitchService, this.store = store, this.notificationToastService = notificationToastService, 
                this.localizationService = localizationService, this.usageMetricsHttp = usageMetricsHttp, 
                this.activeFolderId = activeFolderId, this.LazyProvider = LazyProvider, this.reportStore = reportStore, 
                this.reportModelConverter = reportModelConverter, this.modelConverter = modelConverter, 
                this.dashboardStore = dashboardStore, this.datasetStore = datasetStore, this.groupStore = groupStore, 
                this.pendingUsageMetricsRequests = [];
            }
            return UsageMetricsReport.prototype.openReportUsageMetricsReport = function(report, groupObjectId, groupNumericId, parentEvent, openInSameTab) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var newUsageMetricsEnabled, isFolderWSv2, artifactType;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return VisualsCommon_debug.fF.assertValue(report, "report"), newUsageMetricsEnabled = !1, 
                            isFolderWSv2 = groupObjectId === this.activeFolderId.activeFolderObjectId ? this.activeFolderId.isActiveFolderWSv2 : !!groupNumericId, 
                            this.featureSwitchService.featureSwitches.newUsageMetrics && isFolderWSv2 ? [ 4, this.getNewUsageMetricsSetting() ] : [ 3, 2 ];

                          case 1:
                            newUsageMetricsEnabled = _a.sent(), _a.label = 2;

                          case 2:
                            return artifactType = newUsageMetricsEnabled ? "ReportV2" : "Report", [ 4, this.groupStore.ensureGroupArtifactsLoaded(groupObjectId) ];

                          case 3:
                            return _a.sent(), [ 4, this.getPackageAndNavigateToUsageMetricsReport(artifactType, report.displayName, report.objectId, groupObjectId, groupNumericId, parentEvent, openInSameTab) ];

                          case 4:
                            return [ 2, _a.sent() ];
                        }
                    });
                });
            }, UsageMetricsReport.prototype.openDashboardUsageMetricsReport = function(dashboard, groupObjectId, groupNumericId, parentEvent, openInSameTab) {
                return VisualsCommon_debug.fF.assertValue(dashboard, "dashboard"), this.getPackageAndNavigateToUsageMetricsReport("Dashboard", dashboard.displayName, dashboard.objectId, groupObjectId, groupNumericId, parentEvent, openInSameTab);
            }, UsageMetricsReport.prototype.getContentTileFromUsageMetricsFilters = function(filters) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var parser, additionalFilters, contentTile, _i, additionalFilters_1;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.LazyProvider.get("@powerbi/ODataFilterParser/OData-Filter-Parser.module#ODataFilterParserModule", "odataFilterParserService") ];

                          case 1:
                            return parser = _a.sent(), _.isEmpty(filters) && (filters = this.navigationService.additionalODataFilter), 
                            [ 4, parser.tryGetFilters(filters) ];

                          case 2:
                            if (additionalFilters = _a.sent(), _.isEmpty(additionalFilters)) return [ 2 ];
                            _i = 0, additionalFilters_1 = additionalFilters, _a.label = 3;

                          case 3:
                            return _i < additionalFilters_1.length ? [ 4, this.getContentTileFromFilters(additionalFilters_1[_i]) ] : [ 3, 6 ];

                          case 4:
                            if (contentTile = _a.sent(), !_.isEmpty(contentTile)) return [ 3, 6 ];
                            _a.label = 5;

                          case 5:
                            return _i++, [ 3, 3 ];

                          case 6:
                            return VisualsCommon_debug.fF.assert(function() {
                                return !_.isEmpty(contentTile);
                            }, "contentTile"), [ 2, contentTile ];
                        }
                    });
                });
            }, UsageMetricsReport.prototype.isUsageMetricsArtifactUsingReportContract = function(report) {
                return (artifact = report) ? getReportPackage(artifact, this.store).pipe((0, operators_map.U)(function(pkg) {
                    return isUsageMetricsPackage(pkg);
                })) : (0, observable_of.of)(!1);
                var artifact;
            }, UsageMetricsReport.prototype.isUsageMetricsArtifactUsingDatasetContract = function(dataset) {
                return (artifact = dataset) ? function(dataset, store) {
                    var packageId = dataset.packageId;
                    return packageId ? store.select(package_selector.it).pipe((0, operators_take.q)(1), (0, 
                    operators_map.U)(function(packages) {
                        return _.find(packages, function(p) {
                            return p.id === packageId;
                        });
                    })) : empty.E;
                }(artifact, this.store).pipe((0, operators_map.U)(function(pkg) {
                    return isUsageMetricsPackage(pkg);
                })) : (0, observable_of.of)(!1);
                var artifact;
            }, UsageMetricsReport.prototype.isUsageMetricsV2ArtifactUsingReportContract = function(report) {
                return (artifact = report) ? getReportPackage(artifact, this.store).pipe((0, operators_map.U)(function(pkg) {
                    return isUsageMetricsPackage(pkg) && !isLegacyUsageMetricsPackage(pkg);
                })) : (0, observable_of.of)(!1);
                var artifact;
            }, UsageMetricsReport.prototype.isUsageMetricsArtifact = function(artifact) {
                return function(artifact, store) {
                    return !!artifact && isUsageMetricsPackage(getPackage(artifact, store));
                }(artifact, this.store);
            }, UsageMetricsReport.prototype.isUsageMetricsV2Artifact = function(artifact) {
                return function(artifact, store) {
                    if (!artifact) return !1;
                    var pkg = getPackage(artifact, store);
                    return isUsageMetricsPackage(pkg) && !isLegacyUsageMetricsPackage(pkg);
                }(artifact, this.store);
            }, UsageMetricsReport.prototype.fromUsageMetrics = function(artifact) {
                return fromUsageMetrics(artifact, this.store);
            }, UsageMetricsReport.prototype.isReportFromUsageMetrics = function(report, groupId) {
                return function(report, store, groupId) {
                    if (!report) return !1;
                    var model;
                    getModelServiceDatasets(store, groupId).pipe((0, operators_take.q)(1)).subscribe(function(datasetsWithCategories) {
                        var dataset = _.find(datasetsWithCategories, function(datasetsWithCategories) {
                            return datasetsWithCategories.dataset.id === report.modelId;
                        });
                        model = dataset && dataset.dataset;
                    });
                    var pkg, modelPkg, packageId = report.packageId, modelPackageId = model && model.packageId;
                    return store.select(package_selector.it).pipe((0, operators_take.q)(1)).subscribe(function(packages) {
                        pkg = _.find(packages, function(p) {
                            return p.id === packageId;
                        }), modelPkg = _.find(packages, function(p) {
                            return p.id === modelPackageId;
                        });
                    }), fromUsageMetricsPackage(pkg, store) || fromUsageMetricsPackage(modelPkg, store);
                }(report, this.store, groupId);
            }, UsageMetricsReport.prototype.fromLegacyUsageMetrics = function(model) {
                return function(model, store) {
                    return !!model && fromLegacyUsageMetricsPackage(getPackage(model, store), store);
                }(model, this.store);
            }, UsageMetricsReport.prototype.fromLegacyUsageMetricsModelContract = function(model) {
                return function(model, store) {
                    return !!model && fromLegacyUsageMetricsPackage(function(artifact, store) {
                        var packageId, legacyPackage;
                        if (packageId = artifact.packageId) return store.select(package_selector.it).pipe((0, 
                        operators_take.q)(1)).subscribe(function(packages) {
                            legacyPackage = _.find(packages, function(p) {
                                return p.id === packageId;
                            });
                        }), legacyPackage;
                    }(model, store), store);
                }(model, this.store);
            }, UsageMetricsReport.prototype.modelFromUsageMetrics = function(modelContract, groupId) {
                return function(modelContract, store, groupId) {
                    return !!modelContract && (getModelServiceDatasets(store, groupId).pipe((0, operators_take.q)(1)).subscribe(function(datasetsWithCategories) {
                        var _a;
                        model = null === (_a = _.find(datasetsWithCategories, function(datasetsWithCategories) {
                            return datasetsWithCategories.dataset.id === modelContract.id;
                        })) || void 0 === _a ? void 0 : _a.dataset, model = model ? (0, tslib_es6.__assign)((0, 
                        tslib_es6.__assign)({}, model), {
                            contentTileType: contracts.ty.Dataset
                        }) : void 0;
                    }), fromUsageMetrics(model, store, groupId));
                    var model;
                }(modelContract, this.store, groupId);
            }, UsageMetricsReport.prototype.isUsageMetricsPackage = function(pkg) {
                return isUsageMetricsPackage(pkg);
            }, UsageMetricsReport.prototype.isReportUsageMetricsReport = function(report) {
                if (!report) return !1;
                var pkg, packageId = report.packageId;
                return !!packageId && (this.store.select(package_selector.it).pipe((0, operators_take.q)(1)).subscribe(function(packages) {
                    pkg = _.find(packages, function(p) {
                        return p.id === packageId;
                    });
                }), VisualsCommon_debug.fF.assertValue(pkg, "package"), 102 === pkg.contentProviderId || pkg.packageType === contracts.yR.UsageMetricsV2);
            }, UsageMetricsReport.prototype.getNewUsageMetricsSetting = function() {
                var defer = this.promiseFactory.defer();
                return this.store.select(user_info_selector.WH).subscribe(function(extendedSettings) {
                    return defer.resolve(extendedSettings.newUsageMetrics);
                }), defer.promise;
            }, UsageMetricsReport.prototype.mapArtifactTypeDuringUsageMetricsMigration = function(artifactType) {
                var mappedArtifactType = artifactType;
                switch (artifactType) {
                  case "ReportV2":
                  case "DashboardV2":
                    mappedArtifactType = "Workspace";
                }
                return mappedArtifactType;
            }, UsageMetricsReport.prototype.getPendingRequestIfExisting = function(groupObjectId, artifactType) {
                var mappedArtifactType = this.mapArtifactTypeDuringUsageMetricsMigration(artifactType);
                return _.find(this.pendingUsageMetricsRequests, function(u) {
                    return u.artifactType === mappedArtifactType && u.groupObjectId === groupObjectId;
                });
            }, UsageMetricsReport.prototype.constructODataFiltersThenNavigateToReportByGuid = function(usageMetricsReportGuid, originalArtifactType, originalArtifactId, originalGroupId, openInSameTab) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var odataFilter, myFolderObjectId;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return odataFilter = "", "Report" === originalArtifactType || "ReportV2" === originalArtifactType ? odataFilter = "Reports/ReportGuid eq '".concat(originalArtifactId, "'") : "Dashboard" === originalArtifactType ? odataFilter = "Dashboards/DashboardGuid eq '".concat(originalArtifactId, "'") : VisualsCommon_debug.fF.assertFail("invalid artifact type"), 
                            [ 4, this.store.select(group_selector.iF).pipe((0, operators_take.q)(1)).toPromise() ];

                          case 1:
                            return myFolderObjectId = _a.sent(), _.isEmpty(myFolderObjectId) || originalGroupId !== myFolderObjectId || (originalGroupId = Common_contracts.fm), 
                            this.navigationService.navigateToReport({
                                groupGUID: originalGroupId,
                                reportGUID: usageMetricsReportGuid,
                                filter: odataFilter
                            }, void 0, openInSameTab), [ 2 ];
                        }
                    });
                });
            }, UsageMetricsReport.prototype.showSuccessToastToNavigateToReport = function(usageMetricsReportGuid, originalArtifactId, groupId, displayName, artifactType) {
                var _this = this, usageMetricsReportAction = {
                    displayText: this.localizationService.get("UsageMetrics_FinishedLoadingButtonText"),
                    action: function() {
                        return _this.constructODataFiltersThenNavigateToReportByGuid(usageMetricsReportGuid, artifactType, originalArtifactId, groupId, void 0);
                    },
                    dataTestId: "view-usage-metrics-report-btn"
                };
                this.notificationToastService.notify({
                    title: this.localizationService.get("UsageMetrics_FinishedLoadingTitle"),
                    message: this.localizationService.format("UsageMetrics_FinishedLoadingSubtitle", [ displayName ]),
                    notificationType: 4,
                    actionButtons: [ usageMetricsReportAction ],
                    sticky: !0,
                    dataTestId: "view-usage-metrics-report-toast"
                });
            }, UsageMetricsReport.prototype.onPackagePublishSucceeded = function(notificationId) {
                this.onPackagePublishDone(notificationId);
            }, UsageMetricsReport.prototype.onPackagePublishFailed = function(notificationId, requestId, statusCode) {
                this.onPackagePublishDone(notificationId), this.showErrorMessage(requestId, statusCode);
            }, UsageMetricsReport.prototype.onPackagePublishDone = function(notificationId) {
                _.isEmpty(notificationId) || this.notificationToastService.hide(notificationId);
            }, UsageMetricsReport.prototype.showErrorMessage = function(requestId, statusCode) {
                this.errorService.error(this.localizationService.get("UsageMetrics_FailedOpeningReport_Message"), "FailedToOpenUsageMetricsReport", {
                    requestId,
                    statusCode
                });
            }, UsageMetricsReport.prototype.attachToPendingUsageMetricsRequest = function(pendingUsageMetricsRequest, displayName, originalArtifactId, groupId, artifactType, notificationId) {
                var _this = this;
                pendingUsageMetricsRequest.defered.promise.then(function(report) {
                    report && _this.showSuccessToastToNavigateToReport(report.objectId, originalArtifactId, groupId, displayName, artifactType), 
                    _this.onPackagePublishSucceeded(notificationId);
                }, function(error) {
                    _this.onPackagePublishFailed(notificationId, error.requestId, error.errorCode);
                });
            }, UsageMetricsReport.prototype.tryAttachToPendingUsageMetricsRequestIfExisting = function(displayName, originalArtifactId, groupId, artifactType, notificationId) {
                var pendingUsageMetricsRequest = this.getPendingRequestIfExisting(groupId, artifactType);
                return !_.isEmpty(pendingUsageMetricsRequest) && (this.attachToPendingUsageMetricsRequest(pendingUsageMetricsRequest, displayName, originalArtifactId, groupId, artifactType, notificationId), 
                !0);
            }, UsageMetricsReport.prototype.populateCurrentUsageMetricsVersion = function(parentEvent) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var contentProiders, dashboardContentProviders_1, dashboardProviderConfigJson, dashboardProviderConfig, dashboardProviderVersion, reportContentProviders_1, reportProviderConfigJson, reportProviderConfig, reportProviderVersion;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.contentProviderHttpService.getBuiltInContentProvidersAsync(parentEvent) ];

                          case 1:
                            return contentProiders = _a.sent(), _.isEmpty(contentProiders) || (dashboardContentProviders_1 = _.filter(contentProiders, function(cp) {
                                return 1 === cp.category && 103 === cp.id;
                            }), VisualsCommon_debug.fF.assert(function() {
                                return dashboardContentProviders_1 && 1 === dashboardContentProviders_1.length;
                            }, "One dashboard usage metrics content provider should exist"), dashboardProviderConfigJson = !_.isEmpty(dashboardContentProviders_1) && dashboardContentProviders_1[0].providerConfig, 
                            dashboardProviderConfig = !_.isEmpty(dashboardProviderConfigJson) && (0, JsonExtensions.K)(dashboardProviderConfigJson), 
                            dashboardProviderVersion = dashboardProviderConfig && dashboardProviderConfig.providerVersion, 
                            this.currentDashboardUsageMetricsVersion = !_.isEmpty(dashboardProviderVersion) && new Number(dashboardProviderVersion), 
                            reportContentProviders_1 = _.filter(contentProiders, function(cp) {
                                return 1 === cp.category && 102 === cp.id;
                            }), VisualsCommon_debug.fF.assert(function() {
                                return reportContentProviders_1 && 1 === reportContentProviders_1.length;
                            }, "One report usage metrics content provider should exist"), reportProviderConfigJson = !_.isEmpty(reportContentProviders_1) && reportContentProviders_1[0].providerConfig, 
                            reportProviderConfig = !_.isEmpty(reportProviderConfigJson) && (0, JsonExtensions.K)(reportProviderConfigJson), 
                            reportProviderVersion = reportProviderConfig && reportProviderConfig.providerVersion, 
                            this.currentReportUsageMetricsVersion = !_.isEmpty(reportProviderVersion) && new Number(reportProviderVersion)), 
                            [ 2 ];
                        }
                    });
                });
            }, UsageMetricsReport.prototype.tryNavigateToUsageMetricsReport = function(originalArtifactId, groupObjectId, artifactType, latestVersion, parentEvent, openInSameTab) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var featureSwitches, usageMetricsReport, models, model;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.featureSwitchService.getFeatureSwitches() ];

                          case 1:
                            return featureSwitches = _a.sent(), "ReportV2" === artifactType && featureSwitches.umv2Upgrade ? [ 4, this.usageMetricsHttp.usageReportUpgradeAvailable(parentEvent, groupObjectId) ] : [ 3, 3 ];

                          case 2:
                            if (_a.sent()) return [ 2, !1 ];
                            _a.label = 3;

                          case 3:
                            return [ 4, this.getUsageMetricsReportIfExisting(artifactType, latestVersion, groupObjectId, parentEvent) ];

                          case 4:
                            return usageMetricsReport = _a.sent(), _.isEmpty(usageMetricsReport) || "ReportV2" !== artifactType ? [ 3, 6 ] : [ 4, this.datasetStore.findByPackageId(usageMetricsReport.packageId, groupObjectId) ];

                          case 5:
                            if (models = _a.sent(), model = _.first(models), !_.isEmpty(model) && !_.isEmpty(model.refreshSchedule) && !model.refreshSchedule.refreshEnabled) return [ 2, !1 ];
                            _a.label = 6;

                          case 6:
                            return _.isEmpty(usageMetricsReport) ? [ 2, !1 ] : (this.constructODataFiltersThenNavigateToReportByGuid(usageMetricsReport.objectId, artifactType, originalArtifactId, groupObjectId, openInSameTab), 
                            [ 2, !0 ]);
                        }
                    });
                });
            }, UsageMetricsReport.prototype.getV1UsageMetricsReportIfExisting = function(artifactType, latestVersion, groupObjectId) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var contentProviderId, usageMetricsReport;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return contentProviderId = -1, "Dashboard" === artifactType ? contentProviderId = 103 : "Report" === artifactType && (contentProviderId = 102), 
                            [ 4, (0, observable_combineLatest.aj)(this.store.select(group_report_selector.Uw, {
                                id: groupObjectId
                            }), this.store.select(package_selector.zu)).pipe((0, operators_take.q)(1), (0, operators_map.U)(function(_a) {
                                var packages = _a[1];
                                return _.find(_a[0], function(r) {
                                    var packageId = r.packageId, usageMetricsPackage = _.find(packages, function(pkg) {
                                        return pkg.id === packageId;
                                    }), permissions = usageMetricsPackage && usageMetricsPackage.permissions;
                                    return usageMetricsPackage && usageMetricsPackage.contentProviderId === contentProviderId && permissions && (0, 
                                    StandaloneUtility3.yE)(permissions, 3);
                                });
                            })).toPromise() ];

                          case 1:
                            return usageMetricsReport = _a.sent(), this.featureSwitchService.featureSwitches.usageMetricsUpgrade ? usageMetricsReport ? new Number(usageMetricsReport.packageVersion).valueOf() !== latestVersion.valueOf() ? [ 2 ] : [ 2, usageMetricsReport ] : [ 2 ] : [ 2, usageMetricsReport ];
                        }
                    });
                });
            }, UsageMetricsReport.prototype.getV2UsageMetricsReportIfExisting = function(groupObjectId) {
                return (0, observable_combineLatest.aj)(this.store.select(group_report_selector.Uw, {
                    id: groupObjectId
                }), this.store.select(package_selector.zu)).pipe((0, operators_take.q)(1), (0, operators_map.U)(function(_a) {
                    var packages = _a[1];
                    return _.find(_a[0], function(r) {
                        var packageId = r.packageId, usageMetricsPackage = _.find(packages, function(pkg) {
                            return pkg.id === packageId;
                        }), permissions = usageMetricsPackage && usageMetricsPackage.permissions;
                        return usageMetricsPackage && usageMetricsPackage.packageType === contracts.yR.UsageMetricsV2 && permissions && (0, 
                        StandaloneUtility3.yE)(permissions, 3);
                    });
                })).toPromise();
            }, UsageMetricsReport.prototype.getUsageMetricsReportIfExisting = function(artifactType, latestVersion, groupObjectId, parentEvent) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return "Dashboard" !== artifactType && "Report" !== artifactType ? [ 3, 2 ] : [ 4, this.getV1UsageMetricsReportIfExisting(artifactType, latestVersion, groupObjectId) ];

                          case 1:
                          case 3:
                            return [ 2, _a.sent() ];

                          case 2:
                            return "ReportV2" !== artifactType ? [ 3, 4 ] : [ 4, this.getV2UsageMetricsReportIfExisting(groupObjectId) ];

                          case 4:
                            return VisualsCommon_debug.fF.assertFail("invalid artifact type: ".concat(artifactType)), 
                            [ 2 ];
                        }
                    });
                });
            }, UsageMetricsReport.prototype.pushPendingUsageMetricsRequest = function(groupObjectId, artifactType) {
                var defered = this.promiseFactory.defer(), pendingUsageMetricsRequest = {
                    artifactType: this.mapArtifactTypeDuringUsageMetricsMigration(artifactType),
                    groupObjectId,
                    defered
                };
                return this.pendingUsageMetricsRequests.push(pendingUsageMetricsRequest), pendingUsageMetricsRequest;
            }, UsageMetricsReport.prototype.getPackageAndNavigateToUsageMetricsReport = function(artifactType, displayName, artifactId, groupObjectId, groupNumericId, parentEvent, openInSameTab) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var notificationId, latestVersion, pendingUsageMetricsRequest, usageMetricsPackage_1, error_1;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return VisualsCommon_debug.fF.assert(function() {
                                return "Dashboard" === artifactType || "Report" === artifactType || "ReportV2" === artifactType;
                            }, "invalid artifact."), notificationId = this.notificationToastService.notify({
                                title: this.localizationService.get("UsageMetrics_LoadingTitle"),
                                message: this.localizationService.format("UsageMetrics_LoadingSubtitle", [ displayName ]),
                                notificationType: 3,
                                sticky: !0
                            }), this.tryAttachToPendingUsageMetricsRequestIfExisting(displayName, artifactId, groupObjectId, artifactType, notificationId) ? [ 2 ] : this.currentDashboardUsageMetricsVersion && this.currentReportUsageMetricsVersion ? [ 3, 2 ] : [ 4, this.populateCurrentUsageMetricsVersion(parentEvent.event) ];

                          case 1:
                            _a.sent(), _a.label = 2;

                          case 2:
                            if ("Dashboard" === artifactType) latestVersion = this.currentDashboardUsageMetricsVersion; else if ("Report" === artifactType) latestVersion = this.currentReportUsageMetricsVersion; else if ("ReportV2" !== artifactType) return VisualsCommon_debug.fF.assertFail("Artifact Type is neither a dashboard nor a report."), 
                            [ 2 ];
                            return latestVersion || "ReportV2" === artifactType ? [ 4, this.tryNavigateToUsageMetricsReport(artifactId, groupObjectId, artifactType, latestVersion, parentEvent.event, openInSameTab) ] : (VisualsCommon_debug.fF.assertFail("Failed to retrieve usage metrics version from backend."), 
                            [ 2 ]);

                          case 3:
                            if (_a.sent()) return this.onPackagePublishDone(notificationId), [ 2 ];
                            pendingUsageMetricsRequest = this.pushPendingUsageMetricsRequest(groupObjectId, artifactType), 
                            this.attachToPendingUsageMetricsRequest(pendingUsageMetricsRequest, displayName, artifactId, groupObjectId, artifactType, notificationId), 
                            _a.label = 4;

                          case 4:
                            return _a.trys.push([ 4, 7, 8, 9 ]), [ 4, this.usageMetricsHttp.getPackage(artifactType, groupObjectId, groupNumericId, parentEvent.event) ];

                          case 5:
                            return usageMetricsPackage_1 = _a.sent(), this.store.dispatch(new actions_package.Zt({
                                packages: [ usageMetricsPackage_1 ]
                            })), VisualsCommon_debug.fF.assert(function() {
                                return 1 === _.size(usageMetricsPackage_1.reports);
                            }, "_.size(usageMetricsPackage.reports) === 1"), this.store.dispatch(new actions_report.Zt({
                                reports: usageMetricsPackage_1.reports
                            })), VisualsCommon_debug.fF.assert(function() {
                                return 1 === _.size(usageMetricsPackage_1.models);
                            }, "_.size(usageMetricsPackage.models) === 1"), usageMetricsPackage_1.models[0].permissions = usageMetricsPackage_1.permissions, 
                            this.store.dispatch(new actions_dataset.Uo(usageMetricsPackage_1.models)), [ 4, this.reportStore.reports.pipe((0, 
                            operators_filter.h)(function(reports) {
                                return _.intersectionBy(reports, usageMetricsPackage_1.reports, function(r) {
                                    return r.id;
                                }).length === usageMetricsPackage_1.reports.length;
                            }), (0, operators_take.q)(1)).toPromise() ];

                          case 6:
                            return _a.sent(), pendingUsageMetricsRequest.defered.resolve(usageMetricsPackage_1.reports[0]), 
                            [ 3, 9 ];

                          case 7:
                            throw error_1 = _a.sent(), pendingUsageMetricsRequest.defered.reject(error_1), error_1;

                          case 8:
                            return _.remove(this.pendingUsageMetricsRequests, pendingUsageMetricsRequest), [ 7 ];

                          case 9:
                            return [ 2 ];
                        }
                    });
                });
            }, UsageMetricsReport.prototype.getContentTileFromFilters = function(filterContainer) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var key, source, entity, where, left, right, leftRef, rightVal, _a, _b, _c, _d;
                    return (0, tslib_es6.__generator)(this, function(_e) {
                        switch (_e.label) {
                          case 0:
                            return (key = _.head(filterContainer.filter.from().keys())) && (source = filterContainer.filter.from().source(key)) ? "Reports" !== (entity = source.entity) && "Dashboards" !== entity ? [ 2 ] : (where = _.head(filterContainer.filter.where())) && where.condition ? (right = where.condition.right, 
                            (left = where.condition.left) && right ? (rightVal = right.value, (leftRef = left.ref) && rightVal ? "ReportGuid" !== leftRef && "DashboardGuid" !== leftRef ? [ 2 ] : "ReportGuid" !== leftRef ? [ 3, 2 ] : (_b = (_a = this.reportModelConverter).convertReport, 
                            [ 4, this.reportStore.reports.pipe((0, operators_take.q)(1), (0, mergeMap.zg)(function(reports) {
                                return (0, from.D)(reports);
                            }), (0, operators_filter.h)(function(report) {
                                return report.objectId === rightVal;
                            })).toPromise() ]) : [ 2 ]) : [ 2 ]) : [ 2 ] : [ 2 ];

                          case 1:
                            return [ 2, _b.apply(_a, [ _e.sent() ]) ];

                          case 2:
                            return "DashboardGuid" !== leftRef ? [ 3, 4 ] : (_d = (_c = this.modelConverter).convertDashboard, 
                            [ 4, this.dashboardStore.dashboards.pipe((0, operators_take.q)(1), (0, mergeMap.zg)(function(dashboards) {
                                return (0, from.D)(dashboards);
                            }), (0, operators_filter.h)(function(dashboard) {
                                return dashboard.objectId === rightVal;
                            })).toPromise() ]);

                          case 3:
                            return [ 2, _d.apply(_c, [ _e.sent() ]) ];

                          case 4:
                            VisualsCommon_debug.fF.assertFail("invalid leftRef"), _e.label = 5;

                          case 5:
                            return [ 2 ];
                        }
                    });
                });
            }, UsageMetricsReport.\u0275fac = function(t) {
                return new (t || UsageMetricsReport)(core["\u0275\u0275inject"](promiseFactory.t), core["\u0275\u0275inject"](navigation_service.W), core["\u0275\u0275inject"](content_provider_http_service.P), core["\u0275\u0275inject"](error_service.T), core["\u0275\u0275inject"](feature_switch_service.vZ), core["\u0275\u0275inject"](ngrx_store.yh), core["\u0275\u0275inject"](notification_toast_service.Q), core["\u0275\u0275inject"](localization_service.o), core["\u0275\u0275inject"](UsageMetricsHttpService), core["\u0275\u0275inject"](active_folder_id_service.j), core["\u0275\u0275inject"](lazy_provider.E), core["\u0275\u0275inject"](report_store_service.R), core["\u0275\u0275inject"](ReportModelConverter), core["\u0275\u0275inject"](DataServiceModelConverter), core["\u0275\u0275inject"](DashboardStore), core["\u0275\u0275inject"](dataset_store_service.s), core["\u0275\u0275inject"](group_store_service.Y));
            }, UsageMetricsReport.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: UsageMetricsReport,
                factory: UsageMetricsReport.\u0275fac
            }), UsageMetricsReport;
        }(), UsageMetricsReportModule = function() {
            function UsageMetricsReportModule() {}
            return UsageMetricsReportModule.forRoot = function(overrides) {
                return void 0 === overrides && (overrides = {}), {
                    ngModule: UsageMetricsReportModule,
                    providers: [ overrides.usageMetricsReportProvider || UsageMetricsReport ]
                };
            }, UsageMetricsReportModule.\u0275fac = function(t) {
                return new (t || UsageMetricsReportModule);
            }, UsageMetricsReportModule.\u0275mod = core["\u0275\u0275defineNgModule"]({
                type: UsageMetricsReportModule
            }), UsageMetricsReportModule.\u0275inj = core["\u0275\u0275defineInjector"]({}), 
            UsageMetricsReportModule;
        }(), actions_workbook = __webpack_require__(66223), group_app_selector = __webpack_require__(31683), workbook_selector = __webpack_require__(97961), group_workbook_selector = __webpack_require__(65394), WorkbookStore = function() {
            function WorkbookStore(store, config) {
                this.store = store, this.config = config, this.workbooks$ = this.store.select(config.shouldFilterDataServicesByFolder ? group_app_selector.z6 : workbook_selector.Hg);
            }
            return Object.defineProperty(WorkbookStore.prototype, "workbooks", {
                get: function() {
                    return this.workbooks$;
                },
                enumerable: !1,
                configurable: !0
            }), WorkbookStore.prototype.findById = function(id, packageId, inApp) {
                void 0 === inApp && (inApp = !1);
                var uniqueId = "1_" + id + "_" + packageId;
                return inApp ? this.store.select(app_selector.B1).pipe((0, operators_map.U)(function(workbooks) {
                    return workbooks[uniqueId];
                }), (0, operators_take.q)(1)).toPromise() : this.store.select(workbook_selector.VG).pipe((0, 
                operators_map.U)(function(workbooks) {
                    return workbooks[uniqueId];
                }), (0, operators_take.q)(1)).toPromise();
            }, WorkbookStore.prototype.findByUniqueId = function(uniqueId, inApp) {
                return void 0 === inApp && (inApp = !1), inApp ? (0, observable_combineLatest.aj)([ this.store.select(workbook_selector.IJ), this.store.select(app_selector.B1) ]).pipe((0, 
                skipWhile.n)(function(_a) {
                    return _a[0];
                }), (0, operators_map.U)(function(_a) {
                    return _.find(_a[1], function(workbook) {
                        return uniqueId === "1_".concat(workbook.id, "_").concat(workbook.packageId);
                    });
                }), (0, operators_take.q)(1)).toPromise() : (0, observable_combineLatest.aj)(this.store.select(workbook_selector.IJ), this.store.select(workbook_selector.VG)).pipe((0, 
                skipWhile.n)(function(_a) {
                    return _a[0];
                }), (0, operators_map.U)(function(_a) {
                    return _a[1][uniqueId];
                }), (0, operators_take.q)(1)).toPromise();
            }, WorkbookStore.prototype.findAll = function(id) {
                return this.store.select(this.config.shouldFilterDataServicesByFolder ? group_workbook_selector.tI : workbook_selector.Hg).pipe((0, 
                operators_map.U)(function(workbooks) {
                    return _.filter(workbooks, function(workbook) {
                        return workbook.id === id;
                    });
                }), (0, operators_take.q)(1)).toPromise();
            }, WorkbookStore.prototype.delete = function(workbook, fromSyncService, telemetryEvent) {
                return workbook && this.store.dispatch(fromSyncService ? new actions_workbook.JW({
                    workbook
                }) : new actions_workbook.HG({
                    workbook,
                    telemetryEvent
                })), telemetryEvent && telemetryEvent.promise;
            }, WorkbookStore.prototype.rename = function(workbook, newName, telemetryEvent) {
                return this.store.dispatch(new actions_workbook.ic({
                    workbook,
                    name: newName,
                    telemetryEvent
                })), telemetryEvent && telemetryEvent.promise;
            }, WorkbookStore.prototype.load = function(id, packageId, loadCompletion) {
                this.store.dispatch(new actions_workbook.q5({
                    id,
                    packageId,
                    loadCompletion
                }));
            }, WorkbookStore.prototype.add = function(id, packageId, loadCompletion) {
                this.store.dispatch(new actions_workbook.q5({
                    id,
                    packageId,
                    loadCompletion,
                    isNew: !0
                }));
            }, WorkbookStore.prototype.update = function(workbook, changes) {
                this.store.dispatch(new actions_workbook.BN({
                    workbook,
                    changes
                }));
            }, WorkbookStore.prototype.batchUpdate = function(updates) {
                this.store.dispatch(new actions_workbook.lk({
                    updates
                }));
            }, WorkbookStore.prototype.hide = function(workbook) {
                this.store.dispatch(new actions_workbook.c({
                    workbook
                }));
            }, WorkbookStore.prototype.unhide = function(workbook) {
                this.store.dispatch(new actions_workbook.yO({
                    workbook
                }));
            }, WorkbookStore.prototype.generateConnectedWorkbook = function(workbook, file, packageId) {
                this.store.dispatch(new actions_workbook.YB({
                    workbook,
                    file,
                    packageId
                }));
            }, WorkbookStore.prototype.import = function(workbook, file) {
                this.store.dispatch(new actions_workbook.bb({
                    workbook,
                    file
                }));
            }, WorkbookStore.prototype.persistDataInfo = function(workbook, file, dataAccessInfo) {
                this.store.dispatch(new actions_workbook.FJ({
                    workbook,
                    file,
                    dataAccessInfo
                }));
            }, WorkbookStore.prototype.download = function(workbook, telemetryEvent) {
                return this.store.dispatch(new actions_workbook.UW({
                    workbook,
                    telemetryEvent
                })), telemetryEvent && telemetryEvent.promise;
            }, WorkbookStore.prototype.convertLocal = function(workbook, telemetryEvent) {
                return this.store.dispatch(new actions_workbook.p7({
                    workbook,
                    telemetryEvent
                })), telemetryEvent && telemetryEvent.promise;
            }, WorkbookStore.prototype.convertODSP = function(workbook, telemetryEvent) {
                return this.store.dispatch(new actions_workbook.yt({
                    workbook,
                    telemetryEvent
                })), telemetryEvent && telemetryEvent.promise;
            }, WorkbookStore.\u0275fac = function(t) {
                return new (t || WorkbookStore)(core["\u0275\u0275inject"](ngrx_store.yh), core["\u0275\u0275inject"](core_module_configuration.e));
            }, WorkbookStore.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: WorkbookStore,
                factory: WorkbookStore.\u0275fac,
                providedIn: "root"
            }), WorkbookStore;
        }(), ModernRelatedArtifactsService = function() {
            function ModernRelatedArtifactsService(reportStore, workbookStore, dashboardStore, datasetStore, usageMetricsReport) {
                this.reportStore = reportStore, this.workbookStore = workbookStore, this.dashboardStore = dashboardStore, 
                this.datasetStore = datasetStore, this.usageMetricsReport = usageMetricsReport;
            }
            return ModernRelatedArtifactsService.prototype.retrieveRelatedReportsToDashboard = function(dashboard, groupId) {
                var _this = this;
                VisualsCommon_debug.fF.assertValue(dashboard, "dashboard is undefined.");
                var reportIds = dashboard.reportIds;
                return (groupId ? this.reportStore.getReportsByGroupId(groupId) : this.reportStore.reports).pipe((0, 
                operators_map.U)(function(reports) {
                    return _.filter(reports, function(report) {
                        return !!report && _.includes(reportIds, report.id) && !_this.usageMetricsReport.isReportFromUsageMetrics(report);
                    });
                }));
            }, ModernRelatedArtifactsService.prototype.retrieveRelatedWorkbooksToDashboard = function(dashboard) {
                VisualsCommon_debug.fF.assertValue(dashboard, "dashboard is undefined.");
                var workbooksIds = dashboard.workbookIds;
                return this.workbookStore.workbooks.pipe((0, operators_map.U)(function(workbooks) {
                    return _.filter(workbooks, function(workbook) {
                        return !!workbook && _.includes(workbooksIds, workbook.id);
                    });
                }));
            }, ModernRelatedArtifactsService.prototype.retrieveRelatedDashboardsToReport = function(report) {
                return VisualsCommon_debug.fF.assertValue(report, "report is undefined."), this.dashboardStore.dashboards.pipe((0, 
                operators_map.U)(function(dashboards) {
                    return _.filter(dashboards, function(dashboard) {
                        return !!dashboard && _.includes(dashboard.reportIds, report.id);
                    });
                }));
            }, ModernRelatedArtifactsService.prototype.retrieveRelatedModelsToDashboard = function(dashboard, groupId) {
                var _this = this;
                return VisualsCommon_debug.fF.assertValue(dashboard, "dashboard is undefined."), 
                (groupId ? this.datasetStore.getDatasetsByGroupId(groupId) : this.datasetStore.datasets.pipe((0, 
                operators_map.U)(function(datasets) {
                    return _.map(datasets, function(dataset) {
                        return dataset.dataset;
                    });
                }))).pipe((0, operators_map.U)(function(datasets) {
                    return _.chain(datasets).filter(function(dataset) {
                        return !!dataset && _.includes(dashboard.modelIds, dataset.id) && !_this.usageMetricsReport.modelFromUsageMetrics(dataset);
                    }).value();
                }));
            }, ModernRelatedArtifactsService.prototype.retrieveRelatedDashboardsToWorkbook = function(workbook) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var allDashboard;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return VisualsCommon_debug.fF.assertValue(workbook, "workbook is undefined."), [ 4, this.dashboardStore.dashboards.pipe((0, 
                            operators_take.q)(1)).toPromise() ];

                          case 1:
                            return allDashboard = _a.sent(), [ 2, _.filter(allDashboard, function(dashboard) {
                                return !!dashboard && _.includes(dashboard.workbookIds, workbook.id);
                            }) ];
                        }
                    });
                });
            }, ModernRelatedArtifactsService.\u0275fac = function(t) {
                return new (t || ModernRelatedArtifactsService)(core["\u0275\u0275inject"](report_store_service.R), core["\u0275\u0275inject"](WorkbookStore), core["\u0275\u0275inject"](DashboardStore), core["\u0275\u0275inject"](dataset_store_service.s), core["\u0275\u0275inject"](UsageMetricsReport));
            }, ModernRelatedArtifactsService.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: ModernRelatedArtifactsService,
                factory: ModernRelatedArtifactsService.\u0275fac,
                providedIn: "root"
            }), ModernRelatedArtifactsService;
        }(), RelatedArtifactsModule = function() {
            function RelatedArtifactsModule() {}
            return RelatedArtifactsModule.\u0275fac = function(t) {
                return new (t || RelatedArtifactsModule);
            }, RelatedArtifactsModule.\u0275mod = core["\u0275\u0275defineNgModule"]({
                type: RelatedArtifactsModule
            }), RelatedArtifactsModule.\u0275inj = core["\u0275\u0275defineInjector"]({
                providers: [ ModernRelatedArtifactsService ],
                imports: [ UsageMetricsReportModule ]
            }), RelatedArtifactsModule;
        }(), pbi_office_icon_module = __webpack_require__(45411), tri_checkbox = __webpack_require__(14977), tri_column_option = __webpack_require__(31415), domains_ui_src = __webpack_require__(28154), tags_src = __webpack_require__(88906), angular_resizable_element = __webpack_require__(53188), ngx_popper = __webpack_require__(7103), pbi_office_icon_provider_service = __webpack_require__(54485), accessible_click_directive = __webpack_require__(44581), RelationsFeatureConsumers = function(RelationsFeatureConsumers) {
            return RelationsFeatureConsumers.LineageView = "LineageView", RelationsFeatureConsumers.ItemLineageView = "ItemLineageView", 
            RelationsFeatureConsumers.ImpactAnalysis = "ImpactAnalysis", RelationsFeatureConsumers.DatahubL2 = "DatahubL2", 
            RelationsFeatureConsumers.ALMPipelines = "ALMPipelines", RelationsFeatureConsumers.ReportPreview = "ReportPreview", 
            RelationsFeatureConsumers.RLSReportImpersonation = "RLSReportImpersonation", RelationsFeatureConsumers.ListView = "ListView", 
            RelationsFeatureConsumers.HoverCard = "HoverCard", RelationsFeatureConsumers.ArtifactSharing = "ArtifactSharing", 
            RelationsFeatureConsumers;
        }({}), window_opener_service = __webpack_require__(75563), pbi_auto_focus_directive = __webpack_require__(54932);
        function DlpHoverCardComponent_ng_container_0_Template(rf, ctx) {
            if (1 & rf) {
                var _r2 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "div", 1), 
                core["\u0275\u0275element"](2, "dlp-icon", 2), core["\u0275\u0275elementStart"](3, "div", 3), 
                core["\u0275\u0275text"](4), core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementStart"](5, "div", 4)(6, "span"), 
                core["\u0275\u0275text"](7), core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementStart"](8, "tri-link", 5), 
                core["\u0275\u0275listener"]("accessible-click", function() {
                    core["\u0275\u0275restoreView"](_r2);
                    var ctx_r1 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r1.openLink());
                }), core["\u0275\u0275text"](9), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementContainerEnd"]();
            }
            if (2 & rf) {
                var ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("hasDlpPolicyTip", ctx_r0.hasDlpPolicyTip)("restrictions", ctx_r0.restrictions)("iconSizePx", "16")("showTooltip", !1), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](ctx_r0.title), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](ctx_r0.details), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("block", !0), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275textInterpolate1"](" ", ctx_r0.actionLinkText, " ");
            }
        }
        var CardContentType = function(CardContentType) {
            return CardContentType[CardContentType.PolicyTip = 1] = "PolicyTip", CardContentType[CardContentType.Restrictions = 2] = "Restrictions", 
            CardContentType;
        }({}), DlpHoverCardComponent = function() {
            function DlpHoverCardComponent(localizationService, featureSwitchService, certifiedEventsService, telemetryService, dlpPolicyTipsPanelService, windowOpenerService, extensionManifestService, changeDetectorRef) {
                this.localizationService = localizationService, this.featureSwitchService = featureSwitchService, 
                this.certifiedEventsService = certifiedEventsService, this.telemetryService = telemetryService, 
                this.dlpPolicyTipsPanelService = dlpPolicyTipsPanelService, this.windowOpenerService = windowOpenerService, 
                this.extensionManifestService = extensionManifestService, this.changeDetectorRef = changeDetectorRef, 
                this.openLinkInNewTab = !1, this.actionLinkText = "", this.displaySection = !1, 
                this.CardContentType = CardContentType;
            }
            return DlpHoverCardComponent.prototype.ngOnInit = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return this.shouldDisplayRestrictionsCard() ? (this.renderRestrictionsCard(), [ 3, 4 ]) : [ 3, 1 ];

                          case 1:
                            return this.shouldDisplayPolicyTipsCard() ? [ 4, this.renderPolicyTipsCard() ] : [ 3, 3 ];

                          case 2:
                            return _a.sent(), [ 3, 4 ];

                          case 3:
                            this.displaySection = !1, _a.label = 4;

                          case 4:
                            return [ 2 ];
                        }
                    });
                });
            }, DlpHoverCardComponent.prototype.openLink = function() {
                var _a;
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return [ 4, this.extensionManifestService.isTridentArtifact(this.artifactType) ];

                          case 1:
                            if (_b.sent()) return this.showPolicyTipsSidePanel(void 0, this.artifactObjectId), 
                            [ 2 ];
                            switch (this.artifactType) {
                              case "dataset":
                              case "dataset-autogenerated":
                                this.showPolicyTipsSidePanel(this.artifactId, this.artifactObjectId);
                                break;

                              case "report":
                              case "scorecard":
                                (null === (_a = this.restrictions) || void 0 === _a ? void 0 : _a.blocked) || this.showPolicyTipsSidePanel(this.underlyingArtifactId);
                            }
                            return [ 2 ];
                        }
                    });
                });
            }, DlpHoverCardComponent.prototype.showPolicyTipsSidePanel = function(artifactId, artifactObjectId) {
                if (this.openLinkInNewTab) if (artifactObjectId) {
                    var relativeUrlDetailPage = "/datahub/datasets/".concat(artifactObjectId);
                    this.windowOpenerService.open("".concat(relativeUrlDetailPage, "?").concat("showPolicyTipSidePane", "=1"), "_blank");
                } else VisualsCommon_debug.fF.assertValue(artifactObjectId, "artifactObjectId does not have value"); else artifactId || artifactObjectId ? this.dlpPolicyTipsPanelService.showPolicyTipsSidePanel(artifactId, artifactObjectId, this.artifactType) : VisualsCommon_debug.fF.assertValue(artifactId, "artifactId and artifactObjectId do not have value");
                this.certifiedEventsService.logStandardizedFeatureEvent({
                    featureName: "Data Loss Prevention - Restrict Access",
                    activityName: "HoverCardClickAction",
                    activityAttributes: {
                        artifactType: this.artifactType,
                        host: this.hostedEnvironmentTelemetryHint,
                        contentType: this.cardType,
                        callToActionText: this.actionLinkText
                    },
                    activityStatus: "Succeeded",
                    correlationId: this.telemetryService.root.id,
                    resultCode: "0"
                });
            }, DlpHoverCardComponent.prototype.shouldDisplayRestrictionsCard = function() {
                return this.featureSwitchService.featureSwitches.restrictAccess_HEAD_DLP_FE && !_.isEmpty(this.restrictions) && (this.restrictions.blocked || (this.restrictions.restrictionSources & RestrictionSources.DLP) === RestrictionSources.DLP);
            }, DlpHoverCardComponent.prototype.shouldDisplayPolicyTipsCard = function() {
                return this.featureSwitchService.featureSwitches.dlpPolicyTip && this.featureSwitchService.featureSwitches.dlpHoverCardPolicies_HEAD_DLP_FE && this.hasDlpPolicyTip;
            }, DlpHoverCardComponent.prototype.renderRestrictionsCard = function() {
                var _a;
                this.displaySection = !0, this.cardType = CardContentType.Restrictions, this.title = this.localizationService.get("Dlp_Access_restricted");
                var restrictedModelKind = this.localizationService.get("ArtifactKind_SemanticModel"), cardArtifactKindLoc = void 0;
                switch (this.artifactType) {
                  case "dataset":
                  case "dataset-autogenerated":
                    this.details = this.localizationService.format("Dlp_HoverCard_Restrictions_explanation_dataOwner_ArtifactKind", cardArtifactKindLoc = restrictedModelKind), 
                    this.actionLinkText = this.localizationService.get("Dlp_HoverCard_SeeFullDetails");
                    break;

                  case "report":
                  case "scorecard":
                    cardArtifactKindLoc = this.localizationService.get("report" === this.artifactType ? "ArtifactKind_Report" : "ArtifactKind_Scorecard"), 
                    (null === (_a = this.restrictions) || void 0 === _a ? void 0 : _a.blocked) ? (this.details = this.localizationService.format("Dlp_HoverCard_Restrictions_explanation_restrictedUser_downstreamArtifact", cardArtifactKindLoc), 
                    this.actionLinkText = void 0) : (this.details = this.localizationService.format("Dlp_HoverCard_Restrictions_explanation_dataOwner_downstreamArtifact", [ cardArtifactKindLoc, restrictedModelKind ]), 
                    this.actionLinkText = this.localizationService.format("Dlp_HoverCard_SeeDetails_OfArtifactKind", restrictedModelKind));
                    break;

                  default:
                    this.displaySection = !1;
                }
            }, DlpHoverCardComponent.prototype.renderPolicyTipsCard = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var isTrident, localizedArtifactType, artifactManifest;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return this.displaySection = !0, this.cardType = CardContentType.PolicyTip, [ 4, this.extensionManifestService.isTridentArtifact(this.artifactType) ];

                          case 1:
                            return (isTrident = _a.sent()) || "dataset" === this.artifactType || "dataset-autogenerated" === this.artifactType ? (localizedArtifactType = void 0, 
                            isTrident ? [ 4, this.extensionManifestService.getArtifactManifest(this.artifactType) ] : [ 3, 3 ]) : [ 3, 5 ];

                          case 2:
                            return artifactManifest = _a.sent(), localizedArtifactType = this.extensionManifestService.getArtifactTypeDisplayName(artifactManifest, !1, !0), 
                            [ 3, 4 ];

                          case 3:
                            localizedArtifactType = this.localizationService.get("ArtifactKind_SemanticModel"), 
                            _a.label = 4;

                          case 4:
                            return this.title = this.localizationService.get("Policies"), this.details = this.localizationService.format("Dlp_Policies_explanation_ArtifactKind", localizedArtifactType), 
                            this.actionLinkText = this.localizationService.get("Dlp_HoverCard_SeeFullDetails"), 
                            [ 3, 6 ];

                          case 5:
                            this.displaySection = !1, _a.label = 6;

                          case 6:
                            return this.markForCheck(), [ 2 ];
                        }
                    });
                });
            }, DlpHoverCardComponent.prototype.markForCheck = function() {
                this.changeDetectorRef && this.changeDetectorRef.markForCheck();
            }, DlpHoverCardComponent.\u0275fac = function(t) {
                return new (t || DlpHoverCardComponent)(core["\u0275\u0275directiveInject"](localization_service.o), core["\u0275\u0275directiveInject"](feature_switch_service.vZ), core["\u0275\u0275directiveInject"](Telemetry.ly), core["\u0275\u0275directiveInject"](Telemetry.y0), core["\u0275\u0275directiveInject"](DlpPolicyTipsSidePanelInjectionToken), core["\u0275\u0275directiveInject"](window_opener_service.p), core["\u0275\u0275directiveInject"](manifest_src.vC), core["\u0275\u0275directiveInject"](core.ChangeDetectorRef));
            }, DlpHoverCardComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: DlpHoverCardComponent,
                selectors: [ [ "dlp-hover-card" ] ],
                inputs: {
                    artifactId: "artifactId",
                    artifactType: "artifactType",
                    hasDlpPolicyTip: "hasDlpPolicyTip",
                    restrictions: "restrictions",
                    hostedEnvironmentTelemetryHint: "hostedEnvironmentTelemetryHint",
                    openLinkInNewTab: "openLinkInNewTab",
                    artifactObjectId: "artifactObjectId",
                    underlyingArtifactId: "underlyingArtifactId"
                },
                decls: 1,
                vars: 1,
                consts: [ [ 4, "ngIf" ], [ 1, "dlp-card-header" ], [ 3, "hasDlpPolicyTip", "restrictions", "iconSizePx", "showTooltip" ], [ 1, "dlp-card-title" ], [ 1, "dlp-card-details" ], [ "target", "_blank", "pbiAutoFocus", "", 1, "action-link", 3, "block", "accessible-click" ] ],
                template: function(rf, ctx) {
                    1 & rf && core["\u0275\u0275template"](0, DlpHoverCardComponent_ng_container_0_Template, 10, 8, "ng-container", 0), 
                    2 & rf && core["\u0275\u0275property"]("ngIf", ctx.displaySection);
                },
                dependencies: [ common.NgIf, accessible_click_directive.t, pbi_auto_focus_directive.r, tri_link_component.v, DlpIconComponent ],
                styles: [ '[_nghost-%COMP%]   .dlp-card-header[_ngcontent-%COMP%]{display:flex;flex-direction:row;align-items:center;padding:0;gap:4px;line-height:16px}[_nghost-%COMP%]   .dlp-card-header[_ngcontent-%COMP%]   .dlp-card-title[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--sm-font-size, 12px);font-weight:var(--font-weight-semi-bold, 600);color:var(--colorNeutralForeground2)}[_nghost-%COMP%]   .dlp-card-details[_ngcontent-%COMP%]{margin-top:8px;font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--sm-font-size, 12px);font-weight:var(--font-weight-regular, 400);color:var(--colorNeutralForeground2)}[_nghost-%COMP%]   .action-link[_ngcontent-%COMP%]{margin-top:4px;font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--sm-font-size, 12px);font-weight:var(--font-weight-regular, 400);cursor:pointer}' ],
                changeDetection: 0
            }), DlpHoverCardComponent;
        }(), common_src = __webpack_require__(69195);
        function getArtifactsStringType(artifact) {
            switch (artifact.type) {
              case artifact_type.B.Dashboard:
                return "dashboard";

              case artifact_type.B.Report:
                return function(reportType) {
                    switch (reportType) {
                      case 0:
                      default:
                        return "report";

                      case 1:
                        return "rdlreport";

                      case 2:
                        return "scorecard";
                    }
                }(artifact.subType);

              case artifact_type.B.RdlReport:
                return "rdlreport";

              case artifact_type.B.Model:
                return "dataset";

              case artifact_type.B.Dataflow:
                return 2 === artifact.subType ? "dataflow-gen2" : "dataflow";

              case artifact_type.B.StreamingDataflow:
                return "streaming-dataflow";

              case artifact_type.B.Datamart:
                return function(datamartType) {
                    switch (datamartType) {
                      case 2:
                        return "lake-warehouse";

                      case 4:
                        return "data-warehouse";

                      case 5:
                        return "mounted-warehouse";

                      default:
                        return "datamart";
                    }
                }(artifact.subType);

              case artifact_type.B.Artifact:
                return artifact.typeName;

              default:
                return;
            }
        }
        function isDatasetType(artifactType) {
            return "dataset" === artifactType || "dataset-autogenerated" === artifactType || "streaming-model" === artifactType;
        }
        function getArtifactRoute(manifestService, objectId, artifactType, groupId) {
            return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                var manifest, route;
                return (0, tslib_es6.__generator)(this, function(_a) {
                    switch (_a.label) {
                      case 0:
                        return objectId && artifactType && groupId ? [ 4, manifestService.getArtifactManifest(artifactType) ] : [ 2, "" ];

                      case 1:
                        return manifest = _a.sent(), route = manifestService.getArtifactRoutePath(manifest, groupId, objectId), 
                        [ 2, isDatasetType(artifactType) ? "".concat(route, "/details") : route ];
                    }
                });
            });
        }
        function HoverCardRelationSectionComponent_ng_container_0_li_5_div_6_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementStart"](0, "div", 7), core["\u0275\u0275text"](1), 
            core["\u0275\u0275pipe"](2, "lowercase"), core["\u0275\u0275pipe"](3, "localize"), 
            core["\u0275\u0275elementEnd"]()), 2 & rf && (core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate1"](" ", "(" + core["\u0275\u0275pipeBind1"](2, 1, core["\u0275\u0275pipeBind1"](3, 3, "Source_Item")) + ")", " "));
        }
        function HoverCardRelationSectionComponent_ng_container_0_li_5_Template(rf, ctx) {
            if (1 & rf) {
                var _r6 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "li"), core["\u0275\u0275element"](1, "tri-artifact-icon", 3), 
                core["\u0275\u0275elementStart"](2, "a", 4), core["\u0275\u0275listener"]("click", function() {
                    var artifact_r3 = core["\u0275\u0275restoreView"](_r6).$implicit, ctx_r5 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r5.onArtifactClicked(artifact_r3));
                })("keydown.enter", function() {
                    var artifact_r3 = core["\u0275\u0275restoreView"](_r6).$implicit, ctx_r7 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r7.onArtifactClicked(artifact_r3));
                }), core["\u0275\u0275pipe"](3, "async"), core["\u0275\u0275elementStart"](4, "div", 5), 
                core["\u0275\u0275text"](5), core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](6, HoverCardRelationSectionComponent_ng_container_0_li_5_div_6_Template, 4, 5, "div", 6), 
                core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var artifact_r3 = ctx.$implicit, ctx_r1 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("artifactType", artifact_r3.artifactType), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("target", "_blank")("href", core["\u0275\u0275pipeBind1"](3, 7, artifact_r3.routeLink), core["\u0275\u0275sanitizeUrl"])("triTooltip", artifact_r3.tooltipText)("triTooltipAlwaysShow", !0), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"](" ", artifact_r3.displayName, " "), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", "Upstream" === artifact_r3.relatedType && (null == ctx_r1.config ? null : ctx_r1.config.shouldMarkSourceItems));
            }
        }
        function HoverCardRelationSectionComponent_ng_container_0_ng_container_7_Template(rf, ctx) {
            if (1 & rf) {
                var _r9 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "tri-link", 8), 
                core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r9);
                    var ctx_r8 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r8.logTelemetry("View_All_Related_Items"));
                }), core["\u0275\u0275text"](2), core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementEnd"](), 
                core["\u0275\u0275elementContainerEnd"]();
            }
            if (2 & rf) {
                var ctx_r2 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("href", ctx_r2.currentRouteLink)("external", !0)("block", !0)("size", "small"), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](3, 5, "View_All_Related_Items"), " ");
            }
        }
        function HoverCardRelationSectionComponent_ng_container_0_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "div", 1), 
            core["\u0275\u0275text"](2), core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementEnd"](), 
            core["\u0275\u0275elementStart"](4, "ul"), core["\u0275\u0275template"](5, HoverCardRelationSectionComponent_ng_container_0_li_5_Template, 7, 9, "li", 2), 
            core["\u0275\u0275pipe"](6, "slice"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](7, HoverCardRelationSectionComponent_ng_container_0_ng_container_7_Template, 4, 7, "ng-container", 0), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](3, 3, "Related_Items"), " "), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngForOf", core["\u0275\u0275pipeBind3"](6, 5, ctx_r0.relatedArtifactInternalList, 0, 3)), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", ctx_r0.relatedArtifactInternalList.length > 3 && ctx_r0.config.hasViewAllRelatedItemLink);
            }
        }
        var HoverCardRelationSectionComponent = function() {
            function HoverCardRelationSectionComponent(extensionManifestService, certifiedEventsService, telemetryService, localizationService) {
                this.extensionManifestService = extensionManifestService, this.certifiedEventsService = certifiedEventsService, 
                this.telemetryService = telemetryService, this.localizationService = localizationService, 
                this.relatedArtifactInternalList = [], this.upstreamArtifacts = [], this.downstreamArtifacts = [];
            }
            return HoverCardRelationSectionComponent.prototype.ngOnChanges = function(changes) {
                var _a, _b, _c, _this = this;
                if ((this.upstream || this.downstream) && (changes.artifactType && (this.config = function(type) {
                    switch (type) {
                      case "dashboard":
                      case "report":
                      case "rdlreport":
                      case "scorecard":
                        return {
                            shouldMarkSourceItems: !0,
                            shouldUpstreamAppearFirst: !0,
                            hasViewAllRelatedItemLink: !1
                        };

                      case "dataflow":
                      case "streaming-dataflow":
                        return {
                            shouldMarkSourceItems: !0,
                            shouldUpstreamAppearFirst: !1,
                            hasViewAllRelatedItemLink: !1
                        };

                      default:
                        return {
                            shouldMarkSourceItems: !0,
                            shouldUpstreamAppearFirst: !1,
                            hasViewAllRelatedItemLink: !0
                        };
                    }
                }(this.artifactType)), changes.upstream && this.upstream && (this.upstreamArtifacts = this.mapArtifactsToInternalArtifacts(Array.from(this.upstream.artifacts.values()), "Upstream")), 
                changes.downstream && this.downstream && (this.downstreamArtifacts = this.mapArtifactsToInternalArtifacts(Array.from(this.downstream.artifacts.values()), "Downstream")), 
                this.relatedArtifactInternalList = (0, tslib_es6.__spreadArray)((0, tslib_es6.__spreadArray)([], this.upstreamArtifacts, !0), this.downstreamArtifacts, !0).sort(function(a, b) {
                    return _this.internalArtifactCompareFn(a, b);
                }), null === (_a = this.config) || void 0 === _a ? void 0 : _a.hasViewAllRelatedItemLink)) {
                    var currentArtifact = (null === (_b = this.upstream) || void 0 === _b ? void 0 : _b.rootArtifact) || (null === (_c = this.downstream) || void 0 === _c ? void 0 : _c.rootArtifact);
                    this.currentRouteLink = function(type, artifactObjectId) {
                        var baseRoute = "".concat(window.baseUrl, "/datahub/");
                        switch (type) {
                          case "dashboard":
                          case "rdlreport":
                          case "report":
                          case "scorecard":
                          case "streaming-dataflow":
                          case "workbook":
                          case "dataflow":
                          case "dataflow-gen2":
                            return "";

                          case "dataset":
                          case "dataset-autogenerated":
                          case "streaming-model":
                            return "".concat(baseRoute, "datasets/").concat(artifactObjectId);

                          case "datamart":
                          case "data-warehouse":
                          case "lake-warehouse":
                          case "mounted-warehouse":
                            return "".concat(baseRoute, "datamarts/").concat(artifactObjectId);

                          default:
                            return "".concat(baseRoute, "artifacts/").concat(artifactObjectId);
                        }
                    }(currentArtifact.extendedArtifactType, currentArtifact.objectId);
                }
            }, HoverCardRelationSectionComponent.prototype.onArtifactClicked = function(artifact) {
                this.logTelemetry(getArtifactsStringType(artifact));
            }, HoverCardRelationSectionComponent.prototype.logTelemetry = function(clickedItemType) {
                this.certifiedEventsService.logStandardizedFeatureEvent({
                    featureName: "Hover Card - Related Content Clicked",
                    activityAttributes: {
                        host: this.hostedEnvironment,
                        hoverCardArtifactType: this.artifactType,
                        clickedItemType
                    },
                    activityName: "Hover Card - Related Content Clicked",
                    correlationId: this.telemetryService.root.id,
                    resultCode: "0",
                    activityStatus: "Succeeded"
                });
            }, HoverCardRelationSectionComponent.prototype.mapArtifactsToInternalArtifacts = function(artifacts, relatedType) {
                var _this = this;
                return null == artifacts ? void 0 : artifacts.map(function(a) {
                    var _a, _b, artifactType = getArtifactsStringType(a);
                    return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, a), {
                        routeLink: getArtifactRoute(_this.extensionManifestService, a.objectId, artifactType, null === (_a = a.workspace) || void 0 === _a ? void 0 : _a.objectId),
                        relatedType,
                        artifactType,
                        tooltipText: "Upstream" === relatedType && (null === (_b = _this.config) || void 0 === _b ? void 0 : _b.shouldMarkSourceItems) ? _this.localizationService.format("Source_Item_With_name", a.displayName) : a.displayName
                    });
                });
            }, HoverCardRelationSectionComponent.prototype.internalArtifactCompareFn = function(itemA, itemB) {
                var _a;
                return itemA.relatedType !== itemB.relatedType && (null === (_a = this.config) || void 0 === _a ? void 0 : _a.shouldUpstreamAppearFirst) ? "Upstream" === itemA.relatedType ? -1 : 1 : itemA.displayName.localeCompare(itemB.displayName);
            }, HoverCardRelationSectionComponent.\u0275fac = function(t) {
                return new (t || HoverCardRelationSectionComponent)(core["\u0275\u0275directiveInject"](manifest_src.vC), core["\u0275\u0275directiveInject"](Telemetry.ly), core["\u0275\u0275directiveInject"](Telemetry.y0), core["\u0275\u0275directiveInject"](localization_service.o));
            }, HoverCardRelationSectionComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: HoverCardRelationSectionComponent,
                selectors: [ [ "hover-card-relation-section" ] ],
                inputs: {
                    upstream: "upstream",
                    downstream: "downstream",
                    artifactType: "artifactType",
                    hostedEnvironment: "hostedEnvironment"
                },
                features: [ core["\u0275\u0275NgOnChangesFeature"] ],
                decls: 1,
                vars: 1,
                consts: [ [ 4, "ngIf" ], [ 1, "related-artifacts-title" ], [ 4, "ngFor", "ngForOf" ], [ 3, "artifactType" ], [ 3, "target", "href", "triTooltip", "triTooltipAlwaysShow", "click", "keydown.enter" ], [ 1, "artifact-name" ], [ "class", "source-item-marker", 4, "ngIf" ], [ 1, "source-item-marker" ], [ "target", "_blank", 1, "show-more-link", 3, "href", "external", "block", "size", "click" ] ],
                template: function(rf, ctx) {
                    1 & rf && core["\u0275\u0275template"](0, HoverCardRelationSectionComponent_ng_container_0_Template, 8, 9, "ng-container", 0), 
                    2 & rf && core["\u0275\u0275property"]("ngIf", ctx.relatedArtifactInternalList && ctx.relatedArtifactInternalList.length > 0);
                },
                dependencies: [ common.NgForOf, common.NgIf, TridentArtifactIconComponent, tri_tooltip_directive.Z, tri_link_component.v, common.AsyncPipe, common.LowerCasePipe, common.SlicePipe, localize_pipe.F ],
                styles: [ "[_nghost-%COMP%]   .related-artifacts-title[_ngcontent-%COMP%]{margin-block-end:8px;font-size:var(--fontSizeBase200);font-weight:var(--fontWeightSemibold);line-height:var(--lineHeightBase200)}[_nghost-%COMP%]   li[_ngcontent-%COMP%]{height:32px;overflow:hidden;display:flex;align-items:center}[_nghost-%COMP%]   li[_ngcontent-%COMP%]:hover{background-color:var(--colorNeutralBackground1Hover)}[_nghost-%COMP%]   li[_ngcontent-%COMP%]:active{background-color:var(--colorNeutralBackground1Pressed)}[_nghost-%COMP%]   li[_ngcontent-%COMP%]   tri-artifact-icon[_ngcontent-%COMP%]{margin-inline:8px}[_nghost-%COMP%]   li[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{text-decoration:none;font-weight:400;font-size:var(--md-font-size);color:var(--globalColorGrey26);display:flex;align-items:center;gap:8px;flex:1;height:100%;overflow:hidden}[_nghost-%COMP%]   li[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]   .artifact-name[_ngcontent-%COMP%]{overflow:hidden;text-overflow:ellipsis}[_nghost-%COMP%]   li[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]   .source-item-marker[_ngcontent-%COMP%]{color:var(--colorNeutralForeground4)}[_nghost-%COMP%]   li[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]{white-space:nowrap}[_nghost-%COMP%]   .show-more-link[_ngcontent-%COMP%]{margin-block:8px;color:var(--colorNeutralForeground1);font-size:var(--sm-font-size)}" ]
            }), HoverCardRelationSectionComponent;
        }();
        function ItemHoverCardComponent_div_0_ng_container_3_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275element"](1, "tri-svg-icon", 9), 
            core["\u0275\u0275pipe"](2, "localizeFormat"), core["\u0275\u0275pipe"](3, "localize"), 
            core["\u0275\u0275pipe"](4, "localizeFormat"), core["\u0275\u0275pipe"](5, "localize"), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf && (core["\u0275\u0275advance"](1), 
            core["\u0275\u0275property"]("triTooltip", core["\u0275\u0275pipeBind2"](4, 8, "Restricted_Artifact_tooltip", core["\u0275\u0275pipeBind1"](5, 11, "ArtifactKind_Report")))("triTooltipPosition", "before"), 
            core["\u0275\u0275attribute"]("aria-label", core["\u0275\u0275pipeBind2"](2, 3, "Restricted_Artifact_tooltip", core["\u0275\u0275pipeBind1"](3, 6, "ArtifactKind_Report"))));
        }
        function ItemHoverCardComponent_div_0_ng_template_4_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "tri-artifact-icon", 10), 2 & rf) {
                var ctx_r3 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275property"]("artifactType", ctx_r3.extendedArtifactType)("size", ctx_r3.iconSize);
            }
        }
        function ItemHoverCardComponent_div_0_div_8_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 11), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r4 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275property"]("triTooltip", ctx_r4.itemHoverCardArgs.itemDescription), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate1"](" ", ctx_r4.itemHoverCardArgs.itemDescription, " ");
            }
        }
        function ItemHoverCardComponent_div_0_ng_container_9_dlp_hover_card_2_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "dlp-hover-card", 14), 2 & rf) {
                var ctx_r6 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275property"]("artifactId", ctx_r6.itemHoverCardArgs.itemId)("artifactType", ctx_r6.extendedArtifactType)("artifactObjectId", ctx_r6.itemHoverCardArgs.itemObjectId)("hasDlpPolicyTip", ctx_r6.itemHoverCardArgs.hasDlpPolicyTip)("restrictions", ctx_r6.itemHoverCardArgs.restrictions)("hostedEnvironmentTelemetryHint", ctx_r6.itemHoverCardArgs.hostedEnvironmentTelemetryHint)("openLinkInNewTab", ctx_r6.itemHoverCardArgs.openLinkInNewTab)("underlyingArtifactId", ctx_r6.itemHoverCardArgs.underlyingArtifactId);
            }
        }
        function ItemHoverCardComponent_div_0_ng_container_9_ng_container_3_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275element"](1, "hover-card-relation-section", 15), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var ctx_r7 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("upstream", ctx_r7.upstream)("downstream", ctx_r7.downstream)("artifactType", ctx_r7.extendedArtifactType)("hostedEnvironment", ctx_r7.itemHoverCardArgs.hostedEnvironmentTelemetryHint);
            }
        }
        function ItemHoverCardComponent_div_0_ng_container_9_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "div", 12), 
            core["\u0275\u0275template"](2, ItemHoverCardComponent_div_0_ng_container_9_dlp_hover_card_2_Template, 1, 8, "dlp-hover-card", 13), 
            core["\u0275\u0275template"](3, ItemHoverCardComponent_div_0_ng_container_9_ng_container_3_Template, 2, 4, "ng-container", 8), 
            core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var ctx_r5 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", ctx_r5.shouldDisplayDlpSection), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx_r5.shouldDisplayRelatedContent && ctx_r5.hasRelatedArtifacts);
            }
        }
        function ItemHoverCardComponent_div_0_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 1)(1, "div", 2)(2, "div", 3), 
            core["\u0275\u0275template"](3, ItemHoverCardComponent_div_0_ng_container_3_Template, 6, 13, "ng-container", 4), 
            core["\u0275\u0275template"](4, ItemHoverCardComponent_div_0_ng_template_4_Template, 1, 2, "ng-template", null, 5, core["\u0275\u0275templateRefExtractor"]), 
            core["\u0275\u0275elementStart"](6, "div", 6), core["\u0275\u0275text"](7), core["\u0275\u0275elementEnd"]()(), 
            core["\u0275\u0275template"](8, ItemHoverCardComponent_div_0_div_8_Template, 2, 2, "div", 7), 
            core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](9, ItemHoverCardComponent_div_0_ng_container_9_Template, 4, 2, "ng-container", 8), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var _r2 = core["\u0275\u0275reference"](5), ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngIf", "report" === ctx_r0.extendedArtifactType && !(null == ctx_r0.itemHoverCardArgs.restrictions || !ctx_r0.itemHoverCardArgs.restrictions.blocked))("ngIfElse", _r2), 
                core["\u0275\u0275advance"](4), core["\u0275\u0275textInterpolate"](ctx_r0.itemHoverCardArgs.itemName), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx_r0.itemHoverCardArgs.itemDescription), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx_r0.hasExpandedContent);
            }
        }
        var HostedEnvironment = function(HostedEnvironment) {
            return HostedEnvironment.Datahab = "Datahub", HostedEnvironment.HomeRecent = "home-recents", 
            HostedEnvironment.HomeFavorites = "home-favorites", HostedEnvironment.WorkspacePage = "workspace-page", 
            HostedEnvironment;
        }({}), ItemHoverCardComponent = function() {
            function ItemHoverCardComponent(extensionManifestService, featureSwitchService, lazyProvider, changeDetectionRef) {
                this.extensionManifestService = extensionManifestService, this.featureSwitchService = featureSwitchService, 
                this.lazyProvider = lazyProvider, this.changeDetectionRef = changeDetectionRef, 
                this.iconSize = "24", this.displayCard = !1, this.hasExpandedContent = !1, this.shouldDisplayDlpSection = !1, 
                this.shouldDisplayRelatedContent = !1, this.hasRelatedArtifacts = !1, this.onDestroy$ = new Subject.xQ;
            }
            return ItemHoverCardComponent.prototype.ngOnInit = function() {
                this.featureSwitchService.featureSwitches.itemHoverCard_HEAD_FE && !_.isEmpty(this.itemHoverCardArgs) && this.itemHoverCardArgs.itemType && (this.extendedArtifactType = toTridentArtifactType(this.itemHoverCardArgs.itemType), 
                this.initDisplayRelatedContentSection(), this.evaluateShouldDisplayCard());
            }, ItemHoverCardComponent.prototype.loadRelatedItemContent = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var relationsStoreService, upstreamObservable, downstreamObservable, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.loadRelationsStore() ];

                          case 1:
                            return (relationsStoreService = _a.sent()) ? (upstreamObservable = relationsStoreService.getUpstreamDirectNeighborsWholeData(this.itemHoverCardArgs.itemObjectId, this.extendedArtifactType, RelationsFeatureConsumers.HoverCard).pipe((0, 
                            takeUntil.R)(this.onDestroy$), (0, operators_filter.h)(function(data) {
                                return !!data && 2 === data.requestStatus;
                            }), (0, operators_take.q)(1)), downstreamObservable = relationsStoreService.getDownstreamDirectNeighborsWholeData(this.itemHoverCardArgs.itemObjectId, this.extendedArtifactType, RelationsFeatureConsumers.HoverCard).pipe((0, 
                            takeUntil.R)(this.onDestroy$), (0, operators_filter.h)(function(data) {
                                return !!data && 2 === data.requestStatus;
                            }), (0, operators_take.q)(1)), (0, observable_combineLatest.aj)([ upstreamObservable, downstreamObservable ]).subscribe(function(_a) {
                                var upstream = _a[0], downstream = _a[1];
                                (upstream.artifacts && upstream.artifacts.size > 0 || downstream.artifacts && downstream.artifacts.size > 0) && (_this.hasRelatedArtifacts = !0, 
                                _this.evaluateShouldDisplayCard(), _this.upstream = upstream, _this.downstream = downstream, 
                                _this.changeDetectionRef.markForCheck());
                            }), [ 2 ]) : [ 2 ];
                        }
                    });
                });
            }, ItemHoverCardComponent.prototype.initDisplayRelatedContentSection = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var _a, _b;
                    return (0, tslib_es6.__generator)(this, function(_c) {
                        switch (_c.label) {
                          case 0:
                            return _a = this, this.itemHoverCardArgs.shouldHideRelatedContent ? (_b = !1, [ 3, 3 ]) : [ 3, 1 ];

                          case 1:
                            return [ 4, this.shouldDisplayRelatedContentSectionIfExists() ];

                          case 2:
                            _b = _c.sent(), _c.label = 3;

                          case 3:
                            return _a.shouldDisplayRelatedContent = _b, this.shouldDisplayRelatedContent && this.loadRelatedItemContent(), 
                            [ 2 ];
                        }
                    });
                });
            }, ItemHoverCardComponent.prototype.evaluateShouldDisplayDlpSection = function() {
                return !!this.featureSwitchService.featureSwitches.dlpHoverCardPolicies_HEAD_DLP_FE && !!this.featureSwitchService.featureSwitches.dlpPolicyTip && !!this.itemHoverCardArgs.hasDlpPolicyTip;
            }, ItemHoverCardComponent.prototype.shouldDisplayDlpRestrictionsCard = function() {
                return !!this.featureSwitchService.featureSwitches.restrictAccess_HEAD_DLP_FE && !_.isEmpty(this.itemHoverCardArgs.restrictions) && (this.itemHoverCardArgs.restrictions.blocked || (this.itemHoverCardArgs.restrictions.restrictionSources & RestrictionSources.DLP) === RestrictionSources.DLP);
            }, ItemHoverCardComponent.prototype.shouldDisplayRelatedContentSectionIfExists = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var isValidPowerBiArtifact, isValidTridentArtifact;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            if (!this.featureSwitchService.featureSwitches.hoverCardRelatedContent_HEAD_Lineage_FE || !this.itemHoverCardArgs.itemObjectId || !this.extendedArtifactType) return [ 2, !1 ];
                            isValidPowerBiArtifact = (0, src.jb)(this.extendedArtifactType) && !(0, src.nk)(this.extendedArtifactType), 
                            isValidTridentArtifact = null, _a.label = 1;

                          case 1:
                            return _a.trys.push([ 1, 3, , 4 ]), [ 4, this.extensionManifestService.isTridentArtifact(this.extendedArtifactType) ];

                          case 2:
                            return isValidTridentArtifact = _a.sent(), [ 3, 4 ];

                          case 3:
                            return _a.sent(), [ 2, !1 ];

                          case 4:
                            return (isValidPowerBiArtifact || isValidTridentArtifact) && this.itemHoverCardArgs.hostedEnvironmentTelemetryHint === HostedEnvironment.Datahab ? [ 2, !0 ] : [ 2, !1 ];
                        }
                    });
                });
            }, ItemHoverCardComponent.prototype.loadRelationsStore = function() {
                return this.lazyProvider.get("@powerbi/RelationsStore/relations.module#RelationsStoreModule", "RelationsStoreService");
            }, ItemHoverCardComponent.prototype.shouldDisplayRelatedContentSection = function() {
                return this.shouldDisplayRelatedContent && this.hasRelatedArtifacts;
            }, ItemHoverCardComponent.prototype.evaluateShouldDisplayCard = function() {
                this.shouldDisplayDlpSection = this.evaluateShouldDisplayDlpSection() || this.shouldDisplayDlpRestrictionsCard(), 
                this.hasExpandedContent = this.shouldDisplayDlpSection || this.shouldDisplayRelatedContentSection(), 
                this.displayCard = !!this.itemHoverCardArgs.itemDescription || this.hasExpandedContent;
            }, ItemHoverCardComponent.prototype.ngOnDestroy = function() {
                this.onDestroy$.next(), this.onDestroy$.complete();
            }, ItemHoverCardComponent.\u0275fac = function(t) {
                return new (t || ItemHoverCardComponent)(core["\u0275\u0275directiveInject"](manifest_src.vC), core["\u0275\u0275directiveInject"](feature_switch_service.vZ), core["\u0275\u0275directiveInject"](lazy_provider.E), core["\u0275\u0275directiveInject"](core.ChangeDetectorRef));
            }, ItemHoverCardComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: ItemHoverCardComponent,
                selectors: [ [ "item-hover-card" ] ],
                inputs: {
                    itemHoverCardArgs: "itemHoverCardArgs"
                },
                decls: 1,
                vars: 1,
                consts: [ [ "class", "item-hover-card", 4, "ngIf" ], [ 1, "item-hover-card" ], [ 1, "primary-content" ], [ 1, "title" ], [ 4, "ngIf", "ngIfElse" ], [ "artifactIcon", "" ], [ 1, "item-name" ], [ "class", "description", 3, "triTooltip", 4, "ngIf" ], [ 4, "ngIf" ], [ "tri-svg-icon-24", "", "name", "restricted_report_24_item", "sprite", "artifact-colored-icons", 3, "triTooltip", "triTooltipPosition" ], [ 3, "artifactType", "size" ], [ 1, "description", 3, "triTooltip" ], [ 1, "expanded-content" ], [ "class", "expanded-element", 3, "artifactId", "artifactType", "artifactObjectId", "hasDlpPolicyTip", "restrictions", "hostedEnvironmentTelemetryHint", "openLinkInNewTab", "underlyingArtifactId", 4, "ngIf" ], [ 1, "expanded-element", 3, "artifactId", "artifactType", "artifactObjectId", "hasDlpPolicyTip", "restrictions", "hostedEnvironmentTelemetryHint", "openLinkInNewTab", "underlyingArtifactId" ], [ 1, "expanded-element", 3, "upstream", "downstream", "artifactType", "hostedEnvironment" ] ],
                template: function(rf, ctx) {
                    1 & rf && core["\u0275\u0275template"](0, ItemHoverCardComponent_div_0_Template, 10, 5, "div", 0), 
                    2 & rf && core["\u0275\u0275property"]("ngIf", ctx.displayCard);
                },
                dependencies: [ common.NgIf, DlpHoverCardComponent, TridentArtifactIconComponent, tri_svg_icon_component.M, tri_tooltip_directive.Z, HoverCardRelationSectionComponent, localize_pipe.F, localize_format_pipe.j ],
                styles: [ '[_nghost-%COMP%]{--hover-card-max-height: inherit}.hover-card-default-max-height[_nghost-%COMP%]{--hover-card-max-height: 625px}@media only screen and (max-height: 640px){.hover-card-default-max-height[_nghost-%COMP%]{--hover-card-max-height: 256px}}[_nghost-%COMP%]   .item-hover-card[_ngcontent-%COMP%]{display:flex;background-color:var(--colorNeutralBackground1);width:320px;box-sizing:border-box;box-shadow:0 8px 16px rgba(0,0,0,.14),0 0 2px rgba(0,0,0,.12);border-radius:4px;flex-direction:column;align-items:flex-start;max-height:var(--hover-card-max-height)}html:not([dir="rtl"])   [_nghost-%COMP%]   .item-hover-card[_ngcontent-%COMP%]{padding:0 24px}html[dir="rtl"]   [_nghost-%COMP%]   .item-hover-card[_ngcontent-%COMP%]{padding:0 24px}[_nghost-%COMP%]   .item-hover-card[_ngcontent-%COMP%]   .primary-content[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:flex-start;width:272px}html:not([dir="rtl"])   [_nghost-%COMP%]   .item-hover-card[_ngcontent-%COMP%]   .primary-content[_ngcontent-%COMP%]{padding:24px 0 16px}html[dir="rtl"]   [_nghost-%COMP%]   .item-hover-card[_ngcontent-%COMP%]   .primary-content[_ngcontent-%COMP%]{padding:24px 0 16px}[_nghost-%COMP%]   .item-hover-card[_ngcontent-%COMP%]   .primary-content[_ngcontent-%COMP%]   .title[_ngcontent-%COMP%]{display:flex;flex-direction:row;align-items:center;text-overflow:ellipsis;overflow:hidden;padding:0;gap:8px}[_nghost-%COMP%]   .item-hover-card[_ngcontent-%COMP%]   .primary-content[_ngcontent-%COMP%]   .title[_ngcontent-%COMP%]   .item-icon[_ngcontent-%COMP%]{fill:var(--colorNeutralForeground3);flex-shrink:0}[_nghost-%COMP%]   .item-hover-card[_ngcontent-%COMP%]   .primary-content[_ngcontent-%COMP%]   .title[_ngcontent-%COMP%]   .item-name[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-semi-bold, 600);line-height:20px;color:var(--colorNeutralForeground1);word-break:break-word}[_nghost-%COMP%]   .item-hover-card[_ngcontent-%COMP%]   .primary-content[_ngcontent-%COMP%]   .description[_ngcontent-%COMP%]{margin-top:18px;font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--sm-font-size, 12px);font-weight:var(--font-weight-regular, 400);color:var(--colorNeutralForeground2);width:100%;word-wrap:break-word;text-overflow:ellipsis;overflow:hidden;display:-webkit-box;-webkit-line-clamp:3;-webkit-box-orient:vertical}[_nghost-%COMP%]   .item-hover-card[_ngcontent-%COMP%]   .expanded-content[_ngcontent-%COMP%]{width:272px;overflow:scroll;gap:4px}[_nghost-%COMP%]   .item-hover-card[_ngcontent-%COMP%]   .expanded-content[_ngcontent-%COMP%]   .expanded-element[_ngcontent-%COMP%]{display:block;border-top:1px solid var(--globalColorGrey82);padding-block:16px}' ],
                changeDetection: 0
            }), ItemHoverCardComponent;
        }(), tri_checkbox_component = __webpack_require__(10965), tri_column_option_component = __webpack_require__(61961), fluent_list_module_manifests = [ {
            type: CellTemplatesComponent,
            componentId: "CellTemplatesComponentId"
        }, {
            type: FluentListTableBaseComponent,
            componentId: "FluentListTableBaseComponentId"
        }, {
            type: ArtifactListFilterPaneComponent,
            componentId: "ArtifactListFilterPaneComponentId"
        }, {
            type: FluentListFilterPaneComponent,
            componentId: "FluentListFilterPaneComponentId"
        }, {
            type: ArtifactListFilterTagsComponent,
            componentId: "ArtifactListFilterTagsComponentId"
        }, {
            type: FluentListFilterComponent,
            componentId: "FluentListFilterComponentId"
        }, {
            type: FluentListFilterTagsComponent,
            componentId: "FluentListFilterTagsComponentId"
        }, {
            type: FluentListSearchComponent,
            componentId: "FluentListSearchComponentId"
        }, {
            type: FluentListGalleryComponent,
            componentId: "FluentListGalleryComponentId"
        }, {
            type: ArtifactListSearchComponent,
            componentId: "ArtifactListSearchComponentId"
        }, {
            type: ArtifactListFilterComponent,
            componentId: "ArtifactListFilterComponentId"
        }, {
            type: ArtifactListMessageBannerComponent,
            componentId: "ArtifactListMessageBannerComponentId"
        }, {
            type: FluentListAriaAnnouncerComponent,
            componentId: "FluentListAriaAnnouncerComponentId"
        } ], FluentListModule = function() {
            function FluentListModule(iconProvider) {
                __webpack_require__.e("datamart").then(__webpack_require__.bind(__webpack_require__, 76291)).then(function(module) {
                    iconProvider.registerIcons(module.iconSpriteSheet.sprite);
                });
            }
            return FluentListModule.\u0275fac = function(t) {
                return new (t || FluentListModule)(core["\u0275\u0275inject"](pbi_office_icon_provider_service.u));
            }, FluentListModule.\u0275mod = core["\u0275\u0275defineNgModule"]({
                type: FluentListModule
            }), FluentListModule.\u0275inj = core["\u0275\u0275defineInjector"]({
                providers: [ TridentFluentListItemProvider ],
                imports: [ ngrx_store.Aw.forFeature("artifactList", reducers), ArtifactActionModule, common.CommonModule, ArtifactEndorsementUICommon_module.a, icon.Ps, sort.JX, virtual_scroll.xg, localization_module.v, ArtifactContextMenusModule, scrolling.Cl, angular_resizable_element.ym, a11y.rt, a11y_module._, UILibrary_module.g, legacy_checkbox.Zh, information_protection_ui_common_module.K, fesm2022_router.Bz, lazy_load_module.N.withManifests(fluent_list_module_manifests), pbi_tooltip_module.Z, legacy_table.U5, RelatedArtifactsModule, legacy_form_field.wp, legacy_input.x4, ArtifactIconsModule, legacy_list.gR, scrolling.ZD, tri_svg_icon.T6, tri_tooltip.w, pbi_office_icon_module.m, ngx_popper.jz, ItemHoverCardModule, DlpPolicyUIModule, tri_checkbox.B, domains_ui_src.AP, tri_column_option.G, tags_src.BN ]
            }), FluentListModule;
        }();
        core["\u0275\u0275setComponentScope"](FluentListTableBaseComponent, function() {
            return [ common.NgClass, common.NgForOf, common.NgIf, common.NgTemplateOutlet, common.NgStyle, common.NgSwitch, common.NgSwitchCase, icon.Hw, sort.YE, sort.nU, virtual_scroll.Sl, localize_directive.X, localize_tooltip_directive.r, scrolling.x0, scrolling.N7, angular_resizable_element.E$, angular_resizable_element.mC, a11y.kH, accessible_click_directive.t, pbi_tooltip_directive.V, legacy_table.ty, legacy_table.wO, legacy_table.S4, legacy_table.t3, legacy_table.R3, legacy_table.Al, legacy_table.L7, legacy_table.ML, legacy_table.fg, legacy_table.Zw, ngx_popper.Ml, ngx_popper.XS, ItemHoverCardComponent, tri_checkbox_component.r, tri_column_option_component.G ];
        }, function() {
            return [ common.AsyncPipe, localize_pipe.F, FluentListItemHoverCardArgsPipe ];
        }), __webpack_require__(7314);
        var taskTypeSource, subfolderNamingDialogDef = {
            dialogName: "TriSubfolderNamingDialog",
            componentName: "TriSubfolderNamingDialogComponent",
            config: {
                disableClose: !0,
                panelClass: [ "no-border", "no-padding" ],
                width: "576px"
            }
        }, TridentSubfolderDialogService = function() {
            function TridentSubfolderDialogService(dialogService) {
                var _this = this;
                this.dialogService = dialogService, this.openSubfolderNamingDialog = function(data) {
                    return _this.open(data, subfolderNamingDialogDef);
                };
            }
            return TridentSubfolderDialogService.prototype.open = function(data, dialogDef) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.dialogService.openHostDialog((0, tslib_es6.__assign)({
                                bindings: data
                            }, dialogDef)) ];

                          case 1:
                            return [ 2, _a.sent().afterClosed().toPromise() ];
                        }
                    });
                });
            }, TridentSubfolderDialogService.\u0275fac = function(t) {
                return new (t || TridentSubfolderDialogService)(core["\u0275\u0275inject"](dialog_service.x));
            }, TridentSubfolderDialogService.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: TridentSubfolderDialogService,
                factory: TridentSubfolderDialogService.\u0275fac,
                providedIn: "root"
            }), TridentSubfolderDialogService;
        }(), Load = (0, ngrx_store.PH)("[Pin Workspace] Load"), LoadSucceed = (0, ngrx_store.PH)("[Pin Workspace] Load Succeed", (0, 
        ngrx_store.Ky)()), LoadFailed = (0, ngrx_store.PH)("[Pin Workspace] Load Failed", (0, 
        ngrx_store.Ky)()), Pin = (0, ngrx_store.PH)("[Pin Workspace] Pin", (0, ngrx_store.Ky)()), PinSucceed = (0, 
        ngrx_store.PH)("[Pin Workspace] Pin Succeed", (0, ngrx_store.Ky)()), PinFailed = (0, 
        ngrx_store.PH)("[Pin Workspace] Pin Failed", (0, ngrx_store.Ky)()), Unpin = (0, 
        ngrx_store.PH)("[Pin Workspace] Unpin", (0, ngrx_store.Ky)()), UnpinSucceed = (0, 
        ngrx_store.PH)("[Pin Workspace] Unpin Succeed", (0, ngrx_store.Ky)()), UnpinFailed = (0, 
        ngrx_store.PH)("[Pin Workspace] Unpin Failed", (0, ngrx_store.Ky)()), PinState = function(PinState) {
            return PinState[PinState.Unpin = 0] = "Unpin", PinState[PinState.Pin = 1] = "Pin", 
            PinState;
        }({}), pinWorkspaceAdapter = (0, ngrx_entity.H)({
            selectId: function(workspace) {
                return function(workspace) {
                    return workspace.folderObjectId;
                }(workspace);
            }
        }), pin_workspace_reducer_initialState = pinWorkspaceAdapter.getInitialState({
            loaded: !1,
            error: null
        }), PinWorkspaceReducer = (0, ngrx_store.Lq)(pin_workspace_reducer_initialState, (0, 
        ngrx_store.on)(LoadSucceed, function(state, _a) {
            return pinWorkspaceAdapter.setAll(_a.workspaces.map(function(wk) {
                return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, wk), {
                    folderObjectId: wk.folderObjectId,
                    pinState: PinState.Pin
                });
            }), (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, state), {
                loaded: !0
            }));
        }), (0, ngrx_store.on)(LoadFailed, function(state, _a) {
            var error = _a.error;
            return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, state), {
                error
            });
        }), (0, ngrx_store.on)(Pin, function(state, _a) {
            return pinWorkspaceAdapter.addOne({
                folderObjectId: _a.folderObjectId,
                pinState: PinState.Pin
            }, state);
        }), (0, ngrx_store.on)(PinSucceed, function(state) {
            return state;
        }), (0, ngrx_store.on)(PinFailed, function(state, _a) {
            var error = _a.error;
            return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, pinWorkspaceAdapter.removeOne(_a.folderObjectId, state)), {
                error
            });
        }), (0, ngrx_store.on)(Unpin, function(state, _a) {
            return pinWorkspaceAdapter.updateOne({
                id: _a.folderObjectId,
                changes: {
                    pinState: PinState.Unpin
                }
            }, state);
        }), (0, ngrx_store.on)(UnpinSucceed, function(state, _a) {
            return pinWorkspaceAdapter.removeOne(_a.folderObjectId, state);
        }), (0, ngrx_store.on)(UnpinFailed, function(state, _a) {
            var error = _a.error;
            return pinWorkspaceAdapter.updateOne({
                id: _a.folderObjectId,
                changes: {
                    pinState: PinState.Pin
                }
            }, (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, state), {
                error
            }));
        })), lib_notification_toast_service = __webpack_require__(42888), lib_http_service = __webpack_require__(68698), PinWorkspaceHttpService = function() {
            function PinWorkspaceHttpService(httpService) {
                this.httpService = httpService;
            }
            return PinWorkspaceHttpService.prototype.getPinnedWorkspaces = function() {
                return this.httpService.get("metadata/folders/pin");
            }, PinWorkspaceHttpService.prototype.pinWorkspace = function(folderObjectId) {
                return this.httpService.post("metadata/folders/".concat(folderObjectId, "/pin"), null);
            }, PinWorkspaceHttpService.prototype.unpinWorkspace = function(folderObjectId) {
                return this.httpService.delete("metadata/folders/".concat(folderObjectId, "/unpin"));
            }, PinWorkspaceHttpService.\u0275fac = function(t) {
                return new (t || PinWorkspaceHttpService)(core["\u0275\u0275inject"](lib_http_service.s));
            }, PinWorkspaceHttpService.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: PinWorkspaceHttpService,
                factory: PinWorkspaceHttpService.\u0275fac,
                providedIn: "root"
            }), PinWorkspaceHttpService;
        }(), PinWorkspaceEffects = function() {
            function PinWorkspaceEffects(action$, localizationService, pinWorkspaceHttpService, notificationService) {
                var _this = this;
                this.action$ = action$, this.localizationService = localizationService, this.pinWorkspaceHttpService = pinWorkspaceHttpService, 
                this.notificationService = notificationService, this.loadPinnedWorkspaces$ = (0, 
                ngrx_effects.GW)(function() {
                    return _this.action$.pipe((0, ngrx_effects.l4)(Load), (0, mergeMap.zg)(function() {
                        return _this.pinWorkspaceHttpService.getPinnedWorkspaces().pipe((0, operators_map.U)(function(response) {
                            return LoadSucceed({
                                workspaces: response.data
                            });
                        }), (0, operators_catchError.K)(function(error) {
                            return (0, observable_of.of)(LoadFailed({
                                error
                            }));
                        }));
                    }));
                }), this.pinWorkspaces$ = (0, ngrx_effects.GW)(function() {
                    return _this.action$.pipe((0, ngrx_effects.l4)(Pin), (0, concatMap.b)(function(_a) {
                        var folderObjectId = _a.folderObjectId, workspaceName = _a.workspaceName;
                        return _this.pinWorkspaceHttpService.pinWorkspace(folderObjectId).pipe((0, operators_map.U)(function() {
                            return PinSucceed({
                                folderObjectId
                            });
                        }), (0, operators_catchError.K)(function(error) {
                            return _this.notificationService.notify({
                                title: _this.localizationService.format("PinWorkspaceFailed", workspaceName),
                                notificationType: index_core.k$.Error,
                                message: JSON.stringify(error.error),
                                actionButtons: [],
                                style: "Trident"
                            }), (0, observable_of.of)(PinFailed({
                                error,
                                folderObjectId
                            }));
                        }));
                    }));
                }), this.unpinWorkspaces$ = (0, ngrx_effects.GW)(function() {
                    return _this.action$.pipe((0, ngrx_effects.l4)(Unpin), (0, concatMap.b)(function(_a) {
                        var folderObjectId = _a.folderObjectId, workspaceName = _a.workspaceName;
                        return _this.pinWorkspaceHttpService.unpinWorkspace(folderObjectId).pipe((0, operators_map.U)(function() {
                            return UnpinSucceed({
                                folderObjectId
                            });
                        }), (0, operators_catchError.K)(function(error) {
                            return _this.notificationService.notify({
                                title: _this.localizationService.format("UnpinWorkspaceFailed", workspaceName),
                                notificationType: index_core.k$.Error,
                                message: JSON.stringify(error.error),
                                actionButtons: [],
                                style: "Trident"
                            }), (0, observable_of.of)(UnpinFailed({
                                error,
                                folderObjectId
                            }));
                        }));
                    }));
                });
            }
            return PinWorkspaceEffects.\u0275fac = function(t) {
                return new (t || PinWorkspaceEffects)(core["\u0275\u0275inject"](ngrx_effects.eX), core["\u0275\u0275inject"](src_localization_service.z), core["\u0275\u0275inject"](PinWorkspaceHttpService), core["\u0275\u0275inject"](lib_notification_toast_service.g));
            }, PinWorkspaceEffects.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: PinWorkspaceEffects,
                factory: PinWorkspaceEffects.\u0275fac
            }), PinWorkspaceEffects;
        }(), PinWorkspaceModule = function() {
            function PinWorkspaceModule() {}
            return PinWorkspaceModule.\u0275fac = function(t) {
                return new (t || PinWorkspaceModule);
            }, PinWorkspaceModule.\u0275mod = core["\u0275\u0275defineNgModule"]({
                type: PinWorkspaceModule
            }), PinWorkspaceModule.\u0275inj = core["\u0275\u0275defineInjector"]({
                imports: [ ngrx_store.Aw.forFeature("pinWorkspace", PinWorkspaceReducer), ngrx_effects.sQ.forFeature([ PinWorkspaceEffects ]) ]
            }), PinWorkspaceModule;
        }(), getPinWorkspaceState = (0, ngrx_store.ZF)("pinWorkspace"), pin_workspace_selectors_a = pinWorkspaceAdapter.getSelectors(), selectEntities = pin_workspace_selectors_a.selectEntities, getAllPinWorkspaces = (0, 
        ngrx_store.P1)(getPinWorkspaceState, pin_workspace_selectors_a.selectAll), getPinnedWorkspaces = (0, 
        ngrx_store.P1)(getAllPinWorkspaces, function(wk) {
            return wk.filter(function(wk) {
                return wk.pinState === PinState.Pin;
            });
        }), PinWorkspaceFacade = ((0, ngrx_store.P1)(getPinWorkspaceState, selectEntities), 
        function() {
            function PinWorkspaceFacade(store) {
                this.store = store, this.pinnedWorkspaces$ = this.store.select(getPinnedWorkspaces);
            }
            return PinWorkspaceFacade.prototype.getPinnedWorkspaces = function() {
                return this.pinnedWorkspaces$;
            }, PinWorkspaceFacade.prototype.load = function() {
                this.store.dispatch(Load());
            }, PinWorkspaceFacade.prototype.pin = function(folderObjectId, workspaceName) {
                this.store.dispatch(Pin({
                    folderObjectId,
                    workspaceName
                }));
            }, PinWorkspaceFacade.prototype.unpin = function(folderObjectId, workspaceName) {
                this.store.dispatch(Unpin({
                    folderObjectId,
                    workspaceName
                }));
            }, PinWorkspaceFacade.\u0275fac = function(t) {
                return new (t || PinWorkspaceFacade)(core["\u0275\u0275inject"](ngrx_store.yh));
            }, PinWorkspaceFacade.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: PinWorkspaceFacade,
                factory: PinWorkspaceFacade.\u0275fac,
                providedIn: "root"
            }), PinWorkspaceFacade;
        }()), src_localization_module = __webpack_require__(78035), telemetry_module = __webpack_require__(65152), tri_menu = __webpack_require__(98759), workspaceContext = __webpack_require__(35030), lib_feature_switch_service = __webpack_require__(94771), lazy_provider_service = __webpack_require__(6814), immer_esm = __webpack_require__(74466), identity = __webpack_require__(56506), v4 = __webpack_require__(11105), showTaskflowIntro = (0, 
        ngrx_store.PH)("".concat("[Taskflow]", " Show introduction")), hideTaskflowIntro = (0, 
        ngrx_store.PH)("".concat("[Taskflow]", " Hide introduction")), task_flow_actions_updateTaskflowMetadata = (0, 
        ngrx_store.PH)("".concat("[Taskflow]", " Update taskflow metadata"), (0, ngrx_store.Ky)()), task_flow_actions_resetTaskflow = (0, 
        ngrx_store.PH)("".concat("[Taskflow]", " Reset taskflow")), task_flow_actions_addTemplateToCanvas = (0, 
        ngrx_store.PH)("".concat("[Taskflow]", " Add template to canvas"), (0, ngrx_store.Ky)()), task_flow_actions_updateGraph = (0, 
        ngrx_store.PH)("".concat("[Taskflow]", " update graph"), (0, ngrx_store.Ky)()), task_flow_actions_addTask = (0, 
        ngrx_store.PH)("".concat("[Taskflow]", " Add task"), (0, ngrx_store.Ky)()), task_flow_actions_removeTask = (0, 
        ngrx_store.PH)("".concat("[Taskflow]", " Remove step"), (0, ngrx_store.Ky)()), task_flow_actions_updateStepMetadata = (0, 
        ngrx_store.PH)("".concat("[Taskflow]", " Update step metadata"), (0, ngrx_store.Ky)()), task_flow_actions_changeTaskType = (0, 
        ngrx_store.PH)("".concat("[Taskflow]", " Change step type"), (0, ngrx_store.Ky)()), task_flow_actions_removeItemsFromAllSteps = (0, 
        ngrx_store.PH)("".concat("[Taskflow]", " Remove items from all steps"), (0, ngrx_store.Ky)()), updateItemCount = ((0, 
        ngrx_store.PH)("".concat("[Taskflow]", " Link newly created item"), (0, ngrx_store.Ky)()), 
        (0, ngrx_store.PH)("".concat("[Taskflow]", " Update item count"), (0, ngrx_store.Ky)())), task_flow_actions_addLink = (0, 
        ngrx_store.PH)("".concat("[Taskflow]", " Add link"), (0, ngrx_store.Ky)()), task_flow_actions_updateLink = (0, 
        ngrx_store.PH)("".concat("[Taskflow]", " Update link"), (0, ngrx_store.Ky)()), task_flow_actions_removeLink = (0, 
        ngrx_store.PH)("".concat("[Taskflow]", " Remove link"), (0, ngrx_store.Ky)()), task_flow_actions_removeLinksByStepId = (0, 
        ngrx_store.PH)("".concat("[Taskflow]", " Remove links by step id"), (0, ngrx_store.Ky)()), closeCreateNewItemPanel = (0, 
        ngrx_store.PH)("".concat("[Taskflow]", " Close create item panel")), openCreateNewItemPanel = (0, 
        ngrx_store.PH)("".concat("[Taskflow]", " Open create item panel"), (0, ngrx_store.Ky)()), task_flow_actions_setTaskToCreateItem = (0, 
        ngrx_store.PH)("".concat("[Taskflow]", " Set task to create item"), (0, ngrx_store.Ky)()), updatePendingItemIdToTaskIdMap = (0, 
        ngrx_store.PH)("".concat("[Taskflow]", " Update pending item id to task id map"), (0, 
        ngrx_store.Ky)()), selectObject = (0, ngrx_store.PH)("".concat("[Taskflow]", " Select an object"), (0, 
        ngrx_store.Ky)()), unselectStep = (0, ngrx_store.PH)("".concat("[Taskflow]", " Unselect a step")), taskTypes = [ "general", "get data", "store data", "prepare data", "analyze and train data", "track data", "visualize", "develop" ], TaskTypeToJobTypeMap = {
            "get data": "getData",
            "store data": "storeData",
            "prepare data": "prepareData",
            "analyze and train data": "analyzeAndTrainData",
            "track data": "trackData",
            visualize: "visualizeData",
            general: "generalTask",
            develop: "develop"
        }, isError = function(taskFlow) {
            return "object" == typeof taskFlow && "error" in taskFlow;
        }, task_flow_models_isTaskFlow = function(taskFlow) {
            return "object" == typeof taskFlow && !("error" in taskFlow);
        };
        function populateTaskTypeByArtifactManifest(artifact, taskTypeSource) {
            var _a;
            artifact.supportedInTaskflow && (null === (_a = artifact.artifactJobTypes) || void 0 === _a ? void 0 : _a.length) && artifact.artifactJobTypes.forEach(function(artifactJobType) {
                for (var taskType in TaskTypeToJobTypeMap) if (TaskTypeToJobTypeMap[taskType] === artifactJobType) {
                    taskTypeSource[taskType].push(artifact.name);
                    break;
                }
            });
        }
        taskTypeSource = {
            general: [],
            "get data": [],
            "store data": [],
            "prepare data": [],
            "analyze and train data": [],
            "track data": [],
            visualize: [],
            develop: []
        }, src.Ez.artifacts.forEach(function(artifact) {
            populateTaskTypeByArtifactManifest(artifact, taskTypeSource);
        }), Object.keys(src.v4).forEach(function(key) {
            populateTaskTypeByArtifactManifest(src.v4[key], taskTypeSource);
        });
        var taskTypeMigration = {
            ingest: "get data",
            transform: "prepare data",
            store: "store data",
            analyze: "analyze and train data",
            track: "track data"
        }, task_flow_assignment_actions_assignItemsToTask = (0, ngrx_store.PH)("".concat("[Taskflow]", " Add items"), (0, 
        ngrx_store.Ky)()), openTaskFlow = (0, ngrx_store.PH)("".concat("[Taskflow]", " Open task flow"), (0, 
        ngrx_store.Ky)()), task_flow_lifecycle_actions_createTaskflowSucceed = ((0, ngrx_store.PH)("".concat("[Taskflow]", " Ensure task flow loaded"), (0, 
        ngrx_store.Ky)()), (0, ngrx_store.PH)("".concat("[Taskflow]", " Create taskflow succeed"))), task_flow_lifecycle_actions_loadTaskFlowSucceed = ((0, 
        ngrx_store.PH)("".concat("[Taskflow]", " Create taskflow failed")), (0, ngrx_store.PH)("".concat("[Taskflow]", " Load task flow succeed"), (0, 
        ngrx_store.Ky)())), task_flow_lifecycle_actions_loadTaskFlowFailed = (0, ngrx_store.PH)("".concat("[Taskflow]", " Load task flow failed"), (0, 
        ngrx_store.Ky)()), mapTaskFlowEntityToOptional = ((0, ngrx_store.PH)("".concat("[Taskflow]", " Update taskflow succeed")), 
        (0, ngrx_store.PH)("".concat("[Taskflow]", " Update taskflow failed")), function(func) {
            return function(entity) {
                return entity ? function(func) {
                    return function(taskFlow) {
                        return task_flow_models_isTaskFlow(taskFlow) ? func(taskFlow) : void 0;
                    };
                }(func)(entity.taskFlow) : void 0;
            };
        }), taskFlowAdapter = (0, ngrx_entity.H)({
            selectId: function(t) {
                return t.workspaceObjectId;
            }
        }), task_flow_reducer_initialState = taskFlowAdapter.getInitialState({
            createNewItemPanel: !1,
            skipsDiagramUpdate: !1,
            introVisible: !1
        }), updateSelectedTaskFlow = function(state, taskFlowFactory) {
            var workspaceObjectId = state.workspaceObjectId;
            if (!workspaceObjectId) return state;
            var entity = state.entities[workspaceObjectId];
            if (!entity) return state;
            var openedTaskFlow = entity.taskFlow;
            if ("not loaded" === openedTaskFlow || isError(openedTaskFlow)) return state;
            var existingTaskFlow = "empty" === openedTaskFlow ? {
                steps: [],
                edges: []
            } : openedTaskFlow, newTaskFlow = (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, existingTaskFlow), taskFlowFactory(existingTaskFlow));
            return taskFlowAdapter.upsertOne({
                workspaceObjectId,
                taskFlow: newTaskFlow,
                isNewlyCreated: entity.isNewlyCreated
            }, state);
        };
        function itemEquals(item1) {
            return function(item2) {
                return !(item1.artifactObjectId && item2.artifactObjectId && item1.artifactObjectId !== item2.artifactObjectId || item1.artifactType !== item2.artifactType || item1.artifactUniqueId !== item2.artifactUniqueId);
            };
        }
        function resetSelectObject(state) {
            return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, state), {
                selectedObject: void 0,
                selectedObjectTrigger: void 0
            });
        }
        (0, ngrx_store.Lq)(task_flow_reducer_initialState, (0, ngrx_store.on)(openTaskFlow, function(state, _a) {
            var workspaceObjectId = _a.workspaceObjectId, taskFlow = _a.state;
            return taskFlowAdapter.upsertOne({
                workspaceObjectId,
                taskFlow,
                isNewlyCreated: "empty" === taskFlow
            }, (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, state), {
                workspaceObjectId
            }));
        }), (0, ngrx_store.on)(task_flow_lifecycle_actions_loadTaskFlowSucceed, function(state, _a) {
            var workspaceObjectId = _a.workspaceObjectId, taskFlow = _a.taskFlow, validTaskFlow = taskFlow ? function(taskFlow) {
                return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, taskFlow), {
                    steps: taskFlow.steps.map(function(task) {
                        if (!function(task) {
                            return taskTypes.includes(task.type);
                        }(task)) {
                            var targetType = taskTypeMigration[task.type] || "general";
                            return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, task), {
                                type: targetType
                            });
                        }
                        return task;
                    })
                });
            }(taskFlow) : "empty";
            return taskFlowAdapter.upsertOne({
                taskFlow: validTaskFlow,
                workspaceObjectId,
                isNewlyCreated: "empty" === validTaskFlow
            }, state);
        }), (0, ngrx_store.on)(task_flow_lifecycle_actions_loadTaskFlowFailed, function(state, _a) {
            return taskFlowAdapter.upsertOne({
                workspaceObjectId: _a.workspaceObjectId,
                taskFlow: {
                    error: _a.error
                },
                isNewlyCreated: !1
            }, state);
        }), (0, ngrx_store.on)(task_flow_lifecycle_actions_createTaskflowSucceed, function(state) {
            return taskFlowAdapter.updateOne({
                id: state.workspaceObjectId,
                changes: {
                    isNewlyCreated: !1
                }
            }, state);
        }), (0, ngrx_store.on)(task_flow_actions_updateTaskflowMetadata, function(state, _a) {
            var displayName = _a.displayName, description = _a.description;
            return updateSelectedTaskFlow(state, function() {
                return {
                    name: displayName,
                    description
                };
            });
        }), (0, ngrx_store.on)(task_flow_actions_resetTaskflow, function(state) {
            return updateSelectedTaskFlow(resetSelectObject(state), function() {
                return {
                    steps: [],
                    edges: [],
                    name: null,
                    description: null
                };
            });
        }), (0, ngrx_store.on)(task_flow_actions_addTemplateToCanvas, function(state, _a) {
            var template = _a.template;
            return updateSelectedTaskFlow(state, function(taskFlow) {
                var tasksAndEdges = function(template) {
                    var idMap = new Map;
                    return {
                        steps: template.steps.map(function(step) {
                            return idMap.set(step.id, "step-" + (0, v4.Z)()), (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, step), {
                                id: idMap.get(step.id),
                                items: []
                            });
                        }),
                        edges: template.edges.map(function(edge) {
                            return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, edge), {
                                id: "edge-" + (0, v4.Z)(),
                                source: idMap.get(edge.source),
                                target: idMap.get(edge.target),
                                fromPort: "right",
                                toPort: "left"
                            });
                        })
                    };
                }(template), newTasks = (0, tslib_es6.__spreadArray)((0, tslib_es6.__spreadArray)([], taskFlow.steps, !0), tasksAndEdges.steps, !0), newEdges = (0, 
                tslib_es6.__spreadArray)((0, tslib_es6.__spreadArray)([], taskFlow.edges, !0), tasksAndEdges.edges, !0);
                return {
                    name: taskFlow.name ?? template.name,
                    description: taskFlow.description ?? template.longDescription,
                    steps: newTasks,
                    edges: newEdges
                };
            });
        }), (0, ngrx_store.on)(task_flow_actions_addTask, function(state, _a) {
            var task = _a.task, newState = updateSelectedTaskFlow(state, function(taskFlow) {
                return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, taskFlow), {
                    steps: (0, tslib_es6.__spreadArray)((0, tslib_es6.__spreadArray)([], taskFlow.steps, !0), [ task ], !1)
                });
            });
            return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, newState), {
                selectedObjectTrigger: void 0,
                selectedObject: {
                    objectType: "step",
                    id: task.id
                }
            });
        }), (0, ngrx_store.on)(task_flow_actions_updateStepMetadata, function(state, _a) {
            var stepId = _a.stepId, name = _a.name, description = _a.description;
            return updateSelectedTaskFlow(state, function(taskFlow) {
                return {
                    steps: taskFlow.steps.map(function(task) {
                        return task.id === stepId ? (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, task), {
                            name,
                            description
                        }) : task;
                    })
                };
            });
        }), (0, ngrx_store.on)(task_flow_actions_changeTaskType, function(state, _a) {
            var stepId = _a.stepId, stepType = _a.stepType;
            return updateSelectedTaskFlow(state, function(taskFlow) {
                return {
                    steps: taskFlow.steps.map(function(task) {
                        return task.id === stepId ? (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, task), {
                            type: stepType,
                            recommendedItemTypes: void 0
                        }) : task;
                    })
                };
            });
        }), (0, ngrx_store.on)(task_flow_actions_removeTask, function(state, _a) {
            var _b, _c, stepId = _a.stepId, selectedId = "taskflow" === (null === (_b = state.selectedObject) || void 0 === _b ? void 0 : _b.objectType) || null === (_c = state.selectedObject) || void 0 === _c ? void 0 : _c.id;
            return updateSelectedTaskFlow(selectedId === stepId ? resetSelectObject(state) : state, function(taskFlow) {
                return {
                    steps: taskFlow.steps.filter(function(step) {
                        return step.id !== stepId;
                    })
                };
            });
        }), (0, ngrx_store.on)(task_flow_assignment_actions_assignItemsToTask, function(state, _a) {
            var taskId = _a.taskId, items = _a.items, selectedWorkspaceObjectId = _a.workspaceObjectId || state.workspaceObjectId;
            if (void 0 === selectedWorkspaceObjectId) return state;
            var entity = state.entities[selectedWorkspaceObjectId];
            if (!entity) return state;
            var taskFlow = entity.taskFlow;
            if (!task_flow_models_isTaskFlow(taskFlow)) return state;
            var newTasks = taskFlow.steps.map(function(step) {
                var _a;
                return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, step), step.id === taskId ? {
                    items: (0, tslib_es6.__spreadArray)((0, tslib_es6.__spreadArray)([], step.items || [], !0), items.filter(function(i) {
                        var _a;
                        return !(null === (_a = step.items) || void 0 === _a ? void 0 : _a.find(itemEquals(i)));
                    }), !0)
                } : {
                    items: null === (_a = step.items) || void 0 === _a ? void 0 : _a.filter(function(item) {
                        return !items.find(itemEquals(item));
                    })
                });
            });
            return taskFlowAdapter.updateOne({
                id: selectedWorkspaceObjectId,
                changes: {
                    taskFlow: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, taskFlow), {
                        steps: newTasks
                    })
                }
            }, state);
        }), (0, ngrx_store.on)(updateItemCount, function(state, _a) {
            var listItems = _a.items;
            return updateSelectedTaskFlow(state, function(taskFlow) {
                return {
                    steps: taskFlow.steps.map(function(task) {
                        var _a;
                        return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, task), {
                            itemCount: null === (_a = task.items) || void 0 === _a ? void 0 : _a.map(function(itemInTask) {
                                var foundItem = listItems.find(function(i) {
                                    return itemInTask.artifactUniqueId === i.uniqueId && !i.parentUniqueId;
                                }), childItem = (null == foundItem ? void 0 : foundItem.isParent) ? listItems.filter(function(i) {
                                    return i.parentUniqueId === foundItem.uniqueId;
                                }).length : 0;
                                return (foundItem ? 1 : 0) + childItem;
                            }).reduce(function(a, i) {
                                return a + i;
                            }, 0)
                        });
                    })
                };
            });
        }), (0, ngrx_store.on)(task_flow_actions_removeItemsFromAllSteps, function(state, _a) {
            var removedItemIds = _a.removedItemIds;
            return updateSelectedTaskFlow(state, function(taskFlow) {
                return {
                    steps: (taskFlow.steps || []).map(function(step) {
                        var items = (step.items || []).filter(function(item) {
                            return -1 === removedItemIds.indexOf(item.artifactUniqueId);
                        });
                        return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, step), {
                            items
                        });
                    })
                };
            });
        }), (0, ngrx_store.on)(task_flow_actions_addLink, function(state, _a) {
            var sourceStepId = _a.source.id, targetStepId = _a.target.id;
            return updateSelectedTaskFlow(state, function(taskFlow) {
                var newEdges = (0, tslib_es6.__spreadArray)([], (null == taskFlow ? void 0 : taskFlow.edges) || [], !0), newEdge = {
                    id: "edge-" + (0, v4.Z)(),
                    source: sourceStepId,
                    target: targetStepId
                };
                return newEdges.push(newEdge), {
                    edges: newEdges
                };
            });
        }), (0, ngrx_store.on)(task_flow_actions_updateLink, function(state, _a) {
            var linkId = _a.linkId, sourceStepId = _a.sourceStepId, targetStepId = _a.targetStepId;
            return updateSelectedTaskFlow(state, function(taskFlow) {
                var _a, _b, linkIndex = (null !== (_a = null == taskFlow ? void 0 : taskFlow.edges) && void 0 !== _a ? _a : []).findIndex(function(edge) {
                    return edge.id === linkId;
                });
                if (-1 === linkIndex) return {};
                var steps = null == taskFlow ? void 0 : taskFlow.steps;
                if ((null == steps ? void 0 : steps.find(function(step) {
                    return step.id === sourceStepId;
                })) && (null == steps ? void 0 : steps.find(function(step) {
                    return step.id === targetStepId;
                }))) {
                    var updatedLink = {
                        id: linkId,
                        source: sourceStepId,
                        target: targetStepId
                    }, newLinks = (0, tslib_es6.__spreadArray)([], null !== (_b = null == taskFlow ? void 0 : taskFlow.edges) && void 0 !== _b ? _b : [], !0);
                    return newLinks[linkIndex] = updatedLink, {
                        edges: newLinks
                    };
                }
                return {};
            });
        }), (0, ngrx_store.on)(task_flow_actions_removeLink, function(state, _a) {
            var _b, _c, linkId = _a.linkId, selectedId = "taskflow" === (null === (_b = state.selectedObject) || void 0 === _b ? void 0 : _b.objectType) || null === (_c = state.selectedObject) || void 0 === _c ? void 0 : _c.id;
            return updateSelectedTaskFlow(selectedId === linkId ? resetSelectObject(state) : state, function(taskFlow) {
                return {
                    edges: taskFlow.edges.filter(function(edge) {
                        return edge.id !== linkId;
                    })
                };
            });
        }), (0, ngrx_store.on)(task_flow_actions_removeLinksByStepId, function(state, _a) {
            var _b, _c, _d, stepId = _a.stepId, newState = updateSelectedTaskFlow(state, function(taskFlow) {
                var _a;
                return {
                    edges: (null !== (_a = null == taskFlow ? void 0 : taskFlow.edges) && void 0 !== _a ? _a : []).filter(function(edge) {
                        return edge.source !== stepId && edge.target !== stepId;
                    })
                };
            }), selectedTaskFlow = null === (_b = newState.entities[newState.workspaceObjectId]) || void 0 === _b ? void 0 : _b.taskFlow;
            if (selectedTaskFlow && task_flow_models_isTaskFlow(selectedTaskFlow) && "edge" === (null === (_c = newState.selectedObject) || void 0 === _c ? void 0 : _c.objectType)) {
                var selectedId_1 = newState.selectedObject.id;
                if ((null !== (_d = null == selectedTaskFlow ? void 0 : selectedTaskFlow.edges) && void 0 !== _d ? _d : []).every(function(edge) {
                    return edge.id !== selectedId_1;
                })) return resetSelectObject(newState);
            }
            return newState;
        }), (0, ngrx_store.on)(task_flow_actions_updateGraph, function(state, _a) {
            var _b, _c, _d, _e, _f, edges = _a.edges, tasks = _a.tasks;
            if (void 0 !== edges || void 0 !== tasks) {
                var newState = updateSelectedTaskFlow(state, function(taskFlow) {
                    return {
                        edges: null != edges ? edges : taskFlow.edges,
                        steps: null != tasks ? tasks : taskFlow.steps
                    };
                }), selectedTaskFlow = null === (_b = newState.entities[newState.workspaceObjectId]) || void 0 === _b ? void 0 : _b.taskFlow;
                if (selectedTaskFlow && task_flow_models_isTaskFlow(selectedTaskFlow)) {
                    if ("edge" === (null === (_c = newState.selectedObject) || void 0 === _c ? void 0 : _c.objectType)) {
                        var selectedId_2 = newState.selectedObject.id;
                        if ((null !== (_d = selectedTaskFlow.edges) && void 0 !== _d ? _d : []).every(function(edge) {
                            return edge.id !== selectedId_2;
                        })) return resetSelectObject(newState);
                    }
                    if (!isError(selectedTaskFlow) && "step" === (null === (_e = newState.selectedObject) || void 0 === _e ? void 0 : _e.objectType)) {
                        var selectedId_3 = newState.selectedObject.id;
                        if ((null !== (_f = selectedTaskFlow.steps) && void 0 !== _f ? _f : []).every(function(step) {
                            return step.id !== selectedId_3;
                        })) return resetSelectObject(newState);
                    }
                }
                return newState;
            }
            return state;
        }), (0, ngrx_store.on)(closeCreateNewItemPanel, function(state) {
            return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, state), {
                createNewItemPanel: !1
            });
        }), (0, ngrx_store.on)(openCreateNewItemPanel, function(state, _a) {
            var defaultTask = _a.defaultTask;
            return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, state), {
                createNewItemPanel: !0,
                taskToCreateItem: defaultTask
            });
        }), (0, ngrx_store.on)(task_flow_actions_setTaskToCreateItem, function(state, _a) {
            var task = _a.task;
            return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, state), {
                taskToCreateItem: task
            });
        }), (0, ngrx_store.on)(updatePendingItemIdToTaskIdMap, function(state, _a) {
            var _b, itemId = _a.itemId;
            return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, state), {
                pendingItemIdToTaskIdMap: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, state.pendingItemIdToTaskIdMap), (_b = {}, 
                _b[itemId] = state.taskToCreateItem.id, _b))
            });
        }), (0, ngrx_store.on)(selectObject, function(state, obj) {
            var _a, selected, taskflow, taskFlow = null === (_a = state.entities[state.workspaceObjectId]) || void 0 === _a ? void 0 : _a.taskFlow;
            return taskFlow && task_flow_models_isTaskFlow(taskFlow) ? (0, tslib_es6.__assign)((0, 
            tslib_es6.__assign)({}, state), {
                selectedObject: (selected = "id" in obj ? {
                    id: obj.id,
                    objectType: obj.objectType
                } : {
                    objectType: obj.objectType
                }, taskflow = taskFlow, taskflow ? selected : {
                    objectType: "taskflow"
                }),
                selectedObjectTrigger: obj.trigger
            }) : state;
        }), (0, ngrx_store.on)(unselectStep, function(state) {
            var _a;
            return "step" === (null === (_a = state.selectedObject) || void 0 === _a ? void 0 : _a.objectType) ? (0, 
            tslib_es6.__assign)((0, tslib_es6.__assign)({}, state), {
                selectedObject: {
                    objectType: "taskflow"
                },
                selectedObjectTrigger: "filter"
            }) : state;
        }), (0, ngrx_store.on)(showTaskflowIntro, function(state) {
            return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, state), {
                introVisible: !0
            });
        }), (0, ngrx_store.on)(hideTaskflowIntro, function(state) {
            return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, state), {
                introVisible: !1
            });
        }));
        var getState = (0, ngrx_store.ZF)("taskflow"), task_flow_selectors_getWorkspaceObjectId = (0, 
        ngrx_store.P1)(getState, function(state) {
            return state.workspaceObjectId;
        }), task_flow_selectors_selectEntities = taskFlowAdapter.getSelectors().selectEntities, selectTaskFlowEntities = (0, 
        ngrx_store.P1)(getState, task_flow_selectors_selectEntities), task_flow_selectors_getOpenedTaskFlowEntity = (0, 
        ngrx_store.P1)(selectTaskFlowEntities, task_flow_selectors_getWorkspaceObjectId, function(entities, workspaceObjectId) {
            return workspaceObjectId ? entities[workspaceObjectId] : void 0;
        }), getOpenedTaskFlow = (0, ngrx_store.P1)(task_flow_selectors_getOpenedTaskFlowEntity, mapTaskFlowEntityToOptional(identity.y)), allTasks = ((0, 
        ngrx_store.P1)(getState, function(state) {
            return state.introVisible;
        }), (0, ngrx_store.P1)(getOpenedTaskFlow, (0, immer_esm.ZP)(function(taskflow) {
            taskflow && (taskflow.edges = taskflow.edges.map(function(edge) {
                return {
                    id: edge.id,
                    source: edge.source,
                    target: edge.target,
                    category: edge.category,
                    fromPort: edge.fromPort,
                    toPort: edge.toPort
                };
            }), taskflow.steps = taskflow.steps.map(function(step) {
                return {
                    id: step.id,
                    name: step.name,
                    description: step.description,
                    items: step.items,
                    type: step.type,
                    loc: step.loc
                };
            }));
        })), (0, ngrx_store.P1)(getOpenedTaskFlow, function(taskFlow) {
            return (null == taskFlow ? void 0 : taskFlow.steps) || [];
        })), task_flow_assignment_facade_injection_tokens_TaskFlowAssignmentFacadeInjectionToken = ((0, 
        ngrx_store.P1)(allTasks, function(tasks) {
            return tasks.length > 0;
        }), (0, ngrx_store.P1)(getOpenedTaskFlow, function(taskFlow) {
            return (null == taskFlow ? void 0 : taskFlow.edges) || [];
        }), (0, ngrx_store.P1)(getState, getOpenedTaskFlow, function(_a, selectedTaskFlow) {
            var selectedObject = _a.selectedObject, selectedObjectTrigger = _a.selectedObjectTrigger;
            if ("edge" === (null == selectedObject ? void 0 : selectedObject.objectType)) {
                var workflow = selectedTaskFlow, edge_1 = null == workflow ? void 0 : workflow.edges.find(function(edge) {
                    return edge.id === selectedObject.id;
                }), source = null == workflow ? void 0 : workflow.steps.find(function(step) {
                    return step.id === (null == edge_1 ? void 0 : edge_1.source);
                }), target = null == workflow ? void 0 : workflow.steps.find(function(step) {
                    return step.id === (null == edge_1 ? void 0 : edge_1.target);
                });
                if (edge_1 && source && target) return withTrigger({
                    id: edge_1.id,
                    source,
                    target
                });
            }
            return withTrigger("step" === (null == selectedObject ? void 0 : selectedObject.objectType) && (null == selectedTaskFlow ? void 0 : selectedTaskFlow.steps.find(function(step) {
                return step.id === selectedObject.id;
            })) || selectedTaskFlow);
            function withTrigger(v) {
                return null == v ? void 0 : (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, v), {
                    trigger: selectedObjectTrigger
                });
            }
        }), (0, ngrx_store.P1)(getState, function(state) {
            return state.createNewItemPanel ? state.taskToCreateItem : null;
        }), (0, ngrx_store.P1)(getState, function(state) {
            return state.taskToCreateItem;
        }), (0, ngrx_store.P1)(getState, function(state) {
            return state.skipsDiagramUpdate;
        }), mapTaskFlowEntityToOptional(function(taskFlow) {
            return taskFlow.steps.map(function(task) {
                return {
                    id: task.id,
                    name: task.name,
                    type: task.type,
                    items: task.items
                };
            });
        }), new core.InjectionToken("TaskFlowAssignmentFacade"));
        __webpack_require__(71477), __webpack_require__(63271);
        var makeColors = function(baseColor) {
            return {
                backgroundColor: "var(--globalColor".concat(baseColor, "Tint50)"),
                foregroundColor: "var(--globalColor".concat(baseColor, "Primary)")
            };
        }, taskTypeMetadata = {
            "get data": (0, tslib_es6.__assign)((0, tslib_es6.__assign)({
                shortName: "GetDataMenu",
                longName: "GetDataMenu",
                description: "Get_Data_Task_Description",
                icon: {
                    name: "pipeline"
                }
            }, makeColors("LightGreen")), {
                builtInRecommendedItemType: [ "CopyJob", "dataflow-gen2", "EventStream", "FunctionSet", "MountedRelationalDatabase", "Pipeline", "SparkJobDefinition", "SynapseNotebook" ]
            }),
            "store data": (0, tslib_es6.__assign)((0, tslib_es6.__assign)({
                shortName: "Store",
                longName: "Store_Data",
                description: "Store_Data_Task_Description",
                icon: {
                    name: "database"
                }
            }, makeColors("Blue")), {
                builtInRecommendedItemType: [ "data-warehouse", "datamart", "dataset", "KustoEventHouse", "Lakehouse" ]
            }),
            "prepare data": (0, tslib_es6.__assign)((0, tslib_es6.__assign)({
                shortName: "Prepare",
                longName: "Prepare_Data",
                description: "Prepare_Data_Task_Description",
                icon: {
                    name: "broom"
                }
            }, makeColors("Purple")), {
                builtInRecommendedItemType: [ "dataflow-gen2", "EventStream", "FunctionSet", "Pipeline", "SparkJobDefinition", "SynapseNotebook" ]
            }),
            "analyze and train data": (0, tslib_es6.__assign)((0, tslib_es6.__assign)({
                shortName: "Analyze_And_Train",
                longName: "Analyze_And_Train_Data",
                description: "Analyze_And_Train_Data_Task_Description",
                icon: {
                    name: "microscope"
                }
            }, makeColors("DarkOrange")), {
                builtInRecommendedItemType: [ "Environment", "MLExperiment", "MLModel", "SynapseNotebook", "SparkJobDefinition" ]
            }),
            "track data": (0, tslib_es6.__assign)((0, tslib_es6.__assign)({
                shortName: "Track",
                longName: "Track_Data",
                description: "Track_Data_Task_Description",
                icon: {
                    name: "sub_grid"
                }
            }, makeColors("Magenta")), {
                builtInRecommendedItemType: [ "EventStream", "KustoDashboard", "KustoEventHouse", "KustoQueryWorkbench", "ReflexProject", "scorecard" ]
            }),
            visualize: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({
                shortName: "Visualize",
                longName: "Visualize_Data",
                description: "Visualize_Data_Task_Description",
                icon: {
                    name: "data_pie"
                }
            }, makeColors("Marigold")), {
                builtInRecommendedItemType: [ "dashboard", "DataExploration", "KustoDashboard", "KustoQueryWorkbench", "rdlreport", "report", "scorecard" ]
            }),
            develop: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({
                shortName: "Develop",
                longName: "Develop_Data",
                description: "Develop_Task_Description",
                icon: {
                    name: "wrench_screwdriver"
                }
            }, makeColors("Cyan")), {
                builtInRecommendedItemType: [ "SynapseNotebook", "GraphQL" ]
            }),
            general: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({
                shortName: "Format_Label_General",
                longName: "Format_Label_General",
                description: "General_Task_Description",
                icon: {
                    name: "step"
                }
            }, makeColors("Anchor")), {
                builtInRecommendedItemType: []
            })
        };
        function getTaskTypeIcon(_a) {
            var taskType = _a.type, _b = _a.size, iconSize = void 0 === _b ? 20 : _b, _c = _a.styles, iconType = void 0 === _c ? null : _c, iconSprite = _a.sprite;
            return null === iconType ? {
                name: "".concat(taskTypeMetadata[taskType].icon.name, "_").concat(iconSize),
                sprite: iconSprite
            } : {
                name: "".concat(taskTypeMetadata[taskType].icon.name, "_").concat(iconSize, "_").concat(iconType),
                sprite: iconSprite
            };
        }
        taskTypes.map(function(taskType) {
            return {
                type: taskType,
                text: taskTypeMetadata[taskType].longName
            };
        });
        var TaskIconDirective = function() {
            function TaskIconDirective(iconComponent) {
                this.iconComponent = iconComponent, this.size20 = null, this.size24 = null;
            }
            return Object.defineProperty(TaskIconDirective.prototype, "iconProps", {
                set: function(value) {
                    var _a, name = (_a = getTaskTypeIcon(value)).name, sprite = _a.sprite;
                    this.iconComponent.name = name, this.iconComponent.sprite = sprite, this.iconComponent.markAsDirty(), 
                    this.size20 = 20 === value.size ? "" : null, this.size24 = 24 === value.size ? "" : null;
                },
                enumerable: !1,
                configurable: !0
            }), TaskIconDirective.\u0275fac = function(t) {
                return new (t || TaskIconDirective)(core["\u0275\u0275directiveInject"](tri_svg_icon.Mc));
            }, TaskIconDirective.\u0275dir = core["\u0275\u0275defineDirective"]({
                type: TaskIconDirective,
                selectors: [ [ "tri-svg-icon", "tridentTaskIcon", "" ] ],
                hostVars: 2,
                hostBindings: function(rf, ctx) {
                    2 & rf && core["\u0275\u0275attribute"]("tri-svg-icon-20", ctx.size20)("tri-svg-icon-24", ctx.size24);
                },
                inputs: {
                    iconProps: [ "tridentTaskIcon", "iconProps" ]
                },
                standalone: !0
            }), TaskIconDirective;
        }();
        function getTaskName(_a, localizeService) {
            return _a.name ?? localizeService.get(taskTypeMetadata[_a.type].shortName);
        }
        var LocalizeTaskNamePipe = function() {
            function LocalizeTaskNamePipe(localizeService) {
                this.localizeService = localizeService;
            }
            return LocalizeTaskNamePipe.prototype.transform = function(task) {
                return getTaskName(task, this.localizeService);
            }, LocalizeTaskNamePipe.\u0275fac = function(t) {
                return new (t || LocalizeTaskNamePipe)(core["\u0275\u0275directiveInject"](src_localization_service.z, 16));
            }, LocalizeTaskNamePipe.\u0275pipe = core["\u0275\u0275definePipe"]({
                name: "localizeTaskName",
                type: LocalizeTaskNamePipe,
                pure: !0,
                standalone: !0
            }), LocalizeTaskNamePipe;
        }(), src_localize_pipe = __webpack_require__(55334), tri_menu_directive = __webpack_require__(76688);
        function TaskSelectorMenuComponent_tri_svg_icon_1_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "tri-svg-icon", 3), 2 & rf) {
                var ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("tridentTaskIcon", ctx_r0.selectedTaskIcon);
            }
        }
        var validators_a, TaskSelectorMenuComponent = function() {
            function TaskSelectorMenuComponent(localizeTaskNamePipe, localizeService) {
                var _this = this;
                this.localizeTaskNamePipe = localizeTaskNamePipe, this.localizeService = localizeService, 
                this.tasks$ = new Observable.y, this.taskMenuFactory = function() {
                    return _this.tasks$.pipe((0, operators_map.U)(function(tasks) {
                        return tasks.length ? {
                            items: tasks.map(function(task) {
                                return _this.toMenuItem(task);
                            })
                        } : {
                            items: [ _this.noTaskMenuItem() ]
                        };
                    }));
                }, this.selectedTaskChange = new core.EventEmitter;
            }
            return Object.defineProperty(TaskSelectorMenuComponent.prototype, "tasks", {
                set: function(tasks) {
                    this.tasks$ = tasks;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(TaskSelectorMenuComponent.prototype, "selectedTask", {
                get: function() {
                    return this._selectedTask;
                },
                set: function(inputSelectedTask) {
                    this._selectedTask = inputSelectedTask, this.selectedTaskIcon = {
                        type: inputSelectedTask ? inputSelectedTask.type : "general",
                        size: 20,
                        styles: "regular"
                    };
                },
                enumerable: !1,
                configurable: !0
            }), TaskSelectorMenuComponent.prototype.onTaskSelected = function(button) {
                if (button.data) {
                    var data = button.data;
                    this.selectedTaskChange.next(data), this.selectedTask = data;
                }
            }, TaskSelectorMenuComponent.prototype.toMenuItem = function(task) {
                return {
                    id: task.id,
                    data: task,
                    type: tri_menu.fz.Button,
                    text: this.localizeTaskNamePipe.transform(task),
                    iconBundle: getTaskTypeIcon({
                        type: task.type,
                        size: 20
                    })
                };
            }, TaskSelectorMenuComponent.prototype.noTaskMenuItem = function() {
                return {
                    type: tri_menu.fz.Button,
                    text: this.localizeService.get("Task_Flow_No_Tasks_In_Workspace")
                };
            }, TaskSelectorMenuComponent.\u0275fac = function(t) {
                return new (t || TaskSelectorMenuComponent)(core["\u0275\u0275directiveInject"](LocalizeTaskNamePipe), core["\u0275\u0275directiveInject"](src_localization_service.z));
            }, TaskSelectorMenuComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: TaskSelectorMenuComponent,
                selectors: [ [ "trident-task-selector-menu" ] ],
                inputs: {
                    tasks: "tasks",
                    selectedTask: "selectedTask"
                },
                outputs: {
                    selectedTaskChange: "selectedTaskChange"
                },
                standalone: !0,
                features: [ core["\u0275\u0275ProvidersFeature"]([ LocalizeTaskNamePipe ]), core["\u0275\u0275StandaloneFeature"] ],
                decls: 6,
                vars: 8,
                consts: [ [ "tri-button", "", 1, "task-selector", 3, "triMenu", "triMenuButtonClick" ], [ "tri-svg-icon-20", "", 3, "tridentTaskIcon", 4, "ngIf" ], [ "tri-svg-icon-12", "", 3, "name" ], [ "tri-svg-icon-20", "", 3, "tridentTaskIcon" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementStart"](0, "button", 0), core["\u0275\u0275listener"]("triMenuButtonClick", function($event) {
                        return ctx.onTaskSelected($event);
                    }), core["\u0275\u0275template"](1, TaskSelectorMenuComponent_tri_svg_icon_1_Template, 1, 1, "tri-svg-icon", 1), 
                    core["\u0275\u0275text"](2), core["\u0275\u0275pipe"](3, "localizeTaskName"), core["\u0275\u0275pipe"](4, "localize"), 
                    core["\u0275\u0275element"](5, "tri-svg-icon", 2), core["\u0275\u0275elementEnd"]()), 
                    2 & rf && (core["\u0275\u0275property"]("triMenu", ctx.taskMenuFactory), core["\u0275\u0275advance"](1), 
                    core["\u0275\u0275property"]("ngIf", !!ctx.selectedTaskIcon), core["\u0275\u0275advance"](1), 
                    core["\u0275\u0275textInterpolate1"](" ", ctx.selectedTask ? core["\u0275\u0275pipeBind1"](3, 4, ctx.selectedTask) : core["\u0275\u0275pipeBind1"](4, 6, "Step_Selector_Placeholder"), " "), 
                    core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("name", "chevron_down_20_regular"));
                },
                dependencies: [ LocalizeTaskNamePipe, common.NgIf, TaskIconDirective, src_localization_module.Y, src_localize_pipe.Y, tri_menu.up, tri_menu_directive.rX, tri_svg_icon.T6, tri_svg_icon_component.M ]
            }), TaskSelectorMenuComponent;
        }(), tri_message_bar = __webpack_require__(47768), TriSubfolderPickerModule = function() {
            function TriSubfolderPickerModule() {}
            return TriSubfolderPickerModule.forRoot = function(config) {
                return {
                    ngModule: TriSubfolderPickerModule,
                    providers: [ config.subfolderDialogServiceProvider ]
                };
            }, TriSubfolderPickerModule.\u0275fac = function(t) {
                return new (t || TriSubfolderPickerModule);
            }, TriSubfolderPickerModule.\u0275mod = core["\u0275\u0275defineNgModule"]({
                type: TriSubfolderPickerModule
            }), TriSubfolderPickerModule.\u0275inj = core["\u0275\u0275defineInjector"]({
                imports: [ common.CommonModule, fesm2022_forms.u5, dialog.Is, subfolder_src.HL, TaskSelectorMenuComponent, src_localization_module.Y, tri_menu.up, tri_message_bar.I, tri_svg_icon.T6, telemetry_module.l, tri_tooltip.w ]
            }), TriSubfolderPickerModule;
        }(), tri_empty_state = __webpack_require__(75476), tri_search_box = __webpack_require__(46303), tri_workspace_icon = __webpack_require__(22645), shareReplay = __webpack_require__(57243), actions_group = __webpack_require__(82515), withLatestFrom = __webpack_require__(23558), SubfolderPickerValidators = ((validators_a = {}).Path_CannotSelectInitialSubfolder = function(data) {
            if (!data.allowSelectItems && data.subfolderId === data.initialSubfolderId && data.workspaceId === data.initialWorkspaceId) return {
                tooltip: "Subfolder_Picker_Confirm_Button_Disabled_Tooltip_Cannot_Select_Initial_Folder"
            };
        }, validators_a.SemanticInput_NoEmptyInput = function(data) {
            if (!data.semanticInputValue) return {
                tooltip: "Subfolder_Picker_Confirm_Button_Disabled_Tooltip_No_Empty_Input"
            };
        }, validators_a.SemanticInput_NoDuplicateName = function(data, params) {
            var usedItemNames = params.usedItemNames;
            if (null == usedItemNames ? void 0 : usedItemNames.includes(data.semanticInputValue)) return {
                tooltip: "Subfolder_Picker_Confirm_Button_Disabled_Tooltip_No_Duplicate_Name"
            };
        }, validators_a), telemetry_service = __webpack_require__(54323), subfolder_breadcrumbs_component = __webpack_require__(50897), tri_message_bar_component = __webpack_require__(45769);
        function TriSubfolderPickerComponent_div_6_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementStart"](0, "div", 8), core["\u0275\u0275projection"](1), 
            core["\u0275\u0275elementEnd"]());
        }
        function TriSubfolderPickerComponent_div_9_div_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r9 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div", 17)(1, "tri-message-bar", 18), core["\u0275\u0275listener"]("hideMessageBar", function() {
                    core["\u0275\u0275restoreView"](_r9);
                    var ctx_r8 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r8.onHideMessageBar());
                }), core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var ctx_r4 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("viewModel", ctx_r4.messageBarModel);
            }
        }
        var subfolder_picker_component_c0 = function(a0) {
            return {
                "compact-new-button": a0
            };
        };
        function TriSubfolderPickerComponent_div_9_button_8_Template(rf, ctx) {
            if (1 & rf) {
                var _r11 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "button", 19), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r11);
                    var ctx_r10 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r10.onNewFolderClick());
                }), core["\u0275\u0275pipe"](1, "async"), core["\u0275\u0275pipe"](2, "localize"), 
                core["\u0275\u0275pipe"](3, "async"), core["\u0275\u0275pipe"](4, "async"), core["\u0275\u0275element"](5, "tri-svg-icon", 20), 
                core["\u0275\u0275elementStart"](6, "span"), core["\u0275\u0275text"](7), core["\u0275\u0275pipe"](8, "localize"), 
                core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var tmp_1_0, tmp_4_0, ctx_r5 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275property"]("ngClass", core["\u0275\u0275pureFunction1"](17, subfolder_picker_component_c0, core["\u0275\u0275pipeBind1"](1, 7, ctx_r5.compactNewButton$)))("triTooltip", null == (tmp_1_0 = core["\u0275\u0275pipeBind1"](3, 11, ctx_r5.newButtonStatus$)) ? null : tmp_1_0.tooltip)("triTooltipPosition", "before")("triTooltipMaxWidth", 200)("disabled", null == (tmp_4_0 = core["\u0275\u0275pipeBind1"](4, 13, ctx_r5.newButtonStatus$)) ? null : tmp_4_0.disabled), 
                core["\u0275\u0275attribute"]("ariaLabel", core["\u0275\u0275pipeBind1"](2, 9, "New_Folder")), 
                core["\u0275\u0275advance"](7), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](8, 15, "New_Folder"));
            }
        }
        function TriSubfolderPickerComponent_div_9_div_12_Template(rf, ctx) {
            if (1 & rf) {
                var _r13 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div", 21)(1, "div", 22)(2, "label", 23), core["\u0275\u0275text"](3), 
                core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementStart"](4, "input", 24), 
                core["\u0275\u0275listener"]("ngModelChange", function($event) {
                    core["\u0275\u0275restoreView"](_r13);
                    var ctx_r12 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r12.onSemanticInputChange($event));
                }), core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var ctx_r6 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](ctx_r6.semanticInputLabelText), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngModel", ctx_r6.semanticInputValue$.value)("placeholder", ctx_r6.semanticInputPlaceholder);
            }
        }
        function TriSubfolderPickerComponent_div_9_div_13_tri_svg_icon_4_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "tri-svg-icon", 28), 2 & rf) {
                var ctx_r14 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275property"]("triTooltip", ctx_r14.data.taskSelectorConfig.labelTooltip);
            }
        }
        function TriSubfolderPickerComponent_div_9_div_13_Template(rf, ctx) {
            if (1 & rf) {
                var _r16 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div", 21)(1, "div", 22)(2, "label", 25), core["\u0275\u0275text"](3), 
                core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](4, TriSubfolderPickerComponent_div_9_div_13_tri_svg_icon_4_Template, 1, 1, "tri-svg-icon", 26), 
                core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](5, "trident-task-selector-menu", 27), 
                core["\u0275\u0275listener"]("selectedTaskChange", function($event) {
                    core["\u0275\u0275restoreView"](_r16);
                    var ctx_r15 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r15.onSelectedTaskChange($event));
                }), core["\u0275\u0275pipe"](6, "async"), core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var ctx_r7 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](ctx_r7.data.taskSelectorConfig.label), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", null == ctx_r7.data.taskSelectorConfig ? null : ctx_r7.data.taskSelectorConfig.labelTooltip), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("selectedTask", core["\u0275\u0275pipeBind1"](6, 4, ctx_r7.selectedTask$))("tasks", ctx_r7.tasks$);
            }
        }
        var subfolder_picker_component_c1 = function(a0) {
            return {
                width: a0
            };
        }, subfolder_picker_component_c2 = function() {
            return [];
        };
        function TriSubfolderPickerComponent_div_9_Template(rf, ctx) {
            if (1 & rf) {
                var _r18 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div", 9), core["\u0275\u0275template"](1, TriSubfolderPickerComponent_div_9_div_1_Template, 2, 1, "div", 10), 
                core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275elementStart"](3, "nav", 11)(4, "tri-subfolder-breadcrumbs", 12), 
                core["\u0275\u0275listener"]("visitSubfolder", function($event) {
                    core["\u0275\u0275restoreView"](_r18);
                    var ctx_r17 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r17.onVisitSubfolder($event));
                })("backToWorkspaceList", function() {
                    core["\u0275\u0275restoreView"](_r18);
                    var ctx_r19 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r19.onBackToWorkspaceList());
                }), core["\u0275\u0275pipe"](5, "async"), core["\u0275\u0275pipe"](6, "async"), 
                core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](7, "div", 13), 
                core["\u0275\u0275template"](8, TriSubfolderPickerComponent_div_9_button_8_Template, 9, 19, "button", 14), 
                core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementStart"](9, "mat-dialog-content"), 
                core["\u0275\u0275projection"](10, 1), core["\u0275\u0275elementStart"](11, "div", 15), 
                core["\u0275\u0275template"](12, TriSubfolderPickerComponent_div_9_div_12_Template, 5, 3, "div", 16), 
                core["\u0275\u0275template"](13, TriSubfolderPickerComponent_div_9_div_13_Template, 7, 6, "div", 16), 
                core["\u0275\u0275elementEnd"]()()();
            }
            if (2 & rf) {
                var ctx_r1 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](2, 10, ctx_r1.showMessageBar$)), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngStyle", core["\u0275\u0275pureFunction1"](16, subfolder_picker_component_c1, ctx_r1.showNewButton ? "calc(100% - 128px)" : "100%"))("workspace", ctx_r1.selectedWorkspace)("subfolders", core["\u0275\u0275pipeBind1"](5, 12, ctx_r1.subfolderAncestors$) || core["\u0275\u0275pureFunction0"](18, subfolder_picker_component_c2))("showBackToWorkspaceListButton", !!core["\u0275\u0275pipeBind1"](6, 14, ctx_r1.showBackToWorkspaceListButton$)), 
                core["\u0275\u0275attribute"]("aria-label", "Breadcrumbs")("aria-role", "Navigation"), 
                core["\u0275\u0275advance"](4), core["\u0275\u0275property"]("ngIf", ctx_r1.showNewButton), 
                core["\u0275\u0275advance"](4), core["\u0275\u0275property"]("ngIf", ctx_r1.semanticInputLabelText), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx_r1.taskSelectorEnabled);
            }
        }
        function TriSubfolderPickerComponent_ng_template_16_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 29), core["\u0275\u0275text"](1), 
            core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var tmp_0_0, ctx_r3 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate"](null == (tmp_0_0 = core["\u0275\u0275pipeBind1"](2, 1, ctx_r3.confirmButtonStatus$)) ? null : tmp_0_0.tooltip);
            }
        }
        var cdsa_model_selector_a, subfolder_picker_component_c3 = [ [ [ "", "subfolder-picker-workspace-list", "" ] ], [ [ "", "subfolder-picker-table", "" ] ] ], subfolder_picker_component_c4 = [ "[subfolder-picker-workspace-list]", "[subfolder-picker-table]" ], ReflowLevel = function(ReflowLevel) {
            return ReflowLevel[ReflowLevel.SM = 0] = "SM", ReflowLevel[ReflowLevel.MD = 1] = "MD", 
            ReflowLevel[ReflowLevel.LG = 2] = "LG", ReflowLevel[ReflowLevel.XL = 3] = "XL", 
            ReflowLevel[ReflowLevel.XXL = 4] = "XXL", ReflowLevel;
        }({}), TriSubfolderPickerComponent = function() {
            function TriSubfolderPickerComponent(data, featureSwitchService, lazyProvider, subfolderDialogService, workspaceContext, dialogRef, localizationService, store, subfolderFacade, telemetryService) {
                var _a, _b, _this = this;
                this.data = data, this.featureSwitchService = featureSwitchService, this.lazyProvider = lazyProvider, 
                this.subfolderDialogService = subfolderDialogService, this.workspaceContext = workspaceContext, 
                this.dialogRef = dialogRef, this.localizationService = localizationService, this.store = store, 
                this.subfolderFacade = subfolderFacade, this.telemetryService = telemetryService, 
                this.visitSubfolder = new core.EventEmitter, this.submitEvent = new core.EventEmitter, 
                this.cancelEvent = new core.EventEmitter, this.onResize$ = new BehaviorSubject.X(void 0), 
                this.reflowLevel$ = this.onResize$.pipe((0, operators_debounceTime.b)(50), (0, operators_map.U)(function() {
                    var width = window.innerWidth;
                    return width < 480 ? ReflowLevel.SM : width < 640 ? ReflowLevel.MD : width < 1024 ? ReflowLevel.LG : width < 1366 ? ReflowLevel.XL : ReflowLevel.XXL;
                })), this.compactMode$ = new BehaviorSubject.X(!1), this.showWorkspaceListInCompactMode$ = new BehaviorSubject.X(!1), 
                this.showWorkspaceList$ = (0, observable_combineLatest.aj)([ this.compactMode$, this.showWorkspaceListInCompactMode$ ]).pipe((0, 
                operators_map.U)(function(_a) {
                    return _this.data.allowSelectWorkspace && (!_a[0] || _a[1]);
                })), this.showContent$ = (0, observable_combineLatest.aj)([ this.compactMode$, this.showWorkspaceListInCompactMode$ ]).pipe((0, 
                operators_map.U)(function(_a) {
                    return !(_this.data.allowSelectWorkspace && _a[0] && _a[1]);
                })), this.showBackToWorkspaceListButton$ = (0, observable_combineLatest.aj)([ this.compactMode$, this.showWorkspaceListInCompactMode$ ]).pipe((0, 
                operators_map.U)(function(_a) {
                    return _this.data.allowSelectWorkspace && _a[0] && !_a[1];
                })), this.compactNewButton$ = this.reflowLevel$.pipe((0, operators_map.U)(function(reflowLevel) {
                    return reflowLevel === ReflowLevel.SM;
                }), (0, distinctUntilChanged.x)()), this.semanticInputValue$ = new BehaviorSubject.X(""), 
                this.showMessageBar$ = new BehaviorSubject.X(!1), this.taskSelectorEnabled = !1, 
                this.tasks$ = (0, observable_of.of)([]), this.selectedTask$ = new BehaviorSubject.X(void 0), 
                this.currentWorkspaceId$ = new BehaviorSubject.X(void 0), this.currentWorkspaceObjectId$ = new BehaviorSubject.X(void 0), 
                this.currentSubfolderId$ = new BehaviorSubject.X(void 0), this.selectedItems$ = new BehaviorSubject.X({}), 
                this.destroy$ = new Subject.xQ, this.semanticInputLabelText = null !== (_a = this.data.semanticInputLabelText) && void 0 !== _a ? _a : "", 
                this.semanticInputPlaceholder = null !== (_b = this.data.semanticInputPlaceholder) && void 0 !== _b ? _b : "", 
                this.messageBarModel = this.data.messageBarModel, this.allowSelectItems = !!this.data.allowSelectItemTypes && 0 !== this.data.allowSelectItemTypes.length, 
                this.messageBarModel && this.showMessageBar$.next(!0), this.showNewButton = !this.data.hideNewButton, 
                this.initializeTaskSelector(), this.subfolders$ = this.currentWorkspaceId$.pipe((0, 
                operators_switchMap.w)(function(workspaceId) {
                    return _this.store.select((0, subfolder_src.Nv)(workspaceId));
                })), this.currentSubfolder$ = (0, observable_combineLatest.aj)([ this.subfolders$, this.currentSubfolderId$ ]).pipe((0, 
                operators_map.U)(function(_a) {
                    var subfolderId = _a[1];
                    return _a[0].find(function(subfolder) {
                        return subfolder.id === subfolderId;
                    });
                })), this.subfolderChildren$ = (0, observable_combineLatest.aj)([ this.subfolders$, this.currentSubfolderId$ ]).pipe((0, 
                operators_map.U)(function(_a) {
                    var parentSubfolderId = _a[1];
                    return _a[0].filter(function(subfolder) {
                        return subfolder.parentSubfolderId === parentSubfolderId;
                    });
                })), this.subfolderAncestors$ = (0, observable_combineLatest.aj)([ this.subfolders$, this.currentSubfolder$ ]).pipe((0, 
                operators_map.U)(function(_a) {
                    for (var subfolders = _a[0], current = _a[1], ancestors = []; current; ) ancestors.unshift(current), 
                    current = subfolders.find(function(subfolder) {
                        return subfolder.id === (null == current ? void 0 : current.parentSubfolderId);
                    });
                    return ancestors;
                }));
                var validationErrors$ = (0, observable_combineLatest.aj)([ this.currentWorkspaceId$, this.currentSubfolderId$, this.selectedItems$, this.semanticInputValue$ ]).pipe((0, 
                operators_switchMap.w)(function(_a) {
                    var _b, _c, workspaceId = _a[0], subfolderId = _a[1], semanticInputValue = _a[3], enabledValidationRules = null !== (_b = _this.data.enabledValidationRules) && void 0 !== _b ? _b : [], validationErrors = [];
                    _this.allowSelectItems && !(null === (_c = _a[2].selectedItemsMetadata) || void 0 === _c ? void 0 : _c.length) && validationErrors.push({
                        tooltip: _this.localizationService.get("Subfolder_Picker_Confirm_Button_Disabled_Tooltip_No_Selected_Items")
                    });
                    for (var data = {
                        allowSelectItems: _this.allowSelectItems,
                        workspaceId,
                        subfolderId,
                        initialWorkspaceId: _this.initialWorkspaceId,
                        initialSubfolderId: _this.initialSubfolderId,
                        semanticInputValue
                    }, _i = 0, enabledValidationRules_1 = enabledValidationRules; _i < enabledValidationRules_1.length; _i++) {
                        var rule = enabledValidationRules_1[_i], validator = SubfolderPickerValidators[rule.name];
                        if (validator) {
                            var validationError = validator(data, rule.params);
                            validationError && validationErrors.push((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, validationError), {
                                tooltip: validationError.tooltip ? _this.localizationService.get(validationError.tooltip) : void 0
                            }));
                        }
                    }
                    return _this.data.checkConfirmButtonAvailability ? (0, observable_combineLatest.aj)([ (0, 
                    observable_of.of)(validationErrors), _this.data.checkConfirmButtonAvailability(subfolderId) ]).pipe((0, 
                    operators_map.U)(function(_a) {
                        var validationErrors = _a[0], callbackResult = _a[1];
                        return (null == callbackResult ? void 0 : callbackResult.disabled) ? (0, tslib_es6.__spreadArray)((0, 
                        tslib_es6.__spreadArray)([], validationErrors, !0), [ callbackResult ], !1) : validationErrors;
                    })) : (0, observable_of.of)(validationErrors);
                }));
                if (this.confirmButtonStatus$ = validationErrors$.pipe((0, operators_map.U)(function(errors) {
                    return (null == errors ? void 0 : errors.length) ? {
                        disabled: !0,
                        tooltip: errors.map(function(e) {
                            return e.tooltip;
                        }).join("\n")
                    } : {
                        disabled: !1
                    };
                })), this.showNewButton) {
                    var isServiceAppWorkspace$ = this.currentWorkspaceObjectId$.pipe((0, operators_switchMap.w)(function(workspaceObjectId) {
                        return workspaceObjectId ? _this.workspaceContext.workspaceIsServiceApp(workspaceObjectId) : (0, 
                        observable_of.of)(!1);
                    }));
                    this.newButtonStatus$ = (0, observable_combineLatest.aj)([ this.currentSubfolderId$, isServiceAppWorkspace$ ]).pipe((0, 
                    operators_switchMap.w)(function(_a) {
                        var subfolderId = _a[0];
                        return _a[1] ? (0, observable_of.of)({
                            disabled: !0,
                            tooltip: _this.localizationService.format("Subfolder_New_Button_Disabled_Tooltip_Template_App_Workspace")
                        }) : _this.subfolderFacade.getSubfolderDepthBySubfolderId(subfolderId).pipe((0, 
                        operators_map.U)(function(depth) {
                            return depth < subfolder_src.m8 ? {
                                disabled: !1
                            } : {
                                disabled: !0,
                                tooltip: _this.localizationService.format("Subfolder_New_Button_Disabled_Tooltip_Max_Depth_Limitation", subfolder_src.m8)
                            };
                        }));
                    }));
                } else this.newButtonStatus$ = (0, observable_of.of)({
                    disabled: !1
                });
                this.workspaceContext.myFolderObjectId$.pipe((0, operators_take.q)(1)).subscribe(function(myWorkspaceObjectId) {
                    var _a;
                    return _this.myWorkspaceObjectId = null !== (_a = _this.myWorkspaceObjectId) && void 0 !== _a ? _a : myWorkspaceObjectId;
                }), this.reflowLevel$.pipe((0, takeUntil.R)(this.destroy$), (0, operators_map.U)(function(level) {
                    return level < ReflowLevel.XL;
                }), (0, distinctUntilChanged.x)()).subscribe(this.compactMode$);
            }
            return TriSubfolderPickerComponent.prototype.onResize = function() {
                this.onResize$.next();
            }, TriSubfolderPickerComponent.prototype.ngOnChanges = function() {
                var _a, _b, _c;
                this.currentWorkspaceId$.next(null === (_a = this.selectedWorkspace) || void 0 === _a ? void 0 : _a.id), 
                this.currentWorkspaceObjectId$.next(null === (_b = this.selectedWorkspace) || void 0 === _b ? void 0 : _b.objectId), 
                this.currentSubfolderId$.next(this.selectedSubfolderId), this.selectedItems$.next(null !== (_c = this.selectedItems) && void 0 !== _c ? _c : {});
            }, TriSubfolderPickerComponent.prototype.ngOnInit = function() {
                var _a, _b, _this = this;
                this.initialWorkspaceId = null === (_a = this.selectedWorkspace) || void 0 === _a ? void 0 : _a.id, 
                this.initialSubfolderId = this.selectedSubfolderId, this.data.allowSelectWorkspace && (null === (_b = this.selectWorkspaceEvent$) || void 0 === _b || _b.pipe((0, 
                takeUntil.R)(this.destroy$)).subscribe(function() {
                    return _this.showWorkspaceListInCompactMode$.next(!1);
                }));
            }, TriSubfolderPickerComponent.prototype.ngOnDestroy = function() {
                this.destroy$.next(), this.destroy$.complete();
            }, TriSubfolderPickerComponent.prototype.initializeTaskSelector = function() {
                var _this = this, fs = this.featureSwitchService.featureSwitches;
                fs.workspaceTemplateAndDiagram && fs.unifyTaskflowAndListView && this.data.taskSelectorConfig && (this.taskSelectorEnabled = !0, 
                this.tasks$ = this.currentWorkspaceObjectId$.pipe((0, takeUntil.R)(this.destroy$), (0, 
                skipWhile.n)(function(workspaceObjectId) {
                    return !workspaceObjectId;
                }), (0, distinctUntilChanged.x)(), (0, withLatestFrom.M)(this.workspaceContext.myFolderObjectId$, this.lazyProvider.get("@trident/data-task-flow#DataTaskFlowModule", task_flow_assignment_facade_injection_tokens_TaskFlowAssignmentFacadeInjectionToken)), (0, 
                operators_switchMap.w)(function(_a) {
                    var workspaceObjectId = _a[0];
                    return _a[2].getAssignments(workspaceObjectId = "me" === workspaceObjectId ? _a[1] : workspaceObjectId);
                }), (0, shareReplay.d)(1)), this.tasks$.subscribe(function(tasks) {
                    var task = tasks.find(function(t) {
                        var _a;
                        return t.id === (null === (_a = _this.data.taskSelectorConfig) || void 0 === _a ? void 0 : _a.defaultTaskId);
                    });
                    _this.selectedTask$.next(task);
                }));
            }, TriSubfolderPickerComponent.prototype.onNewFolderClick = function() {
                var _this = this;
                this.currentSubfolderId$.pipe((0, withLatestFrom.M)(this.workspaceContext.myFolderObjectId$), (0, 
                operators_take.q)(1)).subscribe(function(_a) {
                    var subfolderId = _a[0], myWorkspaceObjectId = _a[1], workspace = _this.selectedWorkspace.isMyWorkspace ? (0, 
                    tslib_es6.__assign)((0, tslib_es6.__assign)({}, _this.selectedWorkspace), {
                        objectId: myWorkspaceObjectId
                    }) : _this.selectedWorkspace;
                    _this.subfolderDialogService.openSubfolderNamingDialog({
                        workspace,
                        parentSubfolderId: subfolderId,
                        isCreate: !0,
                        entryPoint: subfolder_src.Nc.subfolderPicker
                    });
                });
            }, TriSubfolderPickerComponent.prototype.onVisitSubfolder = function(subfolderId) {
                var _a, _b, _c;
                null === (_a = this.telemetryService) || void 0 === _a || _a.logStandardFeatureEvent({
                    originatingService: "DataCloudUX",
                    featureName: "Subfolder",
                    activityName: "Navigate to subfolder",
                    activityAttributes: {
                        entryPoint: subfolder_src.X3.breadcrumbsInSubfolderPicker
                    },
                    operationEndTime: (new Date).toISOString()
                });
                var workspaceObjectId = this.selectedWorkspace.isMyWorkspace ? null !== (_b = this.myWorkspaceObjectId) && void 0 !== _b ? _b : "me" : this.currentWorkspaceObjectId$.value;
                null === (_c = this.telemetryService) || void 0 === _c || _c.logEvent({
                    name: "Navigate to subfolder",
                    properties: {
                        entryPoint: subfolder_src.X3.breadcrumbsInSubfolderPicker,
                        workspaceObjectId,
                        subfolderId: (null != subfolderId ? subfolderId : "").toString()
                    }
                }), this.currentSubfolderId$.next(subfolderId), this.visitSubfolder.emit(subfolderId);
            }, TriSubfolderPickerComponent.prototype.onBackToWorkspaceList = function() {
                this.showWorkspaceListInCompactMode$.next(!0);
            }, TriSubfolderPickerComponent.prototype.onConfirmClick = function() {
                var _this = this;
                this.currentSubfolderId$.pipe((0, operators_switchMap.w)(function(id) {
                    return id ? _this.subfolderFacade.getSubfolderById(id) : (0, observable_of.of)(void 0);
                }), (0, withLatestFrom.M)(this.workspaceContext.myFolderObjectId$), (0, operators_take.q)(1)).subscribe(function(_a) {
                    var _b, _c, subfolder = _a[0], result = {
                        selectedWorkspaceObjectId: _this.selectedWorkspace.isMyWorkspace ? _a[1] : _this.selectedWorkspace.objectId,
                        selectedWorkspaceName: _this.selectedWorkspace.displayName,
                        selectedSubfolderId: null == subfolder ? void 0 : subfolder.id,
                        selectedSubfolderPath: null == subfolder ? void 0 : subfolder.fullPath
                    };
                    _this.allowSelectItems && (result.selectedItems = null === (_b = _this.selectedItems) || void 0 === _b ? void 0 : _b.selectedItems, 
                    result.selectedItemsMetadata = null === (_c = _this.selectedItems) || void 0 === _c ? void 0 : _c.selectedItemsMetadata), 
                    _this.semanticInputLabelText && (result.semanticInputValue = _this.semanticInputValue$.value), 
                    _this.taskSelectorEnabled && (result.selectedTask = _this.selectedTask$.value), 
                    _this.data.embedMode ? _this.submitEvent.emit(result) : _this.dialogRef.close(result);
                });
            }, TriSubfolderPickerComponent.prototype.onCancelClick = function() {
                this.data.embedMode ? this.cancelEvent.emit() : this.dialogRef.close();
            }, TriSubfolderPickerComponent.prototype.onSemanticInputChange = function(value) {
                this.semanticInputValue$.next(value);
            }, TriSubfolderPickerComponent.prototype.onHideMessageBar = function() {
                this.showMessageBar$.next(!1);
            }, TriSubfolderPickerComponent.prototype.onSelectedTaskChange = function(task) {
                this.selectedTask$.next(task);
            }, TriSubfolderPickerComponent.\u0275fac = function(t) {
                return new (t || TriSubfolderPickerComponent)(core["\u0275\u0275directiveInject"](dialog.WI), core["\u0275\u0275directiveInject"](lib_feature_switch_service.V$), core["\u0275\u0275directiveInject"](lazy_provider_service.rn), core["\u0275\u0275directiveInject"](subfolder_src.kh), core["\u0275\u0275directiveInject"](workspaceContext._), core["\u0275\u0275directiveInject"](dialog.so), core["\u0275\u0275directiveInject"](src_localization_service.z), core["\u0275\u0275directiveInject"](ngrx_store.yh), core["\u0275\u0275directiveInject"](subfolder_src.zC), core["\u0275\u0275directiveInject"](telemetry_service.t, 8));
            }, TriSubfolderPickerComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: TriSubfolderPickerComponent,
                selectors: [ [ "tri-subfolder-picker" ] ],
                hostBindings: function(rf, ctx) {
                    1 & rf && core["\u0275\u0275listener"]("resize", function($event) {
                        return ctx.onResize($event);
                    }, !1, core["\u0275\u0275resolveWindow"]);
                },
                inputs: {
                    selectedWorkspace: "selectedWorkspace",
                    selectedSubfolderId: "selectedSubfolderId",
                    selectedItems: "selectedItems",
                    selectWorkspaceEvent$: "selectWorkspaceEvent$"
                },
                outputs: {
                    visitSubfolder: "visitSubfolder",
                    submitEvent: "submitEvent",
                    cancelEvent: "cancelEvent"
                },
                features: [ core["\u0275\u0275NgOnChangesFeature"] ],
                ngContentSelectors: subfolder_picker_component_c4,
                decls: 21,
                vars: 23,
                consts: [ [ "mat-dialog-title", "" ], [ "data-testid", "title", 1, "title", "tri-subtitle1" ], [ 1, "container", 3, "ngClass" ], [ "class", "workspace-list", 4, "ngIf" ], [ "class", "content", 4, "ngIf" ], [ "data-testid", "confirm-button", "tri-button", "", "appearance", "primary", 3, "triTooltip", "triTooltipPosition", "triTooltipCaretSize", "triTooltipMaxWidth", "disabled", "click" ], [ "confirmButtonTooltip", "" ], [ "data-testid", "cancel-button", "tri-button", "", 3, "click" ], [ 1, "workspace-list" ], [ 1, "content" ], [ "class", "message-bar-container", 4, "ngIf" ], [ 1, "subfolder-nav" ], [ "tabindex", "0", "data-testid", "tri-subfolder-breadcrumbs", 1, "subfolder-nav-breadcrumbs", 3, "ngStyle", "workspace", "subfolders", "showBackToWorkspaceListButton", "visitSubfolder", "backToWorkspaceList" ], [ 1, "subfolder-nav-actions" ], [ "tri-button", "", "data-testid", "new-button", "class", "new-button", 3, "ngClass", "triTooltip", "triTooltipPosition", "triTooltipMaxWidth", "disabled", "click", 4, "ngIf" ], [ 1, "subfolder-picker-input-fields" ], [ "class", "subfolder-picker-input-field", 4, "ngIf" ], [ 1, "message-bar-container" ], [ 3, "viewModel", "hideMessageBar" ], [ "tri-button", "", "data-testid", "new-button", 1, "new-button", 3, "ngClass", "triTooltip", "triTooltipPosition", "triTooltipMaxWidth", "disabled", "click" ], [ "name", "folder_add_20_regular" ], [ 1, "subfolder-picker-input-field" ], [ 1, "subfolder-picker-input-label-container" ], [ "for", "semanticInput", 1, "semantic-input-label", "subfolder-picker-input-label", "tri-body1" ], [ "id", "semanticInput", "type", "text", 1, "semantic-input-box", "tri-body1", 3, "ngModel", "placeholder", "ngModelChange" ], [ "for", "taskSelector", 1, "task-selector-label", "subfolder-picker-input-label", "tri-body1" ], [ "class", "task-selector-info-icon", "name", "info_16_regular", "tri-svg-icon-16", "", 3, "triTooltip", 4, "ngIf" ], [ "id", "taskSelector", 1, "task-selector", 3, "selectedTask", "tasks", "selectedTaskChange" ], [ "name", "info_16_regular", "tri-svg-icon-16", "", 1, "task-selector-info-icon", 3, "triTooltip" ], [ 1, "confirm-button-tooltip" ] ],
                template: function(rf, ctx) {
                    if (1 & rf && (core["\u0275\u0275projectionDef"](subfolder_picker_component_c3), 
                    core["\u0275\u0275elementStart"](0, "header")(1, "div", 0)(2, "h1", 1), core["\u0275\u0275text"](3), 
                    core["\u0275\u0275elementEnd"]()()(), core["\u0275\u0275elementStart"](4, "div", 2), 
                    core["\u0275\u0275pipe"](5, "async"), core["\u0275\u0275template"](6, TriSubfolderPickerComponent_div_6_Template, 2, 0, "div", 3), 
                    core["\u0275\u0275pipe"](7, "async"), core["\u0275\u0275elementStart"](8, "main"), 
                    core["\u0275\u0275template"](9, TriSubfolderPickerComponent_div_9_Template, 14, 19, "div", 4), 
                    core["\u0275\u0275pipe"](10, "async"), core["\u0275\u0275elementStart"](11, "mat-dialog-actions")(12, "button", 5), 
                    core["\u0275\u0275listener"]("click", function() {
                        return ctx.onConfirmClick();
                    }), core["\u0275\u0275pipe"](13, "async"), core["\u0275\u0275pipe"](14, "async"), 
                    core["\u0275\u0275text"](15), core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](16, TriSubfolderPickerComponent_ng_template_16_Template, 3, 3, "ng-template", null, 6, core["\u0275\u0275templateRefExtractor"]), 
                    core["\u0275\u0275elementStart"](18, "button", 7), core["\u0275\u0275listener"]("click", function() {
                        return ctx.onCancelClick();
                    }), core["\u0275\u0275text"](19), core["\u0275\u0275pipe"](20, "localize"), core["\u0275\u0275elementEnd"]()()()()), 
                    2 & rf) {
                        var tmp_4_0, tmp_8_0, _r2 = core["\u0275\u0275reference"](17);
                        core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](ctx.data.title), 
                        core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngClass", core["\u0275\u0275pipeBind1"](5, 11, ctx.compactMode$) ? "compact" : "standard"), 
                        core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](7, 13, ctx.showWorkspaceList$)), 
                        core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](10, 15, ctx.showContent$)), 
                        core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("triTooltip", null != (tmp_4_0 = core["\u0275\u0275pipeBind1"](13, 17, ctx.confirmButtonStatus$)) && tmp_4_0.tooltip ? _r2 : void 0)("triTooltipPosition", "before")("triTooltipCaretSize", "small")("triTooltipMaxWidth", 200)("disabled", null == (tmp_8_0 = core["\u0275\u0275pipeBind1"](14, 19, ctx.confirmButtonStatus$)) ? null : tmp_8_0.disabled), 
                        core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate1"]("", ctx.data.confirmButtonText, " "), 
                        core["\u0275\u0275advance"](4), core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](20, 21, "ModalDialog_Cancel"));
                    }
                },
                dependencies: [ common.NgClass, common.NgIf, common.NgStyle, fesm2022_forms.Fj, fesm2022_forms.JJ, fesm2022_forms.On, dialog.uh, dialog.xY, dialog.H8, subfolder_breadcrumbs_component.q, TaskSelectorMenuComponent, tri_message_bar_component.h, tri_svg_icon_component.M, tri_tooltip_directive.Z, common.AsyncPipe, src_localize_pipe.Y ],
                styles: [ ".cdk-overlay-pane.subfolder-picker{border-radius:var(--global-corner-radius-extralarge)}[_nghost-%COMP%]{display:flex;flex-direction:column;align-items:flex-start;padding:24px 0;background:var(--colorNeutralBackground1);box-shadow:var(--shadow64);border-radius:var(--global-corner-radius-extralarge)}header[_ngcontent-%COMP%]{display:flex;margin:0 24px 8px}.mat-mdc-dialog-title[_ngcontent-%COMP%]{margin:0;padding:0}.mat-mdc-dialog-title[_ngcontent-%COMP%]:before{display:none}.title[_ngcontent-%COMP%]{color:var(--colorNeutralForeground1);margin:0}.container[_ngcontent-%COMP%]{width:calc(100% - 48px);padding:0 24px;display:flex;gap:24px}.container.compact[_ngcontent-%COMP%]{flex-direction:column}.workspace-list[_ngcontent-%COMP%]{flex:1 1 auto;display:flex}main[_ngcontent-%COMP%]{width:100%;display:flex;flex-direction:column}.container.standard[_ngcontent-%COMP%]   .workspace-list[_ngcontent-%COMP%] + main[_ngcontent-%COMP%]{width:calc(100% - 316px)}.content[_ngcontent-%COMP%]{flex:1 1 auto;display:flex;flex-direction:column}.message-bar-container[_ngcontent-%COMP%]{margin-bottom:8px}.subfolder-nav[_ngcontent-%COMP%]{height:32px;box-sizing:border-box;width:100%;display:flex;gap:8px}.subfolder-nav-actions[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;gap:4px;margin-right:8px}.new-button.compact-new-button[_ngcontent-%COMP%]{padding:0 6px}.new-button.compact-new-button[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{display:none}tri-subfolder-breadcrumbs[_ngcontent-%COMP%]{flex-grow:1}.mat-mdc-dialog-content[_ngcontent-%COMP%]{box-sizing:border-box;width:100%;height:400px;display:flex;flex-direction:column;gap:8px;margin:16px 0 8px;padding:0}.subfolder-picker-input-fields[_ngcontent-%COMP%]{display:flex;gap:8px;flex-direction:column}.subfolder-picker-input-field[_ngcontent-%COMP%]{display:flex;gap:12px;flex-direction:row}.subfolder-picker-input-label-container[_ngcontent-%COMP%]{width:140px;display:flex;align-items:center}.subfolder-picker-input-label[_ngcontent-%COMP%]{font-weight:var(--fontWeightSemibold);color:var(--colorNeutralForeground1);overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.semantic-input-box[_ngcontent-%COMP%]{padding:5px 10px;box-sizing:border-box;border:1px solid var(--colorNeutralStroke1);border-radius:4px;border-bottom-color:var(--colorNeutralStrokeAccessible);flex-grow:1}.semantic-input-box[_ngcontent-%COMP%]:hover{border:1px solid var(--colorNeutralStroke1Hover);border-bottom-color:var(--colorNeutralStrokeAccessible)}.semantic-input-box[_ngcontent-%COMP%]:focus-visible{outline:none;border:1px solid var(--colorNeutralStroke1Hover);border-bottom:2px solid var(--colorBrandStroke1)}.semantic-input-box[_ngcontent-%COMP%]::placeholder{font-family:var(--fontFamilyBase);font-weight:var(--fontWeightRegular);font-size:var(--fontSizeBase300);line-height:var(--lineHeightBase300);color:var(--colorNeutralForeground4)}.task-selector-info-icon[_ngcontent-%COMP%]{fill:var(--colorNeutralForeground3);margin-left:4px}.mat-mdc-dialog-actions[_ngcontent-%COMP%]{box-sizing:border-box;width:100%;min-height:0px;display:flex;justify-content:flex-end;gap:10px;padding:0}.confirm-button-tooltip[_ngcontent-%COMP%]{white-space:pre-wrap}" ],
                changeDetection: 0
            }), TriSubfolderPickerComponent;
        }(), collections = __webpack_require__(77445), Subscription = __webpack_require__(34763), core_reducers = __webpack_require__(28039);
        function owner_name_getOwnerFullname(ownerInfo, fallbackToEmail, isStrictFullNameRequired) {
            if (ownerInfo) return ownerInfo.givenName ? ownerInfo.familyName ? ownerInfo.givenName + " " + ownerInfo.familyName : isStrictFullNameRequired ? void 0 : ownerInfo.givenName : fallbackToEmail && !isStrictFullNameRequired ? ownerInfo.emailAddress : void 0;
        }
        var state_a, getCdsaModelsState = (0, ngrx_store.ZF)("cdsaModels"), cdsaModelAdapter = (0, 
        ngrx_entity.H)({
            selectId: function(cdsaModel) {
                return cdsa_model_uniqueId(cdsaModel);
            },
            sortComparer: !1
        }), cdsa_model_selector_selectEntities = cdsaModelAdapter.getSelectors().selectEntities, getById = (0, 
        ngrx_store.P1)(cdsa_model_selector_selectEntities, function(entities, props) {
            return entities[props.id];
        }), getCdsaModelEntities = (cdsa_model_selector_a = cdsaModelAdapter.getSelectors(getCdsaModelsState)).selectEntities, getAllCdsaModels = cdsa_model_selector_a.selectAll, getCdsaModelById = (0, 
        ngrx_store.P1)(getCdsaModelsState, getById), getSelectedCdsaModelId = (0, ngrx_store.P1)(getCdsaModelsState, function(state) {
            return state.selectedCdsaModelId;
        }), getSelectedCdsaModel = (0, ngrx_store.P1)(getCdsaModelEntities, getSelectedCdsaModelId, function(entities, selectedId) {
            return selectedId && entities[selectedId];
        }), getSelectedCdsaModelRefreshStatus = (0, ngrx_store.P1)(getSelectedCdsaModel, function(entity) {
            return entity && entity.currentRefreshStatus;
        }), cdsa_model_selector_getSelectedStreamingDataflow = ((0, ngrx_store.P1)(getSelectedCdsaModelRefreshStatus, function(status) {
            return status && 4 === status || 15 === status;
        }), (0, ngrx_store.P1)(getCdsaModelEntities, getSelectedCdsaModelId, function(entities, selectedId) {
            return selectedId && isStreamingDataflow(entities[selectedId]) && entities[selectedId];
        })), data_artifact_src = ((0, ngrx_store.P1)(getCdsaModelById, function(entity) {
            return entity && entity.ownerUser.userPrincipalName;
        }), (0, ngrx_store.P1)(cdsa_model_selector_getSelectedStreamingDataflow, function(entity) {
            return entity && entity.ownerUser.userPrincipalName;
        }), (0, ngrx_store.P1)(getAllCdsaModels, function(cdsaModels, id) {
            return id ? _.find(cdsaModels, function(cdsaModel) {
                return cdsaModel.id === id;
            }) : null;
        }), __webpack_require__(25082)), initialMetricState = (0, ngrx_entity.H)().getInitialState({
            selectedMetricId: null
        }), initialMetricSetState = (0, ngrx_entity.H)({
            selectId: function(metricSet) {
                return metricSet.objectId;
            }
        }).getInitialState({
            selectedMetrichubArtifactId: null,
            metricSetGroupIdMap: {},
            showDuplicateNameError: !1,
            isNewMetricSet: !1
        }), selectMetricSets = ((state_a = {}).metric = initialMetricState, state_a.metricSet = initialMetricSetState, 
        (0, ngrx_store.ZF)("metricSet")), selectMetrichubArtifactId = (0, ngrx_store.P1)(selectMetricSets, function(state) {
            return state.selectMetrichubArtifactId;
        }), getSelectedMetrichubArtifact = (0, ngrx_store.P1)(selectMetricSets, selectMetrichubArtifactId, function(state, selectMetrichubArtifactId) {
            return _.find(state.entities, function(metricSet) {
                return metricSet.objectId === selectMetrichubArtifactId;
            });
        }), datamartListDateTimeFormat = ((0, ngrx_store.P1)(selectMetricSets, function(metricState) {
            return metricState.metricSetGroupIdMap;
        }), (0, ngrx_store.P1)(selectMetricSets, function(state) {
            return state.showDuplicateNameError;
        }), (0, ngrx_store.P1)(selectMetricSets, function(state) {
            return state.isNewMetricSet;
        }), {
            year: "2-digit",
            month: "numeric",
            day: "numeric",
            hour: "numeric",
            minute: "numeric",
            second: "numeric"
        });
        function createDashboardArtifactInfo(dashboard) {
            if (dashboard) {
                var ownerInfo = owner_name_getOwnerFullname(dashboard.ownerInfo);
                return {
                    artifactId: dashboard.id,
                    artifactObjectId: dashboard.objectId,
                    artifactType: artifact_type.B.Dashboard,
                    folderId: dashboard.folderId,
                    title: dashboard.displayName,
                    ownerName: ownerInfo,
                    ownerEmail: dashboard.ownerInfo && dashboard.ownerInfo.emailAddress,
                    ownerGroupObjectId: dashboard.ownerInfo && dashboard.ownerInfo.groupObjectId,
                    isFromOrgContentProvider: (0, StandaloneUtility3.yE)(dashboard.permissions, 17),
                    contract: dashboard
                };
            }
        }
        (0, ngrx_store.P1)(dashboard_selector.W$, function(selectedDashboard) {
            return createDashboardArtifactInfo(selectedDashboard);
        }), (0, ngrx_store.P1)(datamart_metadata_selector.JJ, function(selectedDatamart) {
            return selectedDatamart && {
                title: selectedDatamart.displayName || selectedDatamart.name
            };
        }), (0, ngrx_store.P1)(datamart_metadata_selector.JJ, core_reducers.nU, function(selectedDatamart, datamartEndorsementEntities) {
            var datamart, artifactEndorsement;
            if (selectedDatamart) return artifactEndorsement = datamartEndorsementEntities[selectedDatamart.objectId], 
            (0, tslib_es6.__assign)((0, tslib_es6.__assign)({
                title: (datamart = selectedDatamart).displayName || datamart.name,
                artifactObjectId: datamart.objectId,
                artifactId: datamart.id,
                artifactType: artifact_type.B.Datamart,
                folderId: datamart.folderId,
                ownerName: datamart.ownerUser ? (0, userInfoHelper.P)(datamart.ownerUser.givenName, datamart.ownerUser.familyName, datamart.ownerUser.emailAddress) : "",
                isFromOrgContentProvider: !1
            }, artifactEndorsement && {
                artifactEndorsement
            }), {
                lastRefreshDate: (0, modelConverterHelper.A7)("/Date(".concat(new Date(datamart.lastRefreshTimeUTC).getTime(), ")/"), {
                    format: datamartListDateTimeFormat
                }),
                lastRefreshDateTime: (0, modelConverterHelper.A7)("/Date(".concat(new Date(datamart.lastRefreshTimeUTC).getTime(), ")/"), {
                    format: datamartListDateTimeFormat
                }),
                description: datamart.description,
                contract: datamart
            });
        }), (0, ngrx_store.P1)(getSelectedCdsaModel, function(selectedDataflow) {
            return function(dataflow) {
                if (dataflow) return {
                    title: dataflow.displayName,
                    artifactId: dataflow.id,
                    artifactObjectId: dataflow.objectId,
                    artifactType: artifact_type.B.Dataflow,
                    folderId: dataflow.folderId,
                    ownerName: dataflow.ownerUser.givenName,
                    ownerEmail: dataflow.ownerUser.givenName && dataflow.ownerUser.userPrincipalName,
                    isFromOrgContentProvider: !1,
                    contract: dataflow
                };
            }(selectedDataflow);
        }), (0, ngrx_store.P1)(data_artifact_src.bC, core_reducers.x0, function(selectedArtifact, tridentArtifactEndorsements) {
            return selectedArtifact && function(tridentArtifact, artifactEndorsement) {
                var _a, _b;
                return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({
                    title: tridentArtifact.displayName,
                    artifactId: void 0,
                    artifactObjectId: tridentArtifact.objectId,
                    artifactType: artifact_type.B.Artifact,
                    ownerName: null === (_a = tridentArtifact.ownerUser) || void 0 === _a ? void 0 : _a.name,
                    creatorUPN: null === (_b = tridentArtifact.createdByUser) || void 0 === _b ? void 0 : _b.userPrincipalName,
                    description: tridentArtifact.description,
                    isFromOrgContentProvider: !1
                }, artifactEndorsement && {
                    artifactEndorsement
                }), {
                    contract: tridentArtifact
                });
            }(selectedArtifact, tridentArtifactEndorsements[selectedArtifact.objectId]);
        }), (0, ngrx_store.P1)(getSelectedMetrichubArtifact, function(selectedMetricSetArtifact) {
            if (selectedMetricSetArtifact) return function(metricSet) {
                var _a, _b;
                return {
                    title: metricSet.displayName,
                    artifactId: void 0,
                    artifactObjectId: null == metricSet ? void 0 : metricSet.objectId,
                    artifactType: artifact_type.B.Artifact,
                    ownerName: null === (_a = null == metricSet ? void 0 : metricSet.ownerUser) || void 0 === _a ? void 0 : _a.name,
                    creatorUPN: null === (_b = null == metricSet ? void 0 : metricSet.createdByUser) || void 0 === _b ? void 0 : _b.userPrincipalName,
                    description: null == metricSet ? void 0 : metricSet.description,
                    isFromOrgContentProvider: !1,
                    contract: {
                        objectId: null == metricSet ? void 0 : metricSet.objectId,
                        artifactType: "MetricSet",
                        displayName: null == metricSet ? void 0 : metricSet.displayName,
                        description: null == metricSet ? void 0 : metricSet.description,
                        folderObjectId: null == metricSet ? void 0 : metricSet.folderObjectId,
                        provisionState: null == metricSet ? void 0 : metricSet.provisionState,
                        lastUpdatedDate: null == metricSet ? void 0 : metricSet.lastUpdatedDate,
                        capacityObjectId: null == metricSet ? void 0 : metricSet.capacityObjectId
                    }
                };
            }(selectedMetricSetArtifact);
        });
        var groups_a, artifact_endorsement_utils_a, artifact_endorsement_utils_b, _c, _d, _e, dataset_selector = __webpack_require__(18405), InformationProtection_reducers = __webpack_require__(84836), getSelectedDatamartIds = (0, 
        ngrx_store.P1)(group_selector.ey, function(group) {
            return group ? group.datamartIds : [];
        }), buildDatamarts = ((0, ngrx_store.P1)(group_selector.VL, datamart_metadata_selector.WZ, function(group, datamarts) {
            return group && _.map(group.datamartIds, function(datamartId) {
                return datamarts[datamartId];
            });
        }), function(datamarts, ids, datamartInformationProtections, datamartArtifactEndorsements) {
            return (ids || []).map(function(id) {
                return datamarts[id];
            }).filter(function(datamart) {
                return null != datamart;
            }).map(function(datamart) {
                return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, datamart), {
                    artifactInformationProtection: datamartInformationProtections[datamart.objectId],
                    artifactEndorsement: datamartArtifactEndorsements[datamart.objectId]
                });
            });
        }), getSelectedGroupDatamartIds = (0, ngrx_store.P1)(group_selector.LD, getSelectedDatamartIds), getSelectedGroupDatamarts = (0, 
        ngrx_store.P1)(datamart_metadata_selector.WZ, getSelectedGroupDatamartIds, InformationProtection_reducers.xZ, core_reducers.nU, buildDatamarts), getSelectedCdsaModelIds = (0, 
        ngrx_store.P1)(group_selector.ey, function(group) {
            return group ? group.cdsaModelIds : [];
        }), getSelectedGroupCdsaModelIds = (0, ngrx_store.P1)(group_selector.LD, getSelectedCdsaModelIds), buildCdsaModels = function(cdsaModels, ids, informationProtections, artifactEndorsements) {
            var groupCdsaModels = _.map(ids, function(id) {
                return cdsaModels[id];
            });
            return _.map(groupCdsaModels, function(cm) {
                var _a;
                cm && (cm.artifactInformationProtection = informationProtections[cm.id], cm.artifactEndorsement = artifactEndorsements[cm.id], 
                cm.stage = null === (_a = cm.artifactEndorsement) || void 0 === _a ? void 0 : _a.stage);
            }), groupCdsaModels.filter(function(cm) {
                return !!cm;
            });
        }, getSelectedGroupCdsaModels = (0, ngrx_store.P1)(getCdsaModelEntities, getSelectedGroupCdsaModelIds, InformationProtection_reducers.hi, core_reducers.Ep, buildCdsaModels), content_pack_selector = __webpack_require__(9562);
        function lookupKeyById(datasetId) {
            return String(datasetId);
        }
        function hasDlpPolicyTip(artifact) {
            return !_.isNil(artifact) && !_.isNil(artifact.dlpPolicyTip);
        }
        dataset_selector.GM.getInitialState({
            selectedDatasetId: null,
            sharedDatasetsLoadedForCurrentWorkspace: !1,
            readonlySharedDatasetsLoaded: !1
        }), group_selector.EO.getInitialState({
            selectedGroupId: null,
            adminWorkspaceFolderId: null,
            myFolderObjectId: null,
            entities: (groups_a = {}, groups_a[Common.fm] = (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, {
                loaded: !1,
                loading: !1,
                loadedWithError: !1,
                isStale: !1,
                isStub: !1,
                isFolder: !1,
                dashboardIds: [],
                reportIds: [],
                workbookIds: [],
                datasetIds: [],
                cdsaModelIds: [],
                datamartIds: [],
                subfolderIds: void 0,
                displayName: void 0,
                objectId: void 0,
                permissions: void 0
            }), {
                objectId: Common.fm,
                isMyWorkspace: !0
            }), groups_a),
            ids: [ Common.fm ],
            initialMetadataLoaded: !1,
            loading: !0,
            loaded: !1,
            loadedWithError: !1,
            areFolderArtifactsLoaded: !1,
            domainFilters: []
        }), (artifact_endorsement_utils_a = {
            LearnMoreLink: "https://go.microsoft.com/fwlink/?linkid=2128124",
            Description: "SettingsDataflow_Endorsement_DiscoverText_New",
            CertifyDescription: "SettingsDataflow_Endorsement_Certify_Action_Description",
            HowToCertify: "SettingsDataflow_Endorsement_Certified_LearnMore",
            HowToMasterData: "SettingsDataflow_Endorsement_MasterData_LearnMore",
            HowToCertifyLink: "https://go.microsoft.com/fwlink/?linkid=2132725",
            DeCertifyWarning: "SettingsDataflow_Endorsement_DeCertifyWarning"
        })[index_core.pW.None] = "SettingsDataflow_Endorsement_None_Description", artifact_endorsement_utils_a[index_core.pW.Promoted] = "SettingsDataflow_Endorsement_Promoted_Description_New", 
        (artifact_endorsement_utils_b = {
            LearnMoreLink: "https://go.microsoft.com/fwlink/?linkid=2128124",
            Description: "SettingsDataset_Properties_DiscoverText_New",
            CertifyDescription: "SettingsDataset_Endorsement_Certify_Action_Description",
            CertifyMasterDataDescription: "SettingsDataset_Endorsement_Certify_Action_Description_MasterData",
            HowToCertify: "SettingsDataset_Endorsement_Certified_LearnMore",
            HowToMasterData: "SettingsDataset_Endorsement_MasterData_LearnMore",
            HowToCertifyLink: "https://go.microsoft.com/fwlink/?linkid=2132725",
            DeCertifyWarning: "SettingsDataset_Properties_Endorsement_DeCertifyWarning",
            DeCertifyMasterDataWarning: "SettingsDataset_Properties_Endorsement_DeCertifyMasterDataWarning"
        })[index_core.pW.None] = "SettingsDataset_Properties_Endorsement_None_Description", 
        artifact_endorsement_utils_b[index_core.pW.Promoted] = "SettingsDataset_Properties_Endorsement_Promoted_Description_New", 
        artifact_endorsement_utils_b[index_core.pW.MasterData] = "SettingsArtifact_Endorsement_MasterData", 
        (_c = {
            LearnMoreLink: "https://go.microsoft.com/fwlink/?linkid=2128124",
            Description: "SettingsReport_Endorsement_Description",
            CertifyDescription: "SettingsReport_Certify_Action_Description",
            HowToCertify: "SettingsReport_Certify_LearnMore",
            HowToMasterData: "SettingsReport_MasterData_LearnMore",
            HowToCertifyLink: "https://go.microsoft.com/fwlink/?linkid=2132725",
            DeCertifyWarning: "SettingsReport_Endorsement_DeCertifyWarning"
        })[index_core.pW.None] = "SettingsReport_Endorsement_Standard", _c[index_core.pW.Promoted] = "SettingsReport_Endorsement_Promoted", 
        (_d = {
            LearnMoreLink: "https://go.microsoft.com/fwlink/?linkid=2128124",
            Description: "SettingsApp_Endorsement_DiscoverText",
            CertifyDescription: "SettingsApp_Endorsement_Certify_Action_Description",
            HowToCertify: "SettingsApp_Endorsement_Certified_LearnMore",
            HowToMasterData: "SettingsApp_Endorsement_MasterData_LearnMore",
            HowToCertifyLink: "https://go.microsoft.com/fwlink/?linkid=2132725",
            DeCertifyWarning: "SettingsApp_Endorsement_DeCertifyWarning"
        })[index_core.pW.None] = "SettingsApp_Endorsement_None_Description", _d[index_core.pW.Promoted] = "SettingsApp_Endorsement_Promoted_Description", 
        (_e = {
            LearnMoreLink: "https://go.microsoft.com/fwlink/?linkid=2128124",
            Description: "SettingsDatamart_Endorsement_DiscoverText_New",
            CertifyDescription: "SettingsDatamart_Endorsement_Certify_Action_Description",
            CertifyMasterDataDescription: "SettingsDatamart_Endorsement_Certify_Action_Description_MasterData",
            HowToCertify: "SettingsDatamart_Endorsement_Certified_LearnMore",
            HowToMasterData: "SettingsDatamart_Endorsement_MasterData_LearnMore",
            HowToCertifyLink: "https://go.microsoft.com/fwlink/?linkid=2132725",
            DeCertifyWarning: "SettingsDatamart_Endorsement_DeCertifyWarning",
            DeCertifyMasterDataWarning: "SettingsDatamart_Endorsement_DeCertifyMasterDataWarning"
        })[index_core.pW.None] = "SettingsDatamart_Endorsement_None_Description", _e[index_core.pW.Promoted] = "SettingsDatamart_Endorsement_Promoted_Description_New", 
        _e[index_core.pW.MasterData] = "SettingsArtifact_Endorsement_MasterData";
        var sort_utils = __webpack_require__(56894);
        function canReshare(permission) {
            return (0, StandaloneUtility3.yE)(permission, 6);
        }
        var data_access_common_artifact_src = __webpack_require__(9027), rxjs_helper = __webpack_require__(59844), trial_src = __webpack_require__(33025);
        function gen1DataflowRoutePath(cdsaModel) {
            var groupId = cdsaModel.groupId, objectId = cdsaModel.objectId, dataflowPath = isStreamingDataflow(cdsaModel) ? "streaming-dataflow" : "dataflows";
            return "/groups/".concat(groupId, "/").concat(dataflowPath, "/").concat(objectId);
        }
        function routePath(dashboard) {
            return "/groups/" + (dashboard.groupId || "me") + "/dashboards/" + dashboard.objectId;
        }
        function datamarts_data_source_routePath(datamart, isPremiumWorkspace) {
            var datamartType = datamart.datamartType, groupId = datamart.groupId, objectId = datamart.objectId, status = datamart.status, isDatamartClickable = (isDatamartAvailable(status) || 2 === status) && isPremiumWorkspace, routePathByDatamartType = "/groups/".concat(groupId, "/").concat((0, 
            utils.LC)(datamartType), "/").concat(objectId);
            return isDatamartClickable ? routePathByDatamartType : void 0;
        }
        function datasets_data_source_routePath(dataSet, selectedGroupId) {
            return dataSet.dbName ? "/groups/" + selectedGroupId + "/datasets/" + dataSet.dbName + "/details" : "";
        }
        function createContentListDataset(dataset) {
            return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, dataset), {
                contentTileType: contracts.ty.Dataset,
                getPermissions: function() {
                    return dataset.permissions;
                },
                contract: dataset,
                displayName: dataset.displayName || ""
            });
        }
        function reports_data_source_ownerDisplayName(report) {
            return owner_name_getOwnerFullname(report.ownerInfo, !0, !0) || report.ownerFullname || owner_name_getOwnerFullname(report.ownerInfo, !0, !1) || "";
        }
        function reports_data_source_routePath(report) {
            var reports = report.contentTileType === contracts.ty.RdlReport ? "rdlreports" : "reports";
            return "/groups/".concat(report.groupId || "me", "/").concat(reports, "/").concat(report.objectId);
        }
        function createContentListReport(report, groupId, expandedWarnings) {
            var uniqueId = (0, helpers_report.EL)(report);
            return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, report), {
                contract: report,
                contentTileType: 1 === report.reportType ? contracts.ty.RdlReport : contracts.ty.Report,
                getPermissions: function() {
                    return report.permissions;
                },
                isOwner: function() {
                    return !(7 & ~report.permissions);
                },
                groupId,
                isExpanded: expandedWarnings && expandedWarnings.has(uniqueId),
                displayName: report.displayName || "",
                uniqueId
            });
        }
        function workbooks_data_source_routePath(workbook) {
            return "/groups/" + (workbook.groupId || "me") + "/workbooks/" + (0, helpers_workbook.E)(workbook);
        }
        function getWorkbookActionUrl(workbookContract, action) {
            return workbookContract.webUri && workbookContract.etagHash ? workbookContract.webUri + "/_layouts/WopiFrame.aspx?sourcedoc={" + workbookContract.etagHash + "}&action=" + action : "";
        }
        var fluentListDateTimeFormat = {
            year: "2-digit",
            month: "numeric",
            day: "numeric",
            hour: "numeric",
            minute: "numeric",
            second: "numeric"
        }, generic_workspace_data_source_commonGlobals = window, GenericWorkspaceDataSource = function(_super) {
            function GenericWorkspaceDataSource(fluentListFilterService, store, localizationService, lazyProvider, featureSwitchService, telemetryService, usageMetricsReport, extensionManifestService, subfolderContextService, subfolderFacade, multiSelectionService, tridentFluentListItemService, workspaceContext, selectedWorkspaceObjectId$, selectedSubfolderId$, options, trialCapacityMetadataService, tagsRepository) {
                var _this = _super.call(this) || this;
                return _this.fluentListFilterService = fluentListFilterService, _this.store = store, 
                _this.localizationService = localizationService, _this.lazyProvider = lazyProvider, 
                _this.featureSwitchService = featureSwitchService, _this.telemetryService = telemetryService, 
                _this.usageMetricsReport = usageMetricsReport, _this.extensionManifestService = extensionManifestService, 
                _this.subfolderContextService = subfolderContextService, _this.subfolderFacade = subfolderFacade, 
                _this.multiSelectionService = multiSelectionService, _this.tridentFluentListItemService = tridentFluentListItemService, 
                _this.workspaceContext = workspaceContext, _this.selectedWorkspaceObjectId$ = selectedWorkspaceObjectId$, 
                _this.selectedSubfolderId$ = selectedSubfolderId$, _this.options = options, _this.trialCapacityMetadataService = trialCapacityMetadataService, 
                _this.tagsRepository = tagsRepository, _this.destroy$ = new Subject.xQ, _this.dataOfEntireWorkspaceSubscription = Subscription.w.EMPTY, 
                _this.dataOfCurrentAndSubfoldersSubscription = Subscription.w.EMPTY, _this.dataSubscription = Subscription.w.EMPTY, 
                _this.dataOfEntireWorkspace = [], _this.dataOfCurrentAndSubfolders = [], _this.currentWorkspaceObjectId = "", 
                _this.sortingDataAccessor = function(data, sortHeaderId) {
                    var _a, _b, _c, _d, _e;
                    switch (sortHeaderId) {
                      case "name":
                        return null === (_a = data.displayName) || void 0 === _a ? void 0 : _a.toLocaleLowerCase();

                      case "location":
                        return null === (_b = data.location) || void 0 === _b ? void 0 : _b.toLocaleLowerCase();

                      case "type":
                        return null === (_c = data.typeName) || void 0 === _c ? void 0 : _c.toLocaleLowerCase();

                      case "owner":
                        return null === (_d = data.owner) || void 0 === _d ? void 0 : _d.toLocaleLowerCase();

                      case "last-refresh":
                        return data.lastRefreshDate && data.lastRefreshDate.getTime();

                      case "next-refresh":
                        return data.nextRefreshDate && data.nextRefreshDate.getTime();

                      case "includeInApp":
                        return data.isSelectableAppArtifact ? data.canToggleSelection ? (null === (_e = data.contract) || void 0 === _e ? void 0 : _e.isStaging) ? 1 : 3 : 2 : 0;

                      case "Sensitivity":
                        return (0, sort_utils.s4)(data.artifactInformationProtection);

                      case "endorsement":
                        return function(data) {
                            var _a;
                            switch (null === (_a = data.endorsement) || void 0 === _a ? void 0 : _a.stage) {
                              case index_core.X_.MasterData:
                                return "a";

                              case index_core.X_.Certified:
                                return "b";

                              case index_core.X_.Promoted:
                                return "c";

                              default:
                                return "d";
                            }
                        }(data);

                      case "task":
                        return _this.getTaskOrderBy(data);

                      default:
                        (0, Common.sr)("unsupported sort header id: ".concat(sortHeaderId));
                    }
                }, _this.sortData = function(data, sort) {
                    var active = sort.active, direction = sort.direction;
                    if (!active || "" === direction) return generic_workspace_data_source_commonGlobals.isTrident && _this.featureSwitchService.featureSwitches.parentChildInWorkspace ? _this.makeParentFollowedByChild(data) : data;
                    var sortedData = data.sort(function(a, b) {
                        var valueA = _this.sortingDataAccessor(a, active), valueB = _this.sortingDataAccessor(b, active);
                        if (16 === a.type && 16 !== b.type) return -1;
                        if (16 !== a.type && 16 === b.type) return 1;
                        var valueAType = typeof valueA, valueBType = typeof valueB;
                        valueAType !== valueBType && ("number" === valueAType && (valueA += ""), "number" === valueBType && (valueB += ""));
                        var comparatorResult = 0;
                        return null != valueA && null != valueB ? valueA > valueB ? comparatorResult = 1 : valueA < valueB && (comparatorResult = -1) : null != valueA ? comparatorResult = 1 : null != valueB && (comparatorResult = -1), 
                        comparatorResult * ("asc" === direction ? 1 : -1);
                    });
                    return generic_workspace_data_source_commonGlobals.isTrident && _this.featureSwitchService.featureSwitches.parentChildInWorkspace ? _this.makeParentFollowedByChild(sortedData) : sortedData;
                }, _this.filterPredicate = function(item, filters) {
                    var parsedFilters = new Map(JSON.parse(filters));
                    if (_.isEmpty(parsedFilters)) return !0;
                    if (generic_workspace_data_source_commonGlobals.isTrident && _this.featureSwitchService.featureSwitches.parentChildInWorkspace) {
                        for (var parent_1 = item.parentUniqueId ? _this.data.find(function(data) {
                            return data.uniqueId === item.parentUniqueId;
                        }) : item, children = item.isParent ? _this.data.filter(function(data) {
                            return data.parentUniqueId === item.uniqueId;
                        }) : item.parentUniqueId ? _this.data.filter(function(data) {
                            return item.parentUniqueId === data.parentUniqueId;
                        }) : [], _i = 0, _a = (0, tslib_es6.__spreadArray)([ parent_1 ], children, !0); _i < _a.length; _i++) {
                            var item_1 = _a[_i];
                            if (item_1 && _this.filterFunction(item_1, parsedFilters)) return !0;
                        }
                        return !1;
                    }
                    return _this.filterFunction(item, parsedFilters);
                }, _this.init(), _this;
            }
            return (0, tslib_es6.__extends)(GenericWorkspaceDataSource, _super), GenericWorkspaceDataSource.prototype.filterFunction = function(item, parsedFilters) {
                return Array.from(parsedFilters.keys()).map(function(column) {
                    var _a, _b, _c, _d, filterValue = parsedFilters.get(column);
                    if (null === filterValue) return !0;
                    var columnValue = item[column];
                    switch (column) {
                      case "name":
                        return !filterValue || (null === (_a = item.displayName) || void 0 === _a ? void 0 : _a.toLocaleLowerCase().indexOf(filterValue.toLocaleLowerCase())) > -1 || (null === (_b = item.owner) || void 0 === _b ? void 0 : _b.toLocaleLowerCase().indexOf(filterValue.toLocaleLowerCase())) > -1;

                      case "type":
                        return function(filterValues, item) {
                            var columnValue = 8 === item.type && item.isStreaming ? 9 : item.type;
                            return 0 === filterValues.length || filterValues.some(function(filterValue) {
                                return isTridentArtifactType(filterValue) && item.triType ? filterValue === item.triType : filterValue === columnValue;
                            });
                        }(filterValue, item);

                      case "owner":
                        return 0 === filterValue.length || -1 !== filterValue.indexOf(columnValue);

                      case "includeInApp":
                        return item.isSelectableAppArtifact && !!item.canToggleSelection && !(null === (_c = item.contract) || void 0 === _c ? void 0 : _c.isStaging) === filterValue;

                      case "last-refresh":
                      case "next-refresh":
                        return !!columnValue && columnValue.valueOf() >= filterValue[0] && columnValue.valueOf() <= filterValue[1];

                      case "task":
                        return null === (_d = item.taskflowTasks) || void 0 === _d ? void 0 : _d.some(function(task) {
                            return task.id === filterValue;
                        });
                    }
                }).reduce(function(acc, curr) {
                    return curr && acc;
                });
            }, GenericWorkspaceDataSource.prototype.ngOnDestroy = function() {
                this.dataOfEntireWorkspaceSubscription.unsubscribe(), this.dataOfCurrentAndSubfoldersSubscription.unsubscribe(), 
                this.dataSubscription.unsubscribe(), this.destroy$.next(), this.destroy$.complete();
            }, GenericWorkspaceDataSource.prototype.init = function() {
                var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _this = this, workspaceRawData$ = this.getWorkspaceRawData(this.selectedWorkspaceObjectId$);
                workspaceRawData$.pipe((0, takeUntil.R)(this.destroy$)).subscribe(function(workspaceRawData) {
                    return _this.currentWorkspaceObjectId = workspaceRawData.workspaceObjectId;
                });
                var tagsMap$ = (null === (_a = this.options) || void 0 === _a ? void 0 : _a.loadTags) && generic_workspace_data_source_commonGlobals.isTrident && this.featureSwitchService.featureSwitches.taggingMain_HEAD_tagging_FE && this.tagsRepository ? workspaceRawData$.pipe((0, 
                distinctUntilChanged.x)(function(_a, _b) {
                    return _a.workspace.workspaceId === _b.workspace.workspaceId;
                }), (0, mergeMap.zg)(function(_a) {
                    var workspace = _a.workspace, workspaceId = workspace.workspaceId || workspace.objectId;
                    return workspaceId ? _this.tagsRepository.getWorkspaceTags(workspaceId).pipe((0, 
                    operators_catchError.K)(function() {
                        return (0, observable_of.of)(null);
                    })) : (0, observable_of.of)(null);
                })) : (0, observable_of.of)(null), dashboards$ = (0, observable_combineLatest.aj)([ workspaceRawData$, this.store.select(group_app_selector.l1) ]).pipe((0, 
                operators_map.U)(function(_a) {
                    var workspaceRawData = _a[0], allowContributorUpdateAppEnabled = _a[1], workspace = workspaceRawData.workspace, app = workspaceRawData.workspacePublishedApp;
                    return _(workspaceRawData.dashboards).filter(function(d) {
                        return !d.isHidden && !_this.isFromUnpublishedApp(d);
                    }).map(function(d) {
                        var dashboard, groupId, uniqueId, listItem = (groupId = workspace.objectId, uniqueId = (0, 
                        helpers_dashboard.E)(dashboard = d), (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, dashboard), {
                            contentTileType: contracts.ty.Dashboard,
                            getPermissions: function() {
                                return dashboard.permissions;
                            },
                            contract: dashboard,
                            groupId,
                            isExpanded: void 0,
                            displayName: dashboard.displayName || "",
                            uniqueId
                        }));
                        return _this.createFluentListItemFromDashboard(listItem, allowContributorUpdateAppEnabled, workspace, app);
                    }).value();
                })), reports$ = (0, observable_combineLatest.aj)([ workspaceRawData$, this.store.select(dataset_selector.vw), this.store.select(group_app_selector.l1), this.store.select(group_selector.iF), this.store.select(package_selector.zu) ]).pipe((0, 
                operators_map.U)(function(_a) {
                    var workspaceRawData = _a[0], allDatasets = _a[1], allowContributorUpdateAppEnabled = _a[2], myFolderObjectId = _a[3], packages = _a[4], workspace = workspaceRawData.workspace, reports = workspaceRawData.reports, app = workspaceRawData.workspacePublishedApp;
                    return _.remove(reports, function(report) {
                        var reportPackageId = null == report ? void 0 : report.packageId, reportPackage = reportPackageId && _.size(packages) ? packages[reportPackageId] : void 0;
                        return !!reportPackage && !(null == reportPackage ? void 0 : reportPackage.serviceAppObjectId) && (null == reportPackage ? void 0 : reportPackage.contentProviderRefId) && !!(null == report ? void 0 : report.originalReportObjectId);
                    }), _(reports).filter(function(r) {
                        return _.isEmpty(myFolderObjectId) || workspace.objectId !== PowerBIContracts_constants.wku ? !r.isHidden && r.workspaceId === workspace.objectId : !r.isHidden && (r.workspaceId === workspace.objectId || r.workspaceId === myFolderObjectId);
                    }).map(function(r) {
                        var listItem = createContentListReport(r, workspace.objectId);
                        return _this.createFluentListItemFromReport(listItem, allDatasets, allowContributorUpdateAppEnabled, workspace, app);
                    }).value();
                })), scorecards$ = (0, observable_combineLatest.aj)([ workspaceRawData$, this.store.select(dataset_selector.vw), this.store.select(group_app_selector.l1) ]).pipe((0, 
                operators_map.U)(function(_a) {
                    var workspaceRawData = _a[0], allDatasets = _a[1], allowContributorUpdateAppEnabled = _a[2], workspace = workspaceRawData.workspace, app = workspaceRawData.workspacePublishedApp;
                    return _(workspaceRawData.scorecards).filter(function(r) {
                        return !r.isHidden;
                    }).map(function(r) {
                        var listItem = createContentListReport(r, workspace.objectId);
                        return _this.createFluentListItemFromScorecard(listItem, allDatasets, allowContributorUpdateAppEnabled, workspace, app);
                    }).value();
                })), workbooks$ = (0, observable_combineLatest.aj)([ workspaceRawData$, this.store.select(package_selector.zu), this.store.select(group_app_selector.l1) ]).pipe((0, 
                operators_map.U)(function(_a) {
                    var workspaceRawData = _a[0], allPackages = _a[1], allowContributorUpdateAppEnabled = _a[2], workspace = workspaceRawData.workspace, contentPacks = workspaceRawData.contentPacks, app = workspaceRawData.workspacePublishedApp, items = function(workbooks, contentPacks) {
                        var workbookIds = _.flatten(_.map(contentPacks, function(cp) {
                            return cp.workbookIds || [];
                        }));
                        return _.map(workbooks, function(workbook) {
                            return workbook.isUsedByContentPack = _.includes(workbookIds, workbook.id), workbook;
                        });
                    }(_(workspaceRawData.workbooks).filter(function(w) {
                        return !w.isHidden;
                    }).map(function(w) {
                        return groupId = workspace.objectId, (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, workbook = w), {
                            contract: workbook,
                            contentTileType: contracts.ty.Workbook,
                            uniqueId: (0, helpers_workbook.E)(workbook),
                            getPermissions: function() {
                                return workbook.permissions;
                            },
                            isOwner: function() {
                                return !(7 & ~workbook.permissions);
                            },
                            groupId,
                            isExpanded: void 0,
                            editUrl: (workbookContract = workbook, getWorkbookActionUrl(workbookContract, "edit")),
                            displayName: workbook.displayName || ""
                        });
                        var workbook, groupId, workbookContract;
                    }).value(), contentPacks);
                    return _.map(items, function(i) {
                        return _this.createFluentListItemFromWorkbook(i, allPackages, allowContributorUpdateAppEnabled, workspace, app);
                    });
                })), datamarts$ = (0, observable_combineLatest.aj)([ workspaceRawData$, this.store.select(core_reducers.nU), null !== (_c = null === (_b = this.trialCapacityMetadataService) || void 0 === _b ? void 0 : _b.userTrialCapacities$) && void 0 !== _c ? _c : (0, 
                observable_of.of)({}) ]).pipe((0, operators_map.U)(function(_a) {
                    var workspaceRawData = _a[0], datamartEndorsements = _a[1], trialCapacityMap = _a[2], workspace = workspaceRawData.workspace, isPremiumWorkspace = workspaceRawData.isPremiumWorkspace;
                    if (_this.featureSwitchService.featureSwitches.datamart) {
                        var datamartsArtifacts = _.filter(workspaceRawData.datamarts, function(datamartTypeArtifact) {
                            return _this.featureSwitchService.featureSwitches.lakehouseModeling || !_this.isLakeWarehouseArtifact(datamartTypeArtifact);
                        });
                        return _.map(datamartsArtifacts, function(datamartArtifact) {
                            var _a;
                            datamartArtifact.stage = null === (_a = datamartEndorsements[datamartArtifact.objectId]) || void 0 === _a ? void 0 : _a.stage;
                            var datamart, groupId, listItem = (groupId = workspace.objectId, (0, tslib_es6.__assign)((0, 
                            tslib_es6.__assign)({}, datamart = datamartArtifact), {
                                contentTileType: contracts.ty.Datamart,
                                contract: datamart,
                                groupId,
                                getPermissions: function() {
                                    return datamart.permissions;
                                },
                                displayName: datamart.displayName || "",
                                ownerUser: datamart.ownerUser
                            }));
                            return _this.createFluentListItemFromDatamart(listItem, null == workspace ? void 0 : workspace.displayName, isPremiumWorkspace, (null == workspace ? void 0 : workspace.capacityObjectId) || "", trialCapacityMap, _this.featureSwitchService.featureSwitches.fabricTrialEndMarker);
                        });
                    }
                })), datasets$ = workspaceRawData$.pipe((0, operators_map.U)(function(workspaceRawData) {
                    var workspace = workspaceRawData.workspace, contentPacks = workspaceRawData.contentPacks, isPremiumWorkspace = workspaceRawData.isPremiumWorkspace, activeFolderId = workspace.folderId;
                    return _.chain(_.map(function(datasets, contentPacks) {
                        var modelIds = _.flatten(_.map(contentPacks, function(cp) {
                            return cp.modelIds || [];
                        }));
                        return _.map(datasets, function(dataset) {
                            return dataset.isUsedByContentPack = _.includes(modelIds, dataset.id), dataset;
                        });
                    }(_.filter(workspaceRawData.datasets, function(d) {
                        return !d.isHidden;
                    }), contentPacks), createContentListDataset)).filter(function(d) {
                        return !helpers_datasets.CI.isLinked(d.contract, activeFolderId);
                    }).map(function(d) {
                        return _this.createFluentListItemFromDataset(d, activeFolderId, workspace.displayName, workspace.isMyWorkspace, workspace.objectId, isPremiumWorkspace);
                    }).value();
                })), cdsaModels$ = (0, observable_combineLatest.aj)([ workspaceRawData$, this.store.select(group_selector.T), null !== (_e = null === (_d = this.trialCapacityMetadataService) || void 0 === _d ? void 0 : _d.userTrialCapacities$) && void 0 !== _e ? _e : (0, 
                observable_of.of)({}), this.featureSwitchService.featureSwitches$ ]).pipe((0, operators_map.U)(function(_a) {
                    var cdsaModelContracts, folderNumericId, workspaceRawData = _a[0], trialCapacityMap = _a[2], featureSwitches = _a[3], workspace = workspaceRawData.workspace, workspaceSupportsGen2Dataflows = featureSwitches.cdsaFrontend && (generic_workspace_data_source_commonGlobals.isTrident ? _this.featureSwitchService.featureSwitches.enableGen2DataflowsInTrident : _this.featureSwitchService.featureSwitches.enableGen2DataflowsInPowerBI) && (workspaceRawData.isPremiumWorkspace || featureSwitches.enableGen2DataflowsForSharedWorkspaces), showTrialEndMarker = !!featureSwitches.fabricTrialEndMarker;
                    return _.map((folderNumericId = workspace.id, (cdsaModelContracts = workspaceRawData.cdsaModels) ? _(cdsaModelContracts).filter(function(contract) {
                        return (null == contract ? void 0 : contract.folderId) === folderNumericId && function(contract) {
                            switch (contract.state) {
                              case 3:
                              case -1:
                                return !1;

                              case 0:
                              case void 0:
                                return 2 === contract.generation && null != contract.publishStatus && (2 === contract.publishStatus || 3 === contract.publishStatus || 4 === contract.publishStatus || 5 === contract.publishStatus);

                              case 1:
                              case 2:
                                return !0;

                              default:
                                return !1;
                            }
                        }(contract);
                    }).value() : []), function(cm) {
                        var _a, cdsaModel, groupId, listItem = (groupId = workspace.objectId, (0, tslib_es6.__assign)((0, 
                        tslib_es6.__assign)({}, cdsaModel = cm), {
                            contentTileType: contracts.ty.CdsaModel,
                            contract: cdsaModel,
                            groupId,
                            getPermissions: function() {
                                return cdsaModel.permissions;
                            },
                            displayName: cdsaModel.displayName || ""
                        }));
                        return _this.createFluentListItemFromCdsaModel(listItem, workspace.capacityObjectId, null !== (_a = workspace.workspaceId) && void 0 !== _a ? _a : workspace.objectId, workspaceSupportsGen2Dataflows, trialCapacityMap, showTrialEndMarker);
                    });
                })), artifacts$ = generic_workspace_data_source_commonGlobals.isTrident ? (0, observable_combineLatest.aj)([ workspaceRawData$, this.featureSwitchService.featureSwitches$.pipe((0, 
                skipWhile.n)(function(switches) {
                    return !switches;
                })), null !== (_g = null === (_f = this.trialCapacityMetadataService) || void 0 === _f ? void 0 : _f.userTrialCapacities$) && void 0 !== _g ? _g : (0, 
                observable_of.of)({}) ]).pipe((0, distinctUntilChanged.x)(function(prev, curr) {
                    return _.isEqual(prev, curr);
                }), (0, mergeMap.zg)(function(_a) {
                    var workspaceRawData = _a[0], fs = _a[1], trialCapacityMap = _a[2], workspaceObjectId = workspaceRawData.workspaceObjectId, artifacts = workspaceRawData.artifacts, workspace = workspaceRawData.workspace;
                    return (null == artifacts ? void 0 : artifacts.length) ? (0, forkJoin.D)(artifacts.map(function(artifact) {
                        return (fs.useExtensionsManifestsModule ? (0, from.D)(_this.tridentFluentListItemService.buildFluentListItemFromTridentArtifactV2((0, 
                        tslib_es6.__assign)((0, tslib_es6.__assign)({}, artifact), {
                            workspaceId: workspaceObjectId
                        }), _this.localizationService, _this.extensionManifestService)) : (0, observable_of.of)(_this.tridentFluentListItemService.buildFluentListItemFromTridentArtifact((0, 
                        tslib_es6.__assign)((0, tslib_es6.__assign)({}, artifact), {
                            workspaceId: workspaceObjectId
                        }), _this.localizationService))).pipe((0, operators_map.U)(function(listItem) {
                            var result = (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, listItem), {
                                gitStatus: _this.getGitStatus(artifact.objectId, artifact.artifactType),
                                quickActions: _this.getTridentArtifactQuickActions(listItem)
                            }), tridentArtifact = artifact;
                            return result.artifactInformationProtection = tridentArtifact.artifactInformationProtection, 
                            fs.dlpPolicyTipTridentArtifact_HEAD_DLP_FE && (result.hasDlpPolicyTip = hasDlpPolicyTip(tridentArtifact)), 
                            _this.markItemAsExpired(result, !!fs.fabricTrialEndMarker, trialCapacityMap, workspace.capacityObjectId, _this.localizationService), 
                            result;
                        }));
                    })) : (0, observable_of.of)([]);
                }), (0, startWith.O)([])) : (0, observable_of.of)([]), subfolders$ = generic_workspace_data_source_commonGlobals.isTrident && this.featureSwitchService.featureSwitches.subfolderInWorkspace ? workspaceRawData$.pipe((0, 
                operators_map.U)(function(workspaceRawData) {
                    var workspace = workspaceRawData.workspace;
                    return workspaceRawData.subfolders.filter(function(subfolder) {
                        return subfolder.folderId === workspace.folderId;
                    }).map(function(subfolder) {
                        return _this.createFluentListItemFromSubfolder(subfolder, workspace);
                    });
                })) : (0, observable_of.of)([]), folderRelations$ = workspaceRawData$.pipe((0, operators_switchMap.w)(function(workspaceRawData) {
                    return _this.getFolderRelations(workspaceRawData.workspaceObjectId);
                }), (0, takeUntil.R)(this.destroy$)), taskflowSteps$ = generic_workspace_data_source_commonGlobals.isTrident && this.featureSwitchService.featureSwitches.workspaceTemplateAndDiagram ? (0, 
                from.D)(this.lazyProvider.get("@trident/data-task-flow#DataTaskFlowModule", "TaskFlowFacade")).pipe((0, 
                operators_take.q)(1), (0, operators_switchMap.w)(function(taskflowFacade) {
                    return taskflowFacade ? taskflowFacade.getAllTasks() : (0, observable_of.of)([]);
                })) : (0, observable_of.of)([]);
                this.sourceOfEntireWorkspace = (0, observable_combineLatest.aj)([ (0, observable_combineLatest.aj)([ dashboards$, reports$, scorecards$, workbooks$, datasets$, cdsaModels$ ]), (0, 
                observable_combineLatest.aj)([ datamarts$, artifacts$, subfolders$, taskflowSteps$, workspaceRawData$, this.store.select(group_selector.Fs) ]), (0, 
                observable_combineLatest.aj)([ this.featureSwitchService.featureSwitches.parentChildWithRelationsStore_HEAD_Relations_FE ? folderRelations$ : (0, 
                observable_of.of)(void 0), tagsMap$ ]) ]).pipe((0, takeUntil.R)(this.destroy$), (0, 
                operators_debounceTime.b)(0), (0, operators_map.U)(function(_a) {
                    var _b = _a[0], dashboards = _b[0], reports = _b[1], scorecards = _b[2], workbooks = _b[3], datasets = _b[4], cdsaModels = _b[5], _c = _a[1], datamarts = _c[0], artifacts = _c[1], subfolders = _c[2], taskflowSteps = _c[3], workspaceRawData = _c[4], adminWorkspaceFolderId = _c[5], _d = _a[2], folderRelations = _d[0], tagsMap = _d[1], workspace = workspaceRawData.workspace, isWorkspaceEditable = workspaceRawData.isWorkspaceEditable;
                    dashboards = dashboards || [], reports = reports || [], scorecards = scorecards || [], 
                    workbooks = workbooks || [], datasets = datasets || [], cdsaModels = cdsaModels || [], 
                    datamarts = datamarts || [], artifacts = artifacts || [];
                    var parentMap = new Map;
                    generic_workspace_data_source_commonGlobals.isTrident && (_this.featureSwitchService.featureSwitches.parentChildInWorkspace || _this.featureSwitchService.featureSwitches.hiddenInWorkspace) && _this.processParentChildRelation({
                        datasets,
                        cdsaModels,
                        datamarts,
                        artifacts
                    }, folderRelations, parentMap), _this.featureSwitchService.featureSwitches.hiddenInWorkspace && generic_workspace_data_source_commonGlobals.isTrident && _this.processHiddenRelation({
                        datasets,
                        cdsaModels,
                        datamarts,
                        artifacts
                    }, folderRelations, parentMap);
                    var listItems = isWorkspaceEditable || workspace.objectId === adminWorkspaceFolderId ? _.sortBy((0, 
                    tslib_es6.__spreadArray)((0, tslib_es6.__spreadArray)((0, tslib_es6.__spreadArray)((0, 
                    tslib_es6.__spreadArray)((0, tslib_es6.__spreadArray)((0, tslib_es6.__spreadArray)((0, 
                    tslib_es6.__spreadArray)((0, tslib_es6.__spreadArray)([], dashboards, !0), reports, !0), scorecards, !0), workbooks, !0), datasets, !0), cdsaModels, !0), datamarts, !0), artifacts, !0), function(a) {
                        return a.displayName.toLocaleLowerCase();
                    }) : _.sortBy((0, tslib_es6.__spreadArray)((0, tslib_es6.__spreadArray)((0, tslib_es6.__spreadArray)((0, 
                    tslib_es6.__spreadArray)((0, tslib_es6.__spreadArray)((0, tslib_es6.__spreadArray)([], dashboards, !0), reports, !0), scorecards, !0), workbooks, !0), artifacts, !0), _this.featureSwitchService.featureSwitches.readonlyDatamart ? datamarts : [], !0), function(a) {
                        return a.displayName.toLocaleLowerCase();
                    });
                    return listItems = generic_workspace_data_source_commonGlobals.isTrident && _this.featureSwitchService.featureSwitches.parentChildInWorkspace ? _this.makeParentFollowedByChild(listItems) : listItems, 
                    listItems = generic_workspace_data_source_commonGlobals.isTrident && _this.featureSwitchService.featureSwitches.hiddenInWorkspace ? listItems.filter(function(item) {
                        return !item.isHidden;
                    }) : listItems, generic_workspace_data_source_commonGlobals.isTrident && _this.featureSwitchService.featureSwitches.subfolderInWorkspace && (_this.appendLocationProperty(subfolders, listItems, workspace), 
                    listItems = _this.sortWithSubfolders(subfolders, listItems), listItems = _this.appendCanBeSelectedProperty(listItems, isWorkspaceEditable)), 
                    generic_workspace_data_source_commonGlobals.isTrident && _this.featureSwitchService.featureSwitches.workspaceTemplateAndDiagram && (listItems = listItems.map(function(artifact) {
                        var linkedStep = taskflowSteps.find(function(task) {
                            return task.items.find(function(item) {
                                return item.artifactUniqueId === artifact.uniqueId || item.artifactUniqueId === artifact.parentUniqueId;
                            });
                        });
                        return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, artifact), {
                            taskflowTasks: linkedStep ? [ linkedStep ] : []
                        });
                    })), _this.enrichItemsWithTags(listItems, tagsMap), listItems;
                }), (0, shareReplay.d)(1)), this.dataOfEntireWorkspaceSubscription.unsubscribe(), 
                this.dataOfEntireWorkspaceSubscription = this.sourceOfEntireWorkspace.subscribe(function(sourceOfEntireWorkspace) {
                    _this.dataOfEntireWorkspace = sourceOfEntireWorkspace;
                }), this.sourceOfCurrentAndSubfolders = (0, observable_combineLatest.aj)([ this.sourceOfEntireWorkspace, null !== (_h = this.selectedSubfolderId$) && void 0 !== _h ? _h : this.subfolderContextService.selectedSubfolderId$ ]).pipe((0, 
                takeUntil.R)(this.destroy$), (0, operators_map.U)(function(_a) {
                    return _this.filterDataBySubfolder({
                        sourceOfEntireWorkspace: _a[0],
                        selectedSubfolderId: _a[1],
                        recursive: !0
                    });
                }), (0, shareReplay.d)(1)), this.dataOfCurrentAndSubfoldersSubscription.unsubscribe(), 
                this.dataOfCurrentAndSubfoldersSubscription = this.sourceOfCurrentAndSubfolders.subscribe(function(d) {
                    return _this.dataOfCurrentAndSubfolders = d;
                }), this.sourceOfCurrentFolder = (0, observable_combineLatest.aj)([ this.sourceOfEntireWorkspace, null !== (_j = this.selectedSubfolderId$) && void 0 !== _j ? _j : this.subfolderContextService.selectedSubfolderId$ ]).pipe((0, 
                takeUntil.R)(this.destroy$), (0, operators_map.U)(function(_a) {
                    return _this.filterDataBySubfolder({
                        sourceOfEntireWorkspace: _a[0],
                        selectedSubfolderId: _a[1],
                        recursive: !1
                    });
                }), (0, shareReplay.d)(1));
                var filters$ = (null === (_k = this.options) || void 0 === _k ? void 0 : _k.isSourceAffectedByFilter) && this.featureSwitchService.featureSwitches.crossSubfolderFilter ? this.fluentListFilterService.getFilter() : (0, 
                observable_of.of)(void 0);
                this.source = (0, observable_combineLatest.aj)([ this.sourceOfCurrentAndSubfolders, this.sourceOfCurrentFolder, filters$ ]).pipe((0, 
                operators_map.U)(function(_a) {
                    var _b, filters = _a[2];
                    return (null === (_b = _this.options) || void 0 === _b ? void 0 : _b.isSourceAffectedByFilter) && _this.featureSwitchService.featureSwitches.crossSubfolderFilter && 0 !== (null == filters ? void 0 : filters.size) ? _a[0] : _a[1];
                }), (0, shareReplay.d)(1)), this.dataSubscription.unsubscribe(), this.dataSubscription = this.source.subscribe(function(d) {
                    return _this.data = d;
                }), this.fluentListFilterService.getFilter().subscribe(function(filters) {
                    var datasourceFilters = _.map(Array.from(filters.entries(), function(pair) {
                        return [ pair[0], pair[1].values ];
                    }));
                    _this.filter = JSON.stringify(datasourceFilters);
                });
            }, GenericWorkspaceDataSource.prototype.getWorkspaceRawData = function(selectedWorkspaceObjectId$) {
                var _this = this, useSelectedWorkspaceRawData = !selectedWorkspaceObjectId$, workspaceObjectId$ = selectedWorkspaceObjectId$ ? selectedWorkspaceObjectId$.pipe((0, 
                rxjs_helper.B)(), (0, distinctUntilChanged.x)(), (0, takeUntil.R)(this.destroy$)) : this.workspaceContext.selectedWorkspaceObjectId$, combinedData$ = (0, 
                observable_combineLatest.aj)([ this.getWorkspaceRawDataById(workspaceObjectId$), this.getSelectedWorkspaceRawData() ]).pipe((0, 
                takeUntil.R)(this.destroy$), (0, shareReplay.d)(1));
                combinedData$.pipe((0, operators_debounceTime.b)(5e3)).subscribe(function(_a) {
                    var workspaceRawDataById = _a[0], selectedWorkspaceRawData = _a[1];
                    workspaceRawDataById && selectedWorkspaceRawData && workspaceRawDataById.workspaceObjectId === selectedWorkspaceRawData.workspaceObjectId && _this.logRawDataDifference(workspaceRawDataById, selectedWorkspaceRawData);
                });
                var finalWorkspaceRawData$ = combinedData$.pipe((0, operators_map.U)(function(_a) {
                    return useSelectedWorkspaceRawData ? _a[1] : _a[0];
                }));
                return finalWorkspaceRawData$;
            }, GenericWorkspaceDataSource.prototype.getWorkspaceRawDataById = function(workspaceObjectId$) {
                var _this = this;
                return (0, observable_combineLatest.aj)([ workspaceObjectId$, this.workspaceContext.selectedWorkspaceObjectId$ ]).pipe((0, 
                operators_switchMap.w)(function(_a) {
                    var groupId, id, workspaceObjectId = _a[0], selectedWorkspaceObjectId = _a[1];
                    return (0, observable_combineLatest.aj)([ _this.store.select((0, group_selector.KB)(workspaceObjectId)), (0, 
                    observable_combineLatest.aj)([ _this.store.select((0, group_dashboard_selector.Do)(workspaceObjectId)), _this.store.select((0, 
                    group_report_selector.Y0)(workspaceObjectId)), _this.store.select((0, group_report_selector.uq)(workspaceObjectId)), _this.store.select((0, 
                    group_workbook_selector.jB)(workspaceObjectId)), _this.store.select((id = workspaceObjectId, 
                    (0, ngrx_store.P1)((0, group_selector.KB)(id), datamart_metadata_selector.WZ, InformationProtection_reducers.xZ, core_reducers.nU, function(group, datamarts, datamartInformationProtections, datamartArtifactEndorsements) {
                        return buildDatamarts(datamarts, null == group ? void 0 : group.datamartIds, datamartInformationProtections, datamartArtifactEndorsements);
                    }))), _this.store.select((0, group_dataset_selector.il)(workspaceObjectId)) ]), (0, 
                    observable_combineLatest.aj)([ _this.store.select((groupId = workspaceObjectId, 
                    (0, ngrx_store.P1)((0, group_selector.KB)(groupId), getCdsaModelEntities, InformationProtection_reducers.hi, core_reducers.Ep, function(group, cdsaModels, informationProtections, artifactEndorsements) {
                        return group && buildCdsaModels(cdsaModels, group.cdsaModelIds, informationProtections, artifactEndorsements);
                    }))), _this.store.select((0, group_selector.DB)({
                        workspaceObjectId
                    })), _this.subfolderFacade.getSubfolders(), _this.store.select((0, group_content_pack_selector.K5)(workspaceObjectId)), workspaceObjectId === selectedWorkspaceObjectId ? _this.store.select(content_pack_selector.Ai) : (0, 
                    observable_of.of)(null) ]), _this.store.select(isWorkspaceEditable(workspaceObjectId)), _this.store.select(isWorkspacePremium(workspaceObjectId)) ]).pipe((0, 
                    operators_filter.h)(function(_a) {
                        return !!_a[0];
                    }), (0, operators_map.U)(function(_a) {
                        var workspace = _a[0], _b = _a[1], _c = _a[2], contentPacks = _c[3], workspacePublishedApp = _c[4], isWorkspaceEditable = _a[3], isPremiumWorkspace = _a[4];
                        return {
                            workspaceObjectId,
                            workspace,
                            dashboards: _b[0],
                            reports: _b[1],
                            scorecards: _b[2],
                            workbooks: _b[3],
                            datamarts: _b[4],
                            datasets: _b[5],
                            cdsaModels: _c[0],
                            artifacts: _c[1],
                            subfolders: _c[2].filter(function(subfolder) {
                                return subfolder.folderId === workspace.folderId;
                            }),
                            contentPacks,
                            workspacePublishedApp,
                            isWorkspaceEditable,
                            isPremiumWorkspace
                        };
                    }));
                }), (0, operators_debounceTime.b)(0));
            }, GenericWorkspaceDataSource.prototype.getSelectedWorkspaceRawData = function() {
                var _this = this;
                return (0, observable_combineLatest.aj)([ this.store.select(group_selector.S6), (0, 
                observable_combineLatest.aj)([ this.store.select(group_dashboard_selector.BJ), this.store.select(group_report_selector.pZ), this.store.select(group_report_selector.jF), this.store.select(group_app_selector.cE), this.store.select(getSelectedGroupDatamarts), this.store.select(group_dataset_selector.cH) ]), (0, 
                observable_combineLatest.aj)([ this.store.select(getSelectedGroupCdsaModels), this.store.select(group_selector.CW).pipe((0, 
                operators_switchMap.w)(function(groupId) {
                    return _this.store.select((0, group_selector.DB)({
                        workspaceObjectId: groupId
                    }));
                }), (0, distinctUntilChanged.x)(function(prev, curr) {
                    return _.isEqual(prev, curr);
                })), this.subfolderFacade.getSubfolders(), this.store.select(group_content_pack_selector.Ai), this.store.select(content_pack_selector.Ai) ]), this.store.select(isSelectedWorkspaceEditable), this.store.select(isSelectedWorkspacePremium) ]).pipe((0, 
                operators_filter.h)(function(_a) {
                    return !!_a[0];
                }), (0, operators_map.U)(function(_a) {
                    var workspace = _a[0], _b = _a[1], _c = _a[2], contentPacks = _c[3], workspacePublishedApp = _c[4], isWorkspaceEditable = _a[3], isPremiumWorkspace = _a[4];
                    return {
                        workspaceObjectId: workspace.objectId,
                        workspace,
                        dashboards: _b[0],
                        reports: _b[1],
                        scorecards: _b[2],
                        workbooks: _b[3],
                        datasets: _b[5],
                        cdsaModels: _c[0],
                        datamarts: _b[4],
                        artifacts: _c[1],
                        subfolders: _c[2].filter(function(subfolder) {
                            return subfolder.folderId === workspace.folderId;
                        }),
                        contentPacks,
                        workspacePublishedApp,
                        isWorkspaceEditable,
                        isPremiumWorkspace
                    };
                }), (0, operators_debounceTime.b)(0));
            }, GenericWorkspaceDataSource.prototype.logRawDataDifference = function(workspaceRawDataById, selectedWorkspaceRawData) {
                var difference = {
                    dashboards: this.getDifference(workspaceRawDataById.dashboards.map(function(d) {
                        return d.objectId;
                    }), selectedWorkspaceRawData.dashboards.map(function(d) {
                        return d.objectId;
                    })),
                    reports: this.getDifference(workspaceRawDataById.reports.map(function(r) {
                        return r.objectId;
                    }), selectedWorkspaceRawData.reports.map(function(r) {
                        return r.objectId;
                    })),
                    scorecards: this.getDifference(workspaceRawDataById.scorecards.map(function(s) {
                        return s.objectId;
                    }), selectedWorkspaceRawData.scorecards.map(function(s) {
                        return s.objectId;
                    })),
                    workbooks: this.getDifference(workspaceRawDataById.workbooks.map(function(w) {
                        return w.id;
                    }), selectedWorkspaceRawData.workbooks.map(function(w) {
                        return w.id;
                    })),
                    datasets: this.getDifference(workspaceRawDataById.datasets.map(function(d) {
                        return d.id;
                    }), selectedWorkspaceRawData.datasets.map(function(d) {
                        return d.id;
                    })),
                    cdsaModels: this.getDifference(workspaceRawDataById.cdsaModels.map(function(c) {
                        return c.objectId;
                    }), selectedWorkspaceRawData.cdsaModels.map(function(c) {
                        return c.objectId;
                    })),
                    datamarts: this.getDifference(workspaceRawDataById.datamarts.map(function(d) {
                        return d.objectId;
                    }), selectedWorkspaceRawData.datamarts.map(function(d) {
                        return d.objectId;
                    })),
                    artifacts: this.getDifference(workspaceRawDataById.artifacts.map(function(a) {
                        return a.objectId;
                    }), selectedWorkspaceRawData.artifacts.map(function(a) {
                        return a.objectId;
                    })),
                    subfolders: this.getDifference(workspaceRawDataById.subfolders.map(function(s) {
                        return s.id;
                    }), selectedWorkspaceRawData.subfolders.map(function(s) {
                        return s.id;
                    }))
                };
                "{}" !== JSON.stringify(difference) && this.telemetryService.logEvent({
                    name: "WorkspaceRawDataDiffDetected",
                    properties: {
                        workspaceObjectId: workspaceRawDataById.workspaceObjectId,
                        difference: JSON.stringify(difference)
                    }
                });
            }, GenericWorkspaceDataSource.prototype.getDifference = function(a, b) {
                var setA = new Set(a), setB = new Set(b), diffA = a.filter(function(item) {
                    return !setB.has(item);
                }), diffB = b.filter(function(item) {
                    return !setA.has(item);
                });
                if (diffA.length || diffB.length) return [ diffA.join(","), diffB.join(",") ].join("::");
            }, GenericWorkspaceDataSource.prototype.appendLocationProperty = function(subfolders, sortedArtifacts, group) {
                for (var _a, _b, _c, _d, parentSubfolder, _loop_1 = function(subfolder) {
                    parentSubfolder = (null === (_a = subfolder.contract) || void 0 === _a ? void 0 : _a.parentSubfolderId) ? subfolders.find(function(item) {
                        return item.contract.id === subfolder.contract.parentSubfolderId;
                    }) : void 0, subfolder.location = (null === (_b = null == parentSubfolder ? void 0 : parentSubfolder.contract) || void 0 === _b ? void 0 : _b.fullPath) ? "".concat(group.displayName).concat(parentSubfolder.contract.fullPath) : "".concat(group.displayName);
                }, _i = 0, subfolders_1 = subfolders; _i < subfolders_1.length; _i++) _loop_1(subfolders_1[_i]);
                for (var _loop_2 = function(sortedArtifact) {
                    parentSubfolder = (null === (_c = sortedArtifact.contract) || void 0 === _c ? void 0 : _c.subfolderId) ? subfolders.find(function(item) {
                        return item.contract.id === sortedArtifact.contract.subfolderId;
                    }) : void 0, sortedArtifact.location = (null === (_d = null == parentSubfolder ? void 0 : parentSubfolder.contract) || void 0 === _d ? void 0 : _d.fullPath) ? "".concat(group.displayName).concat(parentSubfolder.contract.fullPath) : "".concat(group.displayName);
                }, _e = 0, sortedArtifacts_1 = sortedArtifacts; _e < sortedArtifacts_1.length; _e++) _loop_2(sortedArtifacts_1[_e]);
            }, GenericWorkspaceDataSource.prototype.sortWithSubfolders = function(subfolders, sortedArtifacts) {
                var sortedSubfolders = _.sortBy((0, tslib_es6.__spreadArray)([], subfolders || [], !0), function(a) {
                    return a.displayName.toLocaleLowerCase();
                });
                return (0, tslib_es6.__spreadArray)((0, tslib_es6.__spreadArray)([], sortedSubfolders, !0), sortedArtifacts, !0);
            }, GenericWorkspaceDataSource.prototype.filterDataBySubfolder = function(params) {
                var resultItems, targetSubfolderIds, sourceOfEntireWorkspace = params.sourceOfEntireWorkspace, selectedSubfolderId = params.selectedSubfolderId, recursive = params.recursive, sortedArtifacts = sourceOfEntireWorkspace.filter(function(item) {
                    return 16 !== item.type;
                }), sortedSubfolders = sourceOfEntireWorkspace.filter(function(item) {
                    return 16 === item.type;
                });
                if (!generic_workspace_data_source_commonGlobals.isTrident || !this.featureSwitchService.featureSwitches.subfolderInWorkspace) return sortedArtifacts;
                if (selectedSubfolderId) {
                    var selectedSubfolder_1 = sortedSubfolders.find(function(item) {
                        return item.contract.id === selectedSubfolderId;
                    });
                    targetSubfolderIds = recursive ? sortedSubfolders.filter(function(subfolder) {
                        var _a;
                        return (null == selectedSubfolder_1 ? void 0 : selectedSubfolder_1.contract.fullPath) && (null === (_a = subfolder.contract.fullPath) || void 0 === _a ? void 0 : _a.startsWith(selectedSubfolder_1.contract.fullPath));
                    }).map(function(item) {
                        return item.contract.id;
                    }) : [ selectedSubfolderId ], resultItems = (0, tslib_es6.__spreadArray)((0, tslib_es6.__spreadArray)([], sortedSubfolders.filter(function(item) {
                        var _a;
                        return targetSubfolderIds.includes(null === (_a = item.contract) || void 0 === _a ? void 0 : _a.parentSubfolderId);
                    }), !0), sortedArtifacts.filter(function(item) {
                        var _a;
                        return targetSubfolderIds.includes(null === (_a = item.contract) || void 0 === _a ? void 0 : _a.subfolderId);
                    }), !0);
                } else resultItems = recursive ? sourceOfEntireWorkspace : (0, tslib_es6.__spreadArray)((0, 
                tslib_es6.__spreadArray)([], sortedSubfolders.filter(function(item) {
                    var _a;
                    return !(null === (_a = item.contract) || void 0 === _a ? void 0 : _a.parentSubfolderId);
                }), !0), sortedArtifacts.filter(function(item) {
                    var _a;
                    return !(null === (_a = item.contract) || void 0 === _a ? void 0 : _a.subfolderId);
                }), !0);
                return resultItems;
            }, GenericWorkspaceDataSource.prototype.appendCanBeSelectedProperty = function(items, isWorkspaceEditable) {
                for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {
                    var item = items_1[_i];
                    item.canBeSelected = (void 0 === item.canBeSelected || item.canBeSelected) && this.multiSelectionService.multiActionSupported(item.type) && isWorkspaceEditable && !item.parentUniqueId;
                }
                return items;
            }, GenericWorkspaceDataSource.prototype.getFolderRelations = function(groupId) {
                var _this = this;
                return (0, from.D)(this.lazyProvider.get("@powerbi/RelationsStore/relations.module#RelationsStoreModule", "RelationsStoreService")).pipe((0, 
                operators_take.q)(1), (0, operators_switchMap.w)(function(relationsStoreService) {
                    return relationsStoreService ? relationsStoreService.getLineageById(groupId, RelationsFeatureConsumers.ListView).pipe((0, 
                    takeUntil.R)(_this.destroy$)) : (0, observable_of.of)(void 0);
                }));
            }, GenericWorkspaceDataSource.prototype.createFluentListItemForDataflow = function(cdsaModel) {
                var ownerUser = cdsaModel.ownerUser, cdsaOwner = ownerUser ? (0, userInfoHelper.P)(ownerUser.givenName, ownerUser.familyName, ownerUser.userPrincipalName) : "", uniqueId = cdsa_model_uniqueId(cdsaModel), endorsement = cdsaModel.stage && {
                    stage: cdsaModel.stage
                }, isAStreamingDataflow = isStreamingDataflow(cdsaModel), artifactTypeName = this.localizationService.get(isAStreamingDataflow ? "StreamingDataflow_Label" : "ContentList_Datapool");
                return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, cdsaModel), {
                    type: 8,
                    isStreaming: isAStreamingDataflow,
                    triType: isAStreamingDataflow ? "streaming-dataflow" : "dataflow",
                    typeName: artifactTypeName,
                    gitStatus: this.getGitStatus(uniqueId, isAStreamingDataflow ? "streaming-dataflow" : "dataflow"),
                    owner: cdsaOwner || "",
                    lastRefresh: (0, modelConverterHelper.A7)(2 !== cdsaModel.modelType ? cdsaModel.lastRefreshTimeUTC : null, {
                        format: fluentListDateTimeFormat
                    }),
                    lastRefreshDate: (0, modelConverterHelper.ee)(cdsaModel.lastRefreshTimeUTC),
                    nextRefresh: (0, modelConverterHelper.A7)(2 !== cdsaModel.modelType ? cdsaModel.nextRefreshTimeUTC : null, {
                        format: fluentListDateTimeFormat,
                        invalidDateTimePlaceholder: this.localizationService.get("ManageDatasets_NextRefresh_NA")
                    }),
                    nextRefreshDate: (0, modelConverterHelper.ee)(cdsaModel.nextRefreshTimeUTC),
                    uniqueId: generateUniqueIdForFluentListItem(8, uniqueId),
                    iconName: isAStreamingDataflow ? "pbi-glyph-streamingdataflow" : "pbi-glyph-dataflow",
                    iconColor: "#99700A",
                    routePath: gen1DataflowRoutePath(cdsaModel),
                    endorsement,
                    quickActions: this.getDataflowQuickActions(cdsaModel)
                });
            }, GenericWorkspaceDataSource.prototype.createFluentListItemForDataflowGen2 = function(cdsaModel, capacityObjectId, workspaceObjectId, workspaceSupportsGen2Dataflows, trialCapacityMap, showTrialEndMarker) {
                var params, ownerUser = cdsaModel.ownerUser, cdsaOwner = ownerUser ? (0, userInfoHelper.P)(ownerUser.givenName, ownerUser.familyName, ownerUser.userPrincipalName) : "", uniqueId = cdsa_model_uniqueId(cdsaModel), endorsement = cdsaModel.stage && {
                    stage: cdsaModel.stage
                }, canEditDataflow = workspaceSupportsGen2Dataflows && 2 !== cdsaModel.state && 4 !== cdsaModel.lastRefreshStatus && 2 !== cdsaModel.publishStatus, artifactTypeName = this.localizationService.get("ContentList_Dataflow_Gen2"), item = (0, 
                tslib_es6.__assign)((0, tslib_es6.__assign)({}, cdsaModel), {
                    type: 103,
                    typeName: artifactTypeName,
                    gitStatus: this.getGitStatus(uniqueId, "dataflow-gen2"),
                    owner: null != cdsaOwner ? cdsaOwner : "",
                    lastRefresh: (0, modelConverterHelper.A7)(2 !== cdsaModel.modelType ? cdsaModel.lastRefreshTimeUTC : null, {
                        format: fluentListDateTimeFormat
                    }),
                    lastRefreshDate: (0, modelConverterHelper.ee)(cdsaModel.lastRefreshTimeUTC),
                    nextRefresh: (0, modelConverterHelper.A7)(2 !== cdsaModel.modelType ? cdsaModel.nextRefreshTimeUTC : null, {
                        format: fluentListDateTimeFormat,
                        invalidDateTimePlaceholder: this.localizationService.get("ManageDatasets_NextRefresh_NA")
                    }),
                    nextRefreshDate: (0, modelConverterHelper.ee)(cdsaModel.nextRefreshTimeUTC),
                    uniqueId: generateUniqueIdForFluentListItem(103, uniqueId),
                    iconName: "pbi-glyph-dataflow",
                    iconColor: "#99700A",
                    routePath: canEditDataflow ? (params = {
                        capacityObjectId,
                        dataflowId: cdsaModel.objectId,
                        workspaceObjectId
                    }, "/workloads/dataflows/author/capacityObjectId/".concat(params.capacityObjectId, "/dataflowId/").concat(params.dataflowId, "/extensionActionId/").concat(Utility_Utility.b$.generateGuid(), "/workspaceObjectId/").concat(params.workspaceObjectId)) : void 0,
                    endorsement,
                    quickActions: this.getDataflowGen2QuickActions(cdsaModel)
                });
                return this.markItemAsExpired(item, showTrialEndMarker, trialCapacityMap, capacityObjectId, this.localizationService), 
                item;
            }, GenericWorkspaceDataSource.prototype.createFluentListItemFromDashboard = function(dashboard, allowContributorUpdateAppEnabled, group, app) {
                var appArtifactLevelSecurity = this.featureSwitchService.featureSwitches.appArtifactLevelSecurity, dashboardInfo = createDashboardArtifactInfo(dashboard), isInWorkspaceV2 = !!group.isFolder, disabledByAALP = this.shouldDisableIncludeInApp(appArtifactLevelSecurity, isInWorkspaceV2, app), canBeIncludedInApp = this.canToggleDashboardSelectionForApp(dashboard, allowContributorUpdateAppEnabled), enableSelection = !disabledByAALP && canBeIncludedInApp, includedInAppSelection = this.getIncludedInAppValue(appArtifactLevelSecurity, isInWorkspaceV2, canBeIncludedInApp, app, 1, dashboard), artifactTypeName = this.localizationService.get("Artifact_Dashboard"), ownerName = group.displayName;
                return (0, StandaloneUtility3.yE)(dashboard.permissions, 7) && !group.isMyWorkspace || (ownerName = dashboardInfo.ownerName || dashboardInfo.ownerEmail), 
                (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, dashboard), {
                    type: 1,
                    typeName: artifactTypeName,
                    gitStatus: this.getGitStatus(dashboard.objectId, "dashboard"),
                    owner: ownerName || "",
                    iconName: "pbi-glyph-gauge",
                    iconColor: "#197278",
                    isSelectableAppArtifact: !0,
                    routePath: routePath(dashboard),
                    quickActions: this.getDashboardQuickActions(dashboard),
                    hasPublishedApp: !!app,
                    inWorkspaceV2: isInWorkspaceV2,
                    contentProviderSetting: app && (null == app ? void 0 : app.settings),
                    canToggleSelection: enableSelection,
                    canBeIncludedInApp,
                    isIncludedInApp: includedInAppSelection,
                    uniqueId: generateUniqueIdForFluentListItem(1, dashboard.uniqueId)
                });
            }, GenericWorkspaceDataSource.prototype.createFluentListItemFromReport = function(report, datasets, allowContributorUpdateAppEnabled, group, app) {
                var reportWarning, appArtifactLevelSecurity = this.featureSwitchService.featureSwitches.appArtifactLevelSecurity, dataset = datasets[lookupKeyById(report.modelId)], lastRefreshTime = dataset && dataset.lastRefreshTime, isInWorkspaceV2 = !!group.isFolder, canBeIncludedInApp = this.canToggleReportSelectionForApp(report, allowContributorUpdateAppEnabled), disableIncludeInApp = this.shouldDisableIncludeInApp(appArtifactLevelSecurity, isInWorkspaceV2, app) && canBeIncludedInApp, includedInAppSelection = this.getIncludedInAppValue(appArtifactLevelSecurity, isInWorkspaceV2, canBeIncludedInApp, app, 2, report), ownerName = group.displayName;
                (0, StandaloneUtility3.yE)(report.permissions, 7) && !group.isMyWorkspace || (ownerName = reports_data_source_ownerDisplayName(report)), 
                1 === report.reportType || report.modelId || (reportWarning = {
                    showWarning: !0,
                    warningText: this.localizationService.get("ReportMissingDatasetContent")
                });
                var reportEndorsement = this.getFluentListEndorsement(report.artifactEndorsement), type = (0, 
                helpers_report.qo)(report.reportType), artifactTypeName = this.localizationService.get("Artifact_Report");
                return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, report), {
                    type,
                    typeName: 1 === report.reportType ? this.localizationService.get("Artifact_RdlReport") : artifactTypeName,
                    gitStatus: this.getGitStatus(report.objectId, 1 === report.reportType ? "rdlreport" : "report"),
                    owner: ownerName || "",
                    lastRefresh: (0, modelConverterHelper.A7)(lastRefreshTime, {
                        format: fluentListDateTimeFormat
                    }),
                    lastRefreshDate: (0, modelConverterHelper.ee)(lastRefreshTime),
                    iconName: 1 === report.reportType ? "pbi-glyph-rdl-report" : "pbi-glyph-barchart",
                    iconColor: "#12239E",
                    isSelectableAppArtifact: !0,
                    routePath: reports_data_source_routePath(report),
                    quickActions: this.getReportQuickActions(report),
                    hasPublishedApp: !!app,
                    inWorkspaceV2: isInWorkspaceV2,
                    contentProviderSetting: app && (null == app ? void 0 : app.settings),
                    canToggleSelection: !disableIncludeInApp && canBeIncludedInApp,
                    canBeIncludedInApp,
                    isIncludedInApp: includedInAppSelection,
                    warning: reportWarning,
                    endorsement: reportEndorsement,
                    uniqueId: generateUniqueIdForFluentListItem(type, report.uniqueId)
                });
            }, GenericWorkspaceDataSource.prototype.createFluentListItemFromScorecard = function(report, datasets, allowContributorUpdateAppEnabled, group, app) {
                var reportWarning, appArtifactLevelSecurity = this.featureSwitchService.featureSwitches.appArtifactLevelSecurity, isInWorkspaceV2 = !!group.isFolder, dataset = datasets[lookupKeyById(report.modelId)], lastRefreshTime = dataset && dataset.lastRefreshTime, canToggleSelection = this.canToggleReportSelectionForApp(report, allowContributorUpdateAppEnabled), disableIncludeInApp = this.shouldDisableIncludeInApp(appArtifactLevelSecurity, isInWorkspaceV2, app) && canToggleSelection, includedInAppSelection = this.getIncludedInAppValue(appArtifactLevelSecurity, isInWorkspaceV2, canToggleSelection, app, 2, report), ownerName = group.displayName;
                (0, StandaloneUtility3.yE)(report.permissions, 7) && !group.isMyWorkspace || (ownerName = reports_data_source_ownerDisplayName(report)), 
                report.modelId || (reportWarning = {
                    showWarning: !0,
                    warningText: this.localizationService.get("ReportMissingDatasetContent")
                });
                var reportEndorsement = this.getFluentListEndorsement(report.artifactEndorsement), artifactTypeName = this.localizationService.get("Scorecard");
                return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, report), {
                    type: 10,
                    typeName: artifactTypeName,
                    gitStatus: this.getGitStatus(report.objectId, "scorecard"),
                    owner: ownerName || "",
                    lastRefresh: (0, modelConverterHelper.A7)(lastRefreshTime, {
                        format: fluentListDateTimeFormat
                    }),
                    lastRefreshDate: (0, modelConverterHelper.ee)(lastRefreshTime),
                    iconName: "pbi-glyph-trophy2",
                    iconColor: "#99008A",
                    isSelectableAppArtifact: !0,
                    routePath: reports_data_source_routePath(report),
                    quickActions: this.getReportQuickActions(report),
                    canToggleSelection: !disableIncludeInApp,
                    isIncludedInApp: includedInAppSelection,
                    warning: reportWarning,
                    endorsement: reportEndorsement,
                    uniqueId: generateUniqueIdForFluentListItem(10, report.uniqueId)
                });
            }, GenericWorkspaceDataSource.prototype.getFluentListEndorsement = function(artifactEndorsement) {
                var stage = null == artifactEndorsement ? void 0 : artifactEndorsement.stage;
                return !_.isNil(stage) && stage !== index_core.X_.Off && this.featureSwitchService.featureSwitches.artifactEndorsementFeatureUI ? {
                    stage
                } : null;
            }, GenericWorkspaceDataSource.prototype.createFluentListItemFromWorkbook = function(workbook, packages, allowContributorUpdateAppEnabled, group, app) {
                var appArtifactLevelPermissionEnabled = this.featureSwitchService.featureSwitches.appArtifactLevelSecurity, isInWorkspaceV2 = !!group.isFolder, pkg = packages[workbook.packageId], lastRefreshTime = pkg && pkg.lastRefreshTime, canBeIncludedInApp = this.canToggleWorkbookSelectionForApp(workbook, allowContributorUpdateAppEnabled), disableIncludeInApp = this.shouldDisableIncludeInApp(appArtifactLevelPermissionEnabled, isInWorkspaceV2, app), includedInAppSelection = this.getIncludedInAppValue(appArtifactLevelPermissionEnabled, isInWorkspaceV2, canBeIncludedInApp, app, 4, workbook), artifactTypeName = this.localizationService.get("Artifact_Workbook");
                return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, workbook), {
                    type: 4,
                    typeName: artifactTypeName,
                    gitStatus: this.getGitStatus(workbook.uniqueId, "workbook"),
                    owner: workbook.ownerDisplayName || "",
                    lastRefresh: (0, modelConverterHelper.A7)(lastRefreshTime, {
                        format: fluentListDateTimeFormat
                    }),
                    lastRefreshDate: (0, modelConverterHelper.ee)(lastRefreshTime),
                    iconName: "pbi-glyph-excel",
                    iconColor: "#217346",
                    isSelectableAppArtifact: !0,
                    routePath: workbooks_data_source_routePath(workbook),
                    hasPublishedApp: !!app,
                    inWorkspaceV2: isInWorkspaceV2,
                    contentProviderSetting: app && (null == app ? void 0 : app.settings),
                    canToggleSelection: !disableIncludeInApp && canBeIncludedInApp,
                    canBeIncludedInApp,
                    isIncludedInApp: includedInAppSelection,
                    uniqueId: generateUniqueIdForFluentListItem(4, workbook.uniqueId)
                });
            }, GenericWorkspaceDataSource.prototype.createFluentListItemFromDataset = function(dataset, activeFolderId, selectedGroupName, isInMyWorkspace, selectedGroupId, isPremiumWorkspace) {
                var _a, ownerName = selectedGroupName, uniqueId = (0, helpers_datasets.EL)(dataset);
                if (!(0, StandaloneUtility3.yE)(dataset.permissions, 7) || isInMyWorkspace) {
                    var creator = dataset.creatorUser;
                    ownerName = creator ? (0, userInfoHelper.P)(creator.givenName, creator.familyName, creator.emailAddress) : "";
                }
                var endorsement = (null === (_a = dataset.artifactEndorsement) || void 0 === _a ? void 0 : _a.stage) && {
                    stage: dataset.artifactEndorsement.stage
                }, isStreamingDataSet = void 0 !== dataset.realTimeMode && 0 !== dataset.realTimeMode, iconName = isStreamingDataSet ? "pbi-glyph-streamingdataset" : "pbi-glyph-databaseicon", artifactTypeName = this.localizationService.get(dataset.contract.packageType === contracts.yR.Datamart ? "Artifact_Dataset_Default" : "Artifact_Dataset");
                return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, dataset), {
                    type: 3,
                    typeName: artifactTypeName,
                    triType: (0, helpers_datasets.HP)(isStreamingDataSet, dataset.contract.packageType),
                    gitStatus: this.getGitStatus(dataset.dbName, "dataset"),
                    owner: ownerName || "",
                    lastRefresh: (0, modelConverterHelper.A7)(dataset.lastRefreshTime, {
                        format: fluentListDateTimeFormat
                    }),
                    lastRefreshDate: (0, modelConverterHelper.ee)(dataset.lastRefreshTime),
                    nextRefresh: (0, modelConverterHelper.A7)(dataset.refreshSchedule && dataset.refreshSchedule.refreshEnabled ? dataset.nextRefreshTime : null, {
                        format: fluentListDateTimeFormat,
                        invalidDateTimePlaceholder: this.localizationService.get("ManageDatasets_NextRefresh_NA")
                    }),
                    nextRefreshDate: (0, modelConverterHelper.ee)(dataset.nextRefreshTime),
                    uniqueId: generateUniqueIdForFluentListItem(3, uniqueId),
                    iconName,
                    iconColor: "#C94F0F",
                    routePath: this.shouldNavigateToDatasetDetails(dataset, isPremiumWorkspace) ? datasets_data_source_routePath(dataset, selectedGroupId) : void 0,
                    endorsement,
                    quickActions: isStreamingDataSet ? void 0 : this.getDatasetQuickActions(dataset),
                    hasDlpPolicyTip: hasDlpPolicyTip(dataset.contract)
                });
            }, GenericWorkspaceDataSource.prototype.createFluentListItemFromDatamart = function(datamart, selectedGroupDisplayName, isPremiumWorkspace, capacityObjectId, trialCapacityMap, showTrialEndMarker) {
                var lastRefreshDate, lastRefresh, nextRefresh, ownerUser = datamart.ownerUser, datamartOwner = ownerUser ? (0, 
                userInfoHelper.P)(ownerUser.givenName, ownerUser.familyName) : "\u2014", uniqueId = datamart_metadata_reducers.EL(datamart), endorsement = {
                    stage: datamart.stage
                }, options = {
                    format: fluentListDateTimeFormat,
                    invalidDateTimePlaceholder: this.localizationService.get("ManageDatasets_NextRefresh_NA")
                }, canBeSelected = !(void 0 === datamart.state || 0 === datamart.state) && (0, StandaloneUtility3.yE)(datamart.permissions, 3);
                isNaN(Date.parse(datamart.lastRefreshTimeUTC)) ? (lastRefreshDate = (0, modelConverterHelper.ee)(datamart.lastRefreshTimeUTC), 
                lastRefresh = (0, modelConverterHelper.A7)(datamart.lastRefreshTimeUTC, {
                    format: fluentListDateTimeFormat
                }), nextRefresh = (0, modelConverterHelper.A7)(datamart.nextRefreshTimeUTC, options)) : (lastRefreshDate = new Date(datamart.lastRefreshTimeUTC), 
                lastRefresh = (0, modelConverterHelper.A7)("/Date(".concat(lastRefreshDate.getTime(), ")/"), {
                    format: fluentListDateTimeFormat
                }), nextRefresh = (0, modelConverterHelper.A7)("/Date(".concat(new Date(datamart.nextRefreshTimeUTC).getTime(), ")/"), options));
                var datamartFluentListCommon = (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, datamart), {
                    owner: (null == ownerUser ? void 0 : ownerUser.displayName) || datamartOwner,
                    gitStatus: this.getGitStatus(uniqueId, (0, utils.PQ)(datamart.datamartType)),
                    lastRefresh,
                    lastRefreshDate,
                    nextRefresh,
                    uniqueId: generateUniqueIdForFluentListItem(11, uniqueId),
                    endorsement,
                    iconColor: "#484644",
                    routePath: datamarts_data_source_routePath(datamart, isPremiumWorkspace),
                    triType: (0, utils.PQ)(datamart.datamartType),
                    canBeSelected
                }), datamartTypeFluentListItem = (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, datamartFluentListCommon), this.applyDatamartSubtypeProperties(datamart, selectedGroupDisplayName));
                return 14 !== datamartTypeFluentListItem.type && 15 !== datamartTypeFluentListItem.type && 17 !== datamartTypeFluentListItem.type || this.markItemAsExpired(datamartTypeFluentListItem, showTrialEndMarker, trialCapacityMap, capacityObjectId, this.localizationService), 
                (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, datamartTypeFluentListItem), this.tridentFluentListItemService.legacyPbiArtifactTransform(datamartTypeFluentListItem));
            }, GenericWorkspaceDataSource.prototype.createFluentListItemFromSubfolder = function(subfolder, group) {
                return {
                    displayName: subfolder.displayName,
                    workspaceId: group.id,
                    workspaceName: group.displayName,
                    type: 16,
                    typeName: this.localizationService.get("Folder"),
                    owner: "",
                    iconName: "folder_20_regular",
                    iconColor: "#212121",
                    quickActions: null,
                    inWorkspaceV2: !!group.isFolder,
                    getPermissions: function() {
                        return group.permissions;
                    },
                    contract: subfolder,
                    uniqueId: generateUniqueIdForFluentListItem(16, subfolder.id),
                    canBeSelected: (0, StandaloneUtility3.yE)(group.permissions, 9)
                };
            }, GenericWorkspaceDataSource.prototype.applyDatamartSubtypeProperties = function(datamart, selectedGroupDisplayName) {
                switch (datamart.datamartType) {
                  case 2:
                    return {
                        owner: selectedGroupDisplayName,
                        type: 14,
                        typeName: this.localizationService.get("Artifact_SQL_Analytics_Endpoint"),
                        quickActions: this.getDatamartTypeQuickActions(datamart)
                    };

                  case 4:
                    return {
                        type: 15,
                        typeName: this.localizationService.get("Artifact_Warehouse"),
                        quickActions: this.getDatamartTypeQuickActions(datamart)
                    };

                  case 5:
                    return {
                        type: 17,
                        typeName: this.localizationService.get("Artifact_SQL_Analytics_Endpoint"),
                        quickActions: this.getDatamartTypeQuickActions(datamart)
                    };

                  default:
                    return {
                        type: 11,
                        typeName: this.localizationService.get("Artifact_Datamart"),
                        quickActions: this.getDatamartTypeQuickActions(datamart)
                    };
                }
            }, GenericWorkspaceDataSource.prototype.isLakeWarehouseArtifact = function(lhArtifact) {
                return (null == lhArtifact ? void 0 : lhArtifact.datamartType) && 2 === lhArtifact.datamartType;
            }, GenericWorkspaceDataSource.prototype.createFluentListItemFromCdsaModel = function(cdsaModel, capacityObjectId, workspaceObjectId, workspaceSupportsGen2Dataflows, trialCapacityMap, showTrialEndMarker) {
                return 2 === cdsaModel.generation ? this.createFluentListItemForDataflowGen2(cdsaModel, capacityObjectId, workspaceObjectId, workspaceSupportsGen2Dataflows, trialCapacityMap, showTrialEndMarker) : this.createFluentListItemForDataflow(cdsaModel);
            }, GenericWorkspaceDataSource.prototype.getDashboardQuickActions = function(dashboard) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        return [ 2, [] ];
                    });
                });
            }, GenericWorkspaceDataSource.prototype.getReportQuickActions = function(report) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        return [ 2, [] ];
                    });
                });
            }, GenericWorkspaceDataSource.prototype.getDatasetQuickActions = function(dataset) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        return [ 2, [] ];
                    });
                });
            }, GenericWorkspaceDataSource.prototype.getDataflowQuickActions = function(cdsaModel) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        return [ 2, [] ];
                    });
                });
            }, GenericWorkspaceDataSource.prototype.getDataflowGen2QuickActions = function(cdsaModel) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        return [ 2, [] ];
                    });
                });
            }, GenericWorkspaceDataSource.prototype.getDatamartTypeQuickActions = function(datamart) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        return [ 2, [] ];
                    });
                });
            }, GenericWorkspaceDataSource.prototype.getTridentArtifactQuickActions = function(item) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        return [ 2, [] ];
                    });
                });
            }, GenericWorkspaceDataSource.prototype.getTaskOrderBy = function(data) {
                var _a;
                return (null === (_a = data.taskflowTasks) || void 0 === _a ? void 0 : _a.length) > 0 ? getTaskName(data.taskflowTasks[0], this.localizationService) : null;
            }, GenericWorkspaceDataSource.prototype.shouldNavigateToDatasetDetails = function(dataset, isPremiumWorkspace) {
                var _a;
                return !((null === (_a = dataset.contract) || void 0 === _a ? void 0 : _a.packageType) === contracts.yR.Datamart && !isPremiumWorkspace || 2 === dataset.workspaceType || dataset.realTimeMode);
            }, GenericWorkspaceDataSource.prototype.isFromUnpublishedApp = function(dashboard) {
                return !!dashboard.contentProviderId || !!dashboard.originalDashboardId || !!dashboard.originalDashboardObjectId;
            }, GenericWorkspaceDataSource.prototype.shouldDisableIncludeInApp = function(appArtifactLevelPermissionEnabled, isV2Workspace, app) {
                return appArtifactLevelPermissionEnabled ? isV2Workspace && !app || isV2Workspace && app && !!(1 & (null == app ? void 0 : app.settings)) : isV2Workspace && !!app && !!(1 & (null == app ? void 0 : app.settings));
            }, GenericWorkspaceDataSource.prototype.getIncludedInAppValue = function(appArtifactLevelPermissionEnabled, isWorkspaceV2, canToggleSelection, app, artifactType, artifact) {
                var _a, workspaceHasPublishedApp = !!app;
                if (appArtifactLevelPermissionEnabled && isWorkspaceV2 && !workspaceHasPublishedApp) return !1;
                if (!(isWorkspaceV2 && workspaceHasPublishedApp && 1 & (app && (null == app ? void 0 : app.settings)))) return canToggleSelection && !(null === (_a = artifact.contract) || void 0 === _a ? void 0 : _a.isStaging);
                switch (artifactType) {
                  case 1:
                    var appDashboardIds = app && (null == app ? void 0 : app.dashboardIds);
                    return !(!appDashboardIds || !_.includes(appDashboardIds, artifact.id));

                  case 2:
                    var appReportIds = app && (null == app ? void 0 : app.reportIds);
                    return !(!appReportIds || !_.includes(appReportIds, artifact.id));

                  case 4:
                    var appWorkbookIds = app && (null == app ? void 0 : app.workbookIds);
                    return !(!appWorkbookIds || !_.includes(appWorkbookIds, artifact.id));
                }
            }, GenericWorkspaceDataSource.prototype.getGitStatus = function(_objectId, _artifactType) {
                return (0, observable_of.of)("Unsupported");
            }, GenericWorkspaceDataSource.prototype.canToggleDashboardSelectionForApp = function(dashboard, allowContributorUpdateAppEnabled) {
                return void 0 === allowContributorUpdateAppEnabled && (allowContributorUpdateAppEnabled = !1), 
                allowContributorUpdateAppEnabled ? !dashboard.contract.isHidden && ((0, StandaloneUtility3.yE)(dashboard.permissions, 2) || (0, 
                StandaloneUtility3.yE)(dashboard.permissions, 8)) : !dashboard.isHidden && canReshare(dashboard.permissions);
            }, GenericWorkspaceDataSource.prototype.canToggleReportSelectionForApp = function(report, allowContributorUpdateAppEnabled) {
                return void 0 === allowContributorUpdateAppEnabled && (allowContributorUpdateAppEnabled = !1), 
                allowContributorUpdateAppEnabled ? !(!(0, StandaloneUtility3.yE)(report.permissions, 2) && !(0, 
                StandaloneUtility3.yE)(report.permissions, 8) || (1 === report.reportType ? !this.featureSwitchService.featureSwitches.rdlReportSharingUI : this.usageMetricsReport.isReportUsageMetricsReport(report))) : 1 === report.reportType ? canReshare(report.permissions) : canReshare(report.getPermissions()) && !this.usageMetricsReport.isReportFromUsageMetrics(report);
            }, GenericWorkspaceDataSource.prototype.canToggleWorkbookSelectionForApp = function(workbook, allowContributorUpdateAppEnabled) {
                return void 0 === allowContributorUpdateAppEnabled && (allowContributorUpdateAppEnabled = !1), 
                allowContributorUpdateAppEnabled ? (0, StandaloneUtility3.yE)(workbook.permissions, 2) || (0, 
                StandaloneUtility3.yE)(workbook.permissions, 8) : canReshare(workbook.permissions);
            }, GenericWorkspaceDataSource.prototype.processParentChildRelation = function(items, folderRelations, parentMap) {
                var _this = this, datasets = items.datasets, cdsaModels = items.cdsaModels, datamarts = items.datamarts, artifacts = items.artifacts, allFolderArtifacts = (0, 
                tslib_es6.__spreadArray)((0, tslib_es6.__spreadArray)((0, tslib_es6.__spreadArray)((0, 
                tslib_es6.__spreadArray)([], datasets, !0), cdsaModels, !0), datamarts, !0), artifacts, !0);
                allFolderArtifacts.forEach(function(item) {
                    item.isParent = !1, item.parentUniqueId = void 0, item.childIndex = void 0;
                }), this.featureSwitchService.featureSwitches.parentChildWithRelationsStore_HEAD_Relations_FE && folderRelations && 0 !== folderRelations.requestStatus ? 2 === folderRelations.requestStatus && (folderRelations.relations.forEach(function(relation) {
                    _this.updateArtifactDirectParentFromRelationsStore(allFolderArtifacts, relation, parentMap);
                }), this.updateArtifactRootParent(allFolderArtifacts, parentMap)) : (artifacts.forEach(function(item) {
                    _this.updateArtifactDirectParent(items, item, parentMap);
                }), datamarts.forEach(function(item) {
                    var childDataset = datasets.find(function(childItem) {
                        return childItem.contract.id === item.contract.datasetId;
                    });
                    childDataset && (childDataset.parentUniqueId = item.uniqueId, parentMap.set(item.uniqueId, item));
                }), this.updateArtifactRootParent(allFolderArtifacts, parentMap));
            }, GenericWorkspaceDataSource.prototype.updateArtifactDirectParent = function(childArtifacts, parentArtifact, parentMap) {
                var _a, datasetRelations = (_a = parentArtifact.contract).datasetRelations, dataflowRelations = _a.dataflowRelations, datamartRelations = _a.datamartRelations, artifactRelations = _a.artifactRelations, cdsaModels = childArtifacts.cdsaModels, datamarts = childArtifacts.datamarts, artifacts = childArtifacts.artifacts, uniqueId = parentArtifact.uniqueId, findChild = function(relation, childArtifact) {
                    null == relation || relation.forEach(function(relation) {
                        var settings = relation.settings;
                        if (!("number" == typeof settings && settings !== data_access_common_artifact_src.Wq.CascadeDelete || "string" == typeof settings && "CascadeDelete" !== relation.settings)) {
                            var child = childArtifact.find(function(childArtifact) {
                                var _a, _b;
                                return "dependentArtifactId" in relation ? (null === (_a = childArtifact.contract) || void 0 === _a ? void 0 : _a.id) === relation.dependentArtifactId : (null === (_b = childArtifact.contract) || void 0 === _b ? void 0 : _b.objectId) === relation.dependentArtifactObjectId;
                            });
                            child && (child.parentUniqueId = uniqueId, parentMap.set(uniqueId, parentArtifact));
                        }
                    });
                };
                findChild(datasetRelations, childArtifacts.datasets), findChild(dataflowRelations, cdsaModels), 
                findChild(datamartRelations, datamarts), findChild(artifactRelations, artifacts);
            }, GenericWorkspaceDataSource.prototype.updateArtifactDirectParentFromRelationsStore = function(allFolderArtifacts, relation, parentMap) {
                if (relation.settings.CascadeDelete) {
                    var target = allFolderArtifacts.find(function(artifact) {
                        var _a, _b;
                        return (null === (_a = artifact.contract) || void 0 === _a ? void 0 : _a.objectId) === relation.artifactObjectId || (null === (_b = artifact.contract) || void 0 === _b ? void 0 : _b.dbName) === relation.artifactObjectId;
                    });
                    if (target) {
                        var source = allFolderArtifacts.find(function(artifact) {
                            var _a, _b;
                            return (null === (_a = artifact.contract) || void 0 === _a ? void 0 : _a.objectId) === relation.dependentOnArtifactObjectId || (null === (_b = artifact.contract) || void 0 === _b ? void 0 : _b.dbName) === relation.dependentOnArtifactObjectId;
                        });
                        source && (source.parentUniqueId = target.uniqueId, parentMap.set(target.uniqueId, target));
                    }
                }
            }, GenericWorkspaceDataSource.prototype.updateArtifactRootParent = function(items, parentMap) {
                for (var _i = 0, items_2 = items; _i < items_2.length; _i++) {
                    for (var item = items_2[_i], root = item; null == root ? void 0 : root.parentUniqueId; ) root.isParent = !1, 
                    root = parentMap.get(root.parentUniqueId);
                    root && root !== item && (root.isParent = !0, item.parentUniqueId = root.uniqueId);
                }
            }, GenericWorkspaceDataSource.prototype.processHiddenRelation = function(relatedArtifacts, folderRelations, parentMap) {
                var datasets = relatedArtifacts.datasets, cdsaModels = relatedArtifacts.cdsaModels, datamarts = relatedArtifacts.datamarts, artifacts = relatedArtifacts.artifacts;
                this.featureSwitchService.featureSwitches.parentChildWithRelationsStore_HEAD_Relations_FE && folderRelations && 0 !== folderRelations.requestStatus ? 2 === folderRelations.requestStatus && (0, 
                tslib_es6.__spreadArray)((0, tslib_es6.__spreadArray)((0, tslib_es6.__spreadArray)((0, 
                tslib_es6.__spreadArray)([], datasets, !0), cdsaModels, !0), datamarts, !0), artifacts, !0).forEach(function(item) {
                    var artifactFromRelations = folderRelations.artifacts.find(function(artifact) {
                        var _a, _b;
                        return (null === (_a = item.contract) || void 0 === _a ? void 0 : _a.objectId) === artifact.objectId || (null === (_b = item.contract) || void 0 === _b ? void 0 : _b.dbName) === artifact.objectId;
                    });
                    item.isHidden = !!(null == artifactFromRelations ? void 0 : artifactFromRelations.isHidden);
                }) : (cdsaModels.forEach(function(cdsaModel) {
                    var _a, cdsaModelRelations = (_a = cdsaModel.contract).cdsaModelRelations, artifactCdsaModelRelations = _a.artifactCdsaModelRelations;
                    null == cdsaModelRelations || cdsaModelRelations.forEach(function(relation) {
                        if (4 & relation.settingsList) {
                            var hiddenDatamart = datamarts.find(function(datamart) {
                                var _a;
                                return (null === (_a = datamart.contract) || void 0 === _a ? void 0 : _a.id) === relation.targetDatamartId;
                            });
                            hiddenDatamart && (hiddenDatamart.isHidden = !0);
                        }
                    }), null == artifactCdsaModelRelations || artifactCdsaModelRelations.forEach(function(relation) {
                        if (4 & relation.settingsList) {
                            var hiddenArtifact = artifacts.find(function(artifact) {
                                var _a;
                                return (null === (_a = artifact.contract) || void 0 === _a ? void 0 : _a.objectId) === relation.artifactObjectId;
                            });
                            hiddenArtifact && (hiddenArtifact.isHidden = !0);
                        }
                    });
                }), (0, tslib_es6.__spreadArray)((0, tslib_es6.__spreadArray)([], datasets, !0), datamarts, !0).forEach(function(item) {
                    if (item.parentUniqueId) {
                        var parent_2 = parentMap.get(item.parentUniqueId);
                        (null == parent_2 ? void 0 : parent_2.isHidden) && (item.isHidden = !0);
                    }
                }));
            }, GenericWorkspaceDataSource.prototype.markItemAsExpired = function(item, showTrialEndMarker, trialCapacityMap, workspaceCapacityObjectId, localizationService) {
                var _a;
                if (showTrialEndMarker && workspaceCapacityObjectId) {
                    var trialCapacityExpirationDate = (null === (_a = trialCapacityMap[workspaceCapacityObjectId]) || void 0 === _a ? void 0 : _a.parsedTrialExpirationDateTime) || null;
                    if (trialCapacityExpirationDate && (0, trial_src.RI)(trialCapacityExpirationDate)) {
                        var trialCapacityDaysLeft = (0, trial_src.rb)(trialCapacityExpirationDate), tooltipLocalizationKey = trialCapacityDaysLeft > 0 ? "Workspace_Trial_Capacity_Expiration_Tooltip_For_Artifact" : "Workspace_Trial_Capacity_Expiration_Tooltip_For_Artifact_Post_Expiry";
                        item.isTrialCapacityCloseToExpired = !0, item.trialCapacityCloseToExpiredTooltip = localizationService.format(tooltipLocalizationKey, trialCapacityDaysLeft);
                    }
                }
            }, GenericWorkspaceDataSource.prototype.makeParentFollowedByChild = function(items) {
                var itemUniqueIds = items.map(function(item) {
                    return item.uniqueId;
                });
                return items.filter(function(item) {
                    return !item.parentUniqueId || !itemUniqueIds.includes(item.parentUniqueId);
                }).map(function(item) {
                    var children = item.isParent ? items.filter(function(child) {
                        return child.parentUniqueId === item.uniqueId;
                    }) : [];
                    return children.length > 0 && (children.forEach(function(child) {
                        return child.childIndex = "Middle";
                    }), children[children.length - 1].childIndex = "Last", children.length > 1 && (children[0].childIndex = "First")), 
                    [ item ].concat(children);
                }).reduce(function(acc, item) {
                    return acc.concat(item);
                }, []);
            }, GenericWorkspaceDataSource.prototype.enrichItemsWithTags = function(listItems, tagsMap) {
                var _a;
                if (null == tagsMap ? void 0 : tagsMap.size) for (var _i = 0, listItems_1 = listItems; _i < listItems_1.length; _i++) {
                    var itemId, item = listItems_1[_i], fluentListArtifactType = item.type;
                    if ((itemId = [ 3, 13 ].includes(fluentListArtifactType) ? item.id : item.objectId || (null === (_a = item.contract) || void 0 === _a ? void 0 : _a.objectId)) && fluentListArtifactType) {
                        var itemIdentifier = new common_src.Zz({
                            itemId,
                            legacyFluentListArtifactType: fluentListArtifactType
                        }), itemTags = tagsMap.get(itemIdentifier.key);
                        itemTags && itemTags.tags.length && (item.tags = itemTags.tags.map(function(tag) {
                            return tag.displayName;
                        }));
                    }
                }
            }, GenericWorkspaceDataSource.\u0275fac = function(t) {
                core["\u0275\u0275invalidFactory"]();
            }, GenericWorkspaceDataSource.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: GenericWorkspaceDataSource,
                factory: GenericWorkspaceDataSource.\u0275fac
            }), GenericWorkspaceDataSource;
        }(legacy_table.r4);
        function findChildrenItemKeys(itemKeys, items) {
            for (var _a, includedItems = items.filter(function(item) {
                return itemKeys.includes(getUniqueIdForFluentListItem(item));
            }), childrenItemKeys = [], _loop_1 = function(item) {
                if (!item.isParent) return "continue";
                var childrenItems = null !== (_a = items.filter(function(child) {
                    return child.parentUniqueId === item.uniqueId;
                })) && void 0 !== _a ? _a : [];
                childrenItemKeys = childrenItemKeys.concat(childrenItems.map(function(child) {
                    return getUniqueIdForFluentListItem(child);
                }));
            }, _i = 0, includedItems_1 = includedItems; _i < includedItems_1.length; _i++) _loop_1(includedItems_1[_i]);
            return childrenItemKeys.filter(function(childItem) {
                return !itemKeys.includes(childItem);
            });
        }
        function isChildItem(item) {
            return !!item.parentUniqueId;
        }
        function getTypeNameFromFluentListItem(item) {
            if (item.triType) return item.triType;
            switch (item.type) {
              case 1:
                return "dashboard";

              case 2:
                return "report";

              case 6:
                return "rdlreport";

              case 10:
                return "scorecard";

              case 4:
                return "workbook";

              case 16:
                return "subfolder";

              case 103:
                return "dataflow-gen2";

              default:
                (0, Common.sr)("unsupported artifact type: ".concat(item.type));
            }
        }
        var CustomWorkspaceDataSourceInjectionToken = new core.InjectionToken("CustomWorkspaceDataSource"), SubfolderPickerTableDataSource = function(_super) {
            function SubfolderPickerTableDataSource(selectedWorkspaceObjectId$, selectedSubfolderId$, cascadeMode, allowSelectItemTypes, customizedColumnsData, checkedAndDisabledItems, visibleItemTypes, genericWorkspaceDataSource, customWorkspaceDataSource) {
                var _this = _super.call(this) || this;
                return _this.selectedWorkspaceObjectId$ = selectedWorkspaceObjectId$, _this.selectedSubfolderId$ = selectedSubfolderId$, 
                _this.cascadeMode = cascadeMode, _this.allowSelectItemTypes = allowSelectItemTypes, 
                _this.customizedColumnsData = customizedColumnsData, _this.checkedAndDisabledItems = checkedAndDisabledItems, 
                _this.visibleItemTypes = visibleItemTypes, _this.genericWorkspaceDataSource = genericWorkspaceDataSource, 
                _this.customWorkspaceDataSource = customWorkspaceDataSource, _this.sortingDataAccessor = function(item, sortHeaderId) {
                    switch (sortHeaderId) {
                      case subfolder_src.Z3.Name:
                        return item.displayName;

                      case subfolder_src.Z3.Type:
                        return item.typeName;

                      case subfolder_src.Z3.Owner:
                        return item.owner;

                      default:
                        (0, Common.sr)("unsupported sort header id: ".concat(sortHeaderId));
                    }
                }, _this.init(), _this;
            }
            return (0, tslib_es6.__extends)(SubfolderPickerTableDataSource, _super), SubfolderPickerTableDataSource.prototype.init = function() {
                var _this = this;
                this.source = this.customWorkspaceDataSource ? this.customWorkspaceDataSource.getData(this.selectedWorkspaceObjectId$, this.selectedSubfolderId$) : this.genericWorkspaceDataSource.source.pipe((0, 
                operators_map.U)(function(items) {
                    return _this.filterVisibleItems(items);
                }), (0, operators_map.U)(function(items) {
                    return _this.appendIsCheckedAndDisabledProperty(items);
                }), (0, operators_map.U)(function(items) {
                    return _this.appendCanBeSelectedProperty(items);
                }), (0, operators_map.U)(function(items) {
                    return _this.appendCustomizedColumnData(items);
                })), this.source.subscribe(function(d) {
                    return _this.data = d;
                });
            }, SubfolderPickerTableDataSource.prototype.appendIsCheckedAndDisabledProperty = function(items) {
                if (!this.checkedAndDisabledItems || 0 === this.checkedAndDisabledItems.length) return items;
                for (var _loop_1 = function(item) {
                    var itemType = getTypeNameFromFluentListItem(item);
                    this_1.checkedAndDisabledItems.find(function(checkedAndDisabledItem) {
                        var _a, _b, _c, _d;
                        return itemType === checkedAndDisabledItem.type && (void 0 !== (null === (_a = item.contract) || void 0 === _a ? void 0 : _a.id) && (null === (_b = item.contract) || void 0 === _b ? void 0 : _b.id) === checkedAndDisabledItem.id || void 0 !== (null === (_c = item.contract) || void 0 === _c ? void 0 : _c.objectId) && (null === (_d = item.contract) || void 0 === _d ? void 0 : _d.objectId) === checkedAndDisabledItem.objectId || void 0 !== item.uniqueId && item.uniqueId === checkedAndDisabledItem.uniqueId);
                    }) && (item.isCheckedAndDisabled = !0);
                }, this_1 = this, _i = 0, items_1 = items; _i < items_1.length; _i++) _loop_1(items_1[_i]);
                return items;
            }, SubfolderPickerTableDataSource.prototype.appendCanBeSelectedProperty = function(items) {
                for (var _a, _i = 0, items_2 = items; _i < items_2.length; _i++) {
                    var item = items_2[_i];
                    item.canBeSelected = !item.isCheckedAndDisabled && (null === (_a = this.allowSelectItemTypes) || void 0 === _a ? void 0 : _a.includes(getTypeNameFromFluentListItem(item))), 
                    item.canBeSelected && this.cascadeMode && (item.canBeSelected = !isChildItem(item));
                }
                return items;
            }, SubfolderPickerTableDataSource.prototype.filterVisibleItems = function(items) {
                if (!this.visibleItemTypes) return items;
                var visibleItemTypes = (0, tslib_es6.__spreadArray)([ "subfolder" ], this.visibleItemTypes, !0);
                return items.filter(function(item) {
                    return visibleItemTypes.includes(getTypeNameFromFluentListItem(item));
                });
            }, SubfolderPickerTableDataSource.prototype.appendCustomizedColumnData = function(items) {
                var _this = this;
                return this.customizedColumnsData ? items.map(function(item) {
                    var data = _this.customizedColumnsData.find(function(data) {
                        return data.uniqueId === item.uniqueId;
                    });
                    return data ? (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, item), data.value) : item;
                }) : items;
            }, SubfolderPickerTableDataSource;
        }(legacy_table.r4), Delete = function() {
            return function(payload) {
                this.payload = payload, this.type = "[CdsaModel] Delete";
            };
        }(), Remove = function() {
            return function(payload) {
                this.payload = payload, this.type = "[CdsaModel] Remove";
            };
        }(), cdsa_model_Load = function() {
            return function(payload) {
                this.payload = payload, this.type = "[CdsaModel] Load";
            };
        }(), UpdateProperties = function() {
            return function(payload) {
                this.payload = payload, this.type = "[CdsaModel] Update Properties";
            };
        }(), UpdateCurrentRefreshStatus = function() {
            return function(payload) {
                this.payload = payload, this.type = "[CdsaModel] Update currentRefreshStatus";
            };
        }(), MoveToSubfolderSuccess = function() {
            return function(payload) {
                this.payload = payload, this.type = "[CdsaModel] Move To Subfolder Success";
            };
        }(), CdsaModelStore = function() {
            function CdsaModelStore(store) {
                this.store = store, this.cdsaModels$ = this.store.select(getSelectedGroupCdsaModels);
            }
            return Object.defineProperty(CdsaModelStore.prototype, "cdsaModels", {
                get: function() {
                    return this.cdsaModels$;
                },
                enumerable: !1,
                configurable: !0
            }), CdsaModelStore.prototype.delete = function(dataflowId, fromSyncService, telemetryEvent) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var dataflow;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.findById(dataflowId) ];

                          case 1:
                            return (dataflow = _a.sent()) ? (this.store.dispatch(fromSyncService ? new Remove({
                                dataflow
                            }) : new Delete({
                                dataflow,
                                telemetryEvent
                            })), [ 2 ]) : [ 2 ];
                        }
                    });
                });
            }, CdsaModelStore.prototype.load = function(id, reloadDatapool) {
                void 0 === reloadDatapool && (reloadDatapool = !1), this.store.dispatch(new cdsa_model_Load({
                    id,
                    reloadDatapool
                }));
            }, CdsaModelStore.prototype.updateProperties = function(id, newName, newDescription, telemetryEvent) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var dataflow;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.findById(id) ];

                          case 1:
                            return (dataflow = _a.sent()) ? (this.store.dispatch(new UpdateProperties({
                                dataflow,
                                newName,
                                newDescription,
                                telemetryEvent
                            })), [ 2 ]) : [ 2 ];
                        }
                    });
                });
            }, CdsaModelStore.prototype.updateCurrentRefreshStatus = function(id, currentRefreshStatus) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var dataflow;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.findById(id) ];

                          case 1:
                            return (dataflow = _a.sent()) ? (this.store.dispatch(new UpdateCurrentRefreshStatus({
                                dataflow,
                                currentRefreshStatus
                            })), [ 2 ]) : [ 2 ];
                        }
                    });
                });
            }, CdsaModelStore.prototype.findById = function(id) {
                return this.store.select(getCdsaModelEntities).pipe((0, operators_map.U)(function(cdsaModels) {
                    return _.find(cdsaModels, function(cdsaModel) {
                        return cdsaModel.id === id;
                    });
                }), (0, operators_take.q)(1)).toPromise();
            }, CdsaModelStore.prototype.findByIdAsObservable = function(id) {
                return this.store.select(getCdsaModelEntities).pipe((0, operators_map.U)(function(cdsaModels) {
                    return _.find(cdsaModels, function(cdsaModel) {
                        return cdsaModel.id === id;
                    });
                }));
            }, CdsaModelStore.prototype.findCdsaModelByObjectId = function(objectId) {
                return this.store.select(getCdsaModelById, {
                    id: objectId
                }).pipe((0, operators_take.q)(1)).toPromise();
            }, CdsaModelStore.prototype.findByDisplayNameInWorkspace = function(displayName, workspaceId, excludeId) {
                return this.store.select(getCdsaModelEntities).pipe((0, operators_map.U)(function(cdsaModels) {
                    return _.find(cdsaModels, function(cdsaModel) {
                        var _a;
                        return _.trim(null === (_a = cdsaModel.displayName) || void 0 === _a ? void 0 : _a.toLowerCase()) === _.trim(displayName.toLowerCase()) && cdsaModel.workspaceId === workspaceId && cdsaModel.id !== excludeId;
                    });
                }), (0, operators_take.q)(1)).toPromise();
            }, CdsaModelStore.prototype.moveToSubfolder = function(movedCdsaModels) {
                this.store.dispatch(new MoveToSubfolderSuccess({
                    movedCdsaModels
                }));
            }, CdsaModelStore.\u0275fac = function(t) {
                return new (t || CdsaModelStore)(core["\u0275\u0275inject"](ngrx_store.yh));
            }, CdsaModelStore.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: CdsaModelStore,
                factory: CdsaModelStore.\u0275fac,
                providedIn: "root"
            }), CdsaModelStore;
        }(), MultiSelectionService = function() {
            function MultiSelectionService(cdsaModelStore, datasetStore, reportStore, store, subfolderContextService, subfolderManagementService, workbookStore) {
                this.cdsaModelStore = cdsaModelStore, this.datasetStore = datasetStore, this.reportStore = reportStore, 
                this.store = store, this.subfolderContextService = subfolderContextService, this.subfolderManagementService = subfolderManagementService, 
                this.workbookStore = workbookStore;
            }
            return MultiSelectionService.prototype.multiMove = function(workspaceObjectId, targetSubfolderId) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var multiSelectedState, selectedWorkbooks, moveRequest, displayNames, moveResult, movedDashboards, movedReports, movedDatamarts, workbooksUpdates, _loop_1, _i, _a, movedCdsaModels;
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return [ 4, this.subfolderContextService.multiSelectedState$.pipe((0, operators_take.q)(1)).toPromise() ];

                          case 1:
                            return multiSelectedState = _b.sent(), [ 4, this.getSelectedWorkbooks(multiSelectedState) ];

                          case 2:
                            return selectedWorkbooks = _b.sent(), moveRequest = {
                                workspaceObjectId,
                                targetSubfolderId,
                                subfolderIds: multiSelectedState.subfolders.map(function(item) {
                                    return item.id;
                                }),
                                artifactObjectIds: multiSelectedState.artifacts.map(function(item) {
                                    return item.objectId;
                                }),
                                dashboardIds: multiSelectedState.dashboards.map(function(item) {
                                    return item.id;
                                }),
                                reportIds: multiSelectedState.reports.map(function(item) {
                                    return item.id;
                                }),
                                modelIds: multiSelectedState.datasets.map(function(item) {
                                    return item.id;
                                }),
                                datamartIds: multiSelectedState.datamarts.map(function(item) {
                                    return item.id;
                                }),
                                workbookIds: selectedWorkbooks.map(function(item) {
                                    return item.id;
                                }),
                                cdsaModelIds: multiSelectedState.cdsaModels.map(function(item) {
                                    return item.id;
                                }),
                                entryPoint: subfolder_src.oe.commandBar
                            }, 1 === (displayNames = multiSelectedState.subfolders.map(function(item) {
                                return item.displayName;
                            }).concat(multiSelectedState.artifacts.map(function(item) {
                                return item.displayName;
                            }), multiSelectedState.dashboards.map(function(item) {
                                return item.displayName;
                            }), multiSelectedState.reports.map(function(item) {
                                return item.displayName;
                            }), multiSelectedState.datasets.map(function(item) {
                                return item.displayName;
                            }), multiSelectedState.datamarts.map(function(item) {
                                return item.displayName;
                            }), selectedWorkbooks.map(function(item) {
                                return item.displayName;
                            }), multiSelectedState.cdsaModels.map(function(item) {
                                return item.displayName;
                            }))).length && (moveRequest.singleItemDisplayName = displayNames[0]), [ 4, this.subfolderManagementService.moveItems(moveRequest) ];

                          case 3:
                            if (!(null == (moveResult = _b.sent()) ? void 0 : moveResult.moved)) return [ 2, !1 ];
                            if (moveResult.moved.artifacts && moveResult.moved.artifacts.length > 0 && this.store.dispatch((0, 
                            data_artifact_src.QK)({
                                movedArtifacts: null == moveResult ? void 0 : moveResult.moved.artifacts
                            })), moveResult.moved.dashboards && moveResult.moved.dashboards.length > 0 && (movedDashboards = moveResult.moved.dashboards.map(function(dashboard) {
                                var _a;
                                return {
                                    objectId: null === (_a = multiSelectedState.dashboards.find(function(item) {
                                        return item.id === dashboard.id;
                                    })) || void 0 === _a ? void 0 : _a.objectId,
                                    subfolderId: dashboard.subfolderId
                                };
                            }), this.store.dispatch(new actions_dashboard.Ui({
                                movedDashboards
                            }))), moveResult.moved.reports && moveResult.moved.reports.length > 0 && (movedReports = moveResult.moved.reports.map(function(report) {
                                var _a;
                                return {
                                    objectId: null === (_a = multiSelectedState.reports.find(function(item) {
                                        return item.id === report.id;
                                    })) || void 0 === _a ? void 0 : _a.objectId,
                                    subfolderId: report.subfolderId
                                };
                            }), this.reportStore.moveToSubfolder(movedReports)), moveResult.moved.models && moveResult.moved.models.length > 0 && this.datasetStore.moveToSubfolder(null == moveResult ? void 0 : moveResult.moved.models), 
                            moveResult.moved.datamarts && moveResult.moved.datamarts.length > 0 && (movedDatamarts = moveResult.moved.datamarts.map(function(datamart) {
                                var _a;
                                return {
                                    objectId: null === (_a = multiSelectedState.datamarts.find(function(item) {
                                        return item.id === datamart.id;
                                    })) || void 0 === _a ? void 0 : _a.objectId,
                                    subfolderId: datamart.subfolderId
                                };
                            }), this.store.dispatch(datamart_metadata_actions.uh({
                                movedDatamarts
                            }))), (null == moveResult ? void 0 : moveResult.moved.workbooks) && (null == moveResult ? void 0 : moveResult.moved.workbooks.length) > 0) {
                                for (workbooksUpdates = [], _loop_1 = function(movedWorkbook) {
                                    var workbook = selectedWorkbooks.find(function(item) {
                                        return item.id === movedWorkbook.id;
                                    });
                                    if (!workbook) return "continue";
                                    workbooksUpdates.push({
                                        workbook,
                                        changes: {
                                            subfolderId: movedWorkbook.subfolderId
                                        }
                                    });
                                }, _i = 0, _a = null == moveResult ? void 0 : moveResult.moved.workbooks; _i < _a.length; _i++) _loop_1(_a[_i]);
                                this.workbookStore.batchUpdate(workbooksUpdates);
                            }
                            return (null == moveResult ? void 0 : moveResult.moved.cdsaModels) && (null == moveResult ? void 0 : moveResult.moved.cdsaModels.length) > 0 && (movedCdsaModels = moveResult.moved.cdsaModels.map(function(cdsaModel) {
                                var _a;
                                return {
                                    objectId: null === (_a = multiSelectedState.cdsaModels.find(function(item) {
                                        return item.id === cdsaModel.id;
                                    })) || void 0 === _a ? void 0 : _a.objectId,
                                    subfolderId: cdsaModel.subfolderId
                                };
                            }), this.cdsaModelStore.moveToSubfolder(movedCdsaModels)), [ 2, !0 ];
                        }
                    });
                });
            }, MultiSelectionService.prototype.multiActionSupported = function(artifactType) {
                return "string" == typeof artifactType || [ 1, 2, 3, 11, 15, 16, 10, 4, 8, 103, 6 ].includes(artifactType);
            }, MultiSelectionService.prototype.getSelectedWorkbooks = function(multiSelectedState) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var _this = this;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        return (null == multiSelectedState ? void 0 : multiSelectedState.workbooks) ? [ 2, Promise.all(multiSelectedState.workbooks.map(function(workbook) {
                            return _this.workbookStore.findById(workbook.id, workbook.packageId, workbook.inApp);
                        })) ] : [ 2, [] ];
                    });
                });
            }, MultiSelectionService.\u0275fac = function(t) {
                return new (t || MultiSelectionService)(core["\u0275\u0275inject"](CdsaModelStore), core["\u0275\u0275inject"](dataset_store_service.s), core["\u0275\u0275inject"](report_store_service.R), core["\u0275\u0275inject"](ngrx_store.yh), core["\u0275\u0275inject"](subfolder_src.Nz), core["\u0275\u0275inject"](subfolder_src.AC), core["\u0275\u0275inject"](WorkbookStore));
            }, MultiSelectionService.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: MultiSelectionService,
                factory: MultiSelectionService.\u0275fac,
                providedIn: "root"
            }), MultiSelectionService;
        }(), tri_empty_state_component = __webpack_require__(92710), subfolder_picker_table_component_c0 = [ "nameCell" ], subfolder_picker_table_component_c1 = [ "typeCell" ], subfolder_picker_table_component_c2 = [ "ownerCell" ];
        function SubfolderPickerTableComponent_ng_container_0_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275elementContainer"](0);
        }
        function SubfolderPickerTableComponent_ng_template_2_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "fluent-list-table-base", 6), 2 & rf) {
                var ctx_r2 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("focusedRowId$", ctx_r2.focusedRowId$)("hoveredRowId$", ctx_r2.hoveredRowId$)("columnConfigs$", ctx_r2.columnConfigs$)("dataSource", ctx_r2.dataSource)("selection", ctx_r2.selection)("allowSelection", ctx_r2.allowSelection);
            }
        }
        function SubfolderPickerTableComponent_ng_template_4_ng_container_1_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275elementContainer"](0);
        }
        function SubfolderPickerTableComponent_ng_template_4_ng_template_2_Template(rf, ctx) {
            if (1 & rf) {
                var _r20 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275element"](0, "tri-artifact-icon", 10), core["\u0275\u0275elementStart"](1, "a", 11), 
                core["\u0275\u0275listener"]("keydown.enter", function() {
                    core["\u0275\u0275restoreView"](_r20);
                    var item_r11 = core["\u0275\u0275nextContext"]().$implicit, ctx_r18 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r18.navigateToSubfolder(item_r11));
                })("click", function() {
                    core["\u0275\u0275restoreView"](_r20);
                    var item_r11 = core["\u0275\u0275nextContext"]().$implicit, ctx_r21 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r21.navigateToSubfolder(item_r11));
                }), core["\u0275\u0275text"](2), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var item_r11 = core["\u0275\u0275nextContext"]().$implicit, ctx_r15 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("artifactType", item_r11.type)("preset", ctx_r15.builtInIconPreset), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("triTooltip", item_r11.displayName), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate"](item_r11.displayName);
            }
        }
        function SubfolderPickerTableComponent_ng_template_4_ng_template_4_tri_svg_icon_0_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "tri-svg-icon", 15), 2 & rf) {
                var item_r11 = core["\u0275\u0275nextContext"](2).$implicit, ctx_r24 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("sprite", "parent-child-icons")("name", ctx_r24.getChildIndicator(item_r11));
            }
        }
        function SubfolderPickerTableComponent_ng_template_4_ng_template_4_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275template"](0, SubfolderPickerTableComponent_ng_template_4_ng_template_4_tri_svg_icon_0_Template, 1, 2, "tri-svg-icon", 12), 
            core["\u0275\u0275element"](1, "tri-artifact-icon", 13), core["\u0275\u0275elementStart"](2, "span", 14), 
            core["\u0275\u0275text"](3), core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var item_r11 = core["\u0275\u0275nextContext"]().$implicit, ctx_r17 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("ngIf", !!item_r11.parentUniqueId), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275property"]("artifactType", item_r11.type)("preset", ctx_r17.builtInIconPreset), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("triTooltip", item_r11.displayName), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate"](item_r11.displayName);
            }
        }
        var subfolder_picker_table_component_c3 = function(a0) {
            return {
                "col-disabled": a0
            };
        }, subfolder_picker_table_component_c4 = function(a0) {
            return {
                width: a0
            };
        };
        function SubfolderPickerTableComponent_ng_template_4_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "span", 7), core["\u0275\u0275template"](1, SubfolderPickerTableComponent_ng_template_4_ng_container_1_Template, 1, 0, "ng-container", 0), 
            core["\u0275\u0275template"](2, SubfolderPickerTableComponent_ng_template_4_ng_template_2_Template, 3, 4, "ng-template", null, 8, core["\u0275\u0275templateRefExtractor"]), 
            core["\u0275\u0275template"](4, SubfolderPickerTableComponent_ng_template_4_ng_template_4_Template, 4, 5, "ng-template", null, 9, core["\u0275\u0275templateRefExtractor"]), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var item_r11 = ctx.$implicit, colWidth_r12 = ctx.colWidth, _r14 = core["\u0275\u0275reference"](3), _r16 = core["\u0275\u0275reference"](5), ctx_r4 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("ngClass", core["\u0275\u0275pureFunction1"](5, subfolder_picker_table_component_c3, ctx_r4.itemDisabled(item_r11)))("ngStyle", core["\u0275\u0275pureFunction1"](7, subfolder_picker_table_component_c4, colWidth_r12 && colWidth_r12[ctx_r4.colName_name] + "px")), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx_r4.isSubfolder(item_r11))("ngIfThen", _r14)("ngIfElse", _r16);
            }
        }
        function SubfolderPickerTableComponent_ng_template_6_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "span", 16), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var item_r27 = ctx.$implicit, colWidth_r28 = ctx.colWidth, ctx_r6 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("triTooltip", item_r27.typeName)("ngClass", core["\u0275\u0275pureFunction1"](5, subfolder_picker_table_component_c3, ctx_r6.itemDisabled(item_r27)))("ngStyle", core["\u0275\u0275pureFunction1"](7, subfolder_picker_table_component_c4, colWidth_r28 && colWidth_r28[ctx_r6.colName_type] + "px")), 
                core["\u0275\u0275attribute"]("data-value", item_r27.type), core["\u0275\u0275advance"](1), 
                core["\u0275\u0275textInterpolate"](item_r27.typeName);
            }
        }
        function SubfolderPickerTableComponent_ng_template_8_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "span", 17), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var item_r29 = ctx.$implicit, colWidth_r30 = ctx.colWidth, ctx_r8 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("triTooltip", item_r29.owner || "\u2014")("ngClass", core["\u0275\u0275pureFunction1"](4, subfolder_picker_table_component_c3, ctx_r8.itemDisabled(item_r29)))("ngStyle", core["\u0275\u0275pureFunction1"](6, subfolder_picker_table_component_c4, colWidth_r30 && colWidth_r30[ctx_r8.colName_owner] + "px")), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate"](item_r29.owner || "-");
            }
        }
        function SubfolderPickerTableComponent_ng_template_10_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "tri-empty-state", 18), 2 & rf) {
                var ctx_r10 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("viewModel", ctx_r10.emptyStateModel);
            }
        }
        var SubfolderPickerTableComponent = function(_super) {
            function SubfolderPickerTableComponent(store, localizationService, fluentListFilterService, lazyProvider, featureSwitchService, telemetryService, usageMetricsReport, extensionManifestService, subfolderContextService, subfolderFacade, multiSelectionService, tridentFluentListItemService, workspaceContext, customWorkspaceDataSource) {
                var _this = _super.call(this) || this;
                return _this.store = store, _this.localizationService = localizationService, _this.fluentListFilterService = fluentListFilterService, 
                _this.lazyProvider = lazyProvider, _this.featureSwitchService = featureSwitchService, 
                _this.telemetryService = telemetryService, _this.usageMetricsReport = usageMetricsReport, 
                _this.extensionManifestService = extensionManifestService, _this.subfolderContextService = subfolderContextService, 
                _this.subfolderFacade = subfolderFacade, _this.multiSelectionService = multiSelectionService, 
                _this.tridentFluentListItemService = tridentFluentListItemService, _this.workspaceContext = workspaceContext, 
                _this.customWorkspaceDataSource = customWorkspaceDataSource, _this.allowSelectWorkspace = !1, 
                _this.allowSelectItemTypes = [], _this.allowMultiSelection = !1, _this.customizedColumnsConfig = [], 
                _this.customizedColumnsData = [], _this.useCustomDataSource = !1, _this.cascadeMode = !1, 
                _this.preSelectedItems = [], _this.visibleItemTypes = [], _this.visitSubfolder = new core.EventEmitter, 
                _this.selectionChanged = new core.EventEmitter, _this.colName_name = subfolder_src.Z3.Name, 
                _this.colName_type = subfolder_src.Z3.Type, _this.colName_owner = subfolder_src.Z3.Owner, 
                _this.focusedRowId$ = new BehaviorSubject.X(null), _this.hoveredRowId$ = new BehaviorSubject.X(null), 
                _this.hasData$ = new BehaviorSubject.X(!1), _this.selection = new collections.Ov(!1, []), 
                _this.allowSelection = !1, _this.emptyStateModel = {
                    emptyStateType: 3,
                    iconType: 2,
                    title: _this.localizationService.get("Subfolder_Picker_Table_Empty_State_Title"),
                    message: _this.localizationService.get("Subfolder_Picker_Table_Empty_State_Message")
                }, _this._columnConfigs$ = new BehaviorSubject.X([]), _this.columnConfigs$ = _this._columnConfigs$.asObservable().pipe((0, 
                skipWhile.n)(function(config) {
                    return !config.length;
                }), (0, operators_take.q)(1)), _this;
            }
            return (0, tslib_es6.__extends)(SubfolderPickerTableComponent, _super), SubfolderPickerTableComponent.prototype.ngOnInit = function() {
                var _a, _this = this, checkedAndDisabledItems = null === (_a = this.preSelectedItems) || void 0 === _a ? void 0 : _a.filter(function(item) {
                    return !item.canBeUnselected;
                });
                this.genericWorkspaceDataSource = this.useCustomDataSource ? void 0 : new GenericWorkspaceDataSource(this.fluentListFilterService, this.store, this.localizationService, this.lazyProvider, this.featureSwitchService, this.telemetryService, this.usageMetricsReport, this.extensionManifestService, this.subfolderContextService, this.subfolderFacade, this.multiSelectionService, this.tridentFluentListItemService, this.workspaceContext, this.selectedWorkspaceObjectId$, this.selectedSubfolderId$), 
                this.dataSource = new SubfolderPickerTableDataSource(this.selectedWorkspaceObjectId$, this.selectedSubfolderId$, this.cascadeMode, this.allowSelectItemTypes, this.customizedColumnsData, checkedAndDisabledItems, this.visibleItemTypes, this.genericWorkspaceDataSource, this.useCustomDataSource ? this.customWorkspaceDataSource : void 0), 
                this.dataSource.source.pipe((0, takeUntil.R)(this.onDestroy$), (0, operators_map.U)(function(items) {
                    return !!items.length;
                })).subscribe(this.hasData$), this.allowSelectItemTypes && 0 !== this.allowSelectItemTypes.length && (this.allowSelection = !0, 
                this.selection = new collections.Ov(this.allowMultiSelection, []), this.selection.changed.pipe((0, 
                takeUntil.R)(this.onDestroy$), (0, withLatestFrom.M)(this.dataSource.source)).subscribe(function(_a) {
                    var items = _a[1];
                    if (!_this.cascadeMode || !function(selection, selectionChange, items) {
                        var addedChildren = findChildrenItemKeys(selectionChange.added, items), removedChildren = findChildrenItemKeys(selectionChange.removed, items);
                        return (0 !== addedChildren.length || 0 !== removedChildren.length) && (0 !== addedChildren.length && selection.select.apply(selection, addedChildren), 
                        0 !== removedChildren.length && selection.deselect.apply(selection, removedChildren), 
                        !0);
                    }(_this.selection, _a[0], _this.dataSource.data)) {
                        var selectedItems = items.filter(function(item) {
                            return _this.selection.selected.includes(item.uniqueId);
                        });
                        _this.selectionChanged.emit(_this.getSelectionChangedOutput(selectedItems));
                    }
                }), this.selectedWorkspaceObjectId$.pipe((0, takeUntil.R)(this.onDestroy$), (0, 
                distinctUntilChanged.x)()).subscribe(function() {
                    return _this.selection.clear();
                }), this.selectedSubfolderId$.pipe((0, takeUntil.R)(this.onDestroy$), (0, distinctUntilChanged.x)()).subscribe(function() {
                    return _this.selection.clear();
                }));
            }, SubfolderPickerTableComponent.prototype.ngOnDestroy = function() {
                var _a;
                return null === (_a = this.genericWorkspaceDataSource) || void 0 === _a || _a.ngOnDestroy(), 
                _super.prototype.ngOnDestroy.call(this);
            }, SubfolderPickerTableComponent.prototype.ngAfterViewChecked = function() {
                var _a, customizedColumnsConfig = null !== (_a = this.customizedColumnsConfig) && void 0 !== _a ? _a : [], columnConfigs = (0, 
                tslib_es6.__spreadArray)((0, tslib_es6.__spreadArray)([ {
                    name: subfolder_src.Z3.Name,
                    visible$: (0, observable_of.of)(!0),
                    canResize: !0,
                    canSort: !0,
                    class: "col col-name",
                    content: this.localizationService.get("Name"),
                    tooltip: [ this.localizationService.get("Name"), this.localizationService.get("FilterPane_Filter_Sort_AZ"), this.localizationService.get("FilterPane_Filter_Sort_ZA") ],
                    defaultWidth: 320,
                    cellTemplate: this.nameCell
                } ], customizedColumnsConfig.map(function(column) {
                    return {
                        name: column.name,
                        visible$: (0, observable_of.of)(!0),
                        canResize: !0,
                        canSort: !1,
                        class: column.className,
                        content: column.displayName,
                        tooltip: column.displayName,
                        defaultWidth: column.defaultWidth,
                        cellTemplate: column.cellTemplate
                    };
                }), !0), [ {
                    name: subfolder_src.Z3.Type,
                    visible$: (0, observable_of.of)(!0),
                    canResize: !0,
                    canSort: !0,
                    class: "col col-type",
                    content: this.localizationService.get("Type"),
                    tooltip: [ this.localizationService.get("Type"), this.localizationService.get("FilterPane_Filter_Sort_AZ"), this.localizationService.get("FilterPane_Filter_Sort_ZA") ],
                    defaultWidth: 176,
                    cellTemplate: this.typeCell
                }, {
                    name: subfolder_src.Z3.Owner,
                    visible$: (0, observable_of.of)(!0),
                    canResize: !0,
                    canSort: !0,
                    class: "col col-owner",
                    content: this.localizationService.get("Owner_Lowercase"),
                    tooltip: [ this.localizationService.get("Owner_Lowercase"), this.localizationService.get("FilterPane_Filter_Sort_AZ"), this.localizationService.get("FilterPane_Filter_Sort_ZA") ],
                    defaultWidth: 176,
                    cellTemplate: this.ownerCell
                } ], !1);
                this._columnConfigs$.next(columnConfigs);
            }, SubfolderPickerTableComponent.prototype.isSubfolder = function(item) {
                return 16 === item.type;
            }, SubfolderPickerTableComponent.prototype.itemDisabled = function(item) {
                var _a;
                return this.isSubfolder(item) ? null === (_a = this.disabledSubfolderIds) || void 0 === _a ? void 0 : _a.includes(item.contract.id) : !item.canBeSelected;
            }, SubfolderPickerTableComponent.prototype.navigateToSubfolder = function(item) {
                this.visitSubfolder.emit(item.contract.id);
            }, SubfolderPickerTableComponent.prototype.getChildIndicator = function(item) {
                return "First" === item.childIndex ? "first_indicator" : "Middle" === item.childIndex ? "middle_indicator" : "last_indicator";
            }, SubfolderPickerTableComponent.prototype.getSelectionChangedOutput = function(items) {
                for (var _a, _b, _c, _d, selectedItems = {
                    subfolders: [],
                    artifacts: [],
                    dashboards: [],
                    reports: [],
                    datasets: [],
                    datamarts: [],
                    workbooks: [],
                    cdsaModels: []
                }, selectedItemsMetadata = [], _i = 0, items_1 = items; _i < items_1.length; _i++) {
                    var item = items_1[_i], artifactIdentifier = {
                        objectId: null === (_a = item.contract) || void 0 === _a ? void 0 : _a.objectId,
                        id: null === (_b = item.contract) || void 0 === _b ? void 0 : _b.id,
                        uniqueId: item.uniqueId
                    }, itemMetadata = {
                        id: null === (_c = item.contract) || void 0 === _c ? void 0 : _c.id,
                        objectId: null === (_d = item.contract) || void 0 === _d ? void 0 : _d.objectId,
                        uniqueId: item.uniqueId,
                        displayName: item.displayName,
                        type: getTypeNameFromFluentListItem(item)
                    };
                    if (selectedItemsMetadata.push(itemMetadata), item.triType && (0, src.qt)(item.triType)) selectedItems.artifacts.push(artifactIdentifier); else if (isArtifactDatamartType(item.type)) selectedItems.datamarts.push(artifactIdentifier); else switch (item.type) {
                      case 16:
                        selectedItems.subfolders.push(artifactIdentifier);
                        break;

                      case 1:
                        selectedItems.dashboards.push(artifactIdentifier);
                        break;

                      case 2:
                      case 6:
                      case 10:
                        selectedItems.reports.push(artifactIdentifier);
                        break;

                      case 3:
                        selectedItems.datasets.push(artifactIdentifier);
                        break;

                      case 4:
                        selectedItems.workbooks.push({
                            id: artifactIdentifier.id,
                            packageId: item.packageId,
                            inApp: item.isIncludedInApp,
                            uniqueId: item.uniqueId
                        });
                        break;

                      case 8:
                      case 103:
                        selectedItems.cdsaModels.push(artifactIdentifier);
                    }
                }
                return {
                    selectedItems,
                    selectedItemsMetadata
                };
            }, SubfolderPickerTableComponent.\u0275fac = function(t) {
                return new (t || SubfolderPickerTableComponent)(core["\u0275\u0275directiveInject"](ngrx_store.yh), core["\u0275\u0275directiveInject"](localization_service.o), core["\u0275\u0275directiveInject"](FluentListFilterService, 8), core["\u0275\u0275directiveInject"](lazy_provider.E, 8), core["\u0275\u0275directiveInject"](feature_switch_service.vZ, 8), core["\u0275\u0275directiveInject"](telemetry_service.t, 8), core["\u0275\u0275directiveInject"](UsageMetricsReport, 8), core["\u0275\u0275directiveInject"](manifest_src.vC, 8), core["\u0275\u0275directiveInject"](subfolder_src.Nz, 8), core["\u0275\u0275directiveInject"](subfolder_src.zC, 8), core["\u0275\u0275directiveInject"](MultiSelectionService, 8), core["\u0275\u0275directiveInject"](TridentFluentListItemServiceToken, 8), core["\u0275\u0275directiveInject"](workspaceContext._, 8), core["\u0275\u0275directiveInject"](CustomWorkspaceDataSourceInjectionToken, 8));
            }, SubfolderPickerTableComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: SubfolderPickerTableComponent,
                selectors: [ [ "tri-subfolder-picker-table" ] ],
                viewQuery: function(rf, ctx) {
                    if (1 & rf && (core["\u0275\u0275viewQuery"](subfolder_picker_table_component_c0, 5), 
                    core["\u0275\u0275viewQuery"](subfolder_picker_table_component_c1, 5), core["\u0275\u0275viewQuery"](subfolder_picker_table_component_c2, 5)), 
                    2 & rf) {
                        var _t = void 0;
                        core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx.nameCell = _t.first), 
                        core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx.typeCell = _t.first), 
                        core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx.ownerCell = _t.first);
                    }
                },
                inputs: {
                    selectedWorkspaceObjectId$: "selectedWorkspaceObjectId$",
                    selectedSubfolderId$: "selectedSubfolderId$",
                    allowSelectWorkspace: "allowSelectWorkspace",
                    disabledSubfolderIds: "disabledSubfolderIds",
                    allowSelectItemTypes: "allowSelectItemTypes",
                    allowMultiSelection: "allowMultiSelection",
                    customizedColumnsConfig: "customizedColumnsConfig",
                    customizedColumnsData: "customizedColumnsData",
                    useCustomDataSource: "useCustomDataSource",
                    cascadeMode: "cascadeMode",
                    preSelectedItems: "preSelectedItems",
                    visibleItemTypes: "visibleItemTypes"
                },
                outputs: {
                    visitSubfolder: "visitSubfolder",
                    selectionChanged: "selectionChanged"
                },
                features: [ core["\u0275\u0275InheritDefinitionFeature"] ],
                decls: 12,
                vars: 5,
                consts: [ [ 4, "ngIf", "ngIfThen", "ngIfElse" ], [ "table", "" ], [ "nameCell", "" ], [ "typeCell", "" ], [ "ownerCell", "" ], [ "noResults", "" ], [ 3, "focusedRowId$", "hoveredRowId$", "columnConfigs$", "dataSource", "selection", "allowSelection" ], [ "cdkMonitorElementFocus", "", "data-testid", "fluentListCell.name", 1, "col", "col-name", 3, "ngClass", "ngStyle" ], [ "subfolderName", "" ], [ "artifactName", "" ], [ 1, "subfolder-icon", 3, "artifactType", "preset" ], [ "cdkMonitorElementFocus", "", "tabindex", "0", 3, "triTooltip", "keydown.enter", "click" ], [ "class", "child-indicator", "tri-svg-icon-48", "", 3, "sprite", "name", 4, "ngIf" ], [ 1, "artifact-icon", 3, "artifactType", "preset" ], [ 3, "triTooltip" ], [ "tri-svg-icon-48", "", 1, "child-indicator", 3, "sprite", "name" ], [ "cdkMonitorElementFocus", "", 1, "col", "col-type", 3, "triTooltip", "ngClass", "ngStyle" ], [ "cdkMonitorElementFocus", "", 1, "col", "col-owner", 3, "triTooltip", "ngClass", "ngStyle" ], [ 3, "viewModel" ] ],
                template: function(rf, ctx) {
                    if (1 & rf && (core["\u0275\u0275template"](0, SubfolderPickerTableComponent_ng_container_0_Template, 1, 0, "ng-container", 0), 
                    core["\u0275\u0275pipe"](1, "async"), core["\u0275\u0275template"](2, SubfolderPickerTableComponent_ng_template_2_Template, 1, 6, "ng-template", null, 1, core["\u0275\u0275templateRefExtractor"]), 
                    core["\u0275\u0275template"](4, SubfolderPickerTableComponent_ng_template_4_Template, 6, 9, "ng-template", null, 2, core["\u0275\u0275templateRefExtractor"]), 
                    core["\u0275\u0275template"](6, SubfolderPickerTableComponent_ng_template_6_Template, 2, 9, "ng-template", null, 3, core["\u0275\u0275templateRefExtractor"]), 
                    core["\u0275\u0275template"](8, SubfolderPickerTableComponent_ng_template_8_Template, 2, 8, "ng-template", null, 4, core["\u0275\u0275templateRefExtractor"]), 
                    core["\u0275\u0275template"](10, SubfolderPickerTableComponent_ng_template_10_Template, 1, 1, "ng-template", null, 5, core["\u0275\u0275templateRefExtractor"])), 
                    2 & rf) {
                        var _r1 = core["\u0275\u0275reference"](3), _r9 = core["\u0275\u0275reference"](11);
                        core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](1, 3, ctx.hasData$))("ngIfThen", _r1)("ngIfElse", _r9);
                    }
                },
                dependencies: [ TridentArtifactIconComponent, common.NgClass, common.NgIf, common.NgStyle, FluentListTableBaseComponent, tri_empty_state_component.v, tri_svg_icon_component.M, tri_tooltip_directive.Z, common.AsyncPipe ],
                styles: [ "[_nghost-%COMP%]{background-color:var(--colorNeutralBackground1);overflow-x:auto;flex-grow:1;display:flex;flex-direction:column}fluent-list-table-base[_ngcontent-%COMP%]{height:100%}a[_ngcontent-%COMP%]{color:var(--colorNeutralForeground2);overflow:hidden;text-overflow:ellipsis;white-space:nowrap;flex:1 1 auto}a[_ngcontent-%COMP%]:hover{cursor:pointer}.col[_ngcontent-%COMP%]{color:var(--colorNeutralForeground2);box-sizing:border-box;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;padding:0 8px;flex:0 0 auto}.col.col-name[_ngcontent-%COMP%]{display:flex;align-items:center;flex-direction:row}.col.col-name[_ngcontent-%COMP%]   .child-indicator[_ngcontent-%COMP%]{margin-left:-14px}.col.col-name[_ngcontent-%COMP%]   .subfolder-icon[_ngcontent-%COMP%], .artifact-icon[_ngcontent-%COMP%]{display:flex;fill:var(--colorNeutralForeground2);flex-shrink:0;margin-right:12px}.col.col-name[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{text-decoration:none}.col.col-name[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover, .col.col-name[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:focus{text-decoration:underline;color:inherit}.col.col-name[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:focus{outline:none}.col.col-name[_ngcontent-%COMP%]   a.cdk-keyboard-focused[_ngcontent-%COMP%], .col.col-name[_ngcontent-%COMP%]   a.cdk-program-focused[_ngcontent-%COMP%]{outline:var(--focus-two-tone-outline-definition, auto 1px);outline-color:var(--focus-two-tone-outline-color, -webkit-focus-ring-color)}.col.col-name[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.col.col-disabled[_ngcontent-%COMP%]{opacity:.5}.col.col-disabled[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{pointer-events:none}.col.col-disabled.col-name[_ngcontent-%COMP%]{opacity:1}.col.col-disabled.col-name[_ngcontent-%COMP%]   .subfolder-icon[_ngcontent-%COMP%], .col.col-disabled.col-name[_ngcontent-%COMP%]   .artifact-icon[_ngcontent-%COMP%], .col.col-disabled.col-name[_ngcontent-%COMP%]   a[_ngcontent-%COMP%], .col.col-disabled.col-name[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{opacity:.5}tri-empty-state[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;justify-content:center;flex-grow:1}" ],
                changeDetection: 0
            }), SubfolderPickerTableComponent;
        }(rx_component.w), tri_workspace_icon_component = __webpack_require__(22743), premium = __webpack_require__(55234), WorkspaceCapacityIconDirective = function() {
            function WorkspaceCapacityIconDirective(hostComponent, hostElement, localizationService, tooltip) {
                this.hostComponent = hostComponent, this.hostElement = hostElement, this.localizationService = localizationService, 
                this.tooltip = tooltip;
            }
            return Object.defineProperty(WorkspaceCapacityIconDirective.prototype, "tridentWorkspaceCapacityIcon", {
                set: function(capacitySkuTier) {
                    if (capacitySkuTier) {
                        var iconType = (0, premium.q)(capacitySkuTier);
                        if (iconType) return this.hostComponent.name = this.getIconName(iconType), this.hostComponent.markAsDirty(), 
                        this.tooltip.triTooltip = this.getTooltipText(iconType), void (this.hostElement.nativeElement.style.display = "");
                    }
                    this.hostElement.nativeElement.style.display = "none";
                },
                enumerable: !1,
                configurable: !0
            }), WorkspaceCapacityIconDirective.prototype.getTooltipText = function(iconType) {
                switch (iconType) {
                  case "PPU":
                    return this.localizationService.get("Capacity_Icon_Tooltip_Ppu");

                  case "Fabric":
                    return this.localizationService.get("Capacity_Icon_Tooltip_Fabric");

                  case "Premium":
                    return this.localizationService.get("Capacity_Icon_Tooltip");

                  default:
                    return "";
                }
            }, WorkspaceCapacityIconDirective.prototype.getIconName = function(iconType) {
                switch (iconType) {
                  case "PPU":
                    return "premium_person_20_regular";

                  case "Fabric":
                  case "Premium":
                    return "premium_20_regular";

                  default:
                    return "";
                }
            }, WorkspaceCapacityIconDirective.\u0275fac = function(t) {
                return new (t || WorkspaceCapacityIconDirective)(core["\u0275\u0275directiveInject"](tri_svg_icon.Mc), core["\u0275\u0275directiveInject"](core.ElementRef), core["\u0275\u0275directiveInject"](src_localization_service.z), core["\u0275\u0275directiveInject"](tri_tooltip.ZR, 2));
            }, WorkspaceCapacityIconDirective.\u0275dir = core["\u0275\u0275defineDirective"]({
                type: WorkspaceCapacityIconDirective,
                selectors: [ [ "tri-svg-icon", "tridentWorkspaceCapacityIcon", "" ] ],
                inputs: {
                    tridentWorkspaceCapacityIcon: "tridentWorkspaceCapacityIcon"
                },
                standalone: !0,
                features: [ core["\u0275\u0275HostDirectivesFeature"]([ tri_tooltip.ZR ]) ]
            }), WorkspaceCapacityIconDirective;
        }(), subfolder_picker_workspace_list_item_component_c0 = [ "btn" ];
        function SubfolderPickerWorkspaceListItemComponent_trident_domains_icon_6_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "trident-domains-icon", 6), 2 & rf) {
                var ctx_r1 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("domainObjectId", ctx_r1.workspace.domainObjectId);
            }
        }
        var SubfolderPickerWorkspaceListItemComponent = function() {
            function SubfolderPickerWorkspaceListItemComponent() {
                this.selectWorkspace = new core.EventEmitter;
            }
            return SubfolderPickerWorkspaceListItemComponent.prototype.onClick = function() {
                this.selectWorkspace.emit();
            }, SubfolderPickerWorkspaceListItemComponent.prototype.focus = function() {
                this.button.nativeElement.focus();
            }, SubfolderPickerWorkspaceListItemComponent.\u0275fac = function(t) {
                return new (t || SubfolderPickerWorkspaceListItemComponent);
            }, SubfolderPickerWorkspaceListItemComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: SubfolderPickerWorkspaceListItemComponent,
                selectors: [ [ "tri-subfolder-picker-workspace-list-item" ] ],
                viewQuery: function(rf, ctx) {
                    var _t;
                    1 & rf && core["\u0275\u0275viewQuery"](subfolder_picker_workspace_list_item_component_c0, 5, core.ElementRef), 
                    2 & rf && core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx.button = _t.first);
                },
                inputs: {
                    workspace: "workspace"
                },
                outputs: {
                    selectWorkspace: "selectWorkspace"
                },
                decls: 7,
                vars: 5,
                consts: [ [ "tri-icon-button", "", "data-testid", "workspace-item-btn", "tabindex", "-1", 1, "workspace-button-left", "tri-rounded", "tri-text-left", "tri-flex", "tri-flex-auto", "tri-items-center", 3, "title", "click" ], [ "btn", "" ], [ 1, "workspace-icon", "tri-mr-1", 3, "workspace" ], [ 1, "workspace-name", "workspaceName" ], [ "tri-svg-icon-12", "", 1, "diamond", 3, "tridentWorkspaceCapacityIcon" ], [ 3, "domainObjectId", 4, "ngIf" ], [ 3, "domainObjectId" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementStart"](0, "button", 0, 1), core["\u0275\u0275listener"]("click", function() {
                        return ctx.onClick();
                    }), core["\u0275\u0275element"](2, "tri-workspace-icon", 2), core["\u0275\u0275elementStart"](3, "span", 3), 
                    core["\u0275\u0275text"](4), core["\u0275\u0275elementEnd"](), core["\u0275\u0275element"](5, "tri-svg-icon", 4), 
                    core["\u0275\u0275template"](6, SubfolderPickerWorkspaceListItemComponent_trident_domains_icon_6_Template, 1, 1, "trident-domains-icon", 5), 
                    core["\u0275\u0275elementEnd"]()), 2 & rf && (core["\u0275\u0275propertyInterpolate"]("title", ctx.workspace.displayName), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("workspace", ctx.workspace), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", ctx.workspace.displayName, " "), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("tridentWorkspaceCapacityIcon", ctx.workspace.capacitySkuTier), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx.workspace.domainObjectId));
                },
                dependencies: [ common.NgIf, tri_svg_icon_component.M, tri_workspace_icon_component.y, WorkspaceCapacityIconDirective ],
                styles: [ "[_nghost-%COMP%]     trident-domains-icon tri-svg-icon{width:12px;height:12px;fill:var(--colorNeutralForeground3);display:flex;padding-top:3px}.workspace-button-left[_ngcontent-%COMP%]{padding:0 10px;width:calc(100% - 56px);height:100%}.workspace-button-left[_ngcontent-%COMP%]:hover{background-color:var(--coloNeutralBackground1Hover)}.workspace-button-left[_ngcontent-%COMP%]:active{background-color:var(--colorNeutralBackground1Selected)}.workspace-button-left[_ngcontent-%COMP%]:focus-visible{background-color:var(--colorTransparentBackground);outline:2px auto var(--colorNeutralStrokeFocus2);outline-offset:-2px}.workspace-button-left[_ngcontent-%COMP%]:focus-visible + .workspace-button-right[_ngcontent-%COMP%]   .workspace-icon-button[_ngcontent-%COMP%]   tri-svg-icon[_ngcontent-%COMP%]{display:flex}.workspace-name[_ngcontent-%COMP%]{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;max-width:calc(100% - 40px);color:var(--colorNeutralForeground2);font-size:var(--fontSizeBase300);padding:0 2px}.workspace-icon[_ngcontent-%COMP%]{height:20px;width:20px}.workspace-button-right[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;align-items:center;padding-right:8px}.workspace-button-right[_ngcontent-%COMP%]:active{background-color:var(--colorNeutralBackground1Selected)}.diamond[_ngcontent-%COMP%]{flex-basis:20px;fill:var(--colorNeutralForeground3)}.workspace-icon-button[_ngcontent-%COMP%]{width:24px;height:24px;padding:0 2px}.workspace-icon-button[_ngcontent-%COMP%]   tri-svg-icon[_ngcontent-%COMP%]{display:none}.workspace-icon-button[_ngcontent-%COMP%]:focus-visible   tri-svg-icon[_ngcontent-%COMP%]{display:flex}" ],
                changeDetection: 0
            }), SubfolderPickerWorkspaceListItemComponent;
        }(), tri_search_box_component = __webpack_require__(89237);
        function SubfolderPickerWorkspaceListComponent_span_2_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementStart"](0, "span", 6), core["\u0275\u0275text"](1), 
            core["\u0275\u0275pipe"](2, "localize"), core["\u0275\u0275elementEnd"]()), 2 & rf && (core["\u0275\u0275advance"](1), 
            core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](2, 1, "ContentList_EmptySearchResults"), "\n"));
        }
        var subfolder_picker_workspace_list_component_c0 = function(a0) {
            return {
                selected: a0
            };
        };
        function SubfolderPickerWorkspaceListComponent_ng_container_5_Template(rf, ctx) {
            if (1 & rf) {
                var _r8 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "tri-subfolder-picker-workspace-list-item", 7), 
                core["\u0275\u0275listener"]("selectWorkspace", function() {
                    var workspace_r6 = core["\u0275\u0275restoreView"](_r8).$implicit, ctx_r7 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r7.onSelectWorkspace(workspace_r6));
                })("sidePaneOpened", function() {
                    core["\u0275\u0275restoreView"](_r8);
                    var ctx_r9 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r9.closePane());
                }), core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementContainerEnd"]();
            }
            if (2 & rf) {
                var tmp_0_0, workspace_r6 = ctx.$implicit, ctx_r1 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngClass", core["\u0275\u0275pureFunction1"](5, subfolder_picker_workspace_list_component_c0, (null == (tmp_0_0 = core["\u0275\u0275pipeBind1"](2, 3, ctx_r1.selectedWorkspace$)) ? null : tmp_0_0.objectId) === workspace_r6.objectId))("workspace", workspace_r6), 
                core["\u0275\u0275attribute"]("data-idx", "workspace-button-" + workspace_r6.index);
            }
        }
        function SubfolderPickerWorkspaceListComponent_label_7_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementStart"](0, "label", 8), core["\u0275\u0275text"](1), 
            core["\u0275\u0275pipe"](2, "localize"), core["\u0275\u0275elementEnd"]()), 2 & rf && (core["\u0275\u0275attribute"]("data-testid", "pinned-label"), 
            core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](2, 2, "Pinned"), " "));
        }
        function SubfolderPickerWorkspaceListComponent_ng_container_8_Template(rf, ctx) {
            if (1 & rf) {
                var _r12 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "tri-subfolder-picker-workspace-list-item", 9), 
                core["\u0275\u0275listener"]("selectWorkspace", function() {
                    var workspace_r10 = core["\u0275\u0275restoreView"](_r12).$implicit, ctx_r11 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r11.onSelectWorkspace(workspace_r10));
                })("sidePaneOpened", function() {
                    core["\u0275\u0275restoreView"](_r12);
                    var ctx_r13 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r13.closePane());
                }), core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementContainerEnd"]();
            }
            if (2 & rf) {
                var tmp_0_0, workspace_r10 = ctx.$implicit, ctx_r3 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngClass", core["\u0275\u0275pureFunction1"](5, subfolder_picker_workspace_list_component_c0, (null == (tmp_0_0 = core["\u0275\u0275pipeBind1"](2, 3, ctx_r3.selectedWorkspace$)) ? null : tmp_0_0.objectId) === workspace_r10.objectId))("workspace", workspace_r10), 
                core["\u0275\u0275attribute"]("data-idx", "workspace-button-" + workspace_r10.index);
            }
        }
        function SubfolderPickerWorkspaceListComponent_label_10_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementStart"](0, "label", 8), core["\u0275\u0275text"](1), 
            core["\u0275\u0275pipe"](2, "localize"), core["\u0275\u0275elementEnd"]()), 2 & rf && (core["\u0275\u0275attribute"]("data-testid", "all-label"), 
            core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate1"](" ", core["\u0275\u0275pipeBind1"](2, 2, "All"), " "));
        }
        function SubfolderPickerWorkspaceListComponent_ng_container_11_Template(rf, ctx) {
            if (1 & rf) {
                var _r16 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "tri-subfolder-picker-workspace-list-item", 7), 
                core["\u0275\u0275listener"]("selectWorkspace", function() {
                    var workspace_r14 = core["\u0275\u0275restoreView"](_r16).$implicit, ctx_r15 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r15.onSelectWorkspace(workspace_r14));
                })("sidePaneOpened", function() {
                    core["\u0275\u0275restoreView"](_r16);
                    var ctx_r17 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r17.closePane());
                }), core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementContainerEnd"]();
            }
            if (2 & rf) {
                var tmp_0_0, workspace_r14 = ctx.$implicit, ctx_r5 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngClass", core["\u0275\u0275pureFunction1"](5, subfolder_picker_workspace_list_component_c0, (null == (tmp_0_0 = core["\u0275\u0275pipeBind1"](2, 3, ctx_r5.selectedWorkspace$)) ? null : tmp_0_0.objectId) === workspace_r14.objectId))("workspace", workspace_r14), 
                core["\u0275\u0275attribute"]("data-idx", "workspace-button-" + workspace_r14.index);
            }
        }
        var context_activity_effects_a, SubfolderPickerWorkspaceListComponent = function() {
            function SubfolderPickerWorkspaceListComponent(workspaceContext, pinWorkspaceFacade) {
                this.workspaceContext = workspaceContext, this.pinWorkspaceFacade = pinWorkspaceFacade, 
                this.useCustomDataSource = !1, this.selectWorkspace = new core.EventEmitter, this.filteredMyWorkspaceArray$ = new BehaviorSubject.X([]), 
                this.filteredPinnedWorkspaces$ = new BehaviorSubject.X([]), this.filteredAllWorkspaces$ = new BehaviorSubject.X([]), 
                this.selectedWorkspace$ = new BehaviorSubject.X(void 0), this.filteredWorkspaceCount = 0, 
                this.activeWorkspaceIndex = 0, this.showAllLabel = !0, this.showPinnedLabel = !0, 
                this.showDivider = !0, this.showNoResults$ = new BehaviorSubject.X(!1), this.minBufferPx = 600, 
                this.maxBufferPx = 700, this.destroy$ = new Subject.xQ, this.filterKey$ = new BehaviorSubject.X("");
            }
            return Object.defineProperty(SubfolderPickerWorkspaceListComponent.prototype, "selectedWorkspace", {
                set: function(workspace) {
                    this.selectedWorkspace$.next(workspace);
                },
                enumerable: !1,
                configurable: !0
            }), SubfolderPickerWorkspaceListComponent.prototype.ngOnInit = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var _this = this;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return this.useCustomDataSource || this.pinWorkspaceFacade.load(), [ 4, this.workspaceContext.ensureWorkspacesLoaded() ];

                          case 1:
                            return _a.sent(), (0, observable_combineLatest.aj)([ this.workspaceContext.workspaces$, this.workspaceContext.myWorkspace$, this.pinWorkspaceFacade.getPinnedWorkspaces(), this.filterKey$ ]).pipe((0, 
                            takeUntil.R)(this.destroy$)).subscribe(function(_a) {
                                var allWorkspaces = _a[0], myWorkspace = _a[1], pinnedWorkspaces = _a[2], lowerCaseFilterKey = _a[3].toLocaleLowerCase(), idx = 0, filteredMyWorkspaceArray = [ myWorkspace ].filter(function(workspace) {
                                    return workspace.displayName.toLocaleLowerCase().includes(lowerCaseFilterKey);
                                }).map(function(workspace) {
                                    return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, workspace), {
                                        index: idx++
                                    });
                                }), pinnedWorkspaceIds = pinnedWorkspaces.map(function(workspace) {
                                    return workspace.folderObjectId;
                                }), filteredPinnedWorkspaces = allWorkspaces.filter(function(workspace) {
                                    return !workspace.isMyWorkspace;
                                }).filter(function(workspace) {
                                    return workspace.displayName.toLocaleLowerCase().includes(lowerCaseFilterKey);
                                }).filter(function(workspace) {
                                    return pinnedWorkspaceIds.includes(workspace.objectId);
                                }).sort(_this.sortByName).map(function(workspace) {
                                    return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, workspace), {
                                        index: idx++
                                    });
                                }), filteredAllWorkspaces = allWorkspaces.filter(function(workspace) {
                                    return !workspace.isMyWorkspace;
                                }).filter(function(workspace) {
                                    return workspace.displayName.toLocaleLowerCase().includes(lowerCaseFilterKey);
                                }).filter(function(workspace) {
                                    return !pinnedWorkspaceIds.includes(workspace.objectId);
                                }).sort(_this.sortByName).map(function(workspace) {
                                    return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, workspace), {
                                        index: idx++
                                    });
                                });
                                _this.filteredMyWorkspaceArray$.next(filteredMyWorkspaceArray), _this.filteredPinnedWorkspaces$.next(filteredPinnedWorkspaces), 
                                _this.filteredAllWorkspaces$.next(filteredAllWorkspaces), _this.filteredWorkspaceCount = idx, 
                                _this.showAllLabel = filteredAllWorkspaces.length > 0, _this.showPinnedLabel = filteredPinnedWorkspaces.length > 0, 
                                _this.showDivider = filteredMyWorkspaceArray.length > 0, _this.showNoResults$.next(allWorkspaces.filter(function(workspace) {
                                    return workspace.displayName.toLocaleLowerCase().includes(lowerCaseFilterKey);
                                }).length <= 0);
                            }), [ 2 ];
                        }
                    });
                });
            }, SubfolderPickerWorkspaceListComponent.prototype.ngAfterViewInit = function() {
                var _this = this;
                this.keyManager = new a11y.Em(this.items).withTypeAhead(), (0, observable_combineLatest.aj)([ this.filteredMyWorkspaceArray$, this.filteredPinnedWorkspaces$, this.filteredAllWorkspaces$, this.selectedWorkspace$ ]).pipe((0, 
                takeUntil.R)(this.destroy$), (0, operators_debounceTime.b)(50)).subscribe(function(_a) {
                    var filteredPinnedWorkspaces = _a[1], filteredAllWorkspaces = _a[2], selectedWorkspace = _a[3], workspace = (0, 
                    tslib_es6.__spreadArray)((0, tslib_es6.__spreadArray)((0, tslib_es6.__spreadArray)([], _a[0], !0), filteredPinnedWorkspaces, !0), filteredAllWorkspaces, !0).find(function(ws) {
                        return ws.objectId === selectedWorkspace.objectId;
                    });
                    _this.activeWorkspaceIndex = workspace ? workspace.index : 0;
                });
            }, SubfolderPickerWorkspaceListComponent.prototype.ngOnDestroy = function() {
                this.destroy$.next(), this.destroy$.complete();
            }, SubfolderPickerWorkspaceListComponent.prototype.sortByName = function(a, b) {
                return a.displayName.toLocaleLowerCase() < b.displayName.toLocaleLowerCase() ? -1 : a.displayName.toLocaleLowerCase() > b.displayName.toLocaleLowerCase() ? 1 : 0;
            }, SubfolderPickerWorkspaceListComponent.prototype.onFilterChange = function(filterKey) {
                this.filterKey$.next(filterKey);
            }, SubfolderPickerWorkspaceListComponent.prototype.onWorkspaceListFocus = function() {
                this.keyManager.setActiveItem(this.activeWorkspaceIndex);
            }, SubfolderPickerWorkspaceListComponent.prototype.onSelectWorkspace = function(workspace) {
                this.selectWorkspace.emit(workspace);
            }, SubfolderPickerWorkspaceListComponent.\u0275fac = function(t) {
                return new (t || SubfolderPickerWorkspaceListComponent)(core["\u0275\u0275directiveInject"](workspaceContext._), core["\u0275\u0275directiveInject"](PinWorkspaceFacade));
            }, SubfolderPickerWorkspaceListComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: SubfolderPickerWorkspaceListComponent,
                selectors: [ [ "tri-subfolder-picker-workspace-list" ] ],
                viewQuery: function(rf, ctx) {
                    var _t;
                    1 & rf && core["\u0275\u0275viewQuery"](SubfolderPickerWorkspaceListItemComponent, 5), 
                    2 & rf && core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx.items = _t);
                },
                inputs: {
                    selectedWorkspace: "selectedWorkspace",
                    useCustomDataSource: "useCustomDataSource"
                },
                outputs: {
                    selectWorkspace: "selectWorkspace"
                },
                decls: 13,
                vars: 19,
                consts: [ [ 1, "workspace-search", "search", 3, "placeholderText", "value" ], [ "class", "no-results", 4, "ngIf" ], [ "itemSize", "20", "appendOnly", "", "tabindex", "0", 3, "minBufferPx", "maxBufferPx", "focus", "keydown" ], [ 4, "ngFor", "ngForOf" ], [ "class", "workspace-label", 4, "ngIf" ], [ 4, "cdkVirtualFor", "cdkVirtualForOf" ], [ 1, "no-results" ], [ 1, "workspace-list-item", "tri-flex", "tri-items-center", 3, "ngClass", "workspace", "selectWorkspace", "sidePaneOpened" ], [ 1, "workspace-label" ], [ 1, "workspace-list-item", "tri-flex", "tri-items-center", "pinned-workspace", 3, "ngClass", "workspace", "selectWorkspace", "sidePaneOpened" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementStart"](0, "tri-search-box", 0), core["\u0275\u0275listener"]("value", function($event) {
                        return ctx.onFilterChange($event);
                    }), core["\u0275\u0275pipe"](1, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](2, SubfolderPickerWorkspaceListComponent_span_2_Template, 3, 3, "span", 1), 
                    core["\u0275\u0275pipe"](3, "async"), core["\u0275\u0275elementStart"](4, "cdk-virtual-scroll-viewport", 2), 
                    core["\u0275\u0275listener"]("focus", function() {
                        return ctx.onWorkspaceListFocus();
                    })("keydown", function($event) {
                        return ctx.keyManager.onKeydown($event);
                    }), core["\u0275\u0275template"](5, SubfolderPickerWorkspaceListComponent_ng_container_5_Template, 3, 7, "ng-container", 3), 
                    core["\u0275\u0275pipe"](6, "async"), core["\u0275\u0275template"](7, SubfolderPickerWorkspaceListComponent_label_7_Template, 3, 4, "label", 4), 
                    core["\u0275\u0275template"](8, SubfolderPickerWorkspaceListComponent_ng_container_8_Template, 3, 7, "ng-container", 3), 
                    core["\u0275\u0275pipe"](9, "async"), core["\u0275\u0275template"](10, SubfolderPickerWorkspaceListComponent_label_10_Template, 3, 4, "label", 4), 
                    core["\u0275\u0275template"](11, SubfolderPickerWorkspaceListComponent_ng_container_11_Template, 3, 7, "ng-container", 5), 
                    core["\u0275\u0275pipe"](12, "async"), core["\u0275\u0275elementEnd"]()), 2 & rf && (core["\u0275\u0275property"]("placeholderText", core["\u0275\u0275pipeBind1"](1, 9, "SearchBox_Text")), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](3, 11, ctx.showNoResults$)), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("minBufferPx", ctx.minBufferPx)("maxBufferPx", ctx.maxBufferPx), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngForOf", core["\u0275\u0275pipeBind1"](6, 13, ctx.filteredMyWorkspaceArray$)), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", ctx.showPinnedLabel), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngForOf", core["\u0275\u0275pipeBind1"](9, 15, ctx.filteredPinnedWorkspaces$)), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", ctx.showAllLabel), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("cdkVirtualForOf", core["\u0275\u0275pipeBind1"](12, 17, ctx.filteredAllWorkspaces$)));
                },
                dependencies: [ common.NgClass, common.NgForOf, common.NgIf, scrolling.xd, scrolling.x0, scrolling.N7, tri_search_box_component.U, SubfolderPickerWorkspaceListItemComponent, common.AsyncPipe, localize_pipe.F ],
                styles: [ "[_nghost-%COMP%]{box-sizing:border-box;min-width:292px;min-height:400px;flex:1 1 auto;display:flex;flex-direction:column}cdk-virtual-scroll-viewport[_ngcontent-%COMP%]{overflow-x:hidden!important;display:flex;flex:1 1 auto}cdk-virtual-scroll-viewport[_ngcontent-%COMP%]     .cdk-virtual-scroll-content-wrapper{width:calc(100vw - 68px);min-width:272px}.workspace-search[_ngcontent-%COMP%]{margin-bottom:8px;align-self:center;width:100%}.no-results[_ngcontent-%COMP%]{color:var(--colorNeutralForeground3);margin:18px 30px}.workspace-list-item[_ngcontent-%COMP%]{height:32px;border-radius:var(--borderRadiusMedium)}.workspace-list-item[_ngcontent-%COMP%]:hover{background-color:var(--colorNeutralBackground1Hover)}.workspace-list-item[_ngcontent-%COMP%]:hover     .workspace-icon-button tri-svg-icon{display:flex}.workspace-list-item.selected[_ngcontent-%COMP%]{background-color:var(--colorNeutralBackground1Selected);font-weight:var(--fontWeightSemibold)}.workspace-list-item.selected[_ngcontent-%COMP%]     button:hover{background-color:var(--colorNeutralBackground1Selected)}.workspace-list-item[_ngcontent-%COMP%]:active{background-color:var(--colorNeutralBackground1Selected)}@media (forced-colors: active){.workspace-list-item[_ngcontent-%COMP%]:hover{background-color:var(--globalColorhcHighlightText)}.workspace-list-item.selected[_ngcontent-%COMP%]{background-color:var(--globalColorhcHighlight)}.workspace-list-item.selected[_ngcontent-%COMP%]     button:hover{background-color:var(--globalColorhcHighlight)}}.workspace-label[_ngcontent-%COMP%]{margin:8px 10px 8px 8px;font-size:var(--fontSizeBase200);display:inline-block}" ],
                changeDetection: 0
            }), SubfolderPickerWorkspaceListComponent;
        }(), SubfolderPickerComponent = function() {
            function SubfolderPickerComponent(data, workspaceContext, store) {
                var _this = this;
                this.data = data, this.workspaceContext = workspaceContext, this.store = store, 
                this.submitEvent = new core.EventEmitter, this.cancelEvent = new core.EventEmitter, 
                this.selectedWorkspaceObjectId$ = new BehaviorSubject.X(void 0), this.selectWorkspaceEvent$ = new Subject.xQ, 
                this.selectedSubfolderId$ = new BehaviorSubject.X(void 0), this.selectedItems$ = new BehaviorSubject.X({}), 
                data.workspaceObjectId ? (this.loadData(data.workspaceObjectId), this.selectedWorkspaceObjectId$.next(data.workspaceObjectId)) : this.workspaceContext.selectedWorkspace$.pipe((0, 
                operators_filter.h)(function(workspace) {
                    return !!(null == workspace ? void 0 : workspace.id);
                }), (0, operators_take.q)(1), (0, shareReplay.d)(1)).subscribe(function(workspace) {
                    _this.loadData(workspace.objectId), _this.selectedWorkspaceObjectId$.next(workspace.objectId);
                }), this.selectedWorkspace$ = this.selectedWorkspaceObjectId$.pipe((0, operators_filter.h)(function(workspaceObjectId) {
                    return !!workspaceObjectId;
                }), (0, operators_switchMap.w)(function(workspaceObjectId) {
                    return _this.workspaceContext.getGroupById(workspaceObjectId);
                })), this.selectedSubfolderId$.next(data.initialSubfolderId);
            }
            return SubfolderPickerComponent.prototype.onVisitSubfolder = function(subfolderId) {
                this.selectedSubfolderId$.next(subfolderId);
            }, SubfolderPickerComponent.prototype.onSelectWorkspace = function(workspace) {
                workspace.objectId !== this.selectedWorkspaceObjectId$.value && (this.loadData(workspace.objectId), 
                this.selectedSubfolderId$.next(void 0), this.selectedWorkspaceObjectId$.next(workspace.objectId)), 
                this.selectWorkspaceEvent$.next();
            }, SubfolderPickerComponent.prototype.onSubmit = function(result) {
                this.submitEvent.emit(result);
            }, SubfolderPickerComponent.prototype.onCancel = function() {
                this.cancelEvent.emit();
            }, SubfolderPickerComponent.prototype.onSelectionChanged = function(selectedItems) {
                this.selectedItems$.next(selectedItems);
            }, SubfolderPickerComponent.prototype.loadData = function(workspaceObjectId) {
                this.store.dispatch(new actions_group._S({
                    groupObjectId: workspaceObjectId,
                    refreshIfStale: !0
                }));
            }, SubfolderPickerComponent.\u0275fac = function(t) {
                return new (t || SubfolderPickerComponent)(core["\u0275\u0275directiveInject"](dialog.WI), core["\u0275\u0275directiveInject"](workspaceContext._), core["\u0275\u0275directiveInject"](ngrx_store.yh));
            }, SubfolderPickerComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: SubfolderPickerComponent,
                selectors: [ [ "subfolder-picker" ] ],
                outputs: {
                    submitEvent: "submitEvent",
                    cancelEvent: "cancelEvent"
                },
                decls: 7,
                vars: 26,
                consts: [ [ 3, "selectedWorkspace", "selectedSubfolderId", "selectedItems", "selectWorkspaceEvent$", "visitSubfolder", "submitEvent", "cancelEvent" ], [ "subfolder-picker-workspace-list", "", 3, "selectedWorkspace", "useCustomDataSource", "selectWorkspace" ], [ "subfolder-picker-table", "", 3, "selectedWorkspaceObjectId$", "selectedSubfolderId$", "allowSelectWorkspace", "disabledSubfolderIds", "allowSelectItemTypes", "cascadeMode", "allowMultiSelection", "customizedColumnsConfig", "customizedColumnsData", "preSelectedItems", "visibleItemTypes", "useCustomDataSource", "visitSubfolder", "selectionChanged" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementStart"](0, "tri-subfolder-picker", 0), core["\u0275\u0275listener"]("visitSubfolder", function($event) {
                        return ctx.onVisitSubfolder($event);
                    })("submitEvent", function($event) {
                        return ctx.onSubmit($event);
                    })("cancelEvent", function() {
                        return ctx.onCancel();
                    }), core["\u0275\u0275pipe"](1, "async"), core["\u0275\u0275pipe"](2, "async"), 
                    core["\u0275\u0275pipe"](3, "async"), core["\u0275\u0275elementStart"](4, "tri-subfolder-picker-workspace-list", 1), 
                    core["\u0275\u0275listener"]("selectWorkspace", function($event) {
                        return ctx.onSelectWorkspace($event);
                    }), core["\u0275\u0275pipe"](5, "async"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](6, "tri-subfolder-picker-table", 2), 
                    core["\u0275\u0275listener"]("visitSubfolder", function($event) {
                        return ctx.onVisitSubfolder($event);
                    })("selectionChanged", function($event) {
                        return ctx.onSelectionChanged($event);
                    }), core["\u0275\u0275elementEnd"]()()), 2 & rf && (core["\u0275\u0275property"]("selectedWorkspace", core["\u0275\u0275pipeBind1"](1, 18, ctx.selectedWorkspace$))("selectedSubfolderId", core["\u0275\u0275pipeBind1"](2, 20, ctx.selectedSubfolderId$))("selectedItems", core["\u0275\u0275pipeBind1"](3, 22, ctx.selectedItems$))("selectWorkspaceEvent$", ctx.selectWorkspaceEvent$), 
                    core["\u0275\u0275advance"](4), core["\u0275\u0275property"]("selectedWorkspace", core["\u0275\u0275pipeBind1"](5, 24, ctx.selectedWorkspace$))("useCustomDataSource", ctx.data.useCustomDataSource), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("selectedWorkspaceObjectId$", ctx.selectedWorkspaceObjectId$)("selectedSubfolderId$", ctx.selectedSubfolderId$)("allowSelectWorkspace", ctx.data.allowSelectWorkspace)("disabledSubfolderIds", ctx.data.disabledSubfolderIds)("allowSelectItemTypes", ctx.data.allowSelectItemTypes)("cascadeMode", ctx.data.cascadeMode)("allowMultiSelection", ctx.data.allowMultiSelection)("customizedColumnsConfig", ctx.data.customizedColumnsConfig)("customizedColumnsData", ctx.data.customizedColumnsData)("preSelectedItems", ctx.data.preSelectedItems)("visibleItemTypes", ctx.data.visibleItemTypes)("useCustomDataSource", ctx.data.useCustomDataSource));
                },
                dependencies: [ TriSubfolderPickerComponent, SubfolderPickerTableComponent, SubfolderPickerWorkspaceListComponent, common.AsyncPipe ],
                styles: [ "tri-subfolder-picker-table[_ngcontent-%COMP%]     .column-headers{margin:0}tri-subfolder-picker-table[_ngcontent-%COMP%]     fluent-list-table-base .cdk-virtual-scroll-viewport .cdk-virtual-scroll-content-wrapper{padding:0}" ],
                changeDetection: 0
            }), SubfolderPickerComponent;
        }(), TridentSubfolderPickerService = function() {
            function TridentSubfolderPickerService(dialogService) {
                this.dialogService = dialogService;
            }
            return TridentSubfolderPickerService.prototype.openSubfolderPicker = function(data) {
                return this.dialogService.open(SubfolderPickerComponent, {
                    data,
                    disableClose: !0,
                    panelClass: [ "subfolder-picker", "no-border", "no-padding" ],
                    width: data.allowSelectWorkspace ? "1180px" : "864px",
                    maxWidth: "100vw"
                }).afterClosed().toPromise();
            }, TridentSubfolderPickerService.\u0275fac = function(t) {
                return new (t || TridentSubfolderPickerService)(core["\u0275\u0275inject"](dialog_service.x));
            }, TridentSubfolderPickerService.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: TridentSubfolderPickerService,
                factory: TridentSubfolderPickerService.\u0275fac,
                providedIn: "root"
            }), TridentSubfolderPickerService;
        }(), SubfolderPickerModule = function() {
            function SubfolderPickerModule() {}
            return SubfolderPickerModule.\u0275fac = function(t) {
                return new (t || SubfolderPickerModule);
            }, SubfolderPickerModule.\u0275mod = core["\u0275\u0275defineNgModule"]({
                type: SubfolderPickerModule
            }), SubfolderPickerModule.\u0275inj = core["\u0275\u0275defineInjector"]({
                providers: [ {
                    provide: subfolder_src.cU,
                    useClass: TridentSubfolderPickerService
                }, {
                    provide: FluentListFilterService,
                    useClass: FluentListFilterService
                } ],
                imports: [ ArtifactIconsModule, common.CommonModule, localization_module.v, UILibrary_module.g, FluentListModule, overlay.U8, PinWorkspaceModule, subfolder_src.HL, tri_empty_state.OT, tri_search_box.b, TriSubfolderPickerModule.forRoot({
                    subfolderDialogServiceProvider: (0, subfolder_src.qJ)({
                        useExisting: TridentSubfolderDialogService
                    })
                }), tri_svg_icon.T6, tri_tooltip.w, tri_workspace_icon.V ]
            }), SubfolderPickerModule;
        }(), context_activity_actions = __webpack_require__(91401), telemetry_events = __webpack_require__(87242), context_activity_service = __webpack_require__(22292), PublishDialogActivityEffects = function() {
            function PublishDialogActivityEffects(contextActivityService, telemetryService) {
                var _this = this;
                this.contextActivityService = contextActivityService, this.telemetryService = telemetryService, 
                this.createEvent$ = (0, ngrx_effects.GW)(function() {
                    return _this.contextActivityService.getActivityStream().pipe((0, ngrx_effects.l4)(context_activity_actions.Gb, context_activity_actions.xq, context_activity_actions.TH), (0, 
                    operators_filter.h)(function(_a) {
                        return isLoggablePublishDialogActivity(_a.properties);
                    }), (0, operators_tap.b)(function(_a) {
                        return logTelemetryEventFromContextActivity(_a.properties, _this.telemetryService);
                    }));
                }, {
                    dispatch: !1
                });
            }
            return PublishDialogActivityEffects.\u0275fac = function(t) {
                return new (t || PublishDialogActivityEffects)(core["\u0275\u0275inject"](context_activity_service.r), core["\u0275\u0275inject"](Telemetry.y0));
            }, PublishDialogActivityEffects.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: PublishDialogActivityEffects,
                factory: PublishDialogActivityEffects.\u0275fac
            }), PublishDialogActivityEffects;
        }(), loggablePublishDialogActivities = new Set([ "Publish Dialog", "Publish Failure", "Publish To Group" ]), isLoggablePublishDialogActivity = function(properties) {
            return loggablePublishDialogActivities.has(properties.name);
        }, toActivityStatus = ((context_activity_effects_a = {})[0] = "Running", context_activity_effects_a[1] = "Succeeded", 
        context_activity_effects_a[2] = "Failed", context_activity_effects_a[3] = "Canceled", 
        context_activity_effects_a), logTelemetryEventFromContextActivity = function(properties, telemetryService) {
            var _a, activityDuration = properties.end - properties.start, start = new Date(properties.start).toISOString(), end = new Date(properties.end).toISOString();
            switch (properties.name) {
              case "Publish Dialog":
                return telemetryService.logEvent(telemetry_events.ll, {
                    completionStatus: toActivityStatus[properties.status],
                    duration: activityDuration,
                    start,
                    end
                });

              case "Publish To Group":
                return telemetryService.logEvent(telemetry_events.P4, {
                    completionStatus: toActivityStatus[properties.status],
                    duration: activityDuration,
                    start,
                    end,
                    selectedSubfolderObjectId: properties.selectedSubfolderObjectId,
                    selectedWorkspaceObjectId: properties.selectedWorkspaceObjectId,
                    supportSubfolders: properties.supportSubfolders
                });

              case "Publish Failure":
                return telemetryService.logEvent(telemetry_events.y2, {
                    completionStatus: toActivityStatus[properties.status],
                    duration: activityDuration,
                    start,
                    end,
                    errorOrWarningType: properties.errorOrWarningType,
                    errorCode: properties.errorCode,
                    linksClicked: null === (_a = properties.linksClicked) || void 0 === _a ? void 0 : _a.join(",")
                });
            }
        }, markdown_it = __webpack_require__(17261), createName = function(name) {
            return "".concat("[Desktop Subfolders]", " ").concat(name);
        }, upsertWorkspaces = (0, ngrx_store.PH)(createName("Upsert workspaces"), (0, ngrx_store.Ky)()), upsertWorkspaceWithContents = (0, 
        ngrx_store.PH)(createName("Upsert workspace with contents"), (0, ngrx_store.Ky)()), publish = __webpack_require__(60986), desktop_subfolders_reducer_groupAdapter = (0, 
        ngrx_entity.H)({
            selectId: function(group) {
                return group.objectId;
            }
        }), initialDesktopSubfoldersState = (desktop_subfolders_reducer_groupAdapter.getInitialState(), 
        {
            workspaces: desktop_subfolders_reducer_groupAdapter.getInitialState()
        });
        (0, ngrx_store.Lq)(initialDesktopSubfoldersState, (0, ngrx_store.on)(upsertWorkspaces, function(state, payload) {
            return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, state), {
                workspaces: desktop_subfolders_reducer_groupAdapter.upsertMany((workspaces = payload.workspaces, 
                workspaces.map(function(w, index) {
                    return {
                        displayName: w.Name,
                        objectId: w.WorkspaceObjectId.toLowerCase(),
                        contents: null != w.Contents ? (0, tslib_es6.__assign)({}, w.Contents) : void 0,
                        id: index,
                        capacitySku: w.CapacitySku,
                        datasourceBindingSecurityMode: "Origin" === w.DatasourceBindingSecurityMode ? 0 : "Strict" === w.DatasourceBindingSecurityMode ? 1 : void 0,
                        isMyWorkspace: w.IsPersonalWorkspace,
                        type: "User" === w.Type ? contracts.Sr.MyFolder : void 0,
                        cdsaModelIds: [],
                        dashboardIds: [],
                        datamartIds: [],
                        datasetIds: [],
                        isFolder: "Folder" === w.Type || "User" === w.Type,
                        reportIds: [],
                        subfolderIds: [],
                        workbookIds: []
                    };
                })), state.workspaces)
            });
            var workspaces;
        }), (0, ngrx_store.on)(upsertWorkspaceWithContents, function(state, payload) {
            return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, state), {
                workspaces: desktop_subfolders_reducer_groupAdapter.upsertOne((input = payload.workspace, 
                contents = payload.contents, (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, input), {
                    contents: null != contents ? (0, tslib_es6.__assign)({}, contents) : void 0
                })), state.workspaces)
            });
            var input, contents;
        }));
        var selectDesktopSubfoldersState = function(state) {
            return state.desktopSubfolders;
        }, getAllWorkspaces = (0, ngrx_store.P1)(selectDesktopSubfoldersState, function(state) {
            return desktop_subfolders_reducer_groupAdapter.getSelectors().selectAll(state.workspaces);
        }), platform_browser = ((0, ngrx_store.P1)(selectDesktopSubfoldersState, function(state) {
            return desktop_subfolders_reducer_groupAdapter.getSelectors().selectEntities(state.workspaces);
        }), __webpack_require__(18942)), Telemetry_telemetry_service = __webpack_require__(96608), dialog_header_component = __webpack_require__(45051), dialog_body_component = __webpack_require__(53833), dialog_footer_component = __webpack_require__(44511), pbi_search_box_component = __webpack_require__(68070), pbi_scrollbar_directive = __webpack_require__(80649);
        function PublishToGroupDialogComponent_div_2_Template(rf, ctx) {
            if (1 & rf) {
                var _r5 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div")(1, "subfolder-picker", 6), core["\u0275\u0275listener"]("submitEvent", function($event) {
                    core["\u0275\u0275restoreView"](_r5);
                    var ctx_r4 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r4.subfolderPickerSubmit($event));
                })("cancelEvent", function() {
                    core["\u0275\u0275restoreView"](_r5);
                    var ctx_r6 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r6.close());
                }), core["\u0275\u0275elementEnd"]()();
            }
        }
        function PublishToGroupDialogComponent_div_3_mat_list_option_10_Template(rf, ctx) {
            if (1 & rf) {
                var _r13 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "mat-list-option", 17, 18), core["\u0275\u0275listener"]("keyup", function() {
                    core["\u0275\u0275restoreView"](_r13);
                    var _r11 = core["\u0275\u0275reference"](1), ctx_r12 = core["\u0275\u0275nextContext"](2);
                    return _r11.selected = !0, core["\u0275\u0275resetView"](ctx_r12.selected = _r11);
                })("dblclick", function() {
                    core["\u0275\u0275restoreView"](_r13);
                    var ctx_r14 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r14.onDoubleClicked());
                }), core["\u0275\u0275text"](2), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var workspace_r10 = ctx.$implicit;
                core["\u0275\u0275property"]("value", workspace_r10), core["\u0275\u0275advance"](2), 
                core["\u0275\u0275textInterpolate1"](" ", workspace_r10.Name, " ");
            }
        }
        function PublishToGroupDialogComponent_div_3_div_12_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 19), core["\u0275\u0275element"](1, "i", 20)(2, "div", 21), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r9 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("innerHTML", ctx_r9.markdownRawHtml, core["\u0275\u0275sanitizeHtml"]);
            }
        }
        var publish_to_group_dialog_component_c0 = function() {
            return {
                ignoreOverlay: !1,
                ignoreMobile: !1
            };
        };
        function PublishToGroupDialogComponent_div_3_Template(rf, ctx) {
            if (1 & rf) {
                var _r16 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div", 7)(1, "div", 8)(2, "label", 9), core["\u0275\u0275text"](3), 
                core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementStart"](4, "pbi-search-box")(5, "input", 10), 
                core["\u0275\u0275listener"]("ngModelChange", function($event) {
                    core["\u0275\u0275restoreView"](_r16);
                    var ctx_r15 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r15.searchText = $event);
                })("input", function() {
                    core["\u0275\u0275restoreView"](_r16);
                    var ctx_r17 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r17.searchText);
                }), core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementStart"](6, "div", 11)(7, "div", 12)(8, "mat-selection-list", 13, 14), 
                core["\u0275\u0275listener"]("selectionChange", function() {
                    core["\u0275\u0275restoreView"](_r16);
                    var _r7 = core["\u0275\u0275reference"](9), ctx_r18 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r18.selectionChange(_r7.selectedOptions.selected));
                })("keyup.arrowup", function() {
                    core["\u0275\u0275restoreView"](_r16);
                    var _r7 = core["\u0275\u0275reference"](9), ctx_r19 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r19.selectionChange(_r7.selectedOptions.selected));
                })("keyup.arrowdown", function() {
                    core["\u0275\u0275restoreView"](_r16);
                    var _r7 = core["\u0275\u0275reference"](9), ctx_r20 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r20.selectionChange(_r7.selectedOptions.selected));
                }), core["\u0275\u0275template"](10, PublishToGroupDialogComponent_div_3_mat_list_option_10_Template, 3, 2, "mat-list-option", 15), 
                core["\u0275\u0275pipe"](11, "workspaceFilter"), core["\u0275\u0275elementEnd"]()()(), 
                core["\u0275\u0275template"](12, PublishToGroupDialogComponent_div_3_div_12_Template, 3, 1, "div", 16), 
                core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r1 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](ctx_r1.dialogBodyLabel), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("placeholder", ctx_r1.selectWorkspacePlaceholder)("ngModel", ctx_r1.searchText), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("pbiScrollbar", core["\u0275\u0275pureFunction0"](11, publish_to_group_dialog_component_c0)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("multiple", !1), core["\u0275\u0275attribute"]("aria-label", ctx_r1.selectionListAriaLabel), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngForOf", core["\u0275\u0275pipeBind2"](11, 8, ctx_r1.workspaces, ctx_r1.searchText)), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", ctx_r1.markdownRawHtml);
            }
        }
        function PublishToGroupDialogComponent_div_4_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "div", 22);
        }
        function PublishToGroupDialogComponent_dialog_footer_5_Template(rf, ctx) {
            if (1 & rf) {
                var _r22 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "dialog-footer", 23), core["\u0275\u0275listener"]("okAction", function() {
                    core["\u0275\u0275restoreView"](_r22);
                    var ctx_r21 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r21.submit());
                })("cancelAction", function() {
                    core["\u0275\u0275restoreView"](_r22);
                    var ctx_r23 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r23.close());
                }), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r3 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("okText", ctx_r3.localizedPublishToGroupSelectText)("disableOk", !ctx_r3.selectedWorkspace);
            }
        }
        var publish_to_group_dialog_component_c1 = function(a0) {
            return {
                "subfolder-picker-header": a0
            };
        }, publish_to_group_dialog_component_c2 = function(a0) {
            return {
                "subfolder-picker-body": a0
            };
        }, publish_to_group_dialog_component_c3 = function(a0) {
            return {
                width: a0
            };
        }, PublishToGroupDialogComponent = function() {
            function PublishToGroupDialogComponent(store, dialogRef, localizationService, sanitizer, telemetryService, data, publishService) {
                if (this.store = store, this.dialogRef = dialogRef, this.localizationService = localizationService, 
                this.sanitizer = sanitizer, this.telemetryService = telemetryService, this.data = data, 
                this.publishService = publishService, this.subfolderPickerVisible = !1, this.workspaces = this.data.input.workspaces, 
                this.dialogBodyLabel = this.localizationService.get("PublishToGroupDialogBodyLabel"), 
                this.selectWorkspacePlaceholder = this.localizationService.get("SearchBox_Text"), 
                this.localizedPublishToGroupTitle = this.localizationService.get("Desktop_FileMenu_PublishToPowerBI"), 
                this.localizedPublishToGroupSelectText = this.localizationService.get("Select"), 
                this.selectionListAriaLabel = this.localizationService.get("NavigationPane_Workspaces"), 
                this.markdownRawHtml = this.convertMarkdown(this.data.input.markdownContent), this.supportSubfolders = this.data.input.supportSubfolders, 
                this.parentPublishToGroupTitle = this.data.input.supportSubfolders ? "" : this.localizedPublishToGroupTitle, 
                this.subfolderPickerWidth = "1180px", publishService.startPublishDialogContextActivity(), 
                data.input.supportSubfolders && null != store && null != (null == data ? void 0 : data.input.workspaces)) {
                    for (var _i = 0, _a = data.input.workspaces; _i < _a.length; _i++) {
                        var w = _a[_i];
                        w.Id === PowerBIContracts_constants.Q15 && (this.myWorkspaceObjectId = w.WorkspaceObjectId), 
                        w.Id = w.WorkspaceObjectId;
                    }
                    store.dispatch(upsertWorkspaces({
                        workspaces: data.input.workspaces
                    }));
                }
            }
            return PublishToGroupDialogComponent.prototype.ngOnDestroy = function() {
                this.publishToGroupActivity && (this.publishToGroupActivity.reject(new Error("Dialog closed before activity could complete")), 
                this.publishToGroupActivity = null);
            }, PublishToGroupDialogComponent.prototype.ngOnInit = function() {
                this.publishToGroupActivity && (this.publishToGroupActivity.cancel(), this.publishToGroupActivity = null), 
                this.publishToGroupActivity = this.publishService.publishDialogActivity.createChildActivity({
                    name: "Publish To Group"
                }), this.data.input.supportSubfolders && (this.publishToGroupActivity.setProperty("supportSubfolders", !0), 
                this.useSubfolderSelection());
            }, PublishToGroupDialogComponent.prototype.subfolderPickerSubmit = function(pickerResult) {
                var _a, _this = this;
                if (pickerResult) {
                    this.selectedWorkspace = this.data.input.workspaces.find(function(w) {
                        return w.WorkspaceObjectId === pickerResult.selectedWorkspaceObjectId;
                    });
                    var selectedSubfolderId_1 = pickerResult.selectedSubfolderId;
                    return this.store.select(getAllWorkspaces).pipe((0, operators_take.q)(1)).subscribe(function(workspaces) {
                        var _a, workspace = workspaces.find(function(w) {
                            return w.objectId === pickerResult.selectedWorkspaceObjectId;
                        });
                        _this.selectedSubfolder = null === (_a = null == workspace ? void 0 : workspace.contents) || void 0 === _a ? void 0 : _a.subfolders.find(function(f) {
                            return f.id === selectedSubfolderId_1;
                        });
                    }), (null === (_a = this.selectedWorkspace) || void 0 === _a ? void 0 : _a.Id) === this.myWorkspaceObjectId && (this.selectedWorkspace.Id = PowerBIContracts_constants.Q15), 
                    void this.submit();
                }
            }, PublishToGroupDialogComponent.prototype.useSubfolderSelection = function() {
                var _a, _b, _c, messageBarModel = this.markdownRawHtml ? {
                    bannerType: 0,
                    allowExpandButton: !0,
                    message: this.markdownRawHtml,
                    isMultiline: !0
                } : void 0, initialWorkspace = null !== (_b = null !== (_a = this.data.input.workspaces.find(function(g) {
                    return null != g.Contents;
                })) && void 0 !== _a ? _a : this.data.input.workspaces.find(function(g) {
                    return g.IsPersonalWorkspace;
                })) && void 0 !== _b ? _b : this.data.input.workspaces[0];
                this.data.initialSubfolderId = void 0, this.data.title = this.localizedPublishToGroupTitle, 
                this.data.confirmButtonText = this.localizedPublishToGroupSelectText, this.data.allowSelectWorkspace = !0, 
                this.data.messageBarModel = messageBarModel, this.data.useCustomDataSource = !0;
                var initialFolder = null === (_c = null == initialWorkspace ? void 0 : initialWorkspace.Contents) || void 0 === _c ? void 0 : _c.subfolders.find(function(f) {
                    return f.selected;
                });
                this.data.initialSubfolderId = null == initialFolder ? void 0 : initialFolder.id, 
                this.data.hideNewButton = !0, this.data.workspaceObjectId = initialWorkspace.WorkspaceObjectId, 
                this.data.embedMode = !0, this.parentPublishToGroupTitle = this.data.input.supportSubfolders ? "" : this.localizedPublishToGroupTitle, 
                this.subfolderPickerActivity = this.publishToGroupActivity.createChildActivity({
                    name: "Publish Subfolder Picker"
                }), this.subfolderPickerVisible = !0;
            }, PublishToGroupDialogComponent.prototype.submit = function() {
                var _a, _b, _c, _this = this;
                this.telemetryService.logEvent(telemetry_events.ke, {
                    actionType: "ClickedSubmit",
                    dialogName: "PublishToGroupDialogComponent"
                }), VisualsCommon_debug.fF.assert(function() {
                    return void 0 !== _this.selectedWorkspace;
                }, "Selected workspace should be defined.");
                var result = {
                    workspace: this.selectedWorkspace,
                    selectedSubfolder: null !== (_a = this.selectedSubfolder) && void 0 !== _a ? _a : null,
                    result: 1
                };
                this.publishToGroupActivity.setProperty("selectedWorkspaceObjectId", null === (_b = this.selectedWorkspace) || void 0 === _b ? void 0 : _b.WorkspaceObjectId), 
                this.publishToGroupActivity.setProperty("selectedSubfolderObjectId", null === (_c = this.selectedSubfolder) || void 0 === _c ? void 0 : _c.objectId), 
                this.publishToGroupActivity.resolve(), this.publishToGroupActivity = null, this.subfolderPickerActivity && (this.subfolderPickerActivity.resolve(), 
                this.subfolderPickerActivity = null), this.dialogRef.close(result);
            }, PublishToGroupDialogComponent.prototype.close = function() {
                this.telemetryService.logEvent(telemetry_events.ke, {
                    actionType: "ClickedCancel",
                    dialogName: "PublishToGroupDialogComponent"
                }), this.publishToGroupActivity.cancel(), this.publishToGroupActivity = null, this.subfolderPickerActivity && (this.subfolderPickerActivity.cancel(), 
                this.subfolderPickerActivity = null), this.dialogRef.close({
                    workspace: null,
                    selectedSubfolder: null,
                    result: 2
                });
            }, PublishToGroupDialogComponent.prototype.onEscapeKey = function() {
                this.close();
            }, PublishToGroupDialogComponent.prototype.selectionChange = function(option) {
                this.selectedWorkspace = (null == option ? void 0 : option.length) > 0 ? option[0].value : void 0;
            }, PublishToGroupDialogComponent.prototype.onSearchCleared = function() {
                this.searchText = "";
            }, PublishToGroupDialogComponent.prototype.onDoubleClicked = function() {
                this.selectedWorkspace && this.submit();
            }, PublishToGroupDialogComponent.prototype.convertMarkdown = function(markdownString) {
                var _this = this;
                if (markdownString) return this.convertMarkdownToHtml(markdownString, function(html) {
                    return _this.sanitizer.sanitize(core.SecurityContext.HTML, html);
                }).split("&#10;").join("");
            }, PublishToGroupDialogComponent.prototype.convertMarkdownToHtml = function(markdown, sanitize) {
                var _a, _b, _this = this, md = new markdown_it({
                    html: !1,
                    xhtmlOut: !1,
                    linkify: !0,
                    breaks: !0
                });
                return md.validateLink = function(url) {
                    return null != _this.getLinkifyUrl(url, md);
                }, md.renderer.rules.link_open = function(tokens, idx, options, env, self) {
                    tokens[idx].attrPush([ "class", "customDislaimerLink" ]);
                    var hrefIndex = tokens[idx].attrIndex("href");
                    if (hrefIndex >= 0) {
                        var linkifyValue = _this.getLinkifyUrl(tokens[idx].attrs[hrefIndex][1], md);
                        tokens[idx].attrs[hrefIndex][1] = linkifyValue;
                    }
                    return self.renderToken(tokens, idx, options);
                }, null !== (_b = null === (_a = sanitize(md.render(markdown))) || void 0 === _a ? void 0 : _a.trim()) && void 0 !== _b ? _b : "";
            }, PublishToGroupDialogComponent.prototype.getLinkifyUrl = function(inputUrl, md) {
                var linkifyResult = md.linkify.match(inputUrl);
                return null === linkifyResult || linkifyResult.length < 1 ? null : linkifyResult[0].url;
            }, PublishToGroupDialogComponent.\u0275fac = function(t) {
                return new (t || PublishToGroupDialogComponent)(core["\u0275\u0275directiveInject"](ngrx_store.yh, 8), core["\u0275\u0275directiveInject"](dialog.so), core["\u0275\u0275directiveInject"](localization_service.o), core["\u0275\u0275directiveInject"](platform_browser.H7), core["\u0275\u0275directiveInject"](Telemetry_telemetry_service.y0), core["\u0275\u0275directiveInject"](dialog.WI), core["\u0275\u0275directiveInject"](publish.q));
            }, PublishToGroupDialogComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: PublishToGroupDialogComponent,
                selectors: [ [ "publish-to-group-dialog" ] ],
                hostBindings: function(rf, ctx) {
                    1 & rf && core["\u0275\u0275listener"]("keydown.escape", function() {
                        return ctx.onEscapeKey();
                    }, !1, core["\u0275\u0275resolveDocument"]);
                },
                decls: 6,
                vars: 14,
                consts: [ [ 3, "ngClass", "title", "close" ], [ 3, "ngClass", "ngStyle" ], [ 4, "ngIf" ], [ "class", "publish-dialog-body-content", 4, "ngIf" ], [ "class", "subfolder-picker-container", 4, "ngIf" ], [ 3, "okText", "disableOk", "okAction", "cancelAction", 4, "ngIf" ], [ 3, "submitEvent", "cancelEvent" ], [ 1, "publish-dialog-body-content" ], [ 1, "body-label-wrapper" ], [ "id", "selectNotification" ], [ "type", "search", "pbiSearchInput", "", "aria-labelledby", "selectNotification", 1, "searchText", "pbi-focus-outline", 3, "placeholder", "ngModel", "ngModelChange", "input" ], [ 1, "workspaces-list-flex-wrapper" ], [ "dragScroll", "", 1, "workspaces-list-scroll-wrapper", 3, "pbiScrollbar" ], [ 3, "multiple", "selectionChange", "keyup.arrowup", "keyup.arrowdown" ], [ "workspacesList", "" ], [ 3, "value", "keyup", "dblclick", 4, "ngFor", "ngForOf" ], [ "class", "custom-tenant-markdown-container", 4, "ngIf" ], [ 3, "value", "keyup", "dblclick" ], [ "opt", "" ], [ 1, "custom-tenant-markdown-container" ], [ 1, "glyphicon", "pbi-glyph-info", "glyph-small", "icon" ], [ 1, "custom-tenant-markdown-message", 3, "innerHTML" ], [ 1, "subfolder-picker-container" ], [ 3, "okText", "disableOk", "okAction", "cancelAction" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementStart"](0, "dialog-header", 0), core["\u0275\u0275listener"]("close", function() {
                        return ctx.close();
                    }), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](1, "dialog-body", 1), 
                    core["\u0275\u0275template"](2, PublishToGroupDialogComponent_div_2_Template, 2, 0, "div", 2), 
                    core["\u0275\u0275template"](3, PublishToGroupDialogComponent_div_3_Template, 13, 12, "div", 3), 
                    core["\u0275\u0275template"](4, PublishToGroupDialogComponent_div_4_Template, 1, 0, "div", 4), 
                    core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](5, PublishToGroupDialogComponent_dialog_footer_5_Template, 1, 2, "dialog-footer", 5)), 
                    2 & rf && (core["\u0275\u0275property"]("ngClass", core["\u0275\u0275pureFunction1"](8, publish_to_group_dialog_component_c1, ctx.subfolderPickerVisible))("title", ctx.parentPublishToGroupTitle), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngClass", core["\u0275\u0275pureFunction1"](10, publish_to_group_dialog_component_c2, ctx.subfolderPickerVisible))("ngStyle", core["\u0275\u0275pureFunction1"](12, publish_to_group_dialog_component_c3, ctx.subfolderPickerVisible ? ctx.subfolderPickerWidth : "")), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx.subfolderPickerVisible), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !ctx.subfolderPickerVisible), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx.subfolderPickerVisible), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !ctx.subfolderPickerVisible));
                },
                dependencies: function() {
                    return [ common.NgClass, common.NgForOf, common.NgIf, common.NgStyle, dialog_header_component.A, dialog_body_component.H, dialog_footer_component.g, legacy_list.kh, legacy_list.O$, fesm2022_forms.Fj, fesm2022_forms.JJ, fesm2022_forms.On, pbi_search_box_component.a, pbi_search_box_component.p, pbi_scrollbar_directive.r, SubfolderPickerComponent, WorkspaceFilterPipe ];
                },
                styles: [ "[_ngcontent-%COMP%]:root{--tridentColor10: #001919;--tridentColor20: #012826;--tridentColor30: #01322E;--tridentColor40: #033F38;--tridentColor50: #054043;--tridentColor60: #0A5C50;--tridentColor70: #0C695A;--tridentColor80: #117865;--tridentColor90: #1F937E;--tridentColor100: #2AAC94;--tridentColor110: #3ABB9F;--tridentColor120: #52C7AA;--tridentColor130: #78D3B9;--tridentColor140: #9EE0CB;--tridentColor150: #C0ECDD;--tridentColor160: #E3F7EF}@mixin trident-legacy-map{accent-color: var(--tridentColor80); --fluent-theme-light-color: var(--tridentColor140); --fluent-theme-secondary-color: var(--tridentColor90); --theme-primary-accessible-color: var(--tridentColor80); --fluent-theme-primary-color: var(--tridentColor80); --fluent-theme-dark-alt-color: var(--tridentColor70); --theme-dark-color: var(--tridentColor60); --theme-darker-color: var(--tridentColor40); --fluent-theme-dark-color: var(--tridentColor60); --fluent-theme-pbi-shade30: var(--tridentColor40); --globalColorBrand10: var(--tridentColor10); --globalColorBrand20: var(--tridentColor20); --globalColorBrand30: var(--tridentColor30); --globalColorBrand40: var(--tridentColor40); --globalColorBrand50: var(--tridentColor50); --globalColorBrand60: var(--tridentColor60); --globalColorBrand70: var(--tridentColor70); --globalColorBrand80: var(--tridentColor80); --globalColorBrand90: var(--tridentColor90); --globalColorBrand100: var(--tridentColor100); --globalColorBrand110: var(--tridentColor110); --globalColorBrand120: var(--tridentColor120); --globalColorBrand130: var(--tridentColor130); --globalColorBrand140: var(--tridentColor140); --globalColorBrand150: var(--tridentColor150); --globalColorBrand160: var(--tridentColor160); --button-primary-content-color: var(--white-color); --checkmark-primary-content-color: var(--colorNeutralForegroundInverted); --text-primary-content-color: var(--white-color); --text-primary-content-color-hc: var(--white-color); --add-new-page-icon-color: var(--white-color); --fluent-theme-link-alt-color: var(--colorBrandForegroundLinkPressed, var(--tridentColor40)); --fluent-theme-link-color: var(--colorBrandForegroundLink, var(--tridentColor70)); --fluent-theme-link-darker-alt-color: var(--colorBrandForegroundLinkSelected, var(--tridentColor70)); --fluent-theme-link-darker-color: var(--colorBrandForegroundLinkHover, var(--tridentColor60)); --fluent-theme-link-mid-color: var(--colorBrandForegroundLinkSelected, var(--tridentColor70)); --default-visited-link-color: var(--colorBrandForegroundLink, var(--tridentColor70)); --link-on-primary-color: var(--white-color);}[_nghost-%COMP%]{--listBoxForegroundColor: rgba(0, 0, 0, .87);--listItemBackgroundFocus: #E0E0E0;--listItemSelectedBorder: transparent;--listItemBackgroundHover: #F5F5F5;--listItemSelectdBorderLineStyle: dotted;--markdownContainerBackground: var(--tridentColor160)}[data-legacy-theming=false]   [_nghost-%COMP%]{--listBoxForegroundColor: var(--colorNeutralForeground1);--listItemSelectedBorder: var(--colorCompoundBrandStroke);--listItemBackgroundHover: var(--colorNeutralBackground3);--listItemBackgroundFocus: var(--colorNeutralBackground3);--listItemSelectedBorderLineStyle: solid;--markdownContainerBackground: var(--colorNeutralBackground3)}[_nghost-%COMP%]{display:flex;flex-direction:column}[_nghost-%COMP%]   dialog-header[_ngcontent-%COMP%]{padding:10px 10px 0;margin-left:15px;margin-right:15px;margin-top:20px}[_nghost-%COMP%]   dialog-header.subfolder-picker-header[_ngcontent-%COMP%]     .pbi-dialog-header{margin:0}[_nghost-%COMP%]   dialog-body.subfolder-picker-body[_ngcontent-%COMP%]{padding:0;margin:0}[_nghost-%COMP%]   dialog-header.subfolder-picker-header[_ngcontent-%COMP%]{padding:0;margin:0;height:0}[_nghost-%COMP%]   dialog-body[_ngcontent-%COMP%]{padding:10px;margin-left:15px;margin-right:15px;overflow:hidden;color:var(--listBoxForegroundColor)}[_nghost-%COMP%]   dialog-body[_ngcontent-%COMP%]   .body-label-wrapper[_ngcontent-%COMP%]{margin-bottom:8px}[_nghost-%COMP%]   dialog-body[_ngcontent-%COMP%]   pbi-search-box[_ngcontent-%COMP%]{width:536px}[_nghost-%COMP%]   dialog-body[_ngcontent-%COMP%]   pbi-search-box[_ngcontent-%COMP%]     .pbi-search-box:before{top:3px}[_nghost-%COMP%]   dialog-body[_ngcontent-%COMP%]   pbi-search-box[_ngcontent-%COMP%]     .searchbox-clear-icon{top:3px}[_nghost-%COMP%]   dialog-body[_ngcontent-%COMP%]   pbi-search-box[_ngcontent-%COMP%]   [_ngcontent-%COMP%]::-webkit-input-placeholder{font-style:italic}[_nghost-%COMP%]   dialog-body[_ngcontent-%COMP%]   .publish-dialog-body-content[_ngcontent-%COMP%]{overflow:hidden}[_nghost-%COMP%]   dialog-body[_ngcontent-%COMP%]   .workspaces-list-flex-wrapper[_ngcontent-%COMP%]{margin-top:15px;border:1px solid grey}[_nghost-%COMP%]   dialog-body[_ngcontent-%COMP%]   mat-selection-list[_ngcontent-%COMP%]{padding-top:0;width:536px;height:208px;overflow-x:hidden}[_nghost-%COMP%]   dialog-body[_ngcontent-%COMP%]   mat-list-option[_ngcontent-%COMP%]{max-width:533px;height:32px;box-sizing:border-box;border:2px dotted transparent;font-size:14px;color:var(--listBoxForegroundColor)}[_nghost-%COMP%]   dialog-body[_ngcontent-%COMP%]   mat-list-option[aria-selected=true][_ngcontent-%COMP%]{border:2px var(--listItemSelectedBorderLineStyle);border-color:var(--listItemSelectedBorder);background-color:var(--listItemBackgroundFocus)}[_nghost-%COMP%]   dialog-body[_ngcontent-%COMP%]   mat-list-option[aria-selected=true][_ngcontent-%COMP%]:focus-visible{border:2px var(--listItemSelectedBorderLineStyle);border-color:var(--listItemSelectedBorder)}[_nghost-%COMP%]   dialog-body[_ngcontent-%COMP%]   mat-list-option[aria-selected=false][_ngcontent-%COMP%]:hover{background-color:var(--listItemBackgroundHover)}[_nghost-%COMP%]   dialog-body[_ngcontent-%COMP%]   .custom-tenant-markdown-container[_ngcontent-%COMP%]{display:flex;flex-direction:row;margin-top:16px;width:536px;height:100px;background-color:var(--markdownContainerBackground)}[_nghost-%COMP%]   dialog-body[_ngcontent-%COMP%]   .custom-tenant-markdown-container[_ngcontent-%COMP%]   .pbi-glyph-info[_ngcontent-%COMP%]{padding:40px 10px 0}[_nghost-%COMP%]   dialog-body[_ngcontent-%COMP%]   .custom-tenant-markdown-container[_ngcontent-%COMP%]   .custom-tenant-markdown-message[_ngcontent-%COMP%]{font-size:12px;overflow-y:auto}[_nghost-%COMP%]   dialog-footer[_ngcontent-%COMP%]{padding:0 10px 10px;margin-left:15px;margin-right:15px;margin-bottom:10px}" ],
                changeDetection: 0
            }), PublishToGroupDialogComponent;
        }(), WorkspaceFilterPipe = function() {
            function WorkspaceFilterPipe() {
                this.isEmpty = function(text) {
                    return !text || null !== text.match(/^ *$/);
                };
            }
            return WorkspaceFilterPipe.prototype.transform = function(workspaces, filter) {
                return !workspaces || this.isEmpty(filter) ? workspaces : workspaces.filter(function(workspace) {
                    return workspace.Name.toLowerCase().includes(filter.toLowerCase());
                });
            }, WorkspaceFilterPipe.\u0275fac = function(t) {
                return new (t || WorkspaceFilterPipe);
            }, WorkspaceFilterPipe.\u0275pipe = core["\u0275\u0275definePipe"]({
                name: "workspaceFilter",
                type: WorkspaceFilterPipe,
                pure: !1
            }), WorkspaceFilterPipe;
        }(), PublishToGroupDialogModule = function() {
            function PublishToGroupDialogModule() {}
            return PublishToGroupDialogModule.\u0275fac = function(t) {
                return new (t || PublishToGroupDialogModule);
            }, PublishToGroupDialogModule.\u0275mod = core["\u0275\u0275defineNgModule"]({
                type: PublishToGroupDialogModule
            }), PublishToGroupDialogModule.\u0275inj = core["\u0275\u0275defineInjector"]({
                imports: [ ngrx_effects.sQ.forFeature([ PublishDialogActivityEffects ]), dialogs_module.c.withManifest([ {
                    componentIdentifier: "PublishToGroupDialogComponent",
                    componentType: PublishToGroupDialogComponent
                } ]), common.CommonModule, dialog.Is, dialogs_parts_module.F, legacy_list.gR, fesm2022_forms.u5, pbi_search_box_module.t, pbi_scrollbar_module.K, SubfolderPickerModule ]
            }), PublishToGroupDialogModule;
        }();
    },
    87242: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            P4: function() {
                return PublishToGroupDialog;
            },
            Rq: function() {
                return PublishUIPublishRequestTelemEvent;
            },
            ke: function() {
                return PublishUIUserActionTelemEvent;
            },
            ll: function() {
                return PublishDialog;
            },
            y2: function() {
                return PublishDialogFailure;
            }
        });
        var _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(41114), PublishUIUserActionTelemEvent = _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.cx["PBI.Publish.UI.UserAction"] = (0, 
        _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.b1)("PBI.Publish.UI.UserAction"), PublishUIPublishRequestTelemEvent = _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.cx["PBI.Publish.UI.PublishRequest"] = (0, 
        _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.b1)("PBI.Publish.UI.PublishRequest"), PublishDialog = _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.cx["PBI.PublishDialog"] = (0, 
        _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.b1)("PBI.PublishDialog"), PublishToGroupDialog = _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.cx["PBI.PublishToGroupDialog"] = (0, 
        _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.b1)("PBI.PublishToGroupDialog"), PublishDialogFailure = _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.cx["PBI.PublishDialogFailure"] = (0, 
        _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.b1)("PBI.PublishDialogFailure");
    },
    76323: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            _: function() {
                return SyncService;
            }
        });
        var tslib_es6 = __webpack_require__(81337), promiseFactory = __webpack_require__(14463), debug = __webpack_require__(62458), trace = __webpack_require__(12913), formatUtil = __webpack_require__(59694), LongPollServiceBase = function() {
            function LongPollServiceBase(promiseFactory, httpService) {
                this.promiseFactory = promiseFactory, this.httpService = httpService, debug.fF.assertValue(promiseFactory, "promiseFactory"), 
                debug.fF.assertValue(httpService, "httpService"), this.isEnabled = !0, this.requestDeferred = this.promiseFactory.defer(), 
                this.requestDeferred.resolve(null), this.longPollInitialized = !1, this.lastLongPollCancelled = !1, 
                this.lastLongPollTimedOut = !1, this.retryCount = 0;
            }
            return LongPollServiceBase.prototype.startMonitoring = function(delay) {
                var _this = this;
                void 0 === delay && (delay = 0), this.longPollInitialized || (this.longPollInitialized = !0, 
                this.isEnabled = !0, this.requestDelay && clearTimeout(this.requestDelay), this.requestDelay = setTimeout(function() {
                    _this.sendLongPollRequest();
                }, delay));
            }, LongPollServiceBase.prototype.setLongPollInitialized = function(isInitialized) {
                this.longPollInitialized = isInitialized;
            }, LongPollServiceBase.prototype.cancelCurrentRequest = function() {
                this.lastLongPollCancelled = !0, this.requestDeferred.resolve(null), this.longPollInitialized = !1, 
                this.requestDelay && clearTimeout(this.requestDelay);
            }, LongPollServiceBase.prototype.pause = function() {
                this.paused = !0, this.cancelCurrentRequest();
            }, LongPollServiceBase.prototype.resume = function() {
                this.paused = !1, this.startMonitoring();
            }, LongPollServiceBase.prototype.trySendRequest = function(request) {
                var requestOptions = this.requestOptions, authorization = requestOptions.headers.Authorization, isTokenAvailable = !1;
                if (authorization) {
                    var authHeaderValues = authorization.split(" ");
                    isTokenAvailable = authHeaderValues.length > 1 && !(0, formatUtil.g)(authHeaderValues[1]) && "undefined" !== authHeaderValues[1];
                }
                if (isTokenAvailable) return this.httpService.post(this.getEndpointUrl(), {
                    request
                }, requestOptions);
                trace.f.warning("Auth token not available, avoiding powerbi/refresh/subscribe request");
            }, Object.defineProperty(LongPollServiceBase.prototype, "requestHeader", {
                get: function() {
                    return null;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(LongPollServiceBase.prototype, "longPollDurationInMs", {
                get: function() {
                    return 6e4;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(LongPollServiceBase.prototype, "requestOptions", {
                get: function() {
                    var _this = this, requestDeferred = this.requestDeferred;
                    debug.fF.assertValue(requestDeferred, "requestDeferred"), this.lastLongPollTimedOut = !1, 
                    this.lastLongPollCancelled = !1, setTimeout(function() {
                        _this.lastLongPollTimedOut = !0, requestDeferred.resolve(null);
                    }, this.longPollDurationInMs);
                    var requestOptions = this.httpService.powerbiRequestOptions(null, null, this.requestHeader, !0);
                    return requestOptions.retryCount = 0, requestOptions.timeout = requestDeferred.promise, 
                    requestOptions.silentlyFailOnExpiry = !0, requestOptions;
                },
                enumerable: !1,
                configurable: !0
            }), LongPollServiceBase.prototype.sendLongPollRequest = function() {
                var _this = this;
                if (!this.paused && this.isEnabled) {
                    this.requestDeferred = this.promiseFactory.defer();
                    var request = this.getRequest();
                    if (!request) return void this.reset();
                    var requestPromise = this.trySendRequest(request);
                    if (!requestPromise) return;
                    requestPromise.then(function(result) {
                        _this.retryCount = 0, _this.requestDeferred.resolve(null), _this.processResponse(result.data), 
                        _this.sendLongPollRequest();
                    }, function(result) {
                        _this.requestDeferred.resolve(null), _this.lastLongPollTimedOut ? (_this.retryCount = 0, 
                        _this.sendLongPollRequest()) : _this.lastLongPollCancelled ? _this.retryCount = 0 : _this.retryCount < 3 ? (_this.retryCount++, 
                        _this.sendLongPollRequest()) : (_this.processError(result && result.error), _this.suspend());
                    });
                }
            }, LongPollServiceBase.prototype.suspend = function() {
                var _this = this, deferred = this.promiseFactory.defer();
                deferred.promise.then(function() {
                    _this.cancelCurrentRequest(), _this.startMonitoring();
                }), this.httpService.registerResponseCallback(function httpResponseCallback(success) {
                    success && (_this.httpService.unregisterResponseCallback(httpResponseCallback), 
                    deferred.resolve(null));
                }), setTimeout(function() {
                    deferred.resolve(null);
                }, 12e4);
            }, LongPollServiceBase.prototype.reset = function() {
                this.longPollInitialized = !1, this.lastLongPollTimedOut = !1, this.lastLongPollCancelled = !1;
            }, LongPollServiceBase;
        }(), Utility = __webpack_require__(38078), Telemetry = __webpack_require__(21617), events = __webpack_require__(59055), RollingHashSet = function() {
            function RollingHashSet(maxKeysCount) {
                this.maxKeysCount = maxKeysCount, debug.fF.assert(function() {
                    return maxKeysCount > 1;
                }, "maxKeyCount of RollingHashSet should be > 1"), this.keys = [], this.valuesMap = {};
            }
            return RollingHashSet.prototype.add = function(key, value) {
                var keys = this.keys, valuesMap = this.valuesMap, hasPreviousValue = this.hasKey(key);
                valuesMap[key] = value, hasPreviousValue || (keys.push(key), keys.length > this.maxKeysCount && (delete valuesMap[keys[0]], 
                keys.shift()));
            }, RollingHashSet.prototype.get = function(key) {
                return this.valuesMap[key];
            }, RollingHashSet.prototype.hasKey = function(key) {
                return void 0 !== this.valuesMap[key];
            }, RollingHashSet;
        }(), contract = __webpack_require__(12604), DashboardRefreshService = function() {
            function DashboardRefreshService(telemetryService, featureSwitchService) {
                this.telemetryService = telemetryService, this.featureSwitchService = featureSwitchService, 
                this.dashboards = [], this.groups = [], this.userDashboardListVersion = null, this.folders = [], 
                this.dashboardRefreshListeners = [], this.packageRefreshListeners = [], this.workspaceListener = [], 
                this.pipelineListener = [], this.pipelineStageListener = [], this.reportRefreshListeners = [], 
                this.workbookRefreshListeners = [], this.modelRefreshListeners = [], this.queryDataRefreshListeners = [], 
                this.insightsListeners = [], this.notificationListeners = [], this.cdsaModelListeners = [], 
                this.datamartListeners = [], this.contentProviderListeners = [], this.gitIntegrationListeners = [], 
                this.dashboardMetadataRequestIds = new RollingHashSet(15), this.dashboardMetadataRequestIdFilters = new RollingHashSet(15), 
                this.importContentRequestIds = new RollingHashSet(15), this.metadataRequestIds = new RollingHashSet(15);
            }
            return DashboardRefreshService.prototype.replaceDashboardsToMonitor = function(dashboards) {
                (0, contract.wS)(dashboards, "replaceDashboardsToMonitor: dashboards"), this.dashboards = this.dashboards || [];
                var dashboardListChanged = !_.isEqual(_.map(dashboards, function(d) {
                    return d.id;
                }), _.map(this.dashboards, function(d) {
                    return d.id;
                }));
                return this.dashboards = dashboards, dashboardListChanged;
            }, DashboardRefreshService.prototype.stopMonitoringAllDashboards = function() {
                this.dashboards = [];
            }, DashboardRefreshService.prototype.stopMonitoringDashboard = function(dashboardId) {
                this.dashboards = _.filter(this.dashboards, function(d, i, a) {
                    return d.id !== dashboardId;
                });
            }, DashboardRefreshService.prototype.replaceFoldersToMonitor = function(folders) {
                (0, contract.wS)(folders, "replaceFoldersToMonitor: folders"), this.folders = this.folders || [];
                var folderListChanged = !_.isEqual(_.map(folders, function(d) {
                    return d.id;
                }), _.map(this.folders, function(d) {
                    return d.id;
                }));
                return this.folders = folders, folderListChanged;
            }, DashboardRefreshService.prototype.addDashboardRefreshListener = function(refreshListener) {
                (0, contract.wS)(refreshListener, "addDashboardRefreshListener: refreshListener"), 
                this.dashboardRefreshListeners.push(refreshListener);
            }, DashboardRefreshService.prototype.addNotificationsRefreshListener = function(notificationListener) {
                (0, contract.wS)(notificationListener, "addNotificationsRefreshListener: notificationListener"), 
                this.notificationListeners.push(notificationListener);
            }, DashboardRefreshService.prototype.addPackageRefreshListener = function(refreshListener) {
                (0, contract.wS)(refreshListener, "addPackageRefreshListener: refreshListener"), 
                this.packageRefreshListeners.push(refreshListener);
            }, DashboardRefreshService.prototype.addWorkspaceListener = function(workspaceListener) {
                (0, contract.wS)(workspaceListener, "addWorkspaceListener: workspaceListener"), 
                this.workspaceListener.push(workspaceListener);
            }, DashboardRefreshService.prototype.addPipelineListener = function(pipelineListener) {
                (0, contract.wS)(pipelineListener, "addPipelineListener: pipelineListener"), this.pipelineListener.push(pipelineListener);
            }, DashboardRefreshService.prototype.addPipelineStageListener = function(pipelineStageListener) {
                (0, contract.wS)(pipelineStageListener, "addPipelineStageListener: pipelineStageListener"), 
                this.pipelineStageListener.push(pipelineStageListener);
            }, DashboardRefreshService.prototype.addReportRefreshListener = function(refreshListener) {
                (0, contract.wS)(refreshListener, "addReportRefreshListener: refreshListener"), 
                this.reportRefreshListeners.push(refreshListener);
            }, DashboardRefreshService.prototype.addWorkbookRefreshListener = function(refreshListener) {
                (0, contract.wS)(refreshListener, "addWorkbookRefreshListener: refreshListener"), 
                this.workbookRefreshListeners.push(refreshListener);
            }, DashboardRefreshService.prototype.addModelRefreshListener = function(refreshListener) {
                (0, contract.wS)(refreshListener, "addModelRefreshListener: refreshListener"), this.modelRefreshListeners.push(refreshListener);
            }, DashboardRefreshService.prototype.addDelayedQueryDataListener = function(queryDataListener) {
                (0, contract.wS)(queryDataListener, "addDelayedQueryDataListener: queryDataListener"), 
                this.queryDataRefreshListeners.push(queryDataListener);
            }, DashboardRefreshService.prototype.addInsightsListener = function(insightsListener) {
                (0, contract.wS)(insightsListener, "addInsightsListener: insightsListener"), this.insightsListeners.push(insightsListener);
            }, DashboardRefreshService.prototype.addCdsaModelRefreshListener = function(cdsaModelListener) {
                (0, contract.wS)(cdsaModelListener, "addCdsaModelRefreshListener: cdsaModelListener"), 
                this.cdsaModelListeners.push(cdsaModelListener);
            }, DashboardRefreshService.prototype.addDatamartRefreshListener = function(datamartListener) {
                (0, contract.wS)(datamartListener, "addDatamartRefreshListener: datamartListener"), 
                this.datamartListeners.push(datamartListener);
            }, DashboardRefreshService.prototype.addContentProviderListener = function(contentProviderListener) {
                (0, contract.wS)(contentProviderListener, "addContentProviderListener: contentProviderListener"), 
                this.contentProviderListeners.push(contentProviderListener);
            }, DashboardRefreshService.prototype.addGitIntegrationListener = function(gitIntegrationListener) {
                (0, contract.wS)(gitIntegrationListener, "addGitIntegrationListener: gitIntegrationListener"), 
                this.gitIntegrationListeners.push(gitIntegrationListener);
            }, DashboardRefreshService.prototype.addMetadataEditRequestId = function(requestId) {
                this.metadataRequestIds.add(requestId, !0), this.dashboardMetadataRequestIds.add(requestId, !0);
            }, DashboardRefreshService.prototype.addDashboardMetadataEditRequestId = function(requestId) {
                this.dashboardMetadataRequestIds.add(requestId, !0);
            }, DashboardRefreshService.prototype.addDashboardTransactionFilter = function(requestId, filter) {
                this.dashboardMetadataRequestIdFilters.add(requestId, filter);
            }, DashboardRefreshService.prototype.addImportContentRequestId = function(requestId) {
                this.importContentRequestIds.add(requestId, !0);
            }, DashboardRefreshService.prototype.isImportContentRequestIdInWhitelist = function(changeSourceId) {
                return this.importContentRequestIds.hasKey(changeSourceId);
            }, DashboardRefreshService.prototype.applyRefreshUpdate = function(update) {
                update && (this.telemetryService.logEvent(events.lt, {
                    dashboardUpdates: this.createDashboardTelemetryString(this.dashboards, update.dashboardTransactions),
                    newMetadataChangeSourceId: _.isEmpty(update.metadataUpdates) ? void 0 : _.last(update.metadataUpdates).changeSourceId,
                    newMetadataTransactionId: update.lastTransactionId,
                    clientDashboardVersions: JSON.stringify(this.dashboards),
                    clientWorkspaceVersion: this.userDashboardListVersion
                }), this.processDashboardTransactions(update), this.processMetadataUpdates(update), 
                this.processFolderUpdates(update));
            }, DashboardRefreshService.prototype.processDashboardTransactions = function(update) {
                var _this = this;
                update.dashboardTransactions && (update.lastTransactionId && (this.userDashboardListVersion = update.lastTransactionId), 
                update.dashboardTransactions.forEach(function(dashboardTransactionsKvp) {
                    var dashboardTransactions = dashboardTransactionsKvp.Value.transactions, dashboardId = dashboardTransactionsKvp.Key;
                    _this.updateDashboardVersion(dashboardId, dashboardTransactions);
                    for (var _i = 0, refreshListeners_1 = _this.dashboardRefreshListeners; _i < refreshListeners_1.length; _i++) {
                        var refreshListener = refreshListeners_1[_i];
                        refreshListener.onClearBatchedDashboardRequests && refreshListener.onClearBatchedDashboardRequests();
                    }
                    _this.applyDashboardTransactions(dashboardTransactions, dashboardId);
                }));
            }, DashboardRefreshService.prototype.processMetadataUpdates = function(update) {
                var _this = this;
                if (!_.isEmpty(update.metadataUpdates)) {
                    update.lastTransactionId ? this.userDashboardListVersion = update.lastTransactionId : update.groupsVersion && update.groupsVersion.forEach(function(group) {
                        var selectedGroup = _.find(_this.groups, function(currentGroup) {
                            return currentGroup.objectId === group.Key;
                        });
                        selectedGroup && (selectedGroup.version = group.Value);
                    });
                    for (var datasetUpdates = [], metadataRequestIds = this.metadataRequestIds, _i = 0, _a = update.metadataUpdates; _i < _a.length; _i++) {
                        var metadataUpdate = _a[_i], requestId = metadataUpdate.changeSourceId;
                        if (!requestId || !metadataRequestIds.hasKey(requestId)) switch (metadataUpdate.entityType) {
                          case 0:
                            this.applyPackageTransactions(metadataUpdate);
                            break;

                          case 256:
                            this.applyWorkspaceTransactions(metadataUpdate);
                            break;

                          case 8192:
                            this.applyPipelineTransactions(metadataUpdate);
                            break;

                          case 4194304:
                            this.applyPipelineStageTransactions(metadataUpdate);
                            break;

                          case 1:
                          default:
                            break;

                          case 2:
                            this.applyReportTransactions(metadataUpdate);
                            break;

                          case 16:
                            this.applyWorkbookTransactions(metadataUpdate);
                            break;

                          case 4:
                            datasetUpdates.push(metadataUpdate);
                            break;

                          case 8:
                            this.processDelayedQueryData(metadataUpdate);
                            break;

                          case 128:
                            this.processInsights(metadataUpdate);
                            break;

                          case 512:
                          case 1024:
                          case 2048:
                            "Notification" === metadataUpdate.additionalInfo && this.processNotificationUpdates(metadataUpdate);
                            break;

                          case 4096:
                            this.applyCdsaModelTransactions(metadataUpdate);
                            break;

                          case 32:
                            this.applyContentProviderTransactions(metadataUpdate);
                            break;

                          case 32768:
                            this.applyDatamartTransactions(metadataUpdate, 1);
                            break;

                          case 131072:
                            this.applyDatamartTransactions(metadataUpdate, 2);
                            break;

                          case 1048576:
                            this.applyDatamartTransactions(metadataUpdate, 5);
                            break;

                          case 262144:
                            this.applyDatamartTransactions(metadataUpdate, 4);
                        }
                    }
                    this.applyModelTransactions(datasetUpdates);
                }
            }, DashboardRefreshService.prototype.processFolderUpdates = function(update) {
                var _this = this;
                _.isEmpty(update.folderTransactions) || _.forEach(update.folderTransactions, function(folderUpdate) {
                    var folderTransactions = folderUpdate.Value.transactions, folderId = folderUpdate.Key, folder = _.find(_this.folders, function(folder) {
                        return folder.id === folderId;
                    });
                    folder && (folder.version = _.last(folderTransactions).transactionId), _.forEach(folderTransactions, function(transaction) {
                        var requestId = transaction.changeSourceId;
                        if (!requestId || !_this.metadataRequestIds.hasKey(requestId) && !_this.dashboardMetadataRequestIds.hasKey(requestId)) switch (transaction.entityType) {
                          case 1:
                            _this.applyDashboardTransactions_V2(transaction);
                            break;

                          case 524288:
                            _this.applyGitIntegrationTransaction(transaction, folder.id);
                        }
                    });
                });
            }, DashboardRefreshService.prototype.processNotificationUpdates = function(update) {
                for (var _i = 0, _a = this.notificationListeners; _i < _a.length; _i++) {
                    var notificationListener = _a[_i];
                    switch (update.changeType) {
                      case 0:
                        notificationListener.onNotificationAdded();
                        break;

                      case 1:
                        0 === update.entityId ? notificationListener.onNotificationDismissAll() : notificationListener.onNotificationDismiss(update.entityId);
                        break;

                      case 2:
                        notificationListener.onNotificationSeen(update.entityId);
                    }
                }
            }, DashboardRefreshService.prototype.processInsights = function(update) {
                for (var _i = 0, _a = this.insightsListeners; _i < _a.length; _i++) _a[_i].onInsightsAvailable(update.additionalInfo);
            }, DashboardRefreshService.prototype.processDelayedQueryData = function(update) {
                for (var jobId = update.additionalInfo, _i = 0, listeners_1 = this.queryDataRefreshListeners; _i < listeners_1.length; _i++) listeners_1[_i].onDelayedQueryDataAvailable(jobId);
            }, DashboardRefreshService.prototype.applyPackageTransactions = function(update) {
                if (update && null != update.entityId) switch (update.changeType) {
                  case 0:
                    for (var _i = 0, _a = this.packageRefreshListeners; _i < _a.length; _i++) _a[_i].onPackagePublishRefreshCompleted(update.entityId, update.changeSourceId);
                    break;

                  case 1:
                    for (var _b = 0, _c = this.packageRefreshListeners; _b < _c.length; _b++) _c[_b].onPackageDeleted(update.entityId);
                    break;

                  case 2:
                  case 3:
                    for (var _d = 0, _e = this.packageRefreshListeners; _d < _e.length; _d++) _e[_d].onPackagePublishEdit(update.entityId, update.changeSourceId);
                }
            }, DashboardRefreshService.prototype.applyWorkspaceTransactions = function(update) {
                if (update && null !== update.entityId && 3 === update.changeType) for (var _i = 0, _a = this.workspaceListener; _i < _a.length; _i++) _a[_i].onWorkspaceEdit(update.entityId, update.changeSourceId, update.additionalInfo);
            }, DashboardRefreshService.prototype.applyPipelineTransactions = function(update) {
                if (update && null !== update.entityId) switch (update.changeType) {
                  case 0:
                    for (var _i = 0, _a = this.pipelineListener; _i < _a.length; _i++) _a[_i].onPipelineAdded(update.entityId);
                    break;

                  case 3:
                    for (var _b = 0, _c = this.pipelineListener; _b < _c.length; _b++) _c[_b].onPipelineDeepEdit(update.entityId);
                    break;

                  case 1:
                    for (var _d = 0, _e = this.pipelineListener; _d < _e.length; _d++) _e[_d].onPipelineDeleted(update.entityId);
                }
            }, DashboardRefreshService.prototype.applyPipelineStageTransactions = function(update) {
                if (update && null !== update.entityId && 3 === update.changeType) for (var _i = 0, _a = this.pipelineStageListener; _i < _a.length; _i++) _a[_i].onPipelineStageDeepEdit(update.entityId);
            }, DashboardRefreshService.prototype.applyReportTransactions = function(update) {
                if (update && null != update.entityId) switch (update.changeType) {
                  case 0:
                    for (var _i = 0, _a = this.reportRefreshListeners; _i < _a.length; _i++) _a[_i].onReportAdded(update.entityId);
                    break;

                  case 1:
                    for (var _b = 0, _c = this.reportRefreshListeners; _b < _c.length; _b++) _c[_b].onReportDeleted(update.entityId);
                    break;

                  case 2:
                    for (var _d = 0, _e = this.reportRefreshListeners; _d < _e.length; _d++) _e[_d].onReportUpdated(update.entityId);
                }
            }, DashboardRefreshService.prototype.applyGitIntegrationTransaction = function(update, folderId) {
                if (update && null != update.entityId && 3 === update.changeType) for (var _i = 0, _a = this.gitIntegrationListeners; _i < _a.length; _i++) _a[_i].onGitIntegrationDeepEdit(update.entityId, update.transactionId, folderId);
            }, DashboardRefreshService.prototype.applyDashboardTransactions_V2 = function(update) {
                if (update && null != update.entityId) switch (update.changeType) {
                  case 0:
                    for (var _i = 0, _a = this.dashboardRefreshListeners; _i < _a.length; _i++) _a[_i].onDashboardAdded(update.entityId);
                    break;

                  case 1:
                    for (var _b = 0, _c = this.dashboardRefreshListeners; _b < _c.length; _b++) _c[_b].onDashboardDeleted(update.entityId);
                    break;

                  case 2:
                    for (var _d = 0, _e = this.dashboardRefreshListeners; _d < _e.length; _d++) _e[_d].onDashboardShallowEdit(update.entityId);
                }
            }, DashboardRefreshService.prototype.applyWorkbookTransactions = function(update) {
                var packageId;
                if (update && null != update.entityId) switch (update.changeType) {
                  case 0:
                    packageId = this.parsePackageId(update);
                    for (var _i = 0, _a = this.workbookRefreshListeners; _i < _a.length; _i++) _a[_i].onWorkbookAdded(update.entityId, packageId);
                    break;

                  case 1:
                    packageId = this.parsePackageId(update);
                    for (var _b = 0, _c = this.workbookRefreshListeners; _b < _c.length; _b++) _c[_b].onWorkbookDeleted(update.entityId, packageId);
                    break;

                  case 2:
                  case 3:
                    for (var _d = 0, _e = this.workbookRefreshListeners; _d < _e.length; _d++) _e[_d].onWorkbookUpdated(update.entityId);
                }
            }, DashboardRefreshService.prototype.applyModelTransactions = function(updates) {
                for (var modelUpdates = [], _i = 0, updates_1 = updates; _i < updates_1.length; _i++) {
                    var update = updates_1[_i];
                    if (update && null != update.entityId) {
                        var packageId = this.parsePackageId(update);
                        switch (update.changeType) {
                          case 0:
                            for (var _a = 0, _b = this.modelRefreshListeners; _a < _b.length; _a++) _b[_a].onModelAdded(update.entityId, packageId);
                            break;

                          case 1:
                            for (var _c = 0, _d = this.modelRefreshListeners; _c < _d.length; _c++) _d[_c].onModelDeleted(update.entityId, packageId);
                            break;

                          case 3:
                          case 2:
                            modelUpdates.push({
                                modelId: update.entityId,
                                packageId
                            });
                        }
                    }
                }
                if (modelUpdates.length) for (var _e = 0, _f = this.modelRefreshListeners; _e < _f.length; _e++) _f[_e].onModelsUpdated(modelUpdates);
            }, DashboardRefreshService.prototype.parsePackageId = function(metadataUpdate) {
                return debug.fF.assert(function() {
                    return 4 === metadataUpdate.entityType || 16 === metadataUpdate.entityType;
                }, "pre-condition: metadataUpdate.entityType === SyncEntityType.Model"), metadataUpdate.additionalInfo ? parseInt(metadataUpdate.additionalInfo, 10) : null;
            }, DashboardRefreshService.prototype.applyCdsaModelTransactions = function(update) {
                if (update && null != update.entityId) switch (update.changeType) {
                  case 0:
                    for (var _i = 0, _a = this.cdsaModelListeners; _i < _a.length; _i++) _a[_i].onCdsaModelAdded(update.entityId);
                    break;

                  case 1:
                    for (var _b = 0, _c = this.cdsaModelListeners; _b < _c.length; _b++) _c[_b].onCdsaModelDeleted(update.entityId);
                    break;

                  case 2:
                    for (var _d = 0, _e = this.cdsaModelListeners; _d < _e.length; _d++) _e[_d].onCdsaModelUpdated(update.entityId);
                }
            }, DashboardRefreshService.prototype.applyDatamartTransactions = function(update, datamartType) {
                if (update && null != update.entityId) switch (update.changeType) {
                  case 2:
                    for (var _i = 0, _a = this.datamartListeners; _i < _a.length; _i++) _a[_i].onDatamartUpdated(update.additionalInfo, datamartType, update.entityId);
                    break;

                  case 1:
                    for (var _b = 0, _c = this.datamartListeners; _b < _c.length; _b++) _c[_b].onDatamartDeleted(update.additionalInfo);
                }
            }, DashboardRefreshService.prototype.applyContentProviderTransactions = function(update) {
                if (update && null != update.entityId) switch (update.changeType) {
                  case 3:
                    for (var _i = 0, _a = this.contentProviderListeners; _i < _a.length; _i++) _a[_i].onContentProviderDeepEdit(update.entityId);
                    break;

                  case 2:
                    for (var _b = 0, _c = this.contentProviderListeners; _b < _c.length; _b++) _c[_b].onContentProviderShallowEdit(update.entityId, update.changeSourceId);
                    break;

                  case 1:
                    for (var _d = 0, _e = this.contentProviderListeners; _d < _e.length; _d++) _e[_d].onContentProviderDelete(update.entityId);
                }
            }, DashboardRefreshService.prototype.updateDashboardVersion = function(dashboardId, dashboardTransactions) {
                for (var i = dashboardTransactions.length - 1; i >= 0; --i) {
                    var transaction = dashboardTransactions[i];
                    if (!this.isAddOrDeleteDashboardTransaction(transaction)) {
                        var dashboardToUpdate = this.getDashboardById(dashboardId);
                        if (dashboardToUpdate) {
                            dashboardToUpdate.version = transaction.transactionId;
                            for (var _i = 0, _a = this.pipelineListener; _i < _a.length; _i++) {
                                var listener = _a[_i];
                                listener.onDashboardVersionChanged && listener.onDashboardVersionChanged(dashboardId, transaction.transactionId);
                            }
                            break;
                        }
                    }
                }
            }, DashboardRefreshService.prototype.applyDashboardTransactions = function(transactions, dashboardId) {
                for (var tilesAddedOrUpdated = [], dashboardMetadataRequestIds = this.dashboardMetadataRequestIds, dashboardMetadataRequestIdFilters = this.dashboardMetadataRequestIdFilters, refreshListeners = this.dashboardRefreshListeners, _i = 0, transactions_1 = transactions; _i < transactions_1.length; _i++) {
                    var transaction = transactions_1[_i], requestId = transaction.changeSourceId;
                    if (requestId && dashboardMetadataRequestIdFilters.hasKey(requestId)) {
                        var filter = dashboardMetadataRequestIdFilters.get(requestId);
                        if (filter && filter(transaction)) continue;
                    }
                    if (!requestId || !dashboardMetadataRequestIds.hasKey(requestId)) switch (transaction.changeType) {
                      case 1:
                        if (null != transaction.tileId) for (var _a = 0, refreshListeners_2 = refreshListeners; _a < refreshListeners_2.length; _a++) refreshListeners_2[_a].onTileDeleted(dashboardId, transaction.tileId); else {
                            this.stopMonitoringDashboard(dashboardId);
                            for (var _b = 0, refreshListeners_3 = refreshListeners; _b < refreshListeners_3.length; _b++) refreshListeners_3[_b].onDashboardDeleted(dashboardId);
                        }
                        break;

                      case 0:
                        if (null != transaction.tileId) tilesAddedOrUpdated.push(transaction.tileId); else {
                            if (this.userDashboardListVersion = transaction.transactionId, this.getDashboardById(dashboardId)) break;
                            for (var _c = 0, refreshListeners_4 = refreshListeners; _c < refreshListeners_4.length; _c++) refreshListeners_4[_c].onDashboardAdded(dashboardId);
                        }
                        break;

                      case 3:
                        if (null != transaction.tileId) tilesAddedOrUpdated.push(transaction.tileId); else for (var _d = 0, refreshListeners_5 = refreshListeners; _d < refreshListeners_5.length; _d++) refreshListeners_5[_d].onDashboardDeepEdit(dashboardId);
                        break;

                      case 2:
                        if (null != transaction.tileId) tilesAddedOrUpdated.push(transaction.tileId); else for (var _e = 0, refreshListeners_6 = refreshListeners; _e < refreshListeners_6.length; _e++) refreshListeners_6[_e].onDashboardShallowEdit(dashboardId);
                        break;

                      case 5:
                        if (null != transaction.tileId) tilesAddedOrUpdated.push(transaction.tileId); else for (var _f = 0, refreshListeners_7 = refreshListeners; _f < refreshListeners_7.length; _f++) refreshListeners_7[_f].onDashboardTileDataChange(dashboardId);
                    }
                }
                if (tilesAddedOrUpdated.length) {
                    tilesAddedOrUpdated = _.uniq(tilesAddedOrUpdated);
                    for (var _g = 0, refreshListeners_8 = refreshListeners; _g < refreshListeners_8.length; _g++) refreshListeners_8[_g].onTilesAddedOrUpdated(dashboardId, tilesAddedOrUpdated);
                }
            }, DashboardRefreshService.prototype.isAddOrDeleteDashboardTransaction = function(transaction) {
                return (0 === transaction.changeType || 1 === transaction.changeType) && null == transaction.tileId;
            }, DashboardRefreshService.prototype.getDashboardById = function(id) {
                return _.find(this.dashboards, function(dashboard) {
                    return dashboard.id === id;
                });
            }, DashboardRefreshService.prototype.createDashboardTelemetryString = function(monitoredDashboards, dashboardTransactions) {
                if (!_.isEmpty(monitoredDashboards) && !_.isEmpty(dashboardTransactions)) {
                    var monitoredTransactions = _.filter(dashboardTransactions, function(transaction) {
                        return _.find(monitoredDashboards, function(dashboard) {
                            return dashboard.id === transaction.Key;
                        });
                    });
                    if (!_.isEmpty(monitoredTransactions)) return _.join(_.map(monitoredTransactions, function(transactions) {
                        if (!transactions || !transactions.Value || _.isEmpty(transactions.Value.transactions)) return "Invalid server response";
                        var transactionValues = transactions.Value, lastTransaction = _.last(transactionValues.transactions);
                        return "dashboardId:" + transactionValues.dashboardId + ",changeSourceId:" + lastTransaction.changeSourceId + ",transactionId:" + lastTransaction.transactionId;
                    }), ";");
                }
            }, DashboardRefreshService;
        }(), core = __webpack_require__(50423), http_core_service = __webpack_require__(629), feature_switch_service = __webpack_require__(9380), SyncService = function(_super) {
            function SyncService(promiseFactory, httpCoreService, telemetryService, featureSwitchService) {
                var _this = _super.call(this, promiseFactory, httpCoreService) || this;
                return _this.promiseFactory = promiseFactory, _this.httpCoreService = httpCoreService, 
                _this.dashboardRefreshService = new DashboardRefreshService(telemetryService, featureSwitchService), 
                _this.clientId = Utility.b$.generateGuid(), _this;
            }
            return (0, tslib_es6.__extends)(SyncService, _super), SyncService.prototype.addNotificationsRefreshListener = function(notificationsListener) {
                this.dashboardRefreshService.addNotificationsRefreshListener(notificationsListener);
            }, SyncService.prototype.addDashboardRefreshListener = function(refreshListener) {
                this.dashboardRefreshService.addDashboardRefreshListener(refreshListener);
            }, SyncService.prototype.addPackageRefreshListener = function(refreshListener) {
                this.dashboardRefreshService.addPackageRefreshListener(refreshListener);
            }, SyncService.prototype.addWorkspaceListener = function(workspaceListener) {
                this.dashboardRefreshService.addWorkspaceListener(workspaceListener);
            }, SyncService.prototype.addPipelineListener = function(pipelineListener) {
                this.dashboardRefreshService.addPipelineListener(pipelineListener);
            }, SyncService.prototype.addPipelineStageListener = function(pipelineStageListener) {
                this.dashboardRefreshService.addPipelineStageListener(pipelineStageListener);
            }, SyncService.prototype.addReportRefreshListener = function(refreshListener) {
                this.dashboardRefreshService.addReportRefreshListener(refreshListener);
            }, SyncService.prototype.addWorkbookRefreshListener = function(refreshListener) {
                this.dashboardRefreshService.addWorkbookRefreshListener(refreshListener);
            }, SyncService.prototype.addModelRefreshListener = function(refreshListener) {
                this.dashboardRefreshService.addModelRefreshListener(refreshListener);
            }, SyncService.prototype.addDelayedQueryDataListener = function(queryDataListener) {
                this.dashboardRefreshService.addDelayedQueryDataListener(queryDataListener);
            }, SyncService.prototype.addInsightsListener = function(insightsListener) {
                this.dashboardRefreshService.addInsightsListener(insightsListener);
            }, SyncService.prototype.addCdsaModelRefreshListener = function(cdsaModelListener) {
                this.dashboardRefreshService.addCdsaModelRefreshListener(cdsaModelListener);
            }, SyncService.prototype.addDatamartRefreshListener = function(datamartListener) {
                this.dashboardRefreshService.addDatamartRefreshListener(datamartListener);
            }, SyncService.prototype.addContentProviderListener = function(contentProviderListener) {
                this.dashboardRefreshService.addContentProviderListener(contentProviderListener);
            }, SyncService.prototype.addGitIntegrationListener = function(gitIntegrationListener) {
                this.dashboardRefreshService.addGitIntegrationListener(gitIntegrationListener);
            }, SyncService.prototype.addDashboardMetadataEditRequestId = function(requestId) {
                this.dashboardRefreshService.addDashboardMetadataEditRequestId(requestId);
            }, SyncService.prototype.addDashboardTransactionFilter = function(requestId, filter) {
                this.dashboardRefreshService.addDashboardTransactionFilter(requestId, filter);
            }, SyncService.prototype.addImportContentRequestId = function(requestId) {
                this.dashboardRefreshService.addImportContentRequestId(requestId);
            }, SyncService.prototype.isImportContentRequestIdInWhitelist = function(changeSourceId) {
                return this.dashboardRefreshService.isImportContentRequestIdInWhitelist(changeSourceId);
            }, SyncService.prototype.addMetadataEditRequestId = function(requestId) {
                this.dashboardRefreshService.addMetadataEditRequestId(requestId);
            }, SyncService.prototype.startMonitoring = function() {
                _super.prototype.startMonitoring.call(this, 3e3);
            }, SyncService.prototype.monitorWorkspace = function(dashboards, userDashboardListVersion) {
                this.dashboardRefreshService.stopMonitoringAllDashboards(), _.isEmpty(userDashboardListVersion) || (this.dashboardRefreshService.userDashboardListVersion = userDashboardListVersion);
                var idAndVersionCopy = dashboards.map(function(d) {
                    return {
                        id: d.id,
                        version: void 0 === d.version ? null : d.version
                    };
                });
                this.dashboardRefreshService.replaceDashboardsToMonitor(idAndVersionCopy), _super.prototype.cancelCurrentRequest.call(this), 
                this.startMonitoring();
            }, SyncService.prototype.getLastDashboardListVersion = function() {
                return this.dashboardRefreshService.userDashboardListVersion;
            }, SyncService.prototype.monitorDashboards = function(dashboards, userDashboardListVersion) {
                if (dashboards) {
                    _.isEmpty(userDashboardListVersion) || (this.dashboardRefreshService.userDashboardListVersion = userDashboardListVersion);
                    var idAndVersionCopy = dashboards.map(function(d) {
                        return {
                            id: d.id,
                            version: void 0 === d.version ? null : d.version
                        };
                    });
                    this.dashboardRefreshService.replaceDashboardsToMonitor(idAndVersionCopy) && _super.prototype.cancelCurrentRequest.call(this), 
                    this.startMonitoring();
                }
            }, SyncService.prototype.stopMonitoringDashboard = function(dashboardId) {
                this.dashboardRefreshService.stopMonitoringDashboard(dashboardId), _super.prototype.cancelCurrentRequest.call(this), 
                this.startMonitoring();
            }, SyncService.prototype.stopMonitoringAllDashboards = function() {
                this.monitorDashboards([], void 0);
            }, SyncService.prototype.monitorFolders = function(folders) {
                if (folders) {
                    var idAndVersionCopy = _.map(folders, function(f) {
                        return {
                            id: f.id,
                            version: void 0 === f.version ? null : f.version
                        };
                    });
                    this.dashboardRefreshService.replaceFoldersToMonitor(idAndVersionCopy) && _super.prototype.cancelCurrentRequest.call(this), 
                    this.startMonitoring();
                }
            }, SyncService.prototype.stopMonitoringAllFolders = function() {
                this.monitorFolders([]);
            }, SyncService.prototype.disableMonitorDashboards = function() {
                this.isEnabled = !1, _super.prototype.setLongPollInitialized.call(this, !1);
            }, SyncService.prototype.testGetDashboardRefreshService = function() {
                return this.dashboardRefreshService;
            }, Object.defineProperty(SyncService.prototype, "requestHeader", {
                get: function() {
                    return this.optionalRequestHeaders;
                },
                enumerable: !1,
                configurable: !0
            }), SyncService.prototype.getRequest = function() {
                return {
                    clientRefreshId: this.clientId,
                    dashboards: this.dashboardRefreshService.dashboards,
                    userDashboardListVersion: this.dashboardRefreshService.userDashboardListVersion,
                    groupsVersion: this.dashboardRefreshService.groups,
                    folders: this.dashboardRefreshService.folders
                };
            }, SyncService.prototype.getEndpointUrl = function() {
                return "powerbi/refresh/subscribe";
            }, SyncService.prototype.processResponse = function(update) {
                this.dashboardRefreshService.applyRefreshUpdate(update);
            }, SyncService.prototype.processError = function() {}, SyncService.\u0275fac = function(t) {
                return new (t || SyncService)(core["\u0275\u0275inject"](promiseFactory.t), core["\u0275\u0275inject"](http_core_service.M), core["\u0275\u0275inject"](Telemetry.y0), core["\u0275\u0275inject"](feature_switch_service.vZ));
            }, SyncService.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: SyncService,
                factory: SyncService.\u0275fac,
                providedIn: "root"
            }), SyncService;
        }(LongPollServiceBase);
    },
    19533: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            C: function() {
                return getRouterStateSnapshot;
            }
        });
        var getRouterStateSnapshot = (0, __webpack_require__(85732).P1)(function(state) {
            return state.router;
        }, function(s) {
            return s && s.state;
        });
    },
    50897: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            q: function() {
                return TriSubfolderBreadcrumbsComponent;
            }
        });
        var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(50423), rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(35510), rxjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(33554), rxjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(30794), rxjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(59017), rxjs_operators__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(14172), rxjs_operators__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(83317), rxjs_operators__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(6754), rxjs_operators__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(77526), _trident_ux_angular_tri_menu__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(98759), _trident_localization__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(7452), _angular_common__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(77476), _ux_angular_src_lib_tri_menu_tri_menu_directive__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(76688), _ux_angular_src_lib_tri_svg_icon_components_tri_svg_icon_tri_svg_icon_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(74913), _ux_angular_src_lib_tri_tooltip_tri_tooltip_directive__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(55490), _ux_angular_src_lib_tri_workspace_icon_components_tri_workspace_icon_tri_workspace_icon_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(22743), _localization_src_localize_pipe__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(55334), _c0 = [ "dummyBreadcrumbItem" ];
        function TriSubfolderBreadcrumbsComponent_ng_container_2_div_1_Template(rf, ctx) {
            if (1 & rf && (_angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275elementStart"](0, "div", 11), 
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275element"](1, "tri-workspace-icon", 12), 
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275elementStart"](2, "span", 13), 
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275text"](3), _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275elementEnd"]()()), 
            2 & rf) {
                var ctx_r10 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275nextContext"](2);
                _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275advance"](1), _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275property"]("workspace", ctx_r10.workspace), 
                _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275advance"](1), _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275property"]("triTooltip", ctx_r10.workspace.displayName), 
                _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275advance"](1), _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275textInterpolate"](ctx_r10.workspace.displayName);
            }
        }
        function TriSubfolderBreadcrumbsComponent_ng_container_2_div_2_Template(rf, ctx) {
            if (1 & rf && (_angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275elementStart"](0, "div", 14), 
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275element"](1, "tri-svg-icon", 15)(2, "tri-svg-icon", 16), 
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275pipe"](3, "async"), _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275elementEnd"]()), 
            2 & rf) {
                var ctx_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275nextContext"](2);
                _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275advance"](2), _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275property"]("name", "more_horizontal_20_regular")("triTooltip", _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275pipeBind1"](3, 2, ctx_r11.overflowSubfoldersTooltip$));
            }
        }
        function TriSubfolderBreadcrumbsComponent_ng_container_2_div_4_Template(rf, ctx) {
            if (1 & rf && (_angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275elementStart"](0, "div", 17), 
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275element"](1, "tri-svg-icon", 15), 
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275elementStart"](2, "div", 18)(3, "span", 13), 
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275text"](4), _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275elementEnd"]()()()), 
            2 & rf) {
                var subfolder_r13 = ctx.$implicit;
                _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275advance"](3), _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275property"]("triTooltip", subfolder_r13.displayName), 
                _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275advance"](1), _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275textInterpolate"](subfolder_r13.displayName);
            }
        }
        function TriSubfolderBreadcrumbsComponent_ng_container_2_Template(rf, ctx) {
            if (1 & rf && (_angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275elementContainerStart"](0), 
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275template"](1, TriSubfolderBreadcrumbsComponent_ng_container_2_div_1_Template, 4, 3, "div", 8), 
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275template"](2, TriSubfolderBreadcrumbsComponent_ng_container_2_div_2_Template, 4, 4, "div", 9), 
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275pipe"](3, "async"), _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275template"](4, TriSubfolderBreadcrumbsComponent_ng_container_2_div_4_Template, 5, 2, "div", 10), 
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275pipe"](5, "async"), _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275elementContainerEnd"]()), 
            2 & rf) {
                var ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275nextContext"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275advance"](1), _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275property"]("ngIf", ctx_r0.workspace), 
                _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275advance"](1), _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275property"]("ngIf", _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275pipeBind1"](3, 3, ctx_r0.isOverflow$)), 
                _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275advance"](2), _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275property"]("ngForOf", _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275pipeBind1"](5, 5, ctx_r0.remainSubfolders$));
            }
        }
        function TriSubfolderBreadcrumbsComponent_ng_container_3_ng_container_1_Template(rf, ctx) {
            1 & rf && _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275elementContainer"](0);
        }
        function TriSubfolderBreadcrumbsComponent_ng_container_3_ng_container_2_Template(rf, ctx) {
            if (1 & rf && (_angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275elementContainerStart"](0), 
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275elementStart"](1, "div", 17)(2, "div", 21)(3, "span", 13), 
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275text"](4), _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275elementEnd"]()()(), 
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275elementContainerEnd"]()), 
            2 & rf) {
                var subfolder_r16 = ctx.$implicit;
                _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275advance"](3), _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275property"]("triTooltip", subfolder_r16.displayName), 
                _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275advance"](1), _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275textInterpolate"](subfolder_r16.displayName);
            }
        }
        function TriSubfolderBreadcrumbsComponent_ng_container_3_Template(rf, ctx) {
            if (1 & rf && (_angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275elementContainerStart"](0), 
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275template"](1, TriSubfolderBreadcrumbsComponent_ng_container_3_ng_container_1_Template, 1, 0, "ng-container", 19), 
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275template"](2, TriSubfolderBreadcrumbsComponent_ng_container_3_ng_container_2_Template, 5, 2, "ng-container", 20), 
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275pipe"](3, "async"), _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275elementContainerEnd"]()), 
            2 & rf) {
                var ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275nextContext"](), _r2 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275reference"](5), _r4 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275reference"](7);
                _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275advance"](1), _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275property"]("ngIf", ctx_r1.showBackToWorkspaceListButton || ctx_r1.subfolders.length > 0)("ngIfThen", _r2), 
                _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275advance"](1), _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275property"]("ngIf", _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275pipeBind1"](3, 4, ctx_r1.currentSubfolder$))("ngIfElse", _r4);
            }
        }
        function TriSubfolderBreadcrumbsComponent_ng_template_4_Template(rf, ctx) {
            if (1 & rf) {
                var _r18 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275getCurrentView"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275elementStart"](0, "button", 22), 
                _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275listener"]("click", function() {
                    _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275restoreView"](_r18);
                    var ctx_r17 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275nextContext"]();
                    return _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275resetView"](ctx_r17.onBackButtonClick());
                }), _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275element"](1, "tri-svg-icon", 23), 
                _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275elementEnd"]();
            }
        }
        function TriSubfolderBreadcrumbsComponent_ng_template_6_div_0_Template(rf, ctx) {
            if (1 & rf && (_angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275elementStart"](0, "div", 17)(1, "div", 11), 
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275element"](2, "tri-workspace-icon", 12), 
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275elementStart"](3, "span", 13), 
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275text"](4), _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275elementEnd"]()()()), 
            2 & rf) {
                var ctx_r19 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275nextContext"](2);
                _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275advance"](2), _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275property"]("workspace", ctx_r19.workspace), 
                _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275advance"](1), _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275property"]("triTooltip", ctx_r19.workspace.displayName), 
                _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275advance"](1), _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275textInterpolate"](ctx_r19.workspace.displayName);
            }
        }
        function TriSubfolderBreadcrumbsComponent_ng_template_6_Template(rf, ctx) {
            if (1 & rf && _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275template"](0, TriSubfolderBreadcrumbsComponent_ng_template_6_div_0_Template, 5, 3, "div", 24), 
            2 & rf) {
                var ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275nextContext"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275property"]("ngIf", ctx_r5.workspace);
            }
        }
        function TriSubfolderBreadcrumbsComponent_ng_template_8_button_0_Template(rf, ctx) {
            if (1 & rf) {
                var _r22 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275getCurrentView"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275elementStart"](0, "button", 26), 
                _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275listener"]("click", function() {
                    _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275restoreView"](_r22);
                    var ctx_r21 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275nextContext"](2);
                    return _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275resetView"](ctx_r21.onItemClick());
                }), _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275element"](1, "tri-workspace-icon", 12), 
                _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275elementStart"](2, "span", 13), 
                _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275text"](3), _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var ctx_r20 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275nextContext"](2);
                _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275advance"](1), _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275property"]("workspace", ctx_r20.workspace), 
                _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275advance"](1), _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275property"]("triTooltip", ctx_r20.workspace.displayName), 
                _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275advance"](1), _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275textInterpolate"](ctx_r20.workspace.displayName);
            }
        }
        function TriSubfolderBreadcrumbsComponent_ng_template_8_Template(rf, ctx) {
            if (1 & rf && _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275template"](0, TriSubfolderBreadcrumbsComponent_ng_template_8_button_0_Template, 4, 3, "button", 25), 
            2 & rf) {
                var ctx_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275nextContext"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275property"]("ngIf", ctx_r7.workspace);
            }
        }
        function TriSubfolderBreadcrumbsComponent_ng_container_10_ng_container_1_Template(rf, ctx) {
            1 & rf && _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275elementContainer"](0);
        }
        function TriSubfolderBreadcrumbsComponent_ng_container_10_ng_container_2_Template(rf, ctx) {
            1 & rf && _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275elementContainer"](0);
        }
        var _c1 = function(a0) {
            return {
                active: a0
            };
        };
        function TriSubfolderBreadcrumbsComponent_ng_container_10_div_3_Template(rf, ctx) {
            if (1 & rf) {
                var _r29 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275getCurrentView"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275elementStart"](0, "div", 14), 
                _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275element"](1, "tri-svg-icon", 15), 
                _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275elementStart"](2, "button", 29), 
                _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275listener"]("triMenuButtonClick", function($event) {
                    _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275restoreView"](_r29);
                    var ctx_r28 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275nextContext"](2);
                    return _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275resetView"](ctx_r28.onMenuItemClicked($event));
                })("triMenuOpen", function() {
                    _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275restoreView"](_r29);
                    var ctx_r30 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275nextContext"](2);
                    return _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275resetView"](ctx_r30.onMenuOpen());
                })("triMenuClose", function() {
                    _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275restoreView"](_r29);
                    var ctx_r31 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275nextContext"](2);
                    return _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275resetView"](ctx_r31.onMenuClose());
                }), _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275element"](3, "tri-svg-icon", 30), 
                _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var ctx_r25 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275nextContext"](2);
                _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275advance"](2), _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275property"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275pureFunction1"](3, _c1, ctx_r25.isMenuOpened))("triMenu", ctx_r25.moreMenu), 
                _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275advance"](1), _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275property"]("name", "more_horizontal_20_regular");
            }
        }
        function TriSubfolderBreadcrumbsComponent_ng_container_10_div_5_Template(rf, ctx) {
            if (1 & rf) {
                var _r35 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275getCurrentView"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275elementStart"](0, "div", 17), 
                _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275element"](1, "tri-svg-icon", 15), 
                _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275elementStart"](2, "button", 31), 
                _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275listener"]("click", function() {
                    var subfolder_r32 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275restoreView"](_r35).$implicit, ctx_r34 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275nextContext"](2);
                    return _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275resetView"](ctx_r34.onItemClick(subfolder_r32));
                }), _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275elementStart"](3, "span", 13), 
                _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275text"](4), _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275elementEnd"]()()();
            }
            if (2 & rf) {
                var subfolder_r32 = ctx.$implicit, last_r33 = ctx.last;
                _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275advance"](2), _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275attribute"]("aria-current", last_r33 ? "page" : void 0), 
                _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275advance"](1), _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275property"]("triTooltip", subfolder_r32.displayName), 
                _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275advance"](1), _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275textInterpolate"](subfolder_r32.displayName);
            }
        }
        function TriSubfolderBreadcrumbsComponent_ng_container_10_div_7_Template(rf, ctx) {
            1 & rf && (_angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275elementStart"](0, "div", 32), 
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275element"](1, "tri-svg-icon", 15)(2, "tri-svg-icon", 33), 
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275elementStart"](3, "span", 34), 
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275text"](4), _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275pipe"](5, "localize"), 
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275elementEnd"]()()), 2 & rf && (_angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275advance"](4), 
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275textInterpolate"](_angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275pipeBind1"](5, 1, "FilteredResults")));
        }
        function TriSubfolderBreadcrumbsComponent_ng_container_10_Template(rf, ctx) {
            if (1 & rf && (_angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275elementContainerStart"](0), 
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275template"](1, TriSubfolderBreadcrumbsComponent_ng_container_10_ng_container_1_Template, 1, 0, "ng-container", 19), 
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275template"](2, TriSubfolderBreadcrumbsComponent_ng_container_10_ng_container_2_Template, 1, 0, "ng-container", 27), 
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275template"](3, TriSubfolderBreadcrumbsComponent_ng_container_10_div_3_Template, 4, 5, "div", 9), 
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275pipe"](4, "async"), _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275template"](5, TriSubfolderBreadcrumbsComponent_ng_container_10_div_5_Template, 5, 3, "div", 10), 
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275pipe"](6, "async"), _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275template"](7, TriSubfolderBreadcrumbsComponent_ng_container_10_div_7_Template, 6, 3, "div", 28), 
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275pipe"](8, "async"), _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275elementContainerEnd"]()), 
            2 & rf) {
                var ctx_r8 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275nextContext"](), _r2 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275reference"](5), _r4 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275reference"](7), _r6 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275reference"](9);
                _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275advance"](1), _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275property"]("ngIf", ctx_r8.showBackToWorkspaceListButton && 0 === ctx_r8.subfolders.length)("ngIfThen", _r2), 
                _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275advance"](1), _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275property"]("ngIf", 0 === ctx_r8.subfolders.length)("ngIfThen", _r4)("ngIfElse", _r6), 
                _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275advance"](1), _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275property"]("ngIf", _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275pipeBind1"](4, 8, ctx_r8.isOverflow$)), 
                _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275advance"](2), _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275property"]("ngForOf", _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275pipeBind1"](6, 10, ctx_r8.remainSubfolders$)), 
                _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275advance"](2), _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275property"]("ngIf", _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275pipeBind1"](8, 12, ctx_r8.showFilterResultsInBreadCrumb$));
            }
        }
        var BreadcrumbsMode = function(BreadcrumbsMode) {
            return BreadcrumbsMode[BreadcrumbsMode.Normal = 0] = "Normal", BreadcrumbsMode[BreadcrumbsMode.ReadOnly = 1] = "ReadOnly", 
            BreadcrumbsMode[BreadcrumbsMode.Zoomed = 2] = "Zoomed", BreadcrumbsMode;
        }({}), TriSubfolderBreadcrumbsComponent = function() {
            function TriSubfolderBreadcrumbsComponent(el, localizationService) {
                this.el = el, this.localizationService = localizationService, this.workspace = null, 
                this.subfolders = [], this.isReadonly = !1, this.showBackToWorkspaceListButton = !1, 
                this.visitSubfolder = new _angular_core__WEBPACK_IMPORTED_MODULE_5__.EventEmitter, 
                this.backToWorkspaceList = new _angular_core__WEBPACK_IMPORTED_MODULE_5__.EventEmitter, 
                this.mode$ = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(BreadcrumbsMode.Normal), this.BreadcrumbsMode = BreadcrumbsMode, 
                this.subfolders$ = new rxjs__WEBPACK_IMPORTED_MODULE_7__.t(1), this.currentSubfolder$ = this.subfolders$.pipe((0, 
                rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.U)(function(subfolders) {
                    return subfolders.length > 0 ? subfolders[subfolders.length - 1] : void 0;
                })), this.showFilterResultsInBreadCrumb$ = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(!1), 
                this.remainSubfolders$ = new rxjs__WEBPACK_IMPORTED_MODULE_7__.t(1), this.isOverflow$ = new rxjs__WEBPACK_IMPORTED_MODULE_7__.t(1), 
                this.moreMenu = {
                    styles: {
                        "border-radius": "5px"
                    },
                    items: []
                }, this.overflowSubfoldersTooltip$ = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(""), 
                this.isMenuOpened = !1, this.overflowSize$ = new rxjs__WEBPACK_IMPORTED_MODULE_9__.xQ, 
                this.onResize$ = new rxjs__WEBPACK_IMPORTED_MODULE_6__.X(void 0), this.onDestroy$ = new rxjs__WEBPACK_IMPORTED_MODULE_9__.xQ;
            }
            return Object.defineProperty(TriSubfolderBreadcrumbsComponent.prototype, "showFilterResultsInBreadCrumb", {
                set: function(value) {
                    this.showFilterResultsInBreadCrumb$.next(value);
                },
                enumerable: !1,
                configurable: !0
            }), TriSubfolderBreadcrumbsComponent.prototype.onResize = function() {
                this.onResize$.next();
            }, TriSubfolderBreadcrumbsComponent.prototype.ngOnInit = function() {
                var _this = this;
                this.isReadonly ? this.mode$.next(BreadcrumbsMode.ReadOnly) : this.onResize$.pipe((0, 
                rxjs_operators__WEBPACK_IMPORTED_MODULE_10__.R)(this.onDestroy$), (0, rxjs_operators__WEBPACK_IMPORTED_MODULE_11__.b)(100), (0, 
                rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.U)(function() {
                    return _this.getOverflowSize() < 320 ? BreadcrumbsMode.Zoomed : BreadcrumbsMode.Normal;
                })).subscribe(function(mode) {
                    return _this.mode$.next(mode);
                }), (0, rxjs__WEBPACK_IMPORTED_MODULE_12__.aj)([ this.subfolders$, this.overflowSize$.pipe((0, 
                rxjs_operators__WEBPACK_IMPORTED_MODULE_13__.x)()), this.showFilterResultsInBreadCrumb$.pipe((0, 
                rxjs_operators__WEBPACK_IMPORTED_MODULE_13__.x)()) ]).subscribe(function(_a) {
                    var subfolders = _a[0], overflowLength = _this.calculateOverflowLength(subfolders, _a[2], _a[1]), overflowSubfolders = subfolders.slice(0, overflowLength);
                    _this.remainSubfolders$.next(subfolders.slice(overflowLength)), overflowSubfolders.length > 0 ? (_this.moreMenu.items = overflowSubfolders.map(function(subfolder) {
                        return {
                            type: _trident_ux_angular_tri_menu__WEBPACK_IMPORTED_MODULE_0__.fz.Button,
                            text: subfolder.displayName,
                            data: subfolder
                        };
                    }), _this.overflowSubfoldersTooltip$.next(overflowSubfolders.map(function(subfolder) {
                        return subfolder.displayName;
                    }).join(" > ")), _this.isOverflow$.next(!0)) : _this.isOverflow$.next(!1);
                });
            }, TriSubfolderBreadcrumbsComponent.prototype.ngOnChanges = function() {
                this.subfolders$.next(this.subfolders);
            }, TriSubfolderBreadcrumbsComponent.prototype.ngAfterViewInit = function() {
                var _this = this;
                this.overflowSize$.next(this.getOverflowSize()), this.onResize$.pipe((0, rxjs_operators__WEBPACK_IMPORTED_MODULE_10__.R)(this.onDestroy$), (0, 
                rxjs_operators__WEBPACK_IMPORTED_MODULE_11__.b)(100)).subscribe(function(_onResize) {
                    _this.overflowSize$.next(_this.getOverflowSize());
                }), setTimeout(function() {
                    _this.subfolders$.next(_this.subfolders);
                }, 0);
            }, TriSubfolderBreadcrumbsComponent.prototype.ngOnDestroy = function() {
                this.onDestroy$.next(), this.onDestroy$.complete();
            }, TriSubfolderBreadcrumbsComponent.prototype.onItemClick = function(item) {
                this.visitSubfolder.emit(null == item ? void 0 : item.id);
            }, TriSubfolderBreadcrumbsComponent.prototype.onMenuItemClicked = function(menuItem) {
                this.visitSubfolder.emit(menuItem.data.id);
            }, TriSubfolderBreadcrumbsComponent.prototype.onMenuOpen = function() {
                this.isMenuOpened = !0;
            }, TriSubfolderBreadcrumbsComponent.prototype.onMenuClose = function() {
                this.isMenuOpened = !1;
            }, TriSubfolderBreadcrumbsComponent.prototype.onBackButtonClick = function() {
                switch (this.subfolders.length) {
                  case 0:
                    this.backToWorkspaceList.emit();
                    break;

                  case 1:
                    this.visitSubfolder.emit();
                    break;

                  default:
                    this.visitSubfolder.emit(this.subfolders[this.subfolders.length - 2].id);
                }
            }, TriSubfolderBreadcrumbsComponent.prototype.getOverflowSize = function() {
                return this.el.nativeElement.offsetWidth;
            }, TriSubfolderBreadcrumbsComponent.prototype.calculateOverflowLength = function(subfolders, showFilterResultsInBreadCrumb, overflowSize) {
                if (void 0 === overflowSize) return 0;
                if (void 0 === this.dummyBreadcrumbItem) return subfolders.length;
                var FilteredResultsText = this.localizationService.get("FilteredResults");
                overflowSize -= showFilterResultsInBreadCrumb ? 36 + this.getTextWidth(FilteredResultsText) + 16 + 8 : 0;
                for (var fullWidth = (this.workspace ? this.getTextWidth(this.workspace.displayName) : 0) + 40 + 32 * subfolders.length, _i = 0, subfolders_1 = subfolders; _i < subfolders_1.length; _i++) fullWidth += this.getTextWidth(subfolders_1[_i].displayName);
                if (fullWidth <= overflowSize) return 0;
                fullWidth += 48;
                for (var i = 0; i < subfolders.length; i++) if ((fullWidth = fullWidth - this.getTextWidth(subfolders[i].displayName) - 32) <= overflowSize) return i + 1;
                return subfolders.length;
            }, TriSubfolderBreadcrumbsComponent.prototype.getTextWidth = function(text) {
                return this.dummyBreadcrumbItem.nativeElement.innerText = text, this.dummyBreadcrumbItem.nativeElement.offsetWidth;
            }, TriSubfolderBreadcrumbsComponent.\u0275fac = function(t) {
                return new (t || TriSubfolderBreadcrumbsComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275directiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_5__.ElementRef), _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275directiveInject"](_trident_localization__WEBPACK_IMPORTED_MODULE_14__.z));
            }, TriSubfolderBreadcrumbsComponent.\u0275cmp = _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275defineComponent"]({
                type: TriSubfolderBreadcrumbsComponent,
                selectors: [ [ "tri-subfolder-breadcrumbs" ] ],
                viewQuery: function(rf, ctx) {
                    var _t;
                    1 & rf && _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275viewQuery"](_c0, 5), 
                    2 & rf && _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275queryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275loadQuery"]()) && (ctx.dummyBreadcrumbItem = _t.first);
                },
                hostBindings: function(rf, ctx) {
                    1 & rf && _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275listener"]("resize", function($event) {
                        return ctx.onResize($event);
                    }, !1, _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275resolveWindow"]);
                },
                inputs: {
                    workspace: "workspace",
                    subfolders: "subfolders",
                    isReadonly: "isReadonly",
                    showBackToWorkspaceListButton: "showBackToWorkspaceListButton",
                    showFilterResultsInBreadCrumb: "showFilterResultsInBreadCrumb"
                },
                outputs: {
                    visitSubfolder: "visitSubfolder",
                    backToWorkspaceList: "backToWorkspaceList"
                },
                features: [ _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275NgOnChangesFeature"] ],
                decls: 13,
                vars: 5,
                consts: [ [ 3, "ngSwitch" ], [ 4, "ngSwitchCase" ], [ "backButton", "" ], [ "workspaceLabel", "" ], [ "workspaceButton", "" ], [ 4, "ngSwitchDefault" ], [ 1, "breadcrumb-item-text", "dummy-breadcrumb-item", "tri-body1" ], [ "dummyBreadcrumbItem", "" ], [ "class", "breadcrumb-item breadcrumb-item-workspace-readonly", 4, "ngIf" ], [ "class", "breadcrumb-more", 4, "ngIf" ], [ "class", "breadcrumb-item-container", 4, "ngFor", "ngForOf" ], [ 1, "breadcrumb-item", "breadcrumb-item-workspace-readonly" ], [ 1, "workspace-icon", 3, "workspace" ], [ 1, "breadcrumb-item-text", "tri-body1", 3, "triTooltip" ], [ 1, "breadcrumb-more" ], [ "tri-svg-icon-16", "", "name", "chevron_right_16_regular" ], [ 3, "name", "triTooltip" ], [ 1, "breadcrumb-item-container" ], [ 1, "breadcrumb-item", "breadcrumb-item-subfolder-readonly" ], [ 4, "ngIf", "ngIfThen" ], [ 4, "ngIf", "ngIfElse" ], [ 1, "breadcrumb-item" ], [ "tri-button", "", "appearance", "subtle", "data-testid", "back-button", 1, "breadcrumb-back-button", 3, "click" ], [ "tri-svg-icon-16", "", "name", "chevron_left_16_regular" ], [ "class", "breadcrumb-item-container", 4, "ngIf" ], [ "tri-button", "", "appearance", "subtle", "class", "breadcrumb-item", "data-testid", "workspace-button", 3, "click", 4, "ngIf" ], [ "tri-button", "", "appearance", "subtle", "data-testid", "workspace-button", 1, "breadcrumb-item", 3, "click" ], [ 4, "ngIf", "ngIfThen", "ngIfElse" ], [ "class", "breadcrumb-item-container breadcrumb-item-filter-results", 4, "ngIf" ], [ "tri-button", "", "appearance", "subtle", "data-testid", "expand-more-button", 1, "breadcrumb-more-button", 3, "ngClass", "triMenu", "triMenuButtonClick", "triMenuOpen", "triMenuClose" ], [ 3, "name" ], [ "tri-button", "", "appearance", "subtle", "data-testid", "subfolder-button", 1, "breadcrumb-item", 3, "click" ], [ 1, "breadcrumb-item-container", "breadcrumb-item-filter-results" ], [ "tri-svg-icon-20", "", "name", "filter_20_regular", 1, "filter-icon" ], [ 1, "breadcrumb-item", "breadcrumb-item-text" ] ],
                template: function(rf, ctx) {
                    1 & rf && (_angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275elementContainerStart"](0, 0), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275pipe"](1, "async"), _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275template"](2, TriSubfolderBreadcrumbsComponent_ng_container_2_Template, 6, 7, "ng-container", 1), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275template"](3, TriSubfolderBreadcrumbsComponent_ng_container_3_Template, 4, 6, "ng-container", 1), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275template"](4, TriSubfolderBreadcrumbsComponent_ng_template_4_Template, 2, 0, "ng-template", null, 2, _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275templateRefExtractor"]), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275template"](6, TriSubfolderBreadcrumbsComponent_ng_template_6_Template, 1, 1, "ng-template", null, 3, _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275templateRefExtractor"]), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275template"](8, TriSubfolderBreadcrumbsComponent_ng_template_8_Template, 1, 1, "ng-template", null, 4, _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275templateRefExtractor"]), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275template"](10, TriSubfolderBreadcrumbsComponent_ng_container_10_Template, 9, 14, "ng-container", 5), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275elementContainerEnd"](), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275element"](11, "span", 6, 7)), 
                    2 & rf && (_angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275property"]("ngSwitch", _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275pipeBind1"](1, 3, ctx.mode$)), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275advance"](2), _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275property"]("ngSwitchCase", ctx.BreadcrumbsMode.ReadOnly), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275advance"](1), _angular_core__WEBPACK_IMPORTED_MODULE_5__["\u0275\u0275property"]("ngSwitchCase", ctx.BreadcrumbsMode.Zoomed));
                },
                dependencies: [ _angular_common__WEBPACK_IMPORTED_MODULE_15__.NgClass, _angular_common__WEBPACK_IMPORTED_MODULE_15__.NgForOf, _angular_common__WEBPACK_IMPORTED_MODULE_15__.NgIf, _angular_common__WEBPACK_IMPORTED_MODULE_15__.NgSwitch, _angular_common__WEBPACK_IMPORTED_MODULE_15__.NgSwitchCase, _angular_common__WEBPACK_IMPORTED_MODULE_15__.NgSwitchDefault, _ux_angular_src_lib_tri_menu_tri_menu_directive__WEBPACK_IMPORTED_MODULE_1__.rX, _ux_angular_src_lib_tri_svg_icon_components_tri_svg_icon_tri_svg_icon_component__WEBPACK_IMPORTED_MODULE_2__.M, _ux_angular_src_lib_tri_tooltip_tri_tooltip_directive__WEBPACK_IMPORTED_MODULE_3__.Z, _ux_angular_src_lib_tri_workspace_icon_components_tri_workspace_icon_tri_workspace_icon_component__WEBPACK_IMPORTED_MODULE_4__.y, _angular_common__WEBPACK_IMPORTED_MODULE_15__.AsyncPipe, _localization_src_localize_pipe__WEBPACK_IMPORTED_MODULE_16__.Y ],
                styles: [ "[_nghost-%COMP%]{display:flex;align-items:center}.breadcrumb-back-button[_ngcontent-%COMP%]{width:32px;padding:0 6px}.breadcrumb-item-container[_ngcontent-%COMP%]{display:inline-flex;align-items:center}.workspace-icon[_ngcontent-%COMP%]{height:20px;width:20px}.breadcrumb-item[_ngcontent-%COMP%]{display:flex;padding:0 8px 2px;gap:4px}.breadcrumb-item-text[_ngcontent-%COMP%]{max-width:30ch;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.breadcrumb-item-container[_ngcontent-%COMP%]:last-of-type   .breadcrumb-item-text[_ngcontent-%COMP%]{font-family:var(--fontFamilyBase);font-size:var(--fontSizeBase300);font-weight:var(--fontWeightSemibold);line-height:var(--lineHeightBase300)}.breadcrumb-item-workspace-readonly[_ngcontent-%COMP%]{padding-left:0}.breadcrumb-more[_ngcontent-%COMP%]{display:flex;align-items:center}.breadcrumb-more-button[_ngcontent-%COMP%]{width:32px;padding:0 6px}.breadcrumb-more-button.active[_ngcontent-%COMP%]{background-color:var(--colorSubtleBackgroundPressed)}.breadcrumb-more-button.active[_ngcontent-%COMP%]   tri-svg-icon[_ngcontent-%COMP%]{fill:var(--colorNeutralForeground2BrandHover)}.dummy-breadcrumb-item[_ngcontent-%COMP%]{position:absolute;visibility:hidden;left:-999px;top:-999px;width:auto;height:auto;padding:0}.filter-icon[_ngcontent-%COMP%]{padding-left:8px}" ],
                changeDetection: 0
            }), TriSubfolderBreadcrumbsComponent;
        }();
    },
    22743: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            y: function() {
                return TriWorkspaceIconComponent;
            }
        });
        var trident_env = __webpack_require__(63271), core = __webpack_require__(50423), common = __webpack_require__(77476), tri_svg_icon_component = __webpack_require__(74913);
        function TriWorkspaceIconComponent_img_1_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "img", 3), 2 & rf) {
                var ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("src", null == ctx_r0.workspace ? null : ctx_r0.workspace.icon, core["\u0275\u0275sanitizeUrl"]), 
                core["\u0275\u0275attribute"]("data-testid", "workspace-header-logo-img");
            }
        }
        function TriWorkspaceIconComponent_ng_container_2_tri_svg_icon_1_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "tri-svg-icon", 5), 2 & rf) {
                var ctx_r2 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275styleProp"]("height", ctx_r2.actualIconSizePx, "px")("width", ctx_r2.actualIconSizePx, "px"), 
                core["\u0275\u0275property"]("sprite", ctx_r2.icon.sprite)("name", ctx_r2.icon.name), 
                core["\u0275\u0275attribute"]("data-testid", "workspace-header-logo-default");
            }
        }
        function TriWorkspaceIconComponent_ng_container_2_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, TriWorkspaceIconComponent_ng_container_2_tri_svg_icon_1_Template, 1, 7, "tri-svg-icon", 4), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf && (core["\u0275\u0275advance"](1), 
            core["\u0275\u0275property"]("ngSwitchCase", !1));
        }
        var colorIconSizeToMonochromeIconSize = {
            20: 16,
            24: 20,
            32: 28,
            64: 48
        }, TriWorkspaceIconComponent = function() {
            function TriWorkspaceIconComponent(isTrident) {
                this.isTrident = isTrident, this.iconSizePx = 20, this.hasBackground = !1, this.actualIconSizePx = null, 
                this.icon = null;
            }
            return TriWorkspaceIconComponent.prototype.ngOnChanges = function() {
                var _a, workspace, size;
                this.isTrident ? (this.hasBackground = !1, this.actualIconSizePx = this.iconSizePx, 
                this.icon = {
                    sprite: "artifact-colored-icons",
                    name: (workspace = this.workspace, size = this.actualIconSizePx, void 0 === size && (size = 24), 
                    (null == workspace ? void 0 : workspace.isMyWorkspace) ? "c_my_workspace_".concat(size) : "c_group_workspace_".concat(size))
                }) : (this.hasBackground = !0, this.actualIconSizePx = colorIconSizeToMonochromeIconSize[this.iconSizePx], 
                this.icon = (null === (_a = this.workspace) || void 0 === _a ? void 0 : _a.isMyWorkspace) ? {
                    name: "person_".concat(this.actualIconSizePx, "_regular")
                } : {
                    name: "people_community_".concat(this.actualIconSizePx, "_regular")
                });
            }, TriWorkspaceIconComponent.\u0275fac = function(t) {
                return new (t || TriWorkspaceIconComponent)(core["\u0275\u0275directiveInject"](trident_env.Y, 8));
            }, TriWorkspaceIconComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: TriWorkspaceIconComponent,
                selectors: [ [ "tri-workspace-icon" ] ],
                hostVars: 2,
                hostBindings: function(rf, ctx) {
                    2 & rf && core["\u0275\u0275classProp"]("icon-background", ctx.hasBackground);
                },
                inputs: {
                    workspace: "workspace",
                    iconSizePx: "iconSizePx"
                },
                features: [ core["\u0275\u0275NgOnChangesFeature"] ],
                decls: 3,
                vars: 3,
                consts: [ [ 3, "ngSwitch" ], [ "class", "tri-h-full tri-w-full", "alt", "", 3, "src", 4, "ngSwitchCase" ], [ 4, "ngIf" ], [ "alt", "", 1, "tri-h-full", "tri-w-full", 3, "src" ], [ 3, "height", "width", "sprite", "name", 4, "ngSwitchCase" ], [ 3, "sprite", "name" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementContainerStart"](0, 0), core["\u0275\u0275template"](1, TriWorkspaceIconComponent_img_1_Template, 1, 2, "img", 1), 
                    core["\u0275\u0275template"](2, TriWorkspaceIconComponent_ng_container_2_Template, 2, 1, "ng-container", 2), 
                    core["\u0275\u0275elementContainerEnd"]()), 2 & rf && (core["\u0275\u0275property"]("ngSwitch", !(null == ctx.workspace || !ctx.workspace.icon)), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", !0), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx.icon && ctx.actualIconSizePx));
                },
                dependencies: [ common.NgIf, common.NgSwitch, common.NgSwitchCase, tri_svg_icon_component.M ],
                styles: [ "[_nghost-%COMP%]{border-radius:var(--borderRadiusCircular);color:var(--colorNeutralForeground3);fill:var(--colorNeutralForeground3);align-items:center;display:flex;justify-content:center;flex:0 0 auto}.icon-background[_nghost-%COMP%]{background-color:var(--colorNeutralBackground6)}[_nghost-%COMP%]   img[_ngcontent-%COMP%]{border-radius:var(--borderRadiusCircular);object-fit:cover}" ],
                changeDetection: 0
            }), TriWorkspaceIconComponent;
        }();
    },
    83992: function(module) {
        "use strict";
        module.exports = JSON.parse('{"Aacute":"\xc1","aacute":"\xe1","Abreve":"\u0102","abreve":"\u0103","ac":"\u223e","acd":"\u223f","acE":"\u223e\u0333","Acirc":"\xc2","acirc":"\xe2","acute":"\xb4","Acy":"\u0410","acy":"\u0430","AElig":"\xc6","aelig":"\xe6","af":"\u2061","Afr":"\ud835\udd04","afr":"\ud835\udd1e","Agrave":"\xc0","agrave":"\xe0","alefsym":"\u2135","aleph":"\u2135","Alpha":"\u0391","alpha":"\u03b1","Amacr":"\u0100","amacr":"\u0101","amalg":"\u2a3f","amp":"&","AMP":"&","andand":"\u2a55","And":"\u2a53","and":"\u2227","andd":"\u2a5c","andslope":"\u2a58","andv":"\u2a5a","ang":"\u2220","ange":"\u29a4","angle":"\u2220","angmsdaa":"\u29a8","angmsdab":"\u29a9","angmsdac":"\u29aa","angmsdad":"\u29ab","angmsdae":"\u29ac","angmsdaf":"\u29ad","angmsdag":"\u29ae","angmsdah":"\u29af","angmsd":"\u2221","angrt":"\u221f","angrtvb":"\u22be","angrtvbd":"\u299d","angsph":"\u2222","angst":"\xc5","angzarr":"\u237c","Aogon":"\u0104","aogon":"\u0105","Aopf":"\ud835\udd38","aopf":"\ud835\udd52","apacir":"\u2a6f","ap":"\u2248","apE":"\u2a70","ape":"\u224a","apid":"\u224b","apos":"\'","ApplyFunction":"\u2061","approx":"\u2248","approxeq":"\u224a","Aring":"\xc5","aring":"\xe5","Ascr":"\ud835\udc9c","ascr":"\ud835\udcb6","Assign":"\u2254","ast":"*","asymp":"\u2248","asympeq":"\u224d","Atilde":"\xc3","atilde":"\xe3","Auml":"\xc4","auml":"\xe4","awconint":"\u2233","awint":"\u2a11","backcong":"\u224c","backepsilon":"\u03f6","backprime":"\u2035","backsim":"\u223d","backsimeq":"\u22cd","Backslash":"\u2216","Barv":"\u2ae7","barvee":"\u22bd","barwed":"\u2305","Barwed":"\u2306","barwedge":"\u2305","bbrk":"\u23b5","bbrktbrk":"\u23b6","bcong":"\u224c","Bcy":"\u0411","bcy":"\u0431","bdquo":"\u201e","becaus":"\u2235","because":"\u2235","Because":"\u2235","bemptyv":"\u29b0","bepsi":"\u03f6","bernou":"\u212c","Bernoullis":"\u212c","Beta":"\u0392","beta":"\u03b2","beth":"\u2136","between":"\u226c","Bfr":"\ud835\udd05","bfr":"\ud835\udd1f","bigcap":"\u22c2","bigcirc":"\u25ef","bigcup":"\u22c3","bigodot":"\u2a00","bigoplus":"\u2a01","bigotimes":"\u2a02","bigsqcup":"\u2a06","bigstar":"\u2605","bigtriangledown":"\u25bd","bigtriangleup":"\u25b3","biguplus":"\u2a04","bigvee":"\u22c1","bigwedge":"\u22c0","bkarow":"\u290d","blacklozenge":"\u29eb","blacksquare":"\u25aa","blacktriangle":"\u25b4","blacktriangledown":"\u25be","blacktriangleleft":"\u25c2","blacktriangleright":"\u25b8","blank":"\u2423","blk12":"\u2592","blk14":"\u2591","blk34":"\u2593","block":"\u2588","bne":"=\u20e5","bnequiv":"\u2261\u20e5","bNot":"\u2aed","bnot":"\u2310","Bopf":"\ud835\udd39","bopf":"\ud835\udd53","bot":"\u22a5","bottom":"\u22a5","bowtie":"\u22c8","boxbox":"\u29c9","boxdl":"\u2510","boxdL":"\u2555","boxDl":"\u2556","boxDL":"\u2557","boxdr":"\u250c","boxdR":"\u2552","boxDr":"\u2553","boxDR":"\u2554","boxh":"\u2500","boxH":"\u2550","boxhd":"\u252c","boxHd":"\u2564","boxhD":"\u2565","boxHD":"\u2566","boxhu":"\u2534","boxHu":"\u2567","boxhU":"\u2568","boxHU":"\u2569","boxminus":"\u229f","boxplus":"\u229e","boxtimes":"\u22a0","boxul":"\u2518","boxuL":"\u255b","boxUl":"\u255c","boxUL":"\u255d","boxur":"\u2514","boxuR":"\u2558","boxUr":"\u2559","boxUR":"\u255a","boxv":"\u2502","boxV":"\u2551","boxvh":"\u253c","boxvH":"\u256a","boxVh":"\u256b","boxVH":"\u256c","boxvl":"\u2524","boxvL":"\u2561","boxVl":"\u2562","boxVL":"\u2563","boxvr":"\u251c","boxvR":"\u255e","boxVr":"\u255f","boxVR":"\u2560","bprime":"\u2035","breve":"\u02d8","Breve":"\u02d8","brvbar":"\xa6","bscr":"\ud835\udcb7","Bscr":"\u212c","bsemi":"\u204f","bsim":"\u223d","bsime":"\u22cd","bsolb":"\u29c5","bsol":"\\\\","bsolhsub":"\u27c8","bull":"\u2022","bullet":"\u2022","bump":"\u224e","bumpE":"\u2aae","bumpe":"\u224f","Bumpeq":"\u224e","bumpeq":"\u224f","Cacute":"\u0106","cacute":"\u0107","capand":"\u2a44","capbrcup":"\u2a49","capcap":"\u2a4b","cap":"\u2229","Cap":"\u22d2","capcup":"\u2a47","capdot":"\u2a40","CapitalDifferentialD":"\u2145","caps":"\u2229\ufe00","caret":"\u2041","caron":"\u02c7","Cayleys":"\u212d","ccaps":"\u2a4d","Ccaron":"\u010c","ccaron":"\u010d","Ccedil":"\xc7","ccedil":"\xe7","Ccirc":"\u0108","ccirc":"\u0109","Cconint":"\u2230","ccups":"\u2a4c","ccupssm":"\u2a50","Cdot":"\u010a","cdot":"\u010b","cedil":"\xb8","Cedilla":"\xb8","cemptyv":"\u29b2","cent":"\xa2","centerdot":"\xb7","CenterDot":"\xb7","cfr":"\ud835\udd20","Cfr":"\u212d","CHcy":"\u0427","chcy":"\u0447","check":"\u2713","checkmark":"\u2713","Chi":"\u03a7","chi":"\u03c7","circ":"\u02c6","circeq":"\u2257","circlearrowleft":"\u21ba","circlearrowright":"\u21bb","circledast":"\u229b","circledcirc":"\u229a","circleddash":"\u229d","CircleDot":"\u2299","circledR":"\xae","circledS":"\u24c8","CircleMinus":"\u2296","CirclePlus":"\u2295","CircleTimes":"\u2297","cir":"\u25cb","cirE":"\u29c3","cire":"\u2257","cirfnint":"\u2a10","cirmid":"\u2aef","cirscir":"\u29c2","ClockwiseContourIntegral":"\u2232","CloseCurlyDoubleQuote":"\u201d","CloseCurlyQuote":"\u2019","clubs":"\u2663","clubsuit":"\u2663","colon":":","Colon":"\u2237","Colone":"\u2a74","colone":"\u2254","coloneq":"\u2254","comma":",","commat":"@","comp":"\u2201","compfn":"\u2218","complement":"\u2201","complexes":"\u2102","cong":"\u2245","congdot":"\u2a6d","Congruent":"\u2261","conint":"\u222e","Conint":"\u222f","ContourIntegral":"\u222e","copf":"\ud835\udd54","Copf":"\u2102","coprod":"\u2210","Coproduct":"\u2210","copy":"\xa9","COPY":"\xa9","copysr":"\u2117","CounterClockwiseContourIntegral":"\u2233","crarr":"\u21b5","cross":"\u2717","Cross":"\u2a2f","Cscr":"\ud835\udc9e","cscr":"\ud835\udcb8","csub":"\u2acf","csube":"\u2ad1","csup":"\u2ad0","csupe":"\u2ad2","ctdot":"\u22ef","cudarrl":"\u2938","cudarrr":"\u2935","cuepr":"\u22de","cuesc":"\u22df","cularr":"\u21b6","cularrp":"\u293d","cupbrcap":"\u2a48","cupcap":"\u2a46","CupCap":"\u224d","cup":"\u222a","Cup":"\u22d3","cupcup":"\u2a4a","cupdot":"\u228d","cupor":"\u2a45","cups":"\u222a\ufe00","curarr":"\u21b7","curarrm":"\u293c","curlyeqprec":"\u22de","curlyeqsucc":"\u22df","curlyvee":"\u22ce","curlywedge":"\u22cf","curren":"\xa4","curvearrowleft":"\u21b6","curvearrowright":"\u21b7","cuvee":"\u22ce","cuwed":"\u22cf","cwconint":"\u2232","cwint":"\u2231","cylcty":"\u232d","dagger":"\u2020","Dagger":"\u2021","daleth":"\u2138","darr":"\u2193","Darr":"\u21a1","dArr":"\u21d3","dash":"\u2010","Dashv":"\u2ae4","dashv":"\u22a3","dbkarow":"\u290f","dblac":"\u02dd","Dcaron":"\u010e","dcaron":"\u010f","Dcy":"\u0414","dcy":"\u0434","ddagger":"\u2021","ddarr":"\u21ca","DD":"\u2145","dd":"\u2146","DDotrahd":"\u2911","ddotseq":"\u2a77","deg":"\xb0","Del":"\u2207","Delta":"\u0394","delta":"\u03b4","demptyv":"\u29b1","dfisht":"\u297f","Dfr":"\ud835\udd07","dfr":"\ud835\udd21","dHar":"\u2965","dharl":"\u21c3","dharr":"\u21c2","DiacriticalAcute":"\xb4","DiacriticalDot":"\u02d9","DiacriticalDoubleAcute":"\u02dd","DiacriticalGrave":"`","DiacriticalTilde":"\u02dc","diam":"\u22c4","diamond":"\u22c4","Diamond":"\u22c4","diamondsuit":"\u2666","diams":"\u2666","die":"\xa8","DifferentialD":"\u2146","digamma":"\u03dd","disin":"\u22f2","div":"\xf7","divide":"\xf7","divideontimes":"\u22c7","divonx":"\u22c7","DJcy":"\u0402","djcy":"\u0452","dlcorn":"\u231e","dlcrop":"\u230d","dollar":"$","Dopf":"\ud835\udd3b","dopf":"\ud835\udd55","Dot":"\xa8","dot":"\u02d9","DotDot":"\u20dc","doteq":"\u2250","doteqdot":"\u2251","DotEqual":"\u2250","dotminus":"\u2238","dotplus":"\u2214","dotsquare":"\u22a1","doublebarwedge":"\u2306","DoubleContourIntegral":"\u222f","DoubleDot":"\xa8","DoubleDownArrow":"\u21d3","DoubleLeftArrow":"\u21d0","DoubleLeftRightArrow":"\u21d4","DoubleLeftTee":"\u2ae4","DoubleLongLeftArrow":"\u27f8","DoubleLongLeftRightArrow":"\u27fa","DoubleLongRightArrow":"\u27f9","DoubleRightArrow":"\u21d2","DoubleRightTee":"\u22a8","DoubleUpArrow":"\u21d1","DoubleUpDownArrow":"\u21d5","DoubleVerticalBar":"\u2225","DownArrowBar":"\u2913","downarrow":"\u2193","DownArrow":"\u2193","Downarrow":"\u21d3","DownArrowUpArrow":"\u21f5","DownBreve":"\u0311","downdownarrows":"\u21ca","downharpoonleft":"\u21c3","downharpoonright":"\u21c2","DownLeftRightVector":"\u2950","DownLeftTeeVector":"\u295e","DownLeftVectorBar":"\u2956","DownLeftVector":"\u21bd","DownRightTeeVector":"\u295f","DownRightVectorBar":"\u2957","DownRightVector":"\u21c1","DownTeeArrow":"\u21a7","DownTee":"\u22a4","drbkarow":"\u2910","drcorn":"\u231f","drcrop":"\u230c","Dscr":"\ud835\udc9f","dscr":"\ud835\udcb9","DScy":"\u0405","dscy":"\u0455","dsol":"\u29f6","Dstrok":"\u0110","dstrok":"\u0111","dtdot":"\u22f1","dtri":"\u25bf","dtrif":"\u25be","duarr":"\u21f5","duhar":"\u296f","dwangle":"\u29a6","DZcy":"\u040f","dzcy":"\u045f","dzigrarr":"\u27ff","Eacute":"\xc9","eacute":"\xe9","easter":"\u2a6e","Ecaron":"\u011a","ecaron":"\u011b","Ecirc":"\xca","ecirc":"\xea","ecir":"\u2256","ecolon":"\u2255","Ecy":"\u042d","ecy":"\u044d","eDDot":"\u2a77","Edot":"\u0116","edot":"\u0117","eDot":"\u2251","ee":"\u2147","efDot":"\u2252","Efr":"\ud835\udd08","efr":"\ud835\udd22","eg":"\u2a9a","Egrave":"\xc8","egrave":"\xe8","egs":"\u2a96","egsdot":"\u2a98","el":"\u2a99","Element":"\u2208","elinters":"\u23e7","ell":"\u2113","els":"\u2a95","elsdot":"\u2a97","Emacr":"\u0112","emacr":"\u0113","empty":"\u2205","emptyset":"\u2205","EmptySmallSquare":"\u25fb","emptyv":"\u2205","EmptyVerySmallSquare":"\u25ab","emsp13":"\u2004","emsp14":"\u2005","emsp":"\u2003","ENG":"\u014a","eng":"\u014b","ensp":"\u2002","Eogon":"\u0118","eogon":"\u0119","Eopf":"\ud835\udd3c","eopf":"\ud835\udd56","epar":"\u22d5","eparsl":"\u29e3","eplus":"\u2a71","epsi":"\u03b5","Epsilon":"\u0395","epsilon":"\u03b5","epsiv":"\u03f5","eqcirc":"\u2256","eqcolon":"\u2255","eqsim":"\u2242","eqslantgtr":"\u2a96","eqslantless":"\u2a95","Equal":"\u2a75","equals":"=","EqualTilde":"\u2242","equest":"\u225f","Equilibrium":"\u21cc","equiv":"\u2261","equivDD":"\u2a78","eqvparsl":"\u29e5","erarr":"\u2971","erDot":"\u2253","escr":"\u212f","Escr":"\u2130","esdot":"\u2250","Esim":"\u2a73","esim":"\u2242","Eta":"\u0397","eta":"\u03b7","ETH":"\xd0","eth":"\xf0","Euml":"\xcb","euml":"\xeb","euro":"\u20ac","excl":"!","exist":"\u2203","Exists":"\u2203","expectation":"\u2130","exponentiale":"\u2147","ExponentialE":"\u2147","fallingdotseq":"\u2252","Fcy":"\u0424","fcy":"\u0444","female":"\u2640","ffilig":"\ufb03","fflig":"\ufb00","ffllig":"\ufb04","Ffr":"\ud835\udd09","ffr":"\ud835\udd23","filig":"\ufb01","FilledSmallSquare":"\u25fc","FilledVerySmallSquare":"\u25aa","fjlig":"fj","flat":"\u266d","fllig":"\ufb02","fltns":"\u25b1","fnof":"\u0192","Fopf":"\ud835\udd3d","fopf":"\ud835\udd57","forall":"\u2200","ForAll":"\u2200","fork":"\u22d4","forkv":"\u2ad9","Fouriertrf":"\u2131","fpartint":"\u2a0d","frac12":"\xbd","frac13":"\u2153","frac14":"\xbc","frac15":"\u2155","frac16":"\u2159","frac18":"\u215b","frac23":"\u2154","frac25":"\u2156","frac34":"\xbe","frac35":"\u2157","frac38":"\u215c","frac45":"\u2158","frac56":"\u215a","frac58":"\u215d","frac78":"\u215e","frasl":"\u2044","frown":"\u2322","fscr":"\ud835\udcbb","Fscr":"\u2131","gacute":"\u01f5","Gamma":"\u0393","gamma":"\u03b3","Gammad":"\u03dc","gammad":"\u03dd","gap":"\u2a86","Gbreve":"\u011e","gbreve":"\u011f","Gcedil":"\u0122","Gcirc":"\u011c","gcirc":"\u011d","Gcy":"\u0413","gcy":"\u0433","Gdot":"\u0120","gdot":"\u0121","ge":"\u2265","gE":"\u2267","gEl":"\u2a8c","gel":"\u22db","geq":"\u2265","geqq":"\u2267","geqslant":"\u2a7e","gescc":"\u2aa9","ges":"\u2a7e","gesdot":"\u2a80","gesdoto":"\u2a82","gesdotol":"\u2a84","gesl":"\u22db\ufe00","gesles":"\u2a94","Gfr":"\ud835\udd0a","gfr":"\ud835\udd24","gg":"\u226b","Gg":"\u22d9","ggg":"\u22d9","gimel":"\u2137","GJcy":"\u0403","gjcy":"\u0453","gla":"\u2aa5","gl":"\u2277","glE":"\u2a92","glj":"\u2aa4","gnap":"\u2a8a","gnapprox":"\u2a8a","gne":"\u2a88","gnE":"\u2269","gneq":"\u2a88","gneqq":"\u2269","gnsim":"\u22e7","Gopf":"\ud835\udd3e","gopf":"\ud835\udd58","grave":"`","GreaterEqual":"\u2265","GreaterEqualLess":"\u22db","GreaterFullEqual":"\u2267","GreaterGreater":"\u2aa2","GreaterLess":"\u2277","GreaterSlantEqual":"\u2a7e","GreaterTilde":"\u2273","Gscr":"\ud835\udca2","gscr":"\u210a","gsim":"\u2273","gsime":"\u2a8e","gsiml":"\u2a90","gtcc":"\u2aa7","gtcir":"\u2a7a","gt":">","GT":">","Gt":"\u226b","gtdot":"\u22d7","gtlPar":"\u2995","gtquest":"\u2a7c","gtrapprox":"\u2a86","gtrarr":"\u2978","gtrdot":"\u22d7","gtreqless":"\u22db","gtreqqless":"\u2a8c","gtrless":"\u2277","gtrsim":"\u2273","gvertneqq":"\u2269\ufe00","gvnE":"\u2269\ufe00","Hacek":"\u02c7","hairsp":"\u200a","half":"\xbd","hamilt":"\u210b","HARDcy":"\u042a","hardcy":"\u044a","harrcir":"\u2948","harr":"\u2194","hArr":"\u21d4","harrw":"\u21ad","Hat":"^","hbar":"\u210f","Hcirc":"\u0124","hcirc":"\u0125","hearts":"\u2665","heartsuit":"\u2665","hellip":"\u2026","hercon":"\u22b9","hfr":"\ud835\udd25","Hfr":"\u210c","HilbertSpace":"\u210b","hksearow":"\u2925","hkswarow":"\u2926","hoarr":"\u21ff","homtht":"\u223b","hookleftarrow":"\u21a9","hookrightarrow":"\u21aa","hopf":"\ud835\udd59","Hopf":"\u210d","horbar":"\u2015","HorizontalLine":"\u2500","hscr":"\ud835\udcbd","Hscr":"\u210b","hslash":"\u210f","Hstrok":"\u0126","hstrok":"\u0127","HumpDownHump":"\u224e","HumpEqual":"\u224f","hybull":"\u2043","hyphen":"\u2010","Iacute":"\xcd","iacute":"\xed","ic":"\u2063","Icirc":"\xce","icirc":"\xee","Icy":"\u0418","icy":"\u0438","Idot":"\u0130","IEcy":"\u0415","iecy":"\u0435","iexcl":"\xa1","iff":"\u21d4","ifr":"\ud835\udd26","Ifr":"\u2111","Igrave":"\xcc","igrave":"\xec","ii":"\u2148","iiiint":"\u2a0c","iiint":"\u222d","iinfin":"\u29dc","iiota":"\u2129","IJlig":"\u0132","ijlig":"\u0133","Imacr":"\u012a","imacr":"\u012b","image":"\u2111","ImaginaryI":"\u2148","imagline":"\u2110","imagpart":"\u2111","imath":"\u0131","Im":"\u2111","imof":"\u22b7","imped":"\u01b5","Implies":"\u21d2","incare":"\u2105","in":"\u2208","infin":"\u221e","infintie":"\u29dd","inodot":"\u0131","intcal":"\u22ba","int":"\u222b","Int":"\u222c","integers":"\u2124","Integral":"\u222b","intercal":"\u22ba","Intersection":"\u22c2","intlarhk":"\u2a17","intprod":"\u2a3c","InvisibleComma":"\u2063","InvisibleTimes":"\u2062","IOcy":"\u0401","iocy":"\u0451","Iogon":"\u012e","iogon":"\u012f","Iopf":"\ud835\udd40","iopf":"\ud835\udd5a","Iota":"\u0399","iota":"\u03b9","iprod":"\u2a3c","iquest":"\xbf","iscr":"\ud835\udcbe","Iscr":"\u2110","isin":"\u2208","isindot":"\u22f5","isinE":"\u22f9","isins":"\u22f4","isinsv":"\u22f3","isinv":"\u2208","it":"\u2062","Itilde":"\u0128","itilde":"\u0129","Iukcy":"\u0406","iukcy":"\u0456","Iuml":"\xcf","iuml":"\xef","Jcirc":"\u0134","jcirc":"\u0135","Jcy":"\u0419","jcy":"\u0439","Jfr":"\ud835\udd0d","jfr":"\ud835\udd27","jmath":"\u0237","Jopf":"\ud835\udd41","jopf":"\ud835\udd5b","Jscr":"\ud835\udca5","jscr":"\ud835\udcbf","Jsercy":"\u0408","jsercy":"\u0458","Jukcy":"\u0404","jukcy":"\u0454","Kappa":"\u039a","kappa":"\u03ba","kappav":"\u03f0","Kcedil":"\u0136","kcedil":"\u0137","Kcy":"\u041a","kcy":"\u043a","Kfr":"\ud835\udd0e","kfr":"\ud835\udd28","kgreen":"\u0138","KHcy":"\u0425","khcy":"\u0445","KJcy":"\u040c","kjcy":"\u045c","Kopf":"\ud835\udd42","kopf":"\ud835\udd5c","Kscr":"\ud835\udca6","kscr":"\ud835\udcc0","lAarr":"\u21da","Lacute":"\u0139","lacute":"\u013a","laemptyv":"\u29b4","lagran":"\u2112","Lambda":"\u039b","lambda":"\u03bb","lang":"\u27e8","Lang":"\u27ea","langd":"\u2991","langle":"\u27e8","lap":"\u2a85","Laplacetrf":"\u2112","laquo":"\xab","larrb":"\u21e4","larrbfs":"\u291f","larr":"\u2190","Larr":"\u219e","lArr":"\u21d0","larrfs":"\u291d","larrhk":"\u21a9","larrlp":"\u21ab","larrpl":"\u2939","larrsim":"\u2973","larrtl":"\u21a2","latail":"\u2919","lAtail":"\u291b","lat":"\u2aab","late":"\u2aad","lates":"\u2aad\ufe00","lbarr":"\u290c","lBarr":"\u290e","lbbrk":"\u2772","lbrace":"{","lbrack":"[","lbrke":"\u298b","lbrksld":"\u298f","lbrkslu":"\u298d","Lcaron":"\u013d","lcaron":"\u013e","Lcedil":"\u013b","lcedil":"\u013c","lceil":"\u2308","lcub":"{","Lcy":"\u041b","lcy":"\u043b","ldca":"\u2936","ldquo":"\u201c","ldquor":"\u201e","ldrdhar":"\u2967","ldrushar":"\u294b","ldsh":"\u21b2","le":"\u2264","lE":"\u2266","LeftAngleBracket":"\u27e8","LeftArrowBar":"\u21e4","leftarrow":"\u2190","LeftArrow":"\u2190","Leftarrow":"\u21d0","LeftArrowRightArrow":"\u21c6","leftarrowtail":"\u21a2","LeftCeiling":"\u2308","LeftDoubleBracket":"\u27e6","LeftDownTeeVector":"\u2961","LeftDownVectorBar":"\u2959","LeftDownVector":"\u21c3","LeftFloor":"\u230a","leftharpoondown":"\u21bd","leftharpoonup":"\u21bc","leftleftarrows":"\u21c7","leftrightarrow":"\u2194","LeftRightArrow":"\u2194","Leftrightarrow":"\u21d4","leftrightarrows":"\u21c6","leftrightharpoons":"\u21cb","leftrightsquigarrow":"\u21ad","LeftRightVector":"\u294e","LeftTeeArrow":"\u21a4","LeftTee":"\u22a3","LeftTeeVector":"\u295a","leftthreetimes":"\u22cb","LeftTriangleBar":"\u29cf","LeftTriangle":"\u22b2","LeftTriangleEqual":"\u22b4","LeftUpDownVector":"\u2951","LeftUpTeeVector":"\u2960","LeftUpVectorBar":"\u2958","LeftUpVector":"\u21bf","LeftVectorBar":"\u2952","LeftVector":"\u21bc","lEg":"\u2a8b","leg":"\u22da","leq":"\u2264","leqq":"\u2266","leqslant":"\u2a7d","lescc":"\u2aa8","les":"\u2a7d","lesdot":"\u2a7f","lesdoto":"\u2a81","lesdotor":"\u2a83","lesg":"\u22da\ufe00","lesges":"\u2a93","lessapprox":"\u2a85","lessdot":"\u22d6","lesseqgtr":"\u22da","lesseqqgtr":"\u2a8b","LessEqualGreater":"\u22da","LessFullEqual":"\u2266","LessGreater":"\u2276","lessgtr":"\u2276","LessLess":"\u2aa1","lesssim":"\u2272","LessSlantEqual":"\u2a7d","LessTilde":"\u2272","lfisht":"\u297c","lfloor":"\u230a","Lfr":"\ud835\udd0f","lfr":"\ud835\udd29","lg":"\u2276","lgE":"\u2a91","lHar":"\u2962","lhard":"\u21bd","lharu":"\u21bc","lharul":"\u296a","lhblk":"\u2584","LJcy":"\u0409","ljcy":"\u0459","llarr":"\u21c7","ll":"\u226a","Ll":"\u22d8","llcorner":"\u231e","Lleftarrow":"\u21da","llhard":"\u296b","lltri":"\u25fa","Lmidot":"\u013f","lmidot":"\u0140","lmoustache":"\u23b0","lmoust":"\u23b0","lnap":"\u2a89","lnapprox":"\u2a89","lne":"\u2a87","lnE":"\u2268","lneq":"\u2a87","lneqq":"\u2268","lnsim":"\u22e6","loang":"\u27ec","loarr":"\u21fd","lobrk":"\u27e6","longleftarrow":"\u27f5","LongLeftArrow":"\u27f5","Longleftarrow":"\u27f8","longleftrightarrow":"\u27f7","LongLeftRightArrow":"\u27f7","Longleftrightarrow":"\u27fa","longmapsto":"\u27fc","longrightarrow":"\u27f6","LongRightArrow":"\u27f6","Longrightarrow":"\u27f9","looparrowleft":"\u21ab","looparrowright":"\u21ac","lopar":"\u2985","Lopf":"\ud835\udd43","lopf":"\ud835\udd5d","loplus":"\u2a2d","lotimes":"\u2a34","lowast":"\u2217","lowbar":"_","LowerLeftArrow":"\u2199","LowerRightArrow":"\u2198","loz":"\u25ca","lozenge":"\u25ca","lozf":"\u29eb","lpar":"(","lparlt":"\u2993","lrarr":"\u21c6","lrcorner":"\u231f","lrhar":"\u21cb","lrhard":"\u296d","lrm":"\u200e","lrtri":"\u22bf","lsaquo":"\u2039","lscr":"\ud835\udcc1","Lscr":"\u2112","lsh":"\u21b0","Lsh":"\u21b0","lsim":"\u2272","lsime":"\u2a8d","lsimg":"\u2a8f","lsqb":"[","lsquo":"\u2018","lsquor":"\u201a","Lstrok":"\u0141","lstrok":"\u0142","ltcc":"\u2aa6","ltcir":"\u2a79","lt":"<","LT":"<","Lt":"\u226a","ltdot":"\u22d6","lthree":"\u22cb","ltimes":"\u22c9","ltlarr":"\u2976","ltquest":"\u2a7b","ltri":"\u25c3","ltrie":"\u22b4","ltrif":"\u25c2","ltrPar":"\u2996","lurdshar":"\u294a","luruhar":"\u2966","lvertneqq":"\u2268\ufe00","lvnE":"\u2268\ufe00","macr":"\xaf","male":"\u2642","malt":"\u2720","maltese":"\u2720","Map":"\u2905","map":"\u21a6","mapsto":"\u21a6","mapstodown":"\u21a7","mapstoleft":"\u21a4","mapstoup":"\u21a5","marker":"\u25ae","mcomma":"\u2a29","Mcy":"\u041c","mcy":"\u043c","mdash":"\u2014","mDDot":"\u223a","measuredangle":"\u2221","MediumSpace":"\u205f","Mellintrf":"\u2133","Mfr":"\ud835\udd10","mfr":"\ud835\udd2a","mho":"\u2127","micro":"\xb5","midast":"*","midcir":"\u2af0","mid":"\u2223","middot":"\xb7","minusb":"\u229f","minus":"\u2212","minusd":"\u2238","minusdu":"\u2a2a","MinusPlus":"\u2213","mlcp":"\u2adb","mldr":"\u2026","mnplus":"\u2213","models":"\u22a7","Mopf":"\ud835\udd44","mopf":"\ud835\udd5e","mp":"\u2213","mscr":"\ud835\udcc2","Mscr":"\u2133","mstpos":"\u223e","Mu":"\u039c","mu":"\u03bc","multimap":"\u22b8","mumap":"\u22b8","nabla":"\u2207","Nacute":"\u0143","nacute":"\u0144","nang":"\u2220\u20d2","nap":"\u2249","napE":"\u2a70\u0338","napid":"\u224b\u0338","napos":"\u0149","napprox":"\u2249","natural":"\u266e","naturals":"\u2115","natur":"\u266e","nbsp":"\xa0","nbump":"\u224e\u0338","nbumpe":"\u224f\u0338","ncap":"\u2a43","Ncaron":"\u0147","ncaron":"\u0148","Ncedil":"\u0145","ncedil":"\u0146","ncong":"\u2247","ncongdot":"\u2a6d\u0338","ncup":"\u2a42","Ncy":"\u041d","ncy":"\u043d","ndash":"\u2013","nearhk":"\u2924","nearr":"\u2197","neArr":"\u21d7","nearrow":"\u2197","ne":"\u2260","nedot":"\u2250\u0338","NegativeMediumSpace":"\u200b","NegativeThickSpace":"\u200b","NegativeThinSpace":"\u200b","NegativeVeryThinSpace":"\u200b","nequiv":"\u2262","nesear":"\u2928","nesim":"\u2242\u0338","NestedGreaterGreater":"\u226b","NestedLessLess":"\u226a","NewLine":"\\n","nexist":"\u2204","nexists":"\u2204","Nfr":"\ud835\udd11","nfr":"\ud835\udd2b","ngE":"\u2267\u0338","nge":"\u2271","ngeq":"\u2271","ngeqq":"\u2267\u0338","ngeqslant":"\u2a7e\u0338","nges":"\u2a7e\u0338","nGg":"\u22d9\u0338","ngsim":"\u2275","nGt":"\u226b\u20d2","ngt":"\u226f","ngtr":"\u226f","nGtv":"\u226b\u0338","nharr":"\u21ae","nhArr":"\u21ce","nhpar":"\u2af2","ni":"\u220b","nis":"\u22fc","nisd":"\u22fa","niv":"\u220b","NJcy":"\u040a","njcy":"\u045a","nlarr":"\u219a","nlArr":"\u21cd","nldr":"\u2025","nlE":"\u2266\u0338","nle":"\u2270","nleftarrow":"\u219a","nLeftarrow":"\u21cd","nleftrightarrow":"\u21ae","nLeftrightarrow":"\u21ce","nleq":"\u2270","nleqq":"\u2266\u0338","nleqslant":"\u2a7d\u0338","nles":"\u2a7d\u0338","nless":"\u226e","nLl":"\u22d8\u0338","nlsim":"\u2274","nLt":"\u226a\u20d2","nlt":"\u226e","nltri":"\u22ea","nltrie":"\u22ec","nLtv":"\u226a\u0338","nmid":"\u2224","NoBreak":"\u2060","NonBreakingSpace":"\xa0","nopf":"\ud835\udd5f","Nopf":"\u2115","Not":"\u2aec","not":"\xac","NotCongruent":"\u2262","NotCupCap":"\u226d","NotDoubleVerticalBar":"\u2226","NotElement":"\u2209","NotEqual":"\u2260","NotEqualTilde":"\u2242\u0338","NotExists":"\u2204","NotGreater":"\u226f","NotGreaterEqual":"\u2271","NotGreaterFullEqual":"\u2267\u0338","NotGreaterGreater":"\u226b\u0338","NotGreaterLess":"\u2279","NotGreaterSlantEqual":"\u2a7e\u0338","NotGreaterTilde":"\u2275","NotHumpDownHump":"\u224e\u0338","NotHumpEqual":"\u224f\u0338","notin":"\u2209","notindot":"\u22f5\u0338","notinE":"\u22f9\u0338","notinva":"\u2209","notinvb":"\u22f7","notinvc":"\u22f6","NotLeftTriangleBar":"\u29cf\u0338","NotLeftTriangle":"\u22ea","NotLeftTriangleEqual":"\u22ec","NotLess":"\u226e","NotLessEqual":"\u2270","NotLessGreater":"\u2278","NotLessLess":"\u226a\u0338","NotLessSlantEqual":"\u2a7d\u0338","NotLessTilde":"\u2274","NotNestedGreaterGreater":"\u2aa2\u0338","NotNestedLessLess":"\u2aa1\u0338","notni":"\u220c","notniva":"\u220c","notnivb":"\u22fe","notnivc":"\u22fd","NotPrecedes":"\u2280","NotPrecedesEqual":"\u2aaf\u0338","NotPrecedesSlantEqual":"\u22e0","NotReverseElement":"\u220c","NotRightTriangleBar":"\u29d0\u0338","NotRightTriangle":"\u22eb","NotRightTriangleEqual":"\u22ed","NotSquareSubset":"\u228f\u0338","NotSquareSubsetEqual":"\u22e2","NotSquareSuperset":"\u2290\u0338","NotSquareSupersetEqual":"\u22e3","NotSubset":"\u2282\u20d2","NotSubsetEqual":"\u2288","NotSucceeds":"\u2281","NotSucceedsEqual":"\u2ab0\u0338","NotSucceedsSlantEqual":"\u22e1","NotSucceedsTilde":"\u227f\u0338","NotSuperset":"\u2283\u20d2","NotSupersetEqual":"\u2289","NotTilde":"\u2241","NotTildeEqual":"\u2244","NotTildeFullEqual":"\u2247","NotTildeTilde":"\u2249","NotVerticalBar":"\u2224","nparallel":"\u2226","npar":"\u2226","nparsl":"\u2afd\u20e5","npart":"\u2202\u0338","npolint":"\u2a14","npr":"\u2280","nprcue":"\u22e0","nprec":"\u2280","npreceq":"\u2aaf\u0338","npre":"\u2aaf\u0338","nrarrc":"\u2933\u0338","nrarr":"\u219b","nrArr":"\u21cf","nrarrw":"\u219d\u0338","nrightarrow":"\u219b","nRightarrow":"\u21cf","nrtri":"\u22eb","nrtrie":"\u22ed","nsc":"\u2281","nsccue":"\u22e1","nsce":"\u2ab0\u0338","Nscr":"\ud835\udca9","nscr":"\ud835\udcc3","nshortmid":"\u2224","nshortparallel":"\u2226","nsim":"\u2241","nsime":"\u2244","nsimeq":"\u2244","nsmid":"\u2224","nspar":"\u2226","nsqsube":"\u22e2","nsqsupe":"\u22e3","nsub":"\u2284","nsubE":"\u2ac5\u0338","nsube":"\u2288","nsubset":"\u2282\u20d2","nsubseteq":"\u2288","nsubseteqq":"\u2ac5\u0338","nsucc":"\u2281","nsucceq":"\u2ab0\u0338","nsup":"\u2285","nsupE":"\u2ac6\u0338","nsupe":"\u2289","nsupset":"\u2283\u20d2","nsupseteq":"\u2289","nsupseteqq":"\u2ac6\u0338","ntgl":"\u2279","Ntilde":"\xd1","ntilde":"\xf1","ntlg":"\u2278","ntriangleleft":"\u22ea","ntrianglelefteq":"\u22ec","ntriangleright":"\u22eb","ntrianglerighteq":"\u22ed","Nu":"\u039d","nu":"\u03bd","num":"#","numero":"\u2116","numsp":"\u2007","nvap":"\u224d\u20d2","nvdash":"\u22ac","nvDash":"\u22ad","nVdash":"\u22ae","nVDash":"\u22af","nvge":"\u2265\u20d2","nvgt":">\u20d2","nvHarr":"\u2904","nvinfin":"\u29de","nvlArr":"\u2902","nvle":"\u2264\u20d2","nvlt":"<\u20d2","nvltrie":"\u22b4\u20d2","nvrArr":"\u2903","nvrtrie":"\u22b5\u20d2","nvsim":"\u223c\u20d2","nwarhk":"\u2923","nwarr":"\u2196","nwArr":"\u21d6","nwarrow":"\u2196","nwnear":"\u2927","Oacute":"\xd3","oacute":"\xf3","oast":"\u229b","Ocirc":"\xd4","ocirc":"\xf4","ocir":"\u229a","Ocy":"\u041e","ocy":"\u043e","odash":"\u229d","Odblac":"\u0150","odblac":"\u0151","odiv":"\u2a38","odot":"\u2299","odsold":"\u29bc","OElig":"\u0152","oelig":"\u0153","ofcir":"\u29bf","Ofr":"\ud835\udd12","ofr":"\ud835\udd2c","ogon":"\u02db","Ograve":"\xd2","ograve":"\xf2","ogt":"\u29c1","ohbar":"\u29b5","ohm":"\u03a9","oint":"\u222e","olarr":"\u21ba","olcir":"\u29be","olcross":"\u29bb","oline":"\u203e","olt":"\u29c0","Omacr":"\u014c","omacr":"\u014d","Omega":"\u03a9","omega":"\u03c9","Omicron":"\u039f","omicron":"\u03bf","omid":"\u29b6","ominus":"\u2296","Oopf":"\ud835\udd46","oopf":"\ud835\udd60","opar":"\u29b7","OpenCurlyDoubleQuote":"\u201c","OpenCurlyQuote":"\u2018","operp":"\u29b9","oplus":"\u2295","orarr":"\u21bb","Or":"\u2a54","or":"\u2228","ord":"\u2a5d","order":"\u2134","orderof":"\u2134","ordf":"\xaa","ordm":"\xba","origof":"\u22b6","oror":"\u2a56","orslope":"\u2a57","orv":"\u2a5b","oS":"\u24c8","Oscr":"\ud835\udcaa","oscr":"\u2134","Oslash":"\xd8","oslash":"\xf8","osol":"\u2298","Otilde":"\xd5","otilde":"\xf5","otimesas":"\u2a36","Otimes":"\u2a37","otimes":"\u2297","Ouml":"\xd6","ouml":"\xf6","ovbar":"\u233d","OverBar":"\u203e","OverBrace":"\u23de","OverBracket":"\u23b4","OverParenthesis":"\u23dc","para":"\xb6","parallel":"\u2225","par":"\u2225","parsim":"\u2af3","parsl":"\u2afd","part":"\u2202","PartialD":"\u2202","Pcy":"\u041f","pcy":"\u043f","percnt":"%","period":".","permil":"\u2030","perp":"\u22a5","pertenk":"\u2031","Pfr":"\ud835\udd13","pfr":"\ud835\udd2d","Phi":"\u03a6","phi":"\u03c6","phiv":"\u03d5","phmmat":"\u2133","phone":"\u260e","Pi":"\u03a0","pi":"\u03c0","pitchfork":"\u22d4","piv":"\u03d6","planck":"\u210f","planckh":"\u210e","plankv":"\u210f","plusacir":"\u2a23","plusb":"\u229e","pluscir":"\u2a22","plus":"+","plusdo":"\u2214","plusdu":"\u2a25","pluse":"\u2a72","PlusMinus":"\xb1","plusmn":"\xb1","plussim":"\u2a26","plustwo":"\u2a27","pm":"\xb1","Poincareplane":"\u210c","pointint":"\u2a15","popf":"\ud835\udd61","Popf":"\u2119","pound":"\xa3","prap":"\u2ab7","Pr":"\u2abb","pr":"\u227a","prcue":"\u227c","precapprox":"\u2ab7","prec":"\u227a","preccurlyeq":"\u227c","Precedes":"\u227a","PrecedesEqual":"\u2aaf","PrecedesSlantEqual":"\u227c","PrecedesTilde":"\u227e","preceq":"\u2aaf","precnapprox":"\u2ab9","precneqq":"\u2ab5","precnsim":"\u22e8","pre":"\u2aaf","prE":"\u2ab3","precsim":"\u227e","prime":"\u2032","Prime":"\u2033","primes":"\u2119","prnap":"\u2ab9","prnE":"\u2ab5","prnsim":"\u22e8","prod":"\u220f","Product":"\u220f","profalar":"\u232e","profline":"\u2312","profsurf":"\u2313","prop":"\u221d","Proportional":"\u221d","Proportion":"\u2237","propto":"\u221d","prsim":"\u227e","prurel":"\u22b0","Pscr":"\ud835\udcab","pscr":"\ud835\udcc5","Psi":"\u03a8","psi":"\u03c8","puncsp":"\u2008","Qfr":"\ud835\udd14","qfr":"\ud835\udd2e","qint":"\u2a0c","qopf":"\ud835\udd62","Qopf":"\u211a","qprime":"\u2057","Qscr":"\ud835\udcac","qscr":"\ud835\udcc6","quaternions":"\u210d","quatint":"\u2a16","quest":"?","questeq":"\u225f","quot":"\\"","QUOT":"\\"","rAarr":"\u21db","race":"\u223d\u0331","Racute":"\u0154","racute":"\u0155","radic":"\u221a","raemptyv":"\u29b3","rang":"\u27e9","Rang":"\u27eb","rangd":"\u2992","range":"\u29a5","rangle":"\u27e9","raquo":"\xbb","rarrap":"\u2975","rarrb":"\u21e5","rarrbfs":"\u2920","rarrc":"\u2933","rarr":"\u2192","Rarr":"\u21a0","rArr":"\u21d2","rarrfs":"\u291e","rarrhk":"\u21aa","rarrlp":"\u21ac","rarrpl":"\u2945","rarrsim":"\u2974","Rarrtl":"\u2916","rarrtl":"\u21a3","rarrw":"\u219d","ratail":"\u291a","rAtail":"\u291c","ratio":"\u2236","rationals":"\u211a","rbarr":"\u290d","rBarr":"\u290f","RBarr":"\u2910","rbbrk":"\u2773","rbrace":"}","rbrack":"]","rbrke":"\u298c","rbrksld":"\u298e","rbrkslu":"\u2990","Rcaron":"\u0158","rcaron":"\u0159","Rcedil":"\u0156","rcedil":"\u0157","rceil":"\u2309","rcub":"}","Rcy":"\u0420","rcy":"\u0440","rdca":"\u2937","rdldhar":"\u2969","rdquo":"\u201d","rdquor":"\u201d","rdsh":"\u21b3","real":"\u211c","realine":"\u211b","realpart":"\u211c","reals":"\u211d","Re":"\u211c","rect":"\u25ad","reg":"\xae","REG":"\xae","ReverseElement":"\u220b","ReverseEquilibrium":"\u21cb","ReverseUpEquilibrium":"\u296f","rfisht":"\u297d","rfloor":"\u230b","rfr":"\ud835\udd2f","Rfr":"\u211c","rHar":"\u2964","rhard":"\u21c1","rharu":"\u21c0","rharul":"\u296c","Rho":"\u03a1","rho":"\u03c1","rhov":"\u03f1","RightAngleBracket":"\u27e9","RightArrowBar":"\u21e5","rightarrow":"\u2192","RightArrow":"\u2192","Rightarrow":"\u21d2","RightArrowLeftArrow":"\u21c4","rightarrowtail":"\u21a3","RightCeiling":"\u2309","RightDoubleBracket":"\u27e7","RightDownTeeVector":"\u295d","RightDownVectorBar":"\u2955","RightDownVector":"\u21c2","RightFloor":"\u230b","rightharpoondown":"\u21c1","rightharpoonup":"\u21c0","rightleftarrows":"\u21c4","rightleftharpoons":"\u21cc","rightrightarrows":"\u21c9","rightsquigarrow":"\u219d","RightTeeArrow":"\u21a6","RightTee":"\u22a2","RightTeeVector":"\u295b","rightthreetimes":"\u22cc","RightTriangleBar":"\u29d0","RightTriangle":"\u22b3","RightTriangleEqual":"\u22b5","RightUpDownVector":"\u294f","RightUpTeeVector":"\u295c","RightUpVectorBar":"\u2954","RightUpVector":"\u21be","RightVectorBar":"\u2953","RightVector":"\u21c0","ring":"\u02da","risingdotseq":"\u2253","rlarr":"\u21c4","rlhar":"\u21cc","rlm":"\u200f","rmoustache":"\u23b1","rmoust":"\u23b1","rnmid":"\u2aee","roang":"\u27ed","roarr":"\u21fe","robrk":"\u27e7","ropar":"\u2986","ropf":"\ud835\udd63","Ropf":"\u211d","roplus":"\u2a2e","rotimes":"\u2a35","RoundImplies":"\u2970","rpar":")","rpargt":"\u2994","rppolint":"\u2a12","rrarr":"\u21c9","Rrightarrow":"\u21db","rsaquo":"\u203a","rscr":"\ud835\udcc7","Rscr":"\u211b","rsh":"\u21b1","Rsh":"\u21b1","rsqb":"]","rsquo":"\u2019","rsquor":"\u2019","rthree":"\u22cc","rtimes":"\u22ca","rtri":"\u25b9","rtrie":"\u22b5","rtrif":"\u25b8","rtriltri":"\u29ce","RuleDelayed":"\u29f4","ruluhar":"\u2968","rx":"\u211e","Sacute":"\u015a","sacute":"\u015b","sbquo":"\u201a","scap":"\u2ab8","Scaron":"\u0160","scaron":"\u0161","Sc":"\u2abc","sc":"\u227b","sccue":"\u227d","sce":"\u2ab0","scE":"\u2ab4","Scedil":"\u015e","scedil":"\u015f","Scirc":"\u015c","scirc":"\u015d","scnap":"\u2aba","scnE":"\u2ab6","scnsim":"\u22e9","scpolint":"\u2a13","scsim":"\u227f","Scy":"\u0421","scy":"\u0441","sdotb":"\u22a1","sdot":"\u22c5","sdote":"\u2a66","searhk":"\u2925","searr":"\u2198","seArr":"\u21d8","searrow":"\u2198","sect":"\xa7","semi":";","seswar":"\u2929","setminus":"\u2216","setmn":"\u2216","sext":"\u2736","Sfr":"\ud835\udd16","sfr":"\ud835\udd30","sfrown":"\u2322","sharp":"\u266f","SHCHcy":"\u0429","shchcy":"\u0449","SHcy":"\u0428","shcy":"\u0448","ShortDownArrow":"\u2193","ShortLeftArrow":"\u2190","shortmid":"\u2223","shortparallel":"\u2225","ShortRightArrow":"\u2192","ShortUpArrow":"\u2191","shy":"\xad","Sigma":"\u03a3","sigma":"\u03c3","sigmaf":"\u03c2","sigmav":"\u03c2","sim":"\u223c","simdot":"\u2a6a","sime":"\u2243","simeq":"\u2243","simg":"\u2a9e","simgE":"\u2aa0","siml":"\u2a9d","simlE":"\u2a9f","simne":"\u2246","simplus":"\u2a24","simrarr":"\u2972","slarr":"\u2190","SmallCircle":"\u2218","smallsetminus":"\u2216","smashp":"\u2a33","smeparsl":"\u29e4","smid":"\u2223","smile":"\u2323","smt":"\u2aaa","smte":"\u2aac","smtes":"\u2aac\ufe00","SOFTcy":"\u042c","softcy":"\u044c","solbar":"\u233f","solb":"\u29c4","sol":"/","Sopf":"\ud835\udd4a","sopf":"\ud835\udd64","spades":"\u2660","spadesuit":"\u2660","spar":"\u2225","sqcap":"\u2293","sqcaps":"\u2293\ufe00","sqcup":"\u2294","sqcups":"\u2294\ufe00","Sqrt":"\u221a","sqsub":"\u228f","sqsube":"\u2291","sqsubset":"\u228f","sqsubseteq":"\u2291","sqsup":"\u2290","sqsupe":"\u2292","sqsupset":"\u2290","sqsupseteq":"\u2292","square":"\u25a1","Square":"\u25a1","SquareIntersection":"\u2293","SquareSubset":"\u228f","SquareSubsetEqual":"\u2291","SquareSuperset":"\u2290","SquareSupersetEqual":"\u2292","SquareUnion":"\u2294","squarf":"\u25aa","squ":"\u25a1","squf":"\u25aa","srarr":"\u2192","Sscr":"\ud835\udcae","sscr":"\ud835\udcc8","ssetmn":"\u2216","ssmile":"\u2323","sstarf":"\u22c6","Star":"\u22c6","star":"\u2606","starf":"\u2605","straightepsilon":"\u03f5","straightphi":"\u03d5","strns":"\xaf","sub":"\u2282","Sub":"\u22d0","subdot":"\u2abd","subE":"\u2ac5","sube":"\u2286","subedot":"\u2ac3","submult":"\u2ac1","subnE":"\u2acb","subne":"\u228a","subplus":"\u2abf","subrarr":"\u2979","subset":"\u2282","Subset":"\u22d0","subseteq":"\u2286","subseteqq":"\u2ac5","SubsetEqual":"\u2286","subsetneq":"\u228a","subsetneqq":"\u2acb","subsim":"\u2ac7","subsub":"\u2ad5","subsup":"\u2ad3","succapprox":"\u2ab8","succ":"\u227b","succcurlyeq":"\u227d","Succeeds":"\u227b","SucceedsEqual":"\u2ab0","SucceedsSlantEqual":"\u227d","SucceedsTilde":"\u227f","succeq":"\u2ab0","succnapprox":"\u2aba","succneqq":"\u2ab6","succnsim":"\u22e9","succsim":"\u227f","SuchThat":"\u220b","sum":"\u2211","Sum":"\u2211","sung":"\u266a","sup1":"\xb9","sup2":"\xb2","sup3":"\xb3","sup":"\u2283","Sup":"\u22d1","supdot":"\u2abe","supdsub":"\u2ad8","supE":"\u2ac6","supe":"\u2287","supedot":"\u2ac4","Superset":"\u2283","SupersetEqual":"\u2287","suphsol":"\u27c9","suphsub":"\u2ad7","suplarr":"\u297b","supmult":"\u2ac2","supnE":"\u2acc","supne":"\u228b","supplus":"\u2ac0","supset":"\u2283","Supset":"\u22d1","supseteq":"\u2287","supseteqq":"\u2ac6","supsetneq":"\u228b","supsetneqq":"\u2acc","supsim":"\u2ac8","supsub":"\u2ad4","supsup":"\u2ad6","swarhk":"\u2926","swarr":"\u2199","swArr":"\u21d9","swarrow":"\u2199","swnwar":"\u292a","szlig":"\xdf","Tab":"\\t","target":"\u2316","Tau":"\u03a4","tau":"\u03c4","tbrk":"\u23b4","Tcaron":"\u0164","tcaron":"\u0165","Tcedil":"\u0162","tcedil":"\u0163","Tcy":"\u0422","tcy":"\u0442","tdot":"\u20db","telrec":"\u2315","Tfr":"\ud835\udd17","tfr":"\ud835\udd31","there4":"\u2234","therefore":"\u2234","Therefore":"\u2234","Theta":"\u0398","theta":"\u03b8","thetasym":"\u03d1","thetav":"\u03d1","thickapprox":"\u2248","thicksim":"\u223c","ThickSpace":"\u205f\u200a","ThinSpace":"\u2009","thinsp":"\u2009","thkap":"\u2248","thksim":"\u223c","THORN":"\xde","thorn":"\xfe","tilde":"\u02dc","Tilde":"\u223c","TildeEqual":"\u2243","TildeFullEqual":"\u2245","TildeTilde":"\u2248","timesbar":"\u2a31","timesb":"\u22a0","times":"\xd7","timesd":"\u2a30","tint":"\u222d","toea":"\u2928","topbot":"\u2336","topcir":"\u2af1","top":"\u22a4","Topf":"\ud835\udd4b","topf":"\ud835\udd65","topfork":"\u2ada","tosa":"\u2929","tprime":"\u2034","trade":"\u2122","TRADE":"\u2122","triangle":"\u25b5","triangledown":"\u25bf","triangleleft":"\u25c3","trianglelefteq":"\u22b4","triangleq":"\u225c","triangleright":"\u25b9","trianglerighteq":"\u22b5","tridot":"\u25ec","trie":"\u225c","triminus":"\u2a3a","TripleDot":"\u20db","triplus":"\u2a39","trisb":"\u29cd","tritime":"\u2a3b","trpezium":"\u23e2","Tscr":"\ud835\udcaf","tscr":"\ud835\udcc9","TScy":"\u0426","tscy":"\u0446","TSHcy":"\u040b","tshcy":"\u045b","Tstrok":"\u0166","tstrok":"\u0167","twixt":"\u226c","twoheadleftarrow":"\u219e","twoheadrightarrow":"\u21a0","Uacute":"\xda","uacute":"\xfa","uarr":"\u2191","Uarr":"\u219f","uArr":"\u21d1","Uarrocir":"\u2949","Ubrcy":"\u040e","ubrcy":"\u045e","Ubreve":"\u016c","ubreve":"\u016d","Ucirc":"\xdb","ucirc":"\xfb","Ucy":"\u0423","ucy":"\u0443","udarr":"\u21c5","Udblac":"\u0170","udblac":"\u0171","udhar":"\u296e","ufisht":"\u297e","Ufr":"\ud835\udd18","ufr":"\ud835\udd32","Ugrave":"\xd9","ugrave":"\xf9","uHar":"\u2963","uharl":"\u21bf","uharr":"\u21be","uhblk":"\u2580","ulcorn":"\u231c","ulcorner":"\u231c","ulcrop":"\u230f","ultri":"\u25f8","Umacr":"\u016a","umacr":"\u016b","uml":"\xa8","UnderBar":"_","UnderBrace":"\u23df","UnderBracket":"\u23b5","UnderParenthesis":"\u23dd","Union":"\u22c3","UnionPlus":"\u228e","Uogon":"\u0172","uogon":"\u0173","Uopf":"\ud835\udd4c","uopf":"\ud835\udd66","UpArrowBar":"\u2912","uparrow":"\u2191","UpArrow":"\u2191","Uparrow":"\u21d1","UpArrowDownArrow":"\u21c5","updownarrow":"\u2195","UpDownArrow":"\u2195","Updownarrow":"\u21d5","UpEquilibrium":"\u296e","upharpoonleft":"\u21bf","upharpoonright":"\u21be","uplus":"\u228e","UpperLeftArrow":"\u2196","UpperRightArrow":"\u2197","upsi":"\u03c5","Upsi":"\u03d2","upsih":"\u03d2","Upsilon":"\u03a5","upsilon":"\u03c5","UpTeeArrow":"\u21a5","UpTee":"\u22a5","upuparrows":"\u21c8","urcorn":"\u231d","urcorner":"\u231d","urcrop":"\u230e","Uring":"\u016e","uring":"\u016f","urtri":"\u25f9","Uscr":"\ud835\udcb0","uscr":"\ud835\udcca","utdot":"\u22f0","Utilde":"\u0168","utilde":"\u0169","utri":"\u25b5","utrif":"\u25b4","uuarr":"\u21c8","Uuml":"\xdc","uuml":"\xfc","uwangle":"\u29a7","vangrt":"\u299c","varepsilon":"\u03f5","varkappa":"\u03f0","varnothing":"\u2205","varphi":"\u03d5","varpi":"\u03d6","varpropto":"\u221d","varr":"\u2195","vArr":"\u21d5","varrho":"\u03f1","varsigma":"\u03c2","varsubsetneq":"\u228a\ufe00","varsubsetneqq":"\u2acb\ufe00","varsupsetneq":"\u228b\ufe00","varsupsetneqq":"\u2acc\ufe00","vartheta":"\u03d1","vartriangleleft":"\u22b2","vartriangleright":"\u22b3","vBar":"\u2ae8","Vbar":"\u2aeb","vBarv":"\u2ae9","Vcy":"\u0412","vcy":"\u0432","vdash":"\u22a2","vDash":"\u22a8","Vdash":"\u22a9","VDash":"\u22ab","Vdashl":"\u2ae6","veebar":"\u22bb","vee":"\u2228","Vee":"\u22c1","veeeq":"\u225a","vellip":"\u22ee","verbar":"|","Verbar":"\u2016","vert":"|","Vert":"\u2016","VerticalBar":"\u2223","VerticalLine":"|","VerticalSeparator":"\u2758","VerticalTilde":"\u2240","VeryThinSpace":"\u200a","Vfr":"\ud835\udd19","vfr":"\ud835\udd33","vltri":"\u22b2","vnsub":"\u2282\u20d2","vnsup":"\u2283\u20d2","Vopf":"\ud835\udd4d","vopf":"\ud835\udd67","vprop":"\u221d","vrtri":"\u22b3","Vscr":"\ud835\udcb1","vscr":"\ud835\udccb","vsubnE":"\u2acb\ufe00","vsubne":"\u228a\ufe00","vsupnE":"\u2acc\ufe00","vsupne":"\u228b\ufe00","Vvdash":"\u22aa","vzigzag":"\u299a","Wcirc":"\u0174","wcirc":"\u0175","wedbar":"\u2a5f","wedge":"\u2227","Wedge":"\u22c0","wedgeq":"\u2259","weierp":"\u2118","Wfr":"\ud835\udd1a","wfr":"\ud835\udd34","Wopf":"\ud835\udd4e","wopf":"\ud835\udd68","wp":"\u2118","wr":"\u2240","wreath":"\u2240","Wscr":"\ud835\udcb2","wscr":"\ud835\udccc","xcap":"\u22c2","xcirc":"\u25ef","xcup":"\u22c3","xdtri":"\u25bd","Xfr":"\ud835\udd1b","xfr":"\ud835\udd35","xharr":"\u27f7","xhArr":"\u27fa","Xi":"\u039e","xi":"\u03be","xlarr":"\u27f5","xlArr":"\u27f8","xmap":"\u27fc","xnis":"\u22fb","xodot":"\u2a00","Xopf":"\ud835\udd4f","xopf":"\ud835\udd69","xoplus":"\u2a01","xotime":"\u2a02","xrarr":"\u27f6","xrArr":"\u27f9","Xscr":"\ud835\udcb3","xscr":"\ud835\udccd","xsqcup":"\u2a06","xuplus":"\u2a04","xutri":"\u25b3","xvee":"\u22c1","xwedge":"\u22c0","Yacute":"\xdd","yacute":"\xfd","YAcy":"\u042f","yacy":"\u044f","Ycirc":"\u0176","ycirc":"\u0177","Ycy":"\u042b","ycy":"\u044b","yen":"\xa5","Yfr":"\ud835\udd1c","yfr":"\ud835\udd36","YIcy":"\u0407","yicy":"\u0457","Yopf":"\ud835\udd50","yopf":"\ud835\udd6a","Yscr":"\ud835\udcb4","yscr":"\ud835\udcce","YUcy":"\u042e","yucy":"\u044e","yuml":"\xff","Yuml":"\u0178","Zacute":"\u0179","zacute":"\u017a","Zcaron":"\u017d","zcaron":"\u017e","Zcy":"\u0417","zcy":"\u0437","Zdot":"\u017b","zdot":"\u017c","zeetrf":"\u2128","ZeroWidthSpace":"\u200b","Zeta":"\u0396","zeta":"\u03b6","zfr":"\ud835\udd37","Zfr":"\u2128","ZHcy":"\u0416","zhcy":"\u0436","zigrarr":"\u21dd","zopf":"\ud835\udd6b","Zopf":"\u2124","Zscr":"\ud835\udcb5","zscr":"\ud835\udccf","zwj":"\u200d","zwnj":"\u200c"}');
    }
} ]);