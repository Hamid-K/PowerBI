"use strict";

(self.webpackChunkdesktop = self.webpackChunkdesktop || []).push([ [ "new-features-dialog" ], {
    89250: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, {
            NewFeaturesDialogModule: function() {
                return NewFeaturesDialogModule;
            }
        });
        var new_features_dialog_identifier = __webpack_require__(42437), tslib_es6 = __webpack_require__(81337), rx_component = __webpack_require__(73221), core = __webpack_require__(50423), localization_service = __webpack_require__(65181), high_contrast_css_generation_service = __webpack_require__(64647), template_dialog_payload_service = __webpack_require__(67489), common = __webpack_require__(77476), template_dialog_component = __webpack_require__(96777), build = __webpack_require__(6426), localize_directive = __webpack_require__(59968), localize_pipe = __webpack_require__(85102), InteractiveMobileCanvasComponent = function() {
            function InteractiveMobileCanvasComponent() {
                this.imageUrl = "../../..".concat((0, build.Xr)(), "/images/InteractiveCanvas.gif");
            }
            return InteractiveMobileCanvasComponent.\u0275fac = function(t) {
                return new (t || InteractiveMobileCanvasComponent);
            }, InteractiveMobileCanvasComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: InteractiveMobileCanvasComponent,
                selectors: [ [ "interactive-mobile-canvas" ] ],
                decls: 6,
                vars: 7,
                consts: [ [ "localize", "Interactive_Mobile_Canvas_New_Feature_Description", 1, "dialog-description" ], [ "fragment-index", "0", "tabindex", "0", "localize", "Generic_LearnMore", "href", "https://go.microsoft.com/fwlink/?linkid=2170889", "target", "_blank", 1, "pbi-external-link" ], [ 1, "imageContainer" ], [ "role", "img", "focus-nav-mode", "Skip", 1, "dialog-image", 3, "src", "alt" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275element"](0, "span", 0)(1, "a", 1), core["\u0275\u0275pipe"](2, "localize"), 
                    core["\u0275\u0275elementStart"](3, "div", 2), core["\u0275\u0275element"](4, "img", 3), 
                    core["\u0275\u0275pipe"](5, "localize"), core["\u0275\u0275elementEnd"]()), 2 & rf && (core["\u0275\u0275advance"](1), 
                    core["\u0275\u0275attribute"]("aria-label", core["\u0275\u0275pipeBind1"](2, 3, "Generic_LearnMore")), 
                    core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("src", ctx.imageUrl, core["\u0275\u0275sanitizeUrl"])("alt", core["\u0275\u0275pipeBind1"](5, 5, "Interactive_Mobile_Canvas_New_Feature_Animation_Description")));
                },
                dependencies: [ localize_directive.X, localize_pipe.F ],
                styles: [ ".imageContainer[_ngcontent-%COMP%]{margin-top:12px}.imageContainer[_ngcontent-%COMP%]   .dialog-image[_ngcontent-%COMP%]{max-width:100%;max-height:100%}.dialog-description[_ngcontent-%COMP%]:focus{outline-color:transparent}.dialog-description[_ngcontent-%COMP%]   .boldText[_ngcontent-%COMP%]{font-weight:700}" ]
            }), InteractiveMobileCanvasComponent;
        }(), VisualCalculationIntroComponent = function() {
            function VisualCalculationIntroComponent() {
                this.imageUrl = "../../..".concat((0, build.Xr)(), "/images/VisualCalculationIntro.svg");
            }
            return VisualCalculationIntroComponent.\u0275fac = function(t) {
                return new (t || VisualCalculationIntroComponent);
            }, VisualCalculationIntroComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: VisualCalculationIntroComponent,
                selectors: [ [ "visual-calculation-intro" ] ],
                decls: 9,
                vars: 7,
                consts: [ [ 1, "imageContainer" ], [ "role", "img", "focus-nav-mode", "Skip", 1, "dialog-image", 3, "src", "alt" ], [ "localize", "VisualCalcNew_Feature_Description", 1, "dialog-description" ], [ "localize", "VisualCalcNew_Feature_Description_1", "localize-fragments", "", 1, "dialog-description" ], [ "fragment-index", "0", "localize", "NewVisualCalc", 1, "boldText" ], [ "fragment-index", "1", "localize", "Home", 1, "boldText" ], [ "fragment-index", "2", "tabindex", "0", "localize", "Generic_LearnMore", "href", "https://go.microsoft.com/fwlink/?linkid=2249857", "target", "_blank", 1, "pbi-external-link" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementStart"](0, "div", 0), core["\u0275\u0275element"](1, "img", 1), 
                    core["\u0275\u0275pipe"](2, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275element"](3, "p", 2), 
                    core["\u0275\u0275elementStart"](4, "p", 3), core["\u0275\u0275element"](5, "span", 4)(6, "span", 5)(7, "a", 6), 
                    core["\u0275\u0275pipe"](8, "localize"), core["\u0275\u0275elementEnd"]()), 2 & rf && (core["\u0275\u0275advance"](1), 
                    core["\u0275\u0275property"]("src", ctx.imageUrl, core["\u0275\u0275sanitizeUrl"])("alt", core["\u0275\u0275pipeBind1"](2, 3, "VisualCalcNew_Feature_Image_Description")), 
                    core["\u0275\u0275advance"](6), core["\u0275\u0275attribute"]("aria-label", core["\u0275\u0275pipeBind1"](8, 5, "Generic_LearnMore")));
                },
                dependencies: [ localize_directive.X, localize_pipe.F ],
                styles: [ ".imageContainer[_ngcontent-%COMP%]{margin-top:12px}.imageContainer[_ngcontent-%COMP%]   .dialog-image[_ngcontent-%COMP%]{max-width:100%;max-height:100%}.dialog-description[_ngcontent-%COMP%]:focus{outline-color:transparent}.dialog-description[_ngcontent-%COMP%]   .boldText[_ngcontent-%COMP%]{font-weight:var(--font-weight-semi-bold)}" ]
            }), VisualCalculationIntroComponent;
        }(), app_theme_service = __webpack_require__(71115), fesm2022_forms = __webpack_require__(17174), tri_radio_button_component = __webpack_require__(37350), tri_radio_group_component = __webpack_require__(89330);
        function DarkModeIntroComponent_tri_radio_button_6_Template(rf, ctx) {
            if (1 & rf) {
                var _r3 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "tri-radio-button", 12), core["\u0275\u0275listener"]("change", function() {
                    var option_r1 = core["\u0275\u0275restoreView"](_r3).$implicit, ctx_r2 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r2.onValueChange(option_r1.value));
                }), core["\u0275\u0275elementStart"](1, "div", 13), core["\u0275\u0275text"](2), 
                core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var option_r1 = ctx.$implicit;
                core["\u0275\u0275property"]("value", option_r1.value), core["\u0275\u0275advance"](2), 
                core["\u0275\u0275textInterpolate1"](" ", option_r1.label, "");
            }
        }
        var DarkModeIntroComponent = function() {
            function DarkModeIntroComponent(appThemeService, localizationService) {
                this.appThemeService = appThemeService, this.localizationService = localizationService, 
                this.imageUrl = "../../..".concat((0, build.Xr)(), "/images/DarkModeIntro.svg"), 
                this.dropDownOptions = [], this.dropDownOptions = [ {
                    value: "Teal",
                    label: localizationService.get("Default")
                }, {
                    value: "Light",
                    label: localizationService.get("Light")
                }, {
                    value: "Dark",
                    label: localizationService.get("Dark")
                }, {
                    value: "System",
                    label: localizationService.get("SettingsDataSource_SettingsAuthenticationMethod_Windows")
                } ], this.previewPersonalizeText = localizationService.get("PersonalizeVisual_MainMenuLabel") + " (" + localizationService.get("Preview") + ")";
            }
            return DarkModeIntroComponent.prototype.ngOnInit = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var _a;
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return _a = this, [ 4, this.appThemeService.getUserSettingAppThemeName() ];

                          case 1:
                            return _a.currentThemeValue = _b.sent(), [ 2 ];
                        }
                    });
                });
            }, DarkModeIntroComponent.prototype.onValueChange = function(newThemeValueString) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return this.currentThemeValue = newThemeValueString, [ 4, this.appThemeService.setAppThemeByNameWithSource(newThemeValueString, "freDialog") ];

                          case 1:
                            return _a.sent(), [ 2 ];
                        }
                    });
                });
            }, DarkModeIntroComponent.\u0275fac = function(t) {
                return new (t || DarkModeIntroComponent)(core["\u0275\u0275directiveInject"](app_theme_service.T), core["\u0275\u0275directiveInject"](localization_service.o));
            }, DarkModeIntroComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: DarkModeIntroComponent,
                selectors: [ [ "dark-mode-intro" ] ],
                decls: 17,
                vars: 10,
                consts: [ [ 1, "imageContainer" ], [ "role", "img", "focus-nav-mode", "Skip", 1, "dialog-image", 3, "src", "alt" ], [ 1, "boldTextCentered" ], [ 1, "flex-row-with-wrap", 3, "ngModel" ], [ "type", "radio", 3, "value", "change", 4, "ngFor", "ngForOf" ], [ "localize", "DarkMode_NewFeatureDialog_Description", 1, "dialog-description" ], [ "localize", "DarkMode_NewFeatureDialog_Step1", "localize-fragments", "", 1, "turn-on-step", "dialog-description" ], [ "fragment-index", "0", "localize", "DarkMode_NewFeatureDialog_TurnOnPath", 1, "boldText" ], [ "localize", "DarkMode_NewFeatureDialog_Step2", "localize-fragments", "", 1, "turn-on-step", "dialog-description" ], [ "fragment-index", "0", "localize", "DarkMode_NewFeatureDialog_Personalization", 1, "boldText" ], [ "fragment-index", "1", "localize", "Dark", 1, "boldText" ], [ "fragment-index", "2", "tabindex", "0", "localize", "Generic_LearnMore", "href", "https://go.microsoft.com/fwlink/?linkid=2281612", "target", "_blank", 1, "pbi-external-link" ], [ "type", "radio", 3, "value", "change" ], [ 1, "content-element-radio-header" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementStart"](0, "div", 0), core["\u0275\u0275element"](1, "img", 1), 
                    core["\u0275\u0275pipe"](2, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](3, "span", 2), 
                    core["\u0275\u0275text"](4), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](5, "tri-radio-group", 3), 
                    core["\u0275\u0275template"](6, DarkModeIntroComponent_tri_radio_button_6_Template, 3, 2, "tri-radio-button", 4), 
                    core["\u0275\u0275elementEnd"](), core["\u0275\u0275element"](7, "span", 5)(8, "br"), 
                    core["\u0275\u0275elementStart"](9, "span", 6), core["\u0275\u0275element"](10, "span", 7), 
                    core["\u0275\u0275elementEnd"](), core["\u0275\u0275element"](11, "br"), core["\u0275\u0275elementStart"](12, "span", 8), 
                    core["\u0275\u0275element"](13, "span", 9)(14, "span", 10)(15, "a", 11), core["\u0275\u0275pipe"](16, "localize"), 
                    core["\u0275\u0275elementEnd"]()), 2 & rf && (core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("src", ctx.imageUrl, core["\u0275\u0275sanitizeUrl"])("alt", core["\u0275\u0275pipeBind1"](2, 6, "DarkMode_NewFeatureDialog_ImageAltText")), 
                    core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](ctx.previewPersonalizeText), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngModel", ctx.currentThemeValue), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngForOf", ctx.dropDownOptions), 
                    core["\u0275\u0275advance"](9), core["\u0275\u0275attribute"]("aria-label", core["\u0275\u0275pipeBind1"](16, 8, "Generic_LearnMore")));
                },
                dependencies: [ common.NgForOf, localize_directive.X, fesm2022_forms.JJ, fesm2022_forms.On, tri_radio_button_component.Y, tri_radio_group_component.Z, localize_pipe.F ],
                styles: [ '.imageContainer[_ngcontent-%COMP%]{margin-top:12px}.imageContainer[_ngcontent-%COMP%]   .dialog-image[_ngcontent-%COMP%]{max-width:100%;max-height:100%}.dialog-description[_ngcontent-%COMP%]:focus{outline-color:transparent}.dialog-description[_ngcontent-%COMP%]   .boldText[_ngcontent-%COMP%]{font-weight:var(--font-weight-semi-bold)}.boldTextCentered[_ngcontent-%COMP%]{font-weight:var(--font-weight-semi-bold);display:flex;flex-direction:row;flex-wrap:wrap;justify-content:center}html:not([dir="rtl"])[_nghost-%COMP%]   .turn-on-step[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .turn-on-step[_ngcontent-%COMP%]{margin-left:8px}html[dir="rtl"][_nghost-%COMP%]   .turn-on-step[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .turn-on-step[_ngcontent-%COMP%]{margin-right:8px}.flex-row-with-wrap[_ngcontent-%COMP%]{display:flex;flex-direction:row;flex-wrap:wrap;justify-content:center}' ]
            }), DarkModeIntroComponent;
        }();
        function NewFeaturesDialogComponent_interactive_mobile_canvas_2_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "interactive-mobile-canvas");
        }
        function NewFeaturesDialogComponent_visual_calculation_intro_3_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "visual-calculation-intro");
        }
        function NewFeaturesDialogComponent_dark_mode_intro_4_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "dark-mode-intro");
        }
        function NewFeaturesDialogComponent_div_5_button_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r6 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "button", 6), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r6);
                    var ctx_r5 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r5.viewModel.actionButton());
                }), core["\u0275\u0275text"](1), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r4 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate"](null == ctx_r4.viewModel ? null : ctx_r4.viewModel.actionButtonText);
            }
        }
        function NewFeaturesDialogComponent_div_5_Template(rf, ctx) {
            if (1 & rf) {
                var _r8 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div", 3), core["\u0275\u0275template"](1, NewFeaturesDialogComponent_div_5_button_1_Template, 2, 1, "button", 4), 
                core["\u0275\u0275elementStart"](2, "button", 5), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r8);
                    var ctx_r7 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r7.nextFeature());
                }), core["\u0275\u0275text"](3), core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var ctx_r3 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", null == ctx_r3.viewModel ? null : ctx_r3.viewModel.actionButton), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](ctx_r3.viewModel.buttonText);
            }
        }
        var NewFeaturesDialogComponent = function(_super) {
            function NewFeaturesDialogComponent(localizationService, highContrastCssGenerationService, templateDialogPayload) {
                var _this = _super.call(this) || this;
                return _this.localizationService = localizationService, _this.highContrastCssGenerationService = highContrastCssGenerationService, 
                _this.templateDialogPayload = templateDialogPayload, _this.initializeHighContrastRules(), 
                _this;
            }
            return (0, tslib_es6.__extends)(NewFeaturesDialogComponent, _super), NewFeaturesDialogComponent.prototype.ngOnInit = function() {
                var _a;
                this.args = this.templateDialogPayload.input, this.titleMap = ((_a = {}).interactiveMobileCanvas = {
                    title: this.localizationService.get("Interactive_Mobile_Canvas_New_Feature")
                }, _a.visualCalculation = {
                    title: this.localizationService.get("VisualCalcNew_Feature_Title")
                }, _a.darkMode = {
                    title: this.localizationService.get("DarkMode_NewFeatureDialog_Title")
                }, _a), this.currentFeatureIndex = 0, this.updateViewModel();
            }, NewFeaturesDialogComponent.prototype.nextFeature = function() {
                this.args.features.length && this.currentFeatureIndex !== this.args.features.length - 1 ? (this.currentFeatureIndex++, 
                this.updateViewModel()) : this.templateDialogPayload.closeDialogFromConsumer({
                    complete: !0
                });
            }, NewFeaturesDialogComponent.prototype.getCurrentFeature = function() {
                return this.args.features[this.currentFeatureIndex];
            }, NewFeaturesDialogComponent.prototype.initializeHighContrastRules = function() {
                this.highContrastCssGenerationService.addRule(".themeableElement input.styled-radio", "{ opacity: 0 !important; }"), 
                this.highContrastCssGenerationService.addRule(".themeableElement input.styled-radio + span:before", "{ border-color: @buttonForegroundColor !important; background-color: @buttonBackgroundColor !important;}"), 
                this.highContrastCssGenerationService.addRule(".themeableElement input.styled-radio:focus + span:before, .themeableElement input.styled-radio:hover + span:before", "{ border-color: @selectedBackgroundColor !important; }"), 
                this.highContrastCssGenerationService.addRule(".themeableElement input.styled-radio:checked + span:after", "{ border-color: @buttonBackgroundColor !important; background-color: @buttonForegroundColor !important; }");
            }, NewFeaturesDialogComponent.prototype.updateViewModel = function() {
                var _a, currentFeature = this.getCurrentFeature();
                this.viewModel = {
                    currentFeature,
                    buttonText: this.localizationService.get(this.currentFeatureIndex === this.args.features.length - 1 ? "Close" : "TutorialPopup_Next"),
                    title: null === (_a = this.titleMap[currentFeature]) || void 0 === _a ? void 0 : _a.title
                }, this.templateDialogPayload.setTitle(this.viewModel.title);
            }, NewFeaturesDialogComponent.\u0275fac = function(t) {
                return new (t || NewFeaturesDialogComponent)(core["\u0275\u0275directiveInject"](localization_service.o), core["\u0275\u0275directiveInject"](high_contrast_css_generation_service.g), core["\u0275\u0275directiveInject"](template_dialog_payload_service.x));
            }, NewFeaturesDialogComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: NewFeaturesDialogComponent,
                selectors: [ [ "new-features-dialog" ] ],
                features: [ core["\u0275\u0275InheritDefinitionFeature"] ],
                decls: 6,
                vars: 5,
                consts: [ [ 1, "content", 3, "ngSwitch" ], [ 4, "ngSwitchCase" ], [ "id", "dialogFooter", "class", "newFeaturesDialog", 4, "ngIf" ], [ "id", "dialogFooter", 1, "newFeaturesDialog" ], [ "class", "pbi-fluent-button action", "tabindex", "0", 3, "click", 4, "ngIf" ], [ 1, "pbi-fluent-button", "primary", 3, "click" ], [ "tabindex", "0", 1, "pbi-fluent-button", "action", 3, "click" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementStart"](0, "template-dialog")(1, "div", 0), 
                    core["\u0275\u0275template"](2, NewFeaturesDialogComponent_interactive_mobile_canvas_2_Template, 1, 0, "interactive-mobile-canvas", 1), 
                    core["\u0275\u0275template"](3, NewFeaturesDialogComponent_visual_calculation_intro_3_Template, 1, 0, "visual-calculation-intro", 1), 
                    core["\u0275\u0275template"](4, NewFeaturesDialogComponent_dark_mode_intro_4_Template, 1, 0, "dark-mode-intro", 1), 
                    core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](5, NewFeaturesDialogComponent_div_5_Template, 4, 2, "div", 2), 
                    core["\u0275\u0275elementEnd"]()), 2 & rf && (core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitch", null == ctx.viewModel ? null : ctx.viewModel.currentFeature), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", "interactiveMobileCanvas"), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", "visualCalculation"), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", "darkMode"), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx.viewModel));
                },
                dependencies: [ common.NgIf, common.NgSwitch, common.NgSwitchCase, template_dialog_component.J, InteractiveMobileCanvasComponent, VisualCalculationIntroComponent, DarkModeIntroComponent ],
                styles: [ '[_nghost-%COMP%]   template-dialog[_ngcontent-%COMP%]{min-height:300px}[_nghost-%COMP%]   .content[_ngcontent-%COMP%]{font-size:var(--md-font-size, 14px);font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);color:var(--neutral-primary-color, #333333);padding-left:0;padding-right:0;margin-top:8px}[_nghost-%COMP%]   #dialogFooter[_ngcontent-%COMP%]{display:flex;justify-content:flex-end!important;margin-top:8px}' ],
                changeDetection: 0
            }), NewFeaturesDialogComponent;
        }(rx_component.w), localization_module = __webpack_require__(79061), dialogs_module = __webpack_require__(76966), tri_radio_button = __webpack_require__(95228), NewFeaturesDialogModule = function() {
            function NewFeaturesDialogModule() {}
            return NewFeaturesDialogModule.\u0275fac = function(t) {
                return new (t || NewFeaturesDialogModule);
            }, NewFeaturesDialogModule.\u0275mod = core["\u0275\u0275defineNgModule"]({
                type: NewFeaturesDialogModule
            }), NewFeaturesDialogModule.\u0275inj = core["\u0275\u0275defineInjector"]({
                providers: [ template_dialog_payload_service.x ],
                imports: [ common.CommonModule, dialogs_module.c.withManifest([ {
                    componentIdentifier: new_features_dialog_identifier.o,
                    componentType: NewFeaturesDialogComponent
                } ]), localization_module.v, fesm2022_forms.u5, tri_radio_button.W ]
            }), NewFeaturesDialogModule;
        }();
    }
} ]);