"use strict";

(self.webpackChunkdesktop = self.webpackChunkdesktop || []).push([ [ "scriptVisual" ], {
    22611: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, {
            ScriptVisual: function() {
                return ScriptVisual;
            }
        });
        var _VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(62458), ScriptVisual = function() {
            function ScriptVisual() {}
            return ScriptVisual.prototype.init = function(options) {
                this.element = options.element;
            }, ScriptVisual.prototype.enumerateObjectInstances = function(options) {
                return [];
            }, ScriptVisual.prototype.update = function(options) {
                _VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(options, "options");
                var dataViews = options.dataViews;
                if (dataViews && 0 !== dataViews.length) {
                    var dataView = dataViews[0];
                    if (dataView && dataView.metadata) {
                        var imageUrl = null;
                        dataView.scriptResult && dataView.scriptResult.payloadBase64 && (imageUrl = "data:image/png;base64," + dataView.scriptResult.payloadBase64), 
                        this.ensureHtmlElement();
                        var img = this.ensureImageElement();
                        imageUrl ? img.attr("src", imageUrl) : img.removeAttr("src"), this.onResizing(options.viewport, options.resizeMode || 2);
                    }
                }
            }, ScriptVisual.prototype.onResizing = function(finalViewport, resizeMode) {
                this.ensureHtmlElement().css({
                    height: finalViewport.height,
                    width: finalViewport.width
                });
            }, ScriptVisual.prototype.ensureHtmlElement = function() {
                var div = this.imageBackgroundElement;
                return div || (div = $("<div class='autoScaleImageContainer'></div>"), this.imageBackgroundElement = div, 
                this.imageBackgroundElement.appendTo(this.element)), div;
            }, ScriptVisual.prototype.ensureImageElement = function() {
                var img = this.imageElement;
                return img || (img = $("<img class='autoScaleImage'/>"), this.imageElement = img, 
                this.imageElement.appendTo(this.imageBackgroundElement)), img;
            }, ScriptVisual;
        }();
    }
} ]);