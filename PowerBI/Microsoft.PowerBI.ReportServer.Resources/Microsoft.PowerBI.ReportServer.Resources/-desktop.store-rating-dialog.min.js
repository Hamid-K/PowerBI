"use strict";

(self.webpackChunkdesktop = self.webpackChunkdesktop || []).push([ [ "store-rating-dialog" ], {
    17802: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, {
            StoreRatingDialogModule: function() {
                return StoreRatingDialogModule;
            }
        });
        var store_rating_dialog_identifier = __webpack_require__(9623), tslib_es6 = __webpack_require__(81337), debug = __webpack_require__(62458), BehaviorSubject = __webpack_require__(35510), core = __webpack_require__(50423), commandService = __webpack_require__(5034), dialog = __webpack_require__(32293), localization_service = __webpack_require__(65181), common = __webpack_require__(77476), localize_directive = __webpack_require__(59968), dialog_header_component = __webpack_require__(45051), dialog_body_component = __webpack_require__(53833), dialog_footer_component = __webpack_require__(44511), accessible_click_directive = __webpack_require__(44581), pbi_office_icon_component = __webpack_require__(69437), localize_pipe = __webpack_require__(85102);
        function StoreRatingDialogComponent_ng_container_2_section_2_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementStart"](0, "section"), core["\u0275\u0275element"](1, "p", 3), 
            core["\u0275\u0275elementEnd"]());
        }
        function StoreRatingDialogComponent_ng_container_2_section_3_div_3_Template(rf, ctx) {
            if (1 & rf) {
                var _r8 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div", 7), core["\u0275\u0275listener"]("accessible-click", function() {
                    var supportButton_r6 = core["\u0275\u0275restoreView"](_r8).$implicit, ctx_r7 = core["\u0275\u0275nextContext"](3);
                    return core["\u0275\u0275resetView"](ctx_r7.onSupportButtonClicked(supportButton_r6.type));
                }), core["\u0275\u0275pipe"](1, "localize"), core["\u0275\u0275element"](2, "pbi-office-icon", 8)(3, "p", 9), 
                core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var supportButton_r6 = ctx.$implicit;
                core["\u0275\u0275attribute"]("aria-label", core["\u0275\u0275pipeBind1"](1, 3, supportButton_r6.labelKey)), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("name", supportButton_r6.iconName), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("localize", supportButton_r6.labelKey);
            }
        }
        function StoreRatingDialogComponent_ng_container_2_section_3_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "section"), core["\u0275\u0275element"](1, "p", 4), 
            core["\u0275\u0275elementStart"](2, "div", 5), core["\u0275\u0275template"](3, StoreRatingDialogComponent_ng_container_2_section_3_div_3_Template, 4, 5, "div", 6), 
            core["\u0275\u0275elementEnd"]()()), 2 & rf) {
                var ctx_r3 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("ngForOf", ctx_r3.supportButtons);
            }
        }
        function StoreRatingDialogComponent_ng_container_2_dialog_footer_4_Template(rf, ctx) {
            if (1 & rf) {
                var _r10 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "dialog-footer", 10), core["\u0275\u0275listener"]("okAction", function() {
                    core["\u0275\u0275restoreView"](_r10);
                    var ctx_r9 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r9.onOkButtonClicked());
                })("cancelAction", function() {
                    core["\u0275\u0275restoreView"](_r10);
                    var ctx_r11 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r11.onCancelButtonClicked());
                }), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var vm_r1 = core["\u0275\u0275nextContext"]().ngIf;
                core["\u0275\u0275property"]("okText", vm_r1.okButtonText)("cancelText", vm_r1.cancelButtonText)("hideCancel", vm_r1.hideCancelButton);
            }
        }
        function StoreRatingDialogComponent_ng_container_2_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "dialog-body"), 
            core["\u0275\u0275template"](2, StoreRatingDialogComponent_ng_container_2_section_2_Template, 2, 0, "section", 1), 
            core["\u0275\u0275template"](3, StoreRatingDialogComponent_ng_container_2_section_3_Template, 4, 1, "section", 1), 
            core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](4, StoreRatingDialogComponent_ng_container_2_dialog_footer_4_Template, 1, 3, "dialog-footer", 2), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var vm_r1 = ctx.ngIf, ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", vm_r1.contentType === ctx_r0.RatingDialogContentType.Prompt), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", vm_r1.contentType === ctx_r0.RatingDialogContentType.Support), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !vm_r1.hideFooter);
            }
        }
        var RatingDialogContentType = function(RatingDialogContentType) {
            return RatingDialogContentType[RatingDialogContentType.Initial = 0] = "Initial", 
            RatingDialogContentType[RatingDialogContentType.Prompt = 1] = "Prompt", RatingDialogContentType[RatingDialogContentType.Support = 2] = "Support", 
            RatingDialogContentType;
        }({}), SupportButtonType = function(SupportButtonType) {
            return SupportButtonType[SupportButtonType.Support = 0] = "Support", SupportButtonType[SupportButtonType.Community = 1] = "Community", 
            SupportButtonType[SupportButtonType.Idea = 2] = "Idea", SupportButtonType;
        }({}), StoreRatingDialogComponent = function() {
            function StoreRatingDialogComponent(commandStore, dialogRef, localizationService) {
                this.commandStore = commandStore, this.dialogRef = dialogRef, this.localizationService = localizationService, 
                this.RatingDialogContentType = RatingDialogContentType, this.supportButtons = [ {
                    type: SupportButtonType.Support,
                    labelKey: "AboutVisualDialog_Support",
                    iconName: "OfficeAssistant_20"
                }, {
                    type: SupportButtonType.Community,
                    labelKey: "TopNav_HelpMenu_Community",
                    iconName: "BrowseGroups_20"
                }, {
                    type: SupportButtonType.Idea,
                    labelKey: "GetData_SubmitAnIdea",
                    iconName: "ClassSendFeedback_20"
                } ], this.storeRatingVm$ = new BehaviorSubject.X({
                    contentType: RatingDialogContentType.Initial,
                    title: this.localizationService.get("StoreRating_Initial_Title"),
                    okButtonText: this.localizationService.get("Yes"),
                    cancelButtonText: this.localizationService.get("No"),
                    hideCancelButton: !1,
                    hideFooter: !1
                });
            }
            return StoreRatingDialogComponent.prototype.onOkButtonClicked = function() {
                switch (this.storeRatingVm$.value.contentType) {
                  case RatingDialogContentType.Initial:
                    this.storeRatingVm$.next({
                        contentType: RatingDialogContentType.Prompt,
                        title: this.localizationService.get("StoreRating_Prompt_Title"),
                        okButtonText: this.localizationService.get("StoreRating_Rate_Button"),
                        hideCancelButton: !0,
                        hideFooter: !1,
                        titleIcon: "pbi-glyph-circled-checkmark"
                    });
                    break;

                  case RatingDialogContentType.Prompt:
                    this.dialogRef.close({
                        promptForRating: !0
                    });
                    break;

                  default:
                    debug.fF.assertFail("No handlers defined for other scenarios");
                }
            }, StoreRatingDialogComponent.prototype.onCancelButtonClicked = function() {
                this.storeRatingVm$.value.contentType === RatingDialogContentType.Initial ? this.storeRatingVm$.next({
                    contentType: RatingDialogContentType.Support,
                    title: this.localizationService.get("StoreRating_Support_Title"),
                    hideCancelButton: !0,
                    hideFooter: !0
                }) : debug.fF.assertFail("No handlers defined for other scenarios");
            }, StoreRatingDialogComponent.prototype.onSupportButtonClicked = function(buttonType) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            switch (buttonType) {
                              case SupportButtonType.Support:
                                return [ 3, 1 ];

                              case SupportButtonType.Community:
                                return [ 3, 3 ];

                              case SupportButtonType.Idea:
                                return [ 3, 5 ];
                            }
                            return [ 3, 7 ];

                          case 1:
                            return [ 4, this.commandStore.Help.Support.execute() ];

                          case 2:
                          case 4:
                          case 6:
                            return _b.sent(), [ 3, 8 ];

                          case 3:
                            return [ 4, this.commandStore.Community.Community.execute() ];

                          case 5:
                            return [ 4, this.commandStore.Community.SubmitAnIdea.execute() ];

                          case 7:
                            return debug.fF.assertNever(buttonType), [ 3, 8 ];

                          case 8:
                            return [ 2 ];
                        }
                    });
                });
            }, StoreRatingDialogComponent.prototype.onCloseButtonClicked = function() {
                this.cancelStoreRatingPrompt();
            }, StoreRatingDialogComponent.prototype.onEscapeKey = function() {
                this.cancelStoreRatingPrompt();
            }, Object.defineProperty(StoreRatingDialogComponent.prototype, "ariaLabel", {
                get: function() {
                    return this.storeRatingVm$.value.title;
                },
                enumerable: !1,
                configurable: !0
            }), StoreRatingDialogComponent.prototype.cancelStoreRatingPrompt = function() {
                this.dialogRef.close({
                    promptForRating: !1
                });
            }, StoreRatingDialogComponent.\u0275fac = function(t) {
                return new (t || StoreRatingDialogComponent)(core["\u0275\u0275directiveInject"](commandService.N6), core["\u0275\u0275directiveInject"](dialog.so), core["\u0275\u0275directiveInject"](localization_service.o));
            }, StoreRatingDialogComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: StoreRatingDialogComponent,
                selectors: [ [ "store-rating-dialog" ] ],
                hostAttrs: [ "role", "dialog" ],
                hostVars: 1,
                hostBindings: function(rf, ctx) {
                    1 & rf && core["\u0275\u0275listener"]("keydown.esc", function() {
                        return ctx.onEscapeKey();
                    }, !1, core["\u0275\u0275resolveDocument"]), 2 & rf && core["\u0275\u0275attribute"]("aria-label", ctx.ariaLabel);
                },
                decls: 4,
                vars: 8,
                consts: [ [ 3, "title", "oneLineWithEllipsis", "focusInitialCloseButton", "close" ], [ 4, "ngIf" ], [ 3, "okText", "cancelText", "hideCancel", "okAction", "cancelAction", 4, "ngIf" ], [ "localize", "StoreRating_Prompt_Body" ], [ "localize", "StoreRating_Support_Body" ], [ 1, "supportButtonRow" ], [ "role", "button", "class", "supportButton", 3, "accessible-click", 4, "ngFor", "ngForOf" ], [ "role", "button", 1, "supportButton", 3, "accessible-click" ], [ 3, "name" ], [ 3, "localize" ], [ 3, "okText", "cancelText", "hideCancel", "okAction", "cancelAction" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementStart"](0, "dialog-header", 0), core["\u0275\u0275listener"]("close", function() {
                        return ctx.onCloseButtonClicked();
                    }), core["\u0275\u0275pipe"](1, "async"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](2, StoreRatingDialogComponent_ng_container_2_Template, 5, 3, "ng-container", 1), 
                    core["\u0275\u0275pipe"](3, "async")), 2 & rf && (core["\u0275\u0275property"]("title", core["\u0275\u0275pipeBind1"](1, 4, ctx.storeRatingVm$).title)("oneLineWithEllipsis", !1)("focusInitialCloseButton", !0), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](3, 6, ctx.storeRatingVm$)));
                },
                dependencies: [ common.NgForOf, common.NgIf, localize_directive.X, dialog_header_component.A, dialog_body_component.H, dialog_footer_component.g, accessible_click_directive.t, pbi_office_icon_component.m, common.AsyncPipe, localize_pipe.F ],
                styles: [ '[_nghost-%COMP%]{display:flex;flex-direction:column;height:100%;padding:24px;box-sizing:border-box;width:400px}[_nghost-%COMP%]   .supportButtonRow[_ngcontent-%COMP%]{display:flex;flex-direction:row;align-content:center}[_nghost-%COMP%]   .supportButtonRow[_ngcontent-%COMP%]   .supportButton[_ngcontent-%COMP%]{width:90px;height:90px;display:flex;flex-direction:column;align-content:center;justify-content:center;border-radius:4px;margin:6px;padding:8px;cursor:pointer;box-shadow:0 0 2px var(--colorNeutralShadowAmbient),0 2px 4px var(--colorNeutralShadowKey)}[_nghost-%COMP%]   .supportButtonRow[_ngcontent-%COMP%]   .supportButton[_ngcontent-%COMP%]:hover{background-color:var(--button-default-hover-fill-color)}[_nghost-%COMP%]   .supportButtonRow[_ngcontent-%COMP%]   .supportButton[_ngcontent-%COMP%]:focus{outline:var(--focus-two-tone-outline-definition, auto 1px);outline-color:var(--focus-two-tone-outline-color, -webkit-focus-ring-color)}[_nghost-%COMP%]   .supportButtonRow[_ngcontent-%COMP%]   .supportButton[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{flex:1;margin:0;align-self:center;text-align:center;font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-semi-bold, 600)}[_nghost-%COMP%]   .supportButtonRow[_ngcontent-%COMP%]   .supportButton[_ngcontent-%COMP%]   pbi-office-icon[_ngcontent-%COMP%]{width:26px;height:26px;flex:1;align-self:center;margin-top:8px}' ],
                changeDetection: 0
            }), StoreRatingDialogComponent;
        }(), localization_module = __webpack_require__(79061), a11y_module = __webpack_require__(20914), dialogs_parts_module = __webpack_require__(96327), dialogs_module = __webpack_require__(76966), pbi_office_icon_module = __webpack_require__(45411), StoreRatingDialogModule = function() {
            function StoreRatingDialogModule() {}
            return StoreRatingDialogModule.\u0275fac = function(t) {
                return new (t || StoreRatingDialogModule);
            }, StoreRatingDialogModule.\u0275mod = core["\u0275\u0275defineNgModule"]({
                type: StoreRatingDialogModule
            }), StoreRatingDialogModule.\u0275inj = core["\u0275\u0275defineInjector"]({
                imports: [ common.CommonModule, localization_module.v, dialogs_parts_module.F, dialogs_module.c.withManifest([ {
                    componentIdentifier: store_rating_dialog_identifier.O,
                    componentType: StoreRatingDialogComponent
                } ]), a11y_module._, pbi_office_icon_module.m ]
            }), StoreRatingDialogModule;
        }();
    }
} ]);