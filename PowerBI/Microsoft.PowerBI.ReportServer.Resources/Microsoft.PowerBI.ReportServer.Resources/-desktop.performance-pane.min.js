"use strict";

(self.webpackChunkdesktop = self.webpackChunkdesktop || []).push([ [ "performance-pane" ], {
    53838: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, {
            PerformancePaneModule: function() {
                return PerformancePaneModule;
            }
        });
        var PerformancePaneMenuItemViewModelGenerator, pbi_pane_module = __webpack_require__(13254), tslib_es6 = __webpack_require__(81337), scoped_effect_subscriber_service = __webpack_require__(31053), performance_analyzer_actions = __webpack_require__(67902), performance_analyzer_service = __webpack_require__(72547), performance_analyzer_utils = __webpack_require__(22433), performance_analyzer_selectors = __webpack_require__(86290), ngrx_effects = __webpack_require__(60756), context_activity_actions = __webpack_require__(91401), events = __webpack_require__(8590), visualContainerUtils = __webpack_require__(60661), telemetry_events = __webpack_require__(10556), copyPasteService = __webpack_require__(48699), Telemetry = __webpack_require__(21617), from = __webpack_require__(82762), of = __webpack_require__(11547), filter = __webpack_require__(59973), map = __webpack_require__(14172), mergeMap = __webpack_require__(42195), tap = __webpack_require__(17653), concatMap = __webpack_require__(24874), switchMap = __webpack_require__(81905), catchError = __webpack_require__(59822), eventAggregationService = __webpack_require__(8898), core = __webpack_require__(50423), context_activity_service = __webpack_require__(22292), conceptual_schema_proxy_service = __webpack_require__(26898), data_sources_service = __webpack_require__(83008), exploration_display_name_service = __webpack_require__(13702), event_bridge_service = __webpack_require__(11494), exploration_navigation_service = __webpack_require__(39503), ngrx_store = __webpack_require__(85732), visual_plugin_service = __webpack_require__(29866), PerformanceAnalyzerEffects = function() {
            function PerformanceAnalyzerEffects(actions$, contextActivityService, conceptualSchemaProxy, dataSources, displayNameService, eventBridge, explorationNavigation, performanceAnalyzerService, store, telemetryService, visualPlugin, eventAggregationService) {
                var _this = this;
                this.actions$ = actions$, this.contextActivityService = contextActivityService, 
                this.conceptualSchemaProxy = conceptualSchemaProxy, this.dataSources = dataSources, 
                this.displayNameService = displayNameService, this.eventBridge = eventBridge, this.explorationNavigation = explorationNavigation, 
                this.performanceAnalyzerService = performanceAnalyzerService, this.store = store, 
                this.telemetryService = telemetryService, this.visualPlugin = visualPlugin, this.eventAggregationService = eventAggregationService, 
                this.contextActivity$ = (0, ngrx_effects.GW)(function() {
                    return _this.contextActivityService.getActivityStream().pipe((0, ngrx_effects.l4)(context_activity_actions.TV, context_activity_actions.Gb, context_activity_actions.xq, context_activity_actions.TH), (0, 
                    filter.h)(function(_a) {
                        var properties = _a.properties;
                        return "Visual Container Lifecycle" === properties.name || "Execute Change Detection" === properties.name || "User Action" === properties.name;
                    }), (0, map.U)(function(_a) {
                        return _a.properties;
                    }), (0, mergeMap.zg)(function(log) {
                        if ((0, performance_analyzer_utils.pK)(log)) {
                            var visualContainer = (0, performance_analyzer_utils.ym)(log.visualContainerName, _this.explorationNavigation);
                            if (visualContainer) {
                                var displayNamePromise = (0, visualContainerUtils.uo)(visualContainer, {
                                    dataSources: _this.dataSources,
                                    displayNameService: _this.displayNameService,
                                    visualPlugin: _this.visualPlugin,
                                    conceptualSchemaProxy: _this.conceptualSchemaProxy
                                });
                                return (0, from.D)(displayNamePromise).pipe((0, map.U)(function(displayName) {
                                    return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, log), {
                                        displayName
                                    });
                                }));
                            }
                        }
                        return (0, of.of)(log);
                    }), (0, tap.b)(function(log) {
                        _this.performanceAnalyzerService.isRecording() && _this.store.dispatch(performance_analyzer_actions.B7({
                            log
                        }));
                    }));
                }, {
                    dispatch: !1
                }), this.copyQueryText$ = (0, ngrx_effects.GW)(function() {
                    return _this.actions$.pipe((0, ngrx_effects.l4)(performance_analyzer_actions.fc), (0, 
                    tap.b)(function(_a) {
                        var queryTextActivities = (0, performance_analyzer_utils.N2)(_a.log, function(activity) {
                            return !(!activity.metrics || !activity.metrics.QueryText);
                        }, function(childActivity, _parentActivity) {
                            return childActivity;
                        });
                        if (queryTextActivities.length > 0) {
                            _this.copyPasteService || (_this.copyPasteService = (0, copyPasteService.Ue)());
                            var queryString = _.reduce(queryTextActivities, function(formatted, activity) {
                                var queryName;
                                switch (activity.name) {
                                  case "Execute DAX Query":
                                    queryName = "DAX Query";
                                    break;

                                  case "Execute Direct Query":
                                    queryName = "Direct Query";
                                    break;

                                  default:
                                    queryName = "Query";
                                }
                                return "".concat(formatted).concat(formatted ? "\n\n" : "", "// ").concat(queryName, "\n").concat(activity.metrics.QueryText, "\n");
                            }, "");
                            _this.copyPasteService.copyText(queryString);
                        }
                        _this.telemetryService.logEvent(telemetry_events.MMo);
                    }), (0, map.U)(function() {
                        return performance_analyzer_actions.zq();
                    }));
                }), this.inspectDaxQuery$ = (0, ngrx_effects.GW)(function() {
                    return _this.actions$.pipe((0, ngrx_effects.l4)(performance_analyzer_actions.PP), (0, 
                    tap.b)(function(_a) {
                        var log = _a.log, queryTextActivities = (0, performance_analyzer_utils.N2)(log, function(activity) {
                            return !(!activity.metrics || !activity.metrics.QueryText || "Execute DAX Query" !== activity.name);
                        }, function(childActivity, _parentActivity) {
                            return childActivity;
                        });
                        _this.isValidQuery(log, queryTextActivities) && (_this.eventAggregationService.publish("InspectDaxQuery", {
                            content: queryTextActivities[0].metrics.QueryText
                        }), _this.telemetryService.logEvent(telemetry_events.Nsy));
                    }));
                }), this.exportLogs$ = (0, ngrx_effects.GW)(function() {
                    return _this.actions$.pipe((0, ngrx_effects.l4)(performance_analyzer_actions.NP), (0, 
                    concatMap.b)(function(action) {
                        return (0, of.of)(action).pipe((0, ngrx_effects.IC)(function() {
                            return _this.store.select(performance_analyzer_selectors.LB);
                        }), (0, map.U)(function(_a) {
                            return _a[1];
                        }));
                    }), (0, switchMap.w)(function(performanceLogs) {
                        var telemetryEvent = _this.telemetryService.startEvent(telemetry_events.Im5, {
                            numLogs: performanceLogs.length
                        });
                        return (0, of.of)(performanceLogs).pipe((0, map.U)(function(logs) {
                            for (var performanceEvents = [], _loop_1 = function(performanceLog) {
                                if ((0, performance_analyzer_utils.pK)(performanceLog)) {
                                    var visualContainerLog = performanceLog, visualContainer = (0, performance_analyzer_utils.ym)(visualContainerLog.visualContainerName, _this.explorationNavigation), config = (0, 
                                    visualContainerUtils.PQ)(visualContainer), rootMetrics_1 = {
                                        status: visualContainerLog.status,
                                        visualTitle: visualContainerLog.displayName,
                                        visualId: visualContainerLog.visualContainerName,
                                        visualType: config && config.visualType,
                                        initialLoad: visualContainerLog.initialLoad
                                    };
                                    performanceEvents = performanceEvents.concat((0, performance_analyzer_utils.N2)(visualContainerLog, function(_activity) {
                                        return !0;
                                    }, function(childActivity, parentActivity) {
                                        return _this.generateLifecycleEventJson(childActivity, parentActivity, rootMetrics_1);
                                    }));
                                } else if ((0, performance_analyzer_utils.n2)(performanceLog)) {
                                    var utilityQueryProperties_1 = performanceLog;
                                    performanceEvents = performanceEvents.concat((0, performance_analyzer_utils.N2)(utilityQueryProperties_1, function(_activity) {
                                        return !0;
                                    }, function(childActivity, parentActivity) {
                                        return _this.generateLifecycleEventJson(childActivity, parentActivity, utilityQueryProperties_1.metrics);
                                    }));
                                } else performanceEvents.push(_this.generateUserActionEventJson(performanceLog));
                            }, _i = 0, logs_1 = logs; _i < logs_1.length; _i++) _loop_1(logs_1[_i]);
                            return {
                                version: "1.1.0",
                                events: performanceEvents,
                                sessionId: _this.telemetryService.sessionId
                            };
                        }), (0, tap.b)(function(exportData) {
                            telemetryEvent.resolve(), _this.eventBridge.publishToChannel(events.TrJ, {
                                isComplete: !0,
                                isError: !1,
                                format: "Json",
                                fileName: "PowerBIPerformanceData.json",
                                data: JSON.stringify(exportData)
                            });
                        }), (0, map.U)(function() {
                            return performance_analyzer_actions.FA();
                        }), (0, catchError.K)(function(err, caught) {
                            return telemetryEvent.reject(err.message), caught;
                        }));
                    }));
                });
            }
            return PerformanceAnalyzerEffects.prototype.isValidQuery = function(log, queryTextActivities) {
                return !_.isEmpty(queryTextActivities) && !_.isEmpty(queryTextActivities[0].metrics.QueryText);
            }, PerformanceAnalyzerEffects.prototype.generateLifecycleEventJson = function(childActivity, parentActivity, rootMetrics) {
                return {
                    name: childActivity.name,
                    component: childActivity.component,
                    start: new Date(childActivity.start).toISOString(),
                    end: childActivity.end ? new Date(childActivity.end).toISOString() : void 0,
                    id: childActivity.id,
                    parentId: parentActivity ? parentActivity.id : void 0,
                    metrics: parentActivity ? childActivity.metrics : rootMetrics
                };
            }, PerformanceAnalyzerEffects.prototype.generateUserActionEventJson = function(userAction) {
                return {
                    name: "User Action",
                    component: performance_analyzer_service.I,
                    start: new Date(userAction.time).toISOString(),
                    id: userAction.id,
                    metrics: {
                        sourceLabel: userAction.sourceLabel
                    }
                };
            }, PerformanceAnalyzerEffects.\u0275fac = function(t) {
                return new (t || PerformanceAnalyzerEffects)(core["\u0275\u0275inject"](ngrx_effects.eX), core["\u0275\u0275inject"](context_activity_service.r), core["\u0275\u0275inject"](conceptual_schema_proxy_service.i), core["\u0275\u0275inject"](data_sources_service.D), core["\u0275\u0275inject"](exploration_display_name_service.O), core["\u0275\u0275inject"](event_bridge_service.J), core["\u0275\u0275inject"](exploration_navigation_service.z), core["\u0275\u0275inject"](performance_analyzer_service.a), core["\u0275\u0275inject"](ngrx_store.yh), core["\u0275\u0275inject"](Telemetry.y0), core["\u0275\u0275inject"](visual_plugin_service.D), core["\u0275\u0275inject"](eventAggregationService.x));
            }, PerformanceAnalyzerEffects.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: PerformanceAnalyzerEffects,
                factory: PerformanceAnalyzerEffects.\u0275fac
            }), PerformanceAnalyzerEffects;
        }(), BehaviorSubject = __webpack_require__(35510), combineLatest = __webpack_require__(59017), scan = __webpack_require__(18353), distinctUntilChanged = __webpack_require__(77526), shareReplay = __webpack_require__(57243), report_refresh_service = __webpack_require__(44294), panes_visibility_service = __webpack_require__(21024), localization_service = __webpack_require__(65181), pause_queries_service = __webpack_require__(39631), feature_switch_service = __webpack_require__(9380), common = __webpack_require__(77476), localize_directive = __webpack_require__(59968), localize_tooltip_directive = __webpack_require__(50057), legacy_button = __webpack_require__(70410), icon = __webpack_require__(44408), pbi_auto_focus_directive = __webpack_require__(54932), keyboard_shortcuts_directive = __webpack_require__(35756), pbi_pane_component = __webpack_require__(21023), pbi_pane_divider_component = __webpack_require__(47808), pbi_pane_section_component = __webpack_require__(24548), Subject = __webpack_require__(30794), merge = __webpack_require__(63057), takeUntil = __webpack_require__(83317), token = __webpack_require__(68082), selectionUtils = __webpack_require__(21728), debug = __webpack_require__(62458), pbi_menu_contracts = __webpack_require__(64560);
        !function(PerformancePaneMenuItemViewModelGenerator) {
            PerformancePaneMenuItemViewModelGenerator.createItemSeparator = function() {
                return {
                    type: pbi_menu_contracts.iB.Divider
                };
            }, PerformancePaneMenuItemViewModelGenerator.createPerformancePaneMenuItem = function(localizationName, options, localizationService, checked) {
                return void 0 === checked && (checked = !1), {
                    text: localizationService.getOptional(localizationName) || localizationName,
                    id: options.action,
                    type: pbi_menu_contracts.iB.Button,
                    checked,
                    checkable: !0
                };
            }, PerformancePaneMenuItemViewModelGenerator.createPerformancePaneSubMenuItem = function(localizationName, localizationService, items) {
                return {
                    text: localizationService.getOptional(localizationName) || localizationName,
                    type: pbi_menu_contracts.iB.SubMenu,
                    menu: {
                        items
                    }
                };
            };
        }(PerformancePaneMenuItemViewModelGenerator || (PerformancePaneMenuItemViewModelGenerator = {}));
        var selection_service = __webpack_require__(72262), pbi_menu_service = __webpack_require__(5467), scrolling = __webpack_require__(21661), icon_component = __webpack_require__(92015), spinner_component = __webpack_require__(73425), ActivityDurationAriaLabelPipe = function() {
            function ActivityDurationAriaLabelPipe(localizationService) {
                this.localizationService = localizationService;
            }
            return ActivityDurationAriaLabelPipe.prototype.transform = function(activityName, duration) {
                return "".concat(this.localizationService.get("Name"), " ").concat(this.localizationService.get(activityName), ". ").concat(this.localizationService.get("Duration"), " ").concat(duration, ".");
            }, ActivityDurationAriaLabelPipe.\u0275fac = function(t) {
                return new (t || ActivityDurationAriaLabelPipe)(core["\u0275\u0275directiveInject"](localization_service.o, 16));
            }, ActivityDurationAriaLabelPipe.\u0275pipe = core["\u0275\u0275definePipe"]({
                name: "activityDurationAriaLabel",
                type: ActivityDurationAriaLabelPipe,
                pure: !0
            }), ActivityDurationAriaLabelPipe;
        }();
        function PerformanceLifecycleActivityComponent_spinner_6_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "spinner", 7), 2 & rf && core["\u0275\u0275property"]("delay", 0);
        }
        function PerformanceLifecycleActivityComponent_span_7_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "span"), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r1 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate"](ctx_r1.viewModel.totalTime.formattedTime);
            }
        }
        function PerformanceLifecycleActivityComponent_ng_container_8_tr_1_spinner_5_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "spinner", 7), 2 & rf && core["\u0275\u0275property"]("delay", 0);
        }
        function PerformanceLifecycleActivityComponent_ng_container_8_tr_1_span_6_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "span"), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r10 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate"](ctx_r10.viewModel.daxQueryTime.formattedTime);
            }
        }
        function PerformanceLifecycleActivityComponent_ng_container_8_tr_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "tr", 15), core["\u0275\u0275pipe"](1, "activityDurationAriaLabel"), 
            core["\u0275\u0275elementStart"](2, "td", 10), core["\u0275\u0275element"](3, "span", 16), 
            core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](4, "td", 4), 
            core["\u0275\u0275template"](5, PerformanceLifecycleActivityComponent_ng_container_8_tr_1_spinner_5_Template, 1, 1, "spinner", 5), 
            core["\u0275\u0275template"](6, PerformanceLifecycleActivityComponent_ng_container_8_tr_1_span_6_Template, 2, 1, "span", 6), 
            core["\u0275\u0275elementEnd"]()()), 2 & rf) {
                var ctx_r3 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275attribute"]("aria-label", core["\u0275\u0275pipeBind2"](1, 3, "PerformanceAnalyzerPane_Dax_Query", null == ctx_r3.viewModel.daxQueryTime ? null : ctx_r3.viewModel.daxQueryTime.formattedTime)), 
                core["\u0275\u0275advance"](5), core["\u0275\u0275property"]("ngIf", !(null != ctx_r3.viewModel.daxQueryTime && ctx_r3.viewModel.daxQueryTime.formattedTime)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", null == ctx_r3.viewModel.daxQueryTime ? null : ctx_r3.viewModel.daxQueryTime.formattedTime);
            }
        }
        function PerformanceLifecycleActivityComponent_ng_container_8_tr_2_spinner_5_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "spinner", 7), 2 & rf && core["\u0275\u0275property"]("delay", 0);
        }
        function PerformanceLifecycleActivityComponent_ng_container_8_tr_2_span_6_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "span"), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r12 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate"](ctx_r12.viewModel.directQueryTime.formattedTime);
            }
        }
        function PerformanceLifecycleActivityComponent_ng_container_8_tr_2_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "tr", 15), core["\u0275\u0275pipe"](1, "activityDurationAriaLabel"), 
            core["\u0275\u0275elementStart"](2, "td", 10), core["\u0275\u0275element"](3, "span", 17), 
            core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](4, "td", 4), 
            core["\u0275\u0275template"](5, PerformanceLifecycleActivityComponent_ng_container_8_tr_2_spinner_5_Template, 1, 1, "spinner", 5), 
            core["\u0275\u0275template"](6, PerformanceLifecycleActivityComponent_ng_container_8_tr_2_span_6_Template, 2, 1, "span", 6), 
            core["\u0275\u0275elementEnd"]()()), 2 & rf) {
                var ctx_r4 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275attribute"]("aria-label", core["\u0275\u0275pipeBind2"](1, 3, "PerformanceAnalyzerPane_Direct_Query", null == ctx_r4.viewModel.directQueryTime ? null : ctx_r4.viewModel.directQueryTime.formattedTime)), 
                core["\u0275\u0275advance"](5), core["\u0275\u0275property"]("ngIf", !(null != ctx_r4.viewModel.directQueryTime && ctx_r4.viewModel.directQueryTime.formattedTime)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", null == ctx_r4.viewModel.directQueryTime ? null : ctx_r4.viewModel.directQueryTime.formattedTime);
            }
        }
        function PerformanceLifecycleActivityComponent_ng_container_8_tr_3_spinner_5_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "spinner", 7), 2 & rf && core["\u0275\u0275property"]("delay", 0);
        }
        function PerformanceLifecycleActivityComponent_ng_container_8_tr_3_span_6_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "span"), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r14 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate"](ctx_r14.viewModel.resolveParametersTime.formattedTime);
            }
        }
        function PerformanceLifecycleActivityComponent_ng_container_8_tr_3_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "tr", 15), core["\u0275\u0275pipe"](1, "activityDurationAriaLabel"), 
            core["\u0275\u0275elementStart"](2, "td", 10), core["\u0275\u0275element"](3, "span", 18), 
            core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](4, "td", 4), 
            core["\u0275\u0275template"](5, PerformanceLifecycleActivityComponent_ng_container_8_tr_3_spinner_5_Template, 1, 1, "spinner", 5), 
            core["\u0275\u0275template"](6, PerformanceLifecycleActivityComponent_ng_container_8_tr_3_span_6_Template, 2, 1, "span", 6), 
            core["\u0275\u0275elementEnd"]()()), 2 & rf) {
                var ctx_r5 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275attribute"]("aria-label", core["\u0275\u0275pipeBind2"](1, 3, "PerformanceAnalyzerPane_Resolve_Parameters", null == ctx_r5.viewModel.resolveParametersTime ? null : ctx_r5.viewModel.resolveParametersTime.formattedTime)), 
                core["\u0275\u0275advance"](5), core["\u0275\u0275property"]("ngIf", !(null != ctx_r5.viewModel.resolveParametersTime && ctx_r5.viewModel.resolveParametersTime.formattedTime)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", null == ctx_r5.viewModel.resolveParametersTime ? null : ctx_r5.viewModel.resolveParametersTime.formattedTime);
            }
        }
        function PerformanceLifecycleActivityComponent_ng_container_8_tr_4_spinner_5_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "spinner", 7), 2 & rf && core["\u0275\u0275property"]("delay", 0);
        }
        function PerformanceLifecycleActivityComponent_ng_container_8_tr_4_span_6_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "span"), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r16 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate"](ctx_r16.viewModel.visualRenderTime.formattedTime);
            }
        }
        function PerformanceLifecycleActivityComponent_ng_container_8_tr_4_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "tr", 15), core["\u0275\u0275pipe"](1, "activityDurationAriaLabel"), 
            core["\u0275\u0275elementStart"](2, "td", 10), core["\u0275\u0275element"](3, "span", 19), 
            core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](4, "td", 4), 
            core["\u0275\u0275template"](5, PerformanceLifecycleActivityComponent_ng_container_8_tr_4_spinner_5_Template, 1, 1, "spinner", 5), 
            core["\u0275\u0275template"](6, PerformanceLifecycleActivityComponent_ng_container_8_tr_4_span_6_Template, 2, 1, "span", 6), 
            core["\u0275\u0275elementEnd"]()()), 2 & rf) {
                var ctx_r6 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275attribute"]("aria-label", core["\u0275\u0275pipeBind2"](1, 3, "PerformanceAnalyzerPane_Direct_Query", null == ctx_r6.viewModel.visualRenderTime ? null : ctx_r6.viewModel.visualRenderTime.formattedTime)), 
                core["\u0275\u0275advance"](5), core["\u0275\u0275property"]("ngIf", !(null != ctx_r6.viewModel.visualRenderTime && ctx_r6.viewModel.visualRenderTime.formattedTime)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", null == ctx_r6.viewModel.visualRenderTime ? null : ctx_r6.viewModel.visualRenderTime.formattedTime);
            }
        }
        function PerformanceLifecycleActivityComponent_ng_container_8_tr_5_spinner_5_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "spinner", 7), 2 & rf && core["\u0275\u0275property"]("delay", 0);
        }
        function PerformanceLifecycleActivityComponent_ng_container_8_tr_5_span_6_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "span"), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r18 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate"](ctx_r18.viewModel.otherTime.formattedTime);
            }
        }
        function PerformanceLifecycleActivityComponent_ng_container_8_tr_5_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "tr", 15), core["\u0275\u0275pipe"](1, "activityDurationAriaLabel"), 
            core["\u0275\u0275elementStart"](2, "td", 10), core["\u0275\u0275element"](3, "span", 20), 
            core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](4, "td", 4), 
            core["\u0275\u0275template"](5, PerformanceLifecycleActivityComponent_ng_container_8_tr_5_spinner_5_Template, 1, 1, "spinner", 5), 
            core["\u0275\u0275template"](6, PerformanceLifecycleActivityComponent_ng_container_8_tr_5_span_6_Template, 2, 1, "span", 6), 
            core["\u0275\u0275elementEnd"]()()), 2 & rf) {
                var ctx_r7 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275attribute"]("aria-label", core["\u0275\u0275pipeBind2"](1, 3, "GroupingDefinition_OtherGroupName", null == ctx_r7.viewModel.otherTime ? null : ctx_r7.viewModel.otherTime.formattedTime)), 
                core["\u0275\u0275advance"](5), core["\u0275\u0275property"]("ngIf", !(null != ctx_r7.viewModel.otherTime && ctx_r7.viewModel.otherTime.formattedTime)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", null == ctx_r7.viewModel.otherTime ? null : ctx_r7.viewModel.otherTime.formattedTime);
            }
        }
        function PerformanceLifecycleActivityComponent_ng_container_8_tr_12_Template(rf, ctx) {
            if (1 & rf) {
                var _r20 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "tr", 9), core["\u0275\u0275listener"]("keydown.enter", function() {
                    core["\u0275\u0275restoreView"](_r20);
                    var ctx_r19 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r19.onRunInDaxView.emit(ctx_r19.viewModel.performanceLog));
                }), core["\u0275\u0275elementStart"](1, "td", 10)(2, "button", 21), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r20);
                    var ctx_r21 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r21.onRunInDaxView.emit(ctx_r21.viewModel.performanceLog));
                }), core["\u0275\u0275element"](3, "icon", 22)(4, "span", 23), core["\u0275\u0275elementEnd"]()()();
            }
            if (2 & rf) {
                var ctx_r8 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("disabled", ctx_r8.viewModel.performanceLog.status !== ctx_r8.ResolvedActivityStatus || ctx_r8.viewModel.daxQueryTime && void 0 === ctx_r8.viewModel.daxQueryTime.numericTime);
            }
        }
        function PerformanceLifecycleActivityComponent_ng_container_8_Template(rf, ctx) {
            if (1 & rf) {
                var _r23 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, PerformanceLifecycleActivityComponent_ng_container_8_tr_1_Template, 7, 6, "tr", 8), 
                core["\u0275\u0275template"](2, PerformanceLifecycleActivityComponent_ng_container_8_tr_2_Template, 7, 6, "tr", 8), 
                core["\u0275\u0275template"](3, PerformanceLifecycleActivityComponent_ng_container_8_tr_3_Template, 7, 6, "tr", 8), 
                core["\u0275\u0275template"](4, PerformanceLifecycleActivityComponent_ng_container_8_tr_4_Template, 7, 6, "tr", 8), 
                core["\u0275\u0275template"](5, PerformanceLifecycleActivityComponent_ng_container_8_tr_5_Template, 7, 6, "tr", 8), 
                core["\u0275\u0275elementStart"](6, "tr", 9), core["\u0275\u0275listener"]("keydown.enter", function() {
                    core["\u0275\u0275restoreView"](_r23);
                    var ctx_r22 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r22.onCopy.emit(ctx_r22.viewModel.performanceLog));
                }), core["\u0275\u0275elementStart"](7, "td", 10)(8, "button", 11), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r23);
                    var ctx_r24 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r24.onCopy.emit(ctx_r24.viewModel.performanceLog));
                }), core["\u0275\u0275element"](9, "mat-icon", 12)(10, "span", 13), core["\u0275\u0275elementEnd"]()(), 
                core["\u0275\u0275element"](11, "td", 4), core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](12, PerformanceLifecycleActivityComponent_ng_container_8_tr_12_Template, 5, 1, "tr", 14), 
                core["\u0275\u0275elementContainerEnd"]();
            }
            if (2 & rf) {
                var ctx_r2 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", void 0 !== (null == ctx_r2.viewModel.daxQueryTime ? null : ctx_r2.viewModel.daxQueryTime.numericTime) && "-" !== (null == ctx_r2.viewModel.daxQueryTime ? null : ctx_r2.viewModel.daxQueryTime.formattedTime)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", void 0 !== (null == ctx_r2.viewModel.directQueryTime ? null : ctx_r2.viewModel.directQueryTime.numericTime) && "-" !== (null == ctx_r2.viewModel.directQueryTime ? null : ctx_r2.viewModel.directQueryTime.formattedTime)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", void 0 !== (null == ctx_r2.viewModel.resolveParametersTime ? null : ctx_r2.viewModel.resolveParametersTime.numericTime) && "-" !== (null == ctx_r2.viewModel.resolveParametersTime ? null : ctx_r2.viewModel.resolveParametersTime.formattedTime)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx_r2.viewModel.visualRenderTime && void 0 !== (null == ctx_r2.viewModel.visualRenderTime ? null : ctx_r2.viewModel.visualRenderTime.numericTime) && "-" !== (null == ctx_r2.viewModel.visualRenderTime ? null : ctx_r2.viewModel.visualRenderTime.formattedTime)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", void 0 !== (null == ctx_r2.viewModel.otherTime ? null : ctx_r2.viewModel.otherTime.numericTime) && "-" !== (null == ctx_r2.viewModel.otherTime ? null : ctx_r2.viewModel.otherTime.formattedTime)), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("disabled", ctx_r2.viewModel.performanceLog.status !== ctx_r2.ResolvedActivityStatus || ctx_r2.viewModel.daxQueryTime && void 0 === ctx_r2.viewModel.daxQueryTime.numericTime || ctx_r2.hasBeenCopied), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("fontIcon", ctx_r2.hasBeenCopied ? "pbi-glyph-checkmark" : "pbi-glyph-copy"), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("localize", ctx_r2.hasBeenCopied ? "PerformanceAnalyzerPane_Copied" : "PerformanceAnalyzerPane_Copy_Details"), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", ctx_r2.showRunInDaxView);
            }
        }
        var _c0 = function(a0, a1) {
            return {
                itemExpanded: a0,
                itemCollapsed: a1,
                visualLifecycle: !0
            };
        }, PerformanceLifecycleActivityComponent = function() {
            function PerformanceLifecycleActivityComponent() {
                this.ResolvedActivityStatus = 1, this.showRunInDaxView = !1, this.onClick = new core.EventEmitter, 
                this.onCopy = new core.EventEmitter, this.onRunInDaxView = new core.EventEmitter;
            }
            return PerformanceLifecycleActivityComponent.\u0275fac = function(t) {
                return new (t || PerformanceLifecycleActivityComponent);
            }, PerformanceLifecycleActivityComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: PerformanceLifecycleActivityComponent,
                selectors: [ [ "performance-lifecycle-activity" ] ],
                inputs: {
                    viewModel: "viewModel",
                    isExpanded: "isExpanded",
                    hasBeenCopied: "hasBeenCopied",
                    showRunInDaxView: "showRunInDaxView"
                },
                outputs: {
                    onClick: "onClick",
                    onCopy: "onCopy",
                    onRunInDaxView: "onRunInDaxView"
                },
                decls: 9,
                vars: 11,
                consts: [ [ "tabindex", "0", "role", "treeitem button", 3, "ngClass", "keydown.arrowright", "keydown.arrowleft", "keydown.enter", "keydown.space", "click" ], [ "tabindex", "0", 1, "nameCol" ], [ "inline", "true", 1, "glyph-mini", "performanceTableIcon", 3, "fontIcon" ], [ 1, "parentName" ], [ 1, "durationCol" ], [ "size", "small", 3, "delay", 4, "ngIf" ], [ 4, "ngIf" ], [ "size", "small", 3, "delay" ], [ "class", "itemExpanded", "role", "treeitem", "tabindex", "0", 4, "ngIf" ], [ "tabindex", "0", "role", "treeitem button", 1, "itemExpanded", 3, "keydown.enter" ], [ 1, "nameCol" ], [ "mat-flat-button", "", 1, "copyBtn", 3, "disabled", "click" ], [ 1, "glyph-small", 3, "fontIcon" ], [ 1, "copyName", 3, "localize" ], [ "class", "itemExpanded", "tabindex", "0", "role", "treeitem button", 3, "keydown.enter", 4, "ngIf" ], [ "role", "treeitem", "tabindex", "0", 1, "itemExpanded" ], [ "localize", "PerformanceAnalyzerPane_Dax_Query", "localizeTooltip", "PerformanceAnalyzerPane_Dax_Query_Description", 1, "childName" ], [ "localize", "PerformanceAnalyzerPane_Direct_Query", "localizeTooltip", "PerformanceAnalyzerPane_Direct_Query_Description", 1, "childName" ], [ "localize", "PerformanceAnalyzerPane_Resolve_Parameters", "localizeTooltip", "PerformanceAnalyzerPane_Resolve_Parameters_Description", 1, "childName" ], [ "localize", "PerformanceAnalyzerPane_Visual_Display", "localizeTooltip", "PerformanceAnalyzerPane_Visual_Display_Description", 1, "childName" ], [ "localize", "GroupingDefinition_OtherGroupName", "localizeTooltip", "PerformanceAnalyzerPane_Other_Desc", 1, "childName" ], [ "mat-flat-button", "", 1, "runInDaxViewBtn", 3, "disabled", "click" ], [ "src", "view-daxEditor.svg", "size", "20", 1, "viewDaxEditorIcon" ], [ "localize", "Dax_Query_View_RunIn", 1, "runInDaxView" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementStart"](0, "tr", 0), core["\u0275\u0275listener"]("keydown.arrowright", function($event) {
                        return ctx.onClick.emit({
                            event: $event,
                            log: ctx.viewModel.performanceLog,
                            expandState: !0
                        });
                    })("keydown.arrowleft", function($event) {
                        return ctx.onClick.emit({
                            event: $event,
                            log: ctx.viewModel.performanceLog,
                            expandState: !1
                        });
                    })("keydown.enter", function($event) {
                        return ctx.onClick.emit({
                            event: $event,
                            log: ctx.viewModel.performanceLog
                        });
                    })("keydown.space", function($event) {
                        return ctx.onClick.emit({
                            event: $event,
                            log: ctx.viewModel.performanceLog
                        });
                    })("click", function($event) {
                        return ctx.onClick.emit({
                            event: $event,
                            log: ctx.viewModel.performanceLog
                        });
                    }), core["\u0275\u0275elementStart"](1, "td", 1), core["\u0275\u0275element"](2, "mat-icon", 2), 
                    core["\u0275\u0275elementStart"](3, "span", 3), core["\u0275\u0275text"](4), core["\u0275\u0275elementEnd"]()(), 
                    core["\u0275\u0275elementStart"](5, "td", 4), core["\u0275\u0275template"](6, PerformanceLifecycleActivityComponent_spinner_6_Template, 1, 1, "spinner", 5), 
                    core["\u0275\u0275template"](7, PerformanceLifecycleActivityComponent_span_7_Template, 2, 1, "span", 6), 
                    core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275template"](8, PerformanceLifecycleActivityComponent_ng_container_8_Template, 13, 9, "ng-container", 6)), 
                    2 & rf && (core["\u0275\u0275property"]("ngClass", core["\u0275\u0275pureFunction2"](8, _c0, ctx.isExpanded, !ctx.isExpanded)), 
                    core["\u0275\u0275attribute"]("aria-expanded", ctx.isExpanded)("aria-label", ctx.viewModel.ariaLabel), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("fontIcon", ctx.isExpanded ? "pbi-glyph-collapse-content-single" : "pbi-glyph-explore-content-single"), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate"](ctx.viewModel.performanceLog.displayName), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", !(null != ctx.viewModel.totalTime && ctx.viewModel.totalTime.formattedTime)), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", null == ctx.viewModel.totalTime ? null : ctx.viewModel.totalTime.formattedTime), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx.isExpanded));
                },
                dependencies: [ common.NgClass, common.NgIf, icon_component.o, localize_directive.X, localize_tooltip_directive.r, legacy_button.eB, icon.Hw, spinner_component.O, ActivityDurationAriaLabelPipe ],
                styles: [ '.textOverflowCommon[_ngcontent-%COMP%]{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}tr[_ngcontent-%COMP%]{display:flex;flex-wrap:nowrap;justify-content:space-between}.itemExpanded[_ngcontent-%COMP%]{background-color:var(--neutral-primary-color, #333333)}.nameCol[_ngcontent-%COMP%]{height:16px;display:flex;align-items:center;min-width:45px;flex-grow:1;padding:2px}.nameCol[_ngcontent-%COMP%]   .actionName[_ngcontent-%COMP%], .nameCol[_ngcontent-%COMP%]   .parentName[_ngcontent-%COMP%]{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;min-width:20px;margin-left:4px}.nameCol[_ngcontent-%COMP%]   .actionName[_ngcontent-%COMP%]   i[_ngcontent-%COMP%], .nameCol[_ngcontent-%COMP%]   .parentName[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{padding-left:0}.nameCol[_ngcontent-%COMP%]   .interactName[_ngcontent-%COMP%]{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;min-width:20px;margin-left:24px}.nameCol[_ngcontent-%COMP%]   .interactName[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{padding-left:0}.nameCol[_ngcontent-%COMP%]   .childName[_ngcontent-%COMP%]{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;min-width:20px;margin-left:24px}.nameCol[_ngcontent-%COMP%]   .copyName[_ngcontent-%COMP%]{height:20px;text-overflow:ellipsis;overflow:hidden;white-space:nowrap}.nameCol[_ngcontent-%COMP%]   .performanceTableIcon[_ngcontent-%COMP%]{font-family:PowrMDL2;display:flex;align-items:center;justify-content:center;height:20px;width:20px;min-width:20px}.visualLifecycle[_ngcontent-%COMP%]{cursor:pointer}.visualLifecycle[_ngcontent-%COMP%]:hover{background-color:var(--neutral-primary-color-alt3, #515151)}.durationCol[_ngcontent-%COMP%]{height:16px;min-width:94px;margin-right:4px;text-align:right;padding:2px}.line[_ngcontent-%COMP%]{height:0;border-bottom:1px solid var(--neutral-secondary-alt-color, #777777);flex-grow:1;margin-left:4px;margin-right:2px}.copyBtn[_ngcontent-%COMP%], .runInDaxViewBtn[_ngcontent-%COMP%]{color:var(--theme-primary-color, #F2C811);background-color:transparent;margin-left:22px;font-size:12px;min-width:20px}html[data-focus-source="key"][_nghost-%COMP%]   [_ngcontent-%COMP%]:focus, html[data-focus-source="key"]   [_nghost-%COMP%]   [_ngcontent-%COMP%]:focus{outline:var(--focus-two-tone-outline-definition, auto 1px);outline-color:var(--focus-two-tone-outline-color, -webkit-focus-ring-color);outline-offset:-1px}[_ngcontent-%COMP%]:focus{outline:none}[_nghost-%COMP%]  .mat-flat-button .mat-button-wrapper{height:20px;display:flex;align-items:center}[_nghost-%COMP%]  .mat-flat-button mat-icon{display:flex;align-items:center;justify-content:center}[_nghost-%COMP%]  mat-icon{font-family:PowrMDL2;font-size:12px;height:20px;width:20px}.newPaneColors[_nghost-%COMP%], .newPaneColors   [_nghost-%COMP%]{--item-background-color: var(--gray-50, #D2D0CE);--link-color: var(--dark-blue, #2B579A);--item-background-hover-color: var(--gray-30, #EDEBE9);--border-color: var(--gray-40, #E1DFDD)}[data-legacy-theme=false]   .newPaneColors[_nghost-%COMP%], .newPaneColors   [_nghost-%COMP%]{--item-background-color: var(--colorNeutralBackground2);--link-color: var(--colorBrandForegroundLink);--item-background-hover-color: var(--colorNeutralBackground2Hover);--border-color: var(--colorNeutralStroke1)}.newPaneColors[_nghost-%COMP%]   .itemExpanded[_ngcontent-%COMP%], .newPaneColors   [_nghost-%COMP%]   .itemExpanded[_ngcontent-%COMP%]{background-color:var(--item-background-color)}.newPaneColors[_nghost-%COMP%]   .visualLifecycle[_ngcontent-%COMP%]:hover, .newPaneColors   [_nghost-%COMP%]   .visualLifecycle[_ngcontent-%COMP%]:hover{background-color:var(--item-background-hover-color)}.newPaneColors[_nghost-%COMP%]   .line[_ngcontent-%COMP%], .newPaneColors   [_nghost-%COMP%]   .line[_ngcontent-%COMP%]{border-color:var(--border-color)}.newPaneColors[_nghost-%COMP%]   .copyBtn[_ngcontent-%COMP%], .newPaneColors   [_nghost-%COMP%]   .copyBtn[_ngcontent-%COMP%], .newPaneColors[_nghost-%COMP%]   .runInDaxViewBtn[_ngcontent-%COMP%], .newPaneColors   [_nghost-%COMP%]   .runInDaxViewBtn[_ngcontent-%COMP%]{background-color:transparent;color:var(--link-color)}.newPaneColors[_nghost-%COMP%]   .copyBtn[_ngcontent-%COMP%]:disabled, .newPaneColors   [_nghost-%COMP%]   .copyBtn[_ngcontent-%COMP%]:disabled, .newPaneColors[_nghost-%COMP%]   .runInDaxViewBtn[_ngcontent-%COMP%]:disabled, .newPaneColors   [_nghost-%COMP%]   .runInDaxViewBtn[_ngcontent-%COMP%]:disabled{background-color:transparent;color:#767676}' ],
                changeDetection: 0
            }), PerformanceLifecycleActivityComponent;
        }();
        function UserActionActivityComponent_i_5_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "i"), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate1"](" (", ctx_r0.viewModel.startTime.formattedTime, ")");
            }
        }
        var UserActionActivityComponent = function() {
            function UserActionActivityComponent() {
                this.startedMonitoringLabel = "UserAction_StartedMonitoring";
            }
            return UserActionActivityComponent.\u0275fac = function(t) {
                return new (t || UserActionActivityComponent);
            }, UserActionActivityComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: UserActionActivityComponent,
                selectors: [ [ "user-action-activity" ] ],
                inputs: {
                    viewModel: "viewModel"
                },
                decls: 9,
                vars: 5,
                consts: [ [ "role", "treeitem", "tabindex", "0" ], [ 1, "nameCol" ], [ 1, "glyph-mini", "performanceTableIcon", 3, "fontIcon" ], [ 1, "actionName", 3, "localizeTooltip" ], [ 3, "localize" ], [ 4, "ngIf" ], [ 1, "line" ], [ 1, "durationCol" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementStart"](0, "tr", 0)(1, "td", 1), core["\u0275\u0275element"](2, "mat-icon", 2), 
                    core["\u0275\u0275elementStart"](3, "span", 3), core["\u0275\u0275element"](4, "i", 4), 
                    core["\u0275\u0275template"](5, UserActionActivityComponent_i_5_Template, 2, 1, "i", 5), 
                    core["\u0275\u0275elementEnd"](), core["\u0275\u0275element"](6, "span", 6), core["\u0275\u0275elementEnd"](), 
                    core["\u0275\u0275elementStart"](7, "td", 7), core["\u0275\u0275text"](8, "-"), 
                    core["\u0275\u0275elementEnd"]()()), 2 & rf && (core["\u0275\u0275attribute"]("aria-label", ctx.viewModel.ariaLabel), 
                    core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("fontIcon", ctx.viewModel.icon), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("localizeTooltip", ctx.viewModel.performanceLog.sourceLabel === ctx.startedMonitoringLabel ? ctx.viewModel.performanceLog.sourceLabel : ctx.viewModel.performanceLog.sourceLabel + "_Description"), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("localize", ctx.viewModel.performanceLog.sourceLabel), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", (null == ctx.viewModel.startTime ? null : ctx.viewModel.startTime.formattedTime) && ctx.viewModel.performanceLog.sourceLabel === ctx.startedMonitoringLabel));
                },
                dependencies: [ common.NgIf, localize_directive.X, localize_tooltip_directive.r, icon.Hw ],
                styles: [ '.textOverflowCommon[_ngcontent-%COMP%]{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}tr[_ngcontent-%COMP%]{display:flex;flex-wrap:nowrap;justify-content:space-between}.itemExpanded[_ngcontent-%COMP%]{background-color:var(--neutral-primary-color, #333333)}.nameCol[_ngcontent-%COMP%]{height:16px;display:flex;align-items:center;min-width:45px;flex-grow:1;padding:2px}.nameCol[_ngcontent-%COMP%]   .actionName[_ngcontent-%COMP%], .nameCol[_ngcontent-%COMP%]   .parentName[_ngcontent-%COMP%]{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;min-width:20px;margin-left:4px}.nameCol[_ngcontent-%COMP%]   .actionName[_ngcontent-%COMP%]   i[_ngcontent-%COMP%], .nameCol[_ngcontent-%COMP%]   .parentName[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{padding-left:0}.nameCol[_ngcontent-%COMP%]   .interactName[_ngcontent-%COMP%]{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;min-width:20px;margin-left:24px}.nameCol[_ngcontent-%COMP%]   .interactName[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{padding-left:0}.nameCol[_ngcontent-%COMP%]   .childName[_ngcontent-%COMP%]{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;min-width:20px;margin-left:24px}.nameCol[_ngcontent-%COMP%]   .copyName[_ngcontent-%COMP%]{height:20px;text-overflow:ellipsis;overflow:hidden;white-space:nowrap}.nameCol[_ngcontent-%COMP%]   .performanceTableIcon[_ngcontent-%COMP%]{font-family:PowrMDL2;display:flex;align-items:center;justify-content:center;height:20px;width:20px;min-width:20px}.visualLifecycle[_ngcontent-%COMP%]{cursor:pointer}.visualLifecycle[_ngcontent-%COMP%]:hover{background-color:var(--neutral-primary-color-alt3, #515151)}.durationCol[_ngcontent-%COMP%]{height:16px;min-width:94px;margin-right:4px;text-align:right;padding:2px}.line[_ngcontent-%COMP%]{height:0;border-bottom:1px solid var(--neutral-secondary-alt-color, #777777);flex-grow:1;margin-left:4px;margin-right:2px}.copyBtn[_ngcontent-%COMP%], .runInDaxViewBtn[_ngcontent-%COMP%]{color:var(--theme-primary-color, #F2C811);background-color:transparent;margin-left:22px;font-size:12px;min-width:20px}html[data-focus-source="key"][_nghost-%COMP%]   [_ngcontent-%COMP%]:focus, html[data-focus-source="key"]   [_nghost-%COMP%]   [_ngcontent-%COMP%]:focus{outline:var(--focus-two-tone-outline-definition, auto 1px);outline-color:var(--focus-two-tone-outline-color, -webkit-focus-ring-color);outline-offset:-1px}[_ngcontent-%COMP%]:focus{outline:none}[_nghost-%COMP%]  .mat-flat-button .mat-button-wrapper{height:20px;display:flex;align-items:center}[_nghost-%COMP%]  .mat-flat-button mat-icon{display:flex;align-items:center;justify-content:center}[_nghost-%COMP%]  mat-icon{font-family:PowrMDL2;font-size:12px;height:20px;width:20px}.newPaneColors[_nghost-%COMP%], .newPaneColors   [_nghost-%COMP%]{--item-background-color: var(--gray-50, #D2D0CE);--link-color: var(--dark-blue, #2B579A);--item-background-hover-color: var(--gray-30, #EDEBE9);--border-color: var(--gray-40, #E1DFDD)}[data-legacy-theme=false]   .newPaneColors[_nghost-%COMP%], .newPaneColors   [_nghost-%COMP%]{--item-background-color: var(--colorNeutralBackground2);--link-color: var(--colorBrandForegroundLink);--item-background-hover-color: var(--colorNeutralBackground2Hover);--border-color: var(--colorNeutralStroke1)}.newPaneColors[_nghost-%COMP%]   .itemExpanded[_ngcontent-%COMP%], .newPaneColors   [_nghost-%COMP%]   .itemExpanded[_ngcontent-%COMP%]{background-color:var(--item-background-color)}.newPaneColors[_nghost-%COMP%]   .visualLifecycle[_ngcontent-%COMP%]:hover, .newPaneColors   [_nghost-%COMP%]   .visualLifecycle[_ngcontent-%COMP%]:hover{background-color:var(--item-background-hover-color)}.newPaneColors[_nghost-%COMP%]   .line[_ngcontent-%COMP%], .newPaneColors   [_nghost-%COMP%]   .line[_ngcontent-%COMP%]{border-color:var(--border-color)}.newPaneColors[_nghost-%COMP%]   .copyBtn[_ngcontent-%COMP%], .newPaneColors   [_nghost-%COMP%]   .copyBtn[_ngcontent-%COMP%], .newPaneColors[_nghost-%COMP%]   .runInDaxViewBtn[_ngcontent-%COMP%], .newPaneColors   [_nghost-%COMP%]   .runInDaxViewBtn[_ngcontent-%COMP%]{background-color:transparent;color:var(--link-color)}.newPaneColors[_nghost-%COMP%]   .copyBtn[_ngcontent-%COMP%]:disabled, .newPaneColors   [_nghost-%COMP%]   .copyBtn[_ngcontent-%COMP%]:disabled, .newPaneColors[_nghost-%COMP%]   .runInDaxViewBtn[_ngcontent-%COMP%]:disabled, .newPaneColors   [_nghost-%COMP%]   .runInDaxViewBtn[_ngcontent-%COMP%]:disabled{background-color:transparent;color:#767676}' ],
                changeDetection: 0
            }), UserActionActivityComponent;
        }();
        function PerformanceActivityTimelineComponent_ng_container_9_user_action_activity_2_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "user-action-activity", 14), 2 & rf) {
                var item_r1 = core["\u0275\u0275nextContext"]().$implicit;
                core["\u0275\u0275property"]("viewModel", item_r1);
            }
        }
        function PerformanceActivityTimelineComponent_ng_container_9_performance_lifecycle_activity_3_Template(rf, ctx) {
            if (1 & rf) {
                var _r8 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "performance-lifecycle-activity", 15), core["\u0275\u0275listener"]("onClick", function($event) {
                    core["\u0275\u0275restoreView"](_r8);
                    var ctx_r7 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r7.onClickVisualLifecycle($event));
                })("onCopy", function($event) {
                    core["\u0275\u0275restoreView"](_r8);
                    var ctx_r9 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r9.copyDetails($event));
                })("onRunInDaxView", function($event) {
                    core["\u0275\u0275restoreView"](_r8);
                    var ctx_r10 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r10.runInDaxView($event));
                }), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var item_r1 = core["\u0275\u0275nextContext"]().$implicit, ctx_r3 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("viewModel", item_r1)("isExpanded", ctx_r3.expandedLogs[item_r1.performanceLog.id])("hasBeenCopied", ctx_r3.copiedLogs[item_r1.performanceLog.id])("showRunInDaxView", ctx_r3.supportDaxQueryView);
            }
        }
        function PerformanceActivityTimelineComponent_ng_container_9_performance_lifecycle_activity_4_Template(rf, ctx) {
            if (1 & rf) {
                var _r13 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "performance-lifecycle-activity", 16), core["\u0275\u0275listener"]("onClick", function($event) {
                    core["\u0275\u0275restoreView"](_r13);
                    var ctx_r12 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r12.onClickLifecycle($event));
                })("onCopy", function($event) {
                    core["\u0275\u0275restoreView"](_r13);
                    var ctx_r14 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r14.copyDetails($event));
                }), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var item_r1 = core["\u0275\u0275nextContext"]().$implicit, ctx_r4 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("viewModel", item_r1)("isExpanded", ctx_r4.expandedLogs[item_r1.performanceLog.id])("hasBeenCopied", ctx_r4.copiedLogs[item_r1.performanceLog.id]);
            }
        }
        function PerformanceActivityTimelineComponent_ng_container_9_tr_5_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementStart"](0, "tr", 17)(1, "td", 18)(2, "span", 19), 
            core["\u0275\u0275element"](3, "i", 20), core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementStart"](4, "td", 21), 
            core["\u0275\u0275text"](5, "-"), core["\u0275\u0275elementEnd"]()());
        }
        function PerformanceActivityTimelineComponent_ng_container_9_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0)(1, 9), core["\u0275\u0275template"](2, PerformanceActivityTimelineComponent_ng_container_9_user_action_activity_2_Template, 1, 1, "user-action-activity", 10), 
            core["\u0275\u0275template"](3, PerformanceActivityTimelineComponent_ng_container_9_performance_lifecycle_activity_3_Template, 1, 4, "performance-lifecycle-activity", 11), 
            core["\u0275\u0275template"](4, PerformanceActivityTimelineComponent_ng_container_9_performance_lifecycle_activity_4_Template, 1, 3, "performance-lifecycle-activity", 12), 
            core["\u0275\u0275elementContainerEnd"](), core["\u0275\u0275template"](5, PerformanceActivityTimelineComponent_ng_container_9_tr_5_Template, 6, 0, "tr", 13), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var item_r1 = ctx.$implicit, ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitch", item_r1.logType), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", ctx_r0.PerformanceLogType.UserAction), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", ctx_r0.PerformanceLogType.VisualContainer), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", ctx_r0.PerformanceLogType.UtilityQuery), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", ctx_r0.showInteractMessage);
            }
        }
        var PerformanceActivityTimelineComponent = function() {
            function PerformanceActivityTimelineComponent(conceptualSchemaProxy, dataSources, explorationNavigation, localizationService, pbiMenuService, selection, store, changeDetectorRef, dataModelService) {
                var _this = this;
                this.conceptualSchemaProxy = conceptualSchemaProxy, this.dataSources = dataSources, 
                this.explorationNavigation = explorationNavigation, this.localizationService = localizationService, 
                this.pbiMenuService = pbiMenuService, this.selection = selection, this.store = store, 
                this.changeDetectorRef = changeDetectorRef, this.dataModelService = dataModelService, 
                this.sortUpdate = new core.EventEmitter, this.PerformanceLogType = performance_analyzer_utils.n6, 
                this.PerformanceSortDirection = performance_analyzer_utils.wN, this.onDestroy$ = new Subject.xQ, 
                this.supportDaxQueryView = this.dataModelService.getModelAuthoringCapabilities().supportsDaxQueryView, 
                this.dataModelService.modelChanged$.pipe((0, takeUntil.R)(this.onDestroy$)).subscribe(function(modelChange) {
                    var supportDaxViewView = !!(null == modelChange ? void 0 : modelChange.modelAuthoringCapabilities.supportsDaxQueryView);
                    supportDaxViewView !== _this.supportDaxQueryView && (_this.supportDaxQueryView = supportDaxViewView, 
                    _this.changeDetectorRef.markForCheck());
                });
            }
            return PerformanceActivityTimelineComponent.prototype.ngOnInit = function() {
                this.expandedLogs = {}, this.copiedLogs = {}, this.activeTimeouts = {};
            }, PerformanceActivityTimelineComponent.prototype.showContextMenu = function($event) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var _a, origin, pbiMenuConfig, menuRef, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return $event.stopPropagation(), _a = this, [ 4, this.getDirectQueryMode() ];

                          case 1:
                            return _a.directQueryMode = _b.sent(), origin = {
                                element: $event.currentTarget,
                                x: $event.pageX,
                                y: $event.pageY
                            }, pbiMenuConfig = {
                                menu: this.createMenuItems(),
                                origin,
                                menuMode: pbi_menu_contracts.Kb.Compact
                            }, (menuRef = this.pbiMenuService.open(pbiMenuConfig)).onButtonClick$.pipe((0, takeUntil.R)((0, 
                            merge.T)(menuRef.onClose$, this.onDestroy$))).subscribe(function(item) {
                                _this.selectMenuItem(item.id), menuRef.close();
                            }), [ 2 ];
                        }
                    });
                });
            }, PerformanceActivityTimelineComponent.prototype.getDirectQueryMode = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var dataSources, federatedSchema, _i, _a, _b, _c, entity;
                    return (0, tslib_es6.__generator)(this, function(_d) {
                        switch (_d.label) {
                          case 0:
                            return dataSources = this.dataSources.get(), [ 4, this.conceptualSchemaProxy.get(dataSources) ];

                          case 1:
                            for (federatedSchema = _d.sent(), _i = 0, _a = federatedSchema.schemas; _i < _a.length; _i++) for (_b = 0, 
                            _c = _a[_i].entities; _b < _c.length; _b++) if (1 === (entity = _c[_b]).source.mode || 2 === entity.source.mode || 4 === entity.source.mode) return [ 2, !0 ];
                            return [ 2, !1 ];
                        }
                    });
                });
            }, PerformanceActivityTimelineComponent.prototype.copyDetails = function(log) {
                var _this = this;
                if ((0, performance_analyzer_utils.pK)(log) || (0, performance_analyzer_utils.n2)(log)) {
                    this.copiedLogs[log.id] = !0;
                    var timeoutId = setTimeout(function() {
                        _this.copiedLogs[log.id] = !1, delete _this.activeTimeouts[timeoutId];
                    }, 8e3);
                    this.activeTimeouts[timeoutId] = !0, this.store.dispatch(performance_analyzer_actions.fc({
                        log
                    }));
                } else debug.fF.assertFail("Copy details should only be on visual container lifecycle or utility query lifecycle logs.");
            }, PerformanceActivityTimelineComponent.prototype.runInDaxView = function(log) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        return (0, performance_analyzer_utils.pK)(log) ? (this.store.dispatch(performance_analyzer_actions.PP({
                            log
                        })), [ 2 ]) : (debug.fF.assertFail("Copy details should only be on visual container lifecycle logs."), 
                        [ 2 ]);
                    });
                });
            }, PerformanceActivityTimelineComponent.prototype.isItemCopied = function(rootActivityId) {
                return this.copiedLogs[rootActivityId];
            }, PerformanceActivityTimelineComponent.prototype.isItemExpanded = function(rootActivityId) {
                return this.expandedLogs[rootActivityId];
            }, PerformanceActivityTimelineComponent.prototype.onClickLifecycle = function(payload) {
                var event = payload.event;
                this.setExpandState(payload.log.id, payload.expandState), event.stopPropagation();
            }, PerformanceActivityTimelineComponent.prototype.onClickVisualLifecycle = function(payload) {
                var log = payload.log;
                (0, performance_analyzer_utils.pK)(log) && (this.onClickLifecycle(payload), this.selectVisualContainer(log.visualContainerName));
            }, PerformanceActivityTimelineComponent.prototype.setExpandState = function(rootActivityId, expandState) {
                this.expandedLogs[rootActivityId] = void 0 === expandState ? !this.expandedLogs[rootActivityId] : expandState;
            }, PerformanceActivityTimelineComponent.prototype.selectVisualContainer = function(visualContainerName) {
                var visualContainerFound = this.explorationNavigation.getCurrentSection().visualContainers.find(function(container) {
                    return container.name === visualContainerName;
                });
                if (!visualContainerFound) {
                    var sections = this.explorationNavigation.getAllSections(), targetSectionIndex = sections.findIndex(function(section) {
                        return section.visualContainers.find(function(container) {
                            return container.name === visualContainerName;
                        });
                    });
                    targetSectionIndex > -1 && (this.explorationNavigation.updateActiveSection({
                        targetSectionIndex,
                        parentActivity: void 0
                    }), visualContainerFound = sections[targetSectionIndex].visualContainers.find(function(container) {
                        return container.name === visualContainerName;
                    }));
                }
                this.selection.clearSelection(), visualContainerFound && selectionUtils.UP.selectCanvasItem(visualContainerFound, this.selection);
            }, PerformanceActivityTimelineComponent.prototype.createMenuItems = function() {
                return {
                    items: [ PerformancePaneMenuItemViewModelGenerator.createPerformancePaneMenuItem("DaxTemplates_AscendingDirection", {
                        action: 0
                    }, this.localizationService, this.sort.direction === performance_analyzer_utils.wN.Ascending), PerformancePaneMenuItemViewModelGenerator.createPerformancePaneMenuItem("DaxTemplates_DescendingDirection", {
                        action: 1
                    }, this.localizationService, this.sort.direction === performance_analyzer_utils.wN.Descending), PerformancePaneMenuItemViewModelGenerator.createItemSeparator(), PerformancePaneMenuItemViewModelGenerator.createPerformancePaneSubMenuItem("MobileFooter_SortBy", this.localizationService, this.createChildrenItems()) ]
                };
            }, PerformanceActivityTimelineComponent.prototype.createChildrenItems = function() {
                var childrenItems = [];
                return childrenItems.push(PerformancePaneMenuItemViewModelGenerator.createPerformancePaneMenuItem("PerformanceAnalyzerPane_TotalTime", {
                    action: 5
                }, this.localizationService, this.sort.type === performance_analyzer_utils.aV.TotalTime)), 
                childrenItems.push(PerformancePaneMenuItemViewModelGenerator.createPerformancePaneMenuItem("PerformanceAnalyzerPane_ActionOrder", {
                    action: 2
                }, this.localizationService, this.sort.type === performance_analyzer_utils.aV.Chronological)), 
                childrenItems.push(PerformancePaneMenuItemViewModelGenerator.createPerformancePaneMenuItem("PerformanceAnalyzerPane_Dax_Query", {
                    action: 3
                }, this.localizationService, this.sort.type === performance_analyzer_utils.aV.DaxQuery)), 
                this.directQueryMode && childrenItems.push(PerformancePaneMenuItemViewModelGenerator.createPerformancePaneMenuItem("PerformanceAnalyzerPane_Direct_Query", {
                    action: 4
                }, this.localizationService, this.sort.type === performance_analyzer_utils.aV.DirectQuery)), 
                childrenItems.push(PerformancePaneMenuItemViewModelGenerator.createPerformancePaneMenuItem("PerformanceAnalyzerPane_Resolve_Parameters", {
                    action: 7
                }, this.localizationService, this.sort.type === performance_analyzer_utils.aV.ResolveParameters)), 
                childrenItems.push(PerformancePaneMenuItemViewModelGenerator.createPerformancePaneMenuItem("PerformanceAnalyzerPane_Visual_Display", {
                    action: 6
                }, this.localizationService, this.sort.type === performance_analyzer_utils.aV.VisualRender)), 
                childrenItems;
            }, PerformanceActivityTimelineComponent.prototype.selectMenuItem = function(performancePaneMenuItemAction) {
                switch (debug.fF.assertValue(performancePaneMenuItemAction, "Expected a menu item."), 
                performancePaneMenuItemAction) {
                  case 0:
                    this.sortUpdate.emit({
                        direction: performance_analyzer_utils.wN.Ascending,
                        type: this.sort.type
                    });
                    break;

                  case 1:
                    this.sortUpdate.emit({
                        direction: performance_analyzer_utils.wN.Descending,
                        type: this.sort.type
                    });
                    break;

                  case 5:
                    this.sortUpdate.emit({
                        direction: this.sort.direction,
                        type: performance_analyzer_utils.aV.TotalTime
                    });
                    break;

                  case 2:
                    this.sortUpdate.emit({
                        direction: this.sort.direction,
                        type: performance_analyzer_utils.aV.Chronological
                    });
                    break;

                  case 3:
                    this.sortUpdate.emit({
                        direction: this.sort.direction,
                        type: performance_analyzer_utils.aV.DaxQuery
                    });
                    break;

                  case 4:
                    this.sortUpdate.emit({
                        direction: this.sort.direction,
                        type: performance_analyzer_utils.aV.DirectQuery
                    });
                    break;

                  case 7:
                    this.sortUpdate.emit({
                        direction: this.sort.direction,
                        type: performance_analyzer_utils.aV.ResolveParameters
                    });
                    break;

                  case 6:
                    this.sortUpdate.emit({
                        direction: this.sort.direction,
                        type: performance_analyzer_utils.aV.VisualRender
                    });
                    break;

                  default:
                    debug.fF.assertNever(performancePaneMenuItemAction);
                }
            }, PerformanceActivityTimelineComponent.prototype.ngOnDestroy = function() {
                for (var activeTimeout in this.onDestroy$.next(), this.onDestroy$.complete(), this.activeTimeouts) clearTimeout(+activeTimeout);
            }, PerformanceActivityTimelineComponent.\u0275fac = function(t) {
                return new (t || PerformanceActivityTimelineComponent)(core["\u0275\u0275directiveInject"](conceptual_schema_proxy_service.i), core["\u0275\u0275directiveInject"](data_sources_service.D), core["\u0275\u0275directiveInject"](exploration_navigation_service.z), core["\u0275\u0275directiveInject"](localization_service.o), core["\u0275\u0275directiveInject"](pbi_menu_service.o), core["\u0275\u0275directiveInject"](selection_service.z), core["\u0275\u0275directiveInject"](ngrx_store.yh), core["\u0275\u0275directiveInject"](core.ChangeDetectorRef), core["\u0275\u0275directiveInject"](token.n));
            }, PerformanceActivityTimelineComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: PerformanceActivityTimelineComponent,
                selectors: [ [ "performance-activity-timeline" ] ],
                inputs: {
                    performanceLogsViewModel: "performanceLogsViewModel",
                    showInteractMessage: "showInteractMessage",
                    sort: "sort"
                },
                outputs: {
                    sortUpdate: "sortUpdate"
                },
                decls: 10,
                vars: 2,
                consts: [ [ "role", "banner", 1, "headerRow" ], [ "localize", "Name", "role", "heading", "tabindex", "0", 1, "headerCol", "item" ], [ "localize", "Duration_Ms", "role", "heading", "tabindex", "0", 1, "headerCol", "duration" ], [ "tabindex", "0", "inline", "true", "localizeTooltip", "Sort_ToolTip", 1, "performancePaneContextMenuBtn", 3, "click", "keydown.enter" ], [ 1, "glyph-mini", 3, "fontIcon" ], [ "tabindex", "-1", 1, "verticalSeparator" ], [ "itemSize", "20" ], [ "role", "tree" ], [ 4, "cdkVirtualFor", "cdkVirtualForOf" ], [ 3, "ngSwitch" ], [ 3, "viewModel", 4, "ngSwitchCase" ], [ 3, "viewModel", "isExpanded", "hasBeenCopied", "showRunInDaxView", "onClick", "onCopy", "onRunInDaxView", 4, "ngSwitchCase" ], [ 3, "viewModel", "isExpanded", "hasBeenCopied", "onClick", "onCopy", 4, "ngSwitchCase" ], [ "role", "treeitem", "tabindex", "0", 4, "ngIf" ], [ 3, "viewModel" ], [ 3, "viewModel", "isExpanded", "hasBeenCopied", "showRunInDaxView", "onClick", "onCopy", "onRunInDaxView" ], [ 3, "viewModel", "isExpanded", "hasBeenCopied", "onClick", "onCopy" ], [ "role", "treeitem", "tabindex", "0" ], [ 1, "nameCol" ], [ 1, "interactName" ], [ "localize", "PerformanceAnalyzerPane_Interact" ], [ 1, "durationCol" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementStart"](0, "div", 0), core["\u0275\u0275element"](1, "h6", 1)(2, "h6", 2), 
                    core["\u0275\u0275elementStart"](3, "button", 3), core["\u0275\u0275listener"]("click", function($event) {
                        return ctx.showContextMenu($event);
                    })("keydown.enter", function($event) {
                        return ctx.showContextMenu($event);
                    }), core["\u0275\u0275element"](4, "mat-icon", 4), core["\u0275\u0275elementEnd"]()(), 
                    core["\u0275\u0275element"](5, "div", 5), core["\u0275\u0275elementStart"](6, "cdk-virtual-scroll-viewport", 6)(7, "table")(8, "tbody", 7), 
                    core["\u0275\u0275template"](9, PerformanceActivityTimelineComponent_ng_container_9_Template, 6, 5, "ng-container", 8), 
                    core["\u0275\u0275elementEnd"]()()()), 2 & rf && (core["\u0275\u0275advance"](4), 
                    core["\u0275\u0275property"]("fontIcon", ctx.sort.direction === ctx.PerformanceSortDirection.Ascending ? "pbi-glyph-sortdown" : "pbi-glyph-sortup"), 
                    core["\u0275\u0275advance"](5), core["\u0275\u0275property"]("cdkVirtualForOf", ctx.performanceLogsViewModel));
                },
                dependencies: [ common.NgIf, common.NgSwitch, common.NgSwitchCase, localize_directive.X, localize_tooltip_directive.r, icon.Hw, scrolling.xd, scrolling.x0, scrolling.N7, PerformanceLifecycleActivityComponent, UserActionActivityComponent ],
                styles: [ ".textOverflowCommon[_ngcontent-%COMP%]{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}[_nghost-%COMP%]{display:flex;padding-left:8px;padding-right:8px;padding-bottom:12px;flex-direction:column;flex-grow:1;flex-basis:0;position:relative;overflow:hidden}.headerRow[_ngcontent-%COMP%]{display:flex;align-items:center;height:20px;flex-shrink:0;border:1px solid var(--neutral-secondary-color, #666666);background:var(--neutral-secondary-alt-color, #777777);border-bottom:none}.headerRow[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]{height:16px;width:16px}.headerCol[_ngcontent-%COMP%]{flex-grow:1;display:flex;align-items:center}.headerCol.item[_ngcontent-%COMP%]{padding-left:8px}.headerCol.duration[_ngcontent-%COMP%]{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;justify-content:left;max-width:74px}cdk-virtual-scroll-viewport[_ngcontent-%COMP%]{--viewport-border-color: var(--neutral-secondary-color, #666666);flex-grow:1;border:1px solid var(--viewport-border-color)}[data-legacy-theme=false] cdk-virtual-scroll-viewport[_ngcontent-%COMP%]{--viewport-border-color: var(--colorNeutralStroke1)}table[_ngcontent-%COMP%]{width:100%;table-layout:fixed}.verticalSeparator[_ngcontent-%COMP%]{position:absolute;top:22px;height:calc(100% - 34px);right:110px;z-index:1;background-color:transparent;border-left:1px solid var(--neutral-secondary-color, #666666)}.performancePaneContextMenuBtn[_ngcontent-%COMP%]{--icon-background-color: var(--theme-secondary-alt-color, #444444);display:flex;justify-content:center;align-items:center;height:16px;width:16px;background-color:var(--icon-background-color);margin-left:2px;margin-right:4px}[data-legacy-theme=false][_ngcontent-%COMP%]   .performancePaneContextMenuBtn[_ngcontent-%COMP%]{--icon-background-color: var(--colorNeutralBackground1)}.performancePaneContextMenuBtn[_ngcontent-%COMP%]:hover{cursor:pointer}.newPaneColors[_nghost-%COMP%], .newPaneColors   [_nghost-%COMP%]{--header-background-color: var(--gray-40, #E1DFDD);--header-row-border-color: var(--gray-60, #C8C6C4);--header-row-button-background-color: var(--gray-20, #F3F2F1)}[data-legacy-theme=false]   .newPaneColors[_nghost-%COMP%], .newPaneColors   [_nghost-%COMP%]{--header-background-color: var(--colorNeutralBackground1);--header-row-border-color: var(--colorNeutralStroke1);--header-row-button-background-color: var(--colorNeutralBackground2)}.newPaneColors[_nghost-%COMP%]   .headerRow[_ngcontent-%COMP%], .newPaneColors   [_nghost-%COMP%]   .headerRow[_ngcontent-%COMP%]{background:var(--header-background-color);border-color:var(--header-row-border-color)}.newPaneColors[_nghost-%COMP%]   cdk-virtual-scroll-viewport[_ngcontent-%COMP%], .newPaneColors   [_nghost-%COMP%]   cdk-virtual-scroll-viewport[_ngcontent-%COMP%]{border-color:var(--header-row-border-color)}.newPaneColors[_nghost-%COMP%]   .verticalSeparator[_ngcontent-%COMP%], .newPaneColors   [_nghost-%COMP%]   .verticalSeparator[_ngcontent-%COMP%]{border-color:var(--header-row-border-color)}.newPaneColors[_nghost-%COMP%]   .performancePaneContextMenuBtn[_ngcontent-%COMP%], .newPaneColors   [_nghost-%COMP%]   .performancePaneContextMenuBtn[_ngcontent-%COMP%]{background-color:var(--header-row-button-background-color)}", '.textOverflowCommon[_ngcontent-%COMP%]{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}tr[_ngcontent-%COMP%]{display:flex;flex-wrap:nowrap;justify-content:space-between}.itemExpanded[_ngcontent-%COMP%]{background-color:var(--neutral-primary-color, #333333)}.nameCol[_ngcontent-%COMP%]{height:16px;display:flex;align-items:center;min-width:45px;flex-grow:1;padding:2px}.nameCol[_ngcontent-%COMP%]   .actionName[_ngcontent-%COMP%], .nameCol[_ngcontent-%COMP%]   .parentName[_ngcontent-%COMP%]{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;min-width:20px;margin-left:4px}.nameCol[_ngcontent-%COMP%]   .actionName[_ngcontent-%COMP%]   i[_ngcontent-%COMP%], .nameCol[_ngcontent-%COMP%]   .parentName[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{padding-left:0}.nameCol[_ngcontent-%COMP%]   .interactName[_ngcontent-%COMP%]{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;min-width:20px;margin-left:24px}.nameCol[_ngcontent-%COMP%]   .interactName[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{padding-left:0}.nameCol[_ngcontent-%COMP%]   .childName[_ngcontent-%COMP%]{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;min-width:20px;margin-left:24px}.nameCol[_ngcontent-%COMP%]   .copyName[_ngcontent-%COMP%]{height:20px;text-overflow:ellipsis;overflow:hidden;white-space:nowrap}.nameCol[_ngcontent-%COMP%]   .performanceTableIcon[_ngcontent-%COMP%]{font-family:PowrMDL2;display:flex;align-items:center;justify-content:center;height:20px;width:20px;min-width:20px}.visualLifecycle[_ngcontent-%COMP%]{cursor:pointer}.visualLifecycle[_ngcontent-%COMP%]:hover{background-color:var(--neutral-primary-color-alt3, #515151)}.durationCol[_ngcontent-%COMP%]{height:16px;min-width:94px;margin-right:4px;text-align:right;padding:2px}.line[_ngcontent-%COMP%]{height:0;border-bottom:1px solid var(--neutral-secondary-alt-color, #777777);flex-grow:1;margin-left:4px;margin-right:2px}.copyBtn[_ngcontent-%COMP%], .runInDaxViewBtn[_ngcontent-%COMP%]{color:var(--theme-primary-color, #F2C811);background-color:transparent;margin-left:22px;font-size:12px;min-width:20px}html[data-focus-source="key"][_nghost-%COMP%]   [_ngcontent-%COMP%]:focus, html[data-focus-source="key"]   [_nghost-%COMP%]   [_ngcontent-%COMP%]:focus{outline:var(--focus-two-tone-outline-definition, auto 1px);outline-color:var(--focus-two-tone-outline-color, -webkit-focus-ring-color);outline-offset:-1px}[_ngcontent-%COMP%]:focus{outline:none}[_nghost-%COMP%]  .mat-flat-button .mat-button-wrapper{height:20px;display:flex;align-items:center}[_nghost-%COMP%]  .mat-flat-button mat-icon{display:flex;align-items:center;justify-content:center}[_nghost-%COMP%]  mat-icon{font-family:PowrMDL2;font-size:12px;height:20px;width:20px}.newPaneColors[_nghost-%COMP%], .newPaneColors   [_nghost-%COMP%]{--item-background-color: var(--gray-50, #D2D0CE);--link-color: var(--dark-blue, #2B579A);--item-background-hover-color: var(--gray-30, #EDEBE9);--border-color: var(--gray-40, #E1DFDD)}[data-legacy-theme=false]   .newPaneColors[_nghost-%COMP%], .newPaneColors   [_nghost-%COMP%]{--item-background-color: var(--colorNeutralBackground2);--link-color: var(--colorBrandForegroundLink);--item-background-hover-color: var(--colorNeutralBackground2Hover);--border-color: var(--colorNeutralStroke1)}.newPaneColors[_nghost-%COMP%]   .itemExpanded[_ngcontent-%COMP%], .newPaneColors   [_nghost-%COMP%]   .itemExpanded[_ngcontent-%COMP%]{background-color:var(--item-background-color)}.newPaneColors[_nghost-%COMP%]   .visualLifecycle[_ngcontent-%COMP%]:hover, .newPaneColors   [_nghost-%COMP%]   .visualLifecycle[_ngcontent-%COMP%]:hover{background-color:var(--item-background-hover-color)}.newPaneColors[_nghost-%COMP%]   .line[_ngcontent-%COMP%], .newPaneColors   [_nghost-%COMP%]   .line[_ngcontent-%COMP%]{border-color:var(--border-color)}.newPaneColors[_nghost-%COMP%]   .copyBtn[_ngcontent-%COMP%], .newPaneColors   [_nghost-%COMP%]   .copyBtn[_ngcontent-%COMP%], .newPaneColors[_nghost-%COMP%]   .runInDaxViewBtn[_ngcontent-%COMP%], .newPaneColors   [_nghost-%COMP%]   .runInDaxViewBtn[_ngcontent-%COMP%]{background-color:transparent;color:var(--link-color)}.newPaneColors[_nghost-%COMP%]   .copyBtn[_ngcontent-%COMP%]:disabled, .newPaneColors   [_nghost-%COMP%]   .copyBtn[_ngcontent-%COMP%]:disabled, .newPaneColors[_nghost-%COMP%]   .runInDaxViewBtn[_ngcontent-%COMP%]:disabled, .newPaneColors   [_nghost-%COMP%]   .runInDaxViewBtn[_ngcontent-%COMP%]:disabled{background-color:transparent;color:#767676}' ],
                changeDetection: 0
            }), PerformanceActivityTimelineComponent;
        }();
        function PerformancePaneComponent_pbi_pane_0_pbi_pane_section_18_Template(rf, ctx) {
            if (1 & rf) {
                var _r5 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "pbi-pane-section", 24)(1, "div", 25)(2, "div", 7)(3, "button", 26), 
                core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r5);
                    var ctx_r4 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r4.clearPerformanceLogs());
                }), core["\u0275\u0275element"](4, "mat-icon", 27)(5, "span", 28), core["\u0275\u0275elementEnd"](), 
                core["\u0275\u0275elementStart"](6, "button", 29), core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r5);
                    var ctx_r6 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r6.exportPerformanceData());
                }), core["\u0275\u0275element"](7, "mat-icon", 30)(8, "span", 31), core["\u0275\u0275elementEnd"]()()(), 
                core["\u0275\u0275elementStart"](9, "performance-activity-timeline", 32), core["\u0275\u0275listener"]("sortUpdate", function($event) {
                    core["\u0275\u0275restoreView"](_r5);
                    var ctx_r7 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r7.sortSubject.next($event));
                }), core["\u0275\u0275pipe"](10, "async"), core["\u0275\u0275pipe"](11, "async"), 
                core["\u0275\u0275pipe"](12, "async"), core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var ctx_r2 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275advance"](9), core["\u0275\u0275property"]("sort", core["\u0275\u0275pipeBind1"](10, 3, ctx_r2.sortSubject))("performanceLogsViewModel", core["\u0275\u0275pipeBind1"](11, 5, ctx_r2.performanceLogsViewModels$))("showInteractMessage", core["\u0275\u0275pipeBind1"](12, 7, ctx_r2.showInteractMessage$));
            }
        }
        function PerformancePaneComponent_pbi_pane_0_pbi_pane_section_20_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementStart"](0, "pbi-pane-section", 33), core["\u0275\u0275element"](1, "span", 34), 
            core["\u0275\u0275elementEnd"]());
        }
        function PerformancePaneComponent_pbi_pane_0_Template(rf, ctx) {
            if (1 & rf) {
                var _r9 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "pbi-pane", 1), core["\u0275\u0275listener"]("onCollapse", function() {
                    core["\u0275\u0275restoreView"](_r9);
                    var ctx_r8 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r8.onPaneCollapsed());
                })("onToggle", function() {
                    core["\u0275\u0275restoreView"](_r9);
                    var ctx_r10 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r10.togglePane());
                }), core["\u0275\u0275elementStart"](1, "pbi-pane-section", 2)(2, "div", 3)(3, "button", 4), 
                core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r9);
                    var ctx_r11 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r11.setMonitorState(!0));
                }), core["\u0275\u0275pipe"](4, "async"), core["\u0275\u0275element"](5, "mat-icon", 5)(6, "span", 6), 
                core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275elementStart"](7, "div", 7)(8, "button", 8), 
                core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r9);
                    var ctx_r12 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r12.refreshReport());
                }), core["\u0275\u0275pipe"](9, "async"), core["\u0275\u0275element"](10, "mat-icon", 9)(11, "span", 10), 
                core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](12, "button", 11), 
                core["\u0275\u0275listener"]("click", function() {
                    core["\u0275\u0275restoreView"](_r9);
                    var ctx_r13 = core["\u0275\u0275nextContext"]();
                    return core["\u0275\u0275resetView"](ctx_r13.setMonitorState(!1));
                }), core["\u0275\u0275pipe"](13, "async"), core["\u0275\u0275element"](14, "mat-icon", 12)(15, "span", 13), 
                core["\u0275\u0275elementEnd"]()()(), core["\u0275\u0275element"](16, "pbi-pane-divider"), 
                core["\u0275\u0275elementStart"](17, "pbi-pane-section", 14), core["\u0275\u0275template"](18, PerformancePaneComponent_pbi_pane_0_pbi_pane_section_18_Template, 13, 9, "pbi-pane-section", 15), 
                core["\u0275\u0275pipe"](19, "async"), core["\u0275\u0275template"](20, PerformancePaneComponent_pbi_pane_0_pbi_pane_section_20_Template, 2, 0, "pbi-pane-section", 16), 
                core["\u0275\u0275pipe"](21, "async"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275element"](22, "pbi-pane-divider"), 
                core["\u0275\u0275elementStart"](23, "pbi-pane-section", 17)(24, "div", 18), core["\u0275\u0275element"](25, "span", 19)(26, "a", 20)(27, "span", 21)(28, "span", 22)(29, "a", 23)(30, "span", 21), 
                core["\u0275\u0275elementEnd"]()()();
            }
            if (2 & rf) {
                var viewModel_r1 = ctx.ngIf, ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275property"]("expanded", viewModel_r1.isPaneExpanded)("allowToggle", !ctx_r0.onObject)("title", viewModel_r1.title)("optionsSetting", viewModel_r1.optionsSetting)("showCollapse", ctx_r0.onObject), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("disabled", core["\u0275\u0275pipeBind1"](4, 10, ctx_r0.monitorActiveSubject)), 
                core["\u0275\u0275advance"](5), core["\u0275\u0275property"]("disabled", !core["\u0275\u0275pipeBind1"](9, 12, ctx_r0.monitorActiveSubject)), 
                core["\u0275\u0275advance"](4), core["\u0275\u0275property"]("disabled", !core["\u0275\u0275pipeBind1"](13, 14, ctx_r0.monitorActiveSubject)), 
                core["\u0275\u0275advance"](6), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](19, 16, ctx_r0.tableVisible$)), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", !core["\u0275\u0275pipeBind1"](21, 18, ctx_r0.tableVisible$));
            }
        }
        var performanceAnalyzerEffect = (0, scoped_effect_subscriber_service.ed)(PerformanceAnalyzerEffects), PerformancePaneComponent = function() {
            function PerformancePaneComponent(eventBridge, explorationNavigation, panesVisibility, telemetryService, localizationService, pauseQueriesService, performanceAnalyzer, reportRefreshService, store, featureSwitchService, performanceAnalyzerEffects) {
                var _this = this;
                this.eventBridge = eventBridge, this.explorationNavigation = explorationNavigation, 
                this.panesVisibility = panesVisibility, this.telemetryService = telemetryService, 
                this.localizationService = localizationService, this.pauseQueriesService = pauseQueriesService, 
                this.performanceAnalyzer = performanceAnalyzer, this.reportRefreshService = reportRefreshService, 
                this.store = store, this.featureSwitchService = featureSwitchService, this.performanceAnalyzerEffects = performanceAnalyzerEffects, 
                this.viewModelBuilder = new performance_analyzer_utils.YM(this.localizationService), 
                this.monitorActiveSubject = new BehaviorSubject.X(!1), this.sortSubject = new BehaviorSubject.X({
                    direction: performance_analyzer_utils.wN.Ascending,
                    type: performance_analyzer_utils.aV.Chronological
                }), this.performanceLogsViewModels$ = (0, combineLatest.aj)([ this.store.select(performance_analyzer_selectors.LB).pipe((0, 
                scan.R)(function(viewModels, logs) {
                    return logs.length > 0 ? _this.viewModelBuilder.logsUpdate(_this.sortSubject.value, logs, []) : [];
                }, [])), this.sortSubject.pipe((0, distinctUntilChanged.x)(function(previous, current) {
                    return previous.direction === current.direction && previous.type === current.type;
                })) ]).pipe((0, map.U)(function(_a) {
                    return _this.viewModelBuilder.sortUpdate(_a[1], _a[0]);
                })), this.showInteractMessage$ = this.performanceLogsViewModels$.pipe((0, map.U)(function(performanceLogsViewModel) {
                    return performanceLogsViewModel.length < 1 || 1 === performanceLogsViewModel.length && performanceLogsViewModel[0].logType === performance_analyzer_utils.n6.UserAction;
                })), this.tableVisible$ = (0, combineLatest.aj)([ this.monitorActiveSubject, this.performanceLogsViewModels$ ]).pipe((0, 
                map.U)(function(_a) {
                    return _a[0] || _a[1].length > 0;
                }), (0, shareReplay.d)(1)), this.viewModel$ = this.panesVisibility.getPanes$().pipe((0, 
                map.U)(function(panes) {
                    return panes.performance;
                }));
            }
            return Object.defineProperty(PerformancePaneComponent.prototype, "onObject", {
                get: function() {
                    return this.featureSwitchService.featureSwitches.onObject;
                },
                enumerable: !1,
                configurable: !0
            }), PerformancePaneComponent.prototype.setMonitorState = function(active) {
                this.monitorActiveSubject.next(active), this.performanceAnalyzer.setRecording(active);
            }, PerformancePaneComponent.prototype.clearPerformanceLogs = function() {
                this.store.dispatch(performance_analyzer_actions.Sv());
            }, PerformancePaneComponent.prototype.exportPerformanceData = function() {
                this.store.dispatch(performance_analyzer_actions.NP());
            }, PerformancePaneComponent.prototype.refreshReport = function() {
                this.eventBridge.publishToChannel(events.d8V, {
                    source: "UserAction_Refresh"
                }), this.pauseQueriesService.isReportPaused() ? this.pauseQueriesService.refreshVisuals() : this.reportRefreshService.refreshData();
                var currentSection = this.explorationNavigation.getCurrentSection().id, currentReport = this.explorationNavigation.getCurrentExploration().reportId;
                this.telemetryService.logEvent(telemetry_events.X9Z, {
                    sectionId: currentSection,
                    reportId: currentReport
                });
            }, PerformancePaneComponent.prototype.togglePane = function() {
                this.panesVisibility.togglePaneExpansion("performance");
            }, PerformancePaneComponent.prototype.onPaneCollapsed = function() {
                this.panesVisibility.setPaneExpansion("performance", !1);
            }, PerformancePaneComponent.prototype.ngOnDestroy = function() {
                this.performanceAnalyzer.setRecording(!1), this.clearPerformanceLogs();
            }, PerformancePaneComponent.\u0275fac = function(t) {
                return new (t || PerformancePaneComponent)(core["\u0275\u0275directiveInject"](event_bridge_service.J), core["\u0275\u0275directiveInject"](exploration_navigation_service.z), core["\u0275\u0275directiveInject"](panes_visibility_service.r), core["\u0275\u0275directiveInject"](Telemetry.y0), core["\u0275\u0275directiveInject"](localization_service.o), core["\u0275\u0275directiveInject"](pause_queries_service.F), core["\u0275\u0275directiveInject"](performance_analyzer_service.a), core["\u0275\u0275directiveInject"](report_refresh_service.F), core["\u0275\u0275directiveInject"](ngrx_store.yh), core["\u0275\u0275directiveInject"](feature_switch_service.vZ), core["\u0275\u0275directiveInject"](performanceAnalyzerEffect.token));
            }, PerformancePaneComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: PerformancePaneComponent,
                selectors: [ [ "performance-pane" ] ],
                features: [ core["\u0275\u0275ProvidersFeature"]((0, tslib_es6.__spreadArray)([], performanceAnalyzerEffect.providers, !0)) ],
                decls: 2,
                vars: 3,
                consts: [ [ "class", "performancePaneContainer", "pbi-auto-focus", "", "focus-nav-mode", "Group", "role", "application", "keyboard-shortcuts", "ctrl-F6", "focus-priority", "10", "disableScroll", "", 3, "expanded", "allowToggle", "title", "optionsSetting", "showCollapse", "onCollapse", "onToggle", 4, "ngIf" ], [ "pbi-auto-focus", "", "focus-nav-mode", "Group", "role", "application", "keyboard-shortcuts", "ctrl-F6", "focus-priority", "10", "disableScroll", "", 1, "performancePaneContainer", 3, "expanded", "allowToggle", "title", "optionsSetting", "showCollapse", "onCollapse", "onToggle" ], [ 1, "monitorControlsContainer" ], [ 1, "controlsLeft" ], [ "mat-flat-button", "", "isFocusable", "false", "localizeTooltip", "Start_Recording", 1, "start", 3, "disabled", "click" ], [ "fontIcon", "pbi-glyph-circle-play", 1, "glyph-small" ], [ "localize", "Start_Recording", 1, "buttonText" ], [ 1, "controlsRight" ], [ "mat-flat-button", "", "isFocusable", "false", "localizeTooltip", "Refresh_Visuals", 1, "refresh", 3, "disabled", "click" ], [ "fontIcon", "pbi-glyph-refresh", 1, "glyph-small" ], [ "localize", "Refresh_Visuals", 1, "buttonText" ], [ "mat-flat-button", "", "isFocusable", "false", "localizeTooltip", "Stop", 1, "stop", 3, "disabled", "click" ], [ "fontIcon", "pbi-glyph-circle-stop", 1, "glyph-small" ], [ "localize", "Stop", 1, "buttonText" ], [ "noPadding", "", 1, "performancePaneContents" ], [ "class", "timelineControllerSection", 4, "ngIf" ], [ "class", "performancePaneDesc", 4, "ngIf" ], [ 1, "performancePaneFooter" ], [ 1, "performanceSupportSite" ], [ "localize", "PerformanceAnalyzerPane_Learn" ], [ "localize", "PerformanceAnalyzerPane_Link", "target", "_blank", "tabindex", "0", "href", "https://go.microsoft.com/fwlink/?linkid=2070556" ], [ "localize", "ScreenReader_Fullstop" ], [ "localize", "PerformanceAnalyzerPane_MVP" ], [ "localize", "PerformanceAnalyzerPane_MVP_Link", "target", "_blank", "tabindex", "0", "href", "https://go.microsoft.com/fwlink/?linkid=2094215" ], [ 1, "timelineControllerSection" ], [ 1, "timelineControlsContainer" ], [ "mat-flat-button", "", "isFocusable", "false", "localizeTooltip", "Clear", 1, "clear", 3, "click" ], [ "fontIcon", "pbi-glyph-eraser", 1, "glyph-small" ], [ "localize", "Clear", 1, "buttonText" ], [ "mat-flat-button", "", "isFocusable", "false", "localizeTooltip", "Export", 1, "export", 3, "click" ], [ "fontIcon", "pbi-glyph-export", 1, "glyph-small" ], [ "localize", "Export", 1, "buttonText" ], [ 3, "sort", "performanceLogsViewModel", "showInteractMessage", "sortUpdate" ], [ 1, "performancePaneDesc" ], [ "tabindex", "0", "localize", "PerformanceAnalyzerPane_About", 1, "startMonitoringText" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275template"](0, PerformancePaneComponent_pbi_pane_0_Template, 31, 20, "pbi-pane", 0), 
                    core["\u0275\u0275pipe"](1, "async")), 2 & rf && core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](1, 1, ctx.viewModel$));
                },
                dependencies: [ common.NgIf, localize_directive.X, localize_tooltip_directive.r, legacy_button.eB, icon.Hw, pbi_auto_focus_directive.r, keyboard_shortcuts_directive.q, pbi_pane_component.VO, pbi_pane_divider_component.P, pbi_pane_section_component.i, PerformanceActivityTimelineComponent, common.AsyncPipe ],
                styles: [ '[_nghost-%COMP%], .performancePaneContainer[_ngcontent-%COMP%], .performancePaneContents[_ngcontent-%COMP%]{display:flex;flex-direction:column;flex-grow:1}.monitorControlsContainer[_ngcontent-%COMP%]{display:flex;flex-direction:row;flex-shrink:0;justify-content:space-between;min-width:180px;padding:3px 8px;box-sizing:border-box;padding:none}.timelineControllerSection[_ngcontent-%COMP%]{flex-grow:1;display:flex;flex-direction:column}.timelineControlsContainer[_ngcontent-%COMP%]{display:flex;flex-direction:row;flex-shrink:0;justify-content:flex-end;min-width:180px;padding:3px 8px;box-sizing:border-box}.controlsLeft[_ngcontent-%COMP%]{display:flex;justify-content:flex-start;flex-shrink:2;min-width:40px}.controlsRight[_ngcontent-%COMP%]{display:flex;flex-wrap:nowrap;flex-shrink:1;min-width:40px}.controlsRight[_ngcontent-%COMP%]   .refresh[_ngcontent-%COMP%], .controlsRight[_ngcontent-%COMP%]   .clear[_ngcontent-%COMP%]{margin-right:4px}.controlsRight[_ngcontent-%COMP%]   .stop[_ngcontent-%COMP%], .controlsRight[_ngcontent-%COMP%]   .export[_ngcontent-%COMP%]{margin-left:4px}[_nghost-%COMP%]  .mat-flat-button{--start-recording-button-background-color: var(--gray-20, #F3F2F1);--start-recording-button-background-hover-color: transparent;--start-recording-button-background-disabled-color: transparent;--start-recording-button-color: var(--fluent-theme-link-color);--start-recording-button-hover-color: var(--theme-primary-color, #F2C811);--start-recording-button-disabled-color: var(--gray-80, #B3B0AD);display:flex;align-items:center;min-width:40px;line-height:unset;height:24px;text-overflow:ellipsis;overflow:hidden;background-color:var(--start-recording-button-background-color);color:var(--start-recording-button-color);font-family:Segoe UI,wf_segoe-ui_normal,helvetica,arial,sans-serif;font-weight:400}[_nghost-%COMP%]  .mat-flat-button .mat-button-wrapper{display:flex;align-items:center;min-width:40px;height:24px}[_nghost-%COMP%]  .mat-flat-button .buttonText{height:20px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;padding-right:6px}[_nghost-%COMP%]  .mat-flat-button:hover, [_nghost-%COMP%]  .mat-flat-button:focus:hover, [_nghost-%COMP%]  .mat-flat-button:active:hover, [_nghost-%COMP%]  .mat-flat-button:active, [_nghost-%COMP%]  .mat-flat-button .mat-button-focus-overlay{background-color:var(--start-recording-button-background-hover-color);color:var(--start-recording-button-color)}[_nghost-%COMP%]  .mat-flat-button:disabled{background-color:transparent;color:#767676}[_nghost-%COMP%]  .mat-flat-button mat-icon{display:flex;align-items:center;justify-content:center;min-width:20px;font-family:PowrMDL2;font-size:14px}html[data-focus-source="key"][_nghost-%COMP%]     .mat-flat-button:focus, html[data-focus-source="key"]   [_nghost-%COMP%]     .mat-flat-button:focus{outline:var(--focus-two-tone-outline-definition, auto 1px);outline-color:var(--focus-two-tone-outline-color, -webkit-focus-ring-color);background-color:transparent}.paneSectionSeparator[_ngcontent-%COMP%]{flex-shrink:0;height:1px;background-color:var(--neutral-primary-color, #333333)}.performancePaneDesc[_ngcontent-%COMP%]   .startMonitoringText[_ngcontent-%COMP%]{display:block}.performanceSupportSite[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{padding-left:4px;color:var(--theme-primary-color, #F2C811)}html[data-legacy-theming="false"][_nghost-%COMP%]     .mat-flat-button, html[data-legacy-theming="false"]   [_nghost-%COMP%]     .mat-flat-button{--start-recording-button-background-color: var(--colorBrandBackground);--start-recording-button-color: var(--colorNeutralForegroundOnBrand);--start-recording-border-color: var(--colorBrandBackground);--start-recording-button-background-disabled-color: var(--colorNeutralBackgroundDisabled);--start-recording-button-background-hover-color: var(--colorBrandBackgroundHover);--start-recording-button-hover-color: var(--colorBrandForegroundLinkHover);--start-recording-button-disabled-color: var(--colorNeutralForegroundDisabled)}.newPaneColors[_nghost-%COMP%]  .mat-flat-button, .newPaneColors   [_nghost-%COMP%]  .mat-flat-button{background-color:var(--start-recording-button-background-color);color:var(--start-recording-button-color)}.newPaneColors[_nghost-%COMP%]  .mat-flat-button:hover, .newPaneColors   [_nghost-%COMP%]  .mat-flat-button:hover, .newPaneColors[_nghost-%COMP%]  .mat-flat-button:focus:hover, .newPaneColors   [_nghost-%COMP%]  .mat-flat-button:focus:hover, .newPaneColors[_nghost-%COMP%]  .mat-flat-button:active:hover, .newPaneColors   [_nghost-%COMP%]  .mat-flat-button:active:hover, .newPaneColors[_nghost-%COMP%]  .mat-flat-button:active, .newPaneColors   [_nghost-%COMP%]  .mat-flat-button:active, .newPaneColors[_nghost-%COMP%]  .mat-flat-button .mat-button-focus-overlay, .newPaneColors   [_nghost-%COMP%]  .mat-flat-button .mat-button-focus-overlay{color:var(--start-recording-button-color);background-color:var(--start-recording-button-background-hover-color)}.newPaneColors[_nghost-%COMP%]  .mat-flat-button:disabled, .newPaneColors   [_nghost-%COMP%]  .mat-flat-button:disabled{background-color:var(--start-recording-button-background-disabled-color);color:var(--start-recording-button-disabled-color)}.newPaneColors[_nghost-%COMP%], .newPaneColors   [_nghost-%COMP%]{--help-link-color: var(--fluent-theme-link-color)}[data-legacy-theming=false]   .newPaneColors[_nghost-%COMP%], .newPaneColors   [_nghost-%COMP%]{--help-link-color: var(--colorBrandForegroundLink)}.newPaneColors[_nghost-%COMP%]   .paneSectionSeparator[_ngcontent-%COMP%], .newPaneColors   [_nghost-%COMP%]   .paneSectionSeparator[_ngcontent-%COMP%]{background-color:var(--gray-40, #E1DFDD)}.newPaneColors[_nghost-%COMP%]   .performanceSupportSite[_ngcontent-%COMP%]   a[_ngcontent-%COMP%], .newPaneColors   [_nghost-%COMP%]   .performanceSupportSite[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{color:var(--help-link-color)}' ],
                changeDetection: 0
            }), PerformancePaneComponent;
        }(), ExploreUI_module = __webpack_require__(87121), expansion = __webpack_require__(51837), a11y_module = __webpack_require__(20914), performance_analyzer_reducer = __webpack_require__(18609), lazy_load_module = __webpack_require__(82156), localization_module = __webpack_require__(79061), UILibrary_module = __webpack_require__(94785), angular_resizable_element = __webpack_require__(53188), icon_module = __webpack_require__(11137), manifests = [ {
            type: PerformancePaneComponent,
            componentId: "PerformancePaneComponentId"
        } ], PerformancePaneModule = function() {
            function PerformancePaneModule() {}
            return PerformancePaneModule.\u0275fac = function(t) {
                return new (t || PerformancePaneModule);
            }, PerformancePaneModule.\u0275mod = core["\u0275\u0275defineNgModule"]({
                type: PerformancePaneModule
            }), PerformancePaneModule.\u0275inj = core["\u0275\u0275defineInjector"]({
                imports: [ common.CommonModule, ExploreUI_module.J, icon_module.Q, localization_module.v, lazy_load_module.N.withManifests(manifests), expansion.To, legacy_button.yu, icon.Ps, a11y_module._, pbi_pane_module.x, angular_resizable_element.ym, scrolling.Cl, ngrx_store.Aw.forFeature(performance_analyzer_reducer.Ag, performance_analyzer_reducer.hC), UILibrary_module.g ]
            }), PerformancePaneModule;
        }();
    }
} ]);