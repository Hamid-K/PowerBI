"use strict";

(self.webpackChunkdesktop = self.webpackChunkdesktop || []).push([ [ "quick-measures-ui" ], {
    64648: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            _: function() {
                return DaxTemplateParameterKind;
            }
        });
        var DaxTemplateParameterKind = function(DaxTemplateParameterKind) {
            return DaxTemplateParameterKind[DaxTemplateParameterKind.Number = 0] = "Number", 
            DaxTemplateParameterKind[DaxTemplateParameterKind.Enum = 1] = "Enum", DaxTemplateParameterKind[DaxTemplateParameterKind.Boolean = 2] = "Boolean", 
            DaxTemplateParameterKind[DaxTemplateParameterKind.Field = 3] = "Field", DaxTemplateParameterKind[DaxTemplateParameterKind.Instance = 4] = "Instance", 
            DaxTemplateParameterKind;
        }({});
    },
    42885: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, {
            QuickMeasuresUIModule: function() {
                return QuickMeasuresUIModule;
            }
        });
        var common = __webpack_require__(77476), dialogs_module = __webpack_require__(76966), fesm2022_select = __webpack_require__(99649), ExploreUI_module = __webpack_require__(87121), lazy_load_module = __webpack_require__(82156), localization_module = __webpack_require__(79061), tri_dropdown = __webpack_require__(44913), pbi_drag_drop_picker_module = __webpack_require__(56598), pbi_field_list_module = __webpack_require__(63654), pbi_form_field_module = __webpack_require__(14525), pbi_icon_module = __webpack_require__(93367), pbi_menu_module = __webpack_require__(94841), pbi_spinner_module = __webpack_require__(16748), pbi_tooltip_module = __webpack_require__(16095), pbi_tree_module = __webpack_require__(35284), tslib_es6 = __webpack_require__(81337), dax_template_store_service = __webpack_require__(92630), debug = __webpack_require__(62458), model_service = __webpack_require__(93215), rx_component = __webpack_require__(73221), template_dialog_payload_service = __webpack_require__(67489), map = __webpack_require__(14172), core = __webpack_require__(50423), data_sources_service = __webpack_require__(83008), data_source_serializer_service = __webpack_require__(40823), dax_template_telemetry_service = __webpack_require__(96899), template_dialog_component = __webpack_require__(96777), quick_measures_ui_template_contracts = __webpack_require__(64648), dax_template_dialog_utils = __webpack_require__(96739), sqExprUtils = __webpack_require__(45334), sqExprStaticMembers = __webpack_require__(74082), types_valueType = __webpack_require__(80777), fieldListPropertyExprGenerator = __webpack_require__(44529), pbi_menu_contracts = __webpack_require__(64560), take = __webpack_require__(48787), sq_aggregation_operations_service = __webpack_require__(28199), conceptual_schema_proxy_service = __webpack_require__(26898), grouping_design_state_service = __webpack_require__(23983), localization_service = __webpack_require__(65181), FieldListMenuStrategy = function() {
            function FieldListMenuStrategy(aggrOps, conceptualSchemaProxy, dataSourcesService, daxTemplateStore, groupingDesignStateService, localizationService) {
                this.aggrOps = aggrOps, this.conceptualSchemaProxy = conceptualSchemaProxy, this.dataSourcesService = dataSourcesService, 
                this.daxTemplateStore = daxTemplateStore, this.groupingDesignStateService = groupingDesignStateService, 
                this.localizationService = localizationService, this.menuMode = pbi_menu_contracts.Kb.Compact;
            }
            return FieldListMenuStrategy.prototype.getMenu = function(event) {
                var _this = this, menu = {
                    items: []
                };
                return this.daxTemplateStore.parameters$.pipe((0, take.q)(1)).subscribe(function(parameters) {
                    var flatNode = event.flatNode;
                    if (!flatNode) return menu;
                    var field = flatNode.node.data;
                    if (!parameters || !field) return menu;
                    if (parameters = _.pickBy(parameters, function(p) {
                        return dax_template_dialog_utils.M.isColumnOrMeasure(p.input) || dax_template_dialog_utils.M.isInstance(p.input);
                    }), _.isEmpty(parameters)) return menu;
                    if (function(field) {
                        return 0 === field.fieldType;
                    }(field) || function(field) {
                        return 2 === field.fieldType;
                    }(field)) return (addToMenuButton = _this.createAddToSubMenu()).menu = _this.createPropertyMenu(field.contract, parameters), 
                    menu.items = [ addToMenuButton ], menu;
                    if (function(field) {
                        return 4 === field.fieldType;
                    }(field) && 2 === field.kpiType || function(field) {
                        return field.isExtension;
                    }(field)) {
                        var addToMenuButton = _this.createAddToSubMenu(), allowedParams = _.pickBy(parameters, function(p) {
                            return isMeasureInput(p.input);
                        });
                        return addToMenuButton.menu = {
                            items: _this.convertParametersToMenuItems(allowedParams)
                        }, menu.items = [ addToMenuButton ], menu;
                    }
                }), _.isEmpty(menu.items) ? void 0 : menu;
            }, FieldListMenuStrategy.prototype.menuItemClick = function(event) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var selectedItem, parameterKey, parameter, fieldItem, fieldExpr, parameterInput, schema;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return debug.fF.assertValue(selectedItem = event.menuItem.data, "AddTo menu item"), 
                            selectedItem ? (parameter = selectedItem.parameter, fieldItem = event.flatNode.node.data, 
                            debug.fF.assertValue(parameterKey = selectedItem.parameterKey, "parameter key undefined in AddTo menu item"), 
                            debug.fF.assertValue(parameter, "parameter undefined in AddTo menu item"), debug.fF.assertValue(fieldItem, "fieldItem undefined"), 
                            parameterKey && parameter && fieldItem && (fieldExpr = (0, fieldListPropertyExprGenerator.Sd)(fieldItem, this.groupingDesignStateService)) ? (parameterInput = parameter.input, 
                            [ 4, this.conceptualSchemaProxy.get(this.dataSourcesService.get()) ]) : [ 2 ]) : [ 2 ];

                          case 1:
                            return schema = _a.sent(), dax_template_dialog_utils.M.isColumnOrMeasure(parameterInput) ? function(expr, parameterInput, schema) {
                                return !!parameterInput && isMeasureInput(parameterInput) && !sqExprUtils.m.discourageAggregation(expr, schema);
                            }(fieldExpr, parameterInput, schema) ? parameterInput.value = this.aggrOps.createExprWithAggregate(fieldExpr, schema, !0, getValueType(parameterInput.validationInfo)) : isMeasureInput(parameterInput) && !(0, 
                            sqExprStaticMembers.kb)(fieldExpr) || (parameterInput.value = fieldExpr) : dax_template_dialog_utils.M.isInstance(parameterInput) && (parameterInput.value.field = fieldExpr), 
                            this.daxTemplateStore.updateParameters(parameterInput, parameterKey), [ 2 ];
                        }
                    });
                });
            }, FieldListMenuStrategy.prototype.createPropertyMenu = function(conceptualProperty, parameters) {
                if (conceptualProperty.measure || conceptualProperty.column) {
                    var validParams, addToSubMenu = {
                        items: []
                    };
                    return conceptualProperty.column ? validParams = _.pickBy(parameters, function(p) {
                        if (dax_template_dialog_utils.M.isColumnOrMeasure(p.input) && !isMeasureInput(p.input)) {
                            var valueType = getValueType(p.input.validationInfo);
                            return _.isEmpty(valueType) || types_valueType.Ge.isCompatibleTo(conceptualProperty.type, valueType, !0);
                        }
                        return !0;
                    }) : conceptualProperty.measure && (validParams = _.pickBy(parameters, function(p) {
                        return isMeasureInput(p.input);
                    })), addToSubMenu.items = this.convertParametersToMenuItems(validParams), addToSubMenu;
                }
            }, FieldListMenuStrategy.prototype.createAddToSubMenu = function() {
                return {
                    text: this.localizationService.get("DaxTemplateDialog_AddToItemMenu"),
                    type: pbi_menu_contracts.iB.SubMenu
                };
            }, FieldListMenuStrategy.prototype.convertParametersToMenuItems = function(parameters) {
                return _.map(parameters, function(parameter, parameterKey) {
                    return {
                        text: parameter.displayName,
                        type: pbi_menu_contracts.iB.Button,
                        checked: !1,
                        data: {
                            parameterKey,
                            parameter
                        }
                    };
                });
            }, FieldListMenuStrategy.\u0275fac = function(t) {
                return new (t || FieldListMenuStrategy)(core["\u0275\u0275inject"](sq_aggregation_operations_service.C), core["\u0275\u0275inject"](conceptual_schema_proxy_service.i), core["\u0275\u0275inject"](data_sources_service.D), core["\u0275\u0275inject"](dax_template_store_service.Xy), core["\u0275\u0275inject"](grouping_design_state_service.AA), core["\u0275\u0275inject"](localization_service.o));
            }, FieldListMenuStrategy.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: FieldListMenuStrategy,
                factory: FieldListMenuStrategy.\u0275fac
            }), FieldListMenuStrategy;
        }();
        function isMeasureInput(parameterInput) {
            var _a;
            return !!dax_template_dialog_utils.M.isColumnOrMeasure(parameterInput) && 1 === (null === (_a = parameterInput.validationInfo.field) || void 0 === _a ? void 0 : _a.kind);
        }
        function getValueType(validationInfo) {
            var _a, type = null === (_a = null == validationInfo ? void 0 : validationInfo.field) || void 0 === _a ? void 0 : _a.type;
            if (type) return type.variant || [ type ];
        }
        var namedModelObjectUtils = __webpack_require__(70863), Subject = __webpack_require__(30794), takeUntil = __webpack_require__(83317), FieldListShowMenuSettingStrategy = function() {
            function FieldListShowMenuSettingStrategy(daxTemplateStore) {
                var _this = this;
                this.daxTemplateStore = daxTemplateStore, this.isTemplateSelected = !1, this.onDestroy$ = new Subject.xQ, 
                this.daxTemplateStore.isTemplateSelected$.pipe((0, takeUntil.R)(this.onDestroy$)).subscribe(function(isSelected) {
                    return _this.isTemplateSelected = isSelected;
                });
            }
            return FieldListShowMenuSettingStrategy.prototype.canShowMenu = function(data) {
                return namedModelObjectUtils.t3(data) || namedModelObjectUtils.kb(data) || namedModelObjectUtils.ez(data) ? this.isTemplateSelected : !(namedModelObjectUtils.wb(data) || namedModelObjectUtils.y3(data) || namedModelObjectUtils.Ov(data) || namedModelObjectUtils.jz(data)) && void 0;
            }, FieldListShowMenuSettingStrategy.prototype.ngOnDestroy = function() {
                this.onDestroy$.next(), this.onDestroy$.complete();
            }, FieldListShowMenuSettingStrategy.\u0275fac = function(t) {
                return new (t || FieldListShowMenuSettingStrategy)(core["\u0275\u0275inject"](dax_template_store_service.Xy));
            }, FieldListShowMenuSettingStrategy.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: FieldListShowMenuSettingStrategy,
                factory: FieldListShowMenuSettingStrategy.\u0275fac
            }), FieldListShowMenuSettingStrategy;
        }(), semanticQuerySerializer = __webpack_require__(3468), slicerMode = __webpack_require__(20598), VisualsData_displayNameGetter = __webpack_require__(21571), model_to_pbi_tree_draggable_item_strategy = __webpack_require__(88023), model_to_pbi_tree_show_menu_strategy = __webpack_require__(78963), field_list_tree_service = __webpack_require__(75096), pbi_tree_contracts = __webpack_require__(46015), combineLatest = __webpack_require__(59017), filter = __webpack_require__(59973), model_to_pbi_tree_caption_strategy = __webpack_require__(29524), model_to_pbi_tree_inline_item_strategy = __webpack_require__(72525), field_picker_modern_lazy_component = __webpack_require__(67930), instance_picker_modern_component = __webpack_require__(2839), localize_directive = __webpack_require__(59968), form_field = __webpack_require__(60733), tri_dropdown_component = __webpack_require__(20551), tri_dropdown_item_component = __webpack_require__(64716), tri_dropdown_item_menu_directive = __webpack_require__(85721), pbi_field_list_component = __webpack_require__(65005), pbi_icon_component = __webpack_require__(86663), pbi_spinner_component = __webpack_require__(24326), localize_pipe = __webpack_require__(85102);
        function QuickMeasuresTemplateComponent_div_1_ng_container_1_div_2_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementStart"](0, "div", 14), core["\u0275\u0275element"](1, "h4", 15), 
            core["\u0275\u0275elementEnd"]());
        }
        function QuickMeasuresTemplateComponent_div_1_ng_container_1_label_5_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "label"), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var templatesModel_r4 = core["\u0275\u0275nextContext"](2).ngIf, ctx_r8 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate"](ctx_r8.getDisplayNameFromGetter(templatesModel_r4.selectedTemplate.capabilities.displayName));
            }
        }
        function QuickMeasuresTemplateComponent_div_1_ng_container_1_label_6_Template(rf, ctx) {
            1 & rf && core["\u0275\u0275element"](0, "label", 16);
        }
        function QuickMeasuresTemplateComponent_div_1_ng_container_1_tri_dropdown_item_7_label_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "label", 20), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var item_r15 = core["\u0275\u0275nextContext"]().$implicit;
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate"](item_r15.value);
            }
        }
        function QuickMeasuresTemplateComponent_div_1_ng_container_1_tri_dropdown_item_7_label_2_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "label", 21), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var item_r15 = core["\u0275\u0275nextContext"]().$implicit, ctx_r17 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate"](ctx_r17.getDisplayNameFromGetter(item_r15.value.capabilities.displayName));
            }
        }
        function QuickMeasuresTemplateComponent_div_1_ng_container_1_tri_dropdown_item_7_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "tri-dropdown-item", 17), core["\u0275\u0275template"](1, QuickMeasuresTemplateComponent_div_1_ng_container_1_tri_dropdown_item_7_label_1_Template, 2, 1, "label", 18), 
            core["\u0275\u0275template"](2, QuickMeasuresTemplateComponent_div_1_ng_container_1_tri_dropdown_item_7_label_2_Template, 2, 1, "label", 19), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var item_r15 = ctx.$implicit;
                core["\u0275\u0275property"]("value", item_r15.value)("disabled", "category" === item_r15.kind), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", "category" === item_r15.kind), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", "daxTemplate" === item_r15.kind);
            }
        }
        function QuickMeasuresTemplateComponent_div_1_ng_container_1_div_8_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 22)(1, "mat-error", 23), 
            core["\u0275\u0275element"](2, "pbi-icon", 24)(3, "span", 25), core["\u0275\u0275elementEnd"]()()), 
            2 & rf) {
                var validation_r6 = core["\u0275\u0275nextContext"]().ngIf, templatesModel_r4 = core["\u0275\u0275nextContext"]().ngIf;
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("localize", validation_r6.result.warnings[templatesModel_r4.selectedTemplate]);
            }
        }
        function QuickMeasuresTemplateComponent_div_1_ng_container_1_div_9_a_3_Template(rf, ctx) {
            if (1 & rf && core["\u0275\u0275element"](0, "a", 29), 2 & rf) {
                var templatesModel_r4 = core["\u0275\u0275nextContext"](3).ngIf;
                core["\u0275\u0275property"]("href", "https://go.microsoft.com/fwlink/?linkid=" + templatesModel_r4.selectedTemplate.capabilities.helpLink, core["\u0275\u0275sanitizeUrl"]);
            }
        }
        function QuickMeasuresTemplateComponent_div_1_ng_container_1_div_9_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 26)(1, "span", 27), core["\u0275\u0275text"](2), 
            core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](3, QuickMeasuresTemplateComponent_div_1_ng_container_1_div_9_a_3_Template, 1, 1, "a", 28), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var templatesModel_r4 = core["\u0275\u0275nextContext"](2).ngIf, ctx_r12 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](2), core["\u0275\u0275textInterpolate1"](" ", ctx_r12.getDisplayNameFromGetter(templatesModel_r4.selectedTemplate.capabilities.description), " "), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", templatesModel_r4.selectedTemplate.capabilities.helpLink);
            }
        }
        function QuickMeasuresTemplateComponent_div_1_ng_container_1_div_10_ng_container_1_div_1_div_5_Template(rf, ctx) {
            if (1 & rf) {
                var _r38 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "div", 39)(1, "input", 40), core["\u0275\u0275listener"]("change", function($event) {
                    core["\u0275\u0275restoreView"](_r38);
                    var parameter_r29 = core["\u0275\u0275nextContext"]().ngIf, parameterObject_r27 = core["\u0275\u0275nextContext"]().$implicit, ctx_r36 = core["\u0275\u0275nextContext"](4);
                    return core["\u0275\u0275resetView"](ctx_r36.onNumberParameterChange($event.target.value, parameterObject_r27.key, parameter_r29.input));
                }), core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var parameter_r29 = core["\u0275\u0275nextContext"]().ngIf;
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("value", null == parameter_r29.input ? null : parameter_r29.input.value), 
                core["\u0275\u0275attribute"]("aria-label", parameter_r29.displayName);
            }
        }
        function QuickMeasuresTemplateComponent_div_1_ng_container_1_div_10_ng_container_1_div_1_tri_dropdown_6_tri_dropdown_item_4_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "tri-dropdown-item", 43)(1, "label", 44), 
            core["\u0275\u0275text"](2), core["\u0275\u0275elementEnd"]()()), 2 & rf) {
                var option_r42 = ctx.$implicit, ctx_r41 = core["\u0275\u0275nextContext"](7);
                core["\u0275\u0275property"]("value", option_r42), core["\u0275\u0275advance"](2), 
                core["\u0275\u0275textInterpolate"](ctx_r41.getDisplayNameFromGetter(option_r42.displayName));
            }
        }
        var _c0 = function() {
            return {
                panelClass: "dax-template-dropdown-panel"
            };
        };
        function QuickMeasuresTemplateComponent_div_1_ng_container_1_div_10_ng_container_1_div_1_tri_dropdown_6_Template(rf, ctx) {
            if (1 & rf) {
                var _r45 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "tri-dropdown", 41), core["\u0275\u0275listener"]("valueChange", function($event) {
                    core["\u0275\u0275restoreView"](_r45);
                    var parameter_r29 = core["\u0275\u0275nextContext"]().ngIf, parameterObject_r27 = core["\u0275\u0275nextContext"]().$implicit, ctx_r43 = core["\u0275\u0275nextContext"](4);
                    return core["\u0275\u0275resetView"](ctx_r43.onEnumParameterChange($event, parameterObject_r27.key, parameter_r29.input));
                }), core["\u0275\u0275elementStart"](1, "tri-dropdown-trigger", 8)(2, "label"), 
                core["\u0275\u0275text"](3), core["\u0275\u0275elementEnd"]()(), core["\u0275\u0275template"](4, QuickMeasuresTemplateComponent_div_1_ng_container_1_div_10_ng_container_1_div_1_tri_dropdown_6_tri_dropdown_item_4_Template, 3, 2, "tri-dropdown-item", 42), 
                core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var parameter_r29 = core["\u0275\u0275nextContext"]().ngIf, ctx_r31 = core["\u0275\u0275nextContext"](5);
                core["\u0275\u0275property"]("value", parameter_r29.input.value)("options", core["\u0275\u0275pureFunction0"](4, _c0)), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](ctx_r31.getDisplayNameFromGetter(parameter_r29.input.value.displayName)), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngForOf", null == parameter_r29.input ? null : parameter_r29.input.selectionOptions);
            }
        }
        var _c1 = function(a0) {
            return {
                expr: a0
            };
        };
        function QuickMeasuresTemplateComponent_div_1_ng_container_1_div_10_ng_container_1_div_1_field_picker_modern_lazy_7_Template(rf, ctx) {
            if (1 & rf) {
                var _r50 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "field-picker-modern-lazy", 45), core["\u0275\u0275listener"]("onExprChange", function($event) {
                    core["\u0275\u0275restoreView"](_r50);
                    var parameter_r29 = core["\u0275\u0275nextContext"]().ngIf, parameterObject_r27 = core["\u0275\u0275nextContext"]().$implicit, ctx_r48 = core["\u0275\u0275nextContext"](4);
                    return core["\u0275\u0275resetView"](ctx_r48.onFieldPickerChange(null == $event.newExpr ? null : $event.newExpr.expr, parameterObject_r27.key, parameter_r29.input));
                }), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var parameter_r29 = core["\u0275\u0275nextContext"]().ngIf;
                core["\u0275\u0275property"]("initialExpr", null != parameter_r29.input && parameter_r29.input.value ? core["\u0275\u0275pureFunction1"](3, _c1, parameter_r29.input.value) : void 0)("validators", null == parameter_r29.input ? null : parameter_r29.input.validationInfo)("withFieldList", !0);
            }
        }
        function QuickMeasuresTemplateComponent_div_1_ng_container_1_div_10_ng_container_1_div_1_ng_container_8_instance_picker_modern_2_Template(rf, ctx) {
            if (1 & rf) {
                var _r56 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementStart"](0, "instance-picker-modern", 48), core["\u0275\u0275listener"]("modelChange", function($event) {
                    core["\u0275\u0275restoreView"](_r56);
                    var parameter_r29 = core["\u0275\u0275nextContext"](2).ngIf, parameterObject_r27 = core["\u0275\u0275nextContext"]().$implicit, ctx_r54 = core["\u0275\u0275nextContext"](4);
                    return core["\u0275\u0275resetView"](ctx_r54.onInstanceValueChanged($event, parameterObject_r27.key, parameter_r29.input));
                }), core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var parameter_r29 = core["\u0275\u0275nextContext"](2).ngIf, ctx_r53 = core["\u0275\u0275nextContext"](5);
                core["\u0275\u0275property"]("field", null == parameter_r29.input || null == parameter_r29.input.value ? null : parameter_r29.input.value.field)("selectedValue", null == parameter_r29.input || null == parameter_r29.input.value ? null : parameter_r29.input.value.filter)("mode", ctx_r53.instancePickerMode);
            }
        }
        function QuickMeasuresTemplateComponent_div_1_ng_container_1_div_10_ng_container_1_div_1_ng_container_8_Template(rf, ctx) {
            if (1 & rf) {
                var _r61 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "field-picker-modern-lazy", 46), 
                core["\u0275\u0275listener"]("onExprChange", function($event) {
                    core["\u0275\u0275restoreView"](_r61);
                    var parameter_r29 = core["\u0275\u0275nextContext"]().ngIf, parameterObject_r27 = core["\u0275\u0275nextContext"]().$implicit, ctx_r59 = core["\u0275\u0275nextContext"](4);
                    return core["\u0275\u0275resetView"](ctx_r59.onInstanceFieldChange(null == $event.newExpr ? null : $event.newExpr.expr, parameterObject_r27.key, parameter_r29.input));
                }), core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](2, QuickMeasuresTemplateComponent_div_1_ng_container_1_div_10_ng_container_1_div_1_ng_container_8_instance_picker_modern_2_Template, 1, 3, "instance-picker-modern", 47), 
                core["\u0275\u0275elementContainerEnd"]();
            }
            if (2 & rf) {
                var parameter_r29 = core["\u0275\u0275nextContext"]().ngIf;
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("initialExpr", null != parameter_r29.input && null != parameter_r29.input.value && parameter_r29.input.value.field ? core["\u0275\u0275pureFunction1"](4, _c1, parameter_r29.input.value.field) : void 0)("validators", null == parameter_r29.input ? null : parameter_r29.input.validationInfo)("withFieldList", !0), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", null == parameter_r29.input || null == parameter_r29.input.value ? null : parameter_r29.input.value.field);
            }
        }
        function QuickMeasuresTemplateComponent_div_1_ng_container_1_div_10_ng_container_1_div_1_div_9_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 22)(1, "mat-error", 49), 
            core["\u0275\u0275element"](2, "pbi-icon", 50)(3, "span", 25), core["\u0275\u0275elementEnd"]()()), 
            2 & rf) {
                var parameterObject_r27 = core["\u0275\u0275nextContext"](2).$implicit, validation_r6 = core["\u0275\u0275nextContext"](2).ngIf;
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("localize", validation_r6.result.errors[parameterObject_r27.key]);
            }
        }
        function QuickMeasuresTemplateComponent_div_1_ng_container_1_div_10_ng_container_1_div_1_div_10_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 22)(1, "mat-error", 23), 
            core["\u0275\u0275element"](2, "pbi-icon", 24)(3, "span", 25), core["\u0275\u0275elementEnd"]()()), 
            2 & rf) {
                var parameterObject_r27 = core["\u0275\u0275nextContext"](2).$implicit, validation_r6 = core["\u0275\u0275nextContext"](2).ngIf;
                core["\u0275\u0275advance"](3), core["\u0275\u0275property"]("localize", validation_r6.result.warnings[parameterObject_r27.key]);
            }
        }
        function QuickMeasuresTemplateComponent_div_1_ng_container_1_div_10_ng_container_1_div_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 33)(1, "div", 14)(2, "h4"), 
            core["\u0275\u0275text"](3), core["\u0275\u0275elementEnd"](), core["\u0275\u0275element"](4, "pbi-icon", 34), 
            core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](5, QuickMeasuresTemplateComponent_div_1_ng_container_1_div_10_ng_container_1_div_1_div_5_Template, 2, 2, "div", 35), 
            core["\u0275\u0275template"](6, QuickMeasuresTemplateComponent_div_1_ng_container_1_div_10_ng_container_1_div_1_tri_dropdown_6_Template, 5, 5, "tri-dropdown", 36), 
            core["\u0275\u0275template"](7, QuickMeasuresTemplateComponent_div_1_ng_container_1_div_10_ng_container_1_div_1_field_picker_modern_lazy_7_Template, 1, 5, "field-picker-modern-lazy", 37), 
            core["\u0275\u0275template"](8, QuickMeasuresTemplateComponent_div_1_ng_container_1_div_10_ng_container_1_div_1_ng_container_8_Template, 3, 6, "ng-container", 38), 
            core["\u0275\u0275template"](9, QuickMeasuresTemplateComponent_div_1_ng_container_1_div_10_ng_container_1_div_1_div_9_Template, 4, 1, "div", 11), 
            core["\u0275\u0275template"](10, QuickMeasuresTemplateComponent_div_1_ng_container_1_div_10_ng_container_1_div_1_div_10_Template, 4, 1, "div", 11), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var parameter_r29 = ctx.ngIf, parameterObject_r27 = core["\u0275\u0275nextContext"]().$implicit, validation_r6 = core["\u0275\u0275nextContext"](2).ngIf, ctx_r28 = core["\u0275\u0275nextContext"](2);
                core["\u0275\u0275property"]("ngSwitch", null == parameter_r29.input ? null : parameter_r29.input.kind), 
                core["\u0275\u0275advance"](3), core["\u0275\u0275textInterpolate"](parameter_r29.displayName), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275propertyInterpolate"]("title", parameter_r29.description), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", ctx_r28.DaxTemplateParameterKind.Number), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", ctx_r28.DaxTemplateParameterKind.Enum), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", ctx_r28.DaxTemplateParameterKind.Field), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngSwitchCase", ctx_r28.DaxTemplateParameterKind.Instance), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", validation_r6.result.errors[parameterObject_r27.key] && parameter_r29.hasBeenSet), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", validation_r6.result.warnings[parameterObject_r27.key] && parameter_r29.hasBeenSet);
            }
        }
        function QuickMeasuresTemplateComponent_div_1_ng_container_1_div_10_ng_container_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275template"](1, QuickMeasuresTemplateComponent_div_1_ng_container_1_div_10_ng_container_1_div_1_Template, 11, 9, "div", 32), 
            core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var parameterObject_r27 = ctx.$implicit;
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", parameterObject_r27.value);
            }
        }
        function QuickMeasuresTemplateComponent_div_1_ng_container_1_div_10_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 30), core["\u0275\u0275template"](1, QuickMeasuresTemplateComponent_div_1_ng_container_1_div_10_ng_container_1_Template, 2, 1, "ng-container", 31), 
            core["\u0275\u0275pipe"](2, "keyvalue"), core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var parameters_r25 = ctx.ngIf, ctx_r13 = core["\u0275\u0275nextContext"](3);
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngForOf", core["\u0275\u0275pipeBind2"](2, 1, parameters_r25, ctx_r13.parameterDisplayOrder));
            }
        }
        function QuickMeasuresTemplateComponent_div_1_ng_container_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r71 = core["\u0275\u0275getCurrentView"]();
                core["\u0275\u0275elementContainerStart"](0), core["\u0275\u0275elementStart"](1, "div"), 
                core["\u0275\u0275template"](2, QuickMeasuresTemplateComponent_div_1_ng_container_1_div_2_Template, 2, 0, "div", 6), 
                core["\u0275\u0275elementStart"](3, "tri-dropdown", 7), core["\u0275\u0275listener"]("valueChange", function($event) {
                    core["\u0275\u0275restoreView"](_r71);
                    var ctx_r70 = core["\u0275\u0275nextContext"](2);
                    return core["\u0275\u0275resetView"](ctx_r70.onTemplateSelectionChange($event));
                }), core["\u0275\u0275elementStart"](4, "tri-dropdown-trigger", 8), core["\u0275\u0275template"](5, QuickMeasuresTemplateComponent_div_1_ng_container_1_label_5_Template, 2, 1, "label", 5), 
                core["\u0275\u0275template"](6, QuickMeasuresTemplateComponent_div_1_ng_container_1_label_6_Template, 1, 0, "label", 9), 
                core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](7, QuickMeasuresTemplateComponent_div_1_ng_container_1_tri_dropdown_item_7_Template, 3, 4, "tri-dropdown-item", 10), 
                core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](8, QuickMeasuresTemplateComponent_div_1_ng_container_1_div_8_Template, 4, 1, "div", 11), 
                core["\u0275\u0275template"](9, QuickMeasuresTemplateComponent_div_1_ng_container_1_div_9_Template, 4, 2, "div", 12), 
                core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](10, QuickMeasuresTemplateComponent_div_1_ng_container_1_div_10_Template, 3, 4, "div", 13), 
                core["\u0275\u0275pipe"](11, "async"), core["\u0275\u0275elementContainerEnd"]();
            }
            if (2 & rf) {
                var validation_r6 = ctx.ngIf, templatesModel_r4 = core["\u0275\u0275nextContext"]().ngIf, ctx_r5 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", ctx_r5.showFieldList), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("value", templatesModel_r4.selectedTemplate)("options", core["\u0275\u0275pureFunction0"](11, _c0)), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("ngIf", templatesModel_r4.selectedTemplate), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !templatesModel_r4.selectedTemplate), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngForOf", templatesModel_r4.flattenedTemplatesAndCategory), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", validation_r6.result.warnings[templatesModel_r4.selectedTemplate]), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", templatesModel_r4.selectedTemplate), 
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](11, 9, null == ctx_r5.daxTemplateStore ? null : ctx_r5.daxTemplateStore.parameters$));
            }
        }
        function QuickMeasuresTemplateComponent_div_1_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 4), core["\u0275\u0275template"](1, QuickMeasuresTemplateComponent_div_1_ng_container_1_Template, 12, 12, "ng-container", 5), 
            core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r0 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](2, 1, null == ctx_r0.daxTemplateStore ? null : ctx_r0.daxTemplateStore.validation$));
            }
        }
        function QuickMeasuresTemplateComponent_ng_template_3_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementStart"](0, "div", 51), core["\u0275\u0275element"](1, "pbi-spinner", 52)(2, "span", 53), 
            core["\u0275\u0275elementEnd"]());
        }
        function QuickMeasuresTemplateComponent_div_5_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 54)(1, "div", 14), core["\u0275\u0275element"](2, "h4", 55), 
            core["\u0275\u0275pipe"](3, "localize"), core["\u0275\u0275elementEnd"](), core["\u0275\u0275element"](4, "pbi-field-list", 56), 
            core["\u0275\u0275pipe"](5, "async"), core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r3 = core["\u0275\u0275nextContext"]();
                core["\u0275\u0275advance"](2), core["\u0275\u0275attribute"]("aria-label", core["\u0275\u0275pipeBind1"](3, 5, "TaskPane_Fields")), 
                core["\u0275\u0275advance"](2), core["\u0275\u0275property"]("fieldListTree", core["\u0275\u0275pipeBind1"](5, 7, ctx_r3.fieldListTree$))("scrollSelectedItemIntoViewOnInit", !0)("hasHighlights", !1)("options", ctx_r3.fieldListTreeOptions);
            }
        }
        var _c2 = function(a0) {
            return {
                "grid-template-columns": a0
            };
        }, FieldItemDraggableStrategy = function() {
            function FieldItemDraggableStrategy() {}
            return FieldItemDraggableStrategy.prototype.isDraggable = function(data) {
                return !namedModelObjectUtils.wb(data) && !namedModelObjectUtils.y3(data) && (!!(namedModelObjectUtils.t3(data) || namedModelObjectUtils.kb(data) || namedModelObjectUtils.ez(data)) || void 0);
            }, FieldItemDraggableStrategy;
        }(), QuickMeasuresTemplateComponent = function(_super) {
            function QuickMeasuresTemplateComponent(daxTemplateStore, captionSetting, draggableSetting, inlineItemsSetting, showMenuSetting, fieldListMenuStrategy, fieldListTreeService, groupingDesignStateService, localizationService, modelService) {
                var _this = _super.call(this) || this;
                return _this.daxTemplateStore = daxTemplateStore, _this.captionSetting = captionSetting, 
                _this.draggableSetting = draggableSetting, _this.inlineItemsSetting = inlineItemsSetting, 
                _this.showMenuSetting = showMenuSetting, _this.fieldListMenuStrategy = fieldListMenuStrategy, 
                _this.fieldListTreeService = fieldListTreeService, _this.groupingDesignStateService = groupingDesignStateService, 
                _this.localizationService = localizationService, _this.modelService = modelService, 
                _this.showFieldList = !0, _this.fieldListTree$ = _this.fieldListTreeService.fieldListTree$, 
                _this.parameterPickerDataFormat = pbi_tree_contracts.L$, _this.instancePickerMode = slicerMode.j6, 
                _this.DaxTemplateParameterKind = quick_measures_ui_template_contracts._, _this.parameterDisplayOrder = function() {
                    return 0;
                }, _this.fieldListTreeOptions = {
                    dragDrop: {
                        dragStart: function(_a) {
                            return _this.dragStartHandler(_a.sourceEvent, _a.flatNode);
                        }
                    },
                    menu: _this.fieldListMenuStrategy,
                    editLabel: null
                }, _this.pbiTreeNodeSettingOptions = {
                    captionSetting: _this.captionSetting,
                    draggableSetting: _this.draggableSetting,
                    inlineItemsSetting: _this.inlineItemsSetting,
                    showMenuSetting: _this.showMenuSetting
                }, _this.fieldListTreeService.modelToPbiTreeConverterOptions = _this.pbiTreeNodeSettingOptions, 
                _this;
            }
            return (0, tslib_es6.__extends)(QuickMeasuresTemplateComponent, _super), QuickMeasuresTemplateComponent.prototype.ngOnInit = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return this.showFieldList ? [ 4, this.buildFieldListTree() ] : [ 3, 2 ];

                          case 1:
                            _a.sent(), _a.label = 2;

                          case 2:
                            return [ 2 ];
                        }
                    });
                });
            }, QuickMeasuresTemplateComponent.prototype.onTemplateSelectionChange = function(selectedTemplate) {
                this.daxTemplateStore.updateSelectedTemplate(selectedTemplate);
            }, QuickMeasuresTemplateComponent.prototype.onEnumParameterChange = function(value, parameterKey, parameterInput) {
                parameterInput.value = value, this.daxTemplateStore.updateParameters(parameterInput, parameterKey);
            }, QuickMeasuresTemplateComponent.prototype.onNumberParameterChange = function(value, parameterKey, parameterInput) {
                parameterInput.value = Number(value), Number.isNaN(parameterInput.value) && (parameterInput.value = 0), 
                this.daxTemplateStore.updateParameters(parameterInput, parameterKey);
            }, QuickMeasuresTemplateComponent.prototype.onFieldPickerChange = function(expr, parameterKey, parameterInput) {
                parameterInput.value = expr, this.daxTemplateStore.updateParameters(parameterInput, parameterKey);
            }, QuickMeasuresTemplateComponent.prototype.onInstanceFieldChange = function(expr, parameterKey, parameterInput) {
                parameterInput.value.field = expr, this.daxTemplateStore.updateParameters(parameterInput, parameterKey);
            }, QuickMeasuresTemplateComponent.prototype.onInstanceValueChanged = function(instancePickerValue, parameterKey, parameterInput) {
                parameterInput.value = instancePickerValue, this.daxTemplateStore.updateParameters(parameterInput, parameterKey);
            }, QuickMeasuresTemplateComponent.prototype.getDisplayNameFromGetter = function(displayNameGetter) {
                return (0, VisualsData_displayNameGetter.G)(displayNameGetter, this.localizationService);
            }, QuickMeasuresTemplateComponent.prototype.buildFieldListTree = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var _this = this;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.modelService.update([]) ];

                          case 1:
                            return _a.sent(), (0, combineLatest.aj)([ this.modelService.modelChange$, this.daxTemplateStore.isTemplateSelected$ ]).pipe((0, 
                            takeUntil.R)(this.onDestroy$), (0, filter.h)(function(_a) {
                                var fieldListModelChange = _a[0];
                                return !!(null == fieldListModelChange ? void 0 : fieldListModelChange.model);
                            }), (0, map.U)(function(_a) {
                                return _a[0].model;
                            })).subscribe(function(fieldListModel) {
                                _this.fieldListTreeService.setOrUpdateFieldListTreeModel(fieldListModel, []);
                            }), [ 2 ];
                        }
                    });
                });
            }, QuickMeasuresTemplateComponent.prototype.dragStartHandler = function(sourceEvent, flatNode) {
                var node = flatNode.node, fieldExpr = node.data ? (0, fieldListPropertyExprGenerator.Sd)(node.data, this.groupingDesignStateService) : void 0;
                if (null != fieldExpr) {
                    var dragData = {
                        id: node.id,
                        icon: node.icon,
                        label: node.displayName,
                        fieldExpr: semanticQuerySerializer.ib.serializeExpr(fieldExpr)
                    };
                    sourceEvent.dataTransfer.setData(pbi_tree_contracts.L$, JSON.stringify(dragData));
                }
            }, QuickMeasuresTemplateComponent.prototype.ngOnDestroy = function() {
                return _super.prototype.ngOnDestroy.call(this);
            }, QuickMeasuresTemplateComponent.\u0275fac = function(t) {
                return new (t || QuickMeasuresTemplateComponent)(core["\u0275\u0275directiveInject"](dax_template_store_service.Xy), core["\u0275\u0275directiveInject"](model_to_pbi_tree_caption_strategy.B), core["\u0275\u0275directiveInject"](model_to_pbi_tree_draggable_item_strategy.F), core["\u0275\u0275directiveInject"](model_to_pbi_tree_inline_item_strategy.wt), core["\u0275\u0275directiveInject"](model_to_pbi_tree_show_menu_strategy.W), core["\u0275\u0275directiveInject"](FieldListMenuStrategy), core["\u0275\u0275directiveInject"](field_list_tree_service.p), core["\u0275\u0275directiveInject"](grouping_design_state_service.AA), core["\u0275\u0275directiveInject"](localization_service.o), core["\u0275\u0275directiveInject"](model_service.b));
            }, QuickMeasuresTemplateComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: QuickMeasuresTemplateComponent,
                selectors: [ [ "quick-measures-template" ] ],
                inputs: {
                    showFieldList: "showFieldList"
                },
                features: [ core["\u0275\u0275ProvidersFeature"]([ {
                    provide: model_to_pbi_tree_draggable_item_strategy.F,
                    useClass: FieldItemDraggableStrategy
                }, {
                    provide: model_to_pbi_tree_show_menu_strategy.W,
                    useClass: FieldListShowMenuSettingStrategy
                }, FieldListMenuStrategy, field_list_tree_service.p ]), core["\u0275\u0275InheritDefinitionFeature"] ],
                decls: 6,
                vars: 8,
                consts: [ [ 1, "container", 3, "ngStyle" ], [ "class", "daxTemplateContainer", 4, "ngIf", "ngIfElse" ], [ "templateLoading", "" ], [ "class", "daxFieldListContainer", 4, "ngIf" ], [ 1, "daxTemplateContainer" ], [ 4, "ngIf" ], [ "class", "label", 4, "ngIf" ], [ "id", "templateSelector", 1, "tri-caption1", 3, "value", "options", "valueChange" ], [ 1, "dropdownTrigger" ], [ "localize", "DaxTemplateDialog_SelectMeasurePrompt", 4, "ngIf" ], [ "class", "dropdownItem tri-caption1", 3, "value", "disabled", 4, "ngFor", "ngForOf" ], [ "role", "alert", "aria-live", "polite", 4, "ngIf" ], [ "class", "description", 4, "ngIf" ], [ "class", "parameterContainer", 4, "ngIf" ], [ 1, "label" ], [ "for", "templateSelector", "localize", "DaxTemplateDialog_CalculationTitle" ], [ "localize", "DaxTemplateDialog_SelectMeasurePrompt" ], [ 1, "dropdownItem", "tri-caption1", 3, "value", "disabled" ], [ "class", "dropdownItemContent category", 4, "ngIf" ], [ "class", "dropdownItemContent template", 4, "ngIf" ], [ 1, "dropdownItemContent", "category" ], [ 1, "dropdownItemContent", "template" ], [ "role", "alert", "aria-live", "polite" ], [ 1, "validation", "warning", "label" ], [ "name", "warning", "size", "mini" ], [ 1, "text", 3, "localize" ], [ 1, "description" ], [ "role", "text" ], [ "target", "_blank", "class", "pbi-external-link fluentTheme-sm-reg", "localize", "Generic_LearnMore", 3, "href", 4, "ngIf" ], [ "target", "_blank", "localize", "Generic_LearnMore", 1, "pbi-external-link", "fluentTheme-sm-reg", 3, "href" ], [ 1, "parameterContainer" ], [ 4, "ngFor", "ngForOf" ], [ 3, "ngSwitch", 4, "ngIf" ], [ 3, "ngSwitch" ], [ "name", "info", "size", "mini", "aria-hidden", "true", 3, "title" ], [ "tri-textfield", "", "class", "tri-flex tri-flex-col", 4, "ngSwitchCase" ], [ "class", "tri-caption1", 3, "value", "options", "valueChange", 4, "ngSwitchCase" ], [ 3, "initialExpr", "validators", "withFieldList", "onExprChange", 4, "ngSwitchCase" ], [ 4, "ngSwitchCase" ], [ "tri-textfield", "", 1, "tri-flex", "tri-flex-col" ], [ "type", "number", 1, "numberInput", 3, "value", "change" ], [ 1, "tri-caption1", 3, "value", "options", "valueChange" ], [ "class", "dropdownItem tri-caption1", 3, "value", 4, "ngFor", "ngForOf" ], [ 1, "dropdownItem", "tri-caption1", 3, "value" ], [ 1, "dropdownItemContent" ], [ 3, "initialExpr", "validators", "withFieldList", "onExprChange" ], [ "aria-controls", "instancePickerControl", 3, "initialExpr", "validators", "withFieldList", "onExprChange" ], [ "id", "instancePickerControl", "aria-live", "polite", 3, "field", "selectedValue", "mode", "modelChange", 4, "ngIf" ], [ "id", "instancePickerControl", "aria-live", "polite", 3, "field", "selectedValue", "mode", "modelChange" ], [ 1, "validation", "error", "label" ], [ "name", "status-error-full", "size", "mini", "aria-hidden", "true" ], [ "aria-live", "polite", "role", "status", 1, "templateLoadingMessage" ], [ "aria-busy", "true", 1, "pbi-spinner-small" ], [ "localize", "DaxTemplateDialog_TemplateLoadingMessage", 1, "text" ], [ 1, "daxFieldListContainer" ], [ "localize", "TaskPane_Fields" ], [ 1, "fieldList", 3, "fieldListTree", "scrollSelectedItemIntoViewOnInit", "hasHighlights", "options" ] ],
                template: function(rf, ctx) {
                    if (1 & rf && (core["\u0275\u0275elementStart"](0, "div", 0), core["\u0275\u0275template"](1, QuickMeasuresTemplateComponent_div_1_Template, 3, 3, "div", 1), 
                    core["\u0275\u0275pipe"](2, "async"), core["\u0275\u0275template"](3, QuickMeasuresTemplateComponent_ng_template_3_Template, 3, 0, "ng-template", null, 2, core["\u0275\u0275templateRefExtractor"]), 
                    core["\u0275\u0275template"](5, QuickMeasuresTemplateComponent_div_5_Template, 6, 9, "div", 3), 
                    core["\u0275\u0275elementEnd"]()), 2 & rf) {
                        var _r1 = core["\u0275\u0275reference"](4);
                        core["\u0275\u0275property"]("ngStyle", core["\u0275\u0275pureFunction1"](6, _c2, ctx.showFieldList ? "repeat(2, 1fr)" : "1fr")), 
                        core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", core["\u0275\u0275pipeBind1"](2, 4, null == ctx.daxTemplateStore ? null : ctx.daxTemplateStore.templatesModel$))("ngIfElse", _r1), 
                        core["\u0275\u0275advance"](4), core["\u0275\u0275property"]("ngIf", ctx.showFieldList);
                    }
                },
                dependencies: [ common.NgForOf, common.NgIf, common.NgStyle, common.NgSwitch, common.NgSwitchCase, field_picker_modern_lazy_component.m, instance_picker_modern_component.O, localize_directive.X, form_field.TO, tri_dropdown_component.M3, tri_dropdown_item_component.l, tri_dropdown_item_menu_directive.q, tri_dropdown_component.ii, pbi_field_list_component.l, pbi_icon_component._, pbi_spinner_component.k, common.AsyncPipe, common.KeyValuePipe, localize_pipe.F ],
                styles: [ '.container[_ngcontent-%COMP%]{display:grid;height:100%;width:100%;column-gap:2em;color:var(--colorNeutralForeground1);font-size:var(--sm-font-size, 12px)}.container[_ngcontent-%COMP%]   .daxTemplateContainer[_ngcontent-%COMP%]{display:flex;flex-direction:column;row-gap:2em;height:100%;width:100%;overflow:hidden}.container[_ngcontent-%COMP%]   .daxTemplateContainer[_ngcontent-%COMP%]   tri-dropdown[_ngcontent-%COMP%]{width:100%}.container[_ngcontent-%COMP%]   .daxTemplateContainer[_ngcontent-%COMP%]   .description[_ngcontent-%COMP%]{line-height:1.2em}html:not([dir="rtl"])[_nghost-%COMP%]   .container[_ngcontent-%COMP%]   .daxTemplateContainer[_ngcontent-%COMP%]   .description[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .container[_ngcontent-%COMP%]   .daxTemplateContainer[_ngcontent-%COMP%]   .description[_ngcontent-%COMP%]{margin:5px 0 15px}html[dir="rtl"][_nghost-%COMP%]   .container[_ngcontent-%COMP%]   .daxTemplateContainer[_ngcontent-%COMP%]   .description[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .container[_ngcontent-%COMP%]   .daxTemplateContainer[_ngcontent-%COMP%]   .description[_ngcontent-%COMP%]{margin:5px 0 15px}.container[_ngcontent-%COMP%]   .daxTemplateContainer[_ngcontent-%COMP%]   .parameterContainer[_ngcontent-%COMP%]{display:flex;flex-direction:column;row-gap:1.8em}.container[_ngcontent-%COMP%]   .daxTemplateContainer[_ngcontent-%COMP%]   .parameterContainer[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{width:100%}.container[_ngcontent-%COMP%]   .daxTemplateContainer[_ngcontent-%COMP%]   .parameterContainer[_ngcontent-%COMP%]   input[type=number][_ngcontent-%COMP%]::-webkit-outer-spin-button, .container[_ngcontent-%COMP%]   .daxTemplateContainer[_ngcontent-%COMP%]   .parameterContainer[_ngcontent-%COMP%]   input[type=number][_ngcontent-%COMP%]::-webkit-inner-spin-button{-webkit-appearance:none;-moz-appearance:textfield;margin:0}.container[_ngcontent-%COMP%]   .daxTemplateContainer[_ngcontent-%COMP%]   .parameterContainer[_ngcontent-%COMP%]   instance-picker-modern[_ngcontent-%COMP%]{display:block}.container[_ngcontent-%COMP%]   .daxTemplateContainer[_ngcontent-%COMP%]   .validation[_ngcontent-%COMP%]{display:flex;flex-direction:row;justify-content:flex-start;column-gap:3px;margin-top:8px}.container[_ngcontent-%COMP%]   .daxTemplateContainer[_ngcontent-%COMP%]   .validation.error[_ngcontent-%COMP%]{color:var(--colorDangerForeground1)}.container[_ngcontent-%COMP%]   .daxTemplateContainer[_ngcontent-%COMP%]   .validation.warning[_ngcontent-%COMP%]{color:var(--colorWarningForeground1)}.container[_ngcontent-%COMP%]   .daxTemplateContainer[_ngcontent-%COMP%]   pbi-form-field[_ngcontent-%COMP%]   input[type=number][_ngcontent-%COMP%]{-moz-appearance:textfield}.container[_ngcontent-%COMP%]   .daxTemplateContainer[_ngcontent-%COMP%]   pbi-form-field[_ngcontent-%COMP%]   input[type=number][_ngcontent-%COMP%]::-webkit-inner-spin-button, .container[_ngcontent-%COMP%]   .daxTemplateContainer[_ngcontent-%COMP%]   pbi-form-field[_ngcontent-%COMP%]   input[type=number][_ngcontent-%COMP%]::-webkit-outer-spin-button{-webkit-appearance:none;margin:0}.container[_ngcontent-%COMP%]   .daxFieldListContainer[_ngcontent-%COMP%]{height:100%;display:flex;flex-direction:column}.container[_ngcontent-%COMP%]   .label[_ngcontent-%COMP%]{display:flex;margin-bottom:5px;line-height:20px}.container[_ngcontent-%COMP%]   .label[_ngcontent-%COMP%]   h4[_ngcontent-%COMP%]{align-self:center;font-size:var(--lg-font-size, 16px);font-weight:400;margin-top:0;margin-bottom:0}html:not([dir="rtl"])[_nghost-%COMP%]   .container[_ngcontent-%COMP%]   .label[_ngcontent-%COMP%]   h4[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .container[_ngcontent-%COMP%]   .label[_ngcontent-%COMP%]   h4[_ngcontent-%COMP%]{margin-left:0}html[dir="rtl"][_nghost-%COMP%]   .container[_ngcontent-%COMP%]   .label[_ngcontent-%COMP%]   h4[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .container[_ngcontent-%COMP%]   .label[_ngcontent-%COMP%]   h4[_ngcontent-%COMP%]{margin-right:0}html:not([dir="rtl"])[_nghost-%COMP%]   .container[_ngcontent-%COMP%]   .label[_ngcontent-%COMP%]   h4[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .container[_ngcontent-%COMP%]   .label[_ngcontent-%COMP%]   h4[_ngcontent-%COMP%]{margin-right:6px}html[dir="rtl"][_nghost-%COMP%]   .container[_ngcontent-%COMP%]   .label[_ngcontent-%COMP%]   h4[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .container[_ngcontent-%COMP%]   .label[_ngcontent-%COMP%]   h4[_ngcontent-%COMP%]{margin-left:6px}.container[_ngcontent-%COMP%]   .label[_ngcontent-%COMP%]   pbi-icon[_ngcontent-%COMP%]{align-self:center;height:18px}  .dax-template-dropdown-panel tri-dropdown-item label.dropdownItemContent{font-size:var(--sm-font-size);color:var(--colorNeutralForeground1)}  .dax-template-dropdown-panel tri-dropdown-item label.dropdownItemContent.template{margin:0 16px}  .dax-template-dropdown-panel tri-dropdown-item label.dropdownItemContent.category{font-weight:600}' ]
            }), QuickMeasuresTemplateComponent;
        }(rx_component.w), DaxTemplateDialogComponent = function(_super) {
            function DaxTemplateDialogComponent(dataSourcesService, daxTemplateStore, daxTemplateTelemetry, templateDialogPayload, dataSourceSerializer) {
                var _this = _super.call(this) || this;
                return _this.dataSourcesService = dataSourcesService, _this.daxTemplateStore = daxTemplateStore, 
                _this.daxTemplateTelemetry = daxTemplateTelemetry, _this.templateDialogPayload = templateDialogPayload, 
                _this.dataSourceSerializer = dataSourceSerializer, _this;
            }
            return (0, tslib_es6.__extends)(DaxTemplateDialogComponent, _super), DaxTemplateDialogComponent.prototype.ngOnInit = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var dataSourceArray, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return debug.fF.assertValue(this.templateDialogPayload.input, "templateDialogPayload input"), 
                            dataSourceArray = this.dataSourceSerializer.deserializeDataSources(this.templateDialogPayload.input.dataSources), 
                            this.dataSourcesService.set(dataSourceArray), [ 4, this.daxTemplateStore.initialize(this.templateDialogPayload.input) ];

                          case 1:
                            return _a.sent(), this.templateDialogPayload.onOkButtonClick = function() {
                                return _this.onCommit();
                            }, this.templateDialogPayload.onCancelButtonClick = function() {
                                return _this.onCancel();
                            }, this.disableCommit$ = this.daxTemplateStore.validation$.pipe((0, map.U)(function(_a) {
                                var allParametersSet = _a.allParametersSet;
                                return !_.isEmpty(_a.result.errors) || !allParametersSet;
                            })), this.lifecycleSubscriptions.add(this.disableCommit$.subscribe(function(disableCommit) {
                                return _this.templateDialogPayload.setOkButtonState(disableCommit);
                            })), [ 2 ];
                        }
                    });
                });
            }, DaxTemplateDialogComponent.prototype.onCommit = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var newMeasureResult;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.daxTemplateStore.getNewMeasureResult() ];

                          case 1:
                            return newMeasureResult = _a.sent(), debug.fF.assertValue(newMeasureResult, "new quick measure result"), 
                            newMeasureResult ? (this.daxTemplateTelemetry.resolveTemplateSelectedEvent(!0), 
                            [ 2, newMeasureResult ]) : [ 2 ];
                        }
                    });
                });
            }, DaxTemplateDialogComponent.prototype.onCancel = function() {
                return this.daxTemplateTelemetry.resolveTemplateSelectedEvent(), Promise.resolve(void 0);
            }, DaxTemplateDialogComponent.prototype.ngOnDestroy = function() {
                return this.daxTemplateStore.destroy(), _super.prototype.ngOnDestroy.call(this);
            }, DaxTemplateDialogComponent.\u0275fac = function(t) {
                return new (t || DaxTemplateDialogComponent)(core["\u0275\u0275directiveInject"](data_sources_service.D), core["\u0275\u0275directiveInject"](dax_template_store_service.Xy), core["\u0275\u0275directiveInject"](dax_template_telemetry_service.W), core["\u0275\u0275directiveInject"](template_dialog_payload_service.x), core["\u0275\u0275directiveInject"](data_source_serializer_service._));
            }, DaxTemplateDialogComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: DaxTemplateDialogComponent,
                selectors: [ [ "quick-measures-dialog" ] ],
                features: [ core["\u0275\u0275ProvidersFeature"]([ template_dialog_payload_service.x, dax_template_store_service.Xy, model_service.b ]), core["\u0275\u0275InheritDefinitionFeature"] ],
                decls: 2,
                vars: 1,
                consts: [ [ 3, "showFieldList" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementStart"](0, "template-dialog"), core["\u0275\u0275element"](1, "quick-measures-template", 0), 
                    core["\u0275\u0275elementEnd"]()), 2 & rf && (core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("showFieldList", !0));
                },
                dependencies: [ template_dialog_component.J, QuickMeasuresTemplateComponent ],
                styles: [ "quick-measures-template[_ngcontent-%COMP%]{display:block;height:592px;width:642px}" ]
            }), DaxTemplateDialogComponent;
        }(rx_component.w), quick_measures_dialog_identifier = __webpack_require__(22695), manifests = [ {
            type: QuickMeasuresTemplateComponent,
            componentId: "QuickMeasuresTemplateComponentId"
        } ], QuickMeasuresUIModule = function() {
            function QuickMeasuresUIModule() {}
            return QuickMeasuresUIModule.\u0275fac = function(t) {
                return new (t || QuickMeasuresUIModule);
            }, QuickMeasuresUIModule.\u0275mod = core["\u0275\u0275defineNgModule"]({
                type: QuickMeasuresUIModule
            }), QuickMeasuresUIModule.\u0275inj = core["\u0275\u0275defineInjector"]({
                imports: [ common.CommonModule, ExploreUI_module.J, lazy_load_module.N.withManifests(manifests), localization_module.v, fesm2022_select.LD, tri_dropdown.lK, pbi_drag_drop_picker_module.K, pbi_field_list_module.X, pbi_form_field_module.g, pbi_icon_module.U, pbi_menu_module.b, pbi_spinner_module.H, pbi_tooltip_module.Z, pbi_tree_module.J, dialogs_module.c.withManifest([ {
                    componentIdentifier: quick_measures_dialog_identifier.T,
                    componentType: DaxTemplateDialogComponent
                } ]) ]
            }), QuickMeasuresUIModule;
        }();
    },
    92630: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            Xy: function() {
                return DaxTemplateStoreService;
            }
        });
        var tslib_es6 = __webpack_require__(81337), quick_measures_ui_template_contracts = __webpack_require__(64648), dax_template_dialog_utils = __webpack_require__(96739), schemaChangeRewriter = __webpack_require__(3011), DaxTemplateParameterRewriter = function() {
            function DaxTemplateParameterRewriter() {}
            return DaxTemplateParameterRewriter.rewrite = function(parameters, changes, schema, aggrUtils) {
                if (parameters) {
                    var exprRewriters = (0, schemaChangeRewriter.vH)(changes), rewrittenParameters = {}, rewriter = new DaxTemplateParameterRewriter;
                    for (var key in parameters) {
                        var input = parameters[key].input;
                        rewrittenParameters[key] = parameters[key], input && (dax_template_dialog_utils.M.isColumnOrMeasure(input) ? rewrittenParameters[key].input = rewriter.rewriteField(input, exprRewriters, schema, aggrUtils) : dax_template_dialog_utils.M.isInstance(input) && (rewrittenParameters[key].input = rewriter.rewriteInstance(input, exprRewriters, schema, aggrUtils)));
                    }
                    return rewrittenParameters;
                }
            }, DaxTemplateParameterRewriter.prototype.rewriteField = function(input, rewriters, schema, aggrUtils) {
                for (var rewrittenExpr = input.value, _i = 0, rewriters_1 = rewriters; _i < rewriters_1.length; _i++) rewrittenExpr = null == rewrittenExpr ? void 0 : rewrittenExpr.accept(rewriters_1[_i]);
                return _.isEmpty(null == rewrittenExpr ? void 0 : rewrittenExpr.validate(schema, aggrUtils)) || (rewrittenExpr = void 0), 
                (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, input), {
                    value: rewrittenExpr
                });
            }, DaxTemplateParameterRewriter.prototype.rewriteInstance = function(input, rewriters, schema, aggrUtils) {
                for (var _a, _b, rewrittenExpr = null === (_a = input.value) || void 0 === _a ? void 0 : _a.field, rewrittenFilter = null === (_b = input.value) || void 0 === _b ? void 0 : _b.filter, _i = 0, rewriters_2 = rewriters; _i < rewriters_2.length; _i++) {
                    var rewriter = rewriters_2[_i];
                    rewrittenExpr = null == rewrittenExpr ? void 0 : rewrittenExpr.accept(rewriter), 
                    rewrittenFilter = null == rewrittenFilter ? void 0 : rewrittenFilter.rewrite(rewriter);
                }
                return _.isEmpty(null == rewrittenExpr ? void 0 : rewrittenExpr.validate(schema, aggrUtils)) || (rewrittenExpr = void 0, 
                rewrittenFilter = void 0), (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, input), {
                    value: rewrittenExpr ? {
                        field: rewrittenExpr,
                        filter: rewrittenFilter
                    } : void 0
                });
            }, DaxTemplateParameterRewriter;
        }(), semanticQuerySerializer = __webpack_require__(3468), events = __webpack_require__(8590), debug = __webpack_require__(62458), displayNameGetter = __webpack_require__(21571), semanticQuery = __webpack_require__(95462), sqExpr = __webpack_require__(94419), BehaviorSubject = __webpack_require__(35510), Subject = __webpack_require__(30794), from = __webpack_require__(82762), startWith = __webpack_require__(22318), distinctUntilChanged = __webpack_require__(77526), switchMap = __webpack_require__(81905), filter = __webpack_require__(59973), map = __webpack_require__(14172), mapTo = __webpack_require__(73805), shareReplay = __webpack_require__(57243), takeUntil = __webpack_require__(83317), sqExprStaticMembers = __webpack_require__(74082), core = __webpack_require__(50423), sq_aggregation_operations_service = __webpack_require__(28199), conceptual_schema_proxy_service = __webpack_require__(26898), data_sources_service = __webpack_require__(83008), event_bridge_service = __webpack_require__(11494), dax_capabilities_service = __webpack_require__(80435), dax_template_service = __webpack_require__(57151), dax_template_telemetry_service = __webpack_require__(96899), localization_service = __webpack_require__(65181), DaxTemplateStoreService = function() {
            function DaxTemplateStoreService(aggrOps, conceptualSchemaProxy, dataSourcesService, daxCapabilitiesService, daxTemplateService, daxTemplateTelemetry, eventBridge, localizationService) {
                var _this = this;
                this.aggrOps = aggrOps, this.conceptualSchemaProxy = conceptualSchemaProxy, this.dataSourcesService = dataSourcesService, 
                this.daxCapabilitiesService = daxCapabilitiesService, this.daxTemplateService = daxTemplateService, 
                this.daxTemplateTelemetry = daxTemplateTelemetry, this.eventBridge = eventBridge, 
                this.localizationService = localizationService, this.templatesModelStore$ = new BehaviorSubject.X({
                    selectedTemplate: void 0,
                    flattenedTemplatesAndCategory: []
                }), this.parametersStore$ = new BehaviorSubject.X(void 0), this.validation$ = this.parameters$.pipe((0, 
                startWith.O)(null)).pipe((0, distinctUntilChanged.x)(), (0, switchMap.w)(function(parameters) {
                    return _this.validateParameters(parameters, _this.templatesModelStore$.value.selectedTemplate);
                })), this.selectedTemplate$ = this.templatesModel$.pipe((0, filter.h)(function(templatesModel) {
                    return !!templatesModel.selectedTemplate;
                }), (0, map.U)(function(templatesModel) {
                    return templatesModel.selectedTemplate;
                }), (0, distinctUntilChanged.x)()), this.isTemplateSelected$ = this.selectedTemplate$.pipe((0, 
                mapTo.h)(!0), (0, startWith.O)(!1), (0, distinctUntilChanged.x)(), (0, shareReplay.d)(1)), 
                this.subscriptionManager = this.eventBridge.createChannelSubscriptionManager().subscribe(events.CCe, function(_e, args) {
                    return _this.onModelChanged(args.result);
                });
            }
            return Object.defineProperty(DaxTemplateStoreService.prototype, "templatesModel$", {
                get: function() {
                    return this.templatesModelStore$.asObservable();
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(DaxTemplateStoreService.prototype, "parameters$", {
                get: function() {
                    return this.parametersStore$.asObservable();
                },
                enumerable: !1,
                configurable: !0
            }), DaxTemplateStoreService.prototype.ngOnDestroy = function() {
                this.subscriptionManager.unsubscribeAll();
            }, DaxTemplateStoreService.prototype.initialize = function(_a) {
                var selects = _a.selects, schemaName = _a.schemaName, openDaxTemplateEvent = _a.openDaxTemplateEvent, targetEntity = _a.targetEntity;
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var schema, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return this.destroy$ = new Subject.xQ, this.schemaName = schemaName, this.targetEntity = targetEntity, 
                            this.sourceExpressions = _.map(selects, function(s) {
                                return semanticQuerySerializer.ib.deserializeExpr(s);
                            }), [ 4, this.conceptualSchemaProxy.get(this.dataSourcesService.get()) ];

                          case 1:
                            return schema = _b.sent(), [ 4, this.initializeTemplates(schema) ];

                          case 2:
                            return _b.sent(), openDaxTemplateEvent && (this.openDaxTemplateEvent = openDaxTemplateEvent, 
                            this.daxTemplateTelemetry.startTemplateSelectedEvent(openDaxTemplateEvent, "Select a measure")), 
                            this.selectedTemplate$.pipe((0, takeUntil.R)(this.destroy$), (0, switchMap.w)(function(template) {
                                return (0, from.D)(_this.conceptualSchemaProxy.get(_this.dataSourcesService.get())).pipe((0, 
                                map.U)(function(schema) {
                                    return {
                                        template,
                                        schema
                                    };
                                }));
                            })).subscribe(function(selectedTemplateWithSchema) {
                                var templateParameters = _this.getParameters(selectedTemplateWithSchema.template, _this.parametersStore$.value, selectedTemplateWithSchema.schema);
                                _this.parametersStore$.next(templateParameters);
                            }), [ 2 ];
                        }
                    });
                });
            }, DaxTemplateStoreService.prototype.updateSelectedTemplate = function(selectedTemplate) {
                this.templatesModelStore$.next((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, this.templatesModelStore$.value), {
                    selectedTemplate
                })), this.daxTemplateTelemetry.resolveTemplateSelectedEvent(), this.daxTemplateTelemetry.startTemplateSelectedEvent(this.openDaxTemplateEvent, selectedTemplate.capabilities.name);
            }, DaxTemplateStoreService.prototype.updateParameters = function(parameterInput, parameterKey) {
                if (debug.fF.assertValue(parameterInput, "parameterInput"), debug.fF.assertValue(parameterKey, "parameterKey"), 
                parameterInput && parameterKey && _.has(this.parametersStore$.value, parameterKey)) {
                    var updatedParameters = _.clone(this.parametersStore$.value), updatedParameter = updatedParameters[parameterKey];
                    dax_template_dialog_utils.M.isInstance(parameterInput) && !parameterInput.value.field && (parameterInput.value.filter = void 0, 
                    updatedParameter.hasBeenSet = !0), updatedParameter.input = parameterInput, updatedParameter.hasBeenSet = updatedParameter.hasBeenSet || function(parameterInput) {
                        var _a;
                        return dax_template_dialog_utils.M.isInstance(parameterInput) ? !!(null === (_a = parameterInput.value) || void 0 === _a ? void 0 : _a.filter) : !!parameterInput.value;
                    }(updatedParameter.input), this.parametersStore$.next(updatedParameters);
                }
            }, DaxTemplateStoreService.prototype.getNewMeasureResult = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var schema, selectedTemplate, inputValues, newMeasureMetadata, result;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.conceptualSchemaProxy.get(this.dataSourcesService.get()) ];

                          case 1:
                            return schema = _a.sent(), selectedTemplate = this.templatesModelStore$.value.selectedTemplate, 
                            inputValues = convertParameterToInputValue(this.parametersStore$.value, schema, this.daxTemplateService.utils), 
                            [ 4, this.getNewMeasureMetadata(inputValues, selectedTemplate, schema) ];

                          case 2:
                            return (newMeasureMetadata = _a.sent()) && (result = {
                                template: null == selectedTemplate ? void 0 : selectedTemplate.capabilities,
                                parameters: _.mapValues(inputValues, function(param) {
                                    return {
                                        expression: semanticQuerySerializer.ib.serializeExpr(param.expression)
                                    };
                                }),
                                newMeasureMetadata
                            }), [ 2, result ];
                        }
                    });
                });
            }, DaxTemplateStoreService.prototype.destroy = function() {
                this.destroy$.next(), this.destroy$.complete();
            }, DaxTemplateStoreService.prototype.updateTemplates = function(templates) {
                var result = this.flattenAndOrderTemplatesByCategory(templates);
                this.templatesModelStore$.next({
                    selectedTemplate: void 0,
                    flattenedTemplatesAndCategory: result
                });
            }, DaxTemplateStoreService.prototype.initializeTemplates = function(schema) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var daxCapabilities, templates;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.daxCapabilitiesService.getCapabilities() ];

                          case 1:
                            return daxCapabilities = _a.sent(), templates = this.daxTemplateService.getTemplates(schema, daxCapabilities, this.schemaName, 1), 
                            this.updateTemplates(templates), [ 2 ];
                        }
                    });
                });
            }, DaxTemplateStoreService.prototype.flattenAndOrderTemplatesByCategory = function(templates) {
                var _this = this, groupedTemplatesDictionary = _.groupBy(templates, function(template) {
                    return (0, displayNameGetter.G)(template.capabilities.category, _this.localizationService);
                }), result = [];
                for (var category in groupedTemplatesDictionary) {
                    result.push({
                        kind: "category",
                        value: category
                    });
                    for (var _i = 0, _a = groupedTemplatesDictionary[category]; _i < _a.length; _i++) result.push({
                        kind: "daxTemplate",
                        value: _a[_i]
                    });
                }
                return result;
            }, DaxTemplateStoreService.prototype.validateParameters = function(parameters, selectedTemplate) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var schema, daxTemplateServiceUtils, inputValues, daxCapabilities, allParametersSet, validationResult;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return selectedTemplate && parameters ? [ 4, this.conceptualSchemaProxy.get(this.dataSourcesService.get()) ] : [ 2, {
                                result: {
                                    errors: {},
                                    warnings: {}
                                },
                                allParametersSet: !1
                            } ];

                          case 1:
                            return schema = _a.sent(), inputValues = convertParameterToInputValue(parameters, schema, daxTemplateServiceUtils = this.daxTemplateService.utils), 
                            [ 4, this.daxCapabilitiesService.getCapabilities() ];

                          case 2:
                            return daxCapabilities = _a.sent(), allParametersSet = !0, validationResult = daxTemplateServiceUtils.validateIfNeeded(selectedTemplate, schema, daxCapabilities, {
                                schemaName: this.schemaName,
                                inputValues
                            }), _.forEach(selectedTemplate.capabilities.input, function(daxTemplateInput) {
                                var parameterKey = daxTemplateInput.name, parameter = parameters[parameterKey], inputValue = inputValues[parameterKey];
                                (null == parameter ? void 0 : parameter.hasBeenSet) ? (!daxTemplateServiceUtils.isValidValueForInput(inputValue, daxTemplateInput, schema) || daxTemplateInput.instance && inputValue.expression && daxTemplateServiceUtils.isDefaultValueFilter(inputValue.expression)) && (validationResult.errors[parameterKey] = "DaxTemplateDialog_ParameterRequired") : allParametersSet = !1;
                            }), [ 2, {
                                result: validationResult,
                                allParametersSet
                            } ];
                        }
                    });
                });
            }, DaxTemplateStoreService.prototype.getParameters = function(selectedTemplate, previousParameters, schema) {
                var daxTemplateUtils = this.daxTemplateService.utils, previousInputValues = convertParameterToInputValue(previousParameters, schema, daxTemplateUtils), expressions = _.map(previousInputValues, function(value) {
                    return value.expression;
                });
                return expressions.push.apply(expressions, this.sourceExpressions || []), function(template, values, localizationService, daxTemplateUtils) {
                    for (var parameterViewModel = {}, _loop_1 = function(input) {
                        var value = values ? values[input.name] : void 0, expression = void 0;
                        value && (expression = value.expression);
                        var viewModel = {
                            name: input.name,
                            displayName: (0, displayNameGetter.G)(input.displayName, localizationService),
                            description: (0, displayNameGetter.G)(input.description, localizationService),
                            hasBeenSet: !!expression,
                            input: void 0
                        };
                        if (input.column) viewModel.input = {
                            kind: quick_measures_ui_template_contracts._.Field,
                            value: expression,
                            validationInfo: {
                                field: {
                                    kind: 0,
                                    type: input.column.type
                                }
                            }
                        }; else if (input.measure) viewModel.input = {
                            kind: quick_measures_ui_template_contracts._.Field,
                            value: expression,
                            validationInfo: {
                                field: {
                                    kind: 1,
                                    type: input.measure.type
                                }
                            }
                        }; else if (input.instance) {
                            var fieldExpr = void 0, filterExpr = void 0;
                            expression && (0, sqExprStaticMembers.Hi)(expression) && !_.isEmpty(expression.args) && (fieldExpr = expression.args[0], 
                            daxTemplateUtils.isDefaultValueFilter(expression) || (filterExpr = expression)), 
                            viewModel.input = {
                                kind: quick_measures_ui_template_contracts._.Instance,
                                value: {
                                    field: fieldExpr,
                                    filter: filterExpr && semanticQuery.yl.fromSQExpr(filterExpr)
                                },
                                validationInfo: {
                                    field: {
                                        kind: 0,
                                        type: input.instance.column.type
                                    }
                                }
                            }, viewModel.hasBeenSet = !!filterExpr;
                        } else if (input.constant) if (input.constant.type.numeric) viewModel.input = {
                            kind: quick_measures_ui_template_contracts._.Number,
                            value: expression && (0, sqExprStaticMembers.VC)(expression) && expression.value,
                            type: input.constant.type,
                            validationInfo: {
                                decimal: !0,
                                integer: !0
                            }
                        }; else if (input.constant.type.enumeration) {
                            var options = input.constant.type.enumeration.members(), value_1 = expression && (0, 
                            sqExprStaticMembers.VC)(expression) && expression.value;
                            viewModel.input = {
                                kind: quick_measures_ui_template_contracts._.Enum,
                                value: null != value_1 ? _.find(options, function(o) {
                                    return o.value === value_1;
                                }) : void 0,
                                type: input.constant.type,
                                selectionOptions: options
                            };
                        } else input.constant.type.bool && (viewModel.input = {
                            kind: quick_measures_ui_template_contracts._.Boolean,
                            value: expression && (0, sqExprStaticMembers.VC)(expression) && expression.value
                        });
                        parameterViewModel[input.name] = viewModel;
                    }, _i = 0, _a = template.capabilities.input; _i < _a.length; _i++) _loop_1(_a[_i]);
                    return parameterViewModel;
                }(selectedTemplate, daxTemplateUtils.generateValuesFromExpressions(selectedTemplate.capabilities.input, expressions, schema), this.localizationService, daxTemplateUtils);
            }, DaxTemplateStoreService.prototype.getNewMeasureMetadata = function(inputValues, selectedTemplate, schema) {
                var _a;
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var capabilities, daxCapabilities, measureName, newMeasureMetadata, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return (capabilities = null == selectedTemplate ? void 0 : selectedTemplate.capabilities) ? [ 4, this.daxCapabilitiesService.getCapabilities() ] : [ 2 ];

                          case 1:
                            return daxCapabilities = _b.sent(), measureName = null == selectedTemplate ? void 0 : selectedTemplate.getMeasureName(schema, daxCapabilities, {
                                schemaName: this.schemaName,
                                inputValues
                            }), (newMeasureMetadata = {
                                measureName
                            }).formatType = null === (_a = capabilities.output) || void 0 === _a ? void 0 : _a.format, 
                            _.forEach(capabilities.input, function(input) {
                                var _a, _b, _c, _d, _f;
                                if (newMeasureMetadata.formatSource && newMeasureMetadata.entity) return !1;
                                if (input.measure || input.column) {
                                    var inputExpression = null === (_a = inputValues[input.name]) || void 0 === _a ? void 0 : _a.expression;
                                    debug.fF.assertValue(inputExpression, "input expression should be defined");
                                    var useForEntitySource = (null === (_b = input.measure) || void 0 === _b ? void 0 : _b.shouldUseForEntitySource) || (null === (_c = input.column) || void 0 === _c ? void 0 : _c.shouldUseForEntitySource), useForFormatting = null === (_d = input.measure) || void 0 === _d ? void 0 : _d.shouldUseForFormatting;
                                    if (useForEntitySource) {
                                        var expr = (null === (_f = _this.targetEntity) || void 0 === _f ? void 0 : _f.SourceRef) && semanticQuerySerializer.ib.deserializeExpr(_this.targetEntity), targetEntityExpr = void 0;
                                        expr && (0, sqExprStaticMembers.Lk)(expr) && (targetEntityExpr = expr), (targetEntityExpr = null != targetEntityExpr ? targetEntityExpr : inputExpression.getTargetEntity()) && (newMeasureMetadata.entity = targetEntityExpr.entity, 
                                        newMeasureMetadata.schema = _this.schemaName);
                                    }
                                    useForFormatting && null == newMeasureMetadata.formatType && (newMeasureMetadata.formatSource = semanticQuerySerializer.ib.serializeExpr(inputExpression));
                                }
                            }), [ 2, newMeasureMetadata ];
                        }
                    });
                });
            }, DaxTemplateStoreService.prototype.onModelChanged = function(schemaChanges) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var schema, newParameters;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.conceptualSchemaProxy.get(this.dataSourcesService.get()) ];

                          case 1:
                            return schema = _a.sent(), newParameters = DaxTemplateParameterRewriter.rewrite(this.parametersStore$.value, schemaChanges.changes, schema, this.aggrOps), 
                            this.parametersStore$.next(newParameters), [ 2 ];
                        }
                    });
                });
            }, DaxTemplateStoreService.\u0275fac = function(t) {
                return new (t || DaxTemplateStoreService)(core["\u0275\u0275inject"](sq_aggregation_operations_service.C), core["\u0275\u0275inject"](conceptual_schema_proxy_service.i), core["\u0275\u0275inject"](data_sources_service.D), core["\u0275\u0275inject"](dax_capabilities_service.r3), core["\u0275\u0275inject"](dax_template_service.c), core["\u0275\u0275inject"](dax_template_telemetry_service.W), core["\u0275\u0275inject"](event_bridge_service.J), core["\u0275\u0275inject"](localization_service.o));
            }, DaxTemplateStoreService.\u0275prov = core["\u0275\u0275defineInjectable"]({
                token: DaxTemplateStoreService,
                factory: DaxTemplateStoreService.\u0275fac
            }), DaxTemplateStoreService;
        }();
        function convertParameterToInputValue(parameters, schema, daxTemplateUtils) {
            var _a, _b, _c, sqExprParameters = {};
            if (null == parameters) return sqExprParameters;
            for (var key in parameters) {
                var expression = void 0, parameterInput = null === (_a = parameters[key]) || void 0 === _a ? void 0 : _a.input;
                if (parameterInput) {
                    if (dax_template_dialog_utils.M.isColumnOrMeasure(parameterInput)) expression = parameterInput.value; else if (dax_template_dialog_utils.M.isNumber(parameterInput)) expression = (0, 
                    sqExpr.kQ)(parameterInput.value, parameterInput.type); else if (dax_template_dialog_utils.M.isEnum(parameterInput)) expression = (0, 
                    sqExpr.kQ)(parameterInput.value.value, parameterInput.type); else if (dax_template_dialog_utils.M.isBoolean(parameterInput)) expression = (0, 
                    sqExpr.O7)(parameterInput.value); else if (dax_template_dialog_utils.M.isInstance(parameterInput) && (null === (_b = parameterInput.value) || void 0 === _b ? void 0 : _b.filter) && (null === (_c = parameterInput.value) || void 0 === _c ? void 0 : _c.field)) {
                        var _d = parameterInput.value, field = _d.field, filter_1 = _d.filter, targetColumnRef = field.getTargetColumnRef(schema);
                        _.isEmpty(filter_1.where()) || (expression = daxTemplateUtils.replacerRewrite(filter_1.where()[0].condition, targetColumnRef, field));
                    }
                    expression && (sqExprParameters[key] = {
                        expression
                    });
                }
            }
            return sqExprParameters;
        }
    },
    96739: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            M: function() {
                return DaxTemplateDialogUtils;
            }
        });
        var _components_quick_measures_template_quick_measures_ui_template_contracts__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(64648), _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(62458), DaxTemplateDialogUtils = function() {
            function DaxTemplateDialogUtils() {}
            return DaxTemplateDialogUtils.isNumber = function(input) {
                return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(input, "daxTemplateParameter input"), 
                input.kind === _components_quick_measures_template_quick_measures_ui_template_contracts__WEBPACK_IMPORTED_MODULE_1__._.Number;
            }, DaxTemplateDialogUtils.isEnum = function(input) {
                return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(input, "daxTemplateParameter input"), 
                input.kind === _components_quick_measures_template_quick_measures_ui_template_contracts__WEBPACK_IMPORTED_MODULE_1__._.Enum;
            }, DaxTemplateDialogUtils.isBoolean = function(input) {
                return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(input, "daxTemplateParameter input"), 
                input.kind === _components_quick_measures_template_quick_measures_ui_template_contracts__WEBPACK_IMPORTED_MODULE_1__._.Boolean;
            }, DaxTemplateDialogUtils.isColumnOrMeasure = function(input) {
                return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(input, "daxTemplateParameter input"), 
                input.kind === _components_quick_measures_template_quick_measures_ui_template_contracts__WEBPACK_IMPORTED_MODULE_1__._.Field;
            }, DaxTemplateDialogUtils.isInstance = function(input) {
                return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(input, "daxTemplateParameter input"), 
                input.kind === _components_quick_measures_template_quick_measures_ui_template_contracts__WEBPACK_IMPORTED_MODULE_1__._.Instance;
            }, DaxTemplateDialogUtils;
        }();
    },
    56598: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            K: function() {
                return PbiDragDropPickerModule;
            }
        });
        var _A11y__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(20914), _custom_click_custom_click_module__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(5806), _pbi_editable_label__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(94770), _pbi_icon__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(93367), _pbi_menu__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(94841), _pbi_svg_use_symbol__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(79725), _pbi_tooltip__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(16095), _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(77476), _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(17174), _powerbi_Localization__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(79061), _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(50423), PbiDragDropPickerModule = function() {
            function PbiDragDropPickerModule() {}
            return PbiDragDropPickerModule.\u0275fac = function(t) {
                return new (t || PbiDragDropPickerModule);
            }, PbiDragDropPickerModule.\u0275mod = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275defineNgModule"]({
                type: PbiDragDropPickerModule
            }), PbiDragDropPickerModule.\u0275inj = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275defineInjector"]({
                imports: [ _angular_common__WEBPACK_IMPORTED_MODULE_1__.CommonModule, _custom_click_custom_click_module__WEBPACK_IMPORTED_MODULE_2__.Y, _angular_forms__WEBPACK_IMPORTED_MODULE_3__.u5, _powerbi_Localization__WEBPACK_IMPORTED_MODULE_4__.v, _A11y__WEBPACK_IMPORTED_MODULE_5__._, _pbi_editable_label__WEBPACK_IMPORTED_MODULE_6__.f, _pbi_icon__WEBPACK_IMPORTED_MODULE_7__.U, _pbi_menu__WEBPACK_IMPORTED_MODULE_8__.b, _pbi_svg_use_symbol__WEBPACK_IMPORTED_MODULE_9__.j, _pbi_tooltip__WEBPACK_IMPORTED_MODULE_10__.Z, _angular_forms__WEBPACK_IMPORTED_MODULE_3__.UX ]
            }), PbiDragDropPickerModule;
        }();
    }
} ]);