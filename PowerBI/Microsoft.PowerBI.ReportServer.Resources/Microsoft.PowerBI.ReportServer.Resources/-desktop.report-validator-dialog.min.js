"use strict";

(self.webpackChunkdesktop = self.webpackChunkdesktop || []).push([ [ "report-validator-dialog" ], {
    55002: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, {
            ReportValidatorDialogModule: function() {
                return ReportValidatorDialogModule;
            }
        });
        var common = __webpack_require__(77476), dialogs_module = __webpack_require__(76966), localization_module = __webpack_require__(79061), template_dialog_payload_service = __webpack_require__(67489), tslib_es6 = __webpack_require__(81337), core = __webpack_require__(50423), template_dialog_component = __webpack_require__(96777), localize_pipe = __webpack_require__(85102);
        function ReportValidatorDialogComponent_li_6_Template(rf, ctx) {
            if (1 & rf && (core["\u0275\u0275elementStart"](0, "li", 5), core["\u0275\u0275text"](1), 
            core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var validation_r1 = ctx.$implicit;
                core["\u0275\u0275advance"](1), core["\u0275\u0275textInterpolate"](validation_r1);
            }
        }
        var ReportValidatorDialogComponent = function() {
            function ReportValidatorDialogComponent(templateDialogPayload) {
                this.templateDialogPayload = templateDialogPayload;
            }
            return ReportValidatorDialogComponent.prototype.ngOnInit = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var _this = this;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        return this.input = this.templateDialogPayload.input, this.listTitle = this.input.listTitle, 
                        this.description = this.input.description, this.templateDialogPayload.setTitle(this.input.title), 
                        this.templateDialogPayload.setOkButtonText(this.input.okButtonText), this.templateDialogPayload.setCancelButtonText(this.input.cancelButtonText), 
                        this.templateDialogPayload.toggleCancelButton(this.input.hideCancelButton), this.templateDialogPayload.onOkButtonClick = function() {
                            return _this.ok();
                        }, this.templateDialogPayload.onCancelButtonClick = function() {
                            return _this.close();
                        }, [ 2 ];
                    });
                });
            }, ReportValidatorDialogComponent.prototype.ok = function() {
                return Promise.resolve(0);
            }, ReportValidatorDialogComponent.prototype.close = function() {
                return Promise.resolve(1);
            }, ReportValidatorDialogComponent.prototype.copyDetails = function() {
                navigator.clipboard.writeText(this.input.validations.join("\n"));
            }, ReportValidatorDialogComponent.\u0275fac = function(t) {
                return new (t || ReportValidatorDialogComponent)(core["\u0275\u0275directiveInject"](template_dialog_payload_service.x));
            }, ReportValidatorDialogComponent.\u0275cmp = core["\u0275\u0275defineComponent"]({
                type: ReportValidatorDialogComponent,
                selectors: [ [ "report-validator-dialog" ] ],
                features: [ core["\u0275\u0275ProvidersFeature"]([ template_dialog_payload_service.x ]) ],
                decls: 11,
                vars: 6,
                consts: [ [ 1, "description" ], [ 1, "list-title" ], [ 1, "validations" ], [ "class", "validation", 4, "ngFor", "ngForOf" ], [ 1, "copy-btn", 3, "click" ], [ 1, "validation" ] ],
                template: function(rf, ctx) {
                    1 & rf && (core["\u0275\u0275elementStart"](0, "template-dialog")(1, "div", 0), 
                    core["\u0275\u0275text"](2), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](3, "div", 1), 
                    core["\u0275\u0275text"](4), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](5, "ul", 2), 
                    core["\u0275\u0275template"](6, ReportValidatorDialogComponent_li_6_Template, 2, 1, "li", 3), 
                    core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](7, "button", 4), 
                    core["\u0275\u0275listener"]("click", function() {
                        return ctx.copyDetails();
                    }), core["\u0275\u0275elementStart"](8, "u"), core["\u0275\u0275text"](9), core["\u0275\u0275pipe"](10, "localize"), 
                    core["\u0275\u0275elementEnd"]()()()), 2 & rf && (core["\u0275\u0275advance"](2), 
                    core["\u0275\u0275textInterpolate"](ctx.description), core["\u0275\u0275advance"](2), 
                    core["\u0275\u0275textInterpolate"](ctx.listTitle), core["\u0275\u0275advance"](2), 
                    core["\u0275\u0275property"]("ngForOf", ctx.input.validations), core["\u0275\u0275advance"](3), 
                    core["\u0275\u0275textInterpolate"](core["\u0275\u0275pipeBind1"](10, 4, "Copy_Details")));
                },
                dependencies: [ common.NgForOf, template_dialog_component.J, localize_pipe.F ],
                styles: [ ".description[_ngcontent-%COMP%]{margin-bottom:16px;font-size:var(--md-font-size)}.list-title[_ngcontent-%COMP%]{font-size:var(--md-font-size);font-weight:var(--font-weight-bold)}.validations[_ngcontent-%COMP%]{margin-top:0;max-height:100px;overflow:scroll}.validation[_ngcontent-%COMP%]{-webkit-user-select:text;-moz-user-select:text;-ms-user-select:text;user-select:text;word-break:break-all}.copy-btn[_ngcontent-%COMP%]{color:var(--colorBrandForegroundLink);background:none;border:none;cursor:pointer}" ]
            }), ReportValidatorDialogComponent;
        }(), ReportValidatorDialogModule = function() {
            function ReportValidatorDialogModule() {}
            return ReportValidatorDialogModule.\u0275fac = function(t) {
                return new (t || ReportValidatorDialogModule);
            }, ReportValidatorDialogModule.\u0275mod = core["\u0275\u0275defineNgModule"]({
                type: ReportValidatorDialogModule
            }), ReportValidatorDialogModule.\u0275inj = core["\u0275\u0275defineInjector"]({
                providers: [ template_dialog_payload_service.x ],
                imports: [ common.CommonModule, dialogs_module.c.withManifest([ {
                    componentIdentifier: "ReportValidatorDialog",
                    componentType: ReportValidatorDialogComponent
                } ]), localization_module.v ]
            }), ReportValidatorDialogModule;
        }();
    }
} ]);