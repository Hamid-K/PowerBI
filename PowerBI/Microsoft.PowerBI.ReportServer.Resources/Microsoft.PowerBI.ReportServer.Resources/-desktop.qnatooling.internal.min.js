(self.webpackChunkdesktop = self.webpackChunkdesktop || []).push([ [ "qnatooling.internal" ], {
    54861: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        "use strict";
        function getFullName(givenName, familyName, emailAddress) {
            var firstName = _.trim(givenName), lastName = _.trim(familyName);
            return _.isEmpty(firstName) ? emailAddress || "" : _.isEmpty(lastName) ? firstName : "".concat(firstName, " ").concat(lastName);
        }
        __webpack_require__.d(__webpack_exports__, {
            P: function() {
                return getFullName;
            }
        });
    },
    65818: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            r: function() {
                return EndorsementBadgeComponent;
            }
        });
        var _Typings_Clients_PowerBIContracts_contracts_typings1__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(73471), _powerbi_legacy_JsCommon_Utility_BrowserUtility__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(16808), _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(50423), _angular_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(77476), _Localization_directives_localize_directive__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(59968), _UILibrary_pbi_tooltip_pbi_tooltip_directive__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(36858), _trident_libs_ux_angular_src_lib_tri_svg_icon_components_tri_svg_icon_tri_svg_icon_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(74913), _Localization_pipes_localize_pipe__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(85102);
        function EndorsementBadgeComponent_section_1_Template(rf, ctx) {
            if (1 & rf && (_angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275elementStart"](0, "section", 5), 
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275pipe"](1, "localize"), _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275element"](2, "tri-svg-icon", 6)(3, "span", 7), 
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275nextContext"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275property"]("ngClass", ctx_r0.isIeBrowser ? "in-ie-browser" : "browser-default")("pbiTooltip", ctx_r0.customTooltip ? ctx_r0.customTooltip : _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275pipeBind1"](1, 4, "MasterData"))("pbiTooltipDisabled", ctx_r0.hideTooltip), 
                _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275attribute"]("tabindex", 0);
            }
        }
        function EndorsementBadgeComponent_ng_container_2_section_1_Template(rf, ctx) {
            if (1 & rf && (_angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275elementStart"](0, "section", 10), 
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275pipe"](1, "localize"), _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275element"](2, "tri-svg-icon", 11)(3, "span", 12), 
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275nextContext"](2);
                _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275property"]("ngClass", ctx_r4.isIeBrowser ? "in-ie-browser" : "browser-default")("pbiTooltip", ctx_r4.customTooltip ? ctx_r4.customTooltip : _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275pipeBind1"](1, 4, "Certified"))("pbiTooltipDisabled", ctx_r4.hideTooltip), 
                _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275attribute"]("tabindex", 0);
            }
        }
        function EndorsementBadgeComponent_ng_container_2_ng_template_2_Template(rf, ctx) {
            if (1 & rf && (_angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275elementStart"](0, "section", 13), 
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275pipe"](1, "localize"), _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275element"](2, "tri-svg-icon", 14)(3, "span", 15), 
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275nextContext"](2);
                _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275property"]("ngClass", ctx_r6.isIeBrowser ? "in-ie-browser" : "browser-default")("pbiTooltip", ctx_r6.customTooltip ? ctx_r6.customTooltip : _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275pipeBind1"](1, 4, "Certified"))("pbiTooltipDisabled", ctx_r6.hideTooltip), 
                _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275attribute"]("tabindex", 0);
            }
        }
        function EndorsementBadgeComponent_ng_container_2_Template(rf, ctx) {
            if (1 & rf && (_angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275elementContainerStart"](0), 
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275template"](1, EndorsementBadgeComponent_ng_container_2_section_1_Template, 4, 6, "section", 8), 
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275template"](2, EndorsementBadgeComponent_ng_container_2_ng_template_2_Template, 4, 6, "ng-template", null, 9, _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275templateRefExtractor"]), 
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275elementContainerEnd"]()), 
            2 & rf) {
                var _r5 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275reference"](3), ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275nextContext"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275advance"](1), _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275property"]("ngIf", ctx_r1.useWhiteTheme)("ngIfElse", _r5);
            }
        }
        function EndorsementBadgeComponent_section_3_Template(rf, ctx) {
            if (1 & rf && (_angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275elementStart"](0, "section", 16), 
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275pipe"](1, "localize"), _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275element"](2, "tri-svg-icon", 17)(3, "span", 18), 
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275nextContext"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275property"]("ngClass", ctx_r2.isIeBrowser ? "in-ie-browser" : "browser-default")("pbiTooltip", ctx_r2.customTooltip ? ctx_r2.customTooltip : _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275pipeBind1"](1, 4, "Promoted"))("pbiTooltipDisabled", ctx_r2.hideTooltip), 
                _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275attribute"]("tabindex", 0);
            }
        }
        function EndorsementBadgeComponent_span_4_Template(rf, ctx) {
            if (1 & rf && (_angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275element"](0, "span", 19), 
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275pipe"](1, "localize")), 
            2 & rf) {
                var ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275nextContext"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275property"]("pbiTooltip", ctx_r3.customTooltip || _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275pipeBind1"](1, 2, "None"))("pbiTooltipDisabled", ctx_r3.hideTooltip);
            }
        }
        var EndorsementBadgeComponent = function() {
            function EndorsementBadgeComponent() {
                this.promoted = _Typings_Clients_PowerBIContracts_contracts_typings1__WEBPACK_IMPORTED_MODULE_2__.X_.Promoted, 
                this.certified = _Typings_Clients_PowerBIContracts_contracts_typings1__WEBPACK_IMPORTED_MODULE_2__.X_.Certified, 
                this.masterData = _Typings_Clients_PowerBIContracts_contracts_typings1__WEBPACK_IMPORTED_MODULE_2__.X_.MasterData, 
                this.isIeBrowser = (0, _powerbi_legacy_JsCommon_Utility_BrowserUtility__WEBPACK_IMPORTED_MODULE_3__.rO)();
            }
            return EndorsementBadgeComponent.\u0275fac = function(t) {
                return new (t || EndorsementBadgeComponent);
            }, EndorsementBadgeComponent.\u0275cmp = _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275defineComponent"]({
                type: EndorsementBadgeComponent,
                selectors: [ [ "endorsement-badge" ] ],
                inputs: {
                    stage: "stage",
                    useWhiteTheme: "useWhiteTheme",
                    customTooltip: "customTooltip",
                    hideTooltip: "hideTooltip"
                },
                decls: 5,
                vars: 4,
                consts: [ [ 3, "ngSwitch" ], [ "class", "endorsementBadge masterData defaultTheme", 3, "ngClass", "pbiTooltip", "pbiTooltipDisabled", 4, "ngSwitchCase" ], [ 4, "ngSwitchCase" ], [ "class", "endorsementBadge promoted defaultTheme", 3, "ngClass", "pbiTooltip", "pbiTooltipDisabled", 4, "ngSwitchCase" ], [ "class", "endorsementBadge none", 3, "pbiTooltip", "pbiTooltipDisabled", 4, "ngSwitchDefault" ], [ 1, "endorsementBadge", "masterData", "defaultTheme", 3, "ngClass", "pbiTooltip", "pbiTooltipDisabled" ], [ "name", "database_stack_asterisk_16_regular", "sprite", "trident-icons", 1, "endorsementIcon", "defaultTheme" ], [ "localize", "MasterData", 1, "endorsementLabel", "masterData", "defaultTheme" ], [ "class", "endorsementBadge whiteTheme", 3, "ngClass", "pbiTooltip", "pbiTooltipDisabled", 4, "ngIf", "ngIfElse" ], [ "defaultTheme", "" ], [ 1, "endorsementBadge", "whiteTheme", 3, "ngClass", "pbiTooltip", "pbiTooltipDisabled" ], [ "name", "ribbon_16_regular", 1, "endorsementIcon" ], [ "localize", "Certified", 1, "endorsementLabel", "certified" ], [ 1, "endorsementBadge", "certified", "defaultTheme", 3, "ngClass", "pbiTooltip", "pbiTooltipDisabled" ], [ "name", "ribbon_16_regular", 1, "endorsementIcon", "defaultTheme" ], [ "localize", "Certified", 1, "endorsementLabel", "certified", "defaultTheme" ], [ 1, "endorsementBadge", "promoted", "defaultTheme", 3, "ngClass", "pbiTooltip", "pbiTooltipDisabled" ], [ "name", "checkmark_starburst_16_regular", 1, "endorsementIcon", "defaultTheme" ], [ "localize", "Promoted", 1, "endorsementLabel", "promoted", "defaultTheme" ], [ 1, "endorsementBadge", "none", 3, "pbiTooltip", "pbiTooltipDisabled" ] ],
                template: function(rf, ctx) {
                    1 & rf && (_angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275elementContainerStart"](0, 0), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275template"](1, EndorsementBadgeComponent_section_1_Template, 4, 6, "section", 1), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275template"](2, EndorsementBadgeComponent_ng_container_2_Template, 4, 2, "ng-container", 2), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275template"](3, EndorsementBadgeComponent_section_3_Template, 4, 6, "section", 3), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275template"](4, EndorsementBadgeComponent_span_4_Template, 2, 4, "span", 4), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275elementContainerEnd"]()), 
                    2 & rf && (_angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275property"]("ngSwitch", ctx.stage), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275advance"](1), _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275property"]("ngSwitchCase", ctx.masterData), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275advance"](1), _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275property"]("ngSwitchCase", ctx.certified), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275advance"](1), _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275property"]("ngSwitchCase", ctx.promoted));
                },
                dependencies: [ _angular_common__WEBPACK_IMPORTED_MODULE_4__.NgClass, _angular_common__WEBPACK_IMPORTED_MODULE_4__.NgIf, _angular_common__WEBPACK_IMPORTED_MODULE_4__.NgSwitch, _angular_common__WEBPACK_IMPORTED_MODULE_4__.NgSwitchCase, _angular_common__WEBPACK_IMPORTED_MODULE_4__.NgSwitchDefault, _Localization_directives_localize_directive__WEBPACK_IMPORTED_MODULE_5__.X, _UILibrary_pbi_tooltip_pbi_tooltip_directive__WEBPACK_IMPORTED_MODULE_6__.V, _trident_libs_ux_angular_src_lib_tri_svg_icon_components_tri_svg_icon_tri_svg_icon_component__WEBPACK_IMPORTED_MODULE_0__.M, _Localization_pipes_localize_pipe__WEBPACK_IMPORTED_MODULE_7__.F ],
                styles: [ '[_nghost-%COMP%]{--colorEndorsementForeground: var(--colorNeutralForeground2Rest)}[_nghost-%COMP%]   .endorsementBadge[_ngcontent-%COMP%]{line-height:initial;border-radius:20px;height:100%;max-height:24px}[_nghost-%COMP%]   .endorsementBadge.certified[_ngcontent-%COMP%]{border:1px solid #25891C}[_nghost-%COMP%]   .endorsementBadge.promoted[_ngcontent-%COMP%]{border:1px solid #4668C5}[_nghost-%COMP%]   .endorsementBadge.masterData[_ngcontent-%COMP%]{border:1px solid #9470BD}[_nghost-%COMP%]   .endorsementBadge.none[_ngcontent-%COMP%]{padding-left:8px}[_nghost-%COMP%]   .endorsementBadge.none[_ngcontent-%COMP%]:before{content:"\\2014"}[_nghost-%COMP%]   .endorsementBadge.whiteTheme[_ngcontent-%COMP%]{border:1px solid}[_nghost-%COMP%]   .endorsementBadge[_ngcontent-%COMP%]   .endorsementIcon[_ngcontent-%COMP%]{width:100%;max-height:14px;max-width:14px;font-size:14px;fill:currentColor}[_nghost-%COMP%]   .endorsementBadge[_ngcontent-%COMP%]   .endorsementIcon.defaultTheme[_ngcontent-%COMP%]{color:var(--colorEndorsementForeground)}[_nghost-%COMP%]   .endorsementBadge[_ngcontent-%COMP%]   .endorsementLabel[_ngcontent-%COMP%]{font-size:var(--sm-font-size, 12px);white-space:nowrap;overflow:hidden;text-overflow:ellipsis}[_nghost-%COMP%]   .endorsementBadge[_ngcontent-%COMP%]   .endorsementLabel.defaultTheme[_ngcontent-%COMP%]{color:var(--colorEndorsementForeground)}[_nghost-%COMP%]   .in-ie-browser.promoted[_ngcontent-%COMP%]{max-width:95px}[_nghost-%COMP%]   .in-ie-browser.certified[_ngcontent-%COMP%]{max-width:85px}[_nghost-%COMP%]   .in-ie-browser.masterData[_ngcontent-%COMP%]{max-width:85px}[_nghost-%COMP%]   .in-ie-browser[_ngcontent-%COMP%]   .endorsementLabel[_ngcontent-%COMP%]{bottom:2px}[_nghost-%COMP%]   .browser-default[_ngcontent-%COMP%]{display:flex;align-items:center;max-width:fit-content}[_nghost-%COMP%]   .browser-default[_ngcontent-%COMP%]   .endorsementLabel[_ngcontent-%COMP%]{flex:1;bottom:1px}html:not([dir="rtl"])[_nghost-%COMP%]   .browser-default[_ngcontent-%COMP%]   .endorsementIcon[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .browser-default[_ngcontent-%COMP%]   .endorsementIcon[_ngcontent-%COMP%]{margin:8px 4px 8px 8px}html[dir="rtl"][_nghost-%COMP%]   .browser-default[_ngcontent-%COMP%]   .endorsementIcon[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .browser-default[_ngcontent-%COMP%]   .endorsementIcon[_ngcontent-%COMP%]{margin:8px 8px 8px 4px}html:not([dir="rtl"])[_nghost-%COMP%]   .browser-default[_ngcontent-%COMP%]   .pbi-glyph-promotedendorsement[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .browser-default[_ngcontent-%COMP%]   .pbi-glyph-promotedendorsement[_ngcontent-%COMP%]{padding:8px 4px 8px 10px}html[dir="rtl"][_nghost-%COMP%]   .browser-default[_ngcontent-%COMP%]   .pbi-glyph-promotedendorsement[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .browser-default[_ngcontent-%COMP%]   .pbi-glyph-promotedendorsement[_ngcontent-%COMP%]{padding:8px 10px 8px 4px}html:not([dir="rtl"])[_nghost-%COMP%]   .in-ie-browser[_ngcontent-%COMP%]   .endorsementIcon[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .in-ie-browser[_ngcontent-%COMP%]   .endorsementIcon[_ngcontent-%COMP%]{padding:5px 4px 8px 8px}html[dir="rtl"][_nghost-%COMP%]   .in-ie-browser[_ngcontent-%COMP%]   .endorsementIcon[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .in-ie-browser[_ngcontent-%COMP%]   .endorsementIcon[_ngcontent-%COMP%]{padding:5px 8px 8px 4px}html:not([dir="rtl"])[_nghost-%COMP%]   .in-ie-browser[_ngcontent-%COMP%]   .pbi-glyph-promotedendorsement[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .in-ie-browser[_ngcontent-%COMP%]   .pbi-glyph-promotedendorsement[_ngcontent-%COMP%]{padding:5px 4px 8px 10px}html[dir="rtl"][_nghost-%COMP%]   .in-ie-browser[_ngcontent-%COMP%]   .pbi-glyph-promotedendorsement[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .in-ie-browser[_ngcontent-%COMP%]   .pbi-glyph-promotedendorsement[_ngcontent-%COMP%]{padding:5px 10px 8px 4px}html:not([dir="rtl"])[_nghost-%COMP%]   .endorsementLabel[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .endorsementLabel[_ngcontent-%COMP%]{margin-left:0;margin-right:12px}html[dir="rtl"][_nghost-%COMP%]   .endorsementLabel[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .endorsementLabel[_ngcontent-%COMP%]{margin-left:12px;margin-right:0}' ],
                changeDetection: 0
            }), EndorsementBadgeComponent;
        }();
    },
    79509: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            a: function() {
                return ArtifactEndorsementUICommonModule;
            }
        }), __webpack_require__(65818), __webpack_require__(73471);
        var core = __webpack_require__(50423), common = __webpack_require__(77476);
        __webpack_require__(36858), __webpack_require__(74913), __webpack_require__(85102);
        var localization_module = __webpack_require__(79061), pbi_tooltip_module = __webpack_require__(16095), tri_svg_icon = __webpack_require__(17177), ArtifactEndorsementUICommonModule = function() {
            function ArtifactEndorsementUICommonModule() {}
            return ArtifactEndorsementUICommonModule.\u0275fac = function(t) {
                return new (t || ArtifactEndorsementUICommonModule);
            }, ArtifactEndorsementUICommonModule.\u0275mod = core["\u0275\u0275defineNgModule"]({
                type: ArtifactEndorsementUICommonModule
            }), ArtifactEndorsementUICommonModule.\u0275inj = core["\u0275\u0275defineInjector"]({
                imports: [ common.CommonModule, localization_module.v, pbi_tooltip_module.Z, tri_svg_icon.T6 ]
            }), ArtifactEndorsementUICommonModule;
        }();
    },
    56894: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        "use strict";
        function getDisplayNameFromArtifactInformationProtection(aip) {
            if (!_.isNil(aip)) return _.isNil(aip.parent) ? aip.name : "".concat(aip.parent.name, "\\").concat(aip.name);
        }
        function compareLabelsAlphabetically(aip1, aip2, isAsc) {
            if (_.isUndefined(aip1)) return -1 * (isAsc ? 1 : -1);
            if (_.isUndefined(aip2)) return 1 * (isAsc ? 1 : -1);
            var label1DisplayName = getDisplayNameFromArtifactInformationProtection(aip1), label2DisplayName = getDisplayNameFromArtifactInformationProtection(aip2);
            return function(obj1, obj2, isAsc) {
                return (obj1 < obj2 ? -1 : 1) * (isAsc ? 1 : -1);
            }(label1DisplayName.toLocaleLowerCase(), label2DisplayName.toLocaleLowerCase(), isAsc);
        }
        __webpack_require__.d(__webpack_exports__, {
            Kg: function() {
                return compareLabelsAlphabetically;
            },
            s4: function() {
                return getDisplayNameFromArtifactInformationProtection;
            }
        });
    },
    70940: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            s: function() {
                return getPlugin;
            }
        });
        var _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(47508), _powerbi_legacy_PowerBIVisuals_VisualsCommon_Lazy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(45034), typeToPluginMap = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Lazy__WEBPACK_IMPORTED_MODULE_0__.o(function() {
            var result = {};
            return result[3] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.card, 
            result[13] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.lineClusteredColumnComboChart, 
            result[29] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.multiRowCard, 
            result[7] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.clusteredBarChart, 
            result[10] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.clusteredColumnChart, 
            result[20] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.donutChart, 
            result[16] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.funnel, 
            result[30] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.gauge, 
            result[22] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.heatMap, 
            result[9] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.hundredPercentStackedBarChart, 
            result[12] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.hundredPercentStackedColumnChart, 
            result[4] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.lineChart, 
            result[1] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.map, 
            result[19] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.filledMap, 
            result[2] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.pivotTable, 
            result[5] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.pieChart, 
            result[6] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.scatterChart, 
            result[8] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.barChart, 
            result[11] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.columnChart, 
            result[0] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.tableEx, 
            result[17] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.treemap, 
            result[23] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.waterfallChart, 
            result[26] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.stackedAreaChart, 
            result[27] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.hundredPercentStackedAreaChart, 
            result[32] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.areaChart, 
            result[33] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.ribbonChart, 
            result[34] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.kpi, 
            result[35] = _powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.decompositionTreeVisual, 
            result;
        });
        function getPlugin(type) {
            return typeToPluginMap.getValue()[type];
        }
        new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Lazy__WEBPACK_IMPORTED_MODULE_0__.o(function() {
            var result = {};
            return result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.card.name] = 3, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.lineClusteredColumnComboChart.name] = 13, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.multiRowCard.name] = 29, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.clusteredBarChart.name] = 7, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.clusteredColumnChart.name] = 10, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.donutChart.name] = 20, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.funnel.name] = 16, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.gauge.name] = 30, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.heatMap.name] = 22, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.hundredPercentStackedBarChart.name] = 9, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.hundredPercentStackedColumnChart.name] = 12, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.lineChart.name] = 4, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.map.name] = 1, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.filledMap.name] = 19, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.matrix.name] = 2, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.pivotTable.name] = 2, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.pieChart.name] = 5, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.scatterChart.name] = 6, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.barChart.name] = 8, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.columnChart.name] = 11, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.table.name] = 0, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.tableEx.name] = 0, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.treemap.name] = 17, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.waterfallChart.name] = 23, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.stackedAreaChart.name] = 26, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.hundredPercentStackedAreaChart.name] = 27, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.areaChart.name] = 32, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.ribbonChart.name] = 33, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.kpi.name] = 34, 
            result[_powerbi_legacy_PowerBIVisuals_Visuals_plugins__WEBPACK_IMPORTED_MODULE_1__.L.decompositionTreeVisual.name] = 35, 
            result;
        });
    },
    43212: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, {
            QnaToolingInternalModule: function() {
                return QnaToolingInternalModule;
            }
        });
        var tslib_es6 = __webpack_require__(81337), Subject = __webpack_require__(30794), BehaviorSubject = __webpack_require__(35510), combineLatest = __webpack_require__(59017), fesm2022_core = __webpack_require__(50423), startWith = __webpack_require__(22318), takeUntil = __webpack_require__(83317), map = __webpack_require__(14172), distinctUntilChanged = __webpack_require__(77526), shareReplay = __webpack_require__(57243), take = __webpack_require__(48787), filter = __webpack_require__(59973), tap = __webpack_require__(17653), legacy_table = __webpack_require__(11894), injection_tokens = __webpack_require__(14714), src = __webpack_require__(62345), fieldListViewModelFactory = __webpack_require__(96968), debug = __webpack_require__(62458), pbi_overlay_positions = __webpack_require__(25512), pbi_overlay_service = __webpack_require__(86940), eventAggregationService = __webpack_require__(8898), viewModels_fieldListConceptualModel = __webpack_require__(69843), banner_handler_util = __webpack_require__(87413), lsdl_document_model_utils = __webpack_require__(5142), dateFormatter = __webpack_require__(69637), wireClientContractsConversion_util = __webpack_require__(35988), improve_lsdl_result_handler = __webpack_require__(85726), lsdl_document_model = __webpack_require__(55461), improve_lsdl_util = __webpack_require__(34100), lsdl_agent_model = __webpack_require__(39322), pbi_overlay_ref = __webpack_require__(86286), localization_service = __webpack_require__(65181), feature_switch_service = __webpack_require__(9380), common = __webpack_require__(77476), localize_directive = __webpack_require__(59968), pbi_tooltip_directive = __webpack_require__(36858), tri_checkbox_component = __webpack_require__(10965), tri_svg_icon_component = __webpack_require__(74913), tri_switch_component = __webpack_require__(13414), localize_pipe = __webpack_require__(85102);
        function QnaSynonymsSettingsComponent_tri_checkbox_4_tri_svg_icon_4_Template(rf, ctx) {
            if (1 & rf && fesm2022_core["\u0275\u0275element"](0, "tri-svg-icon", 15), 2 & rf) {
                var source_r2 = fesm2022_core["\u0275\u0275nextContext"]().$implicit;
                fesm2022_core["\u0275\u0275property"]("pbiTooltip", source_r2.warningText);
            }
        }
        function QnaSynonymsSettingsComponent_tri_checkbox_4_Template(rf, ctx) {
            if (1 & rf) {
                var _r6 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "tri-checkbox", 11), fesm2022_core["\u0275\u0275listener"]("onChange", function($event) {
                    var source_r2 = fesm2022_core["\u0275\u0275restoreView"](_r6).$implicit, ctx_r5 = fesm2022_core["\u0275\u0275nextContext"]();
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r5.onSuggestionSourceSelected($event, source_r2));
                }), fesm2022_core["\u0275\u0275elementStart"](1, "label", 12)(2, "span", 13), fesm2022_core["\u0275\u0275text"](3), 
                fesm2022_core["\u0275\u0275template"](4, QnaSynonymsSettingsComponent_tri_checkbox_4_tri_svg_icon_4_Template, 1, 1, "tri-svg-icon", 14), 
                fesm2022_core["\u0275\u0275elementEnd"]()()();
            }
            if (2 & rf) {
                var source_r2 = ctx.$implicit;
                fesm2022_core["\u0275\u0275property"]("checked", source_r2.checked)("disabled", "disabled" === source_r2.kind)("pbiTooltip", "disabled" === source_r2.kind ? source_r2.disabledReason : void 0), 
                fesm2022_core["\u0275\u0275advance"](3), fesm2022_core["\u0275\u0275textInterpolate1"](" ", source_r2.name, " "), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", "warning" === source_r2.kind);
            }
        }
        function QnaSynonymsSettingsComponent_section_8_Template(rf, ctx) {
            if (1 & rf) {
                var _r8 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "section", 16), fesm2022_core["\u0275\u0275element"](1, "h3", 17), 
                fesm2022_core["\u0275\u0275elementStart"](2, "tri-switch", 18), fesm2022_core["\u0275\u0275listener"]("listenValueChange", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r8);
                    var ctx_r7 = fesm2022_core["\u0275\u0275nextContext"]();
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r7.onFuzzyMatchingSettingChanged($event));
                }), fesm2022_core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var ctx_r1 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("checked", ctx_r1.isFuzzyMatchingEnabled);
            }
        }
        var QnaSynonymsSettingsComponent = function() {
            function QnaSynonymsSettingsComponent(localizationService, featureSwitchService, overlayRef, currentSettings) {
                var _a;
                this.localizationService = localizationService, this.featureSwitchService = featureSwitchService, 
                this.overlayRef = overlayRef, this.currentSettings = currentSettings, debug.fF.assertValue(this.currentSettings, "qna synonyms current settings"), 
                this.shareSynonymsWithOrg = 1 === this.currentSettings.lsdlSharingPermission, this.shouldShowFuzzyMatchingSetting$ = this.featureSwitchService.featureSwitches$.pipe((0, 
                map.U)(function(fs) {
                    return (0, improve_lsdl_util.J8)(fs);
                })), this.runtimeUnderstandingValue = this.currentSettings.runtimeUnderstanding, 
                this.isFuzzyMatchingEnabled = "Full" === this.runtimeUnderstandingValue;
                var lsdlAgentProperties = ((_a = {})["PowerBI.AzureOpenAISynonyms"] = {
                    nameKey: "Copilot_Preview"
                }, _a["PowerBI.OrganizationLsdlSharing"] = {
                    nameKey: "QnaTooling_BulkEditing_SuggestionSettings_Org"
                }, _a.Thesaurus = {
                    nameKey: "Thesaurus"
                }, _a);
                this.suggestionSources = [];
                var _loop_1 = function(key) {
                    var existingAgentModel = _.find(this_1.currentSettings.agentModels, function(a) {
                        return a.name === key;
                    }), agentModel = null != existingAgentModel ? existingAgentModel : new lsdl_agent_model.Y(key, {
                        State: "Enabled"
                    }), name_1 = this_1.localizationService.get(lsdlAgentProperties[key].nameKey), checked = "Enabled" === agentModel.state;
                    if ("PowerBI.AzureOpenAISynonyms" === key) {
                        var copilotTenantSettingDisabled = !this_1.currentSettings.copilotStatus.enabled, sourceAlreadyUtilized = "Enabled" === (null == existingAgentModel ? void 0 : existingAgentModel.state) && !_.isEmpty(null == existingAgentModel ? void 0 : existingAgentModel.lastModified);
                        if (copilotTenantSettingDisabled && sourceAlreadyUtilized) return this_1.suggestionSources.push({
                            name: name_1,
                            checked,
                            agentModel,
                            kind: "warning",
                            warningText: this_1.localizationService.get("QnaTooling_BulkEditing_SuggestionSettings_Copilot_Warning")
                        }), "continue";
                        if (copilotTenantSettingDisabled) return this_1.suggestionSources.push({
                            name: name_1,
                            checked: !1,
                            agentModel,
                            kind: "disabled",
                            disabledReason: this_1.localizationService.get("CopilotCapability_AdminDisabled_Message")
                        }), "continue";
                    }
                    this_1.suggestionSources.push({
                        name: name_1,
                        checked,
                        agentModel,
                        kind: "enabled"
                    });
                }, this_1 = this;
                for (var key in lsdlAgentProperties) _loop_1(key);
            }
            return QnaSynonymsSettingsComponent.prototype.onSuggestionSourceSelected = function(isChecked, source) {
                debug.fF.assertValue(isChecked, "isChecked"), debug.fF.assertValue(source, "source");
                var clonedSuggestionSources = _.clone(this.suggestionSources), sourceToUpdate = _.find(clonedSuggestionSources, function(s) {
                    return s.name === source.name;
                });
                debug.fF.assertValue(sourceToUpdate, "unable to find suggestion source"), sourceToUpdate.checked = isChecked, 
                this.suggestionSources = clonedSuggestionSources;
            }, QnaSynonymsSettingsComponent.prototype.onShareSynonymsWithOrgChanged = function(_a) {
                var checked = _a.checked;
                debug.fF.assertValue(checked, "tri switch change checked"), this.shareSynonymsWithOrg = checked;
            }, QnaSynonymsSettingsComponent.prototype.onFuzzyMatchingSettingChanged = function(_a) {
                var checked = _a.checked;
                this.isFuzzyMatchingEnabled = checked, this.runtimeUnderstandingValue = checked ? "Full" : "None";
            }, QnaSynonymsSettingsComponent.prototype.onCancel = function() {
                this.overlayRef.close(void 0);
            }, QnaSynonymsSettingsComponent.prototype.onApply = function() {
                var updatedAgentModels = _.map(this.suggestionSources, function(s) {
                    var agentModel = s.agentModel;
                    return agentModel.state = s.checked ? "Enabled" : "Disabled", agentModel;
                });
                this.overlayRef.close({
                    agentModels: updatedAgentModels,
                    lsdlSharingPermission: this.shareSynonymsWithOrg ? 1 : 0,
                    runtimeUnderstanding: this.runtimeUnderstandingValue
                });
            }, QnaSynonymsSettingsComponent.\u0275fac = function(t) {
                return new (t || QnaSynonymsSettingsComponent)(fesm2022_core["\u0275\u0275directiveInject"](localization_service.o), fesm2022_core["\u0275\u0275directiveInject"](feature_switch_service.vZ), fesm2022_core["\u0275\u0275directiveInject"](pbi_overlay_ref.w), fesm2022_core["\u0275\u0275directiveInject"](pbi_overlay_ref.M));
            }, QnaSynonymsSettingsComponent.\u0275cmp = fesm2022_core["\u0275\u0275defineComponent"]({
                type: QnaSynonymsSettingsComponent,
                selectors: [ [ "qna-synonyms-settings" ] ],
                decls: 13,
                vars: 8,
                consts: [ [ "role", "dialog", 1, "settingsContainer" ], [ 1, "sourceSettings" ], [ "localize", "QnaTooling_BulkEditing_SuggestionSettings_ManageSources" ], [ 3, "checked", "disabled", "pbiTooltip", "onChange", 4, "ngFor", "ngForOf" ], [ 1, "shareSettings" ], [ "id", "shareSynonymsLabel", "localize", "QnaTooling_BulkEditing_SuggestionSettings_ShareSynonyms" ], [ "aria-labelledby", "shareSynonymsLabel", 3, "checked", "listenValueChange" ], [ "class", "fuzzyMatchingSetting", 4, "ngIf" ], [ 1, "buttonContainer" ], [ "type", "button", "localize", "Apply", "tri-button", "", "appearance", "primary", "size", "small", 3, "click" ], [ "type", "button", "localize", "Cancel_ButtonText", "tri-button", "", "size", "small", 3, "click" ], [ 3, "checked", "disabled", "pbiTooltip", "onChange" ], [ 1, "tri-checkbox-label" ], [ 1, "inline", "checkbox-text" ], [ "class", "warningIcon", "tri-svg-icon-16", "", "aria-hidden", "true", "name", "warning_16_regular", 3, "pbiTooltip", 4, "ngIf" ], [ "tri-svg-icon-16", "", "aria-hidden", "true", "name", "warning_16_regular", 1, "warningIcon", 3, "pbiTooltip" ], [ 1, "fuzzyMatchingSetting" ], [ "id", "fuzzyMatchingSettingLabel", "localize", "Qna_FuzzyMatching_Setting_Label" ], [ "aria-labelledby", "fuzzyMatchingSettingLabel", 3, "checked", "listenValueChange" ] ],
                template: function(rf, ctx) {
                    1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 0), fesm2022_core["\u0275\u0275pipe"](1, "localize"), 
                    fesm2022_core["\u0275\u0275elementStart"](2, "section", 1), fesm2022_core["\u0275\u0275element"](3, "h3", 2), 
                    fesm2022_core["\u0275\u0275template"](4, QnaSynonymsSettingsComponent_tri_checkbox_4_Template, 5, 5, "tri-checkbox", 3), 
                    fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275elementStart"](5, "section", 4), 
                    fesm2022_core["\u0275\u0275element"](6, "h3", 5), fesm2022_core["\u0275\u0275elementStart"](7, "tri-switch", 6), 
                    fesm2022_core["\u0275\u0275listener"]("listenValueChange", function($event) {
                        return ctx.onShareSynonymsWithOrgChanged($event);
                    }), fesm2022_core["\u0275\u0275elementEnd"]()(), fesm2022_core["\u0275\u0275template"](8, QnaSynonymsSettingsComponent_section_8_Template, 3, 1, "section", 7), 
                    fesm2022_core["\u0275\u0275pipe"](9, "async"), fesm2022_core["\u0275\u0275elementStart"](10, "section", 8)(11, "button", 9), 
                    fesm2022_core["\u0275\u0275listener"]("click", function() {
                        return ctx.onApply();
                    }), fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275elementStart"](12, "button", 10), 
                    fesm2022_core["\u0275\u0275listener"]("click", function() {
                        return ctx.onCancel();
                    }), fesm2022_core["\u0275\u0275elementEnd"]()()()), 2 & rf && (fesm2022_core["\u0275\u0275attribute"]("aria-label", fesm2022_core["\u0275\u0275pipeBind1"](1, 4, "QnaTooling_BulkEditing_SuggestionSettings")), 
                    fesm2022_core["\u0275\u0275advance"](4), fesm2022_core["\u0275\u0275property"]("ngForOf", ctx.suggestionSources), 
                    fesm2022_core["\u0275\u0275advance"](3), fesm2022_core["\u0275\u0275property"]("checked", ctx.shareSynonymsWithOrg), 
                    fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", fesm2022_core["\u0275\u0275pipeBind1"](9, 6, ctx.shouldShowFuzzyMatchingSetting$)));
                },
                dependencies: [ common.NgForOf, common.NgIf, localize_directive.X, pbi_tooltip_directive.V, tri_checkbox_component.r, tri_svg_icon_component.M, tri_switch_component.t, common.AsyncPipe, localize_pipe.F ],
                styles: [ '[_nghost-%COMP%]{width:288px;background-color:var(--colorNeutralBackground1);padding:16px;border-radius:4px;box-shadow:0 0 2px var(--colorNeutralShadowAmbient),0 8px 16px var(--colorNeutralShadowKey)}[_nghost-%COMP%]   .settingsContainer[_ngcontent-%COMP%]{display:flex;flex-direction:column;row-gap:8px}[_nghost-%COMP%]   .settingsContainer[_ngcontent-%COMP%]   .buttonContainer[_ngcontent-%COMP%]{display:flex;flex-direction:row;justify-content:flex-end;align-items:center;column-gap:8px}[_nghost-%COMP%]   .settingsContainer[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{margin:0 0 4px;font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-semi-bold, 600)}[_nghost-%COMP%]   .settingsContainer[_ngcontent-%COMP%]   .warningIcon[_ngcontent-%COMP%]{fill:var(--colorNeutralForeground1)}' ],
                changeDetection: 0
            }), QnaSynonymsSettingsComponent;
        }(), telemetryHelpers = __webpack_require__(41114), QnAToolingOpenTooling = telemetryHelpers.cx["PBI.QnATooling.OpenTooling"] = (0, 
        telemetryHelpers.b1)("PBI.QnATooling.OpenTooling"), QnAToolingOpenTeachQna = telemetryHelpers.cx["PBI.QnATooling.OpenTeachQna"] = (0, 
        telemetryHelpers.b1)("PBI.QnATooling.OpenTeachQna"), QnAToolingOpenReviewQuestions = telemetryHelpers.cx["PBI.QnATooling.OpenReviewQuestions"] = (0, 
        telemetryHelpers.b1)("PBI.QnATooling.OpenReviewQuestions"), QnAToolingOpenFieldSynonyms = telemetryHelpers.cx["PBI.QnATooling.OpenFieldSynonyms"] = (0, 
        telemetryHelpers.b1)("PBI.QnATooling.OpenFieldSynonyms"), QnAToolingOpenManageTerms = telemetryHelpers.cx["PBI.QnATooling.OpenManageTerms"] = (0, 
        telemetryHelpers.b1)("PBI.QnATooling.OpenManageTerms"), QnAToolingOpenSuggestQuestions = telemetryHelpers.cx["PBI.QnATooling.OpenSuggestQuestions"] = (0, 
        telemetryHelpers.b1)("PBI.QnATooling.OpenSuggestQuestions"), QnAToolingOpenManagePhrasings = telemetryHelpers.cx["PBI.QnATooling.OpenManagePhrasings"] = (0, 
        telemetryHelpers.b1)("PBI.QnATooling.OpenManagePhrasings"), QnAToolingReviewQuestionsUserError = telemetryHelpers.cx["PBI.QnATooling.ReviewQuestions.UserError"] = (0, 
        telemetryHelpers.b1)("PBI.QnATooling.ReviewQuestions.UserError"), QnAToolingTeachQnaSubmitQuestion = telemetryHelpers.cx["PBI.QnATooling.TeachQna.SubmitQuestion"] = (0, 
        telemetryHelpers.b1)("PBI.QnATooling.TeachQna.SubmitQuestion"), QnAToolingTeachQnaTermResolutionInfoOfSubmittedQuestion = telemetryHelpers.cx["PBI.QnATooling.TeachQna.TermResolutionInfoOfSubmittedQuestion"] = (0, 
        telemetryHelpers.b1)("PBI.QnATooling.TeachQna.TermResolutionInfoOfSubmittedQuestion"), QnAToolingManageTermsTermDelete = telemetryHelpers.cx["PBI.QnATooling.ManageTerms.TermDelete"] = (0, 
        telemetryHelpers.b1)("PBI.QnATooling.ManageTerms.TermDelete"), QnAToolingReorderTerm = telemetryHelpers.cx["PBI.QnATooling.ReorderTerm"] = (0, 
        telemetryHelpers.b1)("PBI.QnATooling.ReorderTerm"), QnAToolingDeleteTerm = telemetryHelpers.cx["PBI.QnATooling.DeleteTerm"] = (0, 
        telemetryHelpers.b1)("PBI.QnATooling.DeleteTerm"), QnAToolingPromoteSuggestedTerm = telemetryHelpers.cx["PBI.QnATooling.PromoteSuggestedTerm"] = (0, 
        telemetryHelpers.b1)("PBI.QnATooling.PromoteSuggestedTerm"), QnAToolingAddAuthoredTerm = telemetryHelpers.cx["PBI.QnATooling.AddAuthoredTerm"] = (0, 
        telemetryHelpers.b1)("PBI.QnATooling.AddAuthoredTerm"), QnAToolingToggleEntity = telemetryHelpers.cx["PBI.QnATooling.ToggleEntity"] = (0, 
        telemetryHelpers.b1)("PBI.QnATooling.ToggleEntity"), QnAToolingPhrasingsStartCreateNew = telemetryHelpers.cx["PBI.QnATooling.Phrasings.StartCreateNew"] = (0, 
        telemetryHelpers.b1)("PBI.QnATooling.Phrasings.StartCreateNew"), QnAToolingPhrasingsStartEditExisting = telemetryHelpers.cx["PBI.QnATooling.Phrasings.StartEditExisting"] = (0, 
        telemetryHelpers.b1)("PBI.QnATooling.Phrasings.StartEditExisting"), QnAToolingPhrasingsApplyNewPhrasing = telemetryHelpers.cx["PBI.QnATooling.Phrasings.ApplyNewPhrasing"] = (0, 
        telemetryHelpers.b1)("PBI.QnATooling.Phrasings.ApplyNewPhrasing"), QnAToolingPhrasingsApplyEditExistingPhrasing = telemetryHelpers.cx["PBI.QnATooling.Phrasings.ApplyEditExistingPhrasing"] = (0, 
        telemetryHelpers.b1)("PBI.QnATooling.Phrasings.ApplyEditExistingPhrasing"), QnAToolingPhrasingsDeletePhrasing = telemetryHelpers.cx["PBI.QnATooling.Phrasings.DeletePhrasing"] = (0, 
        telemetryHelpers.b1)("PBI.QnATooling.Phrasings.DeletePhrasing"), QnAToolingPromoteSuggestedPhrasing = telemetryHelpers.cx["PBI.QnATooling.Phrasings.PromoteSuggestedPhrasing"] = (0, 
        telemetryHelpers.b1)("PBI.QnATooling.Phrasings.PromoteSuggestedPhrasing"), Telemetry = __webpack_require__(21617), JsonExtensions = __webpack_require__(26112), Utility = __webpack_require__(38078);
        function showConfirmationDialogInCenter(dialogService, data, config) {
            return dialogService.showConfirmationDialog(data, _.merge({}, config, {
                position: {
                    top: "350px",
                    left: "650px"
                }
            }));
        }
        function showCheckboxDialogInCenter(dialogService, definition) {
            return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                var definitionClone;
                return (0, tslib_es6.__generator)(this, function(_a) {
                    switch (_a.label) {
                      case 0:
                        return (definitionClone = _.cloneDeep(definition)).config || (definitionClone.config = {}), 
                        [ 4, dialogService.openHostDialog(definitionClone) ];

                      case 1:
                        return [ 2, _a.sent() ];
                    }
                });
            });
        }
        var account_service = __webpack_require__(5944), desktop_qna_service = __webpack_require__(24215), conceptual_schema_proxy_service = __webpack_require__(26898), data_sources_service = __webpack_require__(83008), dialog_service = __webpack_require__(58938), high_contrast_css_generation_service = __webpack_require__(64647), screen_reader_service = __webpack_require__(83309), lazy_scoped_provider = __webpack_require__(28894), lsdl_ui_blocker_service = __webpack_require__(74539), copilot_interactive_requirements_service = __webpack_require__(96278), drag_drop = __webpack_require__(558), legacy_button = __webpack_require__(70410), legacy_checkbox = __webpack_require__(2467), expansion = __webpack_require__(51837), legacy_slide_toggle = __webpack_require__(90802), svg_use_symbol_component = __webpack_require__(65188), localize_attr_directive = __webpack_require__(22844), accessible_click_directive = __webpack_require__(44581), qna_banner_lazy_component = __webpack_require__(83499), spinner_component = __webpack_require__(73425), tooltip_directive = __webpack_require__(1240);
        function SuggestedTermPillComponent_section_1_Template(rf, ctx) {
            1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "section", 10), fesm2022_core["\u0275\u0275element"](1, "tri-svg-icon", 11), 
            fesm2022_core["\u0275\u0275elementEnd"]());
        }
        function SuggestedTermPillComponent_section_2_Template(rf, ctx) {
            1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "section", 12), fesm2022_core["\u0275\u0275element"](1, "tri-svg-icon", 13), 
            fesm2022_core["\u0275\u0275elementEnd"]());
        }
        var _a, _c0 = function(a0) {
            return {
                disable: a0
            };
        }, SuggestedTermPillComponent = function() {
            function SuggestedTermPillComponent() {
                this.isDisabled = !1, this.onPromoted = new fesm2022_core.EventEmitter, this.onRemoved = new fesm2022_core.EventEmitter, 
                this.AzureOpenAIAgent = "PowerBI.AzureOpenAISynonyms", this.OrganizationAgent = "PowerBI.OrganizationLsdlSharing";
            }
            return SuggestedTermPillComponent.\u0275fac = function(t) {
                return new (t || SuggestedTermPillComponent);
            }, SuggestedTermPillComponent.\u0275cmp = fesm2022_core["\u0275\u0275defineComponent"]({
                type: SuggestedTermPillComponent,
                selectors: [ [ "suggested-term-pill" ] ],
                inputs: {
                    term: "term",
                    isDisabled: "isDisabled"
                },
                outputs: {
                    onPromoted: "onPromoted",
                    onRemoved: "onRemoved"
                },
                decls: 13,
                vars: 20,
                consts: [ [ "tabindex", "0", 1, "pill", 3, "ngClass", "pbiTooltip", "pbiTooltipDisabled" ], [ "class", "iconLabelContainer copilotIconContainer", 4, "ngIf" ], [ "class", "iconLabelContainer orgIconContainer", 4, "ngIf" ], [ 1, "valueContainer" ], [ 1, "termText", "trimmedTextWithEllipsis", 3, "title" ], [ 1, "actionsContainer" ], [ "type", "button", 1, "pbi-fluent-button", "pbi-icon-button", "pillBtn", "promoteBtn", 3, "pbiTooltip", "pbiTooltipDisabled", "click", "focusin" ], [ "tri-svg-icon-16", "", "aria-hidden", "true", "name", "add_16_regular" ], [ "type", "button", 1, "pbi-fluent-button", "pbi-icon-button", "pillBtn", "removeBtn", 3, "pbiTooltip", "pbiTooltipDisabled", "click", "focusin" ], [ "tri-svg-icon-16", "", "aria-hidden", "true", "name", "dismiss_16_regular" ], [ 1, "iconLabelContainer", "copilotIconContainer" ], [ "tri-svg-icon-20", "", "aria-hidden", "true", "name", "sparkle_20_regular", 1, "copilotIcon" ], [ 1, "iconLabelContainer", "orgIconContainer" ], [ "tri-svg-icon-20", "", "aria-hidden", "true", "name", "building_20_regular", 1, "orgIcon" ] ],
                template: function(rf, ctx) {
                    1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 0), fesm2022_core["\u0275\u0275template"](1, SuggestedTermPillComponent_section_1_Template, 2, 0, "section", 1), 
                    fesm2022_core["\u0275\u0275template"](2, SuggestedTermPillComponent_section_2_Template, 2, 0, "section", 2), 
                    fesm2022_core["\u0275\u0275elementStart"](3, "section", 3)(4, "span", 4), fesm2022_core["\u0275\u0275text"](5), 
                    fesm2022_core["\u0275\u0275elementEnd"]()(), fesm2022_core["\u0275\u0275elementStart"](6, "section", 5)(7, "button", 6), 
                    fesm2022_core["\u0275\u0275listener"]("click", function() {
                        return ctx.onPromoted.emit();
                    })("focusin", function($event) {
                        return $event.stopPropagation();
                    }), fesm2022_core["\u0275\u0275pipe"](8, "localize"), fesm2022_core["\u0275\u0275element"](9, "tri-svg-icon", 7), 
                    fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275elementStart"](10, "button", 8), 
                    fesm2022_core["\u0275\u0275listener"]("click", function() {
                        return ctx.onRemoved.emit();
                    })("focusin", function($event) {
                        return $event.stopPropagation();
                    }), fesm2022_core["\u0275\u0275pipe"](11, "localize"), fesm2022_core["\u0275\u0275element"](12, "tri-svg-icon", 9), 
                    fesm2022_core["\u0275\u0275elementEnd"]()()()), 2 & rf && (fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction1"](18, _c0, ctx.isDisabled))("pbiTooltip", ctx.term.tooltipText)("pbiTooltipDisabled", null == ctx.term.tooltipText || ctx.isDisabled), 
                    fesm2022_core["\u0275\u0275attribute"]("aria-disabled", ctx.isDisabled), fesm2022_core["\u0275\u0275advance"](1), 
                    fesm2022_core["\u0275\u0275property"]("ngIf", (null == ctx.term.source ? null : ctx.term.source.Agent) === ctx.AzureOpenAIAgent), 
                    fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", (null == ctx.term.source ? null : ctx.term.source.Agent) === ctx.OrganizationAgent), 
                    fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("title", ctx.term.value), 
                    fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275textInterpolate"](ctx.term.value), 
                    fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("pbiTooltip", fesm2022_core["\u0275\u0275pipeBind1"](8, 14, "QnaTooling_BulkEditing_PromoteTerm"))("pbiTooltipDisabled", ctx.isDisabled), 
                    fesm2022_core["\u0275\u0275attribute"]("aria-disabled", ctx.isDisabled), fesm2022_core["\u0275\u0275advance"](3), 
                    fesm2022_core["\u0275\u0275property"]("pbiTooltip", fesm2022_core["\u0275\u0275pipeBind1"](11, 16, "Delete"))("pbiTooltipDisabled", ctx.isDisabled), 
                    fesm2022_core["\u0275\u0275attribute"]("aria-disabled", ctx.isDisabled));
                },
                dependencies: [ common.NgClass, common.NgIf, pbi_tooltip_directive.V, tri_svg_icon_component.M, localize_pipe.F ],
                styles: [ '[_nghost-%COMP%]{display:flex}[_nghost-%COMP%]   .pill[_ngcontent-%COMP%]{display:flex;flex-direction:row;align-items:center;height:32px;border-radius:4px;background-color:var(--colorNeutralBackground4);color:var(--colorNeutralForeground2);border:1px solid var(--colorNeutralStroke3)}html:not([dir="rtl"])   [_nghost-%COMP%]   .pill[_ngcontent-%COMP%]{padding:0 10px 0 2px}html[dir="rtl"]   [_nghost-%COMP%]   .pill[_ngcontent-%COMP%]{padding:0 2px 0 10px}[_nghost-%COMP%]   .disable[_ngcontent-%COMP%]{opacity:.4}[_nghost-%COMP%]   .valueContainer[_ngcontent-%COMP%]{display:flex;max-width:250px}[_nghost-%COMP%]   .valueContainer[_ngcontent-%COMP%]   .termText[_ngcontent-%COMP%]{margin-left:8px;margin-right:8px}[_nghost-%COMP%]   .pillBtn[_ngcontent-%COMP%]{display:flex;width:16px;height:16px;cursor:pointer}[_nghost-%COMP%]   .pillBtn[_ngcontent-%COMP%]   tri-svg-icon[_ngcontent-%COMP%]{fill:currentColor}[_nghost-%COMP%]   .iconLabelContainer[_ngcontent-%COMP%]{height:28px;width:28px;display:flex;align-items:center;justify-content:center;border-radius:2px}[_nghost-%COMP%]   .iconLabelContainer.orgIconContainer[_ngcontent-%COMP%]{background-color:#cfe4fa}[_nghost-%COMP%]   .iconLabelContainer.orgIconContainer[_ngcontent-%COMP%]   .orgIcon[_ngcontent-%COMP%]{stroke:#0f6cbd;stroke-width:.3px}[_nghost-%COMP%]   .iconLabelContainer.copilotIconContainer[_ngcontent-%COMP%]{background-color:var(--globalColorDarkTealTint50)}[_nghost-%COMP%]   .iconLabelContainer.copilotIconContainer[_ngcontent-%COMP%]   .copilotIcon[_ngcontent-%COMP%]{stroke:var(--globalColorBrand80);stroke-width:.3px}[_nghost-%COMP%]   .actionsContainer[_ngcontent-%COMP%]{display:flex;gap:4px}' ],
                changeDetection: 0
            }), SuggestedTermPillComponent;
        }(), qna_bulk_editing_component_c0 = [ "addButton" ];
        function QnaBulkEditingComponent_div_0_ng_container_4_qna_banner_lazy_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r11 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "qna-banner-lazy", 12), fesm2022_core["\u0275\u0275listener"]("onDismiss", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r11);
                    var ctx_r10 = fesm2022_core["\u0275\u0275nextContext"](3);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r10.onBannerDismiss($event));
                }), fesm2022_core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var bannerContent_r8 = fesm2022_core["\u0275\u0275nextContext"]().ngIf;
                fesm2022_core["\u0275\u0275property"]("bannerContent", bannerContent_r8);
            }
        }
        function QnaBulkEditingComponent_div_0_ng_container_4_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275template"](1, QnaBulkEditingComponent_div_0_ng_container_4_qna_banner_lazy_1_Template, 1, 1, "qna-banner-lazy", 11), 
            fesm2022_core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var bannerContent_r8 = ctx.ngIf;
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", bannerContent_r8.showBanners);
            }
        }
        function QnaBulkEditingComponent_div_0_div_7_ng_container_8_span_1_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "span"), fesm2022_core["\u0275\u0275text"](1), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r15 = fesm2022_core["\u0275\u0275nextContext"](4);
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275textInterpolate"](ctx_r15.updatedTimeInfo);
            }
        }
        function QnaBulkEditingComponent_div_0_div_7_ng_container_8_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275template"](1, QnaBulkEditingComponent_div_0_div_7_ng_container_8_span_1_Template, 2, 1, "span", 4), 
            fesm2022_core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var ctx_r14 = fesm2022_core["\u0275\u0275nextContext"](3);
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", ctx_r14.lsdlSharingInfo.lastSyncedTime);
            }
        }
        function QnaBulkEditingComponent_div_0_div_7_Template(rf, ctx) {
            if (1 & rf) {
                var _r17 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "div", 13)(1, "button", 14, 15), fesm2022_core["\u0275\u0275listener"]("click", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r17);
                    var _r13 = fesm2022_core["\u0275\u0275reference"](2), ctx_r16 = fesm2022_core["\u0275\u0275nextContext"](2);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r16.onSuggestionSettingsClicked(_r13));
                }), fesm2022_core["\u0275\u0275element"](3, "span", 16)(4, "tri-svg-icon", 17), 
                fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275elementStart"](5, "button", 18), 
                fesm2022_core["\u0275\u0275listener"]("click", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r17);
                    var ctx_r18 = fesm2022_core["\u0275\u0275nextContext"](2);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r18.syncSharedLsdlInfo());
                }), fesm2022_core["\u0275\u0275pipe"](6, "localize"), fesm2022_core["\u0275\u0275element"](7, "tri-svg-icon", 19), 
                fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275template"](8, QnaBulkEditingComponent_div_0_div_7_ng_container_8_Template, 2, 1, "ng-container", 4), 
                fesm2022_core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r3 = fesm2022_core["\u0275\u0275nextContext"](2);
                fesm2022_core["\u0275\u0275advance"](5), fesm2022_core["\u0275\u0275property"]("pbiTooltip", fesm2022_core["\u0275\u0275pipeBind1"](6, 3, "Refresh_Suggestions")), 
                fesm2022_core["\u0275\u0275attribute"]("aria-label", ctx_r3.ariaResources.refreshActionLabel), 
                fesm2022_core["\u0275\u0275advance"](3), fesm2022_core["\u0275\u0275property"]("ngIf", null == ctx_r3.lsdlSharingInfo ? null : ctx_r3.lsdlSharingInfo.syncedFromOthers);
            }
        }
        function QnaBulkEditingComponent_div_0_ng_template_8_section_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r22 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "section", 23)(1, "div", 24), fesm2022_core["\u0275\u0275element"](2, "i", 25), 
                fesm2022_core["\u0275\u0275elementStart"](3, "span", 26)(4, "b"), fesm2022_core["\u0275\u0275text"](5), 
                fesm2022_core["\u0275\u0275pipe"](6, "localize"), fesm2022_core["\u0275\u0275elementEnd"]()(), 
                fesm2022_core["\u0275\u0275element"](7, "span", 27), fesm2022_core["\u0275\u0275elementEnd"](), 
                fesm2022_core["\u0275\u0275elementStart"](8, "button", 28), fesm2022_core["\u0275\u0275listener"]("accessible-click", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r22);
                    var ctx_r21 = fesm2022_core["\u0275\u0275nextContext"](3);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r21.syncSharedLsdlInfo());
                }), fesm2022_core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var ctx_r19 = fesm2022_core["\u0275\u0275nextContext"](3);
                fesm2022_core["\u0275\u0275advance"](5), fesm2022_core["\u0275\u0275textInterpolate"](fesm2022_core["\u0275\u0275pipeBind1"](6, 2, "Qna_TenantSynonyms_GetMore_Label")), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("innerHtml", ctx_r19.getTenantSynonymsDescriptionHtml, fesm2022_core["\u0275\u0275sanitizeHtml"]);
            }
        }
        function QnaBulkEditingComponent_div_0_ng_template_8_section_2_span_3_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "span", 37), fesm2022_core["\u0275\u0275text"](1), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r23 = fesm2022_core["\u0275\u0275nextContext"](4);
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275textInterpolate"](ctx_r23.lsdlSharingInfo.lastSyncedTime);
            }
        }
        var _c1 = function() {
            return {
                tooltipLocalizeDescription: "Refresh_Suggestions",
                tooltipDelay: 0
            };
        };
        function QnaBulkEditingComponent_div_0_ng_template_8_section_2_Template(rf, ctx) {
            if (1 & rf) {
                var _r25 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "section", 29)(1, "div", 30), fesm2022_core["\u0275\u0275element"](2, "span", 31), 
                fesm2022_core["\u0275\u0275template"](3, QnaBulkEditingComponent_div_0_ng_template_8_section_2_span_3_Template, 2, 1, "span", 32), 
                fesm2022_core["\u0275\u0275elementStart"](4, "i", 33), fesm2022_core["\u0275\u0275listener"]("accessible-click", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r25);
                    var ctx_r24 = fesm2022_core["\u0275\u0275nextContext"](3);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r24.syncSharedLsdlInfo());
                }), fesm2022_core["\u0275\u0275elementEnd"]()(), fesm2022_core["\u0275\u0275elementStart"](5, "div", 34)(6, "mat-checkbox", 35), 
                fesm2022_core["\u0275\u0275listener"]("change", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r25);
                    var ctx_r26 = fesm2022_core["\u0275\u0275nextContext"](3);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r26.lsdlSharingPermissionChanged($event));
                }), fesm2022_core["\u0275\u0275pipe"](7, "async"), fesm2022_core["\u0275\u0275text"](8), 
                fesm2022_core["\u0275\u0275pipe"](9, "localize"), fesm2022_core["\u0275\u0275elementEnd"](), 
                fesm2022_core["\u0275\u0275element"](10, "a", 36), fesm2022_core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var ctx_r20 = fesm2022_core["\u0275\u0275nextContext"](3);
                fesm2022_core["\u0275\u0275advance"](3), fesm2022_core["\u0275\u0275property"]("ngIf", null == ctx_r20.lsdlSharingInfo ? null : ctx_r20.lsdlSharingInfo.lastSyncedTime), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("pbi-tooltip", fesm2022_core["\u0275\u0275pureFunction0"](11, _c1)), 
                fesm2022_core["\u0275\u0275attribute"]("aria-label", ctx_r20.ariaResources.refreshActionLabel), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("checked", fesm2022_core["\u0275\u0275pipeBind1"](7, 7, ctx_r20.isLsdlSharedToAllUsers$)), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275textInterpolate1"](" ", fesm2022_core["\u0275\u0275pipeBind1"](9, 9, "Qna_TenantSynonyms_Share_To_AllUsers"), " "), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("href", ctx_r20.lsdlSharingLearnMoreLink, fesm2022_core["\u0275\u0275sanitizeUrl"]), 
                fesm2022_core["\u0275\u0275attribute"]("aria-label", ctx_r20.ariaResources.learnMoreAboutSynonyms);
            }
        }
        function QnaBulkEditingComponent_div_0_ng_template_8_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "section", 20), fesm2022_core["\u0275\u0275template"](1, QnaBulkEditingComponent_div_0_ng_template_8_section_1_Template, 9, 4, "section", 21), 
            fesm2022_core["\u0275\u0275template"](2, QnaBulkEditingComponent_div_0_ng_template_8_section_2_Template, 11, 12, "section", 22), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r5 = fesm2022_core["\u0275\u0275nextContext"](2);
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", !(null != ctx_r5.lsdlSharingInfo && ctx_r5.lsdlSharingInfo.syncedFromOthers)), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", null == ctx_r5.lsdlSharingInfo ? null : ctx_r5.lsdlSharingInfo.syncedFromOthers);
            }
        }
        function QnaBulkEditingComponent_div_0_div_11_mat_expansion_panel_1_ng_template_6_th_2_Template(rf, ctx) {
            1 & rf && fesm2022_core["\u0275\u0275element"](0, "th", 59);
        }
        var _c2 = function(a0, a1) {
            return {
                "pbi-glyph-chevrondownsmall": a0,
                "pbi-glyph-chevronupsmall": a1
            };
        };
        function QnaBulkEditingComponent_div_0_div_11_mat_expansion_panel_1_ng_template_6_td_3_div_2_Template(rf, ctx) {
            if (1 & rf) {
                var _r45 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "div", 65)(1, "i", 66), fesm2022_core["\u0275\u0275listener"]("accessible-click", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r45);
                    var element_r41 = fesm2022_core["\u0275\u0275nextContext"]().$implicit, ctx_r43 = fesm2022_core["\u0275\u0275nextContext"](5);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r43.toggleExpansion(element_r41));
                }), fesm2022_core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var element_r41 = fesm2022_core["\u0275\u0275nextContext"]().$implicit;
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction2"](2, _c2, !element_r41.hierarchyInfo.expanded, element_r41.hierarchyInfo.expanded)), 
                fesm2022_core["\u0275\u0275attribute"]("aria-expanded", element_r41.hierarchyInfo.expanded);
            }
        }
        var _c3 = function(a0) {
            return {
                "margin-left": a0
            };
        };
        function QnaBulkEditingComponent_div_0_div_11_mat_expansion_panel_1_ng_template_6_td_3_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "td", 60)(1, "div", 61), 
            fesm2022_core["\u0275\u0275template"](2, QnaBulkEditingComponent_div_0_div_11_mat_expansion_panel_1_ng_template_6_td_3_div_2_Template, 2, 5, "div", 62), 
            fesm2022_core["\u0275\u0275elementStart"](3, "div", 63)(4, "i"), fesm2022_core["\u0275\u0275element"](5, "svg-use-symbol", 64), 
            fesm2022_core["\u0275\u0275elementEnd"]()(), fesm2022_core["\u0275\u0275elementStart"](6, "span"), 
            fesm2022_core["\u0275\u0275text"](7), fesm2022_core["\u0275\u0275elementEnd"]()()()), 
            2 & rf) {
                var element_r41 = ctx.$implicit, ctx_r32 = fesm2022_core["\u0275\u0275nextContext"](5);
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngStyle", fesm2022_core["\u0275\u0275pureFunction1"](6, _c3, 16 * element_r41.level + 1 + "px")), 
                fesm2022_core["\u0275\u0275attribute"]("aria-label", ctx_r32.ariaResources.name + " " + element_r41.name), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", element_r41.hierarchyInfo), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngStyle", fesm2022_core["\u0275\u0275pureFunction1"](8, _c3, element_r41.hierarchyInfo ? "0" : "24px")), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("symbolId", element_r41.symbolId), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275textInterpolate"](element_r41.name);
            }
        }
        function QnaBulkEditingComponent_div_0_div_11_mat_expansion_panel_1_ng_template_6_th_5_Template(rf, ctx) {
            1 & rf && fesm2022_core["\u0275\u0275element"](0, "th", 67);
        }
        var _c4 = function() {
            return {
                "aria-label": "Delete"
            };
        };
        function QnaBulkEditingComponent_div_0_div_11_mat_expansion_panel_1_ng_template_6_td_6_div_2_i_6_Template(rf, ctx) {
            if (1 & rf) {
                var _r57 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "i", 83), fesm2022_core["\u0275\u0275listener"]("accessible-click", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r57);
                    var i_r53 = fesm2022_core["\u0275\u0275nextContext"]().index, ctx_r56 = fesm2022_core["\u0275\u0275nextContext"](), element_r47 = ctx_r56.$implicit, rowIndex_r48 = ctx_r56.index, ctx_r55 = fesm2022_core["\u0275\u0275nextContext"](5);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r55.removeAuthoredTerm(element_r47, i_r53, rowIndex_r48));
                }), fesm2022_core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var element_r47 = fesm2022_core["\u0275\u0275nextContext"](2).$implicit;
                fesm2022_core["\u0275\u0275propertyInterpolate"]("tabindex", element_r47.lsdlVisible ? 0 : -1), 
                fesm2022_core["\u0275\u0275property"]("localizeAttr", fesm2022_core["\u0275\u0275pureFunction0"](2, _c4));
            }
        }
        var _c5 = function(a0, a1) {
            return {
                disable: a0,
                primary: a1
            };
        };
        function QnaBulkEditingComponent_div_0_div_11_mat_expansion_panel_1_ng_template_6_td_6_div_2_Template(rf, ctx) {
            if (1 & rf) {
                var _r61 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "div", 77)(1, "div", 78), fesm2022_core["\u0275\u0275listener"]("cdkDropListEntered", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r61);
                    var ctx_r60 = fesm2022_core["\u0275\u0275nextContext"](6);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r60.enterDropZone($event));
                })("cdkDropListExited", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r61);
                    var ctx_r62 = fesm2022_core["\u0275\u0275nextContext"](6);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r62.exitDropZone($event));
                })("cdkDropListDropped", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r61);
                    var element_r47 = fesm2022_core["\u0275\u0275nextContext"]().$implicit, ctx_r63 = fesm2022_core["\u0275\u0275nextContext"](5);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r63.drop($event, element_r47, "before"));
                }), fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275elementStart"](2, "div", 79)(3, "div", 80), 
                fesm2022_core["\u0275\u0275listener"]("cdkDragStarted", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r61);
                    var ctx_r65 = fesm2022_core["\u0275\u0275nextContext"](6);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r65.dragStart($event));
                })("cdkDragEnded", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r61);
                    var ctx_r66 = fesm2022_core["\u0275\u0275nextContext"](6);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r66.dragEnd($event));
                })("keydown", function($event) {
                    var i_r53 = fesm2022_core["\u0275\u0275restoreView"](_r61).index, ctx_r68 = fesm2022_core["\u0275\u0275nextContext"](), element_r47 = ctx_r68.$implicit, rowIndex_r48 = ctx_r68.index, ctx_r67 = fesm2022_core["\u0275\u0275nextContext"](5);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r67.keydownOnTerm($event, element_r47, i_r53, rowIndex_r48));
                }), fesm2022_core["\u0275\u0275elementStart"](4, "span"), fesm2022_core["\u0275\u0275text"](5), 
                fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275template"](6, QnaBulkEditingComponent_div_0_div_11_mat_expansion_panel_1_ng_template_6_td_6_div_2_i_6_Template, 1, 3, "i", 81), 
                fesm2022_core["\u0275\u0275elementEnd"]()(), fesm2022_core["\u0275\u0275elementStart"](7, "div", 82), 
                fesm2022_core["\u0275\u0275listener"]("cdkDropListEntered", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r61);
                    var ctx_r69 = fesm2022_core["\u0275\u0275nextContext"](6);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r69.enterDropZone($event));
                })("cdkDropListExited", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r61);
                    var ctx_r70 = fesm2022_core["\u0275\u0275nextContext"](6);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r70.exitDropZone($event));
                })("cdkDropListDropped", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r61);
                    var element_r47 = fesm2022_core["\u0275\u0275nextContext"]().$implicit, ctx_r71 = fesm2022_core["\u0275\u0275nextContext"](5);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r71.drop($event, element_r47, "after"));
                }), fesm2022_core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var term_r52 = ctx.$implicit, i_r53 = ctx.index, element_r47 = fesm2022_core["\u0275\u0275nextContext"]().$implicit, state_r1 = fesm2022_core["\u0275\u0275nextContext"](4).ngIf, ctx_r49 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275styleProp"]("width", ctx_r49.separatorWidth, "px"), 
                fesm2022_core["\u0275\u0275property"]("cdkDropListDisabled", !element_r47.lsdlVisible)("cdkDropListData", term_r52), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("cdkDropListDisabled", !element_r47.lsdlVisible)("cdkDropListData", term_r52), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction2"](16, _c5, !element_r47.lsdlVisible, 0 === i_r53 && !state_r1.isImproveLsdlCopilotEnabled))("cdkDragDisabled", 1 === element_r47.terms.length), 
                fesm2022_core["\u0275\u0275attribute"]("aria-label", term_r52.value)("aria-disabled", !element_r47.lsdlVisible), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275textInterpolate"](term_r52.value), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", 1 !== element_r47.terms.length), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275styleProp"]("width", ctx_r49.separatorWidth, "px"), 
                fesm2022_core["\u0275\u0275property"]("cdkDropListDisabled", !element_r47.lsdlVisible)("cdkDropListData", term_r52);
            }
        }
        var _c6 = function(a0, a1) {
            return {
                disable: a0,
                hideButton: a1
            };
        }, _c7 = function() {
            return {
                "aria-label": "QnaTooling_BulkEditing_AddTerm"
            };
        }, _c8 = function(a0) {
            return {
                showInputBox: a0
            };
        };
        function QnaBulkEditingComponent_div_0_div_11_mat_expansion_panel_1_ng_template_6_td_6_Template(rf, ctx) {
            if (1 & rf) {
                var _r76 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "td", 68)(1, "div", 69), fesm2022_core["\u0275\u0275template"](2, QnaBulkEditingComponent_div_0_div_11_mat_expansion_panel_1_ng_template_6_td_6_div_2_Template, 8, 19, "div", 70), 
                fesm2022_core["\u0275\u0275elementStart"](3, "div", 71, 72), fesm2022_core["\u0275\u0275listener"]("accessible-click", function() {
                    var element_r47 = fesm2022_core["\u0275\u0275restoreView"](_r76).$implicit, _r50 = fesm2022_core["\u0275\u0275reference"](4), ctx_r75 = fesm2022_core["\u0275\u0275nextContext"](5);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r75.showInputField(element_r47, _r50));
                }), fesm2022_core["\u0275\u0275element"](5, "span", 73)(6, "i", 74), fesm2022_core["\u0275\u0275elementEnd"](), 
                fesm2022_core["\u0275\u0275elementStart"](7, "input", 75, 76), fesm2022_core["\u0275\u0275listener"]("keyup.enter", function() {
                    var element_r47 = fesm2022_core["\u0275\u0275restoreView"](_r76).$implicit, _r51 = fesm2022_core["\u0275\u0275reference"](8), ctx_r77 = fesm2022_core["\u0275\u0275nextContext"](5);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r77.addTerm(element_r47, _r51));
                })("blur", function() {
                    var element_r47 = fesm2022_core["\u0275\u0275restoreView"](_r76).$implicit, _r51 = fesm2022_core["\u0275\u0275reference"](8), ctx_r78 = fesm2022_core["\u0275\u0275nextContext"](5);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r78.onBlur(element_r47, _r51));
                }), fesm2022_core["\u0275\u0275elementEnd"]()()();
            }
            if (2 & rf) {
                var element_r47 = ctx.$implicit, ctx_r34 = fesm2022_core["\u0275\u0275nextContext"](5);
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275attribute"]("aria-label", ctx_r34.ariaResources.termsInstructions), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngForOf", element_r47.terms), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275propertyInterpolate"]("tabindex", element_r47.lsdlVisible ? 0 : -1), 
                fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction2"](6, _c6, !element_r47.lsdlVisible, !element_r47.showAddButton))("localizeAttr", fesm2022_core["\u0275\u0275pureFunction0"](9, _c7)), 
                fesm2022_core["\u0275\u0275advance"](4), fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction1"](10, _c8, !element_r47.showAddButton));
            }
        }
        function QnaBulkEditingComponent_div_0_div_11_mat_expansion_panel_1_ng_template_6_th_8_div_2_Template(rf, ctx) {
            1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 87), fesm2022_core["\u0275\u0275element"](1, "span", 88)(2, "a", 89), 
            fesm2022_core["\u0275\u0275elementEnd"]());
        }
        function QnaBulkEditingComponent_div_0_div_11_mat_expansion_panel_1_ng_template_6_th_8_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "th", 84), fesm2022_core["\u0275\u0275element"](1, "span", 85), 
            fesm2022_core["\u0275\u0275template"](2, QnaBulkEditingComponent_div_0_div_11_mat_expansion_panel_1_ng_template_6_th_8_div_2_Template, 3, 0, "div", 86), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var state_r1 = fesm2022_core["\u0275\u0275nextContext"](4).ngIf;
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("ngIf", state_r1.isImproveLsdlCopilotEnabled);
            }
        }
        var _c9 = function(a0, a1) {
            return {
                disable: a0,
                show: a1
            };
        }, _c10 = function(a2) {
            return {
                tooltipShowOnFocus: !0,
                tooltipShowOnHover: !1,
                tooltipDescription: a2,
                isTooltipForModalDialog: !0,
                tooltipDelay: 0,
                tooltipHideDelay: 0
            };
        }, _c11 = function(a2) {
            return {
                tooltipShowOnFocus: !1,
                tooltipShowOnHover: !0,
                tooltipDescription: a2,
                isTooltipForModalDialog: !0,
                tooltipDelay: 0,
                tooltipHideDelay: 0
            };
        }, _c12 = function() {
            return {
                "aria-label": "QnaTooling_BulkEditing_PromoteTerm"
            };
        };
        function QnaBulkEditingComponent_div_0_div_11_mat_expansion_panel_1_ng_template_6_td_9_ng_container_2_div_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r93 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "div", 96)(1, "span", 97), fesm2022_core["\u0275\u0275text"](2), 
                fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275elementStart"](3, "i", 98), 
                fesm2022_core["\u0275\u0275listener"]("accessible-click", function() {
                    var i_r90 = fesm2022_core["\u0275\u0275restoreView"](_r93).index, ctx_r92 = fesm2022_core["\u0275\u0275nextContext"](2), element_r81 = ctx_r92.$implicit, rowIndex_r82 = ctx_r92.index, ctx_r91 = fesm2022_core["\u0275\u0275nextContext"](5);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r91.promote(element_r81, i_r90, rowIndex_r82));
                })("focusin", function($event) {
                    return $event.stopPropagation();
                }), fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275elementStart"](4, "i", 99), 
                fesm2022_core["\u0275\u0275listener"]("accessible-click", function() {
                    var i_r90 = fesm2022_core["\u0275\u0275restoreView"](_r93).index, ctx_r96 = fesm2022_core["\u0275\u0275nextContext"](2), element_r81 = ctx_r96.$implicit, rowIndex_r82 = ctx_r96.index, ctx_r95 = fesm2022_core["\u0275\u0275nextContext"](5);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r95.removeSuggestedTerm(element_r81, i_r90, rowIndex_r82));
                })("focusin", function($event) {
                    return $event.stopPropagation();
                }), fesm2022_core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var term_r89 = ctx.$implicit, i_r90 = ctx.index, element_r81 = fesm2022_core["\u0275\u0275nextContext"](2).$implicit, ctx_r88 = fesm2022_core["\u0275\u0275nextContext"](5);
                fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction2"](10, _c9, !element_r81.lsdlVisible, i_r90 < ctx_r88.defaultSuggestedTermsCount || element_r81.suggestedTermsExpanded))("pbi-tooltip", term_r89.tooltipText ? fesm2022_core["\u0275\u0275pureFunction1"](13, _c10, term_r89.tooltipText) : void 0), 
                fesm2022_core["\u0275\u0275attribute"]("aria-disabled", !element_r81.lsdlVisible)("aria-label", term_r89.value + ". " + term_r89.tooltipText), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("pbi-tooltip", term_r89.tooltipText ? fesm2022_core["\u0275\u0275pureFunction1"](15, _c11, term_r89.tooltipText) : void 0), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275textInterpolate"](term_r89.value), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275propertyInterpolate"]("tabindex", element_r81.lsdlVisible ? 0 : -1), 
                fesm2022_core["\u0275\u0275property"]("localizeAttr", fesm2022_core["\u0275\u0275pureFunction0"](17, _c12)), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275propertyInterpolate"]("tabindex", element_r81.lsdlVisible ? 0 : -1), 
                fesm2022_core["\u0275\u0275property"]("localizeAttr", fesm2022_core["\u0275\u0275pureFunction0"](18, _c4));
            }
        }
        function QnaBulkEditingComponent_div_0_div_11_mat_expansion_panel_1_ng_template_6_td_9_ng_container_2_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275template"](1, QnaBulkEditingComponent_div_0_div_11_mat_expansion_panel_1_ng_template_6_td_9_ng_container_2_div_1_Template, 5, 19, "div", 95), 
            fesm2022_core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var element_r81 = fesm2022_core["\u0275\u0275nextContext"]().$implicit;
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngForOf", element_r81.suggestedTerms);
            }
        }
        var _c13 = function(a0) {
            return {
                show: a0
            };
        };
        function QnaBulkEditingComponent_div_0_div_11_mat_expansion_panel_1_ng_template_6_td_9_ng_template_3_div_0_Template(rf, ctx) {
            if (1 & rf) {
                var _r105 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "div", 101)(1, "suggested-term-pill", 102), 
                fesm2022_core["\u0275\u0275listener"]("onPromoted", function() {
                    var i_r102 = fesm2022_core["\u0275\u0275restoreView"](_r105).index, ctx_r104 = fesm2022_core["\u0275\u0275nextContext"](2), element_r81 = ctx_r104.$implicit, rowIndex_r82 = ctx_r104.index, ctx_r103 = fesm2022_core["\u0275\u0275nextContext"](5);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r103.promote(element_r81, i_r102, rowIndex_r82));
                })("onRemoved", function() {
                    var i_r102 = fesm2022_core["\u0275\u0275restoreView"](_r105).index, ctx_r107 = fesm2022_core["\u0275\u0275nextContext"](2), element_r81 = ctx_r107.$implicit, rowIndex_r82 = ctx_r107.index, ctx_r106 = fesm2022_core["\u0275\u0275nextContext"](5);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r106.removeSuggestedTerm(element_r81, i_r102, rowIndex_r82));
                }), fesm2022_core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var term_r101 = ctx.$implicit, i_r102 = ctx.index, element_r81 = fesm2022_core["\u0275\u0275nextContext"](2).$implicit, ctx_r100 = fesm2022_core["\u0275\u0275nextContext"](5);
                fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction1"](3, _c13, i_r102 < ctx_r100.defaultSuggestedTermsCount || element_r81.suggestedTermsExpanded)), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("term", term_r101)("isDisabled", !element_r81.lsdlVisible);
            }
        }
        function QnaBulkEditingComponent_div_0_div_11_mat_expansion_panel_1_ng_template_6_td_9_ng_template_3_Template(rf, ctx) {
            if (1 & rf && fesm2022_core["\u0275\u0275template"](0, QnaBulkEditingComponent_div_0_div_11_mat_expansion_panel_1_ng_template_6_td_9_ng_template_3_div_0_Template, 2, 5, "div", 100), 
            2 & rf) {
                var element_r81 = fesm2022_core["\u0275\u0275nextContext"]().$implicit;
                fesm2022_core["\u0275\u0275property"]("ngForOf", element_r81.suggestedTerms);
            }
        }
        var _c14 = function(a0) {
            return {
                disable: a0
            };
        };
        function QnaBulkEditingComponent_div_0_div_11_mat_expansion_panel_1_ng_template_6_td_9_div_5_Template(rf, ctx) {
            if (1 & rf) {
                var _r112 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "div", 103), fesm2022_core["\u0275\u0275listener"]("accessible-click", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r112);
                    var ctx_r111 = fesm2022_core["\u0275\u0275nextContext"](), element_r81 = ctx_r111.$implicit, rowIndex_r82 = ctx_r111.index, ctx_r110 = fesm2022_core["\u0275\u0275nextContext"](5);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r110.expandSuggestedTerms(element_r81, rowIndex_r82));
                }), fesm2022_core["\u0275\u0275elementStart"](1, "span"), fesm2022_core["\u0275\u0275text"](2), 
                fesm2022_core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var element_r81 = fesm2022_core["\u0275\u0275nextContext"]().$implicit, ctx_r86 = fesm2022_core["\u0275\u0275nextContext"](5);
                fesm2022_core["\u0275\u0275propertyInterpolate"]("tabindex", element_r81.lsdlVisible ? 0 : -1), 
                fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction1"](4, _c14, !element_r81.lsdlVisible)), 
                fesm2022_core["\u0275\u0275attribute"]("aria-label", ctx_r86.ariaResources.expandSuggestedTerms(element_r81.suggestedTerms.length - ctx_r86.defaultSuggestedTermsCount)), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275textInterpolate1"]("+", element_r81.suggestedTerms.length - ctx_r86.defaultSuggestedTermsCount, "");
            }
        }
        function QnaBulkEditingComponent_div_0_div_11_mat_expansion_panel_1_ng_template_6_td_9_div_6_Template(rf, ctx) {
            1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 104), fesm2022_core["\u0275\u0275element"](1, "spinner", 105)(2, "span", 106), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf && (fesm2022_core["\u0275\u0275advance"](1), 
            fesm2022_core["\u0275\u0275property"]("delay", 0));
        }
        var _c15 = function() {
            return {
                "aria-label": "Suggestions"
            };
        };
        function QnaBulkEditingComponent_div_0_div_11_mat_expansion_panel_1_ng_template_6_td_9_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "td", 68)(1, "div", 90), 
            fesm2022_core["\u0275\u0275template"](2, QnaBulkEditingComponent_div_0_div_11_mat_expansion_panel_1_ng_template_6_td_9_ng_container_2_Template, 2, 1, "ng-container", 91), 
            fesm2022_core["\u0275\u0275template"](3, QnaBulkEditingComponent_div_0_div_11_mat_expansion_panel_1_ng_template_6_td_9_ng_template_3_Template, 1, 1, "ng-template", null, 92, fesm2022_core["\u0275\u0275templateRefExtractor"]), 
            fesm2022_core["\u0275\u0275template"](5, QnaBulkEditingComponent_div_0_div_11_mat_expansion_panel_1_ng_template_6_td_9_div_5_Template, 3, 6, "div", 93), 
            fesm2022_core["\u0275\u0275template"](6, QnaBulkEditingComponent_div_0_div_11_mat_expansion_panel_1_ng_template_6_td_9_div_6_Template, 3, 1, "div", 94), 
            fesm2022_core["\u0275\u0275elementEnd"]()()), 2 & rf) {
                var element_r81 = ctx.$implicit, _r84 = fesm2022_core["\u0275\u0275reference"](4), state_r1 = fesm2022_core["\u0275\u0275nextContext"](4).ngIf;
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275classProp"]("suggestedTermsCellContainer", (null == element_r81.suggestedTerms ? null : element_r81.suggestedTerms.length) > 0), 
                fesm2022_core["\u0275\u0275propertyInterpolate"]("tabindex", 0 !== (null == element_r81.suggestedTerms ? null : element_r81.suggestedTerms.length) ? "0" : "-1"), 
                fesm2022_core["\u0275\u0275property"]("localizeAttr", fesm2022_core["\u0275\u0275pureFunction0"](8, _c15)), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", !state_r1.isImproveLsdlCopilotEnabled)("ngIfElse", _r84), 
                fesm2022_core["\u0275\u0275advance"](3), fesm2022_core["\u0275\u0275property"]("ngIf", !element_r81.suggestedTermsExpanded), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", null == element_r81 ? null : element_r81.isLoading);
            }
        }
        function QnaBulkEditingComponent_div_0_div_11_mat_expansion_panel_1_ng_template_6_th_11_Template(rf, ctx) {
            1 & rf && fesm2022_core["\u0275\u0275element"](0, "th", 107);
        }
        function QnaBulkEditingComponent_div_0_div_11_mat_expansion_panel_1_ng_template_6_td_12_mat_slide_toggle_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r119 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "mat-slide-toggle", 109), fesm2022_core["\u0275\u0275listener"]("change", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r119);
                    var element_r115 = fesm2022_core["\u0275\u0275nextContext"]().$implicit, tableIndex_r29 = fesm2022_core["\u0275\u0275nextContext"](2).index, ctx_r117 = fesm2022_core["\u0275\u0275nextContext"](3);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r117.onToggleEntity(element_r115, tableIndex_r29));
                }), fesm2022_core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var element_r115 = fesm2022_core["\u0275\u0275nextContext"]().$implicit, ctx_r116 = fesm2022_core["\u0275\u0275nextContext"](5);
                fesm2022_core["\u0275\u0275propertyInterpolate"]("aria-label", ctx_r116.ariaResources.toggleLabel), 
                fesm2022_core["\u0275\u0275property"]("checked", element_r115.lsdlVisible);
            }
        }
        function QnaBulkEditingComponent_div_0_div_11_mat_expansion_panel_1_ng_template_6_td_12_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "td", 68), fesm2022_core["\u0275\u0275template"](1, QnaBulkEditingComponent_div_0_div_11_mat_expansion_panel_1_ng_template_6_td_12_mat_slide_toggle_1_Template, 1, 2, "mat-slide-toggle", 108), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var element_r115 = ctx.$implicit;
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", "Level" !== element_r115.entityType);
            }
        }
        function QnaBulkEditingComponent_div_0_div_11_mat_expansion_panel_1_ng_template_6_tr_13_Template(rf, ctx) {
            1 & rf && fesm2022_core["\u0275\u0275element"](0, "tr", 110);
        }
        function QnaBulkEditingComponent_div_0_div_11_mat_expansion_panel_1_ng_template_6_tr_14_Template(rf, ctx) {
            1 & rf && fesm2022_core["\u0275\u0275element"](0, "tr", 111);
        }
        function QnaBulkEditingComponent_div_0_div_11_mat_expansion_panel_1_ng_template_6_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "table", 46), fesm2022_core["\u0275\u0275elementContainerStart"](1, 47), 
            fesm2022_core["\u0275\u0275template"](2, QnaBulkEditingComponent_div_0_div_11_mat_expansion_panel_1_ng_template_6_th_2_Template, 1, 0, "th", 48), 
            fesm2022_core["\u0275\u0275template"](3, QnaBulkEditingComponent_div_0_div_11_mat_expansion_panel_1_ng_template_6_td_3_Template, 8, 10, "td", 49), 
            fesm2022_core["\u0275\u0275elementContainerEnd"](), fesm2022_core["\u0275\u0275elementContainerStart"](4, 50), 
            fesm2022_core["\u0275\u0275template"](5, QnaBulkEditingComponent_div_0_div_11_mat_expansion_panel_1_ng_template_6_th_5_Template, 1, 0, "th", 51), 
            fesm2022_core["\u0275\u0275template"](6, QnaBulkEditingComponent_div_0_div_11_mat_expansion_panel_1_ng_template_6_td_6_Template, 9, 12, "td", 52), 
            fesm2022_core["\u0275\u0275elementContainerEnd"](), fesm2022_core["\u0275\u0275elementContainerStart"](7, 53), 
            fesm2022_core["\u0275\u0275template"](8, QnaBulkEditingComponent_div_0_div_11_mat_expansion_panel_1_ng_template_6_th_8_Template, 3, 1, "th", 54), 
            fesm2022_core["\u0275\u0275template"](9, QnaBulkEditingComponent_div_0_div_11_mat_expansion_panel_1_ng_template_6_td_9_Template, 7, 9, "td", 52), 
            fesm2022_core["\u0275\u0275elementContainerEnd"](), fesm2022_core["\u0275\u0275elementContainerStart"](10, 55), 
            fesm2022_core["\u0275\u0275template"](11, QnaBulkEditingComponent_div_0_div_11_mat_expansion_panel_1_ng_template_6_th_11_Template, 1, 0, "th", 56), 
            fesm2022_core["\u0275\u0275template"](12, QnaBulkEditingComponent_div_0_div_11_mat_expansion_panel_1_ng_template_6_td_12_Template, 2, 1, "td", 52), 
            fesm2022_core["\u0275\u0275elementContainerEnd"](), fesm2022_core["\u0275\u0275template"](13, QnaBulkEditingComponent_div_0_div_11_mat_expansion_panel_1_ng_template_6_tr_13_Template, 1, 0, "tr", 57), 
            fesm2022_core["\u0275\u0275template"](14, QnaBulkEditingComponent_div_0_div_11_mat_expansion_panel_1_ng_template_6_tr_14_Template, 1, 0, "tr", 58), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var table_r28 = fesm2022_core["\u0275\u0275nextContext"]().$implicit, ctx_r30 = fesm2022_core["\u0275\u0275nextContext"](3);
                fesm2022_core["\u0275\u0275property"]("dataSource", table_r28.entities), fesm2022_core["\u0275\u0275advance"](13), 
                fesm2022_core["\u0275\u0275property"]("matHeaderRowDef", ctx_r30.columnsToDisplay), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("matRowDefColumns", ctx_r30.columnsToDisplay);
            }
        }
        function QnaBulkEditingComponent_div_0_div_11_mat_expansion_panel_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r126 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "mat-expansion-panel", 40), fesm2022_core["\u0275\u0275listener"]("expandedChange", function($event) {
                    var restoredCtx = fesm2022_core["\u0275\u0275restoreView"](_r126);
                    return fesm2022_core["\u0275\u0275resetView"](restoredCtx.$implicit.expanded = $event);
                })("opened", function() {
                    var table_r28 = fesm2022_core["\u0275\u0275restoreView"](_r126).$implicit, ctx_r127 = fesm2022_core["\u0275\u0275nextContext"](3);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r127.onTableExpanded(table_r28));
                }), fesm2022_core["\u0275\u0275elementStart"](1, "mat-expansion-panel-header", 41)(2, "mat-panel-title", 42), 
                fesm2022_core["\u0275\u0275text"](3), fesm2022_core["\u0275\u0275elementEnd"](), 
                fesm2022_core["\u0275\u0275elementStart"](4, "mat-slide-toggle", 43), fesm2022_core["\u0275\u0275listener"]("change", function() {
                    var table_r28 = fesm2022_core["\u0275\u0275restoreView"](_r126).$implicit, ctx_r128 = fesm2022_core["\u0275\u0275nextContext"](3);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r128.onToggleHeader(table_r28));
                })("click", function($event) {
                    return $event.stopPropagation();
                })("keydown", function($event) {
                    return $event.stopPropagation();
                }), fesm2022_core["\u0275\u0275element"](5, "label", 44), fesm2022_core["\u0275\u0275elementEnd"]()(), 
                fesm2022_core["\u0275\u0275template"](6, QnaBulkEditingComponent_div_0_div_11_mat_expansion_panel_1_ng_template_6_Template, 15, 3, "ng-template", 45), 
                fesm2022_core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var table_r28 = ctx.$implicit, ctx_r27 = fesm2022_core["\u0275\u0275nextContext"](3);
                fesm2022_core["\u0275\u0275property"]("expanded", table_r28.expanded)("togglePosition", "before"), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275attribute"]("aria-label", table_r28.name), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275textInterpolate1"](" ", table_r28.name, " "), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275propertyInterpolate"]("aria-label", ctx_r27.ariaResources.toggleLabel), 
                fesm2022_core["\u0275\u0275property"]("checked", table_r28.lsdlVisible);
            }
        }
        function QnaBulkEditingComponent_div_0_div_11_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 38), fesm2022_core["\u0275\u0275template"](1, QnaBulkEditingComponent_div_0_div_11_mat_expansion_panel_1_Template, 7, 6, "mat-expansion-panel", 39), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r6 = fesm2022_core["\u0275\u0275nextContext"](2);
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngForOf", ctx_r6.viewModel.tableEntities);
            }
        }
        function QnaBulkEditingComponent_div_0_div_12_Template(rf, ctx) {
            1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 112), fesm2022_core["\u0275\u0275element"](1, "spinner", 113), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf && (fesm2022_core["\u0275\u0275advance"](1), 
            fesm2022_core["\u0275\u0275property"]("delay", 100));
        }
        var _c16 = function(a0) {
            return {
                withLoadingMask: a0
            };
        };
        function QnaBulkEditingComponent_div_0_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 1), fesm2022_core["\u0275\u0275element"](1, "h1", 2), 
            fesm2022_core["\u0275\u0275elementStart"](2, "div"), fesm2022_core["\u0275\u0275element"](3, "h2", 3), 
            fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275template"](4, QnaBulkEditingComponent_div_0_ng_container_4_Template, 2, 1, "ng-container", 4), 
            fesm2022_core["\u0275\u0275pipe"](5, "async"), fesm2022_core["\u0275\u0275elementStart"](6, "div", 5), 
            fesm2022_core["\u0275\u0275template"](7, QnaBulkEditingComponent_div_0_div_7_Template, 9, 5, "div", 6), 
            fesm2022_core["\u0275\u0275template"](8, QnaBulkEditingComponent_div_0_ng_template_8_Template, 3, 2, "ng-template", null, 7, fesm2022_core["\u0275\u0275templateRefExtractor"]), 
            fesm2022_core["\u0275\u0275elementStart"](10, "section", 8), fesm2022_core["\u0275\u0275template"](11, QnaBulkEditingComponent_div_0_div_11_Template, 2, 1, "div", 9), 
            fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275template"](12, QnaBulkEditingComponent_div_0_div_12_Template, 2, 1, "div", 10), 
            fesm2022_core["\u0275\u0275elementEnd"]()()), 2 & rf) {
                var state_r1 = ctx.ngIf, _r4 = fesm2022_core["\u0275\u0275reference"](9), ctx_r0 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275advance"](4), fesm2022_core["\u0275\u0275property"]("ngIf", state_r1.isImproveLsdlCopilotEnabled && fesm2022_core["\u0275\u0275pipeBind1"](5, 6, ctx_r0.bannerContent$)), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction1"](8, _c16, state_r1.loadingState.isLoading)), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", state_r1.isImproveLsdlCopilotEnabled)("ngIfElse", _r4), 
                fesm2022_core["\u0275\u0275advance"](4), fesm2022_core["\u0275\u0275property"]("ngIf", null == ctx_r0.viewModel ? null : ctx_r0.viewModel.tableEntities), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", state_r1.loadingState.isLoading);
            }
        }
        var _c17 = function(a0, a1) {
            return {
                loadingState: a0,
                isImproveLsdlCopilotEnabled: a1
            };
        }, improveLsdlDiagnosticCodeToUserMessageKeyMappings = ((_a = {})[0] = "Qna_ImproveLsdl_Error_RequiresNewerVersion", 
        _a[1] = "Qna_ImproveLsdl_Error_FailedToOpenLsdlIndexSearcher", _a[2] = "Qna_ImproveLsdl_Error_Generic", 
        _a[3] = "Qna_ImproveLsdl_Error_FeatureNotAvailable", _a[4] = "Qna_ImproveLsdl_Error_Generic", 
        _a[5] = "Qna_ImproveLsdl_Error_NetworkIssue", _a[6] = "Qna_ImproveLsdl_Error_NoLsdlIndexAvailable", 
        _a[7] = "Qna_ImproveLsdl_Error_NoLsdlSharingModelsAvailable", _a[8] = "Qna_ImproveLsdl_Error_RequiresNewerVersion", 
        _a[9] = "Qna_ImproveLsdl_Error_UnsupportedLanguage", _a), QnaBulkEditingComponent = function() {
            function QnaBulkEditingComponent(accountService, changeDetectorRef, conceptualSchemaProxy, dataSources, dialogService, featureSwitchService, highContrastCssGenerationService, lazyScoped, localizationService, pbiOverlay, qnaService, screenReaderService, telemetryService, lsdlUiBlockerService, copilotRequirementsService, eventAggregation, copilotCapabilityService) {
                var _this = this;
                this.accountService = accountService, this.changeDetectorRef = changeDetectorRef, 
                this.conceptualSchemaProxy = conceptualSchemaProxy, this.dataSources = dataSources, 
                this.dialogService = dialogService, this.featureSwitchService = featureSwitchService, 
                this.highContrastCssGenerationService = highContrastCssGenerationService, this.lazyScoped = lazyScoped, 
                this.localizationService = localizationService, this.pbiOverlay = pbiOverlay, this.qnaService = qnaService, 
                this.screenReaderService = screenReaderService, this.telemetryService = telemetryService, 
                this.lsdlUiBlockerService = lsdlUiBlockerService, this.copilotRequirementsService = copilotRequirementsService, 
                this.eventAggregation = eventAggregation, this.copilotCapabilityService = copilotCapabilityService, 
                this.linguisticSchemaUpdated = new fesm2022_core.EventEmitter, this.showAllMouseActionBlocker = new fesm2022_core.EventEmitter, 
                this.lsdlSharingLearnMoreLink = "https://go.microsoft.com/fwlink/?linkid=2163545", 
                this.columnsToDisplay = [ "name", "terms", "suggestedTerms", "include" ], this.defaultSuggestedTermsCount = 5, 
                this.separatorWidth = 4, this.destroy$ = new Subject.xQ, this.state$ = new BehaviorSubject.X("default"), 
                this.luciaDomainModelChangedHandler = function() {
                    return _this.fetchAndUpdateCurrentLsdl();
                }, this.loadingState$ = (0, combineLatest.aj)([ this.state$, this.lsdlUiBlockerService.isBlocked$.pipe((0, 
                startWith.O)(!1)) ]).pipe((0, takeUntil.R)(this.destroy$), (0, map.U)(function(_a) {
                    var state = _a[0], isSigningIn = "signingIn" === state;
                    return {
                        isLoading: isSigningIn || "syncingSharedLsdl" === state || _a[1],
                        reason: isSigningIn ? "signingIn" : "improvingLsdl"
                    };
                }), (0, distinctUntilChanged.x)(), (0, shareReplay.d)(1)), this.lsdlNameToEntityViewModel = {}, 
                this.viewModelFactory = (0, fieldListViewModelFactory.o)(this.localizationService, this.featureSwitchService), 
                this.eventAggregation.subscribe("LuciaDomainModelChangedEvent", this.luciaDomainModelChangedHandler), 
                this.getTenantSynonymsDescriptionHtml = this.localizationService.format("Qna_TenantSynonyms_GetMore_Description", [ this.localizationService.get("Suggestions") ]), 
                this.ariaResources = {
                    refreshActionLabel: void 0,
                    toggleLabel: this.localizationService.get("QnaTooling_BulkEditing_IncludeInQnATitle"),
                    name: this.localizationService.get("Name"),
                    termsInstructions: this.localizationService.get("QnaTooling_BulkEditing_TermsListScreenReaderInstruction"),
                    learnMoreAboutSynonyms: this.localizationService.format("LearnMore_About", [ this.localizationService.get("TenantSetting_QnaLsdlSharing_Title") ]),
                    expandSuggestedTerms: function(count) {
                        return _this.localizationService.format("QnaTooling_BulkEditing_ExpandSuggestedQuestions", [ count ]);
                    }
                }, this.isImproveLsdlCopilotEnabled$ = this.featureSwitchService.featureSwitches$.pipe((0, 
                map.U)(function(fs) {
                    return fs.qnaImproveLsdlCopilot;
                })), this.initializeHighContrastRules();
            }
            return QnaBulkEditingComponent.prototype.keyEvent = function(_event) {
                this.chosenInputElement && this.chosenInputElement.focus();
            }, QnaBulkEditingComponent.prototype.ngOnInit = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.initialize() ];

                          case 1:
                            return _a.sent(), [ 2 ];
                        }
                    });
                });
            }, QnaBulkEditingComponent.prototype.ngOnDestroy = function() {
                this.changeDetectorRef.detach(), this.eventAggregation.unsubscribe("LuciaDomainModelChangedEvent", this.luciaDomainModelChangedHandler), 
                this.destroy$.next(), this.destroy$.complete();
            }, QnaBulkEditingComponent.prototype.handleAttemptToLeave = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var leave, loadingState, confirmationDialogRef, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return leave = !0, [ 4, this.loadingState$.pipe((0, take.q)(1)).toPromise() ];

                          case 1:
                            return loadingState = _a.sent(), debug.fF.assert(function() {
                                return "signingIn" !== loadingState.reason;
                            }, "expected signin attempt to block handle attempt to leave"), loadingState.isLoading ? (this.showAllMouseActionBlocker.emit(!0), 
                            confirmationDialogRef = showConfirmationDialogInCenter(this.dialogService, {
                                title: this.localizationService.get("Qna_Sync_SharedLsdl_Cancellation_Confirmation_Title"),
                                message: this.localizationService.get("Qna_Sync_SharedLsdl_Cancellation_Confirmation_Message"),
                                okButtonText: this.localizationService.get("ModalDialogButtonText_Leave"),
                                cancelButtonText: this.localizationService.get("Keep_Loading")
                            }, {
                                autoFocus: !0,
                                disableClose: !0,
                                maxWidth: 400,
                                panelClass: [ "bulkEditingConfirmationDialogPanel", "themeableElement" ]
                            }), this.cancelSyncSharedLsdlPromise = new Promise(function(resolve, _reject) {
                                confirmationDialogRef.afterClosed().pipe((0, take.q)(1)).subscribe(function(dialogResult) {
                                    var shouldLeave = 1 === dialogResult;
                                    _this.showAllMouseActionBlocker.emit(!1), resolve(shouldLeave);
                                });
                            }), [ 4, this.cancelSyncSharedLsdlPromise ]) : [ 2, leave ];

                          case 2:
                            return (leave = _a.sent()) ? [ 4, this.ensureImproveLsdlService() ] : [ 3, 4 ];

                          case 3:
                            _a.sent(), this.improveLsdlService.cancelImproveLinguisticSchema(), this.setLoadingBannerAndState(!1), 
                            _a.label = 4;

                          case 4:
                            return [ 2, leave ];
                        }
                    });
                });
            }, QnaBulkEditingComponent.prototype.showInputField = function(entity, addButton) {
                entity.lsdlVisible && (entity.showAddButton = !1, this.chosenInputElement = addButton.parentElement.lastElementChild);
            }, QnaBulkEditingComponent.prototype.addTerm = function(entityViewModel, input) {
                var _a, _b;
                if (entityViewModel.lsdlVisible) {
                    debug.fF.assert(function() {
                        return null != input;
                    }, "expect input element is not null");
                    var trimmedValue = null !== (_b = null === (_a = input.value) || void 0 === _a ? void 0 : _a.trim()) && void 0 !== _b ? _b : "";
                    "" !== trimmedValue && (this.getEntityModel(entityViewModel).addAuthoredTerm(trimmedValue), 
                    this.commitChanges(), this.reloadAllTerms(entityViewModel), this.telemetryService.logChildEvent(this.openingTelemetryEvent, QnAToolingAddAuthoredTerm, {
                        entityType: convertEntityTypeToTelemetryEntityType(entityViewModel.entityType)
                    }), entityViewModel.isLoading = !0, this.screenReaderService.alertPolite(this.localizationService.format("QnaTooling_BulkEditing_TermAdded", [ trimmedValue ]))), 
                    input.value = "", entityViewModel.showAddButton = !0;
                }
            }, QnaBulkEditingComponent.prototype.onBlur = function(entity, input) {
                entity && (entity.showAddButton = !0, this.chosenInputElement && (this.addTerm(entity, input), 
                this.chosenInputElement = void 0));
            }, QnaBulkEditingComponent.prototype.toggleExpansion = function(entityViewModel, updateFilter) {
                var _a;
                void 0 === updateFilter && (updateFilter = !0), debug.fF.assertValue(entityViewModel, "entityViewModel"), 
                debug.fF.assert(function() {
                    return !!entityViewModel.hierarchyInfo;
                }, "hierarchyInfo not present for toggle"), entityViewModel.hierarchyInfo.expanded = !entityViewModel.hierarchyInfo.expanded;
                for (var _i = 0, _b = entityViewModel.hierarchyInfo.children; _i < _b.length; _i++) {
                    var child = _b[_i];
                    entityViewModel.hierarchyInfo.expanded ? child.visible = !0 : (child.visible = !1, 
                    (null === (_a = child.hierarchyInfo) || void 0 === _a ? void 0 : _a.expanded) && this.toggleExpansion(child, !1));
                }
                if (updateFilter) for (var _c = 0, _d = this.viewModel.tableEntities; _c < _d.length; _c++) {
                    var entity = _d[_c];
                    entity.entities.filter = "-" === entity.entities.filter ? "--" : "-";
                }
            }, QnaBulkEditingComponent.prototype.onTableExpanded = function(tableEntity) {
                tableEntity.hasInit || (tableEntity.hasInit = !0);
            }, QnaBulkEditingComponent.prototype.onToggleEntity = function(entityViewModel, tableIndex) {
                entityViewModel.lsdlVisible = !entityViewModel.lsdlVisible;
                var headerViewModel = this.viewModel.tableEntities[tableIndex], currentEntityVisible = entityViewModel.lsdlVisible, hasVisibleField = _.some(headerViewModel.entities.data, function(viewModel) {
                    return viewModel.lsdlVisible;
                }), lsdlEntity = this.getEntityModel(entityViewModel);
                if ("Property" === entityViewModel.entityType) lsdlEntity.visibility = currentEntityVisible ? "Visible" : "Hidden"; else if ("Table" === entityViewModel.entityType) lsdlEntity.visibility = currentEntityVisible ? "Visible" : hasVisibleField ? "Children" : "Hidden"; else if ("Hierarchy" === entityViewModel.entityType) {
                    lsdlEntity.visibility = currentEntityVisible ? "Visible" : "Hidden";
                    for (var _i = 0, children_1 = entityViewModel.hierarchyInfo.children; _i < children_1.length; _i++) {
                        var level = children_1[_i];
                        level.lsdlVisible = currentEntityVisible, this.getEntityModel(level).visibility = lsdlEntity.visibility;
                    }
                }
                headerViewModel.lsdlVisible = !!currentEntityVisible || hasVisibleField;
                var lsdlTableEntity = this.documentModel.getEntityForTable(headerViewModel.name);
                "Property" === entityViewModel.entityType && "Visible" !== lsdlTableEntity.visibility && (lsdlTableEntity.visibility = hasVisibleField ? "Children" : "Hidden"), 
                this.telemetryService.logChildEvent(this.openingTelemetryEvent, QnAToolingToggleEntity, {
                    currentToggleState: currentEntityVisible,
                    entityType: convertEntityTypeToTelemetryEntityType(entityViewModel.entityType)
                }), this.commitChanges();
            }, QnaBulkEditingComponent.prototype.onToggleHeader = function(tableEntity) {
                tableEntity.lsdlVisible = !tableEntity.lsdlVisible, this.flipToggleOnEntities(tableEntity.entities.data, tableEntity.lsdlVisible), 
                this.commitChanges();
            }, QnaBulkEditingComponent.prototype.flipToggleOnEntities = function(viewModelEntities, visible) {
                var _a;
                void 0 === visible && (visible = !0);
                for (var _i = 0, viewModelEntities_1 = viewModelEntities; _i < viewModelEntities_1.length; _i++) {
                    var entityViewModel = viewModelEntities_1[_i];
                    entityViewModel.lsdlVisible = visible, this.getEntityModel(entityViewModel).visibility = visible ? "Visible" : "Hidden", 
                    (null === (_a = entityViewModel.hierarchyInfo) || void 0 === _a ? void 0 : _a.children) && this.flipToggleOnEntities(entityViewModel.hierarchyInfo.children, visible);
                }
            }, QnaBulkEditingComponent.prototype.removeAuthoredTerm = function(entityViewModel, index, rowIndex) {
                this.remove(entityViewModel, index, entityViewModel.terms, !1, rowIndex);
            }, QnaBulkEditingComponent.prototype.removeSuggestedTerm = function(entityViewModel, index, rowIndex) {
                this.remove(entityViewModel, index, entityViewModel.suggestedTerms, !0, rowIndex);
            }, QnaBulkEditingComponent.prototype.promote = function(entityViewModel, index, rowIndex) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var term, lsdlEntity, termModel, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return entityViewModel.lsdlVisible ? (debug.fF.assert(function() {
                                return index > -1;
                            }, "index should be greater or equal to 0"), term = entityViewModel.suggestedTerms[index], 
                            lsdlEntity = this.getEntityModel(entityViewModel), (termModel = _.find(lsdlEntity.terms, function(t) {
                                return t.value === term.value;
                            })) ? (lsdlEntity.promoteSuggestedTerm(termModel), this.commitChanges(), this.telemetryService.logChildEvent(this.openingTelemetryEvent, QnAToolingPromoteSuggestedTerm, {
                                entityType: convertEntityTypeToTelemetryEntityType(entityViewModel.entityType),
                                sourceAgent: termModel.sourceAgent,
                                sourceType: termModel.sourceType.toString()
                            }), this.reloadAllTerms(entityViewModel), this.updateAddButtonFocus(entityViewModel, rowIndex), 
                            entityViewModel.isLoading = !0, this.noSuggestedTermPromotedYet ? [ 4, this.dialogService.showTemplateDialog("SynonymPromotionDialogComponent", {
                                title: this.localizationService.get("QnaTooling_Synonyms_FirstPromotion_Title"),
                                hideCancelButton: !0
                            }) ] : [ 2 ]) : (this.reloadAllTerms(entityViewModel), [ 2 ])) : [ 2 ];

                          case 1:
                            return _a.sent().afterClosed().pipe((0, take.q)(1)).subscribe(function(result) {
                                _this.noSuggestedTermPromotedYet = !1, null != result && _this.updateLsdlSharingPermissionBase(result.lsdlSharingPermission);
                            }), [ 2 ];
                        }
                    });
                });
            }, QnaBulkEditingComponent.prototype.expandSuggestedTerms = function(entityViewModel, rowIndex) {
                entityViewModel.lsdlVisible && (entityViewModel.suggestedTermsExpanded = !0, this.updateAddButtonFocus(entityViewModel, rowIndex));
            }, QnaBulkEditingComponent.prototype.enterDropZone = function(event) {
                event.container.element.nativeElement.classList.add("dropActive");
            }, QnaBulkEditingComponent.prototype.exitDropZone = function(event) {
                event.container.element.nativeElement.classList.remove("dropActive");
            }, QnaBulkEditingComponent.prototype.dragStart = function(event) {
                this.separatorWidth = 44;
            }, QnaBulkEditingComponent.prototype.dragEnd = function(event) {
                this.separatorWidth = 4;
            }, QnaBulkEditingComponent.prototype.drop = function(event, entityViewModel, location) {
                event.container.element.nativeElement.classList.remove("dropActive");
                var originalIndex = _.indexOf(entityViewModel.terms, event.previousContainer.data), anchorIndex = _.indexOf(entityViewModel.terms, event.container.data);
                this.termReoder(entityViewModel, originalIndex, originalIndex > anchorIndex ? anchorIndex + ("before" === location ? 0 : 1) : anchorIndex + ("before" === location ? -1 : 0));
            }, QnaBulkEditingComponent.prototype.keydownOnTerm = function($event, entityViewModel, index, rowIndex) {
                entityViewModel.lsdlVisible && ($event.altKey && 37 === $event.keyCode && (this.termReoder(entityViewModel, index, index - 1), 
                $event.stopPropagation()), $event.altKey && 39 === $event.keyCode && (this.termReoder(entityViewModel, index, index + 1), 
                $event.stopPropagation()), 46 === $event.keyCode && 1 !== entityViewModel.terms.length && this.removeAuthoredTerm(entityViewModel, index, rowIndex));
            }, QnaBulkEditingComponent.prototype.syncSharedLsdlInfo = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var isSignedIn;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.accountService.isSignedInAsync() ];

                          case 1:
                            return (isSignedIn = _a.sent()) ? [ 3, 3 ] : (this.state$.next("signingIn"), [ 4, this.accountService.trySignInAsync("SignInForQnaToolingDialog") ]);

                          case 2:
                            isSignedIn = _a.sent(), _a.label = 3;

                          case 3:
                            return isSignedIn ? [ 4, this.isImproveLsdlCopilotEnabled$.pipe((0, take.q)(1)).toPromise() ] : (this.state$.next("default"), 
                            [ 2 ]);

                          case 4:
                            return _a.sent() ? [ 3, 6 ] : [ 4, this.runLegacySynonymsFetchFlow() ];

                          case 5:
                            return _a.sent(), [ 3, 8 ];

                          case 6:
                            return [ 4, this.runSynonymsFetchFlow() ];

                          case 7:
                            _a.sent(), _a.label = 8;

                          case 8:
                            return [ 2 ];
                        }
                    });
                });
            }, QnaBulkEditingComponent.prototype.lsdlSharingPermissionChanged = function(event) {
                this.updateLsdlSharingPermission(event.checked);
            }, QnaBulkEditingComponent.prototype.onSuggestionSettingsClicked = function(overlayOrigin) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var positionStrategy, initialAgentModels, initialEntityModels, copilotEnablementStatus, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return debug.fF.assertValue(overlayOrigin, "overlayOrigin"), null != this.settingsOverlay ? (this.settingsOverlay.close(), 
                            this.settingsOverlay = void 0, [ 2 ]) : (positionStrategy = this.pbiOverlay.position().flexibleConnectedTo(overlayOrigin).withPositions([ (0, 
                            pbi_overlay_positions.Oq)(0, 4), (0, pbi_overlay_positions.w3)(0, -4), (0, pbi_overlay_positions.q6)(4, 0), (0, 
                            pbi_overlay_positions.v3)(-4, 0) ]), initialAgentModels = _.cloneDeep(this.documentModel.getAgents("allSynonyms")), 
                            initialEntityModels = _.cloneDeep(this.documentModel.getEntities()), [ 4, this.copilotCapabilityService.getCopilotEnablementStatus() ]);

                          case 1:
                            return copilotEnablementStatus = _a.sent(), this.settingsOverlay = this.pbiOverlay.open({
                                component: QnaSynonymsSettingsComponent,
                                data: {
                                    agentModels: this.documentModel.getAgents("allSynonyms"),
                                    lsdlSharingPermission: this.lsdlSharingPermission$.value,
                                    runtimeUnderstanding: this.documentModel.getRuntimeUnderstanding(),
                                    copilotStatus: copilotEnablementStatus.copilotStatus
                                },
                                options: {
                                    positionStrategy,
                                    hasBackdrop: !0,
                                    backdropClass: pbi_overlay_service.L
                                },
                                closeOnBackdropClick: !0,
                                hasCaret: !1
                            }), this.settingsOverlay.onClose.pipe((0, take.q)(1)).subscribe(function(result) {
                                return (0, tslib_es6.__awaiter)(_this, void 0, void 0, function() {
                                    var updatedAgentModels, enabledAgentsToUpdate, disabledAgentsToUpdate, currentEntityModels_1, thesaurusIndex;
                                    return (0, tslib_es6.__generator)(this, function(_a) {
                                        switch (_a.label) {
                                          case 0:
                                            return this.settingsOverlay = void 0, null == result ? [ 2 ] : (this.updateLsdlSharingPermissionBase(result.lsdlSharingPermission), 
                                            updatedAgentModels = result.agentModels, enabledAgentsToUpdate = _.filter(updatedAgentModels, function(updatedAgentModel) {
                                                var initialAgentModel = _.find(initialAgentModels, function(i) {
                                                    return i.name === updatedAgentModel.name;
                                                });
                                                return "Enabled" === updatedAgentModel.state && "Disabled" === (null == initialAgentModel ? void 0 : initialAgentModel.state);
                                            }), disabledAgentsToUpdate = _.filter(updatedAgentModels, function(updatedAgentModel) {
                                                var initialAgentModel = _.find(initialAgentModels, function(i) {
                                                    return i.name === updatedAgentModel.name;
                                                });
                                                return "Disabled" === updatedAgentModel.state && (null == initialAgentModel || "Enabled" === (null == initialAgentModel ? void 0 : initialAgentModel.state));
                                            }), _.isEmpty(disabledAgentsToUpdate) || (currentEntityModels_1 = this.documentModel.getEntities(), 
                                            _.forEach(disabledAgentsToUpdate, function(a) {
                                                return _.forEach(currentEntityModels_1, function(e) {
                                                    return e.removeSuggestedTermsByAgent(a.name);
                                                });
                                            }), this.checkToUpdateEnties(initialEntityModels, currentEntityModels_1)), this.documentModel.setAgents(result.agentModels), 
                                            this.documentModel.setRuntimeUnderstanding(result.runtimeUnderstanding), this.commitChanges(), 
                                            _.isEmpty(enabledAgentsToUpdate) ? [ 3, 3 ] : -1 === (thesaurusIndex = _.findIndex(enabledAgentsToUpdate, function(a) {
                                                return "Thesaurus" === a.name;
                                            })) ? [ 3, 2 ] : [ 4, this.fetchAndUpdateCurrentLsdl() ]);

                                          case 1:
                                            _a.sent(), this.commitChanges(), enabledAgentsToUpdate.splice(thesaurusIndex, 1), 
                                            _a.label = 2;

                                          case 2:
                                            _.isEmpty(enabledAgentsToUpdate) || this.syncSharedLsdlInfo(), _a.label = 3;

                                          case 3:
                                            return [ 2 ];
                                        }
                                    });
                                });
                            }), [ 2 ];
                        }
                    });
                });
            }, QnaBulkEditingComponent.prototype.onBannerDismiss = function(bannerId) {
                this.qnaBannerService.dismissBanner("ToolingSynonyms", bannerId);
            }, QnaBulkEditingComponent.prototype.runSynonymsFetchFlow = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var previousEntities, requestedAgents, copilotWorkspaceId, copilotReq, response, lsdlObject, currentEntities, updatedEntities, updatedSharingInfo, errorCodes, errorBanners, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.ensureImproveLsdlService() ];

                          case 1:
                            return _a.sent(), previousEntities = this.documentModel.getEntities(), [ 4, this.getRequestableAgents() ];

                          case 2:
                            return requestedAgents = _a.sent(), _.isEmpty(requestedAgents) ? [ 2 ] : _.includes(requestedAgents, "PowerBI.AzureOpenAISynonyms") ? [ 4, this.copilotRequirementsService.validateRequirements({
                                showLoadingDialog: !1
                            }) ] : [ 3, 4 ];

                          case 3:
                            if ((copilotReq = _a.sent()).copilotStatus.enabled && !_.isEmpty(copilotReq.copilotRequirements.workspaceId)) copilotWorkspaceId = copilotReq.copilotRequirements.workspaceId; else {
                                if (copilotReq.copilotStatus.reason === src.Hm.NoWorkspaceId) return [ 2 ];
                                if (requestedAgents = _.filter(requestedAgents, function(a) {
                                    return "PowerBI.AzureOpenAISynonyms" !== a;
                                }), _.isEmpty(requestedAgents)) return errorBanners = improve_lsdl_result_handler.G.getErrorBanners([ {
                                    category: "powerbi",
                                    code: copilotReq.copilotStatus.reason === src.Hm.DisabledForCrossGeo ? "DisallowedForCrossGeo" : "UnsupportedUser",
                                    agent: "PowerBI.AzureOpenAISynonyms"
                                } ], this.localizationService, "Synonyms"), this.qnaBannerService.updateContent("ToolingSynonyms", {
                                    showBanners: !0,
                                    banners: errorBanners
                                }), [ 2 ];
                            }
                            _a.label = 4;

                          case 4:
                            return this.state$.next("syncingSharedLsdl"), this.setLoadingBannerAndState(!0, requestedAgents), 
                            [ 4, this.improveLsdlService.improveLinguisticSchema({
                                requestedAgents,
                                requestPriority: "Interactive",
                                lsdlJson: this.documentModel.toJsonString(),
                                copilotWorkspaceId
                            }) ];

                          case 5:
                            if (response = _a.sent(), this.setLoadingBannerAndState(!1, requestedAgents), this.state$.next("default"), 
                            null != response.result && (this.documentModel = new lsdl_document_model.X(lsdlObject = response.result.lsdlObject), 
                            currentEntities = this.documentModel.getEntities(), updatedEntities = this.checkToUpdateEnties(previousEntities, currentEntities), 
                            updatedSharingInfo = this.updateLsdlSharingInfo(lsdlObject), (updatedEntities || updatedSharingInfo) && this.commitChanges(!0)), 
                            !_.isEmpty(response.errors)) {
                                if (errorCodes = _.map(response.errors, function(e) {
                                    return e.code;
                                }), _.includes(errorCodes, "OperationCancelled")) return [ 2 ];
                                errorBanners = improve_lsdl_result_handler.G.getErrorBanners(response.errors, this.localizationService, "Synonyms"), 
                                this.qnaBannerService.updateContent("ToolingSynonyms", {
                                    showBanners: !0,
                                    banners: errorBanners,
                                    actionHandlers: new Map([ [ "errorDetails", function(error) {
                                        debug.fF.assertValue(error, "improve lsdl error"), _this.dialogService.showTemplateDialog("QnaDiagnosticDialogComponentId", {
                                            title: _this.localizationService.get("Qna_Explore_ErrorMessage"),
                                            hideCancelButton: !0,
                                            input: {
                                                errorCode: error.code,
                                                errorMessage: error.diagnosticMessage
                                            }
                                        });
                                    } ], [ "retry", function() {
                                        return _this.runSynonymsFetchFlow();
                                    } ] ])
                                });
                            }
                            return [ 2 ];
                        }
                    });
                });
            }, QnaBulkEditingComponent.prototype.getRequestableAgents = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var currentAgents;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        return currentAgents = this.documentModel.getAgents("externalSynonyms"), [ 2, _.isEmpty(currentAgents) ? [ "PowerBI.AzureOpenAISynonyms", "PowerBI.OrganizationLsdlSharing" ] : _.chain(currentAgents).filter(function(a) {
                            return "Enabled" === a.state;
                        }).map(function(a) {
                            return a.name;
                        }).value() ];
                    });
                });
            }, QnaBulkEditingComponent.prototype.setLoadingBannerAndState = function(loading, requestedAgents) {
                var _this = this;
                if (loading) {
                    debug.fF.assertNonEmpty(requestedAgents, "requestedAgents should be defined and non empty");
                    var bannerId = Utility.b$.generateGuid();
                    this.qnaBannerService.updateContent("ToolingSynonyms", {
                        showBanners: !0,
                        banners: [ {
                            id: bannerId,
                            message: (0, banner_handler_util.QH)(requestedAgents, this.localizationService, "Synonyms"),
                            isVisible: !0,
                            allowDismiss: !1,
                            bannerType: _.includes(requestedAgents, "PowerBI.AzureOpenAISynonyms") ? "copilot" : "info",
                            actions: [ {
                                id: "noop",
                                text: this.localizationService.get("NlToDax_Loading"),
                                actionAppearance: "loading"
                            }, {
                                id: "cancelImproveLsdl",
                                text: this.localizationService.get("PBI_Button_Label_Cancel"),
                                actionAppearance: "secondary"
                            } ],
                            data: bannerId
                        } ],
                        actionHandlers: new Map([ [ "noop", void 0 ], [ "cancelImproveLsdl", function(bannerId) {
                            _this.ensureImproveLsdlService().then(function() {
                                _this.improveLsdlService.cancelImproveLinguisticSchema(), _this.qnaBannerService.dismissBanner("ToolingSynonyms", bannerId);
                            });
                        } ] ])
                    });
                } else this.qnaBannerService.updateContent("ToolingSynonyms", {
                    showBanners: !0,
                    banners: []
                });
            }, QnaBulkEditingComponent.prototype.ensureImproveLsdlService = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var _a;
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return this.improveLsdlService ? [ 3, 2 ] : (_a = this, [ 4, this.lazyScoped.get("improveLsdlService") ]);

                          case 1:
                            _a.improveLsdlService = _b.sent(), debug.fF.assertValue(this.improveLsdlService, "improve lsdl service should be provided"), 
                            _b.label = 2;

                          case 2:
                            return [ 2 ];
                        }
                    });
                });
            }, QnaBulkEditingComponent.prototype.runLegacySynonymsFetchFlow = function() {
                var _a, _b, _c;
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var previousEntities, sharedLsdlSyncedSchema, isSyncCancelled, improveLsdlResponse, diagnosticInfo, wireDiagnosticCode, sharedLsdlSyncedDocument, showInitialSuccess, currentEntities, updatedEntities, updatedSharingInfo, newPermission, hostException_1, hostError, diagnosticCode;
                    return (0, tslib_es6.__generator)(this, function(_d) {
                        switch (_d.label) {
                          case 0:
                            this.state$.next("syncingSharedLsdl"), _d.label = 1;

                          case 1:
                            return _d.trys.push([ 1, 12, 14, 15 ]), previousEntities = this.documentModel.getEntities(), 
                            [ 4, this.qnaService.improveLinguisticSchema(this.documentModel.toJsonString()) ];

                          case 2:
                            return sharedLsdlSyncedSchema = _d.sent(), isSyncCancelled = !1, this.cancelSyncSharedLsdlPromise ? [ 4, this.cancelSyncSharedLsdlPromise ] : [ 3, 4 ];

                          case 3:
                            isSyncCancelled = _d.sent(), this.cancelSyncSharedLsdlPromise = void 0, _d.label = 4;

                          case 4:
                            return isSyncCancelled ? [ 2 ] : (improveLsdlResponse = (0, JsonExtensions.K)(sharedLsdlSyncedSchema), 
                            diagnosticInfo = null == improveLsdlResponse ? void 0 : improveLsdlResponse.DiagnosticInfo, 
                            "1.0.0" === improveLsdlResponse.Version ? [ 3, 6 ] : [ 4, this.showImproveLsdlErrorDialog(8) ]);

                          case 5:
                            return _d.sent(), [ 3, 11 ];

                          case 6:
                            return _.isEmpty(diagnosticInfo) ? [ 3, 8 ] : (wireDiagnosticCode = null === (_a = _.first(diagnosticInfo)) || void 0 === _a ? void 0 : _a.DiagnosticCode, 
                            diagnosticCode = function(wireCode) {
                                switch (wireCode) {
                                  case "InvalidRequestVersion":
                                    return 0;

                                  case "FailedToOpenLsdlIndexSearcher":
                                    return 1;

                                  case "FailedToParseLsdlFromRequest":
                                    return 2;

                                  case "NoLsdlIndexAvailable":
                                    return 6;

                                  case "NoLsdlSharingModelsAvailable":
                                    return 7;

                                  case "RequiresNewerVersion":
                                    return 8;

                                  case "UnsupportedLanguage":
                                    return 9;

                                  default:
                                    return debug.fF.assertFail("Unhandled WireImproveLsdlDiagnosticCode: " + wireCode), 
                                    4;
                                }
                            }(wireDiagnosticCode), [ 4, this.showImproveLsdlErrorDialog(diagnosticCode) ]);

                          case 7:
                            return _d.sent(), [ 3, 11 ];

                          case 8:
                            return (sharedLsdlSyncedDocument = null == improveLsdlResponse ? void 0 : improveLsdlResponse.LsdlObject) ? (showInitialSuccess = !(null === (_b = this.lsdlSharingInfo) || void 0 === _b ? void 0 : _b.syncedFromOthers), 
                            this.documentModel = new lsdl_document_model.X(sharedLsdlSyncedDocument), currentEntities = this.documentModel.getEntities(), 
                            updatedEntities = this.checkToUpdateEnties(previousEntities, currentEntities), updatedSharingInfo = this.updateLsdlSharingInfo(sharedLsdlSyncedDocument), 
                            (updatedEntities || updatedSharingInfo) && this.commitChanges(!0), newPermission = void 0, 
                            showInitialSuccess ? (this.showAllMouseActionBlocker.emit(!0), [ 4, this.showSharedLsdlSyncFirstSuccess() ]) : [ 3, 10 ]) : [ 3, 11 ];

                          case 9:
                            newPermission = _d.sent(), this.showAllMouseActionBlocker.emit(!1), _d.label = 10;

                          case 10:
                            this.updateLsdlSharingPermissionBase(newPermission), _d.label = 11;

                          case 11:
                            return [ 3, 15 ];

                          case 12:
                            return hostException_1 = _d.sent(), hostError = null !== (_c = null == hostException_1 ? void 0 : hostException_1.hostError) && void 0 !== _c ? _c : hostException_1, 
                            qnaErrorCode = (0, wireClientContractsConversion_util.hj)(hostError.errorCode), 
                            diagnosticCode = "NetworkConnectionIssue" === qnaErrorCode ? 5 : "FeatureNotAvailable" === qnaErrorCode ? 3 : "GenericRequestFailure" === qnaErrorCode ? 4 : void debug.fF.assertFail("QnaErrorCode " + qnaErrorCode + " is not specifically handled, is this known?"), 
                            [ 4, this.showImproveLsdlErrorDialog(diagnosticCode) ];

                          case 13:
                            return _d.sent(), [ 3, 15 ];

                          case 14:
                            return this.state$.next("default"), [ 7 ];

                          case 15:
                            return [ 2 ];
                        }
                        var qnaErrorCode;
                    });
                });
            }, QnaBulkEditingComponent.prototype.fetchAndUpdateCurrentLsdl = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var currentSchema, prevEntities, curEntities;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.qnaService.getCurrentLinguisticSchemaJson() ];

                          case 1:
                            return currentSchema = _a.sent(), prevEntities = this.documentModel.getEntities(), 
                            this.documentModel = new lsdl_document_model.X((0, JsonExtensions.K)(currentSchema)), 
                            curEntities = this.documentModel.getEntities(), this.checkToUpdateEnties(prevEntities, curEntities), 
                            [ 2 ];
                        }
                    });
                });
            }, QnaBulkEditingComponent.prototype.updateLsdlSharingPermission = function(toAllUsers) {
                var permission = shareToAllUsersBooleanToLsdlSharingPermission(toAllUsers);
                this.updateLsdlSharingPermissionBase(permission);
            }, QnaBulkEditingComponent.prototype.updateLsdlSharingPermissionBase = function(permission) {
                null != permission && this.lsdlSharingPermission$.next(permission);
            }, QnaBulkEditingComponent.prototype.showSharedLsdlSyncFirstSuccess = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var checkboxesConfig, bindings, dialogResult;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return checkboxesConfig = {
                                shareToAllUsers: {
                                    label: "Qna_TenantSynonyms_Share_To_AllUsers",
                                    learnMoreLink: this.lsdlSharingLearnMoreLink,
                                    learnMoreLinkAriaLabel: this.ariaResources.learnMoreAboutSynonyms,
                                    default: lsdlSharingPermissionToShareToAllUsersBoolean(1)
                                }
                            }, bindings = {
                                titleIcon: "pbi-glyph-circled-checkmark",
                                titleText: "Generic_Success",
                                messageTemplate: this.localizationService.format("Qna_TenantSynonyms_Sync_Succeeded", [ this.localizationService.get("Suggestions"), this.localizationService.get("Qna_TenantSynonyms_Share_To_AllUsers") ]),
                                okButtonText: "ModalDialogButtonText_GotIt",
                                cancelButtonText: void 0,
                                checkboxes: checkboxesConfig
                            }, [ 4, showCheckboxDialogInCenter(this.dialogService, {
                                dialogName: "CheckboxDialog",
                                componentName: "CheckboxDialog",
                                bindings,
                                config: {
                                    panelClass: [ "checkbox-dialog", "syncSharedLsdlSuccessDialogPanel" ]
                                }
                            }) ];

                          case 1:
                            return [ 4, _a.sent().afterClosed().toPromise() ];

                          case 2:
                            return 0 === (dialogResult = _a.sent()).result ? [ 2, shareToAllUsersBooleanToLsdlSharingPermission(dialogResult.checkboxes.shareToAllUsers) ] : [ 2 ];
                        }
                    });
                });
            }, QnaBulkEditingComponent.prototype.showImproveLsdlErrorDialog = function(diagnosticCode) {
                var _a;
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var userMessageKey;
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return debug.fF.assertValue(improveLsdlDiagnosticCodeToUserMessageKeyMappings[diagnosticCode], "there should be a mapping from improveLsdl diagnosticCode " + diagnosticCode + " to user message"), 
                            userMessageKey = null !== (_a = improveLsdlDiagnosticCodeToUserMessageKeyMappings[diagnosticCode]) && void 0 !== _a ? _a : "Qna_ImproveLsdl_Error_Generic", 
                            this.showAllMouseActionBlocker.emit(!0), dialogService = this.dialogService, data = {
                                title: this.localizationService.get("Qna_ImproveLsdl_Error_Title"),
                                titleIcon: "pbi-glyph-warning",
                                message: this.localizationService.get(userMessageKey),
                                okButtonText: this.localizationService.get("ModalDialogButtonText_GotIt")
                            }, [ 4, dialogService.showSimpleInfoDialog(data, _.merge({}, {
                                autoFocus: !0,
                                disableClose: !0,
                                maxWidth: 400,
                                panelClass: [ "bulkEditingErrorDialogPanel", "themeableElement" ]
                            }, {
                                position: {
                                    top: "350px",
                                    left: "650px"
                                }
                            })).afterClosed().pipe((0, take.q)(1)).toPromise() ];

                          case 1:
                            return _b.sent(), this.showAllMouseActionBlocker.emit(!1), [ 2 ];
                        }
                        var dialogService, data;
                    });
                });
            }, QnaBulkEditingComponent.prototype.checkToUpdateEnties = function(previousEntities, currentEntities) {
                for (var updated = !1, _i = 0, lsdlNamesToUpdate_1 = (0, lsdl_document_model_utils.Z0)(previousEntities, currentEntities); _i < lsdlNamesToUpdate_1.length; _i++) {
                    var entityViewModelToUpdate = this.lsdlNameToEntityViewModel[lsdlNamesToUpdate_1[_i]];
                    entityViewModelToUpdate && (updated = !0, this.reloadAllTerms(entityViewModelToUpdate));
                }
                return _.forEach(this.lsdlNameToEntityViewModel, function(entityViewModel) {
                    entityViewModel.isLoading = !1;
                }), updated && this.changeDetectorRef.detectChanges(), updated;
            }, QnaBulkEditingComponent.prototype.termReoder = function(entityViewModel, originalIndex, insertionIndex) {
                if (originalIndex !== insertionIndex) {
                    var entityModel = this.getEntityModel(entityViewModel);
                    insertionIndex < 0 || insertionIndex >= entityModel.terms.length || (entityModel.moveToIndex(entityModel.terms[originalIndex], insertionIndex), 
                    this.commitChanges(), this.telemetryService.logChildEvent(this.openingTelemetryEvent, QnAToolingReorderTerm, {
                        entityType: convertEntityTypeToTelemetryEntityType(entityViewModel.entityType)
                    }), this.reloadAllTerms(entityViewModel));
                }
            }, QnaBulkEditingComponent.prototype.remove = function(entityViewModel, index, terms, fromSuggestions, rowIndex) {
                if (entityViewModel.lsdlVisible) {
                    var term = terms[index], lsdlEntity = this.getEntityModel(entityViewModel), termModel = _.find(lsdlEntity.terms, function(t) {
                        return t.value === term.value;
                    });
                    termModel ? (lsdlEntity.tryMarkTermAsDeleted(termModel), this.commitChanges(), this.telemetryService.logChildEvent(this.openingTelemetryEvent, QnAToolingDeleteTerm, {
                        source: fromSuggestions ? "Suggested" : "Authored",
                        entityType: convertEntityTypeToTelemetryEntityType(entityViewModel.entityType),
                        sourceAgent: termModel.sourceAgent,
                        sourceType: termModel.sourceType.toString()
                    }), this.reloadAllTerms(entityViewModel), this.updateAddButtonFocus(entityViewModel, rowIndex), 
                    entityViewModel.isLoading = !0) : this.reloadAllTerms(entityViewModel);
                }
            }, QnaBulkEditingComponent.prototype.updateAddButtonFocus = function(entityViewModel, rowIndex) {
                for (var _a, index = 0, _i = 0, _b = this.viewModel.tableEntities; _i < _b.length; _i++) {
                    var tableEntity = _b[_i];
                    if (tableEntity.name === entityViewModel.csdlTableName) {
                        index += rowIndex;
                        break;
                    }
                    index += tableEntity.hasInit ? _.countBy(tableEntity.entities.data, function(entity) {
                        return entity.visible;
                    }).true : 0;
                }
                var addButtonsArray = null === (_a = this.addButtons) || void 0 === _a ? void 0 : _a.toArray();
                addButtonsArray && addButtonsArray[index] && addButtonsArray[index].nativeElement.focus();
            }, QnaBulkEditingComponent.prototype.reloadAllTerms = function(entityViewModel) {
                for (var _a, _b, lsdlEntity = this.getEntityModel(entityViewModel), updatedSuggestedTerms = [], updatedTerms = [], _loop_1 = function(term) {
                    if ("Deleted" === term.state) return "continue";
                    var termViewModel = null !== (_b = _.find(entityViewModel.terms, function(t) {
                        return t.value === term.value;
                    })) && void 0 !== _b ? _b : {
                        value: term.value,
                        state: term.state
                    };
                    termViewModel.state = term.state, termViewModel.source = {
                        Type: term.sourceType,
                        Agent: term.sourceAgent
                    }, term.isSuggested ? (termViewModel.tooltipText = getSuggestedTermsTooltipText(term.sourceAgent, this_1.localizationService), 
                    updatedSuggestedTerms.push(termViewModel)) : updatedTerms.push(termViewModel);
                }, this_1 = this, _i = 0, _c = lsdlEntity.terms; _i < _c.length; _i++) _loop_1(_c[_i]);
                entityViewModel.lsdlVisible = "Visible" === lsdlEntity.visibility, entityViewModel.suggestedTerms = getSortedSuggestedTerms(updatedSuggestedTerms), 
                entityViewModel.suggestedTermsExpanded = updatedSuggestedTerms.length <= this.defaultSuggestedTermsCount, 
                (_a = entityViewModel.terms).splice.apply(_a, (0, tslib_es6.__spreadArray)([ 0, _.size(entityViewModel.terms) ], updatedTerms, !1));
            }, QnaBulkEditingComponent.prototype.initialize = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var currentPermission, conceptualSchema, tableEntities, schema, entities, fieldListConceptualModel, _i, entities_1, entity, entityName, anyVisibleInLsdl, lsdlTableEntity, lsdlEntitiesToConvert, sortLsdlEntitiesToConvert, entityModels, _loop_2, this_2, _a, lsdlEntitiesToConvert_1, entityViewModel, _b, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_c) {
                        switch (_c.label) {
                          case 0:
                            return this.updateLsdlSharingInfo(this.initialLinguisticSchema), [ 4, this.qnaService.getLsdlSharingPermissionAsync() ];

                          case 1:
                            return currentPermission = _c.sent(), this.lsdlSharingPermission$ = new BehaviorSubject.X(currentPermission), 
                            this.isLsdlSharedToAllUsers$ = this.lsdlSharingPermission$.pipe((0, takeUntil.R)(this.destroy$), (0, 
                            filter.h)(function(permission) {
                                return null != permission;
                            }), (0, distinctUntilChanged.x)(), (0, tap.b)(function(permission) {
                                _this.qnaService.setLsdlSharingPermissionAsync(permission);
                            }), (0, map.U)(function(permission) {
                                return lsdlSharingPermissionToShareToAllUsersBoolean(permission);
                            }), (0, shareReplay.d)(1)), this.isLsdlSharedToAllUsers$.subscribe(), this.documentModel = new lsdl_document_model.X(_.cloneDeep(this.initialLinguisticSchema)), 
                            [ 4, this.conceptualSchemaProxy.get(this.dataSources.get()) ];

                          case 2:
                            for (conceptualSchema = _c.sent(), tableEntities = [], schema = _.find(conceptualSchema.schemas, function(s) {
                                return !s.isExtensionSchema;
                            }), entities = _.sortBy(schema.entities, function(entity) {
                                return entity.name;
                            }), fieldListConceptualModel = this.viewModelFactory.convertConceptualSchema(schema), 
                            _i = 0, entities_1 = entities; _i < entities_1.length; _i++) if (anyVisibleInLsdl = !1, 
                            lsdlTableEntity = this.documentModel.getEntityForTable(entityName = (entity = entities_1[_i]).name)) {
                                for ((lsdlEntitiesToConvert = []).push({
                                    lsdlEntity: lsdlTableEntity,
                                    displayName: entity.displayName,
                                    entityType: "Table",
                                    lsdlDocumentInfo: {
                                        lsdlName: lsdlTableEntity.lsdlName,
                                        table: entityName
                                    },
                                    csdlTableName: entityName
                                }), (sortLsdlEntitiesToConvert = []).push.apply(sortLsdlEntitiesToConvert, this.convertEntityProperties(entity.properties, entityName)), 
                                sortLsdlEntitiesToConvert.push.apply(sortLsdlEntitiesToConvert, this.convertEntityHierarchies(entity.hierarchies, entityName, void 0)), 
                                entityModels = [], lsdlEntitiesToConvert.push.apply(lsdlEntitiesToConvert, _.sortBy(sortLsdlEntitiesToConvert, function(entity) {
                                    return entity.displayName.toLocaleLowerCase();
                                })), _loop_2 = function(entityToConvert) {
                                    var entityResult = this_2.convertLsdlEntity(entityToConvert, fieldListConceptualModel, schema.name, 0), entityResults = [];
                                    !function aggregate(entityViewModel) {
                                        if (entityResults.push(entityViewModel), entityViewModel.hierarchyInfo) for (var _i = 0, _a = entityViewModel.hierarchyInfo.children; _i < _a.length; _i++) aggregate(_a[_i]);
                                    }(entityResult), _.some(entityResults, function(e) {
                                        return e.lsdlVisible;
                                    }) && (anyVisibleInLsdl = !0), entityModels.push.apply(entityModels, entityResults);
                                }, this_2 = this, _a = 0, lsdlEntitiesToConvert_1 = lsdlEntitiesToConvert; _a < lsdlEntitiesToConvert_1.length; _a++) _loop_2(lsdlEntitiesToConvert_1[_a]);
                                (entityViewModel = {
                                    name: entityName,
                                    entities: new legacy_table.r4(entityModels),
                                    lsdlVisible: anyVisibleInLsdl,
                                    expanded: !1,
                                    hasInit: !1
                                }).entities.filterPredicate = function(entityViewModel) {
                                    return entityViewModel.visible;
                                }, entityViewModel.entities.filter = "-", tableEntities.push(entityViewModel);
                            }
                            return _.first(tableEntities).expanded = !0, this.viewModel = {
                                tableEntities
                            }, this.noSuggestedTermPromotedYet = _.every(this.documentModel.getEntities(), function(entity) {
                                var authoredTerms = _.filter(entity.terms, function(t) {
                                    return "Authored" === t.state;
                                });
                                return _.every(authoredTerms, function(term) {
                                    return null == term.sourceAgent;
                                });
                            }), [ 4, this.lazyScoped.get("improveLsdlBackgroundService") ];

                          case 3:
                            return _c.sent().tryImproveLsdl("qnaTooling"), _b = this, [ 4, this.lazyScoped.get("qnaBannerService") ];

                          case 4:
                            return _b.qnaBannerService = _c.sent(), this.bannerContent$ = this.qnaBannerService.getBannerContent("ToolingSynonyms").pipe((0, 
                            map.U)(function(bannerContent) {
                                var _a, actionHandlers = new Map;
                                return null === (_a = bannerContent.actionHandlers) || void 0 === _a || _a.forEach(function(handler, actionId) {
                                    actionHandlers.set(actionId, null != handler ? handler : _this.getBannerActionHandler(actionId, bannerContent));
                                }), (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, bannerContent), {
                                    actionHandlers
                                });
                            })), [ 2 ];
                        }
                    });
                });
            }, QnaBulkEditingComponent.prototype.updateLsdlSharingInfo = function(lsdlDocument) {
                debug.fF.assertValue(lsdlDocument, "the given lsdlDocument should be defined");
                var originalLsdlSharingInfo = _.cloneDeep(this.lsdlSharingInfo), lsdlSharingProperties = _.find(lsdlDocument.Agents, function(_props, name) {
                    return "PowerBI.OrganizationLsdlSharing" === name;
                }), syncTimeDisplayString = _.isEmpty(null == lsdlSharingProperties ? void 0 : lsdlSharingProperties.LastModified) ? void 0 : (0, 
                dateFormatter.Wh)(lsdlSharingProperties.LastModified, this.localizationService);
                return this.lsdlSharingInfo = {
                    syncedFromOthers: !!lsdlSharingProperties,
                    lastSyncedTime: syncTimeDisplayString
                }, this.updatedTimeInfo = this.localizationService.format("UpdatedFormat", [ this.lsdlSharingInfo.lastSyncedTime ]), 
                this.ariaResources.refreshActionLabel = _.isEmpty(syncTimeDisplayString) ? this.localizationService.get("Refresh") : this.localizationService.format("QnaTooling_WithLastRefreshedTime_Refresh_AccessibilityLabel", syncTimeDisplayString), 
                !_.isEqual(originalLsdlSharingInfo, this.lsdlSharingInfo);
            }, QnaBulkEditingComponent.prototype.convertEntityProperties = function(properties, entityName) {
                var _a, _b;
                if (_.isEmpty(properties)) return [];
                for (var result = [], _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {
                    var property = properties_1[_i], lsdlEntity = this.documentModel.getEntityForProperty(entityName, property.name);
                    if (lsdlEntity) {
                        var propertyResult = {
                            lsdlEntity,
                            displayName: property.displayName,
                            entityType: "Property",
                            lsdlDocumentInfo: {
                                lsdlName: lsdlEntity.lsdlName,
                                table: entityName,
                                property: property.name
                            },
                            csdlTableName: entityName
                        };
                        if (property.column && !_.isEmpty(property.column.variations)) for (var _c = 0, _d = property.column.variations; _c < _d.length; _c++) {
                            var variation = _d[_c], variationHierarchies = null === (_a = variation.navigationProperty) || void 0 === _a ? void 0 : _a.targetEntity.hierarchies, variationEntityName = null === (_b = variation.navigationProperty) || void 0 === _b ? void 0 : _b.targetEntity.name, variationResult = this.convertEntityHierarchies(variationHierarchies, entityName, {
                                set: variation.name,
                                source: property.name,
                                entityName: variationEntityName
                            });
                            _.isEmpty(variationResult) || (propertyResult.children = variationResult);
                        }
                        result.push(propertyResult);
                    }
                }
                return result;
            }, QnaBulkEditingComponent.prototype.convertEntityHierarchies = function(hierarchies, entityName, hierarchyVariation) {
                var _a, _b;
                if (_.isEmpty(hierarchies)) return [];
                for (var result = [], _i = 0, hierarchies_1 = hierarchies; _i < hierarchies_1.length; _i++) {
                    var hierarchy = hierarchies_1[_i], lsdlEntity = this.documentModel.getEntityForHierarchy(entityName, hierarchy.name, null == hierarchyVariation ? void 0 : hierarchyVariation.set, null == hierarchyVariation ? void 0 : hierarchyVariation.source);
                    if (lsdlEntity) {
                        var hierarchyResult = {
                            lsdlEntity,
                            displayName: hierarchy.displayName,
                            entityType: "Hierarchy",
                            lsdlDocumentInfo: {
                                lsdlName: lsdlEntity.lsdlName,
                                table: entityName,
                                hierarchy: hierarchy.name,
                                hierarchyVariationSet: null == hierarchyVariation ? void 0 : hierarchyVariation.set,
                                hierarchyVariationSource: null == hierarchyVariation ? void 0 : hierarchyVariation.source
                            },
                            csdlTableName: null !== (_a = null == hierarchyVariation ? void 0 : hierarchyVariation.entityName) && void 0 !== _a ? _a : entityName
                        };
                        if (!_.isEmpty(hierarchy.levels)) {
                            hierarchyResult.children = [];
                            for (var _c = 0, _d = hierarchy.levels; _c < _d.length; _c++) {
                                var level = _d[_c], lsdlEntityLevel = this.documentModel.getEntityForHierarchyLevel(entityName, hierarchy.name, level.name, null == hierarchyVariation ? void 0 : hierarchyVariation.set, null == hierarchyVariation ? void 0 : hierarchyVariation.source);
                                if (lsdlEntityLevel) {
                                    var hierarchyLevelResult = {
                                        lsdlEntity: lsdlEntityLevel,
                                        displayName: level.displayName,
                                        entityType: "Level",
                                        lsdlDocumentInfo: {
                                            lsdlName: lsdlEntityLevel.lsdlName,
                                            table: entityName,
                                            hierarchy: hierarchy.name,
                                            hierarchyVariationSet: null == hierarchyVariation ? void 0 : hierarchyVariation.set,
                                            hierarchyVariationSource: null == hierarchyVariation ? void 0 : hierarchyVariation.source,
                                            level: level.name
                                        },
                                        csdlTableName: null !== (_b = null == hierarchyVariation ? void 0 : hierarchyVariation.entityName) && void 0 !== _b ? _b : entityName
                                    };
                                    hierarchyResult.children.push(hierarchyLevelResult);
                                }
                            }
                        }
                        result.push(hierarchyResult);
                    }
                }
                return result;
            }, QnaBulkEditingComponent.prototype.convertLsdlEntity = function(lsdlEntityResult, fieldListConceptualModel, schemaName, level) {
                var _this = this;
                void 0 === level && (level = 0);
                for (var entity = lsdlEntityResult.lsdlEntity, entityName = lsdlEntityResult.displayName, lsdlName = lsdlEntityResult.lsdlDocumentInfo.lsdlName, authorTerms = [], suggestedTerms = [], _i = 0, entityTerms_1 = entity.terms; _i < entityTerms_1.length; _i++) {
                    var term = entityTerms_1[_i], termViewModel = {
                        value: term.value,
                        state: term.state,
                        source: {
                            Type: term.sourceType,
                            Agent: term.sourceAgent
                        }
                    };
                    term.isSuggested ? (termViewModel.tooltipText = getSuggestedTermsTooltipText(term.sourceAgent, this.localizationService), 
                    suggestedTerms.push(termViewModel)) : authorTerms.push(termViewModel);
                }
                var entityViewModel = {
                    name: entityName,
                    terms: authorTerms,
                    suggestedTerms: suggestedTerms = getSortedSuggestedTerms(suggestedTerms),
                    suggestedTermsExpanded: suggestedTerms.length <= this.defaultSuggestedTermsCount,
                    lsdlVisible: "Visible" === entity.visibility,
                    showAddButton: !0,
                    symbolId: this.getSymbolId(lsdlEntityResult, fieldListConceptualModel, schemaName),
                    entityType: lsdlEntityResult.entityType,
                    level,
                    visible: "Level" !== lsdlEntityResult.entityType,
                    isLoading: !1,
                    lsdlDocumentInfo: lsdlEntityResult.lsdlDocumentInfo,
                    hierarchyInfo: _.isEmpty(lsdlEntityResult.children) ? void 0 : {
                        expanded: "Level" !== lsdlEntityResult.entityType && "Hierarchy" !== lsdlEntityResult.entityType,
                        children: _.map(lsdlEntityResult.children, function(c) {
                            return _this.convertLsdlEntity(c, fieldListConceptualModel, schemaName, level + 1);
                        })
                    },
                    csdlTableName: lsdlEntityResult.csdlTableName
                };
                return this.lsdlNameToEntityViewModel[lsdlName] = entityViewModel, entityViewModel;
            }, QnaBulkEditingComponent.prototype.getSymbolId = function(lsdlEntityResult, fieldListConceptualModel, schemaName) {
                var symbolId, fieldListEntity = fieldListConceptualModel.findEntity(lsdlEntityResult.csdlTableName);
                switch (lsdlEntityResult.entityType) {
                  case "Level":
                    var levelFieldListHierarchies_1 = fieldListEntity.findHierarchies(lsdlEntityResult.lsdlDocumentInfo.hierarchy, schemaName);
                    debug.fF.assert(function() {
                        return 1 === _.size(levelFieldListHierarchies_1);
                    }, "expected 1 hierarchy");
                    var levelFieldListHierarchyLevel = levelFieldListHierarchies_1[0].findLevel(lsdlEntityResult.lsdlDocumentInfo.level, schemaName);
                    symbolId = (0, viewModels_fieldListConceptualModel.Wx)(levelFieldListHierarchyLevel, this.featureSwitchService.featureSwitches.paneColorRefresh, !0);
                    break;

                  case "Hierarchy":
                    var fieldListHierarchies_1 = fieldListEntity.findFieldsByType(lsdlEntityResult.lsdlDocumentInfo.hierarchy, schemaName, 2);
                    debug.fF.assert(function() {
                        return 1 === _.size(fieldListHierarchies_1);
                    }, "expected 1 hierarchy"), symbolId = (0, viewModels_fieldListConceptualModel.Wx)(fieldListHierarchies_1[0], this.featureSwitchService.featureSwitches.paneColorRefresh, !0);
                    break;

                  case "Property":
                    var fieldListProperties_1 = fieldListEntity.findFields(lsdlEntityResult.lsdlDocumentInfo.property, schemaName);
                    debug.fF.assert(function() {
                        return 1 === _.size(fieldListProperties_1);
                    }, "expected 1 property"), symbolId = (0, viewModels_fieldListConceptualModel.Wx)(fieldListProperties_1[0], this.featureSwitchService.featureSwitches.paneColorRefresh, !0);
                    break;

                  case "Table":
                    symbolId = fieldListEntity.iconClassName || this.getDefaultIconClassName(this.featureSwitchService.featureSwitches.paneColorRefresh);
                    break;

                  default:
                    debug.fF.assertFail("Unknown entity type");
                }
                return symbolId;
            }, QnaBulkEditingComponent.prototype.getDefaultIconClassName = function(newPaneColorsEnabled) {
                return "fieldListEntity" + (newPaneColorsEnabled ? "_paneColorRefresh" : "");
            }, QnaBulkEditingComponent.prototype.getEntityModel = function(entityViewModel) {
                var documentInfo = entityViewModel.lsdlDocumentInfo;
                switch (entityViewModel.entityType) {
                  case "Level":
                    return this.documentModel.getEntityForHierarchyLevel(documentInfo.table, documentInfo.hierarchy, documentInfo.level, documentInfo.hierarchyVariationSet, documentInfo.hierarchyVariationSource);

                  case "Hierarchy":
                    return this.documentModel.getEntityForHierarchy(documentInfo.table, documentInfo.hierarchy, documentInfo.hierarchyVariationSet, documentInfo.hierarchyVariationSource);

                  case "Property":
                    return this.documentModel.getEntityForProperty(documentInfo.table, documentInfo.property);

                  case "Table":
                    return this.documentModel.getEntityForTable(documentInfo.table);

                  default:
                    debug.fF.assertFail("Unknown entity type");
                }
            }, QnaBulkEditingComponent.prototype.commitChanges = function(forceUpdate) {
                if (forceUpdate || this.documentModel.commit()) {
                    var lsdlJson = this.documentModel.toJsonString();
                    this.qnaService.overrideLinguisticSchemaJson(lsdlJson);
                    var newDocument = JSON.parse(lsdlJson);
                    this.linguisticSchemaUpdated.emit(newDocument);
                }
            }, QnaBulkEditingComponent.prototype.initializeHighContrastRules = function() {
                this.highContrastCssGenerationService.addRule(".themeableElement .qnaBulkEditing .termChip.disable", "{ color: @disabledTextColor !important; border-color: @disabledTextColor !important; opacity: 1 !important; }"), 
                this.highContrastCssGenerationService.addRule(".themeableElement .qnaBulkEditing .termChip.generatedTerms", "{ outline: 1px solid; }");
            }, QnaBulkEditingComponent.prototype.getBannerActionHandler = function(actionId, bannerContent) {
                var _this = this;
                if ("retry" === actionId) return function() {
                    var bannerToRemove = _.find(bannerContent.banners, function(b) {
                        return !!_.find(b.actions, function(a) {
                            return "retry" === a.id;
                        });
                    });
                    debug.fF.assertValue(bannerToRemove, "bannerToRemove"), _this.qnaBannerService.dismissBanner("ToolingHome", null == bannerToRemove ? void 0 : bannerToRemove.id), 
                    _this.syncSharedLsdlInfo();
                };
            }, QnaBulkEditingComponent.\u0275fac = function(t) {
                return new (t || QnaBulkEditingComponent)(fesm2022_core["\u0275\u0275directiveInject"](account_service.B), fesm2022_core["\u0275\u0275directiveInject"](fesm2022_core.ChangeDetectorRef), fesm2022_core["\u0275\u0275directiveInject"](conceptual_schema_proxy_service.i), fesm2022_core["\u0275\u0275directiveInject"](data_sources_service.D), fesm2022_core["\u0275\u0275directiveInject"](dialog_service.x), fesm2022_core["\u0275\u0275directiveInject"](feature_switch_service.vZ), fesm2022_core["\u0275\u0275directiveInject"](high_contrast_css_generation_service.g), fesm2022_core["\u0275\u0275directiveInject"](lazy_scoped_provider.H), fesm2022_core["\u0275\u0275directiveInject"](localization_service.o), fesm2022_core["\u0275\u0275directiveInject"](pbi_overlay_service._), fesm2022_core["\u0275\u0275directiveInject"](desktop_qna_service.r), fesm2022_core["\u0275\u0275directiveInject"](screen_reader_service.g), fesm2022_core["\u0275\u0275directiveInject"](Telemetry.y0), fesm2022_core["\u0275\u0275directiveInject"](lsdl_ui_blocker_service.D), fesm2022_core["\u0275\u0275directiveInject"](copilot_interactive_requirements_service.g), fesm2022_core["\u0275\u0275directiveInject"](eventAggregationService.x), fesm2022_core["\u0275\u0275directiveInject"](injection_tokens.I_));
            }, QnaBulkEditingComponent.\u0275cmp = fesm2022_core["\u0275\u0275defineComponent"]({
                type: QnaBulkEditingComponent,
                selectors: [ [ "qna-bulk-editing" ] ],
                viewQuery: function(rf, ctx) {
                    var _t;
                    1 & rf && fesm2022_core["\u0275\u0275viewQuery"](qna_bulk_editing_component_c0, 5), 
                    2 & rf && fesm2022_core["\u0275\u0275queryRefresh"](_t = fesm2022_core["\u0275\u0275loadQuery"]()) && (ctx.addButtons = _t);
                },
                hostBindings: function(rf, ctx) {
                    1 & rf && fesm2022_core["\u0275\u0275listener"]("click", function($event) {
                        return ctx.keyEvent($event);
                    })("keyup.enter", function($event) {
                        return ctx.keyEvent($event);
                    }, !1, fesm2022_core["\u0275\u0275resolveWindow"]);
                },
                inputs: {
                    initialLinguisticSchema: "initialLinguisticSchema",
                    openingTelemetryEvent: "openingTelemetryEvent"
                },
                outputs: {
                    linguisticSchemaUpdated: "linguisticSchemaUpdated",
                    showAllMouseActionBlocker: "showAllMouseActionBlocker"
                },
                decls: 3,
                vars: 8,
                consts: [ [ "class", "qnaBulkEditing", "focus-nav-mode", "Browser", 4, "ngIf" ], [ "focus-nav-mode", "Browser", 1, "qnaBulkEditing" ], [ "localize", "Synonyms" ], [ "localize", "QnaTooling_BulkEditing_Subtitle" ], [ 4, "ngIf" ], [ 1, "allContentNoTitleContainer", 3, "ngClass" ], [ "class", "lsdlSharingControls", 4, "ngIf", "ngIfElse" ], [ "legacySyncBanner", "" ], [ 1, "content" ], [ "class", "tableContent", 4, "ngIf" ], [ "class", "loadingMask", 4, "ngIf" ], [ "class", "qnaBanner", 3, "bannerContent", "onDismiss", 4, "ngIf" ], [ 1, "qnaBanner", 3, "bannerContent", "onDismiss" ], [ 1, "lsdlSharingControls" ], [ "type", "button", "tri-button", "", 3, "click" ], [ "suggestionSettingsBtn", "" ], [ "localize", "QnaTooling_BulkEditing_SuggestionSettings" ], [ "tri-svg-icon-16", "", "aria-hidden", "true", "name", "chevron_down_12_regular" ], [ "type", "button", "tri-button", "", 1, "refreshButton", 3, "pbiTooltip", "click" ], [ "tri-svg-icon-20", "", "aria-hidden", "true", "name", "arrow_clockwise_20_regular" ], [ 1, "subheader" ], [ "class", "beforeSyncSharedLsdlInfoContainer", 4, "ngIf" ], [ "class", "afterSyncSharedLsdlInfoContainer", 4, "ngIf" ], [ 1, "beforeSyncSharedLsdlInfoContainer" ], [ 1, "descriptionContainer" ], [ 1, "glyphicon", "glyph-small", "pbi-glyph-info" ], [ 1, "lsdlSharingLabel" ], [ 1, "lsdlSharingDescription", 3, "innerHtml" ], [ "mat-button", "", "localize", "Qna_TenantSynonyms_GetMore_Label", 3, "accessible-click" ], [ 1, "afterSyncSharedLsdlInfoContainer" ], [ 1, "syncInfoContainer" ], [ "localize", "Qna_TenantSynonyms_Synced_Label", 1, "syncLabel" ], [ "class", "syncTime", 4, "ngIf" ], [ "role", "button", 1, "glyphicon", "glyph-small", "pbi-glyph-refresh", "icon", "clickable", 3, "pbi-tooltip", "accessible-click" ], [ 1, "lsdlSharingPermissionContainer" ], [ 1, "pbi-checkbox", 3, "checked", "change" ], [ "target", "_blank", "localize", "Generic_LearnMore", 3, "href" ], [ 1, "syncTime" ], [ 1, "tableContent" ], [ "class", "expansionPanel", 3, "expanded", "togglePosition", "expandedChange", "opened", 4, "ngFor", "ngForOf" ], [ 1, "expansionPanel", 3, "expanded", "togglePosition", "expandedChange", "opened" ], [ "tabindex", "0", 1, "expansionHeader" ], [ 1, "panelTitle" ], [ 1, "pbi-slide-toggle", 3, "aria-label", "checked", "change", "click", "keydown" ], [ "localize", "QnaTooling_BulkEditing_IncludeInQnATitle" ], [ "matExpansionPanelContent", "" ], [ "mat-table", "", "focus-nav-mode", "Hierarchy", 3, "dataSource" ], [ "matColumnDef", "name" ], [ "mat-header-cell", "", "localize", "QnaTooling_Synonyms_TablesAndFields", 4, "matHeaderCellDef" ], [ "mat-cell", "", "class", "entityName", 4, "matCellDef" ], [ "matColumnDef", "terms" ], [ "mat-header-cell", "", "class", "termsColumn", "localize", "QnaTooling_BulkEditing_TermTitle", 4, "matHeaderCellDef" ], [ "mat-cell", "", 4, "matCellDef" ], [ "matColumnDef", "suggestedTerms" ], [ "mat-header-cell", "", "class", "suggestedTermsColumn", 4, "matHeaderCellDef" ], [ "matColumnDef", "include" ], [ "mat-header-cell", "", "class", "includeColumn", "localize", "QnaTooling_BulkEditing_IncludeInQnATitle", 4, "matHeaderCellDef" ], [ "mat-header-row", "", "class", "tableSubheading", 4, "matHeaderRowDef" ], [ "mat-row", "", 4, "matRowDef", "matRowDefColumns" ], [ "mat-header-cell", "", "localize", "QnaTooling_Synonyms_TablesAndFields" ], [ "mat-cell", "", 1, "entityName" ], [ "tabindex", "0", 1, "nameField", 3, "ngStyle" ], [ "class", "iconContainer", 4, "ngIf" ], [ 1, "iconContainer", 3, "ngStyle" ], [ "sheet", "fieldListPaneIcons_paneColorRefresh", 3, "symbolId" ], [ 1, "iconContainer" ], [ "role", "button", 1, "glyphicon", "glyph-mini", "expansionIcon", 3, "ngClass", "accessible-click" ], [ "mat-header-cell", "", "localize", "QnaTooling_BulkEditing_TermTitle", 1, "termsColumn" ], [ "mat-cell", "" ], [ "cdkDropListGroup", "", "tabindex", "0", 1, "termsCell" ], [ "class", "termContainer", 4, "ngFor", "ngForOf" ], [ "role", "button", 1, "termChip", "addButton", 3, "tabindex", "ngClass", "localizeAttr", "accessible-click" ], [ "addButton", "" ], [ "localize", "ItemAction_Add" ], [ 1, "glyphicon", "pbi-glyph-add", "glyph-mini" ], [ "type", "text", 1, "inputLabel", 3, "ngClass", "keyup.enter", "blur" ], [ "inputLabel", "" ], [ 1, "termContainer" ], [ "cdkDropList", "", 1, "beforeDropList", 3, "cdkDropListDisabled", "cdkDropListData", "cdkDropListEntered", "cdkDropListExited", "cdkDropListDropped" ], [ "cdkDropList", "", 3, "cdkDropListDisabled", "cdkDropListData" ], [ "cdkDrag", "", "tabindex", "0", 1, "termChip", "authorTerms", 3, "ngClass", "cdkDragDisabled", "cdkDragStarted", "cdkDragEnded", "keydown" ], [ "class", "glyphicon pbi-glyph-close glyph-micro", "role", "button", 3, "tabindex", "localizeAttr", "accessible-click", 4, "ngIf" ], [ "cdkDropList", "", 1, "afterDropList", 3, "cdkDropListDisabled", "cdkDropListData", "cdkDropListEntered", "cdkDropListExited", "cdkDropListDropped" ], [ "role", "button", 1, "glyphicon", "pbi-glyph-close", "glyph-micro", 3, "tabindex", "localizeAttr", "accessible-click" ], [ "mat-header-cell", "", 1, "suggestedTermsColumn" ], [ "localize", "Suggestions" ], [ "class", "suggestedTermsColumnSubtitle", 4, "ngIf" ], [ 1, "suggestedTermsColumnSubtitle" ], [ "localize", "CopilotInline_DisclaimerText" ], [ "href", "https://go.microsoft.com/fwlink/?linkid=2243166", "localize", "CopilotInline_PreviewLink", "target", "_blank", 1, "pbi-external-link", "fluentTheme-sm-reg" ], [ 1, "suggestedTermsCell", 3, "tabindex", "localizeAttr" ], [ 4, "ngIf", "ngIfElse" ], [ "suggestedTermPills", "" ], [ "class", "termChip expandButton", "role", "button", 3, "tabindex", "ngClass", "accessible-click", 4, "ngIf" ], [ "class", "loadingSpinner", 4, "ngIf" ], [ "class", "termChip generatedTerms legacy", "tabindex", "0", 3, "ngClass", "pbi-tooltip", 4, "ngFor", "ngForOf" ], [ "tabindex", "0", 1, "termChip", "generatedTerms", "legacy", 3, "ngClass", "pbi-tooltip" ], [ 3, "pbi-tooltip" ], [ "role", "button", 1, "glyphicon", "pbi-glyph-add", "glyph-mini", 3, "tabindex", "localizeAttr", "accessible-click", "focusin" ], [ "role", "button", 1, "glyphicon", "pbi-glyph-close", "glyph-micro", 3, "tabindex", "localizeAttr", "accessible-click", "focusin" ], [ "class", "termChip generatedTerms", "tabindex", "0", 3, "ngClass", 4, "ngFor", "ngForOf" ], [ "tabindex", "0", 1, "termChip", "generatedTerms", 3, "ngClass" ], [ 3, "term", "isDisabled", "onPromoted", "onRemoved" ], [ "role", "button", 1, "termChip", "expandButton", 3, "tabindex", "ngClass", "accessible-click" ], [ 1, "loadingSpinner" ], [ "size", "small", 3, "delay" ], [ "localize", "Loading_Text" ], [ "mat-header-cell", "", "localize", "QnaTooling_BulkEditing_IncludeInQnATitle", 1, "includeColumn" ], [ "class", "pbi-slide-toggle", 3, "checked", "aria-label", "change", 4, "ngIf" ], [ 1, "pbi-slide-toggle", 3, "checked", "aria-label", "change" ], [ "mat-header-row", "", 1, "tableSubheading" ], [ "mat-row", "" ], [ 1, "loadingMask" ], [ "size", "large", 3, "delay" ] ],
                template: function(rf, ctx) {
                    1 & rf && (fesm2022_core["\u0275\u0275template"](0, QnaBulkEditingComponent_div_0_Template, 13, 10, "div", 0), 
                    fesm2022_core["\u0275\u0275pipe"](1, "async"), fesm2022_core["\u0275\u0275pipe"](2, "async")), 
                    2 & rf && fesm2022_core["\u0275\u0275property"]("ngIf", fesm2022_core["\u0275\u0275pureFunction2"](5, _c17, fesm2022_core["\u0275\u0275pipeBind1"](1, 1, ctx.loadingState$), fesm2022_core["\u0275\u0275pipeBind1"](2, 3, ctx.isImproveLsdlCopilotEnabled$)));
                },
                dependencies: [ common.NgClass, common.NgForOf, common.NgIf, common.NgStyle, drag_drop.Wj, drag_drop.Fd, drag_drop.Zt, legacy_button.eB, legacy_checkbox.FC, expansion.ib, expansion.yz, expansion.yK, expansion.HS, legacy_slide_toggle.iZ, legacy_table.ty, legacy_table.wO, legacy_table.S4, legacy_table.t3, legacy_table.R3, legacy_table.Al, legacy_table.L7, legacy_table.ML, legacy_table.fg, legacy_table.Zw, svg_use_symbol_component.k, localize_directive.X, localize_attr_directive.b, accessible_click_directive.t, pbi_tooltip_directive.V, qna_banner_lazy_component.p, tri_svg_icon_component.M, spinner_component.O, tooltip_directive.i, SuggestedTermPillComponent, common.AsyncPipe, localize_pipe.F ],
                styles: [ '.qnaBulkEditing[_ngcontent-%COMP%]{height:100%;display:flex;flex-direction:column}.qnaBulkEditing[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--xlg-font-size, 20px);font-weight:var(--font-weight-semi-bold, 600);line-height:28px;margin:0}.qnaBulkEditing[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-regular, 400);line-height:20px;display:inline-flex}html:not([dir="rtl"])[_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{margin:8px 0}html[dir="rtl"][_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{margin:8px 0}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]{flex:1;display:flex;flex-direction:column;overflow-y:hidden;position:relative}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer.withLoadingMask[_ngcontent-%COMP%]{opacity:.6}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .loadingMask[_ngcontent-%COMP%]{position:absolute;height:100%;width:100%;top:0;left:0}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .loadingMask[_ngcontent-%COMP%]   spinner[_ngcontent-%COMP%]{position:absolute;left:50%;top:50%;transform:translate(-50%,-50%)}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .loadingSpinner[_ngcontent-%COMP%]{display:inline-flex;font-size:var(--sm-font-size, 12px)}html:not([dir="rtl"])[_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .loadingSpinner[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .loadingSpinner[_ngcontent-%COMP%]{margin:4px 4px 4px 12px}html[dir="rtl"][_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .loadingSpinner[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .loadingSpinner[_ngcontent-%COMP%]{margin:4px 12px 4px 4px}html:not([dir="rtl"])[_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .loadingSpinner[_ngcontent-%COMP%]   spinner[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .loadingSpinner[_ngcontent-%COMP%]   spinner[_ngcontent-%COMP%]{padding:4px 0}html[dir="rtl"][_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .loadingSpinner[_ngcontent-%COMP%]   spinner[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .loadingSpinner[_ngcontent-%COMP%]   spinner[_ngcontent-%COMP%]{padding:4px 0}html:not([dir="rtl"])[_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .loadingSpinner[_ngcontent-%COMP%]   span[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .loadingSpinner[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{padding:4px 8px}html[dir="rtl"][_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .loadingSpinner[_ngcontent-%COMP%]   span[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .loadingSpinner[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{padding:4px 8px}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .beforeSyncSharedLsdlInfoContainer[_ngcontent-%COMP%]{display:flex;flex-direction:row;padding:0 12px;font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--sm-font-size, 12px);font-weight:var(--font-weight-regular, 400);background:var(--fluent-theme-neutral-lighter-color, #F3F2F1)}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .beforeSyncSharedLsdlInfoContainer[_ngcontent-%COMP%]   .descriptionContainer[_ngcontent-%COMP%]{flex:1}html:not([dir="rtl"])[_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .beforeSyncSharedLsdlInfoContainer[_ngcontent-%COMP%]   .descriptionContainer[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .beforeSyncSharedLsdlInfoContainer[_ngcontent-%COMP%]   .descriptionContainer[_ngcontent-%COMP%]{margin:10px 8px 10px 0}html[dir="rtl"][_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .beforeSyncSharedLsdlInfoContainer[_ngcontent-%COMP%]   .descriptionContainer[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .beforeSyncSharedLsdlInfoContainer[_ngcontent-%COMP%]   .descriptionContainer[_ngcontent-%COMP%]{margin:10px 0 10px 8px}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .beforeSyncSharedLsdlInfoContainer[_ngcontent-%COMP%]   .descriptionContainer[_ngcontent-%COMP%]   .glyphicon[_ngcontent-%COMP%]{transform:translateY(4px)}html:not([dir="rtl"])[_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .beforeSyncSharedLsdlInfoContainer[_ngcontent-%COMP%]   .descriptionContainer[_ngcontent-%COMP%]   .glyphicon[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .beforeSyncSharedLsdlInfoContainer[_ngcontent-%COMP%]   .descriptionContainer[_ngcontent-%COMP%]   .glyphicon[_ngcontent-%COMP%]{margin-right:8px}html[dir="rtl"][_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .beforeSyncSharedLsdlInfoContainer[_ngcontent-%COMP%]   .descriptionContainer[_ngcontent-%COMP%]   .glyphicon[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .beforeSyncSharedLsdlInfoContainer[_ngcontent-%COMP%]   .descriptionContainer[_ngcontent-%COMP%]   .glyphicon[_ngcontent-%COMP%]{margin-left:8px}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .beforeSyncSharedLsdlInfoContainer[_ngcontent-%COMP%]   .descriptionContainer[_ngcontent-%COMP%]   .lsdlSharingLabel[_ngcontent-%COMP%]{font-weight:var(--font-weight-semi-bold, 600)}html:not([dir="rtl"])[_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .beforeSyncSharedLsdlInfoContainer[_ngcontent-%COMP%]   .descriptionContainer[_ngcontent-%COMP%]   .lsdlSharingLabel[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .beforeSyncSharedLsdlInfoContainer[_ngcontent-%COMP%]   .descriptionContainer[_ngcontent-%COMP%]   .lsdlSharingLabel[_ngcontent-%COMP%]{margin-right:4px}html[dir="rtl"][_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .beforeSyncSharedLsdlInfoContainer[_ngcontent-%COMP%]   .descriptionContainer[_ngcontent-%COMP%]   .lsdlSharingLabel[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .beforeSyncSharedLsdlInfoContainer[_ngcontent-%COMP%]   .descriptionContainer[_ngcontent-%COMP%]   .lsdlSharingLabel[_ngcontent-%COMP%]{margin-left:4px}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .beforeSyncSharedLsdlInfoContainer[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{align-self:center;margin-top:6px;margin-bottom:6px;padding:2px 16px;height:fit-content;font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-semi-bold, 600);background-color:var(--white-color, #FFF);border:1px solid var(--gray-110, #8A8886);border-radius:2px}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .beforeSyncSharedLsdlInfoContainer[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{background-color:var(--fluent-theme-neutral-lighter-color, #F3F2F1)}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .afterSyncSharedLsdlInfoContainer[_ngcontent-%COMP%]{display:flex;flex-direction:column;font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-regular, 400)}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .afterSyncSharedLsdlInfoContainer[_ngcontent-%COMP%]   .syncInfoContainer[_ngcontent-%COMP%]{display:block;margin-top:4px}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .afterSyncSharedLsdlInfoContainer[_ngcontent-%COMP%]   .syncInfoContainer[_ngcontent-%COMP%]   .syncLabel[_ngcontent-%COMP%]{font-weight:var(--font-weight-semi-bold, 600)}html:not([dir="rtl"])[_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .afterSyncSharedLsdlInfoContainer[_ngcontent-%COMP%]   .syncInfoContainer[_ngcontent-%COMP%]   .syncTime[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .afterSyncSharedLsdlInfoContainer[_ngcontent-%COMP%]   .syncInfoContainer[_ngcontent-%COMP%]   .syncTime[_ngcontent-%COMP%]{margin-left:8px}html[dir="rtl"][_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .afterSyncSharedLsdlInfoContainer[_ngcontent-%COMP%]   .syncInfoContainer[_ngcontent-%COMP%]   .syncTime[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .afterSyncSharedLsdlInfoContainer[_ngcontent-%COMP%]   .syncInfoContainer[_ngcontent-%COMP%]   .syncTime[_ngcontent-%COMP%]{margin-right:8px}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .afterSyncSharedLsdlInfoContainer[_ngcontent-%COMP%]   .syncInfoContainer[_ngcontent-%COMP%]   .glyphicon[_ngcontent-%COMP%]{transform:translateY(2px);cursor:pointer}html:not([dir="rtl"])[_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .afterSyncSharedLsdlInfoContainer[_ngcontent-%COMP%]   .syncInfoContainer[_ngcontent-%COMP%]   .glyphicon[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .afterSyncSharedLsdlInfoContainer[_ngcontent-%COMP%]   .syncInfoContainer[_ngcontent-%COMP%]   .glyphicon[_ngcontent-%COMP%]{margin-left:8px}html[dir="rtl"][_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .afterSyncSharedLsdlInfoContainer[_ngcontent-%COMP%]   .syncInfoContainer[_ngcontent-%COMP%]   .glyphicon[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .afterSyncSharedLsdlInfoContainer[_ngcontent-%COMP%]   .syncInfoContainer[_ngcontent-%COMP%]   .glyphicon[_ngcontent-%COMP%]{margin-right:8px}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .afterSyncSharedLsdlInfoContainer[_ngcontent-%COMP%]   .lsdlSharingPermissionContainer[_ngcontent-%COMP%]{margin-top:4px}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .afterSyncSharedLsdlInfoContainer[_ngcontent-%COMP%]   .lsdlSharingPermissionContainer[_ngcontent-%COMP%]   .pbi-checkbox[_ngcontent-%COMP%]{display:inline-flex}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .afterSyncSharedLsdlInfoContainer[_ngcontent-%COMP%]   .lsdlSharingPermissionContainer[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{color:var(--fluent-theme-link-color, #0078D4);text-decoration:none}html:not([dir="rtl"])[_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .afterSyncSharedLsdlInfoContainer[_ngcontent-%COMP%]   .lsdlSharingPermissionContainer[_ngcontent-%COMP%]   a[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .afterSyncSharedLsdlInfoContainer[_ngcontent-%COMP%]   .lsdlSharingPermissionContainer[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{margin-left:8px}html[dir="rtl"][_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .afterSyncSharedLsdlInfoContainer[_ngcontent-%COMP%]   .lsdlSharingPermissionContainer[_ngcontent-%COMP%]   a[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .afterSyncSharedLsdlInfoContainer[_ngcontent-%COMP%]   .lsdlSharingPermissionContainer[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{margin-right:8px}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .lsdlSharingControls[_ngcontent-%COMP%]{display:flex;flex-direction:row;justify-content:flex-start;align-items:center;column-gap:12px;margin-top:8px}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .lsdlSharingControls[_ngcontent-%COMP%]   .syncedInfoContainer[_ngcontent-%COMP%]{display:flex;column-gap:4px;color:var(--colorNeutralForeground2);font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-regular, 400)}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]{flex:1;overflow-y:scroll;margin-top:16px;margin-bottom:16px}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableHeader[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;font-size:var(--md-font-size, 14px)}html:not([dir="rtl"])[_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableHeader[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableHeader[_ngcontent-%COMP%]{padding:20px 32px 20px 20px}html[dir="rtl"][_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableHeader[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableHeader[_ngcontent-%COMP%]{padding:20px 20px 20px 32px}html:not([dir="rtl"])[_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableHeader[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableHeader[_ngcontent-%COMP%]{padding:0 32px 20px 20px}html[dir="rtl"][_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableHeader[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableHeader[_ngcontent-%COMP%]{padding:0 20px 20px 32px}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableSubheading[_ngcontent-%COMP%]{background-color:var(--colorNeutralBackground2)}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]{border-radius:0}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   .expansionHeader[_ngcontent-%COMP%]{background:var(--fluent-theme-neutral-lighter-color, #F3F2F1);border:1px solid var(--fluent-theme-neutral-light-color, #EDEBE9);display:flex;align-items:center}html:not([dir="rtl"])[_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   .expansionHeader[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   .expansionHeader[_ngcontent-%COMP%]{padding:0 40px 0 0}html[dir="rtl"][_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   .expansionHeader[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   .expansionHeader[_ngcontent-%COMP%]{padding:0 0 0 40px}  html[data-focus-source=key] .qnaBulkEditing .allContentNoTitleContainer .content .tableContent .expansionPanel .expansionHeader:focus{outline:none;background-color:var(--fluent-theme-white-color, #FFF)!important}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   .expansionHeader[_ngcontent-%COMP%]   .panelTitle[_ngcontent-%COMP%]{color:var(--fluent-theme-neutral-primary-color, #323130);font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-bold, 700)}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   .expansionHeader[_ngcontent-%COMP%]   .mat-slide-toggle[_ngcontent-%COMP%]{color:var(--colorNeutralForeground2);margin:1px}html:not([dir="rtl"])[_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   .expansionHeader[_ngcontent-%COMP%]   .mat-slide-toggle[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   .expansionHeader[_ngcontent-%COMP%]   .mat-slide-toggle[_ngcontent-%COMP%]{padding-right:12px}html[dir="rtl"][_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   .expansionHeader[_ngcontent-%COMP%]   .mat-slide-toggle[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   .expansionHeader[_ngcontent-%COMP%]   .mat-slide-toggle[_ngcontent-%COMP%]{padding-left:12px}  html[data-focus-source=key] .qnaBulkEditing .allContentNoTitleContainer .content .tableContent .expansionPanel .mat-slide-toggle:focus-within{outline:var(--focus-two-tone-outline-definition, auto 1px);outline-color:var(--focus-two-tone-outline-color, -webkit-focus-ring-color)}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]{width:100%;background-color:var(--colorNeutralBackground2)}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   th.mat-header-cell[_ngcontent-%COMP%]{font-size:var(--md-font-size, 14px);line-height:20px;color:var(--fluent-theme-neutral-primary-color, #323130);font-family:Segoe UI Semibold,wf_segoe-ui_semibold,helvetica,arial,sans-serif}html:not([dir="rtl"])[_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   th.mat-header-cell[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   th.mat-header-cell[_ngcontent-%COMP%]{padding-left:24px}html[dir="rtl"][_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   th.mat-header-cell[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   th.mat-header-cell[_ngcontent-%COMP%]{padding-right:24px}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{vertical-align:top;padding:8px 16px;color:var(--colorNeutralForeground2)}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]   .mat-cell[_ngcontent-%COMP%]{font-family:Segoe UI,wf_segoe-ui_normal,helvetica,arial,sans-serif}html:not([dir="rtl"])[_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]   .mat-cell[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]   .mat-cell[_ngcontent-%COMP%]{padding:18px 0}html[dir="rtl"][_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]   .mat-cell[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]   .mat-cell[_ngcontent-%COMP%]{padding:18px 0}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   td.entityName[_ngcontent-%COMP%]{padding-left:0}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   td.entityName[_ngcontent-%COMP%]   .nameField[_ngcontent-%COMP%]{display:flex}html:not([dir="rtl"])[_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   td.entityName[_ngcontent-%COMP%]   .nameField[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   td.entityName[_ngcontent-%COMP%]   .nameField[_ngcontent-%COMP%]{padding:4px 8px 4px 0}html[dir="rtl"][_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   td.entityName[_ngcontent-%COMP%]   .nameField[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   td.entityName[_ngcontent-%COMP%]   .nameField[_ngcontent-%COMP%]{padding:4px 0 4px 8px}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   td.entityName[_ngcontent-%COMP%]   .nameField[_ngcontent-%COMP%]   .iconContainer[_ngcontent-%COMP%]{width:20px;height:20px;display:flex;align-items:center}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   td.entityName[_ngcontent-%COMP%]   .nameField[_ngcontent-%COMP%]   .iconContainer[_ngcontent-%COMP%]   .expansionIcon[_ngcontent-%COMP%]{margin:0 4px}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   td.entityName[_ngcontent-%COMP%]   .nameField[_ngcontent-%COMP%]   .iconContainer[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{height:16px;width:16px}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   td.entityName[_ngcontent-%COMP%]   .nameField[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{flex:1;margin-left:4px}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   th.termsColumn[_ngcontent-%COMP%]{width:30%}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   th.suggestedTermsColumn[_ngcontent-%COMP%]{width:35%;padding-bottom:4px;padding-top:4px}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   th.suggestedTermsColumn[_ngcontent-%COMP%]   .suggestedTermsColumnSubtitle[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--sm-font-size, 12px);font-weight:var(--font-weight-regular, 400);color:var(--colorNeutralForeground4);margin-top:4px}html:not([dir="rtl"])[_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   th.suggestedTermsColumn[_ngcontent-%COMP%]   a[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   th.suggestedTermsColumn[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{margin-left:4px}html[dir="rtl"][_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   th.suggestedTermsColumn[_ngcontent-%COMP%]   a[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   th.suggestedTermsColumn[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{margin-right:4px}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   th.includeColumn[_ngcontent-%COMP%]{width:100px}html:not([dir="rtl"])[_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   th.includeColumn[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   th.includeColumn[_ngcontent-%COMP%]{padding-left:20px;padding-right:24px}html[dir="rtl"][_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   th.includeColumn[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   th.includeColumn[_ngcontent-%COMP%]{padding-left:24px;padding-right:20px}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .authorTerms[_ngcontent-%COMP%], .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .addButton[_ngcontent-%COMP%]{background:var(--white-color, #FFF);border:1px solid var(--fluent-theme-neutral-tertiary-color, #A19F9D);box-sizing:border-box}html:not([dir="rtl"])[_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .authorTerms[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .authorTerms[_ngcontent-%COMP%], html:not([dir="rtl"])[_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .addButton[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .addButton[_ngcontent-%COMP%]{padding:3px 8px}html[dir="rtl"][_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .authorTerms[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .authorTerms[_ngcontent-%COMP%], html[dir="rtl"][_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .addButton[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .addButton[_ngcontent-%COMP%]{padding:3px 8px}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]   .termsCell[_ngcontent-%COMP%], .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]   .suggestedTermsCell[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .suggestedTermsCellContainer[_ngcontent-%COMP%]{padding:4px;border-radius:4px;border:1px solid var(--colorNeutralStroke1)}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .termContainer[_ngcontent-%COMP%]{display:flex;position:relative}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .beforeDropList[_ngcontent-%COMP%], .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .afterDropList[_ngcontent-%COMP%]{position:absolute;top:0;height:100%;box-sizing:border-box}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .beforeDropList[_ngcontent-%COMP%]{left:0}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .beforeDropList.dropActive[_ngcontent-%COMP%]{border-left:2px solid var(--fluent-theme-primary-color, #F2C811)}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .afterDropList[_ngcontent-%COMP%]{right:0}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .afterDropList.dropActive[_ngcontent-%COMP%]{border-right:2px solid var(--fluent-theme-primary-color, #F2C811)}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .termChip[_ngcontent-%COMP%]{border-radius:2px;margin:4px;font-family:Segoe UI,wf_segoe-ui_normal,helvetica,arial,sans-serif;cursor:default;transform:none!important;display:flex;align-items:baseline}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .termChip.disable[_ngcontent-%COMP%]{opacity:.4}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .termChip.disable[_ngcontent-%COMP%]   .glyphicon[_ngcontent-%COMP%]{cursor:default}html:not([dir="rtl"])[_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .termChip[_ngcontent-%COMP%]   span[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .termChip[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{margin:0 8px 0 0}html[dir="rtl"][_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .termChip[_ngcontent-%COMP%]   span[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .termChip[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{margin:0 0 0 8px}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .termChip.cdk-drag-placeholder[_ngcontent-%COMP%]{display:none}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .termChip[_ngcontent-%COMP%]   .glyphicon[_ngcontent-%COMP%]{cursor:pointer}html:not([dir="rtl"])[_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .termChip[_ngcontent-%COMP%]   .glyphicon[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .termChip[_ngcontent-%COMP%]   .glyphicon[_ngcontent-%COMP%]{margin:0 4px}html[dir="rtl"][_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .termChip[_ngcontent-%COMP%]   .glyphicon[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .termChip[_ngcontent-%COMP%]   .glyphicon[_ngcontent-%COMP%]{margin:0 4px}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .termChip[_ngcontent-%COMP%]   .glyphicon.pbi-glyph-add[_ngcontent-%COMP%]{font-size:9px}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .termChip.primary[_ngcontent-%COMP%]{background:var(--fluent-theme-neutral-lighter-color, #F3F2F1);border:1px solid var(--fluent-theme-neutral-lighter-color, #F3F2F1);font-family:Segoe UI Semibold,wf_segoe-ui_semibold,helvetica,arial,sans-serif}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .generatedTerms[_ngcontent-%COMP%]{display:none}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .generatedTerms.legacy[_ngcontent-%COMP%]{background:var(--fluent-theme-neutral-lighter-color, #F3F2F1)}html:not([dir="rtl"])[_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .generatedTerms.legacy[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .generatedTerms.legacy[_ngcontent-%COMP%]{padding:4px 8px}html[dir="rtl"][_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .generatedTerms.legacy[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .generatedTerms.legacy[_ngcontent-%COMP%]{padding:4px 8px}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .generatedTerms.show[_ngcontent-%COMP%]{display:flex}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .expandButton[_ngcontent-%COMP%]{background:var(--fluent-theme-neutral-lighter-color, #F3F2F1);border-radius:50%;cursor:pointer;line-height:20px;padding:4px}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .expandButton.disable[_ngcontent-%COMP%]{cursor:default}html:not([dir="rtl"])[_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .expandButton[_ngcontent-%COMP%]   span[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .expandButton[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{margin:0 4px}html[dir="rtl"][_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .expandButton[_ngcontent-%COMP%]   span[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .expandButton[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{margin:0 4px}html:not([dir="rtl"])[_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .mat-column-include[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .mat-column-include[_ngcontent-%COMP%]{padding-left:60px;padding-right:52px}html[dir="rtl"][_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .mat-column-include[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .mat-column-include[_ngcontent-%COMP%]{padding-left:52px;padding-right:60px}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .addButton[_ngcontent-%COMP%]{cursor:pointer}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .addButton.disable[_ngcontent-%COMP%]{opacity:.4;cursor:default}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .addButton.disable[_ngcontent-%COMP%]   .glyphicon[_ngcontent-%COMP%]{cursor:default}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .addButton[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{display:inline;margin:4px;font-family:Segoe UI,wf_segoe-ui_normal,helvetica,arial,sans-serif;-webkit-touch-callout:none;-webkit-user-select:none;-khtml-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .addButton.hideButton[_ngcontent-%COMP%]{display:none}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .inputLabel[_ngcontent-%COMP%]{width:50%;display:none}html:not([dir="rtl"])[_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .inputLabel[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .inputLabel[_ngcontent-%COMP%]{margin:4px 4px 4px 8px}html[dir="rtl"][_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .inputLabel[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .inputLabel[_ngcontent-%COMP%]{margin:4px 8px 4px 4px}html:not([dir="rtl"])[_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .inputLabel[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .inputLabel[_ngcontent-%COMP%]{padding:3px 4px 4px}html[dir="rtl"][_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .inputLabel[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .inputLabel[_ngcontent-%COMP%]{padding:3px 4px 4px}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]   .expansionPanel[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .showInputBox[_ngcontent-%COMP%]{display:inline}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]     .mat-expansion-panel{box-shadow:none}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]     .mat-expansion-panel-body{padding:0}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]     .mat-expansion-panel-header{height:40px!important}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]     .mat-expansion-panel-header-description{flex-grow:0}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]     .mat-form-field-infix{border-top:0!important;padding:0!important}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]     .mat-expansion-indicator{height:30px}html:not([dir="rtl"])[_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]     .mat-expansion-indicator, html:not([dir="rtl"])   [_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]     .mat-expansion-indicator{margin-left:16px}html[dir="rtl"][_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]     .mat-expansion-indicator, html[dir="rtl"]   [_nghost-%COMP%]   .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]     .mat-expansion-indicator{margin-right:16px}.qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]     .mat-form-field-wrapper, .qnaBulkEditing[_ngcontent-%COMP%]   .allContentNoTitleContainer[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .tableContent[_ngcontent-%COMP%]     .mat-form-field-appearance-legacy .mat-form-field-wrapper{padding-bottom:0}.termChip.cdk-drag-preview[_ngcontent-%COMP%]{z-index:10000!important;border-radius:2px;font-family:Segoe UI,wf_segoe-ui_normal,helvetica,arial,sans-serif;background:var(--white-color, #FFF);border:1px solid var(--fluent-theme-neutral-tertiary-color, #A19F9D);box-sizing:border-box;padding:3px 8px;box-shadow:var(--fluent-shadow-depth4, 0px 0px 2px var(--colorNeutralShadowAmbient), 0px 2px 4px var(--colorNeutralShadowKey));font-size:var(--md-font-size, 14px)}.termChip.cdk-drag-preview[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{margin:0 8px 0 0}html:not([dir="rtl"])[_nghost-%COMP%]   .termChip.cdk-drag-preview[_ngcontent-%COMP%]   .glyphicon[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .termChip.cdk-drag-preview[_ngcontent-%COMP%]   .glyphicon[_ngcontent-%COMP%]{margin:0 4px}html[dir="rtl"][_nghost-%COMP%]   .termChip.cdk-drag-preview[_ngcontent-%COMP%]   .glyphicon[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .termChip.cdk-drag-preview[_ngcontent-%COMP%]   .glyphicon[_ngcontent-%COMP%]{margin:0 4px}' ]
            }), QnaBulkEditingComponent;
        }();
        function convertEntityTypeToTelemetryEntityType(type) {
            switch (type) {
              case "Table":
                return "Table";

              case "Property":
                return "Property";

              case "Hierarchy":
                return "Hierarchy";

              case "Level":
                return "Level";

              default:
                return;
            }
        }
        function shareToAllUsersBooleanToLsdlSharingPermission(shareToAllUsers) {
            return shareToAllUsers ? 1 : 0;
        }
        function lsdlSharingPermissionToShareToAllUsersBoolean(permission) {
            return 1 === permission;
        }
        function getSortedSuggestedTerms(suggestedTerms) {
            return _.sortBy(suggestedTerms, function(term) {
                var termSource = term.source;
                if ("External" === (null == termSource ? void 0 : termSource.Type)) {
                    if ("PowerBI.VisualColumnRename" === termSource.Agent) return 1;
                    if ("PowerBI.OrganizationLsdlSharing" === termSource.Agent) return 2;
                }
                return 3;
            });
        }
        function getSuggestedTermsTooltipText(termSourceAgent, locService) {
            var tooltipText;
            return "PowerBI.OrganizationLsdlSharing" === termSourceAgent ? tooltipText = locService.get("QnaTooling_BulkEditing_SuggestedTermSource_LsdlSharing") : "Thesaurus" === termSourceAgent ? tooltipText = locService.get("QnaTooling_BulkEditing_SuggestedTermSource_OfficeThesaurus") : "PowerBI.AzureOpenAISynonyms" === termSourceAgent ? tooltipText = locService.get("QnaTooling_BulkEditing_SuggestedTermSource_Copilot") : "PowerBI.VisualColumnRename" === termSourceAgent && (tooltipText = locService.get("QnaTooling_BulkEditing_SuggestedTermSource_VisualColumnRename")), 
            tooltipText;
        }
        var index_core = __webpack_require__(73471), JsCommon_Date = __webpack_require__(69615), modelConverterHelper = __webpack_require__(5708), userInfoHelper = __webpack_require__(54861), build = __webpack_require__(6426), refreshedDateTimeFormat = {
            year: "2-digit",
            month: "numeric",
            day: "numeric",
            hour: "numeric",
            minute: "numeric",
            second: "numeric"
        };
        function getEndorsementImageUrl(stage) {
            var urlPrefix = "url(../../..".concat((0, build.Xr)(), "/images/");
            if (!stage) return "none";
            switch (stage) {
              case index_core.X_.Promoted:
                return "".concat(urlPrefix, "promoted.svg)");

              case index_core.X_.Certified:
                return "".concat(urlPrefix, "certified.svg)");

              default:
                return "none";
            }
        }
        function getLastRefreshedDateTime(lastRefreshEpochTimeValue) {
            if (lastRefreshEpochTimeValue && -1 !== lastRefreshEpochTimeValue) return (0, modelConverterHelper.A7)("/Date(".concat(lastRefreshEpochTimeValue, ")/"), {
                format: refreshedDateTimeFormat
            });
        }
        var constants = __webpack_require__(87632), PowerBIContracts_constants = __webpack_require__(2142), traceType = __webpack_require__(50547), interpret_listener_service = __webpack_require__(37320), debounceTime = __webpack_require__(6754), host_interop_registry_service = __webpack_require__(39119), RemoteArtifactsService = function() {
            function RemoteArtifactsService(hostInteropRegistry) {
                this.hostService = hostInteropRegistry.getHostService("remoteArtifactsHostService");
            }
            return RemoteArtifactsService.prototype.getRemoteArtifactAsync = function() {
                return this.hostService.getRemoteArtifact();
            }, RemoteArtifactsService.prototype.addOrUpdateRemoteArtifactAsync = function(datasetId, reportId) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.hostService.addOrUpdateRemoteArtifact(datasetId, reportId) ];

                          case 1:
                            return _a.sent(), [ 2 ];
                        }
                    });
                });
            }, RemoteArtifactsService.prototype.getDatasets = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        return [ 2, this.hostService.getDatasets() ];
                    });
                });
            }, RemoteArtifactsService.\u0275fac = function(t) {
                return new (t || RemoteArtifactsService)(fesm2022_core["\u0275\u0275inject"](host_interop_registry_service.j));
            }, RemoteArtifactsService.\u0275prov = fesm2022_core["\u0275\u0275defineInjectable"]({
                token: RemoteArtifactsService,
                factory: RemoteArtifactsService.\u0275fac,
                providedIn: "root"
            }), RemoteArtifactsService;
        }(), error_service = __webpack_require__(81213), legacy_menu = __webpack_require__(55710), scrolling = __webpack_require__(21661), sort_utils = __webpack_require__(56894), artifact_type = __webpack_require__(50600), information_protection_service = __webpack_require__(77326), fesm2022_forms = __webpack_require__(17174), localize_tooltip_directive = __webpack_require__(50057), icon = __webpack_require__(44408), legacy_form_field = __webpack_require__(87650), legacy_input = __webpack_require__(30426), sort = __webpack_require__(63047), endorsement_badge_component = __webpack_require__(65818), information_protection_label_component = __webpack_require__(73226);
        function DatasetSelectorComponent_section_3_Template(rf, ctx) {
            1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "section", 6), fesm2022_core["\u0275\u0275element"](1, "spinner", 7), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf && (fesm2022_core["\u0275\u0275advance"](1), 
            fesm2022_core["\u0275\u0275property"]("delay", 0));
        }
        function DatasetSelectorComponent_section_4_select_6_Template(rf, ctx) {
            if (1 & rf) {
                var _r8 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "select", 29), fesm2022_core["\u0275\u0275listener"]("ngModelChange", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r8);
                    var ctx_r7 = fesm2022_core["\u0275\u0275nextContext"](2);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r7.workspaceFilter = $event);
                })("change", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r8);
                    var ctx_r9 = fesm2022_core["\u0275\u0275nextContext"](2);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r9.applyWorkspaceFilter());
                }), fesm2022_core["\u0275\u0275element"](1, "option", 30)(2, "option", 31), fesm2022_core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r3 = fesm2022_core["\u0275\u0275nextContext"](2);
                fesm2022_core["\u0275\u0275property"]("ngModel", ctx_r3.workspaceFilter);
            }
        }
        var dataset_selector_component_c0 = function(a0) {
            return {
                "adjusted-col-width": a0
            };
        };
        function DatasetSelectorComponent_section_4_span_12_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "span", 32)(1, "span", 17), 
            fesm2022_core["\u0275\u0275element"](2, "span", 33), fesm2022_core["\u0275\u0275pipe"](3, "localize"), 
            fesm2022_core["\u0275\u0275elementEnd"]()()), 2 & rf) {
                var ctx_r4 = fesm2022_core["\u0275\u0275nextContext"](2);
                fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction1"](6, dataset_selector_component_c0, ctx_r4.showSensitivityColumn)), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("mat-sort-header", ctx_r4.colName_endorsement), 
                fesm2022_core["\u0275\u0275attribute"]("title", ctx_r4.Endorsement), fesm2022_core["\u0275\u0275advance"](1), 
                fesm2022_core["\u0275\u0275property"]("title", fesm2022_core["\u0275\u0275pipeBind1"](3, 4, "Endorsement"));
            }
        }
        function DatasetSelectorComponent_section_4_span_25_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "span", 34)(1, "span", 17), 
            fesm2022_core["\u0275\u0275element"](2, "span", 35), fesm2022_core["\u0275\u0275pipe"](3, "localize"), 
            fesm2022_core["\u0275\u0275elementEnd"]()()), 2 & rf) {
                var ctx_r5 = fesm2022_core["\u0275\u0275nextContext"](2);
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("mat-sort-header", ctx_r5.colName_sensitivity), 
                fesm2022_core["\u0275\u0275attribute"]("title", ctx_r5.Sensitivity), fesm2022_core["\u0275\u0275advance"](1), 
                fesm2022_core["\u0275\u0275property"]("title", fesm2022_core["\u0275\u0275pipeBind1"](3, 3, "Sensitivity"));
            }
        }
        function DatasetSelectorComponent_section_4_div_28_span_3_endorsement_badge_1_Template(rf, ctx) {
            if (1 & rf && fesm2022_core["\u0275\u0275element"](0, "endorsement-badge", 45), 
            2 & rf) {
                var item_r10 = fesm2022_core["\u0275\u0275nextContext"](2).$implicit;
                fesm2022_core["\u0275\u0275property"]("stage", item_r10.stage);
            }
        }
        function DatasetSelectorComponent_section_4_div_28_span_3_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "span", 43), fesm2022_core["\u0275\u0275template"](1, DatasetSelectorComponent_section_4_div_28_span_3_endorsement_badge_1_Template, 1, 1, "endorsement-badge", 44), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var item_r10 = fesm2022_core["\u0275\u0275nextContext"]().$implicit, ctx_r11 = fesm2022_core["\u0275\u0275nextContext"](2);
                fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction1"](2, dataset_selector_component_c0, ctx_r11.showSensitivityColumn)), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", item_r10.stage && 0 !== item_r10.stage);
            }
        }
        function DatasetSelectorComponent_section_4_div_28_span_10_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "span", 46), fesm2022_core["\u0275\u0275element"](1, "information-protection-label", 47), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var item_r10 = fesm2022_core["\u0275\u0275nextContext"]().$implicit;
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("label", item_r10.artifactInformationProtection);
            }
        }
        var dataset_selector_component_c1 = function(a0, a1) {
            return {
                hover: a0,
                selected: a1
            };
        };
        function DatasetSelectorComponent_section_4_div_28_Template(rf, ctx) {
            if (1 & rf) {
                var _r18 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "div", 36), fesm2022_core["\u0275\u0275listener"]("accessible-click", function() {
                    var item_r10 = fesm2022_core["\u0275\u0275restoreView"](_r18).$implicit, ctx_r17 = fesm2022_core["\u0275\u0275nextContext"](2);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r17.onRowClicked(item_r10));
                })("dblclick", function() {
                    var item_r10 = fesm2022_core["\u0275\u0275restoreView"](_r18).$implicit, ctx_r19 = fesm2022_core["\u0275\u0275nextContext"](2);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r19.onRowDblClicked(item_r10));
                }), fesm2022_core["\u0275\u0275elementStart"](1, "span", 37), fesm2022_core["\u0275\u0275text"](2), 
                fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275template"](3, DatasetSelectorComponent_section_4_div_28_span_3_Template, 2, 4, "span", 38), 
                fesm2022_core["\u0275\u0275elementStart"](4, "span", 39), fesm2022_core["\u0275\u0275text"](5), 
                fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275elementStart"](6, "span", 40), 
                fesm2022_core["\u0275\u0275text"](7), fesm2022_core["\u0275\u0275elementEnd"](), 
                fesm2022_core["\u0275\u0275elementStart"](8, "span", 41), fesm2022_core["\u0275\u0275text"](9), 
                fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275template"](10, DatasetSelectorComponent_section_4_div_28_span_10_Template, 2, 1, "span", 42), 
                fesm2022_core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var item_r10 = ctx.$implicit, ctx_r6 = fesm2022_core["\u0275\u0275nextContext"](2);
                fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction2"](17, dataset_selector_component_c1, ctx_r6.currentMenuItemId === item_r10.id, ctx_r6.viewModel.selectedRow && ctx_r6.viewModel.selectedRow.id === item_r10.id)), 
                fesm2022_core["\u0275\u0275attribute"]("aria-label", ctx_r6.ariaResources.datasetRowLabel(item_r10))("aria-selected", (null == ctx_r6.viewModel.selectedRow ? null : ctx_r6.viewModel.selectedRow.id) === item_r10.id), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction1"](20, dataset_selector_component_c0, ctx_r6.showSensitivityColumn))("pbiTooltip", item_r10.displayName), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275textInterpolate"](item_r10.displayName), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", ctx_r6.showEndorsementColumn), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction1"](22, dataset_selector_component_c0, ctx_r6.showSensitivityColumn))("pbiTooltip", item_r10.ownerFullName), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275textInterpolate"](item_r10.ownerFullName), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction1"](24, dataset_selector_component_c0, ctx_r6.showSensitivityColumn))("pbiTooltip", item_r10.workspaceName), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275textInterpolate"](item_r10.workspaceName), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction1"](26, dataset_selector_component_c0, ctx_r6.showSensitivityColumn))("pbiTooltip", item_r10.lastRefreshedTime || "\u2014"), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275textInterpolate1"](" ", item_r10.lastRefreshedTime || "\u2014", " "), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", ctx_r6.showSensitivityColumn);
            }
        }
        var dataset_selector_component_c2 = function(a0) {
            return {
                fullSizeSearchBox: a0
            };
        };
        function DatasetSelectorComponent_section_4_Template(rf, ctx) {
            if (1 & rf) {
                var _r21 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "section", 8)(1, "div", 9)(2, "mat-form-field", 10), 
                fesm2022_core["\u0275\u0275element"](3, "mat-icon", 11)(4, "mat-label", 12), fesm2022_core["\u0275\u0275elementStart"](5, "input", 13), 
                fesm2022_core["\u0275\u0275listener"]("keyup", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r21);
                    var ctx_r20 = fesm2022_core["\u0275\u0275nextContext"]();
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r20.applyFilter($event.target.value));
                }), fesm2022_core["\u0275\u0275elementEnd"]()(), fesm2022_core["\u0275\u0275template"](6, DatasetSelectorComponent_section_4_select_6_Template, 3, 1, "select", 14), 
                fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275elementStart"](7, "div", 15), 
                fesm2022_core["\u0275\u0275listener"]("matSortChange", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r21);
                    var ctx_r22 = fesm2022_core["\u0275\u0275nextContext"]();
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r22.sortData($event));
                }), fesm2022_core["\u0275\u0275elementStart"](8, "span", 16)(9, "span", 17), fesm2022_core["\u0275\u0275element"](10, "span", 18), 
                fesm2022_core["\u0275\u0275pipe"](11, "localize"), fesm2022_core["\u0275\u0275elementEnd"]()(), 
                fesm2022_core["\u0275\u0275template"](12, DatasetSelectorComponent_section_4_span_12_Template, 4, 8, "span", 19), 
                fesm2022_core["\u0275\u0275elementStart"](13, "span", 20)(14, "span", 17), fesm2022_core["\u0275\u0275element"](15, "span", 21), 
                fesm2022_core["\u0275\u0275pipe"](16, "localize"), fesm2022_core["\u0275\u0275elementEnd"]()(), 
                fesm2022_core["\u0275\u0275elementStart"](17, "span", 22)(18, "span", 17), fesm2022_core["\u0275\u0275element"](19, "span", 23), 
                fesm2022_core["\u0275\u0275pipe"](20, "localize"), fesm2022_core["\u0275\u0275elementEnd"]()(), 
                fesm2022_core["\u0275\u0275elementStart"](21, "span", 24)(22, "span", 17), fesm2022_core["\u0275\u0275element"](23, "span", 25), 
                fesm2022_core["\u0275\u0275pipe"](24, "localize"), fesm2022_core["\u0275\u0275elementEnd"]()(), 
                fesm2022_core["\u0275\u0275template"](25, DatasetSelectorComponent_section_4_span_25_Template, 4, 5, "span", 26), 
                fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275elementStart"](26, "cdk-virtual-scroll-viewport", 27), 
                fesm2022_core["\u0275\u0275elementContainerStart"](27), fesm2022_core["\u0275\u0275template"](28, DatasetSelectorComponent_section_4_div_28_Template, 11, 28, "div", 28), 
                fesm2022_core["\u0275\u0275elementContainerEnd"](), fesm2022_core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var ctx_r1 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275attribute"]("aria-label", ctx_r1.ariaResources.tableLabel), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction1"](31, dataset_selector_component_c2, ctx_r1.useFullSizeSearchBox)), 
                fesm2022_core["\u0275\u0275advance"](4), fesm2022_core["\u0275\u0275property"]("ngIf", ctx_r1.showWorkspaceFilter), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction1"](33, dataset_selector_component_c0, ctx_r1.showSensitivityColumn)), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("mat-sort-header", ctx_r1.colName_name), 
                fesm2022_core["\u0275\u0275attribute"]("title", ctx_r1.Name), fesm2022_core["\u0275\u0275advance"](1), 
                fesm2022_core["\u0275\u0275property"]("title", fesm2022_core["\u0275\u0275pipeBind1"](11, 23, "Name")), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("ngIf", ctx_r1.showEndorsementColumn), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction1"](35, dataset_selector_component_c0, ctx_r1.showSensitivityColumn)), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("mat-sort-header", ctx_r1.colName_owner), 
                fesm2022_core["\u0275\u0275attribute"]("title", ctx_r1.Owner_Lowercase), fesm2022_core["\u0275\u0275advance"](1), 
                fesm2022_core["\u0275\u0275property"]("title", fesm2022_core["\u0275\u0275pipeBind1"](16, 25, "Owner_Lowercase")), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction1"](37, dataset_selector_component_c0, ctx_r1.showSensitivityColumn)), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("mat-sort-header", ctx_r1.colName_workspace), 
                fesm2022_core["\u0275\u0275attribute"]("title", ctx_r1.Workspace), fesm2022_core["\u0275\u0275advance"](1), 
                fesm2022_core["\u0275\u0275property"]("title", fesm2022_core["\u0275\u0275pipeBind1"](20, 27, "Workspace")), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction1"](39, dataset_selector_component_c0, ctx_r1.showSensitivityColumn)), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("mat-sort-header", ctx_r1.colName_lastRefresh), 
                fesm2022_core["\u0275\u0275attribute"]("title", ctx_r1.RefreshedLabel), fesm2022_core["\u0275\u0275advance"](1), 
                fesm2022_core["\u0275\u0275property"]("title", fesm2022_core["\u0275\u0275pipeBind1"](24, 29, "RefreshedLabel")), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("ngIf", ctx_r1.showSensitivityColumn), 
                fesm2022_core["\u0275\u0275advance"](3), fesm2022_core["\u0275\u0275property"]("cdkVirtualForOf", ctx_r1.viewModel.dataSource)("cdkVirtualForTrackBy", ctx_r1.trackDatasetListItemBy);
            }
        }
        function DatasetSelectorComponent_section_5_button_2_Template(rf, ctx) {
            if (1 & rf) {
                var _r25 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "button", 51), fesm2022_core["\u0275\u0275listener"]("click", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r25);
                    var ctx_r24 = fesm2022_core["\u0275\u0275nextContext"](2);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r24.cancel());
                }), fesm2022_core["\u0275\u0275elementEnd"]();
            }
        }
        function DatasetSelectorComponent_section_5_Template(rf, ctx) {
            if (1 & rf) {
                var _r27 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "section", 48)(1, "button", 49), fesm2022_core["\u0275\u0275listener"]("click", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r27);
                    var ctx_r26 = fesm2022_core["\u0275\u0275nextContext"]();
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r26.submit());
                }), fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275template"](2, DatasetSelectorComponent_section_5_button_2_Template, 1, 0, "button", 50), 
                fesm2022_core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r2 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275propertyInterpolate"]("localize", ctx_r2.submitLabel), 
                fesm2022_core["\u0275\u0275property"]("disabled", !ctx_r2.viewModel.selectedRow), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", !ctx_r2.hideCancelButton);
            }
        }
        var DatasetSelectorComponent = function() {
            function DatasetSelectorComponent(featureSwitchService, localizationService, informationProtectionService) {
                this.featureSwitchService = featureSwitchService, this.localizationService = localizationService, 
                this.informationProtectionService = informationProtectionService, this.onSubmitted = new fesm2022_core.EventEmitter, 
                this.onCanceled = new fesm2022_core.EventEmitter, this.workspaceFilter = "AllDatasets", 
                this.colName_name = "name", this.colName_endorsement = "endorsement", this.colName_workspace = "workspaceName", 
                this.colName_owner = "owner", this.colName_lastRefresh = "lastRefreshed", this.colName_sensitivity = "sensitivity", 
                this.destroy$ = new Subject.xQ, this.enrichDatasetsWithLabels$ = new Subject.xQ, 
                this.defaultSort = {
                    active: _.size(this.displayColumns) > 0 ? this.displayColumns[0] : void 0,
                    direction: "asc"
                }, this.viewModel = {
                    dataSource: new legacy_table.r4,
                    isLoading: !0,
                    selectedRow: void 0
                }, this.viewModel.dataSource.filterPredicate = function(data, filter) {
                    return filter = filter.toLocaleLowerCase(), -1 !== (data.displayName || "").toLocaleLowerCase().indexOf(filter) || -1 !== (data.ownerFullName || "").toLocaleLowerCase().indexOf(filter) || -1 !== (data.workspaceName || "").toLocaleLowerCase().indexOf(filter);
                }, this.ariaResources = {
                    tableLabel: this.localizationService.get("DatasetSelector_DatasetTableLabel"),
                    datasetRowLabel: function(row) {
                        return [ localizationService.get("Name"), row.displayName, localizationService.get("Owner_Lowercase"), row.ownerFullName, localizationService.get("Workspace"), row.workspaceName, localizationService.get("RefreshedLabel"), row.lastRefreshedTime ].join(" ");
                    }
                };
            }
            return DatasetSelectorComponent.prototype.ngOnInit = function() {
                var _this = this;
                this.showWorkspaceFilter = this.contextInfo && (this.contextInfo.isFolder || this.contextInfo.isMyWorkspace), 
                this.showEndorsementColumn = this.shouldShowEndorsementColumn();
                var activeSortColumn = _.size(this.displayColumns) > 0 ? this.displayColumns[0] : void 0;
                this.showEndorsementColumn && (activeSortColumn = "endorsement"), this.defaultSort = {
                    active: activeSortColumn,
                    direction: "asc"
                }, this.updateViewModel(), this.showSensitivityColumn = !1, !this.isDesktop && this.isSenstivityColumnRequestedToBeDisplayed() && ((0, 
                combineLatest.aj)(this.informationProtectionService.getArtifactsInformationProtectionsEntities(artifact_type.B.Model), this.enrichDatasetsWithLabels$).pipe((0, 
                takeUntil.R)(this.destroy$)).subscribe(function(_a) {
                    _this.enrichDatasetsWithLabels(_a[0]) && !_this.showSensitivityColumn && (_this.showSensitivityColumn = !0);
                }), this.enrichDatasetsWithLabels$.next());
            }, DatasetSelectorComponent.prototype.ngOnChanges = function(changes) {
                changes.datasets && changes.datasets.previousValue !== changes.datasets.currentValue && (this.enrichDatasetsWithLabels$.next(), 
                this.updateViewModel());
            }, DatasetSelectorComponent.prototype.ngOnDestroy = function() {
                this.destroy$.next(), this.destroy$.complete(), this.enrichDatasetsWithLabels$.complete();
            }, DatasetSelectorComponent.prototype.shouldShowEndorsementColumn = function() {
                return -1 !== this.displayColumns.indexOf("endorsement");
            }, DatasetSelectorComponent.prototype.isSenstivityColumnRequestedToBeDisplayed = function() {
                return -1 !== this.displayColumns.indexOf("sensitivity");
            }, DatasetSelectorComponent.prototype.onRowClicked = function(row) {
                this.selectRow(row);
            }, DatasetSelectorComponent.prototype.onRowDblClicked = function(row) {
                this.selectRow(row), this.submit();
            }, DatasetSelectorComponent.prototype.trackDatasetListItemBy = function(item) {
                return "".concat(item.id);
            }, DatasetSelectorComponent.prototype.submit = function() {
                var _this = this, dataset = _.find(this.datasets, function(m) {
                    return m.id === _this.viewModel.selectedRow.id;
                });
                debug.fF.assertValue(dataset, "dataset"), dataset && this.onSubmitted.emit(dataset);
            }, DatasetSelectorComponent.prototype.cancel = function() {
                this.onCanceled.emit();
            }, DatasetSelectorComponent.prototype.applyFilter = function(filterText) {
                this.viewModel && this.viewModel.dataSource && (this.viewModel.dataSource.filter = filterText);
            }, DatasetSelectorComponent.prototype.sortData = function(sortEvent) {
                var _this = this;
                sortEvent.active = sortEvent.active || this.defaultSort.active, sortEvent.direction = sortEvent.direction || this.defaultSort.direction;
                var data = _.clone(this.viewModel.dataSource.data), isAsc = "asc" === sortEvent.direction;
                this.viewModel.dataSource.data = data.sort(function(row1, row2) {
                    switch (sortEvent.active) {
                      case _this.colName_name:
                        return compare(row1.displayName.toLocaleLowerCase(), row2.displayName.toLocaleLowerCase(), isAsc);

                      case _this.colName_endorsement:
                        return function(row1, row2, isAsc) {
                            var row1Stage = row1.stage, row2Stage = row2.stage;
                            return (row1Stage > row2Stage ? -1 : row1Stage < row2Stage ? 1 : row1.displayName.localeCompare(row2.displayName, void 0, {
                                usage: "sort",
                                sensitivity: "base"
                            })) * (isAsc ? 1 : -1);
                        }(row1, row2, isAsc);

                      case _this.colName_owner:
                        return compare(row1.ownerFullName.toLocaleLowerCase(), row2.ownerFullName.toLocaleLowerCase(), isAsc);

                      case _this.colName_workspace:
                        return compare(row1.workspaceName.toLocaleLowerCase(), row2.workspaceName.toLocaleLowerCase(), isAsc);

                      case _this.colName_lastRefresh:
                        return compare(row1.lastRefreshEpochTimeValue, row2.lastRefreshEpochTimeValue, isAsc);

                      case _this.colName_sensitivity:
                        return (0, sort_utils.Kg)(row1.artifactInformationProtection, row2.artifactInformationProtection, isAsc);
                    }
                });
            }, DatasetSelectorComponent.prototype.applyCurrentWorkspaceFilter = function() {
                var _this = this;
                this.contextInfo && (this.viewModel.dataSource.data = this.contextInfo.isMyWorkspace ? _.filter(this.viewModel.dataSource.data, function(dataset) {
                    return dataset.workspaceName === _this.contextInfo.userPrincipalName;
                }) : _.filter(this.viewModel.dataSource.data, function(dataset) {
                    return dataset.workspaceId === _this.contextInfo.workspaceId;
                }));
            }, DatasetSelectorComponent.prototype.applyWorkspaceFilter = function() {
                "WorkspaceDatasets" === this.workspaceFilter ? this.applyCurrentWorkspaceFilter() : this.applyAllDatasetsFilter();
            }, DatasetSelectorComponent.prototype.applyAllDatasetsFilter = function() {
                this.viewModel.dataSource.data = this.datasets;
            }, DatasetSelectorComponent.prototype.enrichDatasetsWithLabels = function(datasetsLabelsDictionary) {
                if (_.isEmpty(datasetsLabelsDictionary)) return !1;
                var atLeastOneHasLabel = !1;
                return _.each(this.datasets, function(dataset) {
                    dataset.artifactInformationProtection = datasetsLabelsDictionary[dataset.id], atLeastOneHasLabel || _.isEmpty(dataset.artifactInformationProtection) || (atLeastOneHasLabel = !0);
                }), atLeastOneHasLabel;
            }, DatasetSelectorComponent.prototype.updateViewModel = function() {
                this.viewModel.dataSource.data = 0 === _.size(this.datasets) ? [] : this.datasets, 
                this.viewModel.isLoading = 0 === _.size(this.datasets), this.sortData(this.defaultSort);
            }, DatasetSelectorComponent.prototype.selectRow = function(row) {
                this.viewModel.selectedRow = row;
            }, DatasetSelectorComponent.\u0275fac = function(t) {
                return new (t || DatasetSelectorComponent)(fesm2022_core["\u0275\u0275directiveInject"](feature_switch_service.vZ), fesm2022_core["\u0275\u0275directiveInject"](localization_service.o), fesm2022_core["\u0275\u0275directiveInject"](information_protection_service.u));
            }, DatasetSelectorComponent.\u0275cmp = fesm2022_core["\u0275\u0275defineComponent"]({
                type: DatasetSelectorComponent,
                selectors: [ [ "dataset-selector" ] ],
                inputs: {
                    displayColumns: "displayColumns",
                    titleLabel: "titleLabel",
                    descriptionLabel: "descriptionLabel",
                    submitLabel: "submitLabel",
                    datasets: "datasets",
                    hideCancelButton: "hideCancelButton",
                    useFullSizeSearchBox: "useFullSizeSearchBox",
                    isDesktop: "isDesktop",
                    contextInfo: "contextInfo"
                },
                outputs: {
                    onSubmitted: "onSubmitted",
                    onCanceled: "onCanceled"
                },
                features: [ fesm2022_core["\u0275\u0275NgOnChangesFeature"] ],
                decls: 6,
                vars: 4,
                consts: [ [ 1, "datasetSelector" ], [ 1, "header" ], [ 1, "title", 3, "localize" ], [ "class", "tableLoadSpinner", 4, "ngIf" ], [ "class", "tableContainer", "role", "grid", "tabindex", "0", 4, "ngIf" ], [ "class", "buttonRow", 4, "ngIf" ], [ 1, "tableLoadSpinner" ], [ "size", "large", 3, "delay" ], [ "role", "grid", "tabindex", "0", 1, "tableContainer" ], [ 1, "searchRow" ], [ "floatLabel", "never", 3, "ngClass" ], [ "matPrefix", "", 1, "glyphicon", "glyph-mini", "pbi-glyph-search" ], [ "localize", "SearchBox_Text" ], [ "matInput", "", "aria-controls", "datasetsTable", 3, "keyup" ], [ "class", "workspaceFilter", "localizeTooltip", "Filter", "aria-controls", "datasetsTable", 3, "ngModel", "ngModelChange", "change", 4, "ngIf" ], [ "role", "row", "matSort", "", "matSortDisableClear", "", 1, "column-headers", 3, "matSortChange" ], [ "role", "columnheader", 1, "col", "col-name", 3, "ngClass" ], [ 1, "content", 3, "mat-sort-header" ], [ "localize", "Name", 3, "title" ], [ "role", "columnheader", "class", "col col-endorsement", 3, "ngClass", 4, "ngIf" ], [ "role", "columnheader", 1, "col", "col-owner", 3, "ngClass" ], [ "localize", "Owner_Lowercase", 3, "title" ], [ "role", "columnheader", 1, "col", "col-workspace", 3, "ngClass" ], [ "localize", "Workspace", 3, "title" ], [ "role", "columnheader", 1, "col", "col-last-refresh", 3, "ngClass" ], [ "localize", "RefreshedLabel", 3, "title" ], [ "role", "columnheader", "class", "col col-sensitivity", 4, "ngIf" ], [ "itemSize", "50", "id", "datasetsTable", "role", "grid", "aria-live", "polite" ], [ "role", "row", "cdkMonitorSubtreeFocus", "", "class", "row", 3, "ngClass", "accessible-click", "dblclick", 4, "cdkVirtualFor", "cdkVirtualForOf", "cdkVirtualForTrackBy" ], [ "localizeTooltip", "Filter", "aria-controls", "datasetsTable", 1, "workspaceFilter", 3, "ngModel", "ngModelChange", "change" ], [ "value", "AllDatasets", "localize", "AllDatasets", "localizeTooltip", "AllDatasets" ], [ "value", "WorkspaceDatasets", "localize", "WorkspaceDatasets", "localizeTooltip", "WorkspaceDatasets" ], [ "role", "columnheader", 1, "col", "col-endorsement", 3, "ngClass" ], [ "localize", "Endorsement", 3, "title" ], [ "role", "columnheader", 1, "col", "col-sensitivity" ], [ "localize", "Sensitivity", 3, "title" ], [ "role", "row", "cdkMonitorSubtreeFocus", "", 1, "row", 3, "ngClass", "accessible-click", "dblclick" ], [ "role", "cell", "cdkMonitorElementFocus", "", 1, "col", "col-name", "trimmedTextWithEllipsis", 3, "ngClass", "pbiTooltip" ], [ "role", "cell", "cdkMonitorElementFocus", "", "class", "col col-endorsement", 3, "ngClass", 4, "ngIf" ], [ "role", "cell", "cdkMonitorElementFocus", "", 1, "col", "col-owner", 3, "ngClass", "pbiTooltip" ], [ "role", "cell", "cdkMonitorElementFocus", "", 1, "col", "col-workspace", 3, "ngClass", "pbiTooltip" ], [ "role", "cell", "cdkMonitorElementFocus", "", 1, "col", "col-last-refresh", 3, "ngClass", "pbiTooltip" ], [ "role", "cell", "cdkMonitorElementFocus", "", "class", "col col-sensitivity", 4, "ngIf" ], [ "role", "cell", "cdkMonitorElementFocus", "", 1, "col", "col-endorsement", 3, "ngClass" ], [ 3, "stage", 4, "ngIf" ], [ 3, "stage" ], [ "role", "cell", "cdkMonitorElementFocus", "", 1, "col", "col-sensitivity" ], [ 3, "label" ], [ 1, "buttonRow" ], [ 1, "submit", "pbi-fluent-button", "primary", 3, "disabled", "localize", "click" ], [ "class", "cancel pbi-fluent-button", "localize", "Cancel_ButtonText", 3, "click", 4, "ngIf" ], [ "localize", "Cancel_ButtonText", 1, "cancel", "pbi-fluent-button", 3, "click" ] ],
                template: function(rf, ctx) {
                    1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 0)(1, "section", 1), 
                    fesm2022_core["\u0275\u0275element"](2, "div", 2), fesm2022_core["\u0275\u0275elementEnd"](), 
                    fesm2022_core["\u0275\u0275template"](3, DatasetSelectorComponent_section_3_Template, 2, 1, "section", 3), 
                    fesm2022_core["\u0275\u0275template"](4, DatasetSelectorComponent_section_4_Template, 29, 41, "section", 4), 
                    fesm2022_core["\u0275\u0275template"](5, DatasetSelectorComponent_section_5_Template, 3, 3, "section", 5), 
                    fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf && (fesm2022_core["\u0275\u0275advance"](2), 
                    fesm2022_core["\u0275\u0275propertyInterpolate"]("localize", ctx.titleLabel), fesm2022_core["\u0275\u0275advance"](1), 
                    fesm2022_core["\u0275\u0275property"]("ngIf", ctx.viewModel.isLoading), fesm2022_core["\u0275\u0275advance"](1), 
                    fesm2022_core["\u0275\u0275property"]("ngIf", !ctx.viewModel.isLoading), fesm2022_core["\u0275\u0275advance"](1), 
                    fesm2022_core["\u0275\u0275property"]("ngIf", !ctx.viewModel.isLoading));
                },
                dependencies: [ common.NgClass, common.NgIf, fesm2022_forms.YN, fesm2022_forms.Kr, fesm2022_forms.EJ, fesm2022_forms.JJ, fesm2022_forms.On, spinner_component.O, localize_directive.X, localize_tooltip_directive.r, icon.Hw, legacy_form_field.v_, legacy_form_field.$V, legacy_form_field.g4, legacy_input.k0, sort.YE, sort.nU, accessible_click_directive.t, pbi_tooltip_directive.V, scrolling.xd, scrolling.x0, scrolling.N7, endorsement_badge_component.r, information_protection_label_component.$, localize_pipe.F ],
                styles: [ ".tableContainer[_ngcontent-%COMP%]{padding:0 20px}.tableLoadSpinner[_ngcontent-%COMP%]{height:200px}.tableLoadSpinner[_ngcontent-%COMP%]   spinner[_ngcontent-%COMP%]{position:relative;left:50%;top:50%}.tableLoadSpinner[_ngcontent-%COMP%]   spinner[_ngcontent-%COMP%]     .powerbi-spinner{transform:translate(-50%,-50%)}[_nghost-%COMP%]     .mat-header-row{border-bottom-color:var(--theme-secondary-color, #000000);border-bottom-width:1px}[_nghost-%COMP%]     .mat-header-row .mat-header-cell{font-family:Segoe UI,wf_segoe-ui_normal,helvetica,arial,sans-serif}[_nghost-%COMP%]     .mat-header-row button{background-color:transparent}[_nghost-%COMP%]     .mat-header-row button:focus{background-color:transparent}[_nghost-%COMP%]     .mat-header-row:hover .mat-checkbox-frame{border-width:1.5px;background-color:var(--white-color, #FFF);border-color:var(--neutral-tertiary-alt-color, #C8C8C8)}[_nghost-%COMP%]     .mat-row{min-height:55px}[_nghost-%COMP%]     .mat-row.selected{background:var(--neutral-lighter-color, #F4F4F4)}[_nghost-%COMP%]     .mat-row.selected .mat-column-actions{color:var(--black-color, #000)}[_nghost-%COMP%]     .mat-row:hover{background-color:var(--neutral-light-color, #EAEAEA)}[_nghost-%COMP%]     .mat-row:hover .mat-checkbox-frame{border-width:1.5px;background-color:var(--white-color, #FFF);border-color:var(--neutral-tertiary-alt-color, #C8C8C8)}[_nghost-%COMP%]     .mat-row:hover .mat-column-actions{color:var(--black-color, #000)}[_nghost-%COMP%]     .mat-header-cell{display:flex;text-align:left;color:var(--neutral-primary-color, #333333);font-size:16px;font-family:wf_standard-font,helvetica,arial,sans-serif;font-weight:400;white-space:nowrap}[_nghost-%COMP%]     .mat-header-cell span{overflow:hidden;text-overflow:ellipsis;margin-right:0}[_nghost-%COMP%]     .mat-cell{display:block;color:var(--neutral-secondary-color, #666666);text-overflow:ellipsis;white-space:nowrap;min-height:unset}[_nghost-%COMP%]     mat-cell, [_nghost-%COMP%]     mat-footer-cell, [_nghost-%COMP%]     mat-header-cell{min-height:0px}[_nghost-%COMP%]     .selected .mat-cell{color:var(--neutral-primary-color, #333333)}[_nghost-%COMP%]     .mat-checkbox-inner-container{height:18px;width:18px;background-color:transparent}[_nghost-%COMP%]     .mat-checkbox-inner-container .mat-checkbox-input{height:20px;width:20px}[_nghost-%COMP%]     .mat-checkbox-inner-container .mat-checkbox-frame{border-width:1px;border-radius:50%;border-color:transparent;transition:border-color 0ms cubic-bezier(0,0,.2,.1)}[_nghost-%COMP%]     .mat-checkbox-inner-container .mat-ripple-element{display:none}[_nghost-%COMP%]     .mat-checkbox-checked.mat-accent .mat-checkbox-background{background-color:var(--theme-primary-color, #F2C811)}[_nghost-%COMP%]     .mat-checkbox-indeterminate .mat-checkbox-background{background-color:var(--neutral-primary-color-alt3, #515151)}[_nghost-%COMP%]     .mat-checkbox-background{border-radius:50%;padding:2px}[_nghost-%COMP%]     .selectionCell{padding:20px 0 20px 20px;margin:-21px 0}[_nghost-%COMP%]     .selectionCell .checkboxExtender{display:inline-block;position:relative;padding:20px;margin:-21px;cursor:pointer}.mat-column-select[_ngcontent-%COMP%]{overflow:initial;max-width:50px}.mat-column-actions[_ngcontent-%COMP%]{overflow:initial;max-width:60px;padding-left:0;padding-right:15px;color:transparent}.mat-column-actions[_ngcontent-%COMP%]     .mat-button{min-width:50px;line-height:55px}.mat-column-actions[_ngcontent-%COMP%]     .mat-button:hover, .mat-column-actions[_ngcontent-%COMP%]     .mat-button:focus:hover, .mat-column-actions[_ngcontent-%COMP%]     .mat-button:active:hover{background-color:var(--neutral-lighter-color, #F4F4F4)}.mat-column-actions[_ngcontent-%COMP%]     .mat-button:focus, .mat-column-actions[_ngcontent-%COMP%]     .mat-button:active{background-color:transparent}.mat-column-actions[_ngcontent-%COMP%]     .mat-button .mat-button-focus-overlay{background-color:transparent}", '[_nghost-%COMP%]{--datasetSelectorSearchForeground: var(--fluent-theme-neutral-secondary-color);--datasetSelectorSearchBackground: var(--fluent-theme-white-color);--datasetSelectorSearchBorder: var(--fluent-theme-neutral-tertiary-alt-color)}[data-legacy-theming=false]   [_nghost-%COMP%]{--datasetSelectorSearchForeground: var(--colorNeutralForeground2);--datasetSelectorSearchBackground: var(--colorNeutralBackground1);--datasetSelectorSearchBorder: var(--colorNeutralStroke1)}  html[data-focus-source=key] .datasetSelector:focus,   html[data-focus-source=key] .datasetSelector *:focus{outline:var(--focus-two-tone-outline-definition, auto 1px);outline-color:var(--focus-two-tone-outline-color, -webkit-focus-ring-color)}  html[data-focus-source=mouse] .datasetSelector:focus,   html[data-focus-source=mouse] .datasetSelector *:focus,   html[data-focus-source=program] .datasetSelector:focus,   html[data-focus-source=program] .datasetSelector *:focus{outline:none}.datasetSelector[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]{line-height:20px}.datasetSelector[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .title[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--lg-font-size, 16px);font-weight:var(--font-weight-semi-bold, 600);color:var(--fluent-theme-neutral-primary-color, #323130);padding-bottom:8px}.datasetSelector[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%]{line-height:16px}.datasetSelector[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%]   input[_ngcontent-%COMP%], .datasetSelector[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%]   mat-select[_ngcontent-%COMP%]{font-size:var(--md-font-size, 14px);color:var(--datasetSelectorSearchForeground);background-color:var(--datasetSelectorSearchBackground);border-color:var(--datasetSelectorSearchBorder);caret-color:auto}.datasetSelector[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:focus{outline:none}.datasetSelector[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%]   .mat-form-field-wrapper[_ngcontent-%COMP%]{padding:0}.datasetSelector[_ngcontent-%COMP%]     .mat-sort-header-arrow[style] .mat-sort-header-stem{display:none}.datasetSelector[_ngcontent-%COMP%]     .mat-sort-header-arrow[style] .mat-sort-header-indicator .mat-sort-header-pointer-left, .datasetSelector[_ngcontent-%COMP%]     .mat-sort-header-arrow[style] .mat-sort-header-indicator .mat-sort-header-pointer-right, .datasetSelector[_ngcontent-%COMP%]     .mat-sort-header-arrow[style] .mat-sort-header-indicator .mat-sort-header-pointer-middle{display:none}.datasetSelector[_ngcontent-%COMP%]     .mat-sort-header-arrow .mat-sort-header-indicator{font-family:PowrMDL2;font-style:normal;font-size:32px;display:inline-block;font-size:12px;height:12px;display:flex}.datasetSelector[_ngcontent-%COMP%]   [aria-sort=ascending][_ngcontent-%COMP%]     .mat-sort-header-arrow .mat-sort-header-indicator{transform:translateY(10)!important}.datasetSelector[_ngcontent-%COMP%]   [aria-sort=ascending][_ngcontent-%COMP%]     .mat-sort-header-arrow .mat-sort-header-indicator:before{content:"\\e972"}.datasetSelector[_ngcontent-%COMP%]   [aria-sort=descending][_ngcontent-%COMP%]     .mat-sort-header-arrow .mat-sort-header-indicator{transform:translateY(0)!important}.datasetSelector[_ngcontent-%COMP%]   [aria-sort=descending][_ngcontent-%COMP%]     .mat-sort-header-arrow .mat-sort-header-indicator:before{content:"\\e971"}.datasetSelector[_ngcontent-%COMP%]     mat-form-field{border:1px solid var(--fluent-theme-neutral-tertiary-alt-color, #C8C6C4)}.datasetSelector[_ngcontent-%COMP%]     mat-form-field .mat-form-field-wrapper{padding:0 0 0 8px}.datasetSelector[_ngcontent-%COMP%]     mat-form-field .mat-form-field-wrapper .mat-form-field-infix{border:none;margin-left:8px;margin-right:5px}.datasetSelector[_ngcontent-%COMP%]     mat-form-field .mat-form-field-wrapper .mat-icon.glyph-mini{font-size:12px;height:auto}.datasetSelector[_ngcontent-%COMP%]     mat-form-field .mat-form-field-wrapper .mat-form-field-label{color:var(--datasetSelectorSearchForeground)}.datasetSelector[_ngcontent-%COMP%]     mat-form-field.mat-focused{border:1px solid black}.datasetSelector[_ngcontent-%COMP%]     .mat-form-field.mat-focused .mat-form-field-label{color:transparent}.datasetSelector[_ngcontent-%COMP%]     .mat-form-field-underline{display:none}.datasetSelector[_ngcontent-%COMP%]   .tableContainer[_ngcontent-%COMP%]{padding:0;margin-right:1px;margin-left:1px}.datasetSelector[_ngcontent-%COMP%]   .tableContainer[_ngcontent-%COMP%]   .searchRow[_ngcontent-%COMP%]{margin-top:10px;overflow:hidden;padding-right:2px}.datasetSelector[_ngcontent-%COMP%]   .tableContainer[_ngcontent-%COMP%]   .searchRow[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%]{width:200px;height:32px;margin:12px 0;display:inline-block}.datasetSelector[_ngcontent-%COMP%]   .tableContainer[_ngcontent-%COMP%]   .searchRow[_ngcontent-%COMP%]   mat-form-field.fullSizeSearchBox[_ngcontent-%COMP%]{width:100%}.datasetSelector[_ngcontent-%COMP%]   .tableContainer[_ngcontent-%COMP%]   .searchRow[_ngcontent-%COMP%]   .workspaceFilter[_ngcontent-%COMP%]{margin:12px 5px 10px;display:inline-block;float:right;font-size:16px;height:32px;width:160px;border:solid 1px;border-color:var(--fluent-theme-neutral-tertiary-alt-color, #C8C6C4)}.datasetSelector[_ngcontent-%COMP%]   .tableContainer[_ngcontent-%COMP%]   .searchRow[_ngcontent-%COMP%]   .workspaceFilter[_ngcontent-%COMP%]:focus{border-color:var(--fluent-theme-neutral-light-color, #EDEBE9)}.datasetSelector[_ngcontent-%COMP%]   .tableContainer[_ngcontent-%COMP%]   mat-table[_ngcontent-%COMP%]{max-height:500px}.datasetSelector[_ngcontent-%COMP%]   .tableContainer[_ngcontent-%COMP%]   mat-cell[_ngcontent-%COMP%], .datasetSelector[_ngcontent-%COMP%]   .tableContainer[_ngcontent-%COMP%]   mat-header-cell[_ngcontent-%COMP%]{padding-left:12px}.datasetSelector[_ngcontent-%COMP%]   .tableContainer[_ngcontent-%COMP%]   mat-header-cell[_ngcontent-%COMP%]{padding-top:4px;padding-bottom:4px}.datasetSelector[_ngcontent-%COMP%]   .tableContainer[_ngcontent-%COMP%]   mat-header-cell[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{margin-right:0;font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-semi-bold, 600)}.datasetSelector[_ngcontent-%COMP%]   .tableContainer[_ngcontent-%COMP%]   .mat-header-row[_ngcontent-%COMP%]{border-bottom-color:var(--fluent-theme-neutral-tertiary-alt-color, #C8C6C4)}.datasetSelector[_ngcontent-%COMP%]   .buttonRow[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;padding:12px 0}.datasetSelector[_ngcontent-%COMP%]   .buttonRow[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-semi-bold, 600);line-height:20px;padding:4px 20px;border:none;margin-right:1px;margin-left:1px}.datasetSelector[_ngcontent-%COMP%]   .buttonRow[_ngcontent-%COMP%]   button.submit[_ngcontent-%COMP%]{margin-right:8px}endorsement-badge[_ngcontent-%COMP%]{display:flex;align-items:center;max-width:fit-content}endorsement-badge[_ngcontent-%COMP%]     .endorsementLabel{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}cdk-virtual-scroll-viewport[_ngcontent-%COMP%]{height:350px;overflow:overlay}cdk-virtual-scroll-viewport[_ngcontent-%COMP%]     .cdk-virtual-scroll-content-wrapper{box-sizing:border-box;width:100%}cdk-virtual-scroll-viewport[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]{height:48px}cdk-virtual-scroll-viewport[_ngcontent-%COMP%]   .row.selected[_ngcontent-%COMP%]{background:var(--neutral-lighter-color, #F4F4F4)}cdk-virtual-scroll-viewport[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]   .col[_ngcontent-%COMP%]{padding:0 8px;font-size:var(--md-font-size, 14px)}cdk-virtual-scroll-viewport[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]   .col.cdk-keyboard-focused[_ngcontent-%COMP%]{outline:var(--focus-two-tone-outline-definition, auto 1px);outline-color:var(--focus-two-tone-outline-color, -webkit-focus-ring-color)}cdk-virtual-scroll-viewport[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]   .col.col-name[_ngcontent-%COMP%]{align-items:center}cdk-virtual-scroll-viewport[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]   .col.col-name[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{text-decoration:none}cdk-virtual-scroll-viewport[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]   .col.col-name[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover{text-decoration:underline;color:inherit}cdk-virtual-scroll-viewport[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]   .col.col-name[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:focus{outline:none}cdk-virtual-scroll-viewport[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]   .col.col-name[_ngcontent-%COMP%]   a.cdk-keyboard-focused[_ngcontent-%COMP%]{outline:var(--focus-two-tone-outline-definition, auto 1px);outline-color:var(--focus-two-tone-outline-color, -webkit-focus-ring-color)}cdk-virtual-scroll-viewport[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]   .col.col-name[_ngcontent-%COMP%]   span.cdk-keyboard-focused[_ngcontent-%COMP%]{outline:var(--focus-two-tone-outline-definition, auto 1px);outline-color:var(--focus-two-tone-outline-color, -webkit-focus-ring-color)}cdk-virtual-scroll-viewport[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]   .col.col-last-refresh[_ngcontent-%COMP%]{padding-right:16px}cdk-virtual-scroll-viewport[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]   .col.col-last-refresh.adjusted-col-width[_ngcontent-%COMP%]{padding-right:0}cdk-virtual-scroll-viewport[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]   .col.col-sensitivity[_ngcontent-%COMP%]{padding-right:16px}cdk-virtual-scroll-viewport[_ngcontent-%COMP%]   .row.hover[_ngcontent-%COMP%], cdk-virtual-scroll-viewport[_ngcontent-%COMP%]   .row.cdk-keyboard-focused[_ngcontent-%COMP%], cdk-virtual-scroll-viewport[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]:hover{background-color:var(--fluent-theme-neutral-lighter-color, #F3F2F1)}.column-headers[_ngcontent-%COMP%], .row[_ngcontent-%COMP%]{color:var(--fluent-theme-neutral-primary-color, #323130);border-bottom:1px solid var(--fluent-theme-neutral-light-color, #EDEBE9);display:flex;align-items:center;padding:0 10px 0 2px;margin-top:1px;margin-left:10px;margin-right:10px}.column-headers[_ngcontent-%COMP%]     .mat-icon:before, .row[_ngcontent-%COMP%]     .mat-icon:before{vertical-align:middle}.column-headers[_ngcontent-%COMP%]   .col[_ngcontent-%COMP%], .row[_ngcontent-%COMP%]   .col[_ngcontent-%COMP%]{box-sizing:border-box;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.column-headers[_ngcontent-%COMP%]   a[_ngcontent-%COMP%], .row[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{color:var(--fluent-theme-neutral-primary-color, #323130)}.column-headers[_ngcontent-%COMP%]{margin:24px 0 0;height:40px}.column-headers[_ngcontent-%COMP%]   .col[_ngcontent-%COMP%]{height:40px;line-height:38px;display:flex;align-items:center}.column-headers[_ngcontent-%COMP%]   .col[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]{padding:0 8px;overflow:hidden}.column-headers[_ngcontent-%COMP%]   .col[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]:hover{background-color:var(--fluent-theme-neutral-lighter-color, #F3F2F1)}.column-headers[_ngcontent-%COMP%]   .col[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]:hover     .mat-sort-header-container{background:none}.column-headers[_ngcontent-%COMP%]   .col[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]     button[disabled]{color:inherit;background:none;border:none}.column-headers[_ngcontent-%COMP%]   .col[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]     .mat-sort-header-container{overflow:hidden;margin-top:1px;margin-bottom:1px}.column-headers[_ngcontent-%COMP%]   .col[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{overflow:hidden;text-overflow:ellipsis}.col.col-name[_ngcontent-%COMP%], .col.col-name.adjusted-col-width[_ngcontent-%COMP%]{flex:0 1 320px}.col.col-endorsement[_ngcontent-%COMP%]{flex:1 0 150px}.col.col-endorsement.adjusted-col-width[_ngcontent-%COMP%]{flex:1 0 128px}.col.col-owner[_ngcontent-%COMP%]{width:180px}.col.col-owner.adjusted-col-width[_ngcontent-%COMP%]{width:120px}.col.col-workspace[_ngcontent-%COMP%]{width:200px}.col.col-workspace.adjusted-col-width[_ngcontent-%COMP%]{width:160px}.col.col-last-refresh[_ngcontent-%COMP%]{width:150px}.col.col-last-refresh.adjusted-col-width[_ngcontent-%COMP%]{width:120px}.col.col-sensitivity[_ngcontent-%COMP%]{width:160px}' ]
            }), DatasetSelectorComponent;
        }();
        function compare(obj1, obj2, isAsc) {
            return (obj1 < obj2 ? -1 : 1) * (isAsc ? 1 : -1);
        }
        var qna_input_v2_lazy_component = __webpack_require__(73360), qna_feedback_loop_component_c0 = [ "utteranceCell" ];
        function QnaFeedbackLoopComponent_div_0_div_6_section_3_ng_container_3_div_6_Template(rf, ctx) {
            if (1 & rf) {
                var _r21 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "div", 34), fesm2022_core["\u0275\u0275text"](1), 
                fesm2022_core["\u0275\u0275elementStart"](2, "i", 35), fesm2022_core["\u0275\u0275listener"]("accessible-click", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r21);
                    var ctx_r20 = fesm2022_core["\u0275\u0275nextContext"](5);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r20.refreshUtterances());
                }), fesm2022_core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var selectedDataset_r18 = fesm2022_core["\u0275\u0275nextContext"]().$implicit, ctx_r19 = fesm2022_core["\u0275\u0275nextContext"](4);
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275textInterpolate1"](" ", selectedDataset_r18.lastRefresh, " "), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("pbi-tooltip", ctx_r19.tooltipConfigs.refresh), 
                fesm2022_core["\u0275\u0275attribute"]("aria-label", ctx_r19.ariaResources.refreshButtonLabel);
            }
        }
        function QnaFeedbackLoopComponent_div_0_div_6_section_3_ng_container_3_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275elementStart"](1, "div", 32)(2, "span"), 
            fesm2022_core["\u0275\u0275text"](3), fesm2022_core["\u0275\u0275elementEnd"](), 
            fesm2022_core["\u0275\u0275elementStart"](4, "b"), fesm2022_core["\u0275\u0275text"](5), 
            fesm2022_core["\u0275\u0275elementEnd"]()(), fesm2022_core["\u0275\u0275template"](6, QnaFeedbackLoopComponent_div_0_div_6_section_3_ng_container_3_div_6_Template, 3, 3, "div", 33), 
            fesm2022_core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var selectedDataset_r18 = ctx.$implicit;
                fesm2022_core["\u0275\u0275advance"](3), fesm2022_core["\u0275\u0275textInterpolate1"]("", selectedDataset_r18.name, " |"), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275textInterpolate"](selectedDataset_r18.workspace), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", selectedDataset_r18.lastRefresh);
            }
        }
        function QnaFeedbackLoopComponent_div_0_div_6_section_3_ng_container_20_ng_container_1_Template(rf, ctx) {
            1 & rf && fesm2022_core["\u0275\u0275elementContainer"](0);
        }
        var qna_feedback_loop_component_c1 = function(a0) {
            return {
                errorDetails: a0
            };
        };
        function QnaFeedbackLoopComponent_div_0_div_6_section_3_ng_container_20_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275template"](1, QnaFeedbackLoopComponent_div_0_div_6_section_3_ng_container_20_ng_container_1_Template, 1, 0, "ng-container", 36), 
            fesm2022_core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var errorInfo_r1 = fesm2022_core["\u0275\u0275nextContext"](3).ngIf, _r5 = fesm2022_core["\u0275\u0275reference"](11);
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngTemplateOutlet", _r5)("ngTemplateOutletContext", fesm2022_core["\u0275\u0275pureFunction1"](2, qna_feedback_loop_component_c1, errorInfo_r1.error));
            }
        }
        function QnaFeedbackLoopComponent_div_0_div_6_section_3_ng_container_22_span_6_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "span"), fesm2022_core["\u0275\u0275text"](1), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var count_r27 = ctx.$implicit;
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275textInterpolate1"]("(", count_r27, ")");
            }
        }
        function QnaFeedbackLoopComponent_div_0_div_6_section_3_ng_container_22_ng_container_19_span_5_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "span", 56), fesm2022_core["\u0275\u0275text"](1), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var utterance_r28 = fesm2022_core["\u0275\u0275nextContext"]().$implicit;
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275textInterpolate"](utterance_r28.text);
            }
        }
        function QnaFeedbackLoopComponent_div_0_div_6_section_3_ng_container_22_ng_container_19_qna_input_v2_lazy_6_Template(rf, ctx) {
            if (1 & rf && fesm2022_core["\u0275\u0275element"](0, "qna-input-v2-lazy", 57), 
            2 & rf) {
                var utterance_r28 = fesm2022_core["\u0275\u0275nextContext"]().$implicit;
                fesm2022_core["\u0275\u0275property"]("hidden", !utterance_r28.interpretation)("entryPoint", utterance_r28.inputViewModel.entryPoint)("interpretListener", utterance_r28.inputViewModel.interpretListener)("qnaSupportedScopes", utterance_r28.inputViewModel.qnaSupportedScopes)("initialUtterance", utterance_r28.inputViewModel.initialUtterance)("presentationArgs", utterance_r28.inputViewModel.presentation)("configs", utterance_r28.inputViewModel.configs);
            }
        }
        function QnaFeedbackLoopComponent_div_0_div_6_section_3_ng_container_22_ng_container_19_ng_container_11_Template(rf, ctx) {
            if (1 & rf) {
                var _r40 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275elementStart"](1, "i", 58), 
                fesm2022_core["\u0275\u0275listener"]("accessible-click", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r40);
                    var utterance_r28 = fesm2022_core["\u0275\u0275nextContext"]().$implicit, ctx_r38 = fesm2022_core["\u0275\u0275nextContext"](5);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r38.clickFeedbackExpandButton(utterance_r28));
                }), fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275elementContainerEnd"]();
            }
            if (2 & rf) {
                var utterance_r28 = fesm2022_core["\u0275\u0275nextContext"]().$implicit, ctx_r32 = fesm2022_core["\u0275\u0275nextContext"](5);
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngClass", utterance_r28.feedbackSummary.collapsed ? "pbi-glyph-chevrondownsmall" : "pbi-glyph-chevronupsmall"), 
                fesm2022_core["\u0275\u0275attribute"]("aria-label", ctx_r32.ariaResources.ratingExpandButton(utterance_r28.feedbackSummary.rating))("aria-expanded", !utterance_r28.feedbackSummary.collapsed);
            }
        }
        function QnaFeedbackLoopComponent_div_0_div_6_section_3_ng_container_22_ng_container_19_span_15_Template(rf, ctx) {
            1 & rf && fesm2022_core["\u0275\u0275element"](0, "span", 59);
        }
        function QnaFeedbackLoopComponent_div_0_div_6_section_3_ng_container_22_ng_container_19_i_17_Template(rf, ctx) {
            if (1 & rf) {
                var _r44 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "i", 60), fesm2022_core["\u0275\u0275listener"]("accessible-click", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r44);
                    var utterance_r28 = fesm2022_core["\u0275\u0275nextContext"]().$implicit, ctx_r42 = fesm2022_core["\u0275\u0275nextContext"](5);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r42.selectUtterance(utterance_r28.text));
                }), fesm2022_core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r34 = fesm2022_core["\u0275\u0275nextContext"](6);
                fesm2022_core["\u0275\u0275property"]("pbi-tooltip", ctx_r34.tooltipConfigs.fix);
            }
        }
        function QnaFeedbackLoopComponent_div_0_div_6_section_3_ng_container_22_ng_container_19_tr_18_ng_container_6_div_1_ng_container_5_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275elementStart"](1, "div", 70)(2, "span", 71), 
            fesm2022_core["\u0275\u0275text"](3), fesm2022_core["\u0275\u0275elementEnd"](), 
            fesm2022_core["\u0275\u0275element"](4, "span", 23), fesm2022_core["\u0275\u0275elementEnd"](), 
            fesm2022_core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var choice_r51 = ctx.$implicit;
                fesm2022_core["\u0275\u0275advance"](3), fesm2022_core["\u0275\u0275textInterpolate1"]("(", choice_r51.value, "):"), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275propertyInterpolate"]("localize", "Qna_FeedbackDialog_Option_" + choice_r51.key);
            }
        }
        function QnaFeedbackLoopComponent_div_0_div_6_section_3_ng_container_22_ng_container_19_tr_18_ng_container_6_div_1_h2_7_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "h2"), fesm2022_core["\u0275\u0275element"](1, "span", 72), 
            fesm2022_core["\u0275\u0275elementStart"](2, "span", 69), fesm2022_core["\u0275\u0275text"](3), 
            fesm2022_core["\u0275\u0275elementEnd"]()()), 2 & rf) {
                var detail_r46 = fesm2022_core["\u0275\u0275nextContext"](2).$implicit;
                fesm2022_core["\u0275\u0275advance"](3), fesm2022_core["\u0275\u0275textInterpolate1"]("(", detail_r46.comments.length, "):");
            }
        }
        function QnaFeedbackLoopComponent_div_0_div_6_section_3_ng_container_22_ng_container_19_tr_18_ng_container_6_div_1_ng_container_8_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275elementStart"](1, "div", 73)(2, "i"), 
            fesm2022_core["\u0275\u0275text"](3), fesm2022_core["\u0275\u0275elementEnd"]()(), 
            fesm2022_core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var comment_r53 = ctx.$implicit;
                fesm2022_core["\u0275\u0275advance"](3), fesm2022_core["\u0275\u0275textInterpolate1"]('"', comment_r53, '"');
            }
        }
        function QnaFeedbackLoopComponent_div_0_div_6_section_3_ng_container_22_ng_container_19_tr_18_ng_container_6_div_1_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 68)(1, "h2"), 
            fesm2022_core["\u0275\u0275element"](2, "span", 23), fesm2022_core["\u0275\u0275elementStart"](3, "span", 69), 
            fesm2022_core["\u0275\u0275text"](4), fesm2022_core["\u0275\u0275elementEnd"]()(), 
            fesm2022_core["\u0275\u0275template"](5, QnaFeedbackLoopComponent_div_0_div_6_section_3_ng_container_22_ng_container_19_tr_18_ng_container_6_div_1_ng_container_5_Template, 5, 2, "ng-container", 66), 
            fesm2022_core["\u0275\u0275pipe"](6, "keyvalue"), fesm2022_core["\u0275\u0275template"](7, QnaFeedbackLoopComponent_div_0_div_6_section_3_ng_container_22_ng_container_19_tr_18_ng_container_6_div_1_h2_7_Template, 4, 1, "h2", 18), 
            fesm2022_core["\u0275\u0275template"](8, QnaFeedbackLoopComponent_div_0_div_6_section_3_ng_container_22_ng_container_19_tr_18_ng_container_6_div_1_ng_container_8_Template, 4, 1, "ng-container", 66), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var detail_r46 = fesm2022_core["\u0275\u0275nextContext"]().$implicit;
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275propertyInterpolate"]("localize", detail_r46.title), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275textInterpolate1"]("(", detail_r46.count, ")"), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngForOf", fesm2022_core["\u0275\u0275pipeBind1"](6, 5, detail_r46.choices)), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("ngIf", detail_r46.comments.length > 0), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngForOf", detail_r46.comments);
            }
        }
        function QnaFeedbackLoopComponent_div_0_div_6_section_3_ng_container_22_ng_container_19_tr_18_ng_container_6_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275template"](1, QnaFeedbackLoopComponent_div_0_div_6_section_3_ng_container_22_ng_container_19_tr_18_ng_container_6_div_1_Template, 9, 7, "div", 67), 
            fesm2022_core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var detail_r46 = ctx.$implicit;
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", (null == detail_r46 ? null : detail_r46.count) > 0);
            }
        }
        var qna_feedback_loop_component_c2 = function(a0, a1) {
            return [ a0, a1 ];
        };
        function QnaFeedbackLoopComponent_div_0_div_6_section_3_ng_container_22_ng_container_19_tr_18_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "tr", 61)(1, "td", 62)(2, "div", 63)(3, "h1"), 
            fesm2022_core["\u0275\u0275element"](4, "span", 64), fesm2022_core["\u0275\u0275elementEnd"](), 
            fesm2022_core["\u0275\u0275elementStart"](5, "div", 65), fesm2022_core["\u0275\u0275template"](6, QnaFeedbackLoopComponent_div_0_div_6_section_3_ng_container_22_ng_container_19_tr_18_ng_container_6_Template, 2, 1, "ng-container", 66), 
            fesm2022_core["\u0275\u0275elementEnd"]()()()()), 2 & rf) {
                var utterance_r28 = fesm2022_core["\u0275\u0275nextContext"]().$implicit;
                fesm2022_core["\u0275\u0275advance"](6), fesm2022_core["\u0275\u0275property"]("ngForOf", fesm2022_core["\u0275\u0275pureFunction2"](1, qna_feedback_loop_component_c2, utterance_r28.feedbackSummary.positiveDetail, utterance_r28.feedbackSummary.negativeDetail));
            }
        }
        function QnaFeedbackLoopComponent_div_0_div_6_section_3_ng_container_22_ng_container_19_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275elementStart"](1, "tr", 48)(2, "td", 49, 50), 
            fesm2022_core["\u0275\u0275pipe"](4, "async"), fesm2022_core["\u0275\u0275template"](5, QnaFeedbackLoopComponent_div_0_div_6_section_3_ng_container_22_ng_container_19_span_5_Template, 2, 1, "span", 51), 
            fesm2022_core["\u0275\u0275template"](6, QnaFeedbackLoopComponent_div_0_div_6_section_3_ng_container_22_ng_container_19_qna_input_v2_lazy_6_Template, 1, 7, "qna-input-v2-lazy", 52), 
            fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275elementStart"](7, "td"), 
            fesm2022_core["\u0275\u0275text"](8), fesm2022_core["\u0275\u0275elementEnd"](), 
            fesm2022_core["\u0275\u0275elementStart"](9, "td"), fesm2022_core["\u0275\u0275element"](10, "span", 23), 
            fesm2022_core["\u0275\u0275template"](11, QnaFeedbackLoopComponent_div_0_div_6_section_3_ng_container_22_ng_container_19_ng_container_11_Template, 2, 3, "ng-container", 18), 
            fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275elementStart"](12, "td"), 
            fesm2022_core["\u0275\u0275text"](13), fesm2022_core["\u0275\u0275elementEnd"](), 
            fesm2022_core["\u0275\u0275elementStart"](14, "td"), fesm2022_core["\u0275\u0275template"](15, QnaFeedbackLoopComponent_div_0_div_6_section_3_ng_container_22_ng_container_19_span_15_Template, 1, 0, "span", 53), 
            fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275elementStart"](16, "td"), 
            fesm2022_core["\u0275\u0275template"](17, QnaFeedbackLoopComponent_div_0_div_6_section_3_ng_container_22_ng_container_19_i_17_Template, 1, 1, "i", 54), 
            fesm2022_core["\u0275\u0275elementEnd"]()(), fesm2022_core["\u0275\u0275template"](18, QnaFeedbackLoopComponent_div_0_div_6_section_3_ng_container_22_ng_container_19_tr_18_Template, 7, 4, "tr", 55), 
            fesm2022_core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var utterance_r28 = ctx.$implicit, ctx_r26 = fesm2022_core["\u0275\u0275nextContext"](5);
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275attribute"]("aria-label", ctx_r26.getQuestionAriaLabel(utterance_r28)), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("pbi-tooltip", fesm2022_core["\u0275\u0275pipeBind1"](4, 12, ctx_r26.getUtteranceTooltipConfig(utterance_r28.guid))), 
                fesm2022_core["\u0275\u0275attribute"]("data-utteranceguid", utterance_r28.guid), 
                fesm2022_core["\u0275\u0275advance"](3), fesm2022_core["\u0275\u0275property"]("ngIf", !utterance_r28.interpretation || !utterance_r28.inputViewModel), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", utterance_r28.inputViewModel), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275textInterpolate"](utterance_r28.dateAsked), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275propertyInterpolate"]("localize", utterance_r28.feedbackSummary.rating), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", "QnaTooling_FeedbackLoop_ResultRating_NotAvailable" !== utterance_r28.feedbackSummary.rating), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275textInterpolate"](utterance_r28.frequency), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("ngIf", utterance_r28.flagged), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("ngIf", null == utterance_r28.interpretation ? null : utterance_r28.interpretation.hasError), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", !utterance_r28.feedbackSummary.collapsed);
            }
        }
        function QnaFeedbackLoopComponent_div_0_div_6_section_3_ng_container_22_Template(rf, ctx) {
            if (1 & rf) {
                var _r57 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275elementStart"](1, "table", 37)(2, "thead")(3, "th", 38), 
                fesm2022_core["\u0275\u0275element"](4, "span", 39), fesm2022_core["\u0275\u0275text"](5, "\xa0"), 
                fesm2022_core["\u0275\u0275template"](6, QnaFeedbackLoopComponent_div_0_div_6_section_3_ng_container_22_span_6_Template, 2, 1, "span", 18), 
                fesm2022_core["\u0275\u0275pipe"](7, "async"), fesm2022_core["\u0275\u0275elementEnd"](), 
                fesm2022_core["\u0275\u0275element"](8, "th", 40)(9, "th", 41)(10, "th", 42), fesm2022_core["\u0275\u0275elementStart"](11, "th", 43), 
                fesm2022_core["\u0275\u0275element"](12, "span", 30), fesm2022_core["\u0275\u0275text"](13, "\xa0"), 
                fesm2022_core["\u0275\u0275element"](14, "i", 44), fesm2022_core["\u0275\u0275elementEnd"](), 
                fesm2022_core["\u0275\u0275element"](15, "th", 45), fesm2022_core["\u0275\u0275elementEnd"]()(), 
                fesm2022_core["\u0275\u0275elementStart"](16, "cdk-virtual-scroll-viewport", 46), 
                fesm2022_core["\u0275\u0275listener"]("scrolledIndexChange", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r57);
                    var ctx_r56 = fesm2022_core["\u0275\u0275nextContext"](4);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r56.scrollIndex$.next($event));
                }), fesm2022_core["\u0275\u0275elementStart"](17, "table")(18, "tbody"), fesm2022_core["\u0275\u0275template"](19, QnaFeedbackLoopComponent_div_0_div_6_section_3_ng_container_22_ng_container_19_Template, 19, 14, "ng-container", 47), 
                fesm2022_core["\u0275\u0275pipe"](20, "async"), fesm2022_core["\u0275\u0275elementEnd"]()()(), 
                fesm2022_core["\u0275\u0275elementContainerEnd"]();
            }
            if (2 & rf) {
                var tmp_0_0, ctx_r17 = fesm2022_core["\u0275\u0275nextContext"](4);
                fesm2022_core["\u0275\u0275advance"](6), fesm2022_core["\u0275\u0275property"]("ngIf", null == (tmp_0_0 = fesm2022_core["\u0275\u0275pipeBind1"](7, 5, ctx_r17.state.filteredInterpretedUtterances$)) ? null : tmp_0_0.length), 
                fesm2022_core["\u0275\u0275advance"](8), fesm2022_core["\u0275\u0275property"]("pbi-tooltip", ctx_r17.tooltipConfigs.fixRequested), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("itemSize", 40), 
                fesm2022_core["\u0275\u0275advance"](3), fesm2022_core["\u0275\u0275property"]("cdkVirtualForOf", fesm2022_core["\u0275\u0275pipeBind1"](20, 7, ctx_r17.state.filteredInterpretedUtterances$))("cdkVirtualForTemplateCacheSize", 0);
            }
        }
        function QnaFeedbackLoopComponent_div_0_div_6_section_3_Template(rf, ctx) {
            if (1 & rf) {
                var _r59 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "section", 15)(1, "div", 16)(2, "div", 17), 
                fesm2022_core["\u0275\u0275template"](3, QnaFeedbackLoopComponent_div_0_div_6_section_3_ng_container_3_Template, 7, 3, "ng-container", 18), 
                fesm2022_core["\u0275\u0275pipe"](4, "async"), fesm2022_core["\u0275\u0275elementEnd"](), 
                fesm2022_core["\u0275\u0275elementStart"](5, "div", 19)(6, "button", 20), fesm2022_core["\u0275\u0275listener"]("click", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r59);
                    var ctx_r58 = fesm2022_core["\u0275\u0275nextContext"](3);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r58.changeDataset());
                }), fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275elementStart"](7, "div", 21)(8, "button", 22), 
                fesm2022_core["\u0275\u0275element"](9, "span", 23), fesm2022_core["\u0275\u0275pipe"](10, "async"), 
                fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275elementStart"](11, "mat-menu", 24, 25)(13, "div", 26), 
                fesm2022_core["\u0275\u0275element"](14, "b", 27), fesm2022_core["\u0275\u0275elementEnd"](), 
                fesm2022_core["\u0275\u0275elementStart"](15, "button", 28), fesm2022_core["\u0275\u0275listener"]("click", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r59);
                    var ctx_r60 = fesm2022_core["\u0275\u0275nextContext"](3);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r60.changeFilter("all"));
                }), fesm2022_core["\u0275\u0275element"](16, "span", 29), fesm2022_core["\u0275\u0275elementEnd"](), 
                fesm2022_core["\u0275\u0275elementStart"](17, "button", 28), fesm2022_core["\u0275\u0275listener"]("click", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r59);
                    var ctx_r61 = fesm2022_core["\u0275\u0275nextContext"](3);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r61.changeFilter("fixRequested"));
                }), fesm2022_core["\u0275\u0275element"](18, "span", 30), fesm2022_core["\u0275\u0275elementEnd"]()()()()(), 
                fesm2022_core["\u0275\u0275elementStart"](19, "div", 31), fesm2022_core["\u0275\u0275template"](20, QnaFeedbackLoopComponent_div_0_div_6_section_3_ng_container_20_Template, 2, 4, "ng-container", 18), 
                fesm2022_core["\u0275\u0275pipe"](21, "async"), fesm2022_core["\u0275\u0275template"](22, QnaFeedbackLoopComponent_div_0_div_6_section_3_ng_container_22_Template, 21, 9, "ng-container", 18), 
                fesm2022_core["\u0275\u0275pipe"](23, "async"), fesm2022_core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var tmp_6_0, tmp_7_0, _r15 = fesm2022_core["\u0275\u0275reference"](12), ctx_r11 = fesm2022_core["\u0275\u0275nextContext"](3);
                fesm2022_core["\u0275\u0275advance"](3), fesm2022_core["\u0275\u0275property"]("ngIf", fesm2022_core["\u0275\u0275pipeBind1"](4, 8, ctx_r11.state.selectedDataset$)), 
                fesm2022_core["\u0275\u0275advance"](5), fesm2022_core["\u0275\u0275property"]("matMenuTriggerFor", _r15), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275propertyInterpolate"]("localize", fesm2022_core["\u0275\u0275pipeBind1"](10, 10, ctx_r11.state.filterResourceId$)), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("overlapTrigger", !1)("xPosition", "before"), 
                fesm2022_core["\u0275\u0275advance"](8), fesm2022_core["\u0275\u0275attribute"]("aria-label", ctx_r11.ariaResources.reviewQuestionsList), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", 0 === (null == (tmp_6_0 = fesm2022_core["\u0275\u0275pipeBind1"](21, 12, ctx_r11.state.filteredInterpretedUtterances$)) ? null : tmp_6_0.length)), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("ngIf", (null == (tmp_7_0 = fesm2022_core["\u0275\u0275pipeBind1"](23, 14, ctx_r11.state.filteredInterpretedUtterances$)) ? null : tmp_7_0.length) > 0);
            }
        }
        function QnaFeedbackLoopComponent_div_0_div_6_section_4_dataset_selector_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r65 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "dataset-selector", 76), fesm2022_core["\u0275\u0275listener"]("onSubmitted", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r65);
                    var ctx_r64 = fesm2022_core["\u0275\u0275nextContext"](4);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r64.onDatasetSelected($event));
                })("onCanceled", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r65);
                    var ctx_r66 = fesm2022_core["\u0275\u0275nextContext"](4);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r66.onDatasetSelected($event));
                }), fesm2022_core["\u0275\u0275pipe"](1, "async"), fesm2022_core["\u0275\u0275pipe"](2, "async"), 
                fesm2022_core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r62 = fesm2022_core["\u0275\u0275nextContext"](4);
                fesm2022_core["\u0275\u0275property"]("displayColumns", ctx_r62.displayColumns)("titleLabel", "QnaTooling_FeedbackLoop_SelectDatasetForUtterances")("descriptionLabel", "QnaTooling_FeedbackLoop_SelectDatasetDescription")("submitLabel", "Select")("datasets", fesm2022_core["\u0275\u0275pipeBind1"](1, 7, ctx_r62.state.datasets$))("hideCancelButton", !fesm2022_core["\u0275\u0275pipeBind1"](2, 9, ctx_r62.state.selectedDataset$))("useFullSizeSearchBox", !0);
            }
        }
        function QnaFeedbackLoopComponent_div_0_div_6_section_4_ng_container_2_ng_container_1_Template(rf, ctx) {
            1 & rf && fesm2022_core["\u0275\u0275elementContainer"](0);
        }
        function QnaFeedbackLoopComponent_div_0_div_6_section_4_ng_container_2_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275template"](1, QnaFeedbackLoopComponent_div_0_div_6_section_4_ng_container_2_ng_container_1_Template, 1, 0, "ng-container", 36), 
            fesm2022_core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var errorInfo_r1 = fesm2022_core["\u0275\u0275nextContext"](3).ngIf, _r7 = fesm2022_core["\u0275\u0275reference"](13);
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngTemplateOutlet", _r7)("ngTemplateOutletContext", fesm2022_core["\u0275\u0275pureFunction1"](2, qna_feedback_loop_component_c1, errorInfo_r1.error));
            }
        }
        function QnaFeedbackLoopComponent_div_0_div_6_section_4_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "section", 74), fesm2022_core["\u0275\u0275template"](1, QnaFeedbackLoopComponent_div_0_div_6_section_4_dataset_selector_1_Template, 3, 11, "dataset-selector", 75), 
            fesm2022_core["\u0275\u0275template"](2, QnaFeedbackLoopComponent_div_0_div_6_section_4_ng_container_2_Template, 2, 4, "ng-container", 18), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var errorInfo_r1 = fesm2022_core["\u0275\u0275nextContext"](2).ngIf;
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", !errorInfo_r1.error), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", errorInfo_r1.error);
            }
        }
        var qna_feedback_loop_component_c3 = function(a0) {
            return {
                "background-image": a0
            };
        };
        function QnaFeedbackLoopComponent_div_0_div_6_section_5_Template(rf, ctx) {
            if (1 & rf) {
                var _r71 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "section", 77), fesm2022_core["\u0275\u0275element"](1, "div", 78)(2, "div", 79)(3, "br"), 
                fesm2022_core["\u0275\u0275elementStart"](4, "button", 80), fesm2022_core["\u0275\u0275listener"]("click", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r71);
                    var ctx_r70 = fesm2022_core["\u0275\u0275nextContext"](3);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r70.trySignIn());
                }), fesm2022_core["\u0275\u0275element"](5, "span", 81), fesm2022_core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var ctx_r13 = fesm2022_core["\u0275\u0275nextContext"](3);
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngStyle", fesm2022_core["\u0275\u0275pureFunction1"](1, qna_feedback_loop_component_c3, ctx_r13.emptyQnaImageUrl));
            }
        }
        function QnaFeedbackLoopComponent_div_0_div_6_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 10), fesm2022_core["\u0275\u0275elementContainerStart"](1, 11), 
            fesm2022_core["\u0275\u0275pipe"](2, "async"), fesm2022_core["\u0275\u0275template"](3, QnaFeedbackLoopComponent_div_0_div_6_section_3_Template, 24, 16, "section", 12), 
            fesm2022_core["\u0275\u0275template"](4, QnaFeedbackLoopComponent_div_0_div_6_section_4_Template, 3, 2, "section", 13), 
            fesm2022_core["\u0275\u0275template"](5, QnaFeedbackLoopComponent_div_0_div_6_section_5_Template, 6, 3, "section", 14), 
            fesm2022_core["\u0275\u0275elementContainerEnd"](), fesm2022_core["\u0275\u0275elementEnd"]()), 
            2 & rf) {
                var ctx_r2 = fesm2022_core["\u0275\u0275nextContext"](2);
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngSwitch", fesm2022_core["\u0275\u0275pipeBind1"](2, 4, ctx_r2.state.view$)), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("ngSwitchCase", "utteranceList"), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngSwitchCase", "datasetSelector"), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngSwitchCase", "signIn");
            }
        }
        function QnaFeedbackLoopComponent_div_0_ng_template_8_Template(rf, ctx) {
            1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 82), fesm2022_core["\u0275\u0275element"](1, "spinner", 83), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf && (fesm2022_core["\u0275\u0275advance"](1), 
            fesm2022_core["\u0275\u0275property"]("delay", 0));
        }
        function QnaFeedbackLoopComponent_div_0_ng_template_10_ng_container_2_ng_container_1_Template(rf, ctx) {
            1 & rf && fesm2022_core["\u0275\u0275elementContainer"](0);
        }
        function QnaFeedbackLoopComponent_div_0_ng_template_10_ng_container_2_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275template"](1, QnaFeedbackLoopComponent_div_0_ng_template_10_ng_container_2_ng_container_1_Template, 1, 0, "ng-container", 36), 
            fesm2022_core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var errorDetails_r72 = fesm2022_core["\u0275\u0275nextContext"]().errorDetails;
                fesm2022_core["\u0275\u0275nextContext"]();
                var _r9 = fesm2022_core["\u0275\u0275reference"](15);
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngTemplateOutlet", _r9)("ngTemplateOutletContext", fesm2022_core["\u0275\u0275pureFunction1"](2, qna_feedback_loop_component_c1, errorDetails_r72));
            }
        }
        function QnaFeedbackLoopComponent_div_0_ng_template_10_div_3_Template(rf, ctx) {
            1 & rf && fesm2022_core["\u0275\u0275element"](0, "div", 87);
        }
        function QnaFeedbackLoopComponent_div_0_ng_template_10_div_5_Template(rf, ctx) {
            1 & rf && fesm2022_core["\u0275\u0275element"](0, "div", 88);
        }
        function QnaFeedbackLoopComponent_div_0_ng_template_10_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 84), fesm2022_core["\u0275\u0275element"](1, "div", 78), 
            fesm2022_core["\u0275\u0275template"](2, QnaFeedbackLoopComponent_div_0_ng_template_10_ng_container_2_Template, 2, 4, "ng-container", 18), 
            fesm2022_core["\u0275\u0275template"](3, QnaFeedbackLoopComponent_div_0_ng_template_10_div_3_Template, 1, 0, "div", 85), 
            fesm2022_core["\u0275\u0275pipe"](4, "async"), fesm2022_core["\u0275\u0275template"](5, QnaFeedbackLoopComponent_div_0_ng_template_10_div_5_Template, 1, 0, "div", 86), 
            fesm2022_core["\u0275\u0275pipe"](6, "async"), fesm2022_core["\u0275\u0275elementEnd"]()), 
            2 & rf) {
                var errorDetails_r72 = ctx.errorDetails, ctx_r6 = fesm2022_core["\u0275\u0275nextContext"](2);
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngStyle", fesm2022_core["\u0275\u0275pureFunction1"](8, qna_feedback_loop_component_c3, ctx_r6.emptyQnaImageUrl)), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", errorDetails_r72), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", !errorDetails_r72 && "All" === fesm2022_core["\u0275\u0275pipeBind1"](4, 4, ctx_r6.state.filterResourceId$)), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("ngIf", !errorDetails_r72 && "All" !== fesm2022_core["\u0275\u0275pipeBind1"](6, 6, ctx_r6.state.filterResourceId$));
            }
        }
        function QnaFeedbackLoopComponent_div_0_ng_template_12_ng_container_2_Template(rf, ctx) {
            1 & rf && fesm2022_core["\u0275\u0275elementContainer"](0);
        }
        function QnaFeedbackLoopComponent_div_0_ng_template_12_Template(rf, ctx) {
            if (1 & rf) {
                var _r81 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "div", 89), fesm2022_core["\u0275\u0275element"](1, "span", 90), 
                fesm2022_core["\u0275\u0275template"](2, QnaFeedbackLoopComponent_div_0_ng_template_12_ng_container_2_Template, 1, 0, "ng-container", 36), 
                fesm2022_core["\u0275\u0275elementStart"](3, "div", 91)(4, "button", 92), fesm2022_core["\u0275\u0275listener"]("click", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r81);
                    var ctx_r80 = fesm2022_core["\u0275\u0275nextContext"](2);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r80.onDatasetSelected());
                }), fesm2022_core["\u0275\u0275elementEnd"]()()();
            }
            if (2 & rf) {
                var errorDetails_r78 = ctx.errorDetails;
                fesm2022_core["\u0275\u0275nextContext"]();
                var _r9 = fesm2022_core["\u0275\u0275reference"](15);
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("ngTemplateOutlet", _r9)("ngTemplateOutletContext", fesm2022_core["\u0275\u0275pureFunction1"](2, qna_feedback_loop_component_c1, errorDetails_r78));
            }
        }
        function QnaFeedbackLoopComponent_div_0_ng_template_14_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 93)(1, "div", 94), 
            fesm2022_core["\u0275\u0275element"](2, "i", 95)(3, "span", 96), fesm2022_core["\u0275\u0275elementEnd"](), 
            fesm2022_core["\u0275\u0275element"](4, "span", 97), fesm2022_core["\u0275\u0275elementEnd"]()), 
            2 & rf) {
                var errorDetails_r82 = ctx.errorDetails;
                fesm2022_core["\u0275\u0275advance"](3), fesm2022_core["\u0275\u0275property"]("localize", errorDetails_r82.titleKey), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("localize", errorDetails_r82.descriptionKey);
            }
        }
        var qna_feedback_loop_component_c4 = function() {
            return {
                "aria-label": "QnaTooling_FeedbackLoop_RefreshTooltip"
            };
        };
        function QnaFeedbackLoopComponent_div_0_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 1), fesm2022_core["\u0275\u0275element"](1, "h1", 2), 
            fesm2022_core["\u0275\u0275elementStart"](2, "h2"), fesm2022_core["\u0275\u0275element"](3, "span", 3), 
            fesm2022_core["\u0275\u0275text"](4, "\xa0 "), fesm2022_core["\u0275\u0275element"](5, "i", 4), 
            fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275template"](6, QnaFeedbackLoopComponent_div_0_div_6_Template, 6, 6, "div", 5), 
            fesm2022_core["\u0275\u0275pipe"](7, "async"), fesm2022_core["\u0275\u0275template"](8, QnaFeedbackLoopComponent_div_0_ng_template_8_Template, 2, 1, "ng-template", null, 6, fesm2022_core["\u0275\u0275templateRefExtractor"]), 
            fesm2022_core["\u0275\u0275template"](10, QnaFeedbackLoopComponent_div_0_ng_template_10_Template, 7, 10, "ng-template", null, 7, fesm2022_core["\u0275\u0275templateRefExtractor"]), 
            fesm2022_core["\u0275\u0275template"](12, QnaFeedbackLoopComponent_div_0_ng_template_12_Template, 5, 4, "ng-template", null, 8, fesm2022_core["\u0275\u0275templateRefExtractor"]), 
            fesm2022_core["\u0275\u0275template"](14, QnaFeedbackLoopComponent_div_0_ng_template_14_Template, 5, 2, "ng-template", null, 9, fesm2022_core["\u0275\u0275templateRefExtractor"]), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var _r3 = fesm2022_core["\u0275\u0275reference"](9), ctx_r0 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275advance"](5), fesm2022_core["\u0275\u0275property"]("pbi-tooltip", ctx_r0.tooltipConfigs.refreshInfo)("localizeAttr", fesm2022_core["\u0275\u0275pureFunction0"](6, qna_feedback_loop_component_c4)), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", !fesm2022_core["\u0275\u0275pipeBind1"](7, 4, ctx_r0.state.isLoading$))("ngIfElse", _r3);
            }
        }
        var qna_feedback_loop_component_c5 = function(a0) {
            return {
                error: a0
            };
        }, TooltipConfigDisabled = {
            tooltipDisable: !0
        }, QnaFeedbackLoopComponent = function() {
            function QnaFeedbackLoopComponent(dataSources, highContrastCssGenerationService, interpretListenerFactory, screenReaderService, localizationService, accountService, remoteArtifactsService, qnaService, errorService, telemetryService) {
                var _this = this;
                this.highContrastCssGenerationService = highContrastCssGenerationService, this.interpretListenerFactory = interpretListenerFactory, 
                this.screenReaderService = screenReaderService, this.localizationService = localizationService, 
                this.displayColumns = [ "name", "owner", "workspaceName", "lastRefreshed" ], this.scrollIndex$ = new Subject.xQ, 
                this.emptyQnaImageUrl = "url(../../..".concat((0, build.Xr)(), "/images/empty-qna.png"), 
                this.interpretWindow = {
                    min: -5,
                    max: 15
                }, this.scrollDebounce = 1e3, this.tooltipDelay = 300, this.lastScrollIndex = 0, 
                this.utteranceSelected = new fesm2022_core.EventEmitter, this.utteranceCellTooltipConfigs = {}, 
                this.utteranceCellTooltipConfigObservables$ = {}, this.state = new QnaFeedbackLoopState(localizationService, remoteArtifactsService, qnaService, accountService, errorService, telemetryService), 
                this.dsrDataSource = _.find(dataSources.get(), function(d) {
                    return d.type === PowerBIContracts_constants.nKy;
                }), debug.fF.assertValue(this.dsrDataSource, "No dsr data source found"), this.tooltipConfigs = {
                    fixRequested: {
                        tooltipLocalizeDescription: "QnaTooling_FeedbackLoop_AskToAddTooltip",
                        tooltipDelay: this.tooltipDelay
                    },
                    fix: {
                        tooltipLocalizeDescription: "QnaTooling_FeedbackLoop_FixTooltip",
                        tooltipDelay: this.tooltipDelay
                    },
                    refresh: {
                        tooltipLocalizeDescription: "Refresh",
                        tooltipDelay: this.tooltipDelay
                    },
                    refreshInfo: {
                        tooltipLocalizeDescription: "QnaTooling_FeedbackLoop_RefreshTooltip",
                        tooltipArrowPosition: constants.xI.arrowTopMiddle,
                        tooltipDelay: this.tooltipDelay,
                        tooltipHideDelay: 1e3,
                        tooltipHyperlinkText: localizationService.get("Generic_LearnMore"),
                        tooltipHyperlinkUrl: "https://go.microsoft.com/fwlink/?linkid=2102558"
                    }
                }, this.ariaResources = {
                    reviewQuestionsList: localizationService.get("QnaTooling_FeedbackLoop_ReviewQuestionsList"),
                    questions: localizationService.get("Questions"),
                    dateAsked: localizationService.get("QnaTooling_FeedbackLoop_DateAsked"),
                    feedbackRating: localizationService.get("QnaTooling_FeedbackLoop_ResultRating"),
                    frequency: localizationService.get("QnaTooling_FeedbackLoop_QuestionFrequency"),
                    fixRequested: localizationService.get("FixRequested"),
                    fixNeeded: localizationService.get("FixNeeded"),
                    edit: localizationService.get("Edit"),
                    refreshButtonLabel: "",
                    ratingExpandButton: function(rating) {
                        return [ localizationService.get("QnaTooling_FeedbackLoop_ResultRating"), localizationService.get(rating) ].join(" ");
                    }
                }, this.state.selectedDataset$.subscribe(function(selectedDataset) {
                    var lastRefresh = null == selectedDataset ? void 0 : selectedDataset.lastRefresh;
                    _this.ariaResources.refreshButtonLabel = _.isEmpty(lastRefresh) ? _this.localizationService.get("Refresh") : _this.localizationService.format("QnaTooling_WithLastRefreshedTime_Refresh_AccessibilityLabel", lastRefresh);
                }), this.initializeHighContrastRules();
            }
            return Object.defineProperty(QnaFeedbackLoopComponent.prototype, "_utteranceCellElementRefs", {
                set: function(elementRefs) {
                    if (elementRefs) for (var _i = 0, _a = elementRefs.toArray(); _i < _a.length; _i++) {
                        var elementRef = _a[_i], utteranceGuid = elementRef.nativeElement.getAttribute("data-utteranceguid");
                        debug.fF.assertValue(utteranceGuid, "utteranceGuid on td element");
                        var tooltipConfig = this.utteranceCellTooltipConfigs[utteranceGuid];
                        if (!tooltipConfig) {
                            var spanElement = _.find(elementRef.nativeElement.childNodes, function(node) {
                                return node.nodeType === Node.ELEMENT_NODE && "SPAN" === node.tagName && node.classList.contains("utterancePreview");
                            });
                            debug.fF.assertValue(spanElement, "expect #utteranceCell contains a child node which is a span and has class .utterancePreview"), 
                            this.utteranceCellTooltipConfigs[utteranceGuid] = tooltipConfig = spanElement && spanElement.offsetWidth < spanElement.scrollWidth ? {
                                tooltipDescription: spanElement.textContent,
                                isTooltipForModalDialog: !0,
                                tooltipDelay: 0,
                                tooltipHideDelay: 0
                            } : TooltipConfigDisabled;
                            var existingConfigObservables = this.utteranceCellTooltipConfigObservables$[utteranceGuid];
                            existingConfigObservables && existingConfigObservables.behaviorSubject.next(tooltipConfig);
                        }
                    }
                },
                enumerable: !1,
                configurable: !0
            }), QnaFeedbackLoopComponent.prototype.ngOnInit = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var scrollRange$, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.state.init() ];

                          case 1:
                            return _a.sent(), scrollRange$ = this.scrollIndex$.pipe((0, debounceTime.b)(this.scrollDebounce), (0, 
                            map.U)(function(i) {
                                return _.range(Math.max(0, i + _this.interpretWindow.min), i + _this.interpretWindow.max);
                            })), this.scrollIndex$.subscribe(function(index) {
                                return _this.lastScrollIndex = index;
                            }), (0, combineLatest.aj)(this.state.utterances$.pipe((0, filter.h)(function(u) {
                                return !_.isEmpty(u);
                            })), scrollRange$).subscribe(function(_a) {
                                for (var utterances = _a[0], _i = 0, _b = _.uniq(_a[1]); _i < _b.length; _i++) {
                                    var i = _b[_i];
                                    utterances[i] && !_this.state.inputViewModels[i] && _this.interpret(utterances[i].text, i);
                                }
                            }), this.linguisticSchemaUpdated$ && this.linguisticSchemaUpdated$.subscribe(function() {
                                _this.state.mutate(8), _this.scrollIndex$.next(_this.lastScrollIndex);
                            }), [ 2 ];
                        }
                    });
                });
            }, QnaFeedbackLoopComponent.prototype.trySignIn = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        return [ 2, this.state.mutate(9) ];
                    });
                });
            }, QnaFeedbackLoopComponent.prototype.selectUtterance = function(utterance) {
                this.utteranceSelected.emit(utterance);
            }, QnaFeedbackLoopComponent.prototype.refreshUtterances = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        return [ 2, this.state.mutate(0) ];
                    });
                });
            }, QnaFeedbackLoopComponent.prototype.changeDataset = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        return [ 2, this.state.mutate(2) ];
                    });
                });
            }, QnaFeedbackLoopComponent.prototype.changeFilter = function(value) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        return [ 2, this.state.mutate(4, {
                            newFilter: value
                        }) ];
                    });
                });
            }, QnaFeedbackLoopComponent.prototype.onDatasetSelected = function(newDataset) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        return [ 2, this.state.mutate(3, {
                            newDataset
                        }) ];
                    });
                });
            }, QnaFeedbackLoopComponent.prototype.getQuestionAriaLabel = function(utterance) {
                return [ this.ariaResources.questions, utterance.text, this.ariaResources.dateAsked, utterance.dateAsked, this.ariaResources.feedbackRating, this.localizationService.get(utterance.feedbackSummary.rating), this.ariaResources.frequency, utterance.frequency, this.ariaResources.fixRequested, utterance.flagged, this.ariaResources.fixNeeded, utterance.interpretation && utterance.interpretation.hasError ].join(" ");
            }, QnaFeedbackLoopComponent.prototype.getUtteranceTooltipConfig = function(utterancGUID) {
                var configInfo = this.utteranceCellTooltipConfigObservables$[utterancGUID];
                if (!configInfo) {
                    var configSubject = new BehaviorSubject.X(void 0), configObservable = configSubject.pipe((0, 
                    take.q)(2));
                    this.utteranceCellTooltipConfigObservables$[utterancGUID] = configInfo = {
                        behaviorSubject: configSubject,
                        observable: configObservable
                    };
                }
                return this.utteranceCellTooltipConfigs[utterancGUID] && configInfo.behaviorSubject.next(this.utteranceCellTooltipConfigs[utterancGUID]), 
                configInfo.observable;
            }, QnaFeedbackLoopComponent.prototype.clickFeedbackExpandButton = function(utterance) {
                var _this = this, feedbackSummary = utterance.feedbackSummary;
                if (feedbackSummary.collapsed = !feedbackSummary.collapsed, !feedbackSummary.collapsed) {
                    for (var screenReaderContent_1, _i = 0, _a = [ feedbackSummary.positiveDetail, feedbackSummary.negativeDetail ]; _i < _a.length; _i++) {
                        var detail = _a[_i];
                        if (detail.count > 0) {
                            var title = [ this.localizationService.get(detail.title), detail.count ].join(" ");
                            if (screenReaderContent_1 = 0 === _.size(screenReaderContent_1) ? title : screenReaderContent_1 + " " + title, 
                            detail.choices.forEach(function(count, choice) {
                                screenReaderContent_1 += " " + [ _this.localizationService.get("Qna_FeedbackDialog_Option_" + choice), count ].join(" ");
                            }), detail.comments.length > 0) {
                                screenReaderContent_1 += " " + this.localizationService.get("QnaTooling_FeedbackLoop_FeedbackDetail_OtherComments");
                                for (var _b = 0, _c = detail.comments; _b < _c.length; _b++) screenReaderContent_1 += " " + _c[_b];
                            }
                        }
                    }
                    this.screenReaderService.alertPolite(screenReaderContent_1);
                }
            }, QnaFeedbackLoopComponent.prototype.interpret = function(utterance, index) {
                var _this = this, model = {
                    vsName: this.dsrDataSource.dsr.vsName,
                    dbName: this.dsrDataSource.dsr.dbName,
                    qnaSupported: !0,
                    id: null != this.dsrDataSource.dsr.modelId ? this.dsrDataSource.dsr.modelId : 1
                }, interpretListener = this.interpretListenerFactory.createInterpretListener({
                    forTrainingTermBinding: !0,
                    canShowPods: !1,
                    canShowVisuals: !1,
                    canShowDidYouMean: !1,
                    models: [ model ]
                });
                this.state.mutate(6, {
                    newInputViewModel: {
                        index,
                        inputViewModel: {
                            initialUtterance: utterance,
                            entryPoint: "ReviewQuestions",
                            interpretListener,
                            qnaSupportedScopes: [ {
                                model
                            } ],
                            presentation: {
                                withBorder: !1,
                                backgroundColor: "#FFFFFF"
                            },
                            configs: {
                                disableSendingServiceTags: !0,
                                disableAuthoring: !0,
                                displayDisabledStateVisually: !1,
                                showActionButtons: !1,
                                showCorrectedUtterance: !1,
                                showQuestionIcon: !1,
                                showLoadingIcon: !1,
                                showWarningIcon: !1
                            }
                        }
                    }
                }), interpretListener.getObservable().subscribe(function(result) {
                    return _this.onInterpretResult(index, result);
                });
            }, QnaFeedbackLoopComponent.prototype.onInterpretResult = function(index, result) {
                this.onInterpretResultInternal(index, result);
            }, QnaFeedbackLoopComponent.prototype.onInterpretResultInternal = function(index, result) {
                if (window.getSelection() && window.getSelection().removeAllRanges(), !this.state.interpretations[index] && result && result.termBindingsTrainingInfo && result.termBindingsTrainingInfo.spans) {
                    var hasError = result.termBindingsTrainingInfo.spans.some(function(span) {
                        return "error" === span.state;
                    });
                    this.state.mutate(7, {
                        newInterpret: {
                            index,
                            interpretation: {
                                hasError
                            }
                        }
                    });
                }
            }, QnaFeedbackLoopComponent.prototype.initializeHighContrastRules = function() {
                this.highContrastCssGenerationService.addRule(".themeableElement .qnaFeedbackLoop tr:hover", "{ background-color: @selectedBackgroundColor !important; opacity: 1 !important; color: @selectedForegroundColor !important; }"), 
                this.highContrastCssGenerationService.addRule(".themeableElement .qnaFeedbackLoop .row.selected, .themeableElement .row:hover", "{ background-color: @selectedBackgroundColor !important; opacity: 1 !important; color: @selectedForegroundColor !important; }"), 
                this.highContrastCssGenerationService.addRule(".themeableElement #qnaFeedbackLoop .qnaFeedbackLoopContent .utteranceList .content table tr:hover td .qnaInputV2Container", "{ background-color: transparent !important; }");
            }, QnaFeedbackLoopComponent.\u0275fac = function(t) {
                return new (t || QnaFeedbackLoopComponent)(fesm2022_core["\u0275\u0275directiveInject"](data_sources_service.D), fesm2022_core["\u0275\u0275directiveInject"](high_contrast_css_generation_service.g), fesm2022_core["\u0275\u0275directiveInject"](interpret_listener_service.y), fesm2022_core["\u0275\u0275directiveInject"](screen_reader_service.g), fesm2022_core["\u0275\u0275directiveInject"](localization_service.o), fesm2022_core["\u0275\u0275directiveInject"](account_service.B), fesm2022_core["\u0275\u0275directiveInject"](RemoteArtifactsService), fesm2022_core["\u0275\u0275directiveInject"](desktop_qna_service.r), fesm2022_core["\u0275\u0275directiveInject"](error_service.T), fesm2022_core["\u0275\u0275directiveInject"](Telemetry.y0));
            }, QnaFeedbackLoopComponent.\u0275cmp = fesm2022_core["\u0275\u0275defineComponent"]({
                type: QnaFeedbackLoopComponent,
                selectors: [ [ "qna-feedback-loop" ] ],
                viewQuery: function(rf, ctx) {
                    var _t;
                    1 & rf && fesm2022_core["\u0275\u0275viewQuery"](qna_feedback_loop_component_c0, 5, fesm2022_core.ElementRef), 
                    2 & rf && fesm2022_core["\u0275\u0275queryRefresh"](_t = fesm2022_core["\u0275\u0275loadQuery"]()) && (ctx._utteranceCellElementRefs = _t);
                },
                inputs: {
                    linguisticSchemaUpdated$: "linguisticSchemaUpdated$"
                },
                outputs: {
                    utteranceSelected: "utteranceSelected"
                },
                features: [ fesm2022_core["\u0275\u0275ProvidersFeature"]([ interpret_listener_service.y ]) ],
                decls: 2,
                vars: 5,
                consts: [ [ "id", "qnaFeedbackLoop", "class", "qnaFeedbackLoop", 4, "ngIf" ], [ "id", "qnaFeedbackLoop", 1, "qnaFeedbackLoop" ], [ "localize", "QnaTooling_ReviewQuestions_Title" ], [ "localize", "QnaTooling_ReviewQuestions_Subtitle" ], [ "tabindex", "0", 1, "glyphicon", "pbi-glyph-info", "icon", 3, "pbi-tooltip", "localizeAttr" ], [ "class", "qnaFeedbackLoopContent", 4, "ngIf", "ngIfElse" ], [ "loading", "" ], [ "emptyState", "" ], [ "datasetSelectorViewErrorState", "" ], [ "errorTemplate", "" ], [ 1, "qnaFeedbackLoopContent" ], [ 3, "ngSwitch" ], [ "class", "utteranceList", 4, "ngSwitchCase" ], [ "class", "datasetSelector", 4, "ngSwitchCase" ], [ "class", "signIn", 4, "ngSwitchCase" ], [ 1, "utteranceList" ], [ 1, "header" ], [ 1, "left" ], [ 4, "ngIf" ], [ 1, "right" ], [ "localize", "QnaTooling_FeedbackLoop_ChooseDataset", 1, "changeDataset", 3, "click" ], [ 1, "filterSelector" ], [ 1, "filterMenuButton", 3, "matMenuTriggerFor" ], [ 3, "localize" ], [ 3, "overlapTrigger", "xPosition" ], [ "filterMenu", "matMenu" ], [ "mat-menu-item", "", "disabled", "" ], [ "localize", "Filter" ], [ "mat-menu-item", "", 3, "click" ], [ "localize", "All" ], [ "localize", "FixRequested" ], [ "tabindex", "0", 1, "content" ], [ 1, "datasetName" ], [ "class", "lastRefresh", 4, "ngIf" ], [ 1, "lastRefresh" ], [ "role", "button", 1, "glyphicon", "pbi-glyph-refresh", "icon", "clickable", 3, "pbi-tooltip", "accessible-click" ], [ 4, "ngTemplateOutlet", "ngTemplateOutletContext" ], [ 1, "tableHeader" ], [ "role", "columnheader", 1, "questions" ], [ "localize", "Questions" ], [ "role", "columnheader", "localize", "QnaTooling_FeedbackLoop_DateAsked" ], [ "role", "columnheader", "localize", "QnaTooling_FeedbackLoop_ResultRating" ], [ "role", "columnheader", "localize", "QnaTooling_FeedbackLoop_QuestionFrequency" ], [ "role", "columnheader" ], [ 1, "glyphicon", "pbi-glyph-info", "icon", 3, "pbi-tooltip" ], [ "role", "columnheader", "localize", "FixNeeded" ], [ 1, "virtualScroll", 3, "itemSize", "scrolledIndexChange" ], [ 4, "cdkVirtualFor", "cdkVirtualForOf", "cdkVirtualForTemplateCacheSize" ], [ "tabindex", "0" ], [ 3, "pbi-tooltip" ], [ "utteranceCell", "" ], [ "class", "utterancePreview", "tabindex", "-1", 4, "ngIf" ], [ "tabindex", "-1", 3, "hidden", "entryPoint", "interpretListener", "qnaSupportedScopes", "initialUtterance", "presentationArgs", "configs", 4, "ngIf" ], [ "localize", "Requested", 4, "ngIf" ], [ "role", "button", "class", "glyphicon pbi-glyph-edit icon clickable", 3, "pbi-tooltip", "accessible-click", 4, "ngIf" ], [ "class", "feedbackDetails", 4, "ngIf" ], [ "tabindex", "-1", 1, "utterancePreview" ], [ "tabindex", "-1", 3, "hidden", "entryPoint", "interpretListener", "qnaSupportedScopes", "initialUtterance", "presentationArgs", "configs" ], [ "role", "button", 1, "glyphicon", "glyph-mini", 3, "ngClass", "accessible-click" ], [ "localize", "Requested" ], [ "role", "button", 1, "glyphicon", "pbi-glyph-edit", "icon", "clickable", 3, "pbi-tooltip", "accessible-click" ], [ 1, "feedbackDetails" ], [ "colspan", "6" ], [ 1, "feedbackSummary" ], [ "localize", "QnaTooling_FeedbackLoop_FeedbackDetail_Title" ], [ 1, "positiveAndNegative" ], [ 4, "ngFor", "ngForOf" ], [ "class", "detail", 4, "ngIf" ], [ 1, "detail" ], [ 1, "rightCount" ], [ 1, "option" ], [ 1, "leftCount" ], [ "localize", "QnaTooling_FeedbackLoop_FeedbackDetail_OtherComments" ], [ 1, "comment" ], [ 1, "datasetSelector" ], [ 3, "displayColumns", "titleLabel", "descriptionLabel", "submitLabel", "datasets", "hideCancelButton", "useFullSizeSearchBox", "onSubmitted", "onCanceled", 4, "ngIf" ], [ 3, "displayColumns", "titleLabel", "descriptionLabel", "submitLabel", "datasets", "hideCancelButton", "useFullSizeSearchBox", "onSubmitted", "onCanceled" ], [ 1, "signIn" ], [ 1, "emptyImage", 3, "ngStyle" ], [ "localize", "QnaTooling_FeedbackLoop_SignInMessage" ], [ 1, "primary", 3, "click" ], [ "localize", "SignInButton" ], [ 1, "loadingSpinner" ], [ "size", "large", 3, "delay" ], [ 1, "emptyState" ], [ "class", "emptyStateTitle", "localize", "QnaTooling_FeedbackLoop_EmptyState_Title", 4, "ngIf" ], [ "class", "emptyStateTitle", "localize", "QnaTooling_FeedbackLoop_EmptyStateFiltered_Title", 4, "ngIf" ], [ "localize", "QnaTooling_FeedbackLoop_EmptyState_Title", 1, "emptyStateTitle" ], [ "localize", "QnaTooling_FeedbackLoop_EmptyStateFiltered_Title", 1, "emptyStateTitle" ], [ 1, "datasetSelectorViewErrorState" ], [ "localize", "QnaTooling_FeedbackLoop_SelectDatasetForUtterances", 1, "title" ], [ 1, "buttonRow" ], [ "localize", "Cancel_ButtonText", 1, "cancel", 3, "click" ], [ 1, "errorSection" ], [ 1, "errorTitleRow" ], [ 1, "glyphicon", "pbi-glyph-error", "glyph-medium" ], [ 1, "errorTitle", 3, "localize" ], [ 1, "errorDescription", 3, "localize" ] ],
                template: function(rf, ctx) {
                    1 & rf && (fesm2022_core["\u0275\u0275template"](0, QnaFeedbackLoopComponent_div_0_Template, 16, 7, "div", 0), 
                    fesm2022_core["\u0275\u0275pipe"](1, "async")), 2 & rf && fesm2022_core["\u0275\u0275property"]("ngIf", fesm2022_core["\u0275\u0275pureFunction1"](3, qna_feedback_loop_component_c5, fesm2022_core["\u0275\u0275pipeBind1"](1, 1, ctx.state.error$)));
                },
                dependencies: [ common.NgClass, common.NgForOf, common.NgIf, common.NgTemplateOutlet, common.NgStyle, common.NgSwitch, common.NgSwitchCase, legacy_menu.W0, legacy_menu.tN, legacy_menu.D8, scrolling.xd, scrolling.x0, scrolling.N7, DatasetSelectorComponent, localize_directive.X, localize_attr_directive.b, accessible_click_directive.t, qna_input_v2_lazy_component.j, spinner_component.O, tooltip_directive.i, common.AsyncPipe, common.KeyValuePipe ],
                styles: [ '.qnaFeedbackLoop[_ngcontent-%COMP%]{height:100%;box-sizing:border-box;display:flex;flex-direction:column}.qnaFeedbackLoop[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--xlg-font-size, 20px);font-weight:var(--font-weight-semi-bold, 600);line-height:28px;margin:0}.qnaFeedbackLoop[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-regular, 400);margin:8px 0 0;display:flex;align-items:center}.qnaFeedbackLoop[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{margin:4px}.qnaFeedbackLoop[_ngcontent-%COMP%]   .icon[_ngcontent-%COMP%]{font-size:var(--md-font-size, 14px)}.qnaFeedbackLoop[_ngcontent-%COMP%]   .loadingSpinner[_ngcontent-%COMP%]{text-align:center;margin:auto}.qnaFeedbackLoop[_ngcontent-%COMP%]   .clickable[_ngcontent-%COMP%]{cursor:pointer}.qnaFeedbackLoop[_ngcontent-%COMP%]   .emptyImage[_ngcontent-%COMP%]{height:196px;width:300px}.qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]{margin-top:28px;flex:1}.qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .errorSection[_ngcontent-%COMP%]{align-content:center;padding:0 96px}.qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .errorSection[_ngcontent-%COMP%]   .errorTitleRow[_ngcontent-%COMP%]{margin-bottom:8px;display:flex;justify-content:center}.qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .errorSection[_ngcontent-%COMP%]   .errorTitleRow[_ngcontent-%COMP%]   .glyphicon[_ngcontent-%COMP%]{display:inline-block;margin:auto 8px auto 0;color:var(--fluent-theme-error-dark-alt-color, #D83B01)}.qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .errorSection[_ngcontent-%COMP%]   .errorTitleRow[_ngcontent-%COMP%]   .errorTitle[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--lg-font-size, 16px);font-weight:var(--font-weight-semi-bold, 600);display:inline-block;height:fit-content;margin:auto 0}.qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .errorSection[_ngcontent-%COMP%]   .errorDescription[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--lg-font-size, 16px);font-weight:var(--font-weight-semi-bold, 600);text-align:center;display:block}.qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]{height:100%}.qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-regular, 400);display:flex;justify-content:space-between}.qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .datasetName[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--lg-font-size, 16px);font-weight:var(--font-weight-regular, 400)}html:not([dir="rtl"])[_nghost-%COMP%]   .qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .datasetName[_ngcontent-%COMP%]   b[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .datasetName[_ngcontent-%COMP%]   b[_ngcontent-%COMP%]{margin-left:4px}html[dir="rtl"][_nghost-%COMP%]   .qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .datasetName[_ngcontent-%COMP%]   b[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .datasetName[_ngcontent-%COMP%]   b[_ngcontent-%COMP%]{margin-right:4px}.qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .lastRefresh[_ngcontent-%COMP%]{margin-top:4px}html:not([dir="rtl"])[_nghost-%COMP%]   .qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .lastRefresh[_ngcontent-%COMP%]   .icon[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .lastRefresh[_ngcontent-%COMP%]   .icon[_ngcontent-%COMP%]{margin-left:8px}html[dir="rtl"][_nghost-%COMP%]   .qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .lastRefresh[_ngcontent-%COMP%]   .icon[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .lastRefresh[_ngcontent-%COMP%]   .icon[_ngcontent-%COMP%]{margin-right:8px}.qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .right[_ngcontent-%COMP%]{display:flex}.qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .changeDataset[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-regular, 400);padding:0;background:none;border:none;color:var(--fluent-theme-link-color, #0078D4);margin:4px 16px;height:27px}.qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .filterSelector[_ngcontent-%COMP%]   .filterMenuButton[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-regular, 400);padding:4px 24px 4px 4px;position:relative;cursor:pointer;background:none;border:none}.qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .filterSelector[_ngcontent-%COMP%]   .filterMenuButton[_ngcontent-%COMP%]:before{font-family:PowrMDL2;font-style:normal;display:inline-block;content:"\\e972";position:absolute;right:4px}.qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .virtualScroll[_ngcontent-%COMP%]{height:calc(100% - 42px)}.qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .utterancePreview[_ngcontent-%COMP%]{display:block;max-width:300px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}html:not([dir="rtl"])[_nghost-%COMP%]   .qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .utterancePreview[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .utterancePreview[_ngcontent-%COMP%]{margin-left:12px}html[dir="rtl"][_nghost-%COMP%]   .qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .utterancePreview[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .utterancePreview[_ngcontent-%COMP%]{margin-right:12px}.qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]     .qnaInputContainer, .qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]     .qnaInputV2Container{font-size:14px!important;margin:0;height:32px;max-height:32px;min-height:32px;overflow:hidden;pointer-events:none}.qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]     .qnaInputContainer.qnaInputContainer #utteranceContent, .qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]     .qnaInputV2Container.qnaInputContainer #utteranceContent, .qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]     .qnaInputContainer.qnaInputV2Container .utteranceContent, .qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]     .qnaInputV2Container.qnaInputV2Container .utteranceContent{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-regular, 400);font-size:14px!important;pointer-events:none;max-width:300px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]     .qnaInputContainer.qnaInputContainer #utteranceContent span, .qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]     .qnaInputV2Container.qnaInputContainer #utteranceContent span, .qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]     .qnaInputContainer.qnaInputV2Container .utteranceContent span, .qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]     .qnaInputV2Container.qnaInputV2Container .utteranceContent span{font-size:14px!important;pointer-events:none}.qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]     .qnaInputContainer.qnaInputContainer #utteranceContent, .qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]     .qnaInputV2Container.qnaInputContainer #utteranceContent{padding:4px 0}.qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]     .qnaInputContainer.qnaInputV2Container .utteranceContent, .qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]     .qnaInputV2Container.qnaInputV2Container .utteranceContent{padding:0}.qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]{margin-top:16px;height:calc(100% - 64px);width:100%;overflow:hidden}.qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .emptyState[_ngcontent-%COMP%]{width:100%;height:100%;display:flex;flex-direction:column;align-items:center;padding-top:100px}.qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .emptyState[_ngcontent-%COMP%]   .emptyStateTitle[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--lg-font-size, 16px);font-weight:var(--font-weight-semi-bold, 600);margin:8px 0 0}.qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .emptyState[_ngcontent-%COMP%]   .emptyStateDescription[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-regular, 400);margin:8px 0 0}.qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]{width:100%}.qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table.tableHeader[_ngcontent-%COMP%]{width:calc(100% - 8px)}html:not([dir="rtl"])[_nghost-%COMP%]   .qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   th.questions[_ngcontent-%COMP%]   span[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   th.questions[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{margin-left:10px}html[dir="rtl"][_nghost-%COMP%]   .qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   th.questions[_ngcontent-%COMP%]   span[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   th.questions[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{margin-right:10px}.qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{padding:4px;border-bottom:solid 1px var(--fluent-theme-neutral-light-color, #EDEBE9);height:32px;line-height:32px;max-height:32px;text-align:center;width:15%}.qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]:first-child, .qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]:first-child{text-align:left;width:30%}.qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-semi-bold, 600)}.qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-regular, 400)}.qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   tr.feedbackDetails[_ngcontent-%COMP%]{background-color:var(--fluent-theme-neutral-lighter-color, #F3F2F1)}html:not([dir="rtl"])[_nghost-%COMP%]   .qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   tr.feedbackDetails[_ngcontent-%COMP%]   .feedbackSummary[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   tr.feedbackDetails[_ngcontent-%COMP%]   .feedbackSummary[_ngcontent-%COMP%]{margin:20px 0 20px 20px}html[dir="rtl"][_nghost-%COMP%]   .qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   tr.feedbackDetails[_ngcontent-%COMP%]   .feedbackSummary[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   tr.feedbackDetails[_ngcontent-%COMP%]   .feedbackSummary[_ngcontent-%COMP%]{margin:20px 20px 20px 0}.qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   tr.feedbackDetails[_ngcontent-%COMP%]   .feedbackSummary[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--lg-font-size, 16px);font-weight:var(--font-weight-semi-bold, 600)}.qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   tr.feedbackDetails[_ngcontent-%COMP%]   .feedbackSummary[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-semi-bold, 600);line-height:25px}html:not([dir="rtl"])[_nghost-%COMP%]   .qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   tr.feedbackDetails[_ngcontent-%COMP%]   .feedbackSummary[_ngcontent-%COMP%]   span.leftCount[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   tr.feedbackDetails[_ngcontent-%COMP%]   .feedbackSummary[_ngcontent-%COMP%]   span.leftCount[_ngcontent-%COMP%]{margin-right:5px}html[dir="rtl"][_nghost-%COMP%]   .qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   tr.feedbackDetails[_ngcontent-%COMP%]   .feedbackSummary[_ngcontent-%COMP%]   span.leftCount[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   tr.feedbackDetails[_ngcontent-%COMP%]   .feedbackSummary[_ngcontent-%COMP%]   span.leftCount[_ngcontent-%COMP%]{margin-left:5px}html:not([dir="rtl"])[_nghost-%COMP%]   .qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   tr.feedbackDetails[_ngcontent-%COMP%]   .feedbackSummary[_ngcontent-%COMP%]   span.rightCount[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   tr.feedbackDetails[_ngcontent-%COMP%]   .feedbackSummary[_ngcontent-%COMP%]   span.rightCount[_ngcontent-%COMP%]{margin-left:5px}html[dir="rtl"][_nghost-%COMP%]   .qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   tr.feedbackDetails[_ngcontent-%COMP%]   .feedbackSummary[_ngcontent-%COMP%]   span.rightCount[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   tr.feedbackDetails[_ngcontent-%COMP%]   .feedbackSummary[_ngcontent-%COMP%]   span.rightCount[_ngcontent-%COMP%]{margin-right:5px}.qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   tr.feedbackDetails[_ngcontent-%COMP%]   .feedbackSummary[_ngcontent-%COMP%]   .option[_ngcontent-%COMP%], .qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   tr.feedbackDetails[_ngcontent-%COMP%]   .feedbackSummary[_ngcontent-%COMP%]   .comment[_ngcontent-%COMP%]{line-height:20px;max-width:300px;word-wrap:break-word}.qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   tr.feedbackDetails[_ngcontent-%COMP%]   .feedbackSummary[_ngcontent-%COMP%]   .positiveAndNegative[_ngcontent-%COMP%]{display:flex}.qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   tr.feedbackDetails[_ngcontent-%COMP%]   .feedbackSummary[_ngcontent-%COMP%]   .positiveAndNegative[_ngcontent-%COMP%]   .detail[_ngcontent-%COMP%]{flex:1}html:not([dir="rtl"])[_nghost-%COMP%]   .qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]   i.pbi-glyph-chevrondownsmall[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]   i.pbi-glyph-chevrondownsmall[_ngcontent-%COMP%], html:not([dir="rtl"])[_nghost-%COMP%]   .qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]   i.pbi-glyph-chevronupsmall[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]   i.pbi-glyph-chevronupsmall[_ngcontent-%COMP%]{margin-left:8px}html[dir="rtl"][_nghost-%COMP%]   .qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]   i.pbi-glyph-chevrondownsmall[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]   i.pbi-glyph-chevrondownsmall[_ngcontent-%COMP%], html[dir="rtl"][_nghost-%COMP%]   .qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]   i.pbi-glyph-chevronupsmall[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]   i.pbi-glyph-chevronupsmall[_ngcontent-%COMP%]{margin-right:8px}.qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:hover{background-color:var(--fluent-theme-neutral-lighter-color, #F3F2F1)}.qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:hover     .qnaInputContainer, .qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:hover   .qnaInputContainer[_ngcontent-%COMP%]   span[_ngcontent-%COMP%], .qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:hover     .qnaInputV2Container, .qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .utteranceList[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:hover   .qnaInputV2Container[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{background-color:var(--fluent-theme-neutral-lighter-color, #F3F2F1)!important}.qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .datasetSelector[_ngcontent-%COMP%]{height:100%}.qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .datasetSelector[_ngcontent-%COMP%]   .datasetSelectorViewErrorState[_ngcontent-%COMP%]{height:100%;display:flex;flex-direction:column}.qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .datasetSelector[_ngcontent-%COMP%]   .datasetSelectorViewErrorState[_ngcontent-%COMP%]   .title[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--lg-font-size, 16px);font-weight:var(--font-weight-semi-bold, 600);display:block}.qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .datasetSelector[_ngcontent-%COMP%]   .datasetSelectorViewErrorState[_ngcontent-%COMP%]   .errorSection[_ngcontent-%COMP%]{margin:auto}.qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .datasetSelector[_ngcontent-%COMP%]   .datasetSelectorViewErrorState[_ngcontent-%COMP%]   .buttonRow[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-semi-bold, 600);display:block;margin-bottom:12px;margin-left:auto}.qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .datasetSelector[_ngcontent-%COMP%]   .datasetSelectorViewErrorState[_ngcontent-%COMP%]   .buttonRow[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{padding:4px 20px;border:none;line-height:20px}.qnaFeedbackLoop[_ngcontent-%COMP%]   .qnaFeedbackLoopContent[_ngcontent-%COMP%]   .signIn[_ngcontent-%COMP%]{padding-top:100px;display:flex;align-items:center;flex-direction:column}.qnaFeedbackLoop[_ngcontent-%COMP%]     div.datasetSelector mat-table{height:430px}.qnaFeedbackLoop[_ngcontent-%COMP%]     div.datasetSelector mat-cell.mat-column-name, .qnaFeedbackLoop[_ngcontent-%COMP%]     div.datasetSelector mat-header-cell.mat-column-name{flex-grow:2}  .mat-menu-content{padding:0!important;overflow:hidden}  .mat-menu-content .mat-menu-item{box-sizing:content-box;height:24px;line-height:24px;padding:4px 12px}  .mat-menu-content .mat-menu-item[disabled]{color:var(--fluent-theme-black-color, #000)}' ]
            }), QnaFeedbackLoopComponent;
        }(), QnaFeedbackLoopState = function() {
            function QnaFeedbackLoopState(localizationService, remoteArtifactsService, qnaService, accountService, errorService, telemetryService) {
                var _this = this;
                this.localizationService = localizationService, this.remoteArtifactsService = remoteArtifactsService, 
                this.qnaService = qnaService, this.accountService = accountService, this.errorService = errorService, 
                this.telemetryService = telemetryService, this.utterances$ = new BehaviorSubject.X(null), 
                this._error$ = new BehaviorSubject.X(null), this._isLoading$ = new BehaviorSubject.X(!0), 
                this._datasets$ = new BehaviorSubject.X(null), this._selectedDataset$ = new BehaviorSubject.X(null), 
                this._isChangingDataset = !1, this._filterValue$ = new BehaviorSubject.X("all"), 
                this._view$ = new BehaviorSubject.X(null), this._inputViewModels$ = new BehaviorSubject.X([]), 
                this._interpretations$ = new BehaviorSubject.X([]), this.filterResourceId$ = this._filterValue$.pipe((0, 
                map.U)(function(f) {
                    return "fixRequested" === f ? "FixRequested" : "All";
                })), this._interpretedUtterances$ = (0, combineLatest.aj)(this.utterances$, this._inputViewModels$, this._interpretations$, function(utterances, inputViewModels, interpretations) {
                    return (utterances || []).forEach(function(utterance, i) {
                        utterance.inputViewModel = inputViewModels[i], utterance.interpretation = interpretations[i];
                    }), utterances;
                }), this.filteredInterpretedUtterances$ = (0, combineLatest.aj)(this._interpretedUtterances$, this._filterValue$, function(utterances, filterValue) {
                    return (utterances || []).filter(function(u) {
                        return "fixRequested" !== filterValue || u.flagged;
                    });
                }), this._error$.subscribe(function(error) {
                    return (0, tslib_es6.__awaiter)(_this, void 0, void 0, function() {
                        return (0, tslib_es6.__generator)(this, function(_a) {
                            switch (_a.label) {
                              case 0:
                                return error ? error.isUnexpected ? [ 4, this.errorService.error(this.localizationService.get(error.descriptionKey), "QnaReviewQuestionsError", {
                                    title: this.localizationService.get(error.titleKey),
                                    hideGetHelpLink: !1,
                                    displayLearnMoreHelpLink: !0,
                                    level: traceType.U.UnexpectedError,
                                    source: "PowerBI"
                                }) ] : [ 3, 2 ] : [ 2 ];

                              case 1:
                                return _a.sent(), [ 3, 3 ];

                              case 2:
                                this.telemetryService.logEvent(QnAToolingReviewQuestionsUserError, {
                                    hostErrorCode: error.hostError && error.hostError.errorCode
                                }), _a.label = 3;

                              case 3:
                                return [ 4, this.update() ];

                              case 4:
                                return _a.sent(), [ 2 ];
                            }
                        });
                    });
                });
            }
            return Object.defineProperty(QnaFeedbackLoopState.prototype, "error$", {
                get: function() {
                    return this._error$.pipe((0, filter.h)(function(error) {
                        return !error || !error.isUnexpected;
                    }));
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(QnaFeedbackLoopState.prototype, "isLoading$", {
                get: function() {
                    return this._isLoading$;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(QnaFeedbackLoopState.prototype, "view$", {
                get: function() {
                    return this._view$;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(QnaFeedbackLoopState.prototype, "datasets$", {
                get: function() {
                    return this._datasets$;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(QnaFeedbackLoopState.prototype, "selectedDataset$", {
                get: function() {
                    return this._selectedDataset$;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(QnaFeedbackLoopState.prototype, "inputViewModels", {
                get: function() {
                    return this._inputViewModels$.getValue();
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(QnaFeedbackLoopState.prototype, "interpretations", {
                get: function() {
                    return this._interpretations$.getValue();
                },
                enumerable: !1,
                configurable: !0
            }), QnaFeedbackLoopState.prototype.init = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var _this = this;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return this._isLoading$.subscribe(function(isLoading) {
                                isLoading || _this.update();
                            }), [ 4, this.update() ];

                          case 1:
                            return _a.sent(), this._isLoading$.next(!1), [ 2 ];
                        }
                    });
                });
            }, QnaFeedbackLoopState.prototype.mutate = function(mutation, args) {
                var _a;
                return void 0 === args && (args = {}), (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var inputViewModels, interpretations, hostException_1, hostError;
                    return (0, tslib_es6.__generator)(this, function(_c) {
                        switch (_c.label) {
                          case 0:
                            this._isLoading$.next(!0), this._error$.next(null), _c.label = 1;

                          case 1:
                            switch (_c.trys.push([ 1, 24, 25, 26 ]), mutation) {
                              case 1:
                                return [ 3, 2 ];

                              case 0:
                                return [ 3, 5 ];

                              case 2:
                                return [ 3, 9 ];

                              case 3:
                                return [ 3, 10 ];

                              case 4:
                                return [ 3, 15 ];

                              case 5:
                                return [ 3, 16 ];

                              case 6:
                                return [ 3, 18 ];

                              case 7:
                                return [ 3, 19 ];

                              case 8:
                                return [ 3, 20 ];

                              case 9:
                                return [ 3, 21 ];
                            }
                            return [ 3, 23 ];

                          case 2:
                            return this._selectedDatasetId ? [ 4, this.updateUtterances() ] : [ 3, 4 ];

                          case 3:
                            _c.sent(), _c.label = 4;

                          case 4:
                            return [ 3, 23 ];

                          case 5:
                            return this._selectedDatasetId ? [ 4, this.downloadUtteranceFeed(this._selectedDatasetId) ] : [ 3, 8 ];

                          case 6:
                            return _c.sent(), [ 4, this.updateUtterances() ];

                          case 7:
                            _c.sent(), _c.label = 8;

                          case 8:
                            return [ 3, 23 ];

                          case 9:
                            return this._isChangingDataset = !0, [ 3, 23 ];

                          case 10:
                            return this._isChangingDataset = !1, args.newDataset ? (debug.fF.assertValue(args.newDataset.dbName, "new selected dataset database name"), 
                            [ 4, this.downloadUtteranceFeed(args.newDataset.dbName) ]) : [ 3, 14 ];

                          case 11:
                            return _c.sent(), [ 4, this.remoteArtifactsService.addOrUpdateRemoteArtifactAsync(args.newDataset.dbName) ];

                          case 12:
                            return _c.sent(), this._selectedDatasetId = args.newDataset.dbName, [ 4, this.updateUtterances() ];

                          case 13:
                            _c.sent(), _c.label = 14;

                          case 14:
                            return [ 3, 23 ];

                          case 15:
                            return this._filterValue$.next(args.newFilter), [ 3, 23 ];

                          case 16:
                            return [ 4, this.updateDatasets() ];

                          case 17:
                            return _c.sent(), [ 3, 23 ];

                          case 18:
                            return debug.fF.assertValue(args.newInputViewModel, "UpdateInputViewModel args"), 
                            (inputViewModels = this._inputViewModels$.getValue())[args.newInputViewModel.index] = args.newInputViewModel.inputViewModel, 
                            this._inputViewModels$.next(inputViewModels), [ 3, 23 ];

                          case 19:
                            return debug.fF.assertValue(args.newInterpret, "UpdateInterpret args"), (interpretations = this._interpretations$.getValue())[args.newInterpret.index] = args.newInterpret.interpretation, 
                            this._interpretations$.next(interpretations), [ 3, 23 ];

                          case 20:
                            return this._inputViewModels$.next([]), this._interpretations$.next([]), [ 3, 23 ];

                          case 21:
                            return [ 4, this.accountService.trySignInAsync("SignInForQnaToolingDialog") ];

                          case 22:
                            return _c.sent(), [ 3, 23 ];

                          case 23:
                            return [ 3, 26 ];

                          case 24:
                            return hostException_1 = _c.sent(), hostError = null !== (_a = null == hostException_1 ? void 0 : hostException_1.hostError) && void 0 !== _a ? _a : hostException_1, 
                            this._error$.next(getErrorDetails(hostError)), [ 3, 26 ];

                          case 25:
                            return this._isLoading$.next(!1), [ 7 ];

                          case 26:
                            return [ 2 ];
                        }
                    });
                });
            }, QnaFeedbackLoopState.prototype.getFeedbackSummary = function(feedbacks) {
                var rating = "QnaTooling_FeedbackLoop_ResultRating_NotAvailable";
                if (0 === _.size(feedbacks)) return {
                    collapsed: !0,
                    rating,
                    positiveDetail: void 0,
                    negativeDetail: void 0
                };
                var positiveDetail = this.groupFeedback(feedbacks, 1), negativeDetail = this.groupFeedback(feedbacks, -1);
                return positiveDetail.count > 0 && negativeDetail.count > 0 ? rating = "Mixed" : positiveDetail.count > 0 ? rating = "QnaTooling_FeedbackLoop_ResultRating_Positive" : negativeDetail.count > 0 && (rating = "QnaTooling_FeedbackLoop_ResultRating_Negative"), 
                {
                    collapsed: !0,
                    rating,
                    positiveDetail,
                    negativeDetail
                };
            }, QnaFeedbackLoopState.prototype.groupFeedback = function(feedbacks, sentiment) {
                for (var choices = new Map, comments = [], countOfAll = 0, countOfContent = 0, _i = 0, feedbacks_1 = feedbacks; _i < feedbacks_1.length; _i++) {
                    var feedback = feedbacks_1[_i];
                    feedback.Sentiment === sentiment && (countOfAll++, (_.size(feedback.Reason) > 0 || _.size(feedback.Comment) > 0) && (countOfContent++, 
                    _.size(feedback.Reason) > 0 && choices.set(feedback.Reason, (choices.get(feedback.Reason) || 0) + 1), 
                    _.size(feedback.Comment) > 0 && comments.push(feedback.Comment)));
                }
                return {
                    title: 1 === sentiment ? "QnaTooling_FeedbackLoop_FeedbackDetail_PositiveReplies" : "QnaTooling_FeedbackLoop_FeedbackDetail_NegativeReplies",
                    count: countOfAll !== countOfContent ? countOfAll - countOfContent : countOfAll,
                    choices,
                    comments
                };
            }, QnaFeedbackLoopState.prototype.update = function() {
                var _a;
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var remoteArtifact, hostException_2, hostError;
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return _b.trys.push([ 0, 11, , 12 ]), [ 4, this.accountService.isSignedInAsync() ];

                          case 1:
                            return _b.sent() ? [ 3, 3 ] : [ 4, this.switchView("signIn") ];

                          case 2:
                            return _b.sent(), [ 3, 10 ];

                          case 3:
                            return this._isChangingDataset && null == this._error$.value ? [ 4, this.switchView("datasetSelector") ] : [ 3, 5 ];

                          case 4:
                            return _b.sent(), [ 3, 10 ];

                          case 5:
                            return this._selectedDatasetId ? [ 3, 8 ] : [ 4, this.remoteArtifactsService.getRemoteArtifactAsync() ];

                          case 6:
                            return remoteArtifact = _b.sent(), this._selectedDatasetId = remoteArtifact ? remoteArtifact.DatasetId : void 0, 
                            [ 4, this.switchView(this._selectedDatasetId ? "utteranceList" : "datasetSelector") ];

                          case 7:
                            return _b.sent(), [ 3, 10 ];

                          case 8:
                            return [ 4, this.switchView("utteranceList") ];

                          case 9:
                            _b.sent(), _b.label = 10;

                          case 10:
                            return [ 3, 12 ];

                          case 11:
                            return hostException_2 = _b.sent(), hostError = null !== (_a = null == hostException_2 ? void 0 : hostException_2.hostError) && void 0 !== _a ? _a : hostException_2, 
                            this._error$.next(getErrorDetails(hostError)), [ 3, 12 ];

                          case 12:
                            return [ 2 ];
                        }
                    });
                });
            }, QnaFeedbackLoopState.prototype.switchView = function(view) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            if (this._view$.getValue() === view) return [ 2 ];
                            switch (view) {
                              case "utteranceList":
                                return [ 3, 1 ];

                              case "datasetSelector":
                                return [ 3, 6 ];

                              case "signIn":
                                return [ 3, 9 ];
                            }
                            return [ 3, 10 ];

                          case 1:
                            return null != this.utterances$.getValue() ? [ 3, 3 ] : [ 4, this.mutate(1) ];

                          case 2:
                            _b.sent(), _b.label = 3;

                          case 3:
                            return this._selectedDataset$.getValue() ? [ 3, 5 ] : [ 4, this.mutate(0) ];

                          case 4:
                            _b.sent(), _b.label = 5;

                          case 5:
                            return [ 3, 11 ];

                          case 6:
                            return null != this._datasets$.getValue() ? [ 3, 8 ] : [ 4, this.mutate(5) ];

                          case 7:
                            _b.sent(), _b.label = 8;

                          case 8:
                          case 9:
                            return [ 3, 11 ];

                          case 10:
                            debug.fF.assertFail("unknown view: " + view), _b.label = 11;

                          case 11:
                            return this._view$.next(view), [ 2 ];
                        }
                    });
                });
            }, QnaFeedbackLoopState.prototype.updateUtterances = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var utteranceHistory, lastRefreshString, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.getUtteranceHistory() ];

                          case 1:
                            return utteranceHistory = _a.sent(), this._inputViewModels$.next([]), this._interpretations$.next([]), 
                            utteranceHistory ? (this.utterances$.next(utteranceHistory.Utterances.map(function(u) {
                                var lastHit = _.size(u.Hits) > 0 ? _.chain(u.Hits).orderBy(function(h) {
                                    return h.Timestamp;
                                }, "desc").first().value() : void 0, dateAsked = lastHit && lastHit.Timestamp ? (0, 
                                dateFormatter.s7)(lastHit.Timestamp, _this.localizationService, !0) : void 0, feedbackSummary = _this.getFeedbackSummary(u.Feedbacks);
                                return {
                                    text: u.Text,
                                    guid: Utility.b$.generateGuid(),
                                    dateAsked,
                                    flagged: _.some(u.Hits, function(h) {
                                        return _.indexOf(h.Tags, "AskToAdd") >= 0;
                                    }),
                                    frequency: _.size(u.Hits),
                                    feedbackSummary
                                };
                            })), lastRefreshString = "", utteranceHistory.Timestamp && (lastRefreshString = (0, 
                            dateFormatter.Wh)(utteranceHistory.Timestamp, this.localizationService, "QnaTooling_FeedbackLoop_LastRefresh")), 
                            this._selectedDataset$.next({
                                name: utteranceHistory.DatasetName,
                                workspace: utteranceHistory.WorkspaceName,
                                lastRefresh: lastRefreshString
                            })) : this.utterances$.next([]), [ 2 ];
                        }
                    });
                });
            }, QnaFeedbackLoopState.prototype.getUtteranceHistory = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var history;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return debug.fF.assertValue(this._selectedDatasetId, "selected dataset"), [ 4, this.qnaService.getUtteranceHistory(this._selectedDatasetId) ];

                          case 1:
                            return history = _a.sent(), [ 2, Promise.resolve(history) ];
                        }
                    });
                });
            }, QnaFeedbackLoopState.prototype.downloadUtteranceFeed = function(datasetId) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return debug.fF.assertValue(datasetId, "downloadUtteranceFeed datasetId"), [ 4, this.qnaService.downloadUtteranceFeed(datasetId) ];

                          case 1:
                            return _a.sent(), [ 2 ];
                        }
                    });
                });
            }, QnaFeedbackLoopState.prototype.updateDatasets = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var datasets;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.remoteArtifactsService.getDatasets() ];

                          case 1:
                            return datasets = _a.sent(), this._datasets$.next(_.map(datasets, function(d) {
                                return function(dataset) {
                                    var _a, jsonTime, dateTime, user, stage = dataset.galleryItem ? dataset.galleryItem.stage : index_core.X_.Off, lastRefreshedEpochTime = (dateTime = (jsonTime = dataset.model.lastRefreshTime) ? (0, 
                                    JsCommon_Date.TX)(jsonTime) : null) ? dateTime.getTime() : -1;
                                    return {
                                        id: dataset.modelId,
                                        displayName: dataset.model.displayName,
                                        stage,
                                        endorsementImageUrl: getEndorsementImageUrl(stage),
                                        ownerFullName: (user = dataset.model.creatorUser, user ? (0, userInfoHelper.P)(user.givenName, user.familyName, user.emailAddress) : ""),
                                        workspaceName: dataset.workspaceName || "",
                                        workspaceId: dataset.workspaceId,
                                        lastRefreshEpochTimeValue: lastRefreshedEpochTime,
                                        lastRefreshedTime: getLastRefreshedDateTime(lastRefreshedEpochTime),
                                        dbName: dataset.model.dbName,
                                        vsName: dataset.model.vsName,
                                        originalSharedDataset: dataset,
                                        ownerOid: null === (_a = dataset.model.creatorUser) || void 0 === _a ? void 0 : _a.oid
                                    };
                                }(d);
                            })), [ 2 ];
                        }
                    });
                });
            }, QnaFeedbackLoopState;
        }();
        function getErrorDetails(hostError) {
            debug.fF.assertValue(hostError, "hostError");
            var titleKey = "", descriptionKey = "", isUnexpected = !1;
            switch (hostError.errorCode) {
              case "FeatureNotAvailableError":
                titleKey = "QnaTooling_FeedbackLoop_Error_FeatureNotAvailable_Title", descriptionKey = "QnaTooling_FeedbackLoop_Error_FeatureNotAvailable_Description";
                break;

              case "UnauthorizedForRlsModel":
                titleKey = "QnaTooling_FeedbackLoop_Error_FeatureNotAvailable_Title", descriptionKey = "QnaTooling_FeedbackLoop_Error_RlsNotAuhtorized_Description";
                break;

              case "PowerBIEntityNotFound":
                titleKey = "QnaTooling_FeedbackLoop_Error_EntityNotFound_Title", descriptionKey = "QnaTooling_FeedbackLoop_Error_EntityNotFound_Description";
                break;

              case "PowerBINotAuthorizedException":
                titleKey = "QnaTooling_FeedbackLoop_Error_NotAuhtorized_Title", descriptionKey = "QnaTooling_FeedbackLoop_Error_NotAuhtorized_Description";
                break;

              case "UnsupportedUtteranceFeedVersion":
                titleKey = "QnaTooling_FeedbackLoop_Error_UnsupportedUtteranceFeedVersion_Title", 
                descriptionKey = "QnaTooling_FeedbackLoop_Error_UnsupportedUtteranceFeedVersion_Description";
                break;

              default:
                titleKey = "ErrorMessage_DefaultTitle", isUnexpected = !0;
            }
            return {
                hostError,
                isUnexpected,
                titleKey,
                descriptionKey
            };
        }
        var scheduler_async = __webpack_require__(96721), throttleTime = __webpack_require__(69903), field_list_fieldListViewModelFactory = __webpack_require__(32518), rx_component = __webpack_require__(73221), TermVariantFlags = function(TermVariantFlags) {
            return TermVariantFlags[TermVariantFlags.None = 0] = "None", TermVariantFlags[TermVariantFlags.Plural = 1] = "Plural", 
            TermVariantFlags[TermVariantFlags.SentenceCase = 2] = "SentenceCase", TermVariantFlags[TermVariantFlags.PluralSentenceCase = 3] = "PluralSentenceCase", 
            TermVariantFlags;
        }({}), textMeasurementService = __webpack_require__(32041), string_utils = __webpack_require__(61613), copilotSource = {
            Type: "External",
            Agent: "PowerBI.AzureOpenAIPhrasings"
        };
        function getQnaPhrasingType(phrasingModel) {
            debug.fF.assertValue(phrasingModel, "phrasingModel must not be null");
            var phrasingKind = phrasingModel.kind;
            switch (phrasingKind) {
              case 1:
                return null != phrasingModel.measurement ? "AdjectiveWithMeasurement" : "Adjective";

              case 2:
                return "Noun";

              case 3:
                return "AdjectiveFromData";

              case 4:
                return "NounFromData";

              case 5:
                return "Verb";

              case 6:
                return "Preposition";

              case 7:
                return "Attribute";

              case 8:
                return "Name";

              default:
                debug.fF.assertNever(phrasingKind);
            }
        }
        function tryGetCompatibleValue(targetSegment, basedOnValues) {
            var sameSegIdValue = basedOnValues.get(targetSegment.id);
            if (sameSegIdValue) return sameSegIdValue;
            if ("Terms" !== targetSegment.type) {
                var comptibleRoleEntityIds = [ "object", "dynamicAdjectives", "dynamicNouns", "name" ];
                if (_.includes(comptibleRoleEntityIds, targetSegment.id)) for (var _i = 0, comptibleRoleEntityIds_1 = comptibleRoleEntityIds; _i < comptibleRoleEntityIds_1.length; _i++) {
                    var basedOnValue = basedOnValues.get(comptibleRoleEntityIds_1[_i]);
                    if (basedOnValue) return basedOnValue;
                }
            }
        }
        function lsdlConditionAggregateToQueryAggregateFunc(conditionAggr) {
            switch (debug.fF.assert(function() {
                return null != conditionAggr;
            }, "Expect the given conditionAggr to be defined"), conditionAggr) {
              case "None":
                return;

              case "Sum":
                return 0;

              case "Average":
                return 1;

              case "Count":
                return 2;

              case "Min":
                return 3;

              case "Max":
                return 4;

              case "Median":
                return 6;

              case "Variance":
                return 8;

              case "StandardDeviation":
                return 7;

              default:
                debug.fF.assertNever(conditionAggr);
            }
        }
        function createItemsGroupStateInfo(allStatesInfo, latestUpdatedComponentIndex, isFromGroupInstancesUpdate) {
            return {
                itemsState: allStatesInfo,
                source: isFromGroupInstancesUpdate || _.isEmpty(allStatesInfo) ? {
                    type: "groupInstancesUpdate"
                } : {
                    type: "singleInstanceUpdate",
                    instanceIndex: latestUpdatedComponentIndex
                }
            };
        }
        function generatePhrasingLabels(lsdlDocument, qnaService) {
            return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                var requestJson;
                return (0, tslib_es6.__generator)(this, function(_a) {
                    switch (_a.label) {
                      case 0:
                        return requestJson = JSON.stringify({
                            LsdlExtension: lsdlDocument
                        }), [ 4, qnaService.generatePhrasingLabels(requestJson) ];

                      case 1:
                        return [ 2, _a.sent() ];
                    }
                });
            });
        }
        function isRoleValue(value) {
            return value.hasOwnProperty("entity");
        }
        function getNewUniquePhrasingId(basedValue, exclusiveValues) {
            debug.fF.assert(function() {
                return !_.isEmpty(basedValue);
            }, "basedValue must not be empty");
            var existingNames = new Set(exclusiveValues), compliantRelationshipName = (0, string_utils.I)(basedValue.toLowerCase(), "phrasing");
            return (0, Utility.zE)(existingNames, compliantRelationshipName);
        }
        function getModelNewPhrasingIdBaseExclusiveNames(referenceModel) {
            debug.fF.assertValue(referenceModel, "referenceModel must be defined");
            var allNames = _.map(referenceModel.getEntities(), function(e) {
                return e.lsdlName;
            });
            return _.forEach(referenceModel.getRelationships(), function(r) {
                allNames.push(r.lsdlName), _.forEach(r.phrasings, function(p) {
                    _.isEmpty(p.ID) || allNames.push(p.ID);
                });
            }), allNames;
        }
        function getStringFromPhrasingKind(phrasingKind, localizationService) {
            switch (phrasingKind) {
              case 1:
                return localizationService.get("Qna_Phrasing_TermType_Adjective");

              case 2:
                return localizationService.get("Qna_Phrasing_TermType_Noun");

              case 3:
                return localizationService.get("Qna_Phrasing_TermType_DynamicAdjective");

              case 4:
                return localizationService.get("Qna_Phrasing_TermType_DynamicNoun");

              case 5:
                return localizationService.get("Qna_Phrasing_TermType_Verb");

              case 6:
                return localizationService.get("Qna_Phrasing_TermType_Preposition");

              case 7:
                return localizationService.get("Qna_Phrasing_TermType_Attribute");

              case 8:
                return localizationService.get("Qna_Phrasing_TermType_Name");

              default:
                debug.fF.assertNever(phrasingKind);
            }
        }
        var context_activity_service = __webpack_require__(22292), QnaManagePhrasingsTelemetryService = function() {
            function QnaManagePhrasingsTelemetryService(certifiedEventsService, contextActivityService, telemetryService) {
                this.certifiedEventsService = certifiedEventsService, this.contextActivityService = contextActivityService, 
                this.telemetryService = telemetryService, this.featureName = "ManagePhrasings";
            }
            return QnaManagePhrasingsTelemetryService.prototype.logEnterPageEvent = function(enterPageEvent) {
                debug.fF.assertValue(enterPageEvent, "enterPageEvent should be defined"), this.enterPageEvent = enterPageEvent, 
                this.logCertifiedEvent("PBI.QnATooling.OpenManagePhrasings", {}, "Succeeded"), this.enterPageActivity = this.contextActivityService.createActivity({
                    name: "Enter manage phrasings"
                });
            }, QnaManagePhrasingsTelemetryService.prototype.logExitPageEvent = function() {
                var _a, _b, _c, _this = this;
                debug.fF.assert(function() {
                    var _a;
                    return null === (_a = _this.enterPageActivity) || void 0 === _a ? void 0 : _a.isRunning();
                }, "this.enterPageActivity should be running now"), (null === (_a = this.enterPageActivity) || void 0 === _a ? void 0 : _a.isRunning()) ? ((null === (_b = this.startCreateNewActivity) || void 0 === _b ? void 0 : _b.isRunning()) && (this.startCreateNewActivity.resolve(), 
                this.startCreateNewActivity = void 0), (null === (_c = this.startEditExistingActivity) || void 0 === _c ? void 0 : _c.isRunning()) && (this.startEditExistingActivity.resolve(), 
                this.startEditExistingActivity = null), this.enterPageActivity.resolve(), this.enterPageActivity = void 0, 
                this.enterPageEvent = void 0) : debug.fF.assertFail("this.enterPageActivity should be running now");
            }, QnaManagePhrasingsTelemetryService.prototype.logStartCreateNewPhrasingEvent = function() {
                var _this = this;
                debug.fF.assert(function() {
                    var _a;
                    return !(null === (_a = _this.startCreateNewActivity) || void 0 === _a ? void 0 : _a.isRunning());
                }, "there should not be a running startCreateNewActivity"), debug.fF.assert(function() {
                    var _a;
                    return !(null === (_a = _this.startEditExistingActivity) || void 0 === _a ? void 0 : _a.isRunning());
                }, "there should not be a running startEditExistingActivity"), debug.fF.assert(function() {
                    var _a;
                    return null === (_a = _this.enterPageActivity) || void 0 === _a ? void 0 : _a.isRunning();
                }, "there should be a running enterPageActivity"), debug.fF.assertValue(this.enterPageEvent, "enterPageEvent should exist");
                var eventArgs = {};
                this.telemetryService.logChildEvent(this.enterPageEvent, QnAToolingPhrasingsStartCreateNew, (0, 
                tslib_es6.__assign)({}, eventArgs)), this.logCertifiedEvent("PBI.QnATooling.Phrasings.StartCreateNew", (0, 
                tslib_es6.__assign)({}, eventArgs), "Succeeded"), this.startCreateNewActivity = this.enterPageActivity.createChildActivity((0, 
                tslib_es6.__assign)({
                    name: "Start to create a new phrasing"
                }, eventArgs));
            }, QnaManagePhrasingsTelemetryService.prototype.logStartEditExistingPhrasingEvent = function() {
                var _this = this;
                debug.fF.assert(function() {
                    var _a;
                    return !(null === (_a = _this.startCreateNewActivity) || void 0 === _a ? void 0 : _a.isRunning());
                }, "there should not be a running startCreateNewActivity"), debug.fF.assert(function() {
                    var _a;
                    return !(null === (_a = _this.startEditExistingActivity) || void 0 === _a ? void 0 : _a.isRunning());
                }, "there should not be a running startEditExistingActivity"), debug.fF.assert(function() {
                    var _a;
                    return null === (_a = _this.enterPageActivity) || void 0 === _a ? void 0 : _a.isRunning();
                }, "there should be a running enterPageActivity"), debug.fF.assertValue(this.enterPageEvent, "enterPageEvent should exist");
                var eventArgs = {};
                this.telemetryService.logChildEvent(this.enterPageEvent, QnAToolingPhrasingsStartEditExisting, (0, 
                tslib_es6.__assign)({}, eventArgs)), this.logCertifiedEvent("PBI.QnATooling.Phrasings.StartEditExisting", (0, 
                tslib_es6.__assign)({}, eventArgs), "Succeeded"), this.startEditExistingActivity = this.enterPageActivity.createChildActivity((0, 
                tslib_es6.__assign)({
                    name: "Start to edit an existing phrasing"
                }, eventArgs));
            }, QnaManagePhrasingsTelemetryService.prototype.logApplyNewPhrasingEvent = function(eventArgs) {
                var _a, _b;
                debug.fF.assertValue(this.enterPageEvent, "parentEvent"), this.telemetryService.logChildEvent(this.enterPageEvent, QnAToolingPhrasingsApplyNewPhrasing, (0, 
                tslib_es6.__assign)({}, eventArgs)), this.logCertifiedEvent("PBI.QnATooling.Phrasings.ApplyNewPhrasing", (0, 
                tslib_es6.__assign)({}, eventArgs), "Succeeded"), this.startCreateNewActivity.createChildInstantActivity((0, 
                tslib_es6.__assign)({
                    name: "Commit creating a new phrasing"
                }, eventArgs)).resolve(), (null === (_a = this.startCreateNewActivity) || void 0 === _a ? void 0 : _a.isRunning()) ? null === (_b = this.startCreateNewActivity) || void 0 === _b || _b.resolve() : debug.fF.assertFail("this.startCreateNewActivity should be running now");
            }, QnaManagePhrasingsTelemetryService.prototype.logApplyEditExistingPhrasingEvent = function() {
                var _a, _b;
                debug.fF.assertValue(this.enterPageEvent, "parentEvent");
                var eventArgs = {};
                this.telemetryService.logChildEvent(this.enterPageEvent, QnAToolingPhrasingsApplyEditExistingPhrasing, (0, 
                tslib_es6.__assign)({}, eventArgs)), this.logCertifiedEvent("PBI.QnATooling.Phrasings.ApplyEditExistingPhrasing", (0, 
                tslib_es6.__assign)({}, eventArgs), "Succeeded"), this.startEditExistingActivity.createChildInstantActivity((0, 
                tslib_es6.__assign)({
                    name: "Commit editing an existing phrasing"
                }, eventArgs)).resolve(), (null === (_a = this.startEditExistingActivity) || void 0 === _a ? void 0 : _a.isRunning()) ? null === (_b = this.startEditExistingActivity) || void 0 === _b || _b.resolve() : debug.fF.assertFail("this.startEditExistingActivity should be running now");
            }, QnaManagePhrasingsTelemetryService.prototype.logCancelCreateNewPhrasingEvent = function() {
                var _a, _b;
                (null === (_a = this.startCreateNewActivity) || void 0 === _a ? void 0 : _a.isRunning()) ? null === (_b = this.startCreateNewActivity) || void 0 === _b || _b.resolve() : debug.fF.assertFail("this.startCreateNewActivity should be running now");
            }, QnaManagePhrasingsTelemetryService.prototype.logCancelEditExistingPhrasingEvent = function() {
                var _a, _b;
                (null === (_a = this.startEditExistingActivity) || void 0 === _a ? void 0 : _a.isRunning()) ? null === (_b = this.startEditExistingActivity) || void 0 === _b || _b.resolve() : debug.fF.assertFail("this.startCreateNewActivity should be running now");
            }, QnaManagePhrasingsTelemetryService.prototype.logDeletePhrasingEvent = function(eventArgs) {
                debug.fF.assertValue(this.enterPageEvent, "enterPageEvent should exist"), this.telemetryService.logChildEvent(this.enterPageEvent, QnAToolingPhrasingsDeletePhrasing, (0, 
                tslib_es6.__assign)({}, eventArgs)), this.logCertifiedEvent("PBI.QnATooling.Phrasings.DeletePhrasing", (0, 
                tslib_es6.__assign)({}, eventArgs), "Succeeded"), this.enterPageActivity.createChildInstantActivity((0, 
                tslib_es6.__assign)({
                    name: "Delete a phrasing"
                }, eventArgs)).resolve();
            }, QnaManagePhrasingsTelemetryService.prototype.logPromotePhrasingEvent = function(eventArgs) {
                debug.fF.assertValue(this.enterPageEvent, "enterPageEvent should exist"), this.telemetryService.logChildEvent(this.enterPageEvent, QnAToolingPromoteSuggestedPhrasing, (0, 
                tslib_es6.__assign)({}, eventArgs)), this.logCertifiedEvent("PBI.QnATooling.Phrasings.PromoteSuggestedPhrasing", (0, 
                tslib_es6.__assign)({}, eventArgs), "Succeeded"), this.enterPageActivity.createChildInstantActivity((0, 
                tslib_es6.__assign)({
                    name: "Promote a suggested phrasing"
                }, eventArgs)).resolve();
            }, QnaManagePhrasingsTelemetryService.prototype.logCertifiedEvent = function(activityName, activityAttributes, activityStatus) {
                this.certifiedEventsService.logStandardizedFeatureEvent({
                    correlationId: this.telemetryService.root.id,
                    activityName,
                    activityAttributes,
                    resultCode: "",
                    featureName: this.featureName,
                    activityStatus
                });
            }, QnaManagePhrasingsTelemetryService.\u0275fac = function(t) {
                return new (t || QnaManagePhrasingsTelemetryService)(fesm2022_core["\u0275\u0275inject"](Telemetry.ly), fesm2022_core["\u0275\u0275inject"](context_activity_service.r), fesm2022_core["\u0275\u0275inject"](Telemetry.y0));
            }, QnaManagePhrasingsTelemetryService.\u0275prov = fesm2022_core["\u0275\u0275defineInjectable"]({
                token: QnaManagePhrasingsTelemetryService,
                factory: QnaManagePhrasingsTelemetryService.\u0275fac
            }), QnaManagePhrasingsTelemetryService;
        }(), merge = __webpack_require__(63057), skip = __webpack_require__(3307), lsdl_relationship_model = __webpack_require__(62251), tri_menu = __webpack_require__(98759), lsdl_phrasing_visitor = __webpack_require__(70136), AdjectiveTermNoSort = getTermSegment("adjective", "Qna_Phrasing_TermType_Adjective"), AntonymTermNoSort = getTermSegment("antonym", "", {
            value: !0,
            unhideTrigger: {
                type: "otherSegmentHasValue",
                triggerSegId: "adjective"
            }
        }), AdjectiveTermWithSort = getTermSegment("adjective", "Qna_Phrasing_TermType_Adjective", void 0, 1), AntonymTermWithSort = getTermSegment("antonym", "", {
            value: !0,
            unhideTrigger: {
                type: "otherSegmentHasValue",
                triggerSegId: "adjective"
            }
        }, 2), VerbTerm = getTermSegment("verb", "Qna_Phrasing_TermType_Verb"), NounTerm = getTermSegment("noun", "Qna_Phrasing_TermType_Noun"), PrepositionTerm = getTermSegment("preposition", "Qna_Phrasing_TermType_Preposition"), SubjectRole = getRoleSegment("subject", "Qna_Phrasing_RoleType_Subject"), SubjectRoleSingle = getRoleSegment("subject", "Qna_Phrasing_RoleType_Subject", TermVariantFlags.None), SubjectRoleSentencePlural = getRoleSegment("subject", "Qna_Phrasing_RoleType_Subject", TermVariantFlags.PluralSentenceCase), ObjectRole = getRoleSegment("object", "Qna_Phrasing_RoleType_Object"), DynamicAdjectivesRoleSentencePlural = getRoleSegment("dynamicAdjectives", "Qna_Phrasing_RoleType_DynamicAdjectives", TermVariantFlags.PluralSentenceCase), DynamicNounsRoleSentencePlural = getRoleSegment("dynamicNouns", "Qna_Phrasing_RoleType_DynamicNouns", TermVariantFlags.PluralSentenceCase), MeasurementRoleSentenceSingle = getRoleSegment("measurement", "Qna_Phrasing_RoleType_Measurement", TermVariantFlags.SentenceCase), NameRoleSentencePlural = getRoleSegment("name", "Name", TermVariantFlags.PluralSentenceCase), VerbIndirectObjectRole = getRoleSegment("indirectObject", "Qna_Phrasing_RoleType_IndirectObject", TermVariantFlags.Plural, {
            value: !0,
            unhideTrigger: {
                type: "userInsert"
            }
        }), suffixContextualLabelSegment = {
            type: "SimpleString",
            label: {
                type: "contextualPlaceholder",
                value: "suffix"
            }
        }, OptionalItemPreposition = getOptionalItem("Preposition", "Qna_Phrasing_OptionalItemLabel_PrepositionalPhrase", {
            segments: [ {
                type: "SimpleString",
                label: {
                    type: "contextualPlaceholder",
                    value: "prefix"
                }
            }, PrepositionTerm, ObjectRole ],
            uiCountLimit: 20
        }), OptionalItemSemanticSlotWhen = getOptionalItem("SemanticSlotWhen", "Qna_Phrasing_OptionalItemLabel_SemanticSlot_When", {
            segments: [ getRoleSegment("semanticSlotWhen", "DataType_Label_Time", TermVariantFlags.PluralSentenceCase), getSimpleStringContentSegment("indicate when"), suffixContextualLabelSegment ],
            countLimit: 1
        }), OptionalItemSemanticSlotWhere = getOptionalItem("SemanticSlotWhere", "Qna_Phrasing_OptionalItemLabel_SemanticSlot_Where", {
            segments: [ getRoleSegment("semanticSlotWhere", "Location", TermVariantFlags.PluralSentenceCase), getSimpleStringContentSegment("indicate where"), suffixContextualLabelSegment ],
            countLimit: 1
        }), OptionalItemSemanticSlotDuration = getOptionalItem("SemanticSlotDuration", "Qna_Phrasing_OptionalItemLabel_SemanticSlot_Duration", {
            segments: [ getRoleSegment("semanticSlotDuration", "Duration", TermVariantFlags.PluralSentenceCase), getSimpleStringContentSegment("indicate how long"), suffixContextualLabelSegment ],
            countLimit: 1
        }), OptionalItemSemanticSlotOccurrences = getOptionalItem("SemanticSlotOccurrences", "Qna_Phrasing_OptionalItemLabel_SemanticSlot_Occurrences", {
            segments: [ getRoleSegment("semanticSlotOccurrences", "Qna_Phrasing_RoleType_Occurrences", TermVariantFlags.PluralSentenceCase), getSimpleStringContentSegment("indicate how many times"), suffixContextualLabelSegment ],
            countLimit: 1
        }), OptionalItemCondition = getOptionalItem("Condition", "Condition", {
            countLimit: 1
        }), OptionalItemConditionPromoted = getOptionalItem("Condition", "Condition", {
            countLimit: 1,
            isPromoted: !0
        }), OptionalItemGroupSemanticSlots = [ OptionalItemSemanticSlotWhen, OptionalItemSemanticSlotWhere, OptionalItemSemanticSlotDuration, OptionalItemSemanticSlotOccurrences ], qnaPhrasingOptionalItemTypeValues = [ "Preposition", "SemanticSlotWhen", "SemanticSlotWhere", "SemanticSlotDuration", "SemanticSlotOccurrences", "Condition" ], QnaPhrasingTemplatesAll = [ {
            phrasingType: "Verb",
            mainItemSegments: [ SubjectRoleSentencePlural, VerbTerm, VerbIndirectObjectRole, ObjectRole ],
            optionalItems: (0, tslib_es6.__spreadArray)((0, tslib_es6.__spreadArray)([ OptionalItemPreposition ], OptionalItemGroupSemanticSlots, !0), [ OptionalItemCondition ], !1),
            validations: [ {
                requiredMainSegmentIds: [ SubjectRoleSentencePlural.id, VerbTerm.id ]
            }, {
                requiredMainSegmentIds: [ ObjectRole.id, VerbTerm.id ]
            } ]
        }, {
            phrasingType: "Adjective",
            mainItemSegments: [ getSimpleStringContentSegment("Some"), SubjectRole, getSimpleStringContentSegment("are"), AdjectiveTermNoSort, AntonymTermNoSort ],
            mainItemSegmentGroups: [ {
                groupLabelKey: "Qna_Phrasing_Adjective_Antonym_Group_Label",
                members: [ AdjectiveTermNoSort.id, AntonymTermNoSort.id ]
            } ],
            optionalItems: (0, tslib_es6.__spreadArray)((0, tslib_es6.__spreadArray)([ OptionalItemPreposition ], OptionalItemGroupSemanticSlots, !0), [ OptionalItemConditionPromoted ], !1),
            validations: [ {
                requiredMainSegmentIds: [ SubjectRole.id, AdjectiveTermNoSort.id ]
            }, {
                requiredMainSegmentIds: [ SubjectRole.id, AntonymTermNoSort.id ]
            } ]
        }, {
            phrasingType: "AdjectiveWithMeasurement",
            mainItemSegments: [ MeasurementRoleSentenceSingle, getSimpleStringContentSegment("indicates how"), AdjectiveTermWithSort, AntonymTermWithSort, SubjectRole, getSimpleStringContentSegment("are") ],
            mainItemSegmentGroups: [ {
                groupLabelKey: "Qna_Phrasing_Adjective_Antonym_Group_Label",
                members: [ AdjectiveTermWithSort.id, AntonymTermWithSort.id ]
            } ],
            optionalItems: (0, tslib_es6.__spreadArray)((0, tslib_es6.__spreadArray)([ OptionalItemPreposition ], OptionalItemGroupSemanticSlots, !0), [ OptionalItemCondition ], !1),
            validations: [ {
                requiredMainSegmentIds: [ MeasurementRoleSentenceSingle.id, SubjectRole.id, AdjectiveTermWithSort.id ]
            }, {
                requiredMainSegmentIds: [ MeasurementRoleSentenceSingle.id, SubjectRole.id, AntonymTermWithSort.id ]
            } ]
        }, {
            phrasingType: "AdjectiveFromData",
            mainItemSegments: [ DynamicAdjectivesRoleSentencePlural, getSimpleStringContentSegment("describe"), SubjectRole ],
            optionalItems: (0, tslib_es6.__spreadArray)((0, tslib_es6.__spreadArray)([ OptionalItemPreposition ], OptionalItemGroupSemanticSlots, !0), [ OptionalItemCondition ], !1),
            validations: [ {
                requiredMainSegmentIds: "All"
            } ]
        }, {
            phrasingType: "Noun",
            mainItemSegments: [ NounTerm, getSimpleStringContentSegment("is a kind of"), SubjectRoleSingle ],
            optionalItems: (0, tslib_es6.__spreadArray)((0, tslib_es6.__spreadArray)([ OptionalItemPreposition ], OptionalItemGroupSemanticSlots, !0), [ OptionalItemConditionPromoted ], !1),
            validations: [ {
                requiredMainSegmentIds: "All"
            } ]
        }, {
            phrasingType: "NounFromData",
            mainItemSegments: [ DynamicNounsRoleSentencePlural, getSimpleStringContentSegment("define kinds of"), SubjectRole ],
            optionalItems: (0, tslib_es6.__spreadArray)((0, tslib_es6.__spreadArray)([ OptionalItemPreposition ], OptionalItemGroupSemanticSlots, !0), [ OptionalItemCondition ], !1),
            validations: [ {
                requiredMainSegmentIds: "All"
            } ]
        }, {
            phrasingType: "Preposition",
            mainItemSegments: [ SubjectRoleSentencePlural, getSimpleStringContentSegment("are"), PrepositionTerm, ObjectRole ],
            optionalItems: (0, tslib_es6.__spreadArray)((0, tslib_es6.__spreadArray)([ OptionalItemPreposition ], OptionalItemGroupSemanticSlots, !0), [ OptionalItemCondition ], !1),
            validations: [ {
                requiredMainSegmentIds: "All"
            } ]
        }, {
            phrasingType: "Name",
            mainItemSegments: [ NameRoleSentencePlural, getSimpleStringContentSegment("are names/IDs of"), SubjectRole ],
            optionalItems: (0, tslib_es6.__spreadArray)((0, tslib_es6.__spreadArray)([], OptionalItemGroupSemanticSlots, !0), [ OptionalItemCondition ], !1),
            validations: [ {
                requiredMainSegmentIds: "All"
            } ]
        }, {
            phrasingType: "Attribute",
            mainItemSegments: [ SubjectRoleSentencePlural, getSimpleStringContentSegment("have"), ObjectRole ],
            optionalItems: (0, tslib_es6.__spreadArray)((0, tslib_es6.__spreadArray)([ OptionalItemPreposition ], OptionalItemGroupSemanticSlots, !0), [ OptionalItemCondition ], !1),
            validations: [ {
                requiredMainSegmentIds: "All"
            } ]
        } ];
        function getSimpleStringContentSegment(value) {
            return {
                type: "SimpleString",
                label: {
                    type: "content",
                    value
                }
            };
        }
        function getRoleSegment(id, labelKey, entityLabelVariant, hiddenByDefaultInfo) {
            return void 0 === entityLabelVariant && (entityLabelVariant = TermVariantFlags.Plural), 
            void 0 === hiddenByDefaultInfo && (hiddenByDefaultInfo = {
                value: !1
            }), {
                id,
                type: "Role",
                label: {
                    type: "key",
                    value: labelKey
                },
                entityTermVariant: entityLabelVariant,
                hiddenByDefaultInfo
            };
        }
        function getTermSegment(id, labelKey, hiddenByDefaultInfo, sortDirection) {
            return void 0 === hiddenByDefaultInfo && (hiddenByDefaultInfo = {
                value: !1
            }), void 0 === sortDirection && (sortDirection = void 0), {
                id,
                type: "Terms",
                label: {
                    type: "key",
                    value: labelKey
                },
                hiddenByDefaultInfo,
                sortDirection
            };
        }
        function getOptionalItem(type, labelKey, options) {
            void 0 === options && (options = void 0);
            var optionalItem = {
                type,
                label: {
                    type: "key",
                    value: labelKey
                },
                segments: null == options ? void 0 : options.segments,
                involveContextualLabel: _.some(null == options ? void 0 : options.segments, function(seg) {
                    return "contextualPlaceholder" === seg.label.type;
                })
            };
            null != (null == options ? void 0 : options.isPromoted) && (optionalItem.promoted = options.isPromoted);
            var enabledCondition = {}, conditionSet = !1;
            return (null == options ? void 0 : options.countLimit) > 0 && (enabledCondition.countLimit = options.countLimit, 
            conditionSet = !0), (null == options ? void 0 : options.uiCountLimit) > 0 && (enabledCondition.uiCountLimit = options.uiCountLimit, 
            conditionSet = !0), conditionSet && (optionalItem.enableAddCondition = enabledCondition), 
            optionalItem;
        }
        var sqExpr = __webpack_require__(94419), lsdl_entity_visitor = __webpack_require__(85331), fieldListPropertyExprGenerator = __webpack_require__(44529), fieldListViewModel = __webpack_require__(88315), LsdlEntityToSQExprConverter = function() {
            function LsdlEntityToSQExprConverter(aggregate, fieldsModel, groupingDesignStateService, schemaName) {
                this.aggregate = aggregate, this.fieldsModel = fieldsModel, this.groupingDesignStateService = groupingDesignStateService, 
                this.schemaName = schemaName;
            }
            return LsdlEntityToSQExprConverter.prototype.visitEntity = function(entityModel) {
                var fieldEntity = _.find(this.fieldsModel.entities, function(entity) {
                    return entity.name === entityModel.tableName;
                });
                if (fieldEntity) return this.getAggregateEnsuredExpr(fieldEntity);
            }, LsdlEntityToSQExprConverter.prototype.visitProperty = function(propertyModel) {
                var tableName = propertyModel.tableName, propertyName = propertyModel.propertyName, matchingItem = _.first(this.fieldsModel.findFields(tableName, propertyName, this.schemaName));
                if (matchingItem || (matchingItem = _.first(this.fieldsModel.findKpis(tableName, propertyName, this.schemaName))), 
                matchingItem) return this.getAggregateEnsuredExpr(matchingItem);
            }, LsdlEntityToSQExprConverter.prototype.visitHierarchy = function(hierarchyModel) {
                var hierarchyItem;
                if (hierarchyItem = _.isEmpty(hierarchyModel.variationSource) ? _.first(this.fieldsModel.findHierarchies(hierarchyModel.tableName, hierarchyModel.hierarchy, this.schemaName)) : getVariationHierarchy(hierarchyModel, this.fieldsModel, this.schemaName)) return this.getAggregateEnsuredExpr(hierarchyItem);
            }, LsdlEntityToSQExprConverter.prototype.visitHierarchyLevel = function(hierarchyLevelModel) {
                var hierarchyItem;
                if (hierarchyItem = _.isEmpty(hierarchyLevelModel.variationSource) ? _.first(this.fieldsModel.findHierarchies(hierarchyLevelModel.tableName, hierarchyLevelModel.hierarchy, this.schemaName)) : getVariationHierarchy(hierarchyLevelModel, this.fieldsModel, this.schemaName)) {
                    var matchingLevelItem = hierarchyItem.findLevel(hierarchyLevelModel.hierarchyLevel);
                    return matchingLevelItem ? this.getAggregateEnsuredExpr(matchingLevelItem) : void 0;
                }
            }, LsdlEntityToSQExprConverter.prototype.getAggregateEnsuredExpr = function(item) {
                var expr = item instanceof fieldListViewModel.e ? (0, fieldListPropertyExprGenerator.W4)(item) : (0, 
                fieldListPropertyExprGenerator.Sd)(item, this.groupingDesignStateService);
                return null != this.aggregate ? (0, sqExpr.m_)(expr, this.aggregate) : expr;
            }, LsdlEntityToSQExprConverter;
        }();
        function getEntityExpr(entity, aggregate, model, schemaName, groupingDesignStateService) {
            var entityToSQExprConverter = new LsdlEntityToSQExprConverter(aggregate, model, groupingDesignStateService, schemaName);
            return (0, lsdl_entity_visitor.M)(entity, entityToSQExprConverter);
        }
        function getVariationHierarchy(hierarchyOrLevelModel, fieldsModel, schemaName) {
            debug.fF.assert(function() {
                return !_.isEmpty(hierarchyOrLevelModel.variationSource);
            }, "expect this to be called only when the given hierarchyOrLevelModel has variation source");
            var conceptualProperty = _.first(fieldsModel.findFields(hierarchyOrLevelModel.tableName, hierarchyOrLevelModel.variationSource, schemaName));
            if (conceptualProperty) return _.find(conceptualProperty.properties, function(prop) {
                return prop instanceof fieldListViewModel.Jg && prop.variation === hierarchyOrLevelModel.variationSet && prop.name === hierarchyOrLevelModel.hierarchy;
            });
        }
        var lsdl_phrasing_model = __webpack_require__(37207), lsdl_term_model = __webpack_require__(46639), PhrasingSegmentControlsSectionUpdaterBase = function() {
            function PhrasingSegmentControlsSectionUpdaterBase(uid, segmentsWithInitialValue, validationsInput, additionalOnUpdateHandler) {
                this.uid = uid, this.segmentsWithInitialValue = segmentsWithInitialValue, this.validationsInput = validationsInput, 
                this.additionalOnUpdateHandler = additionalOnUpdateHandler, this.allSegmentIds = [], 
                this.segIdToValueMappings = new Map, this.unAppliedUpdates = new Map, this.updateInput(segmentsWithInitialValue, validationsInput);
                var initialStateInfo = {
                    dynamicSegmentValues: this.segIdToValueMappings,
                    isStateValid: this.areCurrentValuesValid(),
                    uid,
                    source: "other"
                };
                this.stateInfoInternal$ = new BehaviorSubject.X(initialStateInfo);
            }
            return Object.defineProperty(PhrasingSegmentControlsSectionUpdaterBase.prototype, "stateInfo$", {
                get: function() {
                    return this.stateInfoInternal$.asObservable();
                },
                enumerable: !1,
                configurable: !0
            }), PhrasingSegmentControlsSectionUpdaterBase.prototype.updateInput = function(segmentsWithValue, validations) {
                var _this = this;
                this.validations = (0, tslib_es6.__spreadArray)([], null != validations ? validations : [], !0), 
                this.allSegmentIds = [], this.segIdToValueMappings.clear(), segmentsWithValue.forEach(function(segValue, segId) {
                    _this.allSegmentIds.push(segId), _this.segIdToValueMappings.set(segId, segValue);
                });
            }, PhrasingSegmentControlsSectionUpdaterBase.prototype.areCurrentValuesValid = function() {
                var _this = this;
                if (_.isEmpty(this.validations)) return !0;
                for (var _i = 0, _a = this.validations; _i < _a.length; _i++) {
                    var requiredIdsCondition = _a[_i], requiredSegmentIds = "All" === requiredIdsCondition ? this.allSegmentIds : (0, 
                    tslib_es6.__spreadArray)([], null != requiredIdsCondition ? requiredIdsCondition : [], !0);
                    if (_.every(requiredSegmentIds, function(id) {
                        return !_.isEmpty(_this.segIdToValueMappings.get(id));
                    })) return !0;
                }
                return !1;
            }, PhrasingSegmentControlsSectionUpdaterBase;
        }();
        function isRoleUpdate(update) {
            return "RoleSelector" === update.type;
        }
        var userSource = {
            Type: "User"
        }, PhrasingUpdaterMain = function(_super) {
            function PhrasingUpdaterMain(uid, relationship, initialPhrasingType, initialPhrasing, segmentsWithInitialValue, validationsInput, additionalOnUpdateHandler) {
                var _this = _super.call(this, uid, segmentsWithInitialValue, validationsInput, additionalOnUpdateHandler) || this;
                return _this.uid = uid, _this.relationship = relationship, _this.initialPhrasingType = initialPhrasingType, 
                _this.initialPhrasing = initialPhrasing, _this.segmentsWithInitialValue = segmentsWithInitialValue, 
                _this.validationsInput = validationsInput, _this.additionalOnUpdateHandler = additionalOnUpdateHandler, 
                _this.adjSegmentIdAndValueAlign = !0, _this.currentPhrasingType = initialPhrasingType, 
                _this.latestValidPhrasingInternal$ = new BehaviorSubject.X(initialPhrasing), _this;
            }
            return (0, tslib_es6.__extends)(PhrasingUpdaterMain, _super), PhrasingUpdaterMain.prototype.tryApplyUpdate = function(newUpdate) {
                var _a, _b, isStateValid, stateSource, _this = this, latestValidPhrasing = this.latestValidPhrasingInternal$.value;
                if ("PhrasingType" === newUpdate.type) {
                    stateSource = "phrasingTypeUpdate", this.currentPhrasingType = newUpdate.newType;
                    var newTargetTemplate = _.find(QnaPhrasingTemplatesAll, function(t) {
                        return t.phrasingType === newUpdate.newType;
                    }), newSegmentsWithCompatibleValue_1 = new Map;
                    this.unAppliedUpdates.clear(), _.forEach(newTargetTemplate.mainItemSegments, function(seg) {
                        if ("Role" === seg.type || "Terms" === seg.type) {
                            var value = tryGetCompatibleValue(seg, _this.segIdToValueMappings);
                            newSegmentsWithCompatibleValue_1.set(seg.id, value), value && _this.unAppliedUpdates.set(seg.id, "Role" === seg.type ? {
                                type: "RoleSelector",
                                segmentId: seg.id,
                                newEntity: value
                            } : {
                                type: "TermEditorValue",
                                segmentId: seg.id,
                                newTerms: value
                            });
                        }
                    });
                    var newValidations = _.map(newTargetTemplate.validations, function(validation) {
                        return validation.requiredMainSegmentIds;
                    });
                    _super.prototype.updateInput.call(this, newSegmentsWithCompatibleValue_1, newValidations), 
                    (isStateValid = this.areCurrentValuesValid()) && (latestValidPhrasing = this.createNewPhrasing(newUpdate.newType), 
                    this.latestValidPhrasingInternal$.next(latestValidPhrasing));
                } else {
                    if ("TermEditorSortDir" === newUpdate.type) {
                        stateSource = "termSortDirUpdate", debug.fF.assert(function() {
                            return "antonym" === newUpdate.segmentId || "adjective" === newUpdate.segmentId;
                        }, "Expect TermEditorSortDir update come from either antonym or adjective");
                        var adjectiveTermUpdate = {
                            type: "TermEditorValue",
                            segmentId: "adjective",
                            newTerms: null === (_a = this.segIdToValueMappings) || void 0 === _a ? void 0 : _a.get("antonym")
                        }, antonymTermUpdate = {
                            type: "TermEditorValue",
                            segmentId: "antonym",
                            newTerms: null === (_b = this.segIdToValueMappings) || void 0 === _b ? void 0 : _b.get("adjective")
                        };
                        this.unAppliedUpdates.set("adjective", adjectiveTermUpdate), this.unAppliedUpdates.set("antonym", antonymTermUpdate), 
                        this.segIdToValueMappings.set("adjective", adjectiveTermUpdate.newTerms), this.segIdToValueMappings.set("antonym", antonymTermUpdate.newTerms), 
                        this.adjSegmentIdAndValueAlign = !this.adjSegmentIdAndValueAlign;
                    } else {
                        stateSource = isRoleUpdate(newUpdate) ? "roleUpdate" : "termUpdate";
                        var realId = newUpdate.segmentId, realUpdate = newUpdate;
                        "TermEditorValue" === newUpdate.type && ("adjective" !== newUpdate.segmentId || this.adjSegmentIdAndValueAlign ? "antonym" !== newUpdate.segmentId || this.adjSegmentIdAndValueAlign || (realId = "adjective") : realId = "antonym", 
                        realId !== newUpdate.segmentId && (realUpdate = (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, newUpdate), {
                            segmentId: realId
                        }))), this.unAppliedUpdates.set(realId, realUpdate), this.segIdToValueMappings.set(realId, isRoleUpdate(realUpdate) ? realUpdate.newEntity : realUpdate.newTerms);
                    }
                    (isStateValid = this.areCurrentValuesValid()) && (latestValidPhrasing && this.currentPhrasingType === getQnaPhrasingType(latestValidPhrasing) ? this.unAppliedUpdates.forEach(function(update) {
                        var visitor = new PhrasingModelUpdater(update);
                        (0, lsdl_phrasing_visitor.C)(latestValidPhrasing, visitor);
                    }) : latestValidPhrasing = this.createNewPhrasing(this.currentPhrasingType), this.unAppliedUpdates.clear(), 
                    this.latestValidPhrasingInternal$.next(latestValidPhrasing));
                }
                return this.stateInfoInternal$.next({
                    dynamicSegmentValues: this.segIdToValueMappings,
                    isStateValid,
                    source: stateSource,
                    uid: this.uid
                }), isStateValid;
            }, Object.defineProperty(PhrasingUpdaterMain.prototype, "latestValidPhrasing$", {
                get: function() {
                    return this.latestValidPhrasingInternal$.asObservable();
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(PhrasingUpdaterMain.prototype, "segementIdToValueMappings", {
                get: function() {
                    return new Map(this.segIdToValueMappings);
                },
                enumerable: !1,
                configurable: !0
            }), PhrasingUpdaterMain.prototype.createNewPhrasing = function(phrasingType) {
                var _a, withPrepPhrases = (null === (_a = this.latestValidPhrasingInternal$.value) || void 0 === _a ? void 0 : _a.prepositionalPhrases) ? (0, 
                tslib_es6.__spreadArray)([], this.latestValidPhrasingInternal$.value.prepositionalPhrases, !0) : void 0;
                switch (phrasingType) {
                  case "Adjective":
                  case "AdjectiveWithMeasurement":
                    return new lsdl_phrasing_model.eF(createNewDocumentRoleModel(this.segIdToValueMappings.get("subject")), createTermsModel(this.segIdToValueMappings.get("adjective")), void 0, createNewDocumentRoleModel(this.segIdToValueMappings.get("measurement")), withPrepPhrases, (0, 
                    JsCommon_Date.uL)(), void 0, "Authored", userSource, this.relationship, void 0, !0);

                  case "AdjectiveFromData":
                    return new lsdl_phrasing_model.j_(createNewDocumentRoleModel(this.segIdToValueMappings.get("subject")), createNewDocumentRoleModel(this.segIdToValueMappings.get("dynamicAdjectives")), withPrepPhrases, (0, 
                    JsCommon_Date.uL)(), void 0, "Authored", userSource, this.relationship, void 0, !0);

                  case "Attribute":
                    return new lsdl_phrasing_model.Mo(createNewDocumentRoleModel(this.segIdToValueMappings.get("subject")), createNewDocumentRoleModel(this.segIdToValueMappings.get("object")), withPrepPhrases, (0, 
                    JsCommon_Date.uL)(), void 0, "Authored", userSource, this.relationship, void 0, !0);

                  case "Name":
                    return new lsdl_phrasing_model.bF(createNewDocumentRoleModel(this.segIdToValueMappings.get("subject")), createNewDocumentRoleModel(this.segIdToValueMappings.get("name")), withPrepPhrases, (0, 
                    JsCommon_Date.uL)(), void 0, "Authored", userSource, this.relationship, void 0, !0);

                  case "Noun":
                    return new lsdl_phrasing_model.hg(createNewDocumentRoleModel(this.segIdToValueMappings.get("subject")), createTermsModel(this.segIdToValueMappings.get("noun")), withPrepPhrases, (0, 
                    JsCommon_Date.uL)(), void 0, "Authored", userSource, this.relationship, void 0, !0);

                  case "NounFromData":
                    return new lsdl_phrasing_model.sM(createNewDocumentRoleModel(this.segIdToValueMappings.get("subject")), createNewDocumentRoleModel(this.segIdToValueMappings.get("dynamicNouns")), withPrepPhrases, (0, 
                    JsCommon_Date.uL)(), void 0, "Authored", userSource, this.relationship, void 0, !0);

                  case "Preposition":
                    return new lsdl_phrasing_model._D(createNewDocumentRoleModel(this.segIdToValueMappings.get("subject")), createTermsModel(this.segIdToValueMappings.get("preposition")), createNewDocumentRoleModel(this.segIdToValueMappings.get("object")), withPrepPhrases, (0, 
                    JsCommon_Date.uL)(), void 0, "Authored", userSource, this.relationship, void 0, !0);

                  case "Verb":
                    return new lsdl_phrasing_model.QE(createNewDocumentRoleModel(this.segIdToValueMappings.get("subject")), createTermsModel(this.segIdToValueMappings.get("verb")), createNewDocumentRoleModel(this.segIdToValueMappings.get("indirectObject")), createNewDocumentRoleModel(this.segIdToValueMappings.get("object")), withPrepPhrases, (0, 
                    JsCommon_Date.uL)(), void 0, "Authored", userSource, this.relationship, void 0, !0);

                  default:
                    debug.fF.assertNever(phrasingType);
                }
            }, PhrasingUpdaterMain;
        }(PhrasingSegmentControlsSectionUpdaterBase), PhrasingModelUpdater = function() {
            function PhrasingModelUpdater(update) {
                var _this = this;
                this.update = update, isRoleUpdate(this.update) ? this.newRoleModel = createNewDocumentRoleModel(this.update.newEntity) : (this.newTerms = this.update.newTerms, 
                debug.fF.assert(function() {
                    return "antonym" === update.segmentId || "adjective" === update.segmentId || !_.isEmpty(_this.newTerms);
                }, "Empty terms is disallowed for valid phrasing, unless it is for antonyms/adjectives"));
            }
            return PhrasingModelUpdater.prototype.visitVerbPhrasing = function(model) {
                if (isRoleUpdate(this.update)) {
                    var roleSegmentId = this.update.segmentId;
                    "subject" === roleSegmentId ? model.subject = this.newRoleModel : "object" === roleSegmentId ? model.object = this.newRoleModel : "indirectObject" === roleSegmentId ? model.indirectObject = this.newRoleModel : debug.fF.assertFail("unexpected role segment id for LsdlVerbPhrasingModel: ".concat(roleSegmentId, " "));
                } else model.updateVerbs(this.newTerms);
            }, PhrasingModelUpdater.prototype.visitAdjectivePhrasing = function(model) {
                var segmentId = this.update.segmentId;
                isRoleUpdate(this.update) ? "subject" === segmentId ? model.subject = this.newRoleModel : "measurement" === segmentId ? model.measurement = this.newRoleModel : debug.fF.assertFail("unexpected role segment id for LsdlAdjectivePhrasingModel: ".concat(segmentId, " ")) : "adjective" === segmentId ? model.updateAdjectives(this.newTerms) : "antonym" === segmentId ? model.updateAntonyms(this.newTerms) : debug.fF.assertFail("unexpected term segment id for LsdlAdjectivePhrasingModel: ".concat(segmentId, " "));
            }, PhrasingModelUpdater.prototype.visitDynamicAdjectivePhrasing = function(model) {
                if (isRoleUpdate(this.update)) {
                    var roleSegmentId = this.update.segmentId;
                    "subject" === roleSegmentId ? model.subject = this.newRoleModel : "dynamicAdjectives" === roleSegmentId ? model.adjective = this.newRoleModel : debug.fF.assertFail("unexpected role segment id for LsdlDynamicAdjectivePhrasingModel: ".concat(roleSegmentId, " "));
                } else debug.fF.assertFail("only role segement update is expected for LsdlDynamicAdjectivePhrasingModel");
            }, PhrasingModelUpdater.prototype.visitNounPhrasing = function(model) {
                if (isRoleUpdate(this.update)) {
                    var roleSegmentId = this.update.segmentId;
                    "subject" === roleSegmentId ? model.subject = this.newRoleModel : debug.fF.assertFail("unexpected role segment id for LsdlNounPhrasingModel: ".concat(roleSegmentId, " "));
                } else model.updateNouns(this.newTerms);
            }, PhrasingModelUpdater.prototype.visitDynamicNounPhrasing = function(model) {
                if (isRoleUpdate(this.update)) {
                    var roleSegmentId = this.update.segmentId;
                    "subject" === roleSegmentId ? model.subject = this.newRoleModel : "dynamicNouns" === roleSegmentId ? model.noun = this.newRoleModel : debug.fF.assertFail("unexpected role segment id for LsdlDynamicNounPhrasingModel: ".concat(roleSegmentId, " "));
                } else debug.fF.assertFail("only role segement update is expected for LsdlDynamicNounPhrasingModel");
            }, PhrasingModelUpdater.prototype.visitPrepositionPhrasing = function(model) {
                if (isRoleUpdate(this.update)) {
                    var roleSegmentId = this.update.segmentId;
                    "subject" === roleSegmentId ? model.subject = this.newRoleModel : "object" === roleSegmentId ? model.object = this.newRoleModel : debug.fF.assertFail("unexpected role segment id for LsdlPrepositionPhrasingModel: ".concat(roleSegmentId, " "));
                } else model.updatePrepositions(this.newTerms);
            }, PhrasingModelUpdater.prototype.visitNamePhrasing = function(model) {
                if (isRoleUpdate(this.update)) {
                    var roleSegmentId = this.update.segmentId;
                    "subject" === roleSegmentId ? model.subject = this.newRoleModel : "name" === roleSegmentId ? model.name = this.newRoleModel : debug.fF.assertFail("unexpected role segment id for LsdlNamePhrasingModel: ".concat(roleSegmentId, " "));
                } else debug.fF.assertFail("only role segement update is expected for LsdlNamePhrasingModel");
            }, PhrasingModelUpdater.prototype.visitAttributePhrasing = function(model) {
                if (isRoleUpdate(this.update)) {
                    var roleSegmentId = this.update.segmentId;
                    "subject" === roleSegmentId ? model.subject = this.newRoleModel : "object" === roleSegmentId ? model.object = this.newRoleModel : debug.fF.assertFail("unexpected role segment id for LsdlAttributePhrasingModel: ".concat(roleSegmentId, " "));
                } else debug.fF.assertFail("only role segement update is expected for LsdlAttributePhrasingModel");
            }, PhrasingModelUpdater;
        }();
        function createNewDocumentRoleModel(value) {
            var _a;
            if (value) if (isRoleValue(value)) {
                if (null === (_a = value.entity) || void 0 === _a ? void 0 : _a.lsdlName) return {
                    entity: value.entity.lsdlName,
                    role: void 0
                };
            } else debug.fF.assertFail("Expect the given value to be a QnaPhrasingRoleSegmentValue");
        }
        function createTermsModel(value) {
            if (null != value) if (isRoleValue(value)) debug.fF.assertFail("Expect the given value to be a QnaPhrasingTermSegmentValue"); else if (!_.isEmpty(value)) return lsdl_term_model.P.createAuthoredTerms(value);
        }
        var PhrasingUpdaterPrepPhrase = function(_super) {
            function PhrasingUpdaterPrepPhrase(uid, segmentsWithInitialValue, validationsInput) {
                var _this = _super.call(this, uid, segmentsWithInitialValue, validationsInput) || this;
                return _this.uid = uid, _this.segmentsWithInitialValue = segmentsWithInitialValue, 
                _this.validationsInput = validationsInput, _this;
            }
            return (0, tslib_es6.__extends)(PhrasingUpdaterPrepPhrase, _super), PhrasingUpdaterPrepPhrase.prototype.tryApplyUpdate = function(newUpdate) {
                if (debug.fF.assert(function() {
                    return "TermEditorSortDir" !== newUpdate.type;
                }, "Expect no TermEditorSortDir sent to phrasing-updater-prepPhrase"), "TermEditorSortDir" === newUpdate.type) return !1;
                this.unAppliedUpdates.set(newUpdate.segmentId, newUpdate), this.segIdToValueMappings.set(newUpdate.segmentId, isRoleUpdate(newUpdate) ? newUpdate.newEntity : newUpdate.newTerms);
                var isStateValid = this.areCurrentValuesValid(), newState = {
                    dynamicSegmentValues: this.segIdToValueMappings,
                    isStateValid,
                    uid: this.uid,
                    source: isRoleUpdate(newUpdate) ? "roleUpdate" : "termUpdate"
                };
                return this.stateInfoInternal$.next(newState), isStateValid;
            }, PhrasingUpdaterPrepPhrase;
        }(PhrasingSegmentControlsSectionUpdaterBase), PhrasingUpdaterSemanticSlots = function(_super) {
            function PhrasingUpdaterSemanticSlots(uid, segmentsWithInitialValue, validationsInput) {
                var _this = _super.call(this, uid, segmentsWithInitialValue, validationsInput) || this;
                return _this.uid = uid, _this.segmentsWithInitialValue = segmentsWithInitialValue, 
                _this.validationsInput = validationsInput, _this;
            }
            return (0, tslib_es6.__extends)(PhrasingUpdaterSemanticSlots, _super), PhrasingUpdaterSemanticSlots.prototype.tryApplyUpdate = function(newUpdate) {
                if (debug.fF.assert(function() {
                    return "TermEditorSortDir" !== newUpdate.type;
                }, "Expect no TermEditorSortDir sent to phrasing-updater-prepPhrase"), "TermEditorSortDir" === newUpdate.type) return !1;
                this.unAppliedUpdates.set(newUpdate.segmentId, newUpdate), this.segIdToValueMappings.set(newUpdate.segmentId, isRoleUpdate(newUpdate) ? newUpdate.newEntity : newUpdate.newTerms);
                var isStateValid = this.areCurrentValuesValid(), newState = {
                    dynamicSegmentValues: this.segIdToValueMappings,
                    isStateValid,
                    uid: this.uid,
                    source: isRoleUpdate(newUpdate) ? "roleUpdate" : "termUpdate"
                };
                return this.stateInfoInternal$.next(newState), isStateValid;
            }, PhrasingUpdaterSemanticSlots;
        }(PhrasingSegmentControlsSectionUpdaterBase), grouping_design_state_service = __webpack_require__(23983), displayNameServiceUtils = __webpack_require__(7956), fieldExprPatternBuilder = __webpack_require__(76001), formattingService = __webpack_require__(28326), sqExprStaticMembers = __webpack_require__(74082), sqExprEqualityVisitor = __webpack_require__(45413), sq_aggregation_operations_service = __webpack_require__(28199), field_picker_modern_lazy_component = __webpack_require__(67930), QnaRoleSelectorComponent = function(_super) {
            function QnaRoleSelectorComponent(conceptualSchemaProxy, dataSourcesService, aggrOperationsService, localizationService) {
                var _this = _super.call(this) || this;
                return _this.conceptualSchemaProxy = conceptualSchemaProxy, _this.dataSourcesService = dataSourcesService, 
                _this.aggrOperationsService = aggrOperationsService, _this.localizationService = localizationService, 
                _this.entityFieldUpdated = new fesm2022_core.EventEmitter, _this.fieldListOverlayPanelClass = "qnaRoleSelectorFieldListOverlayPanel", 
                _this.getDropExprStrategy = {
                    getDropExpr: function(originalPickerExpr, schema) {
                        var _a, _b, tableSpecialSetting = null === (_a = _this.specialAllowingSettings) || void 0 === _a ? void 0 : _a.table, hiererachySpecialSetting = null === (_b = _this.specialAllowingSettings) || void 0 === _b ? void 0 : _b.hierarchy;
                        return null != originalPickerExpr && (0, sqExprStaticMembers.Lk)(originalPickerExpr) && null != tableSpecialSetting ? _this.getSpecialFieldDropExpr(originalPickerExpr, tableSpecialSetting) : null != originalPickerExpr && (0, 
                        sqExprStaticMembers.y3)(originalPickerExpr) && null != hiererachySpecialSetting ? _this.getSpecialFieldDropExpr(originalPickerExpr, hiererachySpecialSetting) : _this.isValidField(originalPickerExpr, schema) ? Promise.resolve({
                            expr: originalPickerExpr
                        }) : void 0;
                    },
                    getDroppedExprChildren: function(_droppedExpr, _position, _schema, _fromUpdate) {}
                }, _this.droppedFieldDisplayNameStrategy = {
                    getDisplayName: function(droppedExpr, _fieldPosition, schema, _fromUpdate) {
                        return _this.getFieldDisplayName(droppedExpr, schema);
                    },
                    isRenameAllowed: function(_fieldPosition, _fromUpdate) {
                        return !1;
                    },
                    isFieldInvalid: function(_fieldPosition, _fromUpdate) {
                        return !1;
                    }
                }, _this;
            }
            return (0, tslib_es6.__extends)(QnaRoleSelectorComponent, _super), QnaRoleSelectorComponent.prototype.ngOnInit = function() {
                var _a, _b, _this = this, fieldExpr = null === (_a = this.entityField) || void 0 === _a ? void 0 : _a.fieldExpr;
                this.initialExpr = fieldExpr ? {
                    expr: fieldExpr
                } : void 0, this.initialRole = null === (_b = this.entityField) || void 0 === _b ? void 0 : _b.role, 
                this.currentEntityField$ = new BehaviorSubject.X(this.entityField), this.currentEntityField$.pipe((0, 
                skip.T)(1), (0, takeUntil.R)(this.onDestroy$)).subscribe(function(newValue) {
                    _this.entityFieldUpdated.emit(newValue);
                }), this.lsdlDocumentModel = new lsdl_document_model.X(_.cloneDeep(this.initialLinguisticSchema)), 
                this.flyoutFieldsStrategy = {
                    getFieldsToDisableOnOpen: function(_flyoutOpenFromPosition, _flyoutOpenFromField, allFields, schema) {
                        var _a, _b, toDisable = [];
                        _this.fieldsWithoutLsdlEntity || (_this.fieldsWithoutLsdlEntity = [], _.forEach(allFields, function(field) {
                            getLsdlEntity(field, schema, _this.lsdlDocumentModel) || _this.fieldsWithoutLsdlEntity.push(field);
                        })), toDisable.push.apply(toDisable, _this.fieldsWithoutLsdlEntity);
                        var disableTables = null != (null === (_a = _this.specialAllowingSettings) || void 0 === _a ? void 0 : _a.table) && !_this.specialAllowingSettings.table.allowed, disableHierarchies = null != (null === (_b = _this.specialAllowingSettings) || void 0 === _b ? void 0 : _b.hierarchy) && !_this.specialAllowingSettings.hierarchy.allowed;
                        if (disableTables || disableHierarchies) {
                            var extraToDisable = _.filter(allFields, function(f) {
                                return disableTables && (0, sqExprStaticMembers.Lk)(f) || disableHierarchies && (0, 
                                sqExprStaticMembers.y3)(f);
                            });
                            toDisable.push.apply(toDisable, extraToDisable);
                        }
                        return _.uniqWith(toDisable, sqExprEqualityVisitor.fS);
                    }
                };
            }, QnaRoleSelectorComponent.prototype.onFieldChange = function(change) {
                var _a, _b;
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var newExpr, newLinguisticEntity, schema, newExprWithoutAggregate;
                    return (0, tslib_es6.__generator)(this, function(_c) {
                        switch (_c.label) {
                          case 0:
                            return (newExpr = null === (_a = change.newExpr) || void 0 === _a ? void 0 : _a.expr) ? [ 4, this.conceptualSchemaProxy.get(this.dataSourcesService.get()) ] : (this.currentEntityField$.next(void 0), 
                            [ 2 ]);

                          case 1:
                            return schema = _c.sent(), newExprWithoutAggregate = (0, sqExprStaticMembers.iV)(newExpr) ? newExpr.arg : newExpr, 
                            newLinguisticEntity = getLsdlEntity(newExprWithoutAggregate, schema, this.lsdlDocumentModel), 
                            this.currentEntityField$.next({
                                entity: newLinguisticEntity,
                                fieldExpr: newExpr,
                                role: (0, sqExprEqualityVisitor.fS)(newExpr, null === (_b = this.initialExpr) || void 0 === _b ? void 0 : _b.expr) ? this.initialRole : {
                                    entity: newLinguisticEntity.lsdlName,
                                    role: void 0
                                }
                            }), [ 2 ];
                        }
                    });
                });
            }, QnaRoleSelectorComponent.prototype.isValidField = function(expr, schema) {
                var _a, _b, _c;
                if (debug.fF.assertValue(expr, "expr"), null == expr) return !1;
                if ((0, sqExprEqualityVisitor.fS)(null === (_a = this.currentEntityField$.value) || void 0 === _a ? void 0 : _a.fieldExpr, expr)) return !1;
                if ((0, sqExprStaticMembers.Lk)(expr)) {
                    var specialTableSetting = null === (_b = this.specialAllowingSettings) || void 0 === _b ? void 0 : _b.table;
                    return null == specialTableSetting || specialTableSetting.allowed;
                }
                if ((0, sqExprStaticMembers.y3)(expr)) {
                    var specialHierarchySetting = null === (_c = this.specialAllowingSettings) || void 0 === _c ? void 0 : _c.hierarchy;
                    return null == specialHierarchySetting || specialHierarchySetting.allowed;
                }
                var conceptualProperty = expr.getConceptualProperty(schema);
                return !(null == conceptualProperty ? void 0 : conceptualProperty.kpiValue) && !!expr.getMetadata(schema);
            }, QnaRoleSelectorComponent.prototype.getSpecialFieldDropExpr = function(originalPickerExpr, fieldSpecialSetting) {
                if (debug.fF.assertValue(originalPickerExpr, "originalPickerExpr must be defined"), 
                debug.fF.assertValue(fieldSpecialSetting, "fieldSpecialSetting must be defined"), 
                fieldSpecialSetting.allowed) return _.isEmpty(fieldSpecialSetting.restrictedAggregates) || _.find(fieldSpecialSetting.restrictedAggregates, function(agg) {
                    return "None" === agg;
                }) ? Promise.resolve({
                    expr: originalPickerExpr
                }) : Promise.resolve({
                    expr: (0, sqExpr.m_)(originalPickerExpr, lsdlConditionAggregateToQueryAggregateFunc(fieldSpecialSetting.restrictedAggregates[0]))
                });
            }, QnaRoleSelectorComponent.prototype.getFieldDisplayName = function(droppedExpr, schema) {
                var newEntity = getLsdlEntity((0, sqExprStaticMembers.iV)(droppedExpr) ? droppedExpr.arg : droppedExpr, schema, this.lsdlDocumentModel);
                return (0, sqExprStaticMembers.iV)(droppedExpr) ? this.getAggregationFieldDisplayNameWorkaround(newEntity, droppedExpr) : this.allEntityVariantLabels[newEntity.lsdlName].get(this.entityTermVariant);
            }, QnaRoleSelectorComponent.prototype.getAggregationFieldDisplayNameWorkaround = function(lsdlEntity, expr) {
                var locOptions = {
                    aggregateDisplayNames: {
                        Sum: this.localizationService.get("DisplayName_Sum"),
                        Avg: this.localizationService.get("DisplayName_Avg"),
                        Count: this.localizationService.get("DisplayName_Count"),
                        Min: this.localizationService.get("DisplayName_Min"),
                        Max: this.localizationService.get("DisplayName_Max"),
                        CountNonNull: this.localizationService.get("DisplayName_CountNonNull"),
                        Median: this.localizationService.get("DisplayName_Median"),
                        StandardDeviation: this.localizationService.get("DisplayName_StandardDeviation"),
                        Variance: this.localizationService.get("DisplayName_Variance"),
                        DateMin: this.localizationService.get("DisplayName_DateMin"),
                        DateMax: this.localizationService.get("DisplayName_DateMax"),
                        StringMin: this.localizationService.get("DisplayName_StringMin"),
                        StringMax: this.localizationService.get("DisplayName_StringMax")
                    },
                    showValueAsDisplayNames: {
                        PercentOfGrandTotal: this.localizationService.get("DisplayName_QuickCalc_PercentOfGrandTotal"),
                        PercentOfGrandTotalTooltip: this.localizationService.get("DisplayName_QuickCalc_PercentOfGrandTotalTooltip"),
                        PercentileExclusive: this.localizationService.get("DisplayName_QuickCalc_PercentileExclusive"),
                        PercentileInclusive: this.localizationService.get("DisplayName_QuickCalc_PercentileInclusive")
                    },
                    qualifiedDisplayNameTemplate: this.localizationService.get("Field_Tooltip"),
                    stringResourceProvider: this.localizationService
                }, metadata = this.aggrOperationsService.getMetadataForUnderlyingType(expr, this.fieldsModel.schema), aggregateKey = (0, 
                displayNameServiceUtils.z)(expr.func, metadata), baseLabel = _.includes([ "Count", "CountNonNull" ], aggregateKey) ? this.allEntityVariantLabels[lsdlEntity.lsdlName].get(TermVariantFlags.Plural) : this.allEntityVariantLabels[lsdlEntity.lsdlName].get(TermVariantFlags.None), formatString = locOptions.aggregateDisplayNames[aggregateKey];
                return debug.fF.assertValue(formatString, "Expected to find format string for display name"), 
                formattingService.dx.format(formatString, [ baseLabel ]);
            }, QnaRoleSelectorComponent.\u0275fac = function(t) {
                return new (t || QnaRoleSelectorComponent)(fesm2022_core["\u0275\u0275directiveInject"](conceptual_schema_proxy_service.i), fesm2022_core["\u0275\u0275directiveInject"](data_sources_service.D), fesm2022_core["\u0275\u0275directiveInject"](sq_aggregation_operations_service.C), fesm2022_core["\u0275\u0275directiveInject"](localization_service.o));
            }, QnaRoleSelectorComponent.\u0275cmp = fesm2022_core["\u0275\u0275defineComponent"]({
                type: QnaRoleSelectorComponent,
                selectors: [ [ "qna-role-selector" ] ],
                inputs: {
                    displayTitle: "displayTitle",
                    initialLinguisticSchema: "initialLinguisticSchema",
                    fieldsModel: "fieldsModel",
                    allEntityVariantLabels: "allEntityVariantLabels",
                    entityTermVariant: "entityTermVariant",
                    entityField: "entityField",
                    alwaysAllowAggregate: "alwaysAllowAggregate",
                    aggregatesConstraint: "aggregatesConstraint",
                    specialAllowingSettings: "specialAllowingSettings"
                },
                outputs: {
                    entityFieldUpdated: "entityFieldUpdated"
                },
                features: [ fesm2022_core["\u0275\u0275InheritDefinitionFeature"] ],
                decls: 2,
                vars: 16,
                consts: [ [ 1, "qnaRoleSelector" ], [ 3, "ariaLabelledby", "label", "compact", "alwaysAllowAggregate", "aggregatesConstraint", "addDataLabelKey", "withFieldList", "fieldListOverlayPanelClass", "allowMultipleValues", "allowReorderItems", "allowEntityField", "disableDropZoneIndicator", "getDropExprStrategy", "displayNameStrategy", "flyoutFieldsStrategy", "initialExpr", "onExprChange" ] ],
                template: function(rf, ctx) {
                    1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 0)(1, "field-picker-modern-lazy", 1), 
                    fesm2022_core["\u0275\u0275listener"]("onExprChange", function($event) {
                        return ctx.onFieldChange($event);
                    }), fesm2022_core["\u0275\u0275elementEnd"]()()), 2 & rf && (fesm2022_core["\u0275\u0275advance"](1), 
                    fesm2022_core["\u0275\u0275property"]("ariaLabelledby", ctx.displayTitle)("label", ctx.displayTitle)("compact", !0)("alwaysAllowAggregate", ctx.alwaysAllowAggregate)("aggregatesConstraint", ctx.aggregatesConstraint)("addDataLabelKey", "Plus_Add")("withFieldList", !0)("fieldListOverlayPanelClass", ctx.fieldListOverlayPanelClass)("allowMultipleValues", !1)("allowReorderItems", !1)("allowEntityField", !0)("disableDropZoneIndicator", !0)("getDropExprStrategy", ctx.getDropExprStrategy)("displayNameStrategy", ctx.droppedFieldDisplayNameStrategy)("flyoutFieldsStrategy", ctx.flyoutFieldsStrategy)("initialExpr", ctx.initialExpr));
                },
                dependencies: [ field_picker_modern_lazy_component.m ],
                styles: [ '.qnaRoleSelector[_ngcontent-%COMP%]{height:100%;display:flex;flex-direction:column}.qnaRoleSelector[_ngcontent-%COMP%]   .title[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--xlg-font-size, 20px);font-weight:var(--font-weight-semi-bold, 600);line-height:28px;margin:0}.qnaRoleSelector[_ngcontent-%COMP%]   .subtitle[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-regular, 400);line-height:20px;margin:8px 0 0}.qnaRoleSelector[_ngcontent-%COMP%]   .phrasingsContent[_ngcontent-%COMP%]{flex:1}' ]
            }), QnaRoleSelectorComponent;
        }(rx_component.w);
        function getLsdlEntity(expr, schema, lsdlDocument) {
            var _a, _b, _c, _d, pattern = (0, fieldExprPatternBuilder.Q)(expr, schema);
            if (pattern.entity) return lsdlDocument.getEntityForTable(pattern.entity.entity);
            if (pattern.column || pattern.measure) return lsdlDocument.getEntityForProperty(null !== (_b = null === (_a = pattern.column) || void 0 === _a ? void 0 : _a.entity) && void 0 !== _b ? _b : pattern.measure.entity, null !== (_d = null === (_c = pattern.column) || void 0 === _c ? void 0 : _c.name) && void 0 !== _d ? _d : pattern.measure.name);
            if (pattern.hierarchy) return lsdlDocument.getEntityForHierarchy(pattern.hierarchy.entity, pattern.hierarchy.name);
            if (pattern.hierarchyLevel) {
                var level = pattern.hierarchyLevel;
                return lsdlDocument.getEntityForHierarchyLevel(level.entity, level.name, level.level);
            }
            if (pattern.columnHierarchyVariation) {
                var hierarchyVariation = pattern.columnHierarchyVariation;
                return lsdlDocument.getEntityForHierarchy(hierarchyVariation.source.entity, hierarchyVariation.hierarchy.name, hierarchyVariation.variationName, hierarchyVariation.source.name);
            }
            if (pattern.columnHierarchyLevelVariation) {
                var levelVariation = pattern.columnHierarchyLevelVariation;
                return lsdlDocument.getEntityForHierarchyLevel(levelVariation.source.entity, levelVariation.level.name, levelVariation.level.level, levelVariation.variationName, levelVariation.source.name);
            }
        }
        var custom_click_directive = __webpack_require__(23097), qna_term_editor_component_c0 = [ "termsInput" ];
        function QnaTermEditorComponent_div_0_label_1_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "label", 12), fesm2022_core["\u0275\u0275text"](1), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r2 = fesm2022_core["\u0275\u0275nextContext"](2);
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275textInterpolate"](ctx_r2.editorLabel);
            }
        }
        function QnaTermEditorComponent_div_0_span_8_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "span", 13), fesm2022_core["\u0275\u0275text"](1), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var state_r1 = fesm2022_core["\u0275\u0275nextContext"]().ngIf;
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275textInterpolate1"]("+", state_r1.termsCount, "");
            }
        }
        function QnaTermEditorComponent_div_0_div_9_Template(rf, ctx) {
            1 & rf && fesm2022_core["\u0275\u0275element"](0, "div", 14);
        }
        function QnaTermEditorComponent_div_0_button_10_Template(rf, ctx) {
            if (1 & rf) {
                var _r12 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "button", 15), fesm2022_core["\u0275\u0275listener"]("click", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r12);
                    var state_r1 = fesm2022_core["\u0275\u0275nextContext"]().ngIf, ctx_r10 = fesm2022_core["\u0275\u0275nextContext"]();
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r10.flipFromSortDirection(state_r1.sortDir));
                }), fesm2022_core["\u0275\u0275element"](1, "tri-svg-icon", 16), fesm2022_core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var state_r1 = fesm2022_core["\u0275\u0275nextContext"]().ngIf;
                fesm2022_core["\u0275\u0275property"]("pbi-tooltip", state_r1.sortDirTooltip), fesm2022_core["\u0275\u0275advance"](1), 
                fesm2022_core["\u0275\u0275property"]("name", "arrow_sort_" + (1 === state_r1.sortDir ? "up" : "down") + "_20_regular");
            }
        }
        var qna_term_editor_component_c1 = function() {
            return {
                "aria-label": "Edit"
            };
        };
        function QnaTermEditorComponent_div_0_button_11_Template(rf, ctx) {
            if (1 & rf) {
                var _r15 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "button", 17), fesm2022_core["\u0275\u0275listener"]("click", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r15);
                    var ctx_r14 = fesm2022_core["\u0275\u0275nextContext"](2);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r14.beginEditTerms());
                })("keydown.enter", function($event) {
                    return $event.preventDefault(), $event.stopPropagation();
                })("keyup.enter", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r15);
                    var ctx_r17 = fesm2022_core["\u0275\u0275nextContext"](2);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r17.beginEditTerms());
                }), fesm2022_core["\u0275\u0275element"](1, "tri-svg-icon", 16), fesm2022_core["\u0275\u0275elementEnd"]();
            }
            2 & rf && (fesm2022_core["\u0275\u0275property"]("localizeAttr", fesm2022_core["\u0275\u0275pureFunction0"](2, qna_term_editor_component_c1)), 
            fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("name", "edit_20_regular"));
        }
        var qna_term_editor_component_c2 = function(a0) {
            return {
                allowClick: a0
            };
        };
        function QnaTermEditorComponent_div_0_Template(rf, ctx) {
            if (1 & rf) {
                var _r19 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "div", 1), fesm2022_core["\u0275\u0275template"](1, QnaTermEditorComponent_div_0_label_1_Template, 2, 1, "label", 2), 
                fesm2022_core["\u0275\u0275elementStart"](2, "div", 3, 4)(4, "div", 5), fesm2022_core["\u0275\u0275listener"]("singleClickAction", function() {
                    var state_r1 = fesm2022_core["\u0275\u0275restoreView"](_r19).ngIf, ctx_r18 = fesm2022_core["\u0275\u0275nextContext"]();
                    return fesm2022_core["\u0275\u0275resetView"](!state_r1.isEditing && ctx_r18.beginEditTerms());
                })("doubleClickAction", function() {
                    var state_r1 = fesm2022_core["\u0275\u0275restoreView"](_r19).ngIf, ctx_r20 = fesm2022_core["\u0275\u0275nextContext"]();
                    return fesm2022_core["\u0275\u0275resetView"](!state_r1.isEditing && ctx_r20.beginEditTerms());
                }), fesm2022_core["\u0275\u0275elementStart"](5, "input", 6, 7), fesm2022_core["\u0275\u0275listener"]("keyup.enter", function($event) {
                    var state_r1 = fesm2022_core["\u0275\u0275restoreView"](_r19).ngIf, _r4 = fesm2022_core["\u0275\u0275reference"](6), ctx_r21 = fesm2022_core["\u0275\u0275nextContext"]();
                    return $event.stopPropagation(), fesm2022_core["\u0275\u0275resetView"](state_r1.isEditing ? ctx_r21.checkToEndEditTerms(!0, !1, _r4.value) : ctx_r21.beginEditTerms());
                })("keydown.escape", function($event) {
                    var state_r1 = fesm2022_core["\u0275\u0275restoreView"](_r19).ngIf, ctx_r22 = fesm2022_core["\u0275\u0275nextContext"]();
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r22.onInputEscapeKeydown($event, state_r1.isEditing));
                })("keyup.escape", function() {
                    var state_r1 = fesm2022_core["\u0275\u0275restoreView"](_r19).ngIf, ctx_r23 = fesm2022_core["\u0275\u0275nextContext"]();
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r23.onInputEscapeKeyup(state_r1.isEditing));
                })("blur", function() {
                    var state_r1 = fesm2022_core["\u0275\u0275restoreView"](_r19).ngIf, _r4 = fesm2022_core["\u0275\u0275reference"](6), ctx_r24 = fesm2022_core["\u0275\u0275nextContext"]();
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r24.checkToEndEditTerms(state_r1.isEditing, !1, _r4.value));
                })("dragstart", function($event) {
                    return null == $event ? null : $event.preventDefault();
                }), fesm2022_core["\u0275\u0275pipe"](7, "localize"), fesm2022_core["\u0275\u0275elementEnd"](), 
                fesm2022_core["\u0275\u0275template"](8, QnaTermEditorComponent_div_0_span_8_Template, 2, 1, "span", 8), 
                fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275template"](9, QnaTermEditorComponent_div_0_div_9_Template, 1, 0, "div", 9), 
                fesm2022_core["\u0275\u0275template"](10, QnaTermEditorComponent_div_0_button_10_Template, 2, 2, "button", 10), 
                fesm2022_core["\u0275\u0275template"](11, QnaTermEditorComponent_div_0_button_11_Template, 2, 3, "button", 11), 
                fesm2022_core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var state_r1 = ctx.ngIf, ctx_r0 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", ctx_r0.editorLabel), 
                fesm2022_core["\u0275\u0275advance"](3), fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction1"](11, qna_term_editor_component_c2, !state_r1.isEditing)), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("placeholder", fesm2022_core["\u0275\u0275pipeBind1"](7, 9, "Qna_Term_Editor_TermsList_Placeholder"))("value", state_r1.termsDisplayString)("readonly", !state_r1.isEditing), 
                fesm2022_core["\u0275\u0275advance"](3), fesm2022_core["\u0275\u0275property"]("ngIf", !state_r1.isEditing && state_r1.termsCount > 0), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", !state_r1.isEditing), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", !state_r1.isEditing && null != state_r1.sortDir && (state_r1.termsDisplayString || ctx_r0.forceShowSortDirIfAnyForEmptyValue)), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", !state_r1.isEditing);
            }
        }
        var qna_term_editor_component_c3 = function(a0, a1, a2, a3, a4) {
            return {
                isEditing: a0,
                termsCount: a1,
                sortDir: a2,
                sortDirTooltip: a3,
                termsDisplayString: a4
            };
        }, QnaTermEditorComponent = function(_super) {
            function QnaTermEditorComponent(changeDetectorRef, localizationService) {
                var _this = _super.call(this) || this;
                return _this.changeDetectorRef = changeDetectorRef, _this.localizationService = localizationService, 
                _this.termsUpdated = new fesm2022_core.EventEmitter, _this.sortDirUpdated = new fesm2022_core.EventEmitter, 
                _this;
            }
            return (0, tslib_es6.__extends)(QnaTermEditorComponent, _super), Object.defineProperty(QnaTermEditorComponent.prototype, "_termsInputElementRef", {
                set: function(elementRef) {
                    this.termsInputElement = null == elementRef ? void 0 : elementRef.nativeElement;
                },
                enumerable: !1,
                configurable: !0
            }), QnaTermEditorComponent.prototype.ngOnInit = function() {
                var _this = this;
                this.setEditMode = this.createEventAdapter(), this.setTerms = this.createEventAdapter(), 
                this.setSortDirection = this.createEventAdapter(), this.isEditing$ = this.setEditMode.$.pipe((0, 
                startWith.O)(!1)), this.sortDirection$ = (0, merge.T)(this.changes$("sortDirection", !0), this.setSortDirection.$).pipe(), 
                this.sortDirectionTooltip$ = this.sortDirection$.pipe((0, map.U)(function(dir) {
                    if (null != dir) return {
                        tooltipDescription: _this.localizationService.get(1 === dir ? "Qna_Phrasing_AdjectiveWithMeasurement_HighValue_Tooltip" : "Qna_Phrasing_AdjectiveWithMeasurement_LowValue_Tooltip"),
                        tooltipArrowPosition: constants.xI.arrowTopMiddle
                    };
                }));
                var termsWithSource$ = (0, merge.T)(this.changes$("terms", !0).pipe((0, map.U)(function(terms) {
                    return {
                        terms,
                        source: "input"
                    };
                })), this.setTerms.$.pipe((0, map.U)(function(terms) {
                    return {
                        terms,
                        source: "event"
                    };
                }))).pipe((0, distinctUntilChanged.x)(function(prev, curr) {
                    if (null == prev) return !1;
                    var prevTerms = prev.terms, currTerms = curr.terms;
                    return _.size(prevTerms) === _.size(currTerms) && _.every(prevTerms, function(prevTerm, index) {
                        return prevTerm === currTerms[index];
                    });
                }));
                this.terms$ = termsWithSource$.pipe((0, map.U)(function(value) {
                    return value.terms;
                })), termsWithSource$.pipe((0, filter.h)(function(value) {
                    return "event" === value.source;
                }), (0, map.U)(function(value) {
                    return value.terms;
                })).subscribe(function(newTerms) {
                    _this.termsUpdated.emit(newTerms);
                }), this.termsCount$ = this.terms$.pipe((0, map.U)(function(terms) {
                    return _.size(terms) - 1;
                }), (0, distinctUntilChanged.x)()), this.termsDisplayString$ = (0, combineLatest.aj)([ this.terms$, this.isEditing$ ]).pipe((0, 
                map.U)(function(_a) {
                    var terms = _a[0], isEditing = _a[1];
                    return _.isEmpty(terms) ? "" : isEditing ? (0, tslib_es6.__spreadArray)((0, tslib_es6.__spreadArray)([], terms, !0), [ "" ], !1).join(", ") : terms[0];
                }), (0, distinctUntilChanged.x)());
            }, QnaTermEditorComponent.prototype.onInputEscapeKeydown = function(event, isEditing) {
                isEditing && (event.preventDefault(), event.stopPropagation());
            }, QnaTermEditorComponent.prototype.onInputEscapeKeyup = function(isEditing) {
                this.checkToEndEditTerms(isEditing, !0);
            }, QnaTermEditorComponent.prototype.beginEditTerms = function() {
                this.setEditMode.fn(!0), this.changeDetectorRef.detectChanges(), this.termsInputElement.focus();
                var currentLength = _.size(this.termsInputElement.value);
                currentLength > 0 && this.termsInputElement.setSelectionRange(currentLength, currentLength);
            }, QnaTermEditorComponent.prototype.checkToEndEditTerms = function(isEditing, shouldRevert, termsList) {
                if (isEditing && (this.setEditMode.fn(!1), !shouldRevert)) {
                    var newTerms = (null != termsList ? termsList : "").split(/[,\n]/).map(function(s) {
                        return s.trim();
                    }).filter(function(s) {
                        return !_.isEmpty(s);
                    });
                    this.setTerms.fn(newTerms);
                }
            }, QnaTermEditorComponent.prototype.flipFromSortDirection = function(currentDir) {
                null == currentDir && debug.fF.assertFail("Expect this be called only if current sortDirection has value");
                var newDir = 1 === currentDir ? 2 : 1;
                this.setSortDirection.fn(newDir), this.sortDirUpdated.emit(newDir);
            }, QnaTermEditorComponent.\u0275fac = function(t) {
                return new (t || QnaTermEditorComponent)(fesm2022_core["\u0275\u0275directiveInject"](fesm2022_core.ChangeDetectorRef), fesm2022_core["\u0275\u0275directiveInject"](localization_service.o));
            }, QnaTermEditorComponent.\u0275cmp = fesm2022_core["\u0275\u0275defineComponent"]({
                type: QnaTermEditorComponent,
                selectors: [ [ "qna-term-editor" ] ],
                viewQuery: function(rf, ctx) {
                    var _t;
                    1 & rf && fesm2022_core["\u0275\u0275viewQuery"](qna_term_editor_component_c0, 5), 
                    2 & rf && fesm2022_core["\u0275\u0275queryRefresh"](_t = fesm2022_core["\u0275\u0275loadQuery"]()) && (ctx._termsInputElementRef = _t.first);
                },
                inputs: {
                    editorLabel: "editorLabel",
                    terms: "terms",
                    sortDirection: "sortDirection",
                    forceShowSortDirIfAnyForEmptyValue: "forceShowSortDirIfAnyForEmptyValue"
                },
                outputs: {
                    termsUpdated: "termsUpdated",
                    sortDirUpdated: "sortDirUpdated"
                },
                features: [ fesm2022_core["\u0275\u0275InheritDefinitionFeature"] ],
                decls: 6,
                vars: 17,
                consts: [ [ "class", "qnaTermEditor", 4, "ngIf" ], [ 1, "qnaTermEditor" ], [ "class", "editorLabel", "for", "editorContentOverallContainer", 4, "ngIf" ], [ 1, "editorContentOverallContainer" ], [ "editorContentOverallContainer", "" ], [ "customClick", "", 1, "termsAndCountContainer", 3, "ngClass", "singleClickAction", "doubleClickAction" ], [ "type", "text", "spellcheck", "false", 1, "editField", 3, "placeholder", "value", "readonly", "keyup.enter", "keydown.escape", "keyup.escape", "blur", "dragstart" ], [ "termsInput", "" ], [ "class", "moreTermsIndicator", 4, "ngIf" ], [ "class", "divider", "aria-hidden", "true", 4, "ngIf" ], [ "tri-icon-button", "", 3, "pbi-tooltip", "click", 4, "ngIf" ], [ "tri-icon-button", "", 3, "localizeAttr", "click", "keydown.enter", "keyup.enter", 4, "ngIf" ], [ "for", "editorContentOverallContainer", 1, "editorLabel" ], [ 1, "moreTermsIndicator" ], [ "aria-hidden", "true", 1, "divider" ], [ "tri-icon-button", "", 3, "pbi-tooltip", "click" ], [ "tri-svg-icon-16", "", 3, "name" ], [ "tri-icon-button", "", 3, "localizeAttr", "click", "keydown.enter", "keyup.enter" ] ],
                template: function(rf, ctx) {
                    1 & rf && (fesm2022_core["\u0275\u0275template"](0, QnaTermEditorComponent_div_0_Template, 12, 13, "div", 0), 
                    fesm2022_core["\u0275\u0275pipe"](1, "async"), fesm2022_core["\u0275\u0275pipe"](2, "async"), 
                    fesm2022_core["\u0275\u0275pipe"](3, "async"), fesm2022_core["\u0275\u0275pipe"](4, "async"), 
                    fesm2022_core["\u0275\u0275pipe"](5, "async")), 2 & rf && fesm2022_core["\u0275\u0275property"]("ngIf", fesm2022_core["\u0275\u0275pureFunction5"](11, qna_term_editor_component_c3, fesm2022_core["\u0275\u0275pipeBind1"](1, 1, ctx.isEditing$), fesm2022_core["\u0275\u0275pipeBind1"](2, 3, ctx.termsCount$), fesm2022_core["\u0275\u0275pipeBind1"](3, 5, ctx.sortDirection$), fesm2022_core["\u0275\u0275pipeBind1"](4, 7, ctx.sortDirectionTooltip$), fesm2022_core["\u0275\u0275pipeBind1"](5, 9, ctx.termsDisplayString$)));
                },
                dependencies: [ common.NgClass, common.NgIf, localize_attr_directive.b, tri_svg_icon_component.M, custom_click_directive.f, tooltip_directive.i, common.AsyncPipe, localize_pipe.F ],
                styles: [ '[_nghost-%COMP%]{display:block;width:fit-content}.qnaTermEditor[_ngcontent-%COMP%]{height:auto;width:100%;display:flex;flex-direction:column;font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--sm-font-size, 12px);font-weight:var(--font-weight-regular, 400)}.qnaTermEditor[_ngcontent-%COMP%]   .editorLabel[_ngcontent-%COMP%]{margin:0 0 4px}.qnaTermEditor[_ngcontent-%COMP%]   .editorContentOverallContainer[_ngcontent-%COMP%], .qnaTermEditor[_ngcontent-%COMP%]   .editorContentOverallContainer[_ngcontent-%COMP%]   *[_ngcontent-%COMP%]{border-radius:var(--borderRadiusMedium)}.qnaTermEditor[_ngcontent-%COMP%]   .editorContentOverallContainer[_ngcontent-%COMP%]{height:32px;box-sizing:border-box;display:flex;flex-direction:row;align-items:center;border:1px solid var(--globalColorGrey54);padding:0 4px;background-color:var(--colorNeutralBackground1)}.qnaTermEditor[_ngcontent-%COMP%]   .editorContentOverallContainer[_ngcontent-%COMP%]   .termsAndCountContainer[_ngcontent-%COMP%]{padding:0;flex:1;display:flex;flex-direction:row;align-items:center}.qnaTermEditor[_ngcontent-%COMP%]   .editorContentOverallContainer[_ngcontent-%COMP%]   .termsAndCountContainer.allowClick[_ngcontent-%COMP%]{cursor:pointer}.qnaTermEditor[_ngcontent-%COMP%]   .editorContentOverallContainer[_ngcontent-%COMP%]   .termsAndCountContainer.allowClick[_ngcontent-%COMP%]:hover{background-color:var(--globalColorGrey78)}.qnaTermEditor[_ngcontent-%COMP%]   .editorContentOverallContainer[_ngcontent-%COMP%]   .termsAndCountContainer[_ngcontent-%COMP%]   input.editField[_ngcontent-%COMP%]{width:0}.qnaTermEditor[_ngcontent-%COMP%]   .editorContentOverallContainer[_ngcontent-%COMP%]   .termsAndCountContainer[_ngcontent-%COMP%]   .editField[_ngcontent-%COMP%]{flex:1;min-width:50px;border:none;padding:0 4px;line-height:20px;background:transparent;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default;text-overflow:ellipsis;cursor:text}.qnaTermEditor[_ngcontent-%COMP%]   .editorContentOverallContainer[_ngcontent-%COMP%]   .termsAndCountContainer[_ngcontent-%COMP%]   .editField[readonly][_ngcontent-%COMP%]{cursor:unset}.qnaTermEditor[_ngcontent-%COMP%]   .editorContentOverallContainer[_ngcontent-%COMP%]   .termsAndCountContainer[_ngcontent-%COMP%]   .editField[_ngcontent-%COMP%]::placeholder{color:var(--colorNeutralForeground4)}.qnaTermEditor[_ngcontent-%COMP%]   .editorContentOverallContainer[_ngcontent-%COMP%]   .termsAndCountContainer[_ngcontent-%COMP%]   .moreTermsIndicator[_ngcontent-%COMP%]{background:transparent;margin:0;padding:0 4px}.qnaTermEditor[_ngcontent-%COMP%]   .editorContentOverallContainer[_ngcontent-%COMP%]   .divider[_ngcontent-%COMP%]{width:1px;margin:4px;align-self:stretch;background-color:var(--globalColorGrey54)}.qnaTermEditor[_ngcontent-%COMP%]   .editorContentOverallContainer[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{border:none;margin:0;padding:2px;width:24px;height:24px}.qnaTermEditor[_ngcontent-%COMP%]   .editorContentOverallContainer[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{background-color:var(--globalColorGrey78)}' ],
                changeDetection: 0
            }), QnaTermEditorComponent;
        }(rx_component.w), qna_phrasing_segmentControls_component_c0 = function(a0) {
            return {
                control: a0
            };
        };
        function QnaPhrasingSegmentControlsComponent_ng_container_2_ng_container_1_Template(rf, ctx) {
            if (1 & rf && fesm2022_core["\u0275\u0275elementContainer"](0, 7), 2 & rf) {
                var singleControlOrGroup_r4 = fesm2022_core["\u0275\u0275nextContext"]().$implicit;
                fesm2022_core["\u0275\u0275nextContext"]();
                var _r2 = fesm2022_core["\u0275\u0275reference"](6);
                fesm2022_core["\u0275\u0275property"]("ngTemplateOutlet", _r2)("ngTemplateOutletContext", fesm2022_core["\u0275\u0275pureFunction1"](2, qna_phrasing_segmentControls_component_c0, singleControlOrGroup_r4));
            }
        }
        function QnaPhrasingSegmentControlsComponent_ng_container_2_div_2_ng_container_1_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275elementContainer"](1, 7), 
            fesm2022_core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var singleControlInGroup_r9 = ctx.$implicit;
                fesm2022_core["\u0275\u0275nextContext"](3);
                var _r2 = fesm2022_core["\u0275\u0275reference"](6);
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngTemplateOutlet", _r2)("ngTemplateOutletContext", fesm2022_core["\u0275\u0275pureFunction1"](2, qna_phrasing_segmentControls_component_c0, singleControlInGroup_r9));
            }
        }
        function QnaPhrasingSegmentControlsComponent_ng_container_2_div_2_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 8), fesm2022_core["\u0275\u0275template"](1, QnaPhrasingSegmentControlsComponent_ng_container_2_div_2_ng_container_1_Template, 2, 4, "ng-container", 2), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var singleControlOrGroup_r4 = fesm2022_core["\u0275\u0275nextContext"]().$implicit;
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngForOf", singleControlOrGroup_r4);
            }
        }
        function QnaPhrasingSegmentControlsComponent_ng_container_2_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275template"](1, QnaPhrasingSegmentControlsComponent_ng_container_2_ng_container_1_Template, 1, 4, "ng-container", 5), 
            fesm2022_core["\u0275\u0275template"](2, QnaPhrasingSegmentControlsComponent_ng_container_2_div_2_Template, 2, 1, "div", 6), 
            fesm2022_core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var singleControlOrGroup_r4 = ctx.$implicit, ctx_r0 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", !ctx_r0.isArray(singleControlOrGroup_r4)), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", ctx_r0.isArray(singleControlOrGroup_r4));
            }
        }
        var qna_phrasing_segmentControls_component_c1 = function() {
            return {
                tooltipLocalizeDescription: "Delete"
            };
        };
        function QnaPhrasingSegmentControlsComponent_button_4_Template(rf, ctx) {
            if (1 & rf) {
                var _r12 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "button", 9), fesm2022_core["\u0275\u0275listener"]("click", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r12);
                    var ctx_r11 = fesm2022_core["\u0275\u0275nextContext"]();
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r11.onDelete());
                }), fesm2022_core["\u0275\u0275pipe"](1, "localize"), fesm2022_core["\u0275\u0275element"](2, "tri-svg-icon", 10), 
                fesm2022_core["\u0275\u0275elementEnd"]();
            }
            2 & rf && (fesm2022_core["\u0275\u0275property"]("pbi-tooltip", fesm2022_core["\u0275\u0275pureFunction0"](4, qna_phrasing_segmentControls_component_c1)), 
            fesm2022_core["\u0275\u0275attribute"]("aria-label", fesm2022_core["\u0275\u0275pipeBind1"](1, 2, "Delete")));
        }
        var qna_phrasing_segmentControls_component_c2 = function(a0) {
            return {
                afterStringSegment: a0
            };
        };
        function QnaPhrasingSegmentControlsComponent_ng_template_5_span_1_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "span", 14), fesm2022_core["\u0275\u0275text"](1), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var control_r13 = fesm2022_core["\u0275\u0275nextContext"]().control;
                fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction1"](2, qna_phrasing_segmentControls_component_c2, control_r13.afterStringSegment)), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275textInterpolate"](control_r13.label);
            }
        }
        function QnaPhrasingSegmentControlsComponent_ng_template_5_ng_container_2_qna_role_selector_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r21 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "qna-role-selector", 16), fesm2022_core["\u0275\u0275listener"]("entityFieldUpdated", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r21);
                    var control_r13 = fesm2022_core["\u0275\u0275nextContext"](2).control, ctx_r19 = fesm2022_core["\u0275\u0275nextContext"]();
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r19.onRoleSegmentValueUpdated(control_r13.id, $event));
                }), fesm2022_core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var control_r13 = fesm2022_core["\u0275\u0275nextContext"](2).control, ctx_r18 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275property"]("displayTitle", control_r13.label)("initialLinguisticSchema", ctx_r18.initialLinguisticSchema)("fieldsModel", ctx_r18.fieldsModel)("allEntityVariantLabels", ctx_r18.allEntityVariantLabels)("entityField", control_r13.entityField)("entityTermVariant", control_r13.entityTermVariant);
            }
        }
        function QnaPhrasingSegmentControlsComponent_ng_template_5_ng_container_2_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275template"](1, QnaPhrasingSegmentControlsComponent_ng_template_5_ng_container_2_qna_role_selector_1_Template, 1, 6, "qna-role-selector", 15), 
            fesm2022_core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var control_r13 = fesm2022_core["\u0275\u0275nextContext"]().control;
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", !control_r13.hidden);
            }
        }
        function QnaPhrasingSegmentControlsComponent_ng_template_5_ng_container_3_qna_term_editor_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r27 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "qna-term-editor", 18), fesm2022_core["\u0275\u0275listener"]("termsUpdated", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r27);
                    var control_r13 = fesm2022_core["\u0275\u0275nextContext"](2).control, ctx_r25 = fesm2022_core["\u0275\u0275nextContext"]();
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r25.onTermSegmentValueUpdated(control_r13.id, $event));
                })("sortDirUpdated", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r27);
                    var control_r13 = fesm2022_core["\u0275\u0275nextContext"](2).control, ctx_r28 = fesm2022_core["\u0275\u0275nextContext"]();
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r28.onTermSortDirectionUpdated(control_r13.id, $event));
                }), fesm2022_core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var control_r13 = fesm2022_core["\u0275\u0275nextContext"](2).control;
                fesm2022_core["\u0275\u0275propertyInterpolate"]("id", control_r13.id), fesm2022_core["\u0275\u0275property"]("editorLabel", control_r13.label)("terms", control_r13.terms)("sortDirection", control_r13.sortDirection)("forceShowSortDirIfAnyForEmptyValue", control_r13.forceShowSortDirIfAnyForEmptyValue);
            }
        }
        function QnaPhrasingSegmentControlsComponent_ng_template_5_ng_container_3_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275template"](1, QnaPhrasingSegmentControlsComponent_ng_template_5_ng_container_3_qna_term_editor_1_Template, 1, 5, "qna-term-editor", 17), 
            fesm2022_core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var control_r13 = fesm2022_core["\u0275\u0275nextContext"]().control;
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", !control_r13.hidden);
            }
        }
        function QnaPhrasingSegmentControlsComponent_ng_template_5_Template(rf, ctx) {
            1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0, 11), fesm2022_core["\u0275\u0275template"](1, QnaPhrasingSegmentControlsComponent_ng_template_5_span_1_Template, 2, 4, "span", 12), 
            fesm2022_core["\u0275\u0275template"](2, QnaPhrasingSegmentControlsComponent_ng_template_5_ng_container_2_Template, 2, 1, "ng-container", 13), 
            fesm2022_core["\u0275\u0275template"](3, QnaPhrasingSegmentControlsComponent_ng_template_5_ng_container_3_Template, 2, 1, "ng-container", 13), 
            fesm2022_core["\u0275\u0275elementContainerEnd"]()), 2 & rf && (fesm2022_core["\u0275\u0275property"]("ngSwitch", ctx.control.type), 
            fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngSwitchCase", "SimpleString"), 
            fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngSwitchCase", "RoleSelector"), 
            fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngSwitchCase", "TermEditor"));
        }
        function QnaPhrasingSegmentControlsMainComponent_ng_container_2_ng_container_1_Template(rf, ctx) {
            if (1 & rf && fesm2022_core["\u0275\u0275elementContainer"](0, 7), 2 & rf) {
                var singleControlOrGroup_r4 = fesm2022_core["\u0275\u0275nextContext"]().$implicit;
                fesm2022_core["\u0275\u0275nextContext"]();
                var _r2 = fesm2022_core["\u0275\u0275reference"](6);
                fesm2022_core["\u0275\u0275property"]("ngTemplateOutlet", _r2)("ngTemplateOutletContext", fesm2022_core["\u0275\u0275pureFunction1"](2, qna_phrasing_segmentControls_component_c0, singleControlOrGroup_r4));
            }
        }
        function QnaPhrasingSegmentControlsMainComponent_ng_container_2_div_2_ng_container_1_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275elementContainer"](1, 7), 
            fesm2022_core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var singleControlInGroup_r9 = ctx.$implicit;
                fesm2022_core["\u0275\u0275nextContext"](3);
                var _r2 = fesm2022_core["\u0275\u0275reference"](6);
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngTemplateOutlet", _r2)("ngTemplateOutletContext", fesm2022_core["\u0275\u0275pureFunction1"](2, qna_phrasing_segmentControls_component_c0, singleControlInGroup_r9));
            }
        }
        function QnaPhrasingSegmentControlsMainComponent_ng_container_2_div_2_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 8), fesm2022_core["\u0275\u0275template"](1, QnaPhrasingSegmentControlsMainComponent_ng_container_2_div_2_ng_container_1_Template, 2, 4, "ng-container", 2), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var singleControlOrGroup_r4 = fesm2022_core["\u0275\u0275nextContext"]().$implicit;
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngForOf", singleControlOrGroup_r4);
            }
        }
        function QnaPhrasingSegmentControlsMainComponent_ng_container_2_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275template"](1, QnaPhrasingSegmentControlsMainComponent_ng_container_2_ng_container_1_Template, 1, 4, "ng-container", 5), 
            fesm2022_core["\u0275\u0275template"](2, QnaPhrasingSegmentControlsMainComponent_ng_container_2_div_2_Template, 2, 1, "div", 6), 
            fesm2022_core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var singleControlOrGroup_r4 = ctx.$implicit, ctx_r0 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", !ctx_r0.isArray(singleControlOrGroup_r4)), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", ctx_r0.isArray(singleControlOrGroup_r4));
            }
        }
        function QnaPhrasingSegmentControlsMainComponent_button_4_Template(rf, ctx) {
            if (1 & rf) {
                var _r12 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "button", 9), fesm2022_core["\u0275\u0275listener"]("click", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r12);
                    var ctx_r11 = fesm2022_core["\u0275\u0275nextContext"]();
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r11.onDelete());
                }), fesm2022_core["\u0275\u0275pipe"](1, "localize"), fesm2022_core["\u0275\u0275element"](2, "tri-svg-icon", 10), 
                fesm2022_core["\u0275\u0275elementEnd"]();
            }
            2 & rf && (fesm2022_core["\u0275\u0275property"]("pbi-tooltip", fesm2022_core["\u0275\u0275pureFunction0"](4, qna_phrasing_segmentControls_component_c1)), 
            fesm2022_core["\u0275\u0275attribute"]("aria-label", fesm2022_core["\u0275\u0275pipeBind1"](1, 2, "Delete")));
        }
        function QnaPhrasingSegmentControlsMainComponent_ng_template_5_span_1_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "span", 14), fesm2022_core["\u0275\u0275text"](1), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var control_r13 = fesm2022_core["\u0275\u0275nextContext"]().control;
                fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction1"](2, qna_phrasing_segmentControls_component_c2, control_r13.afterStringSegment)), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275textInterpolate"](control_r13.label);
            }
        }
        function QnaPhrasingSegmentControlsMainComponent_ng_template_5_ng_container_2_qna_role_selector_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r21 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "qna-role-selector", 16), fesm2022_core["\u0275\u0275listener"]("entityFieldUpdated", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r21);
                    var control_r13 = fesm2022_core["\u0275\u0275nextContext"](2).control, ctx_r19 = fesm2022_core["\u0275\u0275nextContext"]();
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r19.onRoleSegmentValueUpdated(control_r13.id, $event));
                }), fesm2022_core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var control_r13 = fesm2022_core["\u0275\u0275nextContext"](2).control, ctx_r18 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275property"]("displayTitle", control_r13.label)("initialLinguisticSchema", ctx_r18.initialLinguisticSchema)("fieldsModel", ctx_r18.fieldsModel)("allEntityVariantLabels", ctx_r18.allEntityVariantLabels)("entityField", control_r13.entityField)("entityTermVariant", control_r13.entityTermVariant);
            }
        }
        function QnaPhrasingSegmentControlsMainComponent_ng_template_5_ng_container_2_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275template"](1, QnaPhrasingSegmentControlsMainComponent_ng_template_5_ng_container_2_qna_role_selector_1_Template, 1, 6, "qna-role-selector", 15), 
            fesm2022_core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var control_r13 = fesm2022_core["\u0275\u0275nextContext"]().control;
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", !control_r13.hidden);
            }
        }
        function QnaPhrasingSegmentControlsMainComponent_ng_template_5_ng_container_3_qna_term_editor_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r27 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "qna-term-editor", 18), fesm2022_core["\u0275\u0275listener"]("termsUpdated", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r27);
                    var control_r13 = fesm2022_core["\u0275\u0275nextContext"](2).control, ctx_r25 = fesm2022_core["\u0275\u0275nextContext"]();
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r25.onTermSegmentValueUpdated(control_r13.id, $event));
                })("sortDirUpdated", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r27);
                    var control_r13 = fesm2022_core["\u0275\u0275nextContext"](2).control, ctx_r28 = fesm2022_core["\u0275\u0275nextContext"]();
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r28.onTermSortDirectionUpdated(control_r13.id, $event));
                }), fesm2022_core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var control_r13 = fesm2022_core["\u0275\u0275nextContext"](2).control;
                fesm2022_core["\u0275\u0275propertyInterpolate"]("id", control_r13.id), fesm2022_core["\u0275\u0275property"]("editorLabel", control_r13.label)("terms", control_r13.terms)("sortDirection", control_r13.sortDirection)("forceShowSortDirIfAnyForEmptyValue", control_r13.forceShowSortDirIfAnyForEmptyValue);
            }
        }
        function QnaPhrasingSegmentControlsMainComponent_ng_template_5_ng_container_3_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275template"](1, QnaPhrasingSegmentControlsMainComponent_ng_template_5_ng_container_3_qna_term_editor_1_Template, 1, 5, "qna-term-editor", 17), 
            fesm2022_core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var control_r13 = fesm2022_core["\u0275\u0275nextContext"]().control;
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", !control_r13.hidden);
            }
        }
        function QnaPhrasingSegmentControlsMainComponent_ng_template_5_Template(rf, ctx) {
            1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0, 11), fesm2022_core["\u0275\u0275template"](1, QnaPhrasingSegmentControlsMainComponent_ng_template_5_span_1_Template, 2, 4, "span", 12), 
            fesm2022_core["\u0275\u0275template"](2, QnaPhrasingSegmentControlsMainComponent_ng_template_5_ng_container_2_Template, 2, 1, "ng-container", 13), 
            fesm2022_core["\u0275\u0275template"](3, QnaPhrasingSegmentControlsMainComponent_ng_template_5_ng_container_3_Template, 2, 1, "ng-container", 13), 
            fesm2022_core["\u0275\u0275elementContainerEnd"]()), 2 & rf && (fesm2022_core["\u0275\u0275property"]("ngSwitch", ctx.control.type), 
            fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngSwitchCase", "SimpleString"), 
            fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngSwitchCase", "RoleSelector"), 
            fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngSwitchCase", "TermEditor"));
        }
        var qna_phrasing_segmentControls_component_c3 = '.segmentsContainer[_ngcontent-%COMP%], .segmentsContainer[_nghost-%COMP%], .segmentsContainer   [_nghost-%COMP%]{display:flex;flex-direction:row;flex-wrap:wrap;align-items:flex-start;gap:var(--spacingHorizontalM)}.segmentsContainer[_ngcontent-%COMP%]   .segmentControlsGroup[_ngcontent-%COMP%], .segmentsContainer[_nghost-%COMP%]   .segmentControlsGroup[_ngcontent-%COMP%], .segmentsContainer   [_nghost-%COMP%]   .segmentControlsGroup[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:var(--spacingVerticalXS)}.segmentsContainer[_ngcontent-%COMP%]   .segmentControl[_ngcontent-%COMP%], .segmentsContainer[_nghost-%COMP%]   .segmentControl[_ngcontent-%COMP%], .segmentsContainer   [_nghost-%COMP%]   .segmentControl[_ngcontent-%COMP%]{margin:0;min-width:150px}.segmentsContainer[_ngcontent-%COMP%]   .segmentControl.textSegment[_ngcontent-%COMP%], .segmentsContainer[_nghost-%COMP%]   .segmentControl.textSegment[_ngcontent-%COMP%], .segmentsContainer   [_nghost-%COMP%]   .segmentControl.textSegment[_ngcontent-%COMP%]{min-width:unset}.segmentsContainer[_ngcontent-%COMP%]   .segmentControl.textSegment.afterStringSegment[_ngcontent-%COMP%], .segmentsContainer[_nghost-%COMP%]   .segmentControl.textSegment.afterStringSegment[_ngcontent-%COMP%], .segmentsContainer   [_nghost-%COMP%]   .segmentControl.textSegment.afterStringSegment[_ngcontent-%COMP%]{margin-left:calc(-1 * var(--spacingHorizontalS))}.segmentsContainer[_ngcontent-%COMP%]   .segmentControl.segmentControlWithLabel[_ngcontent-%COMP%], .segmentsContainer[_nghost-%COMP%]   .segmentControl.segmentControlWithLabel[_ngcontent-%COMP%], .segmentsContainer   [_nghost-%COMP%]   .segmentControl.segmentControlWithLabel[_ngcontent-%COMP%]{display:flex;flex-direction:column}.segmentsContainer[_ngcontent-%COMP%]   .segmentControl.segmentControlWithLabel[_ngcontent-%COMP%]   .segmentLabel[_ngcontent-%COMP%], .segmentsContainer[_nghost-%COMP%]   .segmentControl.segmentControlWithLabel[_ngcontent-%COMP%]   .segmentLabel[_ngcontent-%COMP%], .segmentsContainer   [_nghost-%COMP%]   .segmentControl.segmentControlWithLabel[_ngcontent-%COMP%]   .segmentLabel[_ngcontent-%COMP%]{margin-bottom:var(--spacingVerticalXS)}.segmentsContainer[_ngcontent-%COMP%]   qna-role-selector[_ngcontent-%COMP%], .segmentsContainer[_nghost-%COMP%]   qna-role-selector[_ngcontent-%COMP%], .segmentsContainer   [_nghost-%COMP%]   qna-role-selector[_ngcontent-%COMP%]{width:160px}.segmentsContainer[_ngcontent-%COMP%]   qna-term-editor[_ngcontent-%COMP%], .segmentsContainer[_nghost-%COMP%]   qna-term-editor[_ngcontent-%COMP%], .segmentsContainer   [_nghost-%COMP%]   qna-term-editor[_ngcontent-%COMP%]{width:200px}.segmentsContainer[_ngcontent-%COMP%]   pbi-dropdown[_ngcontent-%COMP%]   label[_ngcontent-%COMP%], .segmentsContainer[_nghost-%COMP%]   pbi-dropdown[_ngcontent-%COMP%]   label[_ngcontent-%COMP%], .segmentsContainer   [_nghost-%COMP%]   pbi-dropdown[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--sm-font-size, 12px);font-weight:var(--font-weight-regular, 400)}.qnaSinglePhrasingEditor[_nghost-%COMP%]   .segmentsTopContainer[_ngcontent-%COMP%], .qnaSinglePhrasingEditor   [_nghost-%COMP%]   .segmentsTopContainer[_ngcontent-%COMP%]{margin-top:var(--spacingVerticalM)}.segmentsTopContainer[_ngcontent-%COMP%]{display:flex;gap:var(--spacingHorizontalM)}.segmentsTopContainer[_ngcontent-%COMP%]   .centerVertically[_ngcontent-%COMP%]{align-self:flex-start;margin-top:36px;transform:translateY(-50%)}.segmentsTopContainer[_ngcontent-%COMP%]   .deleteButton[_ngcontent-%COMP%]{display:flex;pointer-events:auto;opacity:1!important}';
        function QnaPhrasingSegmentControlsPrepositionComponent_ng_container_2_ng_container_1_Template(rf, ctx) {
            if (1 & rf && fesm2022_core["\u0275\u0275elementContainer"](0, 7), 2 & rf) {
                var singleControlOrGroup_r4 = fesm2022_core["\u0275\u0275nextContext"]().$implicit;
                fesm2022_core["\u0275\u0275nextContext"]();
                var _r2 = fesm2022_core["\u0275\u0275reference"](6);
                fesm2022_core["\u0275\u0275property"]("ngTemplateOutlet", _r2)("ngTemplateOutletContext", fesm2022_core["\u0275\u0275pureFunction1"](2, qna_phrasing_segmentControls_component_c0, singleControlOrGroup_r4));
            }
        }
        function QnaPhrasingSegmentControlsPrepositionComponent_ng_container_2_div_2_ng_container_1_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275elementContainer"](1, 7), 
            fesm2022_core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var singleControlInGroup_r9 = ctx.$implicit;
                fesm2022_core["\u0275\u0275nextContext"](3);
                var _r2 = fesm2022_core["\u0275\u0275reference"](6);
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngTemplateOutlet", _r2)("ngTemplateOutletContext", fesm2022_core["\u0275\u0275pureFunction1"](2, qna_phrasing_segmentControls_component_c0, singleControlInGroup_r9));
            }
        }
        function QnaPhrasingSegmentControlsPrepositionComponent_ng_container_2_div_2_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 8), fesm2022_core["\u0275\u0275template"](1, QnaPhrasingSegmentControlsPrepositionComponent_ng_container_2_div_2_ng_container_1_Template, 2, 4, "ng-container", 2), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var singleControlOrGroup_r4 = fesm2022_core["\u0275\u0275nextContext"]().$implicit;
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngForOf", singleControlOrGroup_r4);
            }
        }
        function QnaPhrasingSegmentControlsPrepositionComponent_ng_container_2_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275template"](1, QnaPhrasingSegmentControlsPrepositionComponent_ng_container_2_ng_container_1_Template, 1, 4, "ng-container", 5), 
            fesm2022_core["\u0275\u0275template"](2, QnaPhrasingSegmentControlsPrepositionComponent_ng_container_2_div_2_Template, 2, 1, "div", 6), 
            fesm2022_core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var singleControlOrGroup_r4 = ctx.$implicit, ctx_r0 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", !ctx_r0.isArray(singleControlOrGroup_r4)), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", ctx_r0.isArray(singleControlOrGroup_r4));
            }
        }
        function QnaPhrasingSegmentControlsPrepositionComponent_button_4_Template(rf, ctx) {
            if (1 & rf) {
                var _r12 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "button", 9), fesm2022_core["\u0275\u0275listener"]("click", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r12);
                    var ctx_r11 = fesm2022_core["\u0275\u0275nextContext"]();
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r11.onDelete());
                }), fesm2022_core["\u0275\u0275pipe"](1, "localize"), fesm2022_core["\u0275\u0275element"](2, "tri-svg-icon", 10), 
                fesm2022_core["\u0275\u0275elementEnd"]();
            }
            2 & rf && (fesm2022_core["\u0275\u0275property"]("pbi-tooltip", fesm2022_core["\u0275\u0275pureFunction0"](4, qna_phrasing_segmentControls_component_c1)), 
            fesm2022_core["\u0275\u0275attribute"]("aria-label", fesm2022_core["\u0275\u0275pipeBind1"](1, 2, "Delete")));
        }
        function QnaPhrasingSegmentControlsPrepositionComponent_ng_template_5_span_1_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "span", 14), fesm2022_core["\u0275\u0275text"](1), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var control_r13 = fesm2022_core["\u0275\u0275nextContext"]().control;
                fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction1"](2, qna_phrasing_segmentControls_component_c2, control_r13.afterStringSegment)), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275textInterpolate"](control_r13.label);
            }
        }
        function QnaPhrasingSegmentControlsPrepositionComponent_ng_template_5_ng_container_2_qna_role_selector_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r21 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "qna-role-selector", 16), fesm2022_core["\u0275\u0275listener"]("entityFieldUpdated", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r21);
                    var control_r13 = fesm2022_core["\u0275\u0275nextContext"](2).control, ctx_r19 = fesm2022_core["\u0275\u0275nextContext"]();
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r19.onRoleSegmentValueUpdated(control_r13.id, $event));
                }), fesm2022_core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var control_r13 = fesm2022_core["\u0275\u0275nextContext"](2).control, ctx_r18 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275property"]("displayTitle", control_r13.label)("initialLinguisticSchema", ctx_r18.initialLinguisticSchema)("fieldsModel", ctx_r18.fieldsModel)("allEntityVariantLabels", ctx_r18.allEntityVariantLabels)("entityField", control_r13.entityField)("entityTermVariant", control_r13.entityTermVariant);
            }
        }
        function QnaPhrasingSegmentControlsPrepositionComponent_ng_template_5_ng_container_2_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275template"](1, QnaPhrasingSegmentControlsPrepositionComponent_ng_template_5_ng_container_2_qna_role_selector_1_Template, 1, 6, "qna-role-selector", 15), 
            fesm2022_core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var control_r13 = fesm2022_core["\u0275\u0275nextContext"]().control;
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", !control_r13.hidden);
            }
        }
        function QnaPhrasingSegmentControlsPrepositionComponent_ng_template_5_ng_container_3_qna_term_editor_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r27 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "qna-term-editor", 18), fesm2022_core["\u0275\u0275listener"]("termsUpdated", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r27);
                    var control_r13 = fesm2022_core["\u0275\u0275nextContext"](2).control, ctx_r25 = fesm2022_core["\u0275\u0275nextContext"]();
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r25.onTermSegmentValueUpdated(control_r13.id, $event));
                })("sortDirUpdated", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r27);
                    var control_r13 = fesm2022_core["\u0275\u0275nextContext"](2).control, ctx_r28 = fesm2022_core["\u0275\u0275nextContext"]();
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r28.onTermSortDirectionUpdated(control_r13.id, $event));
                }), fesm2022_core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var control_r13 = fesm2022_core["\u0275\u0275nextContext"](2).control;
                fesm2022_core["\u0275\u0275propertyInterpolate"]("id", control_r13.id), fesm2022_core["\u0275\u0275property"]("editorLabel", control_r13.label)("terms", control_r13.terms)("sortDirection", control_r13.sortDirection)("forceShowSortDirIfAnyForEmptyValue", control_r13.forceShowSortDirIfAnyForEmptyValue);
            }
        }
        function QnaPhrasingSegmentControlsPrepositionComponent_ng_template_5_ng_container_3_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275template"](1, QnaPhrasingSegmentControlsPrepositionComponent_ng_template_5_ng_container_3_qna_term_editor_1_Template, 1, 5, "qna-term-editor", 17), 
            fesm2022_core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var control_r13 = fesm2022_core["\u0275\u0275nextContext"]().control;
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", !control_r13.hidden);
            }
        }
        function QnaPhrasingSegmentControlsPrepositionComponent_ng_template_5_Template(rf, ctx) {
            1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0, 11), fesm2022_core["\u0275\u0275template"](1, QnaPhrasingSegmentControlsPrepositionComponent_ng_template_5_span_1_Template, 2, 4, "span", 12), 
            fesm2022_core["\u0275\u0275template"](2, QnaPhrasingSegmentControlsPrepositionComponent_ng_template_5_ng_container_2_Template, 2, 1, "ng-container", 13), 
            fesm2022_core["\u0275\u0275template"](3, QnaPhrasingSegmentControlsPrepositionComponent_ng_template_5_ng_container_3_Template, 2, 1, "ng-container", 13), 
            fesm2022_core["\u0275\u0275elementContainerEnd"]()), 2 & rf && (fesm2022_core["\u0275\u0275property"]("ngSwitch", ctx.control.type), 
            fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngSwitchCase", "SimpleString"), 
            fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngSwitchCase", "RoleSelector"), 
            fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngSwitchCase", "TermEditor"));
        }
        function QnaPhrasingSegmentControlsSemanticSlotComponent_ng_container_2_ng_container_1_Template(rf, ctx) {
            if (1 & rf && fesm2022_core["\u0275\u0275elementContainer"](0, 7), 2 & rf) {
                var singleControlOrGroup_r4 = fesm2022_core["\u0275\u0275nextContext"]().$implicit;
                fesm2022_core["\u0275\u0275nextContext"]();
                var _r2 = fesm2022_core["\u0275\u0275reference"](6);
                fesm2022_core["\u0275\u0275property"]("ngTemplateOutlet", _r2)("ngTemplateOutletContext", fesm2022_core["\u0275\u0275pureFunction1"](2, qna_phrasing_segmentControls_component_c0, singleControlOrGroup_r4));
            }
        }
        function QnaPhrasingSegmentControlsSemanticSlotComponent_ng_container_2_div_2_ng_container_1_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275elementContainer"](1, 7), 
            fesm2022_core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var singleControlInGroup_r9 = ctx.$implicit;
                fesm2022_core["\u0275\u0275nextContext"](3);
                var _r2 = fesm2022_core["\u0275\u0275reference"](6);
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngTemplateOutlet", _r2)("ngTemplateOutletContext", fesm2022_core["\u0275\u0275pureFunction1"](2, qna_phrasing_segmentControls_component_c0, singleControlInGroup_r9));
            }
        }
        function QnaPhrasingSegmentControlsSemanticSlotComponent_ng_container_2_div_2_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 8), fesm2022_core["\u0275\u0275template"](1, QnaPhrasingSegmentControlsSemanticSlotComponent_ng_container_2_div_2_ng_container_1_Template, 2, 4, "ng-container", 2), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var singleControlOrGroup_r4 = fesm2022_core["\u0275\u0275nextContext"]().$implicit;
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngForOf", singleControlOrGroup_r4);
            }
        }
        function QnaPhrasingSegmentControlsSemanticSlotComponent_ng_container_2_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275template"](1, QnaPhrasingSegmentControlsSemanticSlotComponent_ng_container_2_ng_container_1_Template, 1, 4, "ng-container", 5), 
            fesm2022_core["\u0275\u0275template"](2, QnaPhrasingSegmentControlsSemanticSlotComponent_ng_container_2_div_2_Template, 2, 1, "div", 6), 
            fesm2022_core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var singleControlOrGroup_r4 = ctx.$implicit, ctx_r0 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", !ctx_r0.isArray(singleControlOrGroup_r4)), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", ctx_r0.isArray(singleControlOrGroup_r4));
            }
        }
        function QnaPhrasingSegmentControlsSemanticSlotComponent_button_4_Template(rf, ctx) {
            if (1 & rf) {
                var _r12 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "button", 9), fesm2022_core["\u0275\u0275listener"]("click", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r12);
                    var ctx_r11 = fesm2022_core["\u0275\u0275nextContext"]();
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r11.onDelete());
                }), fesm2022_core["\u0275\u0275pipe"](1, "localize"), fesm2022_core["\u0275\u0275element"](2, "tri-svg-icon", 10), 
                fesm2022_core["\u0275\u0275elementEnd"]();
            }
            2 & rf && (fesm2022_core["\u0275\u0275property"]("pbi-tooltip", fesm2022_core["\u0275\u0275pureFunction0"](4, qna_phrasing_segmentControls_component_c1)), 
            fesm2022_core["\u0275\u0275attribute"]("aria-label", fesm2022_core["\u0275\u0275pipeBind1"](1, 2, "Delete")));
        }
        function QnaPhrasingSegmentControlsSemanticSlotComponent_ng_template_5_span_1_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "span", 14), fesm2022_core["\u0275\u0275text"](1), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var control_r13 = fesm2022_core["\u0275\u0275nextContext"]().control;
                fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction1"](2, qna_phrasing_segmentControls_component_c2, control_r13.afterStringSegment)), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275textInterpolate"](control_r13.label);
            }
        }
        function QnaPhrasingSegmentControlsSemanticSlotComponent_ng_template_5_ng_container_2_qna_role_selector_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r21 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "qna-role-selector", 16), fesm2022_core["\u0275\u0275listener"]("entityFieldUpdated", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r21);
                    var control_r13 = fesm2022_core["\u0275\u0275nextContext"](2).control, ctx_r19 = fesm2022_core["\u0275\u0275nextContext"]();
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r19.onRoleSegmentValueUpdated(control_r13.id, $event));
                }), fesm2022_core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var control_r13 = fesm2022_core["\u0275\u0275nextContext"](2).control, ctx_r18 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275property"]("displayTitle", control_r13.label)("initialLinguisticSchema", ctx_r18.initialLinguisticSchema)("fieldsModel", ctx_r18.fieldsModel)("allEntityVariantLabels", ctx_r18.allEntityVariantLabels)("entityField", control_r13.entityField)("entityTermVariant", control_r13.entityTermVariant);
            }
        }
        function QnaPhrasingSegmentControlsSemanticSlotComponent_ng_template_5_ng_container_2_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275template"](1, QnaPhrasingSegmentControlsSemanticSlotComponent_ng_template_5_ng_container_2_qna_role_selector_1_Template, 1, 6, "qna-role-selector", 15), 
            fesm2022_core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var control_r13 = fesm2022_core["\u0275\u0275nextContext"]().control;
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", !control_r13.hidden);
            }
        }
        function QnaPhrasingSegmentControlsSemanticSlotComponent_ng_template_5_ng_container_3_qna_term_editor_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r27 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "qna-term-editor", 18), fesm2022_core["\u0275\u0275listener"]("termsUpdated", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r27);
                    var control_r13 = fesm2022_core["\u0275\u0275nextContext"](2).control, ctx_r25 = fesm2022_core["\u0275\u0275nextContext"]();
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r25.onTermSegmentValueUpdated(control_r13.id, $event));
                })("sortDirUpdated", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r27);
                    var control_r13 = fesm2022_core["\u0275\u0275nextContext"](2).control, ctx_r28 = fesm2022_core["\u0275\u0275nextContext"]();
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r28.onTermSortDirectionUpdated(control_r13.id, $event));
                }), fesm2022_core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var control_r13 = fesm2022_core["\u0275\u0275nextContext"](2).control;
                fesm2022_core["\u0275\u0275propertyInterpolate"]("id", control_r13.id), fesm2022_core["\u0275\u0275property"]("editorLabel", control_r13.label)("terms", control_r13.terms)("sortDirection", control_r13.sortDirection)("forceShowSortDirIfAnyForEmptyValue", control_r13.forceShowSortDirIfAnyForEmptyValue);
            }
        }
        function QnaPhrasingSegmentControlsSemanticSlotComponent_ng_template_5_ng_container_3_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275template"](1, QnaPhrasingSegmentControlsSemanticSlotComponent_ng_template_5_ng_container_3_qna_term_editor_1_Template, 1, 5, "qna-term-editor", 17), 
            fesm2022_core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var control_r13 = fesm2022_core["\u0275\u0275nextContext"]().control;
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", !control_r13.hidden);
            }
        }
        function QnaPhrasingSegmentControlsSemanticSlotComponent_ng_template_5_Template(rf, ctx) {
            1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0, 11), fesm2022_core["\u0275\u0275template"](1, QnaPhrasingSegmentControlsSemanticSlotComponent_ng_template_5_span_1_Template, 2, 4, "span", 12), 
            fesm2022_core["\u0275\u0275template"](2, QnaPhrasingSegmentControlsSemanticSlotComponent_ng_template_5_ng_container_2_Template, 2, 1, "ng-container", 13), 
            fesm2022_core["\u0275\u0275template"](3, QnaPhrasingSegmentControlsSemanticSlotComponent_ng_template_5_ng_container_3_Template, 2, 1, "ng-container", 13), 
            fesm2022_core["\u0275\u0275elementContainerEnd"]()), 2 & rf && (fesm2022_core["\u0275\u0275property"]("ngSwitch", ctx.control.type), 
            fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngSwitchCase", "SimpleString"), 
            fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngSwitchCase", "RoleSelector"), 
            fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngSwitchCase", "TermEditor"));
        }
        var qna_single_phrasing_condition_component_a, QnaPhrasingSegmentControlsComponent = function(_super) {
            function QnaPhrasingSegmentControlsComponent(elementRef, groupingDesignStateService, localizationService) {
                var _this = _super.call(this) || this;
                return _this.elementRef = elementRef, _this.groupingDesignStateService = groupingDesignStateService, 
                _this.localizationService = localizationService, _this.controlsInternal$ = new BehaviorSubject.X(void 0), 
                _this.segmentControlsRegenerationSubject$ = new Subject.xQ, _this.delete = new fesm2022_core.EventEmitter, 
                _this;
            }
            return (0, tslib_es6.__extends)(QnaPhrasingSegmentControlsComponent, _super), QnaPhrasingSegmentControlsComponent.prototype.ngOnInit = function() {
                var _this = this;
                debug.fF.assertValue(this.initialLinguisticSchema, "'initialLinguisticSchema' input binding must be defined"), 
                debug.fF.assertValue(this.fieldsModel, "'fieldsModel' input binding must be defined"), 
                debug.fF.assertValue(this.lsdlEntities, "'lsdlEntities' input binding must be defined"), 
                debug.fF.assertValue(this.allEntityVariantLabels, "'allEntityVariantLabels' input binding must be defined"), 
                debug.fF.assertValue(this.segmentsInfo, "'segments' input binding must be defined"), 
                debug.fF.assertValue(this.getRoleModelFunc, "'getRoleModelFunc' input binding must be defined"), 
                debug.fF.assertValue(this.getTermsFunc, "'getTermsFunc' input binding must be defined"), 
                debug.fF.assertValue(this.validations, "'validations' input binding must be defined"), 
                this.changes$("segmentsInfo").pipe().subscribe(function(info) {
                    _this.segmentControlsRegenerationSubject$.next();
                    var controls = _this.buildUngroupedControlsWithoutLabels(info);
                    _this.controlsInternal$.next(controls), _this.setupLabels(null == info ? void 0 : info.segments);
                }), this.groupProcessedControls$ = this.controlsInternal$.pipe((0, map.U)(function(ungrouped) {
                    return _this.getGroupProcessedControls(ungrouped);
                }));
            }, QnaPhrasingSegmentControlsComponent.prototype.ngOnDestroy = function() {
                return this.segmentControlsRegenerationSubject$.next(), this.segmentControlsRegenerationSubject$.complete(), 
                _super.prototype.ngOnDestroy.call(this);
            }, Object.defineProperty(QnaPhrasingSegmentControlsComponent.prototype, "stateInfo$", {
                get: function() {
                    return this.updater.stateInfo$;
                },
                enumerable: !1,
                configurable: !0
            }), QnaPhrasingSegmentControlsComponent.prototype.setRoleSegmentHidden = function(roleSegmentId, isHidden) {
                var currentControls = this.controlsInternal$.value, matchingSegmentIdx = _.findIndex(currentControls, function(control) {
                    return function(control) {
                        return "RoleSelector" === control.type;
                    }(control) && control.id === roleSegmentId && control.hidden === !isHidden;
                });
                if (matchingSegmentIdx >= 0) {
                    var newSegmentControl = (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, this.controlsInternal$.value[matchingSegmentIdx]), {
                        hidden: isHidden
                    }), newSegments = (0, tslib_es6.__spreadArray)([], currentControls, !0);
                    newSegments.splice(matchingSegmentIdx, 1, newSegmentControl), this.controlsInternal$.next(newSegments);
                }
            }, QnaPhrasingSegmentControlsComponent.prototype.onRoleSegmentValueUpdated = function(segmentId, newRoleField) {
                var _a, _b, update = {
                    type: "RoleSelector",
                    segmentId,
                    newEntity: newRoleField
                };
                this.updater.tryApplyUpdate(update), null === (_b = (_a = this.updater).additionalOnUpdateHandler) || void 0 === _b || _b.call(_a, update);
            }, QnaPhrasingSegmentControlsComponent.prototype.onTermSegmentValueUpdated = function(segmentId, newTerms) {
                var _a, _b, update = {
                    type: "TermEditorValue",
                    segmentId,
                    newTerms
                };
                this.updater.tryApplyUpdate(update), null === (_b = (_a = this.updater).additionalOnUpdateHandler) || void 0 === _b || _b.call(_a, update);
            }, QnaPhrasingSegmentControlsComponent.prototype.onTermSortDirectionUpdated = function(segmentId, newSortDir) {
                var _a, _b, update = {
                    type: "TermEditorSortDir",
                    segmentId,
                    newSortDir
                };
                this.updater.tryApplyUpdate(update), null === (_b = (_a = this.updater).additionalOnUpdateHandler) || void 0 === _b || _b.call(_a, update);
            }, QnaPhrasingSegmentControlsComponent.prototype.onDelete = function() {
                this.delete.emit();
            }, QnaPhrasingSegmentControlsComponent.prototype.isArray = function(value) {
                return _.isArray(value);
            }, QnaPhrasingSegmentControlsComponent.prototype.getRoleTermSegmentValues = function(info) {
                return "model" === info.basedOnValue.type ? this.getRoleTermSegmentValuesBasedOnModel(info.segments, info.basedOnValue.value) : this.getRoleTermSegmentValuesBasedOnSegmentValues(info.segments, info.basedOnValue.value);
            }, QnaPhrasingSegmentControlsComponent.prototype.getRoleTermSegmentValuesBasedOnModel = function(segments, basedOnModel) {
                var _this = this, roleAndTermSegValues = new Map;
                return _.forEach(segments, function(seg) {
                    if ("Role" === seg.type) {
                        var entity = _this.getRoleEntity(basedOnModel, seg.id), entityField = entity ? {
                            entity,
                            fieldExpr: getEntityExpr(entity, null, _this.fieldsModel.model, _this.fieldsModel.schemaName, _this.groupingDesignStateService),
                            role: _this.getRoleModelFunc(basedOnModel, seg.id)
                        } : void 0;
                        roleAndTermSegValues.set(seg.id, entityField);
                    } else "Terms" === seg.type && roleAndTermSegValues.set(seg.id, _this.getTermsFunc(basedOnModel, seg.id));
                }), roleAndTermSegValues;
            }, QnaPhrasingSegmentControlsComponent.prototype.getRoleTermSegmentValuesBasedOnSegmentValues = function(segments, basedOnValues) {
                var roleAndTermSegValues = new Map;
                return _.forEach(segments, function(seg) {
                    if ("Role" === seg.type || "Terms" === seg.type) {
                        var value = tryGetCompatibleValue(seg, basedOnValues);
                        roleAndTermSegValues.set(seg.id, value);
                    }
                }), roleAndTermSegValues;
            }, QnaPhrasingSegmentControlsComponent.prototype.buildUngroupedControlsWithoutLabels = function(segmentsInfo) {
                var roleTermValues = this.getRoleTermSegmentValues(segmentsInfo), potentialHiddenControls = [], controls = _.map(segmentsInfo.segments, function(segment, index) {
                    var _a, _b, segmentType = segment.type;
                    switch (segmentType) {
                      case "SimpleString":
                        return debug.fF.assert(function() {
                            return "contextualPlaceholder" !== segment.label.type;
                        }, "Expect none of the main segment controls label.type is 'contextualPlaceholder', it should've been processed and replaced with observable already."), 
                        {
                            type: "SimpleString",
                            label: "",
                            afterStringSegment: index - 1 >= 0 && "SimpleString" === segmentsInfo.segments[index - 1].type
                        };

                      case "Role":
                        var entityField = roleTermValues.get(segment.id), roleControl = {
                            type: "RoleSelector",
                            id: segment.id,
                            label: "",
                            entityTermVariant: segment.entityTermVariant,
                            entityField
                        };
                        return !(null == entityField ? void 0 : entityField.entity) && (null === (_a = segment.hiddenByDefaultInfo) || void 0 === _a ? void 0 : _a.value) && potentialHiddenControls.push([ roleControl, segment.hiddenByDefaultInfo.unhideTrigger ]), 
                        roleControl;

                      case "Terms":
                        var terms = roleTermValues.get(segment.id), termControl = {
                            type: "TermEditor",
                            id: segment.id,
                            label: "",
                            terms,
                            sortDirection: segment.sortDirection
                        };
                        return _.isEmpty(terms) && (null === (_b = segment.hiddenByDefaultInfo) || void 0 === _b ? void 0 : _b.value) && potentialHiddenControls.push([ termControl, segment.hiddenByDefaultInfo.unhideTrigger ]), 
                        termControl;

                      default:
                        debug.fF.assertNever(segmentType);
                    }
                });
                return _.forEach(potentialHiddenControls, function(_a) {
                    var control, potentialC = _a[0], unhideTrigger = _a[1];
                    "userInsert" === unhideTrigger.type ? potentialC.hidden = !0 : "otherSegmentHasValue" === unhideTrigger.type && ("RoleSelector" === (control = _.find(controls, function(c) {
                        return "SimpleString" !== c.type && c.id === unhideTrigger.triggerSegId;
                    })).type && !control.entityField || "TermEditor" === control.type && _.isEmpty(control.terms)) && (potentialC.hidden = !0, 
                    potentialC.unhideTriggerSegId = unhideTrigger.triggerSegId);
                }), controls;
            }, QnaPhrasingSegmentControlsComponent.prototype.getGroupProcessedControls = function(unGroupedControls) {
                var _this = this;
                if (unGroupedControls) {
                    if (_.isEmpty(this.segmentsInfo.segmentsGroups)) return unGroupedControls;
                    var grouped = [], allGroupMemberSegIds = [], allGroupLeaderSegIds = [], leaderToAllMembersMap = new Map, leaderToGroupLabelMap = new Map;
                    _.forEach(this.segmentsInfo.segmentsGroups, function(groupInfo) {
                        var groupMemberSegIds = groupInfo.members, leaderSegId = _.first(groupMemberSegIds);
                        debug.fF.assert(function() {
                            return _.size(groupMemberSegIds) > 1;
                        }, "Expect each group to have at least 2 items"), allGroupLeaderSegIds.push(leaderSegId), 
                        allGroupMemberSegIds.push.apply(allGroupMemberSegIds, groupMemberSegIds), leaderToAllMembersMap.set(leaderSegId, groupMemberSegIds), 
                        leaderToGroupLabelMap.set(leaderSegId, groupInfo.groupLabelKey);
                    });
                    var notInGroupOrGroupLeaderSegControls = _.filter(unGroupedControls, function(ungrouped) {
                        return "SimpleString" === ungrouped.type || !_.includes(allGroupMemberSegIds, ungrouped.id) || _.includes(allGroupLeaderSegIds, ungrouped.id);
                    }), idToRoleTermControlMappings = {};
                    return _.forEach(unGroupedControls, function(c) {
                        "SimpleString" !== c.type && (idToRoleTermControlMappings[c.id] = c);
                    }), _.forEach(notInGroupOrGroupLeaderSegControls, function(ungrouped) {
                        if ("SimpleString" !== ungrouped.type && _.includes(allGroupLeaderSegIds, ungrouped.id)) {
                            var groupLeaderId = ungrouped.id, groupSegControls = _.map(leaderToAllMembersMap.get(groupLeaderId), function(id) {
                                return idToRoleTermControlMappings[id];
                            });
                            if (_.every(groupSegControls, function(c) {
                                return "SimpleString" === c.type || !c.hidden;
                            })) {
                                var groupLabelKey = leaderToGroupLabelMap.get(groupLeaderId);
                                groupSegControls[0].label = _this.localizationService.get(groupLabelKey);
                            }
                            _.size(_.filter(groupSegControls, function(c) {
                                return "TermEditor" === c.type && !c.hidden;
                            })) > 1 && _.forEach(groupSegControls, function(c) {
                                "TermEditor" === c.type && (c.forceShowSortDirIfAnyForEmptyValue = !0);
                            }), grouped.push(groupSegControls);
                        } else grouped.push(ungrouped);
                    }), grouped;
                }
            }, QnaPhrasingSegmentControlsComponent.prototype.setupLabels = function(segments) {
                var _this = this, destroySubject$ = (0, merge.T)(this.segmentControlsRegenerationSubject$, this.onDestroy$);
                _.forEach(segments, function(segment, index) {
                    var segmentLabel = segment.label;
                    if (debug.fF.assert(function() {
                        return "contextualPlaceholder" !== segmentLabel.type;
                    }, "Expect none of the main segment controls label.type is 'contextualPlaceholder', it should've been processed and replaced with observable already."), 
                    "contextualPlaceholder" !== segmentLabel.type) {
                        var updateControlsFunc = function(newLabel) {
                            var newControls = (0, tslib_es6.__spreadArray)([], _this.controlsInternal$.value, !0);
                            newControls[index] = (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, newControls[index]), {
                                label: newLabel
                            }), _this.controlsInternal$.next(newControls);
                        }, isValueStringKey = "key" === segmentLabel.type;
                        if ("string" == typeof segmentLabel.value) {
                            if (!_.isEmpty(segmentLabel.value)) {
                                var newLabel = isValueStringKey ? _this.localizationService.get(segmentLabel.value) : segmentLabel.value;
                                updateControlsFunc(newLabel);
                            }
                        } else segmentLabel.value.pipe((0, map.U)(function(value) {
                            return isValueStringKey ? _this.localizationService.get(value) : value;
                        }), (0, distinctUntilChanged.x)(), (0, takeUntil.R)(destroySubject$)).subscribe(function(value) {
                            updateControlsFunc(value);
                        });
                    }
                });
            }, QnaPhrasingSegmentControlsComponent.prototype.getRoleEntity = function(lsdlModel, roleSegmentId) {
                var role = this.getRoleModelFunc(lsdlModel, roleSegmentId);
                if (role) return _.find(this.lsdlEntities, function(entity) {
                    return entity.lsdlName === role.entity;
                });
            }, QnaPhrasingSegmentControlsComponent.\u0275fac = function(t) {
                return new (t || QnaPhrasingSegmentControlsComponent)(fesm2022_core["\u0275\u0275directiveInject"](fesm2022_core.ElementRef), fesm2022_core["\u0275\u0275directiveInject"](grouping_design_state_service.AA), fesm2022_core["\u0275\u0275directiveInject"](localization_service.o));
            }, QnaPhrasingSegmentControlsComponent.\u0275cmp = fesm2022_core["\u0275\u0275defineComponent"]({
                type: QnaPhrasingSegmentControlsComponent,
                selectors: [ [ "qna-phrasing-segmentControls" ] ],
                inputs: {
                    initialLinguisticSchema: "initialLinguisticSchema",
                    fieldsModel: "fieldsModel",
                    lsdlEntities: "lsdlEntities",
                    allEntityVariantLabels: "allEntityVariantLabels",
                    segmentsInfo: "segmentsInfo",
                    getRoleModelFunc: "getRoleModelFunc",
                    getTermsFunc: "getTermsFunc",
                    validations: "validations",
                    disallowDelete: "disallowDelete"
                },
                outputs: {
                    delete: "delete"
                },
                features: [ fesm2022_core["\u0275\u0275InheritDefinitionFeature"] ],
                decls: 7,
                vars: 4,
                consts: [ [ 1, "segmentsTopContainer" ], [ 1, "segmentsContainer", "tri-caption1" ], [ 4, "ngFor", "ngForOf" ], [ "tri-icon-button", "", "class", "centerVertically deleteButton", 3, "pbi-tooltip", "click", 4, "ngIf" ], [ "singleControlTemplate", "" ], [ 3, "ngTemplateOutlet", "ngTemplateOutletContext", 4, "ngIf" ], [ "class", "segmentControlsGroup", 4, "ngIf" ], [ 3, "ngTemplateOutlet", "ngTemplateOutletContext" ], [ 1, "segmentControlsGroup" ], [ "tri-icon-button", "", 1, "centerVertically", "deleteButton", 3, "pbi-tooltip", "click" ], [ "tri-svg-icon-16", "", "name", "delete_16_regular" ], [ 3, "ngSwitch" ], [ "class", "segmentControl textSegment tri-caption1 centerVertically", 3, "ngClass", 4, "ngSwitchCase" ], [ 4, "ngSwitchCase" ], [ 1, "segmentControl", "textSegment", "tri-caption1", "centerVertically", 3, "ngClass" ], [ "class", "segmentControl", 3, "displayTitle", "initialLinguisticSchema", "fieldsModel", "allEntityVariantLabels", "entityField", "entityTermVariant", "entityFieldUpdated", 4, "ngIf" ], [ 1, "segmentControl", 3, "displayTitle", "initialLinguisticSchema", "fieldsModel", "allEntityVariantLabels", "entityField", "entityTermVariant", "entityFieldUpdated" ], [ "class", "segmentControl", 3, "id", "editorLabel", "terms", "sortDirection", "forceShowSortDirIfAnyForEmptyValue", "termsUpdated", "sortDirUpdated", 4, "ngIf" ], [ 1, "segmentControl", 3, "id", "editorLabel", "terms", "sortDirection", "forceShowSortDirIfAnyForEmptyValue", "termsUpdated", "sortDirUpdated" ] ],
                template: function(rf, ctx) {
                    1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 0)(1, "div", 1), 
                    fesm2022_core["\u0275\u0275template"](2, QnaPhrasingSegmentControlsComponent_ng_container_2_Template, 3, 2, "ng-container", 2), 
                    fesm2022_core["\u0275\u0275pipe"](3, "async"), fesm2022_core["\u0275\u0275elementEnd"](), 
                    fesm2022_core["\u0275\u0275template"](4, QnaPhrasingSegmentControlsComponent_button_4_Template, 3, 5, "button", 3), 
                    fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275template"](5, QnaPhrasingSegmentControlsComponent_ng_template_5_Template, 4, 4, "ng-template", null, 4, fesm2022_core["\u0275\u0275templateRefExtractor"])), 
                    2 & rf && (fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("ngForOf", fesm2022_core["\u0275\u0275pipeBind1"](3, 2, ctx.groupProcessedControls$)), 
                    fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("ngIf", !ctx.disallowDelete));
                },
                styles: [ qna_phrasing_segmentControls_component_c3 ],
                changeDetection: 0
            }), QnaPhrasingSegmentControlsComponent;
        }(rx_component.w), QnaPhrasingSegmentControlsMainComponent = function(_super) {
            function QnaPhrasingSegmentControlsMainComponent() {
                return null !== _super && _super.apply(this, arguments) || this;
            }
            return (0, tslib_es6.__extends)(QnaPhrasingSegmentControlsMainComponent, _super), 
            QnaPhrasingSegmentControlsMainComponent.prototype.ngOnInit = function() {
                var _this = this;
                _super.prototype.ngOnInit.call(this), this.changes$("segmentsInfo").subscribe(function(info) {
                    var mainSegmentsInfoInput = info;
                    if (_this.updater) debug.fF.assert(function() {
                        return "phrasingTypeChange" === mainSegmentsInfoInput.source;
                    }, "subsequent segmentsInfo update should be from 'phrasingTypeChange'"), _this.updater.tryApplyUpdate({
                        type: "PhrasingType",
                        newType: mainSegmentsInfoInput.phrasingType
                    }); else {
                        debug.fF.assert(function() {
                            return "init" === mainSegmentsInfoInput.source;
                        }, "first segmentsInfo update should be from 'init'"), debug.fF.assert(function() {
                            var _a;
                            return "model" === (null === (_a = info.basedOnValue) || void 0 === _a ? void 0 : _a.type);
                        }, "This is the first time segmentsInfo input binding is set, segmentsInfo.basedOnValue should be from model");
                        var initialRoleAndTermSegValues = _this.getRoleTermSegmentValues(info);
                        _this.updater = new PhrasingUpdaterMain(info.basedOnValue.uid, _this.parentRelationship, mainSegmentsInfoInput.phrasingType, info.basedOnValue.value, initialRoleAndTermSegValues, _this.validations, function(update) {
                            _this.additionalUpdateHandler(update);
                        }), _this.latestValidPhrasing$ = _this.updater.latestValidPhrasing$;
                    }
                });
            }, QnaPhrasingSegmentControlsMainComponent.prototype.additionalUpdateHandler = function(update) {
                if ("TermEditorSortDir" === update.type) this.additionalSortDirUpdateHandler(update); else {
                    var newControls = (0, tslib_es6.__spreadArray)([], this.controlsInternal$.value, !0), newValueNotEmpty_1 = function(update) {
                        var _a;
                        return !("RoleSelector" !== update.type || !(null === (_a = update.newEntity) || void 0 === _a ? void 0 : _a.entity)) || "TermEditorValue" === update.type && !_.isEmpty(update.newTerms);
                    }(update), needEmitNewValue_1 = !1;
                    if (_.forEach(newControls, function(c) {
                        "SimpleString" !== c.type && c.hidden && newValueNotEmpty_1 && c.unhideTriggerSegId === update.segmentId && (c.hidden = !1, 
                        needEmitNewValue_1 = !0);
                    }), needEmitNewValue_1) {
                        var currentValues_1 = this.updater.segementIdToValueMappings;
                        _.forEach(newControls, function(c) {
                            "TermEditor" === c.type ? c.terms = currentValues_1.get(c.id) : "RoleSelector" === c.type && (c.entityField = currentValues_1.get(c.id));
                        }), this.controlsInternal$.next(newControls);
                    }
                }
            }, QnaPhrasingSegmentControlsMainComponent.prototype.additionalSortDirUpdateHandler = function(update) {
                var segmentId = update.segmentId;
                if ("adjective" === segmentId || "antonym" === segmentId) {
                    var newSortDir = update.newSortDir, newControls = (0, tslib_es6.__spreadArray)([], this.controlsInternal$.value, !0), adjectiveControl = _.find(newControls, function(c) {
                        return "SimpleString" !== c.type && "adjective" === c.id;
                    }), antonymControl = _.find(newControls, function(c) {
                        return "SimpleString" !== c.type && "antonym" === c.id;
                    }), thisControl = "adjective" === segmentId ? adjectiveControl : antonymControl, otherControl = "adjective" === segmentId ? antonymControl : adjectiveControl;
                    thisControl.sortDirection = newSortDir, otherControl.sortDirection = 1 === newSortDir ? 2 : 1;
                    var currentValues = this.updater.segementIdToValueMappings, currentAdjectives = currentValues.get("adjective"), currentAntonyms = currentValues.get("antonym");
                    "adjective" === segmentId && 1 !== newSortDir || "antonym" === segmentId && 2 !== newSortDir ? "adjective" === segmentId ? (thisControl.terms = currentAntonyms, 
                    otherControl.terms = currentAdjectives) : (thisControl.terms = currentAdjectives, 
                    otherControl.terms = currentAntonyms) : "adjective" === segmentId ? (thisControl.terms = currentAdjectives, 
                    otherControl.terms = currentAntonyms) : (thisControl.terms = currentAntonyms, otherControl.terms = currentAdjectives), 
                    this.controlsInternal$.next(newControls);
                }
            }, QnaPhrasingSegmentControlsMainComponent.\u0275fac = function() {
                var \u0275QnaPhrasingSegmentControlsMainComponent_BaseFactory;
                return function(t) {
                    return (\u0275QnaPhrasingSegmentControlsMainComponent_BaseFactory || (\u0275QnaPhrasingSegmentControlsMainComponent_BaseFactory = fesm2022_core["\u0275\u0275getInheritedFactory"](QnaPhrasingSegmentControlsMainComponent)))(t || QnaPhrasingSegmentControlsMainComponent);
                };
            }(), QnaPhrasingSegmentControlsMainComponent.\u0275cmp = fesm2022_core["\u0275\u0275defineComponent"]({
                type: QnaPhrasingSegmentControlsMainComponent,
                selectors: [ [ "qna-phrasing-segmentControls-main" ] ],
                inputs: {
                    parentRelationship: "parentRelationship",
                    phrasingType: "phrasingType"
                },
                features: [ fesm2022_core["\u0275\u0275InheritDefinitionFeature"] ],
                decls: 7,
                vars: 4,
                consts: [ [ 1, "segmentsTopContainer" ], [ 1, "segmentsContainer", "tri-caption1" ], [ 4, "ngFor", "ngForOf" ], [ "tri-icon-button", "", "class", "centerVertically deleteButton", 3, "pbi-tooltip", "click", 4, "ngIf" ], [ "singleControlTemplate", "" ], [ 3, "ngTemplateOutlet", "ngTemplateOutletContext", 4, "ngIf" ], [ "class", "segmentControlsGroup", 4, "ngIf" ], [ 3, "ngTemplateOutlet", "ngTemplateOutletContext" ], [ 1, "segmentControlsGroup" ], [ "tri-icon-button", "", 1, "centerVertically", "deleteButton", 3, "pbi-tooltip", "click" ], [ "tri-svg-icon-16", "", "name", "delete_16_regular" ], [ 3, "ngSwitch" ], [ "class", "segmentControl textSegment tri-caption1 centerVertically", 3, "ngClass", 4, "ngSwitchCase" ], [ 4, "ngSwitchCase" ], [ 1, "segmentControl", "textSegment", "tri-caption1", "centerVertically", 3, "ngClass" ], [ "class", "segmentControl", 3, "displayTitle", "initialLinguisticSchema", "fieldsModel", "allEntityVariantLabels", "entityField", "entityTermVariant", "entityFieldUpdated", 4, "ngIf" ], [ 1, "segmentControl", 3, "displayTitle", "initialLinguisticSchema", "fieldsModel", "allEntityVariantLabels", "entityField", "entityTermVariant", "entityFieldUpdated" ], [ "class", "segmentControl", 3, "id", "editorLabel", "terms", "sortDirection", "forceShowSortDirIfAnyForEmptyValue", "termsUpdated", "sortDirUpdated", 4, "ngIf" ], [ 1, "segmentControl", 3, "id", "editorLabel", "terms", "sortDirection", "forceShowSortDirIfAnyForEmptyValue", "termsUpdated", "sortDirUpdated" ] ],
                template: function(rf, ctx) {
                    1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 0)(1, "div", 1), 
                    fesm2022_core["\u0275\u0275template"](2, QnaPhrasingSegmentControlsMainComponent_ng_container_2_Template, 3, 2, "ng-container", 2), 
                    fesm2022_core["\u0275\u0275pipe"](3, "async"), fesm2022_core["\u0275\u0275elementEnd"](), 
                    fesm2022_core["\u0275\u0275template"](4, QnaPhrasingSegmentControlsMainComponent_button_4_Template, 3, 5, "button", 3), 
                    fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275template"](5, QnaPhrasingSegmentControlsMainComponent_ng_template_5_Template, 4, 4, "ng-template", null, 4, fesm2022_core["\u0275\u0275templateRefExtractor"])), 
                    2 & rf && (fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("ngForOf", fesm2022_core["\u0275\u0275pipeBind1"](3, 2, ctx.groupProcessedControls$)), 
                    fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("ngIf", !ctx.disallowDelete));
                },
                dependencies: [ common.NgClass, common.NgForOf, common.NgIf, common.NgTemplateOutlet, common.NgSwitch, common.NgSwitchCase, tri_svg_icon_component.M, tooltip_directive.i, QnaRoleSelectorComponent, QnaTermEditorComponent, common.AsyncPipe, localize_pipe.F ],
                styles: [ qna_phrasing_segmentControls_component_c3 ],
                changeDetection: 0
            }), QnaPhrasingSegmentControlsMainComponent;
        }(QnaPhrasingSegmentControlsComponent), QnaPhrasingSegmentControlsPrepositionComponent = function(_super) {
            function QnaPhrasingSegmentControlsPrepositionComponent() {
                return null !== _super && _super.apply(this, arguments) || this;
            }
            return (0, tslib_es6.__extends)(QnaPhrasingSegmentControlsPrepositionComponent, _super), 
            QnaPhrasingSegmentControlsPrepositionComponent.prototype.ngOnInit = function() {
                _super.prototype.ngOnInit.call(this);
                var initialRoleAndTermSegValues = this.getRoleTermSegmentValues(this.segmentsInfo);
                this.updater = new PhrasingUpdaterPrepPhrase(this.segmentsInfo.basedOnValue.uid, initialRoleAndTermSegValues, this.validations);
            }, QnaPhrasingSegmentControlsPrepositionComponent.\u0275fac = function() {
                var \u0275QnaPhrasingSegmentControlsPrepositionComponent_BaseFactory;
                return function(t) {
                    return (\u0275QnaPhrasingSegmentControlsPrepositionComponent_BaseFactory || (\u0275QnaPhrasingSegmentControlsPrepositionComponent_BaseFactory = fesm2022_core["\u0275\u0275getInheritedFactory"](QnaPhrasingSegmentControlsPrepositionComponent)))(t || QnaPhrasingSegmentControlsPrepositionComponent);
                };
            }(), QnaPhrasingSegmentControlsPrepositionComponent.\u0275cmp = fesm2022_core["\u0275\u0275defineComponent"]({
                type: QnaPhrasingSegmentControlsPrepositionComponent,
                selectors: [ [ "qna-phrasing-segmentControls-preposition" ] ],
                features: [ fesm2022_core["\u0275\u0275InheritDefinitionFeature"] ],
                decls: 7,
                vars: 4,
                consts: [ [ 1, "segmentsTopContainer" ], [ 1, "segmentsContainer", "tri-caption1" ], [ 4, "ngFor", "ngForOf" ], [ "tri-icon-button", "", "class", "centerVertically deleteButton", 3, "pbi-tooltip", "click", 4, "ngIf" ], [ "singleControlTemplate", "" ], [ 3, "ngTemplateOutlet", "ngTemplateOutletContext", 4, "ngIf" ], [ "class", "segmentControlsGroup", 4, "ngIf" ], [ 3, "ngTemplateOutlet", "ngTemplateOutletContext" ], [ 1, "segmentControlsGroup" ], [ "tri-icon-button", "", 1, "centerVertically", "deleteButton", 3, "pbi-tooltip", "click" ], [ "tri-svg-icon-16", "", "name", "delete_16_regular" ], [ 3, "ngSwitch" ], [ "class", "segmentControl textSegment tri-caption1 centerVertically", 3, "ngClass", 4, "ngSwitchCase" ], [ 4, "ngSwitchCase" ], [ 1, "segmentControl", "textSegment", "tri-caption1", "centerVertically", 3, "ngClass" ], [ "class", "segmentControl", 3, "displayTitle", "initialLinguisticSchema", "fieldsModel", "allEntityVariantLabels", "entityField", "entityTermVariant", "entityFieldUpdated", 4, "ngIf" ], [ 1, "segmentControl", 3, "displayTitle", "initialLinguisticSchema", "fieldsModel", "allEntityVariantLabels", "entityField", "entityTermVariant", "entityFieldUpdated" ], [ "class", "segmentControl", 3, "id", "editorLabel", "terms", "sortDirection", "forceShowSortDirIfAnyForEmptyValue", "termsUpdated", "sortDirUpdated", 4, "ngIf" ], [ 1, "segmentControl", 3, "id", "editorLabel", "terms", "sortDirection", "forceShowSortDirIfAnyForEmptyValue", "termsUpdated", "sortDirUpdated" ] ],
                template: function(rf, ctx) {
                    1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 0)(1, "div", 1), 
                    fesm2022_core["\u0275\u0275template"](2, QnaPhrasingSegmentControlsPrepositionComponent_ng_container_2_Template, 3, 2, "ng-container", 2), 
                    fesm2022_core["\u0275\u0275pipe"](3, "async"), fesm2022_core["\u0275\u0275elementEnd"](), 
                    fesm2022_core["\u0275\u0275template"](4, QnaPhrasingSegmentControlsPrepositionComponent_button_4_Template, 3, 5, "button", 3), 
                    fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275template"](5, QnaPhrasingSegmentControlsPrepositionComponent_ng_template_5_Template, 4, 4, "ng-template", null, 4, fesm2022_core["\u0275\u0275templateRefExtractor"])), 
                    2 & rf && (fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("ngForOf", fesm2022_core["\u0275\u0275pipeBind1"](3, 2, ctx.groupProcessedControls$)), 
                    fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("ngIf", !ctx.disallowDelete));
                },
                dependencies: [ common.NgClass, common.NgForOf, common.NgIf, common.NgTemplateOutlet, common.NgSwitch, common.NgSwitchCase, tri_svg_icon_component.M, tooltip_directive.i, QnaRoleSelectorComponent, QnaTermEditorComponent, common.AsyncPipe, localize_pipe.F ],
                styles: [ qna_phrasing_segmentControls_component_c3 ],
                changeDetection: 0
            }), QnaPhrasingSegmentControlsPrepositionComponent;
        }(QnaPhrasingSegmentControlsComponent), QnaPhrasingSegmentControlsSemanticSlotComponent = function(_super) {
            function QnaPhrasingSegmentControlsSemanticSlotComponent() {
                return null !== _super && _super.apply(this, arguments) || this;
            }
            return (0, tslib_es6.__extends)(QnaPhrasingSegmentControlsSemanticSlotComponent, _super), 
            QnaPhrasingSegmentControlsSemanticSlotComponent.prototype.ngOnInit = function() {
                _super.prototype.ngOnInit.call(this);
                var initialRoleAndTermSegValues = this.getRoleTermSegmentValues(this.segmentsInfo);
                this.updater = new PhrasingUpdaterSemanticSlots(this.segmentsInfo.basedOnValue.uid, initialRoleAndTermSegValues, this.validations);
            }, QnaPhrasingSegmentControlsSemanticSlotComponent.\u0275fac = function() {
                var \u0275QnaPhrasingSegmentControlsSemanticSlotComponent_BaseFactory;
                return function(t) {
                    return (\u0275QnaPhrasingSegmentControlsSemanticSlotComponent_BaseFactory || (\u0275QnaPhrasingSegmentControlsSemanticSlotComponent_BaseFactory = fesm2022_core["\u0275\u0275getInheritedFactory"](QnaPhrasingSegmentControlsSemanticSlotComponent)))(t || QnaPhrasingSegmentControlsSemanticSlotComponent);
                };
            }(), QnaPhrasingSegmentControlsSemanticSlotComponent.\u0275cmp = fesm2022_core["\u0275\u0275defineComponent"]({
                type: QnaPhrasingSegmentControlsSemanticSlotComponent,
                selectors: [ [ "qna-phrasing-segmentControls-semanticSlot" ] ],
                features: [ fesm2022_core["\u0275\u0275InheritDefinitionFeature"] ],
                decls: 7,
                vars: 4,
                consts: [ [ 1, "segmentsTopContainer" ], [ 1, "segmentsContainer", "tri-caption1" ], [ 4, "ngFor", "ngForOf" ], [ "tri-icon-button", "", "class", "centerVertically deleteButton", 3, "pbi-tooltip", "click", 4, "ngIf" ], [ "singleControlTemplate", "" ], [ 3, "ngTemplateOutlet", "ngTemplateOutletContext", 4, "ngIf" ], [ "class", "segmentControlsGroup", 4, "ngIf" ], [ 3, "ngTemplateOutlet", "ngTemplateOutletContext" ], [ 1, "segmentControlsGroup" ], [ "tri-icon-button", "", 1, "centerVertically", "deleteButton", 3, "pbi-tooltip", "click" ], [ "tri-svg-icon-16", "", "name", "delete_16_regular" ], [ 3, "ngSwitch" ], [ "class", "segmentControl textSegment tri-caption1 centerVertically", 3, "ngClass", 4, "ngSwitchCase" ], [ 4, "ngSwitchCase" ], [ 1, "segmentControl", "textSegment", "tri-caption1", "centerVertically", 3, "ngClass" ], [ "class", "segmentControl", 3, "displayTitle", "initialLinguisticSchema", "fieldsModel", "allEntityVariantLabels", "entityField", "entityTermVariant", "entityFieldUpdated", 4, "ngIf" ], [ 1, "segmentControl", 3, "displayTitle", "initialLinguisticSchema", "fieldsModel", "allEntityVariantLabels", "entityField", "entityTermVariant", "entityFieldUpdated" ], [ "class", "segmentControl", 3, "id", "editorLabel", "terms", "sortDirection", "forceShowSortDirIfAnyForEmptyValue", "termsUpdated", "sortDirUpdated", 4, "ngIf" ], [ 1, "segmentControl", 3, "id", "editorLabel", "terms", "sortDirection", "forceShowSortDirIfAnyForEmptyValue", "termsUpdated", "sortDirUpdated" ] ],
                template: function(rf, ctx) {
                    1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 0)(1, "div", 1), 
                    fesm2022_core["\u0275\u0275template"](2, QnaPhrasingSegmentControlsSemanticSlotComponent_ng_container_2_Template, 3, 2, "ng-container", 2), 
                    fesm2022_core["\u0275\u0275pipe"](3, "async"), fesm2022_core["\u0275\u0275elementEnd"](), 
                    fesm2022_core["\u0275\u0275template"](4, QnaPhrasingSegmentControlsSemanticSlotComponent_button_4_Template, 3, 5, "button", 3), 
                    fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275template"](5, QnaPhrasingSegmentControlsSemanticSlotComponent_ng_template_5_Template, 4, 4, "ng-template", null, 4, fesm2022_core["\u0275\u0275templateRefExtractor"])), 
                    2 & rf && (fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("ngForOf", fesm2022_core["\u0275\u0275pipeBind1"](3, 2, ctx.groupProcessedControls$)), 
                    fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("ngIf", !ctx.disallowDelete));
                },
                dependencies: [ common.NgClass, common.NgForOf, common.NgIf, common.NgTemplateOutlet, common.NgSwitch, common.NgSwitchCase, tri_svg_icon_component.M, tooltip_directive.i, QnaRoleSelectorComponent, QnaTermEditorComponent, common.AsyncPipe, localize_pipe.F ],
                styles: [ qna_phrasing_segmentControls_component_c3 ],
                changeDetection: 0
            }), QnaPhrasingSegmentControlsSemanticSlotComponent;
        }(QnaPhrasingSegmentControlsComponent), advancedFilterUtils = __webpack_require__(98238), filterUtils = __webpack_require__(42614), filterViewModel = __webpack_require__(20810), conditionToSQLConverter = __webpack_require__(94176), sqExprUtils = __webpack_require__(45334), ReplaySubject = __webpack_require__(33554), tri_dropdown_component = __webpack_require__(20551), tri_dropdown_item_component = __webpack_require__(64716), tri_dropdown_item_menu_directive = __webpack_require__(85721);
        function QnaSinglePhrasingConditionComponent_div_0_div_3_label_8_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "label"), fesm2022_core["\u0275\u0275text"](1), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var vmInfo_r3 = fesm2022_core["\u0275\u0275nextContext"]().ngIf;
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275textInterpolate"](vmInfo_r3.selectedOperator.displayName);
            }
        }
        function QnaSinglePhrasingConditionComponent_div_0_div_3_tri_dropdown_item_9_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "tri-dropdown-item", 14)(1, "label"), 
            fesm2022_core["\u0275\u0275text"](2), fesm2022_core["\u0275\u0275elementEnd"]()()), 
            2 & rf) {
                var operatorOption_r8 = ctx.$implicit;
                fesm2022_core["\u0275\u0275property"]("value", operatorOption_r8), fesm2022_core["\u0275\u0275advance"](2), 
                fesm2022_core["\u0275\u0275textInterpolate"](operatorOption_r8.displayName);
            }
        }
        function QnaSinglePhrasingConditionComponent_div_0_div_3_ng_container_10_div_1_div_5_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 22), fesm2022_core["\u0275\u0275element"](1, "tri-svg-icon", 23), 
            fesm2022_core["\u0275\u0275elementStart"](2, "span", 24), fesm2022_core["\u0275\u0275text"](3), 
            fesm2022_core["\u0275\u0275elementEnd"]()()), 2 & rf) {
                var vmInfo_r3 = fesm2022_core["\u0275\u0275nextContext"](3).ngIf, ctx_r13 = fesm2022_core["\u0275\u0275nextContext"](2);
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("name", "error_circle_20_filled")("alt", ctx_r13.Error), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275textInterpolate"](vmInfo_r3.error);
            }
        }
        var qna_single_phrasing_condition_component_c0 = function(a0) {
            return {
                error: a0
            };
        };
        function QnaSinglePhrasingConditionComponent_div_0_div_3_ng_container_10_div_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r16 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "div", 17), fesm2022_core["\u0275\u0275element"](1, "label", 18), 
                fesm2022_core["\u0275\u0275elementStart"](2, "input", 19, 20), fesm2022_core["\u0275\u0275listener"]("input", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r16);
                    var _r12 = fesm2022_core["\u0275\u0275reference"](3), ctx_r15 = fesm2022_core["\u0275\u0275nextContext"](4);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r15.valueInputChanged.fn(_r12.value));
                }), fesm2022_core["\u0275\u0275pipe"](4, "localize"), fesm2022_core["\u0275\u0275elementEnd"](), 
                fesm2022_core["\u0275\u0275template"](5, QnaSinglePhrasingConditionComponent_div_0_div_3_ng_container_10_div_1_div_5_Template, 4, 3, "div", 21), 
                fesm2022_core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var vmInfo_r3 = fesm2022_core["\u0275\u0275nextContext"](2).ngIf;
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("localize", "Value"), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction1"](10, qna_single_phrasing_condition_component_c0, vmInfo_r3.error))("disabled", vmInfo_r3.disabled)("value", vmInfo_r3.value || "")("placeholder", fesm2022_core["\u0275\u0275pipeBind1"](4, 8, "Qna_Phrasing_Condition_ValueInput_Placeholder")), 
                fesm2022_core["\u0275\u0275attribute"]("aria-invalid", !!vmInfo_r3.error)("aria-disabled", vmInfo_r3.disabled), 
                fesm2022_core["\u0275\u0275advance"](3), fesm2022_core["\u0275\u0275property"]("ngIf", vmInfo_r3.error);
            }
        }
        function QnaSinglePhrasingConditionComponent_div_0_div_3_ng_container_10_div_2_label_5_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "label"), fesm2022_core["\u0275\u0275text"](1), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var valueCategories_r9 = fesm2022_core["\u0275\u0275nextContext"](2).ngIf;
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275textInterpolate"](valueCategories_r9.selectedItem.displayName);
            }
        }
        function QnaSinglePhrasingConditionComponent_div_0_div_3_ng_container_10_div_2_tri_dropdown_item_6_Template(rf, ctx) {
            if (1 & rf) {
                var _r24 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "tri-dropdown-item", 29)(1, "tri-checkbox", 30), 
                fesm2022_core["\u0275\u0275listener"]("click", function($event) {
                    return $event.stopPropagation();
                })("onChange", function($event) {
                    var categoryOption_r21 = fesm2022_core["\u0275\u0275restoreView"](_r24).$implicit, ctx_r23 = fesm2022_core["\u0275\u0275nextContext"](5);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r23.checkUncheckCategoryValue(categoryOption_r21, $event));
                }), fesm2022_core["\u0275\u0275elementStart"](2, "span", 31), fesm2022_core["\u0275\u0275text"](3), 
                fesm2022_core["\u0275\u0275elementEnd"]()()();
            }
            if (2 & rf) {
                var categoryOption_r21 = ctx.$implicit, valueCategories_r9 = fesm2022_core["\u0275\u0275nextContext"](2).ngIf;
                fesm2022_core["\u0275\u0275property"]("value", categoryOption_r21), fesm2022_core["\u0275\u0275advance"](1), 
                fesm2022_core["\u0275\u0275property"]("checked", categoryOption_r21.id === (null == valueCategories_r9.selectedItem ? null : valueCategories_r9.selectedItem.id))("isCompact", !0), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275textInterpolate"](categoryOption_r21.displayName);
            }
        }
        var qna_single_phrasing_condition_component_c1 = function(a0) {
            return {
                disabled: a0
            };
        }, qna_single_phrasing_condition_component_c2 = function() {
            return [];
        };
        function QnaSinglePhrasingConditionComponent_div_0_div_3_ng_container_10_div_2_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 25), fesm2022_core["\u0275\u0275element"](1, "label", 26), 
            fesm2022_core["\u0275\u0275elementStart"](2, "div", 10)(3, "tri-dropdown", 27)(4, "tri-dropdown-trigger"), 
            fesm2022_core["\u0275\u0275template"](5, QnaSinglePhrasingConditionComponent_div_0_div_3_ng_container_10_div_2_label_5_Template, 2, 1, "label", 12), 
            fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275template"](6, QnaSinglePhrasingConditionComponent_div_0_div_3_ng_container_10_div_2_tri_dropdown_item_6_Template, 4, 4, "tri-dropdown-item", 28), 
            fesm2022_core["\u0275\u0275elementEnd"]()()()), 2 & rf) {
                var tmp_5_0, valueCategories_r9 = fesm2022_core["\u0275\u0275nextContext"]().ngIf, vmInfo_r3 = fesm2022_core["\u0275\u0275nextContext"]().ngIf;
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("localize", "Value"), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction1"](6, qna_single_phrasing_condition_component_c1, vmInfo_r3.disabled))("value", valueCategories_r9.selectedItem)("isDisabled", vmInfo_r3.disabled), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("ngIf", valueCategories_r9.selectedItem), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngForOf", null !== (tmp_5_0 = valueCategories_r9.items) && void 0 !== tmp_5_0 ? tmp_5_0 : fesm2022_core["\u0275\u0275pureFunction0"](8, qna_single_phrasing_condition_component_c2));
            }
        }
        function QnaSinglePhrasingConditionComponent_div_0_div_3_ng_container_10_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275template"](1, QnaSinglePhrasingConditionComponent_div_0_div_3_ng_container_10_div_1_Template, 6, 12, "div", 15), 
            fesm2022_core["\u0275\u0275template"](2, QnaSinglePhrasingConditionComponent_div_0_div_3_ng_container_10_div_2_Template, 7, 9, "div", 16), 
            fesm2022_core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var valueCategories_r9 = ctx.ngIf;
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", !valueCategories_r9.items), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", valueCategories_r9.items);
            }
        }
        var qna_single_phrasing_condition_component_c3 = function(a0, a1) {
            return {
                items: a0,
                selectedItem: a1
            };
        };
        function QnaSinglePhrasingConditionComponent_div_0_div_3_Template(rf, ctx) {
            if (1 & rf) {
                var _r29 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "div", 6)(1, "qna-role-selector", 7), 
                fesm2022_core["\u0275\u0275listener"]("entityFieldUpdated", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r29);
                    var ctx_r28 = fesm2022_core["\u0275\u0275nextContext"](2);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r28.onRoleSegmentValueUpdated($event));
                }), fesm2022_core["\u0275\u0275pipe"](2, "localize"), fesm2022_core["\u0275\u0275elementEnd"](), 
                fesm2022_core["\u0275\u0275elementStart"](3, "div", 8), fesm2022_core["\u0275\u0275element"](4, "label", 9), 
                fesm2022_core["\u0275\u0275elementStart"](5, "div", 10)(6, "tri-dropdown", 11), 
                fesm2022_core["\u0275\u0275listener"]("valueChange", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r29);
                    var ctx_r30 = fesm2022_core["\u0275\u0275nextContext"](2);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r30.onOperatorChanged($event));
                }), fesm2022_core["\u0275\u0275elementStart"](7, "tri-dropdown-trigger"), fesm2022_core["\u0275\u0275template"](8, QnaSinglePhrasingConditionComponent_div_0_div_3_label_8_Template, 2, 1, "label", 12), 
                fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275template"](9, QnaSinglePhrasingConditionComponent_div_0_div_3_tri_dropdown_item_9_Template, 3, 2, "tri-dropdown-item", 13), 
                fesm2022_core["\u0275\u0275elementEnd"]()()(), fesm2022_core["\u0275\u0275template"](10, QnaSinglePhrasingConditionComponent_div_0_div_3_ng_container_10_Template, 3, 2, "ng-container", 12), 
                fesm2022_core["\u0275\u0275pipe"](11, "async"), fesm2022_core["\u0275\u0275pipe"](12, "async"), 
                fesm2022_core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var tmp_14_0, vmInfo_r3 = ctx.ngIf, ctx_r1 = fesm2022_core["\u0275\u0275nextContext"](2);
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("displayTitle", fesm2022_core["\u0275\u0275pipeBind1"](2, 16, "Field"))("initialLinguisticSchema", ctx_r1.initialLinguisticSchema)("fieldsModel", ctx_r1.fieldsModel)("allEntityVariantLabels", ctx_r1.allEntityVariantLabels)("entityField", vmInfo_r3.entityField)("entityTermVariant", ctx_r1.entityTermVariant)("alwaysAllowAggregate", !0)("aggregatesConstraint", ctx_r1.aggregatesConstraint)("specialAllowingSettings", ctx_r1.specialAllowingFieldSettings), 
                fesm2022_core["\u0275\u0275advance"](3), fesm2022_core["\u0275\u0275property"]("localize", "Operator"), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction1"](22, qna_single_phrasing_condition_component_c1, vmInfo_r3.disabled))("value", vmInfo_r3.selectedOperator)("isDisabled", vmInfo_r3.disabled), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("ngIf", vmInfo_r3.selectedOperator), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngForOf", null !== (tmp_14_0 = vmInfo_r3.operators) && void 0 !== tmp_14_0 ? tmp_14_0 : fesm2022_core["\u0275\u0275pureFunction0"](24, qna_single_phrasing_condition_component_c2)), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", fesm2022_core["\u0275\u0275pureFunction2"](25, qna_single_phrasing_condition_component_c3, fesm2022_core["\u0275\u0275pipeBind1"](11, 18, null == vmInfo_r3.value ? null : vmInfo_r3.value.categories$), fesm2022_core["\u0275\u0275pipeBind1"](12, 20, null == vmInfo_r3.value ? null : vmInfo_r3.value.selectedCategory$)));
            }
        }
        var qna_single_phrasing_condition_component_c4 = function() {
            return {
                tooltipLocalizeDescription: "Delete"
            };
        };
        function QnaSinglePhrasingConditionComponent_div_0_button_10_Template(rf, ctx) {
            if (1 & rf) {
                var _r32 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "button", 32), fesm2022_core["\u0275\u0275listener"]("click", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r32);
                    var ctx_r31 = fesm2022_core["\u0275\u0275nextContext"](2);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r31.onDeleteInstance());
                }), fesm2022_core["\u0275\u0275pipe"](1, "localize"), fesm2022_core["\u0275\u0275element"](2, "tri-svg-icon", 33), 
                fesm2022_core["\u0275\u0275elementEnd"]();
            }
            2 & rf && (fesm2022_core["\u0275\u0275property"]("pbi-tooltip", fesm2022_core["\u0275\u0275pureFunction0"](4, qna_single_phrasing_condition_component_c4)), 
            fesm2022_core["\u0275\u0275attribute"]("aria-label", fesm2022_core["\u0275\u0275pipeBind1"](1, 2, "Delete")));
        }
        var qna_single_phrasing_condition_component_c5 = function(a0, a1, a2, a3, a4, a5) {
            return {
                entityField: a0,
                operators: a1,
                selectedOperator: a2,
                disabled: a3,
                value: a4,
                error: a5
            };
        };
        function QnaSinglePhrasingConditionComponent_div_0_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 1), fesm2022_core["\u0275\u0275element"](1, "label", 2), 
            fesm2022_core["\u0275\u0275elementStart"](2, "div", 3), fesm2022_core["\u0275\u0275template"](3, QnaSinglePhrasingConditionComponent_div_0_div_3_Template, 13, 28, "div", 4), 
            fesm2022_core["\u0275\u0275pipe"](4, "async"), fesm2022_core["\u0275\u0275pipe"](5, "async"), 
            fesm2022_core["\u0275\u0275pipe"](6, "async"), fesm2022_core["\u0275\u0275pipe"](7, "async"), 
            fesm2022_core["\u0275\u0275pipe"](8, "async"), fesm2022_core["\u0275\u0275pipe"](9, "async"), 
            fesm2022_core["\u0275\u0275template"](10, QnaSinglePhrasingConditionComponent_div_0_button_10_Template, 3, 5, "button", 5), 
            fesm2022_core["\u0275\u0275elementEnd"]()()), 2 & rf) {
                var ctx_r0 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("localize", "Condition"), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("ngIf", fesm2022_core["\u0275\u0275pureFunction6"](15, qna_single_phrasing_condition_component_c5, fesm2022_core["\u0275\u0275pipeBind1"](4, 3, ctx_r0.viewModel.entityField$), fesm2022_core["\u0275\u0275pipeBind1"](5, 5, ctx_r0.viewModel.operators$), fesm2022_core["\u0275\u0275pipeBind1"](6, 7, ctx_r0.viewModel.selectedOperator$), fesm2022_core["\u0275\u0275pipeBind1"](7, 9, ctx_r0.viewModel.disabled$), fesm2022_core["\u0275\u0275pipeBind1"](8, 11, ctx_r0.viewModel.value$), fesm2022_core["\u0275\u0275pipeBind1"](9, 13, ctx_r0.viewModel.valueError$))), 
                fesm2022_core["\u0275\u0275advance"](7), fesm2022_core["\u0275\u0275property"]("ngIf", !ctx_r0.disallowDelete);
            }
        }
        var luciaOperatorToFilterOperatorMappings = ((qna_single_phrasing_condition_component_a = {}).Equals = 9, 
        qna_single_phrasing_condition_component_a.NotEquals = 10, qna_single_phrasing_condition_component_a.GreaterThan = 3, 
        qna_single_phrasing_condition_component_a.LessThan = 1, qna_single_phrasing_condition_component_a.GreaterThanOrEquals = 4, 
        qna_single_phrasing_condition_component_a.LessThanOrEquals = 2, qna_single_phrasing_condition_component_a.Contains = 5, 
        qna_single_phrasing_condition_component_a.NotContains = 6, qna_single_phrasing_condition_component_a.StartsWith = 7, 
        qna_single_phrasing_condition_component_a.NotStartsWith = 8, qna_single_phrasing_condition_component_a), filterOperatorToLuciaOperatorMappings = _.reduce(luciaOperatorToFilterOperatorMappings, function(result, entryValue, entryKey) {
            return result[entryValue] = entryKey, result;
        }, {}), QnaSinglePhrasingConditionComponent = function(_super) {
            function QnaSinglePhrasingConditionComponent(aggrOps, groupingDesignStateService, localizationService) {
                var _this = _super.call(this) || this;
                return _this.aggrOps = aggrOps, _this.groupingDesignStateService = groupingDesignStateService, 
                _this.localizationService = localizationService, _this.deleteInstance = new fesm2022_core.EventEmitter, 
                _this.specialAllowingFieldSettings = {
                    table: {
                        allowed: !0,
                        restrictedAggregates: [ "Count" ]
                    },
                    hierarchy: {
                        allowed: !1
                    }
                }, _this.entityTermVariant = TermVariantFlags.SentenceCase, _this.valueInputChanged = _this.createEventAdapter(), 
                _this.onConditionInputBindingChange$ = new Subject.xQ, _this.stateInfoInternal$ = new ReplaySubject.t, 
                _this.filterOperatorFactory = new advancedFilterUtils.Vl(localizationService), _this;
            }
            return (0, tslib_es6.__extends)(QnaSinglePhrasingConditionComponent, _super), QnaSinglePhrasingConditionComponent.prototype.ngOnInit = function() {
                var _this = this;
                debug.fF.assertValue(this.initialLinguisticSchema, "'initialLinguisticSchema' input binding must be defined"), 
                debug.fF.assertValue(this.fieldsModel, "'fieldsModel' input binding must be defined"), 
                debug.fF.assertValue(this.lsdlEntities, "'lsdlEntities' input binding must be defined"), 
                debug.fF.assertValue(this.allEntityVariantLabels, "'allEntityVariantLabels' input binding must be defined"), 
                debug.fF.assertAnyValue(this.fromConditions, "'fromConditions' input binding is allowed to be undefined"), 
                this.aggregatesConstraint = _.map([ "None", "Sum", "Average", "Count", "Min", "Max", "Median", "Variance", "StandardDeviation" ], function(agg) {
                    return lsdlConditionAggregateToQueryAggregateFunc(agg);
                }), this.changes$("fromConditions").pipe((0, tap.b)(function(_) {
                    _this.onConditionInputBindingChange$.next();
                })).subscribe(function(conditions) {
                    var _a;
                    debug.fF.assert(function() {
                        return _.size(conditions) <= 1;
                    }, "expect at most 1 condition right now"), _this.uid = null === (_a = _.first(conditions)) || void 0 === _a ? void 0 : _a.uid;
                    var newSingleInternalVM = _this.buildSingleConditionVMInternal(_.first(conditions)), newSingleVM = _this.buildSingleConditionVM(newSingleInternalVM);
                    _this.viewModelInternal = newSingleInternalVM, _this.viewModel = newSingleVM;
                }), this.valueInputChanged.$.pipe((0, debounceTime.b)(200)).subscribe(function(value) {
                    _this.viewModelInternal.valueInfo$.next({
                        value,
                        source: "userInput"
                    });
                }), this.viewModelInternal.valueInfo$.pipe().subscribe(function(valueInfo) {
                    var stateSource;
                    _this.updateValidLsdlValue(valueInfo.value), "userInput" === valueInfo.source ? stateSource = "conditionValueUpdate" : "init" === valueInfo.source ? stateSource = "other" : "roleUpdate" === valueInfo.source ? stateSource = "roleUpdate" : debug.fF.assertNever(valueInfo.source), 
                    _this.emiteNewGroupStateInfo(stateSource, "init" === valueInfo.source);
                });
            }, QnaSinglePhrasingConditionComponent.prototype.updateValidLsdlValue = function(value) {
                var _a, _this = this;
                if (isCategoricalValueInfo(value)) this.updateValidLsdlValueFromCategory(value.selectedCategory$.value); else {
                    var validCondition = this.validateAndGetValidCondition(value);
                    if (validCondition) {
                        var valueType_1 = filterUtils.l.getValueType(null === (_a = this.viewModelInternal.entityField$.value) || void 0 === _a ? void 0 : _a.fieldExpr, this.fieldsModel.schema), valueExpr = (0, 
                        conditionToSQLConverter.uk)(validCondition, valueType_1);
                        if (null == valueExpr) debug.fF.assert(function() {
                            return !_this.viewModelInternal.valueRequired$.value;
                        }, "condition is valid but valueExpr is null, then valueRequired must be false"), 
                        this.viewModelInternal.valueRequired$.value || (valueType_1.numeric ? this.viewModelInternal.validLsdlValue$.next({
                            Number: [ null ]
                        }) : valueType_1.text ? this.viewModelInternal.validLsdlValue$.next({
                            Text: [ null ]
                        }) : debug.fF.assertFail("valid value from input field, should be either number or text")); else if ((0, 
                        sqExprStaticMembers.S9)(valueExpr)) {
                            debug.fF.assert(function() {
                                return valueType_1.numeric;
                            }, "Condition valueExpr isConstantNumeric, valueType of the filed should be numeric");
                            var numericValue = sqExpr.jz.getNumericValue(valueExpr);
                            this.viewModelInternal.validLsdlValue$.next({
                                Number: [ numericValue ]
                            });
                        } else if ((0, sqExprStaticMembers.AW)(valueExpr)) {
                            var stringValue = sqExpr.jz.getTextValue(valueExpr);
                            this.viewModelInternal.validLsdlValue$.next({
                                Text: [ stringValue ]
                            });
                        } else debug.fF.assertFail("valid value from input field, should be either number or text");
                    } else this.viewModelInternal.validLsdlValue$.next(void 0);
                }
            }, QnaSinglePhrasingConditionComponent.prototype.ngOnDestroy = function() {
                return this.onConditionInputBindingChange$.next(), this.onConditionInputBindingChange$.complete(), 
                _super.prototype.ngOnDestroy.call(this);
            }, Object.defineProperty(QnaSinglePhrasingConditionComponent.prototype, "stateInfo$", {
                get: function() {
                    return this.stateInfoInternal$.pipe((0, takeUntil.R)(this.onDestroy$));
                },
                enumerable: !1,
                configurable: !0
            }), QnaSinglePhrasingConditionComponent.prototype.onOperatorChanged = function(operator) {
                this.viewModelInternal.selectedOperator$.next(operator), this.updateValidLsdlValue(this.viewModelInternal.valueInfo$.value.value), 
                this.emiteNewGroupStateInfo("conditionOperatorUpate", !1);
            }, QnaSinglePhrasingConditionComponent.prototype.checkUncheckCategoryValue = function(category, toCheck) {
                var newSelectedCategory = toCheck ? category : void 0;
                this.viewModelInternal.valueInfo$.value.value.selectedCategory$.next(newSelectedCategory), 
                this.updateValidLsdlValueFromCategory(newSelectedCategory), this.emiteNewGroupStateInfo("conditionValueUpdate", !1);
            }, QnaSinglePhrasingConditionComponent.prototype.onRoleSegmentValueUpdated = function(newEntityField) {
                var _a, currentVM = this.viewModelInternal;
                this.updateSingleViewModelInfo(currentVM, newEntityField, null === (_a = currentVM.selectedOperator$.value) || void 0 === _a ? void 0 : _a.operator, "first", void 0, "roleUpdate");
            }, QnaSinglePhrasingConditionComponent.prototype.onDeleteInstance = function() {
                this.deleteInstance.emit(0);
            }, QnaSinglePhrasingConditionComponent.prototype.buildSingleConditionVMInternal = function(condition) {
                var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q;
                if (condition) {
                    var entityName = "model" === condition.type ? null === (_b = null === (_a = condition.value) || void 0 === _a ? void 0 : _a.target) || void 0 === _b ? void 0 : _b.entity : null === (_e = null === (_d = null === (_c = condition.value) || void 0 === _c ? void 0 : _c.entity) || void 0 === _d ? void 0 : _d.entity) || void 0 === _e ? void 0 : _e.lsdlName, role = "model" === condition.type ? null === (_f = condition.value) || void 0 === _f ? void 0 : _f.target : null === (_h = null === (_g = condition.value) || void 0 === _g ? void 0 : _g.entity) || void 0 === _h ? void 0 : _h.role, aggregate = "model" === condition.type ? lsdlConditionAggregateToQueryAggregateFunc(null !== (_k = null === (_j = condition.value) || void 0 === _j ? void 0 : _j.aggregation) && void 0 !== _k ? _k : "None") : null === (_l = condition.value) || void 0 === _l ? void 0 : _l.aggregate, entity = entityName ? _.find(this.lsdlEntities, function(lsdlEntity) {
                        return lsdlEntity.lsdlName === entityName;
                    }) : void 0, entityExpr = entity ? getEntityExpr(entity, aggregate, this.fieldsModel.model, this.fieldsModel.schemaName, this.groupingDesignStateService) : void 0, entityField = entity && entityExpr ? {
                        entity,
                        fieldExpr: entityExpr,
                        role
                    } : void 0, vm = {
                        entityField$: new BehaviorSubject.X(entityField),
                        operators$: new BehaviorSubject.X(void 0),
                        selectedOperator$: new BehaviorSubject.X(void 0),
                        valueRequired$: new BehaviorSubject.X(void 0),
                        valueError$: new BehaviorSubject.X(void 0),
                        disabled$: new BehaviorSubject.X(void 0),
                        valueInfo$: new BehaviorSubject.X(void 0),
                        validLsdlValue$: new BehaviorSubject.X(void 0)
                    };
                    return vm.selectedOperator$.pipe().subscribe(function(op) {
                        var conditionOp = null == op ? void 0 : op.operator;
                        vm.valueRequired$.next(!!conditionOp && (0, advancedFilterUtils.AJ)(luciaOperatorToFilterOperatorMappings[conditionOp]));
                    }), this.updateSingleViewModelInfo(vm, entityField, null === (_m = condition.value) || void 0 === _m ? void 0 : _m.operator, void 0, "model" === condition.type ? null === (_o = condition.value) || void 0 === _o ? void 0 : _o.value : null === (_q = null === (_p = condition.value) || void 0 === _p ? void 0 : _p.value) || void 0 === _q ? void 0 : _q.stringForm, "init"), 
                    vm;
                }
            }, QnaSinglePhrasingConditionComponent.prototype.buildSingleConditionVM = function(vmInternal) {
                var destroy$ = (0, merge.T)(this.onConditionInputBindingChange$, this.onDestroy$);
                return {
                    entityField$: vmInternal.entityField$.pipe((0, takeUntil.R)(destroy$)),
                    operators$: vmInternal.operators$.pipe((0, distinctUntilChanged.x)(function(prevOps, currOps) {
                        return _.isEmpty(_.xor(prevOps, currOps));
                    }), (0, takeUntil.R)(destroy$)),
                    selectedOperator$: vmInternal.selectedOperator$.pipe((0, distinctUntilChanged.x)(function(prev, curr) {
                        return (null == prev ? void 0 : prev.operator) === (null == curr ? void 0 : curr.operator);
                    }), (0, takeUntil.R)(destroy$)),
                    valueRequired$: vmInternal.valueRequired$.pipe((0, takeUntil.R)(destroy$)),
                    disabled$: vmInternal.disabled$.pipe((0, distinctUntilChanged.x)(), (0, takeUntil.R)(destroy$)),
                    value$: vmInternal.valueInfo$.pipe((0, map.U)(function(valueInfo) {
                        var value = valueInfo.value;
                        if (value) return "string" == typeof value ? value : {
                            categories$: value.categories$.pipe((0, distinctUntilChanged.x)(function(prev, curr) {
                                return _.isEmpty(_.xor(prev, curr));
                            }), (0, takeUntil.R)(destroy$)),
                            selectedCategory$: value.selectedCategory$.pipe((0, distinctUntilChanged.x)(function(prev, curr) {
                                return (null == prev ? void 0 : prev.id) === (null == curr ? void 0 : curr.id);
                            }), (0, takeUntil.R)(destroy$))
                        };
                    })),
                    valueError$: vmInternal.valueError$.pipe((0, distinctUntilChanged.x)(), (0, takeUntil.R)(destroy$))
                };
            }, QnaSinglePhrasingConditionComponent.prototype.updateSingleViewModelInfo = function(vmToUpdate, entityField, trySelectOperator, defaultSelectOperator, value, valueUpdateSource) {
                debug.fF.assertValue(vmToUpdate, "expect vmToUpdate is defined"), vmToUpdate.entityField$.next(entityField);
                var valueType = (null == entityField ? void 0 : entityField.fieldExpr) ? filterUtils.l.getValueType(entityField.fieldExpr, this.fieldsModel.schema) : void 0, fieldSupported = function(valueType) {
                    return !!valueType && (valueType.bool || valueType.text || valueType.integer || valueType.numeric);
                }(valueType), applicableOperators = fieldSupported ? function(expr, schema, aggrOps, filterOperatorFactory) {
                    var _a;
                    if (expr) {
                        var valueType = expr ? filterUtils.l.getValueType(expr, schema) : void 0;
                        if (null == valueType ? void 0 : valueType.bool) return [ {
                            operator: "Equals",
                            displayName: "is"
                        } ];
                        var parameterMetadata = sqExprUtils.m.getConceptualParameterMetadata(expr, schema), filterOperators = null === (_a = filterOperatorFactory.tryGetExprFilterOperators(expr, schema, aggrOps, 1 === (null == parameterMetadata ? void 0 : parameterMetadata.kind))) || void 0 === _a ? void 0 : _a.operators;
                        return _.map(filterOperators, function(filterOp) {
                            return {
                                operator: filterOperatorToLuciaOperatorMappings[filterOp.value],
                                displayName: filterOp.label
                            };
                        }).filter(function(cop) {
                            return null != cop.operator;
                        });
                    }
                }(entityField.fieldExpr, this.fieldsModel.schema, this.aggrOps, this.filterOperatorFactory) : void 0;
                vmToUpdate.operators$.next(applicableOperators);
                var lsdlValue, matchingApplicableOperator = trySelectOperator ? _.find(applicableOperators, function(op) {
                    return op.operator === trySelectOperator;
                }) : void 0;
                if (vmToUpdate.selectedOperator$.next(matchingApplicableOperator || ("first" === defaultSelectOperator ? _.first(applicableOperators) : void 0)), 
                vmToUpdate.disabled$.next(!1 === fieldSupported || _.isEmpty(applicableOperators)), 
                vmToUpdate.valueError$.next((null == entityField ? void 0 : entityField.fieldExpr) && !1 === fieldSupported ? "Support text/boolean/numeric fields only" : void 0), 
                null == valueType ? void 0 : valueType.bool) {
                    debug.fF.assert(function() {
                        return !(0, filterViewModel.yg)(valueType, !1);
                    }, "Expect advancedFilter is not supported for boolean field, did this assumption change?");
                    var booleanValue_1, categories = [ {
                        id: "true",
                        displayName: this.localizationService.get("BooleanTrue")
                    }, {
                        id: "false",
                        displayName: this.localizationService.get("BooleanFalse")
                    } ];
                    null != value && ("string" == typeof value ? (debug.fF.assert(function() {
                        return "true" === value || "false" === value;
                    }, "Expect string value of boolean field is either 'true' or 'false'"), booleanValue_1 = Boolean(value)) : isLsdlValueBooleanValues(value) && (debug.fF.assert(function() {
                        return _.size(value.Boolean) <= 1;
                    }, "Expect when value is in type {Boolean: BooleanValues}, it either is null or contains only one value"), 
                    booleanValue_1 = _.first(value.Boolean))), vmToUpdate.valueInfo$.next({
                        value: {
                            categories$: new BehaviorSubject.X(categories),
                            selectedCategory$: new BehaviorSubject.X(_.find(categories, function(c) {
                                return Boolean(c.id) === booleanValue_1;
                            }))
                        },
                        source: valueUpdateSource
                    });
                } else {
                    debug.fF.assert(function() {
                        return !valueType || (0, filterViewModel.yg)(valueType, !1);
                    }, valueType ? "Expect advancedFilter is supported for field ".concat(null == entityField ? void 0 : entityField.entity, ". Check its value type and recent change on such assumption.") : "");
                    var stringValue = "string" == typeof value ? value : (lsdlValue = value) ? function(lsdlValue) {
                        return null == lsdlValue ? void 0 : lsdlValue.hasOwnProperty("Text");
                    }(lsdlValue) ? _.first(_.map(lsdlValue.Text, function(val) {
                        return val;
                    })) : function(lsdlValue) {
                        return null == lsdlValue ? void 0 : lsdlValue.hasOwnProperty("Number");
                    }(lsdlValue) ? _.first(_.map(lsdlValue.Number, function(val) {
                        return val.toString();
                    })) : isLsdlValueBooleanValues(lsdlValue) ? _.first(_.map(lsdlValue.Boolean, function(val) {
                        return val.toString();
                    })) : void 0 : "";
                    vmToUpdate.valueInfo$.next({
                        value: stringValue,
                        source: valueUpdateSource
                    });
                }
            }, QnaSinglePhrasingConditionComponent.prototype.validateAndGetValidCondition = function(newValue) {
                var _a, _b, _c, _this = this, currentVm = this.viewModelInternal, forExpr = null === (_a = currentVm.entityField$.value) || void 0 === _a ? void 0 : _a.fieldExpr;
                if (forExpr) {
                    var operator = null === (_c = null === (_b = null == currentVm ? void 0 : currentVm.selectedOperator$) || void 0 === _b ? void 0 : _b.value) || void 0 === _c ? void 0 : _c.operator, filterOperator = luciaOperatorToFilterOperatorMappings[operator], formatter = filterUtils.l.getFormatter(forExpr, this.fieldsModel.schema), condition = new advancedFilterUtils.gP(filterOperator, newValue, formatter);
                    if ((0, conditionToSQLConverter.Ek)(forExpr, this.fieldsModel.schema, condition)) return currentVm.valueError$.next(void 0), 
                    condition;
                    condition.valueRequired && !newValue ? currentVm.valueError$.next(void 0) : (debug.fF.assert(function() {
                        var _a;
                        return null === (_a = filterUtils.l.getValueType(forExpr, _this.fieldsModel.schema)) || void 0 === _a ? void 0 : _a.numeric;
                    }, "Expect invalid value happens only for numeric fields here"), currentVm.valueError$.next(this.localizationService.get("AdvancedFilter_InvalidTooltip_Number")));
                }
            }, QnaSinglePhrasingConditionComponent.prototype.getCurrentState = function(source) {
                var _a, _b, currentFieldExpr = null === (_a = this.viewModelInternal.entityField$.value) || void 0 === _a ? void 0 : _a.fieldExpr, aggregateFunc = null != currentFieldExpr && (0, 
                sqExprStaticMembers.iV)(currentFieldExpr) ? currentFieldExpr.func : void 0;
                return {
                    isStateValid: this.isCurrentStateValid(),
                    dynamicSegmentValues: {
                        entity: this.viewModelInternal.entityField$.value,
                        aggregate: aggregateFunc,
                        operator: null === (_b = this.viewModelInternal.selectedOperator$.value) || void 0 === _b ? void 0 : _b.operator,
                        value: {
                            stringForm: this.getCurrentStringValue(),
                            validLsdlForm: this.viewModelInternal.validLsdlValue$.value
                        }
                    },
                    source,
                    uid: this.uid
                };
            }, QnaSinglePhrasingConditionComponent.prototype.isCurrentStateValid = function() {
                return !this.viewModelInternal || null != this.viewModelInternal.selectedOperator$.value && !this.viewModelInternal.disabled$.value && _.isEmpty(this.viewModelInternal.valueError$.value) && null != this.viewModelInternal.validLsdlValue$.value;
            }, QnaSinglePhrasingConditionComponent.prototype.getCurrentStringValue = function() {
                var _a, currentValue = this.viewModelInternal.valueInfo$.value.value;
                return isCategoricalValueInfo(currentValue) ? (debug.fF.assert(function() {
                    return null == currentValue.selectedCategory$.value || _.includes([ "true", "false" ], currentValue.selectedCategory$.value.id);
                }, "Currently only boolean values will be displayed with categorical filter"), null === (_a = currentValue.selectedCategory$.value) || void 0 === _a ? void 0 : _a.id) : currentValue;
            }, QnaSinglePhrasingConditionComponent.prototype.updateValidLsdlValueFromCategory = function(newSelectedCategory) {
                var newCategoryId = null == newSelectedCategory ? void 0 : newSelectedCategory.id;
                debug.fF.assert(function() {
                    return null == newCategoryId || _.includes([ "true", "false" ], newCategoryId);
                }, "Currently only boolean values will be displayed with categorical filter"), this.viewModelInternal.validLsdlValue$.next({
                    Boolean: [ "true" === newCategoryId || "false" !== newCategoryId && void 0 ]
                });
            }, QnaSinglePhrasingConditionComponent.prototype.emiteNewGroupStateInfo = function(singleConditionStateSource, isFromGroupInstancesUpdate) {
                var newState = createItemsGroupStateInfo([ this.getCurrentState(singleConditionStateSource) ], 0, isFromGroupInstancesUpdate);
                this.stateInfoInternal$.next(newState);
            }, QnaSinglePhrasingConditionComponent.\u0275fac = function(t) {
                return new (t || QnaSinglePhrasingConditionComponent)(fesm2022_core["\u0275\u0275directiveInject"](sq_aggregation_operations_service.C), fesm2022_core["\u0275\u0275directiveInject"](grouping_design_state_service.AA), fesm2022_core["\u0275\u0275directiveInject"](localization_service.o));
            }, QnaSinglePhrasingConditionComponent.\u0275cmp = fesm2022_core["\u0275\u0275defineComponent"]({
                type: QnaSinglePhrasingConditionComponent,
                selectors: [ [ "qna-single-phrasing-condition" ] ],
                inputs: {
                    initialLinguisticSchema: "initialLinguisticSchema",
                    fieldsModel: "fieldsModel",
                    lsdlEntities: "lsdlEntities",
                    allEntityVariantLabels: "allEntityVariantLabels",
                    fromConditions: "fromConditions"
                },
                outputs: {
                    deleteInstance: "deleteInstance"
                },
                features: [ fesm2022_core["\u0275\u0275InheritDefinitionFeature"] ],
                decls: 1,
                vars: 1,
                consts: [ [ "class", "topContainer", 4, "ngIf" ], [ 1, "topContainer" ], [ 1, "tri-caption1-strong", 3, "localize" ], [ 1, "segmentsTopContainer" ], [ "class", "segmentsContainer tri-caption1", 4, "ngIf" ], [ "tri-icon-button", "", "class", "centerVertically deleteButton", 3, "pbi-tooltip", "click", 4, "ngIf" ], [ 1, "segmentsContainer", "tri-caption1" ], [ 1, "segmentControl", 3, "displayTitle", "initialLinguisticSchema", "fieldsModel", "allEntityVariantLabels", "entityField", "entityTermVariant", "alwaysAllowAggregate", "aggregatesConstraint", "specialAllowingSettings", "entityFieldUpdated" ], [ 1, "segmentControl", "segmentControlWithLabel", "operatorsControl" ], [ "for", "operatorsContainer", 1, "segmentLabel", 3, "localize" ], [ 1, "dropdownOutterContainer" ], [ "id", "operatorsContainer", 1, "tri-caption1", "operatorsDropdown", 3, "ngClass", "value", "isDisabled", "valueChange" ], [ 4, "ngIf" ], [ "class", "tri-caption1", 3, "value", 4, "ngFor", "ngForOf" ], [ 1, "tri-caption1", 3, "value" ], [ "tri-textfield", "", "class", "tri-flex tri-flex-col segmentControl segmentControlWithLabel", 4, "ngIf" ], [ "class", "segmentControl segmentControlWithLabel", 4, "ngIf" ], [ "tri-textfield", "", 1, "tri-flex", "tri-flex-col", "segmentControl", "segmentControlWithLabel" ], [ "for", "conditionValueInput", 1, "segmentLabel", 3, "localize" ], [ "type", "text", "id", "conditionValueInput", "aria-errormessage", "errorSpan", "autocomplete", "off", "spellcheck", "false", 3, "ngClass", "disabled", "value", "placeholder", "input" ], [ "valueInput", "" ], [ "tri-textfield-error", "", "class", "tri-caption1", 4, "ngIf" ], [ "tri-textfield-error", "", 1, "tri-caption1" ], [ "tri-svg-icon-16", "", 3, "name", "alt" ], [ "id", "errorDetails", 1, "tri-ml-1" ], [ 1, "segmentControl", "segmentControlWithLabel" ], [ "for", "categoricalConditionValuesContainer", 1, "segmentLabel", 3, "localize" ], [ "id", "categoricalConditionValuesContainer", 1, "tri-caption1", 3, "ngClass", "value", "isDisabled" ], [ 3, "value", 4, "ngFor", "ngForOf" ], [ 3, "value" ], [ 3, "checked", "isCompact", "click", "onChange" ], [ 1, "tri-caption1", "checkboxLabel" ], [ "tri-icon-button", "", 1, "centerVertically", "deleteButton", 3, "pbi-tooltip", "click" ], [ "tri-svg-icon-16", "", "name", "delete_16_regular" ] ],
                template: function(rf, ctx) {
                    1 & rf && fesm2022_core["\u0275\u0275template"](0, QnaSinglePhrasingConditionComponent_div_0_Template, 11, 22, "div", 0), 
                    2 & rf && fesm2022_core["\u0275\u0275property"]("ngIf", ctx.viewModel);
                },
                dependencies: [ common.NgClass, common.NgForOf, common.NgIf, localize_directive.X, tri_checkbox_component.r, tri_dropdown_component.M3, tri_dropdown_item_component.l, tri_dropdown_item_menu_directive.q, tri_dropdown_component.ii, tri_svg_icon_component.M, tooltip_directive.i, QnaRoleSelectorComponent, common.AsyncPipe, localize_pipe.F ],
                styles: [ ".qnaSinglePhrasingEditor[_ngcontent-%COMP%]{width:100%;display:block;padding:var(--spacingVerticalXS) var(--spacingHorizontalL);box-sizing:border-box}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .labelledTypesAndInsertOptionalItemsContainer[_ngcontent-%COMP%]{display:flex;flex-direction:column}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .labelledTypesAndInsertOptionalItemsContainer[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{margin-bottom:var(--spacingVerticalXS)}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .labelledTypesAndInsertOptionalItemsContainer[_ngcontent-%COMP%]   .typesAndInsertOptionalItemsContainer[_ngcontent-%COMP%]{display:flex;flex-direction:row;align-items:center;margin-bottom:var(--spacingVerticalXS)}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .labelledTypesAndInsertOptionalItemsContainer[_ngcontent-%COMP%]   .typesAndInsertOptionalItemsContainer[_ngcontent-%COMP%]   .phrasingTypesDropdownContainer[_ngcontent-%COMP%]{width:70%}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .labelledTypesAndInsertOptionalItemsContainer[_ngcontent-%COMP%]   .typesAndInsertOptionalItemsContainer[_ngcontent-%COMP%]   .insertOptionalItemsTrigger[_ngcontent-%COMP%]{margin:0 var(--spacingHorizontalM);border:none;display:flex;align-items:center;height:fit-content}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .labelledTypesAndInsertOptionalItemsContainer[_ngcontent-%COMP%]   .typesAndInsertOptionalItemsContainer[_ngcontent-%COMP%]   tri-dropdown[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:stretch}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .diagnosticsContainer[_ngcontent-%COMP%]{display:flex;align-items:flex-start;margin:0 calc(-1 * var(--spacingHorizontalL)) var(--spacingHorizontalS) calc(-1 * var(--spacingHorizontalL));padding:var(--spacingHorizontalXS) var(--spacingHorizontalS);color:var(--colorNeutralForeground1);background-color:var(--globalColorRedTint60);border-color:var(--globalColorRedTint40);border-bottom:1px solid var(--globalColorRedTint40)}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .diagnosticsContainer.isDisabled[_ngcontent-%COMP%]{pointer-events:none;opacity:.6}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .diagnosticsContainer.isDisabled[_ngcontent-%COMP%]   tri-svg-icon[_ngcontent-%COMP%]{opacity:.6}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .diagnosticsContainer[_ngcontent-%COMP%]   .messageContainer[_ngcontent-%COMP%]{flex:1}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .diagnosticsContainer[_ngcontent-%COMP%]   .messageIcon[_ngcontent-%COMP%], .qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .diagnosticsContainer[_ngcontent-%COMP%]   .messageNavigator[_ngcontent-%COMP%]{padding:0;margin:0 var(--spacingHorizontalXS)}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .diagnosticsContainer[_ngcontent-%COMP%]   .messageIcon[_ngcontent-%COMP%]:hover, .qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .diagnosticsContainer[_ngcontent-%COMP%]   .messageNavigator[_ngcontent-%COMP%]:hover{background-color:transparent}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .diagnosticsContainer[_ngcontent-%COMP%]   .messageNavigator[_ngcontent-%COMP%]{height:auto}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .dropdownOutterContainer[_ngcontent-%COMP%]   tri-dropdown[_ngcontent-%COMP%], .qnaSinglePhrasingEditor[_nghost-%COMP%]   .dropdownOutterContainer[_ngcontent-%COMP%]   tri-dropdown[_ngcontent-%COMP%], .qnaSinglePhrasingEditor   [_nghost-%COMP%]   .dropdownOutterContainer[_ngcontent-%COMP%]   tri-dropdown[_ngcontent-%COMP%]{width:100%}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]     tri-dropdown .popout-button[disabled], .qnaSinglePhrasingEditor[_nghost-%COMP%]     tri-dropdown .popout-button[disabled], .qnaSinglePhrasingEditor   [_nghost-%COMP%]     tri-dropdown .popout-button[disabled], .qnaSinglePhrasingEditor[_ngcontent-%COMP%]     [tri-textfield] input[aria-disabled=true], .qnaSinglePhrasingEditor[_nghost-%COMP%]     [tri-textfield] input[aria-disabled=true], .qnaSinglePhrasingEditor   [_nghost-%COMP%]     [tri-textfield] input[aria-disabled=true]{border-color:var(--gray-70)}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]     .drag-drop-picker, .qnaSinglePhrasingEditor[_nghost-%COMP%]     .drag-drop-picker, .qnaSinglePhrasingEditor   [_nghost-%COMP%]     .drag-drop-picker{border-radius:var(--borderRadiusMedium)}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .sectionContainer[_ngcontent-%COMP%], .qnaSinglePhrasingEditor   .sectionContainer[_nghost-%COMP%], .qnaSinglePhrasingEditor   .sectionContainer   [_nghost-%COMP%]{border-top:1px solid var(--colorNeutralStroke1);padding-top:var(--spacingVerticalS);margin-top:var(--spacingVerticalS);display:flex;flex-direction:column}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .sectionContainer.isDisabled[_ngcontent-%COMP%]   .topContainer[_ngcontent-%COMP%] > *[_ngcontent-%COMP%], .qnaSinglePhrasingEditor   .sectionContainer.isDisabled[_nghost-%COMP%]   .topContainer[_ngcontent-%COMP%] > *[_ngcontent-%COMP%], .qnaSinglePhrasingEditor   .sectionContainer   .isDisabled[_nghost-%COMP%]   .topContainer[_ngcontent-%COMP%] > *[_ngcontent-%COMP%]{opacity:.6;pointer-events:none}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .sectionContainer.isDisabled[_ngcontent-%COMP%]   .topContainer[_ngcontent-%COMP%] > *.sectionLabel[_ngcontent-%COMP%], .qnaSinglePhrasingEditor   .sectionContainer.isDisabled[_nghost-%COMP%]   .topContainer[_ngcontent-%COMP%] > *.sectionLabel[_ngcontent-%COMP%], .qnaSinglePhrasingEditor   .sectionContainer   .isDisabled[_nghost-%COMP%]   .topContainer[_ngcontent-%COMP%] > *.sectionLabel[_ngcontent-%COMP%]{opacity:1;pointer-events:auto}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .sectionContainer[_ngcontent-%COMP%]   .topContainer[_ngcontent-%COMP%], .qnaSinglePhrasingEditor   .sectionContainer[_nghost-%COMP%]   .topContainer[_ngcontent-%COMP%], .qnaSinglePhrasingEditor   .sectionContainer   [_nghost-%COMP%]   .topContainer[_ngcontent-%COMP%]{display:flex;flex-direction:column}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .sectionContainer.actionsContainer[_ngcontent-%COMP%], .qnaSinglePhrasingEditor   .sectionContainer.actionsContainer[_nghost-%COMP%], .qnaSinglePhrasingEditor   .sectionContainer   .actionsContainer[_nghost-%COMP%]{flex-direction:row;justify-content:flex-end;gap:var(--spacingHorizontalS)}.menuContainer[_ngcontent-%COMP%]{margin:0,var(--spacingHorizontalM);display:flex;flex-direction:column;align-items:flex-start}.menuContainer[_ngcontent-%COMP%]   .menuItemContainer[_ngcontent-%COMP%]{border:none;width:100%;justify-content:flex-start}.dropdownTrigger[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{border:none;padding-left:var(--spacingHorizontalXS)}.dropdownItem[_ngcontent-%COMP%]{box-sizing:border-box}.dropdownItem.disallowSelect[_ngcontent-%COMP%]{pointer-events:none}.dropdownItemContent[_ngcontent-%COMP%]{padding-left:var(--spacingHorizontalXS)}.dropdownItemContent.withIndentation[_ngcontent-%COMP%]{padding-left:var(--spacingHorizontalL)}  .cdk-overlay-pane tri-menu-other [trimenuitem].tri-menu-item{font-family:var(--fontFamilyBase);font-size:var(--fontSizeBase200);font-weight:var(--fontWeightRegular);line-height:var(--lineHeightBase200);height:24px;min-height:24px}  .cdk-overlay-pane.qnaRoleSelectorFieldListOverlayPanel{min-height:unset!important}  .cdk-overlay-pane.qnaRoleSelectorFieldListOverlayPanel .dropdown-scroll{height:100%}", '.segmentsContainer[_ngcontent-%COMP%], .segmentsContainer[_nghost-%COMP%], .segmentsContainer   [_nghost-%COMP%]{display:flex;flex-direction:row;flex-wrap:wrap;align-items:flex-start;gap:var(--spacingHorizontalM)}.segmentsContainer[_ngcontent-%COMP%]   .segmentControlsGroup[_ngcontent-%COMP%], .segmentsContainer[_nghost-%COMP%]   .segmentControlsGroup[_ngcontent-%COMP%], .segmentsContainer   [_nghost-%COMP%]   .segmentControlsGroup[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:var(--spacingVerticalXS)}.segmentsContainer[_ngcontent-%COMP%]   .segmentControl[_ngcontent-%COMP%], .segmentsContainer[_nghost-%COMP%]   .segmentControl[_ngcontent-%COMP%], .segmentsContainer   [_nghost-%COMP%]   .segmentControl[_ngcontent-%COMP%]{margin:0;min-width:150px}.segmentsContainer[_ngcontent-%COMP%]   .segmentControl.textSegment[_ngcontent-%COMP%], .segmentsContainer[_nghost-%COMP%]   .segmentControl.textSegment[_ngcontent-%COMP%], .segmentsContainer   [_nghost-%COMP%]   .segmentControl.textSegment[_ngcontent-%COMP%]{min-width:unset}.segmentsContainer[_ngcontent-%COMP%]   .segmentControl.textSegment.afterStringSegment[_ngcontent-%COMP%], .segmentsContainer[_nghost-%COMP%]   .segmentControl.textSegment.afterStringSegment[_ngcontent-%COMP%], .segmentsContainer   [_nghost-%COMP%]   .segmentControl.textSegment.afterStringSegment[_ngcontent-%COMP%]{margin-left:calc(-1 * var(--spacingHorizontalS))}.segmentsContainer[_ngcontent-%COMP%]   .segmentControl.segmentControlWithLabel[_ngcontent-%COMP%], .segmentsContainer[_nghost-%COMP%]   .segmentControl.segmentControlWithLabel[_ngcontent-%COMP%], .segmentsContainer   [_nghost-%COMP%]   .segmentControl.segmentControlWithLabel[_ngcontent-%COMP%]{display:flex;flex-direction:column}.segmentsContainer[_ngcontent-%COMP%]   .segmentControl.segmentControlWithLabel[_ngcontent-%COMP%]   .segmentLabel[_ngcontent-%COMP%], .segmentsContainer[_nghost-%COMP%]   .segmentControl.segmentControlWithLabel[_ngcontent-%COMP%]   .segmentLabel[_ngcontent-%COMP%], .segmentsContainer   [_nghost-%COMP%]   .segmentControl.segmentControlWithLabel[_ngcontent-%COMP%]   .segmentLabel[_ngcontent-%COMP%]{margin-bottom:var(--spacingVerticalXS)}.segmentsContainer[_ngcontent-%COMP%]   qna-role-selector[_ngcontent-%COMP%], .segmentsContainer[_nghost-%COMP%]   qna-role-selector[_ngcontent-%COMP%], .segmentsContainer   [_nghost-%COMP%]   qna-role-selector[_ngcontent-%COMP%]{width:160px}.segmentsContainer[_ngcontent-%COMP%]   qna-term-editor[_ngcontent-%COMP%], .segmentsContainer[_nghost-%COMP%]   qna-term-editor[_ngcontent-%COMP%], .segmentsContainer   [_nghost-%COMP%]   qna-term-editor[_ngcontent-%COMP%]{width:200px}.segmentsContainer[_ngcontent-%COMP%]   pbi-dropdown[_ngcontent-%COMP%]   label[_ngcontent-%COMP%], .segmentsContainer[_nghost-%COMP%]   pbi-dropdown[_ngcontent-%COMP%]   label[_ngcontent-%COMP%], .segmentsContainer   [_nghost-%COMP%]   pbi-dropdown[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--sm-font-size, 12px);font-weight:var(--font-weight-regular, 400)}.qnaSinglePhrasingEditor[_nghost-%COMP%]   .segmentsTopContainer[_ngcontent-%COMP%], .qnaSinglePhrasingEditor   [_nghost-%COMP%]   .segmentsTopContainer[_ngcontent-%COMP%]{margin-top:var(--spacingVerticalM)}.segmentsTopContainer[_ngcontent-%COMP%]{display:flex;gap:var(--spacingHorizontalM)}.segmentsTopContainer[_ngcontent-%COMP%]   .centerVertically[_ngcontent-%COMP%]{align-self:flex-start;margin-top:36px;transform:translateY(-50%)}.segmentsTopContainer[_ngcontent-%COMP%]   .deleteButton[_ngcontent-%COMP%]{display:flex;pointer-events:auto;opacity:1!important}', ".topContainer[_ngcontent-%COMP%]{display:flex;flex-direction:column}.topContainer[_ngcontent-%COMP%]   .operatorsControl[_ngcontent-%COMP%]{min-width:180px}tri-dropdown-item[_ngcontent-%COMP%]   tri-checkbox[_ngcontent-%COMP%]   .checkboxLabel[_ngcontent-%COMP%]{flex:1;margin-left:var(--spacingHorizontalSNudge)}" ],
                changeDetection: 0
            }), QnaSinglePhrasingConditionComponent;
        }(rx_component.w);
        function isLsdlValueBooleanValues(lsdlValue) {
            return null == lsdlValue ? void 0 : lsdlValue.hasOwnProperty("Boolean");
        }
        function isCategoricalValueInfo(value) {
            return !!value.categories$;
        }
        var switchMap = __webpack_require__(81905), qna_single_phrasing_prepositions_component_c0 = function() {
            return [ "All" ];
        };
        function QnaSinglePhrasingPrepositionsComponent_div_0_qna_phrasing_segmentControls_preposition_2_Template(rf, ctx) {
            if (1 & rf) {
                var _r5 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "qna-phrasing-segmentControls-preposition", 4), 
                fesm2022_core["\u0275\u0275listener"]("delete", function() {
                    var idx_r3 = fesm2022_core["\u0275\u0275restoreView"](_r5).index, ctx_r4 = fesm2022_core["\u0275\u0275nextContext"](2);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r4.onDeleteInstance(idx_r3));
                }), fesm2022_core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var singleInstance_r2 = ctx.$implicit, ctx_r1 = fesm2022_core["\u0275\u0275nextContext"](2);
                fesm2022_core["\u0275\u0275property"]("initialLinguisticSchema", ctx_r1.initialLinguisticSchema)("fieldsModel", ctx_r1.fieldsModel)("lsdlEntities", ctx_r1.lsdlEntities)("allEntityVariantLabels", ctx_r1.allEntityVariantLabels)("segmentsInfo", singleInstance_r2)("getRoleModelFunc", ctx_r1.getRoleModelFunc)("getTermsFunc", ctx_r1.getTermsFunc)("validations", fesm2022_core["\u0275\u0275pureFunction0"](8, qna_single_phrasing_prepositions_component_c0));
            }
        }
        function QnaSinglePhrasingPrepositionsComponent_div_0_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 1), fesm2022_core["\u0275\u0275element"](1, "label", 2), 
            fesm2022_core["\u0275\u0275template"](2, QnaSinglePhrasingPrepositionsComponent_div_0_qna_phrasing_segmentControls_preposition_2_Template, 1, 9, "qna-phrasing-segmentControls-preposition", 3), 
            fesm2022_core["\u0275\u0275pipe"](3, "async"), fesm2022_core["\u0275\u0275elementEnd"]()), 
            2 & rf) {
                var ctx_r0 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("localize", "Qna_Phrasing_OptionalSectionLabel_PrepositionalPhrases"), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngForOf", fesm2022_core["\u0275\u0275pipeBind1"](3, 2, ctx_r0.viewModel.instances$));
            }
        }
        var QnaSinglePhrasingPrepositionsComponent = function(_super) {
            function QnaSinglePhrasingPrepositionsComponent() {
                var _this = null !== _super && _super.apply(this, arguments) || this;
                return _this.deleteInstance = new fesm2022_core.EventEmitter, _this.stateInfoInternal$ = new ReplaySubject.t, 
                _this.resetComponentsSubject$ = new Subject.xQ, _this;
            }
            return (0, tslib_es6.__extends)(QnaSinglePhrasingPrepositionsComponent, _super), 
            Object.defineProperty(QnaSinglePhrasingPrepositionsComponent.prototype, "_segmentControls", {
                set: function(resultQueryList) {
                    var _this = this;
                    this.resetComponentsSubject$.next();
                    var allPrepPhraseComponents = null == resultQueryList ? void 0 : resultQueryList.toArray();
                    if (_.isEmpty(allPrepPhraseComponents)) this.stateInfoInternal$.next({
                        itemsState: void 0,
                        source: {
                            type: "groupInstancesUpdate"
                        }
                    }); else {
                        var firstTimeAllComponentsSet = !0, latestUpdatedComponentIndex = -1;
                        (0, combineLatest.aj)(_.map(allPrepPhraseComponents, function(prepPhraseComponent, index) {
                            return prepPhraseComponent.stateInfo$.pipe((0, tap.b)(function(_) {
                                latestUpdatedComponentIndex = index;
                            }));
                        })).pipe((0, takeUntil.R)((0, merge.T)(this.resetComponentsSubject$, this.onDestroy$))).subscribe(function(allPrepPhrasesInfo) {
                            debug.fF.assert(function() {
                                return -1 !== latestUpdatedComponentIndex;
                            }, "There must be a most recent component whose state is updated");
                            var newState = createItemsGroupStateInfo(allPrepPhrasesInfo, latestUpdatedComponentIndex, firstTimeAllComponentsSet);
                            firstTimeAllComponentsSet && (firstTimeAllComponentsSet = !1), _this.stateInfoInternal$.next(newState);
                        });
                    }
                },
                enumerable: !1,
                configurable: !0
            }), QnaSinglePhrasingPrepositionsComponent.prototype.ngOnInit = function() {
                var _this = this;
                debug.fF.assertValue(this.initialLinguisticSchema, "'initialLinguisticSchema' input binding must be defined"), 
                debug.fF.assertValue(this.fieldsModel, "'fieldsModel' input binding must be defined"), 
                debug.fF.assertValue(this.lsdlEntities, "'lsdlEntities' input binding must be defined"), 
                debug.fF.assertValue(this.allEntityVariantLabels, "'allEntityVariantLabels' input binding must be defined"), 
                debug.fF.assertValue(this.itemsInfo, "'itemsInfo' input binding must be defined"), 
                this.viewModel = {
                    instances$: this.changes$("itemsInfo").pipe((0, switchMap.w)(function(itemsInfo) {
                        return itemsInfo.instances$;
                    }), (0, map.U)(function(instances) {
                        return _.map(instances, function(instance) {
                            return {
                                segments: _this.itemsInfo.template.segments,
                                basedOnValue: instance
                            };
                        });
                    }))
                };
            }, QnaSinglePhrasingPrepositionsComponent.prototype.ngOnDestroy = function() {
                return this.resetComponentsSubject$.next(), this.resetComponentsSubject$.complete(), 
                _super.prototype.ngOnDestroy.call(this);
            }, Object.defineProperty(QnaSinglePhrasingPrepositionsComponent.prototype, "stateInfo$", {
                get: function() {
                    return this.stateInfoInternal$.pipe((0, takeUntil.R)(this.onDestroy$));
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(QnaSinglePhrasingPrepositionsComponent.prototype, "getRoleModelFunc", {
                get: function() {
                    return getRoleModel;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(QnaSinglePhrasingPrepositionsComponent.prototype, "getTermsFunc", {
                get: function() {
                    return getPrepositions;
                },
                enumerable: !1,
                configurable: !0
            }), QnaSinglePhrasingPrepositionsComponent.prototype.onDeleteInstance = function(index) {
                this.deleteInstance.emit(index);
            }, QnaSinglePhrasingPrepositionsComponent.\u0275fac = function() {
                var \u0275QnaSinglePhrasingPrepositionsComponent_BaseFactory;
                return function(t) {
                    return (\u0275QnaSinglePhrasingPrepositionsComponent_BaseFactory || (\u0275QnaSinglePhrasingPrepositionsComponent_BaseFactory = fesm2022_core["\u0275\u0275getInheritedFactory"](QnaSinglePhrasingPrepositionsComponent)))(t || QnaSinglePhrasingPrepositionsComponent);
                };
            }(), QnaSinglePhrasingPrepositionsComponent.\u0275cmp = fesm2022_core["\u0275\u0275defineComponent"]({
                type: QnaSinglePhrasingPrepositionsComponent,
                selectors: [ [ "qna-single-phrasing-prepositions" ] ],
                viewQuery: function(rf, ctx) {
                    var _t;
                    1 & rf && fesm2022_core["\u0275\u0275viewQuery"](QnaPhrasingSegmentControlsPrepositionComponent, 5), 
                    2 & rf && fesm2022_core["\u0275\u0275queryRefresh"](_t = fesm2022_core["\u0275\u0275loadQuery"]()) && (ctx._segmentControls = _t);
                },
                inputs: {
                    initialLinguisticSchema: "initialLinguisticSchema",
                    fieldsModel: "fieldsModel",
                    lsdlEntities: "lsdlEntities",
                    allEntityVariantLabels: "allEntityVariantLabels",
                    itemsInfo: "itemsInfo"
                },
                outputs: {
                    deleteInstance: "deleteInstance"
                },
                features: [ fesm2022_core["\u0275\u0275InheritDefinitionFeature"] ],
                decls: 1,
                vars: 1,
                consts: [ [ "class", "topContainer", 4, "ngIf" ], [ 1, "topContainer" ], [ 1, "tri-caption1-strong", "sectionLabel", 3, "localize" ], [ 3, "initialLinguisticSchema", "fieldsModel", "lsdlEntities", "allEntityVariantLabels", "segmentsInfo", "getRoleModelFunc", "getTermsFunc", "validations", "delete", 4, "ngFor", "ngForOf" ], [ 3, "initialLinguisticSchema", "fieldsModel", "lsdlEntities", "allEntityVariantLabels", "segmentsInfo", "getRoleModelFunc", "getTermsFunc", "validations", "delete" ] ],
                template: function(rf, ctx) {
                    1 & rf && fesm2022_core["\u0275\u0275template"](0, QnaSinglePhrasingPrepositionsComponent_div_0_Template, 4, 4, "div", 0), 
                    2 & rf && fesm2022_core["\u0275\u0275property"]("ngIf", ctx.viewModel);
                },
                dependencies: [ common.NgForOf, common.NgIf, localize_directive.X, QnaPhrasingSegmentControlsPrepositionComponent, common.AsyncPipe ],
                styles: [ ".qnaSinglePhrasingEditor[_ngcontent-%COMP%]{width:100%;display:block;padding:var(--spacingVerticalXS) var(--spacingHorizontalL);box-sizing:border-box}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .labelledTypesAndInsertOptionalItemsContainer[_ngcontent-%COMP%]{display:flex;flex-direction:column}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .labelledTypesAndInsertOptionalItemsContainer[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{margin-bottom:var(--spacingVerticalXS)}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .labelledTypesAndInsertOptionalItemsContainer[_ngcontent-%COMP%]   .typesAndInsertOptionalItemsContainer[_ngcontent-%COMP%]{display:flex;flex-direction:row;align-items:center;margin-bottom:var(--spacingVerticalXS)}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .labelledTypesAndInsertOptionalItemsContainer[_ngcontent-%COMP%]   .typesAndInsertOptionalItemsContainer[_ngcontent-%COMP%]   .phrasingTypesDropdownContainer[_ngcontent-%COMP%]{width:70%}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .labelledTypesAndInsertOptionalItemsContainer[_ngcontent-%COMP%]   .typesAndInsertOptionalItemsContainer[_ngcontent-%COMP%]   .insertOptionalItemsTrigger[_ngcontent-%COMP%]{margin:0 var(--spacingHorizontalM);border:none;display:flex;align-items:center;height:fit-content}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .labelledTypesAndInsertOptionalItemsContainer[_ngcontent-%COMP%]   .typesAndInsertOptionalItemsContainer[_ngcontent-%COMP%]   tri-dropdown[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:stretch}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .diagnosticsContainer[_ngcontent-%COMP%]{display:flex;align-items:flex-start;margin:0 calc(-1 * var(--spacingHorizontalL)) var(--spacingHorizontalS) calc(-1 * var(--spacingHorizontalL));padding:var(--spacingHorizontalXS) var(--spacingHorizontalS);color:var(--colorNeutralForeground1);background-color:var(--globalColorRedTint60);border-color:var(--globalColorRedTint40);border-bottom:1px solid var(--globalColorRedTint40)}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .diagnosticsContainer.isDisabled[_ngcontent-%COMP%]{pointer-events:none;opacity:.6}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .diagnosticsContainer.isDisabled[_ngcontent-%COMP%]   tri-svg-icon[_ngcontent-%COMP%]{opacity:.6}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .diagnosticsContainer[_ngcontent-%COMP%]   .messageContainer[_ngcontent-%COMP%]{flex:1}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .diagnosticsContainer[_ngcontent-%COMP%]   .messageIcon[_ngcontent-%COMP%], .qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .diagnosticsContainer[_ngcontent-%COMP%]   .messageNavigator[_ngcontent-%COMP%]{padding:0;margin:0 var(--spacingHorizontalXS)}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .diagnosticsContainer[_ngcontent-%COMP%]   .messageIcon[_ngcontent-%COMP%]:hover, .qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .diagnosticsContainer[_ngcontent-%COMP%]   .messageNavigator[_ngcontent-%COMP%]:hover{background-color:transparent}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .diagnosticsContainer[_ngcontent-%COMP%]   .messageNavigator[_ngcontent-%COMP%]{height:auto}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .dropdownOutterContainer[_ngcontent-%COMP%]   tri-dropdown[_ngcontent-%COMP%], .qnaSinglePhrasingEditor[_nghost-%COMP%]   .dropdownOutterContainer[_ngcontent-%COMP%]   tri-dropdown[_ngcontent-%COMP%], .qnaSinglePhrasingEditor   [_nghost-%COMP%]   .dropdownOutterContainer[_ngcontent-%COMP%]   tri-dropdown[_ngcontent-%COMP%]{width:100%}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]     tri-dropdown .popout-button[disabled], .qnaSinglePhrasingEditor[_nghost-%COMP%]     tri-dropdown .popout-button[disabled], .qnaSinglePhrasingEditor   [_nghost-%COMP%]     tri-dropdown .popout-button[disabled], .qnaSinglePhrasingEditor[_ngcontent-%COMP%]     [tri-textfield] input[aria-disabled=true], .qnaSinglePhrasingEditor[_nghost-%COMP%]     [tri-textfield] input[aria-disabled=true], .qnaSinglePhrasingEditor   [_nghost-%COMP%]     [tri-textfield] input[aria-disabled=true]{border-color:var(--gray-70)}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]     .drag-drop-picker, .qnaSinglePhrasingEditor[_nghost-%COMP%]     .drag-drop-picker, .qnaSinglePhrasingEditor   [_nghost-%COMP%]     .drag-drop-picker{border-radius:var(--borderRadiusMedium)}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .sectionContainer[_ngcontent-%COMP%], .qnaSinglePhrasingEditor   .sectionContainer[_nghost-%COMP%], .qnaSinglePhrasingEditor   .sectionContainer   [_nghost-%COMP%]{border-top:1px solid var(--colorNeutralStroke1);padding-top:var(--spacingVerticalS);margin-top:var(--spacingVerticalS);display:flex;flex-direction:column}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .sectionContainer.isDisabled[_ngcontent-%COMP%]   .topContainer[_ngcontent-%COMP%] > *[_ngcontent-%COMP%], .qnaSinglePhrasingEditor   .sectionContainer.isDisabled[_nghost-%COMP%]   .topContainer[_ngcontent-%COMP%] > *[_ngcontent-%COMP%], .qnaSinglePhrasingEditor   .sectionContainer   .isDisabled[_nghost-%COMP%]   .topContainer[_ngcontent-%COMP%] > *[_ngcontent-%COMP%]{opacity:.6;pointer-events:none}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .sectionContainer.isDisabled[_ngcontent-%COMP%]   .topContainer[_ngcontent-%COMP%] > *.sectionLabel[_ngcontent-%COMP%], .qnaSinglePhrasingEditor   .sectionContainer.isDisabled[_nghost-%COMP%]   .topContainer[_ngcontent-%COMP%] > *.sectionLabel[_ngcontent-%COMP%], .qnaSinglePhrasingEditor   .sectionContainer   .isDisabled[_nghost-%COMP%]   .topContainer[_ngcontent-%COMP%] > *.sectionLabel[_ngcontent-%COMP%]{opacity:1;pointer-events:auto}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .sectionContainer[_ngcontent-%COMP%]   .topContainer[_ngcontent-%COMP%], .qnaSinglePhrasingEditor   .sectionContainer[_nghost-%COMP%]   .topContainer[_ngcontent-%COMP%], .qnaSinglePhrasingEditor   .sectionContainer   [_nghost-%COMP%]   .topContainer[_ngcontent-%COMP%]{display:flex;flex-direction:column}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .sectionContainer.actionsContainer[_ngcontent-%COMP%], .qnaSinglePhrasingEditor   .sectionContainer.actionsContainer[_nghost-%COMP%], .qnaSinglePhrasingEditor   .sectionContainer   .actionsContainer[_nghost-%COMP%]{flex-direction:row;justify-content:flex-end;gap:var(--spacingHorizontalS)}.menuContainer[_ngcontent-%COMP%]{margin:0,var(--spacingHorizontalM);display:flex;flex-direction:column;align-items:flex-start}.menuContainer[_ngcontent-%COMP%]   .menuItemContainer[_ngcontent-%COMP%]{border:none;width:100%;justify-content:flex-start}.dropdownTrigger[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{border:none;padding-left:var(--spacingHorizontalXS)}.dropdownItem[_ngcontent-%COMP%]{box-sizing:border-box}.dropdownItem.disallowSelect[_ngcontent-%COMP%]{pointer-events:none}.dropdownItemContent[_ngcontent-%COMP%]{padding-left:var(--spacingHorizontalXS)}.dropdownItemContent.withIndentation[_ngcontent-%COMP%]{padding-left:var(--spacingHorizontalL)}  .cdk-overlay-pane tri-menu-other [trimenuitem].tri-menu-item{font-family:var(--fontFamilyBase);font-size:var(--fontSizeBase200);font-weight:var(--fontWeightRegular);line-height:var(--lineHeightBase200);height:24px;min-height:24px}  .cdk-overlay-pane.qnaRoleSelectorFieldListOverlayPanel{min-height:unset!important}  .cdk-overlay-pane.qnaRoleSelectorFieldListOverlayPanel .dropdown-scroll{height:100%}" ],
                changeDetection: 0
            }), QnaSinglePhrasingPrepositionsComponent;
        }(rx_component.w);
        function getPrepositions(prepPhraseModel) {
            if (prepPhraseModel) return null != prepPhraseModel ? _.map(prepPhraseModel.prepositions, function(p) {
                return p.value;
            }) : void 0;
        }
        function getRoleModel(prepPhraseModel, segmentId) {
            if (prepPhraseModel) {
                if ("object" === segmentId) return null != prepPhraseModel ? prepPhraseModel.objectEntity : void 0;
                debug.fF.assertFail("unexpected role segment id for a phrasing's prepositions part: ".concat(segmentId));
            }
        }
        var of = __webpack_require__(11547), qna_single_phrasing_semanticSlots_component_c0 = function(a0) {
            return {
                isDisabled: a0
            };
        }, qna_single_phrasing_semanticSlots_component_c1 = function() {
            return [ "All" ];
        };
        function QnaSinglePhrasingSemanticSlotsComponent_div_0_ng_container_2_ng_container_1_div_1_qna_phrasing_segmentControls_semanticSlot_2_Template(rf, ctx) {
            if (1 & rf) {
                var _r13 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "qna-phrasing-segmentControls-semanticSlot", 7), 
                fesm2022_core["\u0275\u0275listener"]("delete", function() {
                    var idx_r10 = fesm2022_core["\u0275\u0275restoreView"](_r13).index, singleTypeSlotsVM_r2 = fesm2022_core["\u0275\u0275nextContext"](3).$implicit, ctx_r11 = fesm2022_core["\u0275\u0275nextContext"](2);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r11.onDeleteInstance(singleTypeSlotsVM_r2.slotType, idx_r10));
                }), fesm2022_core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var singleInstance_r9 = ctx.$implicit, sectionDisabledInfo_r6 = fesm2022_core["\u0275\u0275nextContext"]().ngIf, singleTypeSlotsVM_r2 = fesm2022_core["\u0275\u0275nextContext"](2).$implicit, ctx_r8 = fesm2022_core["\u0275\u0275nextContext"](2);
                fesm2022_core["\u0275\u0275propertyInterpolate"]("slotType", singleTypeSlotsVM_r2.slotType), 
                fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction1"](10, qna_single_phrasing_semanticSlots_component_c0, sectionDisabledInfo_r6.value.disabled))("initialLinguisticSchema", ctx_r8.initialLinguisticSchema)("fieldsModel", ctx_r8.fieldsModel)("lsdlEntities", ctx_r8.lsdlEntities)("allEntityVariantLabels", ctx_r8.allEntityVariantLabels)("segmentsInfo", singleInstance_r9)("getRoleModelFunc", ctx_r8.getRoleModelFunc)("getTermsFunc", ctx_r8.getTermsFunc)("validations", fesm2022_core["\u0275\u0275pureFunction0"](12, qna_single_phrasing_semanticSlots_component_c1));
            }
        }
        function QnaSinglePhrasingSemanticSlotsComponent_div_0_ng_container_2_ng_container_1_div_1_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", null, 5), fesm2022_core["\u0275\u0275template"](2, QnaSinglePhrasingSemanticSlotsComponent_div_0_ng_container_2_ng_container_1_div_1_qna_phrasing_segmentControls_semanticSlot_2_Template, 1, 13, "qna-phrasing-segmentControls-semanticSlot", 6), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var instancesOfSlotType_r4 = fesm2022_core["\u0275\u0275nextContext"]().ngIf;
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("ngForOf", instancesOfSlotType_r4);
            }
        }
        var qna_single_phrasing_semanticSlots_component_c2 = function(a0) {
            return {
                value: a0
            };
        };
        function QnaSinglePhrasingSemanticSlotsComponent_div_0_ng_container_2_ng_container_1_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275template"](1, QnaSinglePhrasingSemanticSlotsComponent_div_0_ng_container_2_ng_container_1_div_1_Template, 3, 1, "div", 4), 
            fesm2022_core["\u0275\u0275pipe"](2, "async"), fesm2022_core["\u0275\u0275elementContainerEnd"]()), 
            2 & rf) {
                var singleTypeSlotsVM_r2 = fesm2022_core["\u0275\u0275nextContext"]().$implicit;
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", fesm2022_core["\u0275\u0275pureFunction1"](3, qna_single_phrasing_semanticSlots_component_c2, fesm2022_core["\u0275\u0275pipeBind1"](2, 1, singleTypeSlotsVM_r2.disabled$)));
            }
        }
        function QnaSinglePhrasingSemanticSlotsComponent_div_0_ng_container_2_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275template"](1, QnaSinglePhrasingSemanticSlotsComponent_div_0_ng_container_2_ng_container_1_Template, 3, 5, "ng-container", 4), 
            fesm2022_core["\u0275\u0275pipe"](2, "async"), fesm2022_core["\u0275\u0275elementContainerEnd"]()), 
            2 & rf) {
                var singleTypeSlotsVM_r2 = ctx.$implicit;
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", fesm2022_core["\u0275\u0275pipeBind1"](2, 1, singleTypeSlotsVM_r2.instances$));
            }
        }
        function QnaSinglePhrasingSemanticSlotsComponent_div_0_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 1), fesm2022_core["\u0275\u0275element"](1, "label", 2), 
            fesm2022_core["\u0275\u0275template"](2, QnaSinglePhrasingSemanticSlotsComponent_div_0_ng_container_2_Template, 3, 3, "ng-container", 3), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r0 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("localize", "Qna_Phrasing_OptionalSectionLabel_SemanticSlots"), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngForOf", ctx_r0.viewModel.typedSlots);
            }
        }
        var orderedDisplaySlotType = [ "SemanticSlotWhen", "SemanticSlotWhere", "SemanticSlotDuration", "SemanticSlotOccurrences" ], QnaSinglePhrasingSemanticSlotsComponent = function(_super) {
            function QnaSinglePhrasingSemanticSlotsComponent() {
                var _this = null !== _super && _super.apply(this, arguments) || this;
                return _this.deleteInstance = new fesm2022_core.EventEmitter, _this.resetComponentsSubject$ = new Subject.xQ, 
                _this.getTermsFunc = function(_model) {
                    debug.fF.assertFail("getTermsFunc should not be called for semantic slots, it does not have any term");
                }, _this;
            }
            return (0, tslib_es6.__extends)(QnaSinglePhrasingSemanticSlotsComponent, _super), 
            Object.defineProperty(QnaSinglePhrasingSemanticSlotsComponent.prototype, "_segmentControls", {
                set: function(resultQueryList) {
                    var _this = this;
                    this.resetComponentsSubject$.next();
                    var allSemanticSlotComponents = null == resultQueryList ? void 0 : resultQueryList.toArray();
                    _.isEmpty(allSemanticSlotComponents) ? _.forEach(orderedDisplaySlotType, function(slotType) {
                        _this.statesInfoInternal$.get(slotType).next(void 0);
                    }) : _.forEach(orderedDisplaySlotType, function(slotType) {
                        var sameTypeSlotsStatesInfo, slotTypeComponents = _.filter(allSemanticSlotComponents, function(c) {
                            return c.elementRef.nativeElement.slotType === slotType;
                        });
                        sameTypeSlotsStatesInfo = _.isEmpty(slotTypeComponents) ? (0, of.of)(void 0) : (0, 
                        combineLatest.aj)(_.map(slotTypeComponents, function(semanticSlotComponent, index) {
                            return semanticSlotComponent.stateInfo$.pipe((0, tap.b)(function(_) {
                                latestUpdatedComponentIndex = index;
                            }));
                        })).pipe((0, takeUntil.R)((0, merge.T)(_this.resetComponentsSubject$, _this.onDestroy$)));
                        var firstTimeAllComponentsSet = !0, latestUpdatedComponentIndex = -1;
                        sameTypeSlotsStatesInfo.subscribe(function(allSlotTypeStatesInfo) {
                            var newState = createItemsGroupStateInfo(allSlotTypeStatesInfo, latestUpdatedComponentIndex, firstTimeAllComponentsSet);
                            firstTimeAllComponentsSet && (firstTimeAllComponentsSet = !1), _this.statesInfoInternal$.get(slotType).next(newState);
                        });
                    });
                },
                enumerable: !1,
                configurable: !0
            }), QnaSinglePhrasingSemanticSlotsComponent.prototype.ngOnInit = function() {
                var _this = this;
                debug.fF.assertValue(this.initialLinguisticSchema, "'initialLinguisticSchema' input binding must be defined"), 
                debug.fF.assertValue(this.fieldsModel, "'fieldsModel' input binding must be defined"), 
                debug.fF.assertValue(this.lsdlEntities, "'lsdlEntities' input binding must be defined"), 
                debug.fF.assertValue(this.allEntityVariantLabels, "'allEntityVariantLabels' input binding must be defined"), 
                debug.fF.assertValue(this.itemsInfo, "'itemsInfo' input binding must be defined"), 
                this.viewModel = {
                    typedSlots: []
                }, this.changes$("itemsInfo").pipe().subscribe(function(info) {
                    _this.viewModel = {
                        typedSlots: _.map(orderedDisplaySlotType, function(type) {
                            return _this.getSingleSlotTypeVM(type, info);
                        })
                    };
                }), this.statesInfoInternal$ = new Map, _.forEach(orderedDisplaySlotType, function(slotType) {
                    _this.statesInfoInternal$.set(slotType, new ReplaySubject.t);
                }), this.statesInfo = new Map, _.forEach(orderedDisplaySlotType, function(slotType) {
                    _this.statesInfo.set(slotType, _this.statesInfoInternal$.get(slotType).pipe((0, 
                    takeUntil.R)(_this.onDestroy$)));
                });
            }, QnaSinglePhrasingSemanticSlotsComponent.prototype.ngOnDestroy = function() {
                return this.resetComponentsSubject$.next(), this.resetComponentsSubject$.complete(), 
                _super.prototype.ngOnDestroy.call(this);
            }, Object.defineProperty(QnaSinglePhrasingSemanticSlotsComponent.prototype, "getRoleModelFunc", {
                get: function() {
                    return qna_single_phrasing_semanticSlots_component_getRoleModel;
                },
                enumerable: !1,
                configurable: !0
            }), QnaSinglePhrasingSemanticSlotsComponent.prototype.onDeleteInstance = function(slotType, index) {
                var slotTypeGroup = _.find(this.viewModel.typedSlots, function(group) {
                    return group.slotType === slotType;
                });
                debug.fF.assertValue(slotTypeGroup, "this.viewModel should have an associated entry for slotType ".concat(slotType, " and should be defined")), 
                this.deleteInstance.emit({
                    slotType,
                    index
                });
            }, QnaSinglePhrasingSemanticSlotsComponent.prototype.getSingleSlotTypeVM = function(slotType, typedItemsInfo) {
                var targetGroupInfo = typedItemsInfo.get(slotType), instancesInput$ = null == targetGroupInfo ? void 0 : targetGroupInfo.instances$;
                return instancesInput$ || (instancesInput$ = (0, of.of)(void 0)), {
                    slotType,
                    disabled$: null == targetGroupInfo ? void 0 : targetGroupInfo.disabled$,
                    instances$: instancesInput$.pipe((0, map.U)(function(instances) {
                        return _.map(instances, function(instance) {
                            var _a;
                            return {
                                segments: null === (_a = null == targetGroupInfo ? void 0 : targetGroupInfo.template) || void 0 === _a ? void 0 : _a.segments,
                                basedOnValue: instance
                            };
                        });
                    }))
                };
            }, QnaSinglePhrasingSemanticSlotsComponent.\u0275fac = function() {
                var \u0275QnaSinglePhrasingSemanticSlotsComponent_BaseFactory;
                return function(t) {
                    return (\u0275QnaSinglePhrasingSemanticSlotsComponent_BaseFactory || (\u0275QnaSinglePhrasingSemanticSlotsComponent_BaseFactory = fesm2022_core["\u0275\u0275getInheritedFactory"](QnaSinglePhrasingSemanticSlotsComponent)))(t || QnaSinglePhrasingSemanticSlotsComponent);
                };
            }(), QnaSinglePhrasingSemanticSlotsComponent.\u0275cmp = fesm2022_core["\u0275\u0275defineComponent"]({
                type: QnaSinglePhrasingSemanticSlotsComponent,
                selectors: [ [ "qna-single-phrasing-semanticSlots" ] ],
                viewQuery: function(rf, ctx) {
                    var _t;
                    1 & rf && fesm2022_core["\u0275\u0275viewQuery"](QnaPhrasingSegmentControlsSemanticSlotComponent, 5), 
                    2 & rf && fesm2022_core["\u0275\u0275queryRefresh"](_t = fesm2022_core["\u0275\u0275loadQuery"]()) && (ctx._segmentControls = _t);
                },
                inputs: {
                    initialLinguisticSchema: "initialLinguisticSchema",
                    fieldsModel: "fieldsModel",
                    lsdlEntities: "lsdlEntities",
                    allEntityVariantLabels: "allEntityVariantLabels",
                    itemsInfo: "itemsInfo"
                },
                outputs: {
                    deleteInstance: "deleteInstance"
                },
                features: [ fesm2022_core["\u0275\u0275InheritDefinitionFeature"] ],
                decls: 1,
                vars: 1,
                consts: [ [ "class", "topContainer", 4, "ngIf" ], [ 1, "topContainer" ], [ 1, "tri-caption1-strong", "sectionLabel", 3, "localize" ], [ 4, "ngFor", "ngForOf" ], [ 4, "ngIf" ], [ "singleTypeSlotsContainer", "" ], [ 3, "slotType", "ngClass", "initialLinguisticSchema", "fieldsModel", "lsdlEntities", "allEntityVariantLabels", "segmentsInfo", "getRoleModelFunc", "getTermsFunc", "validations", "delete", 4, "ngFor", "ngForOf" ], [ 3, "slotType", "ngClass", "initialLinguisticSchema", "fieldsModel", "lsdlEntities", "allEntityVariantLabels", "segmentsInfo", "getRoleModelFunc", "getTermsFunc", "validations", "delete" ] ],
                template: function(rf, ctx) {
                    1 & rf && fesm2022_core["\u0275\u0275template"](0, QnaSinglePhrasingSemanticSlotsComponent_div_0_Template, 3, 2, "div", 0), 
                    2 & rf && fesm2022_core["\u0275\u0275property"]("ngIf", ctx.viewModel);
                },
                dependencies: [ common.NgClass, common.NgForOf, common.NgIf, localize_directive.X, QnaPhrasingSegmentControlsSemanticSlotComponent, common.AsyncPipe ],
                styles: [ ".qnaSinglePhrasingEditor[_ngcontent-%COMP%]{width:100%;display:block;padding:var(--spacingVerticalXS) var(--spacingHorizontalL);box-sizing:border-box}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .labelledTypesAndInsertOptionalItemsContainer[_ngcontent-%COMP%]{display:flex;flex-direction:column}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .labelledTypesAndInsertOptionalItemsContainer[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{margin-bottom:var(--spacingVerticalXS)}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .labelledTypesAndInsertOptionalItemsContainer[_ngcontent-%COMP%]   .typesAndInsertOptionalItemsContainer[_ngcontent-%COMP%]{display:flex;flex-direction:row;align-items:center;margin-bottom:var(--spacingVerticalXS)}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .labelledTypesAndInsertOptionalItemsContainer[_ngcontent-%COMP%]   .typesAndInsertOptionalItemsContainer[_ngcontent-%COMP%]   .phrasingTypesDropdownContainer[_ngcontent-%COMP%]{width:70%}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .labelledTypesAndInsertOptionalItemsContainer[_ngcontent-%COMP%]   .typesAndInsertOptionalItemsContainer[_ngcontent-%COMP%]   .insertOptionalItemsTrigger[_ngcontent-%COMP%]{margin:0 var(--spacingHorizontalM);border:none;display:flex;align-items:center;height:fit-content}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .labelledTypesAndInsertOptionalItemsContainer[_ngcontent-%COMP%]   .typesAndInsertOptionalItemsContainer[_ngcontent-%COMP%]   tri-dropdown[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:stretch}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .diagnosticsContainer[_ngcontent-%COMP%]{display:flex;align-items:flex-start;margin:0 calc(-1 * var(--spacingHorizontalL)) var(--spacingHorizontalS) calc(-1 * var(--spacingHorizontalL));padding:var(--spacingHorizontalXS) var(--spacingHorizontalS);color:var(--colorNeutralForeground1);background-color:var(--globalColorRedTint60);border-color:var(--globalColorRedTint40);border-bottom:1px solid var(--globalColorRedTint40)}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .diagnosticsContainer.isDisabled[_ngcontent-%COMP%]{pointer-events:none;opacity:.6}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .diagnosticsContainer.isDisabled[_ngcontent-%COMP%]   tri-svg-icon[_ngcontent-%COMP%]{opacity:.6}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .diagnosticsContainer[_ngcontent-%COMP%]   .messageContainer[_ngcontent-%COMP%]{flex:1}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .diagnosticsContainer[_ngcontent-%COMP%]   .messageIcon[_ngcontent-%COMP%], .qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .diagnosticsContainer[_ngcontent-%COMP%]   .messageNavigator[_ngcontent-%COMP%]{padding:0;margin:0 var(--spacingHorizontalXS)}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .diagnosticsContainer[_ngcontent-%COMP%]   .messageIcon[_ngcontent-%COMP%]:hover, .qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .diagnosticsContainer[_ngcontent-%COMP%]   .messageNavigator[_ngcontent-%COMP%]:hover{background-color:transparent}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .diagnosticsContainer[_ngcontent-%COMP%]   .messageNavigator[_ngcontent-%COMP%]{height:auto}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .dropdownOutterContainer[_ngcontent-%COMP%]   tri-dropdown[_ngcontent-%COMP%], .qnaSinglePhrasingEditor[_nghost-%COMP%]   .dropdownOutterContainer[_ngcontent-%COMP%]   tri-dropdown[_ngcontent-%COMP%], .qnaSinglePhrasingEditor   [_nghost-%COMP%]   .dropdownOutterContainer[_ngcontent-%COMP%]   tri-dropdown[_ngcontent-%COMP%]{width:100%}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]     tri-dropdown .popout-button[disabled], .qnaSinglePhrasingEditor[_nghost-%COMP%]     tri-dropdown .popout-button[disabled], .qnaSinglePhrasingEditor   [_nghost-%COMP%]     tri-dropdown .popout-button[disabled], .qnaSinglePhrasingEditor[_ngcontent-%COMP%]     [tri-textfield] input[aria-disabled=true], .qnaSinglePhrasingEditor[_nghost-%COMP%]     [tri-textfield] input[aria-disabled=true], .qnaSinglePhrasingEditor   [_nghost-%COMP%]     [tri-textfield] input[aria-disabled=true]{border-color:var(--gray-70)}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]     .drag-drop-picker, .qnaSinglePhrasingEditor[_nghost-%COMP%]     .drag-drop-picker, .qnaSinglePhrasingEditor   [_nghost-%COMP%]     .drag-drop-picker{border-radius:var(--borderRadiusMedium)}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .sectionContainer[_ngcontent-%COMP%], .qnaSinglePhrasingEditor   .sectionContainer[_nghost-%COMP%], .qnaSinglePhrasingEditor   .sectionContainer   [_nghost-%COMP%]{border-top:1px solid var(--colorNeutralStroke1);padding-top:var(--spacingVerticalS);margin-top:var(--spacingVerticalS);display:flex;flex-direction:column}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .sectionContainer.isDisabled[_ngcontent-%COMP%]   .topContainer[_ngcontent-%COMP%] > *[_ngcontent-%COMP%], .qnaSinglePhrasingEditor   .sectionContainer.isDisabled[_nghost-%COMP%]   .topContainer[_ngcontent-%COMP%] > *[_ngcontent-%COMP%], .qnaSinglePhrasingEditor   .sectionContainer   .isDisabled[_nghost-%COMP%]   .topContainer[_ngcontent-%COMP%] > *[_ngcontent-%COMP%]{opacity:.6;pointer-events:none}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .sectionContainer.isDisabled[_ngcontent-%COMP%]   .topContainer[_ngcontent-%COMP%] > *.sectionLabel[_ngcontent-%COMP%], .qnaSinglePhrasingEditor   .sectionContainer.isDisabled[_nghost-%COMP%]   .topContainer[_ngcontent-%COMP%] > *.sectionLabel[_ngcontent-%COMP%], .qnaSinglePhrasingEditor   .sectionContainer   .isDisabled[_nghost-%COMP%]   .topContainer[_ngcontent-%COMP%] > *.sectionLabel[_ngcontent-%COMP%]{opacity:1;pointer-events:auto}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .sectionContainer[_ngcontent-%COMP%]   .topContainer[_ngcontent-%COMP%], .qnaSinglePhrasingEditor   .sectionContainer[_nghost-%COMP%]   .topContainer[_ngcontent-%COMP%], .qnaSinglePhrasingEditor   .sectionContainer   [_nghost-%COMP%]   .topContainer[_ngcontent-%COMP%]{display:flex;flex-direction:column}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .sectionContainer.actionsContainer[_ngcontent-%COMP%], .qnaSinglePhrasingEditor   .sectionContainer.actionsContainer[_nghost-%COMP%], .qnaSinglePhrasingEditor   .sectionContainer   .actionsContainer[_nghost-%COMP%]{flex-direction:row;justify-content:flex-end;gap:var(--spacingHorizontalS)}.menuContainer[_ngcontent-%COMP%]{margin:0,var(--spacingHorizontalM);display:flex;flex-direction:column;align-items:flex-start}.menuContainer[_ngcontent-%COMP%]   .menuItemContainer[_ngcontent-%COMP%]{border:none;width:100%;justify-content:flex-start}.dropdownTrigger[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{border:none;padding-left:var(--spacingHorizontalXS)}.dropdownItem[_ngcontent-%COMP%]{box-sizing:border-box}.dropdownItem.disallowSelect[_ngcontent-%COMP%]{pointer-events:none}.dropdownItemContent[_ngcontent-%COMP%]{padding-left:var(--spacingHorizontalXS)}.dropdownItemContent.withIndentation[_ngcontent-%COMP%]{padding-left:var(--spacingHorizontalL)}  .cdk-overlay-pane tri-menu-other [trimenuitem].tri-menu-item{font-family:var(--fontFamilyBase);font-size:var(--fontSizeBase200);font-weight:var(--fontWeightRegular);line-height:var(--lineHeightBase200);height:24px;min-height:24px}  .cdk-overlay-pane.qnaRoleSelectorFieldListOverlayPanel{min-height:unset!important}  .cdk-overlay-pane.qnaRoleSelectorFieldListOverlayPanel .dropdown-scroll{height:100%}" ],
                changeDetection: 0
            }), QnaSinglePhrasingSemanticSlotsComponent;
        }(rx_component.w);
        function qna_single_phrasing_semanticSlots_component_getRoleModel(slotModel, segmentId) {
            if (slotModel) return "semanticSlotWhen" === segmentId || "semanticSlotWhere" === segmentId || "semanticSlotDuration" === segmentId || "semanticSlotOccurrences" === segmentId ? slotModel : void debug.fF.assertFail("unexpected role segment id for a phrasing's semanticSlots part: ".concat(segmentId));
        }
        var tri_menu_directive = __webpack_require__(76688), tri_tooltip_directive = __webpack_require__(55490);
        function QnaSinglePhrasingRelationshipTableComponent_div_0_tri_svg_icon_5_Template(rf, ctx) {
            if (1 & rf && fesm2022_core["\u0275\u0275element"](0, "tri-svg-icon", 8), 2 & rf) {
                var state_r1 = fesm2022_core["\u0275\u0275nextContext"]().ngIf;
                fesm2022_core["\u0275\u0275property"]("triTooltip", state_r1.warning);
            }
        }
        function QnaSinglePhrasingRelationshipTableComponent_div_0_div_6_tri_dropdown_trigger_4_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "tri-dropdown-trigger", 14)(1, "label"), 
            fesm2022_core["\u0275\u0275text"](2), fesm2022_core["\u0275\u0275elementEnd"]()()), 
            2 & rf) {
                var selectedTable_r7 = ctx.ngIf;
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275textInterpolate"](selectedTable_r7.text);
            }
        }
        function QnaSinglePhrasingRelationshipTableComponent_div_0_div_6_tri_dropdown_item_6_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "tri-dropdown-item", 15)(1, "label", 16), 
            fesm2022_core["\u0275\u0275text"](2), fesm2022_core["\u0275\u0275elementEnd"]()()), 
            2 & rf) {
                var table_r8 = ctx.$implicit;
                fesm2022_core["\u0275\u0275property"]("value", table_r8), fesm2022_core["\u0275\u0275advance"](2), 
                fesm2022_core["\u0275\u0275textInterpolate"](table_r8.text);
            }
        }
        function QnaSinglePhrasingRelationshipTableComponent_div_0_div_6_Template(rf, ctx) {
            if (1 & rf) {
                var _r10 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "div", 9)(1, "div", 10)(2, "tri-dropdown", 11), 
                fesm2022_core["\u0275\u0275listener"]("valueChange", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r10);
                    var ctx_r9 = fesm2022_core["\u0275\u0275nextContext"](2);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r9.onSelectionChange.fn($event));
                }), fesm2022_core["\u0275\u0275pipe"](3, "async"), fesm2022_core["\u0275\u0275template"](4, QnaSinglePhrasingRelationshipTableComponent_div_0_div_6_tri_dropdown_trigger_4_Template, 3, 1, "tri-dropdown-trigger", 12), 
                fesm2022_core["\u0275\u0275pipe"](5, "async"), fesm2022_core["\u0275\u0275template"](6, QnaSinglePhrasingRelationshipTableComponent_div_0_div_6_tri_dropdown_item_6_Template, 3, 2, "tri-dropdown-item", 13), 
                fesm2022_core["\u0275\u0275pipe"](7, "async"), fesm2022_core["\u0275\u0275elementEnd"]()()();
            }
            if (2 & rf) {
                var ctx_r3 = fesm2022_core["\u0275\u0275nextContext"](2);
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("compact", !0)("value", fesm2022_core["\u0275\u0275pipeBind1"](3, 4, ctx_r3.selectedTable$)), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("ngIf", fesm2022_core["\u0275\u0275pipeBind1"](5, 6, ctx_r3.selectedTable$)), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("ngForOf", fesm2022_core["\u0275\u0275pipeBind1"](7, 8, ctx_r3.relationshipTables$));
            }
        }
        function QnaSinglePhrasingRelationshipTableComponent_div_0_Template(rf, ctx) {
            if (1 & rf) {
                var _r12 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "div", 1)(1, "div", 2), fesm2022_core["\u0275\u0275listener"]("click", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r12);
                    var ctx_r11 = fesm2022_core["\u0275\u0275nextContext"]();
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r11.toggleExpanded());
                }), fesm2022_core["\u0275\u0275elementStart"](2, "button", 3), fesm2022_core["\u0275\u0275element"](3, "tri-svg-icon", 4), 
                fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275element"](4, "label", 5), 
                fesm2022_core["\u0275\u0275template"](5, QnaSinglePhrasingRelationshipTableComponent_div_0_tri_svg_icon_5_Template, 1, 1, "tri-svg-icon", 6), 
                fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275template"](6, QnaSinglePhrasingRelationshipTableComponent_div_0_div_6_Template, 8, 10, "div", 7), 
                fesm2022_core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var state_r1 = ctx.ngIf, ctx_r0 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275advance"](3), fesm2022_core["\u0275\u0275property"]("name", ctx_r0.isExpanded ? "chevron_down_16_regular" : "chevron_right_16_regular"), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("localize", "Qna_Phrasing_SectionLabel_RelationshipTable"), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", state_r1.warning), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", ctx_r0.isExpanded);
            }
        }
        var qna_single_phrasing_relationshipTables_component_c0 = function(a0) {
            return {
                warning: a0
            };
        }, QnaSinglePhrasingRelationshipTableComponent = function(_super) {
            function QnaSinglePhrasingRelationshipTableComponent(localizationService) {
                var _this = _super.call(this) || this;
                return _this.localizationService = localizationService, _this.selectedTableChanged = new fesm2022_core.EventEmitter, 
                _this.isExpanded = !1, _this.selectedTableInternal$ = new BehaviorSubject.X(void 0), 
                _this;
            }
            return (0, tslib_es6.__extends)(QnaSinglePhrasingRelationshipTableComponent, _super), 
            QnaSinglePhrasingRelationshipTableComponent.prototype.ngOnInit = function() {
                var _this = this;
                this.selectedTable$ = this.selectedTableInternal$.asObservable(), this.relationshipTables$ = this.changes$("tables").pipe((0, 
                map.U)(function(tables) {
                    return _.map(tables, function(table) {
                        return {
                            key: table,
                            text: table
                        };
                    });
                })), this.warningMessage$ = (0, combineLatest.aj)([ this.changes$("tables"), this.changes$("selectedTable"), this.changes$("noEmptyRelationshipTableWarning", !0) ]).pipe((0, 
                map.U)(function(_a) {
                    var tables = _a[0], selectedTable = _a[1], skipEmptyTableWarning = _a[2];
                    if (_.isEmpty(tables)) {
                        if (!skipEmptyTableWarning) return _this.localizationService.get("Qna_Phrasing_SectionLabel_Warning");
                    } else {
                        if (_.isEmpty(selectedTable)) return _this.localizationService.get("Qna_Phrasing_SectionLabel_EmptySelectedTable_Warning");
                        if (!tables.includes(selectedTable)) return _this.localizationService.get("Qna_Phrasing_SectionLabel_InvalidSelectedTable_Warning");
                    }
                })), this.selectedTableInput$ = this.changes$("selectedTable").pipe((0, map.U)(function(selectedTable) {
                    return selectedTable ? {
                        key: selectedTable,
                        text: selectedTable
                    } : void 0;
                })), this.onSelectionChange = this.createEventAdapter(), (0, merge.T)(this.selectedTableInput$, this.onSelectionChange.$).subscribe(function(selectedTable) {
                    _this.selectedTableInternal$.next(selectedTable), _this.selectedTableChanged.emit(null == selectedTable ? void 0 : selectedTable.text);
                });
            }, QnaSinglePhrasingRelationshipTableComponent.prototype.toggleExpanded = function() {
                this.isExpanded = !this.isExpanded;
            }, QnaSinglePhrasingRelationshipTableComponent.\u0275fac = function(t) {
                return new (t || QnaSinglePhrasingRelationshipTableComponent)(fesm2022_core["\u0275\u0275directiveInject"](localization_service.o));
            }, QnaSinglePhrasingRelationshipTableComponent.\u0275cmp = fesm2022_core["\u0275\u0275defineComponent"]({
                type: QnaSinglePhrasingRelationshipTableComponent,
                selectors: [ [ "qna-single-phrasing-relationshipTables" ] ],
                inputs: {
                    tables: "tables",
                    selectedTable: "selectedTable",
                    noEmptyRelationshipTableWarning: "noEmptyRelationshipTableWarning"
                },
                outputs: {
                    selectedTableChanged: "selectedTableChanged"
                },
                features: [ fesm2022_core["\u0275\u0275InheritDefinitionFeature"] ],
                decls: 2,
                vars: 5,
                consts: [ [ "class", "topContainer", 4, "ngIf" ], [ 1, "topContainer" ], [ "role", "button", 1, "definitionContainer", "clickable", 3, "click" ], [ "tri-icon-button", "" ], [ "tri-svg-icon-16", "", 3, "name" ], [ 1, "tri-caption1-strong", 3, "localize" ], [ "tri-svg-icon-16", "", "class", "warning", "name", "warning_16_regular", "tabindex", "0", 3, "triTooltip", 4, "ngIf" ], [ "class", "tableContainer", 4, "ngIf" ], [ "tri-svg-icon-16", "", "name", "warning_16_regular", "tabindex", "0", 1, "warning", 3, "triTooltip" ], [ 1, "tableContainer" ], [ 1, "dropdownContainer" ], [ 1, "tri-caption1", 3, "compact", "value", "valueChange" ], [ "class", "dropdownTrigger", 4, "ngIf" ], [ "class", "dropdownItem tri-caption1", 3, "value", 4, "ngFor", "ngForOf" ], [ 1, "dropdownTrigger" ], [ 1, "dropdownItem", "tri-caption1", 3, "value" ], [ 1, "dropdownItemContent" ] ],
                template: function(rf, ctx) {
                    1 & rf && (fesm2022_core["\u0275\u0275template"](0, QnaSinglePhrasingRelationshipTableComponent_div_0_Template, 7, 4, "div", 0), 
                    fesm2022_core["\u0275\u0275pipe"](1, "async")), 2 & rf && fesm2022_core["\u0275\u0275property"]("ngIf", fesm2022_core["\u0275\u0275pureFunction1"](3, qna_single_phrasing_relationshipTables_component_c0, fesm2022_core["\u0275\u0275pipeBind1"](1, 1, ctx.warningMessage$)));
                },
                dependencies: [ common.NgForOf, common.NgIf, localize_directive.X, tri_dropdown_component.M3, tri_dropdown_item_component.l, tri_dropdown_item_menu_directive.q, tri_dropdown_component.ii, tri_svg_icon_component.M, tri_tooltip_directive.Z, common.AsyncPipe ],
                styles: [ '.definitionContainer[_ngcontent-%COMP%]{display:flex;flex-direction:row;align-items:center;flex-wrap:wrap;gap:var(--spacingHorizontalXS)}.definitionContainer.clickable[_ngcontent-%COMP%], .definitionContainer[_ngcontent-%COMP%]   .clickable[_ngcontent-%COMP%], .definitionContainer.clickable[_ngcontent-%COMP%]   label[_ngcontent-%COMP%], .definitionContainer[_ngcontent-%COMP%]   .clickable[_ngcontent-%COMP%]   label[_ngcontent-%COMP%], .definitionContainer.clickable[_ngcontent-%COMP%]   label.clickable[_ngcontent-%COMP%], .definitionContainer[_ngcontent-%COMP%]   .clickable[_ngcontent-%COMP%]   label.clickable[_ngcontent-%COMP%]{cursor:pointer}.definitionContainer[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{display:flex}.tableContainer[_ngcontent-%COMP%]{display:flex;flex-direction:column}html:not([dir="rtl"])[_nghost-%COMP%]   .tableContainer[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .tableContainer[_ngcontent-%COMP%]{padding-left:var(--spacingHorizontalXL)}html[dir="rtl"][_nghost-%COMP%]   .tableContainer[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .tableContainer[_ngcontent-%COMP%]{padding-right:var(--spacingHorizontalXL)}.tableContainer[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{flex:1;font-weight:var(--fontWeightRegular);margin:var(--spacingVerticalS) 0 var(--spacingVerticalXS) 0}.tableContainer[_ngcontent-%COMP%]   .dropdownContainer[_ngcontent-%COMP%]{display:flex;flex-direction:row;width:40%;gap:var(--spacingHorizontalXS)}.tableContainer[_ngcontent-%COMP%]   .dropdownContainer[_ngcontent-%COMP%]   tri-dropdown[_ngcontent-%COMP%]{width:100%}.tableContainer[_ngcontent-%COMP%]   .dropdownContainer[_ngcontent-%COMP%]   tri-svg-icon[_ngcontent-%COMP%]{align-self:center}.warning[_ngcontent-%COMP%]{fill:var(--globalColorDarkOrangeTint30)}', ".qnaSinglePhrasingEditor[_ngcontent-%COMP%]{width:100%;display:block;padding:var(--spacingVerticalXS) var(--spacingHorizontalL);box-sizing:border-box}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .labelledTypesAndInsertOptionalItemsContainer[_ngcontent-%COMP%]{display:flex;flex-direction:column}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .labelledTypesAndInsertOptionalItemsContainer[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{margin-bottom:var(--spacingVerticalXS)}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .labelledTypesAndInsertOptionalItemsContainer[_ngcontent-%COMP%]   .typesAndInsertOptionalItemsContainer[_ngcontent-%COMP%]{display:flex;flex-direction:row;align-items:center;margin-bottom:var(--spacingVerticalXS)}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .labelledTypesAndInsertOptionalItemsContainer[_ngcontent-%COMP%]   .typesAndInsertOptionalItemsContainer[_ngcontent-%COMP%]   .phrasingTypesDropdownContainer[_ngcontent-%COMP%]{width:70%}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .labelledTypesAndInsertOptionalItemsContainer[_ngcontent-%COMP%]   .typesAndInsertOptionalItemsContainer[_ngcontent-%COMP%]   .insertOptionalItemsTrigger[_ngcontent-%COMP%]{margin:0 var(--spacingHorizontalM);border:none;display:flex;align-items:center;height:fit-content}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .labelledTypesAndInsertOptionalItemsContainer[_ngcontent-%COMP%]   .typesAndInsertOptionalItemsContainer[_ngcontent-%COMP%]   tri-dropdown[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:stretch}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .diagnosticsContainer[_ngcontent-%COMP%]{display:flex;align-items:flex-start;margin:0 calc(-1 * var(--spacingHorizontalL)) var(--spacingHorizontalS) calc(-1 * var(--spacingHorizontalL));padding:var(--spacingHorizontalXS) var(--spacingHorizontalS);color:var(--colorNeutralForeground1);background-color:var(--globalColorRedTint60);border-color:var(--globalColorRedTint40);border-bottom:1px solid var(--globalColorRedTint40)}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .diagnosticsContainer.isDisabled[_ngcontent-%COMP%]{pointer-events:none;opacity:.6}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .diagnosticsContainer.isDisabled[_ngcontent-%COMP%]   tri-svg-icon[_ngcontent-%COMP%]{opacity:.6}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .diagnosticsContainer[_ngcontent-%COMP%]   .messageContainer[_ngcontent-%COMP%]{flex:1}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .diagnosticsContainer[_ngcontent-%COMP%]   .messageIcon[_ngcontent-%COMP%], .qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .diagnosticsContainer[_ngcontent-%COMP%]   .messageNavigator[_ngcontent-%COMP%]{padding:0;margin:0 var(--spacingHorizontalXS)}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .diagnosticsContainer[_ngcontent-%COMP%]   .messageIcon[_ngcontent-%COMP%]:hover, .qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .diagnosticsContainer[_ngcontent-%COMP%]   .messageNavigator[_ngcontent-%COMP%]:hover{background-color:transparent}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .diagnosticsContainer[_ngcontent-%COMP%]   .messageNavigator[_ngcontent-%COMP%]{height:auto}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .dropdownOutterContainer[_ngcontent-%COMP%]   tri-dropdown[_ngcontent-%COMP%], .qnaSinglePhrasingEditor[_nghost-%COMP%]   .dropdownOutterContainer[_ngcontent-%COMP%]   tri-dropdown[_ngcontent-%COMP%], .qnaSinglePhrasingEditor   [_nghost-%COMP%]   .dropdownOutterContainer[_ngcontent-%COMP%]   tri-dropdown[_ngcontent-%COMP%]{width:100%}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]     tri-dropdown .popout-button[disabled], .qnaSinglePhrasingEditor[_nghost-%COMP%]     tri-dropdown .popout-button[disabled], .qnaSinglePhrasingEditor   [_nghost-%COMP%]     tri-dropdown .popout-button[disabled], .qnaSinglePhrasingEditor[_ngcontent-%COMP%]     [tri-textfield] input[aria-disabled=true], .qnaSinglePhrasingEditor[_nghost-%COMP%]     [tri-textfield] input[aria-disabled=true], .qnaSinglePhrasingEditor   [_nghost-%COMP%]     [tri-textfield] input[aria-disabled=true]{border-color:var(--gray-70)}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]     .drag-drop-picker, .qnaSinglePhrasingEditor[_nghost-%COMP%]     .drag-drop-picker, .qnaSinglePhrasingEditor   [_nghost-%COMP%]     .drag-drop-picker{border-radius:var(--borderRadiusMedium)}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .sectionContainer[_ngcontent-%COMP%], .qnaSinglePhrasingEditor   .sectionContainer[_nghost-%COMP%], .qnaSinglePhrasingEditor   .sectionContainer   [_nghost-%COMP%]{border-top:1px solid var(--colorNeutralStroke1);padding-top:var(--spacingVerticalS);margin-top:var(--spacingVerticalS);display:flex;flex-direction:column}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .sectionContainer.isDisabled[_ngcontent-%COMP%]   .topContainer[_ngcontent-%COMP%] > *[_ngcontent-%COMP%], .qnaSinglePhrasingEditor   .sectionContainer.isDisabled[_nghost-%COMP%]   .topContainer[_ngcontent-%COMP%] > *[_ngcontent-%COMP%], .qnaSinglePhrasingEditor   .sectionContainer   .isDisabled[_nghost-%COMP%]   .topContainer[_ngcontent-%COMP%] > *[_ngcontent-%COMP%]{opacity:.6;pointer-events:none}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .sectionContainer.isDisabled[_ngcontent-%COMP%]   .topContainer[_ngcontent-%COMP%] > *.sectionLabel[_ngcontent-%COMP%], .qnaSinglePhrasingEditor   .sectionContainer.isDisabled[_nghost-%COMP%]   .topContainer[_ngcontent-%COMP%] > *.sectionLabel[_ngcontent-%COMP%], .qnaSinglePhrasingEditor   .sectionContainer   .isDisabled[_nghost-%COMP%]   .topContainer[_ngcontent-%COMP%] > *.sectionLabel[_ngcontent-%COMP%]{opacity:1;pointer-events:auto}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .sectionContainer[_ngcontent-%COMP%]   .topContainer[_ngcontent-%COMP%], .qnaSinglePhrasingEditor   .sectionContainer[_nghost-%COMP%]   .topContainer[_ngcontent-%COMP%], .qnaSinglePhrasingEditor   .sectionContainer   [_nghost-%COMP%]   .topContainer[_ngcontent-%COMP%]{display:flex;flex-direction:column}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .sectionContainer.actionsContainer[_ngcontent-%COMP%], .qnaSinglePhrasingEditor   .sectionContainer.actionsContainer[_nghost-%COMP%], .qnaSinglePhrasingEditor   .sectionContainer   .actionsContainer[_nghost-%COMP%]{flex-direction:row;justify-content:flex-end;gap:var(--spacingHorizontalS)}.menuContainer[_ngcontent-%COMP%]{margin:0,var(--spacingHorizontalM);display:flex;flex-direction:column;align-items:flex-start}.menuContainer[_ngcontent-%COMP%]   .menuItemContainer[_ngcontent-%COMP%]{border:none;width:100%;justify-content:flex-start}.dropdownTrigger[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{border:none;padding-left:var(--spacingHorizontalXS)}.dropdownItem[_ngcontent-%COMP%]{box-sizing:border-box}.dropdownItem.disallowSelect[_ngcontent-%COMP%]{pointer-events:none}.dropdownItemContent[_ngcontent-%COMP%]{padding-left:var(--spacingHorizontalXS)}.dropdownItemContent.withIndentation[_ngcontent-%COMP%]{padding-left:var(--spacingHorizontalL)}  .cdk-overlay-pane tri-menu-other [trimenuitem].tri-menu-item{font-family:var(--fontFamilyBase);font-size:var(--fontSizeBase200);font-weight:var(--fontWeightRegular);line-height:var(--lineHeightBase200);height:24px;min-height:24px}  .cdk-overlay-pane.qnaRoleSelectorFieldListOverlayPanel{min-height:unset!important}  .cdk-overlay-pane.qnaRoleSelectorFieldListOverlayPanel .dropdown-scroll{height:100%}" ],
                changeDetection: 0
            }), QnaSinglePhrasingRelationshipTableComponent;
        }(rx_component.w);
        function QnaSinglePhrasingEditorComponent_div_1_ng_container_6_Template(rf, ctx) {
            if (1 & rf) {
                var _r9 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementContainerStart"](0, 21), fesm2022_core["\u0275\u0275elementStart"](1, "button", 22), 
                fesm2022_core["\u0275\u0275listener"]("click", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r9);
                    var ctx_r8 = fesm2022_core["\u0275\u0275nextContext"](2);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r8.diagnosticMessageGoPrevious());
                }), fesm2022_core["\u0275\u0275element"](2, "tri-svg-icon", 23), fesm2022_core["\u0275\u0275elementEnd"](), 
                fesm2022_core["\u0275\u0275elementStart"](3, "span"), fesm2022_core["\u0275\u0275text"](4), 
                fesm2022_core["\u0275\u0275pipe"](5, "async"), fesm2022_core["\u0275\u0275elementEnd"](), 
                fesm2022_core["\u0275\u0275elementStart"](6, "span"), fesm2022_core["\u0275\u0275text"](7, " / "), 
                fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275elementStart"](8, "span"), 
                fesm2022_core["\u0275\u0275text"](9), fesm2022_core["\u0275\u0275elementEnd"](), 
                fesm2022_core["\u0275\u0275elementStart"](10, "button", 22), fesm2022_core["\u0275\u0275listener"]("click", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r9);
                    var ctx_r10 = fesm2022_core["\u0275\u0275nextContext"](2);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r10.diagnosticMessageGoNext());
                }), fesm2022_core["\u0275\u0275element"](11, "tri-svg-icon", 23), fesm2022_core["\u0275\u0275elementEnd"](), 
                fesm2022_core["\u0275\u0275elementContainerEnd"]();
            }
            if (2 & rf) {
                var ctx_r7 = fesm2022_core["\u0275\u0275nextContext"](2);
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("name", "arrow_left_16_regular"), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275textInterpolate"](fesm2022_core["\u0275\u0275pipeBind1"](5, 4, ctx_r7.currentDiagnosticMessageOneBasedIndex$)), 
                fesm2022_core["\u0275\u0275advance"](5), fesm2022_core["\u0275\u0275textInterpolate"](ctx_r7.diagnosticMessagesCount), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("name", "arrow_right_16_regular");
            }
        }
        var qna_single_phrasing_editor_component_c0 = function(a0) {
            return {
                isDisabled: a0
            };
        };
        function QnaSinglePhrasingEditorComponent_div_1_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 17), fesm2022_core["\u0275\u0275pipe"](1, "async"), 
            fesm2022_core["\u0275\u0275element"](2, "tri-svg-icon", 18), fesm2022_core["\u0275\u0275elementStart"](3, "span", 19), 
            fesm2022_core["\u0275\u0275text"](4), fesm2022_core["\u0275\u0275pipe"](5, "async"), 
            fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275template"](6, QnaSinglePhrasingEditorComponent_div_1_ng_container_6_Template, 12, 6, "ng-container", 20), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r0 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction1"](8, qna_single_phrasing_editor_component_c0, fesm2022_core["\u0275\u0275pipeBind1"](1, 4, ctx_r0.diagnosticsDisabled$))), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("name", "info_16_regular"), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275textInterpolate"](fesm2022_core["\u0275\u0275pipeBind1"](5, 6, ctx_r0.currentDiagnosticMessage$)), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("ngIf", ctx_r0.diagnosticMessagesCount > 1);
            }
        }
        function QnaSinglePhrasingEditorComponent_tri_dropdown_6_label_2_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275element"](0, "label", 28), fesm2022_core["\u0275\u0275pipe"](1, "localize")), 
            2 & rf) {
                var selectedTypeInfo_r11 = fesm2022_core["\u0275\u0275nextContext"]().ngIf;
                fesm2022_core["\u0275\u0275property"]("innerHtml", fesm2022_core["\u0275\u0275pipeBind1"](1, 1, selectedTypeInfo_r11.value.descriptionKey), fesm2022_core["\u0275\u0275sanitizeHtml"]);
            }
        }
        var qna_single_phrasing_editor_component_c1 = function(a0, a1, a2) {
            return {
                "tri-caption1-strong": a0,
                "tri-caption1": a1,
                disallowSelect: a2
            };
        }, qna_single_phrasing_editor_component_c2 = function(a0) {
            return {
                withIndentation: a0
            };
        };
        function QnaSinglePhrasingEditorComponent_tri_dropdown_6_tri_dropdown_item_3_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "tri-dropdown-item", 29), 
            fesm2022_core["\u0275\u0275element"](1, "label", 30), fesm2022_core["\u0275\u0275pipe"](2, "localize"), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var item_r15 = ctx.$implicit;
                fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction3"](7, qna_single_phrasing_editor_component_c1, item_r15.isGroupHeader, !item_r15.isGroupHeader, item_r15.isGroupHeader))("value", item_r15), 
                fesm2022_core["\u0275\u0275attribute"]("aria-disabled", item_r15.isGroupHeader), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction1"](11, qna_single_phrasing_editor_component_c2, item_r15.hasParentGroup))("innerHtml", fesm2022_core["\u0275\u0275pipeBind1"](2, 5, item_r15.descriptionKey), fesm2022_core["\u0275\u0275sanitizeHtml"]);
            }
        }
        function QnaSinglePhrasingEditorComponent_tri_dropdown_6_Template(rf, ctx) {
            if (1 & rf) {
                var _r17 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "tri-dropdown", 24), fesm2022_core["\u0275\u0275listener"]("valueChange", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r17);
                    var ctx_r16 = fesm2022_core["\u0275\u0275nextContext"]();
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r16.selectPhrasingType.fn($event));
                }), fesm2022_core["\u0275\u0275elementStart"](1, "tri-dropdown-trigger", 25), fesm2022_core["\u0275\u0275template"](2, QnaSinglePhrasingEditorComponent_tri_dropdown_6_label_2_Template, 2, 3, "label", 26), 
                fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275template"](3, QnaSinglePhrasingEditorComponent_tri_dropdown_6_tri_dropdown_item_3_Template, 3, 13, "tri-dropdown-item", 27), 
                fesm2022_core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var selectedTypeInfo_r11 = ctx.ngIf, ctx_r1 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275property"]("compact", !0)("ariaLabelledby", ctx_r1.phrasingTypeLabel)("value", selectedTypeInfo_r11.value), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("ngIf", selectedTypeInfo_r11.value), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngForOf", ctx_r1.flatternedTypesAndGroupsDisplayInfo);
            }
        }
        function QnaSinglePhrasingEditorComponent_qna_phrasing_segmentControls_main_12_Template(rf, ctx) {
            if (1 & rf && fesm2022_core["\u0275\u0275element"](0, "qna-phrasing-segmentControls-main", 31), 
            2 & rf) {
                var mainSegments_r18 = ctx.ngIf, ctx_r2 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275property"]("initialLinguisticSchema", ctx_r2.initialLinguisticSchema)("fieldsModel", ctx_r2.fieldsModel)("lsdlEntities", ctx_r2.lsdlEntities)("allEntityVariantLabels", ctx_r2.allEntityVariantLabels)("segmentsInfo", mainSegments_r18)("getRoleModelFunc", ctx_r2.getRoleModelFunc)("getTermsFunc", ctx_r2.getTermsFunc)("validations", ctx_r2.requiredMainSegmentIds)("parentRelationship", ctx_r2.workingFragmentRelationshipModel)("disallowDelete", !0);
            }
        }
        function QnaSinglePhrasingEditorComponent_ng_container_14_ng_container_1_qna_single_phrasing_prepositions_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r23 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "qna-single-phrasing-prepositions", 32), 
                fesm2022_core["\u0275\u0275listener"]("deleteInstance", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r23);
                    var ctx_r22 = fesm2022_core["\u0275\u0275nextContext"](3);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r22.onDeleteOptionalItem("Preposition", $event));
                }), fesm2022_core["\u0275\u0275pipe"](1, "async"), fesm2022_core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var tmp_0_0, ctx_r21 = fesm2022_core["\u0275\u0275nextContext"](3);
                fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction1"](8, qna_single_phrasing_editor_component_c0, null == (tmp_0_0 = fesm2022_core["\u0275\u0275pipeBind1"](1, 6, ctx_r21.prepositionItemsInfo.disabled$)) ? null : tmp_0_0.disabled))("initialLinguisticSchema", ctx_r21.initialLinguisticSchema)("fieldsModel", ctx_r21.fieldsModel)("lsdlEntities", ctx_r21.lsdlEntities)("allEntityVariantLabels", ctx_r21.allEntityVariantLabels)("itemsInfo", ctx_r21.prepositionItemsInfo);
            }
        }
        function QnaSinglePhrasingEditorComponent_ng_container_14_ng_container_1_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275template"](1, QnaSinglePhrasingEditorComponent_ng_container_14_ng_container_1_qna_single_phrasing_prepositions_1_Template, 2, 10, "qna-single-phrasing-prepositions", 12), 
            fesm2022_core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var prepositions_r20 = ctx.ngIf;
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", prepositions_r20.length > 0);
            }
        }
        function QnaSinglePhrasingEditorComponent_ng_container_14_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275template"](1, QnaSinglePhrasingEditorComponent_ng_container_14_ng_container_1_Template, 2, 1, "ng-container", 11), 
            fesm2022_core["\u0275\u0275pipe"](2, "async"), fesm2022_core["\u0275\u0275elementContainerEnd"]()), 
            2 & rf) {
                var ctx_r3 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", fesm2022_core["\u0275\u0275pipeBind1"](2, 1, ctx_r3.prepositionItemsInfo.instances$));
            }
        }
        function QnaSinglePhrasingEditorComponent_qna_single_phrasing_semanticSlots_15_Template(rf, ctx) {
            if (1 & rf) {
                var _r25 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "qna-single-phrasing-semanticSlots", 32), 
                fesm2022_core["\u0275\u0275listener"]("deleteInstance", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r25);
                    var ctx_r24 = fesm2022_core["\u0275\u0275nextContext"]();
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r24.onDeleteOptionalItem($event.slotType, $event.index));
                }), fesm2022_core["\u0275\u0275pipe"](1, "async"), fesm2022_core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var tmp_0_0, ctx_r4 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction1"](8, qna_single_phrasing_editor_component_c0, null == (tmp_0_0 = fesm2022_core["\u0275\u0275pipeBind1"](1, 6, ctx_r4.contextualLabelInvolvedDisabled$)) ? null : tmp_0_0.disabled))("initialLinguisticSchema", ctx_r4.initialLinguisticSchema)("fieldsModel", ctx_r4.fieldsModel)("lsdlEntities", ctx_r4.lsdlEntities)("allEntityVariantLabels", ctx_r4.allEntityVariantLabels)("itemsInfo", ctx_r4.semanticSlotsItemsInfo);
            }
        }
        function QnaSinglePhrasingEditorComponent_ng_container_17_ng_container_1_qna_single_phrasing_condition_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r30 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "qna-single-phrasing-condition", 34), 
                fesm2022_core["\u0275\u0275listener"]("deleteInstance", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r30);
                    var ctx_r29 = fesm2022_core["\u0275\u0275nextContext"](3);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r29.onDeleteOptionalItem("Condition", $event));
                }), fesm2022_core["\u0275\u0275pipe"](1, "async"), fesm2022_core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var tmp_0_0, conditions_r27 = fesm2022_core["\u0275\u0275nextContext"]().ngIf, ctx_r28 = fesm2022_core["\u0275\u0275nextContext"](2);
                fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction1"](8, qna_single_phrasing_editor_component_c0, null == (tmp_0_0 = fesm2022_core["\u0275\u0275pipeBind1"](1, 6, ctx_r28.conditionItemsInfo.disabled$)) ? null : tmp_0_0.disabled))("initialLinguisticSchema", ctx_r28.initialLinguisticSchema)("fieldsModel", ctx_r28.fieldsModel)("lsdlEntities", ctx_r28.lsdlEntities)("allEntityVariantLabels", ctx_r28.allEntityVariantLabels)("fromConditions", conditions_r27);
            }
        }
        function QnaSinglePhrasingEditorComponent_ng_container_17_ng_container_1_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275template"](1, QnaSinglePhrasingEditorComponent_ng_container_17_ng_container_1_qna_single_phrasing_condition_1_Template, 2, 10, "qna-single-phrasing-condition", 33), 
            fesm2022_core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var conditions_r27 = ctx.ngIf;
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", conditions_r27.length > 0);
            }
        }
        function QnaSinglePhrasingEditorComponent_ng_container_17_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275template"](1, QnaSinglePhrasingEditorComponent_ng_container_17_ng_container_1_Template, 2, 1, "ng-container", 11), 
            fesm2022_core["\u0275\u0275pipe"](2, "async"), fesm2022_core["\u0275\u0275elementContainerEnd"]()), 
            2 & rf) {
                var ctx_r5 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", fesm2022_core["\u0275\u0275pipeBind1"](2, 1, ctx_r5.conditionItemsInfo.instances$));
            }
        }
        var qna_single_phrasing_editor_component_c3 = function(a0) {
            return {
                "is-disabled": a0
            };
        };
        function QnaSinglePhrasingEditorComponent_button_20_Template(rf, ctx) {
            if (1 & rf) {
                var _r34 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "button", 35), fesm2022_core["\u0275\u0275listener"]("click", function() {
                    var isDisabled_r32 = fesm2022_core["\u0275\u0275restoreView"](_r34).ngIf, ctx_r33 = fesm2022_core["\u0275\u0275nextContext"]();
                    return fesm2022_core["\u0275\u0275resetView"](!isDisabled_r32.value && ctx_r33.applyChanges());
                }), fesm2022_core["\u0275\u0275text"](1), fesm2022_core["\u0275\u0275pipe"](2, "localize"), 
                fesm2022_core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var isDisabled_r32 = ctx.ngIf, ctx_r6 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction1"](5, qna_single_phrasing_editor_component_c3, isDisabled_r32.value)), 
                fesm2022_core["\u0275\u0275attribute"]("aria-disabled", isDisabled_r32.value), fesm2022_core["\u0275\u0275advance"](1), 
                fesm2022_core["\u0275\u0275textInterpolate1"](" ", fesm2022_core["\u0275\u0275pipeBind1"](2, 3, ctx_r6.isApprovedPhrasing ? "Apply" : "Approve"), " ");
            }
        }
        var qna_single_phrasing_editor_component_c4 = function(a0) {
            return {
                value: a0
            };
        }, qna_single_phrasing_editor_component_c5 = function(a0) {
            return {
                value: a0
            };
        }, itemsGroupTypeValues = (0, tslib_es6.__spreadArray)([ "Main" ], qnaPhrasingOptionalItemTypeValues, !0), flatternedphrasingTypesAndGroups = [ {
            isGroupHeader: !1,
            hasParentGroup: !1,
            type: "Verb",
            descriptionKey: "Qna_PhrasingType_Description_Verb"
        }, {
            isGroupHeader: !0,
            descriptionKey: "Qna_Phrasing_TermType_Adjective"
        }, {
            isGroupHeader: !1,
            hasParentGroup: !0,
            type: "Adjective",
            descriptionKey: "Qna_PhrasingType_Description_Adjective"
        }, {
            isGroupHeader: !1,
            hasParentGroup: !0,
            type: "AdjectiveWithMeasurement",
            descriptionKey: "Qna_PhrasingType_Description_AdjectiveWithMeasurement"
        }, {
            isGroupHeader: !1,
            hasParentGroup: !0,
            type: "AdjectiveFromData",
            descriptionKey: "Qna_PhrasingType_Description_AdjectivesFromData"
        }, {
            isGroupHeader: !0,
            descriptionKey: "Qna_Phrasing_TermType_Noun"
        }, {
            isGroupHeader: !1,
            hasParentGroup: !0,
            type: "Noun",
            descriptionKey: "Qna_PhrasingType_Description_Noun"
        }, {
            isGroupHeader: !1,
            hasParentGroup: !0,
            type: "NounFromData",
            descriptionKey: "Qna_PhrasingType_Description_NounsFromData"
        }, {
            isGroupHeader: !1,
            hasParentGroup: !1,
            type: "Preposition",
            descriptionKey: "Qna_PhrasingType_Description_Preposition"
        }, {
            isGroupHeader: !1,
            hasParentGroup: !1,
            type: "Name",
            descriptionKey: "Qna_PhrasingType_Description_Name"
        }, {
            isGroupHeader: !1,
            hasParentGroup: !1,
            type: "Attribute",
            descriptionKey: "Qna_PhrasingType_Description_Attribute"
        } ], QnaSinglePhrasingEditorComponent = function(_super) {
            function QnaSinglePhrasingEditorComponent(changeDetectorRef, localizationService, qnaService) {
                var _this = _super.call(this) || this;
                return _this.changeDetectorRef = changeDetectorRef, _this.localizationService = localizationService, 
                _this.qnaService = qnaService, _this.cancelRequested = new fesm2022_core.EventEmitter, 
                _this.phrasingLuciaModelChangeRequested = new fesm2022_core.EventEmitter, _this.compactMenuMode = tri_menu.Kb.Compact, 
                _this.optionalItemsGroupMap = new Map, _this.isPhrasingSectionUpdatedMap = new Map, 
                _this.isPhrasingSectionValidMap = new Map, _this.phrasingSectionStateMap = {}, _this.phrasingSectionModelToUidMap = {}, 
                _this.flatternedTypesAndGroupsDisplayInfo = flatternedphrasingTypesAndGroups, _this.selectPhrasingType = _this.createEventAdapter(), 
                _this.mainSegmentsInternal$ = new BehaviorSubject.X(void 0), _this.mainSegments$ = _this.mainSegmentsInternal$.asObservable(), 
                _this.optionalItemInsertOptionsRegenerationSubject = new Subject.xQ, _this.insertOptionalItemsMenuInternal$ = new BehaviorSubject.X(void 0), 
                _this.insertOptionalItemsMenu$ = _this.insertOptionalItemsMenuInternal$.pipe(), 
                _this.insertOptionalItemOptionsInternal$ = new BehaviorSubject.X(void 0), _this.insertOptionalItemOptionsInternal$.pipe((0, 
                skip.T)(1), (0, takeUntil.R)(_this.onDestroy$)).subscribe(function(optionItems) {
                    var menuItems = _.map(optionItems, function(optionItem) {
                        return {
                            data: optionItem,
                            type: tri_menu.fz.Button,
                            text: optionItem.label,
                            disabled: optionItem.disabled$.value
                        };
                    });
                    _this.insertOptionalItemsMenuInternal$.next({
                        items: menuItems
                    }), _.forEach(optionItems, function(optionItem, index) {
                        optionItem.disabled$.pipe((0, distinctUntilChanged.x)(), (0, takeUntil.R)((0, merge.T)(_this.onDestroy$, _this.optionalItemInsertOptionsRegenerationSubject))).subscribe(function(isDisabled) {
                            var _a, newItems = (0, tslib_es6.__spreadArray)([], null !== (_a = _this.insertOptionalItemsMenuInternal$.value.items) && void 0 !== _a ? _a : [], !0);
                            newItems[index].disabled = isDisabled, _this.insertOptionalItemsMenuInternal$.next({
                                items: newItems
                            });
                        });
                    });
                }), _.forEach(itemsGroupTypeValues, function(itemsGroupType) {
                    _this.isPhrasingSectionUpdatedMap.set(itemsGroupType, new BehaviorSubject.X(!1)), 
                    _this.isPhrasingSectionValidMap.set(itemsGroupType, new BehaviorSubject.X("Main" !== itemsGroupType));
                }), _this.isPhrasingUpdatedInternal$ = new BehaviorSubject.X(!1), _this.isPhrasingUpdated$ = _this.isPhrasingUpdatedInternal$.asObservable(), 
                merge.T.apply(void 0, _.map(itemsGroupTypeValues, function(itemsGroupType) {
                    return _this.isPhrasingSectionUpdatedMap.get(itemsGroupType);
                })).pipe((0, takeUntil.R)(_this.onDestroy$)).subscribe(function(sectionUpdated) {
                    sectionUpdated && _this.isPhrasingUpdatedInternal$.next(!0);
                }), _this.isPhrasingUpdatedInternal$.pipe().subscribe(function(updated) {
                    updated && _this.disableDiagnosticMessages();
                }), _this.contextualLabel$ = new BehaviorSubject.X(void 0), _this.contextualLabelInvolvedDisabled$ = _this.isPhrasingSectionValidMap.get("Main").pipe((0, 
                map.U)(function(isValid) {
                    return isValid ? {
                        disabled: !1
                    } : {
                        disabled: !0,
                        disabledReasonCode: "phrasingMainInvalid"
                    };
                })), _this;
            }
            return (0, tslib_es6.__extends)(QnaSinglePhrasingEditorComponent, _super), Object.defineProperty(QnaSinglePhrasingEditorComponent.prototype, "_mainSegmentControls", {
                set: function(segmentControlsComponent) {
                    var _this = this;
                    if (this.mainSegmentControlsComponent = segmentControlsComponent, this.mainSegmentControlsComponent) {
                        var firstTime = !0;
                        this.mainSegmentControlsComponent.stateInfo$.pipe((0, takeUntil.R)(this.onDestroy$)).subscribe(function(mainSegmentsState) {
                            _this.currentMainPhrasingDynamicValues = mainSegmentsState.dynamicSegmentValues, 
                            _this.isPhrasingSectionValidMap.get("Main").next(null == mainSegmentsState ? void 0 : mainSegmentsState.isStateValid), 
                            mainSegmentsState && (firstTime || _this.isPhrasingSectionUpdatedMap.get("Main").next(!0), 
                            firstTime = !1, _this.phrasingSectionStateMap.Main = mainSegmentsState), _this.checkToUpdateRelationshipBindings(mainSegmentsState);
                        }), this.mainSegmentControlsComponent.latestValidPhrasing$.pipe((0, takeUntil.R)(this.onDestroy$)).subscribe(function(currentValidPhrasing) {
                            return (0, tslib_es6.__awaiter)(_this, void 0, void 0, function() {
                                var newContextualLabels;
                                return (0, tslib_es6.__generator)(this, function(_a) {
                                    switch (_a.label) {
                                      case 0:
                                        return this.latestMainPhrasing = currentValidPhrasing, [ 4, this.getContextualLabelContent(currentValidPhrasing) ];

                                      case 1:
                                        return newContextualLabels = _a.sent(), this.contextualLabel$.next(newContextualLabels), 
                                        [ 2 ];
                                    }
                                });
                            });
                        });
                    }
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(QnaSinglePhrasingEditorComponent.prototype, "_conditionSectionComponent", {
                set: function(conditionSectionComponent) {
                    var _this = this;
                    if (!conditionSectionComponent) {
                        var hasConditionBefore = !_.isEmpty(this.phrasingSectionStateMap.Condition);
                        return this.isPhrasingSectionValidMap.get("Condition").next(!0), this.phrasingSectionStateMap.Condition = void 0, 
                        void (hasConditionBefore && this.checkToUpdateRelationshipBindings({
                            itemsState: void 0,
                            source: {
                                type: "groupInstancesUpdate"
                            }
                        }));
                    }
                    var firstTime = !0;
                    conditionSectionComponent.stateInfo$.pipe((0, takeUntil.R)(conditionSectionComponent.onDestroy$)).subscribe(function(info) {
                        firstTime || _this.isPhrasingSectionUpdatedMap.get("Condition").next(!0), firstTime = !1;
                        var isStateValid = _.every(info.itemsState, function(itemState) {
                            return itemState.isStateValid;
                        });
                        _this.isPhrasingSectionValidMap.get("Condition").next(isStateValid), _this.phrasingSectionStateMap.Condition = info.itemsState, 
                        _this.checkToUpdateRelationshipBindings(info);
                    });
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(QnaSinglePhrasingEditorComponent.prototype, "_prepositionSectionComponent", {
                set: function(prepositionSectionComponent) {
                    var _this = this;
                    if (!prepositionSectionComponent) {
                        var hasPrepPhrasesBefore = !_.isEmpty(this.phrasingSectionStateMap.Preposition);
                        return this.isPhrasingSectionValidMap.get("Preposition").next(!0), this.phrasingSectionStateMap.Preposition = void 0, 
                        void (hasPrepPhrasesBefore && this.checkToUpdateRelationshipBindings({
                            itemsState: void 0,
                            source: {
                                type: "groupInstancesUpdate"
                            }
                        }));
                    }
                    var firstTime = !0;
                    prepositionSectionComponent.stateInfo$.pipe((0, takeUntil.R)(prepositionSectionComponent.onDestroy$)).subscribe(function(info) {
                        firstTime || _this.isPhrasingSectionUpdatedMap.get("Preposition").next(!0), firstTime = !1;
                        var isStateValid = _.every(info.itemsState, function(itemState) {
                            return itemState.isStateValid;
                        });
                        _this.isPhrasingSectionValidMap.get("Preposition").next(isStateValid), _this.phrasingSectionStateMap.Preposition = info.itemsState, 
                        _this.checkToUpdateRelationshipBindings(info);
                    });
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(QnaSinglePhrasingEditorComponent.prototype, "_semanticSlotsSectionComponent", {
                set: function(semanticSlotsSectionComponent) {
                    var _this = this;
                    if (!semanticSlotsSectionComponent) {
                        var semanticSlotTypes = [ "SemanticSlotWhen", "SemanticSlotWhere", "SemanticSlotDuration", "SemanticSlotOccurrences" ], hasSemanticSlotBefore = _.some(semanticSlotTypes, function(slotType) {
                            return !_.isEmpty(_this.phrasingSectionStateMap[slotType]);
                        });
                        return _.forEach(semanticSlotTypes, function(slotType) {
                            _this.isPhrasingSectionValidMap.get(slotType).next(!0), _this.phrasingSectionStateMap[slotType] = void 0;
                        }), void (hasSemanticSlotBefore && this.checkToUpdateRelationshipBindings({
                            itemsState: void 0,
                            source: {
                                type: "groupInstancesUpdate"
                            }
                        }));
                    }
                    var alreadyIntialized = new Map([]);
                    semanticSlotsSectionComponent.statesInfo.forEach(function(slotTypeStatesInfo$, slotType) {
                        slotTypeStatesInfo$.pipe((0, takeUntil.R)(semanticSlotsSectionComponent.onDestroy$)).subscribe(function(info) {
                            alreadyIntialized.get(slotType) && _this.isPhrasingSectionUpdatedMap.get(slotType).next(!0), 
                            alreadyIntialized.set(slotType, !0);
                            var isStateValid = _.every(null == info ? void 0 : info.itemsState, function(itemState) {
                                return itemState.isStateValid;
                            });
                            _this.isPhrasingSectionValidMap.get(slotType).next(isStateValid), _this.phrasingSectionStateMap[slotType] = null == info ? void 0 : info.itemsState, 
                            _this.checkToUpdateRelationshipBindings(info);
                        });
                    });
                },
                enumerable: !1,
                configurable: !0
            }), QnaSinglePhrasingEditorComponent.prototype.ngOnInit = function() {
                var _a, _b, _c, _d, _e, _f, _this = this;
                debug.fF.assertValue(this.initialDocumentModel, "'initialDocumentModel' input binding must be defined"), 
                debug.fF.assertValue(this.fieldsModel, "'fieldsModel' input binding must be defined"), 
                debug.fF.assertValue(this.allEntityVariantLabels, "'allEntityVariantLabels' input binding  must be defined"), 
                debug.fF.assertAnyValue(this.existingModel, "'existingModel' input binding can have any value"), 
                null == (null === (_a = this.existingModel) || void 0 === _a ? void 0 : _a.phrasing) && (this.noEmptyRelationshipTableWarning = !0), 
                this.isForCopilotPhrasing = !!(null === (_c = null === (_b = this.existingModel) || void 0 === _b ? void 0 : _b.phrasing) || void 0 === _c ? void 0 : _c.source) && this.existingModel.phrasing.source === copilotSource, 
                this.isApprovedPhrasing = !!(null === (_e = null === (_d = this.existingModel) || void 0 === _d ? void 0 : _d.phrasing) || void 0 === _e ? void 0 : _e.state) && ("Authored" === this.existingModel.phrasing.state || "Generated" === this.existingModel.phrasing.state), 
                this.diagnosticMessagesCount = _.size(this.initialDiagnostics), this.currentDiagnosticMessageOneBasedIndexInternal$ = new BehaviorSubject.X(1), 
                this.currentDiagnosticMessage$ = this.currentDiagnosticMessageOneBasedIndexInternal$.pipe((0, 
                map.U)(function(idx) {
                    return _.nth(_this.initialDiagnostics, idx - 1);
                })), this.currentDiagnosticMessageOneBasedIndex$ = this.currentDiagnosticMessageOneBasedIndexInternal$.asObservable(), 
                this.diagnosticsDisabled$ = new BehaviorSubject.X(!1), this.initialLinguisticSchema = JSON.parse(this.initialDocumentModel.toJsonString()), 
                this.workingDocumentModel = new lsdl_document_model.X(this.initialLinguisticSchema), 
                this.workingExistingRelationshipModel = null != this.existingModel ? _.find(this.workingDocumentModel.getRelationships(), function(r) {
                    return r.lsdlName === _this.existingModel.relationship.lsdlName;
                }) : void 0;
                var targetPhrasingIndex = null != this.existingModel ? _.findIndex(this.existingModel.relationship.phrasings, this.existingModel.phrasing) : -1;
                this.workingFragmentRelationshipModel = null != this.existingModel ? this.workingExistingRelationshipModel.clone(this.workingExistingRelationshipModel.phrasings[targetPhrasingIndex]) : createEmptyRelationship(), 
                this.setupExistingModelToUidMaps(), this.lsdlEntities = (0, tslib_es6.__spreadArray)([], null !== (_f = this.workingDocumentModel.getEntities()) && void 0 !== _f ? _f : [], !0);
                var initialSelectedTypeInfo = this.getInitialSelectedPhrasingTypeDisplayInfo();
                this.selectedTypeDisplayInfo$ = this.selectPhrasingType.$.pipe((0, startWith.O)(initialSelectedTypeInfo));
                var isFirstPhrasingTypeSelection = !0;
                this.selectedTypeDisplayInfo$.pipe((0, distinctUntilChanged.x)(function(prev, curr) {
                    return (null == curr ? void 0 : curr.type) === (null == prev ? void 0 : prev.type);
                }), (0, filter.h)(function(val) {
                    return !!val;
                }), (0, takeUntil.R)(this.onDestroy$)).subscribe(function(phrasingTypeInfo) {
                    var targetPhrasingType = phrasingTypeInfo.type, matchingTemplate = _.find(QnaPhrasingTemplatesAll, function(t) {
                        return t.phrasingType === targetPhrasingType;
                    });
                    debug.fF.assertValue(matchingTemplate, "There should be a matching template for " + targetPhrasingType), 
                    _this.requiredMainSegmentIds = _.map(matchingTemplate.validations, function(validation) {
                        return validation.requiredMainSegmentIds;
                    }), debug.fF.assertValue(isFirstPhrasingTypeSelection || _this.currentMainPhrasingDynamicValues, "changing phrasing type from original, this.currentMainPhrasingDynamicValues should be defined already");
                    var basedOnValue = isFirstPhrasingTypeSelection ? {
                        type: "model",
                        value: _this.workingFragmentRelationshipModel.phrasings[0],
                        uid: "main"
                    } : {
                        type: "segmentValues",
                        value: _this.currentMainPhrasingDynamicValues,
                        uid: "main"
                    };
                    _this.mainSegmentsInternal$.next({
                        segments: matchingTemplate.mainItemSegments,
                        segmentsGroups: matchingTemplate.mainItemSegmentGroups,
                        basedOnValue,
                        source: isFirstPhrasingTypeSelection ? "init" : "phrasingTypeChange",
                        phrasingType: targetPhrasingType
                    }), _this.setupOrUpdateOptionalItemsRelated(matchingTemplate, isFirstPhrasingTypeSelection);
                    var optionaltemInsertOptions = _this.buildOptionalItemInsertOptions(matchingTemplate, basedOnValue);
                    _this.insertOptionalItemOptionsInternal$.next(optionaltemInsertOptions), isFirstPhrasingTypeSelection || _this.isPhrasingSectionUpdatedMap.get("Main").next(!0), 
                    isFirstPhrasingTypeSelection = !1, _this.conditionItemsInfo = _this.optionalItemsGroupMap.get("Condition"), 
                    _this.prepositionItemsInfo = _this.optionalItemsGroupMap.get("Preposition"), _this.semanticSlotsItemsInfo = new Map([ [ "SemanticSlotWhen", _this.optionalItemsGroupMap.get("SemanticSlotWhen") ], [ "SemanticSlotWhere", _this.optionalItemsGroupMap.get("SemanticSlotWhere") ], [ "SemanticSlotDuration", _this.optionalItemsGroupMap.get("SemanticSlotDuration") ], [ "SemanticSlotOccurrences", _this.optionalItemsGroupMap.get("SemanticSlotOccurrences") ] ]);
                });
            }, QnaSinglePhrasingEditorComponent.prototype.ngOnDestroy = function() {
                return this.optionalItemInsertOptionsRegenerationSubject.next(), this.optionalItemInsertOptionsRegenerationSubject.complete(), 
                _super.prototype.ngOnDestroy.call(this);
            }, QnaSinglePhrasingEditorComponent.prototype.insertOptionalItemClicked = function(item) {
                this.addOptionalItem(item.data);
            }, QnaSinglePhrasingEditorComponent.prototype.cancelButtonClicked = function() {
                this.cancelRequested.emit();
            }, QnaSinglePhrasingEditorComponent.prototype.diagnosticMessageGoPrevious = function() {
                var currentIdx = this.currentDiagnosticMessageOneBasedIndexInternal$.value;
                currentIdx > 1 && this.currentDiagnosticMessageOneBasedIndexInternal$.next(currentIdx - 1);
            }, QnaSinglePhrasingEditorComponent.prototype.diagnosticMessageGoNext = function() {
                var currentIdx = this.currentDiagnosticMessageOneBasedIndexInternal$.value;
                currentIdx < this.diagnosticMessagesCount && this.currentDiagnosticMessageOneBasedIndexInternal$.next(currentIdx + 1);
            }, QnaSinglePhrasingEditorComponent.prototype.onDeleteOptionalItem = function(type, deleteIndex) {
                this.addDeleteOptionalItemInstanceInternal(type, "delete", deleteIndex), _.isEmpty(this.optionalItemsGroupMap.get(type).instances$) && (this.isPhrasingSectionValidMap.get(type).next(!0), 
                this.phrasingSectionStateMap[type] = void 0);
            }, QnaSinglePhrasingEditorComponent.prototype.applyChanges = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var commitResult;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        return (commitResult = this.commitToDocumentModel()).committed ? [ 2, this.commitToBackend(commitResult.relationshipLsdlName, commitResult.phrasingId) ] : (this.cancelRequested.emit(), 
                        [ 2 ]);
                    });
                });
            }, QnaSinglePhrasingEditorComponent.prototype.setShouldEnableApplyPhrasing = function() {
                var _this = this;
                debug.fF.assertValue(this.isPhrasingUpdatedInternal$, "this.isPhrasingUpdatedInternal$ should already be created"), 
                debug.fF.assert(function() {
                    return !_.isEmpty(_this.isPhrasingSectionValidMap);
                }, "this.isPhrasingSectionValidMap should already be set up thus not empty"), debug.fF.assert(function() {
                    return !_.isEmpty(_this.optionalItemsGroupMap);
                }, "this.optionalItemsGroupMap should already be set up thus not empty"), this.shouldEnableApplyPhrasing$ = (0, 
                combineLatest.aj)((0, tslib_es6.__spreadArray)((0, tslib_es6.__spreadArray)([ this.isPhrasingUpdatedInternal$ ], _.map(itemsGroupTypeValues, function(itemsGroupType) {
                    return _this.isPhrasingSectionValidMap.get(itemsGroupType);
                }), !0), _.map(qnaPhrasingOptionalItemTypeValues, function(optionalItemGroupType) {
                    var groupInfo = _this.optionalItemsGroupMap.get(optionalItemGroupType);
                    if (groupInfo) return groupInfo.disabled$.pipe((0, map.U)(function(disabledInfo) {
                        return !(null == disabledInfo ? void 0 : disabledInfo.disabled);
                    }));
                }).filter(function(stream$) {
                    return null != stream$;
                }), !0)).pipe((0, map.U)(function(allValues) {
                    return _.every(allValues, function(value) {
                        return !!value;
                    });
                }), (0, tap.b)(function(_val) {
                    _this.changeDetectorRef.detectChanges();
                }));
            }, QnaSinglePhrasingEditorComponent.prototype.commitToDocumentModel = function() {
                var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, workingFragmentPhrasingModel, _this = this;
                if (this.isPhrasingSectionUpdatedMap.get("Main")) {
                    var visitor = void 0;
                    if (null === (_a = this.existingModel) || void 0 === _a ? void 0 : _a.phrasing) if (this.existingModel.phrasing.kind === this.latestMainPhrasing.kind) workingFragmentPhrasingModel = this.workingFragmentRelationshipModel.phrasings[0], 
                    visitor = new RelationshipUpdatePhrasingVisitor(this.phrasingSectionStateMap.Main.dynamicSegmentValues), 
                    (0, lsdl_phrasing_visitor.C)(workingFragmentPhrasingModel, visitor); else {
                        var existingPhrasingLsdlReference = this.workingFragmentRelationshipModel.phrasings[0].lsdlReference;
                        this.workingFragmentRelationshipModel = createEmptyRelationship(), visitor = new RelationshipAddPhrasingVisitor(this.workingFragmentRelationshipModel, existingPhrasingLsdlReference), 
                        (0, lsdl_phrasing_visitor.C)(this.latestMainPhrasing, visitor), workingFragmentPhrasingModel = this.workingFragmentRelationshipModel.phrasings[0];
                    } else visitor = new RelationshipAddPhrasingVisitor(this.workingFragmentRelationshipModel), 
                    (0, lsdl_phrasing_visitor.C)(this.latestMainPhrasing, visitor), workingFragmentPhrasingModel = this.workingFragmentRelationshipModel.phrasings[0];
                }
                if (this.isPhrasingSectionUpdatedMap.get("Condition").value) {
                    var newConditions = this.phrasingSectionStateMap.Condition, count_1 = _.size(newConditions);
                    if (debug.fF.assert(function() {
                        return count_1 <= 1;
                    }, "Right now we only support up to 1 condition"), 0 === count_1 && this.workingFragmentRelationshipModel.condition) this.workingFragmentRelationshipModel.deleteCondition(); else if (1 === count_1) {
                        var newCondition = _.first(newConditions), aggregate = newCondition.dynamicSegmentValues.aggregate, conditionAggregate = null == aggregate ? "None" : function(queryAggFunc) {
                            switch (debug.fF.assertValue(queryAggFunc, "Expect the given queryAggFunc to be defined"), 
                            queryAggFunc) {
                              case 0:
                                return "Sum";

                              case 1:
                                return "Average";

                              case 2:
                              case 5:
                                return "Count";

                              case 3:
                                return "Min";

                              case 4:
                                return "Max";

                              case 6:
                                return "Median";

                              case 7:
                                return "StandardDeviation";

                              case 8:
                                return "Variance";

                              default:
                                debug.fF.assertNever(queryAggFunc);
                            }
                        }(aggregate);
                        this.workingFragmentRelationshipModel.updateCondition(newCondition.dynamicSegmentValues.entity.role, conditionAggregate, newCondition.dynamicSegmentValues.operator, null === (_b = newCondition.dynamicSegmentValues.value) || void 0 === _b ? void 0 : _b.validLsdlForm);
                    }
                }
                if (this.isPhrasingSectionUpdatedMap.get("Preposition").value) {
                    var newPrepPhrases = _.map(this.phrasingSectionStateMap.Preposition, function(pState) {
                        var segValues = pState.dynamicSegmentValues, matchingEntry = _.find(_this.phrasingSectionModelToUidMap.Preposition, function(entry) {
                            return entry[1] === pState.uid;
                        });
                        return {
                            prepositions: segValues.get("preposition"),
                            object: segValues.get("object").role,
                            originalModel: null == matchingEntry ? void 0 : matchingEntry[0]
                        };
                    });
                    workingFragmentPhrasingModel.updatePrepositionalPhrases(newPrepPhrases);
                }
                var newSlots = {}, toUpdateSemanticSlots = !1;
                this.isPhrasingSectionUpdatedMap.get("SemanticSlotWhen").value && (toUpdateSemanticSlots = !0, 
                newSlots.when = null === (_e = null === (_d = null === (_c = _.first(this.phrasingSectionStateMap.SemanticSlotWhen)) || void 0 === _c ? void 0 : _c.dynamicSegmentValues) || void 0 === _d ? void 0 : _d.get("semanticSlotWhen")) || void 0 === _e ? void 0 : _e.role), 
                this.isPhrasingSectionUpdatedMap.get("SemanticSlotWhere").value && (toUpdateSemanticSlots = !0, 
                newSlots.where = null === (_h = null === (_g = null === (_f = _.first(this.phrasingSectionStateMap.SemanticSlotWhere)) || void 0 === _f ? void 0 : _f.dynamicSegmentValues) || void 0 === _g ? void 0 : _g.get("semanticSlotWhere")) || void 0 === _h ? void 0 : _h.role), 
                this.isPhrasingSectionUpdatedMap.get("SemanticSlotDuration").value && (toUpdateSemanticSlots = !0, 
                newSlots.duration = null === (_l = null === (_k = null === (_j = _.first(this.phrasingSectionStateMap.SemanticSlotDuration)) || void 0 === _j ? void 0 : _j.dynamicSegmentValues) || void 0 === _k ? void 0 : _k.get("semanticSlotDuration")) || void 0 === _l ? void 0 : _l.role), 
                this.isPhrasingSectionUpdatedMap.get("SemanticSlotOccurrences").value && (toUpdateSemanticSlots = !0, 
                newSlots.occurrences = null === (_p = null === (_o = null === (_m = _.first(this.phrasingSectionStateMap.SemanticSlotOccurrences)) || void 0 === _m ? void 0 : _m.dynamicSegmentValues) || void 0 === _o ? void 0 : _o.get("semanticSlotOccurrences")) || void 0 === _p ? void 0 : _p.role), 
                toUpdateSemanticSlots && this.workingFragmentRelationshipModel.updateSemanticSlots(newSlots);
                var deletedNames = [];
                _.forEach(this.initialLinguisticSchema.Relationships, function(r, rName) {
                    "Deleted" === r.State && deletedNames.push(rName), _.forEach(r.Phrasings, function(p) {
                        "Deleted" !== p.State || _.isEmpty(p.ID) || deletedNames.push(p.ID);
                    });
                }), this.workingFragmentRelationshipModel.table = this.selectedTable;
                var relationshipName, uniquePhrasingId = function(referenceModel, basedValue, additionalExclusiveValues) {
                    void 0 === additionalExclusiveValues && (additionalExclusiveValues = void 0), debug.fF.assertValue(referenceModel, "referenceModel must be defined"), 
                    debug.fF.assert(function() {
                        return !_.isEmpty(basedValue);
                    }, "basedValue must not be empty");
                    var allNames = getModelNewPhrasingIdBaseExclusiveNames(referenceModel);
                    return allNames.push.apply(allNames, null != additionalExclusiveValues ? additionalExclusiveValues : []), 
                    getNewUniquePhrasingId(basedValue, allNames);
                }(this.workingDocumentModel, this.latestProposedPhrasingId, deletedNames);
                return workingFragmentPhrasingModel.ID = uniquePhrasingId, this.isForCopilotPhrasing && "Suggested" === workingFragmentPhrasingModel.state && (workingFragmentPhrasingModel.state = "Authored"), 
                relationshipName = this.workingExistingRelationshipModel ? this.workingDocumentModel.updateRelationship(this.workingExistingRelationshipModel, this.workingFragmentRelationshipModel, uniquePhrasingId) : this.workingDocumentModel.addRelationship(this.workingFragmentRelationshipModel, uniquePhrasingId), 
                this.workingDocumentModel.commit() ? {
                    committed: !0,
                    relationshipLsdlName: relationshipName,
                    phrasingId: workingFragmentPhrasingModel.ID
                } : {
                    committed: !1
                };
            }, QnaSinglePhrasingEditorComponent.prototype.commitToBackend = function(relationshipLsdlName, phrasingId) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var currentPhrasingLabels, newRelationship, newPhrasingLabelResult, lsdlJson;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, generatePhrasingLabels(JSON.parse(this.workingDocumentModel.toJsonString()), this.qnaService) ];

                          case 1:
                            return currentPhrasingLabels = _a.sent(), newRelationship = _.find(this.workingDocumentModel.getRelationships(), function(r) {
                                return r.lsdlName === relationshipLsdlName;
                            }), newPhrasingLabelResult = _.find(currentPhrasingLabels.Labels, function(l) {
                                return l.RelationshipName === newRelationship.lsdlName && l.PhrasingID === phrasingId;
                            }), lsdlJson = this.workingDocumentModel.toJsonString(), [ 4, this.qnaService.overrideLinguisticSchemaJson(lsdlJson) ];

                          case 2:
                            return _a.sent(), this.phrasingLuciaModelChangeRequested.emit({
                                phrasingLabel: null == newPhrasingLabelResult ? void 0 : newPhrasingLabelResult.Label,
                                conditionLabel: null == newPhrasingLabelResult ? void 0 : newPhrasingLabelResult.ConditionLabel,
                                documentModel: this.workingDocumentModel,
                                relationshipModel: newRelationship,
                                phrasingModel: _.find(null == newRelationship ? void 0 : newRelationship.phrasings, function(p) {
                                    return p.ID === phrasingId;
                                })
                            }), [ 2 ];
                        }
                    });
                });
            }, QnaSinglePhrasingEditorComponent.prototype.onSelectedTableChanged = function(updatedSelectedTable) {
                updatedSelectedTable !== this.selectedTable && this.isPhrasingUpdatedInternal$.next(!0), 
                this.selectedTable = updatedSelectedTable;
            }, Object.defineProperty(QnaSinglePhrasingEditorComponent.prototype, "getRoleModelFunc", {
                get: function() {
                    return qna_single_phrasing_editor_component_getRoleModel;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(QnaSinglePhrasingEditorComponent.prototype, "getTermsFunc", {
                get: function() {
                    return getTerms;
                },
                enumerable: !1,
                configurable: !0
            }), QnaSinglePhrasingEditorComponent.prototype.setupExistingModelToUidMaps = function() {
                var _a, _b;
                this.phrasingSectionModelToUidMap.Preposition = _.map(null === (_b = null === (_a = this.existingModel) || void 0 === _a ? void 0 : _a.phrasing) || void 0 === _b ? void 0 : _b.prepositionalPhrases, function(prepPhrase) {
                    return [ prepPhrase, Utility.b$.generateGuid() ];
                });
                var existingCondition = this.workingFragmentRelationshipModel.condition;
                this.phrasingSectionModelToUidMap.Condition = existingCondition ? [ [ existingCondition, Utility.b$.generateGuid() ] ] : [];
                var existingSemanticSlots = this.workingFragmentRelationshipModel.semanticSlots;
                this.phrasingSectionModelToUidMap.SemanticSlotWhen = (null == existingSemanticSlots ? void 0 : existingSemanticSlots.when) ? [ [ null == existingSemanticSlots ? void 0 : existingSemanticSlots.when, Utility.b$.generateGuid() ] ] : void 0, 
                this.phrasingSectionModelToUidMap.SemanticSlotWhere = (null == existingSemanticSlots ? void 0 : existingSemanticSlots.where) ? [ [ null == existingSemanticSlots ? void 0 : existingSemanticSlots.where, Utility.b$.generateGuid() ] ] : void 0, 
                this.phrasingSectionModelToUidMap.SemanticSlotDuration = (null == existingSemanticSlots ? void 0 : existingSemanticSlots.duration) ? [ [ null == existingSemanticSlots ? void 0 : existingSemanticSlots.duration, Utility.b$.generateGuid() ] ] : void 0, 
                this.phrasingSectionModelToUidMap.SemanticSlotOccurrences = (null == existingSemanticSlots ? void 0 : existingSemanticSlots.occurrences) ? [ [ null == existingSemanticSlots ? void 0 : existingSemanticSlots.occurrences, Utility.b$.generateGuid() ] ] : void 0;
            }, QnaSinglePhrasingEditorComponent.prototype.checkToUpdateRelationshipBindings = function(state) {
                var _a, _b, _c;
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var toUpdate, shouldUpdate, entityNames, relationshipBindingResponse, tablesInternal, currentTable;
                    return (0, tslib_es6.__generator)(this, function(_d) {
                        switch (_d.label) {
                          case 0:
                            return shouldUpdate = function(source) {
                                return _.includes([ "roleUpdate", "phrasingTypeUpdate", "other" ], source);
                            }, toUpdate = function(state) {
                                return !state.hasOwnProperty("itemsState");
                            }(state) ? shouldUpdate(state.source) : "groupInstancesUpdate" === state.source.type || shouldUpdate(state.itemsState[state.source.instanceIndex].source), 
                            toUpdate ? (entityNames = this.getAllEntityNames(), _.isEmpty(entityNames) ? (this.tables = [], 
                            this.selectedTable = void 0, [ 2 ]) : (entityNames = _.uniq(entityNames), [ 4, this.qnaService.getValidRelationshipBindings(JSON.stringify({
                                EntityNames: entityNames
                            })) ])) : [ 2 ];

                          case 1:
                            return relationshipBindingResponse = _d.sent(), tablesInternal = [], _.forEach(null == relationshipBindingResponse ? void 0 : relationshipBindingResponse.ValidBindings, function(binding) {
                                tablesInternal.push(binding.Entity);
                            }), this.tables = tablesInternal, currentTable = null === (_a = this.workingExistingRelationshipModel) || void 0 === _a ? void 0 : _a.table, 
                            (null === (_b = this.existingModel) || void 0 === _b ? void 0 : _b.phrasing) && !this.isPhrasingUpdatedInternal$.value ? this.selectedTable = currentTable : !_.isEmpty(this.selectedTable) && this.tables.includes(this.selectedTable) || (this.selectedTable = null === (_c = null == relationshipBindingResponse ? void 0 : relationshipBindingResponse.DefaultBinding) || void 0 === _c ? void 0 : _c.Entity), 
                            this.noEmptyRelationshipTableWarning && (this.noEmptyRelationshipTableWarning = !1), 
                            [ 2 ];
                        }
                    });
                });
            }, QnaSinglePhrasingEditorComponent.prototype.getAllEntityNames = function() {
                for (var _a, _b, _c, entityNames = [], _i = 0, _d = Object.values(this.phrasingSectionStateMap); _i < _d.length; _i++) {
                    var stateInfo = _d[_i];
                    if (_.isArray(stateInfo)) for (var _e = 0, stateInfo_1 = stateInfo; _e < stateInfo_1.length; _e++) {
                        var info = stateInfo_1[_e];
                        if (isConditionStateInfo(info)) {
                            var entityName = null === (_c = null === (_b = null === (_a = info.dynamicSegmentValues) || void 0 === _a ? void 0 : _a.entity) || void 0 === _b ? void 0 : _b.entity) || void 0 === _c ? void 0 : _c.lsdlName;
                            entityName && entityNames.push(entityName);
                        } else {
                            var segmentEntityNames = this.getEntityNames(null == info ? void 0 : info.dynamicSegmentValues);
                            entityNames.push.apply(entityNames, segmentEntityNames);
                        }
                    } else segmentEntityNames = this.getEntityNames(null == stateInfo ? void 0 : stateInfo.dynamicSegmentValues), 
                    entityNames.push.apply(entityNames, segmentEntityNames);
                }
                return entityNames;
            }, QnaSinglePhrasingEditorComponent.prototype.getEntityNames = function(values) {
                var entityNames = [];
                return values && _.forEach(Array.from(values), function(roleOrTermSegment) {
                    var roleOrTermSegmentValue = roleOrTermSegment[1];
                    roleOrTermSegmentValue && isRoleValue(roleOrTermSegmentValue) && entityNames.push(roleOrTermSegmentValue.entity.lsdlName);
                }), entityNames;
            }, QnaSinglePhrasingEditorComponent.prototype.getInitialSelectedPhrasingTypeDisplayInfo = function() {
                var _a, initialSelectedType = (null === (_a = this.existingModel) || void 0 === _a ? void 0 : _a.phrasing) ? getQnaPhrasingType(this.existingModel.phrasing) : void 0;
                return null == initialSelectedType && (initialSelectedType = "Verb"), _.find(this.flatternedTypesAndGroupsDisplayInfo, function(typeInfo) {
                    return !0 !== typeInfo.isGroupHeader && typeInfo.type === initialSelectedType;
                });
            }, QnaSinglePhrasingEditorComponent.prototype.buildOptionalItemInsertOptions = function(phrasingTemplate, basedOnMainPhrasingValue) {
                var _this = this, options = [];
                this.optionalItemInsertOptionsRegenerationSubject.next();
                var destroy = (0, merge.T)(this.optionalItemInsertOptionsRegenerationSubject, this.onDestroy$), optionalMainSegments = _.map(phrasingTemplate.mainItemSegments, function(segment) {
                    var _a, _b, _c, _d, entity;
                    if ("Role" === segment.type && (entity = "model" === basedOnMainPhrasingValue.type ? function(phrasingModel, roleSegmentId, allEnities) {
                        var role = qna_single_phrasing_editor_component_getRoleModel(phrasingModel, roleSegmentId);
                        if (role) return _.find(allEnities, function(entity) {
                            return entity.lsdlName === role.entity;
                        });
                    }(basedOnMainPhrasingValue.value, segment.id, _this.lsdlEntities) : null === (_a = basedOnMainPhrasingValue.value.get(segment.id)) || void 0 === _a ? void 0 : _a.entity, 
                    (null === (_b = segment.hiddenByDefaultInfo) || void 0 === _b ? void 0 : _b.value) && "userInsert" === (null === (_d = null === (_c = segment.hiddenByDefaultInfo) || void 0 === _c ? void 0 : _c.unhideTrigger) || void 0 === _d ? void 0 : _d.type))) {
                        var disabledSubject$ = new BehaviorSubject.X(!!entity);
                        return {
                            id: segment.id,
                            forRoleSegment: !0,
                            label: _this.getSegmentControlLabel(segment.label),
                            disabled$: disabledSubject$
                        };
                    }
                });
                return options.push.apply(options, _.filter(optionalMainSegments, function(s) {
                    return !!s;
                })), options.push.apply(options, _.map(phrasingTemplate.optionalItems, function(item) {
                    var disabledSubject$ = new BehaviorSubject.X(!1);
                    return (0, combineLatest.aj)([ _this.optionalItemsGroupMap.get(item.type).instances$, _this.contextualLabelInvolvedDisabled$ ]).pipe((0, 
                    takeUntil.R)(destroy)).subscribe(function(_a) {
                        var contextualLabelInvolvedDisabled = _a[1], disabled = !1;
                        if (item.involveContextualLabel && (null == contextualLabelInvolvedDisabled ? void 0 : contextualLabelInvolvedDisabled.disabled) && (disabled = !0), 
                        !disabled && item.enableAddCondition) {
                            var count = _.size(_a[0]);
                            item.enableAddCondition.countLimit > 0 && count === item.enableAddCondition.countLimit && (disabled = !0), 
                            item.enableAddCondition.uiCountLimit > 0 && count === item.enableAddCondition.uiCountLimit && (disabled = !0);
                        }
                        disabledSubject$.next(disabled);
                    }), {
                        id: item.type,
                        forRoleSegment: !1,
                        label: _this.getSegmentControlLabel(item.label),
                        disabled$: disabledSubject$
                    };
                })), options;
            }, QnaSinglePhrasingEditorComponent.prototype.setupOrUpdateOptionalItemsRelated = function(phrasingTemplate, isFirstTimeSetup) {
                this.setupOrUpdateOptionalItemsGroup(phrasingTemplate, "Condition", this.phrasingSectionModelToUidMap.Condition, isFirstTimeSetup), 
                this.setupOrUpdateOptionalItemsGroup(phrasingTemplate, "Preposition", this.phrasingSectionModelToUidMap.Preposition, isFirstTimeSetup), 
                this.setupOrUpdateOptionalItemsGroup(phrasingTemplate, "SemanticSlotWhen", this.phrasingSectionModelToUidMap.SemanticSlotWhen, isFirstTimeSetup), 
                this.setupOrUpdateOptionalItemsGroup(phrasingTemplate, "SemanticSlotWhere", this.phrasingSectionModelToUidMap.SemanticSlotWhere, isFirstTimeSetup), 
                this.setupOrUpdateOptionalItemsGroup(phrasingTemplate, "SemanticSlotDuration", this.phrasingSectionModelToUidMap.SemanticSlotDuration, isFirstTimeSetup), 
                this.setupOrUpdateOptionalItemsGroup(phrasingTemplate, "SemanticSlotOccurrences", this.phrasingSectionModelToUidMap.SemanticSlotOccurrences, isFirstTimeSetup), 
                this.isSemanticSlotsSectionEmpty$ = (0, combineLatest.aj)([ this.optionalItemsGroupMap.get("SemanticSlotWhen").instances$, this.optionalItemsGroupMap.get("SemanticSlotWhere").instances$, this.optionalItemsGroupMap.get("SemanticSlotDuration").instances$, this.optionalItemsGroupMap.get("SemanticSlotOccurrences").instances$ ]).pipe((0, 
                map.U)(function(_a) {
                    var where = _a[1], duration = _a[2], occurrences = _a[3];
                    return _.isEmpty(_a[0]) && _.isEmpty(where) && _.isEmpty(duration) && _.isEmpty(occurrences);
                })), this.setShouldEnableApplyPhrasing();
            }, QnaSinglePhrasingEditorComponent.prototype.setupOrUpdateOptionalItemsGroup = function(phrasingTemplate, optionalItemType, initialExistingModelToUidMap, isFirstTimeSetup) {
                var _a, _b, _c, _d, _e, supportedOptionalItemTemplate = _.find(phrasingTemplate.optionalItems, function(item) {
                    return item.type === optionalItemType;
                }), disableInfo = supportedOptionalItemTemplate ? {
                    disabled: !1
                } : {
                    disabled: !0,
                    disabledReasonCode: "notSupportedForPhrasingType"
                }, supportTargetItemGroup = !!supportedOptionalItemTemplate;
                if (isFirstTimeSetup && supportTargetItemGroup || !isFirstTimeSetup && supportTargetItemGroup && !this.optionalItemsGroupMap.get(optionalItemType)) {
                    debug.fF.assertValue(supportedOptionalItemTemplate, "supportedOptionalItemTemplate should be defined if we are going to create initial info for its associated optional item type");
                    var template = _.cloneDeep(supportedOptionalItemTemplate), contextualLabelSegIdx = _.findIndex(template.segments, function(seg) {
                        return "contextualPlaceholder" === seg.label.type;
                    });
                    if (-1 !== contextualLabelSegIdx) {
                        debug.fF.assertValue(this.contextualLabel$, "Expect this.contextualLabel$ to be defined");
                        var currentContextualLabelSeg_1 = template.segments[contextualLabelSegIdx];
                        template.segments[contextualLabelSegIdx] = (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, currentContextualLabelSeg_1), {
                            label: {
                                type: "contextualContent",
                                value: this.contextualLabel$.asObservable().pipe((0, map.U)(function(value) {
                                    return "prefix" === currentContextualLabelSeg_1.label.value ? null == value ? void 0 : value.prefix : null == value ? void 0 : value.suffix;
                                }))
                            }
                        });
                    }
                    if ("Condition" === optionalItemType) {
                        var newValue = {
                            template,
                            instances$: instances$ = new BehaviorSubject.X(void 0),
                            disabled$: new BehaviorSubject.X(disableInfo)
                        };
                        this.optionalItemsGroupMap.set(optionalItemType, newValue), !_.isEmpty(initialExistingModelToUidMap) || supportedOptionalItemTemplate.promoted && !(null === (_d = this.existingModel) || void 0 === _d ? void 0 : _d.phrasing) ? instances$.next(_.isEmpty(initialExistingModelToUidMap) ? [ {
                            type: "model",
                            value: void 0,
                            uid: Utility.b$.generateGuid()
                        } ] : _.map(initialExistingModelToUidMap, function(modelToIdEntry) {
                            return {
                                type: "model",
                                value: modelToIdEntry[0],
                                uid: modelToIdEntry[1]
                            };
                        })) : instances$.next(void 0);
                    } else {
                        var instances$;
                        newValue = {
                            template,
                            instances$: instances$ = new BehaviorSubject.X(void 0),
                            disabled$: new BehaviorSubject.X(disableInfo)
                        }, this.optionalItemsGroupMap.set(optionalItemType, newValue), !_.isEmpty(initialExistingModelToUidMap) || supportedOptionalItemTemplate.promoted && !(null === (_e = this.existingModel) || void 0 === _e ? void 0 : _e.phrasing) ? instances$.next(_.isEmpty(initialExistingModelToUidMap) ? [ {
                            type: "model",
                            value: void 0,
                            uid: Utility.b$.generateGuid()
                        } ] : _.map(initialExistingModelToUidMap, function(modelToIdEntry) {
                            return {
                                type: "model",
                                value: modelToIdEntry[0],
                                uid: modelToIdEntry[1]
                            };
                        })) : instances$.next(void 0);
                    }
                } else {
                    null === (_b = null === (_a = this.optionalItemsGroupMap.get(optionalItemType)) || void 0 === _a ? void 0 : _a.disabled$) || void 0 === _b || _b.next(disableInfo);
                    var isSwitchToExitingPhrasingOriginalType = !isFirstTimeSetup && (null === (_c = this.existingModel) || void 0 === _c ? void 0 : _c.phrasing) && getQnaPhrasingType(this.existingModel.phrasing) === phrasingTemplate.phrasingType;
                    if ((null == supportedOptionalItemTemplate ? void 0 : supportedOptionalItemTemplate.promoted) && _.isEmpty(this.optionalItemsGroupMap.get(optionalItemType).instances$.value) && !isSwitchToExitingPhrasingOriginalType) {
                        var newInstance = {
                            type: "model",
                            value: void 0,
                            uid: Utility.b$.generateGuid()
                        };
                        this.optionalItemsGroupMap.get(optionalItemType).instances$.next([ newInstance ]);
                    } else ((null == supportedOptionalItemTemplate ? void 0 : supportedOptionalItemTemplate.promoted) && _.isEmpty(initialExistingModelToUidMap) && !this.isPhrasingSectionUpdatedMap.get(optionalItemType).value && isSwitchToExitingPhrasingOriginalType || supportedOptionalItemTemplate && !supportedOptionalItemTemplate.promoted && _.isEmpty(initialExistingModelToUidMap) && !this.isPhrasingSectionUpdatedMap.get(optionalItemType).value) && this.optionalItemsGroupMap.get(optionalItemType).instances$.next(void 0);
                }
            }, QnaSinglePhrasingEditorComponent.prototype.addOptionalItemInstance = function(type) {
                this.addDeleteOptionalItemInstanceInternal(type, "add");
            }, QnaSinglePhrasingEditorComponent.prototype.addDeleteOptionalItemInstanceInternal = function(type, actionType, indexIfDelete) {
                var _a, _this = this;
                void 0 === indexIfDelete && (indexIfDelete = -1);
                var stream$ = this.optionalItemsGroupMap.get(type).instances$, newInstances = (0, 
                tslib_es6.__spreadArray)([], null !== (_a = stream$.value) && void 0 !== _a ? _a : [], !0);
                if (_.forEach(stream$.value, function(_instance, index) {
                    var instanceState = _this.phrasingSectionStateMap[type][index];
                    newInstances[index] = {
                        type: "segmentValues",
                        value: instanceState.dynamicSegmentValues,
                        uid: instanceState.uid
                    };
                }), "delete" === actionType) debug.fF.assert(function() {
                    return indexIfDelete >= 0;
                }, "action type is delete, indexIfDelete must be valid"), newInstances.splice(indexIfDelete, 1); else {
                    var emptyModel = {
                        type: "model",
                        value: void 0,
                        uid: Utility.b$.generateGuid()
                    };
                    newInstances.push(emptyModel);
                }
                stream$.next(newInstances), 0 === _.size(newInstances) && this.optionalItemsGroupMap.get(type).disabled$.next({
                    disabled: !1
                }), this.isPhrasingSectionUpdatedMap.get(type).next(!0);
            }, QnaSinglePhrasingEditorComponent.prototype.getSegmentControlLabel = function(segmentLabel) {
                return "key" === segmentLabel.type ? this.localizationService.get(segmentLabel.value) : segmentLabel.value;
            }, QnaSinglePhrasingEditorComponent.prototype.addOptionalItem = function(item) {
                if (item.forRoleSegment) {
                    this.mainSegmentControlsComponent.setRoleSegmentHidden(item.id, !1);
                    var matchingInsertOption = _.find(this.insertOptionalItemOptionsInternal$.value, function(option) {
                        return option.id === item.id;
                    });
                    matchingInsertOption && matchingInsertOption.disabled$.next(!0);
                } else this.addOptionalItemInstance(item.id);
            }, QnaSinglePhrasingEditorComponent.prototype.getContextualLabelContent = function(phrasing) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var roles, fragmentRelationship, fragmentPhrasing, addPhrasingVisitor, fragmentLsdlDocumentModel, phrasingLabels, labelResult;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return phrasing ? (roles = (0, tslib_es6.__spreadArray)([], this.workingFragmentRelationshipModel.roles, !0), 
                            fragmentRelationship = createEmptyRelationship((0, tslib_es6.__spreadArray)([], null != roles ? roles : [], !0)), 
                            fragmentPhrasing = phrasing.clone(fragmentRelationship), addPhrasingVisitor = new RelationshipAddPhrasingVisitor(fragmentRelationship), 
                            (0, lsdl_phrasing_visitor.C)(fragmentPhrasing, addPhrasingVisitor), (fragmentLsdlDocumentModel = new lsdl_document_model.X({
                                Version: this.initialLinguisticSchema.Version,
                                Language: this.initialLinguisticSchema.Language,
                                Relationships: {}
                            })).addRelationship(fragmentRelationship), fragmentLsdlDocumentModel.commit() ? [ 4, generatePhrasingLabels(JSON.parse(fragmentLsdlDocumentModel.toJsonString()), this.qnaService) ] : [ 2 ]) : [ 2 ];

                          case 1:
                            return phrasingLabels = _a.sent(), debug.fF.assert(function() {
                                return 1 === _.size(phrasingLabels);
                            }, "phrasing is valid, expect get contextual label for it"), this.latestProposedPhrasingId = phrasingLabels.Labels[0].ProposedIdentifier, 
                            (labelResult = phrasingLabels.Labels[0]) ? [ 2, {
                                prefix: labelResult.PrefixContextualLabel,
                                suffix: labelResult.SuffixContextualLabel
                            } ] : [ 2 ];
                        }
                    });
                });
            }, QnaSinglePhrasingEditorComponent.prototype.disableDiagnosticMessages = function() {
                this.diagnosticsDisabled$.next(!0);
            }, QnaSinglePhrasingEditorComponent.\u0275fac = function(t) {
                return new (t || QnaSinglePhrasingEditorComponent)(fesm2022_core["\u0275\u0275directiveInject"](fesm2022_core.ChangeDetectorRef), fesm2022_core["\u0275\u0275directiveInject"](localization_service.o), fesm2022_core["\u0275\u0275directiveInject"](desktop_qna_service.r));
            }, QnaSinglePhrasingEditorComponent.\u0275cmp = fesm2022_core["\u0275\u0275defineComponent"]({
                type: QnaSinglePhrasingEditorComponent,
                selectors: [ [ "qna-single-phrasing-editor" ] ],
                viewQuery: function(rf, ctx) {
                    if (1 & rf && (fesm2022_core["\u0275\u0275viewQuery"](QnaPhrasingSegmentControlsMainComponent, 5), 
                    fesm2022_core["\u0275\u0275viewQuery"](QnaSinglePhrasingConditionComponent, 5), 
                    fesm2022_core["\u0275\u0275viewQuery"](QnaSinglePhrasingPrepositionsComponent, 5), 
                    fesm2022_core["\u0275\u0275viewQuery"](QnaSinglePhrasingSemanticSlotsComponent, 5)), 
                    2 & rf) {
                        var _t = void 0;
                        fesm2022_core["\u0275\u0275queryRefresh"](_t = fesm2022_core["\u0275\u0275loadQuery"]()) && (ctx._mainSegmentControls = _t.first), 
                        fesm2022_core["\u0275\u0275queryRefresh"](_t = fesm2022_core["\u0275\u0275loadQuery"]()) && (ctx._conditionSectionComponent = _t.first), 
                        fesm2022_core["\u0275\u0275queryRefresh"](_t = fesm2022_core["\u0275\u0275loadQuery"]()) && (ctx._prepositionSectionComponent = _t.first), 
                        fesm2022_core["\u0275\u0275queryRefresh"](_t = fesm2022_core["\u0275\u0275loadQuery"]()) && (ctx._semanticSlotsSectionComponent = _t.first);
                    }
                },
                inputs: {
                    initialDocumentModel: "initialDocumentModel",
                    fieldsModel: "fieldsModel",
                    allEntityVariantLabels: "allEntityVariantLabels",
                    initialDiagnostics: "initialDiagnostics",
                    existingModel: "existingModel"
                },
                outputs: {
                    cancelRequested: "cancelRequested",
                    phrasingLuciaModelChangeRequested: "phrasingLuciaModelChangeRequested"
                },
                features: [ fesm2022_core["\u0275\u0275InheritDefinitionFeature"] ],
                decls: 25,
                vars: 33,
                consts: [ [ 1, "qnaSinglePhrasingEditor" ], [ "class", "diagnosticsContainer tri-caption1", 3, "ngClass", 4, "ngIf" ], [ 1, "labelledTypesAndInsertOptionalItemsContainer" ], [ "id", "phrasingTypeLabel", 1, "tri-caption1-strong", 3, "localize" ], [ 1, "typesAndInsertOptionalItemsContainer" ], [ 1, "phrasingTypesDropdownContainer", "dropdownOutterContainer" ], [ "class", "tri-caption1", 3, "compact", "ariaLabelledby", "value", "valueChange", 4, "ngIf" ], [ "tri-button", "", "appearance", "subtle", 1, "tri-caption1", "insertOptionalItemsTrigger", 3, "triMenu", "triMenuCloseOnButtonClick", "menuMode", "triMenuButtonClick" ], [ 3, "localize" ], [ 3, "name" ], [ 3, "initialLinguisticSchema", "fieldsModel", "lsdlEntities", "allEntityVariantLabels", "segmentsInfo", "getRoleModelFunc", "getTermsFunc", "validations", "parentRelationship", "disallowDelete", 4, "ngIf" ], [ 4, "ngIf" ], [ "class", "sectionContainer", 3, "ngClass", "initialLinguisticSchema", "fieldsModel", "lsdlEntities", "allEntityVariantLabels", "itemsInfo", "deleteInstance", 4, "ngIf" ], [ 1, "sectionContainer", 3, "tables", "selectedTable", "noEmptyRelationshipTableWarning", "selectedTableChanged" ], [ 1, "actionsContainer", "sectionContainer" ], [ "tri-button", "", "class", "apply-button", "appearance", "primary", 3, "ngClass", "click", 4, "ngIf" ], [ "tri-button", "", 1, "cancel-button", 3, "click" ], [ 1, "diagnosticsContainer", "tri-caption1", 3, "ngClass" ], [ "tri-svg-icon-16", "", 1, "messageIcon", 3, "name" ], [ 1, "messageContainer" ], [ "class", "messageNavigatorContainer", 4, "ngIf" ], [ 1, "messageNavigatorContainer" ], [ "tri-button", "", "appearance", "subtle", 1, "messageNavigator", 3, "click" ], [ "tri-svg-icon-16", "", 3, "name" ], [ 1, "tri-caption1", 3, "compact", "ariaLabelledby", "value", "valueChange" ], [ 1, "dropdownTrigger" ], [ 3, "innerHtml", 4, "ngIf" ], [ "class", "dropdownItem", 3, "ngClass", "value", 4, "ngFor", "ngForOf" ], [ 3, "innerHtml" ], [ 1, "dropdownItem", 3, "ngClass", "value" ], [ 1, "dropdownItemContent", 3, "ngClass", "innerHtml" ], [ 3, "initialLinguisticSchema", "fieldsModel", "lsdlEntities", "allEntityVariantLabels", "segmentsInfo", "getRoleModelFunc", "getTermsFunc", "validations", "parentRelationship", "disallowDelete" ], [ 1, "sectionContainer", 3, "ngClass", "initialLinguisticSchema", "fieldsModel", "lsdlEntities", "allEntityVariantLabels", "itemsInfo", "deleteInstance" ], [ "class", "sectionContainer", 3, "ngClass", "initialLinguisticSchema", "fieldsModel", "lsdlEntities", "allEntityVariantLabels", "fromConditions", "deleteInstance", 4, "ngIf" ], [ 1, "sectionContainer", 3, "ngClass", "initialLinguisticSchema", "fieldsModel", "lsdlEntities", "allEntityVariantLabels", "fromConditions", "deleteInstance" ], [ "tri-button", "", "appearance", "primary", 1, "apply-button", 3, "ngClass", "click" ] ],
                template: function(rf, ctx) {
                    1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 0), fesm2022_core["\u0275\u0275template"](1, QnaSinglePhrasingEditorComponent_div_1_Template, 7, 10, "div", 1), 
                    fesm2022_core["\u0275\u0275elementStart"](2, "div", 2), fesm2022_core["\u0275\u0275element"](3, "label", 3), 
                    fesm2022_core["\u0275\u0275elementStart"](4, "div", 4)(5, "div", 5), fesm2022_core["\u0275\u0275template"](6, QnaSinglePhrasingEditorComponent_tri_dropdown_6_Template, 4, 5, "tri-dropdown", 6), 
                    fesm2022_core["\u0275\u0275pipe"](7, "async"), fesm2022_core["\u0275\u0275elementEnd"](), 
                    fesm2022_core["\u0275\u0275elementStart"](8, "button", 7), fesm2022_core["\u0275\u0275listener"]("triMenuButtonClick", function($event) {
                        return ctx.insertOptionalItemClicked($event);
                    }), fesm2022_core["\u0275\u0275pipe"](9, "async"), fesm2022_core["\u0275\u0275element"](10, "span", 8)(11, "tri-svg-icon", 9), 
                    fesm2022_core["\u0275\u0275elementEnd"]()()(), fesm2022_core["\u0275\u0275template"](12, QnaSinglePhrasingEditorComponent_qna_phrasing_segmentControls_main_12_Template, 1, 10, "qna-phrasing-segmentControls-main", 10), 
                    fesm2022_core["\u0275\u0275pipe"](13, "async"), fesm2022_core["\u0275\u0275template"](14, QnaSinglePhrasingEditorComponent_ng_container_14_Template, 3, 3, "ng-container", 11), 
                    fesm2022_core["\u0275\u0275template"](15, QnaSinglePhrasingEditorComponent_qna_single_phrasing_semanticSlots_15_Template, 2, 10, "qna-single-phrasing-semanticSlots", 12), 
                    fesm2022_core["\u0275\u0275pipe"](16, "async"), fesm2022_core["\u0275\u0275template"](17, QnaSinglePhrasingEditorComponent_ng_container_17_Template, 3, 3, "ng-container", 11), 
                    fesm2022_core["\u0275\u0275elementStart"](18, "qna-single-phrasing-relationshipTables", 13), 
                    fesm2022_core["\u0275\u0275listener"]("selectedTableChanged", function($event) {
                        return ctx.onSelectedTableChanged($event);
                    }), fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275elementStart"](19, "div", 14), 
                    fesm2022_core["\u0275\u0275template"](20, QnaSinglePhrasingEditorComponent_button_20_Template, 3, 7, "button", 15), 
                    fesm2022_core["\u0275\u0275pipe"](21, "async"), fesm2022_core["\u0275\u0275elementStart"](22, "button", 16), 
                    fesm2022_core["\u0275\u0275listener"]("click", function() {
                        return ctx.cancelButtonClicked();
                    }), fesm2022_core["\u0275\u0275text"](23), fesm2022_core["\u0275\u0275pipe"](24, "localize"), 
                    fesm2022_core["\u0275\u0275elementEnd"]()()()), 2 & rf && (fesm2022_core["\u0275\u0275advance"](1), 
                    fesm2022_core["\u0275\u0275property"]("ngIf", ctx.diagnosticMessagesCount), fesm2022_core["\u0275\u0275advance"](2), 
                    fesm2022_core["\u0275\u0275property"]("localize", "Qna_ManagePhrasings_PhrasingType"), 
                    fesm2022_core["\u0275\u0275advance"](3), fesm2022_core["\u0275\u0275property"]("ngIf", fesm2022_core["\u0275\u0275pureFunction1"](29, qna_single_phrasing_editor_component_c4, fesm2022_core["\u0275\u0275pipeBind1"](7, 17, ctx.selectedTypeDisplayInfo$))), 
                    fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("triMenu", fesm2022_core["\u0275\u0275pipeBind1"](9, 19, ctx.insertOptionalItemsMenu$))("triMenuCloseOnButtonClick", !0)("menuMode", ctx.compactMenuMode), 
                    fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("localize", "Qna_Phrasing_AddOptionalItemTitle"), 
                    fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("name", "chevron_down_20_regular"), 
                    fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", fesm2022_core["\u0275\u0275pipeBind1"](13, 21, ctx.mainSegments$)), 
                    fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("ngIf", ctx.prepositionItemsInfo), 
                    fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", !fesm2022_core["\u0275\u0275pipeBind1"](16, 23, ctx.isSemanticSlotsSectionEmpty$)), 
                    fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("ngIf", ctx.conditionItemsInfo), 
                    fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("tables", ctx.tables)("selectedTable", ctx.selectedTable)("noEmptyRelationshipTableWarning", ctx.noEmptyRelationshipTableWarning), 
                    fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("ngIf", fesm2022_core["\u0275\u0275pureFunction1"](31, qna_single_phrasing_editor_component_c5, !fesm2022_core["\u0275\u0275pipeBind1"](21, 25, ctx.shouldEnableApplyPhrasing$))), 
                    fesm2022_core["\u0275\u0275advance"](3), fesm2022_core["\u0275\u0275textInterpolate1"](" ", fesm2022_core["\u0275\u0275pipeBind1"](24, 27, "Cancel_ButtonText"), " "));
                },
                dependencies: [ common.NgClass, common.NgForOf, common.NgIf, localize_directive.X, tri_dropdown_component.M3, tri_dropdown_item_component.l, tri_dropdown_item_menu_directive.q, tri_dropdown_component.ii, tri_menu_directive.rX, tri_svg_icon_component.M, QnaPhrasingSegmentControlsMainComponent, QnaSinglePhrasingConditionComponent, QnaSinglePhrasingPrepositionsComponent, QnaSinglePhrasingRelationshipTableComponent, QnaSinglePhrasingSemanticSlotsComponent, common.AsyncPipe, localize_pipe.F ],
                styles: [ ".qnaSinglePhrasingEditor[_ngcontent-%COMP%]{width:100%;display:block;padding:var(--spacingVerticalXS) var(--spacingHorizontalL);box-sizing:border-box}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .labelledTypesAndInsertOptionalItemsContainer[_ngcontent-%COMP%]{display:flex;flex-direction:column}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .labelledTypesAndInsertOptionalItemsContainer[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{margin-bottom:var(--spacingVerticalXS)}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .labelledTypesAndInsertOptionalItemsContainer[_ngcontent-%COMP%]   .typesAndInsertOptionalItemsContainer[_ngcontent-%COMP%]{display:flex;flex-direction:row;align-items:center;margin-bottom:var(--spacingVerticalXS)}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .labelledTypesAndInsertOptionalItemsContainer[_ngcontent-%COMP%]   .typesAndInsertOptionalItemsContainer[_ngcontent-%COMP%]   .phrasingTypesDropdownContainer[_ngcontent-%COMP%]{width:70%}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .labelledTypesAndInsertOptionalItemsContainer[_ngcontent-%COMP%]   .typesAndInsertOptionalItemsContainer[_ngcontent-%COMP%]   .insertOptionalItemsTrigger[_ngcontent-%COMP%]{margin:0 var(--spacingHorizontalM);border:none;display:flex;align-items:center;height:fit-content}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .labelledTypesAndInsertOptionalItemsContainer[_ngcontent-%COMP%]   .typesAndInsertOptionalItemsContainer[_ngcontent-%COMP%]   tri-dropdown[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:stretch}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .diagnosticsContainer[_ngcontent-%COMP%]{display:flex;align-items:flex-start;margin:0 calc(-1 * var(--spacingHorizontalL)) var(--spacingHorizontalS) calc(-1 * var(--spacingHorizontalL));padding:var(--spacingHorizontalXS) var(--spacingHorizontalS);color:var(--colorNeutralForeground1);background-color:var(--globalColorRedTint60);border-color:var(--globalColorRedTint40);border-bottom:1px solid var(--globalColorRedTint40)}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .diagnosticsContainer.isDisabled[_ngcontent-%COMP%]{pointer-events:none;opacity:.6}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .diagnosticsContainer.isDisabled[_ngcontent-%COMP%]   tri-svg-icon[_ngcontent-%COMP%]{opacity:.6}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .diagnosticsContainer[_ngcontent-%COMP%]   .messageContainer[_ngcontent-%COMP%]{flex:1}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .diagnosticsContainer[_ngcontent-%COMP%]   .messageIcon[_ngcontent-%COMP%], .qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .diagnosticsContainer[_ngcontent-%COMP%]   .messageNavigator[_ngcontent-%COMP%]{padding:0;margin:0 var(--spacingHorizontalXS)}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .diagnosticsContainer[_ngcontent-%COMP%]   .messageIcon[_ngcontent-%COMP%]:hover, .qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .diagnosticsContainer[_ngcontent-%COMP%]   .messageNavigator[_ngcontent-%COMP%]:hover{background-color:transparent}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .diagnosticsContainer[_ngcontent-%COMP%]   .messageNavigator[_ngcontent-%COMP%]{height:auto}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .dropdownOutterContainer[_ngcontent-%COMP%]   tri-dropdown[_ngcontent-%COMP%], .qnaSinglePhrasingEditor[_nghost-%COMP%]   .dropdownOutterContainer[_ngcontent-%COMP%]   tri-dropdown[_ngcontent-%COMP%], .qnaSinglePhrasingEditor   [_nghost-%COMP%]   .dropdownOutterContainer[_ngcontent-%COMP%]   tri-dropdown[_ngcontent-%COMP%]{width:100%}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]     tri-dropdown .popout-button[disabled], .qnaSinglePhrasingEditor[_nghost-%COMP%]     tri-dropdown .popout-button[disabled], .qnaSinglePhrasingEditor   [_nghost-%COMP%]     tri-dropdown .popout-button[disabled], .qnaSinglePhrasingEditor[_ngcontent-%COMP%]     [tri-textfield] input[aria-disabled=true], .qnaSinglePhrasingEditor[_nghost-%COMP%]     [tri-textfield] input[aria-disabled=true], .qnaSinglePhrasingEditor   [_nghost-%COMP%]     [tri-textfield] input[aria-disabled=true]{border-color:var(--gray-70)}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]     .drag-drop-picker, .qnaSinglePhrasingEditor[_nghost-%COMP%]     .drag-drop-picker, .qnaSinglePhrasingEditor   [_nghost-%COMP%]     .drag-drop-picker{border-radius:var(--borderRadiusMedium)}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .sectionContainer[_ngcontent-%COMP%], .qnaSinglePhrasingEditor   .sectionContainer[_nghost-%COMP%], .qnaSinglePhrasingEditor   .sectionContainer   [_nghost-%COMP%]{border-top:1px solid var(--colorNeutralStroke1);padding-top:var(--spacingVerticalS);margin-top:var(--spacingVerticalS);display:flex;flex-direction:column}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .sectionContainer.isDisabled[_ngcontent-%COMP%]   .topContainer[_ngcontent-%COMP%] > *[_ngcontent-%COMP%], .qnaSinglePhrasingEditor   .sectionContainer.isDisabled[_nghost-%COMP%]   .topContainer[_ngcontent-%COMP%] > *[_ngcontent-%COMP%], .qnaSinglePhrasingEditor   .sectionContainer   .isDisabled[_nghost-%COMP%]   .topContainer[_ngcontent-%COMP%] > *[_ngcontent-%COMP%]{opacity:.6;pointer-events:none}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .sectionContainer.isDisabled[_ngcontent-%COMP%]   .topContainer[_ngcontent-%COMP%] > *.sectionLabel[_ngcontent-%COMP%], .qnaSinglePhrasingEditor   .sectionContainer.isDisabled[_nghost-%COMP%]   .topContainer[_ngcontent-%COMP%] > *.sectionLabel[_ngcontent-%COMP%], .qnaSinglePhrasingEditor   .sectionContainer   .isDisabled[_nghost-%COMP%]   .topContainer[_ngcontent-%COMP%] > *.sectionLabel[_ngcontent-%COMP%]{opacity:1;pointer-events:auto}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .sectionContainer[_ngcontent-%COMP%]   .topContainer[_ngcontent-%COMP%], .qnaSinglePhrasingEditor   .sectionContainer[_nghost-%COMP%]   .topContainer[_ngcontent-%COMP%], .qnaSinglePhrasingEditor   .sectionContainer   [_nghost-%COMP%]   .topContainer[_ngcontent-%COMP%]{display:flex;flex-direction:column}.qnaSinglePhrasingEditor[_ngcontent-%COMP%]   .sectionContainer.actionsContainer[_ngcontent-%COMP%], .qnaSinglePhrasingEditor   .sectionContainer.actionsContainer[_nghost-%COMP%], .qnaSinglePhrasingEditor   .sectionContainer   .actionsContainer[_nghost-%COMP%]{flex-direction:row;justify-content:flex-end;gap:var(--spacingHorizontalS)}.menuContainer[_ngcontent-%COMP%]{margin:0,var(--spacingHorizontalM);display:flex;flex-direction:column;align-items:flex-start}.menuContainer[_ngcontent-%COMP%]   .menuItemContainer[_ngcontent-%COMP%]{border:none;width:100%;justify-content:flex-start}.dropdownTrigger[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{border:none;padding-left:var(--spacingHorizontalXS)}.dropdownItem[_ngcontent-%COMP%]{box-sizing:border-box}.dropdownItem.disallowSelect[_ngcontent-%COMP%]{pointer-events:none}.dropdownItemContent[_ngcontent-%COMP%]{padding-left:var(--spacingHorizontalXS)}.dropdownItemContent.withIndentation[_ngcontent-%COMP%]{padding-left:var(--spacingHorizontalL)}  .cdk-overlay-pane tri-menu-other [trimenuitem].tri-menu-item{font-family:var(--fontFamilyBase);font-size:var(--fontSizeBase200);font-weight:var(--fontWeightRegular);line-height:var(--lineHeightBase200);height:24px;min-height:24px}  .cdk-overlay-pane.qnaRoleSelectorFieldListOverlayPanel{min-height:unset!important}  .cdk-overlay-pane.qnaRoleSelectorFieldListOverlayPanel .dropdown-scroll{height:100%}" ],
                changeDetection: 0
            }), QnaSinglePhrasingEditorComponent;
        }(rx_component.w);
        function getTerms(phrasingModel, termSegmentId) {
            if (phrasingModel) {
                var phrasingKind = phrasingModel.kind;
                switch (phrasingKind) {
                  case 1:
                    return debug.fF.assert(function() {
                        return "adjective" === termSegmentId || "antonym" === termSegmentId;
                    }, "Expect either 'adjective' or 'antonym' for segment id of PhrsingKind.Adjective"), 
                    "adjective" === termSegmentId ? _.map(phrasingModel.adjectives, function(adj) {
                        return adj.value;
                    }) : _.map(phrasingModel.antonyms, function(ant) {
                        return ant.value;
                    });

                  case 2:
                    return _.map(phrasingModel.nouns, function(noun) {
                        return noun.value;
                    });

                  case 5:
                    return _.map(phrasingModel.verbs, function(verb) {
                        return verb.value;
                    });

                  case 6:
                    return _.map(phrasingModel.prepositions, function(prep) {
                        return prep.value;
                    });

                  case 3:
                  case 4:
                  case 7:
                  case 8:
                    return;

                  default:
                    return void debug.fF.assertNever(phrasingKind);
                }
            }
        }
        function qna_single_phrasing_editor_component_getRoleModel(phrasingModel, roleSegmentId) {
            if (phrasingModel) {
                var phrasingKind = phrasingModel.kind;
                switch (phrasingKind) {
                  case 1:
                    if ("subject" === roleSegmentId) return getRoleProperty(phrasingModel, "subject");
                    if ("measurement" === roleSegmentId) return getRoleProperty(phrasingModel, "measurement");

                  case 2:
                    if ("subject" === roleSegmentId) return getRoleProperty(phrasingModel, "subject");

                  case 3:
                    if ("subject" === roleSegmentId) return getRoleProperty(phrasingModel, "subject");
                    if ("dynamicAdjectives" === roleSegmentId) return getRoleProperty(phrasingModel, "adjective");

                  case 4:
                    if ("subject" === roleSegmentId) return getRoleProperty(phrasingModel, "subject");
                    if ("dynamicNouns" === roleSegmentId) return getRoleProperty(phrasingModel, "noun");

                  case 5:
                    if ("subject" === roleSegmentId) return getRoleProperty(phrasingModel, "subject");
                    if ("object" === roleSegmentId) return getRoleProperty(phrasingModel, "directObject");
                    if ("indirectObject" === roleSegmentId) return getRoleProperty(phrasingModel, "indirectObject");

                  case 6:
                    if ("subject" === roleSegmentId) return getRoleProperty(phrasingModel, "subject");
                    if ("object" === roleSegmentId) return getRoleProperty(phrasingModel, "object");

                  case 7:
                    if ("subject" === roleSegmentId) return getRoleProperty(phrasingModel, "subject");
                    if ("object" === roleSegmentId) return getRoleProperty(phrasingModel, "object");

                  case 8:
                    return "subject" === roleSegmentId ? getRoleProperty(phrasingModel, "subject") : "name" === roleSegmentId ? getRoleProperty(phrasingModel, "name") : void 0;

                  default:
                    debug.fF.assertNever(phrasingKind);
                }
                debug.fF.assertFail("phrasing type: ".concat(phrasingKind, ", unexpected role segment id: ").concat(roleSegmentId));
            }
        }
        function getRoleProperty(lsdlPhrasingModel, property) {
            return lsdlPhrasingModel[property];
        }
        function createEmptyRelationship(roles) {
            var guidName = Utility.b$.generateGuid();
            return new lsdl_relationship_model.W(guidName, void 0, [], void 0, roles, void 0, void 0, "Authored", !0);
        }
        function toStrings(terms) {
            return _.map(terms, function(term) {
                return term.value;
            });
        }
        function isConditionStateInfo(value) {
            var _a;
            return null === (_a = value.dynamicSegmentValues) || void 0 === _a ? void 0 : _a.hasOwnProperty("entity");
        }
        var RelationshipAddPhrasingVisitor = function() {
            function RelationshipAddPhrasingVisitor(relationship, phrasingLsdlReference) {
                this.relationship = relationship, this.phrasingLsdlReference = phrasingLsdlReference;
            }
            return RelationshipAddPhrasingVisitor.prototype.visitAdjectivePhrasing = function(p) {
                this.relationship.addAdjectivePhrasing(p.subject, p.measurement, toStrings(p.adjectives), toStrings(p.antonyms), this.phrasingLsdlReference);
            }, RelationshipAddPhrasingVisitor.prototype.visitNounPhrasing = function(p) {
                this.relationship.addNounPhrasing(p.subject, toStrings(p.nouns), this.phrasingLsdlReference);
            }, RelationshipAddPhrasingVisitor.prototype.visitDynamicAdjectivePhrasing = function(p) {
                this.relationship.addDynamicAdjectivePhrasing(p.subject, p.adjective, this.phrasingLsdlReference);
            }, RelationshipAddPhrasingVisitor.prototype.visitDynamicNounPhrasing = function(p) {
                this.relationship.addDynamicNounPhrasing(p.subject, p.noun, this.phrasingLsdlReference);
            }, RelationshipAddPhrasingVisitor.prototype.visitVerbPhrasing = function(p) {
                this.relationship.addVerbPhrasing(toStrings(p.verbs), p.subject, p.indirectObject, p.directObject, this.phrasingLsdlReference);
            }, RelationshipAddPhrasingVisitor.prototype.visitPrepositionPhrasing = function(p) {
                this.relationship.addPrepositionPhrasing(p.subject, toStrings(p.prepositions), p.object, this.phrasingLsdlReference);
            }, RelationshipAddPhrasingVisitor.prototype.visitAttributePhrasing = function(p) {
                this.relationship.addAttributePhrasing(p.subject, p.object, this.phrasingLsdlReference);
            }, RelationshipAddPhrasingVisitor.prototype.visitNamePhrasing = function(p) {
                this.relationship.addNamePhrasing(p.subject, p.name, this.phrasingLsdlReference);
            }, RelationshipAddPhrasingVisitor;
        }(), RelationshipUpdatePhrasingVisitor = function() {
            function RelationshipUpdatePhrasingVisitor(values) {
                this.values = values;
            }
            return RelationshipUpdatePhrasingVisitor.prototype.visitVerbPhrasing = function(model) {
                model.subject = this.getRoleSegmentRole("subject"), model.object = this.getRoleSegmentRole("object"), 
                model.indirectObject = this.getRoleSegmentRole("indirectObject"), model.updateVerbs(this.values.get("verb"));
            }, RelationshipUpdatePhrasingVisitor.prototype.visitAdjectivePhrasing = function(model) {
                model.subject = this.getRoleSegmentRole("subject"), model.measurement = this.getRoleSegmentRole("measurement"), 
                model.updateAdjectives(this.values.get("adjective")), model.updateAntonyms(this.values.get("antonym"));
            }, RelationshipUpdatePhrasingVisitor.prototype.visitDynamicAdjectivePhrasing = function(model) {
                model.subject = this.getRoleSegmentRole("subject"), model.adjective = this.getRoleSegmentRole("dynamicAdjectives");
            }, RelationshipUpdatePhrasingVisitor.prototype.visitNounPhrasing = function(model) {
                model.subject = this.getRoleSegmentRole("subject"), model.updateNouns(this.values.get("noun"));
            }, RelationshipUpdatePhrasingVisitor.prototype.visitDynamicNounPhrasing = function(model) {
                model.subject = this.getRoleSegmentRole("subject"), model.noun = this.getRoleSegmentRole("dynamicNouns");
            }, RelationshipUpdatePhrasingVisitor.prototype.visitPrepositionPhrasing = function(model) {
                model.subject = this.getRoleSegmentRole("subject"), model.object = this.getRoleSegmentRole("object"), 
                model.updatePrepositions(this.values.get("preposition"));
            }, RelationshipUpdatePhrasingVisitor.prototype.visitNamePhrasing = function(model) {
                model.subject = this.getRoleSegmentRole("subject"), model.name = this.getRoleSegmentRole("name");
            }, RelationshipUpdatePhrasingVisitor.prototype.visitAttributePhrasing = function(model) {
                model.subject = this.getRoleSegmentRole("subject"), model.object = this.getRoleSegmentRole("object");
            }, RelationshipUpdatePhrasingVisitor.prototype.getRoleSegmentRole = function(roleName) {
                var _a;
                return null === (_a = this.values.get(roleName)) || void 0 === _a ? void 0 : _a.role;
            }, RelationshipUpdatePhrasingVisitor;
        }(), spinner_spinner_component = __webpack_require__(91781), tri_pivot_item_component = __webpack_require__(64266), tri_pivot_component = __webpack_require__(94243), qna_manage_phrasings_component_c0 = [ "approveButton" ], qna_manage_phrasings_component_c1 = [ "autoWidthColumnHeader" ], qna_manage_phrasings_component_c2 = [ "phrasingEditor" ], qna_manage_phrasings_component_c3 = [ "scrollableItemsContainer" ];
        function QnaManagePhrasingsComponent_div_0_ng_container_7_ng_container_1_qna_banner_lazy_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r15 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "qna-banner-lazy", 17), fesm2022_core["\u0275\u0275listener"]("onDismiss", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r15);
                    var ctx_r14 = fesm2022_core["\u0275\u0275nextContext"](4);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r14.onBannerDismiss($event));
                }), fesm2022_core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var bannerContent_r12 = fesm2022_core["\u0275\u0275nextContext"]().ngIf;
                fesm2022_core["\u0275\u0275property"]("bannerContent", bannerContent_r12);
            }
        }
        function QnaManagePhrasingsComponent_div_0_ng_container_7_ng_container_1_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275template"](1, QnaManagePhrasingsComponent_div_0_ng_container_7_ng_container_1_qna_banner_lazy_1_Template, 1, 1, "qna-banner-lazy", 16), 
            fesm2022_core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var bannerContent_r12 = ctx.ngIf;
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", null == bannerContent_r12 ? null : bannerContent_r12.showBanners);
            }
        }
        function QnaManagePhrasingsComponent_div_0_ng_container_7_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275template"](1, QnaManagePhrasingsComponent_div_0_ng_container_7_ng_container_1_Template, 2, 1, "ng-container", 4), 
            fesm2022_core["\u0275\u0275pipe"](2, "async"), fesm2022_core["\u0275\u0275elementContainerEnd"]()), 
            2 & rf) {
                var ctx_r2 = fesm2022_core["\u0275\u0275nextContext"](2);
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", fesm2022_core["\u0275\u0275pipeBind1"](2, 1, ctx_r2.bannerContent$));
            }
        }
        function QnaManagePhrasingsComponent_div_0_tri_pivot_11_Template(rf, ctx) {
            if (1 & rf) {
                var _r18 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "tri-pivot", 18), fesm2022_core["\u0275\u0275listener"]("selectedValueChange", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r18);
                    var ctx_r17 = fesm2022_core["\u0275\u0275nextContext"](2);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r17.onPhrasingViewTypeChange($event));
                }), fesm2022_core["\u0275\u0275elementStart"](1, "tri-pivot-item", 19)(2, "span"), 
                fesm2022_core["\u0275\u0275text"](3), fesm2022_core["\u0275\u0275pipe"](4, "localize"), 
                fesm2022_core["\u0275\u0275elementEnd"]()(), fesm2022_core["\u0275\u0275elementStart"](5, "tri-pivot-item", 20), 
                fesm2022_core["\u0275\u0275element"](6, "tri-svg-icon", 21), fesm2022_core["\u0275\u0275elementStart"](7, "span"), 
                fesm2022_core["\u0275\u0275text"](8), fesm2022_core["\u0275\u0275pipe"](9, "localize"), 
                fesm2022_core["\u0275\u0275elementEnd"]()()();
            }
            if (2 & rf) {
                var info_r1 = fesm2022_core["\u0275\u0275nextContext"]().ngIf;
                fesm2022_core["\u0275\u0275property"]("selectedValue", info_r1.viewType), fesm2022_core["\u0275\u0275advance"](3), 
                fesm2022_core["\u0275\u0275textInterpolate"](fesm2022_core["\u0275\u0275pipeBind1"](4, 4, "QnaTooling_ManagePhrasings_Group_Approved")), 
                fesm2022_core["\u0275\u0275advance"](3), fesm2022_core["\u0275\u0275property"]("name", "approved" === info_r1.viewType ? "sparkle_20_regular" : "sparkle_20_filled"), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275textInterpolate"](fesm2022_core["\u0275\u0275pipeBind1"](9, 6, "QnaTooling_ManagePhrasings_Group_CopilotSuggested"));
            }
        }
        var qna_manage_phrasings_component_c4 = function(a0) {
            return {
                "is-disabled": a0
            };
        };
        function QnaManagePhrasingsComponent_div_0_button_13_Template(rf, ctx) {
            if (1 & rf) {
                var _r22 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "button", 22), fesm2022_core["\u0275\u0275listener"]("click", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r22);
                    var ctx_r21 = fesm2022_core["\u0275\u0275nextContext"](2);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r21.createNewPhrasing());
                }), fesm2022_core["\u0275\u0275element"](1, "tri-svg-icon", 23)(2, "span", 24), 
                fesm2022_core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var createNewDisabled_r20 = ctx.ngIf;
                fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction1"](4, qna_manage_phrasings_component_c4, createNewDisabled_r20.value))("disabled", createNewDisabled_r20.value), 
                fesm2022_core["\u0275\u0275attribute"]("aria-disabled", createNewDisabled_r20.value), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("name", "add_20_regular");
            }
        }
        function QnaManagePhrasingsComponent_div_0_div_17_span_4_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "span", 29), fesm2022_core["\u0275\u0275text"](1), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r23 = fesm2022_core["\u0275\u0275nextContext"](3);
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275textInterpolate"](ctx_r23.updatedTimeInfo);
            }
        }
        function QnaManagePhrasingsComponent_div_0_div_17_Template(rf, ctx) {
            if (1 & rf) {
                var _r25 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "div", 25)(1, "button", 26), fesm2022_core["\u0275\u0275listener"]("click", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r25);
                    var ctx_r24 = fesm2022_core["\u0275\u0275nextContext"](2);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r24.refreshCopilotPhrasings());
                }), fesm2022_core["\u0275\u0275pipe"](2, "localize"), fesm2022_core["\u0275\u0275element"](3, "tri-svg-icon", 27), 
                fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275template"](4, QnaManagePhrasingsComponent_div_0_div_17_span_4_Template, 2, 1, "span", 28), 
                fesm2022_core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var info_r1 = fesm2022_core["\u0275\u0275nextContext"]().ngIf, ctx_r5 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("pbiTooltip", fesm2022_core["\u0275\u0275pipeBind1"](2, 3, "Refresh_Suggestions")), 
                fesm2022_core["\u0275\u0275attribute"]("aria-label", ctx_r5.ariaResources.refreshActionLabel), 
                fesm2022_core["\u0275\u0275advance"](3), fesm2022_core["\u0275\u0275property"]("ngIf", info_r1.showCopilotInfo);
            }
        }
        function QnaManagePhrasingsComponent_div_0_div_18_Template(rf, ctx) {
            1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 30), fesm2022_core["\u0275\u0275element"](1, "span", 31)(2, "a", 32), 
            fesm2022_core["\u0275\u0275elementEnd"]());
        }
        function QnaManagePhrasingsComponent_div_0_section_19_div_2_ng_container_1_Template(rf, ctx) {
            1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275element"](1, "tri-svg-icon", 38)(2, "h3", 39)(3, "h3", 40), 
            fesm2022_core["\u0275\u0275elementContainerEnd"]()), 2 & rf && (fesm2022_core["\u0275\u0275advance"](1), 
            fesm2022_core["\u0275\u0275property"]("name", "empty_state_200")("sprite", "empty-state-icons"));
        }
        var qna_manage_phrasings_component_c5 = function(a0) {
            return {
                "background-image": a0
            };
        };
        function QnaManagePhrasingsComponent_div_0_section_19_div_2_ng_template_2_Template(rf, ctx) {
            if (1 & rf && fesm2022_core["\u0275\u0275element"](0, "div", 41)(1, "div", 42), 
            2 & rf) {
                var ctx_r31 = fesm2022_core["\u0275\u0275nextContext"](4);
                fesm2022_core["\u0275\u0275property"]("ngStyle", fesm2022_core["\u0275\u0275pureFunction1"](1, qna_manage_phrasings_component_c5, ctx_r31.emptyStateImage));
            }
        }
        function QnaManagePhrasingsComponent_div_0_section_19_div_2_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div"), fesm2022_core["\u0275\u0275template"](1, QnaManagePhrasingsComponent_div_0_section_19_div_2_ng_container_1_Template, 4, 2, "ng-container", 36), 
            fesm2022_core["\u0275\u0275template"](2, QnaManagePhrasingsComponent_div_0_section_19_div_2_ng_template_2_Template, 2, 3, "ng-template", null, 37, fesm2022_core["\u0275\u0275templateRefExtractor"]), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var _r30 = fesm2022_core["\u0275\u0275reference"](3), info_r1 = fesm2022_core["\u0275\u0275nextContext"](2).ngIf;
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", info_r1.showCopilotInfo)("ngIfElse", _r30);
            }
        }
        function QnaManagePhrasingsComponent_div_0_section_19_div_3_h3_2_Template(rf, ctx) {
            1 & rf && fesm2022_core["\u0275\u0275element"](0, "h3", 45);
        }
        function QnaManagePhrasingsComponent_div_0_section_19_div_3_h3_3_Template(rf, ctx) {
            1 & rf && fesm2022_core["\u0275\u0275element"](0, "h3", 46);
        }
        function QnaManagePhrasingsComponent_div_0_section_19_div_3_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div"), fesm2022_core["\u0275\u0275element"](1, "tri-svg-icon", 38), 
            fesm2022_core["\u0275\u0275template"](2, QnaManagePhrasingsComponent_div_0_section_19_div_3_h3_2_Template, 1, 0, "h3", 43), 
            fesm2022_core["\u0275\u0275template"](3, QnaManagePhrasingsComponent_div_0_section_19_div_3_h3_3_Template, 1, 0, "h3", 44), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var info_r1 = fesm2022_core["\u0275\u0275nextContext"](2).ngIf;
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("name", "empty_state_200")("sprite", "empty-state-icons"), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", info_r1.showCopilotInfo), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", info_r1.showCopilotInfo);
            }
        }
        function QnaManagePhrasingsComponent_div_0_section_19_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "section", 33), fesm2022_core["\u0275\u0275elementContainerStart"](1, 34), 
            fesm2022_core["\u0275\u0275template"](2, QnaManagePhrasingsComponent_div_0_section_19_div_2_Template, 4, 2, "div", 35), 
            fesm2022_core["\u0275\u0275template"](3, QnaManagePhrasingsComponent_div_0_section_19_div_3_Template, 4, 4, "div", 35), 
            fesm2022_core["\u0275\u0275elementContainerEnd"](), fesm2022_core["\u0275\u0275elementEnd"]()), 
            2 & rf) {
                var info_r1 = fesm2022_core["\u0275\u0275nextContext"]().ngIf;
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngSwitch", info_r1.viewType), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngSwitchCase", "approved"), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngSwitchCase", "copilot");
            }
        }
        var qna_manage_phrasings_component_c6 = function(a1) {
            return {
                "width.px": 10,
                "height.px": a1
            };
        };
        function QnaManagePhrasingsComponent_div_0_ng_template_20_div_16_table_2_tr_3_Template(rf, ctx) {
            if (1 & rf && fesm2022_core["\u0275\u0275element"](0, "tr", 67), 2 & rf) {
                var virtualTableInfo_r40 = fesm2022_core["\u0275\u0275nextContext"](2).ngIf;
                fesm2022_core["\u0275\u0275property"]("ngStyle", fesm2022_core["\u0275\u0275pureFunction1"](1, qna_manage_phrasings_component_c6, virtualTableInfo_r40.value.topPlaceholderHeight));
            }
        }
        function QnaManagePhrasingsComponent_div_0_ng_template_20_div_16_table_2_ng_container_4_ng_container_1_ng_container_1_ng_container_2_tri_spinner_2_Template(rf, ctx) {
            1 & rf && fesm2022_core["\u0275\u0275element"](0, "tri-spinner", 80);
        }
        function QnaManagePhrasingsComponent_div_0_ng_template_20_div_16_table_2_ng_container_4_ng_container_1_ng_container_1_ng_container_2_tri_svg_icon_3_Template(rf, ctx) {
            1 & rf && fesm2022_core["\u0275\u0275element"](0, "tri-svg-icon", 81);
        }
        function QnaManagePhrasingsComponent_div_0_ng_template_20_div_16_table_2_ng_container_4_ng_container_1_ng_container_1_ng_container_2_Template(rf, ctx) {
            if (1 & rf) {
                var _r62 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275elementStart"](1, "td", 77), 
                fesm2022_core["\u0275\u0275listener"]("click", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r62);
                    var ctx_r61 = fesm2022_core["\u0275\u0275nextContext"](3), phrasing_r49 = ctx_r61.$implicit, index_r50 = ctx_r61.index, ctx_r60 = fesm2022_core["\u0275\u0275nextContext"](5);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r60.startEditExistingPhrasing(phrasing_r49, index_r50));
                }), fesm2022_core["\u0275\u0275template"](2, QnaManagePhrasingsComponent_div_0_ng_template_20_div_16_table_2_ng_container_4_ng_container_1_ng_container_1_ng_container_2_tri_spinner_2_Template, 1, 0, "tri-spinner", 78), 
                fesm2022_core["\u0275\u0275template"](3, QnaManagePhrasingsComponent_div_0_ng_template_20_div_16_table_2_ng_container_4_ng_container_1_ng_container_1_ng_container_2_tri_svg_icon_3_Template, 1, 0, "tri-svg-icon", 79), 
                fesm2022_core["\u0275\u0275text"](4), fesm2022_core["\u0275\u0275elementEnd"](), 
                fesm2022_core["\u0275\u0275elementStart"](5, "td", 77), fesm2022_core["\u0275\u0275listener"]("click", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r62);
                    var ctx_r64 = fesm2022_core["\u0275\u0275nextContext"](3), phrasing_r49 = ctx_r64.$implicit, index_r50 = ctx_r64.index, ctx_r63 = fesm2022_core["\u0275\u0275nextContext"](5);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r63.startEditExistingPhrasing(phrasing_r49, index_r50));
                }), fesm2022_core["\u0275\u0275text"](6), fesm2022_core["\u0275\u0275elementEnd"](), 
                fesm2022_core["\u0275\u0275elementStart"](7, "td", 77), fesm2022_core["\u0275\u0275listener"]("click", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r62);
                    var ctx_r66 = fesm2022_core["\u0275\u0275nextContext"](3), phrasing_r49 = ctx_r66.$implicit, index_r50 = ctx_r66.index, ctx_r65 = fesm2022_core["\u0275\u0275nextContext"](5);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r65.startEditExistingPhrasing(phrasing_r49, index_r50));
                }), fesm2022_core["\u0275\u0275text"](8), fesm2022_core["\u0275\u0275elementEnd"](), 
                fesm2022_core["\u0275\u0275elementStart"](9, "td", 77), fesm2022_core["\u0275\u0275listener"]("click", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r62);
                    var ctx_r68 = fesm2022_core["\u0275\u0275nextContext"](3), phrasing_r49 = ctx_r68.$implicit, index_r50 = ctx_r68.index, ctx_r67 = fesm2022_core["\u0275\u0275nextContext"](5);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r67.startEditExistingPhrasing(phrasing_r49, index_r50));
                }), fesm2022_core["\u0275\u0275text"](10), fesm2022_core["\u0275\u0275elementEnd"](), 
                fesm2022_core["\u0275\u0275elementContainerEnd"]();
            }
            if (2 & rf) {
                var phrasing_r49 = fesm2022_core["\u0275\u0275nextContext"](3).$implicit, inEditPhrasingInfo_r43 = fesm2022_core["\u0275\u0275nextContext"]().ngIf;
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("ngIf", phrasing_r49.isUnderLuciaProcessing && !inEditPhrasingInfo_r43.value), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", (null == phrasing_r49.diagnostics ? null : phrasing_r49.diagnostics.length) > 0), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275textInterpolate1"](" ", phrasing_r49.phrasingLabel, " "), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275textInterpolate1"](" ", phrasing_r49.conditionLabel, " "), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275textInterpolate1"](" ", phrasing_r49.modifiedTimeFriendlyString, " "), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275textInterpolate1"](" ", phrasing_r49.phrasingType, " ");
            }
        }
        function QnaManagePhrasingsComponent_div_0_ng_template_20_div_16_table_2_ng_container_4_ng_container_1_ng_container_1_td_3_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "td", 82), fesm2022_core["\u0275\u0275text"](1), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var phrasing_r49 = fesm2022_core["\u0275\u0275nextContext"](3).$implicit;
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275textInterpolate1"](" ", phrasing_r49.phrasingLabel, " ");
            }
        }
        function QnaManagePhrasingsComponent_div_0_ng_template_20_div_16_table_2_ng_container_4_ng_container_1_ng_container_1_button_5_Template(rf, ctx) {
            if (1 & rf) {
                var _r75 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "button", 83, 84), fesm2022_core["\u0275\u0275listener"]("click", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r75);
                    var index_r50 = fesm2022_core["\u0275\u0275nextContext"](3).index, ctx_r73 = fesm2022_core["\u0275\u0275nextContext"](5);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r73.onApproveRequested(index_r50));
                }), fesm2022_core["\u0275\u0275element"](2, "tri-svg-icon", 85)(3, "span", 86), 
                fesm2022_core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r56 = fesm2022_core["\u0275\u0275nextContext"](8);
                fesm2022_core["\u0275\u0275property"]("pbi-tooltip", ctx_r56.tooltipConfigs.approveTooltip), 
                fesm2022_core["\u0275\u0275attribute"]("aria-label", ctx_r56.ariaResources.get("approve"));
            }
        }
        function QnaManagePhrasingsComponent_div_0_ng_template_20_div_16_table_2_ng_container_4_ng_container_1_ng_container_1_tr_10_qna_single_phrasing_editor_2_Template(rf, ctx) {
            if (1 & rf) {
                var _r79 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "qna-single-phrasing-editor", 90, 91), 
                fesm2022_core["\u0275\u0275listener"]("cancelRequested", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r79);
                    var ctx_r78 = fesm2022_core["\u0275\u0275nextContext"](9);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r78.cancelEditPhrasing());
                })("phrasingLuciaModelChangeRequested", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r79);
                    var ctx_r80 = fesm2022_core["\u0275\u0275nextContext"](9);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r80.onPhrasingLuciaModelChangeRequested($event));
                }), fesm2022_core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var inEditPhrasingInfo_r43 = fesm2022_core["\u0275\u0275nextContext"](5).ngIf, ctx_r76 = fesm2022_core["\u0275\u0275nextContext"](4);
                fesm2022_core["\u0275\u0275property"]("fieldsModel", ctx_r76.fieldsModel)("initialDocumentModel", inEditPhrasingInfo_r43.value.documentModel)("initialDiagnostics", inEditPhrasingInfo_r43.value.diagnostics)("existingModel", inEditPhrasingInfo_r43.value.model)("allEntityVariantLabels", ctx_r76.allEntityVariantLabels);
            }
        }
        var qna_manage_phrasings_component_c7 = function(a0) {
            return {
                outOfRangeForceRenderRow: a0
            };
        }, qna_manage_phrasings_component_c8 = function(a0, a1) {
            return {
                columnSpan5: a0,
                columnSpan4: a1
            };
        };
        function QnaManagePhrasingsComponent_div_0_ng_template_20_div_16_table_2_ng_container_4_ng_container_1_ng_container_1_tr_10_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "tr", 87)(1, "td", 88), 
            fesm2022_core["\u0275\u0275template"](2, QnaManagePhrasingsComponent_div_0_ng_template_20_div_16_table_2_ng_container_4_ng_container_1_ng_container_1_tr_10_qna_single_phrasing_editor_2_Template, 2, 5, "qna-single-phrasing-editor", 89), 
            fesm2022_core["\u0275\u0275elementEnd"]()()), 2 & rf) {
                var phrasing_r49 = fesm2022_core["\u0275\u0275nextContext"](3).$implicit, info_r1 = fesm2022_core["\u0275\u0275nextContext"](4).ngIf, ctx_r57 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction1"](3, qna_manage_phrasings_component_c7, phrasing_r49.outOfRangeForceRender)), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction2"](5, qna_manage_phrasings_component_c8, "approved" === info_r1.viewType, "copilot" === info_r1.viewType)), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", ctx_r57.fieldsModel);
            }
        }
        var qna_manage_phrasings_component_c9 = function(a0, a1, a2, a3) {
            return {
                editPhrasingArea: a0,
                isDisabled: a1,
                outOfRangeForceRenderRow: a2,
                isCopilot: a3
            };
        }, qna_manage_phrasings_component_c10 = function(a0, a1) {
            return {
                "height.px": a0,
                "max-height.px": a1
            };
        }, qna_manage_phrasings_component_c11 = function(a0) {
            return {
                "width.px": a0
            };
        }, qna_manage_phrasings_component_c12 = function(a0) {
            return {
                doNotDisable: a0
            };
        };
        function QnaManagePhrasingsComponent_div_0_ng_template_20_div_16_table_2_ng_container_4_ng_container_1_ng_container_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r85 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275elementStart"](1, "tr", 68), 
                fesm2022_core["\u0275\u0275template"](2, QnaManagePhrasingsComponent_div_0_ng_template_20_div_16_table_2_ng_container_4_ng_container_1_ng_container_1_ng_container_2_Template, 11, 6, "ng-container", 4), 
                fesm2022_core["\u0275\u0275template"](3, QnaManagePhrasingsComponent_div_0_ng_template_20_div_16_table_2_ng_container_4_ng_container_1_ng_container_1_td_3_Template, 2, 1, "td", 69), 
                fesm2022_core["\u0275\u0275elementStart"](4, "td", 70), fesm2022_core["\u0275\u0275template"](5, QnaManagePhrasingsComponent_div_0_ng_template_20_div_16_table_2_ng_container_4_ng_container_1_ng_container_1_button_5_Template, 4, 2, "button", 71), 
                fesm2022_core["\u0275\u0275elementStart"](6, "button", 72), fesm2022_core["\u0275\u0275listener"]("click", function() {
                    var isThePhrasingInEdit_r53 = fesm2022_core["\u0275\u0275restoreView"](_r85).ngIf, ctx_r86 = fesm2022_core["\u0275\u0275nextContext"](2), phrasing_r49 = ctx_r86.$implicit, index_r50 = ctx_r86.index, ctx_r84 = fesm2022_core["\u0275\u0275nextContext"](5);
                    return fesm2022_core["\u0275\u0275resetView"](!isThePhrasingInEdit_r53.value && ctx_r84.startEditExistingPhrasing(phrasing_r49, index_r50));
                }), fesm2022_core["\u0275\u0275element"](7, "tri-svg-icon", 73), fesm2022_core["\u0275\u0275elementEnd"](), 
                fesm2022_core["\u0275\u0275elementStart"](8, "button", 74), fesm2022_core["\u0275\u0275listener"]("click", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r85);
                    var phrasing_r49 = fesm2022_core["\u0275\u0275nextContext"](2).$implicit, ctx_r87 = fesm2022_core["\u0275\u0275nextContext"](5);
                    return fesm2022_core["\u0275\u0275resetView"](!phrasing_r49.isNew && ctx_r87.onDeletePhrasingRequested(phrasing_r49));
                }), fesm2022_core["\u0275\u0275element"](9, "tri-svg-icon", 75), fesm2022_core["\u0275\u0275elementEnd"]()()(), 
                fesm2022_core["\u0275\u0275template"](10, QnaManagePhrasingsComponent_div_0_ng_template_20_div_16_table_2_ng_container_4_ng_container_1_ng_container_1_tr_10_Template, 3, 8, "tr", 76), 
                fesm2022_core["\u0275\u0275elementContainerEnd"]();
            }
            if (2 & rf) {
                var isThePhrasingInEdit_r53 = ctx.ngIf, phrasing_r49 = fesm2022_core["\u0275\u0275nextContext"](2).$implicit, info_r1 = fesm2022_core["\u0275\u0275nextContext"](4).ngIf, ctx_r52 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction4"](14, qna_manage_phrasings_component_c9, isThePhrasingInEdit_r53.value, isThePhrasingInEdit_r53.value, phrasing_r49.outOfRangeForceRender, "copilot" === info_r1.viewType))("ngStyle", fesm2022_core["\u0275\u0275pureFunction2"](19, qna_manage_phrasings_component_c10, ctx_r52.fixedItemHeight, ctx_r52.fixedItemHeight)), 
                fesm2022_core["\u0275\u0275attribute"]("aria-label", phrasing_r49.ariaLabel), fesm2022_core["\u0275\u0275advance"](1), 
                fesm2022_core["\u0275\u0275property"]("ngIf", !phrasing_r49.isNew), fesm2022_core["\u0275\u0275advance"](1), 
                fesm2022_core["\u0275\u0275property"]("ngIf", phrasing_r49.isNew), fesm2022_core["\u0275\u0275advance"](1), 
                fesm2022_core["\u0275\u0275property"]("ngStyle", fesm2022_core["\u0275\u0275pureFunction1"](22, qna_manage_phrasings_component_c11, "approved" === info_r1.viewType ? ctx_r52.approvedAutoWidthColumnCalculatedWidth : ctx_r52.copilotAutoWidthColumnCalculatedWidth)), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", "copilot" === info_r1.viewType), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("pbi-tooltip", ctx_r52.tooltipConfigs.editTooltip), 
                fesm2022_core["\u0275\u0275attribute"]("aria-label", ctx_r52.ariaResources.get("edit"))("aria-disabled", isThePhrasingInEdit_r53.value), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction1"](24, qna_manage_phrasings_component_c12, !phrasing_r49.isNew))("pbi-tooltip", ctx_r52.tooltipConfigs.deleteTooltip), 
                fesm2022_core["\u0275\u0275attribute"]("aria-label", ctx_r52.ariaResources.get("delete")), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("ngIf", isThePhrasingInEdit_r53.value);
            }
        }
        var qna_manage_phrasings_component_c13 = function(a0) {
            return {
                value: a0
            };
        };
        function QnaManagePhrasingsComponent_div_0_ng_template_20_div_16_table_2_ng_container_4_ng_container_1_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275template"](1, QnaManagePhrasingsComponent_div_0_ng_template_20_div_16_table_2_ng_container_4_ng_container_1_ng_container_1_Template, 11, 26, "ng-container", 4), 
            fesm2022_core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var phrasing_r49 = fesm2022_core["\u0275\u0275nextContext"]().$implicit, inEditPhrasingInfo_r43 = fesm2022_core["\u0275\u0275nextContext"]().ngIf;
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", fesm2022_core["\u0275\u0275pureFunction1"](1, qna_manage_phrasings_component_c13, null != inEditPhrasingInfo_r43.value && (phrasing_r49.isNew || phrasing_r49.phrasingModel === (null == inEditPhrasingInfo_r43.value || null == inEditPhrasingInfo_r43.value.model ? null : inEditPhrasingInfo_r43.value.model.phrasing))));
            }
        }
        function QnaManagePhrasingsComponent_div_0_ng_template_20_div_16_table_2_ng_container_4_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275template"](1, QnaManagePhrasingsComponent_div_0_ng_template_20_div_16_table_2_ng_container_4_ng_container_1_Template, 2, 3, "ng-container", 4), 
            fesm2022_core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var phrasing_r49 = ctx.$implicit;
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", phrasing_r49.toRender);
            }
        }
        function QnaManagePhrasingsComponent_div_0_ng_template_20_div_16_table_2_tr_6_Template(rf, ctx) {
            if (1 & rf && fesm2022_core["\u0275\u0275element"](0, "tr", 67), 2 & rf) {
                var virtualTableInfo_r40 = fesm2022_core["\u0275\u0275nextContext"](2).ngIf;
                fesm2022_core["\u0275\u0275property"]("ngStyle", fesm2022_core["\u0275\u0275pureFunction1"](1, qna_manage_phrasings_component_c6, virtualTableInfo_r40.value.bottomPlaceholderHeight));
            }
        }
        function QnaManagePhrasingsComponent_div_0_ng_template_20_div_16_table_2_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "table", null, 64)(2, "tbody"), 
            fesm2022_core["\u0275\u0275template"](3, QnaManagePhrasingsComponent_div_0_ng_template_20_div_16_table_2_tr_3_Template, 1, 3, "tr", 65), 
            fesm2022_core["\u0275\u0275template"](4, QnaManagePhrasingsComponent_div_0_ng_template_20_div_16_table_2_ng_container_4_Template, 2, 1, "ng-container", 66), 
            fesm2022_core["\u0275\u0275pipe"](5, "async"), fesm2022_core["\u0275\u0275template"](6, QnaManagePhrasingsComponent_div_0_ng_template_20_div_16_table_2_tr_6_Template, 1, 3, "tr", 65), 
            fesm2022_core["\u0275\u0275elementEnd"]()()), 2 & rf) {
                var virtualTableInfo_r40 = fesm2022_core["\u0275\u0275nextContext"]().ngIf, ctx_r42 = fesm2022_core["\u0275\u0275nextContext"](3);
                fesm2022_core["\u0275\u0275advance"](3), fesm2022_core["\u0275\u0275property"]("ngIf", (null == virtualTableInfo_r40.value ? null : virtualTableInfo_r40.value.topPlaceholderHeight) > 0), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngForOf", fesm2022_core["\u0275\u0275pipeBind1"](5, 3, ctx_r42.virtualTableDisplayPhrasings$)), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("ngIf", (null == virtualTableInfo_r40.value ? null : virtualTableInfo_r40.value.bottomPlaceholderHeight) > 0);
            }
        }
        function QnaManagePhrasingsComponent_div_0_ng_template_20_div_16_Template(rf, ctx) {
            if (1 & rf) {
                var _r96 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "div", 62, 63), fesm2022_core["\u0275\u0275listener"]("scroll", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r96);
                    var ctx_r95 = fesm2022_core["\u0275\u0275nextContext"](3);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r95.onItemsContainerScroll($event));
                }), fesm2022_core["\u0275\u0275template"](2, QnaManagePhrasingsComponent_div_0_ng_template_20_div_16_table_2_Template, 7, 5, "table", 4), 
                fesm2022_core["\u0275\u0275pipe"](3, "async"), fesm2022_core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r39 = fesm2022_core["\u0275\u0275nextContext"](3);
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("ngIf", fesm2022_core["\u0275\u0275pureFunction1"](3, qna_manage_phrasings_component_c13, fesm2022_core["\u0275\u0275pipeBind1"](3, 1, ctx_r39.inEditPhrasingInfo$)));
            }
        }
        function QnaManagePhrasingsComponent_div_0_ng_template_20_Template(rf, ctx) {
            if (1 & rf) {
                var _r99 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "div", 47), fesm2022_core["\u0275\u0275pipe"](1, "localize"), 
                fesm2022_core["\u0275\u0275elementStart"](2, "table", 48), fesm2022_core["\u0275\u0275listener"]("matSortChange", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r99);
                    var info_r1 = fesm2022_core["\u0275\u0275nextContext"]().ngIf, ctx_r97 = fesm2022_core["\u0275\u0275nextContext"]();
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r97.onSort($event, info_r1.viewType));
                }), fesm2022_core["\u0275\u0275elementStart"](3, "thead", null, 49)(5, "th", 50), 
                fesm2022_core["\u0275\u0275element"](6, "span", 51), fesm2022_core["\u0275\u0275elementEnd"](), 
                fesm2022_core["\u0275\u0275elementStart"](7, "th", 52), fesm2022_core["\u0275\u0275element"](8, "span", 53), 
                fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275elementStart"](9, "th", 54), 
                fesm2022_core["\u0275\u0275element"](10, "span", 55), fesm2022_core["\u0275\u0275elementEnd"](), 
                fesm2022_core["\u0275\u0275elementStart"](11, "th", 56), fesm2022_core["\u0275\u0275element"](12, "span", 57), 
                fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275elementStart"](13, "th", 58, 59), 
                fesm2022_core["\u0275\u0275element"](15, "span", 60), fesm2022_core["\u0275\u0275elementEnd"]()()(), 
                fesm2022_core["\u0275\u0275template"](16, QnaManagePhrasingsComponent_div_0_ng_template_20_div_16_Template, 4, 5, "div", 61), 
                fesm2022_core["\u0275\u0275pipe"](17, "async"), fesm2022_core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var info_r1 = fesm2022_core["\u0275\u0275nextContext"]().ngIf, ctx_r9 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275attribute"]("aria-label", fesm2022_core["\u0275\u0275pipeBind1"](1, 3, "QnaTooling_ManagePhrasings_PhrasingListTable")), 
                fesm2022_core["\u0275\u0275advance"](13), fesm2022_core["\u0275\u0275property"]("ngStyle", fesm2022_core["\u0275\u0275pureFunction1"](7, qna_manage_phrasings_component_c11, "approved" === info_r1.viewType ? ctx_r9.approvedAutoWidthColumnCalculatedWidth : ctx_r9.copilotAutoWidthColumnCalculatedWidth)), 
                fesm2022_core["\u0275\u0275advance"](3), fesm2022_core["\u0275\u0275property"]("ngIf", fesm2022_core["\u0275\u0275pureFunction1"](9, qna_manage_phrasings_component_c13, fesm2022_core["\u0275\u0275pipeBind1"](17, 5, ctx_r9.virtualTableInfo$)));
            }
        }
        function QnaManagePhrasingsComponent_div_0_div_22_Template(rf, ctx) {
            1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 92), fesm2022_core["\u0275\u0275element"](1, "spinner", 93), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf && (fesm2022_core["\u0275\u0275advance"](1), 
            fesm2022_core["\u0275\u0275property"]("delay", 100));
        }
        var qna_manage_phrasings_component_c14 = function(a0) {
            return {
                withLoadingMask: a0
            };
        }, qna_manage_phrasings_component_c15 = function(a0) {
            return {
                "inApprovedView ": a0
            };
        };
        function QnaManagePhrasingsComponent_div_0_Template(rf, ctx) {
            if (1 & rf) {
                var _r102 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "div", 1)(1, "h1", 2), fesm2022_core["\u0275\u0275text"](2), 
                fesm2022_core["\u0275\u0275pipe"](3, "localize"), fesm2022_core["\u0275\u0275elementEnd"](), 
                fesm2022_core["\u0275\u0275elementStart"](4, "h2", 3), fesm2022_core["\u0275\u0275text"](5), 
                fesm2022_core["\u0275\u0275pipe"](6, "localize"), fesm2022_core["\u0275\u0275elementEnd"](), 
                fesm2022_core["\u0275\u0275template"](7, QnaManagePhrasingsComponent_div_0_ng_container_7_Template, 3, 3, "ng-container", 4), 
                fesm2022_core["\u0275\u0275elementStart"](8, "div", 5), fesm2022_core["\u0275\u0275pipe"](9, "async"), 
                fesm2022_core["\u0275\u0275elementStart"](10, "section", 6), fesm2022_core["\u0275\u0275template"](11, QnaManagePhrasingsComponent_div_0_tri_pivot_11_Template, 10, 8, "tri-pivot", 7), 
                fesm2022_core["\u0275\u0275elementStart"](12, "div", 8), fesm2022_core["\u0275\u0275template"](13, QnaManagePhrasingsComponent_div_0_button_13_Template, 3, 6, "button", 9), 
                fesm2022_core["\u0275\u0275pipe"](14, "async"), fesm2022_core["\u0275\u0275elementStart"](15, "tri-checkbox", 10), 
                fesm2022_core["\u0275\u0275listener"]("onChange", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r102);
                    var ctx_r101 = fesm2022_core["\u0275\u0275nextContext"]();
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r101.onRequestShowHideDefaultAttributePhrasings($event));
                }), fesm2022_core["\u0275\u0275pipe"](16, "localize"), fesm2022_core["\u0275\u0275elementEnd"]()()(), 
                fesm2022_core["\u0275\u0275template"](17, QnaManagePhrasingsComponent_div_0_div_17_Template, 5, 5, "div", 11), 
                fesm2022_core["\u0275\u0275template"](18, QnaManagePhrasingsComponent_div_0_div_18_Template, 3, 0, "div", 12), 
                fesm2022_core["\u0275\u0275template"](19, QnaManagePhrasingsComponent_div_0_section_19_Template, 4, 3, "section", 13), 
                fesm2022_core["\u0275\u0275template"](20, QnaManagePhrasingsComponent_div_0_ng_template_20_Template, 18, 11, "ng-template", null, 14, fesm2022_core["\u0275\u0275templateRefExtractor"]), 
                fesm2022_core["\u0275\u0275template"](22, QnaManagePhrasingsComponent_div_0_div_22_Template, 2, 1, "div", 15), 
                fesm2022_core["\u0275\u0275pipe"](23, "async"), fesm2022_core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var info_r1 = ctx.ngIf, _r8 = fesm2022_core["\u0275\u0275reference"](21), ctx_r0 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275textInterpolate"](fesm2022_core["\u0275\u0275pipeBind1"](3, 14, "QnaTooling_ManagePhrasings_Title")), 
                fesm2022_core["\u0275\u0275advance"](3), fesm2022_core["\u0275\u0275textInterpolate"](fesm2022_core["\u0275\u0275pipeBind1"](6, 16, "QnaTooling_ManagePhrasings_Subtitle")), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("ngIf", info_r1.showCopilotInfo), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction1"](26, qna_manage_phrasings_component_c14, fesm2022_core["\u0275\u0275pipeBind1"](9, 18, ctx_r0.isLoading$))), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction1"](28, qna_manage_phrasings_component_c15, "approved" === info_r1.viewType)), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", info_r1.showCopilotInfo), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("ngIf", fesm2022_core["\u0275\u0275pureFunction1"](30, qna_manage_phrasings_component_c13, fesm2022_core["\u0275\u0275pipeBind1"](14, 20, ctx_r0.createNewPhrasingDisabled$))), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("label", fesm2022_core["\u0275\u0275pipeBind1"](16, 22, "QnaTooling_ManagePhrasings_Show_Default_AttributeRelationships"))("checked", info_r1.showDefaultAttributePhrasings), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("ngIf", "copilot" === info_r1.viewType), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", "copilot" === info_r1.viewType), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", info_r1.showEmptyState)("ngIfElse", _r8), 
                fesm2022_core["\u0275\u0275advance"](3), fesm2022_core["\u0275\u0275property"]("ngIf", fesm2022_core["\u0275\u0275pipeBind1"](23, 24, ctx_r0.isLoading$));
            }
        }
        var qna_manage_phrasings_component_c16 = function(a0, a1, a2) {
            return {
                showCopilotInfo: a0,
                showEmptyState: a1,
                viewType: a2
            };
        }, defaultSort = {
            active: "ModifiedTime",
            direction: "desc"
        }, QnaManagePhrasingsComponent = function(_super) {
            function QnaManagePhrasingsComponent(conceptualSchemaProxy, dataSourcesService, dialogService, featureSwitchService, localizationService, qnaService, managePhrasingsTelemetryService, lazyScoped, lsdlUiBlockerService, copilotRequirementsService, accountService, eventAggregation) {
                var _this = _super.call(this) || this;
                return _this.conceptualSchemaProxy = conceptualSchemaProxy, _this.dataSourcesService = dataSourcesService, 
                _this.dialogService = dialogService, _this.featureSwitchService = featureSwitchService, 
                _this.localizationService = localizationService, _this.qnaService = qnaService, 
                _this.managePhrasingsTelemetryService = managePhrasingsTelemetryService, _this.lazyScoped = lazyScoped, 
                _this.lsdlUiBlockerService = lsdlUiBlockerService, _this.copilotRequirementsService = copilotRequirementsService, 
                _this.accountService = accountService, _this.eventAggregation = eventAggregation, 
                _this.linguisticSchemaUpdated = new fesm2022_core.EventEmitter, _this.phrasingLabelsUpdated = new fesm2022_core.EventEmitter, 
                _this.entityTermsUpdated = new fesm2022_core.EventEmitter, _this.showAllMouseActionBlocker = new fesm2022_core.EventEmitter, 
                _this.phrasingViewType$ = new BehaviorSubject.X("approved"), _this.tooltipConfigs = {}, 
                _this.emptyStateImage = "url(../../..".concat((0, build.Xr)(), "/images/empty-qna.png"), 
                _this.actionCellHeaderElement$ = new BehaviorSubject.X(void 0), _this.approveButtonElement$ = new BehaviorSubject.X(void 0), 
                _this.state$ = new BehaviorSubject.X("default"), _this.hasUnAppliedChanges = !1, 
                _this.orderedDisplayPhrasingIds = [], _this.luciaDomainModelChangedHandler = function() {
                    return _this.onLuciaDomainModelChanged();
                }, _this.onItemsContainerScroll = function($event) {
                    _this.itemsContainerScroll.fn($event);
                }, conceptualSchemaProxy.get(dataSourcesService.get()).then(function(conceptualSchema) {
                    var schema = _.find(conceptualSchema.schemas, function(s) {
                        return !s.isExtensionSchema;
                    });
                    _this.fieldsModel = {
                        model: new field_list_fieldListViewModelFactory.O(_this.localizationService).createModel(conceptualSchema),
                        schema: conceptualSchema,
                        schemaName: schema.name
                    };
                }), _this.showDefaultAttributePhrasings = _this.createEventAdapter(), _this.itemsContainerScroll = _this.createEventAdapter(), 
                _this.inDeletePhrasingInfo$ = new BehaviorSubject.X(void 0), _this.inEditPhrasingInfo$ = new BehaviorSubject.X(void 0), 
                _this.inEditPhrasingIndex$ = new BehaviorSubject.X(void 0), _this.createNewPhrasingDisabled$ = _this.inEditPhrasingInfo$.pipe((0, 
                map.U)(function(value) {
                    return null == value ? void 0 : value.isNew;
                })), _this.virtualTableDisplayPhrasings$ = new BehaviorSubject.X(void 0), _this.virtualTableInfo$ = new Subject.xQ, 
                _this.eventAggregation.subscribe("LuciaDomainModelChangedEvent", _this.luciaDomainModelChangedHandler), 
                _this;
            }
            return (0, tslib_es6.__extends)(QnaManagePhrasingsComponent, _super), Object.defineProperty(QnaManagePhrasingsComponent.prototype, "_approveButton", {
                set: function(ref) {
                    (null == ref ? void 0 : ref.nativeElement) && this.approveButtonElement$.next(ref.nativeElement);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(QnaManagePhrasingsComponent.prototype, "_autoWidthColumnHeader", {
                set: function(ref) {
                    (null == ref ? void 0 : ref.nativeElement) && this.actionCellHeaderElement$.next(ref.nativeElement);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(QnaManagePhrasingsComponent.prototype, "_editor", {
                set: function(phrasingEditor) {
                    var _this = this;
                    if (this.currentPhrasingEditor = phrasingEditor, !phrasingEditor || !this.inEditPhrasingInfo$.value) return this.hasUnAppliedValidChanges = !1, 
                    void (this.hasUnAppliedChanges = !1);
                    phrasingEditor.shouldEnableApplyPhrasing$.pipe((0, takeUntil.R)(this.onDestroy$)).subscribe(function(value) {
                        _this.hasUnAppliedValidChanges = value;
                    }), phrasingEditor.isPhrasingUpdated$.pipe((0, takeUntil.R)(this.onDestroy$)).subscribe(function(value) {
                        _this.hasUnAppliedChanges = value;
                    });
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(QnaManagePhrasingsComponent.prototype, "_phrasingEditor", {
                set: function(ref) {
                    this.phrasingEditorElement = null == ref ? void 0 : ref.nativeElement;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(QnaManagePhrasingsComponent.prototype, "_scrollableItemsContainerElementRef", {
                set: function(ref) {
                    if (this.scrollableItemsContainerElement = null == ref ? void 0 : ref.nativeElement, 
                    null != this.scrollableItemsContainerElement && this.onHoldVirtualTableUpdateArgs) {
                        var phrasings = this.onHoldVirtualTableUpdateArgs.newPhrasings, scrollEvent = this.onHoldVirtualTableUpdateArgs.scrollEvent, inEditPhrasingIndex = this.onHoldVirtualTableUpdateArgs.inEditPhrasingIndex;
                        this.onHoldVirtualTableUpdateArgs = void 0, this.updateVirtualTable(phrasings, scrollEvent, inEditPhrasingIndex, !0);
                    }
                },
                enumerable: !1,
                configurable: !0
            }), QnaManagePhrasingsComponent.prototype.ngOnInit = function() {
                var _this = this;
                this.managePhrasingsTelemetryService.logEnterPageEvent(this.enterPageTelemetryEvent), 
                this.ariaResources = new Map([ [ "phrasingLabel", this.localizationService.get("Relationship") ], [ "phrasingCondition", this.localizationService.get("Condition") ], [ "phrasingType", this.localizationService.get("Qna_ManagePhrasings_PhrasingType") ], [ "modifiedTime", this.localizationService.get("Modified") ], [ "actions", this.localizationService.get("Actions") ], [ "delete", this.localizationService.get("Delete") ], [ "edit", this.localizationService.get("Edit") ], [ "approve", this.localizationService.get("Approve") ] ]), 
                this.tooltipConfigs = {
                    deleteTooltip: {
                        tooltipLocalizeDescription: "Delete",
                        tooltipArrowPosition: constants.xI.arrowTopMiddle
                    },
                    editTooltip: {
                        tooltipLocalizeDescription: "Edit",
                        tooltipArrowPosition: constants.xI.arrowTopMiddle
                    },
                    approveTooltip: {
                        tooltipLocalizeDescription: "Approve",
                        tooltipArrowPosition: constants.xI.arrowTopMiddle
                    }
                }, this.allPhrasingsOrderedInternal$ = new BehaviorSubject.X([]), this.allPhrasingsOrdered$ = this.allPhrasingsOrderedInternal$.pipe(), 
                this.showCopilotInfo$ = this.featureSwitchService.featureSwitches$.pipe((0, map.U)(function(fs) {
                    return fs.qnaCopilotPhrasings && fs.qnaImproveLsdlCopilot;
                })), this.updateWorkingModelAndPhrasings(this.initialLinguisticSchema, this.initialDiagnostics, !0), 
                this.setCopilotPhrasingsSyncTime(this.initialLinguisticSchema), this.showEmptyState$ = (0, 
                combineLatest.aj)([ this.allPhrasingsOrdered$, this.phrasingViewType$ ]).pipe((0, 
                map.U)(function(_a) {
                    var phrasings = _a[0], phrasingViewType = _a[1];
                    switch (phrasingViewType) {
                      case "approved":
                        return !_.find(phrasings, function(p) {
                            return !fromCopilot(p);
                        });

                      case "copilot":
                        return !_.find(phrasings, function(p) {
                            return fromCopilot(p);
                        });

                      default:
                        debug.fF.assertNever(phrasingViewType);
                    }
                })), this.allDisplayPhrasings$ = (0, combineLatest.aj)([ this.allPhrasingsOrdered$, this.showDefaultAttributePhrasings.$.pipe((0, 
                startWith.O)(!1)), this.inEditPhrasingInfo$, this.phrasingViewType$ ]).pipe((0, 
                map.U)(function(_a) {
                    var phrasings = _a[0], includeDefaultAttrPhrasings = _a[1], inEditPhrasingInfo = _a[2], phrasingsViewType = _a[3], result = [];
                    if (null == inEditPhrasingInfo ? void 0 : inEditPhrasingInfo.isNew) {
                        var phrasingLabel = _this.localizationService.get("QnaTooling_ManagePhrasings_PhrasingLabelPlaceholder_NewPhrasing");
                        result.push({
                            documentModel: _this.workingDocumentModel,
                            phrasingLabel,
                            ariaLabel: _this.getPhrasingRowAriaLabel(phrasingLabel, void 0, void 0, void 0, !0),
                            phrasingType: void 0,
                            conditionLabel: void 0,
                            state: "Authored",
                            isNew: !0
                        });
                    }
                    var filteredPhrasings = function(phrasings, phrasingsViewType, includeDefaultAttributePhrasings) {
                        var copilotPhrasings = _.filter(phrasings, function(phrasing) {
                            return fromCopilot(phrasing);
                        }), approvedPhrasings = _.difference(phrasings, copilotPhrasings), returnPhrasings = "approved" === phrasingsViewType ? approvedPhrasings : copilotPhrasings;
                        return includeDefaultAttributePhrasings ? returnPhrasings : _.filter(returnPhrasings, function(phrasing) {
                            return !0 === phrasing.isNew || 7 !== phrasing.phrasingModel.kind || "Generated" !== phrasing.state;
                        });
                    }(phrasings, phrasingsViewType, includeDefaultAttrPhrasings);
                    return result.push.apply(result, null != filteredPhrasings ? filteredPhrasings : []), 
                    result;
                }));
                var fromPhrasingsUpdate = !1;
                (0, combineLatest.aj)([ this.allDisplayPhrasings$.pipe((0, tap.b)(function(_) {
                    fromPhrasingsUpdate = !0;
                })), this.itemsContainerScroll.$.pipe((0, startWith.O)(void 0), (0, throttleTime.p)(500, scheduler_async.z, {
                    leading: !0,
                    trailing: !0
                })), this.inEditPhrasingIndex$ ]).pipe((0, takeUntil.R)(this.onDestroy$)).subscribe(function(_a) {
                    _this.updateVirtualTable(_a[0], _a[1], _a[2], fromPhrasingsUpdate), fromPhrasingsUpdate = !1;
                }), this.calculateActionsColumnWidth(), this.lazyScoped.get("improveLsdlBackgroundService").then(function(improveLsdlBackgroundService) {
                    improveLsdlBackgroundService.tryImproveLsdl("qnaTooling");
                }), this.lazyScoped.get("qnaBannerService").then(function(qnaBannerService) {
                    _this.qnaBannerService = qnaBannerService, _this.bannerContent$ = qnaBannerService.getBannerContent("ToolingPhrasings").pipe((0, 
                    map.U)(function(bannerContent) {
                        var _a, actionHandlers = new Map;
                        return null === (_a = bannerContent.actionHandlers) || void 0 === _a || _a.forEach(function(handler, actionId) {
                            actionHandlers.set(actionId, null != handler ? handler : _this.getBannerActionHandler(actionId, bannerContent));
                        }), (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, bannerContent), {
                            actionHandlers
                        });
                    }));
                }), this.isLoading$ = (0, combineLatest.aj)([ this.state$, this.lsdlUiBlockerService.isBlocked$.pipe((0, 
                startWith.O)(!1)) ]).pipe((0, takeUntil.R)(this.onDestroy$), (0, map.U)(function(_a) {
                    var state = _a[0];
                    return "signingIn" === state || "refreshingCopilot" === state || _a[1];
                }), (0, distinctUntilChanged.x)(), (0, shareReplay.d)(1));
            }, QnaManagePhrasingsComponent.prototype.ngOnDestroy = function() {
                return this.eventAggregation.unsubscribe("LuciaDomainModelChangedEvent", this.luciaDomainModelChangedHandler), 
                _super.prototype.ngOnDestroy.call(this);
            }, Object.defineProperty(QnaManagePhrasingsComponent.prototype, "fixedItemHeight", {
                get: function() {
                    return 40;
                },
                enumerable: !1,
                configurable: !0
            }), QnaManagePhrasingsComponent.prototype.createNewPhrasing = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.checkAttemptToLeaveCurrentState(!0) ];

                          case 1:
                            return _a.sent() ? ("copilot" === this.phrasingViewType$.value && this.phrasingViewType$.next("approved"), 
                            this.scrollableItemsContainerElement && (this.scrollableItemsContainerElement.scrollTop = 0), 
                            this.inEditPhrasingInfo$.next({
                                isNew: !0,
                                documentModel: this.workingDocumentModel
                            }), this.inEditPhrasingIndex$.next(0), this.managePhrasingsTelemetryService.logStartCreateNewPhrasingEvent(), 
                            [ 2 ]) : [ 2 ];
                        }
                    });
                });
            }, QnaManagePhrasingsComponent.prototype.startEditExistingPhrasing = function(phrasing, index) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.checkAttemptToLeaveCurrentState(!0) ];

                          case 1:
                            return _a.sent() ? (this.inEditPhrasingInfo$.next({
                                isNew: !1,
                                documentModel: this.workingDocumentModel,
                                model: {
                                    relationship: phrasing.relationshipModel,
                                    phrasing: phrasing.phrasingModel
                                },
                                diagnostics: phrasing.diagnostics
                            }), this.inEditPhrasingIndex$.next(index), this.managePhrasingsTelemetryService.logStartEditExistingPhrasingEvent(), 
                            [ 2 ]) : [ 2 ];
                        }
                    });
                });
            }, QnaManagePhrasingsComponent.prototype.cancelEditPhrasing = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        return debug.fF.assertValue(this.inEditPhrasingInfo$.value, "When cancelEditPhrasing is called, this.inEditPhrasingInfo$.value is defined"), 
                        [ 2, this.checkToCancelEdit() ];
                    });
                });
            }, QnaManagePhrasingsComponent.prototype.onApproveRequested = function(index) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.checkAttemptToLeaveCurrentState(!0) ];

                          case 1:
                            return _a.sent() ? [ 4, this.approveCopilotPhrasing(index) ] : [ 2 ];

                          case 2:
                            return _a.sent(), [ 2 ];
                        }
                    });
                });
            }, QnaManagePhrasingsComponent.prototype.onPhrasingLuciaModelChangeRequested = function(args) {
                var _a, _b, _c, _d, _e, inEditPhrasingInfo = this.inEditPhrasingInfo$.value;
                if (!0 === inEditPhrasingInfo.isNew) {
                    var newPhrasingModel = args.phrasingModel, newRelationshipModel = args.relationshipModel, eventArgs = {
                        phrasingType: getQnaPhrasingType(newPhrasingModel),
                        hasPrepPhrases: !_.isEmpty(newPhrasingModel.prepositionalPhrases),
                        hasSemanticSlotWhen: null != (null === (_a = newRelationshipModel.semanticSlots) || void 0 === _a ? void 0 : _a.when),
                        hasSemanticSlotWhere: null != (null === (_b = newRelationshipModel.semanticSlots) || void 0 === _b ? void 0 : _b.where),
                        hasSemanticSlotDuration: null != (null === (_c = newRelationshipModel.semanticSlots) || void 0 === _c ? void 0 : _c.duration),
                        hasSemanticSlotOccurrences: null != (null === (_d = newRelationshipModel.semanticSlots) || void 0 === _d ? void 0 : _d.occurrences),
                        hasCondition: null != newRelationshipModel.condition
                    };
                    this.managePhrasingsTelemetryService.logApplyNewPhrasingEvent(eventArgs);
                } else this.managePhrasingsTelemetryService.logApplyEditExistingPhrasingEvent(), 
                fromCopilot(inEditPhrasingInfo.model.phrasing) && this.logApproveCopilotPhrasingTelemetry(inEditPhrasingInfo.model.phrasing);
                this.latestUnProcessedSchemaJsonWithDiagnostics = void 0, this.workingDocumentModel = args.documentModel, 
                this.linguisticSchemaUpdated.emit(JSON.parse(this.workingDocumentModel.toJsonString()));
                var newPhrasings = (0, tslib_es6.__spreadArray)([], null !== (_e = this.allPhrasingsOrderedInternal$.value) && void 0 !== _e ? _e : [], !0), phrasingLabel = args.phrasingLabel, conditionLabel = args.conditionLabel, modifiedTimeFriendlyString = this.getModifiedTimeString(args.phrasingModel.lastModified), newPhrasing = {
                    isNew: !1,
                    documentModel: args.documentModel,
                    relationshipModel: args.relationshipModel,
                    phrasingModel: args.phrasingModel,
                    phrasingId: args.phrasingModel.ID,
                    phrasingLabel,
                    ariaLabel: this.getPhrasingRowAriaLabel(phrasingLabel, conditionLabel, modifiedTimeFriendlyString),
                    phrasingType: getStringFromPhrasingKind(args.phrasingModel.kind, this.localizationService),
                    conditionLabel,
                    modifiedTimeString: args.phrasingModel.lastModified,
                    modifiedTimeFriendlyString,
                    state: args.phrasingModel.state,
                    isUnderLuciaProcessing: !0
                };
                if (!1 === inEditPhrasingInfo.isNew) {
                    var inEditPhrasingIndex = _.findIndex(newPhrasings, function(p) {
                        return p.phrasingModel === inEditPhrasingInfo.model.phrasing;
                    });
                    if (newPhrasings[inEditPhrasingIndex] = newPhrasing, fromCopilot(inEditPhrasingInfo.model.phrasing)) {
                        var newApprovedPhrasing = newPhrasings.splice(inEditPhrasingIndex, 1)[0];
                        newPhrasings.unshift(newApprovedPhrasing);
                    }
                } else newPhrasings.splice(0, 0, newPhrasing);
                if (!0 === inEditPhrasingInfo.isNew) this.orderedDisplayPhrasingIds.splice(0, 0, args.phrasingModel.ID); else {
                    var phrasingIdBeforeApply_1 = inEditPhrasingInfo.model.phrasing.ID, originalIdx_1 = _.findIndex(this.orderedDisplayPhrasingIds, function(id) {
                        return id === phrasingIdBeforeApply_1;
                    });
                    debug.fF.assert(function() {
                        return -1 !== originalIdx_1;
                    }, "An existing phrasing under edit must have phrasing id before the edit that belongs to orderedDisplayPhrasingIds"), 
                    -1 !== originalIdx_1 && (fromCopilot(inEditPhrasingInfo.model.phrasing) ? (this.orderedDisplayPhrasingIds.splice(originalIdx_1, 1), 
                    this.orderedDisplayPhrasingIds.unshift(args.phrasingModel.ID)) : this.orderedDisplayPhrasingIds.splice(originalIdx_1, 1, args.phrasingModel.ID));
                }
                this.inEditPhrasingInfo$.next(null), this.inEditPhrasingIndex$.next(void 0), this.allPhrasingsOrderedInternal$.next(newPhrasings);
            }, QnaManagePhrasingsComponent.prototype.onDeletePhrasingRequested = function(phrasing) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var _this = this;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.checkAttemptToLeaveCurrentState(!0) ];

                          case 1:
                            return _a.sent() ? (this.showAllMouseActionBlocker.emit(!0), showConfirmationDialogInCenter(this.dialogService, {
                                title: this.localizationService.get("Qna_Phrasing_DeleteConfirmation_Title"),
                                message: "",
                                okButtonText: this.localizationService.get("Delete"),
                                cancelButtonText: this.localizationService.get("Cancel_ButtonText")
                            }, {
                                autoFocus: !0,
                                disableClose: !0,
                                maxWidth: 600,
                                panelClass: [ "managePhrasingsConfirmationDialogPanel", "themeableElement" ]
                            }).afterClosed().subscribe(function(result) {
                                return (0, tslib_es6.__awaiter)(_this, void 0, void 0, function() {
                                    var phrasingModel, phrasingType, phrasingSource, _a;
                                    return (0, tslib_es6.__generator)(this, function(_b) {
                                        switch (_b.label) {
                                          case 0:
                                            return 1 !== result ? [ 3, 2 ] : (phrasingType = getQnaPhrasingType(phrasingModel = phrasing.phrasingModel), 
                                            phrasingSource = phrasingModel.source, [ 4, this.deletePhrasing(phrasing) ]);

                                          case 1:
                                            return _b.sent(), this.managePhrasingsTelemetryService.logDeletePhrasingEvent({
                                                phrasingType,
                                                sourceAgent: null == phrasingSource ? void 0 : phrasingSource.Agent,
                                                sourceType: null === (_a = null == phrasingSource ? void 0 : phrasingSource.Type) || void 0 === _a ? void 0 : _a.toString()
                                            }), [ 3, 3 ];

                                          case 2:
                                            this.resumeAndProcessOnHoldLuciaDomainChange(), _b.label = 3;

                                          case 3:
                                            return this.showAllMouseActionBlocker.emit(!1), [ 2 ];
                                        }
                                    });
                                });
                            }), [ 2 ]) : [ 2 ];
                        }
                    });
                });
            }, QnaManagePhrasingsComponent.prototype.handleAttemptToLeave = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        return [ 2, this.checkAttemptToLeaveCurrentState(!1) ];
                    });
                });
            }, QnaManagePhrasingsComponent.prototype.onSort = function(sortEvent, phrasingsViewType) {
                var _a;
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var sortedPhrasings, currentPhrasings, approvedEndIndex, approvedPhrasings, copilotPhrasings, sortedApprovedPhrasings, sortedCopilotPhrasings;
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return debug.fF.assertValue(sortEvent.active, "sorting column name is not defined"), 
                            debug.fF.assertValue(sortEvent.direction, "sortOrder/direction is not defined"), 
                            [ 4, this.checkAttemptToLeaveCurrentState(!0) ];

                          case 1:
                            return _b.sent() ? (sortedPhrasings = [], currentPhrasings = (0, tslib_es6.__spreadArray)([], null !== (_a = this.allPhrasingsOrderedInternal$.value) && void 0 !== _a ? _a : [], !0), 
                            approvedEndIndex = _.findLastIndex(currentPhrasings, function(p) {
                                return !fromCopilot(p);
                            }), approvedPhrasings = currentPhrasings.slice(0, approvedEndIndex + 1), copilotPhrasings = currentPhrasings.slice(approvedEndIndex + 1), 
                            "approved" === phrasingsViewType ? (sortedApprovedPhrasings = this.getSortedPhrasings(approvedPhrasings, sortEvent), 
                            sortedPhrasings = (0, tslib_es6.__spreadArray)((0, tslib_es6.__spreadArray)([], sortedApprovedPhrasings, !0), copilotPhrasings, !0)) : (sortedCopilotPhrasings = this.getSortedPhrasings(copilotPhrasings, sortEvent), 
                            sortedPhrasings = (0, tslib_es6.__spreadArray)((0, tslib_es6.__spreadArray)([], approvedPhrasings, !0), sortedCopilotPhrasings, !0)), 
                            this.orderedDisplayPhrasingIds = _.map(sortedPhrasings, function(p) {
                                return p.phrasingId;
                            }), this.allPhrasingsOrderedInternal$.next(sortedPhrasings), [ 2 ]) : [ 2 ];
                        }
                    });
                });
            }, QnaManagePhrasingsComponent.prototype.onRequestShowHideDefaultAttributePhrasings = function(toShow) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.checkAttemptToLeaveCurrentState(!0) ];

                          case 1:
                            return _a.sent() ? (this.showDefaultAttributePhrasings.fn(toShow), [ 2 ]) : [ 2 ];
                        }
                    });
                });
            }, QnaManagePhrasingsComponent.prototype.onBannerDismiss = function(bannerId) {
                this.qnaBannerService.dismissBanner("ToolingPhrasings", bannerId);
            }, QnaManagePhrasingsComponent.prototype.onPhrasingViewTypeChange = function(value) {
                this.phrasingViewType$.next(value);
            }, QnaManagePhrasingsComponent.prototype.logApproveCopilotPhrasingTelemetry = function(phrasing) {
                var _a, phrasingType = getQnaPhrasingType(phrasing), phrasingSource = phrasing.source;
                this.managePhrasingsTelemetryService.logPromotePhrasingEvent({
                    phrasingType,
                    sourceAgent: null == phrasingSource ? void 0 : phrasingSource.Agent,
                    sourceType: null === (_a = null == phrasingSource ? void 0 : phrasingSource.Type) || void 0 === _a ? void 0 : _a.toString()
                });
            }, QnaManagePhrasingsComponent.prototype.refreshCopilotPhrasings = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var isSignedIn, requestedAgents, copilotWorkspaceId, copilotReq, response, originalSyncTimeDisplayString, lsdlObject, lsdlJson, newDocument, errorCodes, errorBanners, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.accountService.isSignedInAsync() ];

                          case 1:
                            return (isSignedIn = _a.sent()) ? [ 3, 3 ] : (this.state$.next("signingIn"), [ 4, this.accountService.trySignInAsync("SignInForQnaToolingDialog") ]);

                          case 2:
                            isSignedIn = _a.sent(), _a.label = 3;

                          case 3:
                            return isSignedIn ? [ 4, this.ensureImproveLsdlService() ] : (this.state$.next("default"), 
                            [ 2 ]);

                          case 4:
                            return _a.sent(), requestedAgents = [ "PowerBI.AzureOpenAIPhrasings" ], [ 4, this.copilotRequirementsService.validateRequirements({
                                showLoadingDialog: !1
                            }) ];

                          case 5:
                            return !(copilotReq = _a.sent()).copilotStatus.enabled || _.isEmpty(copilotReq.copilotRequirements.workspaceId) ? (copilotReq.copilotStatus.reason === src.Hm.NoWorkspaceId || (errorBanners = improve_lsdl_result_handler.G.getErrorBanners([ {
                                category: "powerbi",
                                code: copilotReq.copilotStatus.reason === src.Hm.DisabledForCrossGeo ? "DisallowedForCrossGeo" : "UnsupportedUser",
                                agent: "PowerBI.AzureOpenAIPhrasings"
                            } ], this.localizationService, "Phrasings"), this.qnaBannerService.updateContent("ToolingPhrasings", {
                                showBanners: !0,
                                banners: errorBanners
                            })), [ 2 ]) : (copilotWorkspaceId = copilotReq.copilotRequirements.workspaceId, 
                            this.state$.next("refreshingCopilot"), this.setLoadingBannerAndState(!0, requestedAgents), 
                            [ 4, this.improveLsdlService.improveLinguisticSchema({
                                requestedAgents,
                                requestPriority: "Interactive",
                                lsdlJson: this.workingDocumentModel.toJsonString(),
                                copilotWorkspaceId
                            }) ]);

                          case 6:
                            if (response = _a.sent(), this.setLoadingBannerAndState(!1, requestedAgents), this.state$.next("default"), 
                            null != response.result && (originalSyncTimeDisplayString = this.syncTimeDisplayString, 
                            this.workingDocumentModel = new lsdl_document_model.X(lsdlObject = response.result.lsdlObject), 
                            this.setCopilotPhrasingsSyncTime(lsdlObject), _.isEqual(originalSyncTimeDisplayString, this.syncTimeDisplayString) || (this.workingDocumentModel.commit(), 
                            lsdlJson = this.workingDocumentModel.toJsonString(), this.qnaService.overrideLinguisticSchemaJson(lsdlJson), 
                            newDocument = JSON.parse(lsdlJson), this.linguisticSchemaUpdated.emit(newDocument))), 
                            !_.isEmpty(response.errors)) {
                                if (errorCodes = _.map(response.errors, function(e) {
                                    return e.code;
                                }), _.includes(errorCodes, "OperationCancelled")) return [ 2 ];
                                errorBanners = improve_lsdl_result_handler.G.getErrorBanners(response.errors, this.localizationService, "Phrasings"), 
                                this.qnaBannerService.updateContent("ToolingPhrasings", {
                                    showBanners: !0,
                                    banners: errorBanners,
                                    actionHandlers: new Map([ [ "errorDetails", function(error) {
                                        debug.fF.assertValue(error, "improve lsdl error"), _this.dialogService.showTemplateDialog("QnaDiagnosticDialogComponentId", {
                                            title: _this.localizationService.get("Qna_Explore_ErrorMessage"),
                                            hideCancelButton: !0,
                                            input: {
                                                errorCode: error.code,
                                                errorMessage: error.diagnosticMessage
                                            }
                                        });
                                    } ], [ "retry", function() {
                                        return _this.refreshCopilotPhrasings();
                                    } ] ])
                                });
                            }
                            return [ 2 ];
                        }
                    });
                });
            }, QnaManagePhrasingsComponent.prototype.getSortedPhrasings = function(displayedPhrasings, sortEvent) {
                return debug.fF.assertValue(displayedPhrasings, "displayedPhrasings is not defined"), 
                debug.fF.assertValue(sortEvent, "sortEvent is not defined"), displayedPhrasings.slice().sort(function(phrasing1, phrasing2) {
                    var isAsc = "asc" === sortEvent.direction;
                    switch (sortEvent.active) {
                      case "Relationship":
                        return phrasing1.phrasingLabel.localeCompare(phrasing2.phrasingLabel, void 0, {
                            sensitivity: "base"
                        }) * (isAsc ? 1 : -1);

                      case "Condition":
                        return phrasing1.conditionLabel ? phrasing2.conditionLabel ? phrasing1.conditionLabel.localeCompare(phrasing2.conditionLabel, void 0, {
                            sensitivity: "base"
                        }) * (isAsc ? 1 : -1) : -1 : 1;

                      case "RelationshipType":
                        return phrasing1.phrasingType.localeCompare(phrasing2.phrasingType, void 0, {
                            sensitivity: "base"
                        }) * (isAsc ? 1 : -1);

                      case "ModifiedTime":
                        return phrasing1.modifiedTimeString ? phrasing2.modifiedTimeString ? (new Date(phrasing1.modifiedTimeString).getTime() < new Date(phrasing2.modifiedTimeString).getTime() ? -1 : 1) * (isAsc ? 1 : -1) : -1 : 1;

                      default:
                        return 0;
                    }
                });
            }, QnaManagePhrasingsComponent.prototype.generatePhrasings = function(phrasingLabelResult, allDiagnosticMessages, firstTime) {
                var _a;
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var relationships, listOfPhrasings, baseExclusiveNames, newlyAddedPhrasingIds, changesCommitted, reorderedPhrasings, newLsdlJson, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return (relationships = (0, tslib_es6.__spreadArray)([], null !== (_a = this.workingDocumentModel.getRelationships()) && void 0 !== _a ? _a : [], !0)).reverse(), 
                            listOfPhrasings = [], newlyAddedPhrasingIds = [], _.forEach(relationships, function(relationship) {
                                var phrasingLabels = _.filter(phrasingLabelResult, function(phrasingLabel) {
                                    return phrasingLabel.RelationshipName === relationship.lsdlName;
                                });
                                _.forEach(relationship.phrasings, function(phrasing, index) {
                                    var labelResult = _.find(phrasingLabels, function(phrasingLabel) {
                                        return phrasingLabel.PhrasingIndex === index;
                                    }), diagnostics = function(allDiagnostics, targetParentRelationshipName, targetPhrasingId, targetPhrasingIndex) {
                                        if (!_.isEmpty(allDiagnostics)) {
                                            var phrasingMatches = [], relationshipMatches = [];
                                            return _.forEach(allDiagnostics, function(diagnostic) {
                                                if ("DiscardedUnusedRole" !== diagnostic.Code) {
                                                    var identifier = diagnostic.ObjectIdentifier;
                                                    null == identifier || _.isEmpty(identifier.RelationshipName) || identifier.RelationshipName !== targetParentRelationshipName || (null != identifier.PhrasingID ? identifier.PhrasingID === targetPhrasingId && phrasingMatches.push(diagnostic.Message) : null != identifier.PhrasingIndex ? identifier.PhrasingIndex === targetPhrasingIndex && phrasingMatches.push(diagnostic.Message) : relationshipMatches.push(diagnostic.Message));
                                                }
                                            }), (0, tslib_es6.__spreadArray)((0, tslib_es6.__spreadArray)([], phrasingMatches, !0), relationshipMatches, !0);
                                        }
                                    }(allDiagnosticMessages, relationship.lsdlName, phrasing.ID, index);
                                    if (labelResult) {
                                        var phrasingLabel = labelResult.Label, conditionLabel = labelResult.ConditionLabel, modifiedTimeFriendlyString = _this.getModifiedTimeString(phrasing.lastModified);
                                        if ("Deleted" !== phrasing.state) {
                                            var newPhrasing_1 = {
                                                phrasingId: phrasing.ID,
                                                phrasingLabel,
                                                phrasingType: getStringFromPhrasingKind(phrasing.kind, _this.localizationService),
                                                ariaLabel: _this.getPhrasingRowAriaLabel(phrasingLabel, conditionLabel, modifiedTimeFriendlyString),
                                                conditionLabel,
                                                diagnostics,
                                                modifiedTimeString: phrasing.lastModified,
                                                modifiedTimeFriendlyString,
                                                state: phrasing.state,
                                                documentModel: _this.workingDocumentModel,
                                                relationshipModel: relationship,
                                                phrasingModel: phrasing,
                                                isNew: !1,
                                                isUnderLuciaProcessing: !1,
                                                source: phrasing.source
                                            };
                                            if (debug.fF.assert(function() {
                                                return !_.isEmpty(newPhrasing_1.phrasingId) || firstTime || fromCopilot(newPhrasing_1);
                                            }, "unless it is first time, a non-copilot phrasing should already have an ID"), 
                                            _.isEmpty(newPhrasing_1.phrasingId)) {
                                                debug.fF.assert(function() {
                                                    return "Generated" !== newPhrasing_1.state;
                                                }, "client should never try to  generate phrasingID for Generated phrasings, but Generated phrasings received by client should never have empty ID in the first place."), 
                                                null == baseExclusiveNames && (baseExclusiveNames = getModelNewPhrasingIdBaseExclusiveNames(_this.workingDocumentModel));
                                                var uniquePhrasingId = getNewUniquePhrasingId(labelResult.ProposedIdentifier, _.difference((0, 
                                                tslib_es6.__spreadArray)((0, tslib_es6.__spreadArray)([], baseExclusiveNames, !0), newlyAddedPhrasingIds, !0), relationship.lsdlName));
                                                newlyAddedPhrasingIds.push(uniquePhrasingId), newPhrasing_1.phrasingId = uniquePhrasingId, 
                                                phrasing.ID = uniquePhrasingId, relationship.markDirtyForForceSave();
                                            }
                                            listOfPhrasings.push(newPhrasing_1);
                                        }
                                    }
                                });
                            }), changesCommitted = this.workingDocumentModel.commit(), this.refreshPhrasingsDisplayOrderRecords(listOfPhrasings, firstTime), 
                            orderedIds = this.orderedDisplayPhrasingIds, originalCopy = (0, tslib_es6.__spreadArray)([], (originalPhrasings = listOfPhrasings) || [], !0), 
                            nullIdPhrasings = _.remove(originalCopy, function(p) {
                                return _.isEmpty(p.phrasingId);
                            }), debug.fF.assert(function() {
                                return _.isEmpty(nullIdPhrasings);
                            }, "We do not expect to run into phrasings without ids"), _.remove(originalCopy, function(p) {
                                return !_.includes(orderedIds, p.phrasingId) && !fromCopilot(p);
                            }), debug.fF.assert(function() {
                                return _.isEmpty(_.difference(orderedIds, _.map(originalCopy, function(p) {
                                    return p.phrasingId;
                                })));
                            }, "Id collection from orderedIds and the given phrasings list are not the same"), 
                            reorderedPhrasings = _.map(orderedIds, function(id) {
                                return _.find(originalPhrasings, function(p) {
                                    return p.phrasingId === id;
                                });
                            }), this.allPhrasingsOrderedInternal$.next(reorderedPhrasings), firstTime && this.onSort(defaultSort, this.phrasingViewType$.value), 
                            changesCommitted ? (newLsdlJson = this.workingDocumentModel.toJsonString(), [ 4, this.qnaService.overrideLinguisticSchemaJson(newLsdlJson) ]) : [ 3, 2 ];

                          case 1:
                            _b.sent(), _b.label = 2;

                          case 2:
                            return [ 2 ];
                        }
                        var originalPhrasings, orderedIds, originalCopy, nullIdPhrasings;
                    });
                });
            }, QnaManagePhrasingsComponent.prototype.updateVirtualTable = function(newPhrasings, scrollEvent, inEditPhrasingIndex, triggeredWithPhrasingsUpdate) {
                var _this = this;
                this.onHoldVirtualTableUpdateArgs = void 0;
                var totalPhrasingsCount = _.size(newPhrasings), scrollTop = null == scrollEvent ? 0 : scrollEvent.target.scrollTop;
                if (0 === totalPhrasingsCount || null == scrollTop) return this.virtualTableInfo$.next({
                    topPlaceholderHeight: 0,
                    bottomPlaceholderHeight: 0,
                    renderItemsIndicesRange: {
                        start: 0,
                        end: -1
                    }
                }), void this.virtualTableDisplayPhrasings$.next(void 0);
                if (this.scrollableItemsContainerElement) {
                    var topPlaceholderEndIndex, bottomPlaceholderStartIndex, bottomPlaceholderEndIndex, inViewTopIndex, inViewBottomIndex, scrollableItemsContainerHeight = this.scrollableItemsContainerElement.clientHeight, inViewTop = scrollTop, inViewBottom = inViewTop + scrollableItemsContainerHeight, inEditRowTop = null != inEditPhrasingIndex ? 40 * inEditPhrasingIndex : void 0, inEditRowBottom = null != inEditRowTop && null != this.phrasingEditorElement ? inEditRowTop + this.phrasingEditorElement.clientHeight : void 0;
                    null == inEditPhrasingIndex && (this.itemsCountPerViewPortNormal = Math.ceil(scrollableItemsContainerHeight / 40)), 
                    inViewTopIndex = Math.floor(inViewTop / 40), null != inEditPhrasingIndex && inEditPhrasingIndex < inViewTopIndex && (null != inEditRowBottom ? inViewTopIndex = inEditRowBottom <= scrollTop ? (inViewTop - this.phrasingEditorElement.clientHeight) / 40 + 1 : inEditPhrasingIndex : inViewTopIndex -= 20), 
                    (topPlaceholderEndIndex = inViewTopIndex - 20 - 1) < 0 && (topPlaceholderEndIndex = -1), 
                    debug.fF.assert(function() {
                        return null != _this.itemsCountPerViewPortNormal;
                    }, "this.itemsCountPerViewPortNormal should have been calculated already"), bottomPlaceholderStartIndex = inViewTopIndex + this.itemsCountPerViewPortNormal + 20, 
                    null != inEditPhrasingIndex && (inViewBottomIndex = Math.floor(inViewBottom / 40), 
                    inEditPhrasingIndex < inViewBottomIndex && (null != inEditRowBottom ? inViewBottomIndex = inEditRowBottom <= inViewBottom ? (inViewBottom - this.phrasingEditorElement.clientHeight) / 40 + 1 : inEditPhrasingIndex : inViewBottomIndex += 20), 
                    bottomPlaceholderStartIndex = inViewBottomIndex + 20 + 1), bottomPlaceholderEndIndex = totalPhrasingsCount - 1, 
                    bottomPlaceholderStartIndex > totalPhrasingsCount - 1 && (bottomPlaceholderStartIndex = totalPhrasingsCount), 
                    setTimeout(function() {
                        var topPlaceholderItemsCount = topPlaceholderEndIndex - 0 + 1;
                        null != inEditPhrasingIndex && inEditPhrasingIndex <= topPlaceholderEndIndex && topPlaceholderItemsCount--;
                        var bottomPlaceholderItemsCount = bottomPlaceholderEndIndex - bottomPlaceholderStartIndex + 1;
                        null != inEditPhrasingIndex && inEditPhrasingIndex >= bottomPlaceholderStartIndex && bottomPlaceholderItemsCount--, 
                        _this.virtualTableInfo$.next({
                            topPlaceholderHeight: 40 * topPlaceholderItemsCount,
                            bottomPlaceholderHeight: 40 * bottomPlaceholderItemsCount,
                            renderItemsIndicesRange: {
                                start: topPlaceholderEndIndex + 1,
                                end: bottomPlaceholderStartIndex - 1
                            }
                        });
                        var rangeStart = topPlaceholderEndIndex + 1, rangeEnd = bottomPlaceholderStartIndex - 1, allVituralPhrasings = (0, 
                        tslib_es6.__spreadArray)([], triggeredWithPhrasingsUpdate || null == _this.virtualTableDisplayPhrasings$.value ? newPhrasings : _this.virtualTableDisplayPhrasings$.value, !0);
                        _.forEach(allVituralPhrasings, function(p, index) {
                            var inRange = index >= rangeStart && index <= rangeEnd, toRender = index === inEditPhrasingIndex || inRange;
                            p.toRender = toRender, p.outOfRangeForceRender = !inRange && toRender;
                        }), _this.virtualTableDisplayPhrasings$.next(allVituralPhrasings);
                    });
                } else this.onHoldVirtualTableUpdateArgs = {
                    newPhrasings,
                    scrollEvent,
                    inEditPhrasingIndex
                };
            }, QnaManagePhrasingsComponent.prototype.calculateActionsColumnWidth = function() {
                var _this = this;
                (0, combineLatest.aj)([ this.actionCellHeaderElement$, this.approveButtonElement$ ]).pipe((0, 
                filter.h)(function(_a) {
                    var header = _a[0];
                    return "approved" === _this.phrasingViewType$.value ? !!header : !(!header || !_a[1]);
                })).subscribe(function(_a) {
                    var header = _a[0], approveButton = _a[1];
                    if (!("approved" === _this.phrasingViewType$.value && null != _this.approvedAutoWidthColumnCalculatedWidth || "copilot" === _this.phrasingViewType$.value && null != _this.copilotAutoWidthColumnCalculatedWidth)) {
                        var headerTextProps = textMeasurementService.b.getMeasurementProperties($(header)), headerTextWidth = textMeasurementService.b.measureSvgTextWidth(headerTextProps, header.textContent);
                        if (headerTextWidth > 0) {
                            var headerTextWithSpacingWidth = headerTextWidth + 8;
                            if ("approved" === _this.phrasingViewType$.value) setTimeout(function() {
                                _this.approvedAutoWidthColumnCalculatedWidth = Math.max(headerTextWithSpacingWidth, 50);
                            }); else {
                                var approveButtonTextProps = textMeasurementService.b.getMeasurementProperties($(approveButton)), approveButtonTextWithSpacing_1 = textMeasurementService.b.measureSvgTextWidth(approveButtonTextProps, approveButton.textContent) + 8;
                                setTimeout(function() {
                                    _this.copilotAutoWidthColumnCalculatedWidth = Math.max(headerTextWithSpacingWidth, 70 + approveButtonTextWithSpacing_1);
                                });
                            }
                        }
                    }
                });
            }, QnaManagePhrasingsComponent.prototype.getModifiedTimeString = function(rawTimeString) {
                if (!_.isEmpty(rawTimeString)) return (0, dateFormatter.s7)(rawTimeString, this.localizationService, !0);
            }, QnaManagePhrasingsComponent.prototype.setCopilotPhrasingsSyncTime = function(lsdl) {
                var lsdlAgentProperties = _.find(lsdl.Agents, function(_props, name) {
                    return "PowerBI.AzureOpenAIPhrasings" === name;
                });
                this.syncTimeDisplayString = _.isEmpty(null == lsdlAgentProperties ? void 0 : lsdlAgentProperties.LastModified) ? void 0 : (0, 
                dateFormatter.Wh)(lsdlAgentProperties.LastModified, this.localizationService), this.updatedTimeInfo = this.syncTimeDisplayString ? this.localizationService.format("Suggestions_Updated_WithTimeInfo", [ this.syncTimeDisplayString ]) : void 0;
            }, QnaManagePhrasingsComponent.prototype.onLuciaDomainModelChanged = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var schemaWithDiagnostics;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.qnaService.getCurrentLinguisticSchemaJsonWithDiagnosticMessages(this.initialLinguisticSchema.Version) ];

                          case 1:
                            return schemaWithDiagnostics = _a.sent(), this.inEditPhrasingInfo$.value || this.inDeletePhrasingInfo$.value ? (this.latestUnProcessedSchemaJsonWithDiagnostics = schemaWithDiagnostics, 
                            [ 2 ]) : (this.linguisticSchemaUpdated.emit(schemaWithDiagnostics.LinguisticSchema), 
                            this.updateWorkingModelAndPhrasings(schemaWithDiagnostics.LinguisticSchema, schemaWithDiagnostics.DiagnosticMessages, !1), 
                            [ 2 ]);
                        }
                    });
                });
            }, QnaManagePhrasingsComponent.prototype.updateWorkingModelAndPhrasings = function(linguisticSchema, allDiagnosticMessages, firstTime) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var schemaClone, schemaWithoutDeleted, rKeysToRemove, phrasingLabels, entityTerms, _a;
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return debug.fF.assertValue(linguisticSchema, "linguisticSchema"), schemaClone = JSON.parse(JSON.stringify(linguisticSchema)), 
                            this.workingDocumentModel = new lsdl_document_model.X(schemaClone), schemaWithoutDeleted = JSON.parse(this.workingDocumentModel.toJsonString()), 
                            rKeysToRemove = [], _.forEach(schemaWithoutDeleted.Relationships, function(r, rkey) {
                                if ("Deleted" === r.State || 0 === _.size(r.Phrasings)) rKeysToRemove.push(rkey); else {
                                    var psToRemove_1 = [];
                                    _.forEach(r.Phrasings, function(p) {
                                        "Deleted" === p.State && psToRemove_1.push(p);
                                    }), r.Phrasings = _.difference(r.Phrasings, psToRemove_1);
                                }
                            }), _.forEach(rKeysToRemove, function(rKey) {
                                delete schemaWithoutDeleted.Relationships[rKey];
                            }), [ 4, Promise.allSettled([ this.getPhrasingLabels(schemaWithoutDeleted), this.getAllEntityTerms(linguisticSchema, this.workingDocumentModel) ]) ];

                          case 1:
                            return _a = _b.sent(), phrasingLabels = _a[0], this.allEntityVariantLabels = "fulfilled" === (entityTerms = _a[1]).status ? entityTerms.value : {}, 
                            this.generatePhrasings("fulfilled" === phrasingLabels.status ? phrasingLabels.value : void 0, allDiagnosticMessages, firstTime), 
                            [ 2 ];
                        }
                    });
                });
            }, QnaManagePhrasingsComponent.prototype.getAllEntityTerms = function(linguisticSchema, lsdlModel) {
                var _a;
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var schemaEntitiesJson, variants, entityNames, request, requestJson, result, entityTerms, entityLabels;
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return schemaEntitiesJson = JSON.stringify(linguisticSchema.Entities), (null === (_a = this.entityTermsCache) || void 0 === _a ? void 0 : _a.requestEntitiesJson) === schemaEntitiesJson ? [ 2, this.entityTermsCache.result ] : (variants = [ TermVariantFlags.None, TermVariantFlags.Plural, TermVariantFlags.PluralSentenceCase, TermVariantFlags.SentenceCase ], 
                            entityNames = _.map(lsdlModel.getEntities(), function(e) {
                                return e.lsdlName;
                            }), request = {
                                EntityRequests: _.flatten(_.map(entityNames, function(lsdlName) {
                                    return _.map(variants, function(v) {
                                        return {
                                            EntityName: lsdlName,
                                            TermVariantFlags: v
                                        };
                                    });
                                }))
                            }, requestJson = JSON.stringify(request), [ 4, this.qnaService.getEntityTerms(requestJson) ]);

                          case 1:
                            return result = _b.sent(), entityTerms = result.EntityTerms, entityLabels = {}, 
                            _.forEach(entityTerms, function(_value, idx) {
                                var variantBaseIdx = idx % 4;
                                0 === variantBaseIdx && (entityLabels[entityNames[idx / 4]] = new Map([ [ variants[variantBaseIdx], entityTerms[idx] ], [ variants[variantBaseIdx + 1], entityTerms[idx + 1] ], [ variants[variantBaseIdx + 2], entityTerms[idx + 2] ], [ variants[variantBaseIdx + 3], entityTerms[idx + 3] ] ]));
                            }), this.entityTermsUpdated.emit({
                                requestEntitiesJson: schemaEntitiesJson,
                                result: entityLabels
                            }), [ 2, entityLabels ];
                        }
                    });
                });
            }, QnaManagePhrasingsComponent.prototype.getPhrasingLabels = function(schema) {
                var _a;
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var result;
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return JSON.stringify(null === (_a = this.phrasingLabelsCache) || void 0 === _a ? void 0 : _a.request) === JSON.stringify(schema) ? [ 2, this.phrasingLabelsCache.result.Labels ] : [ 4, generatePhrasingLabels(schema, this.qnaService) ];

                          case 1:
                            return result = _b.sent(), this.phrasingLabelsUpdated.emit({
                                request: schema,
                                result
                            }), [ 2, result.Labels ];
                        }
                    });
                });
            }, QnaManagePhrasingsComponent.prototype.deletePhrasing = function(phrasingToDelete) {
                var _a;
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var workingDocumentModelCopy, matchingRelationship, phrasingIdx, newLsdlJson, newPhrasings, index;
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return isPhrasingViewModelExisting(phrasingToDelete) ? (this.inDeletePhrasingInfo$.next(phrasingToDelete), 
                            workingDocumentModelCopy = this.getModelCopy(), matchingRelationship = _.find(workingDocumentModelCopy.getRelationships(), function(r) {
                                return r.lsdlName === phrasingToDelete.relationshipModel.lsdlName;
                            }), phrasingIdx = _.findIndex(matchingRelationship.phrasings, function(phrasing) {
                                return phrasing.ID === phrasingToDelete.phrasingModel.ID;
                            }), debug.fF.assert(function() {
                                return -1 !== phrasingIdx;
                            }, "Expect to find a PhrasingViewModelExisting.phrasingModel in matchingRelationship phrasings"), 
                            matchingRelationship.deletePhrasing(matchingRelationship.phrasings[phrasingIdx]), 
                            workingDocumentModelCopy.commit() ? (newLsdlJson = workingDocumentModelCopy.toJsonString(), 
                            [ 4, this.qnaService.overrideLinguisticSchemaJson(newLsdlJson) ]) : [ 3, 2 ]) : (debug.fF.assertFail("expected only existing phrasing can be deleted"), 
                            [ 2 ]);

                          case 1:
                            return _b.sent(), this.latestUnProcessedSchemaJsonWithDiagnostics = void 0, this.workingDocumentModel = workingDocumentModelCopy, 
                            this.linguisticSchemaUpdated.emit(JSON.parse(newLsdlJson)), newPhrasings = (0, tslib_es6.__spreadArray)([], null !== (_a = this.allPhrasingsOrderedInternal$.value) && void 0 !== _a ? _a : [], !0), 
                            index = _.findIndex(newPhrasings, function(p) {
                                return p.phrasingId === phrasingToDelete.phrasingId;
                            }), newPhrasings.splice(index, 1), _.remove(this.orderedDisplayPhrasingIds, function(id) {
                                return id === phrasingToDelete.phrasingId;
                            }), this.inDeletePhrasingInfo$.next(void 0), this.allPhrasingsOrderedInternal$.next(newPhrasings), 
                            [ 3, 3 ];

                          case 2:
                            this.resumeAndProcessOnHoldLuciaDomainChange(), _b.label = 3;

                          case 3:
                            return [ 2 ];
                        }
                    });
                });
            }, QnaManagePhrasingsComponent.prototype.approveCopilotPhrasing = function(index) {
                var _a;
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var currentPhrasings, approvedEndIndex, targetPhrasing, workingDocumentModelCopy, workingExistingRelationshipModel, targetPhrasingIndex, workingFragmentRelationshipModel, workingFragmentPhrasingModel, phrasingIdx, newLsdlJson;
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return currentPhrasings = (0, tslib_es6.__spreadArray)([], null !== (_a = this.allPhrasingsOrderedInternal$.value) && void 0 !== _a ? _a : [], !0), 
                            approvedEndIndex = _.findLastIndex(currentPhrasings, function(p) {
                                return !fromCopilot(p);
                            }), fromCopilot(targetPhrasing = currentPhrasings[index + approvedEndIndex + 1]) && isPhrasingViewModelExisting(targetPhrasing) ? (this.logApproveCopilotPhrasingTelemetry(targetPhrasing.phrasingModel), 
                            workingDocumentModelCopy = this.getModelCopy(), workingExistingRelationshipModel = _.find(workingDocumentModelCopy.getRelationships(), function(r) {
                                return r.lsdlName === targetPhrasing.relationshipModel.lsdlName;
                            }), targetPhrasingIndex = _.findIndex(workingExistingRelationshipModel.phrasings, function(p) {
                                return p.ID === targetPhrasing.phrasingModel.ID;
                            }), workingFragmentRelationshipModel = workingExistingRelationshipModel.clone(workingExistingRelationshipModel.phrasings[targetPhrasingIndex]), 
                            (workingFragmentPhrasingModel = workingFragmentRelationshipModel.phrasings[0]).state = "Authored", 
                            workingDocumentModelCopy.updateRelationship(workingExistingRelationshipModel, workingFragmentRelationshipModel, workingFragmentPhrasingModel.ID), 
                            workingDocumentModelCopy.commit() ? (phrasingIdx = _.findIndex(currentPhrasings, function(p) {
                                return p.phrasingId === targetPhrasing.phrasingId;
                            }), currentPhrasings.splice(phrasingIdx, 1), currentPhrasings.unshift(targetPhrasing), 
                            currentPhrasings[0].state = "Authored", this.orderedDisplayPhrasingIds = _.map(currentPhrasings, function(p) {
                                return p.phrasingId;
                            }), this.allPhrasingsOrderedInternal$.next(currentPhrasings), newLsdlJson = workingDocumentModelCopy.toJsonString(), 
                            [ 4, this.qnaService.overrideLinguisticSchemaJson(newLsdlJson) ]) : [ 3, 2 ]) : (debug.fF.assertFail("expected only existing copilot phrasing can be approved"), 
                            [ 2 ]);

                          case 1:
                            return _b.sent(), this.latestUnProcessedSchemaJsonWithDiagnostics = void 0, this.workingDocumentModel = workingDocumentModelCopy, 
                            this.linguisticSchemaUpdated.emit(JSON.parse(newLsdlJson)), [ 3, 3 ];

                          case 2:
                            this.resumeAndProcessOnHoldLuciaDomainChange(), _b.label = 3;

                          case 3:
                            return [ 2 ];
                        }
                    });
                });
            }, QnaManagePhrasingsComponent.prototype.resumeAndProcessOnHoldLuciaDomainChange = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var schemaCopy, diagnosticsCopy;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        return null == this.latestUnProcessedSchemaJsonWithDiagnostics ? [ 2 ] : (schemaCopy = this.latestUnProcessedSchemaJsonWithDiagnostics.LinguisticSchema, 
                        diagnosticsCopy = this.latestUnProcessedSchemaJsonWithDiagnostics.DiagnosticMessages, 
                        this.latestUnProcessedSchemaJsonWithDiagnostics = void 0, [ 2, this.updateWorkingModelAndPhrasings(schemaCopy, diagnosticsCopy, !1) ]);
                    });
                });
            }, QnaManagePhrasingsComponent.prototype.refreshPhrasingsDisplayOrderRecords = function(newPhrasings, firstTime) {
                var _a, _b, _this = this;
                if (firstTime) return this.orderedDisplayPhrasingIds = [], (_a = this.orderedDisplayPhrasingIds).push.apply(_a, _.map(_.filter(newPhrasings, function(p) {
                    return !fromCopilot(p);
                }), function(p) {
                    return p.phrasingId;
                })), void (_b = this.orderedDisplayPhrasingIds).push.apply(_b, _.map(_.filter(newPhrasings, function(p) {
                    return fromCopilot(p);
                }), function(p) {
                    return p.phrasingId;
                }));
                var phrasingIds = new Set;
                _.forEach(newPhrasings, function(p) {
                    phrasingIds.add(p.phrasingId);
                });
                var toRemove = [];
                _.forEach(this.orderedDisplayPhrasingIds, function(pId) {
                    phrasingIds.has(pId) || toRemove.push(pId);
                }), this.orderedDisplayPhrasingIds = _.difference(this.orderedDisplayPhrasingIds, toRemove), 
                _.forEach(newPhrasings, function(p) {
                    _.includes(_this.orderedDisplayPhrasingIds, p.phrasingId) || fromCopilot(p) && !_.isEmpty(p.phrasingId) && _this.orderedDisplayPhrasingIds.push(p.phrasingId);
                });
            }, QnaManagePhrasingsComponent.prototype.promptToSave = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, showConfirmationDialogInCenter(this.dialogService, {
                                title: this.localizationService.get("QnaTooling_SavePrompt_BeforeLeaveConfirmation_Title"),
                                message: this.localizationService.get("QnaTooling_ManagePhrasings_SavePrompt_BeforeLeaveConfirmation_Message"),
                                okButtonText: this.localizationService.get("PBI_Button_Label_Save"),
                                cancelButtonText: this.localizationService.get("Settings_DiscardButtonText")
                            }, {
                                autoFocus: !0,
                                disableClose: !0,
                                maxWidth: 600,
                                panelClass: [ "managePhrasingsConfirmationDialogPanel", "themeableElement" ]
                            }).afterClosed().toPromise() ];

                          case 1:
                            switch (_a.sent()) {
                              case 1:
                                return [ 2, 0 ];

                              case 2:
                                return [ 2, 1 ];

                              case 3:
                                return [ 2, 2 ];

                              default:
                                return debug.fF.assertFail("unhandled case for SimpleConfirmationDialogResult value"), 
                                [ 2, 2 ];
                            }
                            return [ 2 ];
                        }
                    });
                });
            }, QnaManagePhrasingsComponent.prototype.promptToDiscard = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, showConfirmationDialogInCenter(this.dialogService, {
                                title: this.localizationService.get("QnaTooling_DiscardPrompt_BeforeLeaveConfirmation_Title"),
                                message: this.localizationService.get("QnaTooling_ManagePhrasings_DiscardPrompt_BeforeLeaveConfirmation_Message"),
                                okButtonText: this.localizationService.get("Settings_DiscardButtonText"),
                                cancelButtonText: this.localizationService.get("PBI_Button_Label_Cancel")
                            }, {
                                autoFocus: !0,
                                disableClose: !0,
                                maxWidth: 600,
                                panelClass: [ "managePhrasingsConfirmationDialogPanel", "themeableElement" ]
                            }).afterClosed().toPromise() ];

                          case 1:
                            switch (_a.sent()) {
                              case 1:
                                return [ 2, 1 ];

                              case 2:
                              case 3:
                                return [ 2, 2 ];

                              default:
                                return debug.fF.assertFail("unhandled case for SimpleConfirmationDialogResult value"), 
                                [ 2, 2 ];
                            }
                            return [ 2 ];
                        }
                    });
                });
            }, QnaManagePhrasingsComponent.prototype.getPhrasingRowAriaLabel = function(phrasingLabel, conditionLabel, modifiedTimeString, phrasingType, actionsDiabled) {
                var units = [ this.ariaResources.get("phrasingLabel"), phrasingLabel ];
                return _.isEmpty(conditionLabel) || units.push(this.ariaResources.get("phrasingCondition"), conditionLabel), 
                _.isEmpty(phrasingType) || units.push(this.ariaResources.get("phrasingType"), phrasingType), 
                _.isEmpty(modifiedTimeString) || units.push(this.ariaResources.get("modifiedTime"), modifiedTimeString), 
                actionsDiabled || units.push(this.ariaResources.get("actions"), this.ariaResources.get("edit"), this.ariaResources.get("delete")), 
                units.join(" ");
            }, QnaManagePhrasingsComponent.prototype.checkAttemptToLeaveCurrentState = function(stayOnPageIfLeaving) {
                return void 0 === stayOnPageIfLeaving && (stayOnPageIfLeaving = !1), (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var leave, response;
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return leave = !0, this.hasUnAppliedChanges ? (this.showAllMouseActionBlocker.emit(!0), 
                            response = void 0, this.hasUnAppliedValidChanges ? [ 4, this.promptToSave() ] : [ 3, 2 ]) : [ 3, 11 ];

                          case 1:
                            return response = _b.sent(), [ 3, 4 ];

                          case 2:
                            return [ 4, this.promptToDiscard() ];

                          case 3:
                            response = _b.sent(), _b.label = 4;

                          case 4:
                            switch (response) {
                              case 0:
                                return [ 3, 5 ];

                              case 1:
                                return [ 3, 7 ];

                              case 2:
                                return [ 3, 8 ];
                            }
                            return [ 3, 9 ];

                          case 5:
                            return [ 4, this.currentPhrasingEditor.applyChanges() ];

                          case 6:
                            return _b.sent(), [ 3, 10 ];

                          case 7:
                            return this.checkToCancelEdit(!stayOnPageIfLeaving), [ 3, 10 ];

                          case 8:
                            return leave = !1, [ 3, 10 ];

                          case 9:
                            return debug.fF.assertFail("unhandled case of CloseDialogResponse"), [ 3, 10 ];

                          case 10:
                            return this.showAllMouseActionBlocker.emit(!1), [ 3, 12 ];

                          case 11:
                            this.checkToCancelEdit(!stayOnPageIfLeaving), _b.label = 12;

                          case 12:
                            return leave && !stayOnPageIfLeaving && this.managePhrasingsTelemetryService.logExitPageEvent(), 
                            [ 2, leave ];
                        }
                    });
                });
            }, QnaManagePhrasingsComponent.prototype.checkToCancelEdit = function(leavePage) {
                void 0 === leavePage && (leavePage = !1);
                var inEditPhrasingInfo = this.inEditPhrasingInfo$.value;
                if (inEditPhrasingInfo && (inEditPhrasingInfo.isNew ? this.managePhrasingsTelemetryService.logCancelCreateNewPhrasingEvent() : this.managePhrasingsTelemetryService.logCancelEditExistingPhrasingEvent(), 
                this.inEditPhrasingInfo$.next(void 0), this.inEditPhrasingIndex$.next(void 0)), 
                !leavePage) return this.resumeAndProcessOnHoldLuciaDomainChange();
            }, QnaManagePhrasingsComponent.prototype.getBannerActionHandler = function(actionId, bannerContent) {
                var _this = this;
                if ("retry" === actionId) return function() {
                    var bannerToRemove = _.find(bannerContent.banners, function(b) {
                        return !!_.find(b.actions, function(a) {
                            return "retry" === a.id;
                        });
                    });
                    debug.fF.assertValue(bannerToRemove, "bannerToRemove"), _this.qnaBannerService.dismissBanner("ToolingPhrasings", null == bannerToRemove ? void 0 : bannerToRemove.id);
                };
            }, QnaManagePhrasingsComponent.prototype.setLoadingBannerAndState = function(loading, requestedAgents) {
                var _this = this;
                if (loading) {
                    debug.fF.assertNonEmpty(requestedAgents, "requestedAgents should be defined and non empty");
                    var bannerId = Utility.b$.generateGuid();
                    this.qnaBannerService.updateContent("ToolingPhrasings", {
                        showBanners: !0,
                        banners: [ {
                            id: bannerId,
                            message: (0, banner_handler_util.QH)(requestedAgents, this.localizationService, "Phrasings"),
                            isVisible: !0,
                            allowDismiss: !1,
                            bannerType: _.includes(requestedAgents, "PowerBI.AzureOpenAIPhrasings") ? "copilot" : "info",
                            actions: [ {
                                id: "noop",
                                text: this.localizationService.get("NlToDax_Loading"),
                                actionAppearance: "loading"
                            }, {
                                id: "cancelImproveLsdl",
                                text: this.localizationService.get("PBI_Button_Label_Cancel"),
                                actionAppearance: "secondary"
                            } ],
                            data: bannerId
                        } ],
                        actionHandlers: new Map([ [ "noop", void 0 ], [ "cancelImproveLsdl", function(bannerId) {
                            _this.ensureImproveLsdlService().then(function() {
                                _this.improveLsdlService.cancelImproveLinguisticSchema(), _this.qnaBannerService.dismissBanner("ToolingPhrasings", bannerId);
                            });
                        } ] ])
                    });
                } else this.qnaBannerService.updateContent("ToolingPhrasings", {
                    showBanners: !0,
                    banners: []
                });
            }, QnaManagePhrasingsComponent.prototype.ensureImproveLsdlService = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var _a;
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return this.improveLsdlService ? [ 3, 2 ] : (_a = this, [ 4, this.lazyScoped.get("improveLsdlService") ]);

                          case 1:
                            _a.improveLsdlService = _b.sent(), debug.fF.assertValue(this.improveLsdlService, "improve lsdl service should be provided"), 
                            _b.label = 2;

                          case 2:
                            return [ 2 ];
                        }
                    });
                });
            }, QnaManagePhrasingsComponent.prototype.getModelCopy = function() {
                var workingSchemaCopy = JSON.parse(this.workingDocumentModel.toJsonString());
                return new lsdl_document_model.X(workingSchemaCopy);
            }, QnaManagePhrasingsComponent.\u0275fac = function(t) {
                return new (t || QnaManagePhrasingsComponent)(fesm2022_core["\u0275\u0275directiveInject"](conceptual_schema_proxy_service.i), fesm2022_core["\u0275\u0275directiveInject"](data_sources_service.D), fesm2022_core["\u0275\u0275directiveInject"](dialog_service.x), fesm2022_core["\u0275\u0275directiveInject"](feature_switch_service.vZ), fesm2022_core["\u0275\u0275directiveInject"](localization_service.o), fesm2022_core["\u0275\u0275directiveInject"](desktop_qna_service.r), fesm2022_core["\u0275\u0275directiveInject"](QnaManagePhrasingsTelemetryService), fesm2022_core["\u0275\u0275directiveInject"](lazy_scoped_provider.H), fesm2022_core["\u0275\u0275directiveInject"](lsdl_ui_blocker_service.D), fesm2022_core["\u0275\u0275directiveInject"](copilot_interactive_requirements_service.g), fesm2022_core["\u0275\u0275directiveInject"](account_service.B), fesm2022_core["\u0275\u0275directiveInject"](eventAggregationService.x));
            }, QnaManagePhrasingsComponent.\u0275cmp = fesm2022_core["\u0275\u0275defineComponent"]({
                type: QnaManagePhrasingsComponent,
                selectors: [ [ "qna-manage-phrasings" ] ],
                viewQuery: function(rf, ctx) {
                    if (1 & rf && (fesm2022_core["\u0275\u0275viewQuery"](qna_manage_phrasings_component_c0, 5, fesm2022_core.ElementRef), 
                    fesm2022_core["\u0275\u0275viewQuery"](qna_manage_phrasings_component_c1, 5, fesm2022_core.ElementRef), 
                    fesm2022_core["\u0275\u0275viewQuery"](scrolling.N7, 5), fesm2022_core["\u0275\u0275viewQuery"](QnaSinglePhrasingEditorComponent, 5), 
                    fesm2022_core["\u0275\u0275viewQuery"](qna_manage_phrasings_component_c2, 5, fesm2022_core.ElementRef), 
                    fesm2022_core["\u0275\u0275viewQuery"](qna_manage_phrasings_component_c3, 5, fesm2022_core.ElementRef)), 
                    2 & rf) {
                        var _t = void 0;
                        fesm2022_core["\u0275\u0275queryRefresh"](_t = fesm2022_core["\u0275\u0275loadQuery"]()) && (ctx._approveButton = _t.first), 
                        fesm2022_core["\u0275\u0275queryRefresh"](_t = fesm2022_core["\u0275\u0275loadQuery"]()) && (ctx._autoWidthColumnHeader = _t.first), 
                        fesm2022_core["\u0275\u0275queryRefresh"](_t = fesm2022_core["\u0275\u0275loadQuery"]()) && (ctx.virtualScroll = _t.first), 
                        fesm2022_core["\u0275\u0275queryRefresh"](_t = fesm2022_core["\u0275\u0275loadQuery"]()) && (ctx._editor = _t.first), 
                        fesm2022_core["\u0275\u0275queryRefresh"](_t = fesm2022_core["\u0275\u0275loadQuery"]()) && (ctx._phrasingEditor = _t.first), 
                        fesm2022_core["\u0275\u0275queryRefresh"](_t = fesm2022_core["\u0275\u0275loadQuery"]()) && (ctx._scrollableItemsContainerElementRef = _t.first);
                    }
                },
                inputs: {
                    enterPageTelemetryEvent: "enterPageTelemetryEvent",
                    initialLinguisticSchema: "initialLinguisticSchema",
                    phrasingLabelsCache: "phrasingLabelsCache",
                    entityTermsCache: "entityTermsCache",
                    initialDiagnostics: "initialDiagnostics"
                },
                outputs: {
                    linguisticSchemaUpdated: "linguisticSchemaUpdated",
                    phrasingLabelsUpdated: "phrasingLabelsUpdated",
                    entityTermsUpdated: "entityTermsUpdated",
                    showAllMouseActionBlocker: "showAllMouseActionBlocker"
                },
                features: [ fesm2022_core["\u0275\u0275ProvidersFeature"]([ QnaManagePhrasingsTelemetryService ]), fesm2022_core["\u0275\u0275InheritDefinitionFeature"] ],
                decls: 4,
                vars: 11,
                consts: [ [ "class", "container", 4, "ngIf" ], [ 1, "container" ], [ 1, "title" ], [ 1, "subtitle" ], [ 4, "ngIf" ], [ 1, "content", 3, "ngClass" ], [ 1, "headerSection", 3, "ngClass" ], [ "class", "headerLeft", "direction", "horizontal", 3, "selectedValue", "selectedValueChange", 4, "ngIf" ], [ 1, "headerRight" ], [ "tri-button", "", "class", "createButton", "appearance", "primary", 3, "ngClass", "disabled", "click", 4, "ngIf" ], [ 1, "tri-caption1", 3, "label", "checked", "onChange" ], [ "class", "lsdlSyncControls", 4, "ngIf" ], [ "class", "copilotDisclaimer", 4, "ngIf" ], [ "class", "empty-state", 4, "ngIf", "ngIfElse" ], [ "phrasingListTable", "" ], [ "class", "loadingMask", 4, "ngIf" ], [ "class", "qnaBanner", 3, "bannerContent", "onDismiss", 4, "ngIf" ], [ 1, "qnaBanner", 3, "bannerContent", "onDismiss" ], [ "direction", "horizontal", 1, "headerLeft", 3, "selectedValue", "selectedValueChange" ], [ "value", "approved" ], [ "value", "copilot", 1, "copilotItem" ], [ "tri-svg-icon-20", "", "aria-hidden", "true", 1, "copilotIcon", 3, "name" ], [ "tri-button", "", "appearance", "primary", 1, "createButton", 3, "ngClass", "disabled", "click" ], [ 3, "name" ], [ "localize", "QnaTooling_ManagePhrasings_CreateButton" ], [ 1, "lsdlSyncControls" ], [ "type", "button", "tri-button", "", 1, "refreshButton", 3, "pbiTooltip", "click" ], [ "tri-svg-icon-20", "", "aria-hidden", "true", "name", "arrow_clockwise_20_regular" ], [ "class", "syncTime", 4, "ngIf" ], [ 1, "syncTime" ], [ 1, "copilotDisclaimer" ], [ "localize", "CopilotInline_DisclaimerText" ], [ "href", "https://go.microsoft.com/fwlink/?linkid=2243166", "localize", "CopilotInline_PreviewLink", "target", "_blank", 1, "pbi-external-link", "fluentTheme-sm-reg" ], [ 1, "empty-state" ], [ 3, "ngSwitch" ], [ 4, "ngSwitchCase" ], [ 4, "ngIf", "ngIfElse" ], [ "legacyEmptyState", "" ], [ 1, "empty-state-250", 3, "name", "sprite" ], [ "localize", "QnaTooling_ManagePhrasings_Empty_Approved_Relationships_Title", 1, "empty-state-title" ], [ "localize", "QnaTooling_ManagePhrasings_Empty_Approved_Relationships_Description", 1, "empty-state-description" ], [ 1, "empty-state-img", 3, "ngStyle" ], [ "localize", "QnaTooling_ManagePhrasings_EmptyState_Title", 1, "empty-state-title" ], [ "class", "empty-state-title", "localize", "QnaTooling_ManagePhrasings_Empty_Copilot_Title", 4, "ngIf" ], [ "class", "empty-state-description", "localize", "QnaTooling_ManagePhrasings_Empty_Copilot_Description", 4, "ngIf" ], [ "localize", "QnaTooling_ManagePhrasings_Empty_Copilot_Title", 1, "empty-state-title" ], [ "localize", "QnaTooling_ManagePhrasings_Empty_Copilot_Description", 1, "empty-state-description" ], [ "tabindex", "0", 1, "listTable", "phrasingListSortedTable" ], [ "matSort", "", "matSortActive", "ModifiedTime", "matSortDirection", "desc", "matSortDisableClear", "", 3, "matSortChange" ], [ "thead", "" ], [ "role", "columnheader", "mat-sort-header", "Relationship", 1, "labelCell", "tri-body1-strong" ], [ "localize", "Relationship" ], [ "role", "columnheader", "mat-sort-header", "Condition", 1, "tri-body1-strong" ], [ "localize", "Condition" ], [ "role", "columnheader", "mat-sort-header", "ModifiedTime", 1, "tri-body1-strong" ], [ "localize", "Modified" ], [ "role", "columnheader", "mat-sort-header", "RelationshipType", 1, "tri-body1-strong" ], [ "localize", "Qna_ManagePhrasings_PhrasingType" ], [ "role", "columnheader", 1, "actionCell", "tri-body1-strong", 3, "ngStyle" ], [ "autoWidthColumnHeader", "" ], [ "localize", "Actions" ], [ "class", "itemsScrollContainer", 3, "scroll", 4, "ngIf" ], [ 1, "itemsScrollContainer", 3, "scroll" ], [ "scrollableItemsContainer", "" ], [ "virtualTable", "" ], [ "class", "placeholderRow", "style", "max-height: unset;", 3, "ngStyle", 4, "ngIf" ], [ 4, "ngFor", "ngForOf" ], [ 1, "placeholderRow", 2, "max-height", "unset", 3, "ngStyle" ], [ "tabindex", "0", 1, "phrasingInfo", 3, "ngClass", "ngStyle" ], [ "class", "labelCell columnSpan4", 4, "ngIf" ], [ 1, "actionCell", 3, "ngStyle" ], [ "class", "approveCell tri-body1-strong", "tri-icon-button", "", 3, "pbi-tooltip", "click", 4, "ngIf" ], [ "tri-icon-button", "", 3, "pbi-tooltip", "click" ], [ "tri-svg-icon-16", "", "name", "edit_20_regular" ], [ "tri-icon-button", "", 3, "ngClass", "pbi-tooltip", "click" ], [ "tri-svg-icon-16", "", "name", "delete_16_regular" ], [ "class", "editPhrasingArea phrasingEditorContainer", 3, "ngClass", 4, "ngIf" ], [ 1, "labelCell", "clickable", "tri-body1", 3, "click" ], [ "class", "labelCellIcon", "size", "extra-tiny", 4, "ngIf" ], [ "tri-svg-icon-16", "", "class", "labelCellIcon warningIcon", "name", "warning_16_regular", 4, "ngIf" ], [ "size", "extra-tiny", 1, "labelCellIcon" ], [ "tri-svg-icon-16", "", "name", "warning_16_regular", 1, "labelCellIcon", "warningIcon" ], [ 1, "labelCell", "columnSpan4" ], [ "tri-icon-button", "", 1, "approveCell", "tri-body1-strong", 3, "pbi-tooltip", "click" ], [ "approveButton", "" ], [ "tri-svg-icon-16", "", "name", "checkmark_16_filled" ], [ "localize", "Approve" ], [ 1, "editPhrasingArea", "phrasingEditorContainer", 3, "ngClass" ], [ 3, "ngClass" ], [ 3, "fieldsModel", "initialDocumentModel", "initialDiagnostics", "existingModel", "allEntityVariantLabels", "cancelRequested", "phrasingLuciaModelChangeRequested", 4, "ngIf" ], [ 3, "fieldsModel", "initialDocumentModel", "initialDiagnostics", "existingModel", "allEntityVariantLabels", "cancelRequested", "phrasingLuciaModelChangeRequested" ], [ "phrasingEditor", "" ], [ 1, "loadingMask" ], [ "size", "large", 3, "delay" ] ],
                template: function(rf, ctx) {
                    1 & rf && (fesm2022_core["\u0275\u0275template"](0, QnaManagePhrasingsComponent_div_0_Template, 24, 32, "div", 0), 
                    fesm2022_core["\u0275\u0275pipe"](1, "async"), fesm2022_core["\u0275\u0275pipe"](2, "async"), 
                    fesm2022_core["\u0275\u0275pipe"](3, "async")), 2 & rf && fesm2022_core["\u0275\u0275property"]("ngIf", fesm2022_core["\u0275\u0275pureFunction3"](7, qna_manage_phrasings_component_c16, fesm2022_core["\u0275\u0275pipeBind1"](1, 1, ctx.showCopilotInfo$), fesm2022_core["\u0275\u0275pipeBind1"](2, 3, ctx.showEmptyState$), fesm2022_core["\u0275\u0275pipeBind1"](3, 5, ctx.phrasingViewType$)));
                },
                dependencies: [ common.NgClass, common.NgForOf, common.NgIf, common.NgStyle, common.NgSwitch, common.NgSwitchCase, sort.YE, sort.nU, spinner_spinner_component.O, localize_directive.X, pbi_tooltip_directive.V, qna_banner_lazy_component.p, tri_checkbox_component.r, tri_pivot_item_component.E, tri_pivot_component.B, tri_svg_icon_component.M, spinner_component.O, tooltip_directive.i, QnaSinglePhrasingEditorComponent, common.AsyncPipe, localize_pipe.F ],
                styles: [ '[_nghost-%COMP%]     .empty-state .emphasizedText{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-semi-bold, 600)}.container[_ngcontent-%COMP%]{height:100%;box-sizing:border-box;display:flex;flex-direction:column}.container[_ngcontent-%COMP%]   .title[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--xlg-font-size, 20px);font-weight:var(--font-weight-semi-bold, 600);line-height:28px;margin:0}.container[_ngcontent-%COMP%]   .subtitle[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-regular, 400);line-height:20px;margin:8px 0 0}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]{flex:1;overflow-y:clip;margin-top:28px;width:100%;display:flex;flex-direction:column}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .empty-state[_ngcontent-%COMP%]{width:100%;height:100%;display:flex;flex-direction:column;justify-content:center;align-items:center}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .empty-state[_ngcontent-%COMP%]   .empty-state-img[_ngcontent-%COMP%]{height:196px;width:300px}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .empty-state[_ngcontent-%COMP%]   .empty-state-title[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--lg-font-size, 16px);font-weight:var(--font-weight-semi-bold, 600);margin:8px 0 0}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .empty-state[_ngcontent-%COMP%]   .empty-state-description[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-regular, 400);margin:8px 0 0}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .filter[_ngcontent-%COMP%]{display:flex;justify-content:flex-end}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .filter[_ngcontent-%COMP%]   .filterMenuButton[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-regular, 400);cursor:pointer}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .listTable[_ngcontent-%COMP%]{flex:1;overflow-y:hidden;display:flex;flex-direction:column;padding-bottom:var(--spacingHorizontalXXXL)}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .listTable[_ngcontent-%COMP%]   .virtualScroll[_ngcontent-%COMP%]{flex:1;width:100%}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .listTable[_ngcontent-%COMP%]   .virtualScroll[_ngcontent-%COMP%]     .cdk-virtual-scroll-content-wrapper{box-sizing:border-box;width:100%}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]{width:100%;margin-top:var(--spacingVerticalXS)}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .boldTerm[_ngcontent-%COMP%]{font-weight:700}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .italicTerm[_ngcontent-%COMP%]{font-style:italic}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%], .container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{padding:0 var(--spacingHorizontalXXXL);display:grid;column-gap:var(--spacingHorizontalM);align-content:center;grid-template-columns:2fr 1.2fr .8fr auto}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]{overflow-y:scroll;border-bottom:solid 1px var(--fluent-theme-neutral-light-color);padding-bottom:var(--spacingHorizontalS)}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{text-align:left;box-sizing:border-box}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{max-height:40px;height:40px;box-sizing:border-box;border-bottom:solid 1px var(--fluent-theme-neutral-light-color)}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-semi-bold, 600)}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   th.headerCellWithIcon[_ngcontent-%COMP%]{display:flex;gap:var(--spacingHorizontalXS);align-items:center}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-regular, 400)}', '.container[_ngcontent-%COMP%]   .headerSection[_ngcontent-%COMP%]{display:flex;flex-direction:row;justify-content:space-between}.container[_ngcontent-%COMP%]   .headerSection[_ngcontent-%COMP%]   .copilotItem[_ngcontent-%COMP%]   .copilotIcon[_ngcontent-%COMP%], .container[_ngcontent-%COMP%]   .headerSection[_ngcontent-%COMP%]   .copilotItem[_ngcontent-%COMP%]:focus-within   .copilotIcon[_ngcontent-%COMP%]{fill:var(--colorCompoundBrandForeground1)}.container[_ngcontent-%COMP%]   .headerSection[_ngcontent-%COMP%]   .copilotItem[_ngcontent-%COMP%]:hover   .copilotIcon[_ngcontent-%COMP%]{fill:var(--colorCompoundBrandForeground1Hover)}.container[_ngcontent-%COMP%]   .headerSection[_ngcontent-%COMP%]   .copilotItem[_ngcontent-%COMP%]:active   .copilotIcon[_ngcontent-%COMP%]{fill:var(--colorCompoundBrandForeground1Pressed)}.container[_ngcontent-%COMP%]   .headerSection.inApprovedView[_ngcontent-%COMP%]{margin-bottom:var(--spacingVerticalL)}.container[_ngcontent-%COMP%]   .headerSection.inApprovedView[_ngcontent-%COMP%]   .copilotItem[_ngcontent-%COMP%]   .copilotIcon[_ngcontent-%COMP%], .container[_ngcontent-%COMP%]   .headerSection.inApprovedView[_ngcontent-%COMP%]   .copilotItem[_ngcontent-%COMP%]:focus-within   .copilotIcon[_ngcontent-%COMP%]{stroke:var(--colorNeutralForeground2);stroke-width:.3px}.container[_ngcontent-%COMP%]   .headerSection.inApprovedView[_ngcontent-%COMP%]   .copilotItem[_ngcontent-%COMP%]:hover   .copilotIcon[_ngcontent-%COMP%]{stroke:var(--colorNeutralForeground2Hover);stroke-width:.3px}.container[_ngcontent-%COMP%]   .headerSection.inApprovedView[_ngcontent-%COMP%]   .copilotItem[_ngcontent-%COMP%]:active   .copilotIcon[_ngcontent-%COMP%]{stroke:var(--colorNeutralForeground1Pressed);stroke-width:.3px}.container[_ngcontent-%COMP%]   .headerSection[_ngcontent-%COMP%]   .headerRight[_ngcontent-%COMP%]{flex:1;display:flex;align-items:flex-end;flex-direction:column}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]{flex:1;display:flex;flex-direction:column;position:relative;overflow-y:hidden}.container[_ngcontent-%COMP%]   .content.withLoadingMask[_ngcontent-%COMP%]{opacity:.6}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .loadingMask[_ngcontent-%COMP%]{position:absolute;height:100%;width:100%;top:0;left:0}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .loadingMask[_ngcontent-%COMP%]   spinner[_ngcontent-%COMP%]{position:absolute;left:50%;top:50%;transform:translate(-50%,-50%)}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .lsdlSyncControls[_ngcontent-%COMP%]{display:flex;flex-direction:row;justify-content:flex-start;align-items:center}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .lsdlSyncControls[_ngcontent-%COMP%]   .syncTime[_ngcontent-%COMP%]{font-size:var(--fontSizeBase300);color:var(--colorNeutralForeground2)}html:not([dir="rtl"])[_nghost-%COMP%]   .container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .lsdlSyncControls[_ngcontent-%COMP%]   .syncTime[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .lsdlSyncControls[_ngcontent-%COMP%]   .syncTime[_ngcontent-%COMP%]{margin-left:var(--spacingHorizontalS)}html[dir="rtl"][_nghost-%COMP%]   .container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .lsdlSyncControls[_ngcontent-%COMP%]   .syncTime[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .lsdlSyncControls[_ngcontent-%COMP%]   .syncTime[_ngcontent-%COMP%]{margin-right:var(--spacingHorizontalS)}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .copilotDisclaimer[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--sm-font-size, 12px);font-weight:var(--font-weight-regular, 400);align-self:flex-end;color:var(--colorNeutralForeground4);margin-bottom:8px}html:not([dir="rtl"])[_nghost-%COMP%]   .container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .copilotDisclaimer[_ngcontent-%COMP%]   a[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .copilotDisclaimer[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{margin-left:var(--spacingHorizontalXS)}html[dir="rtl"][_nghost-%COMP%]   .container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .copilotDisclaimer[_ngcontent-%COMP%]   a[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .copilotDisclaimer[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{margin-right:var(--spacingHorizontalXS)}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .empty-state-250[_ngcontent-%COMP%]{height:250px;width:250px}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .createButton[_ngcontent-%COMP%]{box-sizing:border-box;display:flex;flex-direction:row;align-items:center;padding:6px 16px;gap:10px;text-align:center;font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-semi-bold, 600)}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .createButton.isDisabled[_ngcontent-%COMP%]{opacity:.6;pointer-events:none}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .listTable.phrasingListSortedTable[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]{grid-template-columns:2fr 1.2fr .8fr .8fr auto;color:var(--colorNeutralForeground1)}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .listTable.phrasingListSortedTable[_ngcontent-%COMP%]   .itemsScrollContainer[_ngcontent-%COMP%]{flex:1;width:100%;overflow-y:auto}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .listTable.phrasingListSortedTable[_ngcontent-%COMP%]   .itemsScrollContainer[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   tri-svg-icon[_ngcontent-%COMP%]{fill:currentColor}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .listTable.phrasingListSortedTable[_ngcontent-%COMP%]   .itemsScrollContainer[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   td.clickable[_ngcontent-%COMP%]{cursor:pointer}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .listTable.phrasingListSortedTable[_ngcontent-%COMP%]   .itemsScrollContainer[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .editPhrasingArea[_ngcontent-%COMP%]{background-color:var(--colorNeutralBackground4)}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .listTable.phrasingListSortedTable[_ngcontent-%COMP%]   .itemsScrollContainer[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .editPhrasingArea[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border-color:var(--colorNeutralStroke1)}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .listTable.phrasingListSortedTable[_ngcontent-%COMP%]   .itemsScrollContainer[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{grid-template-columns:2fr 1.2fr .8fr .8fr auto}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .listTable.phrasingListSortedTable[_ngcontent-%COMP%]   .itemsScrollContainer[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   tr.isCopilot[_ngcontent-%COMP%]{justify-content:space-between}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .listTable.phrasingListSortedTable[_ngcontent-%COMP%]   .itemsScrollContainer[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   tr.outOfRangeForceRenderRow[_ngcontent-%COMP%], .container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .listTable.phrasingListSortedTable[_ngcontent-%COMP%]   .itemsScrollContainer[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   tr.outOfRangeForceRenderRow[_ngcontent-%COMP%]   *[_ngcontent-%COMP%]{opacity:0!important}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .listTable.phrasingListSortedTable[_ngcontent-%COMP%]   .itemsScrollContainer[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]   td.labelCell[_ngcontent-%COMP%]{align-items:center;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;color:var(--colorNeutralForeground1)}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .listTable.phrasingListSortedTable[_ngcontent-%COMP%]   .itemsScrollContainer[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   tr.isDisabled[_ngcontent-%COMP%]   .labelCell[_ngcontent-%COMP%], .container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .listTable.phrasingListSortedTable[_ngcontent-%COMP%]   .itemsScrollContainer[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   tr.isDisabled[_ngcontent-%COMP%]   .actionCell[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{opacity:.5;pointer-events:none}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .listTable.phrasingListSortedTable[_ngcontent-%COMP%]   .itemsScrollContainer[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   tr.isDisabled[_ngcontent-%COMP%]   .actionCell[_ngcontent-%COMP%]   button.doNotDisable[_ngcontent-%COMP%]{opacity:1;pointer-events:auto}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .listTable.phrasingListSortedTable[_ngcontent-%COMP%]   .itemsScrollContainer[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   tr.phrasingEditorContainer[_ngcontent-%COMP%]{max-height:none;height:auto;padding:0}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .listTable.phrasingListSortedTable[_ngcontent-%COMP%]   .itemsScrollContainer[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   tr.phrasingEditorContainer.outOfRangeForceRenderRow[_ngcontent-%COMP%], .container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .listTable.phrasingListSortedTable[_ngcontent-%COMP%]   .itemsScrollContainer[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   tr.phrasingEditorContainer.outOfRangeForceRenderRow[_ngcontent-%COMP%]   *[_ngcontent-%COMP%]{opacity:0!important}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .listTable.phrasingListSortedTable[_ngcontent-%COMP%]   .itemsScrollContainer[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   tr.editPhrasingArea[_ngcontent-%COMP%]{grid-template-columns:2fr 1.2fr .8fr .8fr auto}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .listTable.phrasingListSortedTable[_ngcontent-%COMP%]   .itemsScrollContainer[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   tr.editPhrasingArea.phrasingInfo[_ngcontent-%COMP%]{border-color:var(--colorNeutralStroke1)}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .listTable.phrasingListSortedTable[_ngcontent-%COMP%]   .itemsScrollContainer[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   tr.editPhrasingArea[_ngcontent-%COMP%]   td.columnSpan4[_ngcontent-%COMP%]{grid-column-start:1;grid-column-end:5;display:flex;box-sizing:border-box;height:auto}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .listTable.phrasingListSortedTable[_ngcontent-%COMP%]   .itemsScrollContainer[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   tr.editPhrasingArea[_ngcontent-%COMP%]   td.columnSpan5[_ngcontent-%COMP%]{grid-column-start:1;grid-column-end:6;display:flex;box-sizing:border-box;height:auto}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .listTable.phrasingListSortedTable[_ngcontent-%COMP%]   .itemsScrollContainer[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   tr.editPhrasingArea[_ngcontent-%COMP%]   qna-single-phrasing-editor[_ngcontent-%COMP%]{flex:1}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .listTable.phrasingListSortedTable[_ngcontent-%COMP%]   .itemsScrollContainer[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .boldTerm[_ngcontent-%COMP%]{font-weight:700}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .listTable.phrasingListSortedTable[_ngcontent-%COMP%]   .itemsScrollContainer[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .labelCell[_ngcontent-%COMP%]{position:relative}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .listTable.phrasingListSortedTable[_ngcontent-%COMP%]   .itemsScrollContainer[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .labelCell[_ngcontent-%COMP%]   .labelCellIcon[_ngcontent-%COMP%]{position:absolute;left:calc(-1 * var(--spacingHorizontalXL));transform:translateY(-50%);top:50%}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .listTable.phrasingListSortedTable[_ngcontent-%COMP%]   .itemsScrollContainer[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .labelCell[_ngcontent-%COMP%]   .labelCellIcon.warningIcon[_ngcontent-%COMP%]{fill:var(--globalColorDarkOrangeTint30)}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .listTable.phrasingListSortedTable[_ngcontent-%COMP%]   .itemsScrollContainer[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .actionCell[_ngcontent-%COMP%]{display:flex;gap:var(--spacingHorizontalXS)}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .listTable.phrasingListSortedTable[_ngcontent-%COMP%]   .itemsScrollContainer[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .actionCell[_ngcontent-%COMP%]   .approveCell[_ngcontent-%COMP%]{display:flex;gap:var(--spacingHorizontalXS);padding-right:var(--spacingHorizontalS);color:var(--colorNeutralForeground2)}' ]
            }), QnaManagePhrasingsComponent;
        }(rx_component.w);
        function isPhrasingViewModelExisting(phrasing) {
            return !phrasing.isNew;
        }
        function fromCopilot(phrasing) {
            return _.isEqual(phrasing.source, copilotSource) && "Suggested" === phrasing.state;
        }
        var lsdl_entity_model = __webpack_require__(49286);
        function getConditionDefinitionForTerm(baseDefinition, termType, measurementEntity, localizationService) {
            return "adjWithMeasure" === termType ? {
                aggregation: null == baseDefinition ? void 0 : baseDefinition.aggregation,
                entity: getTermDefinition(measurementEntity, !1, localizationService),
                suffix: "is high"
            } : "antonymsWithMeasure" === termType ? {
                aggregation: "",
                entity: getTermDefinition(measurementEntity, !1, localizationService),
                suffix: "is low"
            } : (debug.fF.assert(function() {
                return "adjWithCondition" === termType || "nounWithCondition" === termType;
            }, "Unexpected term type: " + termType), baseDefinition);
        }
        function getTermDefinition(entity, isPrimaryTerm, localizationService) {
            var primaryTerm = entity.getPrimaryTerm();
            return {
                text: isPrimaryTerm ? getEntityFieldString(entity) : primaryTerm.value,
                tooltip: {
                    tooltipDescription: getEntityTooltipString(entity, localizationService),
                    tooltipArrowPosition: constants.xI.arrowBottomMiddle
                }
            };
        }
        function getConditionAggregation(condition) {
            return condition.aggregation && "None" !== condition.aggregation ? "".concat(function(aggregation) {
                switch (aggregation) {
                  case "Sum":
                  case "Average":
                  case "Count":
                  case "Min":
                  case "Max":
                  case "Median":
                  case "Variance":
                    return aggregation.toLowerCase();

                  case "StandardDeviation":
                    return "standard deviation";

                  default:
                    return "";
                }
            }(condition.aggregation), " of ") : "";
        }
        function getConditionSuffix(condition, localizationService) {
            var singleQuotation = _.indexOf([ "Contains", "NotContains", "StartsWith", "NotStartsWith" ], condition.operator) >= 0;
            return "".concat(function(operator) {
                switch (operator) {
                  case "Equals":
                    return "is";

                  case "GreaterThan":
                    return "is greater than";

                  case "LessThan":
                    return "is less than";

                  case "GreaterThanOrEquals":
                    return "is greater than or equal to";

                  case "LessThanOrEquals":
                    return "is less than or equal to";

                  case "NotEquals":
                    return "is not";

                  case "Contains":
                    return "contains";

                  case "NotContains":
                    return "does not contain";

                  case "StartsWith":
                    return "starts with";

                  case "NotStartsWith":
                    return "does not start with";
                }
            }(condition.operator), " ").concat(singleQuotation ? "'" : "").concat(function(value, localizationService) {
                var rawValues = [];
                value ? function(value) {
                    return debug.fF.assertValue(value, "value"), value.Text;
                }(value) ? rawValues.push.apply(rawValues, value.Text) : function(value) {
                    return debug.fF.assertValue(value, "value"), value.Number;
                }(value) ? rawValues.push.apply(rawValues, value.Number) : function(value) {
                    return debug.fF.assertValue(value, "value"), value.Boolean;
                }(value) && rawValues.push.apply(rawValues, value.Boolean) : rawValues.push(null);
                var listSeparator = localizationService.get("ListJoin_Separator");
                return _.map(rawValues, function(value) {
                    return function(value, localizationService) {
                        return null == value ? localizationService.get("Null") : "" === value ? '""' : _.isString(value) && value.toLowerCase() === localizationService.get("Null").toLowerCase() ? '"'.concat(value, '"') : value;
                    }(value, localizationService);
                }).join(listSeparator);
            }(condition.value, localizationService)).concat(singleQuotation ? "'" : "");
        }
        function getEntityFieldString(entity) {
            return entity instanceof lsdl_entity_model.HJ ? "".concat(entity.variationSource || entity.hierarchy, ".[").concat(entity.hierarchyLevel, "]") : entity instanceof lsdl_entity_model.qg ? entity.hierarchy : entity instanceof lsdl_entity_model.oS ? entity.propertyName : entity instanceof lsdl_entity_model.tQ ? entity.tableName : void debug.fF.assert(function() {
                return entity instanceof lsdl_entity_model.tQ;
            }, "Unexpected type of entity");
        }
        function getEntityTooltipString(entity, localizationService) {
            var tableString = localizationService.get("Table_ToolTip"), fieldString = localizationService.get("Field");
            return entity instanceof lsdl_entity_model.HJ || entity instanceof lsdl_entity_model.qg || entity instanceof lsdl_entity_model.oS ? "".concat(tableString, ": ").concat(entity.tableName, "\n").concat(fieldString, ": ").concat(getEntityFieldString(entity)) : (debug.fF.assert(function() {
                return entity instanceof lsdl_entity_model.tQ;
            }, "Unexpected type of entity"), "".concat(tableString, ": ").concat(entity.tableName));
        }
        var qna_manage_terms_component_c0 = [ "qnaManageTerms" ], qna_manage_terms_component_c1 = [ "termListTable" ], qna_manage_terms_component_c2 = [ "autoWidthColumnHeader" ], qna_manage_terms_component_c3 = function(a0) {
            return {
                "background-image": a0
            };
        };
        function QnaManageTermsComponent_div_5_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 16), fesm2022_core["\u0275\u0275element"](1, "div", 17)(2, "div", 18)(3, "div", 19), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r1 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngStyle", fesm2022_core["\u0275\u0275pureFunction1"](2, qna_manage_terms_component_c3, ctx_r1.emptyStateImage)), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("innerHtml", ctx_r1.emptyStateDescription, fesm2022_core["\u0275\u0275sanitizeHtml"]);
            }
        }
        function QnaManageTermsComponent_div_17_ng_container_18_div_5_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div")(1, "span", 41), 
            fesm2022_core["\u0275\u0275text"](2), fesm2022_core["\u0275\u0275elementEnd"]()()), 
            2 & rf) {
                var term_r7 = fesm2022_core["\u0275\u0275nextContext"]().$implicit;
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("pbi-tooltip", term_r7.termDefinition.tooltip), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275textInterpolate"](term_r7.termDefinition.text);
            }
        }
        function QnaManageTermsComponent_div_17_ng_container_18_div_6_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div")(1, "span", 42), 
            fesm2022_core["\u0275\u0275text"](2), fesm2022_core["\u0275\u0275elementEnd"]()()), 
            2 & rf) {
                var term_r7 = fesm2022_core["\u0275\u0275nextContext"]().$implicit;
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("pbi-tooltip", term_r7.termDefinition.tooltip), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275textInterpolate"](term_r7.termDefinition.text);
            }
        }
        function QnaManageTermsComponent_div_17_ng_container_18_div_7_ng_container_4_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275text"](1, " ("), 
            fesm2022_core["\u0275\u0275element"](2, "tri-svg-icon", 45), fesm2022_core["\u0275\u0275text"](3), 
            fesm2022_core["\u0275\u0275elementStart"](4, "span", 43), fesm2022_core["\u0275\u0275text"](5), 
            fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275text"](6), 
            fesm2022_core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var term_r7 = fesm2022_core["\u0275\u0275nextContext"](2).$implicit;
                fesm2022_core["\u0275\u0275advance"](3), fesm2022_core["\u0275\u0275textInterpolate1"](" ", term_r7.relationDefinition.condition.aggregation, " "), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("pbi-tooltip", term_r7.relationDefinition.condition.entity.tooltip), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275textInterpolate1"](" ", term_r7.relationDefinition.condition.entity.text, " "), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275textInterpolate1"](" ", term_r7.relationDefinition.condition.suffix, " ) ");
            }
        }
        function QnaManageTermsComponent_div_17_ng_container_18_div_7_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div")(1, "span", 43), 
            fesm2022_core["\u0275\u0275text"](2), fesm2022_core["\u0275\u0275elementEnd"](), 
            fesm2022_core["\u0275\u0275text"](3), fesm2022_core["\u0275\u0275template"](4, QnaManageTermsComponent_div_17_ng_container_18_div_7_ng_container_4_Template, 7, 4, "ng-container", 44), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var term_r7 = fesm2022_core["\u0275\u0275nextContext"]().$implicit;
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("pbi-tooltip", term_r7.relationDefinition.subjectEntity.tooltip), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275textInterpolate"](term_r7.relationDefinition.subjectEntity.text), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275textInterpolate1"](" is ", term_r7.termName, " "), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", term_r7.relationDefinition.condition);
            }
        }
        function QnaManageTermsComponent_div_17_ng_container_18_button_11_Template(rf, ctx) {
            if (1 & rf) {
                var _r19 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "button", 46), fesm2022_core["\u0275\u0275listener"]("click", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r19);
                    var term_r7 = fesm2022_core["\u0275\u0275nextContext"]().$implicit, ctx_r17 = fesm2022_core["\u0275\u0275nextContext"](2);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r17.showDeleteConfirmationDialog(term_r7));
                }), fesm2022_core["\u0275\u0275element"](1, "tri-svg-icon", 47), fesm2022_core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r11 = fesm2022_core["\u0275\u0275nextContext"](3);
                fesm2022_core["\u0275\u0275property"]("pbi-tooltip", ctx_r11.tooltipConfigs.deleteTooltip), 
                fesm2022_core["\u0275\u0275attribute"]("aria-label", ctx_r11.ariaResources.delete);
            }
        }
        var qna_manage_terms_component_c4 = function(a0) {
            return {
                boldTerm: a0
            };
        }, qna_manage_terms_component_c5 = function() {
            return [ "adjWithMeasure", "antonymsWithMeasure", "adjWithCondition", "nounWithCondition" ];
        }, qna_manage_terms_component_c6 = function(a0) {
            return {
                width: a0
            };
        };
        function QnaManageTermsComponent_div_17_ng_container_18_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275elementStart"](1, "tr", 35)(2, "td", 36), 
            fesm2022_core["\u0275\u0275text"](3), fesm2022_core["\u0275\u0275elementEnd"](), 
            fesm2022_core["\u0275\u0275elementStart"](4, "td", 37), fesm2022_core["\u0275\u0275template"](5, QnaManageTermsComponent_div_17_ng_container_18_div_5_Template, 3, 2, "div", 38), 
            fesm2022_core["\u0275\u0275template"](6, QnaManageTermsComponent_div_17_ng_container_18_div_6_Template, 3, 2, "div", 38), 
            fesm2022_core["\u0275\u0275template"](7, QnaManageTermsComponent_div_17_ng_container_18_div_7_Template, 5, 4, "div", 38), 
            fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275elementStart"](8, "td"), 
            fesm2022_core["\u0275\u0275text"](9), fesm2022_core["\u0275\u0275elementEnd"](), 
            fesm2022_core["\u0275\u0275elementStart"](10, "td", 39), fesm2022_core["\u0275\u0275template"](11, QnaManageTermsComponent_div_17_ng_container_18_button_11_Template, 2, 2, "button", 40), 
            fesm2022_core["\u0275\u0275elementEnd"]()(), fesm2022_core["\u0275\u0275elementContainerEnd"]()), 
            2 & rf) {
                var term_r7 = ctx.$implicit, ctx_r6 = fesm2022_core["\u0275\u0275nextContext"](2);
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275attribute"]("aria-label", ctx_r6.getTermRowAriaLabel(term_r7)), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction1"](10, qna_manage_terms_component_c4, "primaryEntity" === term_r7.termType)), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275textInterpolate"](term_r7.termName), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngSwitch", term_r7.termType), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngSwitchCase", "primaryEntity"), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngSwitchCase", "nonPrimaryEntity"), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngSwitchCase", fesm2022_core["\u0275\u0275pureFunction0"](12, qna_manage_terms_component_c5).includes(term_r7.termType) ? term_r7.termType : ""), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275textInterpolate"](ctx_r6.getModifiedTimeString(term_r7)), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngStyle", fesm2022_core["\u0275\u0275pureFunction1"](13, qna_manage_terms_component_c6, ctx_r6.autoWidthColumnCalculatedWidth + "px")), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", "primaryEntity" !== term_r7.termType);
            }
        }
        function QnaManageTermsComponent_div_17_Template(rf, ctx) {
            if (1 & rf) {
                var _r21 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "div", 20, 21)(2, "table", 22), fesm2022_core["\u0275\u0275listener"]("matSortChange", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r21);
                    var ctx_r20 = fesm2022_core["\u0275\u0275nextContext"]();
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r20.sortTerms($event));
                }), fesm2022_core["\u0275\u0275elementStart"](3, "thead")(4, "th", 23), fesm2022_core["\u0275\u0275element"](5, "span", 24), 
                fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275elementStart"](6, "th", 25), 
                fesm2022_core["\u0275\u0275element"](7, "span", 26)(8, "tri-svg-icon", 27), fesm2022_core["\u0275\u0275elementEnd"](), 
                fesm2022_core["\u0275\u0275elementStart"](9, "th", 28), fesm2022_core["\u0275\u0275element"](10, "span", 29), 
                fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275elementStart"](11, "th", 30, 31), 
                fesm2022_core["\u0275\u0275element"](13, "span", 32)(14, "tri-svg-icon", 27), fesm2022_core["\u0275\u0275elementEnd"]()()(), 
                fesm2022_core["\u0275\u0275elementStart"](15, "cdk-virtual-scroll-viewport", 33)(16, "table")(17, "tbody"), 
                fesm2022_core["\u0275\u0275template"](18, QnaManageTermsComponent_div_17_ng_container_18_Template, 12, 15, "ng-container", 34), 
                fesm2022_core["\u0275\u0275elementEnd"]()()()();
            }
            if (2 & rf) {
                var ctx_r3 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275advance"](8), fesm2022_core["\u0275\u0275property"]("pbi-tooltip", ctx_r3.tooltipConfigs.definitionTooltip), 
                fesm2022_core["\u0275\u0275advance"](3), fesm2022_core["\u0275\u0275property"]("ngStyle", fesm2022_core["\u0275\u0275pureFunction1"](6, qna_manage_terms_component_c6, ctx_r3.autoWidthColumnCalculatedWidth + "px")), 
                fesm2022_core["\u0275\u0275advance"](3), fesm2022_core["\u0275\u0275property"]("pbi-tooltip", ctx_r3.tooltipConfigs.actionTooltip), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("itemSize", 40), 
                fesm2022_core["\u0275\u0275advance"](3), fesm2022_core["\u0275\u0275property"]("cdkVirtualForOf", ctx_r3.viewModelsWithFilter())("cdkVirtualForTemplateCacheSize", 0);
            }
        }
        var qna_manage_terms_component_defaultSort = {
            active: "TermName",
            direction: "asc"
        }, QnaManageTermsComponent = function() {
            function QnaManageTermsComponent(dialogService, highContrastCssGenerationService, localizationService, qnaService, telemetryService) {
                this.dialogService = dialogService, this.highContrastCssGenerationService = highContrastCssGenerationService, 
                this.localizationService = localizationService, this.qnaService = qnaService, this.telemetryService = telemetryService, 
                this.linguisticSchemaUpdated = new fesm2022_core.EventEmitter, this.emptyStateImage = "url(../../..".concat((0, 
                build.Xr)(), "/images/empty-qna.png"), this.tooltipConfigs = {
                    actionTooltip: {
                        tooltipLocalizeDescription: "QnaTooling_ManageTerms_ActionTooltip",
                        tooltipArrowPosition: constants.xI.arrowTopMiddle
                    },
                    deleteTooltip: {
                        tooltipLocalizeDescription: "Delete",
                        tooltipArrowPosition: constants.xI.arrowTopMiddle
                    },
                    definitionTooltip: {
                        tooltipLocalizeDescription: "QnaTooling_ManageTerms_DefinitionTooltip",
                        tooltipArrowPosition: constants.xI.arrowBottomMiddle
                    },
                    filterTooltip: {
                        tooltipLocalizeDescription: "QnaTooling_ManageTerms_FilterTooltip",
                        tooltipArrowPosition: constants.xI.arrowTopMiddle
                    }
                }, this.initializeHighContrastRules();
            }
            return Object.defineProperty(QnaManageTermsComponent.prototype, "_autoWidthColumnHeader", {
                set: function(ref) {
                    var _this = this;
                    if (null == ref ? void 0 : ref.nativeElement) {
                        var textProps = textMeasurementService.b.getMeasurementProperties($(ref.nativeElement)), textWidth = textMeasurementService.b.measureSvgTextWidth(textProps, ref.nativeElement.textContent);
                        if (textWidth > 0) {
                            var textWithSpacingWidth = textWidth + 30;
                            setTimeout(function() {
                                _this.autoWidthColumnCalculatedWidth = Math.max(textWithSpacingWidth, 32);
                            });
                        }
                    }
                },
                enumerable: !1,
                configurable: !0
            }), QnaManageTermsComponent.prototype.ngOnInit = function() {
                debug.fF.assertValue(this.initialLinguisticSchema, "initialLinguisticSchema");
                var workingSchema = _.cloneDeep(this.initialLinguisticSchema);
                this.lsdlModel = new lsdl_document_model.X(workingSchema), this.termViewModels = this.getManageTermsViewModel(), 
                this.sortTerms(qna_manage_terms_component_defaultSort), this.emptyStateDescription = this.getEmptyStateDescription(), 
                this.openingManageTermsEvent = this.telemetryService.logChildEvent(this.parentTelemetryEvent, QnAToolingOpenManageTerms, {
                    entryPoint: this.entryPoint,
                    numberOfTerms: _.size(this.termViewModels)
                }), this.ariaResources = {
                    termName: this.localizationService.get("Term"),
                    definition: this.localizationService.get("Definition"),
                    modifiedTime: this.localizationService.get("Modified"),
                    actions: this.localizationService.get("Actions"),
                    delete: this.localizationService.get("Delete"),
                    termTable: this.localizationService.get("QnaTooling_ManageTerms_TermListTable")
                }, this.filterOption = "Authored";
            }, QnaManageTermsComponent.prototype.viewModelsWithFilter = function() {
                var _this = this;
                return "All" === this.filterOption ? this.termViewModels : (debug.fF.assert(function() {
                    return "Authored" === _this.filterOption;
                }), _.filter(this.termViewModels, function(viewModel) {
                    return viewModel.term && (0, lsdl_document_model_utils.Tk)(viewModel.term.state) && !!viewModel.term.lastModified;
                }));
            }, QnaManageTermsComponent.prototype.changeFilter = function(value) {
                this.filterOption = value;
            }, QnaManageTermsComponent.prototype.deleteTerm = function(viewModel) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var schemaString;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            switch (viewModel.termType) {
                              case "nonPrimaryEntity":
                                viewModel.entity.tryMarkTermAsDeleted(viewModel.term);
                                break;

                              case "adjWithCondition":
                              case "adjWithMeasure":
                              case "antonymsWithMeasure":
                              case "nounWithCondition":
                                viewModel.phrasing instanceof lsdl_phrasing_model.Mj && viewModel.phrasing.markTermAsDeleted(viewModel.term);
                                break;

                              default:
                                debug.fF.assertFail("Unexpected termType");
                            }
                            return this.termViewModels.splice(this.termViewModels.indexOf(viewModel), 1), this.termViewModels = (0, 
                            tslib_es6.__spreadArray)([], this.termViewModels || [], !0), this.lsdlModel.commit() ? (schemaString = this.lsdlModel.toJsonString(), 
                            [ 4, this.qnaService.overrideLinguisticSchemaJson(schemaString) ]) : [ 3, 2 ];

                          case 1:
                            _a.sent(), this.linguisticSchemaUpdated.emit(JSON.parse(schemaString)), this.telemetryService.logChildEvent(this.openingManageTermsEvent, QnAToolingManageTermsTermDelete, {
                                deletedTermType: convertTermTypeToTelemetryTermType(viewModel.termType)
                            }), _a.label = 2;

                          case 2:
                            return [ 2 ];
                        }
                    });
                });
            }, QnaManageTermsComponent.prototype.sortTerms = function(sortEvent) {
                debug.fF.assertValue(sortEvent.active, "sortEvent.active is not defined"), debug.fF.assertValue(sortEvent.direction, "sortEvent.direction is not defined"), 
                this.termViewModels = this.termViewModels.slice().sort(function(term1, term2) {
                    var isAsc = "asc" === sortEvent.direction;
                    switch (sortEvent.active) {
                      case "TermName":
                        return term1.termName.localeCompare(term2.termName, void 0, {
                            sensitivity: "base"
                        }) * (isAsc ? 1 : -1);

                      case "ModifiedTime":
                        return term1.lastModified ? term2.lastModified ? (new Date(term1.lastModified).getTime() < new Date(term2.lastModified).getTime() ? -1 : 1) * (isAsc ? 1 : -1) : -1 : 1;

                      default:
                        return 0;
                    }
                });
            }, QnaManageTermsComponent.prototype.showDeleteConfirmationDialog = function(viewModel) {
                var _this = this;
                showConfirmationDialogInCenter(this.dialogService, {
                    title: this.localizationService.get("QnaTooling_ManageTerms_DeleteConfirmation_Title"),
                    message: "",
                    okButtonText: this.localizationService.get("Delete"),
                    cancelButtonText: this.localizationService.get("Cancel_ButtonText")
                }, {
                    autoFocus: !0,
                    disableClose: !0,
                    maxWidth: 600,
                    panelClass: [ "manageTermsDeleteConfirmationPanel", "themeableElement" ]
                }).afterClosed().subscribe(function(result) {
                    1 === result && _this.deleteTerm(viewModel);
                });
            }, QnaManageTermsComponent.prototype.getModifiedTimeString = function(viewModel) {
                return viewModel.lastModified ? (0, dateFormatter.s7)(viewModel.lastModified, this.localizationService, !0) : void 0;
            }, QnaManageTermsComponent.prototype.getManageTermsViewModel = function() {
                var _this = this, result = [];
                return _.forEach(this.lsdlModel.getEntities(), function(entity) {
                    var entityDefinitions = _this.getEntityManageTermsViewModel(entity);
                    result = _.concat(result, entityDefinitions || []);
                }), _.forEach(this.lsdlModel.getRelationships(), function(relationship) {
                    var relationshipDefinitions = _this.getRelationshipManageTermsViewModel(relationship);
                    result = _.concat(result, relationshipDefinitions || []);
                }), result;
            }, QnaManageTermsComponent.prototype.getTermRowAriaLabel = function(viewModel) {
                return [ this.ariaResources.termName, viewModel.termName, this.ariaResources.definition, this.getDefinitionString(viewModel), this.ariaResources.modifiedTime, this.getModifiedTimeString(viewModel), this.ariaResources.actions, this.ariaResources.delete ].join(" ");
            }, QnaManageTermsComponent.prototype.getDefinitionString = function(term) {
                var _a;
                if (term.termDefinition) return term.termDefinition.text;
                debug.fF.assertValue(term.relationDefinition, "no definition exist");
                var definition = term.relationDefinition;
                return (null === (_a = definition.condition) || void 0 === _a ? void 0 : _a.aggregation) ? "".concat(definition.subjectEntity.text, " is ").concat(term.termName, " if ").concat(definition.condition.aggregation).concat(definition.condition.entity, " ").concat(definition.condition.suffix) : definition.condition ? "".concat(definition.subjectEntity.text, " is ").concat(term.termName, " if ").concat(definition.condition.entity, " ").concat(definition.condition.suffix) : "".concat(definition.subjectEntity.text, " is ").concat(term.termName);
            }, QnaManageTermsComponent.prototype.getEntityManageTermsViewModel = function(entity) {
                var _this = this, result = [];
                if (_.isEmpty(entity.terms)) return result;
                var primaryTerm = entity.getPrimaryTerm();
                return primaryTerm ? (_.forEach(entity.terms, function(term) {
                    ((0, lsdl_document_model_utils.Tk)(term.state) || (0, lsdl_document_model_utils.QT)(term.state)) && result.push({
                        termType: term === primaryTerm ? "primaryEntity" : "nonPrimaryEntity",
                        termName: term.value,
                        termDefinition: getTermDefinition(entity, term === primaryTerm, _this.localizationService),
                        relationDefinition: void 0,
                        entity,
                        term,
                        relationshipKey: void 0,
                        phrasing: void 0,
                        lastModified: term.lastModified
                    });
                }), result) : result;
            }, QnaManageTermsComponent.prototype.getRelationshipManageTermsViewModel = function(relationship) {
                var condition, _this = this, result = [], roles = relationship.roles;
                if (null == relationship.condition || (condition = function(relationship, lsdlModel, localizationService) {
                    var entity = lsdlModel.getEntityWithRoleReference(relationship.roles, relationship.condition.target.role);
                    if (entity) {
                        var condition = relationship.condition;
                        return {
                            entity: getTermDefinition(entity, !1, localizationService),
                            aggregation: getConditionAggregation(condition),
                            suffix: getConditionSuffix(condition, localizationService)
                        };
                    }
                }(relationship, this.lsdlModel, this.localizationService), condition)) return _.forEach(relationship.phrasings, function(phrasing) {
                    if ((0, lsdl_document_model_utils.Tk)(phrasing.state)) {
                        if (phrasing instanceof lsdl_phrasing_model.eF) {
                            var adjectiveManageTermsViewModel = _this.getAdjectivePhrasingManageTermsViewModel(phrasing, roles, relationship.lsdlName, condition);
                            result = _.concat(result, adjectiveManageTermsViewModel || []);
                        }
                        if (phrasing instanceof lsdl_phrasing_model.hg) {
                            var nounManageTermsViewModel = _this.getNounPhrasingManageTermsViewModel(phrasing, roles, relationship.lsdlName, condition);
                            result = _.concat(result, nounManageTermsViewModel || []);
                        }
                    }
                }), result;
            }, QnaManageTermsComponent.prototype.getAdjectivePhrasingManageTermsViewModel = function(adjectivePhrasing, roles, relationshipKey, conditionDefinition) {
                var _a, _this = this, result = [];
                if (!(null == conditionDefinition ? void 0 : conditionDefinition.entity) && !adjectivePhrasing.measurement) return result;
                var measurementEntity = this.lsdlModel.getEntityWithRoleReference(roles, null === (_a = adjectivePhrasing.measurement) || void 0 === _a ? void 0 : _a.role), subjectEntity = this.lsdlModel.getEntityWithRoleReference(roles, adjectivePhrasing.subject.role);
                return subjectEntity ? (_.forEach(adjectivePhrasing.adjectives, function(adjTerm) {
                    if ((0, lsdl_document_model_utils.Tk)(adjTerm.state) && adjTerm.lastModified) {
                        var termType = (null == conditionDefinition ? void 0 : conditionDefinition.entity) ? "adjWithCondition" : "adjWithMeasure";
                        result.push({
                            termType,
                            termName: adjTerm.value,
                            termDefinition: void 0,
                            relationDefinition: {
                                subjectEntity: getTermDefinition(subjectEntity, !1, _this.localizationService),
                                condition: "adjWithCondition" === termType ? conditionDefinition : getConditionDefinitionForTerm(conditionDefinition, "adjWithMeasure", measurementEntity, _this.localizationService)
                            },
                            entity: void 0,
                            term: adjTerm,
                            relationshipKey,
                            phrasing: adjectivePhrasing,
                            lastModified: adjTerm.lastModified
                        });
                    }
                }), _.forEach(adjectivePhrasing.antonyms, function(antonymTerm) {
                    (0, lsdl_document_model_utils.Tk)(antonymTerm.state) && antonymTerm.lastModified && measurementEntity && result.push({
                        termType: "antonymsWithMeasure",
                        termName: antonymTerm.value,
                        termDefinition: void 0,
                        relationDefinition: {
                            subjectEntity: getTermDefinition(subjectEntity, !1, _this.localizationService),
                            condition: getConditionDefinitionForTerm(conditionDefinition, "antonymsWithMeasure", measurementEntity, _this.localizationService)
                        },
                        entity: void 0,
                        term: antonymTerm,
                        relationshipKey,
                        phrasing: adjectivePhrasing,
                        lastModified: antonymTerm.lastModified
                    });
                }), result) : void 0;
            }, QnaManageTermsComponent.prototype.getNounPhrasingManageTermsViewModel = function(nounPhrasing, roles, relationShipKey, conditionDefinition) {
                var _this = this, result = [], subject = this.lsdlModel.getEntityWithRoleReference(roles, nounPhrasing.subject.role);
                if (subject) return _.forEach(nounPhrasing.nouns, function(nounTerm) {
                    (0, lsdl_document_model_utils.Tk)(nounTerm.state) && nounTerm.lastModified && result.push({
                        termType: "nounWithCondition",
                        termName: nounTerm.value,
                        termDefinition: void 0,
                        relationDefinition: {
                            subjectEntity: getTermDefinition(subject, !1, _this.localizationService),
                            condition: conditionDefinition
                        },
                        entity: void 0,
                        term: nounTerm,
                        relationshipKey: relationShipKey,
                        phrasing: nounPhrasing,
                        lastModified: nounTerm.lastModified
                    });
                }), result;
            }, QnaManageTermsComponent.prototype.getEmptyStateDescription = function() {
                var reviewQuestions = this.localizationService.get("QnaTooling_ReviewQuestions_Title"), teachQnA = this.localizationService.get("QnaTooling_TeachQna_Title");
                return this.localizationService.format("QnaTooling_ManageTerms_EmptyState_Description", [ withSpanTag(reviewQuestions), withSpanTag(teachQnA) ]);
            }, QnaManageTermsComponent.prototype.initializeHighContrastRules = function() {
                this.highContrastCssGenerationService.addRule(".themeableElement .qnaManageTerms tr:hover", "{ background-color: @selectedBackgroundColor !important; opacity: 1 !important; color: @selectedForegroundColor !important; }"), 
                this.highContrastCssGenerationService.addRule(".themeableElement .qnaManageTerms .mat-sort-header-sorted .mat-sort-header-stem,.themeableElement .qnaManageTerms .mat-sort-header-sorted .mat-sort-header-pointer-left,.themeableElement .qnaManageTerms .mat-sort-header-sorted .mat-sort-header-pointer-right,.themeableElement .qnaManageTerms .mat-sort-header-sorted .mat-sort-header-pointer-middle", "{ background-color: @selectedForegroundColor !important; }");
            }, QnaManageTermsComponent.\u0275fac = function(t) {
                return new (t || QnaManageTermsComponent)(fesm2022_core["\u0275\u0275directiveInject"](dialog_service.x), fesm2022_core["\u0275\u0275directiveInject"](high_contrast_css_generation_service.g), fesm2022_core["\u0275\u0275directiveInject"](localization_service.o), fesm2022_core["\u0275\u0275directiveInject"](desktop_qna_service.r), fesm2022_core["\u0275\u0275directiveInject"](Telemetry.y0));
            }, QnaManageTermsComponent.\u0275cmp = fesm2022_core["\u0275\u0275defineComponent"]({
                type: QnaManageTermsComponent,
                selectors: [ [ "qna-manage-terms" ] ],
                viewQuery: function(rf, ctx) {
                    if (1 & rf && (fesm2022_core["\u0275\u0275viewQuery"](qna_manage_terms_component_c0, 7, fesm2022_core.ElementRef), 
                    fesm2022_core["\u0275\u0275viewQuery"](qna_manage_terms_component_c1, 5), fesm2022_core["\u0275\u0275viewQuery"](qna_manage_terms_component_c2, 5, fesm2022_core.ElementRef)), 
                    2 & rf) {
                        var _t = void 0;
                        fesm2022_core["\u0275\u0275queryRefresh"](_t = fesm2022_core["\u0275\u0275loadQuery"]()) && (ctx.qnaManageTermsElement = _t.first), 
                        fesm2022_core["\u0275\u0275queryRefresh"](_t = fesm2022_core["\u0275\u0275loadQuery"]()) && (ctx.termListTable = _t.first), 
                        fesm2022_core["\u0275\u0275queryRefresh"](_t = fesm2022_core["\u0275\u0275loadQuery"]()) && (ctx._autoWidthColumnHeader = _t.first);
                    }
                },
                inputs: {
                    initialLinguisticSchema: "initialLinguisticSchema",
                    parentTelemetryEvent: "parentTelemetryEvent",
                    entryPoint: "entryPoint"
                },
                outputs: {
                    linguisticSchemaUpdated: "linguisticSchemaUpdated"
                },
                decls: 18,
                vars: 5,
                consts: [ [ 1, "container" ], [ "qnaManageTerms", "" ], [ "localize", "QnaTooling_ManageTerms_Title", 1, "title" ], [ "localize", "QnaTooling_ManageTerms_Subtitle", 1, "subtitle" ], [ 1, "content" ], [ "class", "empty-state", 4, "ngIf" ], [ 1, "filter" ], [ "mat-button", "", 1, "filterMenuButton", 3, "matMenuTriggerFor", "pbi-tooltip" ], [ 3, "localize" ], [ "filter", "matMenu" ], [ "mat-menu-item", "", "disabled", "" ], [ "localize", "Filter" ], [ "mat-menu-item", "", 3, "click" ], [ "localize", "QnaTooling_ManageTerms_Filter_AllOption" ], [ "localize", "QnaTooling_ManageTerms_Filter_AuthoredOption" ], [ "class", "listTable", "tabindex", "0", "aria-label", "ariaResources.termTable", 4, "ngIf" ], [ 1, "empty-state" ], [ 1, "empty-state-img", 3, "ngStyle" ], [ "localize", "QnaTooling_ManageTerms_EmptyState_Title", 1, "empty-state-title" ], [ 1, "empty-state-description", 3, "innerHtml" ], [ "tabindex", "0", "aria-label", "ariaResources.termTable", 1, "listTable" ], [ "termListTable", "" ], [ "matSort", "", "matSortActive", "TermName", "matSortDirection", "asc", "matSortDisableClear", "", 3, "matSortChange" ], [ "role", "columnheader", "mat-sort-header", "TermName" ], [ "localize", "Term" ], [ "role", "columnheader", 1, "broadCell", "headerCellWithIcon" ], [ "localize", "Definition" ], [ "tri-svg-icon-16", "", "name", "info_16_regular", 3, "pbi-tooltip" ], [ "role", "columnheader", "mat-sort-header", "ModifiedTime" ], [ "localize", "Modified" ], [ "role", "columnheader", 1, "actionCell", "headerCellWithIcon", 3, "ngStyle" ], [ "autoWidthColumnHeader", "" ], [ "localize", "Actions" ], [ 1, "virtualScroll", 3, "itemSize" ], [ 4, "cdkVirtualFor", "cdkVirtualForOf", "cdkVirtualForTemplateCacheSize" ], [ "tabindex", "0" ], [ 3, "ngClass" ], [ 1, "broadCell", 3, "ngSwitch" ], [ 4, "ngSwitchCase" ], [ 1, "actionCell", 3, "ngStyle" ], [ "tri-icon-button", "", 3, "pbi-tooltip", "click", 4, "ngIf" ], [ 1, "italicTerm", 3, "pbi-tooltip" ], [ 3, "pbi-tooltip" ], [ 1, "boldTerm", 3, "pbi-tooltip" ], [ 4, "ngIf" ], [ "tri-svg-icon-16", "", "name", "filter_20_regular" ], [ "tri-icon-button", "", 3, "pbi-tooltip", "click" ], [ "tri-svg-icon-16", "", "name", "delete_16_regular" ] ],
                template: function(rf, ctx) {
                    if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 0, 1), fesm2022_core["\u0275\u0275element"](2, "h1", 2)(3, "h2", 3), 
                    fesm2022_core["\u0275\u0275elementStart"](4, "section", 4), fesm2022_core["\u0275\u0275template"](5, QnaManageTermsComponent_div_5_Template, 4, 4, "div", 5), 
                    fesm2022_core["\u0275\u0275elementStart"](6, "div", 6)(7, "button", 7), fesm2022_core["\u0275\u0275element"](8, "span", 8), 
                    fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275elementStart"](9, "mat-menu", null, 9)(11, "div", 10), 
                    fesm2022_core["\u0275\u0275element"](12, "b", 11), fesm2022_core["\u0275\u0275elementEnd"](), 
                    fesm2022_core["\u0275\u0275elementStart"](13, "button", 12), fesm2022_core["\u0275\u0275listener"]("click", function() {
                        return ctx.changeFilter("All");
                    }), fesm2022_core["\u0275\u0275element"](14, "span", 13), fesm2022_core["\u0275\u0275elementEnd"](), 
                    fesm2022_core["\u0275\u0275elementStart"](15, "button", 12), fesm2022_core["\u0275\u0275listener"]("click", function() {
                        return ctx.changeFilter("Authored");
                    }), fesm2022_core["\u0275\u0275element"](16, "span", 14), fesm2022_core["\u0275\u0275elementEnd"]()()(), 
                    fesm2022_core["\u0275\u0275template"](17, QnaManageTermsComponent_div_17_Template, 19, 8, "div", 15), 
                    fesm2022_core["\u0275\u0275elementEnd"]()()), 2 & rf) {
                        var _r2 = fesm2022_core["\u0275\u0275reference"](10);
                        fesm2022_core["\u0275\u0275advance"](5), fesm2022_core["\u0275\u0275property"]("ngIf", !ctx.termViewModels || 0 === ctx.termViewModels.length), 
                        fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("matMenuTriggerFor", _r2)("pbi-tooltip", ctx.tooltipConfigs.filterTooltip), 
                        fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275propertyInterpolate"]("localize", "Authored" === ctx.filterOption ? "QnaTooling_ManageTerms_Filter_AuthoredOption" : "QnaTooling_ManageTerms_Filter_AllOption"), 
                        fesm2022_core["\u0275\u0275advance"](9), fesm2022_core["\u0275\u0275property"]("ngIf", (null == ctx.termViewModels ? null : ctx.termViewModels.length) > 0);
                    }
                },
                dependencies: [ common.NgClass, common.NgIf, common.NgStyle, common.NgSwitch, common.NgSwitchCase, legacy_button.eB, legacy_menu.W0, legacy_menu.tN, legacy_menu.D8, sort.YE, sort.nU, scrolling.xd, scrolling.x0, scrolling.N7, localize_directive.X, tri_svg_icon_component.M, tooltip_directive.i ],
                styles: [ '[_nghost-%COMP%]     .empty-state .emphasizedText{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-semi-bold, 600)}.container[_ngcontent-%COMP%]{height:100%;box-sizing:border-box;display:flex;flex-direction:column}.container[_ngcontent-%COMP%]   .title[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--xlg-font-size, 20px);font-weight:var(--font-weight-semi-bold, 600);line-height:28px;margin:0}.container[_ngcontent-%COMP%]   .subtitle[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-regular, 400);line-height:20px;margin:8px 0 0}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]{flex:1;overflow-y:clip;margin-top:28px;width:100%;display:flex;flex-direction:column}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .empty-state[_ngcontent-%COMP%]{width:100%;height:100%;display:flex;flex-direction:column;justify-content:center;align-items:center}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .empty-state[_ngcontent-%COMP%]   .empty-state-img[_ngcontent-%COMP%]{height:196px;width:300px}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .empty-state[_ngcontent-%COMP%]   .empty-state-title[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--lg-font-size, 16px);font-weight:var(--font-weight-semi-bold, 600);margin:8px 0 0}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .empty-state[_ngcontent-%COMP%]   .empty-state-description[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-regular, 400);margin:8px 0 0}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .filter[_ngcontent-%COMP%]{display:flex;justify-content:flex-end}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .filter[_ngcontent-%COMP%]   .filterMenuButton[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-regular, 400);cursor:pointer}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .listTable[_ngcontent-%COMP%]{flex:1;overflow-y:hidden;display:flex;flex-direction:column;padding-bottom:var(--spacingHorizontalXXXL)}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .listTable[_ngcontent-%COMP%]   .virtualScroll[_ngcontent-%COMP%]{flex:1;width:100%}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .listTable[_ngcontent-%COMP%]   .virtualScroll[_ngcontent-%COMP%]     .cdk-virtual-scroll-content-wrapper{box-sizing:border-box;width:100%}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]{width:100%;margin-top:var(--spacingVerticalXS)}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .boldTerm[_ngcontent-%COMP%]{font-weight:700}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   .italicTerm[_ngcontent-%COMP%]{font-style:italic}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%], .container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{padding:0 var(--spacingHorizontalXXXL);display:grid;column-gap:var(--spacingHorizontalM);align-content:center;grid-template-columns:2fr 1.2fr .8fr auto}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]{overflow-y:scroll;border-bottom:solid 1px var(--fluent-theme-neutral-light-color);padding-bottom:var(--spacingHorizontalS)}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{text-align:left;box-sizing:border-box}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{max-height:40px;height:40px;box-sizing:border-box;border-bottom:solid 1px var(--fluent-theme-neutral-light-color)}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-semi-bold, 600)}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   th.headerCellWithIcon[_ngcontent-%COMP%]{display:flex;gap:var(--spacingHorizontalXS);align-items:center}.container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-regular, 400)}' ]
            }), QnaManageTermsComponent;
        }();
        function withSpanTag(str) {
            return '<span class="emphasizedText">' + str + "</span>";
        }
        function convertTermTypeToTelemetryTermType(type) {
            switch (type) {
              case "adjWithCondition":
                return "AdjWithCondition";

              case "adjWithMeasure":
                return "AdjWithMeasure";

              case "antonymsWithMeasure":
                return "AntonymsWithMeasure";

              case "nonPrimaryEntity":
                return "NonPrimaryEntity";

              case "nounWithCondition":
                return "NounWithCondition";

              case "primaryEntity":
                return "PrimaryEntity";

              default:
                debug.fF.assertFail("term type not expected");
            }
        }
        var Common = __webpack_require__(35911), tooltip_theme_service = __webpack_require__(73446), visualHostTooltipServiceFactory = __webpack_require__(80318), visualHostService = __webpack_require__(47245), Prototype = __webpack_require__(39681), qna_component_core_service = __webpack_require__(7124), qna_component_core_utils = __webpack_require__(72129), visual_host_tooltip_service_factory_service = __webpack_require__(98136), promise_factory = __webpack_require__(23671), geocoder_service = __webpack_require__(28505), azure_maps_endpoint_service = __webpack_require__(58991), module_loader_service = __webpack_require__(2330), azure_map_token_cache_service = __webpack_require__(80277), geocoder_indexed_db_service = __webpack_require__(1599), canvas_visual_error_overlay_component = __webpack_require__(98885), single_visual_host_component = __webpack_require__(46101), qna_suggest_questions_component_c0 = [ "qnaInputV2LazyComponent" ], qna_suggest_questions_component_c1 = [ "qnaSuggestQuestions" ], qna_suggest_questions_component_c2 = [ "singleVisualHostOuterContainer" ];
        function QnaSuggestQuestionsComponent_qna_input_v2_lazy_9_Template(rf, ctx) {
            if (1 & rf && fesm2022_core["\u0275\u0275element"](0, "qna-input-v2-lazy", 27, 28), 
            2 & rf) {
                var ctx_r2 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275property"]("qnaSupportedScopes", ctx_r2.viewModel.qnaInputConfiguration.qnaSupportedScopes)("interpretListener", ctx_r2.viewModel.qnaInputConfiguration.interpretListener)("presentationArgs", ctx_r2.viewModel.presentationViewModel.inputBox)("configs", ctx_r2.viewModel.qnaInputConfiguration.configs)("linguisticInfo", ctx_r2.viewModel.qnaInputConfiguration.linguisticInfo);
            }
        }
        function QnaSuggestQuestionsComponent_div_17_Template(rf, ctx) {
            if (1 & rf) {
                var _r13 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "div", 29)(1, "div", 30), fesm2022_core["\u0275\u0275listener"]("accessible-click", function() {
                    var example_r10 = fesm2022_core["\u0275\u0275restoreView"](_r13).$implicit, ctx_r12 = fesm2022_core["\u0275\u0275nextContext"]();
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r12.interpretExample(example_r10));
                })("keydown", function($event) {
                    var restoredCtx = fesm2022_core["\u0275\u0275restoreView"](_r13), example_r10 = restoredCtx.$implicit, i_r11 = restoredCtx.index, ctx_r14 = fesm2022_core["\u0275\u0275nextContext"]();
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r14.keydownOnExample($event, example_r10, i_r11));
                }), fesm2022_core["\u0275\u0275text"](2), fesm2022_core["\u0275\u0275elementEnd"](), 
                fesm2022_core["\u0275\u0275elementStart"](3, "i", 31), fesm2022_core["\u0275\u0275listener"]("accessible-click", function() {
                    var example_r10 = fesm2022_core["\u0275\u0275restoreView"](_r13).$implicit, ctx_r15 = fesm2022_core["\u0275\u0275nextContext"]();
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r15.deleteExample(example_r10));
                }), fesm2022_core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var example_r10 = ctx.$implicit, ctx_r3 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275textInterpolate"](example_r10.utterance), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275attribute"]("aria-label", ctx_r3.ariaResources.deleteQuestion);
            }
        }
        function QnaSuggestQuestionsComponent_label_21_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "label", 32), fesm2022_core["\u0275\u0275text"](1), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r4 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275textInterpolate"](ctx_r4.currentUtterance);
            }
        }
        function QnaSuggestQuestionsComponent_single_visual_host_24_Template(rf, ctx) {
            if (1 & rf && fesm2022_core["\u0275\u0275element"](0, "single-visual-host", 33), 
            2 & rf) {
                var ctx_r6 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275property"]("visual", ctx_r6.viewModel.result.visual)("visualViewport", ctx_r6.viewModel.viewport)("themeCollection", ctx_r6.themeCollection)("config", ctx_r6.core.singleVisualHostConfig);
            }
        }
        function QnaSuggestQuestionsComponent_canvas_visual_error_overlay_25_Template(rf, ctx) {
            if (1 & rf) {
                var _r17 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "canvas-visual-error-overlay", 34), 
                fesm2022_core["\u0275\u0275listener"]("showErrorDetails", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r17);
                    var ctx_r16 = fesm2022_core["\u0275\u0275nextContext"]();
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r16.showResultlErrorDetails());
                }), fesm2022_core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r7 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275property"]("errorInfo", ctx_r7.viewModel.result)("viewport", ctx_r7.viewModel.viewport);
            }
        }
        var qna_suggest_questions_component_c3 = function(a0, a1) {
            return {
                color: a0,
                "font-family": a1
            };
        };
        function QnaSuggestQuestionsComponent_div_26_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 35), fesm2022_core["\u0275\u0275element"](1, "span", 36), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r8 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275property"]("ngStyle", fesm2022_core["\u0275\u0275pureFunction2"](1, qna_suggest_questions_component_c3, null == ctx_r8.viewModel.presentationViewModel.inputBox || null == ctx_r8.viewModel.presentationViewModel.inputBox.restatementFontProperties ? null : ctx_r8.viewModel.presentationViewModel.inputBox.restatementFontProperties.color, null == ctx_r8.viewModel.presentationViewModel.inputBox || null == ctx_r8.viewModel.presentationViewModel.inputBox.restatementFontProperties ? null : ctx_r8.viewModel.presentationViewModel.inputBox.restatementFontProperties.family));
            }
        }
        var QnaSuggestQuestionsComponent = function() {
            function QnaSuggestQuestionsComponent(core, dataSources, dialogService, geocoder, geolocationService, highContrastCssGenerationService, localizationService, moduleLoader, promiseFactory, qnaService, azureMapTokenCache, azureMapsEndpoint, geocoderIndexedDB, visualHostTooltipServiceFactory) {
                this.core = core, this.dataSources = dataSources, this.dialogService = dialogService, 
                this.geocoder = geocoder, this.geolocationService = geolocationService, this.highContrastCssGenerationService = highContrastCssGenerationService, 
                this.localizationService = localizationService, this.moduleLoader = moduleLoader, 
                this.promiseFactory = promiseFactory, this.qnaService = qnaService, this.azureMapTokenCache = azureMapTokenCache, 
                this.azureMapsEndpoint = azureMapsEndpoint, this.geocoderIndexedDB = geocoderIndexedDB, 
                this.visualHostTooltipServiceFactory = visualHostTooltipServiceFactory, this.utteranceUpdated = new fesm2022_core.EventEmitter, 
                this.showAllMouseActionBlocker = new fesm2022_core.EventEmitter, this.convertVisual = new fesm2022_core.EventEmitter, 
                this.linguisticSchemaUpdated = new fesm2022_core.EventEmitter, this.viewModel = this.core.viewModel, 
                this.addButtonTooltipConfig = {
                    tooltipLocalizeDescription: "QnaTooling_SuggestQuestions_AddButtonTooltip",
                    tooltipArrowPosition: constants.xI.arrowTopMiddle
                }, this.ariaResources = {
                    questionsList: this.localizationService.get("QnaTooling_SuggestQuestions_QuestionList_AriaLabel"),
                    deleteQuestion: this.localizationService.get("Delete")
                }, this.initializeHighContrastRules();
            }
            return Object.defineProperty(QnaSuggestQuestionsComponent.prototype, "_qnaInputV2LazyComponent", {
                set: function(lazyComponent) {
                    this.qnaInputV2LazyComponent = lazyComponent, this.core.setGetQnaInputComponentFunc(function() {
                        return lazyComponent && lazyComponent.inputBox;
                    });
                },
                enumerable: !1,
                configurable: !0
            }), QnaSuggestQuestionsComponent.prototype.ngOnInit = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var _this = this;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return debug.fF.assertValue(this.initialLinguisticSchema, "initialLinguisticSchema"), 
                            this.linguisticSchema = _.cloneDeep(this.initialLinguisticSchema), this.examplesViewModel = this.getExamples(this.linguisticSchema), 
                            this.models = this.getModels(), this.qnaConfig = this.getQnaConfig(), [ 4, this.core.initialize(this.models, this.qnaConfig, (0, 
                            Prototype.ED)((0, visualHostService.q)({
                                geocoder: this.geocoder,
                                geolocation: this.geolocationService,
                                localizationService: this.localizationService,
                                moduleLoader: this.moduleLoader,
                                promiseFactory: this.promiseFactory,
                                visualHostTooltipService: this.visualHostTooltipServiceFactory.createFromVisualContract(this.core.getCurrentVisual()),
                                getAzureMapToken: function() {
                                    return _this.azureMapTokenCache.getAzureMapToken();
                                },
                                azureMapsEndpoint: this.azureMapsEndpoint,
                                geocoderIndexedDB: this.geocoderIndexedDB
                            }), function(h) {
                                h.getLocalizedString = function(g) {
                                    return _this.localizationService.get(g);
                                };
                            }), "SuggestQuestions", this.utteranceUpdated, this.convertVisual, this.openingTelemetryEvent, this.singleVisualHostOuterContainerElement, void 0, void 0, void 0, void 0, !0) ];

                          case 1:
                            return _a.sent(), [ 2 ];
                        }
                    });
                });
            }, QnaSuggestQuestionsComponent.prototype.showResultlErrorDetails = function() {
                this.core.showResultErrorDetails();
            }, QnaSuggestQuestionsComponent.prototype.addCurrentExample = function() {
                var exampleToAdd = {};
                exampleToAdd[this.currentUtterance] = {}, this.linguisticSchema.Examples || (this.linguisticSchema.Examples = []), 
                this.linguisticSchema.Examples.unshift(exampleToAdd), this.examplesViewModel.unshift({
                    utterance: this.currentUtterance,
                    example: exampleToAdd
                });
            }, Object.defineProperty(QnaSuggestQuestionsComponent.prototype, "canShowVisualRestatement", {
                get: function() {
                    var _a, content = null === (_a = this.viewModel) || void 0 === _a ? void 0 : _a.result;
                    return !!content && ((0, qna_component_core_utils.mn)(content) ? !!content.restatement : void 0);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(QnaSuggestQuestionsComponent.prototype, "currentUtterance", {
                get: function() {
                    return this.core.getCurrentUtteranceTrimmed();
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(QnaSuggestQuestionsComponent.prototype, "isAddButtonEnabled", {
                get: function() {
                    return this.qnaInputV2LazyComponent && !!this.currentUtterance && !this.currentUtteranceExist();
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(QnaSuggestQuestionsComponent.prototype, "isLinguisticSchemaChanged", {
                get: function() {
                    return JSON.stringify(this.initialLinguisticSchema) !== JSON.stringify(this.linguisticSchema);
                },
                enumerable: !1,
                configurable: !0
            }), QnaSuggestQuestionsComponent.prototype.interpretExample = function(example) {
                this.core.interpretSuggestedQuestion(example.utterance);
            }, QnaSuggestQuestionsComponent.prototype.deleteExample = function(example) {
                var index = this.examplesViewModel.indexOf(example);
                this.linguisticSchema.Examples.splice(index, 1), this.examplesViewModel.splice(index, 1), 
                0 === _.size(this.linguisticSchema.Examples) && (this.linguisticSchema.Examples = void 0);
            }, QnaSuggestQuestionsComponent.prototype.saveExamples = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.qnaService.overrideLinguisticSchemaJson(JSON.stringify(this.linguisticSchema)) ];

                          case 1:
                            return _a.sent(), this.linguisticSchemaUpdated.emit(this.linguisticSchema), [ 2 ];
                        }
                    });
                });
            }, QnaSuggestQuestionsComponent.prototype.dropQuestion = function(event) {
                var fromIndex = event.previousIndex, toIndex = event.currentIndex;
                (0, drag_drop.bA)(this.examplesViewModel, fromIndex, toIndex), (0, drag_drop.bA)(this.linguisticSchema.Examples, fromIndex, toIndex);
            }, QnaSuggestQuestionsComponent.prototype.handleAttemptToLeave = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var leave;
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return leave = !0, this.isLinguisticSchemaChanged ? (this.showAllMouseActionBlocker.emit(!0), 
                            [ 4, this.promptToSave() ]) : [ 3, 8 ];

                          case 1:
                            switch (_b.sent()) {
                              case 1:
                                return [ 3, 2 ];

                              case 2:
                                return [ 3, 4 ];

                              case 3:
                                return [ 3, 5 ];
                            }
                            return [ 3, 6 ];

                          case 2:
                            return [ 4, this.saveExamples() ];

                          case 3:
                            return _b.sent(), [ 3, 7 ];

                          case 4:
                            return [ 3, 7 ];

                          case 5:
                            return leave = !1, [ 3, 7 ];

                          case 6:
                            return debug.fF.assertFail("unhandled case of CloseDialogResponse"), [ 3, 7 ];

                          case 7:
                            this.showAllMouseActionBlocker.emit(!1), _b.label = 8;

                          case 8:
                            return [ 2, leave ];
                        }
                    });
                });
            }, QnaSuggestQuestionsComponent.prototype.promptToSave = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, showConfirmationDialogInCenter(this.dialogService, {
                                title: this.localizationService.get("QnaTooling_SuggestQuestions_BeforeLeaveConfirmation_Title"),
                                message: "",
                                okButtonText: this.localizationService.get("PBI_Button_Label_Save"),
                                cancelButtonText: this.localizationService.get("Settings_DiscardButtonText")
                            }, {
                                autoFocus: !0,
                                disableClose: !0,
                                maxWidth: 600,
                                panelClass: [ "suggestQuestionsConfirmationDialogPanel", "themeableElement" ]
                            }).afterClosed().toPromise() ];

                          case 1:
                            return [ 2, _a.sent() ];
                        }
                    });
                });
            }, QnaSuggestQuestionsComponent.prototype.keydownOnExample = function($event, example, index) {
                $event.altKey && 38 === $event.keyCode && 0 !== index && (0, drag_drop.bA)(this.examplesViewModel, index, index - 1), 
                $event.altKey && 40 === $event.keyCode && index !== this.examplesViewModel.length - 1 && (0, 
                drag_drop.bA)(this.examplesViewModel, index, index + 1), 46 === $event.keyCode && this.deleteExample(example);
            }, QnaSuggestQuestionsComponent.prototype.currentUtteranceExist = function() {
                var _this = this;
                return !!_.find(this.examplesViewModel, function(example) {
                    return example.utterance === _this.currentUtterance;
                });
            }, QnaSuggestQuestionsComponent.prototype.getExamples = function(linguisticSchema) {
                var _this = this, result = [];
                return _.forEach(linguisticSchema.Examples, function(example) {
                    var utterance = _this.getExampleKey(example);
                    result.push({
                        utterance,
                        example
                    });
                }), result;
            }, QnaSuggestQuestionsComponent.prototype.getExampleKey = function(example) {
                return debug.fF.assert(function() {
                    return 1 === _.size(Object.keys(example));
                }, "Expect an example always has 1 and only 1 key"), Object.keys(example)[0];
            }, QnaSuggestQuestionsComponent.prototype.getModels = function() {
                var dataSource = _.find(this.dataSources.get(), function(d) {
                    return d.type === PowerBIContracts_constants.nKy;
                });
                return [ {
                    vsName: dataSource.dsr.vsName,
                    dbName: dataSource.dsr.dbName,
                    qnaSupported: !0,
                    id: dataSource.id
                } ];
            }, QnaSuggestQuestionsComponent.prototype.getQnaConfig = function() {
                return {
                    canEdit: !0,
                    canShowPods: !1,
                    canShowVisuals: !0,
                    canShowDidYouMean: !0,
                    initialUtterance: void 0,
                    focusOnInit: !0,
                    showUnknownTermDropdownHeaderTextOnly: !0,
                    unknownTermDropdownHeaderTextOnlyTemplate: {
                        template: "Qna_AutoComplete_DefineTermInTeachQnaLabelText",
                        variables: [ {
                            type: 1,
                            isBold: !0
                        } ]
                    }
                };
            }, QnaSuggestQuestionsComponent.prototype.initializeHighContrastRules = function() {
                this.highContrastCssGenerationService.addRule(".themeableElement .qnaSuggestQuestions .example", "{ border: 1px solid @foregroundColor !important; }"), 
                this.highContrastCssGenerationService.addRule(".themeableElement .qnaSuggestQuestions .example:hover", "{ background-color: @selectedBackgroundColor !important; opacity: 1 !important; color: @selectedForegroundColor !important; }");
            }, QnaSuggestQuestionsComponent.\u0275fac = function(t) {
                return new (t || QnaSuggestQuestionsComponent)(fesm2022_core["\u0275\u0275directiveInject"](qna_component_core_service.D), fesm2022_core["\u0275\u0275directiveInject"](data_sources_service.D), fesm2022_core["\u0275\u0275directiveInject"](dialog_service.x), fesm2022_core["\u0275\u0275directiveInject"](geocoder_service.i), fesm2022_core["\u0275\u0275directiveInject"](Common._1), fesm2022_core["\u0275\u0275directiveInject"](high_contrast_css_generation_service.g), fesm2022_core["\u0275\u0275directiveInject"](localization_service.o), fesm2022_core["\u0275\u0275directiveInject"](module_loader_service.m), fesm2022_core["\u0275\u0275directiveInject"](promise_factory.O), fesm2022_core["\u0275\u0275directiveInject"](desktop_qna_service.r), fesm2022_core["\u0275\u0275directiveInject"](azure_map_token_cache_service.o), fesm2022_core["\u0275\u0275directiveInject"](azure_maps_endpoint_service.A), fesm2022_core["\u0275\u0275directiveInject"](geocoder_indexed_db_service.W), fesm2022_core["\u0275\u0275directiveInject"](visualHostTooltipServiceFactory.A));
            }, QnaSuggestQuestionsComponent.\u0275cmp = fesm2022_core["\u0275\u0275defineComponent"]({
                type: QnaSuggestQuestionsComponent,
                selectors: [ [ "qna-suggest-questions" ] ],
                viewQuery: function(rf, ctx) {
                    if (1 & rf && (fesm2022_core["\u0275\u0275viewQuery"](qna_suggest_questions_component_c0, 5), 
                    fesm2022_core["\u0275\u0275viewQuery"](qna_suggest_questions_component_c1, 7, fesm2022_core.ElementRef), 
                    fesm2022_core["\u0275\u0275viewQuery"](qna_suggest_questions_component_c2, 7, fesm2022_core.ElementRef)), 
                    2 & rf) {
                        var _t = void 0;
                        fesm2022_core["\u0275\u0275queryRefresh"](_t = fesm2022_core["\u0275\u0275loadQuery"]()) && (ctx._qnaInputV2LazyComponent = _t.first), 
                        fesm2022_core["\u0275\u0275queryRefresh"](_t = fesm2022_core["\u0275\u0275loadQuery"]()) && (ctx.qnaSuggestQuestionsElement = _t.first), 
                        fesm2022_core["\u0275\u0275queryRefresh"](_t = fesm2022_core["\u0275\u0275loadQuery"]()) && (ctx.singleVisualHostOuterContainerElement = _t.first);
                    }
                },
                inputs: {
                    initialLinguisticSchema: "initialLinguisticSchema",
                    openingTelemetryEvent: "openingTelemetryEvent",
                    themeCollection: "themeCollection"
                },
                outputs: {
                    utteranceUpdated: "utteranceUpdated",
                    showAllMouseActionBlocker: "showAllMouseActionBlocker",
                    convertVisual: "convertVisual",
                    linguisticSchemaUpdated: "linguisticSchemaUpdated"
                },
                features: [ fesm2022_core["\u0275\u0275ProvidersFeature"]([ interpret_listener_service.y, tooltip_theme_service.Q, visual_host_tooltip_service_factory_service.Z, qna_component_core_service.D ]) ],
                decls: 27,
                vars: 10,
                consts: [ [ 1, "qnaSuggestQuestions" ], [ "qnaSuggestQuestions", "" ], [ "localize", "QnaTooling_SuggestQuestions_Title" ], [ "localize", "QnaTooling_SuggestQuestions_Subtitle" ], [ 1, "content" ], [ 1, "inputSection" ], [ "qnaSuggestQuestionsHeader", "" ], [ "localize", "QnaTooling_TeachQna_EnterQuestion", 1, "inputLabel" ], [ 1, "inputAndButton" ], [ "drag-resize-disabled", "true", "tabindex", "-1", 3, "qnaSupportedScopes", "interpretListener", "presentationArgs", "configs", "linguisticInfo", 4, "ngIf" ], [ 1, "addButtonBox", 3, "pbi-tooltip" ], [ "localize", "ItemAction_Add", 1, "actionButton", "pbi-fluent-button", "primary", "addButton", 3, "disabled", "click" ], [ 1, "exampleListAndVisual" ], [ "tabindex", "0", 1, "exampleListContainer" ], [ 1, "exampleListHeader" ], [ "localize", "QnaTooling_SuggestQuestions_QuestionList_Title", 1, "exampleListTitle" ], [ "cdkDropList", "", 1, "exampleList", 3, "cdkDropListDropped" ], [ "class", "example", "cdkDrag", "", 4, "ngFor", "ngForOf" ], [ "localize", "PBI_Button_Label_Save", 1, "primary", "actionButton", "pbi-fluent-button", "saveButton", 3, "disabled", "click" ], [ 1, "visualSection" ], [ "localize", "QnaTooling_TeachQna_PreviewVisualResult", 1, "previewTitle" ], [ "class", "visualRestatement", "role", "alert", 4, "ngIf" ], [ 1, "singleVisualHostContainer" ], [ "singleVisualHostOuterContainer", "" ], [ "tabindex", "0", "focus-nav-mode", "Group", 3, "visual", "visualViewport", "themeCollection", "config", 4, "ngIf" ], [ "role", "alert", 3, "errorInfo", "viewport", "showErrorDetails", 4, "ngIf" ], [ "class", "showDoNotUnderstandMessage", 3, "ngStyle", 4, "ngIf" ], [ "drag-resize-disabled", "true", "tabindex", "-1", 3, "qnaSupportedScopes", "interpretListener", "presentationArgs", "configs", "linguisticInfo" ], [ "qnaInputV2LazyComponent", "" ], [ "cdkDrag", "", 1, "example" ], [ 1, "utterance", 3, "accessible-click", "keydown" ], [ "tabindex", "0", 1, "glyphicon", "pbi-glyph-close", "glyph-mini", 3, "accessible-click" ], [ "role", "alert", 1, "visualRestatement" ], [ "tabindex", "0", "focus-nav-mode", "Group", 3, "visual", "visualViewport", "themeCollection", "config" ], [ "role", "alert", 3, "errorInfo", "viewport", "showErrorDetails" ], [ 1, "showDoNotUnderstandMessage", 3, "ngStyle" ], [ "localize", "Qna_NoVisual_Message" ] ],
                template: function(rf, ctx) {
                    1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 0, 1), fesm2022_core["\u0275\u0275element"](2, "h1", 2)(3, "h2", 3), 
                    fesm2022_core["\u0275\u0275elementStart"](4, "section", 4)(5, "div", 5, 6), fesm2022_core["\u0275\u0275element"](7, "label", 7), 
                    fesm2022_core["\u0275\u0275elementStart"](8, "div", 8), fesm2022_core["\u0275\u0275template"](9, QnaSuggestQuestionsComponent_qna_input_v2_lazy_9_Template, 2, 5, "qna-input-v2-lazy", 9), 
                    fesm2022_core["\u0275\u0275elementStart"](10, "div", 10)(11, "button", 11), fesm2022_core["\u0275\u0275listener"]("click", function() {
                        return ctx.addCurrentExample();
                    }), fesm2022_core["\u0275\u0275elementEnd"]()()()(), fesm2022_core["\u0275\u0275elementStart"](12, "div", 12)(13, "div", 13)(14, "header", 14), 
                    fesm2022_core["\u0275\u0275element"](15, "label", 15), fesm2022_core["\u0275\u0275elementEnd"](), 
                    fesm2022_core["\u0275\u0275elementStart"](16, "div", 16), fesm2022_core["\u0275\u0275listener"]("cdkDropListDropped", function($event) {
                        return ctx.dropQuestion($event);
                    }), fesm2022_core["\u0275\u0275template"](17, QnaSuggestQuestionsComponent_div_17_Template, 4, 2, "div", 17), 
                    fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275elementStart"](18, "button", 18), 
                    fesm2022_core["\u0275\u0275listener"]("click", function() {
                        return ctx.saveExamples();
                    }), fesm2022_core["\u0275\u0275elementEnd"]()(), fesm2022_core["\u0275\u0275elementStart"](19, "div", 19), 
                    fesm2022_core["\u0275\u0275element"](20, "label", 20), fesm2022_core["\u0275\u0275template"](21, QnaSuggestQuestionsComponent_label_21_Template, 2, 1, "label", 21), 
                    fesm2022_core["\u0275\u0275elementStart"](22, "div", 22, 23), fesm2022_core["\u0275\u0275template"](24, QnaSuggestQuestionsComponent_single_visual_host_24_Template, 1, 4, "single-visual-host", 24), 
                    fesm2022_core["\u0275\u0275template"](25, QnaSuggestQuestionsComponent_canvas_visual_error_overlay_25_Template, 1, 2, "canvas-visual-error-overlay", 25), 
                    fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275template"](26, QnaSuggestQuestionsComponent_div_26_Template, 2, 4, "div", 26), 
                    fesm2022_core["\u0275\u0275elementEnd"]()()()()), 2 & rf && (fesm2022_core["\u0275\u0275advance"](9), 
                    fesm2022_core["\u0275\u0275property"]("ngIf", null == ctx.viewModel ? null : ctx.viewModel.qnaInputConfiguration), 
                    fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("pbi-tooltip", ctx.addButtonTooltipConfig), 
                    fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("disabled", !ctx.isAddButtonEnabled), 
                    fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275attribute"]("aria-label", ctx.ariaResources.questionsList), 
                    fesm2022_core["\u0275\u0275advance"](4), fesm2022_core["\u0275\u0275property"]("ngForOf", ctx.examplesViewModel), 
                    fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("disabled", !ctx.isLinguisticSchemaChanged), 
                    fesm2022_core["\u0275\u0275advance"](3), fesm2022_core["\u0275\u0275property"]("ngIf", ctx.canShowVisualRestatement), 
                    fesm2022_core["\u0275\u0275advance"](3), fesm2022_core["\u0275\u0275property"]("ngIf", "Visual" === (null == ctx.viewModel || null == ctx.viewModel.result ? null : ctx.viewModel.result.type) && ctx.core.singleVisualHostConfig), 
                    fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", "Error" === (null == ctx.viewModel || null == ctx.viewModel.result ? null : ctx.viewModel.result.type)), 
                    fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", "DoNotUnderstand" === (null == ctx.viewModel || null == ctx.viewModel.result ? null : ctx.viewModel.result.type)));
                },
                dependencies: [ common.NgForOf, common.NgIf, common.NgStyle, drag_drop.Wj, drag_drop.Zt, canvas_visual_error_overlay_component.f, single_visual_host_component.v, localize_directive.X, accessible_click_directive.t, qna_input_v2_lazy_component.j, tooltip_directive.i ],
                styles: [ '.qnaSuggestQuestions[_ngcontent-%COMP%]{height:100%;box-sizing:border-box;display:flex;flex-direction:column}  html[data-focus-source=mouse] .qnaSuggestQuestions:focus,   html[data-focus-source=mouse] .qnaSuggestQuestions *:focus{outline:none}.qnaSuggestQuestions[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--xlg-font-size, 20px);font-weight:var(--font-weight-semi-bold, 600);line-height:28px;margin:0}.qnaSuggestQuestions[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-regular, 400);line-height:20px;margin:8px 0 0}.qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]{margin-top:16px;height:100%;width:100%;display:flex;flex-direction:column;overflow:hidden}.qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .inputSection[_ngcontent-%COMP%]{display:flex;margin-top:16px;flex-direction:column}.qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .inputSection[_ngcontent-%COMP%]   .inputLabel[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--lg-font-size, 16px);font-weight:var(--font-weight-semi-bold, 600);line-height:22px}.qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .inputSection[_ngcontent-%COMP%]   .inputAndButton[_ngcontent-%COMP%]{display:flex;margin-top:16px}.qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .inputSection[_ngcontent-%COMP%]   .inputAndButton[_ngcontent-%COMP%]   qna-input-v2-lazy[_ngcontent-%COMP%]{flex:1}.qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .inputSection[_ngcontent-%COMP%]   .inputAndButton[_ngcontent-%COMP%]   .addButtonBox[_ngcontent-%COMP%]{display:inline-block}html:not([dir="rtl"])[_nghost-%COMP%]   .qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .inputSection[_ngcontent-%COMP%]   .inputAndButton[_ngcontent-%COMP%]   .addButtonBox[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .inputSection[_ngcontent-%COMP%]   .inputAndButton[_ngcontent-%COMP%]   .addButtonBox[_ngcontent-%COMP%]{margin-left:16px}html[dir="rtl"][_nghost-%COMP%]   .qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .inputSection[_ngcontent-%COMP%]   .inputAndButton[_ngcontent-%COMP%]   .addButtonBox[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .inputSection[_ngcontent-%COMP%]   .inputAndButton[_ngcontent-%COMP%]   .addButtonBox[_ngcontent-%COMP%]{margin-right:16px}.qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .inputSection[_ngcontent-%COMP%]   .inputAndButton[_ngcontent-%COMP%]   button[disabled][_ngcontent-%COMP%]{pointer-events:none}.qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .exampleListAndVisual[_ngcontent-%COMP%]{flex:1;display:flex;flex-direction:row;margin-top:32px;border-top:1px solid var(--fluent-theme-neutral-quarter-color, #D2D0CE);min-height:0}.qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .exampleListAndVisual[_ngcontent-%COMP%]   .exampleListContainer[_ngcontent-%COMP%]{flex:1;display:flex;flex-direction:column;height:100%;box-sizing:border-box}html:not([dir="rtl"])[_nghost-%COMP%]   .qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .exampleListAndVisual[_ngcontent-%COMP%]   .exampleListContainer[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .exampleListAndVisual[_ngcontent-%COMP%]   .exampleListContainer[_ngcontent-%COMP%]{padding:32px 32px 0 0}html[dir="rtl"][_nghost-%COMP%]   .qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .exampleListAndVisual[_ngcontent-%COMP%]   .exampleListContainer[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .exampleListAndVisual[_ngcontent-%COMP%]   .exampleListContainer[_ngcontent-%COMP%]{padding:32px 0 0 32px}.qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .exampleListAndVisual[_ngcontent-%COMP%]   .exampleListContainer[_ngcontent-%COMP%]   .exampleListHeader[_ngcontent-%COMP%]{display:flex}.qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .exampleListAndVisual[_ngcontent-%COMP%]   .exampleListContainer[_ngcontent-%COMP%]   .exampleListHeader[_ngcontent-%COMP%]   .exampleListTitle[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--lg-font-size, 16px);font-weight:var(--font-weight-semi-bold, 600);line-height:22px}.qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .exampleListAndVisual[_ngcontent-%COMP%]   .exampleListContainer[_ngcontent-%COMP%]   .exampleListHeader[_ngcontent-%COMP%]   .glyphicon[_ngcontent-%COMP%]{align-self:center}html:not([dir="rtl"])[_nghost-%COMP%]   .qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .exampleListAndVisual[_ngcontent-%COMP%]   .exampleListContainer[_ngcontent-%COMP%]   .exampleListHeader[_ngcontent-%COMP%]   .glyphicon[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .exampleListAndVisual[_ngcontent-%COMP%]   .exampleListContainer[_ngcontent-%COMP%]   .exampleListHeader[_ngcontent-%COMP%]   .glyphicon[_ngcontent-%COMP%]{margin-left:8px}html[dir="rtl"][_nghost-%COMP%]   .qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .exampleListAndVisual[_ngcontent-%COMP%]   .exampleListContainer[_ngcontent-%COMP%]   .exampleListHeader[_ngcontent-%COMP%]   .glyphicon[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .exampleListAndVisual[_ngcontent-%COMP%]   .exampleListContainer[_ngcontent-%COMP%]   .exampleListHeader[_ngcontent-%COMP%]   .glyphicon[_ngcontent-%COMP%]{margin-right:8px}.qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .exampleListAndVisual[_ngcontent-%COMP%]   .exampleListContainer[_ngcontent-%COMP%]   .exampleList[_ngcontent-%COMP%]{flex:1;margin:16px 0;padding:4px;overflow-y:scroll}.qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .exampleListAndVisual[_ngcontent-%COMP%]   .exampleListContainer[_ngcontent-%COMP%]   .exampleList[_ngcontent-%COMP%]   .example[_ngcontent-%COMP%]{margin-bottom:8px;border-radius:2px;box-shadow:var(--fluent-shadow-depth4, 0px 0px 2px var(--colorNeutralShadowAmbient), 0px 2px 4px var(--colorNeutralShadowKey));box-sizing:border-box;cursor:move;display:flex;flex-direction:row;align-items:center}html:not([dir="rtl"])[_nghost-%COMP%]   .qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .exampleListAndVisual[_ngcontent-%COMP%]   .exampleListContainer[_ngcontent-%COMP%]   .exampleList[_ngcontent-%COMP%]   .example[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .exampleListAndVisual[_ngcontent-%COMP%]   .exampleListContainer[_ngcontent-%COMP%]   .exampleList[_ngcontent-%COMP%]   .example[_ngcontent-%COMP%]{padding:12px 24px}html[dir="rtl"][_nghost-%COMP%]   .qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .exampleListAndVisual[_ngcontent-%COMP%]   .exampleListContainer[_ngcontent-%COMP%]   .exampleList[_ngcontent-%COMP%]   .example[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .exampleListAndVisual[_ngcontent-%COMP%]   .exampleListContainer[_ngcontent-%COMP%]   .exampleList[_ngcontent-%COMP%]   .example[_ngcontent-%COMP%]{padding:12px 24px}.qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .exampleListAndVisual[_ngcontent-%COMP%]   .exampleListContainer[_ngcontent-%COMP%]   .exampleList[_ngcontent-%COMP%]   .example[_ngcontent-%COMP%]   .utterance[_ngcontent-%COMP%]{flex:1;font-size:14px;word-wrap:break-word}html:not([dir="rtl"])[_nghost-%COMP%]   .qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .exampleListAndVisual[_ngcontent-%COMP%]   .exampleListContainer[_ngcontent-%COMP%]   .exampleList[_ngcontent-%COMP%]   .example[_ngcontent-%COMP%]   .utterance[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .exampleListAndVisual[_ngcontent-%COMP%]   .exampleListContainer[_ngcontent-%COMP%]   .exampleList[_ngcontent-%COMP%]   .example[_ngcontent-%COMP%]   .utterance[_ngcontent-%COMP%]{margin-right:28px}html[dir="rtl"][_nghost-%COMP%]   .qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .exampleListAndVisual[_ngcontent-%COMP%]   .exampleListContainer[_ngcontent-%COMP%]   .exampleList[_ngcontent-%COMP%]   .example[_ngcontent-%COMP%]   .utterance[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .exampleListAndVisual[_ngcontent-%COMP%]   .exampleListContainer[_ngcontent-%COMP%]   .exampleList[_ngcontent-%COMP%]   .example[_ngcontent-%COMP%]   .utterance[_ngcontent-%COMP%]{margin-left:28px}.qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .exampleListAndVisual[_ngcontent-%COMP%]   .exampleListContainer[_ngcontent-%COMP%]   .exampleList[_ngcontent-%COMP%]   .example[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{display:none;cursor:pointer}.qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .exampleListAndVisual[_ngcontent-%COMP%]   .exampleListContainer[_ngcontent-%COMP%]   .exampleList[_ngcontent-%COMP%]   .example[_ngcontent-%COMP%]:hover{background-color:var(--fluent-theme-neutral-lighter-alt-color, #FAF9F8)}.qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .exampleListAndVisual[_ngcontent-%COMP%]   .exampleListContainer[_ngcontent-%COMP%]   .exampleList[_ngcontent-%COMP%]   .example[_ngcontent-%COMP%]:hover   i[_ngcontent-%COMP%]{display:inline-block}.qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .exampleListAndVisual[_ngcontent-%COMP%]   .exampleListContainer[_ngcontent-%COMP%]   .exampleList[_ngcontent-%COMP%]   .example.cdk-drag-placeholder[_ngcontent-%COMP%]{background-color:var(--neutral-light-color, #EAEAEA);cursor:move}.qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .exampleListAndVisual[_ngcontent-%COMP%]   .exampleListContainer[_ngcontent-%COMP%]   .exampleList[_ngcontent-%COMP%]   .example.cdk-drag-animating[_ngcontent-%COMP%], .qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .exampleListAndVisual[_ngcontent-%COMP%]   .exampleListContainer[_ngcontent-%COMP%]   .exampleList[_ngcontent-%COMP%]   .example[_ngcontent-%COMP%]:not(.cdk-drag-placeholder){transition:transform .5s ease}.qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .exampleListAndVisual[_ngcontent-%COMP%]   .exampleListContainer[_ngcontent-%COMP%]   .saveButton[_ngcontent-%COMP%]{margin-left:auto}.qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .exampleListAndVisual[_ngcontent-%COMP%]   .visualSection[_ngcontent-%COMP%]{flex:1;box-sizing:border-box;display:flex;flex-direction:column}html:not([dir="rtl"])[_nghost-%COMP%]   .qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .exampleListAndVisual[_ngcontent-%COMP%]   .visualSection[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .exampleListAndVisual[_ngcontent-%COMP%]   .visualSection[_ngcontent-%COMP%]{padding:32px 0 0 32px}html[dir="rtl"][_nghost-%COMP%]   .qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .exampleListAndVisual[_ngcontent-%COMP%]   .visualSection[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .exampleListAndVisual[_ngcontent-%COMP%]   .visualSection[_ngcontent-%COMP%]{padding:32px 32px 0 0}html:not([dir="rtl"])[_nghost-%COMP%]   .qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .exampleListAndVisual[_ngcontent-%COMP%]   .visualSection[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .exampleListAndVisual[_ngcontent-%COMP%]   .visualSection[_ngcontent-%COMP%]{margin-left:0;margin-right:auto}html[dir="rtl"][_nghost-%COMP%]   .qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .exampleListAndVisual[_ngcontent-%COMP%]   .visualSection[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .exampleListAndVisual[_ngcontent-%COMP%]   .visualSection[_ngcontent-%COMP%]{margin-left:auto;margin-right:0}html:not([dir="rtl"])[_nghost-%COMP%]   .qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .exampleListAndVisual[_ngcontent-%COMP%]   .visualSection[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .exampleListAndVisual[_ngcontent-%COMP%]   .visualSection[_ngcontent-%COMP%]{border-left-width:1px;border-right-width:0}html[dir="rtl"][_nghost-%COMP%]   .qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .exampleListAndVisual[_ngcontent-%COMP%]   .visualSection[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .exampleListAndVisual[_ngcontent-%COMP%]   .visualSection[_ngcontent-%COMP%]{border-left-width:0;border-right-width:1px}html:not([dir="rtl"])[_nghost-%COMP%]   .qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .exampleListAndVisual[_ngcontent-%COMP%]   .visualSection[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .exampleListAndVisual[_ngcontent-%COMP%]   .visualSection[_ngcontent-%COMP%]{border-left-style:solid;border-right-style:none}html[dir="rtl"][_nghost-%COMP%]   .qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .exampleListAndVisual[_ngcontent-%COMP%]   .visualSection[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .exampleListAndVisual[_ngcontent-%COMP%]   .visualSection[_ngcontent-%COMP%]{border-left-style:none;border-right-style:solid}html:not([dir="rtl"])[_nghost-%COMP%]   .qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .exampleListAndVisual[_ngcontent-%COMP%]   .visualSection[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .exampleListAndVisual[_ngcontent-%COMP%]   .visualSection[_ngcontent-%COMP%]{border-left-color:var(--fluent-theme-neutral-quarter-color, #D2D0CE);border-right-color:transparent}html[dir="rtl"][_nghost-%COMP%]   .qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .exampleListAndVisual[_ngcontent-%COMP%]   .visualSection[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .exampleListAndVisual[_ngcontent-%COMP%]   .visualSection[_ngcontent-%COMP%]{border-left-color:transparent;border-right-color:var(--fluent-theme-neutral-quarter-color, #D2D0CE)}.qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .exampleListAndVisual[_ngcontent-%COMP%]   .visualSection[_ngcontent-%COMP%]   .previewTitle[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--lg-font-size, 16px);font-weight:var(--font-weight-semi-bold, 600);line-height:22px;margin-bottom:20px}.qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .exampleListAndVisual[_ngcontent-%COMP%]   .visualSection[_ngcontent-%COMP%]   .visualRestatement[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-regular, 400);max-width:390px;word-wrap:break-word;line-height:20px;margin-bottom:12px;color:var(--fluent-theme-neutral-primary-color, #323130)}.qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .exampleListAndVisual[_ngcontent-%COMP%]   .visualSection[_ngcontent-%COMP%]   .singleVisualHostContainer[_ngcontent-%COMP%]{flex:1;position:relative}.qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .exampleListAndVisual[_ngcontent-%COMP%]   .visualSection[_ngcontent-%COMP%]   .singleVisualHostContainer[_ngcontent-%COMP%]   single-visual-host[_ngcontent-%COMP%]{position:relative;display:block;height:100%;background-color:transparent}.qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .exampleListAndVisual[_ngcontent-%COMP%]   .visualSection[_ngcontent-%COMP%]   .singleVisualHostContainer[_ngcontent-%COMP%]   canvas-visual-error-overlay[_ngcontent-%COMP%]{margin-top:10px}.qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .exampleListAndVisual[_ngcontent-%COMP%]   .visualSection[_ngcontent-%COMP%]   .showDoNotUnderstandMessage[_ngcontent-%COMP%]{flex:1;text-align:center;align-self:center;align-items:center;font-size:14px;padding:20px}.qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   button.actionButton[_ngcontent-%COMP%], .qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   button.actionButton.primary[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-semi-bold, 600);line-height:16px;min-width:86px}html:not([dir="rtl"])[_nghost-%COMP%]   .qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   button.actionButton[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   button.actionButton[_ngcontent-%COMP%], html:not([dir="rtl"])[_nghost-%COMP%]   .qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   button.actionButton.primary[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   button.actionButton.primary[_ngcontent-%COMP%]{padding:6px 20px}html[dir="rtl"][_nghost-%COMP%]   .qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   button.actionButton[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   button.actionButton[_ngcontent-%COMP%], html[dir="rtl"][_nghost-%COMP%]   .qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   button.actionButton.primary[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .qnaSuggestQuestions[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   button.actionButton.primary[_ngcontent-%COMP%]{padding:6px 20px}' ]
            }), QnaSuggestQuestionsComponent;
        }(), events = __webpack_require__(8590), colorUtility = __webpack_require__(1521), semanticQuery = __webpack_require__(95462), fromEvent = __webpack_require__(59787), withLatestFrom = __webpack_require__(23558), event_bridge_service = __webpack_require__(11494), theme_service = __webpack_require__(67660), qna_teach_qna_component_c0 = [ "singleVisualHostContainer" ], qna_teach_qna_component_c1 = [ "qnaTeachQna" ], qna_teach_qna_component_c2 = [ "mainQuestionInputV2Lazy" ], qna_teach_qna_component_c3 = [ "trainUnitInputV2" ];
        function QnaTeachQnaComponent_qna_input_v2_lazy_7_Template(rf, ctx) {
            if (1 & rf) {
                var _r6 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "qna-input-v2-lazy", 10, 11), fesm2022_core["\u0275\u0275listener"]("grippersDefinedTextRangeChanged", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r6);
                    var ctx_r5 = fesm2022_core["\u0275\u0275nextContext"]();
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r5.onQuestionBoxGrippersDefinedTextRangeChanged($event));
                })("enterKeyPressed", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r6);
                    var ctx_r7 = fesm2022_core["\u0275\u0275nextContext"]();
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r7.onQuestionInputBoxEnterKeyPressed());
                })("inputBoxInitialized", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r6);
                    var ctx_r8 = fesm2022_core["\u0275\u0275nextContext"]();
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r8.onMainQuestionInputBoxInitialized());
                }), fesm2022_core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r1 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275property"]("entryPoint", ctx_r1.viewModel.inputViewModel.entryPoint)("interpretListener", ctx_r1.viewModel.inputViewModel.interpretListener)("qnaSupportedScopes", ctx_r1.viewModel.inputViewModel.qnaSupportedScopes)("presentationArgs", ctx_r1.viewModel.inputViewModel.presentation)("initialUtterance", ctx_r1.viewModel.inputViewModel.initialUtterance)("configs", ctx_r1.viewModel.inputViewModel.configs)("linguisticInfo", ctx_r1.viewModel.inputViewModel.linguisticInfo);
            }
        }
        function QnaTeachQnaComponent_ng_container_8_button_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r13 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "button", 14), fesm2022_core["\u0275\u0275listener"]("click", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r13);
                    var ctx_r12 = fesm2022_core["\u0275\u0275nextContext"](2);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r12.submitQuestion());
                }), fesm2022_core["\u0275\u0275pipe"](1, "async"), fesm2022_core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r10 = fesm2022_core["\u0275\u0275nextContext"](2);
                fesm2022_core["\u0275\u0275property"]("disabled", !fesm2022_core["\u0275\u0275pipeBind1"](1, 1, ctx_r10.isSubmitButtonEnabled$));
            }
        }
        function QnaTeachQnaComponent_ng_container_8_button_2_Template(rf, ctx) {
            if (1 & rf) {
                var _r15 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "button", 15), fesm2022_core["\u0275\u0275listener"]("click", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r15);
                    var ctx_r14 = fesm2022_core["\u0275\u0275nextContext"](2);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r14.clearQuestion());
                }), fesm2022_core["\u0275\u0275pipe"](1, "async"), fesm2022_core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r11 = fesm2022_core["\u0275\u0275nextContext"](2);
                fesm2022_core["\u0275\u0275property"]("disabled", !fesm2022_core["\u0275\u0275pipeBind1"](1, 1, ctx_r11.isClearButtonEnabled$));
            }
        }
        function QnaTeachQnaComponent_ng_container_8_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275template"](1, QnaTeachQnaComponent_ng_container_8_button_1_Template, 2, 3, "button", 12), 
            fesm2022_core["\u0275\u0275template"](2, QnaTeachQnaComponent_ng_container_8_button_2_Template, 2, 3, "button", 13), 
            fesm2022_core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var submitClearButtonInfo_r9 = ctx.ngIf;
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", submitClearButtonInfo_r9.showSubmit), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", !submitClearButtonInfo_r9.showSubmit);
            }
        }
        var qna_teach_qna_component_c4 = function(a0) {
            return {
                hasTermDefError: a0
            };
        };
        function QnaTeachQnaComponent_div_10_ng_container_1_section_1_div_6_ng_container_1_div_1_qna_input_v2_lazy_7_Template(rf, ctx) {
            if (1 & rf && fesm2022_core["\u0275\u0275element"](0, "qna-input-v2-lazy", 44, 45), 
            2 & rf) {
                var ctx_r36 = fesm2022_core["\u0275\u0275nextContext"](), singleTermTrainingUnit_r30 = ctx_r36.$implicit, unitIndex_r31 = ctx_r36.index, groupIndex_r26 = fesm2022_core["\u0275\u0275nextContext"](2).index, ctx_r32 = fesm2022_core["\u0275\u0275nextContext"](4);
                fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction1"](10, qna_teach_qna_component_c4, ctx_r32.shouldShowErrorForTermDefinition(singleTermTrainingUnit_r30)))("entryPoint", singleTermTrainingUnit_r30.inputViewModel.entryPoint)("interpretListener", singleTermTrainingUnit_r30.inputViewModel.interpretListener)("qnaSupportedScopes", singleTermTrainingUnit_r30.inputViewModel.qnaSupportedScopes)("presentationArgs", singleTermTrainingUnit_r30.inputViewModel.presentation)("configs", singleTermTrainingUnit_r30.inputViewModel.configs)("initialUtterance", singleTermTrainingUnit_r30.inputViewModel.initialUtterance)("utteranceSuggestions", singleTermTrainingUnit_r30.inputViewModel.utteranceSuggestions)("linguisticInfo", singleTermTrainingUnit_r30.inputViewModel.linguisticInfo), 
                fesm2022_core["\u0275\u0275attribute"]("data-indices", ctx_r32.createTrainUnitCustomDataTagString(groupIndex_r26, unitIndex_r31));
            }
        }
        function QnaTeachQnaComponent_div_10_ng_container_1_section_1_div_6_ng_container_1_div_1_i_8_Template(rf, ctx) {
            if (1 & rf && fesm2022_core["\u0275\u0275element"](0, "i", 46), 2 & rf) {
                var ctx_r33 = fesm2022_core["\u0275\u0275nextContext"](7);
                fesm2022_core["\u0275\u0275property"]("pbi-tooltip", ctx_r33.getTrainUnitDefinitionInvalidToolTipConfig());
            }
        }
        function QnaTeachQnaComponent_div_10_ng_container_1_section_1_div_6_ng_container_1_div_1_label_9_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "label", 47), fesm2022_core["\u0275\u0275text"](1), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var singleTermTrainingUnit_r30 = fesm2022_core["\u0275\u0275nextContext"]().$implicit;
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275textInterpolate1"](" ", singleTermTrainingUnit_r30.suffixText, "");
            }
        }
        var qna_teach_qna_component_c5 = function(a0) {
            return {
                activeTrainingUnit: a0
            };
        };
        function QnaTeachQnaComponent_div_10_ng_container_1_section_1_div_6_ng_container_1_div_1_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 36)(1, "span", 37), 
            fesm2022_core["\u0275\u0275text"](2), fesm2022_core["\u0275\u0275elementEnd"](), 
            fesm2022_core["\u0275\u0275elementStart"](3, "div", 38)(4, "label", 39), fesm2022_core["\u0275\u0275text"](5), 
            fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275elementStart"](6, "div", 40), 
            fesm2022_core["\u0275\u0275template"](7, QnaTeachQnaComponent_div_10_ng_container_1_section_1_div_6_ng_container_1_div_1_qna_input_v2_lazy_7_Template, 2, 12, "qna-input-v2-lazy", 41), 
            fesm2022_core["\u0275\u0275template"](8, QnaTeachQnaComponent_div_10_ng_container_1_section_1_div_6_ng_container_1_div_1_i_8_Template, 1, 1, "i", 42), 
            fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275template"](9, QnaTeachQnaComponent_div_10_ng_container_1_section_1_div_6_ng_container_1_div_1_label_9_Template, 2, 1, "label", 43), 
            fesm2022_core["\u0275\u0275elementEnd"]()()), 2 & rf) {
                var singleTermTrainingUnit_r30 = ctx.$implicit, ctx_r29 = fesm2022_core["\u0275\u0275nextContext"](6);
                fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction1"](6, qna_teach_qna_component_c5, ctx_r29.isActiveTrainingUnit(singleTermTrainingUnit_r30))), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275textInterpolate"](ctx_r29.capitalizeFirstChar(singleTermTrainingUnit_r30.definitionPrompt)), 
                fesm2022_core["\u0275\u0275advance"](3), fesm2022_core["\u0275\u0275textInterpolate"](ctx_r29.capitalizeFirstChar(singleTermTrainingUnit_r30.prefixText)), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("ngIf", singleTermTrainingUnit_r30.inputViewModel), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", ctx_r29.shouldShowErrorForTermDefinition(singleTermTrainingUnit_r30)), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", singleTermTrainingUnit_r30.suffixText && singleTermTrainingUnit_r30.suffixText.length > 0);
            }
        }
        function QnaTeachQnaComponent_div_10_ng_container_1_section_1_div_6_ng_container_1_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275template"](1, QnaTeachQnaComponent_div_10_ng_container_1_section_1_div_6_ng_container_1_div_1_Template, 10, 8, "div", 35), 
            fesm2022_core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var trainingGroup_r25 = fesm2022_core["\u0275\u0275nextContext"]().$implicit;
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngForOf", trainingGroup_r25.trainUnits);
            }
        }
        function QnaTeachQnaComponent_div_10_ng_container_1_section_1_div_6_ng_container_2_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275element"](1, "span", 48)(2, "i", 27), 
            fesm2022_core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var trainingGroup_r25 = fesm2022_core["\u0275\u0275nextContext"]().$implicit, ctx_r28 = fesm2022_core["\u0275\u0275nextContext"](4);
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("innerHtml", ctx_r28.getNotReadyToTrainGroupDescriptionHtml(trainingGroup_r25), fesm2022_core["\u0275\u0275sanitizeHtml"]), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("pbi-tooltip", ctx_r28.getNotReadyToTrainGroupTooltipConfig(trainingGroup_r25));
            }
        }
        var qna_teach_qna_component_c6 = function(a0, a1, a2, a3) {
            return {
                firstDefinitionGroup: a0,
                activeDefinitionGroup: a1,
                trainingReadyGroup: a2,
                trainingNotReadyGroup: a3
            };
        };
        function QnaTeachQnaComponent_div_10_ng_container_1_section_1_div_6_Template(rf, ctx) {
            if (1 & rf) {
                var _r42 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "div", 34), fesm2022_core["\u0275\u0275listener"]("click", function() {
                    var trainingGroup_r25 = fesm2022_core["\u0275\u0275restoreView"](_r42).$implicit, ctx_r41 = fesm2022_core["\u0275\u0275nextContext"](4);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r41.activateDefinitionGroup(trainingGroup_r25, !1, !0));
                }), fesm2022_core["\u0275\u0275template"](1, QnaTeachQnaComponent_div_10_ng_container_1_section_1_div_6_ng_container_1_Template, 2, 1, "ng-container", 8), 
                fesm2022_core["\u0275\u0275template"](2, QnaTeachQnaComponent_div_10_ng_container_1_section_1_div_6_ng_container_2_Template, 3, 2, "ng-container", 8), 
                fesm2022_core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var trainingGroup_r25 = ctx.$implicit, groupIndex_r26 = ctx.index, ctx_r22 = fesm2022_core["\u0275\u0275nextContext"](4);
                fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction4"](3, qna_teach_qna_component_c6, 0 === groupIndex_r26, ctx_r22.isActiveDefinitionGroup(trainingGroup_r25), trainingGroup_r25.isReadyForTraining, !trainingGroup_r25.isReadyForTraining)), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", trainingGroup_r25.isReadyForTraining), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", !trainingGroup_r25.isReadyForTraining);
            }
        }
        var qna_teach_qna_component_c7 = function(a0, a1) {
            return {
                firstDefinitionGroup: a0,
                activeDefinitionGroup: a1
            };
        };
        function QnaTeachQnaComponent_div_10_ng_container_1_section_1_div_7_Template(rf, ctx) {
            if (1 & rf) {
                var _r44 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "div", 49), fesm2022_core["\u0275\u0275listener"]("click", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r44);
                    var ctx_r43 = fesm2022_core["\u0275\u0275nextContext"](4);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r43.activateDefinitionGroup(ctx_r43.viewModel.trainingUnsupportedTermsGroup));
                }), fesm2022_core["\u0275\u0275element"](1, "span", 50)(2, "i", 27), fesm2022_core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r23 = fesm2022_core["\u0275\u0275nextContext"](4);
                fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction2"](3, qna_teach_qna_component_c7, 0 === (null == ctx_r23.viewModel || null == ctx_r23.viewModel.trainingGroups ? null : ctx_r23.viewModel.trainingGroups.length), ctx_r23.isActiveDefinitionGroup(ctx_r23.viewModel.trainingUnsupportedTermsGroup))), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("innerHtml", ctx_r23.getNotSupportedToTrainGroupDescriptionHtml(), fesm2022_core["\u0275\u0275sanitizeHtml"]), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("pbi-tooltip", ctx_r23.getNotSupportedToTrainGroupTooltipConfig());
            }
        }
        function QnaTeachQnaComponent_div_10_ng_container_1_section_1_div_8_Template(rf, ctx) {
            if (1 & rf && fesm2022_core["\u0275\u0275element"](0, "div", 51), 2 & rf) {
                var ctx_r24 = fesm2022_core["\u0275\u0275nextContext"](4);
                fesm2022_core["\u0275\u0275property"]("pbi-tooltip", ctx_r24.termDefinitionsDisabledBeforeResubmissionTooltipConfig);
            }
        }
        var qna_teach_qna_component_c8 = function(a0) {
            return {
                allDefinitionEditDisabled: a0
            };
        };
        function QnaTeachQnaComponent_div_10_ng_container_1_section_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r46 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "section", 24)(1, "header", 25), fesm2022_core["\u0275\u0275element"](2, "label", 26)(3, "i", 27), 
                fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275elementStart"](4, "div", 28)(5, "div", 29), 
                fesm2022_core["\u0275\u0275template"](6, QnaTeachQnaComponent_div_10_ng_container_1_section_1_div_6_Template, 3, 8, "div", 30), 
                fesm2022_core["\u0275\u0275template"](7, QnaTeachQnaComponent_div_10_ng_container_1_section_1_div_7_Template, 3, 6, "div", 31), 
                fesm2022_core["\u0275\u0275template"](8, QnaTeachQnaComponent_div_10_ng_container_1_section_1_div_8_Template, 1, 1, "div", 32), 
                fesm2022_core["\u0275\u0275elementEnd"]()(), fesm2022_core["\u0275\u0275elementStart"](9, "button", 33), 
                fesm2022_core["\u0275\u0275listener"]("click", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r46);
                    var ctx_r45 = fesm2022_core["\u0275\u0275nextContext"](3);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r45.saveTermDefinitions());
                }), fesm2022_core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var submissionInfo_r17 = fesm2022_core["\u0275\u0275nextContext"]().ngIf, ctx_r18 = fesm2022_core["\u0275\u0275nextContext"](2);
                fesm2022_core["\u0275\u0275advance"](3), fesm2022_core["\u0275\u0275property"]("pbi-tooltip", ctx_r18.getDefineUnknownTermsToolTipConfig()), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction1"](6, qna_teach_qna_component_c8, submissionInfo_r17.termDefinitionsDisabledBeforeResubmission)), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("ngForOf", null == ctx_r18.viewModel ? null : ctx_r18.viewModel.trainingGroups), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", (null == ctx_r18.viewModel || null == ctx_r18.viewModel.trainingUnsupportedTermsGroup || null == ctx_r18.viewModel.trainingUnsupportedTermsGroup.spans ? null : ctx_r18.viewModel.trainingUnsupportedTermsGroup.spans.length) > 0), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", submissionInfo_r17.termDefinitionsDisabledBeforeResubmission), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("disabled", !ctx_r18.isSaveButtonEnabled);
            }
        }
        function QnaTeachQnaComponent_div_10_ng_container_1_label_5_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "label", 52), fesm2022_core["\u0275\u0275text"](1), 
            fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r19 = fesm2022_core["\u0275\u0275nextContext"](3);
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275textInterpolate"](ctx_r19.viewModel.visualViewModel.restatement);
            }
        }
        function QnaTeachQnaComponent_div_10_ng_container_1_div_6_single_visual_host_2_Template(rf, ctx) {
            if (1 & rf && fesm2022_core["\u0275\u0275element"](0, "single-visual-host", 56), 
            2 & rf) {
                var singleVisualHostConfig_r50 = ctx.ngIf, ctx_r49 = fesm2022_core["\u0275\u0275nextContext"](4);
                fesm2022_core["\u0275\u0275property"]("visual", ctx_r49.viewModel.visualViewModel.visual)("visualViewport", ctx_r49.viewModel.visualViewModel.viewport)("config", singleVisualHostConfig_r50)("themeCollection", null == ctx_r49.viewModel ? null : ctx_r49.viewModel.themeCollection);
            }
        }
        function QnaTeachQnaComponent_div_10_ng_container_1_div_6_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 53, 54), fesm2022_core["\u0275\u0275template"](2, QnaTeachQnaComponent_div_10_ng_container_1_div_6_single_visual_host_2_Template, 1, 4, "single-visual-host", 55), 
            fesm2022_core["\u0275\u0275pipe"](3, "async"), fesm2022_core["\u0275\u0275elementEnd"]()), 
            2 & rf) {
                var ctx_r20 = fesm2022_core["\u0275\u0275nextContext"](3);
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("ngIf", fesm2022_core["\u0275\u0275pipeBind1"](3, 1, ctx_r20.singleVisualHostConfig$));
            }
        }
        var qna_teach_qna_component_c9 = function() {
            return {
                "aria-label": "QnaTooling_TeachQna_VisualResultLoading"
            };
        };
        function QnaTeachQnaComponent_div_10_ng_container_1_spinner_7_Template(rf, ctx) {
            1 & rf && fesm2022_core["\u0275\u0275element"](0, "spinner", 57), 2 & rf && fesm2022_core["\u0275\u0275property"]("localizeAttr", fesm2022_core["\u0275\u0275pureFunction0"](3, qna_teach_qna_component_c9))("size", "xlarge")("position", "centered");
        }
        function QnaTeachQnaComponent_div_10_ng_container_1_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275template"](1, QnaTeachQnaComponent_div_10_ng_container_1_section_1_Template, 10, 8, "section", 17), 
            fesm2022_core["\u0275\u0275elementStart"](2, "section", 18), fesm2022_core["\u0275\u0275element"](3, "label", 19), 
            fesm2022_core["\u0275\u0275elementStart"](4, "div", 20), fesm2022_core["\u0275\u0275template"](5, QnaTeachQnaComponent_div_10_ng_container_1_label_5_Template, 2, 1, "label", 21), 
            fesm2022_core["\u0275\u0275template"](6, QnaTeachQnaComponent_div_10_ng_container_1_div_6_Template, 4, 3, "div", 22), 
            fesm2022_core["\u0275\u0275template"](7, QnaTeachQnaComponent_div_10_ng_container_1_spinner_7_Template, 1, 4, "spinner", 23), 
            fesm2022_core["\u0275\u0275elementEnd"]()(), fesm2022_core["\u0275\u0275elementContainerEnd"]()), 
            2 & rf) {
                var ctx_r16 = fesm2022_core["\u0275\u0275nextContext"](2);
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", (null == ctx_r16.viewModel || null == ctx_r16.viewModel.trainingGroups ? null : ctx_r16.viewModel.trainingGroups.length) > 0 || (null == ctx_r16.viewModel || null == ctx_r16.viewModel.trainingUnsupportedTermsGroup || null == ctx_r16.viewModel.trainingUnsupportedTermsGroup.spans ? null : ctx_r16.viewModel.trainingUnsupportedTermsGroup.spans.length) > 0), 
                fesm2022_core["\u0275\u0275advance"](4), fesm2022_core["\u0275\u0275property"]("ngIf", null == ctx_r16.viewModel || null == ctx_r16.viewModel.visualViewModel ? null : ctx_r16.viewModel.visualViewModel.visual), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", null == ctx_r16.viewModel || null == ctx_r16.viewModel.visualViewModel ? null : ctx_r16.viewModel.visualViewModel.visual), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", null == ctx_r16.viewModel || null == ctx_r16.viewModel.visualViewModel ? null : ctx_r16.viewModel.visualViewModel.isLoading);
            }
        }
        var qna_teach_qna_component_c10 = function(a0) {
            return {
                termDefinitionsDisabledBeforeResubmission: a0
            };
        };
        function QnaTeachQnaComponent_div_10_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 16), fesm2022_core["\u0275\u0275template"](1, QnaTeachQnaComponent_div_10_ng_container_1_Template, 8, 4, "ng-container", 8), 
            fesm2022_core["\u0275\u0275pipe"](2, "async"), fesm2022_core["\u0275\u0275elementEnd"]()), 
            2 & rf) {
                var ctx_r3 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", fesm2022_core["\u0275\u0275pureFunction1"](3, qna_teach_qna_component_c10, fesm2022_core["\u0275\u0275pipeBind1"](2, 1, ctx_r3.areTermDefinitionsDisabledBeforeResubmission$)));
            }
        }
        var dsrDataSource, qna_teach_qna_component_c11 = function(a0) {
            return {
                showSubmit: a0
            };
        }, QnaTeachQnaComponent = function() {
            function QnaTeachQnaComponent(geocoder, geolocationService, moduleLoader, dataSources, dialogService, eventBridge, localizationService, promiseFactory, telemetryService, themeService, qnaService, interpretListenerFactory, azureMapTokenCache, azureMapsEndpoint, geocoderIndexedDB, visualHostTooltipServiceFactory) {
                var _this = this;
                this.geocoder = geocoder, this.geolocationService = geolocationService, this.moduleLoader = moduleLoader, 
                this.dialogService = dialogService, this.eventBridge = eventBridge, this.localizationService = localizationService, 
                this.promiseFactory = promiseFactory, this.telemetryService = telemetryService, 
                this.themeService = themeService, this.qnaService = qnaService, this.interpretListenerFactory = interpretListenerFactory, 
                this.azureMapTokenCache = azureMapTokenCache, this.azureMapsEndpoint = azureMapsEndpoint, 
                this.geocoderIndexedDB = geocoderIndexedDB, this.visualHostTooltipServiceFactory = visualHostTooltipServiceFactory, 
                this.lastPreviewPromise = Promise.resolve(), this.entryQuestionHandled = new fesm2022_core.EventEmitter, 
                this.savedLinguisticSchemaUpdated = new fesm2022_core.EventEmitter, this.showAllMouseActionBlocker = new fesm2022_core.EventEmitter, 
                this.trainUnitElementsDestroy$ = new Subject.xQ, this.mainInputBoxInitializationHandled = !1, 
                this.destroy$ = new Subject.xQ, this.trainUnitsDestroy$ = new Subject.xQ, this.trainingStage$ = new BehaviorSubject.X(0), 
                this.shouldShowSubmit$ = new BehaviorSubject.X(void 0), this.isSubmitButtonEnabled$ = new BehaviorSubject.X(void 0), 
                this.isClearButtonEnabled$ = new BehaviorSubject.X(void 0), this.grippersDefinedNotInOriginalResultSpan$ = new BehaviorSubject.X(void 0), 
                this.isDisplayedQuestionChangedSinceSubmission$ = new BehaviorSubject.X(void 0);
                var model = createModel(dsrDataSource = _.find(dataSources.get(), function(d) {
                    return d.type === PowerBIContracts_constants.nKy;
                }));
                this.interpretListener = interpretListenerFactory.createInterpretListener({
                    forTrainingTermBinding: !0,
                    canShowPods: !1,
                    canShowVisuals: !0,
                    canShowDidYouMean: !1,
                    models: [ model ]
                }), this.qnaSupportedScopes = [ {
                    model
                } ], this.singleVisualHostConfig$ = this.interpretListener.getObservable().pipe((0, 
                takeUntil.R)(this.destroy$), (0, map.U)(function(result) {
                    return _this.createSingleVisualHostConfig(result.visualContainer);
                })), this.isTrainingStarted$ = this.trainingStage$.pipe((0, takeUntil.R)(this.destroy$), (0, 
                map.U)(function(stageValue) {
                    return null != stageValue && 0 !== stageValue;
                })), this.interpretListener.getObservable().pipe((0, takeUntil.R)(this.destroy$)).subscribe(function(result) {
                    return _this.onQuestionInterpretResultAvailable(result);
                });
            }
            return Object.defineProperty(QnaTeachQnaComponent.prototype, "singleVisualHostContainerElement", {
                get: function() {
                    return this._singleVisualHostContainerElement;
                },
                set: function(value) {
                    this._singleVisualHostContainerElement = value, this.resizePending && this.resize();
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(QnaTeachQnaComponent.prototype, "_trainUnitInputV2ElementRefsQueryList", {
                set: function(elementRefs) {
                    var _this = this;
                    this.trainUnitInputV2ElementRefsQueryList = elementRefs;
                    for (var _loop_1 = function(elementRef) {
                        (0, fromEvent.R)(elementRef.nativeElement, "focusin").pipe((0, takeUntil.R)(this_1.trainUnitElementsDestroy$)).subscribe(function(_event) {
                            var indicesTagString = elementRef.nativeElement.getAttribute("data-indices"), indicesObject = _this.parseTrainUnitCustomDataTagString(indicesTagString), group = _.nth(_this.viewModel && _this.viewModel.trainingGroups, indicesObject.groupIndex), unit = _.nth(group && group.trainUnits, indicesObject.unitIndex);
                            debug.fF.assertValue(group, "this.viewModel.trainingGroups[" + indicesObject.groupIndex + "] should exist"), 
                            debug.fF.assertValue(unit, "this.viewModel.trainingGroups[" + indicesObject.groupIndex + "][" + indicesObject.unitIndex + "] should exist"), 
                            unit && (_this.activeTrainingUnit = unit, _this.activateDefinitionGroup(group, !1, !1));
                        });
                    }, this_1 = this, _i = 0, _a = elementRefs && elementRefs.toArray() || []; _i < _a.length; _i++) _loop_1(_a[_i]);
                },
                enumerable: !1,
                configurable: !0
            }), QnaTeachQnaComponent.prototype.ngOnInit = function() {
                this.setLuciaLinguisticSchema(JSON.stringify(this.initialLinguisticSchema)), this.linguisticSchemaForPreview = this.initialLinguisticSchema, 
                this.linguisticSchemaSaved = this.initialLinguisticSchema, this.linguisticSchemaAtCurrentQuestionStart = this.initialLinguisticSchema;
                var dataColor = this.themeService.getVisualStyle(this.themeCollection).colorPalette.dataColors.getColorByIndex(0).value, inputPresentation = {
                    useShellTheme: !0,
                    withBorder: !0,
                    backgroundColor: "#FFFFFF",
                    commitButtonBackgroundColor: (0, colorUtility.Yv)(dataColor, "#FFFFFF", 3).hexColor
                }, inputConfigs = {
                    autoFocusOnInit: !0,
                    showActionButtons: !1,
                    showLoadingIcon: !1,
                    showWarningIcon: !0,
                    showCorrectedUtterance: !1,
                    disableSendingServiceTags: !0,
                    supportTokenGrippers: !0,
                    supportsPodQueries: !1,
                    supportsInsightsQueries: !1,
                    inferUnknownModelTerms: !0,
                    customAriaLabel: this.localizationService.get("QnaTooling_TeachQna_EnterQuestion"),
                    spanDropdownHeaderConfig: {
                        show: !0,
                        unknownSpanHeaderConfig: {
                            actionType: "textOnlyHeader",
                            textOnlyTemplate: {
                                template: "Qna_AutoComplete_SelectSubmitToDefineTermLabelText",
                                variables: [ {
                                    text: this.localizationService.get("Submit"),
                                    type: 0,
                                    isBold: !0
                                }, {
                                    type: 1,
                                    isBold: !0
                                } ]
                            }
                        }
                    },
                    commitOnDemandForcedMode: "AlwaysOff"
                };
                this.viewModel = {
                    currentQuestionHasSpansToTrain: !1,
                    inputViewModel: {
                        initialUtterance: this.entryQuestion || "",
                        entryPoint: "TeachQnaMainQuestion",
                        interpretListener: this.interpretListener,
                        qnaSupportedScopes: this.qnaSupportedScopes,
                        presentation: inputPresentation,
                        configs: inputConfigs
                    },
                    visualViewModel: {
                        isLoading: !1,
                        visual: void 0,
                        viewport: {
                            scale: 1,
                            height: 0,
                            width: 0
                        },
                        restatement: void 0
                    },
                    trainingUnsupportedTermsGroup: {
                        spans: []
                    },
                    themeCollection: this.themeCollection
                }, this.setupPipes();
            }, QnaTeachQnaComponent.prototype.ngOnDestroy = function() {
                this.destroy$.next(), this.destroy$.complete(), this.trainUnitsDestroy$.next(), 
                this.trainUnitsDestroy$.complete(), this.trainUnitElementsDestroy$.next(), this.trainUnitElementsDestroy$.complete();
            }, Object.defineProperty(QnaTeachQnaComponent.prototype, "trainUnitInputBoxElementRefs", {
                get: function() {
                    return this.trainUnitInputV2ElementRefsQueryList && this.trainUnitInputV2ElementRefsQueryList.toArray();
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(QnaTeachQnaComponent.prototype, "isSaveButtonEnabled", {
                get: function() {
                    var _this = this, enable = !1, hasDifferentDefinition = !1, hasValidDefinition = !1;
                    return _.forEach(this.viewModel.trainingGroups, function(group) {
                        _.forEach(group.trainUnits, function(unit) {
                            unit.isDefinitionDifferentFromLastSaved && (hasDifferentDefinition = !0), unit.definitionApplyInfo && 1 === unit.definitionApplyInfo.isLastPreviewedDefinitionValid && unit.definitionApplyInfo.lastPreviewedDefinitionTrimmed === _.trim(_this.getTrainUnitDisplayedUtterance(unit)) && (hasValidDefinition = !0), 
                            hasDifferentDefinition && hasValidDefinition && (enable = !0);
                        });
                    }), enable;
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(QnaTeachQnaComponent.prototype, "termDefinitionsDisabledBeforeResubmissionTooltipConfig", {
                get: function() {
                    return {
                        tooltipArrowPosition: constants.xI.arrowBottomLeft,
                        tooltipShowOnFocus: !0,
                        tooltipDescription: this.localizationService.get("QnaTooling_TeachQna_QuestionChanged_MustResubmit_Warning"),
                        isTooltipForModalDialog: !0,
                        tooltipDelay: 0,
                        tooltipHideDelay: 0
                    };
                },
                enumerable: !1,
                configurable: !0
            }), QnaTeachQnaComponent.prototype.submitQuestion = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.handleAttemptToLeave() ];

                          case 1:
                            return _a.sent() ? [ 4, this.submitQuestionWithoutConfirmation(!1) ] : [ 2 ];

                          case 2:
                            return _a.sent(), [ 2 ];
                        }
                    });
                });
            }, QnaTeachQnaComponent.prototype.setupPipes = function() {
                var _this = this;
                _.isEmpty(this.entryQuestion) || this.isSubmitButtonEnabled$.pipe((0, filter.h)(function(value) {
                    return !!value;
                }), (0, take.q)(1), (0, withLatestFrom.M)(this.trainingStage$)).subscribe(function(_a) {
                    0 === _a[1] && setTimeout(function() {
                        _this.submitQuestion();
                    });
                }), this.isTrainingStarted$ = this.trainingStage$.pipe((0, takeUntil.R)(this.destroy$), (0, 
                map.U)(function(stageValue) {
                    return null != stageValue && 0 !== stageValue;
                })), (0, combineLatest.aj)(this.trainingStage$, this.isDisplayedQuestionChangedSinceSubmission$, this.grippersDefinedNotInOriginalResultSpan$).pipe((0, 
                takeUntil.R)(this.destroy$), (0, map.U)(function(_a) {
                    return 0 === _a[0] || !!_a[1] || !!_a[2];
                })).subscribe(function(newValue) {
                    return _this.shouldShowSubmit$.next(newValue);
                }), this.areTermDefinitionsDisabledBeforeResubmission$ = (0, combineLatest.aj)(this.trainingStage$, this.shouldShowSubmit$).pipe((0, 
                takeUntil.R)(this.destroy$), (0, map.U)(function(_a) {
                    return 0 !== _a[0] && _a[1];
                }));
            }, Object.defineProperty(QnaTeachQnaComponent.prototype, "mainQuestionInputBoxV2", {
                get: function() {
                    return this.mainQuestionInputV2Lazy && this.mainQuestionInputV2Lazy.inputBox;
                },
                enumerable: !1,
                configurable: !0
            }), QnaTeachQnaComponent.prototype.submitQuestionWithoutConfirmation = function(isFromResubmitWithCorrectedUtterance) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var notInOriginalResultUserSpan, questionToSubmit, userDefinedSpan, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return this.telemetryService.logChildEvent(this.openingTelemetryEvent, QnAToolingTeachQnaSubmitQuestion, {
                                withSpanBoundaryChange: !!this.grippersDefinedNotInOriginalResultSpan$.value,
                                isResubmitOfCorrectedUtterance: !!isFromResubmitWithCorrectedUtterance
                            }), notInOriginalResultUserSpan = this.grippersDefinedNotInOriginalResultSpan$.value ? _.cloneDeep(this.grippersDefinedSimpleSpan) : void 0, 
                            0 === this.trainingStage$.value ? [ 3, 2 ] : [ 4, this.resetAllTrainingInfo() ];

                          case 1:
                            _a.sent(), _a.label = 2;

                          case 2:
                            return this.underTrainingQuestionOriginalSimpleUserSpan = notInOriginalResultUserSpan, 
                            questionToSubmit = this.getMainQuestionBoxDisplayedUtterance(), this.underTrainingQuestionUntrimmed = questionToSubmit, 
                            debug.fF.assert(function() {
                                return !_.isEmpty(_.trim(_this.underTrainingQuestionUntrimmed));
                            }, "Expect this not be called for submit if currently displayed question is empty"), 
                            this.trainingStage$.next(1), this.linguisticSchemaAtCurrentQuestionStart = _.cloneDeep(this.linguisticSchemaSaved), 
                            this.linguisticSchemaForPreview = _.cloneDeep(this.linguisticSchemaSaved), userDefinedSpan = this.getUserDefinedSpan(), 
                            this.interpretMainQuestion(questionToSubmit, !1, userDefinedSpan, !0), [ 2 ];
                        }
                    });
                });
            }, QnaTeachQnaComponent.prototype.clearQuestion = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.handleAttemptToLeave() ];

                          case 1:
                            return _a.sent() ? [ 4, this.resetAllTrainingInfo() ] : [ 3, 3 ];

                          case 2:
                            _a.sent(), this.viewModel.inputViewModel.linguisticInfo = void 0, this.mainQuestionInputBoxV2.showGrippersAroundTextRange(void 0), 
                            this.mainQuestionInputBoxV2.clearUtterance(), _a.label = 3;

                          case 3:
                            return [ 2 ];
                        }
                    });
                });
            }, QnaTeachQnaComponent.prototype.shouldShowErrorForTermDefinition = function(trainUnit) {
                return trainUnit && 2 === trainUnit.definitionApplyInfo.isLastPreviewedDefinitionValid;
            }, QnaTeachQnaComponent.prototype.activateDefinitionGroup = function(group, triggeredFromSyncToGrippers, enforceFocus) {
                this.activeDefinitionGroup = group, this.activeTrainingUnit = getActiveTrainingUnit(this.activeDefinitionGroup, this.activeTrainingUnit), 
                enforceFocus && this.focusTrainingUnit(this.activeTrainingUnit), triggeredFromSyncToGrippers || this.syncGrippersToActiveTrainUnit();
            }, QnaTeachQnaComponent.prototype.isActiveDefinitionGroup = function(group) {
                return group === this.activeDefinitionGroup;
            }, QnaTeachQnaComponent.prototype.isActiveTrainingUnit = function(trainingUnit) {
                return trainingUnit === this.activeTrainingUnit;
            }, QnaTeachQnaComponent.prototype.capitalizeFirstChar = function(str) {
                return _.isEmpty(str) ? str : str[0].toUpperCase() + str.substr(1);
            }, QnaTeachQnaComponent.prototype.getNotReadyToTrainGroupDescriptionHtml = function(trainingGroup) {
                debug.fF.assert(function() {
                    return !trainingGroup.isReadyForTraining;
                }, "This should be called only for groups with isReadyForTraining===false");
                var capitalizedWithSpanTag = qna_teach_qna_component_withSpanTag(this.capitalizeFirstChar(trainingGroup.text));
                return this.localizationService.format("QnaTooling_TeachQna_CannotDefine_BecauseOfDependency", [ capitalizedWithSpanTag ]);
            }, QnaTeachQnaComponent.prototype.getNotReadyToTrainGroupTooltipConfig = function(trainingGroup) {
                return {
                    tooltipArrowPosition: constants.xI.arrowTopMiddle,
                    tooltipShowOnFocus: !0,
                    tooltipDescription: this.localizationService.format("QnaTooling_TeachQna_CannotDefine_BecauseOfDependancy_Adjective_Details", [ this.capitalizeFirstChar(trainingGroup.text) ]),
                    isTooltipForModalDialog: !0
                };
            }, QnaTeachQnaComponent.prototype.getNotSupportedToTrainGroupDescriptionHtml = function() {
                var _this = this, group = this.viewModel.trainingUnsupportedTermsGroup;
                if (group && !_.isEmpty(group.spans)) {
                    var termsCount = _.size(group.spans), termTexts = _.map(group.spans, function(span) {
                        return _this.underTrainingQuestionUntrimmed.substring(span.startIndex, span.endExcludingIndex);
                    });
                    if (1 === termsCount) return this.localizationService.format("QnaTooling_TeachQna_CannotDefine_BecauseOfType", [ qna_teach_qna_component_withSpanTag(this.capitalizeFirstChar(termTexts[0])) ]);
                    var listJoinSeparator = this.localizationService.get("ListJoin_Separator"), joinedTermsExceptLast = _.map(_.take(termTexts, termsCount - 1), function(termText, index) {
                        return qna_teach_qna_component_withSpanTag(0 === index ? _this.capitalizeFirstChar(termText) : termText);
                    }).join(listJoinSeparator), lastTerm = qna_teach_qna_component_withSpanTag(termTexts[termsCount - 1]), listOfWords = this.localizationService.format("AndConjunction", [ joinedTermsExceptLast, lastTerm ]);
                    return this.localizationService.format("QnaTooling_TeachQna_CannotDefine_BecauseOfType", [ listOfWords ]);
                }
            }, QnaTeachQnaComponent.prototype.getNotSupportedToTrainGroupTooltipConfig = function() {
                return {
                    tooltipArrowPosition: constants.xI.arrowTopMiddle,
                    tooltipShowOnFocus: !0,
                    tooltipDescription: this.localizationService.get("QnaTooling_TeachQna_CannotDefine_BecauseOfType_Details"),
                    isTooltipForModalDialog: !0
                };
            }, QnaTeachQnaComponent.prototype.getTrainUnitDefinitionInvalidToolTipConfig = function() {
                return {
                    tooltipArrowPosition: constants.xI.arrowBottomRight,
                    tooltipShowOnFocus: !0,
                    tooltipDescription: this.localizationService.get("QnaTooling_TeachQna_TermDefinitionInvalid"),
                    isTooltipForModalDialog: !0,
                    tooltipHideDelay: 800,
                    tooltipHyperlinkText: this.localizationService.get("Generic_LearnMore"),
                    tooltipHyperlinkUrl: "https://go.microsoft.com/fwlink/?linkid=2102467"
                };
            }, QnaTeachQnaComponent.prototype.getDefineUnknownTermsToolTipConfig = function() {
                return {
                    tooltipArrowPosition: constants.xI.arrowBottomLeft,
                    tooltipShowOnFocus: !0,
                    tooltipDescription: this.localizationService.get("QnaTooling_TeachQna_DefineUnknownTerms_Details"),
                    isTooltipForModalDialog: !0
                };
            }, QnaTeachQnaComponent.prototype.handleAttemptToLeave = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var leave;
                    return (0, tslib_es6.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return leave = !0, JSON.stringify(this.linguisticSchemaForPreview) === JSON.stringify(this.linguisticSchemaSaved) ? [ 3, 8 ] : (this.showAllMouseActionBlocker.emit(!0), 
                            [ 4, this.promptToSave() ]);

                          case 1:
                            switch (_b.sent()) {
                              case 0:
                                return [ 3, 2 ];

                              case 1:
                                return [ 3, 4 ];

                              case 2:
                                return [ 3, 5 ];
                            }
                            return [ 3, 6 ];

                          case 2:
                            return this.linguisticSchemaSaved = this.linguisticSchemaForPreview, [ 4, this.setLuciaLinguisticSchema(JSON.stringify(this.linguisticSchemaSaved)) ];

                          case 3:
                            return _b.sent(), this.savedLinguisticSchemaUpdated.emit(this.linguisticSchemaSaved), 
                            [ 3, 7 ];

                          case 4:
                            return [ 3, 7 ];

                          case 5:
                            return leave = !1, [ 3, 7 ];

                          case 6:
                            return debug.fF.assertFail("unhandled case of CloseDialogResponse"), [ 3, 7 ];

                          case 7:
                            this.showAllMouseActionBlocker.emit(!1), _b.label = 8;

                          case 8:
                            return leave && this.recordQuestionTermDefinitionsResolutionTelemetry(), [ 2, leave ];
                        }
                    });
                });
            }, QnaTeachQnaComponent.prototype.onQuestionBoxGrippersDefinedTextRangeChanged = function(span) {
                _.isEqual(this.grippersDefinedSimpleSpan, span) || (this.grippersDefinedSimpleSpan = _.cloneDeep(span), 
                this.syncActiveTrainGroupUnitToGrippers());
            }, QnaTeachQnaComponent.prototype.onQuestionInputBoxEnterKeyPressed = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return this.shouldShowSubmit$.value && this.isSubmitButtonEnabled$.value ? [ 4, this.submitQuestion() ] : [ 3, 2 ];

                          case 1:
                            _a.sent(), _a.label = 2;

                          case 2:
                            return [ 2 ];
                        }
                    });
                });
            }, QnaTeachQnaComponent.prototype.onMainQuestionInputBoxInitialized = function() {
                var _this = this;
                debug.fF.assert(function() {
                    return !_this.mainInputBoxInitializationHandled;
                }, "onQuestionInputBoxInitialized should be called only once"), debug.fF.assertValue(this.mainQuestionInputV2Lazy.inputBox, "when this is called this.mainQuestionInputV2Lazy.inputBox should be defined"), 
                this.mainInputBoxInitializationHandled = !0, (0, combineLatest.aj)(this.shouldShowSubmit$, this.mainQuestionInputV2Lazy.inputBox.distinctDisplayedUtterance$).pipe((0, 
                takeUntil.R)(this.destroy$)).subscribe(function(_a) {
                    var shouldEnable = _a[0] && !_.isEmpty(_a[1]);
                    _this.updateMainQuestionAutoCompleteUnknownSpanTitle(shouldEnable), _this.isSubmitButtonEnabled$.next(shouldEnable);
                }), this.mainQuestionInputV2Lazy.inputBox.distinctDisplayedUtterance$.pipe((0, takeUntil.R)(this.destroy$)).subscribe(function(utterance) {
                    _this.isClearButtonEnabled$.next(!_.isEmpty(utterance));
                });
            }, QnaTeachQnaComponent.prototype.promptToSave = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, showConfirmationDialogInCenter(this.dialogService, {
                                title: this.localizationService.get("QnaTooling_SavePrompt_BeforeLeaveConfirmation_Title"),
                                message: "",
                                okButtonText: this.localizationService.get("PBI_Button_Label_Save"),
                                cancelButtonText: this.localizationService.get("Settings_DiscardButtonText")
                            }, {
                                autoFocus: !0,
                                disableClose: !0,
                                maxWidth: 600,
                                panelClass: [ "teachQnaConfirmationDialogPanel", "themeableElement" ]
                            }).afterClosed().toPromise() ];

                          case 1:
                            switch (_a.sent()) {
                              case 1:
                                return [ 2, this.promiseFactory.resolve(0) ];

                              case 2:
                                return [ 2, this.promiseFactory.resolve(1) ];

                              case 3:
                                return [ 2, this.promiseFactory.resolve(2) ];

                              default:
                                return debug.fF.assertFail("unhandled case for SimpleConfirmationDialogResult value"), 
                                [ 2, this.promiseFactory.resolve(2) ];
                            }
                            return [ 2 ];
                        }
                    });
                });
            }, QnaTeachQnaComponent.prototype.onQuestionInterpretResultAvailable = function(result) {
                var _this = this;
                if (result && 1 !== result.resultType) {
                    if (this.entryQuestionHandledEmitted || _.isEmpty(this.entryQuestion) || 0 === result.resultType || (_.trim(result.utterance) !== _.trim(this.entryQuestion) || 1 === this.trainingStage$.value) && (this.entryQuestionHandled.emit(), 
                    this.entryQuestionHandledEmitted = !0), 0 === result.resultType || 4 === result.resultType) {
                        if (0 !== this.trainingStage$.value) {
                            var currentDisplayedTrimed = _.trim(this.getMainQuestionBoxDisplayedUtterance()), previousDisplayedTrimed = _.trim(this.underTrainingQuestionUntrimmed);
                            this.isDisplayedQuestionChangedSinceSubmission$.next(currentDisplayedTrimed !== previousDisplayedTrimed);
                        }
                        this.isDisplayedQuestionChangedSinceSubmission$.value || 0 === this.trainingStage$.value || (this.viewModel.visualViewModel.isLoading = !0);
                    }
                    if (0 !== result.resultType && (4 === result.resultType && _.forEach(this.viewModel.trainingGroups, function(group) {
                        _.forEach(group.trainUnits, function(unit) {
                            return unit.isInCurrentResultSpans = !1;
                        });
                    }), 0 !== this.trainingStage$.value && (this.viewModel.visualViewModel.isLoading = !1, 
                    _.trim(result.utterance) === _.trim(this.underTrainingQuestionUntrimmed)))) {
                        this.checkToUpdateAllSpansStartIndices(result.utterance), 1 === this.trainingStage$.value && (this.underTrainingQuestionOriginalSimpleSpans = _.map(result && result.termBindingsTrainingInfo && result.termBindingsTrainingInfo.spans, function(span) {
                            return function(span) {
                                if (span) return {
                                    startIndex: span.startIndex,
                                    endExcludingIndex: span.endExcludingIndex
                                };
                            }(span);
                        }));
                        var replaceAllTrainUnits = 1 === this.trainingStage$.value;
                        if (this.viewModel.currentQuestionHasSpansToTrain = this.updateTrainingUnits(result, replaceAllTrainUnits, replaceAllTrainUnits), 
                        this.trainingStage$.next(2), this.syncActiveTrainGroupUnitToGrippers(), !result.visualContainer) return this.viewModel.visualViewModel.visual = void 0, 
                        void (this.viewModel.visualViewModel.restatement = void 0);
                        var resultVisualContainer = result.visualContainer;
                        resultVisualContainer.name = "teachQnaVisualContainer";
                        var visual = this.viewModel.visualViewModel.visual;
                        if (visual) {
                            var singleVisual = visual.config && visual.config.singleVisual;
                            singleVisual.visualType = resultVisualContainer.config.singleVisual.visualType, 
                            singleVisual.query = resultVisualContainer.config.singleVisual.query, visual.filters = resultVisualContainer.filters;
                        } else this.viewModel.visualViewModel.visual = resultVisualContainer;
                        this.viewModel.visualViewModel.restatement = result.restatement, setTimeout(function() {
                            _this.eventBridge.publishToChannel(events.jCS, {
                                affectContainer: function(vc) {
                                    return vc.name === resultVisualContainer.name;
                                }
                            }), _this.resize();
                        });
                    }
                }
            }, QnaTeachQnaComponent.prototype.onTrainUnitResultAvailable = function(trainUnit, result) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var defApplyInfo, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return result ? (0 !== result.resultType && 4 !== result.resultType || (trainUnit.isDefinitionDifferentFromLastSaved = trainUnit.definitionApplyInfo.lastSavedDefinitionTrimmed !== _.trim(this.getTrainUnitDisplayedUtterance(trainUnit))), 
                            0 === result.resultType ? [ 2 ] : (null != trainUnit.definitionApplyInfo.delayApplyTimeout && (clearTimeout(trainUnit.definitionApplyInfo.delayApplyTimeout), 
                            trainUnit.definitionApplyInfo.delayApplyTimeout = void 0), trainUnit.definitionApplyInfo.shouldSaveResultImmediately ? [ 3, 1 ] : (trainUnit.definitionApplyInfo.delayedToApplyResult = result, 
                            trainUnit.definitionApplyInfo.delayApplyTimeout = setTimeout(function() {
                                clearTimeout(trainUnit.definitionApplyInfo.delayApplyTimeout), trainUnit.definitionApplyInfo.delayApplyTimeout = void 0, 
                                _.trim(trainUnit.definitionApplyInfo.delayedToApplyResult.utterance) === _.trim(_this.getTrainUnitDisplayedUtterance(trainUnit)) && (_this.lastPreviewPromise = _this.previewWithNewTermDefinitionsResult([ {
                                    unit: trainUnit,
                                    result: trainUnit.definitionApplyInfo.delayedToApplyResult
                                } ], void 0));
                            }, 500), [ 3, 3 ]))) : [ 2 ];

                          case 1:
                            return [ 4, this.previewWithNewTermDefinitionsResult([ {
                                unit: trainUnit,
                                result
                            } ], void 0) ];

                          case 2:
                            _a.sent(), this.linguisticSchemaSaved = this.linguisticSchemaForPreview, this.savedLinguisticSchemaUpdated.emit(this.linguisticSchemaSaved), 
                            (defApplyInfo = trainUnit.definitionApplyInfo).lastSavedDefinitionTrimmed = defApplyInfo.lastPreviewedDefinitionTrimmed, 
                            defApplyInfo.isLastSavedDefinitionValid = defApplyInfo.isLastPreviewedDefinitionValid, 
                            _a.label = 3;

                          case 3:
                            return [ 2 ];
                        }
                    });
                });
            }, QnaTeachQnaComponent.prototype.updateMainQuestionAutoCompleteUnknownSpanTitle = function(canSubmit) {
                var _a, _b, _c, unknownSpanHeaderConfig = null === (_c = null === (_b = null === (_a = this.viewModel.inputViewModel) || void 0 === _a ? void 0 : _a.configs) || void 0 === _b ? void 0 : _b.spanDropdownHeaderConfig) || void 0 === _c ? void 0 : _c.unknownSpanHeaderConfig;
                debug.fF.assertValue(unknownSpanHeaderConfig, "Expect this.viewModel.inputViewModel.configs.spanDropdownHeaderConfig.unknownSpanHeaderConfig has already been defined now."), 
                debug.fF.assert(function() {
                    return "textOnlyHeader" === unknownSpanHeaderConfig.actionType;
                }, "Expect the main question box unknownSpanHeaderConfig.actionType to be TextOnlyHeader");
                var originalConfigs = _.cloneDeep(this.viewModel.inputViewModel.configs);
                originalConfigs.spanDropdownHeaderConfig.unknownSpanHeaderConfig.textOnlyTemplate = canSubmit ? {
                    template: "Qna_AutoComplete_SelectSubmitToDefineTermLabelText",
                    variables: [ {
                        text: this.localizationService.get("Submit"),
                        type: 0,
                        isBold: !0
                    }, {
                        type: 1,
                        isBold: !0
                    } ]
                } : {
                    template: "Qna_AutoComplete_DefineTermInNextSectionLabelText",
                    variables: [ {
                        type: 1,
                        isBold: !0
                    } ]
                }, this.viewModel.inputViewModel.configs = originalConfigs;
            }, QnaTeachQnaComponent.prototype.checkToUpdateAllSpansStartIndices = function(newUtterance) {
                var _this = this;
                debug.fF.assert(function() {
                    return _.trim(_this.underTrainingQuestionUntrimmed) === _.trim(newUtterance);
                }, "Expect this be called only when this.underTrainingQuestionUntrimmed matches newUtterance after trimming");
                var originalUtteranceLeadingSpaces = _.size(this.underTrainingQuestionUntrimmed) - _.size(_.trimStart(this.underTrainingQuestionUntrimmed)), newUtteranceLeadingSpaces = _.size(newUtterance) - _.size(_.trimStart(newUtterance));
                if (originalUtteranceLeadingSpaces !== newUtteranceLeadingSpaces) {
                    this.underTrainingQuestionUntrimmed = newUtterance;
                    var difference = newUtteranceLeadingSpaces - originalUtteranceLeadingSpaces;
                    _.forEach(this.viewModel.trainingGroups, function(group) {
                        group.span.startIndex += difference, group.span.endExcludingIndex += difference;
                    }), _.forEach(this.viewModel.trainingUnsupportedTermsGroup && this.viewModel.trainingUnsupportedTermsGroup.spans, function(span) {
                        span.startIndex += difference, span.endExcludingIndex += difference;
                    }), this.activeTrainingUnit && (this.activeTrainingUnit.span.startIndex += difference, 
                    this.activeTrainingUnit.span.endExcludingIndex += difference), this.grippersDefinedSimpleSpan && (this.grippersDefinedSimpleSpan.startIndex += difference, 
                    this.grippersDefinedSimpleSpan.endExcludingIndex += difference), _.forEach(this.underTrainingQuestionOriginalSimpleSpans, function(simpleSpan) {
                        simpleSpan.startIndex += difference, simpleSpan.endExcludingIndex += difference;
                    });
                }
            }, QnaTeachQnaComponent.prototype.recordQuestionTermDefinitionsResolutionTelemetry = function() {
                if (!_.isEmpty(this.viewModel.trainingGroups) || this.viewModel.trainingUnsupportedTermsGroup && !_.isEmpty(this.viewModel.trainingUnsupportedTermsGroup.spans)) {
                    var unsupportedCount = _.size(this.viewModel.trainingUnsupportedTermsGroup && this.viewModel.trainingUnsupportedTermsGroup.spans), cannotDefinedYetCount = _.size(_.filter(this.viewModel.trainingGroups, function(group) {
                        return !group.isReadyForTraining;
                    })), typeAndInvalidDefinitionCountDictionary = {}, typeAndResolvedCountDictionary = {}, typeAndSavedValidCountDictionary = {};
                    _.forEach(this.viewModel.trainingGroups, function(group) {
                        _.forEach(group.trainUnits, function(unit) {
                            debug.fF.assert(function() {
                                return !_.isEmpty(unit.span.inferredTermBindings);
                            }, "Expect the span of a train unit always have InferredTermBindings");
                            var typeString = function(type) {
                                switch (type) {
                                  case 0:
                                    return "adjRelation";

                                  case 1:
                                    return "noun";

                                  case 2:
                                    return "roleNoun";

                                  case 3:
                                    return "relationWhen";

                                  case 4:
                                    return "relationWhere";

                                  case 5:
                                    return "roleQuantity";

                                  case 6:
                                    return "roleAmount";

                                  case 7:
                                    return "any";

                                  default:
                                    debug.fF.assertFail("Forgot to handle InferredTermBindingType " + type);
                                }
                            }(unit.span.inferredTermBindings[0].inferredBindingType);
                            typeString && (1 === unit.definitionApplyInfo.isLastPreviewedDefinitionValid ? (incrementOne(typeAndResolvedCountDictionary, typeString), 
                            unit.definitionApplyInfo.lastSavedDefinitionTrimmed === unit.definitionApplyInfo.lastPreviewedDefinitionTrimmed && incrementOne(typeAndSavedValidCountDictionary, typeString)) : 2 === unit.definitionApplyInfo.isLastPreviewedDefinitionValid && incrementOne(typeAndInvalidDefinitionCountDictionary, typeString));
                        });
                    });
                    var termTypeToResolvedAndSavedCountMappingsString = _.map(typeAndResolvedCountDictionary, function(resolvedCount, typeString) {
                        var savedCount = typeAndSavedValidCountDictionary[typeString];
                        return null == savedCount && (savedCount = 0), "".concat(typeString, ":").concat(resolvedCount, ":").concat(savedCount);
                    }).join(" "), termTypeToUnresolvedCountMappingsString = _.map(typeAndInvalidDefinitionCountDictionary, function(count, typeString) {
                        return "".concat(typeString, ":").concat(count);
                    }).join(" ");
                    this.telemetryService.logChildEvent(this.openingTelemetryEvent, QnAToolingTeachQnaTermResolutionInfoOfSubmittedQuestion, {
                        doesQuestionStillHaveUndefinedTerms: this.viewModel.currentQuestionHasSpansToTrain,
                        termTypeToResolvedAndSavedCountMappingsList: termTypeToResolvedAndSavedCountMappingsString,
                        termTypeToUnresolvedCountMappingsList: termTypeToUnresolvedCountMappingsString,
                        cannotDefineYetTermsCount: cannotDefinedYetCount,
                        definitionNotSupportedTermsCount: unsupportedCount
                    });
                }
            }, QnaTeachQnaComponent.prototype.getUserDefinedSpan = function() {
                var userDefinedSpan, matchingUnit, _this = this;
                if (this.grippersDefinedNotInOriginalResultSpan$.value ? (debug.fF.assert(function() {
                    return !!_this.grippersDefinedSimpleSpan;
                }, "when grippersDefinedSpanNotInOriginalResultSpans is true, this.grippersDefinedSimpleSpan must be defined"), 
                this.grippersDefinedSimpleSpan && (userDefinedSpan = {
                    startIndex: this.grippersDefinedSimpleSpan.startIndex,
                    endExcludingIndex: this.grippersDefinedSimpleSpan.endExcludingIndex,
                    inferredTerm: void 0
                })) : this.underTrainingQuestionOriginalSimpleUserSpan && (userDefinedSpan = {
                    startIndex: this.underTrainingQuestionOriginalSimpleUserSpan.startIndex,
                    endExcludingIndex: this.underTrainingQuestionOriginalSimpleUserSpan.endExcludingIndex,
                    inferredTerm: void 0
                }), userDefinedSpan) return _.forEach(this.viewModel.trainingGroups, function(group) {
                    _.forEach(group.trainUnits, function(unit) {
                        unit.span.startIndex !== userDefinedSpan.startIndex || unit.span.endExcludingIndex !== userDefinedSpan.endExcludingIndex || (matchingUnit = unit);
                    });
                }), matchingUnit ? 1 !== matchingUnit.definitionApplyInfo.isLastPreviewedDefinitionValid ? (userDefinedSpan.inferredTerm = this.getInferredTermBinding(matchingUnit), 
                userDefinedSpan) : void 0 : (userDefinedSpan.inferredTerm = {
                    inferredBindingType: 7,
                    definedTerm: ""
                }, userDefinedSpan);
            }, QnaTeachQnaComponent.prototype.syncActiveTrainGroupUnitToGrippers = function() {
                var _this = this;
                if (0 !== this.trainingStage$.value && 1 !== this.trainingStage$.value) if (this.grippersDefinedSimpleSpan && !_.find(this.underTrainingQuestionOriginalSimpleSpans, function(originalSpan) {
                    return _.isEqual(originalSpan, _this.grippersDefinedSimpleSpan);
                })) this.grippersDefinedNotInOriginalResultSpan$.next(!0), this.activeDefinitionGroup = void 0, 
                this.activeTrainingUnit = void 0; else if (this.grippersDefinedNotInOriginalResultSpan$.next(!1), 
                this.grippersDefinedSimpleSpan) {
                    var matchingGroup = _.find(this.viewModel.trainingGroups, function(group) {
                        return group.span.startIndex === _this.grippersDefinedSimpleSpan.startIndex && group.span.endExcludingIndex === _this.grippersDefinedSimpleSpan.endExcludingIndex;
                    });
                    matchingGroup ? this.activateDefinitionGroup(matchingGroup, !0, !1) : (this.activeTrainingUnit = void 0, 
                    this.activeDefinitionGroup = void 0);
                }
            }, QnaTeachQnaComponent.prototype.syncGrippersToActiveTrainUnit = function() {
                var span;
                this.viewModel.visualViewModel.isLoading || (this.activeTrainingUnit ? span = this.activeTrainingUnit.isInCurrentResultSpans ? _.cloneDeep(this.activeTrainingUnit.span) : void 0 : this.activeDefinitionGroup === this.viewModel.trainingUnsupportedTermsGroup ? span = void 0 : (debug.fF.assertValue(this.activeDefinitionGroup, "Expect this.activeDefinitionGroup to be defined"), 
                span = _.cloneDeep(this.activeDefinitionGroup.span)), this.mainQuestionInputBoxV2.showGrippersAroundTextRange(span ? {
                    startIndex: span.startIndex,
                    endExcludingIndex: span.endExcludingIndex
                } : void 0), this.grippersDefinedSimpleSpan = span ? {
                    startIndex: span.startIndex,
                    endExcludingIndex: span.endExcludingIndex
                } : void 0);
            }, QnaTeachQnaComponent.prototype.resetAllTrainingInfo = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return this.trainUnitsDestroy$.next(), _.forEach(this.viewModel && this.viewModel.trainingGroups, function(group) {
                                _.forEach(group.trainUnits, function(unit) {
                                    unit.definitionApplyInfo && null != unit.definitionApplyInfo.delayApplyTimeout && (clearTimeout(unit.definitionApplyInfo.delayApplyTimeout), 
                                    unit.definitionApplyInfo.delayApplyTimeout = void 0);
                                });
                            }), JSON.stringify(this.linguisticSchemaSaved) === JSON.stringify(this.linguisticSchemaForPreview) ? [ 3, 2 ] : [ 4, this.setLuciaLinguisticSchema(JSON.stringify(this.linguisticSchemaSaved)) ];

                          case 1:
                            _a.sent(), _a.label = 2;

                          case 2:
                            return this.viewModel.trainingGroups = [], this.viewModel.visualViewModel.visual = void 0, 
                            this.viewModel.visualViewModel.restatement = void 0, this.trainingStage$.next(0), 
                            this.underTrainingQuestionUntrimmed = "", this.underTrainingQuestionOriginalSimpleSpans = void 0, 
                            this.underTrainingQuestionOriginalSimpleUserSpan = void 0, this.grippersDefinedSimpleSpan = void 0, 
                            this.grippersDefinedNotInOriginalResultSpan$.next(!1), this.linguisticSchemaAtCurrentQuestionStart = this.linguisticSchemaSaved, 
                            this.linguisticSchemaForPreview = this.linguisticSchemaSaved, [ 2 ];
                        }
                    });
                });
            }, QnaTeachQnaComponent.prototype.createTrainUnitCustomDataTagString = function(groupIndex, unitIndex) {
                return JSON.stringify({
                    groupIndex,
                    unitIndex
                });
            }, QnaTeachQnaComponent.prototype.parseTrainUnitCustomDataTagString = function(tag) {
                if (tag) {
                    var parsedValue = JSON.parse(tag);
                    return null != parsedValue.groupIndex && null != parsedValue.unitIndex ? parsedValue : void 0;
                }
            }, QnaTeachQnaComponent.prototype.getCurrentFocusedTrainUnit = function() {
                var unit, _this = this;
                return _.forEach(this.viewModel && this.viewModel.trainingGroups, function(group) {
                    _.forEach(group.trainUnits, function(trainUnit) {
                        _this.doesTrainUnitHasFocus(trainUnit) && (unit = trainUnit);
                    });
                }), unit;
            }, QnaTeachQnaComponent.prototype.doesTrainUnitHasFocus = function(unit) {
                var trainUnitElementRefsIndex = this.getTrainUnitElementRefsIndex(unit);
                return -1 !== trainUnitElementRefsIndex && this.trainUnitInputBoxElementRefs[trainUnitElementRefsIndex].nativeElement.contains(document.activeElement);
            }, QnaTeachQnaComponent.prototype.focusTrainingUnit = function(trainingUnit) {
                if (trainingUnit) {
                    var unitInputBox = this.getTrainUnitInputBoxV2(trainingUnit);
                    unitInputBox ? unitInputBox.focus() : trainingUnit.inputViewModel.configs.autoFocusOnInit = !0;
                }
            }, QnaTeachQnaComponent.prototype.getTrainUnitElementRefsIndex = function(unit) {
                var _this = this, groupIndex = this.findUnitGroupIndex(unit);
                return debug.fF.assert(function() {
                    return groupIndex >= 0;
                }, "the unit should have a parent group"), _.findIndex(this.trainUnitInputBoxElementRefs, function(unitInputElementRef) {
                    var indicesTagString = unitInputElementRef.nativeElement.getAttribute("data-indices"), indicesObject = _this.parseTrainUnitCustomDataTagString(indicesTagString);
                    if (indicesObject.groupIndex === groupIndex) {
                        var unitIndex = _.findIndex(_this.viewModel.trainingGroups[groupIndex].trainUnits, unit);
                        if (indicesObject.unitIndex === unitIndex) return !0;
                    }
                    return !1;
                });
            }, QnaTeachQnaComponent.prototype.findUnitGroupIndex = function(unit) {
                var resultGroupIndex = -1;
                return _.forEach(this.viewModel && this.viewModel.trainingGroups, function(group, groupIndex) {
                    _.forEach(group.trainUnits, function(trainUnit) {
                        trainUnit !== unit || (resultGroupIndex = groupIndex);
                    });
                }), resultGroupIndex;
            }, QnaTeachQnaComponent.prototype.findUnitGroup = function(unit) {
                var groupIndex = this.findUnitGroupIndex(unit);
                if (groupIndex >= 0) return this.viewModel.trainingGroups[groupIndex];
            }, QnaTeachQnaComponent.prototype.updateTrainingUnits = function(newResult, replaceAll, hardResetActiveGroupAndUnit) {
                var _a, _this = this;
                replaceAll && this.trainUnitsDestroy$.next(), !replaceAll && this.viewModel.trainingGroups || (this.viewModel.trainingGroups = []), 
                !replaceAll && this.viewModel.trainingUnsupportedTermsGroup && this.viewModel.trainingUnsupportedTermsGroup.spans || (this.viewModel.trainingUnsupportedTermsGroup = {
                    spans: []
                });
                var originalInputBoxFocusedUnit = this.getCurrentFocusedTrainUnit();
                debug.fF.assert(function() {
                    return _.trim(newResult.utterance) === _.trim(_this.underTrainingQuestionUntrimmed);
                }, "We should always train against last submitted question");
                var newResultSpansToTrain = _.filter(null === (_a = null == newResult ? void 0 : newResult.termBindingsTrainingInfo) || void 0 === _a ? void 0 : _a.spans, function(span) {
                    return _this.isTermToTrain(span);
                });
                return this.updateExistingTrainingUnits(newResult, newResultSpansToTrain), _.remove(this.viewModel.trainingUnsupportedTermsGroup.spans, function(unsupportedTerm) {
                    return !_.some(newResultSpansToTrain, function(span) {
                        return span.startIndex === unsupportedTerm.startIndex && span.endExcludingIndex === unsupportedTerm.endExcludingIndex;
                    });
                }), this.addNewTrainingUnits(newResult, newResultSpansToTrain), hardResetActiveGroupAndUnit ? this.hardResetActiveGroupAndUnit() : this.softResetActiveGroupAndUnit(originalInputBoxFocusedUnit), 
                !_.isEmpty(newResultSpansToTrain);
            }, QnaTeachQnaComponent.prototype.isTermToTrain = function(span) {
                return "error" === span.state || !_.isEmpty(span.inferredTermBindings);
            }, QnaTeachQnaComponent.prototype.hardResetActiveGroupAndUnit = function() {
                var allGroups = _.concat(this.viewModel.trainingGroups, this.viewModel.trainingUnsupportedTermsGroup);
                this.activeDefinitionGroup = function(allGroups, previousActiveGroup) {
                    if (previousActiveGroup && _.includes(allGroups, previousActiveGroup)) return previousActiveGroup;
                    var newActiveGroup = _.find(allGroups, function(group) {
                        return group && group.isReadyForTraining;
                    });
                    return newActiveGroup || (newActiveGroup = _.first(allGroups)), newActiveGroup;
                }(allGroups, this.activeDefinitionGroup), this.activeTrainingUnit = getActiveTrainingUnit(this.activeDefinitionGroup, this.activeTrainingUnit), 
                this.focusTrainingUnit(this.activeTrainingUnit), this.syncGrippersToActiveTrainUnit();
            }, QnaTeachQnaComponent.prototype.softResetActiveGroupAndUnit = function(originalInputBoxFocusedUnit) {
                var _this = this;
                if (originalInputBoxFocusedUnit) {
                    var originalInputBoxFocusedUnitCurrentGroup = this.findUnitGroup(originalInputBoxFocusedUnit);
                    originalInputBoxFocusedUnitCurrentGroup && (this.activeTrainingUnit = originalInputBoxFocusedUnit, 
                    this.activeDefinitionGroup = originalInputBoxFocusedUnitCurrentGroup, this.doesTrainUnitHasFocus(originalInputBoxFocusedUnit) || this.focusTrainingUnit(originalInputBoxFocusedUnit));
                } else if (this.activeTrainingUnit) if (this.findUnitGroup(this.activeTrainingUnit)) {
                    var containingGroup_1 = this.findUnitGroup(this.activeTrainingUnit);
                    debug.fF.assert(function() {
                        return _this.activeDefinitionGroup === containingGroup_1;
                    }, "Expect when this.activeTrainingUnit exists, its parent group should always be the activeDefinitionGroup"), 
                    this.activeDefinitionGroup = containingGroup_1;
                } else this.activeDefinitionGroup = void 0, this.activeTrainingUnit = void 0; else this.activeDefinitionGroup && (_.indexOf(this.viewModel.trainingGroups, this.activeDefinitionGroup) < 0 ? (this.activeDefinitionGroup = void 0, 
                this.activeTrainingUnit = void 0) : debug.fF.assert(function() {
                    return isATermDefinitionTrainingNotSupportedGroup(_this.activeDefinitionGroup) || _.isEmpty(_this.activeDefinitionGroup.trainUnits);
                }, "Has active group but not activue unit? The group must be a TermDefinitionTrainingNotSupportedGroup or it does not contain any train unit"));
            }, QnaTeachQnaComponent.prototype.updateExistingTrainingUnits = function(newResult, newResultSpansToTrain) {
                var _this = this, existingTrainingGroupsToRemove = [];
                _.forEach(this.viewModel.trainingGroups, function(existingTrainingGroup) {
                    var _a, existingTrainingSpan = existingTrainingGroup.span, matchingStillSpanToTrain = _.find(newResultSpansToTrain, function(currentSpanToTrain) {
                        return currentSpanToTrain.startIndex === existingTrainingSpan.startIndex && currentSpanToTrain.endExcludingIndex === existingTrainingSpan.endExcludingIndex;
                    }), currentResultTrainUnits = matchingStillSpanToTrain ? _this.getSpanTrainUnits(newResult, matchingStillSpanToTrain) : [], existingTrainUnitsToRemove = [];
                    _.forEach(existingTrainingGroup.trainUnits, function(existingUnit) {
                        var _a, matchingNewTrainUnit = _.find(currentResultTrainUnits, function(newUnit) {
                            return areInferredTermBindingKeysEqual(existingUnit.inferredBindingKey, newUnit.inferredBindingKey);
                        });
                        if (matchingNewTrainUnit) {
                            existingUnit.isInCurrentResultSpans = !0, _.isEmpty(null === (_a = newResult.termBindingsTrainingInfo) || void 0 === _a ? void 0 : _a.linguisticSchemaJson) || (_this.setLinguisticSchemaJson(existingUnit, newResult.termBindingsTrainingInfo.linguisticSchemaJson), 
                            _.isEmpty(newResult.termBindingsTrainingInfo.inferredTermMetadata) || _this.setInferredTermMetadata(existingUnit, newResult.termBindingsTrainingInfo.inferredTermMetadata));
                            var proposedDefinition = matchingNewTrainUnit.inputViewModel.initialUtterance, existingUnitInputBox = void 0, linguisticSchemaItems = _this.getInferredTermLinguisticSchemaItems(matchingNewTrainUnit);
                            _.isEmpty(linguisticSchemaItems) || _this.setInferredTermLinguisticSchemaItems(existingUnit, linguisticSchemaItems), 
                            existingUnitInputBox = _this.getTrainUnitInputBoxV2(existingUnit), _.isEmpty(_.trim(null == existingUnitInputBox ? void 0 : existingUnitInputBox.distinctDisplayedUtterance$.value)) && !_.isEmpty(_.trim(proposedDefinition)) && existingUnitInputBox.interpretUtterance({
                                utterance: proposedDefinition
                            });
                        } else 1 !== existingUnit.definitionApplyInfo.isLastPreviewedDefinitionValid && 1 !== existingUnit.definitionApplyInfo.isLastSavedDefinitionValid ? existingTrainUnitsToRemove.push(existingUnit) : existingUnit.isInCurrentResultSpans = -1 !== _.findIndex(newResult.termBindingsTrainingInfo && newResult.termBindingsTrainingInfo.spans, function(newResultSpan) {
                            return newResultSpan.startIndex === existingTrainingSpan.startIndex && newResultSpan.endExcludingIndex === existingTrainingSpan.endExcludingIndex;
                        });
                    }), existingTrainingGroup.trainUnits = _.difference(existingTrainingGroup.trainUnits, existingTrainUnitsToRemove);
                    var brandNewTrainUnits = _.filter(currentResultTrainUnits, function(currentResultUnit) {
                        return !_.find(existingTrainingGroup.trainUnits, function(existingUnit) {
                            return areInferredTermBindingKeysEqual(existingUnit.inferredBindingKey, currentResultUnit.inferredBindingKey);
                        });
                    });
                    (_a = existingTrainingGroup.trainUnits).push.apply(_a, brandNewTrainUnits || []), 
                    !matchingStillSpanToTrain && _.isEmpty(existingTrainingGroup.trainUnits) ? existingTrainingGroupsToRemove.push(existingTrainingGroup) : existingTrainingGroup.isReadyForTraining = !_.isEmpty(existingTrainingGroup.trainUnits);
                }), this.viewModel.trainingGroups = _.difference(this.viewModel.trainingGroups, existingTrainingGroupsToRemove);
            }, QnaTeachQnaComponent.prototype.addNewTrainingUnits = function(newResult, newResultSpansToTrain) {
                var _this = this, trainingGroups = this.viewModel.trainingGroups, brandNewSpansToTrain = _.filter(newResultSpansToTrain, function(newSpanToTrain) {
                    return !_.find(trainingGroups, function(trainingGroup) {
                        return trainingGroup.span.startIndex === newSpanToTrain.startIndex && trainingGroup.span.endExcludingIndex === newSpanToTrain.endExcludingIndex;
                    }) && !_.find(_this.viewModel.trainingUnsupportedTermsGroup.spans, function(existingUnsupportedSpanToTrain) {
                        return existingUnsupportedSpanToTrain.startIndex === newSpanToTrain.startIndex && existingUnsupportedSpanToTrain.endExcludingIndex === newSpanToTrain.endExcludingIndex;
                    });
                }), unsupportedBrandNewSpansToTrain = _.remove(brandNewSpansToTrain, function(span) {
                    return span.inferredTermBindingsUnsupported;
                }), allUnsupported = _.orderBy(_.concat(this.viewModel.trainingUnsupportedTermsGroup.spans, unsupportedBrandNewSpansToTrain), function(span) {
                    return span.startIndex;
                });
                this.viewModel.trainingUnsupportedTermsGroup.spans = allUnsupported;
                for (var readyForTrainingGroups = [], notReadyForTrainingGroups = [], _i = 0, brandNewSpansToTrain_1 = brandNewSpansToTrain; _i < brandNewSpansToTrain_1.length; _i++) {
                    var brandNewSpanToTrain = brandNewSpansToTrain_1[_i], group = {
                        span: _.cloneDeep(brandNewSpanToTrain),
                        text: newResult.utterance.substring(brandNewSpanToTrain.startIndex, brandNewSpanToTrain.endExcludingIndex),
                        isReadyForTraining: !_.isEmpty(brandNewSpanToTrain.inferredTermBindings),
                        trainUnits: this.getSpanTrainUnits(newResult, brandNewSpanToTrain)
                    };
                    group.isReadyForTraining ? readyForTrainingGroups.push(group) : notReadyForTrainingGroups.push(group);
                }
                trainingGroups.push.apply(trainingGroups, readyForTrainingGroups || []), trainingGroups.push.apply(trainingGroups, notReadyForTrainingGroups || []);
            }, QnaTeachQnaComponent.prototype.getSpanTrainUnits = function(result, spanToTrain) {
                var _this = this;
                if (debug.fF.assertValue(result, "result"), debug.fF.assertValue(spanToTrain, "spanToTrain"), 
                debug.fF.assert(function() {
                    return _.includes(result.termBindingsTrainingInfo && result.termBindingsTrainingInfo.spans, spanToTrain);
                }, "result.spans should contain the given spanToTrain"), spanToTrain.inferredTermBindingsUnsupported) return [];
                var inferredBindingsToDisplay = _.take(spanToTrain.inferredTermBindings, 1);
                return _.map(inferredBindingsToDisplay, function(inferredTermBinding) {
                    var binding, interpretListener = _this.interpretListenerFactory.createInterpretListener({
                        forTrainingTermBinding: !0,
                        canShowPods: !1,
                        canShowVisuals: !1,
                        canShowDidYouMean: !1,
                        models: [ createModel(dsrDataSource) ]
                    }), configs = {
                        showActionButtons: !1,
                        showPlaceholderText: !0,
                        showQuestionIcon: !1,
                        showWarningIcon: !1,
                        customPlaceholderText: inferredTermBinding.hintText,
                        showCorrectedUtterance: !1,
                        autoFocusOnInit: !1,
                        disableSendingServiceTags: !0,
                        supportTokenGrippers: !1,
                        supportsPodQueries: !1,
                        supportsInsightsQueries: !1,
                        inferUnknownModelTerms: !0,
                        customAriaLabel: _this.getTrainUnitInputAriaLabel(inferredTermBinding),
                        spanDropdownHeaderConfig: {
                            show: !1
                        },
                        commitOnDemandForcedMode: "AlwaysOff"
                    }, trainUnitViewModel = {
                        span: _.cloneDeep(spanToTrain),
                        isInCurrentResultSpans: !0,
                        definitionPrompt: inferredTermBinding.definitionPrompt,
                        prefixText: inferredTermBinding.prefixText,
                        suffixText: inferredTermBinding.suffixText,
                        inferredBindingKey: (binding = inferredTermBinding, {
                            type: binding.inferredBindingType,
                            definedTerm: binding.definedTerm,
                            definitionPrompt: binding.definitionPrompt,
                            targetRole: binding.targetRole
                        }),
                        inputViewModel: void 0,
                        isDefinitionDifferentFromLastSaved: !1,
                        metadata: inferredTermBinding.metadata,
                        definitionApplyInfo: {
                            lastPreviewedDefinitionTrimmed: "",
                            isLastPreviewedDefinitionValid: 0,
                            lastSavedDefinitionTrimmed: "",
                            isLastSavedDefinitionValid: 0,
                            shouldSaveResultImmediately: !1
                        }
                    };
                    return trainUnitViewModel.inputViewModel = {
                        entryPoint: "TeachQnaTrainUnit",
                        interpretListener,
                        qnaSupportedScopes: _this.qnaSupportedScopes,
                        presentation: {
                            useShellTheme: !0,
                            withBorder: !0,
                            backgroundColor: "#FFFFFF"
                        },
                        configs,
                        initialUtterance: inferredTermBinding.definitionText,
                        utteranceSuggestions: inferredTermBinding.alternateDefinitionTexts,
                        linguisticInfo: {
                            linguisticSchemaJson: result.termBindingsTrainingInfo && result.termBindingsTrainingInfo.linguisticSchemaJson,
                            inferredTermBinding
                        }
                    }, interpretListener.getObservable().pipe((0, takeUntil.R)(_this.trainUnitsDestroy$)).subscribe(function(result) {
                        return _this.onTrainUnitResultAvailable(trainUnitViewModel, result);
                    }), trainUnitViewModel;
                });
            }, QnaTeachQnaComponent.prototype.saveTermDefinitions = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var resultNotReceivedUnits, resultReceivedNotPreviewedUnits, allUnits, allDefinitionPreviewedUnits, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return resultNotReceivedUnits = [], resultReceivedNotPreviewedUnits = [], _.forEach(this.viewModel.trainingGroups, function(group) {
                                _.forEach(group.trainUnits, function(unit) {
                                    var displayedDefinitionTrimmed = _.trim(_this.getTrainUnitDisplayedUtterance(unit));
                                    if (unit.definitionApplyInfo.lastPreviewedDefinitionTrimmed !== displayedDefinitionTrimmed) {
                                        var delayedToApply = unit.definitionApplyInfo;
                                        if (null != delayedToApply.delayApplyTimeout) return clearTimeout(delayedToApply.delayApplyTimeout), 
                                        delayedToApply.delayApplyTimeout = void 0, _.trim(delayedToApply.delayedToApplyResult.utterance) === displayedDefinitionTrimmed ? resultReceivedNotPreviewedUnits.push({
                                            unit,
                                            result: delayedToApply.delayedToApplyResult
                                        }) : (unit.definitionApplyInfo.shouldSaveResultImmediately = !0, resultNotReceivedUnits.push(unit)), 
                                        void (delayedToApply.delayedToApplyResult = void 0);
                                        unit.definitionApplyInfo.shouldSaveResultImmediately = !0, resultNotReceivedUnits.push(unit);
                                    }
                                });
                            }), _.isEmpty(resultReceivedNotPreviewedUnits) && _.isEmpty(resultNotReceivedUnits) ? [ 3, 2 ] : [ 4, this.previewWithNewTermDefinitionsResult(resultReceivedNotPreviewedUnits, resultNotReceivedUnits) ];

                          case 1:
                            _a.sent(), _a.label = 2;

                          case 2:
                            return allUnits = [], _.forEach(this.viewModel.trainingGroups, function(group) {
                                return allUnits = allUnits.concat(group.trainUnits || []);
                            }), allDefinitionPreviewedUnits = _.difference(allUnits, resultNotReceivedUnits), 
                            _.forEach(allDefinitionPreviewedUnits, function(unit) {
                                unit.definitionApplyInfo.lastSavedDefinitionTrimmed = _.trim(unit.definitionApplyInfo.lastPreviewedDefinitionTrimmed), 
                                unit.definitionApplyInfo.isLastSavedDefinitionValid = unit.definitionApplyInfo.isLastPreviewedDefinitionValid, 
                                unit.isDefinitionDifferentFromLastSaved = !1;
                            }), this.linguisticSchemaSaved = this.linguisticSchemaForPreview, this.savedLinguisticSchemaUpdated.emit(this.linguisticSchemaSaved), 
                            [ 2 ];
                        }
                    });
                });
            }, QnaTeachQnaComponent.prototype.previewWithNewTermDefinitionsResult = function(newDefinitionResults, unitsToSkip) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var _this = this;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return _.forEach(newDefinitionResults, function(unitResultPair) {
                                var trainUnit = unitResultPair.unit, unitNewResult = unitResultPair.result, trainingInfo = unitNewResult.termBindingsTrainingInfo, newLinguisticSchemaJson = trainingInfo && trainingInfo.linguisticSchemaJson, newLinguisticSchemaItems = trainingInfo && trainingInfo.linguisticSchemaItems, newMetadata = trainingInfo && trainingInfo.inferredTermMetadata, hasNewLinguisticSchemaJson = !_.isEmpty(newLinguisticSchemaJson), hasNewLinguisticSchemaItems = !_.isEmpty(newLinguisticSchemaItems);
                                if (hasNewLinguisticSchemaJson && (_this.setLinguisticSchemaJson(trainUnit, newLinguisticSchemaJson), 
                                _this.setInferredTermMetadata(trainUnit, newMetadata)), hasNewLinguisticSchemaItems && _this.setInferredTermLinguisticSchemaItems(trainUnit, newLinguisticSchemaItems), 
                                _.isEmpty(_.trim(unitNewResult.utterance))) trainUnit.definitionApplyInfo.isLastPreviewedDefinitionValid = 0; else {
                                    var isDefinitionValid = (hasNewLinguisticSchemaJson || hasNewLinguisticSchemaItems) && !_.isEmpty(_this.getLinguisticSchemaJson(trainUnit)) && !_.isEmpty(_this.getInferredTermLinguisticSchemaItems(trainUnit));
                                    trainUnit.definitionApplyInfo.isLastPreviewedDefinitionValid = isDefinitionValid ? 1 : 2;
                                }
                                trainUnit.definitionApplyInfo.lastPreviewedDefinitionTrimmed = _.trim(unitNewResult.utterance);
                            }), _.isEmpty(newDefinitionResults) || this.trainingStage$.next(3), [ 4, this.applyAllTrainUnitsSchemaAndReInterpret(unitsToSkip) ];

                          case 1:
                            return _a.sent(), [ 2 ];
                        }
                    });
                });
            }, QnaTeachQnaComponent.prototype.applyAllTrainUnitsSchemaAndReInterpret = function(unitsToSkip) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var newSchema, newLinguisticSchemaJson, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return newSchema = _.cloneDeep(this.linguisticSchemaAtCurrentQuestionStart), _.forEach(this.viewModel.trainingGroups, function(trainingGroup) {
                                _.forEach(trainingGroup.trainUnits, function(trainUnit) {
                                    if (!_.includes(unitsToSkip, trainUnit) && 1 === trainUnit.definitionApplyInfo.isLastPreviewedDefinitionValid) {
                                        var linguisticSchemaJson = _this.getLinguisticSchemaJson(trainUnit), potentialSchemaToAdd = _.isEmpty(linguisticSchemaJson) ? void 0 : JSON.parse(linguisticSchemaJson);
                                        if (potentialSchemaToAdd) {
                                            if (_.size(potentialSchemaToAdd.Entities) + _.size(potentialSchemaToAdd.Relationships) === 1) return void updateSchemaWithAddition(newSchema, potentialSchemaToAdd.Entities, potentialSchemaToAdd.Relationships);
                                            var trainUnitLinguisticSchemaItems_1 = _this.getInferredTermLinguisticSchemaItems(trainUnit), relevantEntities_1 = {}, relevantRelationships_1 = {};
                                            _.forEach(potentialSchemaToAdd.Entities, function(entity, entityKey) {
                                                trainUnitLinguisticSchemaItems_1.indexOf(entityKey) > -1 && (relevantEntities_1[entityKey] = entity);
                                            }), _.forEach(potentialSchemaToAdd.Relationships, function(relationship, relationshipKey) {
                                                trainUnitLinguisticSchemaItems_1.indexOf(relationshipKey) > -1 && (relevantRelationships_1[relationshipKey] = relationship);
                                            }), updateSchemaWithAddition(newSchema, relevantEntities_1, relevantRelationships_1);
                                        }
                                    }
                                });
                            }), this.linguisticSchemaForPreview = newSchema, newLinguisticSchemaJson = JSON.stringify(newSchema), 
                            [ 4, this.setLuciaLinguisticSchema(newLinguisticSchemaJson) ];

                          case 1:
                            return _a.sent(), this.interpretMainQuestion(this.underTrainingQuestionUntrimmed, !0, this.getUserDefinedSpan(), !0), 
                            [ 2 ];
                        }
                    });
                });
            }, QnaTeachQnaComponent.prototype.setLuciaLinguisticSchema = function(schemaJson) {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return this.lastSetLuciaLinguisticSchemaJson === schemaJson ? [ 3, 2 ] : [ 4, this.qnaService.overrideLinguisticSchemaJson(schemaJson) ];

                          case 1:
                            _a.sent(), this.lastSetLuciaLinguisticSchemaJson = schemaJson, _a.label = 2;

                          case 2:
                            return [ 2 ];
                        }
                    });
                });
            }, QnaTeachQnaComponent.prototype.resize = function() {
                if (!this.destroy$.isStopped) if (this.singleVisualHostContainerElement) {
                    this.resizePending = !1;
                    var element = this.singleVisualHostContainerElement.nativeElement;
                    this.viewModel.visualViewModel.viewport = {
                        scale: 1,
                        height: element.clientHeight,
                        width: element.clientWidth
                    };
                } else this.resizePending = !0;
            }, QnaTeachQnaComponent.prototype.getMainQuestionBoxDisplayedUtterance = function() {
                var _a;
                return null === (_a = this.mainQuestionInputBoxV2) || void 0 === _a ? void 0 : _a.distinctDisplayedUtterance$.value;
            }, QnaTeachQnaComponent.prototype.getTrainUnitDisplayedUtterance = function(trainingUnit) {
                var _a, trainUnitElementRefsIndex = this.getTrainUnitElementRefsIndex(trainingUnit);
                if (-1 !== trainUnitElementRefsIndex) {
                    var componentLazy = this.trainUnitInputV2LazyComponentsQueryList.toArray()[trainUnitElementRefsIndex];
                    return null === (_a = null == componentLazy ? void 0 : componentLazy.inputBox) || void 0 === _a ? void 0 : _a.distinctDisplayedUtterance$.value;
                }
            }, QnaTeachQnaComponent.prototype.getTrainUnitInputBoxV2 = function(trainingUnit) {
                var trainUnitElementRefsIndex = this.getTrainUnitElementRefsIndex(trainingUnit);
                if (-1 !== trainUnitElementRefsIndex) {
                    var componentLazy = this.trainUnitInputV2LazyComponentsQueryList.toArray()[trainUnitElementRefsIndex];
                    return componentLazy && componentLazy.inputBox;
                }
            }, QnaTeachQnaComponent.prototype.interpretMainQuestion = function(utterance, isTriggeredByTrainUnitDefinition, userDefinedSpan, suppressSuggestions) {
                this.mainQuestionInputBoxV2 ? this.mainQuestionInputBoxV2.interpretUtterance({
                    utterance,
                    suppressSuggestions,
                    enforceFocus: !isTriggeredByTrainUnitDefinition,
                    specifiedSpans: userDefinedSpan ? [ userDefinedSpan ] : void 0
                }) : debug.fF.assertFail("Expect this.mainQuestionInputBoxV2 to be defined now.");
            }, QnaTeachQnaComponent.prototype.getLinguisticSchemaJson = function(trainUnit) {
                return trainUnit.inputViewModel && trainUnit.inputViewModel.linguisticInfo && trainUnit.inputViewModel.linguisticInfo.linguisticSchemaJson;
            }, QnaTeachQnaComponent.prototype.setLinguisticSchemaJson = function(trainUnit, linguisticSchemaJson) {
                trainUnit.inputViewModel.linguisticInfo || (trainUnit.inputViewModel.linguisticInfo = {}), 
                trainUnit.inputViewModel.linguisticInfo.linguisticSchemaJson = linguisticSchemaJson;
            }, QnaTeachQnaComponent.prototype.setInferredTermMetadata = function(trainUnit, metadata) {
                trainUnit.inputViewModel.linguisticInfo && trainUnit.inputViewModel.linguisticInfo.inferredTermBinding && (trainUnit.inputViewModel.linguisticInfo.inferredTermBinding.metadata = metadata);
            }, QnaTeachQnaComponent.prototype.getInferredTermBinding = function(trainUnit) {
                return trainUnit.inputViewModel && trainUnit.inputViewModel.linguisticInfo && trainUnit.inputViewModel.linguisticInfo.inferredTermBinding;
            }, QnaTeachQnaComponent.prototype.getInferredTermLinguisticSchemaItems = function(trainUnit) {
                var inferredTermBinding = this.getInferredTermBinding(trainUnit);
                return inferredTermBinding && inferredTermBinding.linguisticSchemaItems;
            }, QnaTeachQnaComponent.prototype.setInferredTermLinguisticSchemaItems = function(trainUnit, schemaItems) {
                var inferredTermBinding = trainUnit.inputViewModel && trainUnit.inputViewModel.linguisticInfo && trainUnit.inputViewModel.linguisticInfo.inferredTermBinding;
                inferredTermBinding && (inferredTermBinding.linguisticSchemaItems = schemaItems);
            }, QnaTeachQnaComponent.prototype.getTrainUnitInputAriaLabel = function(inferredTermBinding) {
                return [ this.localizationService.get("QnaTooling_TeachQna_DefineUnknownTerms"), inferredTermBinding.prefixText, inferredTermBinding.hintText, inferredTermBinding.suffixText ].join(" ");
            }, QnaTeachQnaComponent.prototype.createSingleVisualHostConfig = function(visualContainer) {
                var _this = this;
                return {
                    notifyStart: _.noop,
                    notifyEnd: _.noop,
                    clearQueryErrors: _.noop,
                    handleQueryErrors: _.noop,
                    handleQueryWarnings: _.noop,
                    queryVisualHostServices: {
                        getFilters: function() {
                            var filters = _this.viewModel && _this.viewModel.visualViewModel.visual && _this.viewModel.visualViewModel.visual.filters, dataFilters = _.isEmpty(filters) ? [] : _.chain(filters).filter(function(f) {
                                return f.filter;
                            }).map(function(f) {
                                return f.filter;
                            }).value(), filter = _.isEmpty(dataFilters) ? void 0 : semanticQuery.yl.merge(dataFilters);
                            return {
                                dataFilter: filter,
                                dataFiltersUnmerged: filter ? _.map(filter.conditions(), function(c) {
                                    return {
                                        filter: semanticQuery.yl.fromSQExpr(c)
                                    };
                                }) : void 0
                            };
                        },
                        getDataSourceVariables: function() {
                            return _this.datasourceVariables;
                        },
                        disableAnchorTime: !0
                    },
                    visualHostServices: (0, Prototype.ED)((0, visualHostService.q)({
                        geocoder: this.geocoder,
                        geolocation: this.geolocationService,
                        localizationService: this.localizationService,
                        moduleLoader: this.moduleLoader,
                        promiseFactory: this.promiseFactory,
                        visualHostTooltipService: this.visualHostTooltipServiceFactory.createFromVisualContract(visualContainer),
                        getAzureMapToken: function() {
                            return _this.azureMapTokenCache.getAzureMapToken();
                        },
                        azureMapsEndpoint: this.azureMapsEndpoint,
                        geocoderIndexedDB: this.geocoderIndexedDB
                    }), function(host) {
                        host.getLocalizedString = function(id) {
                            return _this.localizationService.get(id);
                        };
                    }),
                    interactivityOptions: {},
                    additionalObjectUpdates: void 0,
                    disableQueryCacheUpdates: !1,
                    noLoadMore: !1
                };
            }, QnaTeachQnaComponent.\u0275fac = function(t) {
                return new (t || QnaTeachQnaComponent)(fesm2022_core["\u0275\u0275directiveInject"](geocoder_service.i), fesm2022_core["\u0275\u0275directiveInject"](Common._1), fesm2022_core["\u0275\u0275directiveInject"](module_loader_service.m), fesm2022_core["\u0275\u0275directiveInject"](data_sources_service.D), fesm2022_core["\u0275\u0275directiveInject"](dialog_service.x), fesm2022_core["\u0275\u0275directiveInject"](event_bridge_service.J), fesm2022_core["\u0275\u0275directiveInject"](localization_service.o), fesm2022_core["\u0275\u0275directiveInject"](promise_factory.O), fesm2022_core["\u0275\u0275directiveInject"](Telemetry.y0), fesm2022_core["\u0275\u0275directiveInject"](theme_service.f), fesm2022_core["\u0275\u0275directiveInject"](desktop_qna_service.r), fesm2022_core["\u0275\u0275directiveInject"](interpret_listener_service.y), fesm2022_core["\u0275\u0275directiveInject"](azure_map_token_cache_service.o), fesm2022_core["\u0275\u0275directiveInject"](azure_maps_endpoint_service.A), fesm2022_core["\u0275\u0275directiveInject"](geocoder_indexed_db_service.W), fesm2022_core["\u0275\u0275directiveInject"](visualHostTooltipServiceFactory.A));
            }, QnaTeachQnaComponent.\u0275cmp = fesm2022_core["\u0275\u0275defineComponent"]({
                type: QnaTeachQnaComponent,
                selectors: [ [ "qna-teach-qna" ] ],
                viewQuery: function(rf, ctx) {
                    if (1 & rf && (fesm2022_core["\u0275\u0275viewQuery"](qna_teach_qna_component_c0, 5, fesm2022_core.ElementRef), 
                    fesm2022_core["\u0275\u0275viewQuery"](qna_teach_qna_component_c1, 7, fesm2022_core.ElementRef), 
                    fesm2022_core["\u0275\u0275viewQuery"](qna_teach_qna_component_c2, 5), fesm2022_core["\u0275\u0275viewQuery"](qna_teach_qna_component_c3, 5), 
                    fesm2022_core["\u0275\u0275viewQuery"](qna_teach_qna_component_c3, 5, fesm2022_core.ElementRef)), 
                    2 & rf) {
                        var _t = void 0;
                        fesm2022_core["\u0275\u0275queryRefresh"](_t = fesm2022_core["\u0275\u0275loadQuery"]()) && (ctx.singleVisualHostContainerElement = _t.first), 
                        fesm2022_core["\u0275\u0275queryRefresh"](_t = fesm2022_core["\u0275\u0275loadQuery"]()) && (ctx.teachQnaElement = _t.first), 
                        fesm2022_core["\u0275\u0275queryRefresh"](_t = fesm2022_core["\u0275\u0275loadQuery"]()) && (ctx.mainQuestionInputV2Lazy = _t.first), 
                        fesm2022_core["\u0275\u0275queryRefresh"](_t = fesm2022_core["\u0275\u0275loadQuery"]()) && (ctx.trainUnitInputV2LazyComponentsQueryList = _t), 
                        fesm2022_core["\u0275\u0275queryRefresh"](_t = fesm2022_core["\u0275\u0275loadQuery"]()) && (ctx._trainUnitInputV2ElementRefsQueryList = _t);
                    }
                },
                inputs: {
                    datasourceVariables: "datasourceVariables",
                    initialLinguisticSchema: "initialLinguisticSchema",
                    themeCollection: "themeCollection",
                    entryQuestion: "entryQuestion",
                    entryPoint: "entryPoint",
                    openingTelemetryEvent: "openingTelemetryEvent"
                },
                outputs: {
                    entryQuestionHandled: "entryQuestionHandled",
                    savedLinguisticSchemaUpdated: "savedLinguisticSchemaUpdated",
                    showAllMouseActionBlocker: "showAllMouseActionBlocker"
                },
                features: [ fesm2022_core["\u0275\u0275ProvidersFeature"]([ interpret_listener_service.y, tooltip_theme_service.Q, visual_host_tooltip_service_factory_service.Z ]) ],
                decls: 12,
                vars: 9,
                consts: [ [ 1, "qnaTeachQna" ], [ "qnaTeachQna", "" ], [ "localize", "QnaTooling_TeachQna_Title", 1, "title" ], [ "localize", "QnaTooling_TeachQna_Subtitle", 1, "subTitle" ], [ 1, "inputSection" ], [ "localize", "QnaTooling_TeachQna_EnterQuestion", 1, "sectionTitle" ], [ 1, "inputAndActionContainer" ], [ "class", "inputBox", "tabindex", "-1", 3, "entryPoint", "interpretListener", "qnaSupportedScopes", "presentationArgs", "initialUtterance", "configs", "linguisticInfo", "grippersDefinedTextRangeChanged", "enterKeyPressed", "inputBoxInitialized", 4, "ngIf" ], [ 4, "ngIf" ], [ "class", "trainArea", 4, "ngIf" ], [ "tabindex", "-1", 1, "inputBox", 3, "entryPoint", "interpretListener", "qnaSupportedScopes", "presentationArgs", "initialUtterance", "configs", "linguisticInfo", "grippersDefinedTextRangeChanged", "enterKeyPressed", "inputBoxInitialized" ], [ "mainQuestionInputV2Lazy", "" ], [ "class", "primary actionButton pbi-fluent-button", "localize", "Submit", 3, "disabled", "click", 4, "ngIf" ], [ "class", "actionButton pbi-fluent-button", "localize", "Clear", 3, "disabled", "click", 4, "ngIf" ], [ "localize", "Submit", 1, "primary", "actionButton", "pbi-fluent-button", 3, "disabled", "click" ], [ "localize", "Clear", 1, "actionButton", "pbi-fluent-button", 3, "disabled", "click" ], [ 1, "trainArea" ], [ "class", "definitionTrainingSection", 4, "ngIf" ], [ 1, "visualSection" ], [ "localize", "QnaTooling_TeachQna_PreviewVisualResult", 1, "sectionTitle" ], [ 1, "visualLoadingInfo" ], [ "id", "visualRestatementId", "class", "visualRestatement", 4, "ngIf" ], [ "class", "singleVisualHostContainer", "aria-live", "assertive", "aria-labelledby", "visualRestatementId", "tabindex", "0", 4, "ngIf" ], [ "aria-live", "assertive", 3, "localizeAttr", "size", "position", 4, "ngIf" ], [ 1, "definitionTrainingSection" ], [ 1, "definitionTrainingSectionHeader" ], [ "localize", "QnaTooling_TeachQna_DefineUnknownTerms", 1, "sectionTitle" ], [ 1, "glyphicon", "glyph-small", "pbi-glyph-info", 3, "pbi-tooltip" ], [ 1, "allDefinitionGroupsContainer", 3, "ngClass" ], [ 1, "definitionGroupsAndDisableEditMaskContainer" ], [ "class", "trainingGroup", 3, "ngClass", "click", 4, "ngFor", "ngForOf" ], [ "class", "trainingNotSupportedTermsGroup", 3, "ngClass", "click", 4, "ngIf" ], [ "class", "disableDefinitionsEditMask", 3, "pbi-tooltip", 4, "ngIf" ], [ "mat-button", "", "localize", "PBI_Button_Label_Save", 1, "primary", "actionButton", 3, "disabled", "click" ], [ 1, "trainingGroup", 3, "ngClass", "click" ], [ "class", "singleTermTrainingUnit", 3, "ngClass", 4, "ngFor", "ngForOf" ], [ 1, "singleTermTrainingUnit", 3, "ngClass" ], [ 1, "definitionPrompt" ], [ 1, "definitionTemplateContainer" ], [ 1, "definitionPrefixText" ], [ 1, "inputWithErrorContainer" ], [ "class", "inputBox", "tabindex", "-1", 3, "ngClass", "entryPoint", "interpretListener", "qnaSupportedScopes", "presentationArgs", "configs", "initialUtterance", "utteranceSuggestions", "linguisticInfo", 4, "ngIf" ], [ "class", "termDefinitionInvalidIndicator glyphicon pbi-glyph-error glyph-small", 3, "pbi-tooltip", 4, "ngIf" ], [ "class", "definitionSuffixText", 4, "ngIf" ], [ "tabindex", "-1", 1, "inputBox", 3, "ngClass", "entryPoint", "interpretListener", "qnaSupportedScopes", "presentationArgs", "configs", "initialUtterance", "utteranceSuggestions", "linguisticInfo" ], [ "trainUnitInputV2", "" ], [ 1, "termDefinitionInvalidIndicator", "glyphicon", "pbi-glyph-error", "glyph-small", 3, "pbi-tooltip" ], [ 1, "definitionSuffixText" ], [ "tabindex", "0", 3, "innerHtml" ], [ 1, "trainingNotSupportedTermsGroup", 3, "ngClass", "click" ], [ 3, "innerHtml" ], [ 1, "disableDefinitionsEditMask", 3, "pbi-tooltip" ], [ "id", "visualRestatementId", 1, "visualRestatement" ], [ "aria-live", "assertive", "aria-labelledby", "visualRestatementId", "tabindex", "0", 1, "singleVisualHostContainer" ], [ "singleVisualHostContainer", "" ], [ 3, "visual", "visualViewport", "config", "themeCollection", 4, "ngIf" ], [ 3, "visual", "visualViewport", "config", "themeCollection" ], [ "aria-live", "assertive", 3, "localizeAttr", "size", "position" ] ],
                template: function(rf, ctx) {
                    1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 0, 1), fesm2022_core["\u0275\u0275element"](2, "h1", 2)(3, "h2", 3), 
                    fesm2022_core["\u0275\u0275elementStart"](4, "section", 4), fesm2022_core["\u0275\u0275element"](5, "label", 5), 
                    fesm2022_core["\u0275\u0275elementStart"](6, "div", 6), fesm2022_core["\u0275\u0275template"](7, QnaTeachQnaComponent_qna_input_v2_lazy_7_Template, 2, 7, "qna-input-v2-lazy", 7), 
                    fesm2022_core["\u0275\u0275template"](8, QnaTeachQnaComponent_ng_container_8_Template, 3, 2, "ng-container", 8), 
                    fesm2022_core["\u0275\u0275pipe"](9, "async"), fesm2022_core["\u0275\u0275elementEnd"]()(), 
                    fesm2022_core["\u0275\u0275template"](10, QnaTeachQnaComponent_div_10_Template, 3, 5, "div", 9), 
                    fesm2022_core["\u0275\u0275pipe"](11, "async"), fesm2022_core["\u0275\u0275elementEnd"]()), 
                    2 & rf && (fesm2022_core["\u0275\u0275advance"](7), fesm2022_core["\u0275\u0275property"]("ngIf", null == ctx.viewModel ? null : ctx.viewModel.inputViewModel), 
                    fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", fesm2022_core["\u0275\u0275pureFunction1"](7, qna_teach_qna_component_c11, fesm2022_core["\u0275\u0275pipeBind1"](9, 3, ctx.shouldShowSubmit$))), 
                    fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("ngIf", fesm2022_core["\u0275\u0275pipeBind1"](11, 5, ctx.isTrainingStarted$)));
                },
                dependencies: [ common.NgClass, common.NgForOf, common.NgIf, legacy_button.eB, single_visual_host_component.v, localize_directive.X, localize_attr_directive.b, qna_input_v2_lazy_component.j, spinner_component.O, tooltip_directive.i, common.AsyncPipe ],
                styles: [ '.qnaTeachQna{display:flex;flex-direction:column;position:relative;height:100%}.qnaTeachQna label,.qnaTeachQna span,.qnaTeachQna button,.qnaTeachQna h1,.qnaTeachQna h2,.qnaTeachQna i{-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-user-drag:none}.qnaTeachQna h1{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--xlg-font-size, 20px);font-weight:var(--font-weight-semi-bold, 600);line-height:28px;margin:0}.qnaTeachQna h2{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-regular, 400);line-height:20px;margin:8px 0 0}.qnaTeachQna section .sectionTitle{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--lg-font-size, 16px);font-weight:var(--font-weight-semi-bold, 600);line-height:22px}.qnaTeachQna section button.actionButton{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-semi-bold, 600);line-height:20px;padding:6px 20px;min-width:86px;height:fit-content}.qnaTeachQna section.inputSection{margin:32px 0 0}.qnaTeachQna section.inputSection .inputAndActionContainer{margin:12px 0 0;display:flex}.qnaTeachQna section.inputSection qna-input,.qnaTeachQna section.inputSection qna-input-v2,.qnaTeachQna section.inputSection qna-input-v2-lazy{flex:1}.qnaTeachQna section.inputSection button{margin-left:12px}.qnaTeachQna section.inputSection{z-index:1}.qnaTeachQna section.inputSection qna-input-v2 .utteranceContentExtraContainer{z-index:1}.qnaTeachQna section.inputSection qna-input-v2 qna-autocomplete{z-index:0}.qnaTeachQna section.trainArea{z-index:0}.qnaTeachQna .qnaInputV2Container{border-radius:2px}.qnaTeachQna .qnaInputV2Container .icon{padding-left:0}.qnaTeachQna .qnaInputV2Container #utteranceContent{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-regular, 400);line-height:26px;padding:2px 28px 6px 6px}.qnaTeachQna .qnaInputV2Container qna-input-modern>div{line-height:26px;padding:2px 28px 6px 6px}.qnaTeachQna .qnaInputV2Container .qnaIconContainer{height:20px;width:20px;align-self:flex-start;position:absolute}.qnaTeachQna .qnaInputV2Container .qnaIconContainer .loadingSpinner,.qnaTeachQna .qnaInputV2Container .qnaIconContainer .qnaWarningIcon{position:absolute;margin:0;padding:0;top:0;bottom:0}.qnaTeachQna .qnaInputV2Container .qnaIconContainer .qnaWarningIcon{left:2px}.qnaTeachQna .qnaInputV2ContainerqnaInputContainer .qnaIconContainer{margin:6px 0 0;right:4px}.qnaTeachQna .qnaInputV2ContainerqnaInputContainer .qnaIconContainer .qnaWarningIcon{left:2px}.qnaTeachQna .qnaInputV2Container .dropdownGroupItems .singleDropdownItem:not(.showAsGroupTitle){padding:4px 0 8px 16px!important}.qnaTeachQna .trainArea{flex:1;display:flex;margin-top:32px;border-top:1px solid var(--fluent-theme-neutral-quarter-color, #D2D0CE);overflow-y:hidden}.qnaTeachQna .trainArea .definitionTrainingSection{height:100%;padding:32px 32px 0 0;width:calc(60% - .5px);box-sizing:border-box}.qnaTeachQna .trainArea .definitionTrainingSection .definitionTrainingSectionHeader{display:flex}.qnaTeachQna .trainArea .definitionTrainingSection .definitionTrainingSectionHeader .glyphicon{align-self:center;margin-left:8px}.qnaTeachQna .trainArea .visualSection{padding:32px 0 0 32px;width:calc(40% + .5px);box-sizing:border-box;margin-right:0;margin-left:auto;border-left:1px solid var(--fluent-theme-neutral-quarter-color, #D2D0CE)}.qnaTeachQna .trainArea .definitionTrainingSection{display:flex;flex-direction:column}.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer{flex:1;margin-top:20px;padding-bottom:4px;overflow-y:auto}.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .definitionGroupsAndDisableEditMaskContainer{position:relative}.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .definitionGroupsAndDisableEditMaskContainer .disableDefinitionsEditMask{position:absolute;width:100%;height:100%;top:0;left:0;background:transparent}.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer.allDefinitionEditDisabled .trainingGroup,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer.allDefinitionEditDisabled .trainingNotSupportedTermsGroup{color:var(--fluent-theme-neutral-secondary-alt-color, #767676)!important}.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer.allDefinitionEditDisabled .trainingGroup.activeDefinitionGroup,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer.allDefinitionEditDisabled .trainingNotSupportedTermsGroup.activeDefinitionGroup{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif)!important;font-size:var(--md-font-size, 14px)!important;font-weight:var(--font-weight-regular, 400)!important}.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer.allDefinitionEditDisabled .qnaInputContainer span,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer.allDefinitionEditDisabled .qnaInputV2Container span{color:var(--fluent-theme-neutral-secondary-alt-color, #767676)!important}.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer.allDefinitionEditDisabled .qnaInputContainer ul,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer.allDefinitionEditDisabled .qnaInputV2Container ul{pointer-events:none}.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingGroup,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingNotSupportedTermsGroup{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-regular, 400);line-height:20px;cursor:pointer;color:var(--fluent-theme-neutral-secondary-alt-color, #767676);margin-top:12px;border-radius:2px;box-shadow:0 .3px .9px rgba(0,0,0,.11),0 1.6px 3.6px rgba(0,0,0,.13)}.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingGroup.firstDefinitionGroup,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingNotSupportedTermsGroup.firstDefinitionGroup{margin-top:0}.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingGroup .emphasizedText,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingNotSupportedTermsGroup .emphasizedText{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-semi-bold, 600)}.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingGroup.trainingReadyGroup,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingNotSupportedTermsGroup.trainingReadyGroup{padding:12px 24px;display:flex;flex-direction:column}.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingGroup.trainingNotReadyGroup,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingNotSupportedTermsGroup.trainingNotReadyGroup{padding:16px 24px;display:flex;box-shadow:0 1px 2px var(--fluent-theme-neutral-quarter-color, #D2D0CE)}.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingGroup.trainingNotSupportedTermsGroup,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingNotSupportedTermsGroup.trainingNotSupportedTermsGroup{padding:16px 24px;display:flex}.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingGroup.activeDefinitionGroup,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingNotSupportedTermsGroup.activeDefinitionGroup{color:var(--fluent-theme-neutral-primary-color, #323130);background-color:var(--fluent-theme-neutral-lighter-alt-color, #FAF9F8)}.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingGroup.activeDefinitionGroup .definitionPrompt,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingNotSupportedTermsGroup.activeDefinitionGroup .definitionPrompt{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-semi-bold, 600)}.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingGroup .singleTermTrainingUnit,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingNotSupportedTermsGroup .singleTermTrainingUnit{display:flex;flex-direction:column}.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingGroup .singleTermTrainingUnit .definitionTemplateContainer,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingNotSupportedTermsGroup .singleTermTrainingUnit .definitionTemplateContainer{display:flex;flex-direction:row;align-items:center;margin-top:12px}.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingNotSupportedTermsGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer{flex:1;display:flex;position:relative}.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingNotSupportedTermsGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input-v2,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingNotSupportedTermsGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input-v2,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input-v2-lazy,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingNotSupportedTermsGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input-v2-lazy{flex:1}.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input.inputBox,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingNotSupportedTermsGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input.inputBox,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input-v2.inputBox,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingNotSupportedTermsGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input-v2.inputBox,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input-v2-lazy.inputBox,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingNotSupportedTermsGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input-v2-lazy.inputBox{margin-left:8px}.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input.inputBox .qnaInputContainer,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingNotSupportedTermsGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input.inputBox .qnaInputContainer,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input-v2.inputBox .qnaInputContainer,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingNotSupportedTermsGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input-v2.inputBox .qnaInputContainer,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input-v2-lazy.inputBox .qnaInputContainer,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingNotSupportedTermsGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input-v2-lazy.inputBox .qnaInputContainer,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input.inputBox .qnaInputV2Container,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingNotSupportedTermsGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input.inputBox .qnaInputV2Container,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input-v2.inputBox .qnaInputV2Container,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingNotSupportedTermsGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input-v2.inputBox .qnaInputV2Container,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input-v2-lazy.inputBox .qnaInputV2Container,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingNotSupportedTermsGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input-v2-lazy.inputBox .qnaInputV2Container{margin:0;padding:0}.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input.inputBox .qnaInputContainer .beforeUtteranceOneLineHeightContainer,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingNotSupportedTermsGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input.inputBox .qnaInputContainer .beforeUtteranceOneLineHeightContainer,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input-v2.inputBox .qnaInputContainer .beforeUtteranceOneLineHeightContainer,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingNotSupportedTermsGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input-v2.inputBox .qnaInputContainer .beforeUtteranceOneLineHeightContainer,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input-v2-lazy.inputBox .qnaInputContainer .beforeUtteranceOneLineHeightContainer,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingNotSupportedTermsGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input-v2-lazy.inputBox .qnaInputContainer .beforeUtteranceOneLineHeightContainer,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input.inputBox .qnaInputV2Container .beforeUtteranceOneLineHeightContainer,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingNotSupportedTermsGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input.inputBox .qnaInputV2Container .beforeUtteranceOneLineHeightContainer,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input-v2.inputBox .qnaInputV2Container .beforeUtteranceOneLineHeightContainer,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingNotSupportedTermsGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input-v2.inputBox .qnaInputV2Container .beforeUtteranceOneLineHeightContainer,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input-v2-lazy.inputBox .qnaInputV2Container .beforeUtteranceOneLineHeightContainer,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingNotSupportedTermsGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input-v2-lazy.inputBox .qnaInputV2Container .beforeUtteranceOneLineHeightContainer{margin-left:0}.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input.inputBox .qnaInputContainer .dropdownGroupItems .singleDropdownItem,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingNotSupportedTermsGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input.inputBox .qnaInputContainer .dropdownGroupItems .singleDropdownItem,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input-v2.inputBox .qnaInputContainer .dropdownGroupItems .singleDropdownItem,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingNotSupportedTermsGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input-v2.inputBox .qnaInputContainer .dropdownGroupItems .singleDropdownItem,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input-v2-lazy.inputBox .qnaInputContainer .dropdownGroupItems .singleDropdownItem,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingNotSupportedTermsGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input-v2-lazy.inputBox .qnaInputContainer .dropdownGroupItems .singleDropdownItem,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input.inputBox .qnaInputV2Container .dropdownGroupItems .singleDropdownItem,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingNotSupportedTermsGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input.inputBox .qnaInputV2Container .dropdownGroupItems .singleDropdownItem,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input-v2.inputBox .qnaInputV2Container .dropdownGroupItems .singleDropdownItem,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingNotSupportedTermsGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input-v2.inputBox .qnaInputV2Container .dropdownGroupItems .singleDropdownItem,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input-v2-lazy.inputBox .qnaInputV2Container .dropdownGroupItems .singleDropdownItem,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingNotSupportedTermsGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input-v2-lazy.inputBox .qnaInputV2Container .dropdownGroupItems .singleDropdownItem{padding:0 0 0 6px}.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input.inputBox .qnaInputContainer .dropdownGroupItems .singleDropdownItem .qnaIcon,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingNotSupportedTermsGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input.inputBox .qnaInputContainer .dropdownGroupItems .singleDropdownItem .qnaIcon,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input-v2.inputBox .qnaInputContainer .dropdownGroupItems .singleDropdownItem .qnaIcon,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingNotSupportedTermsGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input-v2.inputBox .qnaInputContainer .dropdownGroupItems .singleDropdownItem .qnaIcon,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input-v2-lazy.inputBox .qnaInputContainer .dropdownGroupItems .singleDropdownItem .qnaIcon,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingNotSupportedTermsGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input-v2-lazy.inputBox .qnaInputContainer .dropdownGroupItems .singleDropdownItem .qnaIcon,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input.inputBox .qnaInputV2Container .dropdownGroupItems .singleDropdownItem .qnaIcon,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingNotSupportedTermsGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input.inputBox .qnaInputV2Container .dropdownGroupItems .singleDropdownItem .qnaIcon,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input-v2.inputBox .qnaInputV2Container .dropdownGroupItems .singleDropdownItem .qnaIcon,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingNotSupportedTermsGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input-v2.inputBox .qnaInputV2Container .dropdownGroupItems .singleDropdownItem .qnaIcon,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input-v2-lazy.inputBox .qnaInputV2Container .dropdownGroupItems .singleDropdownItem .qnaIcon,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingNotSupportedTermsGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input-v2-lazy.inputBox .qnaInputV2Container .dropdownGroupItems .singleDropdownItem .qnaIcon{display:none}.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input.inputBox.hasTermDefError .qnaInputContainer,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingNotSupportedTermsGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input.inputBox.hasTermDefError .qnaInputContainer,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input-v2.inputBox.hasTermDefError .qnaInputContainer,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingNotSupportedTermsGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input-v2.inputBox.hasTermDefError .qnaInputContainer,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input-v2-lazy.inputBox.hasTermDefError .qnaInputContainer,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingNotSupportedTermsGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input-v2-lazy.inputBox.hasTermDefError .qnaInputContainer,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input.inputBox.hasTermDefError .qnaInputV2Container,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingNotSupportedTermsGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input.inputBox.hasTermDefError .qnaInputV2Container,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input-v2.inputBox.hasTermDefError .qnaInputV2Container,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingNotSupportedTermsGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input-v2.inputBox.hasTermDefError .qnaInputV2Container,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input-v2-lazy.inputBox.hasTermDefError .qnaInputV2Container,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingNotSupportedTermsGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer qna-input-v2-lazy.inputBox.hasTermDefError .qnaInputV2Container{padding-right:24px;border-color:var(--fluent-theme-error-dark-color, #A80000)!important}.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer .termDefinitionInvalidIndicator,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingNotSupportedTermsGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer .termDefinitionInvalidIndicator{color:var(--fluent-theme-error-dark-color, #A80000);right:8px;top:8px;position:absolute}.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer .termDefinitionInvalidIndicator:before,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingNotSupportedTermsGroup .singleTermTrainingUnit .definitionTemplateContainer .inputWithErrorContainer .termDefinitionInvalidIndicator:before{content:"\\e783"}.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingGroup .singleTermTrainingUnit .definitionTemplateContainer .definitionSuffixText,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingNotSupportedTermsGroup .singleTermTrainingUnit .definitionTemplateContainer .definitionSuffixText{margin-left:8px}.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingGroup .glyphicon,.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer .trainingNotSupportedTermsGroup .glyphicon{margin-left:4px}.qnaTeachQna .trainArea .definitionTrainingSection .allDefinitionGroupsContainer ul.qnaAutoComplete{max-height:200px}.qnaTeachQna .trainArea .definitionTrainingSection button{margin-top:20px;margin-right:0;margin-left:auto}.qnaTeachQna .trainArea .visualSection{display:flex;flex-direction:column}.qnaTeachQna .trainArea .visualSection .sectionTitle{margin-bottom:20px}.qnaTeachQna .trainArea .visualSection .visualRestatement{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-regular, 400);line-height:20px;margin-bottom:12px;color:var(--fluent-theme-neutral-primary-color, #323130)}.qnaTeachQna .trainArea .visualSection .singleVisualHostContainer{flex:1;position:relative}.qnaTeachQna .trainArea .visualSection .spinnerInfo{position:absolute;width:100%;top:50%;margin-top:24px;text-align:center}.qnaTeachQna .trainArea .visualSection .visualLoadingInfo{position:relative;flex:1;display:flex;flex-direction:column}\n' ],
                encapsulation: 2
            }), QnaTeachQnaComponent;
        }();
        function updateSchemaWithAddition(originalSchema, entitiesToAdd, relationshipsToAdd) {
            debug.fF.assertValue(originalSchema, "originalSchema should not be null."), _.forEach(entitiesToAdd, function(mergeEntity, mergeEntityKey) {
                var existingMatchingEntity = _.find(originalSchema.Entities, function(_existingEntity, existingEntityKey) {
                    return mergeEntityKey === existingEntityKey;
                });
                if (!existingMatchingEntity) return originalSchema.Entities || (originalSchema.Entities = {}), 
                void (originalSchema.Entities[mergeEntityKey] = mergeEntity);
                _.remove(existingMatchingEntity.Terms, function(existingEntityTerm) {
                    return _.isEmpty(existingEntityTerm);
                }), _.forEach(mergeEntity.Terms, function(mergeEntityTerm) {
                    _.forEach(_.keys(mergeEntityTerm), function(key) {
                        var existingMatchingTermProperties = _.find(existingMatchingEntity.Terms, function(term) {
                            return null != term[key];
                        });
                        existingMatchingTermProperties ? (existingMatchingTermProperties[key] = mergeEntityTerm[key], 
                        existingMatchingTermProperties[key].State = "Authored") : (existingMatchingEntity.Terms || (existingMatchingEntity.Terms = []), 
                        existingMatchingEntity.Terms.push(mergeEntityTerm), mergeEntityTerm[key].State = "Authored");
                    });
                });
            }), originalSchema.Relationships || (originalSchema.Relationships = {}), _.forEach(relationshipsToAdd, function(mergeRelationship, mergeRelationshipKey) {
                originalSchema.Relationships[mergeRelationshipKey] = mergeRelationship;
            });
        }
        function areInferredTermBindingKeysEqual(key1, key2) {
            return _.isEqual(key1, key2);
        }
        function isATermDefinitionTrainingNotSupportedGroup(group) {
            return null == group.span;
        }
        function getActiveTrainingUnit(activeDefinitionGroup, previousActiveTrainingUnit) {
            if (activeDefinitionGroup && !isATermDefinitionTrainingNotSupportedGroup(activeDefinitionGroup)) {
                var activeTrainingGroup = activeDefinitionGroup;
                if (activeTrainingGroup.isReadyForTraining) return _.includes(activeTrainingGroup.trainUnits, previousActiveTrainingUnit) ? previousActiveTrainingUnit : _.first(activeTrainingGroup.trainUnits);
            }
        }
        function qna_teach_qna_component_withSpanTag(str) {
            return '<span class="emphasizedText">' + str + "</span>";
        }
        function incrementOne(dictionary, key) {
            dictionary[key] = null != dictionary[key] ? dictionary[key] + 1 : 1;
        }
        function createModel(dataSource) {
            return {
                vsName: dataSource.dsr.vsName,
                dbName: dataSource.dsr.dbName,
                qnaSupported: !0,
                id: null != dataSource.dsr.modelId ? dataSource.dsr.modelId : 1
            };
        }
        var dialog = __webpack_require__(32293), focusManager = __webpack_require__(65302), FocusNavigationUtility = __webpack_require__(57470), promiseFactory = __webpack_require__(14463), qna_sprite_icons = __webpack_require__(15118), telemetry_events = __webpack_require__(5894), themeUtils = __webpack_require__(4954), data_source_serializer_service = __webpack_require__(40823), resource_loader_service = __webpack_require__(52121), pbi_office_icon_component = __webpack_require__(69437), qna_tooling_dialog_component_c0 = [ "qnaToolingDialog" ], qna_tooling_dialog_component_c1 = [ "teachQna" ], qna_tooling_dialog_component_c2 = [ "suggestQuestions" ], qna_tooling_dialog_component_c3 = [ "bulkEditing" ], qna_tooling_dialog_component_c4 = [ "activeContentContainer" ], qna_tooling_dialog_component_c5 = [ "navigationNodesContainer" ], qna_tooling_dialog_component_c6 = [ "managePhrasings" ];
        function QnaToolingDialogComponent_ng_container_10_div_1_Template(rf, ctx) {
            1 & rf && fesm2022_core["\u0275\u0275element"](0, "div", 21);
        }
        var qna_tooling_dialog_component_c7 = function(a0) {
            return {
                activeNavigationNode: a0
            };
        };
        function QnaToolingDialogComponent_ng_container_10_div_2_Template(rf, ctx) {
            if (1 & rf) {
                var _r13 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "div", 22)(1, "button", 23), fesm2022_core["\u0275\u0275listener"]("click", function() {
                    fesm2022_core["\u0275\u0275restoreView"](_r13);
                    var navigationNode_r8 = fesm2022_core["\u0275\u0275nextContext"]().$implicit, ctx_r11 = fesm2022_core["\u0275\u0275nextContext"]();
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r11.showContent(navigationNode_r8.contentType));
                }), fesm2022_core["\u0275\u0275text"](2), fesm2022_core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var navigationNode_r8 = fesm2022_core["\u0275\u0275nextContext"]().$implicit, ctx_r10 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275propertyInterpolate"]("id", navigationNode_r8.contentType), 
                fesm2022_core["\u0275\u0275property"]("ngClass", fesm2022_core["\u0275\u0275pureFunction1"](4, qna_tooling_dialog_component_c7, ctx_r10.activeContentType === navigationNode_r8.contentType)), 
                fesm2022_core["\u0275\u0275attribute"]("aria-selected", ctx_r10.activeContentType === navigationNode_r8.contentType), 
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275textInterpolate"](navigationNode_r8.title);
            }
        }
        function QnaToolingDialogComponent_ng_container_10_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275template"](1, QnaToolingDialogComponent_ng_container_10_div_1_Template, 1, 0, "div", 19), 
            fesm2022_core["\u0275\u0275template"](2, QnaToolingDialogComponent_ng_container_10_div_2_Template, 3, 6, "div", 20), 
            fesm2022_core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var navigationNode_r8 = ctx.$implicit;
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", "Divider" === navigationNode_r8.type), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", "Content" === navigationNode_r8.type);
            }
        }
        function QnaToolingDialogComponent_div_13_ng_container_2_ng_container_1_qna_banner_lazy_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r21 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "qna-banner-lazy", 34), fesm2022_core["\u0275\u0275listener"]("onDismiss", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r21);
                    var ctx_r20 = fesm2022_core["\u0275\u0275nextContext"](4);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r20.onBannerDismiss($event));
                }), fesm2022_core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var bannerContent_r18 = fesm2022_core["\u0275\u0275nextContext"]().ngIf;
                fesm2022_core["\u0275\u0275property"]("bannerContent", bannerContent_r18);
            }
        }
        function QnaToolingDialogComponent_div_13_ng_container_2_ng_container_1_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275template"](1, QnaToolingDialogComponent_div_13_ng_container_2_ng_container_1_qna_banner_lazy_1_Template, 1, 1, "qna-banner-lazy", 33), 
            fesm2022_core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var bannerContent_r18 = ctx.ngIf;
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", bannerContent_r18.showBanners);
            }
        }
        function QnaToolingDialogComponent_div_13_ng_container_2_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275template"](1, QnaToolingDialogComponent_div_13_ng_container_2_ng_container_1_Template, 2, 1, "ng-container", 13), 
            fesm2022_core["\u0275\u0275pipe"](2, "async"), fesm2022_core["\u0275\u0275elementContainerEnd"]()), 
            2 & rf) {
                var ctx_r15 = fesm2022_core["\u0275\u0275nextContext"](2);
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", fesm2022_core["\u0275\u0275pipeBind1"](2, 1, ctx_r15.bannerContent$));
            }
        }
        function QnaToolingDialogComponent_div_13_div_6_Template(rf, ctx) {
            if (1 & rf) {
                var _r26 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "div", 35)(1, "div", 36), fesm2022_core["\u0275\u0275element"](2, "pbi-office-icon", 37), 
                fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275elementStart"](3, "label", 38), 
                fesm2022_core["\u0275\u0275text"](4), fesm2022_core["\u0275\u0275elementEnd"](), 
                fesm2022_core["\u0275\u0275element"](5, "label", 39), fesm2022_core["\u0275\u0275elementStart"](6, "button", 40), 
                fesm2022_core["\u0275\u0275listener"]("click", function() {
                    var childNode_r23 = fesm2022_core["\u0275\u0275restoreView"](_r26).$implicit, ctx_r25 = fesm2022_core["\u0275\u0275nextContext"](2);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r25.showContent(childNode_r23.contentType));
                }), fesm2022_core["\u0275\u0275text"](7), fesm2022_core["\u0275\u0275elementEnd"]()();
            }
            if (2 & rf) {
                var childNode_r23 = ctx.$implicit, i_r24 = ctx.index;
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("name", childNode_r23.imagePath)("ngClass", childNode_r23.imgClassName), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275propertyInterpolate"]("id", "navNodeTitle" + i_r24), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275textInterpolate"](childNode_r23.title), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275propertyInterpolate"]("id", "navNodeSubTitle" + i_r24), 
                fesm2022_core["\u0275\u0275property"]("localize", childNode_r23.subTitleKey), fesm2022_core["\u0275\u0275advance"](1), 
                fesm2022_core["\u0275\u0275propertyInterpolate"]("title", childNode_r23.title), 
                fesm2022_core["\u0275\u0275attribute"]("aria-labelledby", "navNodeTitle" + i_r24 + " navNodeSubTitle" + i_r24), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275textInterpolate"](childNode_r23.title);
            }
        }
        var qna_tooling_dialog_component_c8 = function(a0) {
            return {
                "background-image": a0
            };
        };
        function QnaToolingDialogComponent_div_13_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 24), fesm2022_core["\u0275\u0275element"](1, "h1", 25), 
            fesm2022_core["\u0275\u0275template"](2, QnaToolingDialogComponent_div_13_ng_container_2_Template, 3, 3, "ng-container", 13), 
            fesm2022_core["\u0275\u0275pipe"](3, "async"), fesm2022_core["\u0275\u0275elementStart"](4, "section", 26)(5, "div", 27), 
            fesm2022_core["\u0275\u0275template"](6, QnaToolingDialogComponent_div_13_div_6_Template, 8, 9, "div", 28), 
            fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275elementStart"](7, "div", 29), 
            fesm2022_core["\u0275\u0275element"](8, "title", 30)(9, "a", 31)(10, "a", 32), fesm2022_core["\u0275\u0275elementEnd"]()()()), 
            2 & rf) {
                var ctx_r4 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("ngIf", fesm2022_core["\u0275\u0275pipeBind1"](3, 4, ctx_r4.isImproveLsdlCopilotEnabled$)), 
                fesm2022_core["\u0275\u0275advance"](4), fesm2022_core["\u0275\u0275property"]("ngForOf", ctx_r4.getNode("qnaTraining").childNodes), 
                fesm2022_core["\u0275\u0275advance"](3), fesm2022_core["\u0275\u0275property"]("ngStyle", fesm2022_core["\u0275\u0275pureFunction1"](6, qna_tooling_dialog_component_c8, ctx_r4.instructionImageUrl)), 
                fesm2022_core["\u0275\u0275attribute"]("aria-describedby", "instructionTitle");
            }
        }
        function QnaToolingDialogComponent_ng_container_14_Template(rf, ctx) {
            1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275elementStart"](1, "div", 41), 
            fesm2022_core["\u0275\u0275element"](2, "spinner", 42), fesm2022_core["\u0275\u0275elementEnd"](), 
            fesm2022_core["\u0275\u0275elementContainerEnd"]()), 2 & rf && (fesm2022_core["\u0275\u0275advance"](2), 
            fesm2022_core["\u0275\u0275property"]("delay", 0));
        }
        function QnaToolingDialogComponent_ng_container_16_qna_feedback_loop_1_Template(rf, ctx) {
            if (1 & rf) {
                var _r34 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "qna-feedback-loop", 49), fesm2022_core["\u0275\u0275listener"]("utteranceSelected", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r34);
                    var ctx_r33 = fesm2022_core["\u0275\u0275nextContext"](2);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r33.onReviewQuestionsUtteranceSelected($event));
                }), fesm2022_core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r27 = fesm2022_core["\u0275\u0275nextContext"](2);
                fesm2022_core["\u0275\u0275property"]("hidden", "reviewQuestions" !== ctx_r27.activeContentType)("linguisticSchemaUpdated$", ctx_r27.linguisticSchemaUpdated$);
            }
        }
        function QnaToolingDialogComponent_ng_container_16_qna_teach_qna_2_Template(rf, ctx) {
            if (1 & rf) {
                var _r37 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "qna-teach-qna", 50, 51), fesm2022_core["\u0275\u0275listener"]("entryQuestionHandled", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r37);
                    var ctx_r36 = fesm2022_core["\u0275\u0275nextContext"](2);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r36.teachQnaEntryQuestionHandled($event));
                })("savedLinguisticSchemaUpdated", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r37);
                    var ctx_r38 = fesm2022_core["\u0275\u0275nextContext"](2);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r38.updateSessionSavedLinguisticSchema($event));
                })("showAllMouseActionBlocker", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r37);
                    var ctx_r39 = fesm2022_core["\u0275\u0275nextContext"](2);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r39.showAllMouseActionBlocker($event));
                }), fesm2022_core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r28 = fesm2022_core["\u0275\u0275nextContext"](2);
                fesm2022_core["\u0275\u0275property"]("themeCollection", ctx_r28.themeCollection)("datasourceVariables", ctx_r28.datasourceVariables)("initialLinguisticSchema", ctx_r28.sessionSavedLinguisticSchema)("entryQuestion", ctx_r28.teachQnaEntryQuestion)("openingTelemetryEvent", ctx_r28.openContentTypeEvent)("entryPoint", ctx_r28.teachQnaEntryPoint);
            }
        }
        function QnaToolingDialogComponent_ng_container_16_qna_manage_terms_3_Template(rf, ctx) {
            if (1 & rf) {
                var _r41 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "qna-manage-terms", 52), fesm2022_core["\u0275\u0275listener"]("linguisticSchemaUpdated", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r41);
                    var ctx_r40 = fesm2022_core["\u0275\u0275nextContext"](2);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r40.updateSessionSavedLinguisticSchema($event));
                }), fesm2022_core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r29 = fesm2022_core["\u0275\u0275nextContext"](2);
                fesm2022_core["\u0275\u0275property"]("initialLinguisticSchema", ctx_r29.sessionSavedLinguisticSchema)("openingTelemetryEvent", ctx_r29.openContentTypeEvent)("entryPoint", ctx_r29.contentTabCommonEntryPoint);
            }
        }
        function QnaToolingDialogComponent_ng_container_16_qna_suggest_questions_4_Template(rf, ctx) {
            if (1 & rf) {
                var _r44 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "qna-suggest-questions", 53, 54), fesm2022_core["\u0275\u0275listener"]("linguisticSchemaUpdated", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r44);
                    var ctx_r43 = fesm2022_core["\u0275\u0275nextContext"](2);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r43.updateSessionSavedLinguisticSchema($event));
                }), fesm2022_core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r30 = fesm2022_core["\u0275\u0275nextContext"](2);
                fesm2022_core["\u0275\u0275property"]("initialLinguisticSchema", ctx_r30.sessionSavedLinguisticSchema)("openingTelemetryEvent", ctx_r30.openContentTypeEvent)("themeCollection", ctx_r30.themeCollection);
            }
        }
        function QnaToolingDialogComponent_ng_container_16_qna_bulk_editing_5_Template(rf, ctx) {
            if (1 & rf) {
                var _r47 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "qna-bulk-editing", 55, 56), fesm2022_core["\u0275\u0275listener"]("linguisticSchemaUpdated", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r47);
                    var ctx_r46 = fesm2022_core["\u0275\u0275nextContext"](2);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r46.updateSessionSavedLinguisticSchema($event));
                })("showAllMouseActionBlocker", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r47);
                    var ctx_r48 = fesm2022_core["\u0275\u0275nextContext"](2);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r48.showAllMouseActionBlocker($event));
                }), fesm2022_core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r31 = fesm2022_core["\u0275\u0275nextContext"](2);
                fesm2022_core["\u0275\u0275property"]("initialLinguisticSchema", ctx_r31.sessionSavedLinguisticSchema)("parentTelemetryEvent", ctx_r31.sessionEvent);
            }
        }
        function QnaToolingDialogComponent_ng_container_16_qna_manage_phrasings_6_Template(rf, ctx) {
            if (1 & rf) {
                var _r51 = fesm2022_core["\u0275\u0275getCurrentView"]();
                fesm2022_core["\u0275\u0275elementStart"](0, "qna-manage-phrasings", 57, 58), fesm2022_core["\u0275\u0275listener"]("phrasingLabelsUpdated", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r51);
                    var ctx_r50 = fesm2022_core["\u0275\u0275nextContext"](2);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r50.updatePhrasingLabelsCache($event));
                })("entityTermsUpdated", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r51);
                    var ctx_r52 = fesm2022_core["\u0275\u0275nextContext"](2);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r52.updateEntityTermsCache($event));
                })("linguisticSchemaUpdated", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r51);
                    var ctx_r53 = fesm2022_core["\u0275\u0275nextContext"](2);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r53.updateSessionSavedLinguisticSchema($event));
                })("showAllMouseActionBlocker", function($event) {
                    fesm2022_core["\u0275\u0275restoreView"](_r51);
                    var ctx_r54 = fesm2022_core["\u0275\u0275nextContext"](2);
                    return fesm2022_core["\u0275\u0275resetView"](ctx_r54.showAllMouseActionBlocker($event));
                }), fesm2022_core["\u0275\u0275elementEnd"]();
            }
            if (2 & rf) {
                var ctx_r32 = fesm2022_core["\u0275\u0275nextContext"](2);
                fesm2022_core["\u0275\u0275property"]("enterPageTelemetryEvent", ctx_r32.openContentTypeEvent)("initialLinguisticSchema", ctx_r32.sessionSavedLinguisticSchema)("initialDiagnostics", ctx_r32.sessionDiagnostics)("phrasingLabelsCache", ctx_r32.phrasingLabelsCache)("entityTermsCache", ctx_r32.entityTermsCache);
            }
        }
        function QnaToolingDialogComponent_ng_container_16_Template(rf, ctx) {
            if (1 & rf && (fesm2022_core["\u0275\u0275elementContainerStart"](0), fesm2022_core["\u0275\u0275template"](1, QnaToolingDialogComponent_ng_container_16_qna_feedback_loop_1_Template, 1, 2, "qna-feedback-loop", 43), 
            fesm2022_core["\u0275\u0275template"](2, QnaToolingDialogComponent_ng_container_16_qna_teach_qna_2_Template, 2, 6, "qna-teach-qna", 44), 
            fesm2022_core["\u0275\u0275template"](3, QnaToolingDialogComponent_ng_container_16_qna_manage_terms_3_Template, 1, 3, "qna-manage-terms", 45), 
            fesm2022_core["\u0275\u0275template"](4, QnaToolingDialogComponent_ng_container_16_qna_suggest_questions_4_Template, 2, 3, "qna-suggest-questions", 46), 
            fesm2022_core["\u0275\u0275template"](5, QnaToolingDialogComponent_ng_container_16_qna_bulk_editing_5_Template, 2, 2, "qna-bulk-editing", 47), 
            fesm2022_core["\u0275\u0275template"](6, QnaToolingDialogComponent_ng_container_16_qna_manage_phrasings_6_Template, 2, 5, "qna-manage-phrasings", 48), 
            fesm2022_core["\u0275\u0275elementContainerEnd"]()), 2 & rf) {
                var ctx_r6 = fesm2022_core["\u0275\u0275nextContext"]();
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", ctx_r6.isReviewQuestionsOpenedOnce), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", "teachQna" === ctx_r6.activeContentType), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", "manageTerms" === ctx_r6.activeContentType), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", "suggestQuestions" === ctx_r6.activeContentType), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", "bulkEditing" === ctx_r6.activeContentType), 
                fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", "managePhrasings" === ctx_r6.activeContentType);
            }
        }
        function QnaToolingDialogComponent_div_22_Template(rf, ctx) {
            1 & rf && fesm2022_core["\u0275\u0275element"](0, "div", 59);
        }
        var QnaToolingDialogComponent = function() {
            function QnaToolingDialogComponent(dataSources, localizationService, dataSourcesSerializer, dialogRef, errorService, featureSwitchService, highContrastCssGenerationService, lazyScoped, qnaService, resourceLoader, telemetryService, themeService, dialogBindings, promiseFactory, eventAggregation) {
                var _this = this;
                this.dataSourcesSerializer = dataSourcesSerializer, this.dialogRef = dialogRef, 
                this.errorService = errorService, this.featureSwitchService = featureSwitchService, 
                this.highContrastCssGenerationService = highContrastCssGenerationService, this.lazyScoped = lazyScoped, 
                this.qnaService = qnaService, this.resourceLoader = resourceLoader, this.telemetryService = telemetryService, 
                this.themeService = themeService, this.dialogBindings = dialogBindings, this.promiseFactory = promiseFactory, 
                this.eventAggregation = eventAggregation, this.isInitialized$ = new BehaviorSubject.X(!1), 
                this.linguisticSchemaUpdated$ = new BehaviorSubject.X(null), this.instructionImageUrl = "url(../../..".concat((0, 
                build.Xr)(), "/images/tooling-instruction-preview.png"), this.isReviewQuestionsOpenedOnce = !1, 
                this.luciaDomainModelChangedHandler = function() {
                    return _this.onLuciaDomainModelChanged();
                };
                var nodeReviewQuestions = {
                    type: "Content",
                    contentType: "reviewQuestions",
                    title: localizationService.get("QnaTooling_ReviewQuestions_Title"),
                    subTitleKey: "QnaTooling_ReviewQuestions_Subtitle",
                    imagePath: "".concat(qna_sprite_icons.R.QnaReviewQuestions60x57)
                }, nodeTeachQna = {
                    type: "Content",
                    contentType: "teachQna",
                    title: localizationService.get("QnaTooling_TeachQna_Title"),
                    subTitleKey: "QnaTooling_TeachQna_Subtitle",
                    imagePath: "".concat(qna_sprite_icons.R.QnaTeachQna60x56)
                }, nodeManageTerms = {
                    type: "Content",
                    contentType: "manageTerms",
                    title: localizationService.get("QnaTooling_ManageTerms_Title"),
                    subTitleKey: "QnaTooling_ManageTerms_Subtitle"
                }, nodeSuggestQuestions = {
                    type: "Content",
                    contentType: "suggestQuestions",
                    title: localizationService.get("QnaTooling_SuggestQuestions_Title"),
                    subTitleKey: "QnaTooling_SuggestQuestions_Subtitle",
                    imagePath: "".concat(qna_sprite_icons.R.QnaSuggestQuestions72x66)
                }, nodeBulkEditing = {
                    type: "Content",
                    contentType: "bulkEditing",
                    title: localizationService.get("Synonyms"),
                    subTitleKey: "QnaTooling_BulkEditing_Subtitle_Nav",
                    imagePath: "".concat(qna_sprite_icons.R.QnaBulkEditing60x57)
                }, nodeManagePhrasings = {
                    type: "Content",
                    contentType: "managePhrasings",
                    title: localizationService.get("Relationships"),
                    subTitleKey: "QnaTooling_ManagePhrasings_Subtitle"
                }, nodeQnaTraining = {
                    type: "Content",
                    contentType: "qnaTraining",
                    title: localizationService.get("QnaTooling_GettingStarted"),
                    subTitleKey: "QnaTooling_QnaTraining_Subtitle",
                    childNodes: [ nodeBulkEditing, nodeReviewQuestions, nodeTeachQna, nodeSuggestQuestions ]
                }, dividerNode = {
                    type: "Divider"
                };
                this.navigationNodes = [], this.navigationNodes.push(nodeQnaTraining), this.navigationNodes.push(dividerNode), 
                this.navigationNodes.push(nodeBulkEditing), this.featureSwitchService.featureSwitches.qnaToolingPhrasingEditor && this.navigationNodes.push(nodeManagePhrasings), 
                this.featureSwitchService.featureSwitches.qnaToolingPhrasingEditor || this.navigationNodes.push(nodeManageTerms), 
                this.navigationNodes.push(dividerNode), this.navigationNodes.push(nodeTeachQna), 
                this.navigationNodes.push(nodeReviewQuestions), this.navigationNodes.push(nodeSuggestQuestions), 
                this.activeContentType = "qnaTraining";
                var dataSourcesArray = this.dataSourcesSerializer.deserializeDataSources(dialogBindings.dataSources);
                this.teachQnaEntryQuestion = dialogBindings.entryQuestion, dataSources.set(dataSourcesArray), 
                this.datasourceVariables = dialogBindings.dataSourceVariables, this.themeCollection = dialogBindings.themeCollection, 
                this.resourcePackages = dialogBindings.resourcePackages, this.showDialogMask = !1, 
                this.eventAggregation.subscribe("LuciaDomainModelChangedEvent", this.luciaDomainModelChangedHandler), 
                this.initializeHighContrastRules();
            }
            return QnaToolingDialogComponent.prototype.ngOnInit = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var _a, schemaWithWarnings, error_1, errorDetail, _b, _this = this;
                    return (0, tslib_es6.__generator)(this, function(_c) {
                        switch (_c.label) {
                          case 0:
                            return [ 4, themeUtils.P.loadThemeAndBaseTheme(this.promiseFactory, this.resourceLoader, this.themeService, this.resourcePackages, this.themeCollection) ];

                          case 1:
                            _c.sent(), this.sessionEvent = this.telemetryService.logEvent(QnAToolingOpenTooling, {
                                entryPoint: this.dialogBindings.entryPoint
                            }), _c.label = 2;

                          case 2:
                            return _c.trys.push([ 2, 5, , 6 ]), _a = this, [ 4, this.qnaService.getLsdlSharingPermissionAsync() ];

                          case 3:
                            return _a.sessionStartLsdlSharingPermission = _c.sent(), [ 4, this.qnaService.getCurrentLinguisticSchemaJsonWithDiagnosticMessages("4.0.0") ];

                          case 4:
                            return schemaWithWarnings = _c.sent(), this.sessionDiagnostics = schemaWithWarnings.DiagnosticMessages, 
                            this.sessionStartLinguisticSchema = schemaWithWarnings.LinguisticSchema, this.sessionSavedLinguisticSchema = this.sessionStartLinguisticSchema, 
                            this.isInitialized$.next(!0), null != this.dialogBindings.entryContentType ? this.showContent(this.dialogBindings.entryContentType, !0, !1) : this.contentTabCommonEntryPoint = this.dialogBindings.entryPoint, 
                            [ 3, 6 ];

                          case 5:
                            return error_1 = _c.sent(), errorDetail = JSON.parse(error_1), this.errorService.error(errorDetail.message, "getLinguisticSchemaError", {
                                stackTrace: errorDetail.stackTrace,
                                errorDetails: errorDetail.details,
                                source: "PowerBI",
                                level: traceType.U.UnexpectedError
                            }), [ 3, 6 ];

                          case 6:
                            return this.isImproveLsdlCopilotEnabled$ = this.featureSwitchService.featureSwitches$.pipe((0, 
                            map.U)(function(fs) {
                                return fs.qnaImproveLsdlCopilot;
                            })), [ 4, this.lazyScoped.get("improveLsdlBackgroundService") ];

                          case 7:
                            return _c.sent().tryImproveLsdl("qnaTooling"), _b = this, [ 4, this.lazyScoped.get("qnaBannerService") ];

                          case 8:
                            return _b.qnaBannerService = _c.sent(), this.bannerContent$ = this.qnaBannerService.getBannerContent("ToolingHome").pipe((0, 
                            map.U)(function(bannerContent) {
                                var _a, actionHandlers = new Map;
                                return null === (_a = bannerContent.actionHandlers) || void 0 === _a || _a.forEach(function(handler, actionId) {
                                    actionHandlers.set(actionId, null != handler ? handler : _this.getBannerActionHandler(actionId, bannerContent));
                                }), (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, bannerContent), {
                                    actionHandlers
                                });
                            })), [ 2 ];
                        }
                    });
                });
            }, QnaToolingDialogComponent.prototype.ngAfterViewInit = function() {
                focusManager.IK.getInstance().register(this.qnaToolingDialog.nativeElement);
            }, QnaToolingDialogComponent.prototype.ngOnDestroy = function() {
                this.eventAggregation.unsubscribe("LuciaDomainModelChangedEvent", this.luciaDomainModelChangedHandler);
            }, QnaToolingDialogComponent.prototype.showContent = function(contentType, fromToolingDialogInitialEntry, fromReviewQuestions) {
                return void 0 === fromToolingDialogInitialEntry && (fromToolingDialogInitialEntry = !1), 
                void 0 === fromReviewQuestions && (fromReviewQuestions = !1), (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return this.activeContentType === contentType ? [ 2 ] : "teachQna" !== this.activeContentType ? [ 3, 2 ] : [ 4, this.teachQna.handleAttemptToLeave() ];

                          case 1:
                            if (!_a.sent()) return [ 2 ];
                            _a.label = 2;

                          case 2:
                            return "suggestQuestions" !== this.activeContentType ? [ 3, 4 ] : [ 4, this.suggestQuestions.handleAttemptToLeave() ];

                          case 3:
                            if (!_a.sent()) return [ 2 ];
                            _a.label = 4;

                          case 4:
                            return "bulkEditing" !== this.activeContentType ? [ 3, 6 ] : [ 4, this.bulkEditing.handleAttemptToLeave() ];

                          case 5:
                            if (!_a.sent()) return [ 2 ];
                            _a.label = 6;

                          case 6:
                            return "managePhrasings" !== this.activeContentType ? [ 3, 8 ] : [ 4, this.managePhrasings.handleAttemptToLeave() ];

                          case 7:
                            if (!_a.sent()) return [ 2 ];
                            _a.label = 8;

                          case 8:
                            return "reviewQuestions" === contentType && (this.isReviewQuestionsOpenedOnce = !0), 
                            this.contentTabCommonEntryPoint = fromToolingDialogInitialEntry ? this.dialogBindings.entryPoint : "Author", 
                            this.openContentTypeEvent = this.logOpenContentTypeTelemetryEvent(contentType, fromToolingDialogInitialEntry, fromReviewQuestions), 
                            this.activeContentType = contentType, [ 2 ];
                        }
                    });
                });
            }, QnaToolingDialogComponent.prototype.getNode = function(contentType) {
                return _.find(this.navigationNodes, function(node) {
                    return "Content" === node.type && node.contentType === contentType;
                });
            }, QnaToolingDialogComponent.prototype.teachQnaEntryQuestionHandled = function() {
                this.teachQnaEntryQuestion = void 0;
            }, QnaToolingDialogComponent.prototype.updateSessionSavedLinguisticSchema = function(newSchema) {
                this.sessionSavedLinguisticSchema = _.cloneDeep(newSchema), this.linguisticSchemaUpdated$.next();
            }, QnaToolingDialogComponent.prototype.showAllMouseActionBlocker = function(show) {
                this.showDialogMask = show;
            }, QnaToolingDialogComponent.prototype.escape = function(_event) {
                this.dialogCloseClicked();
            }, QnaToolingDialogComponent.prototype.dialogCloseClicked = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var currentPermission, dialogResult;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return "teachQna" !== this.activeContentType ? [ 3, 2 ] : [ 4, this.confirmCloseFromTeachQna() ];

                          case 1:
                            if (!_a.sent()) return [ 2 ];
                            _a.label = 2;

                          case 2:
                            return "suggestQuestions" !== this.activeContentType ? [ 3, 4 ] : [ 4, this.confirmCloseFromSuggestQuestions() ];

                          case 3:
                            if (!_a.sent()) return [ 2 ];
                            _a.label = 4;

                          case 4:
                            return "bulkEditing" !== this.activeContentType ? [ 3, 6 ] : [ 4, this.confirmCloseFromBulkEditing() ];

                          case 5:
                            if (!_a.sent()) return [ 2 ];
                            _a.label = 6;

                          case 6:
                            return "managePhrasings" !== this.activeContentType ? [ 3, 8 ] : [ 4, this.confirmCloseFromManagePhrasings() ];

                          case 7:
                            if (!_a.sent()) return [ 2 ];
                            _a.label = 8;

                          case 8:
                            return [ 4, this.qnaService.getLsdlSharingPermissionAsync() ];

                          case 9:
                            return (currentPermission = _a.sent()) !== this.sessionStartLsdlSharingPermission && this.telemetryService.logEvent(telemetry_events.eV, {
                                newPermission: currentPermission
                            }), [ 4, this.qnaService.resetLinguisticSchemaJson() ];

                          case 10:
                            return _a.sent(), JSON.stringify(this.sessionSavedLinguisticSchema) === JSON.stringify(this.sessionStartLinguisticSchema) ? (this.dialogRef.close(), 
                            [ 2 ]) : (dialogResult = {
                                modifiedLinguisticSchemaJson: JSON.stringify(this.sessionSavedLinguisticSchema)
                            }, this.dialogRef.close(dialogResult), [ 2 ]);
                        }
                    });
                });
            }, QnaToolingDialogComponent.prototype.onReviewQuestionsUtteranceSelected = function(utterance) {
                this.teachQnaEntryQuestion = utterance, this.showContent("teachQna", !1, !0);
            }, QnaToolingDialogComponent.prototype.keydownOnNavigationPane = function($event) {
                if (39 === $event.keyCode && this.activeContentContainer) {
                    var elementToFocus = FocusNavigationUtility.M.getFirstTabbableChild(this.activeContentContainer.nativeElement);
                    elementToFocus && focusManager.IK.focus(elementToFocus, !0);
                }
            }, QnaToolingDialogComponent.prototype.keydownOnActiveContentPane = function($event) {
                var _a;
                if ("INPUT" !== (null === (_a = $event.target) || void 0 === _a ? void 0 : _a.tagName) && 37 === $event.keyCode) {
                    debug.fF.assertValue(this.navigationNodesContainer, "navigationNodesContainer");
                    var elementToFocus = $(this.navigationNodesContainer.nativeElement).find(".activeNavigationNode button").get(0);
                    elementToFocus && focusManager.IK.focus(elementToFocus, !0);
                }
            }, QnaToolingDialogComponent.prototype.updatePhrasingLabelsCache = function(phrasingLabelsCache) {
                this.phrasingLabelsCache = phrasingLabelsCache;
            }, QnaToolingDialogComponent.prototype.updateEntityTermsCache = function(cache) {
                this.entityTermsCache = cache;
            }, QnaToolingDialogComponent.prototype.onBannerDismiss = function(bannerId) {
                this.qnaBannerService.dismissBanner("ToolingHome", bannerId);
            }, QnaToolingDialogComponent.prototype.onLuciaDomainModelChanged = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    var schemaWithWarnings;
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.qnaService.getCurrentLinguisticSchemaJsonWithDiagnosticMessages("4.0.0") ];

                          case 1:
                            return schemaWithWarnings = _a.sent(), this.sessionDiagnostics = schemaWithWarnings.DiagnosticMessages, 
                            this.sessionSavedLinguisticSchema = schemaWithWarnings.LinguisticSchema, [ 2 ];
                        }
                    });
                });
            }, QnaToolingDialogComponent.prototype.logOpenContentTypeTelemetryEvent = function(contentType, fromToolingDialogInitialEntry, fromReviewQuestions) {
                switch (void 0 === fromToolingDialogInitialEntry && (fromToolingDialogInitialEntry = !1), 
                void 0 === fromReviewQuestions && (fromReviewQuestions = !1), contentType) {
                  case "bulkEditing":
                    return this.telemetryService.logChildEvent(this.sessionEvent, QnAToolingOpenFieldSynonyms, {
                        entryPoint: this.contentTabCommonEntryPoint
                    });

                  case "reviewQuestions":
                    return this.telemetryService.logChildEvent(this.sessionEvent, QnAToolingOpenReviewQuestions, {
                        entryPoint: this.contentTabCommonEntryPoint
                    });

                  case "managePhrasings":
                    return this.telemetryService.logChildEvent(this.sessionEvent, QnAToolingOpenManagePhrasings, {
                        entryPoint: this.contentTabCommonEntryPoint
                    });

                  case "teachQna":
                    return this.telemetryService.logChildEvent(this.sessionEvent, QnAToolingOpenTeachQna, {
                        entryPoint: fromToolingDialogInitialEntry ? this.dialogBindings.entryPoint : fromReviewQuestions ? "FromReviewQuestions" : "Author"
                    });

                  case "manageTerms":
                  case "qnaTraining":
                    return;

                  case "suggestQuestions":
                    return this.telemetryService.logChildEvent(this.sessionEvent, QnAToolingOpenSuggestQuestions, {
                        entryPoint: this.contentTabCommonEntryPoint
                    });

                  default:
                    debug.fF.assertNever(contentType);
                }
            }, QnaToolingDialogComponent.prototype.confirmCloseFromTeachQna = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.teachQna.handleAttemptToLeave() ];

                          case 1:
                            return [ 2, _a.sent() ];
                        }
                    });
                });
            }, QnaToolingDialogComponent.prototype.confirmCloseFromSuggestQuestions = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.suggestQuestions.handleAttemptToLeave() ];

                          case 1:
                            return [ 2, _a.sent() ];
                        }
                    });
                });
            }, QnaToolingDialogComponent.prototype.confirmCloseFromBulkEditing = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.bulkEditing.handleAttemptToLeave() ];

                          case 1:
                            return [ 2, _a.sent() ];
                        }
                    });
                });
            }, QnaToolingDialogComponent.prototype.confirmCloseFromManagePhrasings = function() {
                return (0, tslib_es6.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib_es6.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return [ 4, this.managePhrasings.handleAttemptToLeave() ];

                          case 1:
                            return [ 2, _a.sent() ];
                        }
                    });
                });
            }, QnaToolingDialogComponent.prototype.initializeHighContrastRules = function() {
                this.highContrastCssGenerationService.addRule(".themeableElement.qnaToolingDialog .navigateToContentType", "{ border: 1px solid @buttonForegroundColor !important; }"), 
                this.highContrastCssGenerationService.addRule(".themeableElement.qnaToolingDialog .navigationNodeContainer", "{ outline: 1px solid @foregroundColor !important; }");
            }, QnaToolingDialogComponent.prototype.getBannerActionHandler = function(actionId, bannerContent) {
                var _this = this;
                if ("noop" !== actionId) {
                    if ("switchToSynonymsPage" === actionId || "switchToPhrasingsPage" === actionId) {
                        var toolingContentType_1 = "switchToSynonymsPage" === actionId ? "bulkEditing" : "managePhrasings";
                        return function() {
                            var bannerToRemove = _.find(bannerContent.banners, function(b) {
                                return !!_.find(b.actions, function(a) {
                                    return a.id === actionId;
                                });
                            });
                            debug.fF.assertValue(bannerToRemove, "bannerToRemove"), _this.qnaBannerService.dismissBanner("ToolingHome", null == bannerToRemove ? void 0 : bannerToRemove.id), 
                            _this.showContent(toolingContentType_1, !1, !1);
                        };
                    }
                    debug.fF.assertFail("actionId ".concat(actionId, " not handled"));
                }
            }, QnaToolingDialogComponent.\u0275fac = function(t) {
                return new (t || QnaToolingDialogComponent)(fesm2022_core["\u0275\u0275directiveInject"](data_sources_service.D), fesm2022_core["\u0275\u0275directiveInject"](localization_service.o), fesm2022_core["\u0275\u0275directiveInject"](data_source_serializer_service._), fesm2022_core["\u0275\u0275directiveInject"](dialog.so), fesm2022_core["\u0275\u0275directiveInject"](error_service.T), fesm2022_core["\u0275\u0275directiveInject"](feature_switch_service.vZ), fesm2022_core["\u0275\u0275directiveInject"](high_contrast_css_generation_service.g), fesm2022_core["\u0275\u0275directiveInject"](lazy_scoped_provider.H), fesm2022_core["\u0275\u0275directiveInject"](desktop_qna_service.r), fesm2022_core["\u0275\u0275directiveInject"](resource_loader_service.l6), fesm2022_core["\u0275\u0275directiveInject"](Telemetry.y0), fesm2022_core["\u0275\u0275directiveInject"](theme_service.f), fesm2022_core["\u0275\u0275directiveInject"](dialog.WI), fesm2022_core["\u0275\u0275directiveInject"](promiseFactory.t), fesm2022_core["\u0275\u0275directiveInject"](eventAggregationService.x));
            }, QnaToolingDialogComponent.\u0275cmp = fesm2022_core["\u0275\u0275defineComponent"]({
                type: QnaToolingDialogComponent,
                selectors: [ [ "qna-tooling-dialog" ] ],
                viewQuery: function(rf, ctx) {
                    if (1 & rf && (fesm2022_core["\u0275\u0275viewQuery"](qna_tooling_dialog_component_c0, 5), 
                    fesm2022_core["\u0275\u0275viewQuery"](qna_tooling_dialog_component_c1, 5), fesm2022_core["\u0275\u0275viewQuery"](qna_tooling_dialog_component_c2, 5), 
                    fesm2022_core["\u0275\u0275viewQuery"](qna_tooling_dialog_component_c3, 5), fesm2022_core["\u0275\u0275viewQuery"](qna_tooling_dialog_component_c4, 5), 
                    fesm2022_core["\u0275\u0275viewQuery"](qna_tooling_dialog_component_c5, 5), fesm2022_core["\u0275\u0275viewQuery"](qna_tooling_dialog_component_c6, 5)), 
                    2 & rf) {
                        var _t = void 0;
                        fesm2022_core["\u0275\u0275queryRefresh"](_t = fesm2022_core["\u0275\u0275loadQuery"]()) && (ctx.qnaToolingDialog = _t.first), 
                        fesm2022_core["\u0275\u0275queryRefresh"](_t = fesm2022_core["\u0275\u0275loadQuery"]()) && (ctx.teachQna = _t.first), 
                        fesm2022_core["\u0275\u0275queryRefresh"](_t = fesm2022_core["\u0275\u0275loadQuery"]()) && (ctx.suggestQuestions = _t.first), 
                        fesm2022_core["\u0275\u0275queryRefresh"](_t = fesm2022_core["\u0275\u0275loadQuery"]()) && (ctx.bulkEditing = _t.first), 
                        fesm2022_core["\u0275\u0275queryRefresh"](_t = fesm2022_core["\u0275\u0275loadQuery"]()) && (ctx.activeContentContainer = _t.first), 
                        fesm2022_core["\u0275\u0275queryRefresh"](_t = fesm2022_core["\u0275\u0275loadQuery"]()) && (ctx.navigationNodesContainer = _t.first), 
                        fesm2022_core["\u0275\u0275queryRefresh"](_t = fesm2022_core["\u0275\u0275loadQuery"]()) && (ctx.managePhrasings = _t.first);
                    }
                },
                hostBindings: function(rf, ctx) {
                    1 & rf && fesm2022_core["\u0275\u0275listener"]("keydown.escape", function($event) {
                        return ctx.escape($event);
                    }, !1, fesm2022_core["\u0275\u0275resolveDocument"]);
                },
                decls: 23,
                vars: 10,
                consts: [ [ 1, "qnaToolingDialog", "themeableElement", "pbi-dialog-maxSize" ], [ "qnaToolingDialog", "" ], [ "mat-dialog-title", "", 1, "dragHandle", 2, "z-index", "1" ], [ "localizeTooltip", "Close", 1, "glyphicon", "pbi-glyph-close", "glyph-mini", 2, "z-index", "2", 3, "accessible-click" ], [ 2, "z-index", "0" ], [ 1, "navPane", 3, "keydown" ], [ "navigationNodesContainer", "" ], [ 1, "glyphicon", "icon", "glyph-small", "pbi-glyph-settings" ], [ 1, "headerText", 3, "localize" ], [ 4, "ngFor", "ngForOf" ], [ "focus-nav-mode", "Hierarchy", 1, "activeContentContainer", 3, "keydown" ], [ "activeContentContainer", "" ], [ "class", "activeContentInnerContainer qnaTrainingContentContainer", 4, "ngIf" ], [ 4, "ngIf" ], [ 1, "previewBanner" ], [ 1, "glyphicon", "glyph-small", "pbi-glyph-info" ], [ "localize", "Generic_Feature_InPreview" ], [ "href", "https://go.microsoft.com/fwlink/?linkid=2103726", "target", "_blank", "localize", "Generic_LearnMore", 1, "pbi-external-link" ], [ "style", "z-index: 3", "class", "dialogMask", 4, "ngIf" ], [ "class", "navigationDividerNode", 4, "ngIf" ], [ "class", "navigationContentNode", "role", "tab", 3, "ngClass", "id", 4, "ngIf" ], [ 1, "navigationDividerNode" ], [ "role", "tab", 1, "navigationContentNode", 3, "ngClass", "id" ], [ 3, "click" ], [ 1, "activeContentInnerContainer", "qnaTrainingContentContainer" ], [ "localize", "QnaTooling_GettingStarted", 1, "title" ], [ 1, "allNavigationNodesContainer", "gridView" ], [ 1, "navigationNodesContainer" ], [ "class", "navigationContentNode", 4, "ngFor", "ngForOf" ], [ 1, "instructionContainer" ], [ "id", "instructionTitle", "localize", "QnaTooling_QnaTraining_Subtitle", 1, "instructionTitle" ], [ "href", "https://go.microsoft.com/fwlink/?linkid=2103740", "target", "_blank", 1, "instructionContent", 3, "ngStyle" ], [ "href", "https://go.microsoft.com/fwlink/?linkid=2102557", "target", "_blank", "localize", "QnaTooling_LearnMore", 1, "pbi-external-link" ], [ "class", "qnaBanner", 3, "bannerContent", "onDismiss", 4, "ngIf" ], [ 1, "qnaBanner", 3, "bannerContent", "onDismiss" ], [ 1, "navigationContentNode" ], [ 1, "navNodeIcon" ], [ 3, "name", "ngClass" ], [ 1, "navNodeTitle", 3, "id" ], [ 1, "navNodeSubTitle", 3, "id", "localize" ], [ 1, "navigateToContentType", 3, "title", "click" ], [ 1, "loadingSpinner" ], [ "size", "large", 3, "delay" ], [ "class", "activeContentInnerContainer", 3, "hidden", "linguisticSchemaUpdated$", "utteranceSelected", 4, "ngIf" ], [ "class", "activeContentInnerContainer", 3, "themeCollection", "datasourceVariables", "initialLinguisticSchema", "entryQuestion", "openingTelemetryEvent", "entryPoint", "entryQuestionHandled", "savedLinguisticSchemaUpdated", "showAllMouseActionBlocker", 4, "ngIf" ], [ "class", "activeContentInnerContainer", 3, "initialLinguisticSchema", "openingTelemetryEvent", "entryPoint", "linguisticSchemaUpdated", 4, "ngIf" ], [ "class", "activeContentInnerContainer", 3, "initialLinguisticSchema", "openingTelemetryEvent", "themeCollection", "linguisticSchemaUpdated", 4, "ngIf" ], [ "class", "activeContentInnerContainer", 3, "initialLinguisticSchema", "parentTelemetryEvent", "linguisticSchemaUpdated", "showAllMouseActionBlocker", 4, "ngIf" ], [ "class", "activeContentInnerContainer", 3, "enterPageTelemetryEvent", "initialLinguisticSchema", "initialDiagnostics", "phrasingLabelsCache", "entityTermsCache", "phrasingLabelsUpdated", "entityTermsUpdated", "linguisticSchemaUpdated", "showAllMouseActionBlocker", 4, "ngIf" ], [ 1, "activeContentInnerContainer", 3, "hidden", "linguisticSchemaUpdated$", "utteranceSelected" ], [ 1, "activeContentInnerContainer", 3, "themeCollection", "datasourceVariables", "initialLinguisticSchema", "entryQuestion", "openingTelemetryEvent", "entryPoint", "entryQuestionHandled", "savedLinguisticSchemaUpdated", "showAllMouseActionBlocker" ], [ "teachQna", "" ], [ 1, "activeContentInnerContainer", 3, "initialLinguisticSchema", "openingTelemetryEvent", "entryPoint", "linguisticSchemaUpdated" ], [ 1, "activeContentInnerContainer", 3, "initialLinguisticSchema", "openingTelemetryEvent", "themeCollection", "linguisticSchemaUpdated" ], [ "suggestQuestions", "" ], [ 1, "activeContentInnerContainer", 3, "initialLinguisticSchema", "parentTelemetryEvent", "linguisticSchemaUpdated", "showAllMouseActionBlocker" ], [ "bulkEditing", "" ], [ 1, "activeContentInnerContainer", 3, "enterPageTelemetryEvent", "initialLinguisticSchema", "initialDiagnostics", "phrasingLabelsCache", "entityTermsCache", "phrasingLabelsUpdated", "entityTermsUpdated", "linguisticSchemaUpdated", "showAllMouseActionBlocker" ], [ "managePhrasings", "" ], [ 1, "dialogMask", 2, "z-index", "3" ] ],
                template: function(rf, ctx) {
                    1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "div", 0, 1), fesm2022_core["\u0275\u0275element"](2, "div", 2), 
                    fesm2022_core["\u0275\u0275elementStart"](3, "button", 3), fesm2022_core["\u0275\u0275listener"]("accessible-click", function() {
                        return ctx.dialogCloseClicked();
                    }), fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275elementStart"](4, "mat-dialog-content", 4)(5, "section", 5, 6), 
                    fesm2022_core["\u0275\u0275listener"]("keydown", function($event) {
                        return ctx.keydownOnNavigationPane($event);
                    }), fesm2022_core["\u0275\u0275elementStart"](7, "header"), fesm2022_core["\u0275\u0275element"](8, "i", 7)(9, "label", 8), 
                    fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275template"](10, QnaToolingDialogComponent_ng_container_10_Template, 3, 2, "ng-container", 9), 
                    fesm2022_core["\u0275\u0275elementEnd"](), fesm2022_core["\u0275\u0275elementStart"](11, "section", 10, 11), 
                    fesm2022_core["\u0275\u0275listener"]("keydown", function($event) {
                        return ctx.keydownOnActiveContentPane($event);
                    }), fesm2022_core["\u0275\u0275template"](13, QnaToolingDialogComponent_div_13_Template, 11, 8, "div", 12), 
                    fesm2022_core["\u0275\u0275template"](14, QnaToolingDialogComponent_ng_container_14_Template, 3, 1, "ng-container", 13), 
                    fesm2022_core["\u0275\u0275pipe"](15, "async"), fesm2022_core["\u0275\u0275template"](16, QnaToolingDialogComponent_ng_container_16_Template, 7, 6, "ng-container", 13), 
                    fesm2022_core["\u0275\u0275pipe"](17, "async"), fesm2022_core["\u0275\u0275elementStart"](18, "div", 14), 
                    fesm2022_core["\u0275\u0275element"](19, "i", 15)(20, "span", 16)(21, "a", 17), 
                    fesm2022_core["\u0275\u0275elementEnd"]()()(), fesm2022_core["\u0275\u0275template"](22, QnaToolingDialogComponent_div_22_Template, 1, 0, "div", 18), 
                    fesm2022_core["\u0275\u0275elementEnd"]()), 2 & rf && (fesm2022_core["\u0275\u0275advance"](9), 
                    fesm2022_core["\u0275\u0275property"]("localize", "QnaTooling_Title"), fesm2022_core["\u0275\u0275advance"](1), 
                    fesm2022_core["\u0275\u0275property"]("ngForOf", ctx.navigationNodes), fesm2022_core["\u0275\u0275advance"](3), 
                    fesm2022_core["\u0275\u0275property"]("ngIf", "qnaTraining" === ctx.activeContentType), 
                    fesm2022_core["\u0275\u0275advance"](1), fesm2022_core["\u0275\u0275property"]("ngIf", "qnaTraining" !== ctx.activeContentType && !fesm2022_core["\u0275\u0275pipeBind1"](15, 6, ctx.isInitialized$)), 
                    fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("ngIf", fesm2022_core["\u0275\u0275pipeBind1"](17, 8, ctx.isInitialized$)), 
                    fesm2022_core["\u0275\u0275advance"](6), fesm2022_core["\u0275\u0275property"]("ngIf", ctx.showDialogMask));
                },
                dependencies: [ dialog.uh, dialog.xY, common.NgClass, common.NgForOf, common.NgIf, common.NgStyle, localize_directive.X, localize_tooltip_directive.r, accessible_click_directive.t, pbi_office_icon_component.m, qna_banner_lazy_component.p, spinner_component.O, QnaFeedbackLoopComponent, QnaTeachQnaComponent, QnaManageTermsComponent, QnaSuggestQuestionsComponent, QnaBulkEditingComponent, QnaManagePhrasingsComponent, common.AsyncPipe ],
                styles: [ 'html[data-focus-source=key][_ngcontent-%COMP%]    :focus,   html[data-focus-source=key]   *:focus{outline:var(--focus-two-tone-outline-definition, auto 1px);outline-color:var(--focus-two-tone-outline-color, -webkit-focus-ring-color)}html[data-focus-source=mouse][_ngcontent-%COMP%]    :focus,   html[data-focus-source=mouse]   *:focus, html[data-focus-source=program][_ngcontent-%COMP%]    :focus,   html[data-focus-source=program]   *:focus{outline:none}  .qnaToolingDialogPanel .mat-mdc-dialog-container .mdc-dialog__surface{padding:0}  .qnaToolingDialogPanel .mat-mdc-dialog-container .mat-mdc-dialog-title{margin:0}  .qnaToolingDialogPanel .mat-mdc-dialog-container .mat-mdc-dialog-content{flex:1;display:flex;padding:0;overflow:hidden;color:var(--colorNeutralForeground2)}  .simpleConfirmationDialog.teachQnaConfirmationDialogPanel,   .simpleConfirmationDialog.manageTermsDeleteConfirmationPanel,   .simpleConfirmationDialog.suggestQuestionsConfirmationDialogPanel,   .simpleConfirmationDialog.bulkEditingConfirmationDialogPanel,   .simpleConfirmationDialog.managePhrasingsConfirmationDialogPanel,   .bulkEditingErrorDialogPanel,   .checkbox-dialog.syncSharedLsdlSuccessDialogPanel{transform:translate(-50%,-50%)}  .simpleConfirmationDialog.teachQnaConfirmationDialogPanel .mat-mdc-dialog-container,   .simpleConfirmationDialog.manageTermsDeleteConfirmationPanel .mat-mdc-dialog-container,   .simpleConfirmationDialog.suggestQuestionsConfirmationDialogPanel .mat-mdc-dialog-container,   .simpleConfirmationDialog.bulkEditingConfirmationDialogPanel .mat-mdc-dialog-container,   .simpleConfirmationDialog.managePhrasingsConfirmationDialogPanel .mat-mdc-dialog-container,   .bulkEditingErrorDialogPanel .mat-mdc-dialog-container,   .checkbox-dialog.syncSharedLsdlSuccessDialogPanel .mat-mdc-dialog-container{-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-user-drag:none}  .simpleConfirmationDialog.teachQnaConfirmationDialogPanel .mat-mdc-dialog-container .mdc-dialog__surface,   .simpleConfirmationDialog.manageTermsDeleteConfirmationPanel .mat-mdc-dialog-container .mdc-dialog__surface,   .simpleConfirmationDialog.suggestQuestionsConfirmationDialogPanel .mat-mdc-dialog-container .mdc-dialog__surface,   .simpleConfirmationDialog.bulkEditingConfirmationDialogPanel .mat-mdc-dialog-container .mdc-dialog__surface,   .simpleConfirmationDialog.managePhrasingsConfirmationDialogPanel .mat-mdc-dialog-container .mdc-dialog__surface,   .bulkEditingErrorDialogPanel .mat-mdc-dialog-container .mdc-dialog__surface,   .checkbox-dialog.syncSharedLsdlSuccessDialogPanel .mat-mdc-dialog-container .mdc-dialog__surface{padding:16px 24px 24px}  .simpleConfirmationDialog.teachQnaConfirmationDialogPanel .mat-mdc-dialog-container .header,   .simpleConfirmationDialog.manageTermsDeleteConfirmationPanel .mat-mdc-dialog-container .header,   .simpleConfirmationDialog.suggestQuestionsConfirmationDialogPanel .mat-mdc-dialog-container .header,   .simpleConfirmationDialog.bulkEditingConfirmationDialogPanel .mat-mdc-dialog-container .header,   .simpleConfirmationDialog.managePhrasingsConfirmationDialogPanel .mat-mdc-dialog-container .header,   .bulkEditingErrorDialogPanel .mat-mdc-dialog-container .header,   .checkbox-dialog.syncSharedLsdlSuccessDialogPanel .mat-mdc-dialog-container .header,   .simpleConfirmationDialog.teachQnaConfirmationDialogPanel .mat-mdc-dialog-container header,   .simpleConfirmationDialog.manageTermsDeleteConfirmationPanel .mat-mdc-dialog-container header,   .simpleConfirmationDialog.suggestQuestionsConfirmationDialogPanel .mat-mdc-dialog-container header,   .simpleConfirmationDialog.bulkEditingConfirmationDialogPanel .mat-mdc-dialog-container header,   .simpleConfirmationDialog.managePhrasingsConfirmationDialogPanel .mat-mdc-dialog-container header,   .bulkEditingErrorDialogPanel .mat-mdc-dialog-container header,   .checkbox-dialog.syncSharedLsdlSuccessDialogPanel .mat-mdc-dialog-container header{margin:0;padding:0 0 16px;display:flex;align-items:center;font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--xlg-font-size, 20px);font-weight:var(--font-weight-semi-bold, 600);color:var(--gray-180, #252423)}  .simpleConfirmationDialog.teachQnaConfirmationDialogPanel .mat-mdc-dialog-container .header .glyphicon,   .simpleConfirmationDialog.manageTermsDeleteConfirmationPanel .mat-mdc-dialog-container .header .glyphicon,   .simpleConfirmationDialog.suggestQuestionsConfirmationDialogPanel .mat-mdc-dialog-container .header .glyphicon,   .simpleConfirmationDialog.bulkEditingConfirmationDialogPanel .mat-mdc-dialog-container .header .glyphicon,   .simpleConfirmationDialog.managePhrasingsConfirmationDialogPanel .mat-mdc-dialog-container .header .glyphicon,   .bulkEditingErrorDialogPanel .mat-mdc-dialog-container .header .glyphicon,   .checkbox-dialog.syncSharedLsdlSuccessDialogPanel .mat-mdc-dialog-container .header .glyphicon,   .simpleConfirmationDialog.teachQnaConfirmationDialogPanel .mat-mdc-dialog-container header .glyphicon,   .simpleConfirmationDialog.manageTermsDeleteConfirmationPanel .mat-mdc-dialog-container header .glyphicon,   .simpleConfirmationDialog.suggestQuestionsConfirmationDialogPanel .mat-mdc-dialog-container header .glyphicon,   .simpleConfirmationDialog.bulkEditingConfirmationDialogPanel .mat-mdc-dialog-container header .glyphicon,   .simpleConfirmationDialog.managePhrasingsConfirmationDialogPanel .mat-mdc-dialog-container header .glyphicon,   .bulkEditingErrorDialogPanel .mat-mdc-dialog-container header .glyphicon,   .checkbox-dialog.syncSharedLsdlSuccessDialogPanel .mat-mdc-dialog-container header .glyphicon{font-weight:var(--font-weight-regular, 400)}  html:not([dir=rtl])   .simpleConfirmationDialog.teachQnaConfirmationDialogPanel .mat-mdc-dialog-container .header .glyphicon,   html:not([dir=rtl])   .simpleConfirmationDialog.manageTermsDeleteConfirmationPanel .mat-mdc-dialog-container .header .glyphicon,   html:not([dir=rtl])   .simpleConfirmationDialog.suggestQuestionsConfirmationDialogPanel .mat-mdc-dialog-container .header .glyphicon,   html:not([dir=rtl])   .simpleConfirmationDialog.bulkEditingConfirmationDialogPanel .mat-mdc-dialog-container .header .glyphicon,   html:not([dir=rtl])   .simpleConfirmationDialog.managePhrasingsConfirmationDialogPanel .mat-mdc-dialog-container .header .glyphicon,   html:not([dir=rtl])   .bulkEditingErrorDialogPanel .mat-mdc-dialog-container .header .glyphicon,   html:not([dir=rtl])   .checkbox-dialog.syncSharedLsdlSuccessDialogPanel .mat-mdc-dialog-container .header .glyphicon,   html:not([dir=rtl])   .simpleConfirmationDialog.teachQnaConfirmationDialogPanel .mat-mdc-dialog-container header .glyphicon,   html:not([dir=rtl])   .simpleConfirmationDialog.manageTermsDeleteConfirmationPanel .mat-mdc-dialog-container header .glyphicon,   html:not([dir=rtl])   .simpleConfirmationDialog.suggestQuestionsConfirmationDialogPanel .mat-mdc-dialog-container header .glyphicon,   html:not([dir=rtl])   .simpleConfirmationDialog.bulkEditingConfirmationDialogPanel .mat-mdc-dialog-container header .glyphicon,   html:not([dir=rtl])   .simpleConfirmationDialog.managePhrasingsConfirmationDialogPanel .mat-mdc-dialog-container header .glyphicon,   html:not([dir=rtl])   .bulkEditingErrorDialogPanel .mat-mdc-dialog-container header .glyphicon,   html:not([dir=rtl])   .checkbox-dialog.syncSharedLsdlSuccessDialogPanel .mat-mdc-dialog-container header .glyphicon{margin:0 8px 0 0}  html[dir=rtl]   .simpleConfirmationDialog.teachQnaConfirmationDialogPanel .mat-mdc-dialog-container .header .glyphicon,   html[dir=rtl]   .simpleConfirmationDialog.manageTermsDeleteConfirmationPanel .mat-mdc-dialog-container .header .glyphicon,   html[dir=rtl]   .simpleConfirmationDialog.suggestQuestionsConfirmationDialogPanel .mat-mdc-dialog-container .header .glyphicon,   html[dir=rtl]   .simpleConfirmationDialog.bulkEditingConfirmationDialogPanel .mat-mdc-dialog-container .header .glyphicon,   html[dir=rtl]   .simpleConfirmationDialog.managePhrasingsConfirmationDialogPanel .mat-mdc-dialog-container .header .glyphicon,   html[dir=rtl]   .bulkEditingErrorDialogPanel .mat-mdc-dialog-container .header .glyphicon,   html[dir=rtl]   .checkbox-dialog.syncSharedLsdlSuccessDialogPanel .mat-mdc-dialog-container .header .glyphicon,   html[dir=rtl]   .simpleConfirmationDialog.teachQnaConfirmationDialogPanel .mat-mdc-dialog-container header .glyphicon,   html[dir=rtl]   .simpleConfirmationDialog.manageTermsDeleteConfirmationPanel .mat-mdc-dialog-container header .glyphicon,   html[dir=rtl]   .simpleConfirmationDialog.suggestQuestionsConfirmationDialogPanel .mat-mdc-dialog-container header .glyphicon,   html[dir=rtl]   .simpleConfirmationDialog.bulkEditingConfirmationDialogPanel .mat-mdc-dialog-container header .glyphicon,   html[dir=rtl]   .simpleConfirmationDialog.managePhrasingsConfirmationDialogPanel .mat-mdc-dialog-container header .glyphicon,   html[dir=rtl]   .bulkEditingErrorDialogPanel .mat-mdc-dialog-container header .glyphicon,   html[dir=rtl]   .checkbox-dialog.syncSharedLsdlSuccessDialogPanel .mat-mdc-dialog-container header .glyphicon{margin:0 0 0 8px}  .simpleConfirmationDialog.teachQnaConfirmationDialogPanel .mat-mdc-dialog-container .header .glyphicon.pbi-glyph-circled-checkmark,   .simpleConfirmationDialog.manageTermsDeleteConfirmationPanel .mat-mdc-dialog-container .header .glyphicon.pbi-glyph-circled-checkmark,   .simpleConfirmationDialog.suggestQuestionsConfirmationDialogPanel .mat-mdc-dialog-container .header .glyphicon.pbi-glyph-circled-checkmark,   .simpleConfirmationDialog.bulkEditingConfirmationDialogPanel .mat-mdc-dialog-container .header .glyphicon.pbi-glyph-circled-checkmark,   .simpleConfirmationDialog.managePhrasingsConfirmationDialogPanel .mat-mdc-dialog-container .header .glyphicon.pbi-glyph-circled-checkmark,   .bulkEditingErrorDialogPanel .mat-mdc-dialog-container .header .glyphicon.pbi-glyph-circled-checkmark,   .checkbox-dialog.syncSharedLsdlSuccessDialogPanel .mat-mdc-dialog-container .header .glyphicon.pbi-glyph-circled-checkmark,   .simpleConfirmationDialog.teachQnaConfirmationDialogPanel .mat-mdc-dialog-container header .glyphicon.pbi-glyph-circled-checkmark,   .simpleConfirmationDialog.manageTermsDeleteConfirmationPanel .mat-mdc-dialog-container header .glyphicon.pbi-glyph-circled-checkmark,   .simpleConfirmationDialog.suggestQuestionsConfirmationDialogPanel .mat-mdc-dialog-container header .glyphicon.pbi-glyph-circled-checkmark,   .simpleConfirmationDialog.bulkEditingConfirmationDialogPanel .mat-mdc-dialog-container header .glyphicon.pbi-glyph-circled-checkmark,   .simpleConfirmationDialog.managePhrasingsConfirmationDialogPanel .mat-mdc-dialog-container header .glyphicon.pbi-glyph-circled-checkmark,   .bulkEditingErrorDialogPanel .mat-mdc-dialog-container header .glyphicon.pbi-glyph-circled-checkmark,   .checkbox-dialog.syncSharedLsdlSuccessDialogPanel .mat-mdc-dialog-container header .glyphicon.pbi-glyph-circled-checkmark{color:var(--fluent-theme-success-icon-color, #107C10)}  .simpleConfirmationDialog.teachQnaConfirmationDialogPanel .mat-mdc-dialog-container .header .glyphicon.pbi-glyph-warning,   .simpleConfirmationDialog.manageTermsDeleteConfirmationPanel .mat-mdc-dialog-container .header .glyphicon.pbi-glyph-warning,   .simpleConfirmationDialog.suggestQuestionsConfirmationDialogPanel .mat-mdc-dialog-container .header .glyphicon.pbi-glyph-warning,   .simpleConfirmationDialog.bulkEditingConfirmationDialogPanel .mat-mdc-dialog-container .header .glyphicon.pbi-glyph-warning,   .simpleConfirmationDialog.managePhrasingsConfirmationDialogPanel .mat-mdc-dialog-container .header .glyphicon.pbi-glyph-warning,   .bulkEditingErrorDialogPanel .mat-mdc-dialog-container .header .glyphicon.pbi-glyph-warning,   .checkbox-dialog.syncSharedLsdlSuccessDialogPanel .mat-mdc-dialog-container .header .glyphicon.pbi-glyph-warning,   .simpleConfirmationDialog.teachQnaConfirmationDialogPanel .mat-mdc-dialog-container header .glyphicon.pbi-glyph-warning,   .simpleConfirmationDialog.manageTermsDeleteConfirmationPanel .mat-mdc-dialog-container header .glyphicon.pbi-glyph-warning,   .simpleConfirmationDialog.suggestQuestionsConfirmationDialogPanel .mat-mdc-dialog-container header .glyphicon.pbi-glyph-warning,   .simpleConfirmationDialog.bulkEditingConfirmationDialogPanel .mat-mdc-dialog-container header .glyphicon.pbi-glyph-warning,   .simpleConfirmationDialog.managePhrasingsConfirmationDialogPanel .mat-mdc-dialog-container header .glyphicon.pbi-glyph-warning,   .bulkEditingErrorDialogPanel .mat-mdc-dialog-container header .glyphicon.pbi-glyph-warning,   .checkbox-dialog.syncSharedLsdlSuccessDialogPanel .mat-mdc-dialog-container header .glyphicon.pbi-glyph-warning{color:var(--fluent-theme-error-dark-alt-color, #D83B01)}  .simpleConfirmationDialog.teachQnaConfirmationDialogPanel .mat-mdc-dialog-container .header .mat-mdc-dialog-title,   .simpleConfirmationDialog.manageTermsDeleteConfirmationPanel .mat-mdc-dialog-container .header .mat-mdc-dialog-title,   .simpleConfirmationDialog.suggestQuestionsConfirmationDialogPanel .mat-mdc-dialog-container .header .mat-mdc-dialog-title,   .simpleConfirmationDialog.bulkEditingConfirmationDialogPanel .mat-mdc-dialog-container .header .mat-mdc-dialog-title,   .simpleConfirmationDialog.managePhrasingsConfirmationDialogPanel .mat-mdc-dialog-container .header .mat-mdc-dialog-title,   .bulkEditingErrorDialogPanel .mat-mdc-dialog-container .header .mat-mdc-dialog-title,   .checkbox-dialog.syncSharedLsdlSuccessDialogPanel .mat-mdc-dialog-container .header .mat-mdc-dialog-title,   .simpleConfirmationDialog.teachQnaConfirmationDialogPanel .mat-mdc-dialog-container header .mat-mdc-dialog-title,   .simpleConfirmationDialog.manageTermsDeleteConfirmationPanel .mat-mdc-dialog-container header .mat-mdc-dialog-title,   .simpleConfirmationDialog.suggestQuestionsConfirmationDialogPanel .mat-mdc-dialog-container header .mat-mdc-dialog-title,   .simpleConfirmationDialog.bulkEditingConfirmationDialogPanel .mat-mdc-dialog-container header .mat-mdc-dialog-title,   .simpleConfirmationDialog.managePhrasingsConfirmationDialogPanel .mat-mdc-dialog-container header .mat-mdc-dialog-title,   .bulkEditingErrorDialogPanel .mat-mdc-dialog-container header .mat-mdc-dialog-title,   .checkbox-dialog.syncSharedLsdlSuccessDialogPanel .mat-mdc-dialog-container header .mat-mdc-dialog-title{flex:1;margin:0;padding:0}  .simpleConfirmationDialog.teachQnaConfirmationDialogPanel .mat-mdc-dialog-container .header button.pbi-glyph-close,   .simpleConfirmationDialog.manageTermsDeleteConfirmationPanel .mat-mdc-dialog-container .header button.pbi-glyph-close,   .simpleConfirmationDialog.suggestQuestionsConfirmationDialogPanel .mat-mdc-dialog-container .header button.pbi-glyph-close,   .simpleConfirmationDialog.bulkEditingConfirmationDialogPanel .mat-mdc-dialog-container .header button.pbi-glyph-close,   .simpleConfirmationDialog.managePhrasingsConfirmationDialogPanel .mat-mdc-dialog-container .header button.pbi-glyph-close,   .bulkEditingErrorDialogPanel .mat-mdc-dialog-container .header button.pbi-glyph-close,   .checkbox-dialog.syncSharedLsdlSuccessDialogPanel .mat-mdc-dialog-container .header button.pbi-glyph-close,   .simpleConfirmationDialog.teachQnaConfirmationDialogPanel .mat-mdc-dialog-container header button.pbi-glyph-close,   .simpleConfirmationDialog.manageTermsDeleteConfirmationPanel .mat-mdc-dialog-container header button.pbi-glyph-close,   .simpleConfirmationDialog.suggestQuestionsConfirmationDialogPanel .mat-mdc-dialog-container header button.pbi-glyph-close,   .simpleConfirmationDialog.bulkEditingConfirmationDialogPanel .mat-mdc-dialog-container header button.pbi-glyph-close,   .simpleConfirmationDialog.managePhrasingsConfirmationDialogPanel .mat-mdc-dialog-container header button.pbi-glyph-close,   .bulkEditingErrorDialogPanel .mat-mdc-dialog-container header button.pbi-glyph-close,   .checkbox-dialog.syncSharedLsdlSuccessDialogPanel .mat-mdc-dialog-container header button.pbi-glyph-close{font-size:var(--sm-font-size, 12px);color:var(--gray-130, #605E5C);padding:0}  html:not([dir=rtl])   .simpleConfirmationDialog.teachQnaConfirmationDialogPanel .mat-mdc-dialog-container .header button.pbi-glyph-close,   html:not([dir=rtl])   .simpleConfirmationDialog.manageTermsDeleteConfirmationPanel .mat-mdc-dialog-container .header button.pbi-glyph-close,   html:not([dir=rtl])   .simpleConfirmationDialog.suggestQuestionsConfirmationDialogPanel .mat-mdc-dialog-container .header button.pbi-glyph-close,   html:not([dir=rtl])   .simpleConfirmationDialog.bulkEditingConfirmationDialogPanel .mat-mdc-dialog-container .header button.pbi-glyph-close,   html:not([dir=rtl])   .simpleConfirmationDialog.managePhrasingsConfirmationDialogPanel .mat-mdc-dialog-container .header button.pbi-glyph-close,   html:not([dir=rtl])   .bulkEditingErrorDialogPanel .mat-mdc-dialog-container .header button.pbi-glyph-close,   html:not([dir=rtl])   .checkbox-dialog.syncSharedLsdlSuccessDialogPanel .mat-mdc-dialog-container .header button.pbi-glyph-close,   html:not([dir=rtl])   .simpleConfirmationDialog.teachQnaConfirmationDialogPanel .mat-mdc-dialog-container header button.pbi-glyph-close,   html:not([dir=rtl])   .simpleConfirmationDialog.manageTermsDeleteConfirmationPanel .mat-mdc-dialog-container header button.pbi-glyph-close,   html:not([dir=rtl])   .simpleConfirmationDialog.suggestQuestionsConfirmationDialogPanel .mat-mdc-dialog-container header button.pbi-glyph-close,   html:not([dir=rtl])   .simpleConfirmationDialog.bulkEditingConfirmationDialogPanel .mat-mdc-dialog-container header button.pbi-glyph-close,   html:not([dir=rtl])   .simpleConfirmationDialog.managePhrasingsConfirmationDialogPanel .mat-mdc-dialog-container header button.pbi-glyph-close,   html:not([dir=rtl])   .bulkEditingErrorDialogPanel .mat-mdc-dialog-container header button.pbi-glyph-close,   html:not([dir=rtl])   .checkbox-dialog.syncSharedLsdlSuccessDialogPanel .mat-mdc-dialog-container header button.pbi-glyph-close{margin:0 0 0 16px!important}  html[dir=rtl]   .simpleConfirmationDialog.teachQnaConfirmationDialogPanel .mat-mdc-dialog-container .header button.pbi-glyph-close,   html[dir=rtl]   .simpleConfirmationDialog.manageTermsDeleteConfirmationPanel .mat-mdc-dialog-container .header button.pbi-glyph-close,   html[dir=rtl]   .simpleConfirmationDialog.suggestQuestionsConfirmationDialogPanel .mat-mdc-dialog-container .header button.pbi-glyph-close,   html[dir=rtl]   .simpleConfirmationDialog.bulkEditingConfirmationDialogPanel .mat-mdc-dialog-container .header button.pbi-glyph-close,   html[dir=rtl]   .simpleConfirmationDialog.managePhrasingsConfirmationDialogPanel .mat-mdc-dialog-container .header button.pbi-glyph-close,   html[dir=rtl]   .bulkEditingErrorDialogPanel .mat-mdc-dialog-container .header button.pbi-glyph-close,   html[dir=rtl]   .checkbox-dialog.syncSharedLsdlSuccessDialogPanel .mat-mdc-dialog-container .header button.pbi-glyph-close,   html[dir=rtl]   .simpleConfirmationDialog.teachQnaConfirmationDialogPanel .mat-mdc-dialog-container header button.pbi-glyph-close,   html[dir=rtl]   .simpleConfirmationDialog.manageTermsDeleteConfirmationPanel .mat-mdc-dialog-container header button.pbi-glyph-close,   html[dir=rtl]   .simpleConfirmationDialog.suggestQuestionsConfirmationDialogPanel .mat-mdc-dialog-container header button.pbi-glyph-close,   html[dir=rtl]   .simpleConfirmationDialog.bulkEditingConfirmationDialogPanel .mat-mdc-dialog-container header button.pbi-glyph-close,   html[dir=rtl]   .simpleConfirmationDialog.managePhrasingsConfirmationDialogPanel .mat-mdc-dialog-container header button.pbi-glyph-close,   html[dir=rtl]   .bulkEditingErrorDialogPanel .mat-mdc-dialog-container header button.pbi-glyph-close,   html[dir=rtl]   .checkbox-dialog.syncSharedLsdlSuccessDialogPanel .mat-mdc-dialog-container header button.pbi-glyph-close{margin:0 16px 0 0!important}  .simpleConfirmationDialog.teachQnaConfirmationDialogPanel .mat-mdc-dialog-container .header button.pbi-glyph-close:focus,   .simpleConfirmationDialog.manageTermsDeleteConfirmationPanel .mat-mdc-dialog-container .header button.pbi-glyph-close:focus,   .simpleConfirmationDialog.suggestQuestionsConfirmationDialogPanel .mat-mdc-dialog-container .header button.pbi-glyph-close:focus,   .simpleConfirmationDialog.bulkEditingConfirmationDialogPanel .mat-mdc-dialog-container .header button.pbi-glyph-close:focus,   .simpleConfirmationDialog.managePhrasingsConfirmationDialogPanel .mat-mdc-dialog-container .header button.pbi-glyph-close:focus,   .bulkEditingErrorDialogPanel .mat-mdc-dialog-container .header button.pbi-glyph-close:focus,   .checkbox-dialog.syncSharedLsdlSuccessDialogPanel .mat-mdc-dialog-container .header button.pbi-glyph-close:focus,   .simpleConfirmationDialog.teachQnaConfirmationDialogPanel .mat-mdc-dialog-container header button.pbi-glyph-close:focus,   .simpleConfirmationDialog.manageTermsDeleteConfirmationPanel .mat-mdc-dialog-container header button.pbi-glyph-close:focus,   .simpleConfirmationDialog.suggestQuestionsConfirmationDialogPanel .mat-mdc-dialog-container header button.pbi-glyph-close:focus,   .simpleConfirmationDialog.bulkEditingConfirmationDialogPanel .mat-mdc-dialog-container header button.pbi-glyph-close:focus,   .simpleConfirmationDialog.managePhrasingsConfirmationDialogPanel .mat-mdc-dialog-container header button.pbi-glyph-close:focus,   .bulkEditingErrorDialogPanel .mat-mdc-dialog-container header button.pbi-glyph-close:focus,   .checkbox-dialog.syncSharedLsdlSuccessDialogPanel .mat-mdc-dialog-container header button.pbi-glyph-close:focus{outline:var(--focus-two-tone-outline-definition, auto 1px);outline-color:var(--focus-two-tone-outline-color, -webkit-focus-ring-color);border:none}  .simpleConfirmationDialog.teachQnaConfirmationDialogPanel .mat-mdc-dialog-container .mat-mdc-dialog-content,   .simpleConfirmationDialog.manageTermsDeleteConfirmationPanel .mat-mdc-dialog-container .mat-mdc-dialog-content,   .simpleConfirmationDialog.suggestQuestionsConfirmationDialogPanel .mat-mdc-dialog-container .mat-mdc-dialog-content,   .simpleConfirmationDialog.bulkEditingConfirmationDialogPanel .mat-mdc-dialog-container .mat-mdc-dialog-content,   .simpleConfirmationDialog.managePhrasingsConfirmationDialogPanel .mat-mdc-dialog-container .mat-mdc-dialog-content,   .bulkEditingErrorDialogPanel .mat-mdc-dialog-container .mat-mdc-dialog-content,   .checkbox-dialog.syncSharedLsdlSuccessDialogPanel .mat-mdc-dialog-container .mat-mdc-dialog-content{min-height:unset;margin:0;padding:0;color:var(--fluent-theme-neutral-primary-color, #323130);font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-regular, 400);line-height:20px}  .simpleConfirmationDialog.teachQnaConfirmationDialogPanel .mat-mdc-dialog-container .mat-mdc-dialog-actions,   .simpleConfirmationDialog.manageTermsDeleteConfirmationPanel .mat-mdc-dialog-container .mat-mdc-dialog-actions,   .simpleConfirmationDialog.suggestQuestionsConfirmationDialogPanel .mat-mdc-dialog-container .mat-mdc-dialog-actions,   .simpleConfirmationDialog.bulkEditingConfirmationDialogPanel .mat-mdc-dialog-container .mat-mdc-dialog-actions,   .simpleConfirmationDialog.managePhrasingsConfirmationDialogPanel .mat-mdc-dialog-container .mat-mdc-dialog-actions,   .bulkEditingErrorDialogPanel .mat-mdc-dialog-container .mat-mdc-dialog-actions,   .checkbox-dialog.syncSharedLsdlSuccessDialogPanel .mat-mdc-dialog-container .mat-mdc-dialog-actions{margin:0;padding:32px 0 0;min-height:unset;font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-semi-bold, 600);color:var(--gray-180, #252423)}  .simpleConfirmationDialog.teachQnaConfirmationDialogPanel .mat-mdc-dialog-container .mat-mdc-dialog-actions button,   .simpleConfirmationDialog.manageTermsDeleteConfirmationPanel .mat-mdc-dialog-container .mat-mdc-dialog-actions button,   .simpleConfirmationDialog.suggestQuestionsConfirmationDialogPanel .mat-mdc-dialog-container .mat-mdc-dialog-actions button,   .simpleConfirmationDialog.bulkEditingConfirmationDialogPanel .mat-mdc-dialog-container .mat-mdc-dialog-actions button,   .simpleConfirmationDialog.managePhrasingsConfirmationDialogPanel .mat-mdc-dialog-container .mat-mdc-dialog-actions button,   .bulkEditingErrorDialogPanel .mat-mdc-dialog-container .mat-mdc-dialog-actions button,   .checkbox-dialog.syncSharedLsdlSuccessDialogPanel .mat-mdc-dialog-container .mat-mdc-dialog-actions button{border-width:1px;border-radius:2px;margin:0}  html:not([dir=rtl])   .simpleConfirmationDialog.teachQnaConfirmationDialogPanel .mat-mdc-dialog-container .mat-mdc-dialog-actions button.cancel,   html:not([dir=rtl])   .simpleConfirmationDialog.manageTermsDeleteConfirmationPanel .mat-mdc-dialog-container .mat-mdc-dialog-actions button.cancel,   html:not([dir=rtl])   .simpleConfirmationDialog.suggestQuestionsConfirmationDialogPanel .mat-mdc-dialog-container .mat-mdc-dialog-actions button.cancel,   html:not([dir=rtl])   .simpleConfirmationDialog.bulkEditingConfirmationDialogPanel .mat-mdc-dialog-container .mat-mdc-dialog-actions button.cancel,   html:not([dir=rtl])   .simpleConfirmationDialog.managePhrasingsConfirmationDialogPanel .mat-mdc-dialog-container .mat-mdc-dialog-actions button.cancel,   html:not([dir=rtl])   .bulkEditingErrorDialogPanel .mat-mdc-dialog-container .mat-mdc-dialog-actions button.cancel,   html:not([dir=rtl])   .checkbox-dialog.syncSharedLsdlSuccessDialogPanel .mat-mdc-dialog-container .mat-mdc-dialog-actions button.cancel{margin-left:8px}  html[dir=rtl]   .simpleConfirmationDialog.teachQnaConfirmationDialogPanel .mat-mdc-dialog-container .mat-mdc-dialog-actions button.cancel,   html[dir=rtl]   .simpleConfirmationDialog.manageTermsDeleteConfirmationPanel .mat-mdc-dialog-container .mat-mdc-dialog-actions button.cancel,   html[dir=rtl]   .simpleConfirmationDialog.suggestQuestionsConfirmationDialogPanel .mat-mdc-dialog-container .mat-mdc-dialog-actions button.cancel,   html[dir=rtl]   .simpleConfirmationDialog.bulkEditingConfirmationDialogPanel .mat-mdc-dialog-container .mat-mdc-dialog-actions button.cancel,   html[dir=rtl]   .simpleConfirmationDialog.managePhrasingsConfirmationDialogPanel .mat-mdc-dialog-container .mat-mdc-dialog-actions button.cancel,   html[dir=rtl]   .bulkEditingErrorDialogPanel .mat-mdc-dialog-container .mat-mdc-dialog-actions button.cancel,   html[dir=rtl]   .checkbox-dialog.syncSharedLsdlSuccessDialogPanel .mat-mdc-dialog-container .mat-mdc-dialog-actions button.cancel{margin-right:8px}  .checkbox-dialog.syncSharedLsdlSuccessDialogPanel .mat-mdc-dialog-content{margin:0;padding:0;width:min-content;overflow:hidden}  .checkbox-dialog.syncSharedLsdlSuccessDialogPanel .mat-mdc-dialog-content .message{padding:0}  .checkbox-dialog.syncSharedLsdlSuccessDialogPanel .mat-mdc-dialog-content .checkboxes{padding:36px 0 0;width:max-content}  .checkbox-dialog.syncSharedLsdlSuccessDialogPanel .mat-mdc-dialog-content .checkboxes .pbi-checkbox{display:inline-flex}  .checkbox-dialog.syncSharedLsdlSuccessDialogPanel .mat-mdc-dialog-content .checkboxes a{margin:0 8px}.qnaToolingDialog[_ngcontent-%COMP%]{width:1300px;height:700px;display:flex;flex-direction:column}  html[data-focus-source=key] .qnaToolingDialog:focus,   html[data-focus-source=key] .qnaToolingDialog *:focus{outline:var(--focus-two-tone-outline-definition, auto 1px);outline-color:var(--focus-two-tone-outline-color, -webkit-focus-ring-color)}  html[data-focus-source=mouse] .qnaToolingDialog:focus,   html[data-focus-source=mouse] .qnaToolingDialog *:focus,   html[data-focus-source=program] .qnaToolingDialog:focus,   html[data-focus-source=program] .qnaToolingDialog *:focus{outline:none}.qnaToolingDialog[_ngcontent-%COMP%]   [hidden][_ngcontent-%COMP%]{display:none!important}.qnaToolingDialog[_ngcontent-%COMP%]   .loadingSpinner[_ngcontent-%COMP%]{text-align:center;margin:auto}.qnaToolingDialog[_ngcontent-%COMP%]   .dialogMask[_ngcontent-%COMP%]{width:100%;height:100%;position:absolute}.qnaToolingDialog[_ngcontent-%COMP%]   label[_ngcontent-%COMP%], .qnaToolingDialog[_ngcontent-%COMP%]   button[_ngcontent-%COMP%], .qnaToolingDialog[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%], .qnaToolingDialog[_ngcontent-%COMP%]   img[_ngcontent-%COMP%], .qnaToolingDialog[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-user-drag:none}.qnaToolingDialog[_ngcontent-%COMP%]   .dragHandle[_ngcontent-%COMP%]{height:24px;width:100%;position:absolute}.qnaToolingDialog[_ngcontent-%COMP%]   .navPane[_ngcontent-%COMP%]{padding-top:24px}html:not([dir="rtl"])[_nghost-%COMP%]   .qnaToolingDialog[_ngcontent-%COMP%]   .activeContentContainer[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .qnaToolingDialog[_ngcontent-%COMP%]   .activeContentContainer[_ngcontent-%COMP%]{padding:24px 24px 0}html[dir="rtl"][_nghost-%COMP%]   .qnaToolingDialog[_ngcontent-%COMP%]   .activeContentContainer[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .qnaToolingDialog[_ngcontent-%COMP%]   .activeContentContainer[_ngcontent-%COMP%]{padding:24px 24px 0}.qnaToolingDialog[_ngcontent-%COMP%]   .pbi-glyph-close[_ngcontent-%COMP%]{position:absolute;top:16px;right:16px;padding:0;margin:0;border:0;background-color:transparent;color:var(--colorNeutralForeground1)}.qnaToolingDialog[_ngcontent-%COMP%]   .navPane[_ngcontent-%COMP%]{width:180px;min-width:180px;max-width:180px;background-color:var(--colorNeutralBackground2Hover)}.qnaToolingDialog[_ngcontent-%COMP%]   .navPane[_ngcontent-%COMP%]   header[_ngcontent-%COMP%]{display:flex;align-items:center;margin:0 0 20px}html:not([dir="rtl"])[_nghost-%COMP%]   .qnaToolingDialog[_ngcontent-%COMP%]   .navPane[_ngcontent-%COMP%]   header[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .qnaToolingDialog[_ngcontent-%COMP%]   .navPane[_ngcontent-%COMP%]   header[_ngcontent-%COMP%]{padding:0 32px 0 16px}html[dir="rtl"][_nghost-%COMP%]   .qnaToolingDialog[_ngcontent-%COMP%]   .navPane[_ngcontent-%COMP%]   header[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .qnaToolingDialog[_ngcontent-%COMP%]   .navPane[_ngcontent-%COMP%]   header[_ngcontent-%COMP%]{padding:0 16px 0 32px}.qnaToolingDialog[_ngcontent-%COMP%]   .navPane[_ngcontent-%COMP%]   header[_ngcontent-%COMP%]   .headerText[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--lg-font-size, 16px);font-weight:var(--font-weight-regular, 400);flex:1;line-height:24px;color:var(--neutral-primary-color, #333333)}html:not([dir="rtl"])[_nghost-%COMP%]   .qnaToolingDialog[_ngcontent-%COMP%]   .navPane[_ngcontent-%COMP%]   header[_ngcontent-%COMP%]   .headerText[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .qnaToolingDialog[_ngcontent-%COMP%]   .navPane[_ngcontent-%COMP%]   header[_ngcontent-%COMP%]   .headerText[_ngcontent-%COMP%]{margin-left:8px}html[dir="rtl"][_nghost-%COMP%]   .qnaToolingDialog[_ngcontent-%COMP%]   .navPane[_ngcontent-%COMP%]   header[_ngcontent-%COMP%]   .headerText[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .qnaToolingDialog[_ngcontent-%COMP%]   .navPane[_ngcontent-%COMP%]   header[_ngcontent-%COMP%]   .headerText[_ngcontent-%COMP%]{margin-right:8px}.qnaToolingDialog[_ngcontent-%COMP%]   .navPane[_ngcontent-%COMP%]   .navigationContentNode[_ngcontent-%COMP%]{position:relative}.qnaToolingDialog[_ngcontent-%COMP%]   .navPane[_ngcontent-%COMP%]   .navigationContentNode[_ngcontent-%COMP%]:hover, .qnaToolingDialog[_ngcontent-%COMP%]   .navPane[_ngcontent-%COMP%]   .navigationContentNode.activeNavigationNode[_ngcontent-%COMP%]{background-color:var(--fluent-theme-white-color, #FFF)}.qnaToolingDialog[_ngcontent-%COMP%]   .navPane[_ngcontent-%COMP%]   .navigationContentNode[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-regular, 400);display:flex;flex-direction:column;width:100%;line-height:20px;text-align:left;border:none;background:transparent;color:var(--neutral-primary-color, #333333);position:relative;white-space:pre-wrap;word-break:break-word}html:not([dir="rtl"])[_nghost-%COMP%]   .qnaToolingDialog[_ngcontent-%COMP%]   .navPane[_ngcontent-%COMP%]   .navigationContentNode[_ngcontent-%COMP%]   button[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .qnaToolingDialog[_ngcontent-%COMP%]   .navPane[_ngcontent-%COMP%]   .navigationContentNode[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{padding:10px 32px 9px 16px}html[dir="rtl"][_nghost-%COMP%]   .qnaToolingDialog[_ngcontent-%COMP%]   .navPane[_ngcontent-%COMP%]   .navigationContentNode[_ngcontent-%COMP%]   button[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .qnaToolingDialog[_ngcontent-%COMP%]   .navPane[_ngcontent-%COMP%]   .navigationContentNode[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{padding:10px 16px 9px 32px}.qnaToolingDialog[_ngcontent-%COMP%]   .navPane[_ngcontent-%COMP%]   .navigationContentNode.activeNavigationNode[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-semi-bold, 600)}.qnaToolingDialog[_ngcontent-%COMP%]   .navPane[_ngcontent-%COMP%]   .navigationDividerNode[_ngcontent-%COMP%]{height:1px;background-color:var(--colorNeutralBackground2Pressed)}.qnaToolingDialog[_ngcontent-%COMP%]   .activeContentContainer[_ngcontent-%COMP%]{flex:1;display:flex;flex-direction:column}.qnaToolingDialog[_ngcontent-%COMP%]   .activeContentContainer[_ngcontent-%COMP%]   .activeContentInnerContainer[_ngcontent-%COMP%]{min-height:0;flex:1;display:flex;flex-direction:column}.qnaToolingDialog[_ngcontent-%COMP%]   .activeContentContainer[_ngcontent-%COMP%]   .activeContentInnerContainer[_ngcontent-%COMP%]   .title[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--xlg-font-size, 20px);font-weight:var(--font-weight-semi-bold, 600);line-height:28px;margin:0}.qnaToolingDialog[_ngcontent-%COMP%]   .activeContentContainer[_ngcontent-%COMP%]   .activeContentInnerContainer[_ngcontent-%COMP%]   .qnaBanner[_ngcontent-%COMP%]{margin-top:12px;margin-bottom:4px}.qnaToolingDialog[_ngcontent-%COMP%]   .activeContentContainer[_ngcontent-%COMP%]   .previewBanner[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-regular, 400);margin:12px 0;display:flex;align-items:center}html:not([dir="rtl"])[_nghost-%COMP%]   .qnaToolingDialog[_ngcontent-%COMP%]   .activeContentContainer[_ngcontent-%COMP%]   .previewBanner[_ngcontent-%COMP%]   span[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .qnaToolingDialog[_ngcontent-%COMP%]   .activeContentContainer[_ngcontent-%COMP%]   .previewBanner[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{margin-left:8px}html[dir="rtl"][_nghost-%COMP%]   .qnaToolingDialog[_ngcontent-%COMP%]   .activeContentContainer[_ngcontent-%COMP%]   .previewBanner[_ngcontent-%COMP%]   span[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .qnaToolingDialog[_ngcontent-%COMP%]   .activeContentContainer[_ngcontent-%COMP%]   .previewBanner[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{margin-right:8px}html:not([dir="rtl"])[_nghost-%COMP%]   .qnaToolingDialog[_ngcontent-%COMP%]   .activeContentContainer[_ngcontent-%COMP%]   .previewBanner[_ngcontent-%COMP%]   a[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .qnaToolingDialog[_ngcontent-%COMP%]   .activeContentContainer[_ngcontent-%COMP%]   .previewBanner[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{margin-left:4px}html[dir="rtl"][_nghost-%COMP%]   .qnaToolingDialog[_ngcontent-%COMP%]   .activeContentContainer[_ngcontent-%COMP%]   .previewBanner[_ngcontent-%COMP%]   a[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .qnaToolingDialog[_ngcontent-%COMP%]   .activeContentContainer[_ngcontent-%COMP%]   .previewBanner[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{margin-right:4px}.qnaToolingDialog[_ngcontent-%COMP%]   .qnaTrainingContentContainer[_ngcontent-%COMP%]   .allNavigationNodesContainer[_ngcontent-%COMP%]{display:flex;margin-top:24px}.qnaToolingDialog[_ngcontent-%COMP%]   .qnaTrainingContentContainer[_ngcontent-%COMP%]   .allNavigationNodesContainer[_ngcontent-%COMP%]   .instructionContainer[_ngcontent-%COMP%]{flex:1.5;display:flex;flex-direction:column}.qnaToolingDialog[_ngcontent-%COMP%]   .qnaTrainingContentContainer[_ngcontent-%COMP%]   .allNavigationNodesContainer[_ngcontent-%COMP%]   .instructionContainer[_ngcontent-%COMP%]   .instructionTitle[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-semi-bold, 600);display:block}.qnaToolingDialog[_ngcontent-%COMP%]   .qnaTrainingContentContainer[_ngcontent-%COMP%]   .allNavigationNodesContainer[_ngcontent-%COMP%]   .instructionContainer[_ngcontent-%COMP%]   .instructionContent[_ngcontent-%COMP%]{box-shadow:0 .3px .9px rgba(0,0,0,.11),0 1.6px 3.6px rgba(0,0,0,.13);border:1px solid var(--fluent-theme-neutral-lighter-alt-color, #FAF9F8);margin-top:12px;width:306px;height:172px;background-size:306px 172px;cursor:pointer}.qnaToolingDialog[_ngcontent-%COMP%]   .qnaTrainingContentContainer[_ngcontent-%COMP%]   .allNavigationNodesContainer[_ngcontent-%COMP%]   .instructionContainer[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{line-height:20px;margin-top:20px}.qnaToolingDialog[_ngcontent-%COMP%]   .qnaTrainingContentContainer[_ngcontent-%COMP%]   .allNavigationNodesContainer[_ngcontent-%COMP%]   .navigationNodesContainer[_ngcontent-%COMP%]{display:flex;overflow-y:auto;column-gap:20px}html:not([dir="rtl"])[_nghost-%COMP%]   .qnaToolingDialog[_ngcontent-%COMP%]   .qnaTrainingContentContainer[_ngcontent-%COMP%]   .allNavigationNodesContainer[_ngcontent-%COMP%]   .navigationNodesContainer[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .qnaToolingDialog[_ngcontent-%COMP%]   .qnaTrainingContentContainer[_ngcontent-%COMP%]   .allNavigationNodesContainer[_ngcontent-%COMP%]   .navigationNodesContainer[_ngcontent-%COMP%]{margin-right:10px}html[dir="rtl"][_nghost-%COMP%]   .qnaToolingDialog[_ngcontent-%COMP%]   .qnaTrainingContentContainer[_ngcontent-%COMP%]   .allNavigationNodesContainer[_ngcontent-%COMP%]   .navigationNodesContainer[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .qnaToolingDialog[_ngcontent-%COMP%]   .qnaTrainingContentContainer[_ngcontent-%COMP%]   .allNavigationNodesContainer[_ngcontent-%COMP%]   .navigationNodesContainer[_ngcontent-%COMP%]{margin-left:10px}.qnaToolingDialog[_ngcontent-%COMP%]   .qnaTrainingContentContainer[_ngcontent-%COMP%]   .allNavigationNodesContainer[_ngcontent-%COMP%]   .navigationNodesContainer[_ngcontent-%COMP%]   .navigationContentNode[_ngcontent-%COMP%]{width:210.66666667px;display:flex;flex-direction:column;background-color:var(--fluent-theme-neutral-lighter-alt-color, #FAF9F8);box-shadow:0 .3px .9px rgba(0,0,0,.11),0 1.6px 3.6px rgba(0,0,0,.13);align-items:center;text-align:center;position:relative}html:not([dir="rtl"])[_nghost-%COMP%]   .qnaToolingDialog[_ngcontent-%COMP%]   .qnaTrainingContentContainer[_ngcontent-%COMP%]   .allNavigationNodesContainer[_ngcontent-%COMP%]   .navigationNodesContainer[_ngcontent-%COMP%]   .navigationContentNode[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .qnaToolingDialog[_ngcontent-%COMP%]   .qnaTrainingContentContainer[_ngcontent-%COMP%]   .allNavigationNodesContainer[_ngcontent-%COMP%]   .navigationNodesContainer[_ngcontent-%COMP%]   .navigationContentNode[_ngcontent-%COMP%]{padding:72px 12px 120px}html[dir="rtl"][_nghost-%COMP%]   .qnaToolingDialog[_ngcontent-%COMP%]   .qnaTrainingContentContainer[_ngcontent-%COMP%]   .allNavigationNodesContainer[_ngcontent-%COMP%]   .navigationNodesContainer[_ngcontent-%COMP%]   .navigationContentNode[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .qnaToolingDialog[_ngcontent-%COMP%]   .qnaTrainingContentContainer[_ngcontent-%COMP%]   .allNavigationNodesContainer[_ngcontent-%COMP%]   .navigationNodesContainer[_ngcontent-%COMP%]   .navigationContentNode[_ngcontent-%COMP%]{padding:72px 12px 120px}.qnaToolingDialog[_ngcontent-%COMP%]   .qnaTrainingContentContainer[_ngcontent-%COMP%]   .allNavigationNodesContainer[_ngcontent-%COMP%]   .navigationNodesContainer[_ngcontent-%COMP%]   .navigationContentNode[_ngcontent-%COMP%]   .navNodeIcon[_ngcontent-%COMP%]{width:60px;height:60px;fill:var(--colorNeutralForeground2)}.qnaToolingDialog[_ngcontent-%COMP%]   .qnaTrainingContentContainer[_ngcontent-%COMP%]   .allNavigationNodesContainer[_ngcontent-%COMP%]   .navigationNodesContainer[_ngcontent-%COMP%]   .navigationContentNode[_ngcontent-%COMP%]   .navNodeTitle[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-semi-bold, 600);line-height:20px;margin:20px 20px 0}.qnaToolingDialog[_ngcontent-%COMP%]   .qnaTrainingContentContainer[_ngcontent-%COMP%]   .allNavigationNodesContainer[_ngcontent-%COMP%]   .navigationNodesContainer[_ngcontent-%COMP%]   .navigationContentNode[_ngcontent-%COMP%]   .navNodeSubTitle[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-regular, 400);line-height:20px;margin:12px 20px 0}.qnaToolingDialog[_ngcontent-%COMP%]   .qnaTrainingContentContainer[_ngcontent-%COMP%]   .allNavigationNodesContainer[_ngcontent-%COMP%]   .navigationNodesContainer[_ngcontent-%COMP%]   .navigationContentNode[_ngcontent-%COMP%]   .navigateToContentType[_ngcontent-%COMP%]{font-family:var(--fluent-font-family, "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto, "Helvetica Neue", sans-serif);font-size:var(--md-font-size, 14px);font-weight:var(--font-weight-semi-bold, 600);position:absolute;bottom:72px;width:186.66666667px;line-height:20px;padding:6px 20px;border:none;overflow:hidden;text-overflow:ellipsis;color:var(--colorNeutralForegroundOnBrand);background-color:var(--colorBrandBackground)}.qnaToolingDialog[_ngcontent-%COMP%]   .qnaTrainingContentContainer[_ngcontent-%COMP%]   .allNavigationNodesContainer[_ngcontent-%COMP%]   .navigationNodesContainer[_ngcontent-%COMP%]   .navigationContentNode[_ngcontent-%COMP%]   .navigateToContentType[_ngcontent-%COMP%]:hover{background-color:var(--colorBrandBackgroundHover)}.qnaToolingDialog[_ngcontent-%COMP%]   .qnaTrainingContentContainer[_ngcontent-%COMP%]   .allNavigationNodesContainer[_ngcontent-%COMP%]   .navigationNodesContainer[_ngcontent-%COMP%]   .navigationContentNode[_ngcontent-%COMP%]   .navigateToContentType[_ngcontent-%COMP%]:active{background-color:var(--colorBrandBackgroundActive)}.qnaToolingDialog[_ngcontent-%COMP%]   .qnaTrainingContentContainer[_ngcontent-%COMP%]   .allNavigationNodesContainer.gridView[_ngcontent-%COMP%]   .navigationNodesContainer[_ngcontent-%COMP%]{flex-wrap:wrap;row-gap:20px;max-height:calc(100vh - 120px)}.qnaToolingDialog[_ngcontent-%COMP%]   .qnaTrainingContentContainer[_ngcontent-%COMP%]   .allNavigationNodesContainer.gridView[_ngcontent-%COMP%]   .navigationNodesContainer[_ngcontent-%COMP%]   .navigationContentNode[_ngcontent-%COMP%]{width:338px}html:not([dir="rtl"])[_nghost-%COMP%]   .qnaToolingDialog[_ngcontent-%COMP%]   .qnaTrainingContentContainer[_ngcontent-%COMP%]   .allNavigationNodesContainer.gridView[_ngcontent-%COMP%]   .navigationNodesContainer[_ngcontent-%COMP%]   .navigationContentNode[_ngcontent-%COMP%], html:not([dir="rtl"])   [_nghost-%COMP%]   .qnaToolingDialog[_ngcontent-%COMP%]   .qnaTrainingContentContainer[_ngcontent-%COMP%]   .allNavigationNodesContainer.gridView[_ngcontent-%COMP%]   .navigationNodesContainer[_ngcontent-%COMP%]   .navigationContentNode[_ngcontent-%COMP%]{padding:24px 12px 72px}html[dir="rtl"][_nghost-%COMP%]   .qnaToolingDialog[_ngcontent-%COMP%]   .qnaTrainingContentContainer[_ngcontent-%COMP%]   .allNavigationNodesContainer.gridView[_ngcontent-%COMP%]   .navigationNodesContainer[_ngcontent-%COMP%]   .navigationContentNode[_ngcontent-%COMP%], html[dir="rtl"]   [_nghost-%COMP%]   .qnaToolingDialog[_ngcontent-%COMP%]   .qnaTrainingContentContainer[_ngcontent-%COMP%]   .allNavigationNodesContainer.gridView[_ngcontent-%COMP%]   .navigationNodesContainer[_ngcontent-%COMP%]   .navigationContentNode[_ngcontent-%COMP%]{padding:24px 12px 72px}.qnaToolingDialog[_ngcontent-%COMP%]   .qnaTrainingContentContainer[_ngcontent-%COMP%]   .allNavigationNodesContainer.gridView[_ngcontent-%COMP%]   .navigationNodesContainer[_ngcontent-%COMP%]   .navigationContentNode[_ngcontent-%COMP%]   .navNodeIcon[_ngcontent-%COMP%], .qnaToolingDialog[_ngcontent-%COMP%]   .qnaTrainingContentContainer[_ngcontent-%COMP%]   .allNavigationNodesContainer.gridView[_ngcontent-%COMP%]   .navigationNodesContainer[_ngcontent-%COMP%]   .navigationContentNode[_ngcontent-%COMP%]   .navNodeIcon[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:28px;height:28px}.qnaToolingDialog[_ngcontent-%COMP%]   .qnaTrainingContentContainer[_ngcontent-%COMP%]   .allNavigationNodesContainer.gridView[_ngcontent-%COMP%]   .navigationNodesContainer[_ngcontent-%COMP%]   .navigationContentNode[_ngcontent-%COMP%]   .navNodeIcon[_ngcontent-%COMP%]   .suggestQuestionsImg[_ngcontent-%COMP%]     .cls-1{fill:#323130}.qnaToolingDialog[_ngcontent-%COMP%]   .qnaTrainingContentContainer[_ngcontent-%COMP%]   .allNavigationNodesContainer.gridView[_ngcontent-%COMP%]   .navigationNodesContainer[_ngcontent-%COMP%]   .navigationContentNode[_ngcontent-%COMP%]   .navNodeIcon[_ngcontent-%COMP%]   .suggestQuestionsImg[_ngcontent-%COMP%]     .cls-2{fill:#3b3a39;stroke:#faf9f8;stroke-width:7px}.qnaToolingDialog[_ngcontent-%COMP%]   .qnaTrainingContentContainer[_ngcontent-%COMP%]   .allNavigationNodesContainer.gridView[_ngcontent-%COMP%]   .navigationNodesContainer[_ngcontent-%COMP%]   .navigationContentNode[_ngcontent-%COMP%]   .navNodeIcon[_ngcontent-%COMP%]   .suggestQuestionsImg[_ngcontent-%COMP%]     .cls-3{fill:#3b3a39;stroke:#3b3a39}.qnaToolingDialog[_ngcontent-%COMP%]   .qnaTrainingContentContainer[_ngcontent-%COMP%]   .allNavigationNodesContainer.gridView[_ngcontent-%COMP%]   .navigationNodesContainer[_ngcontent-%COMP%]   .navigationContentNode[_ngcontent-%COMP%]   .navNodeIcon[_ngcontent-%COMP%]   .teachQnaImg[_ngcontent-%COMP%], .qnaToolingDialog[_ngcontent-%COMP%]   .qnaTrainingContentContainer[_ngcontent-%COMP%]   .allNavigationNodesContainer.gridView[_ngcontent-%COMP%]   .navigationNodesContainer[_ngcontent-%COMP%]   .navigationContentNode[_ngcontent-%COMP%]   .navNodeIcon[_ngcontent-%COMP%]   .bulkEditingImg[_ngcontent-%COMP%], .qnaToolingDialog[_ngcontent-%COMP%]   .qnaTrainingContentContainer[_ngcontent-%COMP%]   .allNavigationNodesContainer.gridView[_ngcontent-%COMP%]   .navigationNodesContainer[_ngcontent-%COMP%]   .navigationContentNode[_ngcontent-%COMP%]   .navNodeIcon[_ngcontent-%COMP%]   .reviewQuestionsImg[_ngcontent-%COMP%]{fill:#3b3a39}.qnaToolingDialog[_ngcontent-%COMP%]   .qnaTrainingContentContainer[_ngcontent-%COMP%]   .allNavigationNodesContainer.gridView[_ngcontent-%COMP%]   .navigationNodesContainer[_ngcontent-%COMP%]   .navigationContentNode[_ngcontent-%COMP%]   .navigateToContentType[_ngcontent-%COMP%]{bottom:24px}.qnaToolingDialog[_ngcontent-%COMP%]   .qnaTrainingContentContainer[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{margin-top:28px;line-height:20px}' ]
            }), QnaToolingDialogComponent;
        }(), template_dialog_payload_service = __webpack_require__(67489), template_dialog_component = __webpack_require__(96777), SynonymPromotionDialogComponent = function() {
            function SynonymPromotionDialogComponent(templateDialogPayload) {
                this.templateDialogPayload = templateDialogPayload, this.shareApprovedSynonyms = !0;
            }
            return SynonymPromotionDialogComponent.prototype.ngOnInit = function() {
                var _this = this;
                this.templateDialogPayload.onOkButtonClick = function() {
                    return Promise.resolve({
                        lsdlSharingPermission: _this.shareApprovedSynonyms ? 1 : 0
                    });
                };
            }, SynonymPromotionDialogComponent.prototype.onChangeShareApprovedSynonyms = function(shareSynonyms) {
                this.shareApprovedSynonyms = shareSynonyms;
            }, SynonymPromotionDialogComponent.\u0275fac = function(t) {
                return new (t || SynonymPromotionDialogComponent)(fesm2022_core["\u0275\u0275directiveInject"](template_dialog_payload_service.x));
            }, SynonymPromotionDialogComponent.\u0275cmp = fesm2022_core["\u0275\u0275defineComponent"]({
                type: SynonymPromotionDialogComponent,
                selectors: [ [ "synonym-promotion-dialog" ] ],
                features: [ fesm2022_core["\u0275\u0275ProvidersFeature"]([ template_dialog_payload_service.x ]) ],
                decls: 4,
                vars: 4,
                consts: [ [ "localize", "QnaTooling_Synonyms_FirstPromotion_Message", 1, "bodyText" ], [ 3, "label", "checked", "onChange" ] ],
                template: function(rf, ctx) {
                    1 & rf && (fesm2022_core["\u0275\u0275elementStart"](0, "template-dialog"), fesm2022_core["\u0275\u0275element"](1, "p", 0), 
                    fesm2022_core["\u0275\u0275elementStart"](2, "tri-checkbox", 1), fesm2022_core["\u0275\u0275listener"]("onChange", function($event) {
                        return ctx.onChangeShareApprovedSynonyms($event);
                    }), fesm2022_core["\u0275\u0275pipe"](3, "localize"), fesm2022_core["\u0275\u0275elementEnd"]()()), 
                    2 & rf && (fesm2022_core["\u0275\u0275advance"](2), fesm2022_core["\u0275\u0275property"]("label", fesm2022_core["\u0275\u0275pipeBind1"](3, 2, "QnaTooling_BulkEditing_SuggestionSettings_ShareSynonyms"))("checked", ctx.shareApprovedSynonyms));
                },
                dependencies: [ template_dialog_component.J, localize_directive.X, tri_checkbox_component.r, localize_pipe.F ],
                styles: [ "[_nghost-%COMP%]   .bodyText[_ngcontent-%COMP%]{margin:0 0 12px;width:500px}" ]
            }), SynonymPromotionDialogComponent;
        }(), a11y = __webpack_require__(51193), a11y_module = __webpack_require__(20914), ArtifactEndorsementUICommon_module = __webpack_require__(79509), information_protection_ui_common_module = __webpack_require__(53483), localization_module = __webpack_require__(79061), UILibrary_module = __webpack_require__(94785), pbi_tooltip_module = __webpack_require__(16095), virtual_scroll = __webpack_require__(47064), DatasetSelectorComponentModule = function() {
            function DatasetSelectorComponentModule() {}
            return DatasetSelectorComponentModule.\u0275fac = function(t) {
                return new (t || DatasetSelectorComponentModule);
            }, DatasetSelectorComponentModule.\u0275mod = fesm2022_core["\u0275\u0275defineNgModule"]({
                type: DatasetSelectorComponentModule
            }), DatasetSelectorComponentModule.\u0275inj = fesm2022_core["\u0275\u0275defineInjector"]({
                imports: [ common.CommonModule, fesm2022_forms.u5, UILibrary_module.g, localization_module.v, icon.Ps, legacy_input.x4, sort.JX, a11y_module._, Common.gd, pbi_tooltip_module.Z, scrolling.Cl, virtual_scroll.xg, ArtifactEndorsementUICommon_module.a, information_protection_ui_common_module.K ]
            }), DatasetSelectorComponentModule;
        }(), ExploreUI_module = __webpack_require__(87121), feature_switch_module = __webpack_require__(76521), lazy_load_module = __webpack_require__(82156), Qna_module = __webpack_require__(1931), QnaUI_module = __webpack_require__(11429), dialogs_module = __webpack_require__(76966), pbi_office_icon_module = __webpack_require__(45411), pbi_overlay_module = __webpack_require__(66972), spinner_module = __webpack_require__(33783), tri_checkbox = __webpack_require__(14977), tri_dropdown = __webpack_require__(44913), tri_pivot = __webpack_require__(94228), tri_svg_icon = __webpack_require__(17177), tri_switch = __webpack_require__(30651), tri_tooltip = __webpack_require__(8816), pbi_office_icon_provider_service = __webpack_require__(54485), manifests = [ {
            type: QnaTeachQnaComponent,
            componentId: "QnaTeachQnaComponentId"
        }, {
            type: QnaRoleSelectorComponent,
            componentId: "QnaRoleSelectorComponentId"
        }, {
            type: QnaSinglePhrasingEditorComponent,
            componentId: "QnaSinglePhrasingEditorComponentId"
        }, {
            type: QnaTermEditorComponent,
            componentId: "QnaTermEditorComponentId"
        } ], QnaToolingInternalModule = function() {
            function QnaToolingInternalModule(iconProvider) {
                __webpack_require__.e("qna").then(__webpack_require__.bind(__webpack_require__, 38702)).then(function(module) {
                    iconProvider.registerIcons(module.iconSpriteSheet.sprite);
                });
            }
            return QnaToolingInternalModule.\u0275fac = function(t) {
                return new (t || QnaToolingInternalModule)(fesm2022_core["\u0275\u0275inject"](pbi_office_icon_provider_service.u));
            }, QnaToolingInternalModule.\u0275mod = fesm2022_core["\u0275\u0275defineNgModule"]({
                type: QnaToolingInternalModule
            }), QnaToolingInternalModule.\u0275inj = fesm2022_core["\u0275\u0275defineInjector"]({
                imports: [ lazy_load_module.N.withManifests(manifests), dialogs_module.c.withManifest([ {
                    componentIdentifier: "QnaToolingDialog",
                    componentType: QnaToolingDialogComponent
                }, {
                    componentIdentifier: "SynonymPromotionDialogComponent",
                    componentType: SynonymPromotionDialogComponent
                } ]), a11y.rt, common.CommonModule, dialogs_module.c, drag_drop._t, fesm2022_forms.u5, dialog.Is, legacy_button.yu, legacy_checkbox.Zh, expansion.To, icon.Ps, legacy_menu.jT, legacy_slide_toggle.Wd, sort.JX, legacy_table.U5, scrolling.Cl, spinner_module.F, DatasetSelectorComponentModule, ExploreUI_module.J, feature_switch_module.A3, localization_module.v, a11y_module._, Common.gd, pbi_office_icon_module.m, pbi_tooltip_module.Z, pbi_overlay_module.N, Qna_module.T, QnaUI_module.m, Telemetry.e3, tri_checkbox.B, tri_dropdown.lK, tri_menu.up, tri_pivot.ix, tri_svg_icon.T6, tri_switch.Jy, tri_tooltip.w, UILibrary_module.g ]
            }), QnaToolingInternalModule;
        }();
    },
    67412: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            c: function() {
                return CopilotPreviewTermsLink;
            },
            y: function() {
                return LearnMoreCopilotWorkspacePickerLink;
            }
        });
        var CopilotPreviewTermsLink = "https://go.microsoft.com/fwlink/?linkid=2243166", LearnMoreCopilotWorkspacePickerLink = "https://go.microsoft.com/fwlink/?linkid=2258254";
    },
    87413: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            QH: function() {
                return getBannerMessage;
            },
            TD: function() {
                return getFirstRunRequestableAgents;
            },
            od: function() {
                return getSynonymsBannerMessage;
            },
            x6: function() {
                return getPhrasingsBannerMessage;
            }
        });
        var _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(62458), _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_Utility__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(59694);
        function getBannerMessage(lsdlAgents, localizationService, target) {
            var bannerMessage;
            switch (_powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assert(function() {
                return !_.isEmpty(lsdlAgents);
            }, "lsdlAgents should be defined and non empty"), _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(localizationService, "localizationService"), 
            _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(target, "target should be defined"), 
            target) {
              case "Synonyms":
                var utilizingCopilot_1 = _.includes(lsdlAgents, "PowerBI.AzureOpenAISynonyms"), utilizingOrg_1 = _.includes(lsdlAgents, "PowerBI.OrganizationLsdlSharing");
                _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assert(function() {
                    return utilizingCopilot_1 || utilizingOrg_1;
                }, "target: Synonyms should contain AzureOpenAISynonyms or OrganizationLsdlSharing agent or both in the improve lsdl flow"), 
                bannerMessage = getSynonymsBannerMessage(utilizingCopilot_1, utilizingOrg_1, localizationService);
                break;

              case "Phrasings":
                _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assert(function() {
                    return _.includes(lsdlAgents, "PowerBI.AzureOpenAIPhrasings");
                }, "target: Phrasings should contain AzureOpenAIPhrasings agent in the improve lsdl flow"), 
                bannerMessage = getPhrasingsBannerMessage(localizationService);
                break;

              default:
                _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertFail("target should be synonyms or phrasings");
            }
            return bannerMessage;
        }
        function getSynonymsBannerMessage(utilizingCopilot, utilizingOrg, localizationService) {
            return {
                emphasis: localizationService.get(utilizingCopilot && utilizingOrg ? "Qna_ImproveLsdl_Synonyms_Copilot_Org" : utilizingCopilot ? "Qna_ImproveLsdl_Synonyms_Copilot" : "Qna_ImproveLsdl_Synonyms_Org"),
                text: localizationService.get(utilizingCopilot ? "Qna_ImproveLsdl_Copilot_Disclaimer" : "Qna_ImproveLsdl_Synonyms_Org_Message")
            };
        }
        function getPhrasingsBannerMessage(localizationService) {
            var textMessage = localizationService.format("Qna_ImproveLsdl_Copilot_Phrasings_Prompt", [ localizationService.get("Qna_ImproveLsdl_Copilot_Disclaimer") ]);
            return {
                emphasis: localizationService.get("Qna_ImproveLsdl_Phrasings_Copilot"),
                text: textMessage
            };
        }
        function getFirstRunRequestableAgents(target, lsdlDocumentModel, isRetry) {
            void 0 === isRetry && (isRetry = !1);
            var agents = lsdlDocumentModel.getAgents(target), firstRunRequestableAgents = _.chain(agents).filter(function(a) {
                var isEnabled = "Enabled" === a.state, isUnmodified = (0, _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_Utility__WEBPACK_IMPORTED_MODULE_1__.g)(a.lastModified);
                return isRetry ? isEnabled : isEnabled && isUnmodified;
            }).map(function(a) {
                return a.name;
            }).value();
            return "oaiPhrasings" !== target || _.find(agents, function(agent) {
                return "PowerBI.AzureOpenAIPhrasings" === agent.name;
            }) ? "externalSynonyms" === target && (_.find(agents, function(agent) {
                return "PowerBI.AzureOpenAISynonyms" === agent.name;
            }) || firstRunRequestableAgents.push("PowerBI.AzureOpenAISynonyms"), _.find(agents, function(agent) {
                return "PowerBI.OrganizationLsdlSharing" === agent.name;
            }) || firstRunRequestableAgents.push("PowerBI.OrganizationLsdlSharing")) : firstRunRequestableAgents.push("PowerBI.AzureOpenAIPhrasings"), 
            firstRunRequestableAgents;
        }
    },
    10693: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            R: function() {
                return BannerTreeBaseHandler;
            }
        });
        var BannerTreeBaseHandler = function() {
            function BannerTreeBaseHandler(deferredPromise) {
                this.deferredPromise = deferredPromise;
            }
            return BannerTreeBaseHandler.prototype.signalCompletion = function() {
                this.deferredPromise.resolve();
            }, BannerTreeBaseHandler.prototype.getDeferredPromise = function() {
                return this.deferredPromise.promise;
            }, BannerTreeBaseHandler;
        }();
    },
    85726: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            G: function() {
                return ImproveLsdlResultHandler;
            }
        });
        var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(81337), _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(62458), _powerbi_Qna_utils_improve_lsdl_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(34100), _powerbi_LsdlDocumentModel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(55461), _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_Utility__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(38078), _banner_tree_base_handler__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(10693), _banner_constants__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(67412), _qna_banner_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(40978), _banner_handler_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(87413), ImproveLsdlResultHandler = function(_super) {
            function ImproveLsdlResultHandler(dataModelService, dataSourcesService, explorationNavigationService, featureSwitchService, qnaBannerService, qnaToolingLauncher, modelAuthoringService, localizationService, dialogService, improveLsdlExecutionHandler, improveLsdlBackgroundTelemetry, target, deferredCompletion) {
                var _this = _super.call(this, deferredCompletion) || this;
                return _this.dataModelService = dataModelService, _this.dataSourcesService = dataSourcesService, 
                _this.explorationNavigationService = explorationNavigationService, _this.featureSwitchService = featureSwitchService, 
                _this.qnaBannerService = qnaBannerService, _this.qnaToolingLauncher = qnaToolingLauncher, 
                _this.modelAuthoringService = modelAuthoringService, _this.localizationService = localizationService, 
                _this.dialogService = dialogService, _this.improveLsdlExecutionHandler = improveLsdlExecutionHandler, 
                _this.improveLsdlBackgroundTelemetry = improveLsdlBackgroundTelemetry, _this.target = target, 
                _this.underExecution = !1, _this;
            }
            return (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__extends)(ImproveLsdlResultHandler, _super), 
            ImproveLsdlResultHandler.prototype.execute = function(_a) {
                var response = _a.response, requestedAgents = _a.requestedAgents, copilotWorkspaceId = _a.copilotWorkspaceId;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__awaiter)(this, void 0, void 0, function() {
                    var lsdlDocumentModel, lsdl, featureSwitches, isFuzzyMatchFeatureEnabled, moreUpdate, exception_1, successBanners, errorBanners, _b, _c, _this = this;
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__generator)(this, function(_d) {
                        switch (_d.label) {
                          case 0:
                            return null == response.result ? [ 3, 1 ] : (lsdlDocumentModel = new _powerbi_LsdlDocumentModel__WEBPACK_IMPORTED_MODULE_1__.X(response.result.lsdlObject), 
                            [ 3, 3 ]);

                          case 1:
                            return [ 4, this.dataModelService.getLinguisticSchema() ];

                          case 2:
                            lsdl = _d.sent(), lsdlDocumentModel = new _powerbi_LsdlDocumentModel__WEBPACK_IMPORTED_MODULE_1__.X(lsdl), 
                            _d.label = 3;

                          case 3:
                            return [ 4, this.featureSwitchService.getFeatureSwitches() ];

                          case 4:
                            if (featureSwitches = _d.sent(), isFuzzyMatchFeatureEnabled = (0, _powerbi_Qna_utils_improve_lsdl_util__WEBPACK_IMPORTED_MODULE_2__.J8)(featureSwitches), 
                            moreUpdate = !1, isFuzzyMatchFeatureEnabled && (lsdlDocumentModel.setRuntimeUnderstanding("Full"), 
                            moreUpdate = lsdlDocumentModel.commit()), null == response.result && !moreUpdate) return [ 3, 8 ];
                            _d.label = 5;

                          case 5:
                            return _d.trys.push([ 5, 7, , 8 ]), [ 4, this.modelAuthoringService.apply({
                                changes: [ {
                                    updateLinguisticMetadata: {
                                        linguisticSchemaJson: lsdlDocumentModel.toJsonString()
                                    }
                                } ]
                            }) ];

                          case 6:
                            return _d.sent(), [ 3, 8 ];

                          case 7:
                            return exception_1 = _d.sent(), _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_3__.fF.assertFail(exception_1), 
                            [ 3, 8 ];

                          case 8:
                            return (_b = {}).Visual = [], _b.ToolingHome = [], _b.ToolingSynonyms = [], _b.ToolingPhrasings = [], 
                            successBanners = _b, null != response.result && (successBanners = this.getSuccessBanners(lsdlDocumentModel, requestedAgents)), 
                            errorBanners = [], _.isEmpty(response.errors) || null != _.find(response.errors, function(e) {
                                return "OperationCancelled" === e.code;
                            }) || (errorBanners = ImproveLsdlResultHandler.getErrorBanners(response.errors, this.localizationService, this.target)), 
                            this.qnaBannerService.setContent(((_c = {}).Visual = {
                                showBanners: !0,
                                banners: (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_0__.__spreadArray)([], successBanners.Visual, !0), errorBanners, !0),
                                onDismissAllBanners: function() {
                                    return _this.signalCompletion();
                                },
                                actionHandlers: new Map([ [ "launchTooling", function() {
                                    var bannerToRemove = _.first(successBanners.Visual);
                                    _this.qnaBannerService.dismissBanner("Visual", bannerToRemove.id), _this.improveLsdlBackgroundTelemetry.logResultEvent({
                                        surface: "Visual",
                                        type: _this.target,
                                        action: "ReviewResults",
                                        resultType: "Success"
                                    }), _this.qnaToolingLauncher.showToolingDialog({
                                        dataSources: _this.dataSourcesService.get(),
                                        exploration: _this.explorationNavigationService.getCurrentExploration(),
                                        entryPoint: "VisualBanner",
                                        entryContentType: "Synonyms" === _this.target ? "bulkEditing" : "managePhrasings"
                                    }), _this.signalCompletion();
                                } ], [ "errorDetails", this.getErrorDetailsHandler("Visual") ], [ "retry", this.getRetryHandler("Visual", requestedAgents, copilotWorkspaceId) ] ])
                            }, _c.ToolingHome = {
                                showBanners: !0,
                                banners: (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__spreadArray)((0, tslib__WEBPACK_IMPORTED_MODULE_0__.__spreadArray)([], successBanners.ToolingHome, !0), errorBanners, !0),
                                onDismissAllBanners: function() {
                                    return _this.signalCompletion();
                                },
                                actionHandlers: "Synonyms" === this.target ? new Map([ [ "switchToSynonymsPage", void 0 ], [ "errorDetails", this.getErrorDetailsHandler("ToolingHome") ], [ "retry", this.getRetryHandler("ToolingHome", requestedAgents, copilotWorkspaceId) ] ]) : new Map([ [ "switchToPhrasingsPage", void 0 ], [ "errorDetails", this.getErrorDetailsHandler("ToolingHome") ], [ "retry", this.getRetryHandler("ToolingHome", requestedAgents, copilotWorkspaceId) ] ])
                            }, _c.ToolingSynonyms = "Synonyms" === this.target ? {
                                showBanners: !0,
                                banners: errorBanners,
                                onDismissAllBanners: function() {
                                    return _this.signalCompletion();
                                },
                                actionHandlers: new Map([ [ "errorDetails", this.getErrorDetailsHandler("ToolingSynonyms") ], [ "retry", void 0 ] ])
                            } : _qna_banner_service__WEBPACK_IMPORTED_MODULE_4__.me, _c.ToolingPhrasings = "Phrasings" === this.target ? {
                                showBanners: !0,
                                banners: errorBanners,
                                onDismissAllBanners: function() {
                                    return _this.signalCompletion();
                                },
                                actionHandlers: new Map([ [ "errorDetails", this.getErrorDetailsHandler("ToolingPhrasings") ], [ "retry", void 0 ] ])
                            } : _qna_banner_service__WEBPACK_IMPORTED_MODULE_4__.me, _c)), [ 2, this.getDeferredPromise() ];
                        }
                    });
                });
            }, ImproveLsdlResultHandler.getErrorBanners = function(errors, localizationService, target) {
                var _this = this, agentErrors = _.filter(errors, function(e) {
                    return null != e.agent;
                }), nonAgentErrors = _.filter(errors, function(e) {
                    return null == e.agent;
                }), agentErrorMap = new Map;
                _.forEach(agentErrors, function(error) {
                    if (agentErrorMap.has(error.code)) {
                        var errorInfo = agentErrorMap.get(error.code);
                        errorInfo.agents.push(error.agent), agentErrorMap.set(error.code, errorInfo);
                    } else agentErrorMap.set(error.code, {
                        agents: [ error.agent ],
                        originalError: error
                    });
                });
                var banners = [];
                return agentErrorMap.forEach(function(_a) {
                    var errorBanner = _this.generateErrorBanner(_a.originalError, localizationService, target, _a.agents);
                    banners.push(errorBanner);
                }), _.forEach(nonAgentErrors, function(error) {
                    var errorBanner = _this.generateErrorBanner(error, localizationService, target);
                    banners.push(errorBanner);
                }), banners;
            }, ImproveLsdlResultHandler.generateErrorBanner = function(error, localizationService, target, agents) {
                void 0 === agents && (agents = []);
                var _a = this.getErrorConfig(error.code, localizationService, target, agents), text = _a.text, bannerType = _a.bannerType, actions = _a.actions;
                return {
                    id: _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_Utility__WEBPACK_IMPORTED_MODULE_5__.b$.generateGuid(),
                    message: {
                        text
                    },
                    isVisible: !0,
                    allowDismiss: !0,
                    bannerType,
                    data: error,
                    actions
                };
            }, ImproveLsdlResultHandler.prototype.getSuccessBanners = function(lsdlDocumentModel, requestedAgents) {
                var _a, successBannerMessage, lsdlAgents = lsdlDocumentModel.getAgents("Synonyms" === this.target ? "externalSynonyms" : "oaiPhrasings"), modifiedAgents = _.chain(lsdlAgents).filter(function(a) {
                    return null != a.lastModified;
                }).map(function(a) {
                    return a.name;
                }).value();
                if ("Synonyms" === this.target) {
                    var utilizingCopilot = _.includes(modifiedAgents, "PowerBI.AzureOpenAISynonyms") && _.includes(requestedAgents, "PowerBI.AzureOpenAISynonyms"), utilizingOrganization = _.includes(modifiedAgents, "PowerBI.OrganizationLsdlSharing") && _.includes(requestedAgents, "PowerBI.OrganizationLsdlSharing");
                    successBannerMessage = (0, _banner_handler_util__WEBPACK_IMPORTED_MODULE_6__.od)(utilizingCopilot, utilizingOrganization, this.localizationService);
                } else successBannerMessage = (0, _banner_handler_util__WEBPACK_IMPORTED_MODULE_6__.x6)(this.localizationService);
                var reviewSuggestionsText = this.localizationService.get("Synonyms" === this.target ? "Qna_ImproveLsdl_Synonyms_Review" : "Qna_ImproveLsdl_Phrasings_Review");
                return (_a = {}).Visual = [ {
                    id: _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_Utility__WEBPACK_IMPORTED_MODULE_5__.b$.generateGuid(),
                    message: successBannerMessage,
                    link: {
                        href: _banner_constants__WEBPACK_IMPORTED_MODULE_7__.c,
                        text: this.localizationService.get("CopilotInline_PreviewLink")
                    },
                    isVisible: !0,
                    allowDismiss: !0,
                    bannerType: "copilot",
                    actions: [ {
                        id: "launchTooling",
                        text: reviewSuggestionsText,
                        actionAppearance: "primary"
                    } ]
                } ], _a.ToolingHome = [ {
                    id: _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_Utility__WEBPACK_IMPORTED_MODULE_5__.b$.generateGuid(),
                    message: successBannerMessage,
                    link: {
                        href: _banner_constants__WEBPACK_IMPORTED_MODULE_7__.c,
                        text: this.localizationService.get("CopilotInline_PreviewLink")
                    },
                    isVisible: !0,
                    allowDismiss: !0,
                    bannerType: "copilot",
                    actions: [ {
                        id: "Synonyms" === this.target ? "switchToSynonymsPage" : "switchToPhrasingsPage",
                        text: reviewSuggestionsText,
                        actionAppearance: "primary"
                    } ]
                } ], _a.ToolingSynonyms = [], _a.ToolingPhrasings = [], _a;
            }, ImproveLsdlResultHandler.getErrorConfig = function(code, localizationService, target, lsdlAgents) {
                var _a, textKey;
                void 0 === lsdlAgents && (lsdlAgents = []);
                var bannerType, errorMessageConfig = ImproveLsdlResultHandler.getErrorMessageConfig(code, localizationService, target);
                if ("copilotAndOrg" === errorMessageConfig.possibleSources) {
                    _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_3__.fF.assert(function() {
                        return "Synonyms" === target;
                    }, "target can only be synonyms when the sources are copilot and org");
                    var utilizingCopilotForSynonyms = _.includes(lsdlAgents, "PowerBI.AzureOpenAISynonyms"), utilizingOrg = _.includes(lsdlAgents, "PowerBI.OrganizationLsdlSharing");
                    textKey = utilizingCopilotForSynonyms && utilizingOrg ? errorMessageConfig.copilotAndOrg : utilizingCopilotForSynonyms ? errorMessageConfig.copilot : errorMessageConfig.org;
                } else "copilotOnly" === errorMessageConfig.possibleSources ? textKey = errorMessageConfig.copilot : "orgOnly" === errorMessageConfig.possibleSources ? (_powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_3__.fF.assert(function() {
                    return "Synonyms" === target;
                }, "target can only be synonyms when the source is org"), textKey = errorMessageConfig.org) : "agnostic" === errorMessageConfig.possibleSources ? textKey = errorMessageConfig.agnostic : _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_3__.fF.assertFail("possibleSources not handled");
                switch (code) {
                  case "NoLsdlIndexAvailable":
                  case "NoLsdlSharingModelsAvailable":
                    bannerType = "info";
                    break;

                  case "RequestThrottled":
                  case "RequestTimeOut":
                    bannerType = "blocked";
                    break;

                  case "UnsafeContentDetectedInRequest":
                  case "UnsafeContentDetectedInResponse":
                  case "PartiallySuccessful":
                    bannerType = "warning";
                    break;

                  case "FeatureNotAvailable":
                    bannerType = "info";
                    break;

                  case "FailedToOpenLsdlIndexSearcher":
                    bannerType = "info";

                  case "UnsupportedLanguage":
                    _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_3__.fF.assertFail("Unexpected improve lsdl error ".concat("UnsupportedLanguage"));

                  default:
                    bannerType = "error";
                }
                return {
                    text: localizationService.get(textKey),
                    bannerType,
                    actions: null !== (_a = errorMessageConfig.availableActions) && void 0 !== _a ? _a : []
                };
            }, ImproveLsdlResultHandler.getErrorMessageConfig = function(errorCode, localizationService, target) {
                var retry = {
                    id: "retry",
                    text: localizationService.get("IntermittentFailureRetryButton"),
                    actionAppearance: "primary"
                }, viewDetails = {
                    id: "errorDetails",
                    text: localizationService.get("View_Details"),
                    actionAppearance: "secondary"
                }, forSynonyms = "Synonyms" === target, genericErrorConfig = forSynonyms ? {
                    possibleSources: "copilotAndOrg",
                    copilotAndOrg: "Qna_ImproveLsdl_Synonyms_Error_Generic_Copilot_Org",
                    copilot: "Qna_ImproveLsdl_Synonyms_Error_Generic_Copilot",
                    org: "Qna_ImproveLsdl_Synonyms_Error_Generic_Org",
                    availableActions: [ viewDetails ]
                } : "Phrasings" === target ? {
                    possibleSources: "copilotOnly",
                    copilot: "Qna_ImproveLsdl_Phrasings_Error_Generic_Copilot",
                    availableActions: [ viewDetails ]
                } : {
                    possibleSources: "copilotOnly",
                    copilot: "Qna_FuzzyMatching_PickWorkspace_Error_Generic",
                    availableActions: [ viewDetails ]
                };
                switch (errorCode) {
                  case "GenericError":
                  case "FailedToParseLsdlFromRequest":
                  case "FailedToParseLsdlFromRequest":
                  case "UnsupportedLanguage":
                  case "NoKnownAgentsRequested":
                  case "GenericFailure":
                    return genericErrorConfig;

                  case "NetworkConnectionIssue":
                    return {
                        possibleSources: "agnostic",
                        agnostic: forSynonyms ? "Qna_ImproveLsdl_Error_NetworkIssue_Synonyms" : "Qna_ImproveLsdl_Error_NetworkIssue_Phrasings",
                        availableActions: [ retry ]
                    };

                  case "NoLsdlIndexAvailable":
                    return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_3__.fF.assert(function() {
                        return forSynonyms;
                    }, "NoLsdlIndexAvailable error code is only applicable to synonyms"), {
                        possibleSources: "orgOnly",
                        org: "Qna_ImproveLsdl_Error_NoLsdlIndexAvailable"
                    };

                  case "NoLsdlSharingModelsAvailable":
                    return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_3__.fF.assert(function() {
                        return forSynonyms;
                    }, "NoLsdlSharingModelsAvailable error code is only applicable to synonyms"), {
                        possibleSources: "orgOnly",
                        org: "Qna_ImproveLsdl_Error_NoLsdlSharingModelsAvailable"
                    };

                  case "InvalidRequestVersion":
                  case "RequiresNewerVersion":
                    return {
                        possibleSources: "agnostic",
                        agnostic: "Qna_ImproveLsdl_Error_RequiresNewerVersion"
                    };

                  case "FailedToOpenLsdlIndexSearcher":
                    return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_3__.fF.assert(function() {
                        return forSynonyms;
                    }, "FailedToOpenLsdlIndexSearcher error code is only applicable to synonyms"), {
                        possibleSources: "orgOnly",
                        org: "Qna_ImproveLsdl_Error_FailedToOpenLsdlIndexSearcher"
                    };

                  case "FeatureNotAvailable":
                  case "FeatureNotAvailable":
                    return {
                        possibleSources: "copilotOnly",
                        copilot: forSynonyms ? "Qna_ImproveLsdl_Error_Copilot_Tenant_Disabled_Synonyms" : "Qna_ImproveLsdl_Error_Copilot_Tenant_Disabled_Phrasings"
                    };

                  case "UnsupportedUser":
                    return {
                        possibleSources: "copilotOnly",
                        copilot: "CopilotCapability_NoEligibleWorkspace_Message"
                    };

                  case "PartiallySuccessful":
                    return forSynonyms ? {
                        possibleSources: "copilotAndOrg",
                        copilotAndOrg: "Qna_ImproveLsdl_Error_PartialSuccess_Copilot_Org_Synonyms",
                        copilot: "Qna_ImproveLsdl_Error_PartialSuccess_Copilot_Synonyms",
                        org: "Qna_ImproveLsdl_Error_PartialSuccess_Org_Synonyms",
                        availableActions: [ retry ]
                    } : {
                        possibleSources: "copilotOnly",
                        copilot: "Qna_ImproveLsdl_Error_PartialSuccess_Copilot_Phrasings",
                        availableActions: [ retry ]
                    };

                  case "UnsafeContentDetectedInRequest":
                  case "UnsafeContentDetectedInResponse":
                    return forSynonyms ? {
                        possibleSources: "copilotAndOrg",
                        copilotAndOrg: "Qna_ImproveLsdl_Error_PartialSuccess_Copilot_Org_Synonyms",
                        copilot: "Qna_ImproveLsdl_Error_PartialSuccess_Copilot_Synonyms",
                        org: "Qna_ImproveLsdl_Error_PartialSuccess_Org_Synonyms",
                        availableActions: [ retry ]
                    } : {
                        possibleSources: "copilotOnly",
                        copilot: "Qna_ImproveLsdl_Error_Unsafe_Content_Copilot",
                        availableActions: [ viewDetails ]
                    };

                  case "RequestThrottled":
                    return forSynonyms ? {
                        possibleSources: "copilotAndOrg",
                        copilotAndOrg: "Qna_ImproveLsdl_Error_Throttle_Copilot_Org_Synonyms",
                        copilot: "Qna_ImproveLsdl_Error_Throttle_Copilot_Synonyms",
                        org: "Qna_ImproveLsdl_Error_Throttle_Org_Synonyms",
                        availableActions: [ retry ]
                    } : {
                        possibleSources: "copilotOnly",
                        copilot: "Qna_ImproveLsdl_Error_Throttle_Copilot_Phrasings",
                        availableActions: [ retry ]
                    };

                  case "RequestTimeOut":
                    return forSynonyms ? {
                        possibleSources: "copilotAndOrg",
                        copilotAndOrg: "Qna_ImproveLsdl_Error_Timeout_Copilot_Org_Synonyms",
                        copilot: "Qna_ImproveLsdl_Error_Timeout_Copilot_Synonyms",
                        org: "Qna_ImproveLsdl_Error_Timeout_Org_Synonyms",
                        availableActions: [ retry ]
                    } : {
                        possibleSources: "copilotOnly",
                        copilot: "Qna_ImproveLsdl_Error_Timeout_Copilot_Phrasings",
                        availableActions: [ retry ]
                    };

                  case "DisallowedForCrossGeo":
                    return {
                        possibleSources: "copilotOnly",
                        copilot: forSynonyms ? "Qna_ImproveLsdl_Error_Copilot_CrossGeo_Disallowed_Synonyms" : "Qna_ImproveLsdl_Error_Copilot_CrossGeo_Disallowed_Phrasings"
                    };

                  default:
                    return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_3__.fF.assertFail("unhandled improveLsdlErrorCode ".concat(errorCode)), 
                    genericErrorConfig;
                }
            }, ImproveLsdlResultHandler.prototype.getRetryHandler = function(surface, requestedAgents, copilotWorkspaceId) {
                var _this = this;
                return function() {
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__awaiter)(_this, void 0, void 0, function() {
                        return (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__generator)(this, function(_a) {
                            switch (_a.label) {
                              case 0:
                                return this.underExecution ? [ 2 ] : (this.underExecution = !0, this.improveLsdlBackgroundTelemetry.logResultEvent({
                                    surface,
                                    type: this.target,
                                    action: "Retry",
                                    resultType: "Failure"
                                }), [ 4, this.improveLsdlExecutionHandler.execute({
                                    requestedAgents,
                                    copilotWorkspaceId
                                }) ]);

                              case 1:
                                return _a.sent(), this.underExecution = !1, [ 2 ];
                            }
                        });
                    });
                };
            }, ImproveLsdlResultHandler.prototype.getErrorDetailsHandler = function(surface) {
                var _this = this;
                return function(error) {
                    _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_3__.fF.assertValue(error, "improve lsdl error"), 
                    _this.improveLsdlBackgroundTelemetry.logResultEvent({
                        surface,
                        type: _this.target,
                        action: "ShowErrorDetails",
                        resultType: "Failure"
                    }), _this.dialogService.showTemplateDialog("QnaDiagnosticDialogComponentId", {
                        title: _this.localizationService.get("Qna_Explore_ErrorMessage"),
                        hideCancelButton: !0,
                        input: {
                            errorCode: error.code,
                            errorMessage: error.diagnosticMessage
                        }
                    });
                };
            }, ImproveLsdlResultHandler;
        }(_banner_tree_base_handler__WEBPACK_IMPORTED_MODULE_8__.R);
    },
    40978: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            Do: function() {
                return QnaBannerServiceProvider;
            },
            me: function() {
                return emptyBannerContent;
            }
        });
        var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(81337), rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(35510), rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(14172), _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(62458), _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(50423), QnaBannerServiceProvider = {
            provide: "qnaBannerService",
            useFactory: function() {
                return (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__generator)(this, function(_a) {
                        return [ 2, new QnaBannerService ];
                    });
                });
            },
            deps: []
        }, emptyBannerContent = {
            showBanners: !1,
            banners: []
        }, QnaBannerService = function() {
            function QnaBannerService() {
                var _a;
                this.bannerContent$ = new rxjs__WEBPACK_IMPORTED_MODULE_1__.X(((_a = {}).ToolingHome = emptyBannerContent, 
                _a.ToolingSynonyms = emptyBannerContent, _a.ToolingPhrasings = emptyBannerContent, 
                _a.Visual = emptyBannerContent, _a));
            }
            return QnaBannerService.prototype.setContent = function(bannersBySurface) {
                _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_2__.fF.assertValue(bannersBySurface, "bannersBySurface"), 
                _.forEach(bannersBySurface, function(content) {
                    _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_2__.fF.assertValue(content, "banner content should not be null");
                }), this.bannerContent$.next(bannersBySurface);
            }, QnaBannerService.prototype.updateContent = function(surface, updatedContent) {
                _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_2__.fF.assertValue(surface, "qnaBannerSurface"), 
                _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_2__.fF.assertValue(updatedContent, "updatedContent");
                var bannerContentBySurface = this.bannerContent$.value;
                bannerContentBySurface[surface] = updatedContent, this.bannerContent$.next(bannerContentBySurface);
            }, QnaBannerService.prototype.getBannerContent = function(surface) {
                return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_2__.fF.assertValue(surface, "qnaBannerSurface"), 
                this.bannerContent$.asObservable().pipe((0, rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.U)(function(content) {
                    return content[surface];
                }));
            }, QnaBannerService.prototype.dismissBanner = function(surface, bannerId) {
                _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_2__.fF.assertValue(surface, "qnaBannerSurface"), 
                _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_2__.fF.assertValue(bannerId, "qnaBannerId");
                var bannerContent = (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, this.bannerContent$.value[surface]), bannerToUpdate = _.find(bannerContent.banners, function(b) {
                    return b.id === bannerId;
                });
                null != bannerToUpdate ? (bannerToUpdate.isVisible = !1, bannerContent.banners = (0, 
                tslib__WEBPACK_IMPORTED_MODULE_0__.__spreadArray)([], bannerContent.banners, !0), 
                this.updateContent(surface, bannerContent), 1 === _.size(bannerContent.banners) && bannerContent.onDismissAllBanners && bannerContent.onDismissAllBanners()) : _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_2__.fF.assertFail("banner with id: ".concat(bannerId, " not found"));
            }, QnaBannerService.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_4__["\u0275\u0275defineInjectable"]({
                token: QnaBannerService,
                factory: QnaBannerService.\u0275fac = function(t) {
                    return new (t || QnaBannerService);
                }
            }), QnaBannerService;
        }();
    },
    1931: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            T: function() {
                return QnaModule;
            }
        });
        var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(77476), _powerbi_Data__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(52910), _powerbi_ErrorService__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(13052), _powerbi_Explore__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(31109), _powerbi_ExploreUI__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(87121), _powerbi_FeatureSwitch__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(76521), _powerbi_GeocoderIndexedDB__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(40516), _powerbi_Geocoding__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(84497), _powerbi_Localization__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(79061), _powerbi_Telemetry__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(21617), _powerbi_UILibrary_UILibrary_module__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(94785), _powerbi_VisualHostCore__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(3176), _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(50423), QnaModule = function() {
            function QnaModule() {}
            return QnaModule.\u0275fac = function(t) {
                return new (t || QnaModule);
            }, QnaModule.\u0275mod = _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275defineNgModule"]({
                type: QnaModule
            }), QnaModule.\u0275inj = _angular_core__WEBPACK_IMPORTED_MODULE_1__["\u0275\u0275defineInjector"]({
                imports: [ _angular_common__WEBPACK_IMPORTED_MODULE_2__.CommonModule, _powerbi_Data__WEBPACK_IMPORTED_MODULE_3__.O, _powerbi_ErrorService__WEBPACK_IMPORTED_MODULE_4__.T, _powerbi_Explore__WEBPACK_IMPORTED_MODULE_5__.F, _powerbi_ExploreUI__WEBPACK_IMPORTED_MODULE_6__.J, _powerbi_FeatureSwitch__WEBPACK_IMPORTED_MODULE_7__.A3, _powerbi_GeocoderIndexedDB__WEBPACK_IMPORTED_MODULE_8__.h, _powerbi_Geocoding__WEBPACK_IMPORTED_MODULE_9__.L, _powerbi_Localization__WEBPACK_IMPORTED_MODULE_10__.v, _powerbi_Telemetry__WEBPACK_IMPORTED_MODULE_0__.e3, _powerbi_UILibrary_UILibrary_module__WEBPACK_IMPORTED_MODULE_11__.g, _powerbi_VisualHostCore__WEBPACK_IMPORTED_MODULE_12__.c ]
            }), QnaModule;
        }();
    },
    37320: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            y: function() {
                return InterpretListenerFactory;
            }
        });
        var tslib__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(81337), rxjs__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(35510), _powerbi_legacy_Explore_contracts_dataSource__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(74804), _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(62458), _powerbi_Typings_Modern_Shared_Explore_typings__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(58291), _powerbi_legacy_Explore_constants__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(57871), _powerbi_legacy_Explore_util_filterUtils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(42614), _powerbi_legacy_Explore_util_visualContainerUtils__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(3579), _powerbi_legacy_PowerBIVisuals_VisualsData_semanticQuery_sqFrom__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(38953), _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(3468), _utils_wireClientContractsConversion_util__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(35988), _utils_visual_util__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(74857), _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(50423), _powerbi_Data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(26898), _powerbi_Explore__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(83008), _powerbi_Explore__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(81986), _powerbi_Explore__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(21436), _powerbi_LazyLoad__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(28894), _powerbi_VisualHostCore__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(84916), _powerbi_VisualHostCore__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(29866), InterpretListenerFactory = function() {
            function InterpretListenerFactory(conceptualSchemaProxy, dataSources, explorationSerializer, lazyScoped, podExplorationResolver, resourcePackage, visualPlugin) {
                this.conceptualSchemaProxy = conceptualSchemaProxy, this.dataSources = dataSources, 
                this.explorationSerializer = explorationSerializer, this.lazyScoped = lazyScoped, 
                this.podExplorationResolver = podExplorationResolver, this.resourcePackage = resourcePackage, 
                this.visualPlugin = visualPlugin;
            }
            return InterpretListenerFactory.prototype.createInterpretListener = function(setupParams, timeout) {
                return void 0 === timeout && (timeout = 500), new InterpretListener(this.conceptualSchemaProxy, this.dataSources, this.explorationSerializer, this.lazyScoped, this.podExplorationResolver, this.resourcePackage, this.visualPlugin, setupParams, timeout);
            }, InterpretListenerFactory.\u0275fac = function(t) {
                return new (t || InterpretListenerFactory)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275inject"](_powerbi_Data__WEBPACK_IMPORTED_MODULE_1__.i), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275inject"](_powerbi_Explore__WEBPACK_IMPORTED_MODULE_2__.D), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275inject"](_powerbi_Explore__WEBPACK_IMPORTED_MODULE_3__.L), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275inject"](_powerbi_LazyLoad__WEBPACK_IMPORTED_MODULE_4__.H), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275inject"](_powerbi_Explore__WEBPACK_IMPORTED_MODULE_5__.Bl), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275inject"](_powerbi_VisualHostCore__WEBPACK_IMPORTED_MODULE_6__.o), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275inject"](_powerbi_VisualHostCore__WEBPACK_IMPORTED_MODULE_7__.D));
            }, InterpretListenerFactory.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275defineInjectable"]({
                token: InterpretListenerFactory,
                factory: InterpretListenerFactory.\u0275fac
            }), InterpretListenerFactory;
        }(), InterpretListener = function() {
            function InterpretListener(conceptualSchemaProxy, dataSources, explorationSerializer, lazyScoped, podExplorationResolver, resourcePackage, visualPlugin, setupParams, timeout) {
                this.conceptualSchemaProxy = conceptualSchemaProxy, this.dataSources = dataSources, 
                this.explorationSerializer = explorationSerializer, this.lazyScoped = lazyScoped, 
                this.podExplorationResolver = podExplorationResolver, this.resourcePackage = resourcePackage, 
                this.visualPlugin = visualPlugin, this.setupParams = setupParams, this.timeout = timeout, 
                _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_8__.fF.assertValue(setupParams, "setupParams"), 
                this.updateManager = new ObservableUpdateManager(this.timeout), this.setupParams = setupParams;
            }
            return InterpretListener.prototype.getObservable = function() {
                return this.updateManager.getObservable();
            }, InterpretListener.prototype.onInterpretIssued = function() {
                this.cancelErrorThrottler(), this.updateManager.pushUpdate({
                    resultType: 0
                });
            }, InterpretListener.prototype.onInterpretRetry = function(warning) {
                this.updateManager.pushUpdate({
                    resultType: 1,
                    retryWarning: warning
                });
            }, InterpretListener.prototype.onInterpretResultCleared = function() {
                this.cancelErrorThrottler(), this.updateManager.pushUpdate({
                    resultType: 4,
                    utterance: ""
                });
            }, InterpretListener.prototype.onInterpretResult = function(request, response) {
                var _a;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__awaiter)(this, void 0, void 0, function() {
                    var firstResult;
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__generator)(this, function(_b) {
                        var warnings;
                        return response.error || !this.setupParams.forTrainingTermBinding && _.isEmpty(response.results) || this.setupParams.forTrainingTermBinding && _.every(response.results, function(r) {
                            return !r.command;
                        }) && (warnings = response.warnings) && !_.find(warnings, function(warning) {
                            return 2 === warning || 8 === warning || 11 === warning || 12 === warning || 9 === warning || 10 === warning || 24 === warning;
                        }) ? (firstResult = _.first(response.results), this.onInterpretErrorV2(response.utterance, request, response.error, null == firstResult ? void 0 : firstResult.spans, null === (_a = null == firstResult ? void 0 : firstResult.correctionInfo) || void 0 === _a ? void 0 : _a.correctedUtterance), 
                        [ 2 ]) : [ 2, this.onInterpretSuccessV2(response, request) ];
                    });
                });
            }, InterpretListener.prototype.onInterpretSuccessV2 = function(interpretResponse, request) {
                var _a, _b;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__awaiter)(this, void 0, void 0, function() {
                    var firstResult, semanticQuery;
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__generator)(this, function(_c) {
                        switch (_c.label) {
                          case 0:
                            return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_8__.fF.assertValue(interpretResponse, "interpretResponse"), 
                            this.cancelErrorThrottler(), (null === (_a = null == request ? void 0 : request.intent) || void 0 === _a ? void 0 : _a.defineCalculation) ? [ 4, this.handleCalculationResult(interpretResponse, request) ] : [ 3, 2 ];

                          case 1:
                            return _c.sent(), [ 3, 6 ];

                          case 2:
                            return firstResult = _.first(interpretResponse.results), (semanticQuery = null === (_b = null == firstResult ? void 0 : firstResult.command) || void 0 === _b ? void 0 : _b.query) && _.find(semanticQuery.from().sources(), function(fromSource) {
                                return (0, _powerbi_legacy_PowerBIVisuals_VisualsData_semanticQuery_sqFrom__WEBPACK_IMPORTED_MODULE_10__.Yg)(fromSource);
                            }) ? [ 4, this.handlePodPageResult(interpretResponse, request) ] : [ 3, 4 ];

                          case 3:
                            return _c.sent(), [ 3, 6 ];

                          case 4:
                            return [ 4, this.handleVisualResult(interpretResponse, request) ];

                          case 5:
                            _c.sent(), _c.label = 6;

                          case 6:
                            return [ 2 ];
                        }
                    });
                });
            }, InterpretListener.prototype.onInterpretErrorV2 = function(utterance, request, error, spans, correctedUtterance) {
                var _this = this;
                _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_8__.fF.assertValue(utterance, "utterance"), 
                this.cancelErrorThrottler();
                var termBindingsTrainingInfo = this.setupParams.forTrainingTermBinding ? {
                    spans,
                    correctedUtterance
                } : void 0;
                this.errorThrottler = setTimeout(function() {
                    _this.updateManager.pushThrottledUpdate({
                        request,
                        resultType: 3,
                        interpretError: error,
                        utterance,
                        termBindingsTrainingInfo,
                        doNotShowResult: !0
                    }), _this.errorThrottler = void 0;
                }, this.timeout);
            }, InterpretListener.prototype.cancelErrorThrottler = function() {
                this.errorThrottler && clearTimeout(this.errorThrottler), this.errorThrottler = void 0;
            }, InterpretListener.prototype.handlePodPageResult = function(interpretResponse, request) {
                return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__awaiter)(this, void 0, void 0, function() {
                    var interpretResult, utterance, termBindingsTrainingInfo, command, semanticQuery, podFromSource, reportId, exploration, _a, _b, pod, sectionName_1, section_1, queryMetadata, queryDefinition, parameterFilters, resourcePackages, model, modelId, hideLowConfidenceResult;
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__generator)(this, function(_d) {
                        switch (_d.label) {
                          case 0:
                            if (interpretResult = _.first(null == interpretResponse ? void 0 : interpretResponse.results), 
                            _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_8__.fF.assertValue(interpretResult, "query interpretResult must be defined for handling pod result"), 
                            utterance = interpretResponse.utterance, termBindingsTrainingInfo = getTermsBindingTrainingInfo(interpretResult), 
                            this.setupParams.forTrainingTermBinding) return this.updateManager.pushThrottledUpdate({
                                request,
                                resultType: 2,
                                utterance,
                                termBindingsTrainingInfo,
                                doNotShowResult: !1
                            }), [ 2 ];
                            if (!this.setupParams.canShowPods) return this.updateManager.pushThrottledUpdate({
                                request,
                                resultType: 5,
                                utterance
                            }), [ 2 ];
                            _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_8__.fF.assertValue(semanticQuery = null == (command = null == interpretResult ? void 0 : interpretResult.command) ? void 0 : command.query, "interpretResult command must have a defined query for handling pod result"), 
                            podFromSource = _.find(semanticQuery.from().sources(), function(fromSource) {
                                return (0, _powerbi_legacy_PowerBIVisuals_VisualsData_semanticQuery_sqFrom__WEBPACK_IMPORTED_MODULE_10__.Yg)(fromSource);
                            }), _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_8__.fF.assertValue(podFromSource, "expect there is a pod entity"), 
                            reportId = this.podExplorationResolver.getReportId(podFromSource.schema), _d.label = 1;

                          case 1:
                            return _d.trys.push([ 1, 3, , 4 ]), _b = (_a = this.explorationSerializer).deepCopyExploration, 
                            [ 4, this.podExplorationResolver.getExploration(reportId) ];

                          case 2:
                            return exploration = _b.apply(_a, [ _d.sent() ]), pod = _.find(exploration.pods, function(p) {
                                return p.name === podFromSource.pod;
                            }), sectionName_1 = pod && pod.boundSection, section_1 = _.find(exploration.sections, function(s) {
                                return sectionName_1 === s.name;
                            }), pod && sectionName_1 && section_1 ? (_powerbi_legacy_Explore_util_filterUtils__WEBPACK_IMPORTED_MODULE_11__.l.mergeExplorationSectionFilters(exploration, section_1), 
                            queryMetadata = (0, _utils_visual_util__WEBPACK_IMPORTED_MODULE_12__.Nj)(null == command ? void 0 : command.queryMetadata), 
                            queryDefinition = _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_13__.ib.serializeQuery(semanticQuery), 
                            _.isEmpty(queryDefinition.Where) || (parameterFilters = _powerbi_legacy_Explore_util_filterUtils__WEBPACK_IMPORTED_MODULE_11__.l.extractParameterFilters(queryDefinition, queryMetadata), 
                            _powerbi_legacy_Explore_util_filterUtils__WEBPACK_IMPORTED_MODULE_11__.l.applySectionParameterFilters(section_1, pod, void 0, parameterFilters)), 
                            resourcePackages = _.filter(exploration.resourcePackages, function(rp) {
                                return _.some(section_1.visualContainers, function(vc) {
                                    return (0, _powerbi_legacy_Explore_util_visualContainerUtils__WEBPACK_IMPORTED_MODULE_14__.s)(vc) === rp.name;
                                });
                            }), _.isEmpty(resourcePackages) || (this.resourcePackage.registerPackages(resourcePackages), 
                            this.visualPlugin.ensurePlugins(resourcePackages)), section_1.size.displayOption = 1, 
                            exploration.activeSectionIndex = _.findIndex(exploration.sections, function(s) {
                                return s.name === section_1.name;
                            }), model = this.getModelFromResult(interpretResult), this.ensureDataSources(model, exploration), 
                            modelId = model.id, hideLowConfidenceResult = this.getNotShowLowConfidenceResult(interpretResult), 
                            this.updateManager.pushThrottledUpdate({
                                request,
                                resultType: 2,
                                modelId,
                                utterance,
                                exploration,
                                restatement: interpretResult.restatement,
                                doNotShowResult: hideLowConfidenceResult,
                                usedAgents: null == interpretResult ? void 0 : interpretResult.usedAgents
                            }), [ 3, 4 ]) : (this.updateManager.pushThrottledUpdate({
                                request,
                                resultType: 6,
                                utterance
                            }), [ 2 ]);

                          case 3:
                            return _d.sent(), this.updateManager.pushThrottledUpdate({
                                request,
                                resultType: 6,
                                utterance
                            }), [ 3, 4 ];

                          case 4:
                            return [ 2 ];
                        }
                    });
                });
            }, InterpretListener.prototype.handleVisualResult = function(interpretResponse, request) {
                return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__awaiter)(this, void 0, void 0, function() {
                    var utterance, interpretResult, returnTermBindingsTrainingInfo, queryUnSupportedLevelWarningsInfo, queryUnSupportedLevelWarningMessageKeys, hasUnsupportedWarnings, visualContainer, command, model, visualRecommendation, notShowLowConfidenceResult;
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            if (_powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_8__.fF.assertValue(interpretResponse, "interpretResponse"), 
                            utterance = interpretResponse.utterance, interpretResult = _.first(null == interpretResponse ? void 0 : interpretResponse.results), 
                            !this.setupParams.canShowVisuals) return this.updateManager.pushThrottledUpdate(this.setupParams.forTrainingTermBinding ? {
                                request,
                                resultType: 2,
                                utterance,
                                termBindingsTrainingInfo: getTermsBindingTrainingInfo(interpretResult),
                                doNotShowResult: !1
                            } : {
                                request,
                                resultType: 5,
                                utterance
                            }), [ 2 ];
                            returnTermBindingsTrainingInfo = this.setupParams.forTrainingTermBinding ? getTermsBindingTrainingInfo(interpretResult) : void 0, 
                            _b.label = 1;

                          case 1:
                            return _b.trys.push([ 1, 4, , 5 ]), queryUnSupportedLevelWarningsInfo = (0, _utils_wireClientContractsConversion_util__WEBPACK_IMPORTED_MODULE_15__.vr)(null == interpretResponse ? void 0 : interpretResponse.warnings), 
                            queryUnSupportedLevelWarningMessageKeys = _.uniq(_.map(queryUnSupportedLevelWarningsInfo, function(info) {
                                return info.messageKey;
                            })), hasUnsupportedWarnings = !_.isEmpty(queryUnSupportedLevelWarningsInfo), visualContainer = void 0, 
                            (command = interpretResult && interpretResult.command) && command.query ? _.isEmpty(queryUnSupportedLevelWarningsInfo) ? (model = this.getModelFromResult(interpretResult), 
                            this.ensureDataSources(model, void 0), [ 4, this.lazyScoped.get("visualRecommendationService") ]) : (this.updateManager.pushThrottledUpdate({
                                request,
                                resultType: 2,
                                utterance,
                                termBindingsTrainingInfo: returnTermBindingsTrainingInfo,
                                doNotShowResult: !0,
                                doNotShowResultCustomMessageKeys: queryUnSupportedLevelWarningMessageKeys
                            }), [ 2 ]) : (this.updateManager.pushThrottledUpdate({
                                request,
                                resultType: this.setupParams.forTrainingTermBinding ? 2 : 3,
                                utterance,
                                termBindingsTrainingInfo: returnTermBindingsTrainingInfo,
                                doNotShowResult: !this.setupParams.forTrainingTermBinding || hasUnsupportedWarnings,
                                doNotShowResultCustomMessageKeys: hasUnsupportedWarnings ? queryUnSupportedLevelWarningMessageKeys : void 0
                            }), [ 2 ]);

                          case 2:
                            return visualRecommendation = _b.sent(), [ 4, (0, _utils_visual_util__WEBPACK_IMPORTED_MODULE_12__.y_)(interpretResult, this.conceptualSchemaProxy, this.dataSources, visualRecommendation) ];

                          case 3:
                            return (visualContainer = _b.sent()) ? (notShowLowConfidenceResult = this.getNotShowLowConfidenceResult(interpretResult), 
                            this.updateManager.pushThrottledUpdate({
                                request,
                                resultType: 2,
                                modelId: model.id,
                                utterance,
                                restatement: interpretResult && interpretResult.restatement,
                                termBindingsTrainingInfo: returnTermBindingsTrainingInfo,
                                visualContainer,
                                doNotShowResult: notShowLowConfidenceResult,
                                usedAgents: null == interpretResult ? void 0 : interpretResult.usedAgents
                            })) : this.updateManager.pushThrottledUpdate({
                                request,
                                resultType: 6,
                                utterance,
                                termBindingsTrainingInfo: returnTermBindingsTrainingInfo
                            }), [ 3, 5 ];

                          case 4:
                            return _b.sent(), this.updateManager.pushThrottledUpdate({
                                request,
                                resultType: 6,
                                utterance,
                                termBindingsTrainingInfo: returnTermBindingsTrainingInfo
                            }), [ 3, 5 ];

                          case 5:
                            return [ 2 ];
                        }
                    });
                });
            }, InterpretListener.prototype.handleCalculationResult = function(interpretResponse, request) {
                var _a;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__awaiter)(this, void 0, void 0, function() {
                    var utterance, calculations, _i, result_1, r;
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_9__.__generator)(this, function(_b) {
                        for (utterance = interpretResponse.utterance, this.setupParams.canShowCalculations || this.updateManager.pushThrottledUpdate({
                            request,
                            resultType: 5,
                            utterance
                        }), calculations = [], _i = 0, result_1 = interpretResponse.results; _i < result_1.length; _i++) (null === (_a = (r = result_1[_i]).command) || void 0 === _a ? void 0 : _a.defineCalculation) && !this.getNotShowLowConfidenceResult(r) && calculations.push((0, 
                        tslib__WEBPACK_IMPORTED_MODULE_9__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_9__.__assign)({}, r.command.defineCalculation), {
                            restatement: r.restatement
                        }));
                        return _.isEmpty(calculations) ? this.updateManager.pushThrottledUpdate({
                            request,
                            resultType: 3,
                            utterance
                        }) : this.updateManager.pushThrottledUpdate({
                            request,
                            resultType: 2,
                            utterance,
                            restatement: void 0,
                            doNotShowResult: !1,
                            calculations
                        }), [ 2 ];
                    });
                });
            }, InterpretListener.prototype.getNotShowLowConfidenceResult = function(interpretResult) {
                if (!(null == interpretResult ? void 0 : interpretResult.command)) return !0;
                var correctionState = interpretResult.correctionInfo && interpretResult.correctionInfo.state;
                return 0 === correctionState || 1 === correctionState && this.setupParams.canShowDidYouMean;
            }, InterpretListener.prototype.getModelFromResult = function(interpretResult) {
                var model = 1 === _.size(this.setupParams.models) ? this.setupParams.models[0] : _.find(this.setupParams.models, function(m) {
                    return m.dbName === interpretResult.databaseName && m.vsName === interpretResult.virtualServerName;
                });
                return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_8__.fF.assertValue(model, "There are multiple models for interpret, one of them should match the model that the interpret result is from"), 
                model;
            }, InterpretListener.prototype.ensureDataSources = function(model, exploration) {
                if (model && this.setupParams.resetDataSources) {
                    var dsrDataSource = (0, _powerbi_legacy_Explore_contracts_dataSource__WEBPACK_IMPORTED_MODULE_16__.CD)(model), modelDataSourcesArray = (0, 
                    _powerbi_legacy_Explore_contracts_dataSource__WEBPACK_IMPORTED_MODULE_16__.yd)([ dsrDataSource ]);
                    if (!_.isEmpty(null == exploration ? void 0 : exploration.modelExtensions)) {
                        var schemaName = _powerbi_legacy_Explore_constants__WEBPACK_IMPORTED_MODULE_17__.eM, dataSourceName = dsrDataSource.name;
                        modelDataSourcesArray.push({
                            type: _powerbi_Typings_Modern_Shared_Explore_typings__WEBPACK_IMPORTED_MODULE_18__.K,
                            id: void 0,
                            name: schemaName,
                            extends: dataSourceName,
                            exploration: {
                                schemaName,
                                extends: dataSourceName,
                                getModelExtensions: function() {
                                    return exploration.modelExtensions;
                                },
                                getDataSourceVariables: function() {
                                    return exploration.dataSourceVariables;
                                }
                            }
                        });
                    }
                    this.dataSources.set(modelDataSourcesArray);
                }
            }, InterpretListener;
        }();
        function getTermsBindingTrainingInfo(interpretResult) {
            if (interpretResult) {
                var command = interpretResult.command;
                return {
                    spans: interpretResult.spans,
                    correctedUtterance: interpretResult.correctionInfo && interpretResult.correctionInfo.correctedUtterance,
                    linguisticSchemaJson: command && command.linguisticSchemaJson,
                    linguisticSchemaItems: command && command.linguisticSchemaItems,
                    inferredTermMetadata: command && command.inferredTermMetadata
                };
            }
        }
        var ObservableUpdateManager = function() {
            function ObservableUpdateManager(timeout) {
                this.timeout = timeout, this.interpretResult$ = new rxjs__WEBPACK_IMPORTED_MODULE_19__.X(void 0);
            }
            return ObservableUpdateManager.prototype.getObservable = function() {
                return this.interpretResult$.asObservable();
            }, ObservableUpdateManager.prototype.pushUpdate = function(update) {
                this.throttler && clearTimeout(this.throttler), this.throttler = void 0, this.throttledUpdate = void 0, 
                this.interpretResult$.next(update), this.throttler = this.startThrottler();
            }, ObservableUpdateManager.prototype.pushThrottledUpdate = function(update) {
                this.throttler ? this.throttledUpdate = update : (this.interpretResult$.next(update), 
                this.throttler = this.startThrottler());
            }, ObservableUpdateManager.prototype.startThrottler = function() {
                var _this = this;
                return setTimeout(function() {
                    _this.throttledUpdate ? (_this.interpretResult$.next(_this.throttledUpdate), _this.throttledUpdate = void 0, 
                    _this.throttler = _this.startThrottler()) : _this.throttler = void 0;
                }, this.timeout);
            }, ObservableUpdateManager;
        }();
    },
    72129: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        "use strict";
        function isSuggestedQuestionContent(content) {
            return "Suggestions" === (null == content ? void 0 : content.type);
        }
        function isQnaVisualContent(content) {
            return "Visual" === (null == content ? void 0 : content.type);
        }
        function isQnaVisualAsExplorationContent(content) {
            return "VisualAsExploration" === (null == content ? void 0 : content.type);
        }
        function isPodContent(content) {
            return "Pod" === (null == content ? void 0 : content.type);
        }
        function isErrorContent(content) {
            return "Error" === (null == content ? void 0 : content.type);
        }
        function isQueryErrorContent(content) {
            return "QueryError" === (null == content ? void 0 : content.type);
        }
        __webpack_require__.d(__webpack_exports__, {
            Ew: function() {
                return isSuggestedQuestionContent;
            },
            fU: function() {
                return isQnaVisualAsExplorationContent;
            },
            lP: function() {
                return isPodContent;
            },
            mn: function() {
                return isQnaVisualContent;
            },
            uT: function() {
                return isErrorContent;
            },
            wp: function() {
                return isQueryErrorContent;
            }
        });
    },
    7124: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            D: function() {
                return QnaComponentCoreService;
            }
        });
        var tslib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(81337), _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(50423), rxjs_operators__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(48787), _powerbi_InjectionTokens_account_service_token__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(92060), _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(79154), _powerbi_legacy_PowerBIVisuals_VisualsData_semanticQuery_sqExpr__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(94419), _powerbi_legacy_Explore_contracts_visualContainer2__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(80981), _powerbi_legacy_PowerBIVisuals_Visuals_common_colorHelper__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(90120), _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(56578), _powerbi_legacy_PowerBICommon_utils_colorUtility__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(1521), _powerbi_legacy_ExploreUI_viewModels_viewModelFactory__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(26982), _powerbi_legacy_PowerBIVisuals_Visuals_common_fontProperties__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(18664), _powerbi_legacy_ExploreUI_services_visualHostService__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(47245), _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(62458), _powerbi_legacy_PowerBIContracts_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(2142), _powerbi_legacy_PowerBIVisuals_VisualsCommon_clientError__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(2931), _powerbi_legacy_PowerBIVisuals_VisualsCommon_arrayExtensions__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(50550), _powerbi_legacy_Explore_services_filters_filterBuilder__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(11077), _powerbi_legacy_PowerBIVisuals_Visuals_common_units__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(32105), _powerbi_Common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(35911), _powerbi_legacy_ExploreUI_utils_errorDetailsUtility__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(18503), _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(82755), _powerbi_legacy_Explore_util_visualContainerUtils__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(3579), _powerbi_legacy_Explore_util_visualContainerUtils__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(60661), _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject3__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(76045), _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_StandaloneUtility3__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(43286), _powerbi_legacy_PowerBIVisuals_VisualsCommon_Prototype__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(39681), _powerbi_legacy_JsCommon_Utility_BrowserUtility__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(16808), _powerbi_legacy_PowerBIVisuals_Visuals_common_objectEnumerationBuilder__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(28579), _powerbi_InjectionTokens_promiseFactory__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(14463), _powerbi_ExploreUI_explore_ui_dialogs_identifiers__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(78778), _powerbi_InjectionTokens_qnaLiveConnectService__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(64491), _powerbi_InjectionTokens_qnaModelUtilsPath__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(65947), _powerbi_InjectionTokens_qnaProxyPath__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(12123), _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_qnaVisual_capabilities__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(32640), _powerbi_legacy_Explore_services_selectionUtils__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(21728), _powerbi_legacy_PowerBIVisuals_VisualsCommon_serviceError__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(80952), _powerbi_Telemetry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(21617), _powerbi_legacy_VisualHostUI_utils_themeUtils__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(4954), _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_Utility__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(38078), _powerbi_legacy_PowerBIVisuals_VisualsContracts_common_enums__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(46135), _powerbi_legacy_Explore_services_events__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(8590), _powerbi_InjectionTokens_tooltips_visualHostTooltipServiceFactory__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(80318), _telemetry_events__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(5894), _qna_component_core_utils__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(72129), _utils_visual_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(74857), _utils_wireClientContractsConversion_util__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(35988), _utils_qna_model_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(87974), _powerbi_VisualHostCore__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(29866), _powerbi_VisualHostCore__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(52121), _powerbi_Data__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(26898), _powerbi_ExploreUI__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(83008), _powerbi_ExploreUI__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(48145), _powerbi_ExploreUI__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(39503), _powerbi_ExploreUI__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(11494), _powerbi_ExploreUI__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(77200), _powerbi_ExploreUI__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(27980), _powerbi_UILibrary__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(58938), _powerbi_UILibrary__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(67660), _powerbi_Explore__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(69474), _powerbi_Explore__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(81986), _powerbi_Explore__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(79006), _powerbi_Explore__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(72262), _powerbi_Explore__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(906), _powerbi_Explore__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(84281), _powerbi_Explore__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(80277), _powerbi_FeatureSwitch__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(9380), _qna_feedback_state_qna_feedback_state_service__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(21548), _powerbi_LazyLoad__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(57786), _powerbi_LazyLoad__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(2330), _powerbi_Geocoding__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(28505), _powerbi_Geocoding__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(58991), _powerbi_Localization__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(65181), _powerbi_ErrorService__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(81213), _powerbi_A11y__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(83309), _interpret_listener_interpret_listener_service__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(37320), _powerbi_GeocoderIndexedDB__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(1599), presentationDefaults = {
            withBorder: !0,
            showSuggestions: !0,
            acceptedColor: "#0078D4",
            errorColor: "#FF0000",
            warningColor: "#0078D4",
            borderColor: "#A19F9D",
            fontColor: "#323130",
            darkFontColor: "#252423",
            lightFontColor: "#FFFFFF",
            inputBoxBackgroundColor: "#FFFFFF",
            suggestionBackgroundColor: "#F3F2F1",
            hoverColor: "#EEEEEE",
            semiboldFont: "'Segoe UI Semibold', wf_segoe-ui_semibold, helvetica, arial, sans-serif",
            regularFont: "'Segoe UI', wf_segoe-ui_normal, helvetica, arial, sans-serif",
            smallFontSize: _powerbi_legacy_PowerBIVisuals_Visuals_common_units__WEBPACK_IMPORTED_MODULE_2__.B.createFromPt(9),
            mediumFontSize: _powerbi_legacy_PowerBIVisuals_Visuals_common_units__WEBPACK_IMPORTED_MODULE_2__.B.createFromPt(10),
            largeFontSize: _powerbi_legacy_PowerBIVisuals_Visuals_common_units__WEBPACK_IMPORTED_MODULE_2__.B.createFromPt(12),
            defaultBIUValue: !1
        }, defaultInputConfig = {
            spanDropdownHeaderConfig: {
                show: !0,
                unknownSpanHeaderConfig: {
                    actionType: "none"
                }
            }
        }, QnaComponentCoreService = function() {
            function QnaComponentCoreService(visualPlugin, changeDetectorRef, conceptualSchemaProxy, dataSources, dialogService, explorationActivity, explorationCapabilities, explorationNavigation, explorationSerializer, eventBridge, featureSwitchService, qnaFeedbackStateService, lazyProvider, themeService, expandCollapse, geocoder, geolocationService, moduleLoader, localizationService, errorService, telemetryService, resourceLoader, screenReaderService, interpretListenerFactory, selectionService, sortService, undoRedoService, viewModeState, visualAuthoringOpService, azureMapTokenCache, azureMapsEndpoint, geocoderIndexedDB, visualHostTooltipServiceFactory, promiseFactory, accountService, qnaProxyPathToken, qnaModelUtilsPathToken, qnaLiveConnectService) {
                if (this.visualPlugin = visualPlugin, this.changeDetectorRef = changeDetectorRef, 
                this.conceptualSchemaProxy = conceptualSchemaProxy, this.dataSources = dataSources, 
                this.dialogService = dialogService, this.explorationActivity = explorationActivity, 
                this.explorationCapabilities = explorationCapabilities, this.explorationNavigation = explorationNavigation, 
                this.explorationSerializer = explorationSerializer, this.eventBridge = eventBridge, 
                this.featureSwitchService = featureSwitchService, this.qnaFeedbackStateService = qnaFeedbackStateService, 
                this.lazyProvider = lazyProvider, this.themeService = themeService, this.expandCollapse = expandCollapse, 
                this.geocoder = geocoder, this.geolocationService = geolocationService, this.moduleLoader = moduleLoader, 
                this.localizationService = localizationService, this.errorService = errorService, 
                this.telemetryService = telemetryService, this.resourceLoader = resourceLoader, 
                this.screenReaderService = screenReaderService, this.interpretListenerFactory = interpretListenerFactory, 
                this.selectionService = selectionService, this.sortService = sortService, this.undoRedoService = undoRedoService, 
                this.viewModeState = viewModeState, this.visualAuthoringOpService = visualAuthoringOpService, 
                this.azureMapTokenCache = azureMapTokenCache, this.azureMapsEndpoint = azureMapsEndpoint, 
                this.geocoderIndexedDB = geocoderIndexedDB, this.visualHostTooltipServiceFactory = visualHostTooltipServiceFactory, 
                this.promiseFactory = promiseFactory, this.accountService = accountService, this.qnaProxyPathToken = qnaProxyPathToken, 
                this.qnaModelUtilsPathToken = qnaModelUtilsPathToken, this.qnaLiveConnectService = qnaLiveConnectService, 
                this.utteranceUpdated = new _angular_core__WEBPACK_IMPORTED_MODULE_3__.EventEmitter, 
                this.pinnableContentDefinitionUpdated = new _angular_core__WEBPACK_IMPORTED_MODULE_3__.EventEmitter, 
                this.convertVisual = new _angular_core__WEBPACK_IMPORTED_MODULE_3__.EventEmitter, 
                this.utteranceRestated = new _angular_core__WEBPACK_IMPORTED_MODULE_3__.EventEmitter, 
                this.interpretationError = new _angular_core__WEBPACK_IMPORTED_MODULE_3__.EventEmitter, 
                this.isBrowserIE = (0, _powerbi_legacy_JsCommon_Utility_BrowserUtility__WEBPACK_IMPORTED_MODULE_4__.rO)(), 
                this.isBrowserIE) this.viewModel = {
                    state: "Error",
                    error: (0, _utils_visual_util__WEBPACK_IMPORTED_MODULE_5__.ET)(localizationService),
                    qnaInputConfiguration: void 0,
                    themeCollection: void 0,
                    viewport: void 0,
                    presentationViewModel: void 0
                }; else {
                    this.pendingSuggestedQuestionsRequests = 0;
                    var themeCollection = (0, _utils_visual_util__WEBPACK_IMPORTED_MODULE_5__.Su)(this.explorationNavigation, this.featureSwitchService), dataColor = this.themeService.getVisualStyle(themeCollection).colorPalette.dataColors.getColorByIndex(0).value, presentation = {
                        withBorder: presentationDefaults.withBorder,
                        borderColor: presentationDefaults.borderColor,
                        backgroundColor: presentationDefaults.inputBoxBackgroundColor,
                        questionFontProperties: {
                            color: presentationDefaults.fontColor,
                            size: presentationDefaults.mediumFontSize,
                            family: presentationDefaults.regularFont
                        },
                        acceptedUnderlineColor: presentationDefaults.acceptedColor,
                        errorUnderlineColor: presentationDefaults.errorColor,
                        warningUnderlineColor: presentationDefaults.warningColor,
                        hoverColor: presentationDefaults.hoverColor,
                        restatementFontProperties: {
                            color: presentationDefaults.fontColor,
                            size: presentationDefaults.smallFontSize,
                            family: presentationDefaults.regularFont
                        },
                        commitButtonBackgroundColor: dataColor,
                        commitButtonForegroundColor: getContrastForegroundColor(dataColor)
                    };
                    this.viewModel = {
                        state: "Loading",
                        qnaInputConfiguration: void 0,
                        themeCollection,
                        viewport: void 0,
                        presentationViewModel: {
                            inputBox: presentation,
                            suggestions: {
                                backgroundColor: presentationDefaults.suggestionBackgroundColor,
                                show: presentationDefaults.showSuggestions,
                                cardFontProperties: {
                                    color: presentationDefaults.fontColor,
                                    size: presentationDefaults.mediumFontSize,
                                    family: presentationDefaults.regularFont
                                },
                                headerFontProperties: {
                                    color: presentationDefaults.fontColor,
                                    size: presentationDefaults.largeFontSize,
                                    family: presentationDefaults.semiboldFont
                                }
                            }
                        }
                    };
                }
            }
            return QnaComponentCoreService.prototype.initialize = function(models, config, hostServices, entryPoint, utteranceUpdated, convertVisual, initializedTelemetryEvent, contentElement, pinnableContentDefinitionUpdated, utteranceRestated, interpretationError, additionalSourceFilters, useShellTheme) {
                var _a;
                return void 0 === useShellTheme && (useShellTheme = !1), (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function() {
                    var _b, _c, modelsInfo, _d, dataSource, schema, capabilities, inputConfigs, _e, additionalSourceFilterContainers, visualContainerContract, visualHostServices, _this = this;
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__generator)(this, function(_f) {
                        switch (_f.label) {
                          case 0:
                            return this.isBrowserIE ? [ 2 ] : (this.models = models, this.config = config, this.hostServices = hostServices, 
                            this.entryPoint = entryPoint, this.utteranceUpdated = utteranceUpdated, this.convertVisual = convertVisual, 
                            this.utteranceRestated = utteranceRestated, this.interpretationError = interpretationError, 
                            this.initializedTelemetryEvent = initializedTelemetryEvent, this.contentElement = contentElement, 
                            pinnableContentDefinitionUpdated && (this.pinnableContentDefinitionUpdated = pinnableContentDefinitionUpdated), 
                            _b = this, [ 4, this.lazyProvider.get(this.qnaProxyPathToken || "@powerbi/Qna/qnaweb.module#QnaWebModule", "InterpretServiceModern") ]);

                          case 1:
                            return _b.interpretService = _f.sent(), _c = this, [ 4, this.lazyProvider.get(this.qnaModelUtilsPathToken || "@powerbi/Qna/qnaweb.module#QnaWebModule", "qnaModelUtilsService") ];

                          case 2:
                            return _c.qnaModelUtils = _f.sent(), modelsInfo = _.map(this.models, function(m) {
                                return {
                                    datasetName: m.dbName,
                                    datasetId: m.id
                                };
                            }), _d = this, [ 4, (0, _utils_qna_model_util__WEBPACK_IMPORTED_MODULE_7__.U)(modelsInfo, this.qnaModelUtils, this.featureSwitchService) ];

                          case 3:
                            return _d.inCommitQuestionOnDemandMode = _f.sent(), this.interpretListener = this.interpretListenerFactory.createInterpretListener({
                                forTrainingTermBinding: !1,
                                canShowPods: this.config.canShowPods,
                                canShowVisuals: this.config.canShowVisuals,
                                canShowDidYouMean: this.config.canShowDidYouMean,
                                models: this.models,
                                resetDataSources: this.config.resetDataSources
                            }), this.interpretListener.getObservable().subscribe(function(result) {
                                return _this.onResultAvailable(result);
                            }), dataSource = _.find(this.dataSources.get(), function(d) {
                                return d.type === _powerbi_legacy_PowerBIContracts_constants__WEBPACK_IMPORTED_MODULE_8__.nKy;
                            }), [ 4, this.conceptualSchemaProxy.get(this.dataSources.get()) ];

                          case 4:
                            return schema = _f.sent(), capabilities = dataSource && schema && schema.schema(dataSource.name).capabilities, 
                            (inputConfigs = (null === (_a = this.viewModel.qnaInputConfiguration) || void 0 === _a ? void 0 : _a.configs) || {}).supportsPodQueries = !!config.canShowPods, 
                            null != config.focusOnInit && (inputConfigs.autoFocusOnInit = config.focusOnInit), 
                            null != config.disableQnaInputAuthoring && (inputConfigs.disableAuthoring = config.disableQnaInputAuthoring, 
                            inputConfigs.displayDisabledStateVisually = config.disableQnaInputAuthoring), null != config.disableQnaInputAuthoringMessage && (inputConfigs.disableAuthoringMessage = config.disableQnaInputAuthoringMessage), 
                            null != config.hostHandlesUndo && (inputConfigs.hostSupportsUndo = config.hostHandlesUndo), 
                            null != config.showTermDropdownHeader && (inputConfigs.spanDropdownHeaderConfig = {
                                show: config.showTermDropdownHeader
                            }), config.showUnknownTermDropdownHeaderTextOnly && (inputConfigs.spanDropdownHeaderConfig || (inputConfigs.spanDropdownHeaderConfig = {
                                show: void 0
                            }), inputConfigs.spanDropdownHeaderConfig.unknownSpanHeaderConfig = {
                                actionType: "textOnlyHeader",
                                textOnlyTemplate: config.unknownTermDropdownHeaderTextOnlyTemplate
                            }), this.viewModel.themeCollection = (0, _utils_visual_util__WEBPACK_IMPORTED_MODULE_5__.Su)(this.explorationNavigation, this.featureSwitchService), 
                            this.viewModel.qnaInputConfiguration = {
                                entryPoint: this.entryPoint,
                                interpretListener: this.interpretListener,
                                qnaSupportedScopes: _.map(this.models, function(m) {
                                    return {
                                        model: m
                                    };
                                }),
                                configs: inputConfigs,
                                presentation: this.viewModel.presentationViewModel.inputBox,
                                initialUtterance: this.config.initialUtterance || "",
                                initialUtteranceFromSaved: this.config.initialUtteranceFromSaved
                            }, this.viewModel.presentationViewModel.inputBox.useShellTheme = useShellTheme, 
                            _e = this, [ 4, this.getIsModelEditable() ];

                          case 5:
                            return _e.isModelEditable = _f.sent(), [ 4, this.updateUnknownSpanHeaderConfig() ];

                          case 6:
                            return _f.sent(), additionalSourceFilterContainers = _.map(additionalSourceFilters, function(filter, index) {
                                return {
                                    name: "TempFilter" + index,
                                    filter
                                };
                            }), visualContainerContract = this.getCurrentVisual(), visualHostServices = (0, 
                            _powerbi_legacy_PowerBIVisuals_VisualsCommon_Prototype__WEBPACK_IMPORTED_MODULE_9__.ED)((0, 
                            _powerbi_legacy_ExploreUI_services_visualHostService__WEBPACK_IMPORTED_MODULE_10__.q)({
                                geocoder: this.geocoder,
                                geolocation: this.geolocationService,
                                localizationService: this.localizationService,
                                moduleLoader: this.moduleLoader,
                                promiseFactory: this.promiseFactory,
                                visualHostTooltipService: this.visualHostTooltipServiceFactory.createFromVisualContract(visualContainerContract),
                                getAzureMapToken: function() {
                                    return _this.azureMapTokenCache.getAzureMapToken();
                                },
                                azureMapsEndpoint: this.azureMapsEndpoint,
                                geocoderIndexedDB: this.geocoderIndexedDB
                            }), function(h) {
                                h.getLocalizedString = _this.hostServices.getLocalizedString, h.tooltips = _this.hostServices.tooltips, 
                                h.canSelect = _this.hostServices.canSelect, h.onSelecting = _this.hostServices.onSelecting, 
                                h.onSelect = _this.hostServices.onSelect, h.onCustomSort = function(args) {
                                    return _this.onCustomSort(args.sortDescriptors);
                                }, h.geocoder = _this.hostServices.geocoder, h.launchUrl = _this.hostServices.launchUrl, 
                                h.canExpandCollapse = function(_roles) {
                                    return capabilities && capabilities.supportsInstanceFilters;
                                }, h.setNodeExpansionState = function(args) {
                                    var currentVisual = _this.getCurrentVisual();
                                    currentVisual && (args.isCollapse ? _this.expandCollapse.collapseNode(currentVisual, args.dataRoles, args.data) : _this.expandCollapse.expandNode(currentVisual, args.dataRoles, args.data), 
                                    _this.eventBridge.publishToChannel(_powerbi_legacy_Explore_services_events__WEBPACK_IMPORTED_MODULE_11__.jCS, {
                                        affectContainer: function(vc) {
                                            return "qnaVisualContainer" === vc.name;
                                        }
                                    }));
                                }, h.telemetry = _this.hostServices.telemetry;
                            }), Object.defineProperty(visualHostServices, "instanceId", {
                                value: _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_Utility__WEBPACK_IMPORTED_MODULE_12__.b$.generateGuid()
                            }), this.singleVisualHostConfig = {
                                notifyStart: _.noop,
                                notifyEnd: function() {
                                    var _a;
                                    _qna_component_core_utils__WEBPACK_IMPORTED_MODULE_13__.mn(null === (_a = _this.viewModel) || void 0 === _a ? void 0 : _a.result) && (_this.viewModel.result.isLoading = !1);
                                },
                                clearQueryErrors: _.noop,
                                handleQueryErrors: function(error) {
                                    return _this.handleQueryErrors(error);
                                },
                                handleQueryWarnings: _.noop,
                                queryVisualHostServices: {
                                    getFilters: function() {
                                        var visual = _this.getCurrentVisual();
                                        if (visual) {
                                            var filters = _.union(visual && visual.filters, additionalSourceFilterContainers);
                                            return _this.createVisualContainerFilters(visual, filters);
                                        }
                                    },
                                    getDataSourceVariables: function() {
                                        var currentExploration = _this.explorationNavigation.getCurrentExploration();
                                        return currentExploration && currentExploration.dataSourceVariables;
                                    },
                                    disableAnchorTime: !0
                                },
                                visualHostServices,
                                interactivityOptions: {
                                    selection: !0
                                },
                                additionalObjectUpdates: void 0,
                                disableQueryCacheUpdates: !1,
                                noLoadMore: !1
                            }, [ 4, this.setSuggestedQuestions() ];

                          case 7:
                            return _f.sent(), _.isEmpty(this.config.initialUtterance) && this.setSuggestionsViewModel(), 
                            [ 2 ];
                        }
                    });
                });
            }, QnaComponentCoreService.prototype.onCustomSort = function(sortDescriptors) {
                var currentVisual = this.getCurrentVisual();
                (0, _utils_visual_util__WEBPACK_IMPORTED_MODULE_5__.fI)(currentVisual, this.sortHelper, sortDescriptors);
            }, QnaComponentCoreService.prototype.ngAfterViewInit = function() {
                this.updateViewport();
            }, QnaComponentCoreService.prototype.update = function(options) {
                var _a;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function() {
                    var _b, themeCollection, style, themeBackgroundColor, defaultHoverColor, acceptedColor, errorColor, warningColor, colorHelper, dataColor, contrastFontToDataColor, inputBackgroundColor, questionFontProperties, commitButtonBackgroundColor, inputPresentation, cardFontProperties, suggestionsPresentation, utterance;
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__generator)(this, function(_c) {
                        switch (_c.label) {
                          case 0:
                            return _b = this, [ 4, this.getIsModelEditable() ];

                          case 1:
                            return _b.isModelEditable = _c.sent(), !(0, _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_StandaloneUtility3__WEBPACK_IMPORTED_MODULE_14__.yE)(options.type, _powerbi_legacy_PowerBIVisuals_VisualsContracts_common_enums__WEBPACK_IMPORTED_MODULE_15__.EP.Style) || this.isBrowserIE ? [ 3, 3 ] : (_powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_16__.fF.assertValue(this.viewModel, "viewModel should be defined"), 
                            themeCollection = (0, _utils_visual_util__WEBPACK_IMPORTED_MODULE_5__.Su)(this.explorationNavigation, this.featureSwitchService), 
                            this.viewModel.themeCollection = themeCollection, style = themeCollection && this.themeService.getVisualStyle(themeCollection), 
                            themeBackgroundColor = style && style.colorPalette.background.value || presentationDefaults.inputBoxBackgroundColor, 
                            defaultHoverColor = style && style.colorPalette.backgroundNeutral.value || presentationDefaults.hoverColor, 
                            acceptedColor = presentationDefaults.acceptedColor, errorColor = presentationDefaults.errorColor, 
                            warningColor = presentationDefaults.warningColor, colorHelper = style && _powerbi_legacy_PowerBIVisuals_Visuals_common_colorHelper__WEBPACK_IMPORTED_MODULE_17__.v.create(style), 
                            dataColor = this.themeService.getVisualStyle(this.viewModel.themeCollection).colorPalette.dataColors.getColorByIndex(0).value, 
                            contrastFontToDataColor = (0, _powerbi_legacy_PowerBICommon_utils_colorUtility__WEBPACK_IMPORTED_MODULE_18__.um)(dataColor) > .6 ? presentationDefaults.darkFontColor : presentationDefaults.lightFontColor, 
                            inputBackgroundColor = (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_19__.W7)(options.objects, {
                                objectName: "inputBox",
                                propertyName: "background"
                            }, themeBackgroundColor), questionFontProperties = this.createFontProperties(options.objects, "inputBox", "question", "label", presentationDefaults.mediumFontSize, !1, colorHelper, style), 
                            commitButtonBackgroundColor = (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_19__.W7)(options.objects, {
                                objectName: "inputBox",
                                propertyName: "commitButtonBackgroundColor"
                            }, dataColor), inputPresentation = {
                                withBorder: presentationDefaults.withBorder,
                                borderColor: presentationDefaults.borderColor,
                                backgroundColor: inputBackgroundColor,
                                questionFontProperties,
                                acceptedUnderlineColor: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_19__.W7)(options.objects, {
                                    objectName: "inputBox",
                                    propertyName: "acceptedColor"
                                }, acceptedColor),
                                errorUnderlineColor: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_19__.W7)(options.objects, {
                                    objectName: "inputBox",
                                    propertyName: "errorColor"
                                }, errorColor),
                                warningUnderlineColor: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_19__.W7)(options.objects, {
                                    objectName: "inputBox",
                                    propertyName: "warningColor"
                                }, warningColor),
                                hoverColor: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_19__.W7)(options.objects, {
                                    objectName: "inputBox",
                                    propertyName: "hoverColor"
                                }, defaultHoverColor),
                                restatementFontProperties: this.createFontProperties(options.objects, "inputBox", "restatement", "smallLabel", presentationDefaults.smallFontSize, !1, colorHelper, style),
                                commitButtonBackgroundColor,
                                commitButtonForegroundColor: getContrastForegroundColor(commitButtonBackgroundColor)
                            }, this.viewModel.presentationViewModel.inputBox = inputPresentation, cardFontProperties = this.createFontProperties(options.objects, "suggestions", "card", "label", presentationDefaults.mediumFontSize, !1, colorHelper, style), 
                            options.objects && options.objects.suggestions && options.objects.suggestions.cardFontColor || (cardFontProperties.color = contrastFontToDataColor), 
                            suggestionsPresentation = {
                                show: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_19__.NA)(options.objects, {
                                    objectName: "suggestions",
                                    propertyName: "show"
                                }, !0),
                                backgroundColor: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_19__.W7)(options.objects, {
                                    objectName: "suggestions",
                                    propertyName: "cardBackground"
                                }, dataColor),
                                cardFontProperties,
                                headerFontProperties: this.createFontProperties(options.objects, "suggestions", "header", "largeLabel", presentationDefaults.largeFontSize, !1, colorHelper, style)
                            }, this.viewModel.presentationViewModel.suggestions = suggestionsPresentation, this.viewModel.qnaInputConfiguration || (this.viewModel.qnaInputConfiguration = {
                                entryPoint: this.entryPoint,
                                qnaSupportedScopes: void 0,
                                configs: defaultInputConfig
                            }), [ 4, this.updateUnknownSpanHeaderConfig() ]);

                          case 2:
                            _c.sent(), _c.label = 3;

                          case 3:
                            return (0, _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_StandaloneUtility3__WEBPACK_IMPORTED_MODULE_14__.yE)(options.type, _powerbi_legacy_PowerBIVisuals_VisualsContracts_common_enums__WEBPACK_IMPORTED_MODULE_15__.EP.Data) ? (this.inheritedFilters = options.filters, 
                            (null === (_a = this.viewModel.qnaInputConfiguration) || void 0 === _a ? void 0 : _a.qnaSupportedScopes) ? [ 4, this.setSuggestedQuestions() ] : [ 3, 6 ]) : [ 3, 7 ];

                          case 4:
                            return _c.sent(), _qna_component_core_utils__WEBPACK_IMPORTED_MODULE_13__.Ew(this.viewModel.result) && this.setSuggestionsViewModel(), 
                            [ 4, this.updateUnknownSpanHeaderConfig() ];

                          case 5:
                            _c.sent(), _c.label = 6;

                          case 6:
                            this.eventBridge.publishToChannel(_powerbi_legacy_Explore_services_events__WEBPACK_IMPORTED_MODULE_11__.jCS, {
                                affectContainer: function(vc) {
                                    return "qnaVisualContainer" === vc.name;
                                }
                            }), _c.label = 7;

                          case 7:
                            return (0, _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_StandaloneUtility3__WEBPACK_IMPORTED_MODULE_14__.yE)(options.type, _powerbi_legacy_PowerBIVisuals_VisualsContracts_common_enums__WEBPACK_IMPORTED_MODULE_15__.EP.Resize) && (this.visualContainerViewport = options.viewport, 
                            this.updateViewport(), !this.isBrowserIE && _qna_component_core_utils__WEBPACK_IMPORTED_MODULE_13__.Ew(this.viewModel.result) && this.setSuggestionsViewModel()), 
                            this.isBrowserIE || options.firstUpdate || options.objects && options.objects.hiddenProperties && (utterance = (0, 
                            _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject2__WEBPACK_IMPORTED_MODULE_19__.NA)(options.objects, {
                                objectName: "hiddenProperties",
                                propertyName: "savedUtterance"
                            }, ""), this.qnaInputComponent && this.qnaInputComponent.interpretUtterance({
                                utterance,
                                suppressSuggestions: !0,
                                incomingTags: [ "Committed" ],
                                useUncommittedUtterance: !0
                            })), [ 2 ];
                        }
                    });
                });
            }, QnaComponentCoreService.prototype.enumerateObjectInstances = function(options) {
                var _a, _b, _this = this;
                if (_powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_16__.fF.assert(function() {
                    return !_this.isBrowserIE;
                }, "Expect this not to be called if it is inside IE browser"), !this.isBrowserIE) {
                    var enumeration = new _powerbi_legacy_PowerBIVisuals_Visuals_common_objectEnumerationBuilder__WEBPACK_IMPORTED_MODULE_20__.G, presentationVM = this.viewModel.presentationViewModel;
                    switch (options.objectName) {
                      case "inputBox":
                        var properties = ((_a = {}).background = presentationVM.inputBox.backgroundColor, 
                        _a.questionFontColor = presentationVM.inputBox.questionFontProperties.color, _a.questionFontSize = presentationVM.inputBox.questionFontProperties.size.pt, 
                        _a);
                        properties.questionBold = presentationVM.inputBox.questionFontProperties.weight === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_21__.en, 
                        properties.questionItalic = presentationVM.inputBox.questionFontProperties.style === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_21__.BF, 
                        properties.questionUnderline = presentationVM.inputBox.questionFontProperties.textDecoration === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_21__.f0, 
                        properties.questionFontFamily = presentationVM.inputBox.questionFontProperties.family, 
                        properties.acceptedColor = presentationVM.inputBox.acceptedUnderlineColor, properties.errorColor = presentationVM.inputBox.errorUnderlineColor, 
                        properties.warningColor = presentationVM.inputBox.warningUnderlineColor, properties.hoverColor = presentationVM.inputBox.hoverColor, 
                        properties.restatementFontColor = presentationVM.inputBox.restatementFontProperties.color, 
                        properties.restatementFontSize = presentationVM.inputBox.restatementFontProperties.size.pt, 
                        properties.restatementFontFamily = presentationVM.inputBox.restatementFontProperties.family, 
                        this.inCommitQuestionOnDemandMode && (properties.commitButtonBackgroundColor = presentationVM.inputBox.commitButtonBackgroundColor), 
                        enumeration.pushInstance({
                            selector: null,
                            properties,
                            objectName: "inputBox"
                        });
                        break;

                      case "suggestions":
                        var suggestionProperties = ((_b = {}).show = presentationVM.suggestions.show, _b.headerFontColor = presentationVM.suggestions.headerFontProperties.color, 
                        _b.headerFontSize = presentationVM.suggestions.headerFontProperties.size.pt, _b);
                        suggestionProperties.headerBold = presentationVM.suggestions.headerFontProperties.weight === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_21__.en, 
                        suggestionProperties.headerItalic = presentationVM.suggestions.headerFontProperties.style === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_21__.BF, 
                        suggestionProperties.headerUnderline = presentationVM.suggestions.headerFontProperties.textDecoration === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_21__.f0, 
                        suggestionProperties.headerFontFamily = presentationVM.suggestions.headerFontProperties.family, 
                        suggestionProperties.cardBackground = presentationVM.suggestions.backgroundColor, 
                        suggestionProperties.cardFontColor = presentationVM.suggestions.cardFontProperties.color, 
                        suggestionProperties.cardFontSize = presentationVM.suggestions.cardFontProperties.size.pt, 
                        suggestionProperties.cardBold = presentationVM.suggestions.cardFontProperties.weight === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_21__.en, 
                        suggestionProperties.cardItalic = presentationVM.suggestions.cardFontProperties.style === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_21__.BF, 
                        suggestionProperties.cardUnderline = presentationVM.suggestions.cardFontProperties.textDecoration === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_21__.f0, 
                        suggestionProperties.cardFontFamily = presentationVM.suggestions.cardFontProperties.family, 
                        enumeration.pushInstance({
                            selector: null,
                            properties: suggestionProperties,
                            objectName: "suggestions"
                        });
                    }
                    return enumeration.complete();
                }
            }, QnaComponentCoreService.prototype.getFormattingModel = function() {
                var _this = this;
                if (_powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_16__.fF.assert(function() {
                    return !_this.isBrowserIE;
                }, "Expect this not to be called if it is inside IE browser"), !this.isBrowserIE) {
                    var presentationVM = this.viewModel.presentationViewModel;
                    return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.Nq(function() {
                        return _this.buildInputBoxFormattingCard(presentationVM);
                    }, function() {
                        return _this.buildRestatementFormattingCard(presentationVM);
                    }, function() {
                        return _this.buildSuggestionsFormattingCard(presentationVM);
                    }).build();
                }
            }, QnaComponentCoreService.prototype.getCurrentVisual = function() {
                var _a, content = null === (_a = this.viewModel) || void 0 === _a ? void 0 : _a.result;
                return _qna_component_core_utils__WEBPACK_IMPORTED_MODULE_13__.mn(content) ? content.visual : _qna_component_core_utils__WEBPACK_IMPORTED_MODULE_13__.fU(content) ? _.first(content.exploreCanvas.contract.visualContainers) : _qna_component_core_utils__WEBPACK_IMPORTED_MODULE_13__.wp(content) ? content.visualWithError : void 0;
            }, QnaComponentCoreService.prototype.getCurrentUtteranceTrimmed = function() {
                return _.trim(this.getCurrentUtteranceUntrimmed());
            }, QnaComponentCoreService.prototype.setGetQnaInputComponentFunc = function(getQnaInputComponent) {
                _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_16__.fF.assertValue(getQnaInputComponent, "getQnaInputComponent must be defined."), 
                this.getQnaInputComponent = getQnaInputComponent;
            }, QnaComponentCoreService.prototype.convertVisualClicked = function() {
                var currentVisual = this.getCurrentVisual();
                if (currentVisual) {
                    var visualType = (0, _powerbi_legacy_Explore_util_visualContainerUtils__WEBPACK_IMPORTED_MODULE_23__.s)(currentVisual);
                    this.telemetryService.logChildEvent(this.initializedTelemetryEvent, _telemetry_events__WEBPACK_IMPORTED_MODULE_24__.dN, {
                        visualType
                    }), this.convertVisual.emit(currentVisual);
                }
            }, QnaComponentCoreService.prototype.interpretSuggestedQuestion = function(suggestion) {
                var _this = this;
                this.telemetryService.logChildEvent(this.initializedTelemetryEvent, _telemetry_events__WEBPACK_IMPORTED_MODULE_24__.WW, {
                    isAutoSuggestion: !0
                }), this.qnaInputComponent && this.undoRedoService.register("Commit suggested QnA utterance", function() {
                    _this.qnaInputComponent.interpretUtterance({
                        utterance: suggestion,
                        suppressSuggestions: !0,
                        incomingTags: [ "SuggestedUtterance", "Committed" ],
                        requireCursorAtEndIfFocused: !0,
                        enforceFocus: !0,
                        isCommitInCommitQuestionOnDemandMode: !0
                    });
                });
            }, QnaComponentCoreService.prototype.toggleShowAllSuggestions = function() {
                if (_qna_component_core_utils__WEBPACK_IMPORTED_MODULE_13__.Ew(this.viewModel.result)) {
                    var suggestionsContent = this.viewModel.result;
                    suggestionsContent.showAllSuggestions = !suggestionsContent.showAllSuggestions, 
                    this.setSuggestionsViewModel();
                }
            }, QnaComponentCoreService.prototype.showQnaVisualErrorDetails = function() {
                (0, _utils_visual_util__WEBPACK_IMPORTED_MODULE_5__.aZ)(this.viewModel.error, this.errorService, this.localizationService);
            }, QnaComponentCoreService.prototype.showResultErrorDetails = function() {
                (_qna_component_core_utils__WEBPACK_IMPORTED_MODULE_13__.uT(this.viewModel.result) || _qna_component_core_utils__WEBPACK_IMPORTED_MODULE_13__.wp(this.viewModel.result)) && (0, 
                _utils_visual_util__WEBPACK_IMPORTED_MODULE_5__.aZ)(this.viewModel.result, this.errorService, this.localizationService);
            }, QnaComponentCoreService.prototype.updateViewport = function() {
                if (!this.isBrowserIE) {
                    var visualOrReportOuterContainerElement = this.contentElement.nativeElement;
                    this.viewport = {
                        scale: 1,
                        height: visualOrReportOuterContainerElement.clientHeight - 10,
                        width: visualOrReportOuterContainerElement.clientWidth - 10
                    }, this.viewModel.viewport = this.viewport;
                }
            }, QnaComponentCoreService.prototype.getUnknownSpanDropdownHeaderActionType = function() {
                return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return this.qnaLiveConnectService ? this.qnaLiveConnectService.allowsLinguisticSchemaFeedback() ? [ 2, "askToAdd" ] : [ 3, 1 ] : [ 2, "askToAdd" ];

                          case 1:
                            return [ 4, this.allowTooling() ];

                          case 2:
                            return _a.sent() ? [ 2, "defineInTooling" ] : [ 2, "none" ];

                          case 3:
                            return [ 2 ];
                        }
                    });
                });
            }, QnaComponentCoreService.prototype.allowTooling = function() {
                var _a;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function() {
                    var canEdit, explorationCapabilities, _b;
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__generator)(this, function(_c) {
                        switch (_c.label) {
                          case 0:
                            return null == (canEdit = null === (_a = this.config) || void 0 === _a ? void 0 : _a.canEdit) && (canEdit = 0 !== this.viewModeState.getMode()), 
                            canEdit && (null == (explorationCapabilities = this.explorationCapabilities.getCapabilities()) ? void 0 : explorationCapabilities.allowQnaTooling) ? null != this.isModelEditable ? [ 3, 2 ] : (_b = this, 
                            [ 4, this.getIsModelEditable() ]) : [ 2, !1 ];

                          case 1:
                            _b.isModelEditable = _c.sent(), _c.label = 2;

                          case 2:
                            return this.isModelEditable ? [ 2, !0 ] : [ 2, !1 ];
                        }
                    });
                });
            }, QnaComponentCoreService.prototype.shouldShowThumbsUpDown = function() {
                return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function() {
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return this.isBrowserIE ? [ 2, !1 ] : this.featureSwitchService.featureSwitches.qnaThumbsUpDown ? [ 4, this.getIsModelEditable() ] : [ 2, !1 ];

                          case 1:
                            return [ 2, !_a.sent() ];
                        }
                    });
                });
            }, QnaComponentCoreService.prototype.showFeedbackForCurrentQuestion = function() {
                var _a, _this = this;
                if (_powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_16__.fF.assert(function() {
                    return !_this.isBrowserIE;
                }, "Expect this never get called if it is inside IE browser"), this.isBrowserIE) return !1;
                var content = null === (_a = this.viewModel) || void 0 === _a ? void 0 : _a.result;
                return !!content && (_qna_component_core_utils__WEBPACK_IMPORTED_MODULE_13__.mn(content) || _qna_component_core_utils__WEBPACK_IMPORTED_MODULE_13__.lP(content) || _qna_component_core_utils__WEBPACK_IMPORTED_MODULE_13__.fU(content));
            }, QnaComponentCoreService.prototype.sendFeedback = function(feedback) {
                return this.logFeedbackTelemetry(feedback), this.qnaInputComponent.sendFeedback(feedback, this.getCurrentUtteranceTrimmed());
            }, QnaComponentCoreService.prototype.launchFeedbackDialog = function(sentiment, showOptions) {
                return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function() {
                    var e_1, _this = this;
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return _a.trys.push([ 0, 2, , 3 ]), [ 4, this.dialogService.openHostDialog({
                                bindings: {
                                    sentiment,
                                    showOptions
                                },
                                componentName: _powerbi_ExploreUI_explore_ui_dialogs_identifiers__WEBPACK_IMPORTED_MODULE_25__.Xr,
                                config: {
                                    minWidth: "600px",
                                    panelClass: [ "no-padding" ]
                                },
                                dialogName: "QnaFeedbackDialog"
                            }) ];

                          case 1:
                            return _a.sent().afterClosed().pipe((0, rxjs_operators__WEBPACK_IMPORTED_MODULE_26__.q)(1)).subscribe(function(feedback) {
                                if (feedback && (!_.isEmpty(feedback.reason) || !_.isEmpty(feedback.comment))) {
                                    _this.sendFeedback(feedback);
                                    var state = 1 === sentiment ? "PositiveDetailSubmitted" : "NegativeDetailSubmitted";
                                    _this.qnaFeedbackStateService.updateState(_this.getCurrentUtteranceTrimmed(), state);
                                }
                            }), [ 3, 3 ];

                          case 2:
                            return e_1 = _a.sent(), _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_16__.fF.assertFail("Qna Feedback dialog failed to open"), 
                            _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_16__.fF.log(e_1), 
                            [ 3, 3 ];

                          case 3:
                            return [ 2 ];
                        }
                    });
                });
            }, QnaComponentCoreService.prototype.updateUnknownSpanHeaderConfig = function() {
                var _a;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function() {
                    var inputSpanDropdownHeaderConfig, _b, _c;
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__generator)(this, function(_d) {
                        switch (_d.label) {
                          case 0:
                            return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_16__.fF.assertValue(this.viewModel.qnaInputConfiguration.configs, "Expect this.viewModel.qnaInputConfiguration.configs has already been defined"), 
                            "textOnlyHeader" === (null === (_a = null == (inputSpanDropdownHeaderConfig = this.viewModel.qnaInputConfiguration.configs.spanDropdownHeaderConfig) ? void 0 : inputSpanDropdownHeaderConfig.unknownSpanHeaderConfig) || void 0 === _a ? void 0 : _a.actionType) ? [ 3, 2 ] : (this.viewModel.qnaInputConfiguration.configs.spanDropdownHeaderConfig || (this.viewModel.qnaInputConfiguration.configs.spanDropdownHeaderConfig = {
                                show: void 0
                            }), _b = this.viewModel.qnaInputConfiguration.configs.spanDropdownHeaderConfig, 
                            _c = {}, [ 4, this.getUnknownSpanDropdownHeaderActionType() ]);

                          case 1:
                            _b.unknownSpanHeaderConfig = (_c.actionType = _d.sent(), _c), _d.label = 2;

                          case 2:
                            return [ 2 ];
                        }
                    });
                });
            }, QnaComponentCoreService.prototype.logFeedbackTelemetry = function(feedback) {
                this.telemetryService.logChildEvent(this.initializedTelemetryEvent, _telemetry_events__WEBPACK_IMPORTED_MODULE_24__.v5, {
                    senitment: this.mapToTelemetryFeedbackSentiment(feedback.sentiment),
                    reason: feedback.reason
                });
            }, QnaComponentCoreService.prototype.mapToTelemetryFeedbackSentiment = function(sentiment) {
                return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_16__.fF.assert(function() {
                    return 1 === sentiment || -1 === sentiment;
                }, "unexpected telemetry sentiment"), 1 === sentiment ? "Positive" : "Negative";
            }, QnaComponentCoreService.prototype.shouldShowdoNotUnderstandMessageFeedbackLink = function() {
                var utterance = this.getCurrentUtteranceTrimmed();
                return "NegativeDetailSubmitted" !== this.qnaFeedbackStateService.getState(utterance);
            }, Object.defineProperty(QnaComponentCoreService.prototype, "qnaInputComponent", {
                get: function() {
                    return this.getQnaInputComponent && this.getQnaInputComponent();
                },
                enumerable: !1,
                configurable: !0
            }), QnaComponentCoreService.prototype.getIsModelEditable = function() {
                return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function() {
                    var dataSource, schema, capabilities;
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__generator)(this, function(_a) {
                        switch (_a.label) {
                          case 0:
                            return dataSource = _.find(this.dataSources.get(), function(d) {
                                return d.type === _powerbi_legacy_PowerBIContracts_constants__WEBPACK_IMPORTED_MODULE_8__.nKy;
                            }), [ 4, this.conceptualSchemaProxy.get(this.dataSources.get()) ];

                          case 1:
                            return schema = _a.sent(), [ 2, null == (capabilities = dataSource && (null == schema ? void 0 : schema.schema(dataSource.name).capabilities)) ? void 0 : capabilities.canEdit ];
                        }
                    });
                });
            }, QnaComponentCoreService.prototype.getCurrentUtteranceUntrimmed = function() {
                return this.qnaInputComponent && this.qnaInputComponent.currentDisplayedUtterance;
            }, QnaComponentCoreService.prototype.setSuggestedQuestions = function() {
                return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function() {
                    var resultResponse, result, suggestedQuestions, _i, _a, _this = this;
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_16__.fF.assert(function() {
                                return !!_this.interpretService;
                            }, "interpretService should be defined"), this.pendingSuggestedQuestionsRequests++, 
                            [ 4, this.interpretService.getSuggestedQuestions(this.convertRequestScopes(this.viewModel.qnaInputConfiguration.qnaSupportedScopes)).toPromise() ];

                          case 1:
                            if (resultResponse = _b.sent(), this.pendingSuggestedQuestionsRequests--, result = resultResponse.result, 
                            "Loading" === this.viewModel.state && this.pendingSuggestedQuestionsRequests > 0 && !resultResponse.error && _.isEmpty(null == result ? void 0 : result.utterances)) return [ 2 ];
                            if (resultResponse.error) return this.viewModel.error = this.getErrorDetailsFromError(resultResponse.error), 
                            this.viewModel.state = "Error", [ 2 ];
                            if (suggestedQuestions = _.chain(this.models).map(function(model) {
                                return _.map(model.featuredQuestions, function(f) {
                                    return f.utterance;
                                });
                            }).flatten().value(), _.isEmpty(suggestedQuestions)) for (suggestedQuestions = [], 
                            _i = 0, _a = result.utterances; _i < _a.length; _i++) suggestedQuestions.push(_a[_i].text);
                            return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_16__.fF.assert(function() {
                                return !_.isEmpty(result.utterances) || !_.isEmpty(result.warnings);
                            }, "No suggested question but no warning? something is wrong."), this.suggestions = {
                                questions: suggestedQuestions,
                                hasWarnings: !_.isEmpty(result.warnings)
                            }, this.viewModel.state = "Ready", [ 2 ];
                        }
                    });
                });
            }, QnaComponentCoreService.prototype.getErrorDetailsFromError = function(error) {
                _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_16__.fF.assertValue(error, "Expect the given error to be defined.");
                var hideSeeDetails, mainMessage = (0, _utils_wireClientContractsConversion_util__WEBPACK_IMPORTED_MODULE_27__.AU)(error.errorCode, this.localizationService), telemetryCode = error.errorCode, displayableErrorInfo = [], debugErrorInfo = [];
                if ("SchemaLanguageNotSupported" === error.errorCode) hideSeeDetails = !1, displayableErrorInfo = [ {
                    errorInfoKey: this.localizationService.get("VisualContainer_QnaVisual_NotSupportedTitle"),
                    errorInfoValue: this.localizationService.get("VisualContainer_QnaVisual_NotSupportedMessage")
                } ]; else if (!(hideSeeDetails = "GenericRequestFailure" !== telemetryCode)) if (error.sourceServiceError) {
                    var errorDetails = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_serviceError__WEBPACK_IMPORTED_MODULE_28__.sI(error.sourceServiceError).getDetails(this.localizationService);
                    displayableErrorInfo = errorDetails.displayableErrorInfo, debugErrorInfo = errorDetails.debugErrorInfo;
                } else _.isEmpty(error.message) || debugErrorInfo.push({
                    errorInfoKey: _powerbi_legacy_PowerBIVisuals_VisualsCommon_clientError__WEBPACK_IMPORTED_MODULE_29__.Bm,
                    errorInfoValue: error.message
                }), _.isEmpty(error.stackTrace) || debugErrorInfo.push({
                    errorInfoKey: _powerbi_legacy_PowerBIVisuals_VisualsCommon_clientError__WEBPACK_IMPORTED_MODULE_29__.RU,
                    errorInfoValue: error.stackTrace
                });
                var result = {
                    code: telemetryCode,
                    fixableError: 0,
                    hideSeeDetails,
                    details: {
                        message: mainMessage,
                        displayableErrorInfo,
                        debugErrorInfo
                    },
                    source: error.source
                };
                return "DataIndexMissingAllStatistics" === error.errorCode && (result.details.helpLink = "https://go.microsoft.com/fwlink/?LinkId=786785", 
                result.details.helpLinkType = 1, result.details.errorType = 1), _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_16__.fF.assert(function() {
                    return !_.isEmpty(result.code);
                }, "telemetryCode should not be empty"), _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_16__.fF.assert(function() {
                    return null != result.hideSeeDetails;
                }, "hideSeeDetails should not be null"), _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_16__.fF.assert(function() {
                    return !_.isEmpty(result.details.message);
                }, "mainMessage should not be empty"), _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_16__.fF.assert(function() {
                    return null != result.source;
                }, "errorSource should not be null"), result;
            }, QnaComponentCoreService.prototype.setSuggestionsViewModel = function() {
                var _a, _b, _c, _this = this;
                _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_16__.fF.assert(function() {
                    return !_this.isBrowserIE;
                }, "Expect this never get called if it is inside IE browser");
                var numberOfSuggestions = _.size(null === (_a = this.suggestions) || void 0 === _a ? void 0 : _a.questions), content = this.viewModel.result, showAllSuggestions = !!_qna_component_core_utils__WEBPACK_IMPORTED_MODULE_13__.Ew(content) && content.showAllSuggestions;
                numberOfSuggestions > 0 && !showAllSuggestions && (numberOfSuggestions = Math.floor(this.contentElement.nativeElement.clientWidth / 200)) <= 1 && (numberOfSuggestions = 5);
                var takenQuestions = _.take(null === (_b = this.suggestions) || void 0 === _b ? void 0 : _b.questions, numberOfSuggestions), takenQuestionsCount = _.size(takenQuestions);
                this.viewModel.result = {
                    type: "Suggestions",
                    suggestions: _.map(takenQuestions, function(question, index) {
                        return {
                            content: question,
                            accessibilityLabel: _this.localizationService.format("Visual_Qna_SuggestedQuestion_AccessibilityLabel", index + 1, takenQuestionsCount, question)
                        };
                    }),
                    showAllSuggestions,
                    failedToLoadSuggestionsMessage: 0 === numberOfSuggestions && (null === (_c = this.suggestions) || void 0 === _c ? void 0 : _c.hasWarnings) ? this.localizationService.get("QnaStart_ErrorLoadingSuggestions") : void 0
                };
            }, QnaComponentCoreService.prototype.onResultAvailable = function(result) {
                var _a, _b, _c;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function() {
                    var restatement, modelId, vcObjects, section, clonedVisual, exploration, activeSection_1, model, _this = this;
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__generator)(this, function(_d) {
                        switch (_d.label) {
                          case 0:
                            return result && 1 === result.resultType ? [ 2 ] : result ? (this.showQuestionProblematicResultTimeout && (clearTimeout(this.showQuestionProblematicResultTimeout), 
                            this.showQuestionProblematicResultTimeout = void 0), _.includes(result.usedAgents, "PowerBI.AzureOpenAISynonyms") ? [ 4, this.logInterpretCopilotTelemetry() ] : [ 3, 2 ]) : (this.pinnableContentDefinitionUpdated.emit(void 0), 
                            this.viewModel.result = void 0, [ 2 ]);

                          case 1:
                            _d.sent(), _d.label = 2;

                          case 2:
                            return null != result.utterance && this.utteranceUpdated.emit(result.utterance), 
                            this.updateViewport(), 4 === result.resultType && this.setSuggestionsViewModel(), 
                            4 !== result.resultType && 6 !== result.resultType && 0 !== result.resultType && result.doNotShowResult && (this.showQuestionProblematicResultTimeout = setTimeout(function() {
                                var interpretError = result.interpretError;
                                if (interpretError) _this.interpretationError && _this.interpretationError.emit(), 
                                _this.viewModel.result = (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__assign)({
                                    type: "Error"
                                }, _this.getErrorDetailsFromError(interpretError)); else {
                                    var noVisualMessage = _this.localizationService.get("Qna_NoVisual_Message");
                                    _this.viewModel.result = {
                                        type: "DoNotUnderstand",
                                        message: _.isEmpty(result.doNotShowResultCustomMessageKeys) ? noVisualMessage : _.map(result.doNotShowResultCustomMessageKeys, function(key) {
                                            return _this.localizationService.get(key);
                                        }).join("\n\n")
                                    }, _this.screenReaderService.alert(noVisualMessage);
                                }
                            }, 1500)), 4 === result.resultType || 6 === result.resultType || result.doNotShowResult || 2 !== result.resultType || !result.visualContainer && !result.exploration ? (this.pinnableContentDefinitionUpdated.emit(void 0), 
                            this.cancelVisualUpdateAlert(), [ 2 ]) : (this.utteranceRestated && this.utteranceRestated.emit(result.restatement), 
                            _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_16__.fF.assertValue(result.visualContainer || result.exploration, "result should contain either visualContainer or exploration"), 
                            result.visualContainer && (result.visualContainer.name = "qnaVisualContainer"), 
                            restatement = result.restatement, _.startsWith(restatement, "Show ") && (restatement = _.replace(restatement, "Show ", result.visualContainer ? "This visual is showing " : "Showing ")), 
                            modelId = result.modelId, result.visualContainer ? (_powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_16__.fF.assert(function() {
                                var _a;
                                return !!(null === (_a = result.visualContainer.config) || void 0 === _a ? void 0 : _a.singleVisual);
                            }, "single visual is not defined"), this.config.showVisualsAsExploration ? (result.visualContainer.layouts = (0, 
                            _powerbi_legacy_PowerBIVisuals_VisualsCommon_arrayExtensions__WEBPACK_IMPORTED_MODULE_30__.Br)([ {
                                id: 0,
                                position: {
                                    x: 0,
                                    y: 0,
                                    height: this.viewport.height,
                                    width: this.viewport.width
                                }
                            } ]), (vcObjects = null !== (_a = (0, _powerbi_legacy_Explore_util_visualContainerUtils__WEBPACK_IMPORTED_MODULE_31__.PQ)(result.visualContainer).vcObjects) && void 0 !== _a ? _a : {}).title = [ {
                                properties: {
                                    show: (0, _powerbi_legacy_PowerBIVisuals_VisualsData_semanticQuery_sqExpr__WEBPACK_IMPORTED_MODULE_32__.O7)(!1)
                                }
                            } ], result.visualContainer.config.singleVisual.vcObjects = vcObjects, section = {
                                name: "QnaSection",
                                displayName: "QnaSection",
                                size: {
                                    displayOption: 0,
                                    width: this.viewport.width,
                                    height: this.viewport.height
                                },
                                visualContainers: [ result.visualContainer ],
                                visualContainerGroups: [ result.visualContainer ],
                                filters: []
                            }, exploration = {
                                themeCollection: (0, _utils_visual_util__WEBPACK_IMPORTED_MODULE_5__.D4)(this.featureSwitchService),
                                dataSources: this.dataSources.get(),
                                sections: [ section ],
                                settings: {
                                    useNewFilterPaneExperience: !0,
                                    allowChangeFilterTypes: !0
                                }
                            }, this.explorationNavigation.loadExploration(exploration), this.explorationNavigation.goto(section), 
                            this.viewModel.result = {
                                type: "VisualAsExploration",
                                restatement,
                                exploreCanvas: (0, _powerbi_legacy_ExploreUI_viewModels_viewModelFactory__WEBPACK_IMPORTED_MODULE_33__.T8)(exploration, section, 0),
                                modelId
                            }, _powerbi_legacy_Explore_services_selectionUtils__WEBPACK_IMPORTED_MODULE_34__.UP.selectCanvasItem(result.visualContainer, this.selectionService), 
                            this.explorationActivity.sendExplorationContainerReady({
                                parentActivity: void 0
                            })) : (this.viewModel.result = void 0, setTimeout(function() {
                                return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(_this, void 0, void 0, function() {
                                    var selectExprs, _this = this;
                                    return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__generator)(this, function(_a) {
                                        switch (_a.label) {
                                          case 0:
                                            return this.viewModel.result = {
                                                type: "Visual",
                                                restatement,
                                                visual: result.visualContainer,
                                                modelId,
                                                isLoading: !0
                                            }, selectExprs = (0, _powerbi_legacy_Explore_util_visualContainerUtils__WEBPACK_IMPORTED_MODULE_31__.oJ)(result.visualContainer), 
                                            _.isEmpty(selectExprs) ? [ 3, 2 ] : [ 4, this.createSortHelper(result.visualContainer) ];

                                          case 1:
                                            _a.sent(), _a.label = 2;

                                          case 2:
                                            return this.changeDetectorRef.detectChanges(), this.eventBridge.publishToChannel(_powerbi_legacy_Explore_services_events__WEBPACK_IMPORTED_MODULE_11__.jCS, {
                                                affectContainer: function(vc) {
                                                    return vc.name === result.visualContainer.name;
                                                }
                                            }), setTimeout(function() {
                                                return _this.updateViewport();
                                            }), [ 2 ];
                                        }
                                    });
                                });
                            })), clonedVisual = (0, _powerbi_legacy_Explore_contracts_visualContainer2__WEBPACK_IMPORTED_MODULE_35__.d9)(result.visualContainer, this.explorationSerializer), 
                            null != (null === (_c = null === (_b = null == clonedVisual ? void 0 : clonedVisual.config) || void 0 === _b ? void 0 : _b.singleVisual) || void 0 === _c ? void 0 : _c.vcObjects) && (clonedVisual.config.singleVisual.vcObjects = void 0), 
                            this.pinnableContentDefinitionUpdated.emit({
                                pinVisualArgs: {
                                    dataSources: this.dataSources.get(),
                                    filters: this.createVisualContainerFilters(result.visualContainer, result.visualContainer.filters),
                                    modelId,
                                    resourcePackages: void 0,
                                    themeCollection: this.viewModel.themeCollection,
                                    utterance: result.utterance,
                                    visualContainer: clonedVisual
                                }
                            }), this.alertVisualUpdate(this.getCurrentUtteranceTrimmed(), (0, _powerbi_legacy_Explore_util_visualContainerUtils__WEBPACK_IMPORTED_MODULE_23__.s)(result.visualContainer)), 
                            [ 3, 6 ]) : [ 3, 3 ]);

                          case 3:
                            return result.exploration ? (this.updateViewport(), result.exploration.themeCollection ? [ 4, _powerbi_legacy_VisualHostUI_utils_themeUtils__WEBPACK_IMPORTED_MODULE_36__.P.loadThemeAndBaseTheme(this.promiseFactory, this.resourceLoader, this.themeService, result.exploration.resourcePackages, result.exploration.themeCollection) ] : [ 3, 5 ]) : [ 3, 6 ];

                          case 4:
                            _d.sent(), _d.label = 5;

                          case 5:
                            activeSection_1 = (exploration = result.exploration).sections[exploration.activeSectionIndex], 
                            this.explorationNavigation.loadExploration(exploration), this.explorationNavigation.goto(activeSection_1), 
                            this.viewModel.result = {
                                type: "Pod",
                                restatement,
                                exploreCanvas: (0, _powerbi_legacy_ExploreUI_viewModels_viewModelFactory__WEBPACK_IMPORTED_MODULE_33__.T8)(exploration, activeSection_1, 0),
                                modelId
                            }, model = _.find(this.models, function(m) {
                                return m.id === modelId;
                            }), this.pinnableContentDefinitionUpdated.emit({
                                pinReportPageArgs: {
                                    exploration: (0, _powerbi_legacy_ExploreUI_viewModels_viewModelFactory__WEBPACK_IMPORTED_MODULE_33__.vi)(exploration, 0, exploration.activeSectionIndex, void 0, this.localizationService),
                                    section: activeSection_1,
                                    reportId: exploration.reportId,
                                    modelId,
                                    packageId: model && model.packageId,
                                    action: {
                                        action: _powerbi_legacy_PowerBIContracts_constants__WEBPACK_IMPORTED_MODULE_8__.RCq
                                    },
                                    utterance: result.utterance,
                                    pod: _.find(result.exploration.pods, function(p) {
                                        return p.boundSection === activeSection_1.name;
                                    }).name,
                                    filters: activeSection_1.filters
                                }
                            }), this.cancelVisualUpdateAlert(), _d.label = 6;

                          case 6:
                            return [ 2 ];
                        }
                    });
                });
            }, QnaComponentCoreService.prototype.createSortHelper = function(visualContainer) {
                return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function() {
                    var _a;
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return _a = this, [ 4, (0, _utils_visual_util__WEBPACK_IMPORTED_MODULE_5__.Vq)(visualContainer, this.conceptualSchemaProxy, this.dataSources, this.sortService, this.undoRedoService, this.visualAuthoringOpService, this.visualPlugin) ];

                          case 1:
                            return _a.sortHelper = _b.sent(), [ 2 ];
                        }
                    });
                });
            }, QnaComponentCoreService.prototype.createFontProperties = function(objects, objectName, fontComponentName, textClass, defaultSize, isSemibold, colorHelper, style) {
                var properties = objects && objects[objectName], boldPropertyNameValue = "".concat(fontComponentName).concat("Bold"), italicPropertyNameValue = "".concat(fontComponentName).concat("Italic"), underlinePropertyNameValue = "".concat(fontComponentName).concat("Underline"), boldPropValue = (0, 
                _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject3__WEBPACK_IMPORTED_MODULE_37__.N)(properties, boldPropertyNameValue), italicPropValue = (0, 
                _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject3__WEBPACK_IMPORTED_MODULE_37__.N)(properties, italicPropertyNameValue), underlinePropValue = (0, 
                _powerbi_legacy_PowerBIVisuals_VisualsData_dataView_dataViewObject3__WEBPACK_IMPORTED_MODULE_37__.N)(properties, underlinePropertyNameValue), propertyNames = {
                    color: "".concat(fontComponentName).concat("FontColor"),
                    family: "".concat(fontComponentName).concat("FontFamily"),
                    size: "".concat(fontComponentName).concat("FontSize")
                };
                return boldPropValue && (propertyNames.bold = "".concat(fontComponentName).concat("Bold")), 
                italicPropValue && (propertyNames.italic = "".concat(fontComponentName).concat("Italic")), 
                underlinePropValue && (propertyNames.underline = "".concat(fontComponentName).concat("Underline")), 
                (0, _powerbi_legacy_PowerBIVisuals_Visuals_common_fontProperties__WEBPACK_IMPORTED_MODULE_38__.Zi)(objects && objects[objectName], propertyNames, colorHelper, style, "foreground", textClass, {
                    color: presentationDefaults.fontColor,
                    family: isSemibold ? presentationDefaults.semiboldFont : presentationDefaults.regularFont,
                    size: defaultSize,
                    weight: _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_21__.AI,
                    style: _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_21__.AI,
                    textDecoration: _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_21__.zu
                });
            }, QnaComponentCoreService.prototype.createVisualContainerFilters = function(visualContainer, filters) {
                var dataFilters = _.isEmpty(filters) ? [] : _.chain(filters).filter(function(f) {
                    return f.filter;
                }).map(function(f) {
                    return f.filter;
                }).value();
                this.inheritedFilters && this.inheritedFilters.dataFilter && dataFilters.push.apply(dataFilters, _.map(this.inheritedFilters.dataFiltersUnmerged, function(f) {
                    return f.filter;
                }));
                for (var filterBuilder = new _powerbi_legacy_Explore_services_filters_filterBuilder__WEBPACK_IMPORTED_MODULE_39__.ME, _i = 0, dataFilters_1 = dataFilters; _i < dataFilters_1.length; _i++) filterBuilder.addVisualFilter({
                    filter: dataFilters_1[_i]
                });
                var visualType = (0, _powerbi_legacy_Explore_util_visualContainerUtils__WEBPACK_IMPORTED_MODULE_23__.s)(visualContainer), capabilities = visualType && this.visualPlugin.capabilities(visualType), supportsHighlights = capabilities && capabilities.supportsHighlight;
                !supportsHighlights && this.inheritedFilters && this.inheritedFilters.highlightFilter && filterBuilder.addVisualFilter({
                    filter: this.inheritedFilters.highlightFilter
                });
                var newFilters = filterBuilder.getFilters(!1);
                return {
                    dataFilter: newFilters.dataFilter,
                    dataFiltersUnmerged: newFilters.dataFiltersUnmerged,
                    highlightFilter: supportsHighlights && this.inheritedFilters ? this.inheritedFilters.highlightFilter : void 0,
                    highlightFiltersUnmerged: supportsHighlights && this.inheritedFilters ? this.inheritedFilters.highlightFiltersUnmerged : void 0
                };
            }, QnaComponentCoreService.prototype.handleQueryErrors = function(error) {
                if (!error.ignorable) {
                    var details = error.getDetails(this.localizationService), overlayType = (0, _powerbi_legacy_ExploreUI_utils_errorDetailsUtility__WEBPACK_IMPORTED_MODULE_40__.fe)(error.code);
                    this.viewModel.result = {
                        type: "QueryError",
                        visualWithError: this.getCurrentVisual(),
                        details,
                        code: error.code,
                        fixableError: 0,
                        hideSeeDetails: (0, _powerbi_legacy_ExploreUI_utils_errorDetailsUtility__WEBPACK_IMPORTED_MODULE_40__.O6)(error.code),
                        overlayType,
                        requestId: error.requestId,
                        source: details.source || error.source || "PowerBI"
                    }, this.cancelVisualUpdateAlert();
                }
            }, QnaComponentCoreService.prototype.alertVisualUpdate = function(restatement, visualType) {
                if (restatement) {
                    var message = visualType ? this.localizationService.format("Qna_ScreenReader_VisualUpdatedWithChartType", [ restatement, visualType ]) : this.localizationService.format("Qna_ScreenReader_VisualUpdated", [ restatement ]);
                    this.screenReaderService.alertWithDebounce("qna_visual_update", message);
                }
            }, QnaComponentCoreService.prototype.cancelVisualUpdateAlert = function() {
                this.screenReaderService.cancelDebounce("qna_visual_update");
            }, QnaComponentCoreService.prototype.logInterpretCopilotTelemetry = function() {
                var _a;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function() {
                    var interpretCopilotTelemetryPath, isSignedIn, viewMode;
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return interpretCopilotTelemetryPath = null !== (_a = this.qnaProxyPathToken) && void 0 !== _a ? _a : "@powerbi/Qna/qnaweb.module#QnaWebModule", 
                            [ 4, this.ensureInterpretCopilotTelemetry(interpretCopilotTelemetryPath) ];

                          case 1:
                            return _b.sent(), [ 4, this.accountService.isSignedInAsync() ];

                          case 2:
                            return isSignedIn = _b.sent(), viewMode = this.viewModeState.getMode(), this.interpretCopilotTelemetry.logInterpretWithCopilotEvent("@powerbi/Qna/qnaweb.module#QnaWebModule" === this.qnaProxyPathToken ? "service" : "desktop", isSignedIn, viewMode), 
                            [ 2 ];
                        }
                    });
                });
            }, QnaComponentCoreService.prototype.ensureInterpretCopilotTelemetry = function(path) {
                return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__awaiter)(this, void 0, void 0, function() {
                    var _a;
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_6__.__generator)(this, function(_b) {
                        switch (_b.label) {
                          case 0:
                            return null != this.interpretCopilotTelemetry ? [ 2 ] : (_a = this, [ 4, this.lazyProvider.get(path, "interpretCopilotTelemetryService") ]);

                          case 1:
                            return _a.interpretCopilotTelemetry = _b.sent(), [ 2 ];
                        }
                    });
                });
            }, QnaComponentCoreService.prototype.convertRequestScopes = function(scopes) {
                return _.map(scopes, function(scope) {
                    return {
                        model: scope.model,
                        reportIds: scope.reportIds
                    };
                });
            }, QnaComponentCoreService.prototype.buildInputBoxFormattingCard = function(presentationVM) {
                var _this = this, inputBoxProps = _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_qnaVisual_capabilities__WEBPACK_IMPORTED_MODULE_41__.Fp.inputBox, inputBoxCardBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.CQ(new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.lg("inputBox"), "Visual_Qna_QuestionBox", inputBoxProps, function(key) {
                    return _this.localizationService.get(key);
                }), boldPropValue = presentationVM.inputBox.questionFontProperties.weight === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_21__.en, italicPropValue = presentationVM.inputBox.questionFontProperties.style === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_21__.BF, underlinePropValue = presentationVM.inputBox.questionFontProperties.textDecoration === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_21__.f0, fontControl = (new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.UN).withFontFamily({
                    descriptor: inputBoxProps.questionFontFamily,
                    value: presentationVM.inputBox.questionFontProperties.family
                }).withFontSizeProperties({
                    descriptor: inputBoxProps.questionFontSize,
                    value: presentationVM.inputBox.questionFontProperties.size.pt
                }).withBold({
                    descriptor: inputBoxProps.questionBold,
                    value: boldPropValue
                }).withItalic({
                    descriptor: inputBoxProps.questionItalic,
                    value: italicPropValue
                }).withUnderline({
                    descriptor: inputBoxProps.questionUnderline,
                    value: underlinePropValue
                }).build();
                return inputBoxCardBuilder.addGroup("text", function(groupBuilder) {
                    groupBuilder.withDisplayName("Text").addCompositeSlice("fontselector", "Font", fontControl).addSimpleSlice("color", function() {
                        return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.BT({
                            descriptor: inputBoxProps.questionFontColor,
                            value: {
                                value: presentationVM.inputBox.questionFontProperties.color
                            }
                        }).build();
                    }, function(builder) {
                        return builder.withCustomDisplayName("Generic_Color");
                    });
                }), inputBoxCardBuilder.addGroup("background", function(groupBuilder) {
                    groupBuilder.withDisplayName("Visual_Background").addSimpleSlice("defaultColor", function() {
                        return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.BT({
                            descriptor: inputBoxProps.background,
                            value: {
                                value: presentationVM.inputBox.backgroundColor
                            }
                        }).build();
                    }, function(builder) {
                        return builder.withCustomDisplayName("Visual_Qna_QuestionBackgroundColor");
                    }).addSimpleSlice("hoverColor", function() {
                        return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.BT({
                            descriptor: inputBoxProps.hoverColor,
                            value: {
                                value: presentationVM.inputBox.hoverColor
                            }
                        }).build();
                    }, function(builder) {
                        return builder.withCustomDisplayName("Visual_Qna_QuestionBackgroundHoverColor");
                    });
                }), inputBoxCardBuilder.addGroup("underlines", function(groupBuilder) {
                    groupBuilder.withDisplayName("Underline").addSimpleSlice("acceptedColor", function() {
                        return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.BT({
                            descriptor: inputBoxProps.acceptedColor,
                            value: {
                                value: presentationVM.inputBox.acceptedUnderlineColor
                            }
                        }).build();
                    }, function(builder) {
                        return builder.withCustomDisplayName("AcceptedColor");
                    }).addSimpleSlice("errorColor", function() {
                        return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.BT({
                            descriptor: inputBoxProps.errorColor,
                            value: {
                                value: presentationVM.inputBox.errorUnderlineColor
                            }
                        }).build();
                    }, function(builder) {
                        return builder.withCustomDisplayName("Error_Color");
                    }).addSimpleSlice("warningColor", function() {
                        return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.BT({
                            descriptor: inputBoxProps.warningColor,
                            value: {
                                value: presentationVM.inputBox.warningUnderlineColor
                            }
                        }).build();
                    }, function(builder) {
                        return builder.withCustomDisplayName("Warning_TitleColor");
                    });
                }), inputBoxCardBuilder.addGroup("submitButton", function(groupBuilder) {
                    groupBuilder.withDisplayName("Visual_Qna_CommitButtonBackground").addSimpleSlice("submitButtonColor", function() {
                        return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.BT({
                            descriptor: inputBoxProps.commitButtonBackgroundColor,
                            value: {
                                value: presentationVM.inputBox.commitButtonBackgroundColor
                            }
                        }).build();
                    }, function(builder) {
                        return builder.withCustomDisplayName("Background_Color");
                    });
                }), inputBoxCardBuilder.build();
            }, QnaComponentCoreService.prototype.buildRestatementFormattingCard = function(presentationVM) {
                var _this = this, restatementProps = _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_qnaVisual_capabilities__WEBPACK_IMPORTED_MODULE_41__.Fp.inputBox, restatementCardBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.CQ(new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.lg("restatement"), "Visual_Qna_Restatement", restatementProps, function(key) {
                    return _this.localizationService.get(key);
                }), fontControl = (new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.UN).withFontFamily({
                    descriptor: restatementProps.restatementFontFamily,
                    value: presentationVM.inputBox.restatementFontProperties.family
                }).withFontSizeProperties({
                    descriptor: restatementProps.restatementFontSize,
                    value: presentationVM.inputBox.restatementFontProperties.size.pt
                }).build();
                return restatementCardBuilder.addGroup("text", function(groupBuilder) {
                    groupBuilder.addCompositeSlice("fontselector", "Font", fontControl).addSimpleSlice("color", function() {
                        return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.BT({
                            descriptor: restatementProps.restatementFontColor,
                            value: {
                                value: presentationVM.inputBox.restatementFontProperties.color
                            }
                        }).build();
                    }, function(builder) {
                        return builder.withCustomDisplayName("Generic_Color");
                    });
                }), restatementCardBuilder.build();
            }, QnaComponentCoreService.prototype.buildSuggestionsFormattingCard = function(presentationVM) {
                var _this = this, suggestionsProps = _powerbi_legacy_PowerBIVisuals_Visuals_capabilities_qnaVisual_capabilities__WEBPACK_IMPORTED_MODULE_41__.Fp.suggestions, suggestionsCardBuilder = new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.CQ(new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.lg("suggestions"), "Suggestions", suggestionsProps, function(key) {
                    return _this.localizationService.get(key);
                });
                suggestionsCardBuilder.addTopLevelToggle("show", function() {
                    return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.bd({
                        descriptor: suggestionsProps.show,
                        value: presentationVM.suggestions.show
                    }).build();
                });
                var boldPropValue = presentationVM.suggestions.headerFontProperties.weight === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_21__.en, italicPropValue = presentationVM.suggestions.headerFontProperties.style === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_21__.BF, underlinePropValue = presentationVM.suggestions.headerFontProperties.textDecoration === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_21__.f0, fontControl = (new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.UN).withFontFamily({
                    descriptor: suggestionsProps.headerFontFamily,
                    value: presentationVM.suggestions.headerFontProperties.family
                }).withFontSizeProperties({
                    descriptor: suggestionsProps.headerFontSize,
                    value: presentationVM.suggestions.headerFontProperties.size.pt
                }).withBold({
                    descriptor: suggestionsProps.headerBold,
                    value: boldPropValue
                }).withItalic({
                    descriptor: suggestionsProps.headerItalic,
                    value: italicPropValue
                }).withUnderline({
                    descriptor: suggestionsProps.headerUnderline,
                    value: underlinePropValue
                }).build();
                suggestionsCardBuilder.addGroup("header", function(groupBuilder) {
                    groupBuilder.withDisplayName("Visual_Qna_SuggestionsCardHeader").addCompositeSlice("fontselector", "Font", fontControl).addSimpleSlice("color", function() {
                        return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.BT({
                            descriptor: suggestionsProps.headerFontColor,
                            value: {
                                value: presentationVM.suggestions.headerFontProperties.color
                            }
                        }).build();
                    }, function(builder) {
                        return builder.withCustomDisplayName("Generic_Color");
                    });
                }), boldPropValue = presentationVM.suggestions.cardFontProperties.weight === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_21__.en, 
                italicPropValue = presentationVM.suggestions.cardFontProperties.style === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_21__.BF, 
                underlinePropValue = presentationVM.suggestions.cardFontProperties.textDecoration === _powerbi_legacy_PowerBIVisuals_VisualsCommon_CssConstants__WEBPACK_IMPORTED_MODULE_21__.f0;
                var fontSuggestionControl = (new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.UN).withFontFamily({
                    descriptor: suggestionsProps.cardFontFamily,
                    value: presentationVM.suggestions.cardFontProperties.family
                }).withFontSizeProperties({
                    descriptor: suggestionsProps.cardFontSize,
                    value: presentationVM.suggestions.cardFontProperties.size.pt
                }).withBold({
                    descriptor: suggestionsProps.cardBold,
                    value: boldPropValue
                }).withItalic({
                    descriptor: suggestionsProps.cardItalic,
                    value: italicPropValue
                }).withUnderline({
                    descriptor: suggestionsProps.cardUnderline,
                    value: underlinePropValue
                }).build();
                return suggestionsCardBuilder.addGroup("cards", function(groupBuilder) {
                    groupBuilder.withDisplayName("Cards").addCompositeSlice("fontselector", "Font", fontSuggestionControl).addSimpleSlice("text", function() {
                        return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.BT({
                            descriptor: suggestionsProps.cardFontColor,
                            value: {
                                value: presentationVM.suggestions.cardFontProperties.color
                            }
                        }).build();
                    }, function(builder) {
                        return builder.withCustomDisplayName("Text_Color");
                    }).addSimpleSlice("background", function() {
                        return new _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_build_control_util__WEBPACK_IMPORTED_MODULE_22__.BT({
                            descriptor: suggestionsProps.cardBackground,
                            value: {
                                value: presentationVM.suggestions.backgroundColor
                            }
                        }).build();
                    }, function(builder) {
                        return builder.withCustomDisplayName("Background_Color");
                    });
                }), suggestionsCardBuilder.build();
            }, QnaComponentCoreService.\u0275fac = function(t) {
                return new (t || QnaComponentCoreService)(_angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_VisualHostCore__WEBPACK_IMPORTED_MODULE_42__.D), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_angular_core__WEBPACK_IMPORTED_MODULE_3__.ChangeDetectorRef), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_Data__WEBPACK_IMPORTED_MODULE_43__.i), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_ExploreUI__WEBPACK_IMPORTED_MODULE_44__.D), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_UILibrary__WEBPACK_IMPORTED_MODULE_45__.x), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_Explore__WEBPACK_IMPORTED_MODULE_46__.Z), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_ExploreUI__WEBPACK_IMPORTED_MODULE_47__.U), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_ExploreUI__WEBPACK_IMPORTED_MODULE_48__.z), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_Explore__WEBPACK_IMPORTED_MODULE_49__.L), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_ExploreUI__WEBPACK_IMPORTED_MODULE_50__.J), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_FeatureSwitch__WEBPACK_IMPORTED_MODULE_51__.vZ), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_qna_feedback_state_qna_feedback_state_service__WEBPACK_IMPORTED_MODULE_52__.B), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_LazyLoad__WEBPACK_IMPORTED_MODULE_53__.E), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_UILibrary__WEBPACK_IMPORTED_MODULE_54__.f), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_Explore__WEBPACK_IMPORTED_MODULE_55__.v), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_Geocoding__WEBPACK_IMPORTED_MODULE_56__.i), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_Common__WEBPACK_IMPORTED_MODULE_0__._1), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_LazyLoad__WEBPACK_IMPORTED_MODULE_57__.m), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_Localization__WEBPACK_IMPORTED_MODULE_58__.o), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_ErrorService__WEBPACK_IMPORTED_MODULE_59__.T), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_Telemetry__WEBPACK_IMPORTED_MODULE_1__.y0), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_VisualHostCore__WEBPACK_IMPORTED_MODULE_60__.l6), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_A11y__WEBPACK_IMPORTED_MODULE_61__.g), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_interpret_listener_interpret_listener_service__WEBPACK_IMPORTED_MODULE_62__.y), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_Explore__WEBPACK_IMPORTED_MODULE_63__.z), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_Explore__WEBPACK_IMPORTED_MODULE_64__.K), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_Explore__WEBPACK_IMPORTED_MODULE_65__.z), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_ExploreUI__WEBPACK_IMPORTED_MODULE_66__.kc), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_ExploreUI__WEBPACK_IMPORTED_MODULE_67__.Q), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_Explore__WEBPACK_IMPORTED_MODULE_68__.o), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_Geocoding__WEBPACK_IMPORTED_MODULE_69__.A), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_GeocoderIndexedDB__WEBPACK_IMPORTED_MODULE_70__.W), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_InjectionTokens_tooltips_visualHostTooltipServiceFactory__WEBPACK_IMPORTED_MODULE_71__.A), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_InjectionTokens_promiseFactory__WEBPACK_IMPORTED_MODULE_72__.t), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_InjectionTokens_account_service_token__WEBPACK_IMPORTED_MODULE_73__.F), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_InjectionTokens_qnaProxyPath__WEBPACK_IMPORTED_MODULE_74__.n, 8), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_InjectionTokens_qnaModelUtilsPath__WEBPACK_IMPORTED_MODULE_75__.z, 8), _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275inject"](_powerbi_InjectionTokens_qnaLiveConnectService__WEBPACK_IMPORTED_MODULE_76__.U, 8));
            }, QnaComponentCoreService.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_3__["\u0275\u0275defineInjectable"]({
                token: QnaComponentCoreService,
                factory: QnaComponentCoreService.\u0275fac
            }), QnaComponentCoreService;
        }();
        function getContrastForegroundColor(backgroundColor) {
            return (0, _powerbi_legacy_PowerBICommon_utils_colorUtility__WEBPACK_IMPORTED_MODULE_18__.um)(backgroundColor) > .6 ? presentationDefaults.darkFontColor : presentationDefaults.lightFontColor;
        }
    },
    21548: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            B: function() {
                return QnaFeedbackStateService;
            }
        });
        var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(50423), QnaFeedbackStateService = function() {
            function QnaFeedbackStateService() {
                this.states = {};
            }
            return QnaFeedbackStateService.prototype.updateState = function(utterance, state) {
                this.states[utterance.toLocaleLowerCase()] = state;
            }, QnaFeedbackStateService.prototype.getState = function(utterance) {
                var _a;
                return null !== (_a = this.states[utterance.toLocaleLowerCase()]) && void 0 !== _a ? _a : "Unchosen";
            }, QnaFeedbackStateService.\u0275prov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275defineInjectable"]({
                token: QnaFeedbackStateService,
                factory: QnaFeedbackStateService.\u0275fac = function(t) {
                    return new (t || QnaFeedbackStateService);
                },
                providedIn: "root"
            }), QnaFeedbackStateService;
        }();
    },
    5894: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            Nt: function() {
                return ImproveLsdlRequestEventName;
            },
            WW: function() {
                return QnaVisualSuggestionCardClicked;
            },
            dN: function() {
                return QnaVisualVisualConverted;
            },
            eV: function() {
                return QnAUpdateLsdlSharingPermission;
            },
            v5: function() {
                return QnAFeedback;
            },
            yP: function() {
                return QnAINAQ;
            },
            yp: function() {
                return ImproveLsdlRequestEvent;
            }
        });
        var _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(41114), QnaVisualSuggestionCardClicked = _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.cx["PBI.QnaVisual.SuggestionCardClicked"] = (0, 
        _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.b1)("PBI.QnaVisual.SuggestionCardClicked"), QnaVisualVisualConverted = _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.cx["PBI.QnaVisual.VisualConverted"] = (0, 
        _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.b1)("PBI.QnaVisual.VisualConverted"), QnAINAQ = _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.cx["PBI.QnA.INAQ"] = (0, 
        _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.b1)("PBI.QnA.INAQ", {
            logExpAssignment: !0
        }), QnAFeedback = _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.cx["PBI.QnA.Feedback"] = (0, 
        _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.b1)("PBI.QnA.Feedback"), QnAUpdateLsdlSharingPermission = _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.cx["PBI.QnA.UpdateLsdlSharingPermission"] = (0, 
        _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.b1)("PBI.QnA.UpdateLsdlSharingPermission"), ImproveLsdlRequestEventName = "PBI.QnaTooling.ImproveLsdlRequest", ImproveLsdlRequestEvent = _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.cx[ImproveLsdlRequestEventName] = (0, 
        _powerbi_legacy_JsCommon_telemetry_powerbi_telemetryHelpers__WEBPACK_IMPORTED_MODULE_0__.b1)(ImproveLsdlRequestEventName);
    },
    34100: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            J8: function() {
                return isFuzzyMatchingFeatureEnabled;
            },
            J_: function() {
                return isCopilotImprovelLsdlAgent;
            },
            NP: function() {
                return checkBaseSupportability;
            }
        });
        var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(81337), _qna_supportability_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(91592);
        function checkBaseSupportability(conceptualSchemaProxy, dataSourcesService, explorationCapabilitiesService, qnaSupportabilityService, lsdl) {
            var _a;
            return (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__awaiter)(this, void 0, void 0, function() {
                var schema, capabilities;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__generator)(this, function(_b) {
                    switch (_b.label) {
                      case 0:
                        return [ 4, conceptualSchemaProxy.get(dataSourcesService.get()) ];

                      case 1:
                        return schema = _b.sent(), capabilities = explorationCapabilitiesService.getCapabilities(), 
                        (0, _qna_supportability_util__WEBPACK_IMPORTED_MODULE_1__.H)(capabilities, schema, qnaSupportabilityService).isAllowed && qnaSupportabilityService.allowsLinguisticSchemaEdit() && "None" !== (null === (_a = lsdl.DynamicImprovement) || void 0 === _a ? void 0 : _a.Schema) ? [ 2, !0 ] : [ 2, !1 ];
                    }
                });
            });
        }
        function isCopilotImprovelLsdlAgent(agents) {
            return _.includes(agents, "PowerBI.AzureOpenAISynonyms") || _.includes(agents, "PowerBI.AzureOpenAIPhrasings");
        }
        function isFuzzyMatchingFeatureEnabled(featureSwitches) {
            return featureSwitches.qnaImproveLsdlCopilot && featureSwitches.qnaSupportCommitQuestionOnDemandForAll && featureSwitches.qnaFuzzyMatch;
        }
    },
    87974: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            U: function() {
                return shouldCommitQuestionOnDemand;
            }
        });
        var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(81337);
        function shouldCommitQuestionOnDemand(modelsInfo, qnaModelUtils, featureSwitchService) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__awaiter)(this, void 0, void 0, function() {
                var _i, _a;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__generator)(this, function(_b) {
                    switch (_b.label) {
                      case 0:
                        if (featureSwitchService.featureSwitches.qnaSupportCommitQuestionOnDemandForAll) return [ 2, !0 ];
                        _i = 0, _a = null != modelsInfo ? modelsInfo : [], _b.label = 1;

                      case 1:
                        return _i < _a.length ? [ 4, qnaModelUtils.isDQOrLiveConnectToOnPrem(_a[_i]) ] : [ 3, 4 ];

                      case 2:
                        if (_b.sent()) return [ 2, !0 ];
                        _b.label = 3;

                      case 3:
                        return _i++, [ 3, 1 ];

                      case 4:
                        return [ 2, !1 ];
                    }
                });
            });
        }
    },
    91592: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            H: function() {
                return getIsQnaAllowedInfo;
            }
        });
        var _powerbi_legacy_JsCommon_Utility_BrowserUtility__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(16808);
        function getIsQnaAllowedInfo(explorationCapabilities, modelSchema, qnaSupportabilityService) {
            return (0, _powerbi_legacy_JsCommon_Utility_BrowserUtility__WEBPACK_IMPORTED_MODULE_0__.rO)() ? {
                isAllowed: !1,
                disallowedReason: "featureDisabledInIE"
            } : qnaSupportabilityService.appShouldHideQnaFeature() ? {
                isAllowed: !1,
                disallowedReason: "featureDisabledInApp"
            } : _.some(null == modelSchema ? void 0 : modelSchema.schemas, function(schema) {
                return !schema.isExtensionSchema && !_.isEmpty(schema.entities);
            }) ? qnaSupportabilityService.modelSupportsQna(modelSchema, explorationCapabilities) ? qnaSupportabilityService.modelHasQnaEnabled(modelSchema, explorationCapabilities) ? {
                isAllowed: !0
            } : {
                isAllowed: !1,
                disallowedReason: "qnaNotEnabled"
            } : {
                isAllowed: !1,
                disallowedReason: "qnaNotSupported"
            } : {
                isAllowed: !1,
                disallowedReason: "noModel"
            };
        }
    },
    74857: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            D4: function() {
                return getBaseThemeCollection;
            },
            ET: function() {
                return getQnaNotAllowedInIEError;
            },
            Kt: function() {
                return getVisualTitle;
            },
            Nj: function() {
                return qnaQueryMetadataToQueryMetadata;
            },
            Su: function() {
                return getThemeCollection;
            },
            Vq: function() {
                return getInterpretResultVisualSortHelper;
            },
            aZ: function() {
                return showVisualErrorDetails;
            },
            fI: function() {
                return customSortInterpretResultVisual;
            },
            y_: function() {
                return getInterpretResultVisual;
            }
        });
        var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(81337), _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(62458), _powerbi_legacy_Explore_util_themeUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(38701), _powerbi_legacy_Explore_util_visualContainerUtils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(60661), _powerbi_legacy_ExploreUI_utils_errorDetailsUtility__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(18503), _powerbi_legacy_PowerBIVisuals_VisualsCommon_tracing_traceType__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(50547), _powerbi_ExploreUI__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(2240);
        function getQnaNotAllowedInIEError(localizationService) {
            return {
                code: "qnaNotAllowedInIE",
                fixableError: 0,
                hideSeeDetails: !0,
                details: {
                    message: localizationService.get("Qna_NotSupportedInIE"),
                    displayableErrorInfo: void 0
                },
                source: "User"
            };
        }
        function qnaQueryMetadataToQueryMetadata(qnaQueryMetadata) {
            if (qnaQueryMetadata) return {
                Filters: _.map(qnaQueryMetadata.filters, function(f) {
                    return {
                        Restatement: f.Restatement,
                        type: void 0
                    };
                }),
                Select: _.map(qnaQueryMetadata.selects, function(s) {
                    return {
                        Restatement: s.restatement
                    };
                })
            };
        }
        function showVisualErrorDetails(error, errorService, localizationService) {
            _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(error, "Expect this to be called only when the given error is defined.");
            var errorDetails = error.details;
            if (errorDetails) {
                var hasAddtionalErrorInfo = (0, _powerbi_legacy_ExploreUI_utils_errorDetailsUtility__WEBPACK_IMPORTED_MODULE_1__.jx)(errorDetails), title = localizationService.get("ServiceError_CannotLoadVisual"), message = errorDetails.message, additionalErrors = [];
                if (hasAddtionalErrorInfo && (title = errorDetails.displayableErrorInfo[0].errorInfoKey, 
                message = errorDetails.displayableErrorInfo[0].errorInfoValue, errorDetails.displayableErrorInfo.length > 1)) for (var i = 1; i < errorDetails.displayableErrorInfo.length; i++) additionalErrors.push(errorDetails.displayableErrorInfo[i]);
                _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assert(function() {
                    return null != error.source;
                }, "Expect error.source is not null."), errorService.error(message, error.code, {
                    debugErrorInfo: errorDetails.debugErrorInfo,
                    displayableErrorInfo: additionalErrors,
                    title,
                    source: error.source,
                    level: _powerbi_legacy_PowerBIVisuals_VisualsCommon_tracing_traceType__WEBPACK_IMPORTED_MODULE_2__.U.Error
                });
            }
        }
        function getThemeCollection(explorationNavigation, featureSwitchService) {
            var currentExploration = explorationNavigation.getCurrentExploration(), themeCollection = null == currentExploration ? void 0 : currentExploration.themeCollection;
            return _.isEmpty(themeCollection) ? getBaseThemeCollection(featureSwitchService) : themeCollection;
        }
        function getBaseThemeCollection(featureSwitchService) {
            return {
                baseTheme: (0, _powerbi_legacy_Explore_util_themeUtils__WEBPACK_IMPORTED_MODULE_3__.DC)(featureSwitchService)
            };
        }
        function getInterpretResultVisual(interpretResult, conceptualSchemaProxy, dataSourcesService, visualRecommendationService) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(this, void 0, void 0, function() {
                var command, query, selects, queryMetadata, exprMetadata, filterMetadata, schema, result;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function(_a) {
                    switch (_a.label) {
                      case 0:
                        return (query = null == (command = null == interpretResult ? void 0 : interpretResult.command) ? void 0 : command.query) ? (selects = query.select(), 
                        queryMetadata = command.queryMetadata, exprMetadata = _.map(null == queryMetadata ? void 0 : queryMetadata.selects, function(selectMetadata, index) {
                            return {
                                expression: selects[index].expr,
                                type: selectMetadata.type,
                                isGroup: selectMetadata.isGroup,
                                defaultLabel: selectMetadata.defaultLabel,
                                isExplicitSortBy: selectMetadata.isExplicitSortBy
                            };
                        }), filterMetadata = null == queryMetadata ? void 0 : queryMetadata.filters, [ 4, conceptualSchemaProxy.get(dataSourcesService.get()) ]) : [ 2 ];

                      case 1:
                        return schema = _a.sent(), (result = visualRecommendationService.recommendVisuals(query, schema, {
                            numberOfResults: 1,
                            visualType: _.first(command.suggestedVisualTypes),
                            filterMetadata,
                            exprMetadata,
                            addDefaultFormatting: !0,
                            allowTooltipMeasures: !0
                        })) ? (_powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assert(function() {
                            return 1 === _.size(result.visualContainers);
                        }, "Expected 1 result"), [ 2, result.visualContainers[0] ]) : [ 2 ];
                    }
                });
            });
        }
        function getVisualTitle(visualContainer, conceptualSchemaProxy, dataSourcesService, displayNameService, visualPlugin, forceGenerateTitle, displayIndividualValuesLimit) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(this, void 0, void 0, function() {
                var schema, singleVisualConfig, displayNameOptions;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function(_a) {
                    switch (_a.label) {
                      case 0:
                        return [ 4, conceptualSchemaProxy.get(dataSourcesService.get()) ];

                      case 1:
                        return schema = _a.sent(), singleVisualConfig = (0, _powerbi_legacy_Explore_util_visualContainerUtils__WEBPACK_IMPORTED_MODULE_5__.PQ)(visualContainer), 
                        displayNameOptions = {
                            multiAndLastValueConnectorSpecialResourceKey: "AndConjunction_MultiItemsAndOne",
                            displayIndividualValuesLimitSetting: null != displayIndividualValuesLimit ? {
                                limit: displayIndividualValuesLimit,
                                limitedValueShownResourceKey: "AndOthers_SingleItem",
                                multiLimitedValuesShownResourceKey: "AndOthers_MultipleItem"
                            } : void 0
                        }, [ 2, displayNameService.getVisualTitle(singleVisualConfig, schema, visualPlugin.capabilities(singleVisualConfig.visualType), void 0, displayNameOptions, forceGenerateTitle) ];
                    }
                });
            });
        }
        function getInterpretResultVisualSortHelper(visualContainer, conceptualSchemaProxy, dataSourcesService, sortService, undoRedoService, visualAuthoringOpService, visualPlugin) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(this, void 0, void 0, function() {
                var sortableFieldsResult, sortSetting;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function(_a) {
                    switch (_a.label) {
                      case 0:
                        return [ 4, getSortableFields(visualContainer, conceptualSchemaProxy, dataSourcesService, sortService) ];

                      case 1:
                        return sortableFieldsResult = _a.sent(), sortSetting = {
                            defaultSortBehavior: getDefaultSortBehavior(visualContainer, visualPlugin),
                            sortableFields: null == sortableFieldsResult ? void 0 : sortableFieldsResult.sortableFields,
                            sortGroups: null == sortableFieldsResult ? void 0 : sortableFieldsResult.sortGroups
                        }, [ 2, new _powerbi_ExploreUI__WEBPACK_IMPORTED_MODULE_6__.B(sortSetting, visualContainer, sortService, undoRedoService, visualAuthoringOpService) ];
                    }
                });
            });
        }
        function customSortInterpretResultVisual(visualContainer, sortHelper, sortDescriptors) {
            if (!_.isEmpty(sortDescriptors)) {
                var selectExprs = (0, _powerbi_legacy_Explore_util_visualContainerUtils__WEBPACK_IMPORTED_MODULE_5__.oJ)(visualContainer);
                _.isEmpty(selectExprs) || sortHelper.applySortByFields(sortDescriptors);
            }
        }
        function getDefaultSortBehavior(visualContainer, visualPlugin) {
            var _a, visualCapabilities = (0, _powerbi_legacy_Explore_util_visualContainerUtils__WEBPACK_IMPORTED_MODULE_5__.cj)(visualContainer, visualPlugin);
            return !!visualCapabilities && !!(null === (_a = visualCapabilities.sorting) || void 0 === _a ? void 0 : _a.default);
        }
        function getSortableFields(visualContainer, conceptualSchemaProxy, dataSourcesService, sortService) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(this, void 0, void 0, function() {
                var dataSourcesArray, singleVisualConfig, query, schema;
                return (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function(_b) {
                    switch (_b.label) {
                      case 0:
                        if (!(dataSourcesArray = dataSourcesService.get())) return [ 2 ];
                        _b.label = 1;

                      case 1:
                        return _b.trys.push([ 1, 3, , 4 ]), singleVisualConfig = (0, _powerbi_legacy_Explore_util_visualContainerUtils__WEBPACK_IMPORTED_MODULE_5__.PQ)(visualContainer), 
                        query = (0, _powerbi_legacy_Explore_util_visualContainerUtils__WEBPACK_IMPORTED_MODULE_5__.Xf)(visualContainer), 
                        [ 4, conceptualSchemaProxy.get(dataSourcesArray) ];

                      case 2:
                        return schema = _b.sent(), [ 2, sortService.getSortableFields({
                            query,
                            schema,
                            visualType: singleVisualConfig.visualType,
                            columnProperties: singleVisualConfig.columnProperties,
                            compiledMappings: []
                        }) ];

                      case 3:
                        return _b.sent(), [ 3, 4 ];

                      case 4:
                        return [ 2 ];
                    }
                });
            });
        }
    },
    35988: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            AU: function() {
                return getUserErrorMessage;
            },
            B4: function() {
                return wireV3ResponseToClientSuggestedQuestionsResponse;
            },
            C2: function() {
                return clientToWireModelScopes;
            },
            Cb: function() {
                return wireV3ResponseToClientProbeResponse;
            },
            Fm: function() {
                return getRetriableClientWarningDesktop;
            },
            NG: function() {
                return clientToWireInterpretRequestDesktop;
            },
            R1: function() {
                return wireV3ResponseToClientInterpretResponse;
            },
            Tm: function() {
                return getUserWarningMessageKeys;
            },
            hj: function() {
                return hostServiceErrorCodeToQnaErrorCode;
            },
            qV: function() {
                return getRetriableClientWarningDesktopToWeb;
            },
            tc: function() {
                return clientToWireInterpretRequestDesktopToWeb;
            },
            vr: function() {
                return getQueryUnSupportedLevelWarningsInfo;
            }
        });
        var _a, _b, _c, _d, _e, _f, _powerbi_Insights__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(70940), _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(3468), _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(62458), _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_StandaloneUtility3__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(43286), _powerbi_legacy_PowerBIVisuals_VisualsData_types_valueType__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(80777), interpretDiagnosticCodeToInterpretWarningMappings = ((_a = {}).GeneratedLinguisticSchema = 0, 
        _a.DataIndexBuildingCancelled = 16, _a.DataIndexMissingStatistics = 17, _a.DataIndexNotReady = 8, 
        _a.DataIndexSizeLimitReached = 15, _a.DataIndexUpdateFailure = 10, _a.DomainModelNotReady = 2, 
        _a.DomainModelPartialLoad = 3, _a.DomainModelUpdateFailure = 9, _a.EmptyLinguisticSchema = 1, 
        _a.InterpretationSemanticError = 4, _a.InterpretationSemanticWarning = 5, _a.InterpretCancelled = 18, 
        _a.InvalidTextualEntity = 6, _a.LinguisticSchemaTruncated = 14, _a.MissingOrInvalidPodParameters = 13, 
        _a.QueryAggregateNotSupported = 19, _a.QueryMedianNotSupported = 20, _a.QueryPercentileNotSupported = 21, 
        _a.QueryScopedEvalNotSupported = 22, _a.QuerySubqueryRegroupingNotSupported = 23, 
        _a.StaleDataIndex = 12, _a.StaleDomainModel = 11, _a.RequiresNewerVersion = 7, _a.DataIndexVersionIsOld = 24, 
        _a.QueryGroupByTableNotSupported = 25, _a.QueryNotSupported = 26, _a.NextBestInterpretation = 27, 
        _a), interpretDiagnosticCodeToQnaErrorCodeMappings = ((_b = {}).ActivationFailure = "ActivationFailure", 
        _b.CloudRlsModelAccessDenied = "CloudRlsModelAccessDenied", _b.DataIndexBuildFailure = "DataIndexBuildFailure", 
        _b.DomainModelLoadFailure = "DomainModelLoadFailure", _b.ExternalModelAccessDenied = "ExternalModelAccessDenied", 
        _b.GenericRequestFailure = "GenericRequestFailure", _b.LinguisticSchemaLoadFailure = "LinguisticSchemaLoadFailure", 
        _b.ModelNotFound = "ModelNotFound", _b.ModelQnaNotEnabled = "ModelQnaNotEnabled", 
        _b.ModelQnaNotSupported = "ModelQnaNotSupported", _b.RequiresNewerVersion = "RequiresNewerVersion", 
        _b.SchemaLanguageNotSupported = "SchemaLanguageNotSupported", _b.MissingRuntimeModule = "MissingRuntimeModule", 
        _b.VerifyRuntimeFailure = "VerifyRuntimeFailure", _b.DataIndexMissingAllStatistics = "DataIndexMissingAllStatistics", 
        _b), hostSpecificInterpretWarningToUserMessageKeyMappings_Desktop = ((_c = {})[16] = "Qna_Warning_DataIndexIncomplete_Desktop", 
        _c[15] = "Qna_Warning_DataIndexIncomplete_Desktop", _c[14] = "Qna_Warning_LinguisticSchemaTruncated_Desktop", 
        _c), hostSpecificInterpretWarningToUserMessageKeyMappings_Service = ((_d = {})[16] = "Qna_Warning_DataIndexIncomplete_Service", 
        _d[15] = "Qna_Warning_DataIndexIncomplete_Service", _d[14] = "Qna_Warning_LinguisticSchemaTruncated_Service", 
        _d), retriableClientWarnings_Desktop = [ 2, 8, 11, 12, 24 ], retriableClientWarnings_Service = [ 2, 8 ], interpretWarningToUserMessageKeyMappings = ((_e = {})[1] = "Qna_NotAllowedForReport_WithoutModel", 
        _e[2] = "Qna_Explore_WarningBuildingLanguageModel", _e[7] = "Qna_Warning_RequiresNewerVersion", 
        _e[8] = "Qna_Explore_WarningIndexing", _e[9] = "Qna_Warning_ModelUpdateFailure", 
        _e[10] = "Qna_Warning_DataIndexUpdateFailure", _e[11] = "Qna_Warning_StaleModel", 
        _e[12] = "Qna_Warning_StaleIndex", _e[17] = "Qna_Warning_DataIndexMissingStatistics", 
        _e[19] = "Qna_Warning_UnsupportedFunction", _e[20] = "Qna_Warning_UnsupportedFunction", 
        _e[21] = "Qna_Warning_UnsupportedFunction", _e[22] = "Qna_Warning_UnsupportedFunction", 
        _e[23] = "Qna_Warning_UnsupportedFunction", _e[25] = "Qna_Warning_QueryGroupByTableNotSupported", 
        _e[26] = "Qna_Warning_QueryNotSupported", _e[27] = "Qna_Warning_NextBestInterpretation", 
        _e), qnaErrorCodeToUserMessageKeyMappings = ((_f = {}).FeatureNotAvailable = "Qna_Error_GenericRequestFailure", 
        _f.NetworkConnectionIssue = "Qna_Error_NetworkIssue", _f.RequiresNewerVersion = "Qna_Error_RequiresNewerVersion", 
        _f.ModelNotFound = "Qna_Error_ModelNotFound", _f.ModelQnaNotEnabled = "Qna_Error_ModelQnaNotEnabled", 
        _f.ModelQnaNotSupported = "Qna_Error_ModelQnaNotSupported", _f.MissingRuntimeModule = "Qna_Explore_MissingBinaries", 
        _f.VerifyRuntimeFailure = "Qna_Explore_MissingBinaries", _f.SchemaLanguageNotSupported = "Qna_NotAllowedForReport_QnaNotSupported", 
        _f.SessionIsInactive = "Qna_Error_GenericRequestFailure", _f.GenericRequestFailure = "Qna_Error_GenericRequestFailure", 
        _f.DataIndexBuildFailure = "Qna_Explore_WarningFailedIndexing", _f.CloudRlsModelAccessDenied = "Tile_RLS_NoAccess", 
        _f.ExternalModelAccessDenied = "Qna_Explore_ModelAccessDenied_WithoutSpecifyOwner", 
        _f.DataIndexMissingAllStatistics = "Qna_Error_DataIndexMissingAllStatistics", _f), queryUnSupportedLevelWarnings = [ 19, 20, 22, 21, 23, 25, 26 ];
        function wireV3ResponseToClientSuggestedQuestionsResponse(wireV3Response) {
            _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(wireV3Response, "Expect the given wireV3Response to be defined");
            var clientError = getClientErrorFromWireV3Response(wireV3Response);
            if (clientError) return {
                error: clientError
            };
            var wireResult = _.first(wireV3Response.Results), interpretation = _.first(null == wireResult ? void 0 : wireResult.Interpretations);
            return {
                result: {
                    utterances: _.map(null == interpretation ? void 0 : interpretation.SuggestedUtterances, function(utterance) {
                        return {
                            text: utterance.Text,
                            source: utterance.Source
                        };
                    }),
                    warnings: wireV3InterpretDiagnosticMessageToClientWarnings(null == wireResult ? void 0 : wireResult.DiagnosticMessages)
                }
            };
        }
        function wireV3ResponseToClientInterpretResponse(utterance, desiredInterpretationsCount, requestId, wireV3Response) {
            _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(wireV3Response, "Expect the given wireV3Response to be defined");
            var clientResult, warnings, clientError = getClientErrorFromWireV3Response(wireV3Response);
            if (!clientError) {
                var firstWireResult_1 = _.first(wireV3Response.Results);
                warnings = wireV3InterpretDiagnosticMessageToClientWarnings(null == firstWireResult_1 ? void 0 : firstWireResult_1.DiagnosticMessages);
                var interpretations = _.take(null == firstWireResult_1 ? void 0 : firstWireResult_1.Interpretations, null != desiredInterpretationsCount ? desiredInterpretationsCount : 1);
                _.isEmpty(interpretations) || (clientResult = _.map(interpretations, function(interpretation) {
                    var _a, _b, _c;
                    return {
                        restatement: interpretation.Restatement,
                        databaseName: null === (_a = firstWireResult_1.Context) || void 0 === _a ? void 0 : _a.DatabaseName,
                        virtualServerName: null === (_b = firstWireResult_1.Context) || void 0 === _b ? void 0 : _b.VirtualServerName,
                        command: wireToClientCommand(interpretation.Command),
                        correctionInfo: generateUtteranceCorrectionInfo(interpretation),
                        spans: wireToClientSpanCollection(utterance, interpretation.Spans),
                        language: firstWireResult_1.Language,
                        modelLanguage: firstWireResult_1.ModelLanguage,
                        modelOwner: null === (_c = firstWireResult_1.Context) || void 0 === _c ? void 0 : _c.ModelOwner,
                        usedAgents: _.map(interpretation.UsedAgents, function(a) {
                            return a;
                        }),
                        score: interpretation.Score,
                        relevantSchemaElements: convertWireSchemaElementsToClientSchemaElements(firstWireResult_1.RelevantSchemaElements)
                    };
                }));
            }
            return {
                utterance,
                requestId,
                error: clientError,
                results: clientResult,
                warnings
            };
        }
        function convertWireSchemaElementsToClientSchemaElements(wireSchemaElements) {
            if (null != wireSchemaElements && (null != wireSchemaElements.Entities || null != wireSchemaElements.Relationships)) {
                var converter = function(wire) {
                    return {
                        description: wire.Description,
                        score: wire.Score
                    };
                };
                return {
                    entities: _.map(wireSchemaElements.Entities, converter),
                    relationships: _.map(wireSchemaElements.Relationships, converter)
                };
            }
        }
        function wireV3ResponseToClientProbeResponse(wireV3Response) {
            _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(wireV3Response, "Expect the given wireV3Response to be defined");
            var clientError = getClientErrorFromWireV3Response(wireV3Response);
            if (clientError) return {
                error: clientError
            };
            var firstWireResult = _.first(wireV3Response.Results);
            return {
                results: _.map(null == firstWireResult ? void 0 : firstWireResult.Interpretations, function(_interpretation) {
                    return {
                        language: firstWireResult.Language
                    };
                })
            };
        }
        function getWireV3ResponseClientWarnings(wireV3Response) {
            _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(wireV3Response, "Expect the given wireV3Response to be defined");
            var firstWireResult = _.first(wireV3Response.Results);
            return wireV3InterpretDiagnosticMessageToClientWarnings(null == firstWireResult ? void 0 : firstWireResult.DiagnosticMessages);
        }
        function getRetriableClientWarningDesktop(wireResponse) {
            _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(wireResponse, "Expect the given wireResponse to be defined");
            var warnings = getWireV3ResponseClientWarnings(wireResponse);
            return _.find(retriableClientWarnings_Desktop, function(retryClientWarning) {
                return _.includes(warnings, retryClientWarning);
            });
        }
        function getRetriableClientWarningDesktopToWeb(wireResponse) {
            return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(wireResponse, "Expect the given wireResponse to be defined"), 
            function(wireResponse) {
                _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(wireResponse, "Expect the given wireResponse to be defined");
                var warnings = getWireV3ResponseClientWarnings(wireResponse);
                return _.find(retriableClientWarnings_Service, function(retryClientWarning) {
                    return _.includes(warnings, retryClientWarning);
                });
            }(wireResponse);
        }
        function wireToClientSpanCollection(utterance, wireSpans) {
            if (_powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(utterance, "utterance"), 
            _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertAnyValue(wireSpans, "wireSpans"), 
            wireSpans) {
                _.isEmpty(utterance) && _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assert(function() {
                    return _.every(wireSpans, function(wireSpan) {
                        return 0 === wireSpan.Length;
                    });
                }, "utterance is empty, every span should have zero length");
                var baseSpans = [], overlapSpans = [];
                return _.forEach(wireSpans, function(wireSpan) {
                    5 !== wireSpan.Resolution || wireSpan.Binding ? baseSpans.push(new SpanInternal(utterance, wireSpan, !1)) : overlapSpans.push(new SpanInternal(utterance, wireSpan, !0));
                }), _.isEmpty(overlapSpans) || _.forEach(overlapSpans, function(overlapSpan) {
                    _.forEach(baseSpans, function(baseSpan) {
                        if (function(span, overlapSpan) {
                            return overlapSpan.startIndex <= span.startIndex && overlapSpan.endExcludingIndex > span.startIndex || overlapSpan.startIndex < span.endExcludingIndex && overlapSpan.endExcludingIndex > span.endExcludingIndex || span.startIndex <= overlapSpan.startIndex && span.endExcludingIndex >= overlapSpan.endExcludingIndex || overlapSpan.startIndex <= span.startIndex && overlapSpan.endExcludingIndex >= span.endExcludingIndex;
                        }(baseSpan, overlapSpan)) baseSpan.overlapSpans.push(overlapSpan); else if (overlapSpan.endExcludingIndex < baseSpan.startIndex) return;
                    });
                }), baseSpans;
            }
        }
        function hostServiceErrorCodeToQnaErrorCode(errorCode) {
            return "BadGateway" === errorCode || "ConnectFailure" === errorCode || "ConnectionClosed" === errorCode || "GatewayTimeout" === errorCode || "KeepAliveFailure" === errorCode || "NameResolutionFailure" === errorCode || "NetworkUnavailable" === errorCode || "ProxyAuthenticationRequired" === errorCode || "ProxyNameResolutionFailure" === errorCode || "RequestTimeout" === errorCode || "ServiceUnvailable" === errorCode || "Timeout" === errorCode || "AccessDenied" === errorCode ? "NetworkConnectionIssue" : "FeatureNotAvailableError" === errorCode ? "FeatureNotAvailable" : "GenericRequestFailure";
        }
        function clientToWireInterpretRequestDesktop(request) {
            var clientContract, wireRequest = clientToWireInterpretRequestCommon(request);
            return request && (wireRequest.Context = {
                ReportMetadata: (clientContract = request.reportMetadata, clientContract ? {
                    LinguisticSchema: clientContract.linguisticSchema,
                    Pods: _.map(clientContract.pods, function(p) {
                        return {
                            Name: p.name,
                            CortanaEnabled: p.cortanaEnabled,
                            Parameters: _.map(p.parameters, function(param) {
                                return {
                                    Name: param.name,
                                    TargetColumn: param.targetColumn,
                                    TargetEntity: param.targetEntity
                                };
                            })
                        };
                    })
                } : void 0)
            }), wireRequest;
        }
        function clientToWireInterpretRequestDesktopToWeb(request, virtualServerName, databaseName) {
            var feedback, wireRequest = clientToWireInterpretRequestCommon(request);
            return wireRequest.Context = {
                ModelScopes: [ {
                    VirtualServerName: virtualServerName,
                    DatabaseName: databaseName
                } ],
                Tags: null == request ? void 0 : request.tags,
                ImpersonatedUserPrincipalName: null == request ? void 0 : request.impersonatedUserPrincipalName,
                ImpersonatedRoles: null == request ? void 0 : request.impersonatedRoles,
                Feedback: (feedback = null == request ? void 0 : request.feedback, feedback ? {
                    Sentiment: feedback.sentiment,
                    Reason: feedback.reason,
                    Comment: feedback.comment
                } : void 0)
            }, wireRequest.Options || (wireRequest.Options = {}), wireRequest;
        }
        function clientToWireInterpretRequestCommon(request) {
            return request ? {
                Version: "3.3.0",
                Utterance: request.utterance,
                Spans: _.map(request.spans, function(span) {
                    var wireSpan = {
                        StartIndex: span.startIndex,
                        Length: span.endExcludingIndex - span.startIndex
                    };
                    return span.inferredTerm && (wireSpan.Binding = {
                        InferredTerm: clientToWireInferredTermBinding(span.inferredTerm)
                    }), wireSpan;
                }),
                Options: clientToWireInterpretRequestOptions(request),
                LinguisticSchemaJson: request.linguisticSchemaJson,
                InferredTermBinding: clientToWireInferredTermBinding(request.inferredTermBinding),
                Intent: clientToWireIntent(request.intent),
                IsCommitted: request.isCommitted,
                DesiredInterpretationsCount: request.desiredInterpretationsCount,
                GroupId: request.groupId,
                GroupSequenceNumber: request.groupSequenceNumber
            } : {
                Version: "3.3.0",
                Utterance: ""
            };
        }
        function clientToWireIntent(intentContainer) {
            if (null == intentContainer ? void 0 : intentContainer.defineCalculation) return {
                DefineCalculation: {
                    Language: intentContainer.defineCalculation.language,
                    Options: intentContainer.defineCalculation.options
                }
            };
        }
        function clientToWireInterpretRequestOptions(request) {
            return null == (null == request ? void 0 : request.options) ? {} : {
                QueryMetadata: (0, _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_StandaloneUtility3__WEBPACK_IMPORTED_MODULE_1__.yE)(request.options, 2),
                VisualConfiguration: (0, _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_StandaloneUtility3__WEBPACK_IMPORTED_MODULE_1__.yE)(request.options, 4),
                SupportPodQueries: (0, _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_StandaloneUtility3__WEBPACK_IMPORTED_MODULE_1__.yE)(request.options, 8),
                IncludeRelevantSchemaElements: (0, _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_StandaloneUtility3__WEBPACK_IMPORTED_MODULE_1__.yE)(request.options, 32),
                Spans: (0, _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_StandaloneUtility3__WEBPACK_IMPORTED_MODULE_1__.yE)(request.options, 64),
                Diagnostics: (0, _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_StandaloneUtility3__WEBPACK_IMPORTED_MODULE_1__.yE)(request.options, 128),
                FrameTree: !1,
                AllowFollowUpQuestion: !1,
                AllowInsightQueries: (0, _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_StandaloneUtility3__WEBPACK_IMPORTED_MODULE_1__.yE)(request.options, 512),
                InferUnknownModelTerms: (0, _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_StandaloneUtility3__WEBPACK_IMPORTED_MODULE_1__.yE)(request.options, 4096),
                AllowPlaceholderSuggestions: !1,
                SuggestFollowUp: !1,
                SuggestedUtterances: (0, _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_StandaloneUtility3__WEBPACK_IMPORTED_MODULE_1__.yE)(request.options, 2048),
                SkipCompletion: request.skipCompletion,
                SingleAnswerBias: (0, _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_StandaloneUtility3__WEBPACK_IMPORTED_MODULE_1__.yE)(request.options, 8192),
                SuggestedDefineCalculationUtterances: (0, _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_StandaloneUtility3__WEBPACK_IMPORTED_MODULE_1__.yE)(request.options, 16384),
                UseLlmParser: (0, _powerbi_legacy_PowerBIVisuals_VisualsCommon_Utility_StandaloneUtility3__WEBPACK_IMPORTED_MODULE_1__.yE)(request.options, 65536)
            };
        }
        function clientToWireModelScopes(scopes) {
            return _.map(scopes, function(scope) {
                var _a, _b;
                return {
                    VirtualServerName: null === (_a = scope.model) || void 0 === _a ? void 0 : _a.vsName,
                    DatabaseName: null === (_b = scope.model) || void 0 === _b ? void 0 : _b.dbName,
                    ReportIds: scope.reportIds
                };
            });
        }
        function getQueryUnSupportedLevelWarningsInfo(warnings) {
            if (_.indexOf(warnings, 27) >= 0) return [];
            var specialWarnings = _.intersection(warnings, queryUnSupportedLevelWarnings);
            return _.map(specialWarnings, function(specialWarning) {
                return {
                    warning: specialWarning,
                    messageKey: interpretWarningToUserMessageKeyMappings[specialWarning]
                };
            });
        }
        function getUserWarningMessageKeys(warnings, qnaProxyPath) {
            if (!_.isEmpty(warnings)) {
                _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assert(function() {
                    return !_.isEmpty(qnaProxyPath);
                }, "Must provide a valid qnaProxyPath");
                for (var userMessages = [], hostSpecificWarningToUserMessageMappings = "@powerbi/Qna/qnadesktop.module#QnaDesktopModule" === qnaProxyPath ? hostSpecificInterpretWarningToUserMessageKeyMappings_Desktop : hostSpecificInterpretWarningToUserMessageKeyMappings_Service, _i = 0, warnings_1 = warnings; _i < warnings_1.length; _i++) {
                    var warning = warnings_1[_i];
                    if (hostSpecificWarningToUserMessageMappings) {
                        var hostSpecificUserMessage = hostSpecificWarningToUserMessageMappings[warning];
                        if (hostSpecificUserMessage) {
                            userMessages.push(hostSpecificUserMessage);
                            continue;
                        }
                    }
                    var hostIndependantUserMessage = interpretWarningToUserMessageKeyMappings[warning];
                    hostIndependantUserMessage && userMessages.push(hostIndependantUserMessage);
                }
                return _.uniq(userMessages);
            }
        }
        function getUserErrorMessage(errorCode, localizationService) {
            return localizationService.get(qnaErrorCodeToUserMessageKeyMappings[errorCode] || "Qna_Error_GenericRequestFailure");
        }
        function getClientErrorFromWireV3Response(wireV3Response) {
            var errorLevelDiagnosticCode, errorLevelDiagnosticMessage;
            if (_powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(wireV3Response, "Expect the given wireV3Response to be defined"), 
            "3.3.0" !== wireV3Response.Version) errorLevelDiagnosticCode = "RequiresNewerVersion"; else {
                var firstWireResult = _.first(wireV3Response.Results);
                if (!firstWireResult) return;
                errorLevelDiagnosticCode = null == (errorLevelDiagnosticMessage = _.find(firstWireResult.DiagnosticMessages, function(msg) {
                    return 1 === msg.Severity;
                })) ? void 0 : errorLevelDiagnosticMessage.Code;
            }
            if (null != errorLevelDiagnosticCode) {
                var qnaErrorCode = function(diagnosticCode) {
                    var qnaErrorCode = interpretDiagnosticCodeToQnaErrorCodeMappings[diagnosticCode];
                    return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assert(function() {
                        return null != qnaErrorCode;
                    }, "InterpretDiagnosticCodeToQnaErrorCodeMappings should contain key " + diagnosticCode), 
                    qnaErrorCode || (qnaErrorCode = "NoClientHandling"), qnaErrorCode;
                }(errorLevelDiagnosticCode), qnaError = {
                    errorCode: qnaErrorCode,
                    source: "GenericRequestFailure" === qnaErrorCode ? "PowerBI" : "User",
                    message: null == errorLevelDiagnosticMessage ? void 0 : errorLevelDiagnosticMessage.Message,
                    stackTrace: null == errorLevelDiagnosticMessage ? void 0 : errorLevelDiagnosticMessage.StackTrace
                };
                return "NoClientHandling" === qnaError.errorCode && (qnaError.message = _.isEmpty(qnaError.message) ? errorLevelDiagnosticCode + "." : errorLevelDiagnosticCode + ". " + qnaError.message), 
                qnaError;
            }
        }
        function wireV3InterpretDiagnosticMessageToClientWarnings(diagnosticMessages) {
            if (!_.isEmpty(diagnosticMessages)) {
                for (var warningsResult = [], _loop_1 = function(warning) {
                    _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assert(function() {
                        return null != interpretDiagnosticCodeToInterpretWarningMappings[warning.Code];
                    }, 'unknown mapping to convert InterpretDiagnosticMessage "' + warning.Code + '" to client interpret warning code'), 
                    interpretDiagnosticCodeToInterpretWarningMappings[warning.Code] && warningsResult.push(interpretDiagnosticCodeToInterpretWarningMappings[warning.Code]);
                }, _i = 0, warnings_2 = diagnosticMessages.filter(function(m) {
                    return 2 === m.Severity;
                }); _i < warnings_2.length; _i++) _loop_1(warnings_2[_i]);
                return warningsResult;
            }
        }
        var SpanInternal = function() {
            return function(utterance, wireSpan, isOverlappingSpan) {
                var spanText, spanStartIndex;
                this.utterance = utterance, this.wireSpan = wireSpan, this.isOverlappingSpan = isOverlappingSpan, 
                this.startIndex = wireSpan.StartIndex, this.endExcludingIndex = wireSpan.StartIndex + wireSpan.Length, 
                this.text = utterance.substr(wireSpan.StartIndex, wireSpan.Length), this.correctedStartIndex = wireSpan.CorrectedStartIndex, 
                this.correctedEndExcludingIndex = null != wireSpan.CorrectedStartIndex ? wireSpan.CorrectedStartIndex + wireSpan.CorrectedLength : void 0, 
                this.resolution = wireSpan.Resolution, this.isOverlapping = isOverlappingSpan, this.tokens = (spanText = this.text, 
                spanStartIndex = this.startIndex, _.map(wireSpan.Tokens, function(wireToken) {
                    var tokenStartIndexInSpan = wireToken.StartIndex - spanStartIndex;
                    return _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assert(function() {
                        return _.inRange(tokenStartIndexInSpan, 0, _.size(spanText));
                    }, "Expect each token.StartIndex is a valid index with the given spanText and spanStartIndex"), 
                    _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assert(function() {
                        return !_.isEmpty(_.trim(spanText.substr(tokenStartIndexInSpan, wireToken.Length)));
                    }, "Expect no WireToken being pure space"), {
                        startIndex: wireToken.StartIndex,
                        endExcludingIndex: wireToken.StartIndex + wireToken.Length,
                        text: spanText.substr(tokenStartIndexInSpan, wireToken.Length)
                    };
                }));
                var bindingWithCorrected = wireToClientBindingInfo(this.text, wireSpan.Binding);
                this.binding = bindingWithCorrected && bindingWithCorrected.bindingInfo, this.isCorrected = !(!this.binding || !bindingWithCorrected.isCorrected);
                var alternateBindings = wireToClientBindingInfoCollection(this.text, wireSpan.AlternateBindings), phraseCompletions = wireToClientBindingInfoCollection(this.text, wireSpan.PhraseCompletions), phraseExtensions = wireToClientBindingInfoCollection(this.text, wireSpan.PhraseExtensions), suggestedReplacements = wireToClientBindingInfoCollection(this.text, wireSpan.SuggestedReplacements);
                _.isEmpty(alternateBindings) && _.isEmpty(phraseCompletions) && _.isEmpty(phraseExtensions) && _.isEmpty(suggestedReplacements) || (this.replacementBindings = {
                    alternates: alternateBindings,
                    phraseCompletions,
                    phraseExtensions,
                    suggestedReplacements
                }), this.inferredTermBindings = _.map(wireSpan.InferredTermBindings, function(wireContractInferredBinding) {
                    return {
                        inferredBindingType: (wireContract = wireContractInferredBinding.InferredTerm).Type,
                        definitionPrompt: wireContract.DefinitionPrompt,
                        definitionText: wireContract.DefinitionText,
                        prefixText: wireContract.PrefixText,
                        suffixText: wireContract.SuffixText,
                        hintText: wireContract.HintText,
                        alternateDefinitionTexts: wireContract.AlternateDefinitionTexts,
                        linguisticSchemaItems: wireContract.LinguisticSchemaItems,
                        definedTerm: wireContract.DefinedTerm,
                        targetRole: wireContract.TargetRole,
                        metadata: wireContract.Metadata
                    };
                    var wireContract;
                }), this.inferredTermBindingsUnsupported = wireSpan.InferredTermBindingsUnsupported, 
                this.hasBinding = null != this.binding || null != this.replacementBindings || !_.isEmpty(this.inferredTermBindings), 
                this.isWhiteSpace = !_.isEmpty(this.text) && _.isEmpty(_.trim(this.text)), this.isUsed = !this.isOverlapping && (null == this.resolution || 0 === this.resolution || 4 === this.resolution), 
                this.isUnknown = 3 === this.resolution, this.isInferred = 4 === this.resolution, 
                this.overlapSpans = [];
                var definedWithOptions = !this.isOverlapping && !_.isEmpty(this.text) && !isCoreTermAndShouldNotIndicateOptions(this) && !isPhrasingBindingAndShouldNotIndicateOptions(this) && !isSpanUndefinedWithOptions(this) && this.hasBinding && this.isUsed, undefinedWithOptions = isSpanUndefinedWithOptions(this);
                _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assert(function() {
                    return !(definedWithOptions && undefinedWithOptions);
                }, "A span can not be definedWithOptions and undefinedWithOptions at the same time."), 
                this.state = definedWithOptions ? "accepted" : undefinedWithOptions && this.isUsed ? "warning" : undefinedWithOptions ? "error" : "none";
            };
        }();
        function wireToClientCommand(wireCommand) {
            if (wireCommand) {
                var commandSemanticQuery = wireCommand.Query ? _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.deserializeQuery(wireCommand.Query) : void 0;
                return {
                    query: commandSemanticQuery,
                    queryMetadata: wireToClientQueryMetaData(commandSemanticQuery, wireCommand.QueryMetadata),
                    data: wireCommand.Data,
                    binding: wireCommand.Binding,
                    visualConfigurations: _.map(wireCommand.VisualConfigurations, function(visualConfig) {
                        var visualConfigSemanticQuery = visualConfig.Query ? _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.deserializeQuery(visualConfig.Query) : void 0;
                        return {
                            visualizationType: visualConfig.VisualizationType,
                            dataShapeBinding: visualConfig.DataShapeBinding,
                            visualElements: visualConfig.VisualElements,
                            query: visualConfigSemanticQuery,
                            queryMetadata: wireToClientQueryMetaData(commandSemanticQuery, visualConfig.QueryMetadata)
                        };
                    }),
                    suggestedVisualTypes: _.map(wireCommand.SuggestedVisualizations, function(suggestedVisual) {
                        return (0, _powerbi_Insights__WEBPACK_IMPORTED_MODULE_3__.s)(suggestedVisual.VisualizationType).name;
                    }),
                    linguisticSchemaJson: wireCommand.LinguisticSchemaJson,
                    linguisticSchemaItems: wireCommand.LinguisticSchemaItems,
                    inferredTermMetadata: wireCommand.InferredTermMetadata,
                    defineCalculation: wireToClientDefineCalculation(wireCommand.DefineCalculation)
                };
            }
        }
        function wireToClientDefineCalculation(wireDefineCalculation) {
            if (wireDefineCalculation) return {
                expression: wireDefineCalculation.Expression,
                homeTable: wireDefineCalculation.HomeTable,
                format: wireDefineCalculation.Format
            };
        }
        function wireToClientQueryMetaData(query, wireQnaQueryMetadata) {
            if (query && wireQnaQueryMetadata) {
                var wireFilters = _.filter(wireQnaQueryMetadata.Filters, function(f) {
                    return !!f;
                }), wireSelects = _.filter(wireQnaQueryMetadata.Select, function(s) {
                    return !!s;
                });
                return {
                    filters: _.map(wireFilters, function(f) {
                        return {
                            Restatement: f.Restatement,
                            type: void 0
                        };
                    }),
                    selects: _.map(wireSelects, function(s) {
                        return {
                            restatement: s.Restatement,
                            valueType: convertSemanticTypeToValueType(s.DefaultLabel ? s.DefaultLabel.SemanticType : s.SemanticType),
                            isGroup: s.IsGroup,
                            defaultLabel: s.DefaultLabel ? createStandaloneDefaultLabel(s.DefaultLabel.Expression, query) : void 0,
                            isExplicitSortBy: s.IsExplicitSortBy
                        };
                    })
                };
            }
        }
        function isCoreTermAndShouldNotIndicateOptions(span) {
            var _a, _b;
            return 7 === (null === (_a = span.binding) || void 0 === _a ? void 0 : _a.type) && !span.isCorrected && _.isEmpty(null === (_b = span.replacementBindings) || void 0 === _b ? void 0 : _b.suggestedReplacements) && _.isEmpty(span.inferredTermBindings);
        }
        function isPhrasingBindingAndShouldNotIndicateOptions(span) {
            var _a, _b;
            return 8 === (null === (_a = span.binding) || void 0 === _a ? void 0 : _a.type) && !span.isCorrected && 2 === span.resolution && _.isEmpty(null === (_b = span.replacementBindings) || void 0 === _b ? void 0 : _b.suggestedReplacements) && _.isEmpty(span.inferredTermBindings);
        }
        function isSpanUndefinedWithOptions(span) {
            return !(span.isOverlapping || _.isEmpty(span.text) || isCoreTermAndShouldNotIndicateOptions(span) || isPhrasingBindingAndShouldNotIndicateOptions(span) || !span.isCorrected && 3 !== span.resolution && (!span.hasBinding || span.isUsed));
        }
        function wireToClientBindingInfo(spanText, wireBindingContainer) {
            if (wireBindingContainer && !wireBindingContainer.InferredTerm) {
                var wireBinding, bindingType;
                if (wireBindingContainer.Table) wireBinding = wireBindingContainer.Table, bindingType = 0; else if (wireBindingContainer.Pod) wireBinding = wireBindingContainer.Pod, 
                bindingType = 1; else if (wireBindingContainer.Property) wireBinding = wireBindingContainer.Property, 
                bindingType = 2; else if (wireBindingContainer.Value) wireBinding = wireBindingContainer.Value, 
                bindingType = 3; else if (wireBindingContainer.Range) wireBinding = wireBindingContainer.Range, 
                bindingType = 4; else if (wireBindingContainer.VisType) wireBinding = wireBindingContainer.VisType, 
                bindingType = 5; else if (wireBindingContainer.Composite) wireBinding = wireBindingContainer.Composite, 
                bindingType = 6; else if (wireBindingContainer.Core) wireBinding = wireBindingContainer.Core, 
                bindingType = 7; else if (wireBindingContainer.Phrasing) wireBinding = wireBindingContainer.Phrasing, 
                bindingType = 8; else if (wireBindingContainer.TextualEntity) wireBinding = wireBindingContainer.TextualEntity, 
                bindingType = 9; else {
                    if (!wireBindingContainer.AnyEntity) {
                        var unhandledBindingAny_1 = wireBindingContainer;
                        return void _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assert(function() {
                            return !!unhandledBindingAny_1.Literal;
                        }, "Has binding type that is unhandled by client right now. Known unhandled types are: [Literal] and this is not a known type. Check to either update the known unhandled type list, or handle it on the client side.");
                    }
                    wireBinding = wireBindingContainer.AnyEntity, bindingType = 10;
                }
                return {
                    bindingInfo: {
                        type: bindingType,
                        text: wireBinding.Text,
                        textSegmentsWithMatchInfo: generateTextSegmentsWithMatchInfo(spanText, wireBinding.Text, wireBinding.MatchedSegments),
                        matchType: wireBinding.MatchType,
                        score: wireBinding.Score
                    },
                    isCorrected: wireBinding.Corrected
                };
            }
        }
        function generateTextSegmentsWithMatchInfo(spanText, bindingText, matchedSegments) {
            if (_.isEmpty(spanText) || _.isEmpty(matchedSegments)) return [ {
                text: bindingText,
                isMatched: !1
            } ];
            for (var resultSegments = [], currentIndex = 0, _i = 0, matchedSegments_1 = matchedSegments; _i < matchedSegments_1.length; _i++) {
                var segment = matchedSegments_1[_i];
                currentIndex < segment.StartIndex && resultSegments.push({
                    text: bindingText.substring(currentIndex, segment.StartIndex),
                    isMatched: !1
                }), resultSegments.push({
                    text: bindingText.substr(segment.StartIndex, segment.Length),
                    isMatched: !0
                }), currentIndex = segment.StartIndex + segment.Length;
            }
            return currentIndex < _.size(bindingText) && resultSegments.push({
                text: bindingText.substring(currentIndex),
                isMatched: !1
            }), resultSegments;
        }
        function wireToClientBindingInfoCollection(spanText, wireContractBindingContainers) {
            if (wireContractBindingContainers) {
                for (var convertedCollection = [], _i = 0, wireContractBindingContainers_1 = wireContractBindingContainers; _i < wireContractBindingContainers_1.length; _i++) {
                    var bindingInfoWithCorrected = wireToClientBindingInfo(spanText, wireContractBindingContainers_1[_i]);
                    bindingInfoWithCorrected && convertedCollection.push(bindingInfoWithCorrected.bindingInfo);
                }
                return convertedCollection;
            }
        }
        function clientToWireInferredTermBinding(clientContract) {
            return null == clientContract ? void 0 : {
                Type: clientContract.inferredBindingType,
                DefinitionPrompt: clientContract.definitionPrompt,
                DefinitionText: clientContract.definitionText,
                PrefixText: clientContract.prefixText,
                SuffixText: clientContract.suffixText,
                HintText: clientContract.hintText,
                AlternateDefinitionTexts: clientContract.alternateDefinitionTexts,
                LinguisticSchemaItems: clientContract.linguisticSchemaItems,
                DefinedTerm: clientContract.definedTerm,
                TargetRole: clientContract.targetRole,
                Metadata: clientContract.metadata
            };
        }
        function generateUtteranceCorrectionInfo(result) {
            _powerbi_legacy_PowerBIVisuals_VisualsCommon_debug__WEBPACK_IMPORTED_MODULE_0__.fF.assertValue(result, "result");
            var wireCorrectedTextSegments, correctedUtterance = result.CorrectedUtterance;
            if (!_.isEmpty(correctedUtterance)) {
                var replacement = result.ReplacementUtterance, state = 2;
                return !!result.Command || (result.ConfidenceLevel <= 5 ? state = 0 : result.ConfidenceLevel <= 20 && (state = 1)), 
                _.isEmpty(result.CorrectedUtteranceTextSegments) ? {
                    correctedUtterance,
                    replacementUtterance: replacement || correctedUtterance,
                    state
                } : {
                    correctedUtterance,
                    correctedTextSegments: (wireCorrectedTextSegments = result.CorrectedUtteranceTextSegments, 
                    _.map(wireCorrectedTextSegments, function(textSegment) {
                        return {
                            startIndex: textSegment.StartIndex,
                            endExcludingIndex: textSegment.StartIndex + textSegment.Length
                        };
                    })),
                    state
                };
            }
        }
        function convertSemanticTypeToValueType(semanticType) {
            switch (semanticType) {
              case 0:
              case 1:
              case 2:
              case 3:
                return;

              case 4:
                return _powerbi_legacy_PowerBIVisuals_VisualsData_types_valueType__WEBPACK_IMPORTED_MODULE_4__.Ge.fromExtendedType(7078913);

              case 5:
                return _powerbi_legacy_PowerBIVisuals_VisualsData_types_valueType__WEBPACK_IMPORTED_MODULE_4__.Ge.fromDescriptor({
                    dateTime: !0
                });

              case 6:
                return _powerbi_legacy_PowerBIVisuals_VisualsData_types_valueType__WEBPACK_IMPORTED_MODULE_4__.Ge.fromDescriptor({
                    numeric: !0
                });
            }
        }
        function createStandaloneDefaultLabel(expression, query) {
            var queryDef = _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.serializeQuery(query);
            queryDef.Select.push(expression);
            var deserializeQuery = _powerbi_legacy_Data_services_serialization_semanticQuerySerializer__WEBPACK_IMPORTED_MODULE_2__.ib.deserializeQuery(queryDef);
            return _.last(deserializeQuery.select()).expr;
        }
    },
    34810: function() {
        window.qnaSprite = {
            icons: [ {
                type: "svg",
                id: "QnaReviewQuestions60x57",
                children: [ {
                    type: "path",
                    className: "OfficeIconColors_HighContrast",
                    d: "M51.6211 43.582C52.9102 44.207 54.0625 44.998 55.0781 45.9551C56.1133 46.8926 56.9922 47.9473 57.7148 49.1191C58.457 50.2715 59.0234 51.5215 59.4141 52.8691C59.8047 54.1973 60 55.5742 60 57H56.25C56.25 55.457 55.9473 54.002 55.3418 52.6348C54.7559 51.2676 53.9551 50.0762 52.9395 49.0605C51.9238 48.0449 50.7324 47.2441 49.3652 46.6582C47.998 46.0527 46.543 45.75 45 45.75C43.457 45.75 42.002 46.0527 40.6348 46.6582C39.2676 47.2441 38.0762 48.0449 37.0605 49.0605C36.0449 50.0762 35.2344 51.2676 34.6289 52.6348C34.043 54.002 33.75 55.457 33.75 57H30C30 55.5742 30.1953 54.1973 30.5859 52.8691C30.9766 51.5215 31.5332 50.2715 32.2559 49.1191C32.998 47.9473 33.877 46.8926 34.8926 45.9551C35.9277 44.998 37.0898 44.207 38.3789 43.582C36.9141 42.5273 35.7715 41.209 34.9512 39.627C34.1504 38.0254 33.75 36.3164 33.75 34.5C33.75 32.957 34.043 31.502 34.6289 30.1348C35.2148 28.7676 36.0156 27.5762 37.0312 26.5605C38.0664 25.5254 39.2578 24.7148 40.6055 24.1289C41.9727 23.543 43.4375 23.25 45 23.25C46.543 23.25 47.998 23.543 49.3652 24.1289C50.7324 24.7148 51.9238 25.5254 52.9395 26.5605C53.9746 27.5762 54.7852 28.7676 55.3711 30.1348C55.957 31.502 56.25 32.957 56.25 34.5C56.25 36.3164 55.8398 38.0254 55.0195 39.627C54.2188 41.209 53.0859 42.5273 51.6211 43.582ZM45 42C46.0352 42 47.002 41.8047 47.9004 41.4141C48.8184 41.0234 49.6191 40.4863 50.3027 39.8027C50.9863 39.1191 51.5234 38.3281 51.9141 37.4297C52.3047 36.5117 52.5 35.5352 52.5 34.5C52.5 33.4648 52.3047 32.498 51.9141 31.5996C51.5234 30.6816 50.9863 29.8809 50.3027 29.1973C49.6191 28.5137 48.8184 27.9766 47.9004 27.5859C47.002 27.1953 46.0352 27 45 27C43.9648 27 42.9883 27.1953 42.0703 27.5859C41.1719 27.9766 40.3809 28.5137 39.6973 29.1973C39.0137 29.8809 38.4766 30.6816 38.0859 31.5996C37.6953 32.498 37.5 33.4648 37.5 34.5C37.5 35.5352 37.6953 36.5117 38.0859 37.4297C38.4766 38.3281 39.0137 39.1191 39.6973 39.8027C40.3809 40.4863 41.1719 41.0234 42.0703 41.4141C42.9883 41.8047 43.9648 42 45 42ZM60 0.75V30.75C60 29.8125 59.9121 28.9922 59.7363 28.2891C59.5605 27.5859 59.3066 26.9316 58.9746 26.3262C58.6621 25.7207 58.2715 25.1348 57.8027 24.5684C57.3535 24.002 56.8359 23.3867 56.25 22.7227V4.5H3.75V38.25H11.25V46.0723L19.0723 38.25H30.498C30.6543 38.9141 30.8594 39.5586 31.1133 40.1836C31.3867 40.8086 31.6895 41.4141 32.0215 42H20.625L7.5 55.125V42H0V0.75H60Z"
                }, {
                    type: "path",
                    d: "M51.6211 43.582C52.9102 44.207 54.0625 44.998 55.0781 45.9551C56.1133 46.8926 56.9922 47.9473 57.7148 49.1191C58.457 50.2715 59.0234 51.5215 59.4141 52.8691C59.8047 54.1973 60 55.5742 60 57H56.25C56.25 55.457 55.9473 54.002 55.3418 52.6348C54.7559 51.2676 53.9551 50.0762 52.9395 49.0605C51.9238 48.0449 50.7324 47.2441 49.3652 46.6582C47.998 46.0527 46.543 45.75 45 45.75C43.457 45.75 42.002 46.0527 40.6348 46.6582C39.2676 47.2441 38.0762 48.0449 37.0605 49.0605C36.0449 50.0762 35.2344 51.2676 34.6289 52.6348C34.043 54.002 33.75 55.457 33.75 57H30C30 55.5742 30.1953 54.1973 30.5859 52.8691C30.9766 51.5215 31.5332 50.2715 32.2559 49.1191C32.998 47.9473 33.877 46.8926 34.8926 45.9551C35.9277 44.998 37.0898 44.207 38.3789 43.582C36.9141 42.5273 35.7715 41.209 34.9512 39.627C34.1504 38.0254 33.75 36.3164 33.75 34.5C33.75 32.957 34.043 31.502 34.6289 30.1348C35.2148 28.7676 36.0156 27.5762 37.0312 26.5605C38.0664 25.5254 39.2578 24.7148 40.6055 24.1289C41.9727 23.543 43.4375 23.25 45 23.25C46.543 23.25 47.998 23.543 49.3652 24.1289C50.7324 24.7148 51.9238 25.5254 52.9395 26.5605C53.9746 27.5762 54.7852 28.7676 55.3711 30.1348C55.957 31.502 56.25 32.957 56.25 34.5C56.25 36.3164 55.8398 38.0254 55.0195 39.627C54.2188 41.209 53.0859 42.5273 51.6211 43.582ZM45 42C46.0352 42 47.002 41.8047 47.9004 41.4141C48.8184 41.0234 49.6191 40.4863 50.3027 39.8027C50.9863 39.1191 51.5234 38.3281 51.9141 37.4297C52.3047 36.5117 52.5 35.5352 52.5 34.5C52.5 33.4648 52.3047 32.498 51.9141 31.5996C51.5234 30.6816 50.9863 29.8809 50.3027 29.1973C49.6191 28.5137 48.8184 27.9766 47.9004 27.5859C47.002 27.1953 46.0352 27 45 27C43.9648 27 42.9883 27.1953 42.0703 27.5859C41.1719 27.9766 40.3809 28.5137 39.6973 29.1973C39.0137 29.8809 38.4766 30.6816 38.0859 31.5996C37.6953 32.498 37.5 33.4648 37.5 34.5C37.5 35.5352 37.6953 36.5117 38.0859 37.4297C38.4766 38.3281 39.0137 39.1191 39.6973 39.8027C40.3809 40.4863 41.1719 41.0234 42.0703 41.4141C42.9883 41.8047 43.9648 42 45 42ZM60 0.75V30.75C60 29.8125 59.9121 28.9922 59.7363 28.2891C59.5605 27.5859 59.3066 26.9316 58.9746 26.3262C58.6621 25.7207 58.2715 25.1348 57.8027 24.5684C57.3535 24.002 56.8359 23.3867 56.25 22.7227V4.5H3.75V38.25H11.25V46.0723L19.0723 38.25H30.498C30.6543 38.9141 30.8594 39.5586 31.1133 40.1836C31.3867 40.8086 31.6895 41.4141 32.0215 42H20.625L7.5 55.125V42H0V0.75H60Z"
                } ],
                viewBox: "0 0 60 57"
            }, {
                type: "svg",
                id: "QnaBulkEditing60x57",
                children: [ {
                    type: "path",
                    className: "OfficeIconColors_HighContrast",
                    d: "M60 0.75V21.5215C59.4336 21.0918 58.8379 20.7402 58.2129 20.4668C57.5879 20.1934 56.9336 19.9785 56.25 19.8223V4.5H3.75V38.25H31.377L27.5977 42H0V0.75H60ZM50.0098 24.9199C50.5566 24.373 51.1914 23.9727 51.9141 23.7188C52.6562 23.4648 53.3984 23.3379 54.1406 23.3379C54.9609 23.3379 55.7227 23.4844 56.4258 23.7773C57.1289 24.0508 57.7344 24.4414 58.2422 24.9492C58.7695 25.457 59.1797 26.0625 59.4727 26.7656C59.7852 27.4688 59.9414 28.2305 59.9414 29.0508C59.9414 29.8125 59.7949 30.5547 59.502 31.2773C59.209 32 58.7891 32.6348 58.2422 33.1816L37.2949 54.1875L26.25 56.9414L29.0039 45.8965L50.0098 24.9199ZM55.6348 30.5449C56.0449 30.1348 56.25 29.6367 56.25 29.0508C56.25 28.4258 56.0449 27.9375 55.6348 27.5859C55.2441 27.2148 54.7461 27.0293 54.1406 27.0293C53.8672 27.0293 53.6035 27.0684 53.3496 27.1465C53.0957 27.2246 52.8711 27.3613 52.6758 27.5566L32.4023 47.8301L31.4062 51.7852L35.3613 50.7891L55.6348 30.5449ZM42.627 27H7.5V23.25H46.377L42.627 27ZM7.5 30.75H38.877L35.127 34.5H7.5V30.75Z"
                }, {
                    type: "path",
                    d: "M60 0.75V21.5215C59.4336 21.0918 58.8379 20.7402 58.2129 20.4668C57.5879 20.1934 56.9336 19.9785 56.25 19.8223V4.5H3.75V38.25H31.377L27.5977 42H0V0.75H60ZM50.0098 24.9199C50.5566 24.373 51.1914 23.9727 51.9141 23.7188C52.6562 23.4648 53.3984 23.3379 54.1406 23.3379C54.9609 23.3379 55.7227 23.4844 56.4258 23.7773C57.1289 24.0508 57.7344 24.4414 58.2422 24.9492C58.7695 25.457 59.1797 26.0625 59.4727 26.7656C59.7852 27.4688 59.9414 28.2305 59.9414 29.0508C59.9414 29.8125 59.7949 30.5547 59.502 31.2773C59.209 32 58.7891 32.6348 58.2422 33.1816L37.2949 54.1875L26.25 56.9414L29.0039 45.8965L50.0098 24.9199ZM55.6348 30.5449C56.0449 30.1348 56.25 29.6367 56.25 29.0508C56.25 28.4258 56.0449 27.9375 55.6348 27.5859C55.2441 27.2148 54.7461 27.0293 54.1406 27.0293C53.8672 27.0293 53.6035 27.0684 53.3496 27.1465C53.0957 27.2246 52.8711 27.3613 52.6758 27.5566L32.4023 47.8301L31.4062 51.7852L35.3613 50.7891L55.6348 30.5449ZM42.627 27H7.5V23.25H46.377L42.627 27ZM7.5 30.75H38.877L35.127 34.5H7.5V30.75Z"
                } ],
                viewBox: "0 0 60 57"
            }, {
                type: "svg",
                id: "QnaSuggestQuestions72x66",
                children: [ {
                    type: "path",
                    className: "OfficeIconColors_HighContrast",
                    d: "M68 31.8115C68 32.542 67.8617 33.2503 67.585 33.9365C67.3083 34.6227 66.9043 35.2314 66.373 35.7627L44.5088 57.627L34 60.25L36.623 49.7412L58.4873 27.877C59.0186 27.3457 59.6273 26.9417 60.3135 26.665C60.9997 26.3883 61.708 26.25 62.4385 26.25C63.2021 26.25 63.9215 26.3994 64.5967 26.6982C65.2718 26.986 65.8584 27.3844 66.3564 27.8936C66.8656 28.3916 67.264 28.9782 67.5518 29.6533C67.8506 30.3285 68 31.0479 68 31.8115ZM39.4121 49.957C40.5853 50.3444 41.5924 50.9642 42.4336 51.8164C43.2858 52.6576 43.9056 53.6647 44.293 54.8379L62.2393 36.875L57.375 32.0107L39.4121 49.957ZM36.9219 57.3281L42.3838 55.9668C42.2731 55.4577 42.0905 54.9762 41.8359 54.5225C41.5924 54.0687 41.2936 53.6647 40.9395 53.3105C40.5853 52.9564 40.1813 52.6576 39.7275 52.4141C39.2738 52.1595 38.7923 51.9769 38.2832 51.8662L36.9219 57.3281ZM63.75 35.3643C64.0267 35.0876 64.2923 34.8275 64.5469 34.584C64.8014 34.3405 65.0283 34.0859 65.2275 33.8203C65.4268 33.5436 65.5817 33.2503 65.6924 32.9404C65.8141 32.6195 65.875 32.2487 65.875 31.8281C65.875 31.3522 65.7809 30.9095 65.5928 30.5C65.4157 30.0794 65.1667 29.7142 64.8457 29.4043C64.5358 29.0833 64.1706 28.8343 63.75 28.6572C63.3405 28.4691 62.8978 28.375 62.4219 28.375C62.0013 28.375 61.6305 28.4359 61.3096 28.5576C60.9997 28.6683 60.7064 28.8232 60.4297 29.0225C60.1641 29.2217 59.9095 29.4486 59.666 29.7031C59.4225 29.9577 59.1624 30.2233 58.8857 30.5L63.75 35.3643Z"
                }, {
                    type: "path",
                    className: "OfficeIconColors_HighContrast",
                    d: "M0 0H60V44.8646H21.416L7.5 60V44.8646H0V0ZM56.25 40.786V4.0786H3.75V40.786H11.25V50.1221L19.834 40.786H56.25Z"
                }, {
                    type: "path",
                    className: "cls-1",
                    d: "M0 0H60V44.8646H21.416L7.5 60V44.8646H0V0ZM56.25 40.786V4.0786H3.75V40.786H11.25V50.1221L19.834 40.786H56.25Z"
                }, {
                    type: "path",
                    className: "cls-2",
                    d: "M68 31.8115C68 32.542 67.8617 33.2503 67.585 33.9365C67.3083 34.6227 66.9043 35.2314 66.373 35.7627L44.5088 57.627L34 60.25L36.623 49.7412L58.4873 27.877C59.0186 27.3457 59.6273 26.9417 60.3135 26.665C60.9997 26.3883 61.708 26.25 62.4385 26.25C63.2021 26.25 63.9215 26.3994 64.5967 26.6982C65.2718 26.986 65.8584 27.3844 66.3564 27.8936C66.8656 28.3916 67.264 28.9782 67.5518 29.6533C67.8506 30.3285 68 31.0479 68 31.8115ZM39.4121 49.957C40.5853 50.3444 41.5924 50.9642 42.4336 51.8164C43.2858 52.6576 43.9056 53.6647 44.293 54.8379L62.2393 36.875L57.375 32.0107L39.4121 49.957ZM36.9219 57.3281L42.3838 55.9668C42.2731 55.4577 42.0905 54.9762 41.8359 54.5225C41.5924 54.0687 41.2936 53.6647 40.9395 53.3105C40.5853 52.9564 40.1813 52.6576 39.7275 52.4141C39.2738 52.1595 38.7923 51.9769 38.2832 51.8662L36.9219 57.3281ZM63.75 35.3643C64.0267 35.0876 64.2923 34.8275 64.5469 34.584C64.8014 34.3405 65.0283 34.0859 65.2275 33.8203C65.4268 33.5436 65.5817 33.2503 65.6924 32.9404C65.8141 32.6195 65.875 32.2487 65.875 31.8281C65.875 31.3522 65.7809 30.9095 65.5928 30.5C65.4157 30.0794 65.1667 29.7142 64.8457 29.4043C64.5358 29.0833 64.1706 28.8343 63.75 28.6572C63.3405 28.4691 62.8978 28.375 62.4219 28.375C62.0013 28.375 61.6305 28.4359 61.3096 28.5576C60.9997 28.6683 60.7064 28.8232 60.4297 29.0225C60.1641 29.2217 59.9095 29.4486 59.666 29.7031C59.4225 29.9577 59.1624 30.2233 58.8857 30.5L63.75 35.3643Z"
                }, {
                    type: "path",
                    className: "cls-3",
                    d: "M68 31.8115C68 32.542 67.8617 33.2503 67.585 33.9365C67.3083 34.6227 66.9043 35.2314 66.373 35.7627L44.5088 57.627L34 60.25L36.623 49.7412L58.4873 27.877C59.0186 27.3457 59.6273 26.9417 60.3135 26.665C60.9997 26.3883 61.708 26.25 62.4385 26.25C63.2021 26.25 63.9215 26.3994 64.5967 26.6982C65.2718 26.986 65.8584 27.3844 66.3564 27.8936C66.8656 28.3916 67.264 28.9782 67.5518 29.6533C67.8506 30.3285 68 31.0479 68 31.8115ZM39.4121 49.957C40.5853 50.3444 41.5924 50.9642 42.4336 51.8164C43.2858 52.6576 43.9056 53.6647 44.293 54.8379L62.2393 36.875L57.375 32.0107L39.4121 49.957ZM36.9219 57.3281L42.3838 55.9668C42.2731 55.4577 42.0905 54.9762 41.8359 54.5225C41.5924 54.0687 41.2936 53.6647 40.9395 53.3105C40.5853 52.9564 40.1813 52.6576 39.7275 52.4141C39.2738 52.1595 38.7923 51.9769 38.2832 51.8662L36.9219 57.3281ZM63.75 35.3643C64.0267 35.0876 64.2923 34.8275 64.5469 34.584C64.8014 34.3405 65.0283 34.0859 65.2275 33.8203C65.4268 33.5436 65.5817 33.2503 65.6924 32.9404C65.8141 32.6195 65.875 32.2487 65.875 31.8281C65.875 31.3522 65.7809 30.9095 65.5928 30.5C65.4157 30.0794 65.1667 29.7142 64.8457 29.4043C64.5358 29.0833 64.1706 28.8343 63.75 28.6572C63.3405 28.4691 62.8978 28.375 62.4219 28.375C62.0013 28.375 61.6305 28.4359 61.3096 28.5576C60.9997 28.6683 60.7064 28.8232 60.4297 29.0225C60.1641 29.2217 59.9095 29.4486 59.666 29.7031C59.4225 29.9577 59.1624 30.2233 58.8857 30.5L63.75 35.3643Z"
                } ],
                viewBox: "0 0 72 66"
            }, {
                type: "svg",
                id: "QnaTeachQna60x56",
                children: [ {
                    type: "path",
                    className: "OfficeIconColors_HighContrast",
                    d: "M11.25 34.5V43.084L18.75 35.584V40.916L7.5 52.166V38.25H0V0.75H52.5V15.75H48.75V4.5H3.75V34.5H11.25ZM22.5 19.5H60V45.75H52.5V55.916L42.334 45.75H22.5V19.5ZM56.25 42V23.25H26.25V42H43.916L48.75 46.834V42H56.25Z"
                }, {
                    type: "path",
                    d: "M11.25 34.5V43.084L18.75 35.584V40.916L7.5 52.166V38.25H0V0.75H52.5V15.75H48.75V4.5H3.75V34.5H11.25ZM22.5 19.5H60V45.75H52.5V55.916L42.334 45.75H22.5V19.5ZM56.25 42V23.25H26.25V42H43.916L48.75 46.834V42H56.25Z"
                } ],
                viewBox: "0 0 60 56"
            } ]
        };
    },
    15118: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            $: function() {
                return iconSpriteSheet;
            },
            R: function() {
                return generated_qna_sprite_default();
            }
        }), __webpack_require__(34810), __webpack_require__(52601);
        var injectStylesIntoStyleTag = __webpack_require__(25834), injectStylesIntoStyleTag_default = __webpack_require__.n(injectStylesIntoStyleTag), styleDomAPI = __webpack_require__(59215), styleDomAPI_default = __webpack_require__.n(styleDomAPI), insertBySelector = __webpack_require__(51269), insertBySelector_default = __webpack_require__.n(insertBySelector), setAttributesWithoutAttributes = __webpack_require__(53581), setAttributesWithoutAttributes_default = __webpack_require__.n(setAttributesWithoutAttributes), insertStyleElement = __webpack_require__(76902), insertStyleElement_default = __webpack_require__.n(insertStyleElement), styleTagTransform = __webpack_require__(9382), styleTagTransform_default = __webpack_require__.n(styleTagTransform), qna_sprite = __webpack_require__(75662), qna_sprite_default = __webpack_require__.n(qna_sprite), options = {};
        options.styleTagTransform = styleTagTransform_default(), options.setAttributes = setAttributesWithoutAttributes_default(), 
        options.insert = insertBySelector_default().bind(null, "head"), options.domAPI = styleDomAPI_default(), 
        options.insertStyleElement = insertStyleElement_default(), injectStylesIntoStyleTag_default()(qna_sprite_default(), options), 
        qna_sprite_default() && qna_sprite_default().locals && qna_sprite_default();
        var configs_generated_qna_sprite = __webpack_require__(59439), generated_qna_sprite_default = __webpack_require__.n(configs_generated_qna_sprite), iconSpriteSheet = {
            name: "qnaSprite",
            sprite: window.qnaSprite
        };
    },
    59439: function(module) {
        module.exports = {
            QnaReviewQuestions60x57: "QnaReviewQuestions60x57",
            QnaBulkEditing60x57: "QnaBulkEditing60x57",
            QnaSuggestQuestions72x66: "QnaSuggestQuestions72x66",
            QnaTeachQna60x56: "QnaTeachQna60x56"
        };
    },
    13414: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            t: function() {
                return TriSwitchComponent;
            }
        });
        var _angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(4437), _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(50423), _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(17174), _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(51193), _angular_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(77476), _c0 = [ "switchInput" ];
        function TriSwitchComponent_span_0_Template(rf, ctx) {
            if (1 & rf && (_angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementStart"](0, "span", 7), 
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275text"](1), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementEnd"]()), 
            2 & rf) {
                var ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275advance"](1), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275textInterpolate1"](" ", ctx_r0.label, "\n");
            }
        }
        function TriSwitchComponent_div_5_span_2_Template(rf, ctx) {
            1 & rf && (_angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementStart"](0, "span", 11), 
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275projection"](1, 1), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementEnd"]());
        }
        function TriSwitchComponent_div_5_Template(rf, ctx) {
            if (1 & rf && (_angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementStart"](0, "div", 8), 
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275element"](1, "span", 9), 
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275template"](2, TriSwitchComponent_div_5_span_2_Template, 2, 0, "span", 10), 
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementEnd"]()), 2 & rf) {
                var ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275nextContext"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275advance"](2), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275property"]("ngIf", ctx_r2.compact);
            }
        }
        function TriSwitchComponent_div_6_Template(rf, ctx) {
            1 & rf && (_angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementStart"](0, "div", 12), 
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275element"](1, "span", 13), 
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementEnd"]());
        }
        var _c1 = [ [ [ "tri-switch-text" ], [ "", "tri-switch-text", "" ] ], [ [ "inline-toggle-content" ], [ "", "inline-toggle-content", "" ] ] ], _c2 = [ "tri-switch-text, [tri-switch-text]", "inline-toggle-content, [inline-toggle-content]" ], nextUniqueId = 0, TriSwitchChange = function() {
            return function(source, checked) {
                this.source = source, this.checked = checked;
            };
        }(), TriSwitchComponent = function() {
            function TriSwitchComponent(elementRef, focusMonitor, changeDetectorRef) {
                this.elementRef = elementRef, this.focusMonitor = focusMonitor, this.changeDetectorRef = changeDetectorRef, 
                this._disabled = !1, this._required = !1, this._compact = !1, this._checked = !1, 
                this._indeterminate = !1, this.name = void 0, this._uniqueId = "tri-switch-".concat(++nextUniqueId), 
                this.id = this._uniqueId, this.ariaLabel = void 0, this.ariaLabelledby = void 0, 
                this.ariaDescribedby = "", this.label = void 0, this.listenValueChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, 
                this.toggleChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, 
                this.inputElement = {}, this.onChange = function() {}, this.onTouched = function() {};
            }
            return Object.defineProperty(TriSwitchComponent.prototype, "disabled", {
                get: function() {
                    return this._disabled;
                },
                set: function(value) {
                    this._disabled = (0, _angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__.Ig)(value), 
                    this.changeDetectorRef.markForCheck();
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(TriSwitchComponent.prototype, "required", {
                get: function() {
                    return this._required;
                },
                set: function(value) {
                    this._required = (0, _angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__.Ig)(value);
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(TriSwitchComponent.prototype, "checked", {
                get: function() {
                    return this._checked;
                },
                set: function(value) {
                    this._checked = (0, _angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__.Ig)(value), 
                    this.changeDetectorRef.markForCheck();
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(TriSwitchComponent.prototype, "indeterminate", {
                get: function() {
                    return this._indeterminate;
                },
                set: function(value) {
                    this._indeterminate = (0, _angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__.Ig)(value), 
                    this.changeDetectorRef.markForCheck();
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(TriSwitchComponent.prototype, "compact", {
                get: function() {
                    return this._compact;
                },
                set: function(value) {
                    this._compact = (0, _angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__.Ig)(value), 
                    this.changeDetectorRef.markForCheck();
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(TriSwitchComponent.prototype, "inputId", {
                get: function() {
                    return "".concat(this.id || this._uniqueId, "-input");
                },
                enumerable: !1,
                configurable: !0
            }), TriSwitchComponent.prototype.ngAfterContentInit = function() {
                var _this = this;
                this.focusMonitor.monitor(this.elementRef, !0).subscribe(function(focusOrigin) {
                    "keyboard" === focusOrigin || "program" === focusOrigin ? _this.inputElement.nativeElement.focus() : focusOrigin || Promise.resolve().then(function() {
                        return _this.onTouched();
                    });
                });
            }, TriSwitchComponent.prototype.ngOnDestroy = function() {
                this.focusMonitor.stopMonitoring(this.elementRef);
            }, TriSwitchComponent.prototype.onInputChange = function(event, toggleNativeState) {
                void 0 === toggleNativeState && (toggleNativeState = !1), event.stopPropagation(), 
                this.toggleChange.emit(), this.checked = toggleNativeState ? !this.inputElement.nativeElement.checked : this.inputElement.nativeElement.checked, 
                this.indeterminate = !toggleNativeState && this.indeterminate, this.emitChangeEvent();
            }, TriSwitchComponent.prototype.onInputClick = function(event) {
                event.stopPropagation();
            }, TriSwitchComponent.prototype.writeValue = function(value) {
                this.checked = !!value;
            }, TriSwitchComponent.prototype.registerOnChange = function(fn) {
                this.onChange = fn;
            }, TriSwitchComponent.prototype.registerOnTouched = function(fn) {
                this.onTouched = fn;
            }, TriSwitchComponent.prototype.setDisabledState = function(isDisabled) {
                this.disabled = isDisabled, this.changeDetectorRef.markForCheck();
            }, TriSwitchComponent.prototype.focus = function(options, origin) {
                origin ? this.focusMonitor.focusVia(this.inputElement, origin, options) : this.inputElement.nativeElement.focus(options);
            }, TriSwitchComponent.prototype.emitChangeEvent = function() {
                this.onChange(this.checked), this.listenValueChange.emit(new TriSwitchChange(this, this.checked));
            }, TriSwitchComponent.\u0275fac = function(t) {
                return new (t || TriSwitchComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275directiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275directiveInject"](_angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_2__.tE), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275directiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectorRef));
            }, TriSwitchComponent.\u0275cmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275defineComponent"]({
                type: TriSwitchComponent,
                selectors: [ [ "tri-switch" ] ],
                viewQuery: function(rf, ctx) {
                    var _t;
                    1 & rf && _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275viewQuery"](_c0, 5), 
                    2 & rf && _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275queryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275loadQuery"]()) && (ctx.inputElement = _t.first);
                },
                hostAttrs: [ 1, "tri-switch" ],
                hostVars: 10,
                hostBindings: function(rf, ctx) {
                    2 & rf && (_angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275hostProperty"]("id", ctx.id), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275attribute"]("tabindex", ctx.disabled ? null : -1)("aria-label", null)("aria-labelledby", null), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275classProp"]("compact", ctx.compact)("checked", ctx.checked)("disabled", ctx.disabled));
                },
                inputs: {
                    name: "name",
                    id: "id",
                    ariaLabel: [ "aria-label", "ariaLabel" ],
                    ariaLabelledby: [ "aria-labelledby", "ariaLabelledby" ],
                    ariaDescribedby: [ "aria-describedby", "ariaDescribedby" ],
                    label: "label",
                    disabled: "disabled",
                    required: "required",
                    checked: "checked",
                    indeterminate: "indeterminate",
                    compact: "compact"
                },
                outputs: {
                    listenValueChange: "listenValueChange",
                    toggleChange: "toggleChange"
                },
                exportAs: [ "triSwitch" ],
                features: [ _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275ProvidersFeature"]([ {
                    provide: _angular_forms__WEBPACK_IMPORTED_MODULE_3__.JU,
                    useExisting: (0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(function() {
                        return TriSwitchComponent;
                    }),
                    multi: !0
                } ]) ],
                ngContentSelectors: _c2,
                decls: 9,
                vars: 17,
                consts: [ [ "aria-hidden", "true", "class", "tri-switch-label", 4, "ngIf" ], [ 1, "tri-switch-internal" ], [ "type", "checkbox", "role", "checkbox", 1, "tri-switch-input", "cdk-visually-hidden", 3, "id", "checked", "indeterminate", "disabled", "required", "change", "click", "keydown.enter" ], [ "switchInput", "" ], [ "class", "tri-switch-circle", 4, "ngIf" ], [ "class", "tri-switch-rect", 4, "ngIf" ], [ "aria-hidden", "true", 1, "tri-switch-text" ], [ "aria-hidden", "true", 1, "tri-switch-label" ], [ 1, "tri-switch-circle" ], [ "aria-hidden", "true", 1, "tri-switch-checkmark" ], [ "class", "tri-toggle-inner-text", 4, "ngIf" ], [ 1, "tri-toggle-inner-text" ], [ 1, "tri-switch-rect" ], [ "aria-hidden", "true", 1, "tri-switch-dash" ] ],
                template: function(rf, ctx) {
                    1 & rf && (_angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275projectionDef"](_c1), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275template"](0, TriSwitchComponent_span_0_Template, 2, 1, "span", 0), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementStart"](1, "label", 1)(2, "input", 2, 3), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275listener"]("change", function($event) {
                        return ctx.onInputChange($event, !1);
                    })("click", function($event) {
                        return ctx.onInputClick($event);
                    })("keydown.enter", function($event) {
                        return ctx.onInputChange($event, !0);
                    }), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementEnd"](), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementStart"](4, "section"), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275template"](5, TriSwitchComponent_div_5_Template, 3, 1, "div", 4), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275template"](6, TriSwitchComponent_div_6_Template, 2, 0, "div", 5), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementStart"](7, "span", 6), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275projection"](8), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275elementEnd"]()()()), 
                    2 & rf && (_angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275property"]("ngIf", ctx.label), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275advance"](1), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275classProp"]("disabled", ctx.disabled)("indeterminate", ctx.indeterminate), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275attribute"]("for", ctx.inputId), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275advance"](1), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275property"]("id", ctx.inputId)("checked", ctx.checked && !ctx.indeterminate)("indeterminate", ctx.indeterminate)("disabled", ctx.disabled)("required", ctx.required), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275attribute"]("name", ctx.name)("aria-label", ctx.ariaLabel || ctx.label)("aria-labelledby", ctx.ariaLabelledby)("aria-describedby", ctx.ariaDescribedby), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275advance"](3), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275property"]("ngIf", !ctx.indeterminate), 
                    _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275advance"](1), _angular_core__WEBPACK_IMPORTED_MODULE_0__["\u0275\u0275property"]("ngIf", ctx.indeterminate));
                },
                dependencies: [ _angular_common__WEBPACK_IMPORTED_MODULE_4__.NgIf ],
                styles: [ '.compact[_nghost-%COMP%]   .tri-switch-circle[_ngcontent-%COMP%], .compact[_nghost-%COMP%]   .tri-switch-rect[_ngcontent-%COMP%]{width:32px;height:16px}.compact[_nghost-%COMP%]   .tri-switch-label[_ngcontent-%COMP%]{font-family:var(--fontFamilyBase);font-size:var(--fontSizeBase200);font-weight:400;margin-bottom:8px}.compact[_nghost-%COMP%]   .tri-switch-text[_ngcontent-%COMP%]{font-size:var(--fontSizeBase200);line-height:16px}.compact[_nghost-%COMP%]   .tri-switch-checkmark[_ngcontent-%COMP%]{width:8px;height:8px}.compact[_nghost-%COMP%]   .tri-switch-dash[_ngcontent-%COMP%]{width:8px;height:2px}.compact[_nghost-%COMP%]   .tri-toggle-inner-text[_ngcontent-%COMP%]{display:flex;font-family:var(--fontFamilyBase);font-size:9px}.compact[_nghost-%COMP%]   .tri-switch-internal[_ngcontent-%COMP%]:not(.disabled)   .tri-switch-input[_ngcontent-%COMP%] + section[_ngcontent-%COMP%]   .tri-toggle-inner-text[_ngcontent-%COMP%]{color:var(--colorNeutralForeground3)}.compact[_nghost-%COMP%]   .tri-switch-internal[_ngcontent-%COMP%]:not(.disabled)   .tri-switch-input[_ngcontent-%COMP%]:checked + section[_ngcontent-%COMP%]   .tri-toggle-inner-text[_ngcontent-%COMP%]{color:var(--colorNeutralForegroundOnBrand)}.compact[_nghost-%COMP%]   .tri-switch-internal[_ngcontent-%COMP%]:not(.disabled)   .tri-switch-rect[_ngcontent-%COMP%]{color:var(--colorNeutralForegroundInverted)}.compact[_nghost-%COMP%]   .tri-switch-internal[_ngcontent-%COMP%]:hover   .tri-switch-input[_ngcontent-%COMP%]:not(:checked) + section[_ngcontent-%COMP%]   .tri-toggle-inner-text[_ngcontent-%COMP%]{color:var(--colorNeutralForeground3)}.compact[_nghost-%COMP%]   .tri-switch-internal[_ngcontent-%COMP%]:hover   .tri-switch-rect[_ngcontent-%COMP%]{color:var(--colorNeutralForegroundInverted)}.compact[_nghost-%COMP%]   .tri-switch-internal.disabled[_ngcontent-%COMP%]   .tri-switch-input[_ngcontent-%COMP%]:not(:checked) + section[_ngcontent-%COMP%]   .tri-toggle-inner-text[_ngcontent-%COMP%]{color:var(--colorNeutralForegroundDisabled)}.compact[_nghost-%COMP%]   .tri-switch-internal.disabled[_ngcontent-%COMP%]   .tri-switch-rect[_ngcontent-%COMP%], .compact[_nghost-%COMP%]   .tri-switch-internal.disabled[_ngcontent-%COMP%]   .tri-switch-text[_ngcontent-%COMP%]{color:var(--colorNeutralForegroundDisabled)}  .tri-switch{display:inline-block;border:2px solid transparent}@media (forced-colors: active){  .tri-switch{border-color:transparent;forced-color-adjust:none}}  .tri-switch.cdk-keyboard-focused:focus-within{border:2px solid var(--colorNeutralStrokeFocus2);border-radius:var(--borderRadiusMedium)}.tri-switch-internal[_ngcontent-%COMP%]{cursor:pointer;display:flex;position:relative;padding:8px 0}.tri-switch-internal[_ngcontent-%COMP%]   section[_ngcontent-%COMP%]{align-items:center;display:flex}.tri-switch-internal[_ngcontent-%COMP%]   input[type=checkbox].tri-switch-input[_ngcontent-%COMP%]{position:absolute;width:0;height:0;opacity:0}.tri-switch-internal.disabled[_ngcontent-%COMP%]{color:var(--colorNeutralForegroundDisabled);cursor:default}.tri-switch-internal.disabled[_ngcontent-%COMP%]   .tri-switch-label[_ngcontent-%COMP%]{cursor:default}.tri-switch-internal.disabled[_ngcontent-%COMP%]   .tri-switch-checkmark[_ngcontent-%COMP%]{background-color:var(--colorNeutralForegroundDisabled)}.tri-switch-internal.disabled[_ngcontent-%COMP%]   .tri-switch-circle[_ngcontent-%COMP%]{border-color:var(--colorNeutralForegroundDisabled)}.tri-switch-internal.disabled[_ngcontent-%COMP%]   .tri-switch-input[_ngcontent-%COMP%]:checked + section[_ngcontent-%COMP%]   .tri-switch-checkmark[_ngcontent-%COMP%]{background-color:var(--colorNeutralForegroundDisabled)}.tri-switch-internal.disabled[_ngcontent-%COMP%]   .tri-switch-input[_ngcontent-%COMP%]:checked + section[_ngcontent-%COMP%]   .tri-switch-circle[_ngcontent-%COMP%]{background-color:var(--colorNeutralBackgroundDisabled);border-color:var(--colorNeutralBackgroundDisabled)}.tri-switch-internal[_ngcontent-%COMP%]:hover:not(.disabled)   .tri-switch-input[_ngcontent-%COMP%]:checked + section[_ngcontent-%COMP%]   .tri-switch-circle[_ngcontent-%COMP%]{border-color:transparent}.tri-switch-internal[_ngcontent-%COMP%]:hover:not(.disabled)   .tri-switch-checkmark[_ngcontent-%COMP%]{background-color:var(--colorNeutralForeground3Hover)}.tri-switch-internal[_ngcontent-%COMP%]:hover:not(.disabled)   .tri-switch-circle[_ngcontent-%COMP%]{border-color:var(--colorNeutralForeground3Hover)}.tri-switch-internal[_ngcontent-%COMP%]:not(.disabled)   .tri-switch-input[_ngcontent-%COMP%]:checked + section[_ngcontent-%COMP%]   .tri-switch-checkmark[_ngcontent-%COMP%]{background-color:var(--colorNeutralForegroundInverted)}.tri-switch-internal[_ngcontent-%COMP%]:not(.disabled)   .tri-switch-input[_ngcontent-%COMP%]:checked + section[_ngcontent-%COMP%]   .tri-switch-circle[_ngcontent-%COMP%]{background-color:var(--colorCompoundBrandBackground);border-color:var(--colorCompoundBrandStroke)}.tri-switch-internal[_ngcontent-%COMP%]:not(.disabled)   .tri-switch-input[_ngcontent-%COMP%]:checked + section[_ngcontent-%COMP%]   .tri-switch-rect[_ngcontent-%COMP%]{background-color:var(--colorCompoundBrandBackground);border-color:var(--colorCompoundBrandStroke)}.tri-switch-internal[_ngcontent-%COMP%]:not(.disabled)   .tri-switch-rect[_ngcontent-%COMP%]{background-color:var(--colorCompoundBrandBackground);border-color:var(--colorCompoundBrandStroke)}.tri-switch-internal[_ngcontent-%COMP%]:not(.disabled):hover   .tri-switch-input[_ngcontent-%COMP%]:checked + section[_ngcontent-%COMP%]   .tri-switch-circle[_ngcontent-%COMP%]{background-color:var(--colorBrandBackgroundHover);border-color:var(--colorCompoundBrandStroke)}.tri-switch-internal[_ngcontent-%COMP%]:not(.disabled):hover   .tri-switch-input[_ngcontent-%COMP%]:checked + section[_ngcontent-%COMP%]   .tri-switch-rect[_ngcontent-%COMP%]{background-color:var(--colorBrandBackgroundHover);border-color:var(--colorCompoundBrandStroke)}.tri-switch-internal[_ngcontent-%COMP%]:not(.disabled):active   .tri-switch-input[_ngcontent-%COMP%]:checked + section[_ngcontent-%COMP%]   .tri-switch-circle[_ngcontent-%COMP%]{background-color:var(--colorBrandBackgroundPressed);border-color:var(--colorBrandBackgroundPressed)}.tri-switch-internal[_ngcontent-%COMP%]:not(.disabled):active   .tri-switch-input[_ngcontent-%COMP%]:checked + section[_ngcontent-%COMP%]   .tri-switch-rect[_ngcontent-%COMP%]{background-color:var(--colorBrandBackgroundPressed);border-color:var(--colorBrandBackgroundPressed)}.tri-switch-internal[_ngcontent-%COMP%]:not(.disabled):focus{border:2px solid var(--colorNeutralStrokeFocus2);border-radius:var(--borderRadiusMedium)}.tri-switch-internal[_ngcontent-%COMP%]:not(.disabled):focus:after{border-radius:var(--borderRadiusSmall);border:1px solid var(--colorNeutralStrokeFocus1);content:"";display:block;height:calc(100% - 2px);width:calc(100% - 1px);position:absolute;left:0;bottom:0;top:0;right:0}.tri-switch-internal[_ngcontent-%COMP%]   .tri-switch-input[_ngcontent-%COMP%]:checked + section[_ngcontent-%COMP%]   .tri-switch-circle[_ngcontent-%COMP%]{flex-direction:row-reverse}.tri-switch-internal[_ngcontent-%COMP%]   .tri-switch-input[_ngcontent-%COMP%]{position:absolute}.tri-switch-circle[_ngcontent-%COMP%], .tri-switch-rect[_ngcontent-%COMP%]{display:flex;align-items:center;flex-direction:row;flex-shrink:0;justify-content:space-between;padding:2px 4px;width:40px;height:20px;border:1px solid var(--colorNeutralStrokeAccessible);border-radius:10px;box-sizing:border-box;transition-property:background,border,border-color;transition-duration:.2s;transition-timing-function:cubic-bezier(.4,0,.23,1);overflow:hidden;background:var(--colorNeutralBackground1)}  html[data-focus-source=key] .tri-switch-input:focus+section{outline-offset:2px}.tri-switch-label[_ngcontent-%COMP%]{font-family:var(--fontFamilyBase);font-size:var(--fontSizeBase300);font-weight:400;display:block;margin-bottom:12px}.tri-switch-text[_ngcontent-%COMP%]{font-family:var(--fontFamilyBase);font-size:var(--fontSizeBase300);color:var(--colorNeutralForeground1);line-height:20px;margin:0 0 0 12px}.tri-switch-checkmark[_ngcontent-%COMP%]{background-color:var(--colorNeutralForeground3);border-radius:50%;margin:2px 0;width:14px;height:14px}.tri-switch-dash[_ngcontent-%COMP%]{background-color:var(--colorNeutralForegroundInverted);border-radius:20%;margin:auto;width:14px;height:4px}' ],
                changeDetection: 0
            }), TriSwitchComponent;
        }();
    },
    30651: function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            Jy: function() {
                return TriSwitchModule;
            }
        });
        var common = __webpack_require__(77476), tri_svg_icon = __webpack_require__(17177), core = __webpack_require__(50423), TriSwitchModule = function() {
            function TriSwitchModule() {}
            return TriSwitchModule.\u0275fac = function(t) {
                return new (t || TriSwitchModule);
            }, TriSwitchModule.\u0275mod = core["\u0275\u0275defineNgModule"]({
                type: TriSwitchModule
            }), TriSwitchModule.\u0275inj = core["\u0275\u0275defineInjector"]({
                imports: [ common.CommonModule, tri_svg_icon.T6 ]
            }), TriSwitchModule;
        }();
    },
    75662: function(module, __unused_webpack_exports, __webpack_require__) {
        var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ = __webpack_require__(51968), ___CSS_LOADER_EXPORT___ = __webpack_require__(20806)(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);
        ___CSS_LOADER_EXPORT___.push([ module.id, "", "" ]), module.exports = ___CSS_LOADER_EXPORT___;
    },
    90802: function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            iZ: function() {
                return MatLegacySlideToggle;
            },
            Wd: function() {
                return MatLegacySlideToggleModule;
            }
        });
        var _MatSlideToggleBase2, _MatSlideToggle, _MatSlideToggleRequiredValidator, _MatSlideToggleRequiredValidatorModule2, _MatSlideToggleModule, inheritsLoose = __webpack_require__(37419), observers = __webpack_require__(30679), core = __webpack_require__(50423), fesm2022_core = __webpack_require__(48138), a11y = __webpack_require__(51193), fesm2022_forms = __webpack_require__(17174), createClass = __webpack_require__(90341), coercion = __webpack_require__(4437), common = __webpack_require__(77476), _c0 = [ "switch" ];
        function _MatSlideToggle_div_10_Template(rf, ctx) {
            1 & rf && (core["\u0275\u0275elementStart"](0, "div", 12), core["\u0275\u0275namespaceSVG"](), 
            core["\u0275\u0275elementStart"](1, "svg", 13), core["\u0275\u0275element"](2, "path", 14), 
            core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](3, "svg", 15), 
            core["\u0275\u0275element"](4, "path", 16), core["\u0275\u0275elementEnd"]()());
        }
        var MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS = new core.InjectionToken("mat-slide-toggle-default-options", {
            providedIn: "root",
            factory: function() {
                return {
                    disableToggleValue: !1,
                    hideIcon: !1
                };
            }
        }), MAT_SLIDE_TOGGLE_VALUE_ACCESSOR = {
            provide: fesm2022_forms.JU,
            useExisting: (0, core.forwardRef)(function() {
                return MatSlideToggle;
            }),
            multi: !0
        }, MatSlideToggleChange = function(source, checked) {
            this.source = source, this.checked = checked;
        }, nextUniqueId = 0, _MatSlideToggleBase = function(_MatSlideToggleMixinB) {
            function _MatSlideToggleBase(elementRef, _focusMonitor, _changeDetectorRef, tabIndex, defaults, animationMode, idPrefix) {
                var _defaults$hideIcon, _this;
                return (_this = _MatSlideToggleMixinB.call(this, elementRef) || this)._focusMonitor = _focusMonitor, 
                _this._changeDetectorRef = _changeDetectorRef, _this.defaults = defaults, _this._onChange = function(_) {}, 
                _this._onTouched = function() {}, _this._required = !1, _this._checked = !1, _this.name = null, 
                _this.labelPosition = "after", _this.ariaLabel = null, _this.ariaLabelledby = null, 
                _this._hideIcon = !1, _this.change = new core.EventEmitter, _this.toggleChange = new core.EventEmitter, 
                _this.tabIndex = parseInt(tabIndex) || 0, _this.color = _this.defaultColor = defaults.color || "accent", 
                _this._noopAnimations = "NoopAnimations" === animationMode, _this.id = _this._uniqueId = "" + idPrefix + ++nextUniqueId, 
                _this._hideIcon = null != (_defaults$hideIcon = defaults.hideIcon) && _defaults$hideIcon, 
                _this;
            }
            (0, inheritsLoose.Z)(_MatSlideToggleBase, _MatSlideToggleMixinB);
            var _proto = _MatSlideToggleBase.prototype;
            return _proto.ngAfterContentInit = function() {
                var _this2 = this;
                this._focusMonitor.monitor(this._elementRef, !0).subscribe(function(focusOrigin) {
                    "keyboard" === focusOrigin || "program" === focusOrigin ? (_this2._focused = !0, 
                    _this2._changeDetectorRef.markForCheck()) : focusOrigin || Promise.resolve().then(function() {
                        _this2._focused = !1, _this2._onTouched(), _this2._changeDetectorRef.markForCheck();
                    });
                });
            }, _proto.ngOnDestroy = function() {
                this._focusMonitor.stopMonitoring(this._elementRef);
            }, _proto.writeValue = function(value) {
                this.checked = !!value;
            }, _proto.registerOnChange = function(fn) {
                this._onChange = fn;
            }, _proto.registerOnTouched = function(fn) {
                this._onTouched = fn;
            }, _proto.setDisabledState = function(isDisabled) {
                this.disabled = isDisabled, this._changeDetectorRef.markForCheck();
            }, _proto.toggle = function() {
                this.checked = !this.checked, this._onChange(this.checked);
            }, _proto._emitChangeEvent = function() {
                this._onChange(this.checked), this.change.emit(this._createChangeEvent(this.checked));
            }, (0, createClass.Z)(_MatSlideToggleBase, [ {
                key: "required",
                get: function() {
                    return this._required;
                },
                set: function(value) {
                    this._required = (0, coercion.Ig)(value);
                }
            }, {
                key: "checked",
                get: function() {
                    return this._checked;
                },
                set: function(value) {
                    this._checked = (0, coercion.Ig)(value), this._changeDetectorRef.markForCheck();
                }
            }, {
                key: "hideIcon",
                get: function() {
                    return this._hideIcon;
                },
                set: function(value) {
                    this._hideIcon = (0, coercion.Ig)(value);
                }
            }, {
                key: "inputId",
                get: function() {
                    return (this.id || this._uniqueId) + "-input";
                }
            } ]), _MatSlideToggleBase;
        }((0, fesm2022_core.sb)((0, fesm2022_core.pj)((0, fesm2022_core.Kr)((0, fesm2022_core.Id)(function() {
            return function(_elementRef) {
                this._elementRef = _elementRef;
            };
        }())))));
        (_MatSlideToggleBase2 = _MatSlideToggleBase).\u0275fac = function(t) {
            core["\u0275\u0275invalidFactory"]();
        }, _MatSlideToggleBase2.\u0275dir = core["\u0275\u0275defineDirective"]({
            type: _MatSlideToggleBase2,
            inputs: {
                name: "name",
                id: "id",
                labelPosition: "labelPosition",
                ariaLabel: [ "aria-label", "ariaLabel" ],
                ariaLabelledby: [ "aria-labelledby", "ariaLabelledby" ],
                ariaDescribedby: [ "aria-describedby", "ariaDescribedby" ],
                required: "required",
                checked: "checked",
                hideIcon: "hideIcon"
            },
            outputs: {
                change: "change",
                toggleChange: "toggleChange"
            },
            features: [ core["\u0275\u0275InheritDefinitionFeature"] ]
        });
        var MatSlideToggle = function(_MatSlideToggleBase3) {
            function MatSlideToggle(elementRef, focusMonitor, changeDetectorRef, tabIndex, defaults, animationMode) {
                var _this3;
                return (_this3 = _MatSlideToggleBase3.call(this, elementRef, focusMonitor, changeDetectorRef, tabIndex, defaults, animationMode, "mat-mdc-slide-toggle-") || this)._labelId = _this3._uniqueId + "-label", 
                _this3;
            }
            (0, inheritsLoose.Z)(MatSlideToggle, _MatSlideToggleBase3);
            var _proto2 = MatSlideToggle.prototype;
            return _proto2._handleClick = function() {
                this.toggleChange.emit(), this.defaults.disableToggleValue || (this.checked = !this.checked, 
                this._onChange(this.checked), this.change.emit(new MatSlideToggleChange(this, this.checked)));
            }, _proto2.focus = function() {
                this._switchElement.nativeElement.focus();
            }, _proto2._createChangeEvent = function(isChecked) {
                return new MatSlideToggleChange(this, isChecked);
            }, _proto2._getAriaLabelledBy = function() {
                return this.ariaLabelledby ? this.ariaLabelledby : this.ariaLabel ? null : this._labelId;
            }, (0, createClass.Z)(MatSlideToggle, [ {
                key: "buttonId",
                get: function() {
                    return (this.id || this._uniqueId) + "-button";
                }
            } ]), MatSlideToggle;
        }(_MatSlideToggleBase);
        (_MatSlideToggle = MatSlideToggle).\u0275fac = function(t) {
            return new (t || _MatSlideToggle)(core["\u0275\u0275directiveInject"](core.ElementRef), core["\u0275\u0275directiveInject"](a11y.tE), core["\u0275\u0275directiveInject"](core.ChangeDetectorRef), core["\u0275\u0275injectAttribute"]("tabindex"), core["\u0275\u0275directiveInject"](MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS), core["\u0275\u0275directiveInject"](core.ANIMATION_MODULE_TYPE, 8));
        }, _MatSlideToggle.\u0275cmp = core["\u0275\u0275defineComponent"]({
            type: _MatSlideToggle,
            selectors: [ [ "mat-slide-toggle" ] ],
            viewQuery: function(rf, ctx) {
                var _t;
                1 & rf && core["\u0275\u0275viewQuery"](_c0, 5), 2 & rf && core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx._switchElement = _t.first);
            },
            hostAttrs: [ 1, "mat-mdc-slide-toggle" ],
            hostVars: 11,
            hostBindings: function(rf, ctx) {
                2 & rf && (core["\u0275\u0275hostProperty"]("id", ctx.id), core["\u0275\u0275attribute"]("tabindex", null)("aria-label", null)("name", null)("aria-labelledby", null), 
                core["\u0275\u0275classProp"]("mat-mdc-slide-toggle-focused", ctx._focused)("mat-mdc-slide-toggle-checked", ctx.checked)("_mat-animation-noopable", ctx._noopAnimations));
            },
            inputs: {
                disabled: "disabled",
                disableRipple: "disableRipple",
                color: "color",
                tabIndex: "tabIndex"
            },
            exportAs: [ "matSlideToggle" ],
            features: [ core["\u0275\u0275ProvidersFeature"]([ MAT_SLIDE_TOGGLE_VALUE_ACCESSOR ]), core["\u0275\u0275InheritDefinitionFeature"] ],
            ngContentSelectors: [ "*" ],
            decls: 13,
            vars: 25,
            consts: [ [ 1, "mdc-form-field" ], [ "role", "switch", "type", "button", 1, "mdc-switch", 3, "tabIndex", "disabled", "click" ], [ "switch", "" ], [ 1, "mdc-switch__track" ], [ 1, "mdc-switch__handle-track" ], [ 1, "mdc-switch__handle" ], [ 1, "mdc-switch__shadow" ], [ 1, "mdc-elevation-overlay" ], [ 1, "mdc-switch__ripple" ], [ "mat-ripple", "", 1, "mat-mdc-slide-toggle-ripple", "mat-mdc-focus-indicator", 3, "matRippleTrigger", "matRippleDisabled", "matRippleCentered" ], [ "class", "mdc-switch__icons", 4, "ngIf" ], [ 1, "mdc-label", 3, "for", "click" ], [ 1, "mdc-switch__icons" ], [ "viewBox", "0 0 24 24", "aria-hidden", "true", 1, "mdc-switch__icon", "mdc-switch__icon--on" ], [ "d", "M19.69,5.23L8.96,15.96l-4.23-4.23L2.96,13.5l6,6L21.46,7L19.69,5.23z" ], [ "viewBox", "0 0 24 24", "aria-hidden", "true", 1, "mdc-switch__icon", "mdc-switch__icon--off" ], [ "d", "M20 13H4v-2h16v2z" ] ],
            template: function(rf, ctx) {
                if (1 & rf && (core["\u0275\u0275projectionDef"](), core["\u0275\u0275elementStart"](0, "div", 0)(1, "button", 1, 2), 
                core["\u0275\u0275listener"]("click", function() {
                    return ctx._handleClick();
                }), core["\u0275\u0275element"](3, "div", 3), core["\u0275\u0275elementStart"](4, "div", 4)(5, "div", 5)(6, "div", 6), 
                core["\u0275\u0275element"](7, "div", 7), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](8, "div", 8), 
                core["\u0275\u0275element"](9, "div", 9), core["\u0275\u0275elementEnd"](), core["\u0275\u0275template"](10, _MatSlideToggle_div_10_Template, 5, 0, "div", 10), 
                core["\u0275\u0275elementEnd"]()()(), core["\u0275\u0275elementStart"](11, "label", 11), 
                core["\u0275\u0275listener"]("click", function($event) {
                    return $event.stopPropagation();
                }), core["\u0275\u0275projection"](12), core["\u0275\u0275elementEnd"]()()), 2 & rf) {
                    var _r0 = core["\u0275\u0275reference"](2);
                    core["\u0275\u0275classProp"]("mdc-form-field--align-end", "before" == ctx.labelPosition), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275classProp"]("mdc-switch--selected", ctx.checked)("mdc-switch--unselected", !ctx.checked)("mdc-switch--checked", ctx.checked)("mdc-switch--disabled", ctx.disabled), 
                    core["\u0275\u0275property"]("tabIndex", ctx.tabIndex)("disabled", ctx.disabled), 
                    core["\u0275\u0275attribute"]("id", ctx.buttonId)("name", ctx.name)("aria-label", ctx.ariaLabel)("aria-labelledby", ctx._getAriaLabelledBy())("aria-describedby", ctx.ariaDescribedby)("aria-required", ctx.required || null)("aria-checked", ctx.checked), 
                    core["\u0275\u0275advance"](8), core["\u0275\u0275property"]("matRippleTrigger", _r0)("matRippleDisabled", ctx.disableRipple || ctx.disabled)("matRippleCentered", !0), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("ngIf", !ctx.hideIcon), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("for", ctx.buttonId), 
                    core["\u0275\u0275attribute"]("id", ctx._labelId);
                }
            },
            dependencies: [ fesm2022_core.wG, common.NgIf ],
            styles: [ '.mdc-form-field{display:inline-flex;align-items:center;vertical-align:middle}.mdc-form-field[hidden]{display:none}.mdc-form-field>label{margin-left:0;margin-right:auto;padding-left:4px;padding-right:0;order:0}[dir=rtl] .mdc-form-field>label,.mdc-form-field>label[dir=rtl]{margin-left:auto;margin-right:0}[dir=rtl] .mdc-form-field>label,.mdc-form-field>label[dir=rtl]{padding-left:0;padding-right:4px}.mdc-form-field--nowrap>label{text-overflow:ellipsis;overflow:hidden;white-space:nowrap}.mdc-form-field--align-end>label{margin-left:auto;margin-right:0;padding-left:0;padding-right:4px;order:-1}[dir=rtl] .mdc-form-field--align-end>label,.mdc-form-field--align-end>label[dir=rtl]{margin-left:0;margin-right:auto}[dir=rtl] .mdc-form-field--align-end>label,.mdc-form-field--align-end>label[dir=rtl]{padding-left:4px;padding-right:0}.mdc-form-field--space-between{justify-content:space-between}.mdc-form-field--space-between>label{margin:0}[dir=rtl] .mdc-form-field--space-between>label,.mdc-form-field--space-between>label[dir=rtl]{margin:0}.mdc-elevation-overlay{position:absolute;border-radius:inherit;pointer-events:none;opacity:var(--mdc-elevation-overlay-opacity);transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1);background-color:var(--mdc-elevation-overlay-color)}.mdc-switch{align-items:center;background:none;border:none;cursor:pointer;display:inline-flex;flex-shrink:0;margin:0;outline:none;overflow:visible;padding:0;position:relative}.mdc-switch[hidden]{display:none}.mdc-switch:disabled{cursor:default;pointer-events:none}.mdc-switch__track{overflow:hidden;position:relative;width:100%}.mdc-switch__track::before,.mdc-switch__track::after{border:1px solid rgba(0,0,0,0);border-radius:inherit;box-sizing:border-box;content:"";height:100%;left:0;position:absolute;width:100%}@media screen and (forced-colors: active){.mdc-switch__track::before,.mdc-switch__track::after{border-color:currentColor}}.mdc-switch__track::before{transition:transform 75ms 0ms cubic-bezier(0, 0, 0.2, 1);transform:translateX(0)}.mdc-switch__track::after{transition:transform 75ms 0ms cubic-bezier(0.4, 0, 0.6, 1);transform:translateX(-100%)}[dir=rtl] .mdc-switch__track::after,.mdc-switch__track[dir=rtl]::after{transform:translateX(100%)}.mdc-switch--selected .mdc-switch__track::before{transition:transform 75ms 0ms cubic-bezier(0.4, 0, 0.6, 1);transform:translateX(100%)}[dir=rtl] .mdc-switch--selected .mdc-switch__track::before,.mdc-switch--selected .mdc-switch__track[dir=rtl]::before{transform:translateX(-100%)}.mdc-switch--selected .mdc-switch__track::after{transition:transform 75ms 0ms cubic-bezier(0, 0, 0.2, 1);transform:translateX(0)}.mdc-switch__handle-track{height:100%;pointer-events:none;position:absolute;top:0;transition:transform 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);left:0;right:auto;transform:translateX(0)}[dir=rtl] .mdc-switch__handle-track,.mdc-switch__handle-track[dir=rtl]{left:auto;right:0}.mdc-switch--selected .mdc-switch__handle-track{transform:translateX(100%)}[dir=rtl] .mdc-switch--selected .mdc-switch__handle-track,.mdc-switch--selected .mdc-switch__handle-track[dir=rtl]{transform:translateX(-100%)}.mdc-switch__handle{display:flex;pointer-events:auto;position:absolute;top:50%;transform:translateY(-50%);left:0;right:auto}[dir=rtl] .mdc-switch__handle,.mdc-switch__handle[dir=rtl]{left:auto;right:0}.mdc-switch__handle::before,.mdc-switch__handle::after{border:1px solid rgba(0,0,0,0);border-radius:inherit;box-sizing:border-box;content:"";width:100%;height:100%;left:0;position:absolute;top:0;transition:background-color 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1),border-color 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);z-index:-1}@media screen and (forced-colors: active){.mdc-switch__handle::before,.mdc-switch__handle::after{border-color:currentColor}}.mdc-switch__shadow{border-radius:inherit;bottom:0;left:0;position:absolute;right:0;top:0}.mdc-elevation-overlay{bottom:0;left:0;right:0;top:0}.mdc-switch__ripple{left:50%;position:absolute;top:50%;transform:translate(-50%, -50%);z-index:-1}.mdc-switch:disabled .mdc-switch__ripple{display:none}.mdc-switch__icons{height:100%;position:relative;width:100%;z-index:1}.mdc-switch__icon{bottom:0;left:0;margin:auto;position:absolute;right:0;top:0;opacity:0;transition:opacity 30ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-switch--selected .mdc-switch__icon--on,.mdc-switch--unselected .mdc-switch__icon--off{opacity:1;transition:opacity 45ms 30ms cubic-bezier(0, 0, 0.2, 1)}.mdc-switch{width:var(--mdc-switch-track-width);--mdc-switch-disabled-handle-opacity:0.38;--mdc-switch-disabled-selected-icon-opacity:0.38;--mdc-switch-disabled-track-opacity:0.12;--mdc-switch-disabled-unselected-icon-opacity:0.38;--mdc-switch-handle-height:20px;--mdc-switch-handle-shape:10px;--mdc-switch-handle-width:20px;--mdc-switch-selected-icon-size:18px;--mdc-switch-track-height:14px;--mdc-switch-track-shape:7px;--mdc-switch-track-width:36px;--mdc-switch-unselected-icon-size:18px;--mdc-switch-state-layer-size:40px;--mdc-switch-selected-focus-state-layer-opacity:0.12;--mdc-switch-selected-hover-state-layer-opacity:0.04;--mdc-switch-selected-pressed-state-layer-opacity:0.1;--mdc-switch-unselected-focus-state-layer-opacity:0.12;--mdc-switch-unselected-hover-state-layer-opacity:0.04;--mdc-switch-unselected-pressed-state-layer-opacity:0.1}.mdc-switch.mdc-switch--selected:enabled .mdc-switch__handle::after{background:var(--mdc-switch-selected-handle-color)}.mdc-switch.mdc-switch--selected:enabled:hover:not(:focus):not(:active) .mdc-switch__handle::after{background:var(--mdc-switch-selected-hover-handle-color)}.mdc-switch.mdc-switch--selected:enabled:focus:not(:active) .mdc-switch__handle::after{background:var(--mdc-switch-selected-focus-handle-color)}.mdc-switch.mdc-switch--selected:enabled:active .mdc-switch__handle::after{background:var(--mdc-switch-selected-pressed-handle-color)}.mdc-switch.mdc-switch--selected:disabled .mdc-switch__handle::after{background:var(--mdc-switch-disabled-selected-handle-color)}.mdc-switch.mdc-switch--unselected:enabled .mdc-switch__handle::after{background:var(--mdc-switch-unselected-handle-color)}.mdc-switch.mdc-switch--unselected:enabled:hover:not(:focus):not(:active) .mdc-switch__handle::after{background:var(--mdc-switch-unselected-hover-handle-color)}.mdc-switch.mdc-switch--unselected:enabled:focus:not(:active) .mdc-switch__handle::after{background:var(--mdc-switch-unselected-focus-handle-color)}.mdc-switch.mdc-switch--unselected:enabled:active .mdc-switch__handle::after{background:var(--mdc-switch-unselected-pressed-handle-color)}.mdc-switch.mdc-switch--unselected:disabled .mdc-switch__handle::after{background:var(--mdc-switch-disabled-unselected-handle-color)}.mdc-switch .mdc-switch__handle::before{background:var(--mdc-switch-handle-surface-color)}.mdc-switch:enabled .mdc-switch__shadow{box-shadow:var(--mdc-switch-handle-elevation)}.mdc-switch:disabled .mdc-switch__shadow{box-shadow:var(--mdc-switch-disabled-handle-elevation)}.mdc-switch .mdc-switch__focus-ring-wrapper,.mdc-switch .mdc-switch__handle{height:var(--mdc-switch-handle-height)}.mdc-switch:disabled .mdc-switch__handle::after{opacity:var(--mdc-switch-disabled-handle-opacity)}.mdc-switch .mdc-switch__handle{border-radius:var(--mdc-switch-handle-shape)}.mdc-switch .mdc-switch__handle{width:var(--mdc-switch-handle-width)}.mdc-switch .mdc-switch__handle-track{width:calc(100% - var(--mdc-switch-handle-width))}.mdc-switch.mdc-switch--selected:enabled .mdc-switch__icon{fill:var(--mdc-switch-selected-icon-color)}.mdc-switch.mdc-switch--selected:disabled .mdc-switch__icon{fill:var(--mdc-switch-disabled-selected-icon-color)}.mdc-switch.mdc-switch--unselected:enabled .mdc-switch__icon{fill:var(--mdc-switch-unselected-icon-color)}.mdc-switch.mdc-switch--unselected:disabled .mdc-switch__icon{fill:var(--mdc-switch-disabled-unselected-icon-color)}.mdc-switch.mdc-switch--selected:disabled .mdc-switch__icons{opacity:var(--mdc-switch-disabled-selected-icon-opacity)}.mdc-switch.mdc-switch--unselected:disabled .mdc-switch__icons{opacity:var(--mdc-switch-disabled-unselected-icon-opacity)}.mdc-switch.mdc-switch--selected .mdc-switch__icon{width:var(--mdc-switch-selected-icon-size);height:var(--mdc-switch-selected-icon-size)}.mdc-switch.mdc-switch--unselected .mdc-switch__icon{width:var(--mdc-switch-unselected-icon-size);height:var(--mdc-switch-unselected-icon-size)}.mdc-switch.mdc-switch--selected:enabled:hover:not(:focus) .mdc-switch__ripple::before,.mdc-switch.mdc-switch--selected:enabled:hover:not(:focus) .mdc-switch__ripple::after{background-color:var(--mdc-switch-selected-hover-state-layer-color)}.mdc-switch.mdc-switch--selected:enabled:focus .mdc-switch__ripple::before,.mdc-switch.mdc-switch--selected:enabled:focus .mdc-switch__ripple::after{background-color:var(--mdc-switch-selected-focus-state-layer-color)}.mdc-switch.mdc-switch--selected:enabled:active .mdc-switch__ripple::before,.mdc-switch.mdc-switch--selected:enabled:active .mdc-switch__ripple::after{background-color:var(--mdc-switch-selected-pressed-state-layer-color)}.mdc-switch.mdc-switch--unselected:enabled:hover:not(:focus) .mdc-switch__ripple::before,.mdc-switch.mdc-switch--unselected:enabled:hover:not(:focus) .mdc-switch__ripple::after{background-color:var(--mdc-switch-unselected-hover-state-layer-color)}.mdc-switch.mdc-switch--unselected:enabled:focus .mdc-switch__ripple::before,.mdc-switch.mdc-switch--unselected:enabled:focus .mdc-switch__ripple::after{background-color:var(--mdc-switch-unselected-focus-state-layer-color)}.mdc-switch.mdc-switch--unselected:enabled:active .mdc-switch__ripple::before,.mdc-switch.mdc-switch--unselected:enabled:active .mdc-switch__ripple::after{background-color:var(--mdc-switch-unselected-pressed-state-layer-color)}.mdc-switch.mdc-switch--selected:enabled:hover:not(:focus):hover .mdc-switch__ripple::before,.mdc-switch.mdc-switch--selected:enabled:hover:not(:focus).mdc-ripple-surface--hover .mdc-switch__ripple::before{opacity:var(--mdc-switch-selected-hover-state-layer-opacity)}.mdc-switch.mdc-switch--selected:enabled:focus.mdc-ripple-upgraded--background-focused .mdc-switch__ripple::before,.mdc-switch.mdc-switch--selected:enabled:focus:not(.mdc-ripple-upgraded):focus .mdc-switch__ripple::before{transition-duration:75ms;opacity:var(--mdc-switch-selected-focus-state-layer-opacity)}.mdc-switch.mdc-switch--selected:enabled:active:not(.mdc-ripple-upgraded) .mdc-switch__ripple::after{transition:opacity 150ms linear}.mdc-switch.mdc-switch--selected:enabled:active:not(.mdc-ripple-upgraded):active .mdc-switch__ripple::after{transition-duration:75ms;opacity:var(--mdc-switch-selected-pressed-state-layer-opacity)}.mdc-switch.mdc-switch--selected:enabled:active.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-switch-selected-pressed-state-layer-opacity)}.mdc-switch.mdc-switch--unselected:enabled:hover:not(:focus):hover .mdc-switch__ripple::before,.mdc-switch.mdc-switch--unselected:enabled:hover:not(:focus).mdc-ripple-surface--hover .mdc-switch__ripple::before{opacity:var(--mdc-switch-unselected-hover-state-layer-opacity)}.mdc-switch.mdc-switch--unselected:enabled:focus.mdc-ripple-upgraded--background-focused .mdc-switch__ripple::before,.mdc-switch.mdc-switch--unselected:enabled:focus:not(.mdc-ripple-upgraded):focus .mdc-switch__ripple::before{transition-duration:75ms;opacity:var(--mdc-switch-unselected-focus-state-layer-opacity)}.mdc-switch.mdc-switch--unselected:enabled:active:not(.mdc-ripple-upgraded) .mdc-switch__ripple::after{transition:opacity 150ms linear}.mdc-switch.mdc-switch--unselected:enabled:active:not(.mdc-ripple-upgraded):active .mdc-switch__ripple::after{transition-duration:75ms;opacity:var(--mdc-switch-unselected-pressed-state-layer-opacity)}.mdc-switch.mdc-switch--unselected:enabled:active.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-switch-unselected-pressed-state-layer-opacity)}.mdc-switch .mdc-switch__ripple{height:var(--mdc-switch-state-layer-size);width:var(--mdc-switch-state-layer-size)}.mdc-switch .mdc-switch__track{height:var(--mdc-switch-track-height)}.mdc-switch:disabled .mdc-switch__track{opacity:var(--mdc-switch-disabled-track-opacity)}.mdc-switch:enabled .mdc-switch__track::after{background:var(--mdc-switch-selected-track-color)}.mdc-switch:enabled:hover:not(:focus):not(:active) .mdc-switch__track::after{background:var(--mdc-switch-selected-hover-track-color)}.mdc-switch:enabled:focus:not(:active) .mdc-switch__track::after{background:var(--mdc-switch-selected-focus-track-color)}.mdc-switch:enabled:active .mdc-switch__track::after{background:var(--mdc-switch-selected-pressed-track-color)}.mdc-switch:disabled .mdc-switch__track::after{background:var(--mdc-switch-disabled-selected-track-color)}.mdc-switch:enabled .mdc-switch__track::before{background:var(--mdc-switch-unselected-track-color)}.mdc-switch:enabled:hover:not(:focus):not(:active) .mdc-switch__track::before{background:var(--mdc-switch-unselected-hover-track-color)}.mdc-switch:enabled:focus:not(:active) .mdc-switch__track::before{background:var(--mdc-switch-unselected-focus-track-color)}.mdc-switch:enabled:active .mdc-switch__track::before{background:var(--mdc-switch-unselected-pressed-track-color)}.mdc-switch:disabled .mdc-switch__track::before{background:var(--mdc-switch-disabled-unselected-track-color)}.mdc-switch .mdc-switch__track{border-radius:var(--mdc-switch-track-shape)}.mdc-switch:enabled .mdc-switch__shadow{box-shadow:var(--mdc-switch-handle-elevation-shadow)}.mdc-switch:disabled .mdc-switch__shadow{box-shadow:var(--mdc-switch-disabled-handle-elevation-shadow)}.mat-mdc-slide-toggle .mdc-label{font-family:var(--mat-slide-toggle-label-text-font);font-size:var(--mat-slide-toggle-label-text-size);letter-spacing:var(--mat-slide-toggle-label-text-tracking);line-height:var(--mat-slide-toggle-label-text-line-height);font-weight:var(--mat-slide-toggle-label-text-weight)}.mat-mdc-slide-toggle{display:inline-block;-webkit-tap-highlight-color:rgba(0,0,0,0);outline:0}.mat-mdc-slide-toggle .mat-mdc-slide-toggle-ripple,.mat-mdc-slide-toggle .mdc-switch__ripple::after{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:50%;pointer-events:none}.mat-mdc-slide-toggle .mat-mdc-slide-toggle-ripple:not(:empty),.mat-mdc-slide-toggle .mdc-switch__ripple::after:not(:empty){transform:translateZ(0)}.mat-mdc-slide-toggle .mdc-switch__ripple::after{content:"";opacity:0}.mat-mdc-slide-toggle .mdc-switch:hover .mdc-switch__ripple::after{opacity:.04;transition:opacity 75ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-slide-toggle.mat-mdc-slide-toggle-focused .mdc-switch .mdc-switch__ripple::after{opacity:.12}.mat-mdc-slide-toggle.mat-mdc-slide-toggle-focused .mat-mdc-focus-indicator::before{content:""}.mat-mdc-slide-toggle .mat-ripple-element{opacity:.12}.mat-mdc-slide-toggle .mat-mdc-focus-indicator::before{border-radius:50%}.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__handle-track,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-elevation-overlay,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__icon,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__handle::before,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__handle::after,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__track::before,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__track::after{transition:none}.mat-mdc-slide-toggle .mdc-switch:enabled+.mdc-label{cursor:pointer}' ],
            encapsulation: 2,
            changeDetection: 0
        });
        var MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR = {
            provide: fesm2022_forms.Cf,
            useExisting: (0, core.forwardRef)(function() {
                return MatSlideToggleRequiredValidator;
            }),
            multi: !0
        }, MatSlideToggleRequiredValidator = function(_CheckboxRequiredVali) {
            function MatSlideToggleRequiredValidator() {
                return _CheckboxRequiredVali.apply(this, arguments) || this;
            }
            return (0, inheritsLoose.Z)(MatSlideToggleRequiredValidator, _CheckboxRequiredVali), 
            MatSlideToggleRequiredValidator;
        }(fesm2022_forms.Zs);
        (_MatSlideToggleRequiredValidator = MatSlideToggleRequiredValidator).\u0275fac = function() {
            var \u0275_MatSlideToggleRequiredValidator_BaseFactory;
            return function(t) {
                return (\u0275_MatSlideToggleRequiredValidator_BaseFactory || (\u0275_MatSlideToggleRequiredValidator_BaseFactory = core["\u0275\u0275getInheritedFactory"](_MatSlideToggleRequiredValidator)))(t || _MatSlideToggleRequiredValidator);
            };
        }(), _MatSlideToggleRequiredValidator.\u0275dir = core["\u0275\u0275defineDirective"]({
            type: _MatSlideToggleRequiredValidator,
            selectors: [ [ "mat-slide-toggle", "required", "", "formControlName", "" ], [ "mat-slide-toggle", "required", "", "formControl", "" ], [ "mat-slide-toggle", "required", "", "ngModel", "" ] ],
            features: [ core["\u0275\u0275ProvidersFeature"]([ MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR ]), core["\u0275\u0275InheritDefinitionFeature"] ]
        });
        var _MatLegacySlideToggle, _MatLegacySlideToggleModule, _MatSlideToggleRequiredValidatorModule = function() {};
        (_MatSlideToggleRequiredValidatorModule2 = _MatSlideToggleRequiredValidatorModule).\u0275fac = function(t) {
            return new (t || _MatSlideToggleRequiredValidatorModule2);
        }, _MatSlideToggleRequiredValidatorModule2.\u0275mod = core["\u0275\u0275defineNgModule"]({
            type: _MatSlideToggleRequiredValidatorModule2
        }), _MatSlideToggleRequiredValidatorModule2.\u0275inj = core["\u0275\u0275defineInjector"]({}), 
        (_MatSlideToggleModule = function() {}).\u0275fac = function(t) {
            return new (t || _MatSlideToggleModule);
        }, _MatSlideToggleModule.\u0275mod = core["\u0275\u0275defineNgModule"]({
            type: _MatSlideToggleModule
        }), _MatSlideToggleModule.\u0275inj = core["\u0275\u0275defineInjector"]({
            imports: [ _MatSlideToggleRequiredValidatorModule, fesm2022_core.BQ, fesm2022_core.si, common.CommonModule, _MatSlideToggleRequiredValidatorModule, fesm2022_core.BQ ]
        });
        var legacy_slide_toggle_c0 = [ "input" ], legacy_slide_toggle_c1 = function(a0) {
            return {
                enterDuration: a0
            };
        }, MAT_LEGACY_SLIDE_TOGGLE_DEFAULT_OPTIONS = new core.InjectionToken("mat-slide-toggle-default-options", {
            providedIn: "root",
            factory: function() {
                return {
                    disableToggleValue: !1
                };
            }
        }), MAT_LEGACY_SLIDE_TOGGLE_VALUE_ACCESSOR = {
            provide: fesm2022_forms.JU,
            useExisting: (0, core.forwardRef)(function() {
                return MatLegacySlideToggle;
            }),
            multi: !0
        }, MatLegacySlideToggleChange = function(source, checked) {
            this.source = source, this.checked = checked;
        }, MatLegacySlideToggle = function(_MatSlideToggleBase2) {
            function MatLegacySlideToggle(elementRef, focusMonitor, changeDetectorRef, tabIndex, defaults, animationMode) {
                return _MatSlideToggleBase2.call(this, elementRef, focusMonitor, changeDetectorRef, tabIndex, defaults, animationMode, "mat-slide-toggle-") || this;
            }
            (0, inheritsLoose.Z)(MatLegacySlideToggle, _MatSlideToggleBase2);
            var _proto = MatLegacySlideToggle.prototype;
            return _proto._createChangeEvent = function(isChecked) {
                return new MatLegacySlideToggleChange(this, isChecked);
            }, _proto._onChangeEvent = function(event) {
                event.stopPropagation(), this.toggleChange.emit(), this.defaults.disableToggleValue ? this._inputElement.nativeElement.checked = this.checked : (this.checked = this._inputElement.nativeElement.checked, 
                this._emitChangeEvent());
            }, _proto._onInputClick = function(event) {
                event.stopPropagation();
            }, _proto.focus = function(options, origin) {
                origin ? this._focusMonitor.focusVia(this._inputElement, origin, options) : this._inputElement.nativeElement.focus(options);
            }, _proto._onLabelTextChange = function() {
                this._changeDetectorRef.detectChanges();
            }, MatLegacySlideToggle;
        }(_MatSlideToggleBase);
        (_MatLegacySlideToggle = MatLegacySlideToggle).\u0275fac = function(t) {
            return new (t || _MatLegacySlideToggle)(core["\u0275\u0275directiveInject"](core.ElementRef), core["\u0275\u0275directiveInject"](a11y.tE), core["\u0275\u0275directiveInject"](core.ChangeDetectorRef), core["\u0275\u0275injectAttribute"]("tabindex"), core["\u0275\u0275directiveInject"](MAT_LEGACY_SLIDE_TOGGLE_DEFAULT_OPTIONS), core["\u0275\u0275directiveInject"](core.ANIMATION_MODULE_TYPE, 8));
        }, _MatLegacySlideToggle.\u0275cmp = core["\u0275\u0275defineComponent"]({
            type: _MatLegacySlideToggle,
            selectors: [ [ "mat-slide-toggle" ] ],
            viewQuery: function(rf, ctx) {
                var _t;
                1 & rf && core["\u0275\u0275viewQuery"](legacy_slide_toggle_c0, 5), 2 & rf && core["\u0275\u0275queryRefresh"](_t = core["\u0275\u0275loadQuery"]()) && (ctx._inputElement = _t.first);
            },
            hostAttrs: [ 1, "mat-slide-toggle" ],
            hostVars: 13,
            hostBindings: function(rf, ctx) {
                2 & rf && (core["\u0275\u0275hostProperty"]("id", ctx.id), core["\u0275\u0275attribute"]("tabindex", null)("aria-label", null)("aria-labelledby", null)("name", null), 
                core["\u0275\u0275classProp"]("mat-checked", ctx.checked)("mat-disabled", ctx.disabled)("mat-slide-toggle-label-before", "before" == ctx.labelPosition)("_mat-animation-noopable", ctx._noopAnimations));
            },
            inputs: {
                disabled: "disabled",
                disableRipple: "disableRipple",
                color: "color",
                tabIndex: "tabIndex"
            },
            exportAs: [ "matSlideToggle" ],
            features: [ core["\u0275\u0275ProvidersFeature"]([ MAT_LEGACY_SLIDE_TOGGLE_VALUE_ACCESSOR ]), core["\u0275\u0275InheritDefinitionFeature"] ],
            ngContentSelectors: [ "*" ],
            decls: 14,
            vars: 20,
            consts: [ [ 1, "mat-slide-toggle-label" ], [ "label", "" ], [ 1, "mat-slide-toggle-bar" ], [ "type", "checkbox", "role", "switch", 1, "mat-slide-toggle-input", "cdk-visually-hidden", 3, "id", "required", "tabIndex", "checked", "disabled", "change", "click" ], [ "input", "" ], [ 1, "mat-slide-toggle-thumb-container" ], [ 1, "mat-slide-toggle-thumb" ], [ "mat-ripple", "", 1, "mat-slide-toggle-ripple", "mat-focus-indicator", 3, "matRippleTrigger", "matRippleDisabled", "matRippleCentered", "matRippleRadius", "matRippleAnimation" ], [ 1, "mat-ripple-element", "mat-slide-toggle-persistent-ripple" ], [ 1, "mat-slide-toggle-content", 3, "cdkObserveContent" ], [ "labelContent", "" ], [ 2, "display", "none" ] ],
            template: function(rf, ctx) {
                if (1 & rf && (core["\u0275\u0275projectionDef"](), core["\u0275\u0275elementStart"](0, "label", 0, 1)(2, "span", 2)(3, "input", 3, 4), 
                core["\u0275\u0275listener"]("change", function($event) {
                    return ctx._onChangeEvent($event);
                })("click", function($event) {
                    return ctx._onInputClick($event);
                }), core["\u0275\u0275elementEnd"](), core["\u0275\u0275elementStart"](5, "span", 5), 
                core["\u0275\u0275element"](6, "span", 6), core["\u0275\u0275elementStart"](7, "span", 7), 
                core["\u0275\u0275element"](8, "span", 8), core["\u0275\u0275elementEnd"]()()(), 
                core["\u0275\u0275elementStart"](9, "span", 9, 10), core["\u0275\u0275listener"]("cdkObserveContent", function() {
                    return ctx._onLabelTextChange();
                }), core["\u0275\u0275elementStart"](11, "span", 11), core["\u0275\u0275text"](12, "\xa0"), 
                core["\u0275\u0275elementEnd"](), core["\u0275\u0275projection"](13), core["\u0275\u0275elementEnd"]()()), 
                2 & rf) {
                    var _r0 = core["\u0275\u0275reference"](1), _r2 = core["\u0275\u0275reference"](10);
                    core["\u0275\u0275attribute"]("for", ctx.inputId), core["\u0275\u0275advance"](2), 
                    core["\u0275\u0275classProp"]("mat-slide-toggle-bar-no-side-margin", !_r2.textContent || !_r2.textContent.trim()), 
                    core["\u0275\u0275advance"](1), core["\u0275\u0275property"]("id", ctx.inputId)("required", ctx.required)("tabIndex", ctx.tabIndex)("checked", ctx.checked)("disabled", ctx.disabled), 
                    core["\u0275\u0275attribute"]("name", ctx.name)("aria-checked", ctx.checked)("aria-label", ctx.ariaLabel)("aria-labelledby", ctx.ariaLabelledby)("aria-describedby", ctx.ariaDescribedby), 
                    core["\u0275\u0275advance"](4), core["\u0275\u0275property"]("matRippleTrigger", _r0)("matRippleDisabled", ctx.disableRipple || ctx.disabled)("matRippleCentered", !0)("matRippleRadius", 20)("matRippleAnimation", core["\u0275\u0275pureFunction1"](18, legacy_slide_toggle_c1, ctx._noopAnimations ? 0 : 150));
                }
            },
            dependencies: [ fesm2022_core.wG, observers.wD ],
            styles: [ '.mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:none;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px, 0, 0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px, 0, 0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{-webkit-user-select:none;user-select:none;display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar,.mat-slide-toggle-bar{margin-right:8px;margin-left:0}[dir=rtl] .mat-slide-toggle-bar,.mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0, 0, 0);transition:all 80ms linear;transition-property:transform}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%;display:block}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media(hover: none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}.mat-slide-toggle-input:focus~.mat-slide-toggle-thumb-container .mat-focus-indicator::before{content:""}.cdk-high-contrast-active .mat-slide-toggle-thumb,.cdk-high-contrast-active .mat-slide-toggle-bar{border:1px solid}' ],
            encapsulation: 2,
            changeDetection: 0
        });
        var MatLegacySlideToggleModule = function() {};
        (_MatLegacySlideToggleModule = MatLegacySlideToggleModule).\u0275fac = function(t) {
            return new (t || _MatLegacySlideToggleModule);
        }, _MatLegacySlideToggleModule.\u0275mod = core["\u0275\u0275defineNgModule"]({
            type: _MatLegacySlideToggleModule
        }), _MatLegacySlideToggleModule.\u0275inj = core["\u0275\u0275defineInjector"]({
            imports: [ _MatSlideToggleRequiredValidatorModule, fesm2022_core.si, fesm2022_core.BQ, observers.Q8, _MatSlideToggleRequiredValidatorModule, fesm2022_core.BQ ]
        });
    }
} ]);